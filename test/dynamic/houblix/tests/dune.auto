;; This file has been auto-generated. Please do not edit it.
;; Instead, edit [test.ml] and run [make depend].


(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/41-pattern-matching-05.good.expected)
    (:result 03.sexp.tests/41-pattern-matching-05.good.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/43-pattern-matching-07.bad.expected)
    (:result 03.sexp.tests/43-pattern-matching-07.bad.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/02-arith-01.good.expected)
    (:result 03.sexp.tests/02-arith-01.good.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/50-pattern-matching-14.bad.expected)
    (:result 03.sexp.tests/50-pattern-matching-14.bad.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/04-arith-03.bad.expected)
    (:result 03.sexp.tests/04-arith-03.bad.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/30-anonymous-third-order.good.expected)
    (:result 03.sexp.tests/30-anonymous-third-order.good.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/38-pattern-matching-02.bad.expected)
    (:result 03.sexp.tests/38-pattern-matching-02.bad.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/24-record-proj.good.expected)
    (:result 03.sexp.tests/24-record-proj.good.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/01-int-literal.good.expected)
    (:result 03.sexp.tests/01-int-literal.good.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/29-anonymous-nary-functions.bad.expected)
    (:result 03.sexp.tests/29-anonymous-nary-functions.bad.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/09-char-string.bad.expected)
    (:result 03.sexp.tests/09-char-string.bad.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/11-function-definition.bad.expected)
    (:result 03.sexp.tests/11-function-definition.bad.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/13-mutually-rec-fun-definitions.good.expected)
    (:result 03.sexp.tests/13-mutually-rec-fun-definitions.good.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/28-anonymous-function.good.expected)
    (:result 03.sexp.tests/28-anonymous-function.good.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/22-polymorphic-record.bad.expected)
    (:result 03.sexp.tests/22-polymorphic-record.bad.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/15-binary-mutually-rec-function.good.expected)
    (:result 03.sexp.tests/15-binary-mutually-rec-function.good.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/36-recurse-datatype-embedding-functions.bad.expected)
    (:result 03.sexp.tests/36-recurse-datatype-embedding-functions.bad.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/36-recurse-datatype-embedding-functions.good.expected)
    (:result 03.sexp.tests/36-recurse-datatype-embedding-functions.good.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/06-arith-04.bad.expected)
    (:result 03.sexp.tests/06-arith-04.bad.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/15-binary-mutually-rec-function.bad.expected)
    (:result 03.sexp.tests/15-binary-mutually-rec-function.bad.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/54-sequence.bad.expected)
    (:result 03.sexp.tests/54-sequence.bad.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/41-pattern-matching-05.bad.expected)
    (:result 03.sexp.tests/41-pattern-matching-05.bad.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/16-polymorphic-function.bad.expected)
    (:result 03.sexp.tests/16-polymorphic-function.bad.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/33-constructor-with-multiple-data.bad.expected)
    (:result 03.sexp.tests/33-constructor-with-multiple-data.bad.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/29-anonymous-nary-functions.good.expected)
    (:result 03.sexp.tests/29-anonymous-nary-functions.good.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/39-pattern-matching-03.good.expected)
    (:result 03.sexp.tests/39-pattern-matching-03.good.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/46-pattern-matching-10.bad.expected)
    (:result 03.sexp.tests/46-pattern-matching-10.bad.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/34-recursive-datatype.bad.expected)
    (:result 03.sexp.tests/34-recursive-datatype.bad.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/55-while.good.expected)
    (:result 03.sexp.tests/55-while.good.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/42-pattern-matching-06.good.expected)
    (:result 03.sexp.tests/42-pattern-matching-06.good.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/14-binary-rec-function.good.expected)
    (:result 03.sexp.tests/14-binary-rec-function.good.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/09-char-string.good.expected)
    (:result 03.sexp.tests/09-char-string.good.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/03-arith-02.good.expected)
    (:result 03.sexp.tests/03-arith-02.good.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/34-recursive-datatype.good.expected)
    (:result 03.sexp.tests/34-recursive-datatype.good.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/11-function-definition.good.expected)
    (:result 03.sexp.tests/11-function-definition.good.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/25-polymorphic-record-proj.bad.expected)
    (:result 03.sexp.tests/25-polymorphic-record-proj.bad.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/25-polymorphic-record-proj.good.expected)
    (:result 03.sexp.tests/25-polymorphic-record-proj.good.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/07-arith-05.good.expected)
    (:result 03.sexp.tests/07-arith-05.good.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/48-pattern-matching-12.bad.expected)
    (:result 03.sexp.tests/48-pattern-matching-12.bad.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/16-polymorphic-function.good.expected)
    (:result 03.sexp.tests/16-polymorphic-function.good.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/35-recursive-datatype-02.bad.expected)
    (:result 03.sexp.tests/35-recursive-datatype-02.bad.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/26-function-over-polymorphic-record.good.expected)
    (:result 03.sexp.tests/26-function-over-polymorphic-record.good.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/55-while.bad.expected)
    (:result 03.sexp.tests/55-while.bad.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/45-pattern-matching-09.good.expected)
    (:result 03.sexp.tests/45-pattern-matching-09.good.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/17-polymorphic-binary-function.bad.expected)
    (:result 03.sexp.tests/17-polymorphic-binary-function.bad.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/27-function-in-record.good.expected)
    (:result 03.sexp.tests/27-function-in-record.good.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/19-polymorphic-mutually-recursive-functions.good.expected)
    (:result 03.sexp.tests/19-polymorphic-mutually-recursive-functions.good.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/46-pattern-matching-10.good.expected)
    (:result 03.sexp.tests/46-pattern-matching-10.good.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/19-polymorphic-mutually-recursive-functions.bad.expected)
    (:result 03.sexp.tests/19-polymorphic-mutually-recursive-functions.bad.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/51-ref.good.expected)
    (:result 03.sexp.tests/51-ref.good.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/14-binary-function.bad.expected)
    (:result 03.sexp.tests/14-binary-function.bad.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/23-polymorphic-record-02.bad.expected)
    (:result 03.sexp.tests/23-polymorphic-record-02.bad.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/49-pattern-matching-13.good.expected)
    (:result 03.sexp.tests/49-pattern-matching-13.good.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/31-constructor.good.expected)
    (:result 03.sexp.tests/31-constructor.good.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/45-pattern-matching-09.bad.expected)
    (:result 03.sexp.tests/45-pattern-matching-09.bad.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/37-pattern-matching-01.good.expected)
    (:result 03.sexp.tests/37-pattern-matching-01.good.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/18-polymorphic-recursive-function.good.expected)
    (:result 03.sexp.tests/18-polymorphic-recursive-function.good.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/35-recursive-datatype-02.good.expected)
    (:result 03.sexp.tests/35-recursive-datatype-02.good.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/37-pattern-matching-01.bad.expected)
    (:result 03.sexp.tests/37-pattern-matching-01.bad.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/20-polymorphic-binary-function.bad.expected)
    (:result 03.sexp.tests/20-polymorphic-binary-function.bad.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/07-arith-05.bad.expected)
    (:result 03.sexp.tests/07-arith-05.bad.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/08-char-literal.bad.expected)
    (:result 03.sexp.tests/08-char-literal.bad.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/39-pattern-matching-03.bad.expected)
    (:result 03.sexp.tests/39-pattern-matching-03.bad.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/53-read.good.expected)
    (:result 03.sexp.tests/53-read.good.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/38-pattern-matching-02.good.expected)
    (:result 03.sexp.tests/38-pattern-matching-02.good.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/54-sequence.good.expected)
    (:result 03.sexp.tests/54-sequence.good.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/02-arith-01.bad.expected)
    (:result 03.sexp.tests/02-arith-01.bad.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/01-int-literal.bad.expected)
    (:result 03.sexp.tests/01-int-literal.bad.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/42-pattern-matching-06.bad.expected)
    (:result 03.sexp.tests/42-pattern-matching-06.bad.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/20-polymorphic-binary-function.good.expected)
    (:result 03.sexp.tests/20-polymorphic-binary-function.good.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/23-polymorphic-record-02.good.expected)
    (:result 03.sexp.tests/23-polymorphic-record-02.good.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/12-rec-function-definition.bad.expected)
    (:result 03.sexp.tests/12-rec-function-definition.bad.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/40-pattern-matching-04.good.expected)
    (:result 03.sexp.tests/40-pattern-matching-04.good.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/40-pattern-matching-04.bad.expected)
    (:result 03.sexp.tests/40-pattern-matching-04.bad.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/53-read.bad.expected)
    (:result 03.sexp.tests/53-read.bad.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/30-anonymous-third-order.bad.expected)
    (:result 03.sexp.tests/30-anonymous-third-order.bad.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/10-local-definition.good.expected)
    (:result 03.sexp.tests/10-local-definition.good.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/04-arith-03.good.expected)
    (:result 03.sexp.tests/04-arith-03.good.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/22-polymorphic-record.good.expected)
    (:result 03.sexp.tests/22-polymorphic-record.good.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/27-function-in-record.bad.expected)
    (:result 03.sexp.tests/27-function-in-record.bad.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/03-arith-02.bad.expected)
    (:result 03.sexp.tests/03-arith-02.bad.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/06-arith-04.good.expected)
    (:result 03.sexp.tests/06-arith-04.good.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/51-ref.bad.expected)
    (:result 03.sexp.tests/51-ref.bad.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/56-for.good.expected)
    (:result 03.sexp.tests/56-for.good.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/21-record-01.bad.expected)
    (:result 03.sexp.tests/21-record-01.bad.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/31-constructor.bad.expected)
    (:result 03.sexp.tests/31-constructor.bad.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/17-polymorphic-binary-function.good.expected)
    (:result 03.sexp.tests/17-polymorphic-binary-function.good.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/26-function-over-polymorphic-record.bad.expected)
    (:result 03.sexp.tests/26-function-over-polymorphic-record.bad.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/47-pattern-matching-11.good.expected)
    (:result 03.sexp.tests/47-pattern-matching-11.good.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/49-pattern-matching-13.bad.expected)
    (:result 03.sexp.tests/49-pattern-matching-13.bad.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/44-pattern-matching-08.good.expected)
    (:result 03.sexp.tests/44-pattern-matching-08.good.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/32-constructor-with-data.bad.expected)
    (:result 03.sexp.tests/32-constructor-with-data.bad.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/28-anonymous-function.bad.expected)
    (:result 03.sexp.tests/28-anonymous-function.bad.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/50-pattern-matching-14.good.expected)
    (:result 03.sexp.tests/50-pattern-matching-14.good.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/48-pattern-matching-12.good.expected)
    (:result 03.sexp.tests/48-pattern-matching-12.good.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/47-pattern-matching-11.bad.expected)
    (:result 03.sexp.tests/47-pattern-matching-11.bad.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/08-char-literal.good.expected)
    (:result 03.sexp.tests/08-char-literal.good.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/18-polymorphic-recursive-function.bad.expected)
    (:result 03.sexp.tests/18-polymorphic-recursive-function.bad.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/13-mutually-rec-fun-definitions.bad.expected)
    (:result 03.sexp.tests/13-mutually-rec-fun-definitions.bad.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/21-record-01.good.expected)
    (:result 03.sexp.tests/21-record-01.good.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/43-pattern-matching-07.good.expected)
    (:result 03.sexp.tests/43-pattern-matching-07.good.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/44-pattern-matching-08.bad.expected)
    (:result 03.sexp.tests/44-pattern-matching-08.bad.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/24-record-proj.bad.expected)
    (:result 03.sexp.tests/24-record-proj.bad.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/56-for.bad.expected)
    (:result 03.sexp.tests/56-for.bad.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/52-assign.good.expected)
    (:result 03.sexp.tests/52-assign.good.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/10-local-definition.bad.expected)
    (:result 03.sexp.tests/10-local-definition.bad.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/14-binary-rec-function.bad.expected)
    (:result 03.sexp.tests/14-binary-rec-function.bad.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/14-binary-function.good.expected)
    (:result 03.sexp.tests/14-binary-function.good.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/32-constructor-with-data.good.expected)
    (:result 03.sexp.tests/32-constructor-with-data.good.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/52-assign.bad.expected)
    (:result 03.sexp.tests/52-assign.bad.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/33-constructor-with-multiple-data.good.expected)
    (:result 03.sexp.tests/33-constructor-with-multiple-data.good.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/12-rec-function-definition.good.expected)
    (:result 03.sexp.tests/12-rec-function-definition.good.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/41-pattern-matching-05.good.expected)
    (:result 03.sexp.tests/41-pattern-matching-05.good.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/43-pattern-matching-07.bad.expected)
    (:result 03.sexp.tests/43-pattern-matching-07.bad.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/02-arith-01.good.expected)
    (:result 03.sexp.tests/02-arith-01.good.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/50-pattern-matching-14.bad.expected)
    (:result 03.sexp.tests/50-pattern-matching-14.bad.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/04-arith-03.bad.expected)
    (:result 03.sexp.tests/04-arith-03.bad.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/30-anonymous-third-order.good.expected)
    (:result 03.sexp.tests/30-anonymous-third-order.good.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/38-pattern-matching-02.bad.expected)
    (:result 03.sexp.tests/38-pattern-matching-02.bad.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/24-record-proj.good.expected)
    (:result 03.sexp.tests/24-record-proj.good.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/01-int-literal.good.expected)
    (:result 03.sexp.tests/01-int-literal.good.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/29-anonymous-nary-functions.bad.expected)
    (:result 03.sexp.tests/29-anonymous-nary-functions.bad.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/09-char-string.bad.expected)
    (:result 03.sexp.tests/09-char-string.bad.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/11-function-definition.bad.expected)
    (:result 03.sexp.tests/11-function-definition.bad.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/13-mutually-rec-fun-definitions.good.expected)
    (:result 03.sexp.tests/13-mutually-rec-fun-definitions.good.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/28-anonymous-function.good.expected)
    (:result 03.sexp.tests/28-anonymous-function.good.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/22-polymorphic-record.bad.expected)
    (:result 03.sexp.tests/22-polymorphic-record.bad.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/15-binary-mutually-rec-function.good.expected)
    (:result 03.sexp.tests/15-binary-mutually-rec-function.good.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/36-recurse-datatype-embedding-functions.bad.expected)
    (:result 03.sexp.tests/36-recurse-datatype-embedding-functions.bad.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/36-recurse-datatype-embedding-functions.good.expected)
    (:result 03.sexp.tests/36-recurse-datatype-embedding-functions.good.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/06-arith-04.bad.expected)
    (:result 03.sexp.tests/06-arith-04.bad.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/15-binary-mutually-rec-function.bad.expected)
    (:result 03.sexp.tests/15-binary-mutually-rec-function.bad.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/54-sequence.bad.expected)
    (:result 03.sexp.tests/54-sequence.bad.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/41-pattern-matching-05.bad.expected)
    (:result 03.sexp.tests/41-pattern-matching-05.bad.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/16-polymorphic-function.bad.expected)
    (:result 03.sexp.tests/16-polymorphic-function.bad.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/33-constructor-with-multiple-data.bad.expected)
    (:result 03.sexp.tests/33-constructor-with-multiple-data.bad.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/29-anonymous-nary-functions.good.expected)
    (:result 03.sexp.tests/29-anonymous-nary-functions.good.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/39-pattern-matching-03.good.expected)
    (:result 03.sexp.tests/39-pattern-matching-03.good.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/46-pattern-matching-10.bad.expected)
    (:result 03.sexp.tests/46-pattern-matching-10.bad.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/34-recursive-datatype.bad.expected)
    (:result 03.sexp.tests/34-recursive-datatype.bad.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/55-while.good.expected)
    (:result 03.sexp.tests/55-while.good.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/42-pattern-matching-06.good.expected)
    (:result 03.sexp.tests/42-pattern-matching-06.good.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/14-binary-rec-function.good.expected)
    (:result 03.sexp.tests/14-binary-rec-function.good.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/09-char-string.good.expected)
    (:result 03.sexp.tests/09-char-string.good.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/03-arith-02.good.expected)
    (:result 03.sexp.tests/03-arith-02.good.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/34-recursive-datatype.good.expected)
    (:result 03.sexp.tests/34-recursive-datatype.good.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/11-function-definition.good.expected)
    (:result 03.sexp.tests/11-function-definition.good.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/25-polymorphic-record-proj.bad.expected)
    (:result 03.sexp.tests/25-polymorphic-record-proj.bad.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/25-polymorphic-record-proj.good.expected)
    (:result 03.sexp.tests/25-polymorphic-record-proj.good.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/07-arith-05.good.expected)
    (:result 03.sexp.tests/07-arith-05.good.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/48-pattern-matching-12.bad.expected)
    (:result 03.sexp.tests/48-pattern-matching-12.bad.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/16-polymorphic-function.good.expected)
    (:result 03.sexp.tests/16-polymorphic-function.good.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/35-recursive-datatype-02.bad.expected)
    (:result 03.sexp.tests/35-recursive-datatype-02.bad.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/26-function-over-polymorphic-record.good.expected)
    (:result 03.sexp.tests/26-function-over-polymorphic-record.good.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/55-while.bad.expected)
    (:result 03.sexp.tests/55-while.bad.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/45-pattern-matching-09.good.expected)
    (:result 03.sexp.tests/45-pattern-matching-09.good.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/17-polymorphic-binary-function.bad.expected)
    (:result 03.sexp.tests/17-polymorphic-binary-function.bad.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/27-function-in-record.good.expected)
    (:result 03.sexp.tests/27-function-in-record.good.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/19-polymorphic-mutually-recursive-functions.good.expected)
    (:result 03.sexp.tests/19-polymorphic-mutually-recursive-functions.good.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/46-pattern-matching-10.good.expected)
    (:result 03.sexp.tests/46-pattern-matching-10.good.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/19-polymorphic-mutually-recursive-functions.bad.expected)
    (:result 03.sexp.tests/19-polymorphic-mutually-recursive-functions.bad.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/51-ref.good.expected)
    (:result 03.sexp.tests/51-ref.good.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/14-binary-function.bad.expected)
    (:result 03.sexp.tests/14-binary-function.bad.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/23-polymorphic-record-02.bad.expected)
    (:result 03.sexp.tests/23-polymorphic-record-02.bad.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/49-pattern-matching-13.good.expected)
    (:result 03.sexp.tests/49-pattern-matching-13.good.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/31-constructor.good.expected)
    (:result 03.sexp.tests/31-constructor.good.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/45-pattern-matching-09.bad.expected)
    (:result 03.sexp.tests/45-pattern-matching-09.bad.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/37-pattern-matching-01.good.expected)
    (:result 03.sexp.tests/37-pattern-matching-01.good.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/18-polymorphic-recursive-function.good.expected)
    (:result 03.sexp.tests/18-polymorphic-recursive-function.good.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/35-recursive-datatype-02.good.expected)
    (:result 03.sexp.tests/35-recursive-datatype-02.good.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/37-pattern-matching-01.bad.expected)
    (:result 03.sexp.tests/37-pattern-matching-01.bad.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/20-polymorphic-binary-function.bad.expected)
    (:result 03.sexp.tests/20-polymorphic-binary-function.bad.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/07-arith-05.bad.expected)
    (:result 03.sexp.tests/07-arith-05.bad.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/08-char-literal.bad.expected)
    (:result 03.sexp.tests/08-char-literal.bad.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/39-pattern-matching-03.bad.expected)
    (:result 03.sexp.tests/39-pattern-matching-03.bad.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/53-read.good.expected)
    (:result 03.sexp.tests/53-read.good.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/38-pattern-matching-02.good.expected)
    (:result 03.sexp.tests/38-pattern-matching-02.good.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/54-sequence.good.expected)
    (:result 03.sexp.tests/54-sequence.good.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/02-arith-01.bad.expected)
    (:result 03.sexp.tests/02-arith-01.bad.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/01-int-literal.bad.expected)
    (:result 03.sexp.tests/01-int-literal.bad.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/42-pattern-matching-06.bad.expected)
    (:result 03.sexp.tests/42-pattern-matching-06.bad.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/20-polymorphic-binary-function.good.expected)
    (:result 03.sexp.tests/20-polymorphic-binary-function.good.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/23-polymorphic-record-02.good.expected)
    (:result 03.sexp.tests/23-polymorphic-record-02.good.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/12-rec-function-definition.bad.expected)
    (:result 03.sexp.tests/12-rec-function-definition.bad.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/40-pattern-matching-04.good.expected)
    (:result 03.sexp.tests/40-pattern-matching-04.good.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/40-pattern-matching-04.bad.expected)
    (:result 03.sexp.tests/40-pattern-matching-04.bad.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/53-read.bad.expected)
    (:result 03.sexp.tests/53-read.bad.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/30-anonymous-third-order.bad.expected)
    (:result 03.sexp.tests/30-anonymous-third-order.bad.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/10-local-definition.good.expected)
    (:result 03.sexp.tests/10-local-definition.good.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/04-arith-03.good.expected)
    (:result 03.sexp.tests/04-arith-03.good.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/22-polymorphic-record.good.expected)
    (:result 03.sexp.tests/22-polymorphic-record.good.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/27-function-in-record.bad.expected)
    (:result 03.sexp.tests/27-function-in-record.bad.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/03-arith-02.bad.expected)
    (:result 03.sexp.tests/03-arith-02.bad.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/06-arith-04.good.expected)
    (:result 03.sexp.tests/06-arith-04.good.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/51-ref.bad.expected)
    (:result 03.sexp.tests/51-ref.bad.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/56-for.good.expected)
    (:result 03.sexp.tests/56-for.good.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/21-record-01.bad.expected)
    (:result 03.sexp.tests/21-record-01.bad.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/31-constructor.bad.expected)
    (:result 03.sexp.tests/31-constructor.bad.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/17-polymorphic-binary-function.good.expected)
    (:result 03.sexp.tests/17-polymorphic-binary-function.good.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/26-function-over-polymorphic-record.bad.expected)
    (:result 03.sexp.tests/26-function-over-polymorphic-record.bad.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/47-pattern-matching-11.good.expected)
    (:result 03.sexp.tests/47-pattern-matching-11.good.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/49-pattern-matching-13.bad.expected)
    (:result 03.sexp.tests/49-pattern-matching-13.bad.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/44-pattern-matching-08.good.expected)
    (:result 03.sexp.tests/44-pattern-matching-08.good.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/32-constructor-with-data.bad.expected)
    (:result 03.sexp.tests/32-constructor-with-data.bad.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/28-anonymous-function.bad.expected)
    (:result 03.sexp.tests/28-anonymous-function.bad.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/50-pattern-matching-14.good.expected)
    (:result 03.sexp.tests/50-pattern-matching-14.good.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/48-pattern-matching-12.good.expected)
    (:result 03.sexp.tests/48-pattern-matching-12.good.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/47-pattern-matching-11.bad.expected)
    (:result 03.sexp.tests/47-pattern-matching-11.bad.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/08-char-literal.good.expected)
    (:result 03.sexp.tests/08-char-literal.good.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/18-polymorphic-recursive-function.bad.expected)
    (:result 03.sexp.tests/18-polymorphic-recursive-function.bad.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/13-mutually-rec-fun-definitions.bad.expected)
    (:result 03.sexp.tests/13-mutually-rec-fun-definitions.bad.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/21-record-01.good.expected)
    (:result 03.sexp.tests/21-record-01.good.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/43-pattern-matching-07.good.expected)
    (:result 03.sexp.tests/43-pattern-matching-07.good.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/44-pattern-matching-08.bad.expected)
    (:result 03.sexp.tests/44-pattern-matching-08.bad.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/24-record-proj.bad.expected)
    (:result 03.sexp.tests/24-record-proj.bad.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/56-for.bad.expected)
    (:result 03.sexp.tests/56-for.bad.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/52-assign.good.expected)
    (:result 03.sexp.tests/52-assign.good.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/10-local-definition.bad.expected)
    (:result 03.sexp.tests/10-local-definition.bad.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/14-binary-rec-function.bad.expected)
    (:result 03.sexp.tests/14-binary-rec-function.bad.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/14-binary-function.good.expected)
    (:result 03.sexp.tests/14-binary-function.good.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/32-constructor-with-data.good.expected)
    (:result 03.sexp.tests/32-constructor-with-data.good.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/52-assign.bad.expected)
    (:result 03.sexp.tests/52-assign.bad.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/33-constructor-with-multiple-data.good.expected)
    (:result 03.sexp.tests/33-constructor-with-multiple-data.good.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/12-rec-function-definition.good.expected)
    (:result 03.sexp.tests/12-rec-function-definition.good.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/41-pattern-matching-05.good.expected)
    (:result 03.sexp.tests/41-pattern-matching-05.good.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/43-pattern-matching-07.bad.expected)
    (:result 03.sexp.tests/43-pattern-matching-07.bad.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/02-arith-01.good.expected)
    (:result 03.sexp.tests/02-arith-01.good.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/50-pattern-matching-14.bad.expected)
    (:result 03.sexp.tests/50-pattern-matching-14.bad.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/04-arith-03.bad.expected)
    (:result 03.sexp.tests/04-arith-03.bad.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/30-anonymous-third-order.good.expected)
    (:result 03.sexp.tests/30-anonymous-third-order.good.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/38-pattern-matching-02.bad.expected)
    (:result 03.sexp.tests/38-pattern-matching-02.bad.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/24-record-proj.good.expected)
    (:result 03.sexp.tests/24-record-proj.good.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/01-int-literal.good.expected)
    (:result 03.sexp.tests/01-int-literal.good.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/29-anonymous-nary-functions.bad.expected)
    (:result 03.sexp.tests/29-anonymous-nary-functions.bad.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/09-char-string.bad.expected)
    (:result 03.sexp.tests/09-char-string.bad.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/11-function-definition.bad.expected)
    (:result 03.sexp.tests/11-function-definition.bad.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/13-mutually-rec-fun-definitions.good.expected)
    (:result 03.sexp.tests/13-mutually-rec-fun-definitions.good.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/28-anonymous-function.good.expected)
    (:result 03.sexp.tests/28-anonymous-function.good.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/22-polymorphic-record.bad.expected)
    (:result 03.sexp.tests/22-polymorphic-record.bad.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/15-binary-mutually-rec-function.good.expected)
    (:result 03.sexp.tests/15-binary-mutually-rec-function.good.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/36-recurse-datatype-embedding-functions.bad.expected)
    (:result 03.sexp.tests/36-recurse-datatype-embedding-functions.bad.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/36-recurse-datatype-embedding-functions.good.expected)
    (:result 03.sexp.tests/36-recurse-datatype-embedding-functions.good.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/06-arith-04.bad.expected)
    (:result 03.sexp.tests/06-arith-04.bad.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/15-binary-mutually-rec-function.bad.expected)
    (:result 03.sexp.tests/15-binary-mutually-rec-function.bad.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/54-sequence.bad.expected)
    (:result 03.sexp.tests/54-sequence.bad.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/41-pattern-matching-05.bad.expected)
    (:result 03.sexp.tests/41-pattern-matching-05.bad.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/16-polymorphic-function.bad.expected)
    (:result 03.sexp.tests/16-polymorphic-function.bad.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/33-constructor-with-multiple-data.bad.expected)
    (:result 03.sexp.tests/33-constructor-with-multiple-data.bad.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/29-anonymous-nary-functions.good.expected)
    (:result 03.sexp.tests/29-anonymous-nary-functions.good.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/39-pattern-matching-03.good.expected)
    (:result 03.sexp.tests/39-pattern-matching-03.good.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/46-pattern-matching-10.bad.expected)
    (:result 03.sexp.tests/46-pattern-matching-10.bad.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/34-recursive-datatype.bad.expected)
    (:result 03.sexp.tests/34-recursive-datatype.bad.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/55-while.good.expected)
    (:result 03.sexp.tests/55-while.good.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/42-pattern-matching-06.good.expected)
    (:result 03.sexp.tests/42-pattern-matching-06.good.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/14-binary-rec-function.good.expected)
    (:result 03.sexp.tests/14-binary-rec-function.good.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/09-char-string.good.expected)
    (:result 03.sexp.tests/09-char-string.good.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/03-arith-02.good.expected)
    (:result 03.sexp.tests/03-arith-02.good.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/34-recursive-datatype.good.expected)
    (:result 03.sexp.tests/34-recursive-datatype.good.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/11-function-definition.good.expected)
    (:result 03.sexp.tests/11-function-definition.good.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/25-polymorphic-record-proj.bad.expected)
    (:result 03.sexp.tests/25-polymorphic-record-proj.bad.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/25-polymorphic-record-proj.good.expected)
    (:result 03.sexp.tests/25-polymorphic-record-proj.good.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/07-arith-05.good.expected)
    (:result 03.sexp.tests/07-arith-05.good.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/48-pattern-matching-12.bad.expected)
    (:result 03.sexp.tests/48-pattern-matching-12.bad.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/16-polymorphic-function.good.expected)
    (:result 03.sexp.tests/16-polymorphic-function.good.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/35-recursive-datatype-02.bad.expected)
    (:result 03.sexp.tests/35-recursive-datatype-02.bad.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/26-function-over-polymorphic-record.good.expected)
    (:result 03.sexp.tests/26-function-over-polymorphic-record.good.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/55-while.bad.expected)
    (:result 03.sexp.tests/55-while.bad.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/45-pattern-matching-09.good.expected)
    (:result 03.sexp.tests/45-pattern-matching-09.good.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/17-polymorphic-binary-function.bad.expected)
    (:result 03.sexp.tests/17-polymorphic-binary-function.bad.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/27-function-in-record.good.expected)
    (:result 03.sexp.tests/27-function-in-record.good.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/19-polymorphic-mutually-recursive-functions.good.expected)
    (:result 03.sexp.tests/19-polymorphic-mutually-recursive-functions.good.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/46-pattern-matching-10.good.expected)
    (:result 03.sexp.tests/46-pattern-matching-10.good.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/19-polymorphic-mutually-recursive-functions.bad.expected)
    (:result 03.sexp.tests/19-polymorphic-mutually-recursive-functions.bad.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/51-ref.good.expected)
    (:result 03.sexp.tests/51-ref.good.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/14-binary-function.bad.expected)
    (:result 03.sexp.tests/14-binary-function.bad.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/23-polymorphic-record-02.bad.expected)
    (:result 03.sexp.tests/23-polymorphic-record-02.bad.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/49-pattern-matching-13.good.expected)
    (:result 03.sexp.tests/49-pattern-matching-13.good.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/31-constructor.good.expected)
    (:result 03.sexp.tests/31-constructor.good.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/45-pattern-matching-09.bad.expected)
    (:result 03.sexp.tests/45-pattern-matching-09.bad.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/37-pattern-matching-01.good.expected)
    (:result 03.sexp.tests/37-pattern-matching-01.good.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/18-polymorphic-recursive-function.good.expected)
    (:result 03.sexp.tests/18-polymorphic-recursive-function.good.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/35-recursive-datatype-02.good.expected)
    (:result 03.sexp.tests/35-recursive-datatype-02.good.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/37-pattern-matching-01.bad.expected)
    (:result 03.sexp.tests/37-pattern-matching-01.bad.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/20-polymorphic-binary-function.bad.expected)
    (:result 03.sexp.tests/20-polymorphic-binary-function.bad.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/07-arith-05.bad.expected)
    (:result 03.sexp.tests/07-arith-05.bad.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/08-char-literal.bad.expected)
    (:result 03.sexp.tests/08-char-literal.bad.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/39-pattern-matching-03.bad.expected)
    (:result 03.sexp.tests/39-pattern-matching-03.bad.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/53-read.good.expected)
    (:result 03.sexp.tests/53-read.good.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/38-pattern-matching-02.good.expected)
    (:result 03.sexp.tests/38-pattern-matching-02.good.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/54-sequence.good.expected)
    (:result 03.sexp.tests/54-sequence.good.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/02-arith-01.bad.expected)
    (:result 03.sexp.tests/02-arith-01.bad.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/01-int-literal.bad.expected)
    (:result 03.sexp.tests/01-int-literal.bad.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/42-pattern-matching-06.bad.expected)
    (:result 03.sexp.tests/42-pattern-matching-06.bad.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/20-polymorphic-binary-function.good.expected)
    (:result 03.sexp.tests/20-polymorphic-binary-function.good.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/23-polymorphic-record-02.good.expected)
    (:result 03.sexp.tests/23-polymorphic-record-02.good.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/12-rec-function-definition.bad.expected)
    (:result 03.sexp.tests/12-rec-function-definition.bad.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/40-pattern-matching-04.good.expected)
    (:result 03.sexp.tests/40-pattern-matching-04.good.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/40-pattern-matching-04.bad.expected)
    (:result 03.sexp.tests/40-pattern-matching-04.bad.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/53-read.bad.expected)
    (:result 03.sexp.tests/53-read.bad.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/30-anonymous-third-order.bad.expected)
    (:result 03.sexp.tests/30-anonymous-third-order.bad.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/10-local-definition.good.expected)
    (:result 03.sexp.tests/10-local-definition.good.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/04-arith-03.good.expected)
    (:result 03.sexp.tests/04-arith-03.good.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/22-polymorphic-record.good.expected)
    (:result 03.sexp.tests/22-polymorphic-record.good.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/27-function-in-record.bad.expected)
    (:result 03.sexp.tests/27-function-in-record.bad.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/03-arith-02.bad.expected)
    (:result 03.sexp.tests/03-arith-02.bad.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/06-arith-04.good.expected)
    (:result 03.sexp.tests/06-arith-04.good.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/51-ref.bad.expected)
    (:result 03.sexp.tests/51-ref.bad.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/56-for.good.expected)
    (:result 03.sexp.tests/56-for.good.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/21-record-01.bad.expected)
    (:result 03.sexp.tests/21-record-01.bad.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/31-constructor.bad.expected)
    (:result 03.sexp.tests/31-constructor.bad.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/17-polymorphic-binary-function.good.expected)
    (:result 03.sexp.tests/17-polymorphic-binary-function.good.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/26-function-over-polymorphic-record.bad.expected)
    (:result 03.sexp.tests/26-function-over-polymorphic-record.bad.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/47-pattern-matching-11.good.expected)
    (:result 03.sexp.tests/47-pattern-matching-11.good.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/49-pattern-matching-13.bad.expected)
    (:result 03.sexp.tests/49-pattern-matching-13.bad.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/44-pattern-matching-08.good.expected)
    (:result 03.sexp.tests/44-pattern-matching-08.good.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/32-constructor-with-data.bad.expected)
    (:result 03.sexp.tests/32-constructor-with-data.bad.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/28-anonymous-function.bad.expected)
    (:result 03.sexp.tests/28-anonymous-function.bad.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/50-pattern-matching-14.good.expected)
    (:result 03.sexp.tests/50-pattern-matching-14.good.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/48-pattern-matching-12.good.expected)
    (:result 03.sexp.tests/48-pattern-matching-12.good.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/47-pattern-matching-11.bad.expected)
    (:result 03.sexp.tests/47-pattern-matching-11.bad.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/08-char-literal.good.expected)
    (:result 03.sexp.tests/08-char-literal.good.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/18-polymorphic-recursive-function.bad.expected)
    (:result 03.sexp.tests/18-polymorphic-recursive-function.bad.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/13-mutually-rec-fun-definitions.bad.expected)
    (:result 03.sexp.tests/13-mutually-rec-fun-definitions.bad.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/21-record-01.good.expected)
    (:result 03.sexp.tests/21-record-01.good.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/43-pattern-matching-07.good.expected)
    (:result 03.sexp.tests/43-pattern-matching-07.good.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/44-pattern-matching-08.bad.expected)
    (:result 03.sexp.tests/44-pattern-matching-08.bad.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/24-record-proj.bad.expected)
    (:result 03.sexp.tests/24-record-proj.bad.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/56-for.bad.expected)
    (:result 03.sexp.tests/56-for.bad.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/52-assign.good.expected)
    (:result 03.sexp.tests/52-assign.good.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/10-local-definition.bad.expected)
    (:result 03.sexp.tests/10-local-definition.bad.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/14-binary-rec-function.bad.expected)
    (:result 03.sexp.tests/14-binary-rec-function.bad.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/14-binary-function.good.expected)
    (:result 03.sexp.tests/14-binary-function.good.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/32-constructor-with-data.good.expected)
    (:result 03.sexp.tests/32-constructor-with-data.good.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/52-assign.bad.expected)
    (:result 03.sexp.tests/52-assign.bad.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/33-constructor-with-multiple-data.good.expected)
    (:result 03.sexp.tests/33-constructor-with-multiple-data.good.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/12-rec-function-definition.good.expected)
    (:result 03.sexp.tests/12-rec-function-definition.good.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/41-pattern-matching-05.good.expected)
    (:result 03.sexp.tests/41-pattern-matching-05.good.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/43-pattern-matching-07.bad.expected)
    (:result 03.sexp.tests/43-pattern-matching-07.bad.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/02-arith-01.good.expected)
    (:result 03.sexp.tests/02-arith-01.good.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/50-pattern-matching-14.bad.expected)
    (:result 03.sexp.tests/50-pattern-matching-14.bad.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/04-arith-03.bad.expected)
    (:result 03.sexp.tests/04-arith-03.bad.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/30-anonymous-third-order.good.expected)
    (:result 03.sexp.tests/30-anonymous-third-order.good.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/38-pattern-matching-02.bad.expected)
    (:result 03.sexp.tests/38-pattern-matching-02.bad.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/24-record-proj.good.expected)
    (:result 03.sexp.tests/24-record-proj.good.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/01-int-literal.good.expected)
    (:result 03.sexp.tests/01-int-literal.good.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/29-anonymous-nary-functions.bad.expected)
    (:result 03.sexp.tests/29-anonymous-nary-functions.bad.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/09-char-string.bad.expected)
    (:result 03.sexp.tests/09-char-string.bad.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/11-function-definition.bad.expected)
    (:result 03.sexp.tests/11-function-definition.bad.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/13-mutually-rec-fun-definitions.good.expected)
    (:result 03.sexp.tests/13-mutually-rec-fun-definitions.good.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/28-anonymous-function.good.expected)
    (:result 03.sexp.tests/28-anonymous-function.good.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/22-polymorphic-record.bad.expected)
    (:result 03.sexp.tests/22-polymorphic-record.bad.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/15-binary-mutually-rec-function.good.expected)
    (:result 03.sexp.tests/15-binary-mutually-rec-function.good.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/36-recurse-datatype-embedding-functions.bad.expected)
    (:result 03.sexp.tests/36-recurse-datatype-embedding-functions.bad.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/36-recurse-datatype-embedding-functions.good.expected)
    (:result 03.sexp.tests/36-recurse-datatype-embedding-functions.good.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/06-arith-04.bad.expected)
    (:result 03.sexp.tests/06-arith-04.bad.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/15-binary-mutually-rec-function.bad.expected)
    (:result 03.sexp.tests/15-binary-mutually-rec-function.bad.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/54-sequence.bad.expected)
    (:result 03.sexp.tests/54-sequence.bad.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/41-pattern-matching-05.bad.expected)
    (:result 03.sexp.tests/41-pattern-matching-05.bad.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/16-polymorphic-function.bad.expected)
    (:result 03.sexp.tests/16-polymorphic-function.bad.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/33-constructor-with-multiple-data.bad.expected)
    (:result 03.sexp.tests/33-constructor-with-multiple-data.bad.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/29-anonymous-nary-functions.good.expected)
    (:result 03.sexp.tests/29-anonymous-nary-functions.good.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/39-pattern-matching-03.good.expected)
    (:result 03.sexp.tests/39-pattern-matching-03.good.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/46-pattern-matching-10.bad.expected)
    (:result 03.sexp.tests/46-pattern-matching-10.bad.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/34-recursive-datatype.bad.expected)
    (:result 03.sexp.tests/34-recursive-datatype.bad.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/55-while.good.expected)
    (:result 03.sexp.tests/55-while.good.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/42-pattern-matching-06.good.expected)
    (:result 03.sexp.tests/42-pattern-matching-06.good.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/14-binary-rec-function.good.expected)
    (:result 03.sexp.tests/14-binary-rec-function.good.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/09-char-string.good.expected)
    (:result 03.sexp.tests/09-char-string.good.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/03-arith-02.good.expected)
    (:result 03.sexp.tests/03-arith-02.good.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/34-recursive-datatype.good.expected)
    (:result 03.sexp.tests/34-recursive-datatype.good.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/11-function-definition.good.expected)
    (:result 03.sexp.tests/11-function-definition.good.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/25-polymorphic-record-proj.bad.expected)
    (:result 03.sexp.tests/25-polymorphic-record-proj.bad.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/25-polymorphic-record-proj.good.expected)
    (:result 03.sexp.tests/25-polymorphic-record-proj.good.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/07-arith-05.good.expected)
    (:result 03.sexp.tests/07-arith-05.good.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/48-pattern-matching-12.bad.expected)
    (:result 03.sexp.tests/48-pattern-matching-12.bad.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/16-polymorphic-function.good.expected)
    (:result 03.sexp.tests/16-polymorphic-function.good.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/35-recursive-datatype-02.bad.expected)
    (:result 03.sexp.tests/35-recursive-datatype-02.bad.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/26-function-over-polymorphic-record.good.expected)
    (:result 03.sexp.tests/26-function-over-polymorphic-record.good.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/55-while.bad.expected)
    (:result 03.sexp.tests/55-while.bad.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/45-pattern-matching-09.good.expected)
    (:result 03.sexp.tests/45-pattern-matching-09.good.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/17-polymorphic-binary-function.bad.expected)
    (:result 03.sexp.tests/17-polymorphic-binary-function.bad.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/27-function-in-record.good.expected)
    (:result 03.sexp.tests/27-function-in-record.good.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/19-polymorphic-mutually-recursive-functions.good.expected)
    (:result 03.sexp.tests/19-polymorphic-mutually-recursive-functions.good.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/46-pattern-matching-10.good.expected)
    (:result 03.sexp.tests/46-pattern-matching-10.good.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/19-polymorphic-mutually-recursive-functions.bad.expected)
    (:result 03.sexp.tests/19-polymorphic-mutually-recursive-functions.bad.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/51-ref.good.expected)
    (:result 03.sexp.tests/51-ref.good.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/14-binary-function.bad.expected)
    (:result 03.sexp.tests/14-binary-function.bad.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/23-polymorphic-record-02.bad.expected)
    (:result 03.sexp.tests/23-polymorphic-record-02.bad.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/49-pattern-matching-13.good.expected)
    (:result 03.sexp.tests/49-pattern-matching-13.good.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/31-constructor.good.expected)
    (:result 03.sexp.tests/31-constructor.good.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/45-pattern-matching-09.bad.expected)
    (:result 03.sexp.tests/45-pattern-matching-09.bad.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/37-pattern-matching-01.good.expected)
    (:result 03.sexp.tests/37-pattern-matching-01.good.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/18-polymorphic-recursive-function.good.expected)
    (:result 03.sexp.tests/18-polymorphic-recursive-function.good.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/35-recursive-datatype-02.good.expected)
    (:result 03.sexp.tests/35-recursive-datatype-02.good.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/37-pattern-matching-01.bad.expected)
    (:result 03.sexp.tests/37-pattern-matching-01.bad.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/20-polymorphic-binary-function.bad.expected)
    (:result 03.sexp.tests/20-polymorphic-binary-function.bad.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/07-arith-05.bad.expected)
    (:result 03.sexp.tests/07-arith-05.bad.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/08-char-literal.bad.expected)
    (:result 03.sexp.tests/08-char-literal.bad.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/39-pattern-matching-03.bad.expected)
    (:result 03.sexp.tests/39-pattern-matching-03.bad.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/53-read.good.expected)
    (:result 03.sexp.tests/53-read.good.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/38-pattern-matching-02.good.expected)
    (:result 03.sexp.tests/38-pattern-matching-02.good.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/54-sequence.good.expected)
    (:result 03.sexp.tests/54-sequence.good.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/02-arith-01.bad.expected)
    (:result 03.sexp.tests/02-arith-01.bad.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/01-int-literal.bad.expected)
    (:result 03.sexp.tests/01-int-literal.bad.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/42-pattern-matching-06.bad.expected)
    (:result 03.sexp.tests/42-pattern-matching-06.bad.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/20-polymorphic-binary-function.good.expected)
    (:result 03.sexp.tests/20-polymorphic-binary-function.good.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/23-polymorphic-record-02.good.expected)
    (:result 03.sexp.tests/23-polymorphic-record-02.good.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/12-rec-function-definition.bad.expected)
    (:result 03.sexp.tests/12-rec-function-definition.bad.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/40-pattern-matching-04.good.expected)
    (:result 03.sexp.tests/40-pattern-matching-04.good.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/40-pattern-matching-04.bad.expected)
    (:result 03.sexp.tests/40-pattern-matching-04.bad.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/53-read.bad.expected)
    (:result 03.sexp.tests/53-read.bad.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/30-anonymous-third-order.bad.expected)
    (:result 03.sexp.tests/30-anonymous-third-order.bad.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/10-local-definition.good.expected)
    (:result 03.sexp.tests/10-local-definition.good.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/04-arith-03.good.expected)
    (:result 03.sexp.tests/04-arith-03.good.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/22-polymorphic-record.good.expected)
    (:result 03.sexp.tests/22-polymorphic-record.good.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/27-function-in-record.bad.expected)
    (:result 03.sexp.tests/27-function-in-record.bad.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/03-arith-02.bad.expected)
    (:result 03.sexp.tests/03-arith-02.bad.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/06-arith-04.good.expected)
    (:result 03.sexp.tests/06-arith-04.good.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/51-ref.bad.expected)
    (:result 03.sexp.tests/51-ref.bad.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/56-for.good.expected)
    (:result 03.sexp.tests/56-for.good.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/21-record-01.bad.expected)
    (:result 03.sexp.tests/21-record-01.bad.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/31-constructor.bad.expected)
    (:result 03.sexp.tests/31-constructor.bad.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/17-polymorphic-binary-function.good.expected)
    (:result 03.sexp.tests/17-polymorphic-binary-function.good.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/26-function-over-polymorphic-record.bad.expected)
    (:result 03.sexp.tests/26-function-over-polymorphic-record.bad.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/47-pattern-matching-11.good.expected)
    (:result 03.sexp.tests/47-pattern-matching-11.good.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/49-pattern-matching-13.bad.expected)
    (:result 03.sexp.tests/49-pattern-matching-13.bad.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/44-pattern-matching-08.good.expected)
    (:result 03.sexp.tests/44-pattern-matching-08.good.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/32-constructor-with-data.bad.expected)
    (:result 03.sexp.tests/32-constructor-with-data.bad.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/28-anonymous-function.bad.expected)
    (:result 03.sexp.tests/28-anonymous-function.bad.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/50-pattern-matching-14.good.expected)
    (:result 03.sexp.tests/50-pattern-matching-14.good.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/48-pattern-matching-12.good.expected)
    (:result 03.sexp.tests/48-pattern-matching-12.good.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/47-pattern-matching-11.bad.expected)
    (:result 03.sexp.tests/47-pattern-matching-11.bad.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/08-char-literal.good.expected)
    (:result 03.sexp.tests/08-char-literal.good.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/18-polymorphic-recursive-function.bad.expected)
    (:result 03.sexp.tests/18-polymorphic-recursive-function.bad.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/13-mutually-rec-fun-definitions.bad.expected)
    (:result 03.sexp.tests/13-mutually-rec-fun-definitions.bad.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/21-record-01.good.expected)
    (:result 03.sexp.tests/21-record-01.good.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/43-pattern-matching-07.good.expected)
    (:result 03.sexp.tests/43-pattern-matching-07.good.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/44-pattern-matching-08.bad.expected)
    (:result 03.sexp.tests/44-pattern-matching-08.bad.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/24-record-proj.bad.expected)
    (:result 03.sexp.tests/24-record-proj.bad.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/56-for.bad.expected)
    (:result 03.sexp.tests/56-for.bad.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/52-assign.good.expected)
    (:result 03.sexp.tests/52-assign.good.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/10-local-definition.bad.expected)
    (:result 03.sexp.tests/10-local-definition.bad.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/14-binary-rec-function.bad.expected)
    (:result 03.sexp.tests/14-binary-rec-function.bad.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/14-binary-function.good.expected)
    (:result 03.sexp.tests/14-binary-function.good.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/32-constructor-with-data.good.expected)
    (:result 03.sexp.tests/32-constructor-with-data.good.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/52-assign.bad.expected)
    (:result 03.sexp.tests/52-assign.bad.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/33-constructor-with-multiple-data.good.expected)
    (:result 03.sexp.tests/33-constructor-with-multiple-data.good.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/12-rec-function-definition.good.expected)
    (:result 03.sexp.tests/12-rec-function-definition.good.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/41-pattern-matching-05.good.expected)
    (:result 03.sexp.tests/41-pattern-matching-05.good.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/43-pattern-matching-07.bad.expected)
    (:result 03.sexp.tests/43-pattern-matching-07.bad.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/02-arith-01.good.expected)
    (:result 03.sexp.tests/02-arith-01.good.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/50-pattern-matching-14.bad.expected)
    (:result 03.sexp.tests/50-pattern-matching-14.bad.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/04-arith-03.bad.expected)
    (:result 03.sexp.tests/04-arith-03.bad.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/30-anonymous-third-order.good.expected)
    (:result 03.sexp.tests/30-anonymous-third-order.good.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/38-pattern-matching-02.bad.expected)
    (:result 03.sexp.tests/38-pattern-matching-02.bad.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/24-record-proj.good.expected)
    (:result 03.sexp.tests/24-record-proj.good.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/01-int-literal.good.expected)
    (:result 03.sexp.tests/01-int-literal.good.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/29-anonymous-nary-functions.bad.expected)
    (:result 03.sexp.tests/29-anonymous-nary-functions.bad.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/09-char-string.bad.expected)
    (:result 03.sexp.tests/09-char-string.bad.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/11-function-definition.bad.expected)
    (:result 03.sexp.tests/11-function-definition.bad.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/13-mutually-rec-fun-definitions.good.expected)
    (:result 03.sexp.tests/13-mutually-rec-fun-definitions.good.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/28-anonymous-function.good.expected)
    (:result 03.sexp.tests/28-anonymous-function.good.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/22-polymorphic-record.bad.expected)
    (:result 03.sexp.tests/22-polymorphic-record.bad.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/15-binary-mutually-rec-function.good.expected)
    (:result 03.sexp.tests/15-binary-mutually-rec-function.good.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/36-recurse-datatype-embedding-functions.bad.expected)
    (:result 03.sexp.tests/36-recurse-datatype-embedding-functions.bad.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/36-recurse-datatype-embedding-functions.good.expected)
    (:result 03.sexp.tests/36-recurse-datatype-embedding-functions.good.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/06-arith-04.bad.expected)
    (:result 03.sexp.tests/06-arith-04.bad.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/15-binary-mutually-rec-function.bad.expected)
    (:result 03.sexp.tests/15-binary-mutually-rec-function.bad.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/54-sequence.bad.expected)
    (:result 03.sexp.tests/54-sequence.bad.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/41-pattern-matching-05.bad.expected)
    (:result 03.sexp.tests/41-pattern-matching-05.bad.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/16-polymorphic-function.bad.expected)
    (:result 03.sexp.tests/16-polymorphic-function.bad.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/33-constructor-with-multiple-data.bad.expected)
    (:result 03.sexp.tests/33-constructor-with-multiple-data.bad.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/29-anonymous-nary-functions.good.expected)
    (:result 03.sexp.tests/29-anonymous-nary-functions.good.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/39-pattern-matching-03.good.expected)
    (:result 03.sexp.tests/39-pattern-matching-03.good.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/46-pattern-matching-10.bad.expected)
    (:result 03.sexp.tests/46-pattern-matching-10.bad.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/34-recursive-datatype.bad.expected)
    (:result 03.sexp.tests/34-recursive-datatype.bad.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/55-while.good.expected)
    (:result 03.sexp.tests/55-while.good.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/42-pattern-matching-06.good.expected)
    (:result 03.sexp.tests/42-pattern-matching-06.good.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/14-binary-rec-function.good.expected)
    (:result 03.sexp.tests/14-binary-rec-function.good.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/09-char-string.good.expected)
    (:result 03.sexp.tests/09-char-string.good.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/03-arith-02.good.expected)
    (:result 03.sexp.tests/03-arith-02.good.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/34-recursive-datatype.good.expected)
    (:result 03.sexp.tests/34-recursive-datatype.good.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/11-function-definition.good.expected)
    (:result 03.sexp.tests/11-function-definition.good.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/25-polymorphic-record-proj.bad.expected)
    (:result 03.sexp.tests/25-polymorphic-record-proj.bad.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/25-polymorphic-record-proj.good.expected)
    (:result 03.sexp.tests/25-polymorphic-record-proj.good.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/07-arith-05.good.expected)
    (:result 03.sexp.tests/07-arith-05.good.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/48-pattern-matching-12.bad.expected)
    (:result 03.sexp.tests/48-pattern-matching-12.bad.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/16-polymorphic-function.good.expected)
    (:result 03.sexp.tests/16-polymorphic-function.good.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/35-recursive-datatype-02.bad.expected)
    (:result 03.sexp.tests/35-recursive-datatype-02.bad.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/26-function-over-polymorphic-record.good.expected)
    (:result 03.sexp.tests/26-function-over-polymorphic-record.good.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/55-while.bad.expected)
    (:result 03.sexp.tests/55-while.bad.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/45-pattern-matching-09.good.expected)
    (:result 03.sexp.tests/45-pattern-matching-09.good.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/17-polymorphic-binary-function.bad.expected)
    (:result 03.sexp.tests/17-polymorphic-binary-function.bad.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/27-function-in-record.good.expected)
    (:result 03.sexp.tests/27-function-in-record.good.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/19-polymorphic-mutually-recursive-functions.good.expected)
    (:result 03.sexp.tests/19-polymorphic-mutually-recursive-functions.good.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/46-pattern-matching-10.good.expected)
    (:result 03.sexp.tests/46-pattern-matching-10.good.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/19-polymorphic-mutually-recursive-functions.bad.expected)
    (:result 03.sexp.tests/19-polymorphic-mutually-recursive-functions.bad.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/51-ref.good.expected)
    (:result 03.sexp.tests/51-ref.good.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/14-binary-function.bad.expected)
    (:result 03.sexp.tests/14-binary-function.bad.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/23-polymorphic-record-02.bad.expected)
    (:result 03.sexp.tests/23-polymorphic-record-02.bad.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/49-pattern-matching-13.good.expected)
    (:result 03.sexp.tests/49-pattern-matching-13.good.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/31-constructor.good.expected)
    (:result 03.sexp.tests/31-constructor.good.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/45-pattern-matching-09.bad.expected)
    (:result 03.sexp.tests/45-pattern-matching-09.bad.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/37-pattern-matching-01.good.expected)
    (:result 03.sexp.tests/37-pattern-matching-01.good.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/18-polymorphic-recursive-function.good.expected)
    (:result 03.sexp.tests/18-polymorphic-recursive-function.good.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/35-recursive-datatype-02.good.expected)
    (:result 03.sexp.tests/35-recursive-datatype-02.good.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/37-pattern-matching-01.bad.expected)
    (:result 03.sexp.tests/37-pattern-matching-01.bad.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/20-polymorphic-binary-function.bad.expected)
    (:result 03.sexp.tests/20-polymorphic-binary-function.bad.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/07-arith-05.bad.expected)
    (:result 03.sexp.tests/07-arith-05.bad.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/08-char-literal.bad.expected)
    (:result 03.sexp.tests/08-char-literal.bad.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/39-pattern-matching-03.bad.expected)
    (:result 03.sexp.tests/39-pattern-matching-03.bad.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/53-read.good.expected)
    (:result 03.sexp.tests/53-read.good.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/38-pattern-matching-02.good.expected)
    (:result 03.sexp.tests/38-pattern-matching-02.good.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/54-sequence.good.expected)
    (:result 03.sexp.tests/54-sequence.good.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/02-arith-01.bad.expected)
    (:result 03.sexp.tests/02-arith-01.bad.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/01-int-literal.bad.expected)
    (:result 03.sexp.tests/01-int-literal.bad.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/42-pattern-matching-06.bad.expected)
    (:result 03.sexp.tests/42-pattern-matching-06.bad.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/20-polymorphic-binary-function.good.expected)
    (:result 03.sexp.tests/20-polymorphic-binary-function.good.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/23-polymorphic-record-02.good.expected)
    (:result 03.sexp.tests/23-polymorphic-record-02.good.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/12-rec-function-definition.bad.expected)
    (:result 03.sexp.tests/12-rec-function-definition.bad.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/40-pattern-matching-04.good.expected)
    (:result 03.sexp.tests/40-pattern-matching-04.good.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/40-pattern-matching-04.bad.expected)
    (:result 03.sexp.tests/40-pattern-matching-04.bad.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/53-read.bad.expected)
    (:result 03.sexp.tests/53-read.bad.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/30-anonymous-third-order.bad.expected)
    (:result 03.sexp.tests/30-anonymous-third-order.bad.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/10-local-definition.good.expected)
    (:result 03.sexp.tests/10-local-definition.good.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/04-arith-03.good.expected)
    (:result 03.sexp.tests/04-arith-03.good.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/22-polymorphic-record.good.expected)
    (:result 03.sexp.tests/22-polymorphic-record.good.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/27-function-in-record.bad.expected)
    (:result 03.sexp.tests/27-function-in-record.bad.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/03-arith-02.bad.expected)
    (:result 03.sexp.tests/03-arith-02.bad.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/06-arith-04.good.expected)
    (:result 03.sexp.tests/06-arith-04.good.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/51-ref.bad.expected)
    (:result 03.sexp.tests/51-ref.bad.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/56-for.good.expected)
    (:result 03.sexp.tests/56-for.good.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/21-record-01.bad.expected)
    (:result 03.sexp.tests/21-record-01.bad.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/31-constructor.bad.expected)
    (:result 03.sexp.tests/31-constructor.bad.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/17-polymorphic-binary-function.good.expected)
    (:result 03.sexp.tests/17-polymorphic-binary-function.good.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/26-function-over-polymorphic-record.bad.expected)
    (:result 03.sexp.tests/26-function-over-polymorphic-record.bad.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/47-pattern-matching-11.good.expected)
    (:result 03.sexp.tests/47-pattern-matching-11.good.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/49-pattern-matching-13.bad.expected)
    (:result 03.sexp.tests/49-pattern-matching-13.bad.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/44-pattern-matching-08.good.expected)
    (:result 03.sexp.tests/44-pattern-matching-08.good.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/32-constructor-with-data.bad.expected)
    (:result 03.sexp.tests/32-constructor-with-data.bad.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/28-anonymous-function.bad.expected)
    (:result 03.sexp.tests/28-anonymous-function.bad.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/50-pattern-matching-14.good.expected)
    (:result 03.sexp.tests/50-pattern-matching-14.good.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/48-pattern-matching-12.good.expected)
    (:result 03.sexp.tests/48-pattern-matching-12.good.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/47-pattern-matching-11.bad.expected)
    (:result 03.sexp.tests/47-pattern-matching-11.bad.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/08-char-literal.good.expected)
    (:result 03.sexp.tests/08-char-literal.good.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/18-polymorphic-recursive-function.bad.expected)
    (:result 03.sexp.tests/18-polymorphic-recursive-function.bad.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/13-mutually-rec-fun-definitions.bad.expected)
    (:result 03.sexp.tests/13-mutually-rec-fun-definitions.bad.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/21-record-01.good.expected)
    (:result 03.sexp.tests/21-record-01.good.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/43-pattern-matching-07.good.expected)
    (:result 03.sexp.tests/43-pattern-matching-07.good.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/44-pattern-matching-08.bad.expected)
    (:result 03.sexp.tests/44-pattern-matching-08.bad.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/24-record-proj.bad.expected)
    (:result 03.sexp.tests/24-record-proj.bad.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/56-for.bad.expected)
    (:result 03.sexp.tests/56-for.bad.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/52-assign.good.expected)
    (:result 03.sexp.tests/52-assign.good.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/10-local-definition.bad.expected)
    (:result 03.sexp.tests/10-local-definition.bad.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/14-binary-rec-function.bad.expected)
    (:result 03.sexp.tests/14-binary-rec-function.bad.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/14-binary-function.good.expected)
    (:result 03.sexp.tests/14-binary-function.good.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/32-constructor-with-data.good.expected)
    (:result 03.sexp.tests/32-constructor-with-data.good.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/52-assign.bad.expected)
    (:result 03.sexp.tests/52-assign.bad.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/33-constructor-with-multiple-data.good.expected)
    (:result 03.sexp.tests/33-constructor-with-multiple-data.good.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/12-rec-function-definition.good.expected)
    (:result 03.sexp.tests/12-rec-function-definition.good.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/41-pattern-matching-05.good.expected)
    (:result 03.sexp.tests/41-pattern-matching-05.good.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/43-pattern-matching-07.bad.expected)
    (:result 03.sexp.tests/43-pattern-matching-07.bad.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/02-arith-01.good.expected)
    (:result 03.sexp.tests/02-arith-01.good.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/50-pattern-matching-14.bad.expected)
    (:result 03.sexp.tests/50-pattern-matching-14.bad.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/04-arith-03.bad.expected)
    (:result 03.sexp.tests/04-arith-03.bad.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/30-anonymous-third-order.good.expected)
    (:result 03.sexp.tests/30-anonymous-third-order.good.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/38-pattern-matching-02.bad.expected)
    (:result 03.sexp.tests/38-pattern-matching-02.bad.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/24-record-proj.good.expected)
    (:result 03.sexp.tests/24-record-proj.good.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/01-int-literal.good.expected)
    (:result 03.sexp.tests/01-int-literal.good.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/29-anonymous-nary-functions.bad.expected)
    (:result 03.sexp.tests/29-anonymous-nary-functions.bad.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/09-char-string.bad.expected)
    (:result 03.sexp.tests/09-char-string.bad.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/11-function-definition.bad.expected)
    (:result 03.sexp.tests/11-function-definition.bad.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/13-mutually-rec-fun-definitions.good.expected)
    (:result 03.sexp.tests/13-mutually-rec-fun-definitions.good.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/28-anonymous-function.good.expected)
    (:result 03.sexp.tests/28-anonymous-function.good.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/22-polymorphic-record.bad.expected)
    (:result 03.sexp.tests/22-polymorphic-record.bad.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/15-binary-mutually-rec-function.good.expected)
    (:result 03.sexp.tests/15-binary-mutually-rec-function.good.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/36-recurse-datatype-embedding-functions.bad.expected)
    (:result 03.sexp.tests/36-recurse-datatype-embedding-functions.bad.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/36-recurse-datatype-embedding-functions.good.expected)
    (:result 03.sexp.tests/36-recurse-datatype-embedding-functions.good.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/06-arith-04.bad.expected)
    (:result 03.sexp.tests/06-arith-04.bad.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/15-binary-mutually-rec-function.bad.expected)
    (:result 03.sexp.tests/15-binary-mutually-rec-function.bad.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/54-sequence.bad.expected)
    (:result 03.sexp.tests/54-sequence.bad.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/41-pattern-matching-05.bad.expected)
    (:result 03.sexp.tests/41-pattern-matching-05.bad.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/16-polymorphic-function.bad.expected)
    (:result 03.sexp.tests/16-polymorphic-function.bad.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/33-constructor-with-multiple-data.bad.expected)
    (:result 03.sexp.tests/33-constructor-with-multiple-data.bad.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/29-anonymous-nary-functions.good.expected)
    (:result 03.sexp.tests/29-anonymous-nary-functions.good.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/39-pattern-matching-03.good.expected)
    (:result 03.sexp.tests/39-pattern-matching-03.good.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/46-pattern-matching-10.bad.expected)
    (:result 03.sexp.tests/46-pattern-matching-10.bad.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/34-recursive-datatype.bad.expected)
    (:result 03.sexp.tests/34-recursive-datatype.bad.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/55-while.good.expected)
    (:result 03.sexp.tests/55-while.good.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/42-pattern-matching-06.good.expected)
    (:result 03.sexp.tests/42-pattern-matching-06.good.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/14-binary-rec-function.good.expected)
    (:result 03.sexp.tests/14-binary-rec-function.good.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/09-char-string.good.expected)
    (:result 03.sexp.tests/09-char-string.good.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/03-arith-02.good.expected)
    (:result 03.sexp.tests/03-arith-02.good.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/34-recursive-datatype.good.expected)
    (:result 03.sexp.tests/34-recursive-datatype.good.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/11-function-definition.good.expected)
    (:result 03.sexp.tests/11-function-definition.good.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/25-polymorphic-record-proj.bad.expected)
    (:result 03.sexp.tests/25-polymorphic-record-proj.bad.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/25-polymorphic-record-proj.good.expected)
    (:result 03.sexp.tests/25-polymorphic-record-proj.good.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/07-arith-05.good.expected)
    (:result 03.sexp.tests/07-arith-05.good.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/48-pattern-matching-12.bad.expected)
    (:result 03.sexp.tests/48-pattern-matching-12.bad.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/16-polymorphic-function.good.expected)
    (:result 03.sexp.tests/16-polymorphic-function.good.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/35-recursive-datatype-02.bad.expected)
    (:result 03.sexp.tests/35-recursive-datatype-02.bad.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/26-function-over-polymorphic-record.good.expected)
    (:result 03.sexp.tests/26-function-over-polymorphic-record.good.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/55-while.bad.expected)
    (:result 03.sexp.tests/55-while.bad.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/45-pattern-matching-09.good.expected)
    (:result 03.sexp.tests/45-pattern-matching-09.good.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/17-polymorphic-binary-function.bad.expected)
    (:result 03.sexp.tests/17-polymorphic-binary-function.bad.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/27-function-in-record.good.expected)
    (:result 03.sexp.tests/27-function-in-record.good.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/19-polymorphic-mutually-recursive-functions.good.expected)
    (:result 03.sexp.tests/19-polymorphic-mutually-recursive-functions.good.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/46-pattern-matching-10.good.expected)
    (:result 03.sexp.tests/46-pattern-matching-10.good.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/19-polymorphic-mutually-recursive-functions.bad.expected)
    (:result 03.sexp.tests/19-polymorphic-mutually-recursive-functions.bad.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/51-ref.good.expected)
    (:result 03.sexp.tests/51-ref.good.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/14-binary-function.bad.expected)
    (:result 03.sexp.tests/14-binary-function.bad.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/23-polymorphic-record-02.bad.expected)
    (:result 03.sexp.tests/23-polymorphic-record-02.bad.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/49-pattern-matching-13.good.expected)
    (:result 03.sexp.tests/49-pattern-matching-13.good.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/31-constructor.good.expected)
    (:result 03.sexp.tests/31-constructor.good.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/45-pattern-matching-09.bad.expected)
    (:result 03.sexp.tests/45-pattern-matching-09.bad.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/37-pattern-matching-01.good.expected)
    (:result 03.sexp.tests/37-pattern-matching-01.good.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/18-polymorphic-recursive-function.good.expected)
    (:result 03.sexp.tests/18-polymorphic-recursive-function.good.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/35-recursive-datatype-02.good.expected)
    (:result 03.sexp.tests/35-recursive-datatype-02.good.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/37-pattern-matching-01.bad.expected)
    (:result 03.sexp.tests/37-pattern-matching-01.bad.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/20-polymorphic-binary-function.bad.expected)
    (:result 03.sexp.tests/20-polymorphic-binary-function.bad.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/07-arith-05.bad.expected)
    (:result 03.sexp.tests/07-arith-05.bad.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/08-char-literal.bad.expected)
    (:result 03.sexp.tests/08-char-literal.bad.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/39-pattern-matching-03.bad.expected)
    (:result 03.sexp.tests/39-pattern-matching-03.bad.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/53-read.good.expected)
    (:result 03.sexp.tests/53-read.good.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/38-pattern-matching-02.good.expected)
    (:result 03.sexp.tests/38-pattern-matching-02.good.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/54-sequence.good.expected)
    (:result 03.sexp.tests/54-sequence.good.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/02-arith-01.bad.expected)
    (:result 03.sexp.tests/02-arith-01.bad.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/01-int-literal.bad.expected)
    (:result 03.sexp.tests/01-int-literal.bad.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/42-pattern-matching-06.bad.expected)
    (:result 03.sexp.tests/42-pattern-matching-06.bad.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/20-polymorphic-binary-function.good.expected)
    (:result 03.sexp.tests/20-polymorphic-binary-function.good.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/23-polymorphic-record-02.good.expected)
    (:result 03.sexp.tests/23-polymorphic-record-02.good.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/12-rec-function-definition.bad.expected)
    (:result 03.sexp.tests/12-rec-function-definition.bad.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/40-pattern-matching-04.good.expected)
    (:result 03.sexp.tests/40-pattern-matching-04.good.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/40-pattern-matching-04.bad.expected)
    (:result 03.sexp.tests/40-pattern-matching-04.bad.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/53-read.bad.expected)
    (:result 03.sexp.tests/53-read.bad.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/30-anonymous-third-order.bad.expected)
    (:result 03.sexp.tests/30-anonymous-third-order.bad.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/10-local-definition.good.expected)
    (:result 03.sexp.tests/10-local-definition.good.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/04-arith-03.good.expected)
    (:result 03.sexp.tests/04-arith-03.good.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/22-polymorphic-record.good.expected)
    (:result 03.sexp.tests/22-polymorphic-record.good.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/27-function-in-record.bad.expected)
    (:result 03.sexp.tests/27-function-in-record.bad.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/03-arith-02.bad.expected)
    (:result 03.sexp.tests/03-arith-02.bad.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/06-arith-04.good.expected)
    (:result 03.sexp.tests/06-arith-04.good.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/51-ref.bad.expected)
    (:result 03.sexp.tests/51-ref.bad.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/56-for.good.expected)
    (:result 03.sexp.tests/56-for.good.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/21-record-01.bad.expected)
    (:result 03.sexp.tests/21-record-01.bad.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/31-constructor.bad.expected)
    (:result 03.sexp.tests/31-constructor.bad.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/17-polymorphic-binary-function.good.expected)
    (:result 03.sexp.tests/17-polymorphic-binary-function.good.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/26-function-over-polymorphic-record.bad.expected)
    (:result 03.sexp.tests/26-function-over-polymorphic-record.bad.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/47-pattern-matching-11.good.expected)
    (:result 03.sexp.tests/47-pattern-matching-11.good.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/49-pattern-matching-13.bad.expected)
    (:result 03.sexp.tests/49-pattern-matching-13.bad.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/44-pattern-matching-08.good.expected)
    (:result 03.sexp.tests/44-pattern-matching-08.good.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/32-constructor-with-data.bad.expected)
    (:result 03.sexp.tests/32-constructor-with-data.bad.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/28-anonymous-function.bad.expected)
    (:result 03.sexp.tests/28-anonymous-function.bad.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/50-pattern-matching-14.good.expected)
    (:result 03.sexp.tests/50-pattern-matching-14.good.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/48-pattern-matching-12.good.expected)
    (:result 03.sexp.tests/48-pattern-matching-12.good.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/47-pattern-matching-11.bad.expected)
    (:result 03.sexp.tests/47-pattern-matching-11.bad.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/08-char-literal.good.expected)
    (:result 03.sexp.tests/08-char-literal.good.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/18-polymorphic-recursive-function.bad.expected)
    (:result 03.sexp.tests/18-polymorphic-recursive-function.bad.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/13-mutually-rec-fun-definitions.bad.expected)
    (:result 03.sexp.tests/13-mutually-rec-fun-definitions.bad.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/21-record-01.good.expected)
    (:result 03.sexp.tests/21-record-01.good.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/43-pattern-matching-07.good.expected)
    (:result 03.sexp.tests/43-pattern-matching-07.good.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/44-pattern-matching-08.bad.expected)
    (:result 03.sexp.tests/44-pattern-matching-08.bad.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/24-record-proj.bad.expected)
    (:result 03.sexp.tests/24-record-proj.bad.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/56-for.bad.expected)
    (:result 03.sexp.tests/56-for.bad.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/52-assign.good.expected)
    (:result 03.sexp.tests/52-assign.good.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/10-local-definition.bad.expected)
    (:result 03.sexp.tests/10-local-definition.bad.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/14-binary-rec-function.bad.expected)
    (:result 03.sexp.tests/14-binary-rec-function.bad.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/14-binary-function.good.expected)
    (:result 03.sexp.tests/14-binary-function.good.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/32-constructor-with-data.good.expected)
    (:result 03.sexp.tests/32-constructor-with-data.good.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/52-assign.bad.expected)
    (:result 03.sexp.tests/52-assign.bad.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/33-constructor-with-multiple-data.good.expected)
    (:result 03.sexp.tests/33-constructor-with-multiple-data.good.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/12-rec-function-definition.good.expected)
    (:result 03.sexp.tests/12-rec-function-definition.good.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/41-pattern-matching-05.good.expected)
    (:result 03.sexp.tests/41-pattern-matching-05.good.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/43-pattern-matching-07.bad.expected)
    (:result 03.sexp.tests/43-pattern-matching-07.bad.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/02-arith-01.good.expected)
    (:result 03.sexp.tests/02-arith-01.good.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/50-pattern-matching-14.bad.expected)
    (:result 03.sexp.tests/50-pattern-matching-14.bad.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/04-arith-03.bad.expected)
    (:result 03.sexp.tests/04-arith-03.bad.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/30-anonymous-third-order.good.expected)
    (:result 03.sexp.tests/30-anonymous-third-order.good.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/38-pattern-matching-02.bad.expected)
    (:result 03.sexp.tests/38-pattern-matching-02.bad.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/24-record-proj.good.expected)
    (:result 03.sexp.tests/24-record-proj.good.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/01-int-literal.good.expected)
    (:result 03.sexp.tests/01-int-literal.good.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/29-anonymous-nary-functions.bad.expected)
    (:result 03.sexp.tests/29-anonymous-nary-functions.bad.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/09-char-string.bad.expected)
    (:result 03.sexp.tests/09-char-string.bad.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/11-function-definition.bad.expected)
    (:result 03.sexp.tests/11-function-definition.bad.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/13-mutually-rec-fun-definitions.good.expected)
    (:result 03.sexp.tests/13-mutually-rec-fun-definitions.good.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/28-anonymous-function.good.expected)
    (:result 03.sexp.tests/28-anonymous-function.good.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/22-polymorphic-record.bad.expected)
    (:result 03.sexp.tests/22-polymorphic-record.bad.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/15-binary-mutually-rec-function.good.expected)
    (:result 03.sexp.tests/15-binary-mutually-rec-function.good.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/36-recurse-datatype-embedding-functions.bad.expected)
    (:result 03.sexp.tests/36-recurse-datatype-embedding-functions.bad.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/36-recurse-datatype-embedding-functions.good.expected)
    (:result 03.sexp.tests/36-recurse-datatype-embedding-functions.good.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/06-arith-04.bad.expected)
    (:result 03.sexp.tests/06-arith-04.bad.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/15-binary-mutually-rec-function.bad.expected)
    (:result 03.sexp.tests/15-binary-mutually-rec-function.bad.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/54-sequence.bad.expected)
    (:result 03.sexp.tests/54-sequence.bad.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/41-pattern-matching-05.bad.expected)
    (:result 03.sexp.tests/41-pattern-matching-05.bad.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/16-polymorphic-function.bad.expected)
    (:result 03.sexp.tests/16-polymorphic-function.bad.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/33-constructor-with-multiple-data.bad.expected)
    (:result 03.sexp.tests/33-constructor-with-multiple-data.bad.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/29-anonymous-nary-functions.good.expected)
    (:result 03.sexp.tests/29-anonymous-nary-functions.good.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/39-pattern-matching-03.good.expected)
    (:result 03.sexp.tests/39-pattern-matching-03.good.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/46-pattern-matching-10.bad.expected)
    (:result 03.sexp.tests/46-pattern-matching-10.bad.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/34-recursive-datatype.bad.expected)
    (:result 03.sexp.tests/34-recursive-datatype.bad.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/55-while.good.expected)
    (:result 03.sexp.tests/55-while.good.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/42-pattern-matching-06.good.expected)
    (:result 03.sexp.tests/42-pattern-matching-06.good.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/14-binary-rec-function.good.expected)
    (:result 03.sexp.tests/14-binary-rec-function.good.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/09-char-string.good.expected)
    (:result 03.sexp.tests/09-char-string.good.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/03-arith-02.good.expected)
    (:result 03.sexp.tests/03-arith-02.good.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/34-recursive-datatype.good.expected)
    (:result 03.sexp.tests/34-recursive-datatype.good.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/11-function-definition.good.expected)
    (:result 03.sexp.tests/11-function-definition.good.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/25-polymorphic-record-proj.bad.expected)
    (:result 03.sexp.tests/25-polymorphic-record-proj.bad.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/25-polymorphic-record-proj.good.expected)
    (:result 03.sexp.tests/25-polymorphic-record-proj.good.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/07-arith-05.good.expected)
    (:result 03.sexp.tests/07-arith-05.good.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/48-pattern-matching-12.bad.expected)
    (:result 03.sexp.tests/48-pattern-matching-12.bad.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/16-polymorphic-function.good.expected)
    (:result 03.sexp.tests/16-polymorphic-function.good.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/35-recursive-datatype-02.bad.expected)
    (:result 03.sexp.tests/35-recursive-datatype-02.bad.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/26-function-over-polymorphic-record.good.expected)
    (:result 03.sexp.tests/26-function-over-polymorphic-record.good.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/55-while.bad.expected)
    (:result 03.sexp.tests/55-while.bad.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/45-pattern-matching-09.good.expected)
    (:result 03.sexp.tests/45-pattern-matching-09.good.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/17-polymorphic-binary-function.bad.expected)
    (:result 03.sexp.tests/17-polymorphic-binary-function.bad.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/27-function-in-record.good.expected)
    (:result 03.sexp.tests/27-function-in-record.good.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/19-polymorphic-mutually-recursive-functions.good.expected)
    (:result 03.sexp.tests/19-polymorphic-mutually-recursive-functions.good.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/46-pattern-matching-10.good.expected)
    (:result 03.sexp.tests/46-pattern-matching-10.good.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/19-polymorphic-mutually-recursive-functions.bad.expected)
    (:result 03.sexp.tests/19-polymorphic-mutually-recursive-functions.bad.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/51-ref.good.expected)
    (:result 03.sexp.tests/51-ref.good.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/14-binary-function.bad.expected)
    (:result 03.sexp.tests/14-binary-function.bad.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/23-polymorphic-record-02.bad.expected)
    (:result 03.sexp.tests/23-polymorphic-record-02.bad.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/49-pattern-matching-13.good.expected)
    (:result 03.sexp.tests/49-pattern-matching-13.good.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/31-constructor.good.expected)
    (:result 03.sexp.tests/31-constructor.good.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/45-pattern-matching-09.bad.expected)
    (:result 03.sexp.tests/45-pattern-matching-09.bad.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/37-pattern-matching-01.good.expected)
    (:result 03.sexp.tests/37-pattern-matching-01.good.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/18-polymorphic-recursive-function.good.expected)
    (:result 03.sexp.tests/18-polymorphic-recursive-function.good.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/35-recursive-datatype-02.good.expected)
    (:result 03.sexp.tests/35-recursive-datatype-02.good.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/37-pattern-matching-01.bad.expected)
    (:result 03.sexp.tests/37-pattern-matching-01.bad.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/20-polymorphic-binary-function.bad.expected)
    (:result 03.sexp.tests/20-polymorphic-binary-function.bad.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/07-arith-05.bad.expected)
    (:result 03.sexp.tests/07-arith-05.bad.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/08-char-literal.bad.expected)
    (:result 03.sexp.tests/08-char-literal.bad.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/39-pattern-matching-03.bad.expected)
    (:result 03.sexp.tests/39-pattern-matching-03.bad.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/53-read.good.expected)
    (:result 03.sexp.tests/53-read.good.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/38-pattern-matching-02.good.expected)
    (:result 03.sexp.tests/38-pattern-matching-02.good.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/54-sequence.good.expected)
    (:result 03.sexp.tests/54-sequence.good.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/02-arith-01.bad.expected)
    (:result 03.sexp.tests/02-arith-01.bad.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/01-int-literal.bad.expected)
    (:result 03.sexp.tests/01-int-literal.bad.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/42-pattern-matching-06.bad.expected)
    (:result 03.sexp.tests/42-pattern-matching-06.bad.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/20-polymorphic-binary-function.good.expected)
    (:result 03.sexp.tests/20-polymorphic-binary-function.good.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/23-polymorphic-record-02.good.expected)
    (:result 03.sexp.tests/23-polymorphic-record-02.good.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/12-rec-function-definition.bad.expected)
    (:result 03.sexp.tests/12-rec-function-definition.bad.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/40-pattern-matching-04.good.expected)
    (:result 03.sexp.tests/40-pattern-matching-04.good.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/40-pattern-matching-04.bad.expected)
    (:result 03.sexp.tests/40-pattern-matching-04.bad.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/53-read.bad.expected)
    (:result 03.sexp.tests/53-read.bad.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/30-anonymous-third-order.bad.expected)
    (:result 03.sexp.tests/30-anonymous-third-order.bad.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/10-local-definition.good.expected)
    (:result 03.sexp.tests/10-local-definition.good.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/04-arith-03.good.expected)
    (:result 03.sexp.tests/04-arith-03.good.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/22-polymorphic-record.good.expected)
    (:result 03.sexp.tests/22-polymorphic-record.good.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/27-function-in-record.bad.expected)
    (:result 03.sexp.tests/27-function-in-record.bad.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/03-arith-02.bad.expected)
    (:result 03.sexp.tests/03-arith-02.bad.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/06-arith-04.good.expected)
    (:result 03.sexp.tests/06-arith-04.good.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/51-ref.bad.expected)
    (:result 03.sexp.tests/51-ref.bad.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/56-for.good.expected)
    (:result 03.sexp.tests/56-for.good.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/21-record-01.bad.expected)
    (:result 03.sexp.tests/21-record-01.bad.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/31-constructor.bad.expected)
    (:result 03.sexp.tests/31-constructor.bad.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/17-polymorphic-binary-function.good.expected)
    (:result 03.sexp.tests/17-polymorphic-binary-function.good.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/26-function-over-polymorphic-record.bad.expected)
    (:result 03.sexp.tests/26-function-over-polymorphic-record.bad.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/47-pattern-matching-11.good.expected)
    (:result 03.sexp.tests/47-pattern-matching-11.good.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/49-pattern-matching-13.bad.expected)
    (:result 03.sexp.tests/49-pattern-matching-13.bad.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/44-pattern-matching-08.good.expected)
    (:result 03.sexp.tests/44-pattern-matching-08.good.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/32-constructor-with-data.bad.expected)
    (:result 03.sexp.tests/32-constructor-with-data.bad.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/28-anonymous-function.bad.expected)
    (:result 03.sexp.tests/28-anonymous-function.bad.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/50-pattern-matching-14.good.expected)
    (:result 03.sexp.tests/50-pattern-matching-14.good.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/48-pattern-matching-12.good.expected)
    (:result 03.sexp.tests/48-pattern-matching-12.good.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/47-pattern-matching-11.bad.expected)
    (:result 03.sexp.tests/47-pattern-matching-11.bad.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/08-char-literal.good.expected)
    (:result 03.sexp.tests/08-char-literal.good.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/18-polymorphic-recursive-function.bad.expected)
    (:result 03.sexp.tests/18-polymorphic-recursive-function.bad.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/13-mutually-rec-fun-definitions.bad.expected)
    (:result 03.sexp.tests/13-mutually-rec-fun-definitions.bad.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/21-record-01.good.expected)
    (:result 03.sexp.tests/21-record-01.good.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/43-pattern-matching-07.good.expected)
    (:result 03.sexp.tests/43-pattern-matching-07.good.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/44-pattern-matching-08.bad.expected)
    (:result 03.sexp.tests/44-pattern-matching-08.bad.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/24-record-proj.bad.expected)
    (:result 03.sexp.tests/24-record-proj.bad.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/56-for.bad.expected)
    (:result 03.sexp.tests/56-for.bad.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/52-assign.good.expected)
    (:result 03.sexp.tests/52-assign.good.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/10-local-definition.bad.expected)
    (:result 03.sexp.tests/10-local-definition.bad.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/14-binary-rec-function.bad.expected)
    (:result 03.sexp.tests/14-binary-rec-function.bad.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/14-binary-function.good.expected)
    (:result 03.sexp.tests/14-binary-function.good.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/32-constructor-with-data.good.expected)
    (:result 03.sexp.tests/32-constructor-with-data.good.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/52-assign.bad.expected)
    (:result 03.sexp.tests/52-assign.bad.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/33-constructor-with-multiple-data.good.expected)
    (:result 03.sexp.tests/33-constructor-with-multiple-data.good.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 03.sexp.tests/12-rec-function-definition.good.expected)
    (:result 03.sexp.tests/12-rec-function-definition.good.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/85-infix-application-2.bad.expected)
    (:result 01.pretty.tests/85-infix-application-2.bad.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/65-sequence-1.bad.expected)
    (:result 01.pretty.tests/65-sequence-1.bad.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/90-case-3.good.expected)
    (:result 01.pretty.tests/90-case-3.good.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/83-application-7.good.expected)
    (:result 01.pretty.tests/83-application-7.good.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/81-application-5.bad.expected)
    (:result 01.pretty.tests/81-application-5.bad.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/34-type-definition-sum-4.good.expected)
    (:result 01.pretty.tests/34-type-definition-sum-4.good.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/36-type-definition-sum-6.bad.expected)
    (:result 01.pretty.tests/36-type-definition-sum-6.bad.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/09-lexer-constr-id-1.bad.expected)
    (:result 01.pretty.tests/09-lexer-constr-id-1.bad.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/29-string-literal-3.bad.expected)
    (:result 01.pretty.tests/29-string-literal-3.bad.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/35-type-definition-sum-5.bad.expected)
    (:result 01.pretty.tests/35-type-definition-sum-5.bad.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/14-type-con-id-2.good.expected)
    (:result 01.pretty.tests/14-type-con-id-2.good.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/09-lexer-constr-id-1.good.expected)
    (:result 01.pretty.tests/09-lexer-constr-id-1.good.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/60-record-3.bad.expected)
    (:result 01.pretty.tests/60-record-3.bad.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/109-type-ascription-2.bad.expected)
    (:result 01.pretty.tests/109-type-ascription-2.bad.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/43-external-definition-3.good.expected)
    (:result 01.pretty.tests/43-external-definition-3.good.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/37-type-definition-sum-7.good.expected)
    (:result 01.pretty.tests/37-type-definition-sum-7.good.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/16-int-literal-2.bad.expected)
    (:result 01.pretty.tests/16-int-literal-2.bad.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/38-type-definition-record-1.good.expected)
    (:result 01.pretty.tests/38-type-definition-record-1.good.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/76-lambda-4.bad.expected)
    (:result 01.pretty.tests/76-lambda-4.bad.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/74-lambda-2.bad.expected)
    (:result 01.pretty.tests/74-lambda-2.bad.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/02-app2.bad.expected)
    (:result 01.pretty.tests/02-app2.bad.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/33-type-definition-sum-3.bad.expected)
    (:result 01.pretty.tests/33-type-definition-sum-3.bad.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/106-assignment-3.bad.expected)
    (:result 01.pretty.tests/106-assignment-3.bad.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/23-char-literal-3.bad.expected)
    (:result 01.pretty.tests/23-char-literal-3.bad.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/07-lexer-var-id-2.good.expected)
    (:result 01.pretty.tests/07-lexer-var-id-2.good.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/93-case-6.good.expected)
    (:result 01.pretty.tests/93-case-6.good.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/16-int-literal-2.good.expected)
    (:result 01.pretty.tests/16-int-literal-2.good.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/71-local-definition-4.bad.expected)
    (:result 01.pretty.tests/71-local-definition-4.bad.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/19-int-literal-5.good.expected)
    (:result 01.pretty.tests/19-int-literal-5.good.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/30-string-literal-4.bad.expected)
    (:result 01.pretty.tests/30-string-literal-4.bad.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/110-type-ascription-3.bad.expected)
    (:result 01.pretty.tests/110-type-ascription-3.bad.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/63-record-projection-3.good.expected)
    (:result 01.pretty.tests/63-record-projection-3.good.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/54-constructor-1.good.expected)
    (:result 01.pretty.tests/54-constructor-1.good.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/67-sequence-3.bad.expected)
    (:result 01.pretty.tests/67-sequence-3.bad.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/83-application-7.bad.expected)
    (:result 01.pretty.tests/83-application-7.bad.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/115-while-2.bad.expected)
    (:result 01.pretty.tests/115-while-2.bad.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/45-value-definition-2.good.expected)
    (:result 01.pretty.tests/45-value-definition-2.good.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/40-type-definition-record-3.bad.expected)
    (:result 01.pretty.tests/40-type-definition-record-3.bad.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/50-instanciation-4.good.expected)
    (:result 01.pretty.tests/50-instanciation-4.good.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/71-local-definition-4.good.expected)
    (:result 01.pretty.tests/71-local-definition-4.good.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/40-type-definition-record-3.good.expected)
    (:result 01.pretty.tests/40-type-definition-record-3.good.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/112-deref-2.good.expected)
    (:result 01.pretty.tests/112-deref-2.good.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/57-constructor-4.good.expected)
    (:result 01.pretty.tests/57-constructor-4.good.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/59-record-2.good.expected)
    (:result 01.pretty.tests/59-record-2.good.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/49-instanciation-3.good.expected)
    (:result 01.pretty.tests/49-instanciation-3.good.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/57-constructor-4.bad.expected)
    (:result 01.pretty.tests/57-constructor-4.bad.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/84-infix-application-1.good.expected)
    (:result 01.pretty.tests/84-infix-application-1.good.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/73-lambda-1.bad.expected)
    (:result 01.pretty.tests/73-lambda-1.bad.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/08-lexer-all-id-1.bad.expected)
    (:result 01.pretty.tests/08-lexer-all-id-1.bad.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/26-char-literal-6.good.expected)
    (:result 01.pretty.tests/26-char-literal-6.good.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/27-string-literal-1.good.expected)
    (:result 01.pretty.tests/27-string-literal-1.good.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/24-char-literal-4.good.expected)
    (:result 01.pretty.tests/24-char-literal-4.good.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/110-type-ascription-3.good.expected)
    (:result 01.pretty.tests/110-type-ascription-3.good.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/25-char-literal-5.good.expected)
    (:result 01.pretty.tests/25-char-literal-5.good.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/85-infix-application-2.good.expected)
    (:result 01.pretty.tests/85-infix-application-2.good.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/114-while-1.good.expected)
    (:result 01.pretty.tests/114-while-1.good.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/55-constructor-2.good.expected)
    (:result 01.pretty.tests/55-constructor-2.good.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/11-lexer-constr-id-3.good.expected)
    (:result 01.pretty.tests/11-lexer-constr-id-3.good.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/30-string-literal-4.good.expected)
    (:result 01.pretty.tests/30-string-literal-4.good.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/52-instanciation-6.good.expected)
    (:result 01.pretty.tests/52-instanciation-6.good.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/47-instanciation.bad.expected)
    (:result 01.pretty.tests/47-instanciation.bad.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/100-ref-2.good.expected)
    (:result 01.pretty.tests/100-ref-2.good.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/80-application-4.bad.expected)
    (:result 01.pretty.tests/80-application-4.bad.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/86-infix-application-3.bad.expected)
    (:result 01.pretty.tests/86-infix-application-3.bad.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/50-instanciation-4.bad.expected)
    (:result 01.pretty.tests/50-instanciation-4.bad.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/73-lambda-1.good.expected)
    (:result 01.pretty.tests/73-lambda-1.good.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/94-case-7.good.expected)
    (:result 01.pretty.tests/94-case-7.good.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/13-type-con-id-1.bad.expected)
    (:result 01.pretty.tests/13-type-con-id-1.bad.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/17-int-literal-3.bad.expected)
    (:result 01.pretty.tests/17-int-literal-3.bad.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/56-constructor-3.bad.expected)
    (:result 01.pretty.tests/56-constructor-3.bad.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/113-deref-3.good.expected)
    (:result 01.pretty.tests/113-deref-3.good.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/48-instanciation-2.bad.expected)
    (:result 01.pretty.tests/48-instanciation-2.bad.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/56-constructor-3.good.expected)
    (:result 01.pretty.tests/56-constructor-3.good.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/12-lexer-label-id-1.bad.expected)
    (:result 01.pretty.tests/12-lexer-label-id-1.bad.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/21-char-literal-1.bad.expected)
    (:result 01.pretty.tests/21-char-literal-1.bad.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/100-ref-2.bad.expected)
    (:result 01.pretty.tests/100-ref-2.bad.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/99-ref-1.bad.expected)
    (:result 01.pretty.tests/99-ref-1.bad.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/39-type-definition-record-2.bad.expected)
    (:result 01.pretty.tests/39-type-definition-record-2.bad.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/41-external-definition-1.good.expected)
    (:result 01.pretty.tests/41-external-definition-1.good.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/34-type-definition-sum-4.bad.expected)
    (:result 01.pretty.tests/34-type-definition-sum-4.bad.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/88-case-1.bad.expected)
    (:result 01.pretty.tests/88-case-1.bad.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/29-string-literal-3.good.expected)
    (:result 01.pretty.tests/29-string-literal-3.good.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/66-sequence-2.good.expected)
    (:result 01.pretty.tests/66-sequence-2.good.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/103-ref-5.bad.expected)
    (:result 01.pretty.tests/103-ref-5.bad.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/04-app2-3.bad.expected)
    (:result 01.pretty.tests/04-app2-3.bad.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/82-application-6.bad.expected)
    (:result 01.pretty.tests/82-application-6.bad.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/35-type-definition-sum-5.good.expected)
    (:result 01.pretty.tests/35-type-definition-sum-5.good.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/22-char-literal-2.bad.expected)
    (:result 01.pretty.tests/22-char-literal-2.bad.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/62-record-projection-2.bad.expected)
    (:result 01.pretty.tests/62-record-projection-2.bad.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/05-app3.bad.expected)
    (:result 01.pretty.tests/05-app3.bad.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/97-if-then-else-2.bad.expected)
    (:result 01.pretty.tests/97-if-then-else-2.bad.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/06-lexer-var-id-1.bad.expected)
    (:result 01.pretty.tests/06-lexer-var-id-1.bad.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/94-case-7.bad.expected)
    (:result 01.pretty.tests/94-case-7.bad.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/72-local-definition-5.bad.expected)
    (:result 01.pretty.tests/72-local-definition-5.bad.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/37-type-definition-sum-7.bad.expected)
    (:result 01.pretty.tests/37-type-definition-sum-7.bad.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/01-constructor-application.good.expected)
    (:result 01.pretty.tests/01-constructor-application.good.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/91-case-4.good.expected)
    (:result 01.pretty.tests/91-case-4.good.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/74-lambda-2.good.expected)
    (:result 01.pretty.tests/74-lambda-2.good.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/103-ref-5.good.expected)
    (:result 01.pretty.tests/103-ref-5.good.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/28-string-literal-2.bad.expected)
    (:result 01.pretty.tests/28-string-literal-2.bad.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/42-external-definition-2.good.expected)
    (:result 01.pretty.tests/42-external-definition-2.good.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/36-type-definition-sum-6.good.expected)
    (:result 01.pretty.tests/36-type-definition-sum-6.good.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/93-case-6.bad.expected)
    (:result 01.pretty.tests/93-case-6.bad.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/52-instanciation-6.bad.expected)
    (:result 01.pretty.tests/52-instanciation-6.bad.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/32-type-definition-sum-2.bad.expected)
    (:result 01.pretty.tests/32-type-definition-sum-2.bad.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/98-if-then-else-4.bad.expected)
    (:result 01.pretty.tests/98-if-then-else-4.bad.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/108-type-ascription-1.good.expected)
    (:result 01.pretty.tests/108-type-ascription-1.good.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/98-if-then-else-3.bad.expected)
    (:result 01.pretty.tests/98-if-then-else-3.bad.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/10-lexer-constr-id-2.good.expected)
    (:result 01.pretty.tests/10-lexer-constr-id-2.good.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/78-application-2.good.expected)
    (:result 01.pretty.tests/78-application-2.good.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/03-app2-2.bad.expected)
    (:result 01.pretty.tests/03-app2-2.bad.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/54-constructor-1.bad.expected)
    (:result 01.pretty.tests/54-constructor-1.bad.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/15-int-literal-1.bad.expected)
    (:result 01.pretty.tests/15-int-literal-1.bad.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/92-case-5.good.expected)
    (:result 01.pretty.tests/92-case-5.good.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/58-record-1.good.expected)
    (:result 01.pretty.tests/58-record-1.good.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/81-application-5.good.expected)
    (:result 01.pretty.tests/81-application-5.good.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/31-type-definition-sum-1.bad.expected)
    (:result 01.pretty.tests/31-type-definition-sum-1.bad.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/77-application-1.good.expected)
    (:result 01.pretty.tests/77-application-1.good.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/20-int-literal-6.bad.expected)
    (:result 01.pretty.tests/20-int-literal-6.bad.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/84-infix-application-1.bad.expected)
    (:result 01.pretty.tests/84-infix-application-1.bad.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/48-instanciation-2.good.expected)
    (:result 01.pretty.tests/48-instanciation-2.good.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/31-type-definition-sum-1.good.expected)
    (:result 01.pretty.tests/31-type-definition-sum-1.good.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/45-value-definition-2.bad.expected)
    (:result 01.pretty.tests/45-value-definition-2.bad.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/21-char-literal-1.good.expected)
    (:result 01.pretty.tests/21-char-literal-1.good.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/119-do-while-2.good.expected)
    (:result 01.pretty.tests/119-do-while-2.good.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/79-application-3.bad.expected)
    (:result 01.pretty.tests/79-application-3.bad.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/91-case-4.bad.expected)
    (:result 01.pretty.tests/91-case-4.bad.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/69-local-definition-2.good.expected)
    (:result 01.pretty.tests/69-local-definition-2.good.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/117-for-2.good.expected)
    (:result 01.pretty.tests/117-for-2.good.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/23-char-literal-3.good.expected)
    (:result 01.pretty.tests/23-char-literal-3.good.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/22-char-literal-2.good.expected)
    (:result 01.pretty.tests/22-char-literal-2.good.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/51-instanciation-5.bad.expected)
    (:result 01.pretty.tests/51-instanciation-5.bad.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/119-do-while-2.bad.expected)
    (:result 01.pretty.tests/119-do-while-2.bad.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/106-assignment-3.good.expected)
    (:result 01.pretty.tests/106-assignment-3.good.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/90-case-3.bad.expected)
    (:result 01.pretty.tests/90-case-3.bad.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/102-ref-4.good.expected)
    (:result 01.pretty.tests/102-ref-4.good.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/62-record-projection-2.good.expected)
    (:result 01.pretty.tests/62-record-projection-2.good.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/105-assignment-2.bad.expected)
    (:result 01.pretty.tests/105-assignment-2.bad.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/13-type-con-id-1.good.expected)
    (:result 01.pretty.tests/13-type-con-id-1.good.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/68-local-definition.good.expected)
    (:result 01.pretty.tests/68-local-definition.good.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/49-instanciation-3.bad.expected)
    (:result 01.pretty.tests/49-instanciation-3.bad.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/32-type-definition-sum-2.good.expected)
    (:result 01.pretty.tests/32-type-definition-sum-2.good.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/59-record-2.bad.expected)
    (:result 01.pretty.tests/59-record-2.bad.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/44-value-definition-1.bad.expected)
    (:result 01.pretty.tests/44-value-definition-1.bad.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/38-type-definition-record-1.bad.expected)
    (:result 01.pretty.tests/38-type-definition-record-1.bad.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/12-lexer-label-id-2.bad.expected)
    (:result 01.pretty.tests/12-lexer-label-id-2.bad.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/108-type-ascription-1.bad.expected)
    (:result 01.pretty.tests/108-type-ascription-1.bad.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/89-case-2.good.expected)
    (:result 01.pretty.tests/89-case-2.good.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/101-ref-3.bad.expected)
    (:result 01.pretty.tests/101-ref-3.bad.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/109-type-ascription-2.good.expected)
    (:result 01.pretty.tests/109-type-ascription-2.good.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/68-local-definition.bad.expected)
    (:result 01.pretty.tests/68-local-definition.bad.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/98-if-then-else-3.good.expected)
    (:result 01.pretty.tests/98-if-then-else-3.good.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/69-local-definition-2.bad.expected)
    (:result 01.pretty.tests/69-local-definition-2.bad.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/18-int-literal-4.good.expected)
    (:result 01.pretty.tests/18-int-literal-4.good.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/95-case-8.good.expected)
    (:result 01.pretty.tests/95-case-8.good.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/17-int-literal-3.good.expected)
    (:result 01.pretty.tests/17-int-literal-3.good.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/97-if-then-else-2.good.expected)
    (:result 01.pretty.tests/97-if-then-else-2.good.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/51-instanciation-5.good.expected)
    (:result 01.pretty.tests/51-instanciation-5.good.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/60-record-3.good.expected)
    (:result 01.pretty.tests/60-record-3.good.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/102-ref-4.bad.expected)
    (:result 01.pretty.tests/102-ref-4.bad.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/111-deref-1.good.expected)
    (:result 01.pretty.tests/111-deref-1.good.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/42-external-definition-2.bad.expected)
    (:result 01.pretty.tests/42-external-definition-2.bad.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/75-lambda-3.bad.expected)
    (:result 01.pretty.tests/75-lambda-3.bad.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/70-local-definition-3.good.expected)
    (:result 01.pretty.tests/70-local-definition-3.good.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/98-if-then-else-4.good.expected)
    (:result 01.pretty.tests/98-if-then-else-4.good.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/72-local-definition-5.good.expected)
    (:result 01.pretty.tests/72-local-definition-5.good.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/14-type-con-id-2.bad.expected)
    (:result 01.pretty.tests/14-type-con-id-2.bad.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/46-value-definition-3.good.expected)
    (:result 01.pretty.tests/46-value-definition-3.good.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/89-case-2.bad.expected)
    (:result 01.pretty.tests/89-case-2.bad.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/27-string-literal-1.bad.expected)
    (:result 01.pretty.tests/27-string-literal-1.bad.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/24-char-literal-4.bad.expected)
    (:result 01.pretty.tests/24-char-literal-4.bad.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/87-infix-application-4.good.expected)
    (:result 01.pretty.tests/87-infix-application-4.good.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/41-external-definition-1.bad.expected)
    (:result 01.pretty.tests/41-external-definition-1.bad.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/44-value-definition-1.good.expected)
    (:result 01.pretty.tests/44-value-definition-1.good.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/101-ref-3.good.expected)
    (:result 01.pretty.tests/101-ref-3.good.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/77-application-1.bad.expected)
    (:result 01.pretty.tests/77-application-1.bad.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/47-instanciation.good.expected)
    (:result 01.pretty.tests/47-instanciation.good.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/104-assignment.good.expected)
    (:result 01.pretty.tests/104-assignment.good.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/53-instanciation-7.bad.expected)
    (:result 01.pretty.tests/53-instanciation-7.bad.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/11-lexer-constr-id-3.bad.expected)
    (:result 01.pretty.tests/11-lexer-constr-id-3.bad.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/92-case-5.bad.expected)
    (:result 01.pretty.tests/92-case-5.bad.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/113-deref-3.bad.expected)
    (:result 01.pretty.tests/113-deref-3.bad.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/19-int-literal-5.bad.expected)
    (:result 01.pretty.tests/19-int-literal-5.bad.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/114-while-1.bad.expected)
    (:result 01.pretty.tests/114-while-1.bad.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/999-slam.good.expected)
    (:result 01.pretty.tests/999-slam.good.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/82-application-6.good.expected)
    (:result 01.pretty.tests/82-application-6.good.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/116-for-1.good.expected)
    (:result 01.pretty.tests/116-for-1.good.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/66-sequence-2.bad.expected)
    (:result 01.pretty.tests/66-sequence-2.bad.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/06-lexer-var-id-1.good.expected)
    (:result 01.pretty.tests/06-lexer-var-id-1.good.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/12-lexer-label-id-1.good.expected)
    (:result 01.pretty.tests/12-lexer-label-id-1.good.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/80-application-4.good.expected)
    (:result 01.pretty.tests/80-application-4.good.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/28-string-literal-2.good.expected)
    (:result 01.pretty.tests/28-string-literal-2.good.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/61-record-projection-1.good.expected)
    (:result 01.pretty.tests/61-record-projection-1.good.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/08-lexer-all-id-1.good.expected)
    (:result 01.pretty.tests/08-lexer-all-id-1.good.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/105-assignment-2.good.expected)
    (:result 01.pretty.tests/105-assignment-2.good.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/43-external-definition-3.bad.expected)
    (:result 01.pretty.tests/43-external-definition-3.bad.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/79-application-3.good.expected)
    (:result 01.pretty.tests/79-application-3.good.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/112-deref-2.bad.expected)
    (:result 01.pretty.tests/112-deref-2.bad.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/46-value-definition-3.bad.expected)
    (:result 01.pretty.tests/46-value-definition-3.bad.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/58-record-1.bad.expected)
    (:result 01.pretty.tests/58-record-1.bad.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/78-application-2.bad.expected)
    (:result 01.pretty.tests/78-application-2.bad.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/61-record-projection-1.bad.expected)
    (:result 01.pretty.tests/61-record-projection-1.bad.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/55-constructor-2.bad.expected)
    (:result 01.pretty.tests/55-constructor-2.bad.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/25-char-literal-5.bad.expected)
    (:result 01.pretty.tests/25-char-literal-5.bad.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/117-for-2.bad.expected)
    (:result 01.pretty.tests/117-for-2.bad.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/10-lexer-constr-id-2.bad.expected)
    (:result 01.pretty.tests/10-lexer-constr-id-2.bad.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/86-infix-application-3.good.expected)
    (:result 01.pretty.tests/86-infix-application-3.good.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/107-assignment-4.good.expected)
    (:result 01.pretty.tests/107-assignment-4.good.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/104-assignment.bad.expected)
    (:result 01.pretty.tests/104-assignment.bad.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/118-do-while-1.good.expected)
    (:result 01.pretty.tests/118-do-while-1.good.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/39-type-definition-record-2.good.expected)
    (:result 01.pretty.tests/39-type-definition-record-2.good.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/65-sequence-1.good.expected)
    (:result 01.pretty.tests/65-sequence-1.good.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/15-int-literal-1.good.expected)
    (:result 01.pretty.tests/15-int-literal-1.good.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/67-sequence-3.good.expected)
    (:result 01.pretty.tests/67-sequence-3.good.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/115-while-2.good.expected)
    (:result 01.pretty.tests/115-while-2.good.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/107-assignment-4.bad.expected)
    (:result 01.pretty.tests/107-assignment-4.bad.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/99-ref-1.good.expected)
    (:result 01.pretty.tests/99-ref-1.good.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/26-char-literal-6.bad.expected)
    (:result 01.pretty.tests/26-char-literal-6.bad.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/76-lambda-4.good.expected)
    (:result 01.pretty.tests/76-lambda-4.good.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/33-type-definition-sum-3.good.expected)
    (:result 01.pretty.tests/33-type-definition-sum-3.good.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/12-lexer-label-id-2.good.expected)
    (:result 01.pretty.tests/12-lexer-label-id-2.good.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/116-for-1.bad.expected)
    (:result 01.pretty.tests/116-for-1.bad.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/88-case-1.good.expected)
    (:result 01.pretty.tests/88-case-1.good.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/96-if-then-else.bad.expected)
    (:result 01.pretty.tests/96-if-then-else.bad.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/07-lexer-var-id-2.bad.expected)
    (:result 01.pretty.tests/07-lexer-var-id-2.bad.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/96-if-then-else.good.expected)
    (:result 01.pretty.tests/96-if-then-else.good.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/18-int-literal-4.bad.expected)
    (:result 01.pretty.tests/18-int-literal-4.bad.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/20-int-literal-6.good.expected)
    (:result 01.pretty.tests/20-int-literal-6.good.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/01-constructor-application.bad.expected)
    (:result 01.pretty.tests/01-constructor-application.bad.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/118-do-while-1.bad.expected)
    (:result 01.pretty.tests/118-do-while-1.bad.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/53-instanciation-7.good.expected)
    (:result 01.pretty.tests/53-instanciation-7.good.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/63-record-projection-3.bad.expected)
    (:result 01.pretty.tests/63-record-projection-3.bad.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/95-case-8.bad.expected)
    (:result 01.pretty.tests/95-case-8.bad.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/111-deref-1.bad.expected)
    (:result 01.pretty.tests/111-deref-1.bad.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/70-local-definition-3.bad.expected)
    (:result 01.pretty.tests/70-local-definition-3.bad.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/75-lambda-3.good.expected)
    (:result 01.pretty.tests/75-lambda-3.good.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/87-infix-application-4.bad.expected)
    (:result 01.pretty.tests/87-infix-application-4.bad.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/85-infix-application-2.bad.expected)
    (:result 01.pretty.tests/85-infix-application-2.bad.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/65-sequence-1.bad.expected)
    (:result 01.pretty.tests/65-sequence-1.bad.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/90-case-3.good.expected)
    (:result 01.pretty.tests/90-case-3.good.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/83-application-7.good.expected)
    (:result 01.pretty.tests/83-application-7.good.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/81-application-5.bad.expected)
    (:result 01.pretty.tests/81-application-5.bad.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/34-type-definition-sum-4.good.expected)
    (:result 01.pretty.tests/34-type-definition-sum-4.good.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/36-type-definition-sum-6.bad.expected)
    (:result 01.pretty.tests/36-type-definition-sum-6.bad.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/09-lexer-constr-id-1.bad.expected)
    (:result 01.pretty.tests/09-lexer-constr-id-1.bad.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/29-string-literal-3.bad.expected)
    (:result 01.pretty.tests/29-string-literal-3.bad.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/35-type-definition-sum-5.bad.expected)
    (:result 01.pretty.tests/35-type-definition-sum-5.bad.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/14-type-con-id-2.good.expected)
    (:result 01.pretty.tests/14-type-con-id-2.good.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/09-lexer-constr-id-1.good.expected)
    (:result 01.pretty.tests/09-lexer-constr-id-1.good.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/60-record-3.bad.expected)
    (:result 01.pretty.tests/60-record-3.bad.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/109-type-ascription-2.bad.expected)
    (:result 01.pretty.tests/109-type-ascription-2.bad.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/43-external-definition-3.good.expected)
    (:result 01.pretty.tests/43-external-definition-3.good.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/37-type-definition-sum-7.good.expected)
    (:result 01.pretty.tests/37-type-definition-sum-7.good.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/16-int-literal-2.bad.expected)
    (:result 01.pretty.tests/16-int-literal-2.bad.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/38-type-definition-record-1.good.expected)
    (:result 01.pretty.tests/38-type-definition-record-1.good.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/76-lambda-4.bad.expected)
    (:result 01.pretty.tests/76-lambda-4.bad.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/74-lambda-2.bad.expected)
    (:result 01.pretty.tests/74-lambda-2.bad.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/02-app2.bad.expected)
    (:result 01.pretty.tests/02-app2.bad.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/33-type-definition-sum-3.bad.expected)
    (:result 01.pretty.tests/33-type-definition-sum-3.bad.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/106-assignment-3.bad.expected)
    (:result 01.pretty.tests/106-assignment-3.bad.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/23-char-literal-3.bad.expected)
    (:result 01.pretty.tests/23-char-literal-3.bad.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/07-lexer-var-id-2.good.expected)
    (:result 01.pretty.tests/07-lexer-var-id-2.good.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/93-case-6.good.expected)
    (:result 01.pretty.tests/93-case-6.good.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/16-int-literal-2.good.expected)
    (:result 01.pretty.tests/16-int-literal-2.good.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/71-local-definition-4.bad.expected)
    (:result 01.pretty.tests/71-local-definition-4.bad.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/19-int-literal-5.good.expected)
    (:result 01.pretty.tests/19-int-literal-5.good.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/30-string-literal-4.bad.expected)
    (:result 01.pretty.tests/30-string-literal-4.bad.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/110-type-ascription-3.bad.expected)
    (:result 01.pretty.tests/110-type-ascription-3.bad.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/63-record-projection-3.good.expected)
    (:result 01.pretty.tests/63-record-projection-3.good.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/54-constructor-1.good.expected)
    (:result 01.pretty.tests/54-constructor-1.good.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/67-sequence-3.bad.expected)
    (:result 01.pretty.tests/67-sequence-3.bad.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/83-application-7.bad.expected)
    (:result 01.pretty.tests/83-application-7.bad.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/115-while-2.bad.expected)
    (:result 01.pretty.tests/115-while-2.bad.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/45-value-definition-2.good.expected)
    (:result 01.pretty.tests/45-value-definition-2.good.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/40-type-definition-record-3.bad.expected)
    (:result 01.pretty.tests/40-type-definition-record-3.bad.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/50-instanciation-4.good.expected)
    (:result 01.pretty.tests/50-instanciation-4.good.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/71-local-definition-4.good.expected)
    (:result 01.pretty.tests/71-local-definition-4.good.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/40-type-definition-record-3.good.expected)
    (:result 01.pretty.tests/40-type-definition-record-3.good.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/112-deref-2.good.expected)
    (:result 01.pretty.tests/112-deref-2.good.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/57-constructor-4.good.expected)
    (:result 01.pretty.tests/57-constructor-4.good.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/59-record-2.good.expected)
    (:result 01.pretty.tests/59-record-2.good.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/49-instanciation-3.good.expected)
    (:result 01.pretty.tests/49-instanciation-3.good.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/57-constructor-4.bad.expected)
    (:result 01.pretty.tests/57-constructor-4.bad.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/84-infix-application-1.good.expected)
    (:result 01.pretty.tests/84-infix-application-1.good.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/73-lambda-1.bad.expected)
    (:result 01.pretty.tests/73-lambda-1.bad.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/08-lexer-all-id-1.bad.expected)
    (:result 01.pretty.tests/08-lexer-all-id-1.bad.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/26-char-literal-6.good.expected)
    (:result 01.pretty.tests/26-char-literal-6.good.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/27-string-literal-1.good.expected)
    (:result 01.pretty.tests/27-string-literal-1.good.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/24-char-literal-4.good.expected)
    (:result 01.pretty.tests/24-char-literal-4.good.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/110-type-ascription-3.good.expected)
    (:result 01.pretty.tests/110-type-ascription-3.good.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/25-char-literal-5.good.expected)
    (:result 01.pretty.tests/25-char-literal-5.good.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/85-infix-application-2.good.expected)
    (:result 01.pretty.tests/85-infix-application-2.good.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/114-while-1.good.expected)
    (:result 01.pretty.tests/114-while-1.good.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/55-constructor-2.good.expected)
    (:result 01.pretty.tests/55-constructor-2.good.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/11-lexer-constr-id-3.good.expected)
    (:result 01.pretty.tests/11-lexer-constr-id-3.good.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/30-string-literal-4.good.expected)
    (:result 01.pretty.tests/30-string-literal-4.good.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/52-instanciation-6.good.expected)
    (:result 01.pretty.tests/52-instanciation-6.good.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/47-instanciation.bad.expected)
    (:result 01.pretty.tests/47-instanciation.bad.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/100-ref-2.good.expected)
    (:result 01.pretty.tests/100-ref-2.good.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/80-application-4.bad.expected)
    (:result 01.pretty.tests/80-application-4.bad.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/86-infix-application-3.bad.expected)
    (:result 01.pretty.tests/86-infix-application-3.bad.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/50-instanciation-4.bad.expected)
    (:result 01.pretty.tests/50-instanciation-4.bad.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/73-lambda-1.good.expected)
    (:result 01.pretty.tests/73-lambda-1.good.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/94-case-7.good.expected)
    (:result 01.pretty.tests/94-case-7.good.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/13-type-con-id-1.bad.expected)
    (:result 01.pretty.tests/13-type-con-id-1.bad.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/17-int-literal-3.bad.expected)
    (:result 01.pretty.tests/17-int-literal-3.bad.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/56-constructor-3.bad.expected)
    (:result 01.pretty.tests/56-constructor-3.bad.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/113-deref-3.good.expected)
    (:result 01.pretty.tests/113-deref-3.good.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/48-instanciation-2.bad.expected)
    (:result 01.pretty.tests/48-instanciation-2.bad.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/56-constructor-3.good.expected)
    (:result 01.pretty.tests/56-constructor-3.good.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/12-lexer-label-id-1.bad.expected)
    (:result 01.pretty.tests/12-lexer-label-id-1.bad.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/21-char-literal-1.bad.expected)
    (:result 01.pretty.tests/21-char-literal-1.bad.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/100-ref-2.bad.expected)
    (:result 01.pretty.tests/100-ref-2.bad.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/99-ref-1.bad.expected)
    (:result 01.pretty.tests/99-ref-1.bad.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/39-type-definition-record-2.bad.expected)
    (:result 01.pretty.tests/39-type-definition-record-2.bad.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/41-external-definition-1.good.expected)
    (:result 01.pretty.tests/41-external-definition-1.good.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/34-type-definition-sum-4.bad.expected)
    (:result 01.pretty.tests/34-type-definition-sum-4.bad.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/88-case-1.bad.expected)
    (:result 01.pretty.tests/88-case-1.bad.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/29-string-literal-3.good.expected)
    (:result 01.pretty.tests/29-string-literal-3.good.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/66-sequence-2.good.expected)
    (:result 01.pretty.tests/66-sequence-2.good.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/103-ref-5.bad.expected)
    (:result 01.pretty.tests/103-ref-5.bad.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/04-app2-3.bad.expected)
    (:result 01.pretty.tests/04-app2-3.bad.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/82-application-6.bad.expected)
    (:result 01.pretty.tests/82-application-6.bad.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/35-type-definition-sum-5.good.expected)
    (:result 01.pretty.tests/35-type-definition-sum-5.good.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/22-char-literal-2.bad.expected)
    (:result 01.pretty.tests/22-char-literal-2.bad.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/62-record-projection-2.bad.expected)
    (:result 01.pretty.tests/62-record-projection-2.bad.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/05-app3.bad.expected)
    (:result 01.pretty.tests/05-app3.bad.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/97-if-then-else-2.bad.expected)
    (:result 01.pretty.tests/97-if-then-else-2.bad.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/06-lexer-var-id-1.bad.expected)
    (:result 01.pretty.tests/06-lexer-var-id-1.bad.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/94-case-7.bad.expected)
    (:result 01.pretty.tests/94-case-7.bad.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/72-local-definition-5.bad.expected)
    (:result 01.pretty.tests/72-local-definition-5.bad.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/37-type-definition-sum-7.bad.expected)
    (:result 01.pretty.tests/37-type-definition-sum-7.bad.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/01-constructor-application.good.expected)
    (:result 01.pretty.tests/01-constructor-application.good.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/91-case-4.good.expected)
    (:result 01.pretty.tests/91-case-4.good.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/74-lambda-2.good.expected)
    (:result 01.pretty.tests/74-lambda-2.good.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/103-ref-5.good.expected)
    (:result 01.pretty.tests/103-ref-5.good.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/28-string-literal-2.bad.expected)
    (:result 01.pretty.tests/28-string-literal-2.bad.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/42-external-definition-2.good.expected)
    (:result 01.pretty.tests/42-external-definition-2.good.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/36-type-definition-sum-6.good.expected)
    (:result 01.pretty.tests/36-type-definition-sum-6.good.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/93-case-6.bad.expected)
    (:result 01.pretty.tests/93-case-6.bad.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/52-instanciation-6.bad.expected)
    (:result 01.pretty.tests/52-instanciation-6.bad.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/32-type-definition-sum-2.bad.expected)
    (:result 01.pretty.tests/32-type-definition-sum-2.bad.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/98-if-then-else-4.bad.expected)
    (:result 01.pretty.tests/98-if-then-else-4.bad.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/108-type-ascription-1.good.expected)
    (:result 01.pretty.tests/108-type-ascription-1.good.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/98-if-then-else-3.bad.expected)
    (:result 01.pretty.tests/98-if-then-else-3.bad.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/10-lexer-constr-id-2.good.expected)
    (:result 01.pretty.tests/10-lexer-constr-id-2.good.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/78-application-2.good.expected)
    (:result 01.pretty.tests/78-application-2.good.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/03-app2-2.bad.expected)
    (:result 01.pretty.tests/03-app2-2.bad.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/54-constructor-1.bad.expected)
    (:result 01.pretty.tests/54-constructor-1.bad.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/15-int-literal-1.bad.expected)
    (:result 01.pretty.tests/15-int-literal-1.bad.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/92-case-5.good.expected)
    (:result 01.pretty.tests/92-case-5.good.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/58-record-1.good.expected)
    (:result 01.pretty.tests/58-record-1.good.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/81-application-5.good.expected)
    (:result 01.pretty.tests/81-application-5.good.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/31-type-definition-sum-1.bad.expected)
    (:result 01.pretty.tests/31-type-definition-sum-1.bad.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/77-application-1.good.expected)
    (:result 01.pretty.tests/77-application-1.good.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/20-int-literal-6.bad.expected)
    (:result 01.pretty.tests/20-int-literal-6.bad.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/84-infix-application-1.bad.expected)
    (:result 01.pretty.tests/84-infix-application-1.bad.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/48-instanciation-2.good.expected)
    (:result 01.pretty.tests/48-instanciation-2.good.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/31-type-definition-sum-1.good.expected)
    (:result 01.pretty.tests/31-type-definition-sum-1.good.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/45-value-definition-2.bad.expected)
    (:result 01.pretty.tests/45-value-definition-2.bad.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/21-char-literal-1.good.expected)
    (:result 01.pretty.tests/21-char-literal-1.good.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/119-do-while-2.good.expected)
    (:result 01.pretty.tests/119-do-while-2.good.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/79-application-3.bad.expected)
    (:result 01.pretty.tests/79-application-3.bad.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/91-case-4.bad.expected)
    (:result 01.pretty.tests/91-case-4.bad.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/69-local-definition-2.good.expected)
    (:result 01.pretty.tests/69-local-definition-2.good.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/117-for-2.good.expected)
    (:result 01.pretty.tests/117-for-2.good.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/23-char-literal-3.good.expected)
    (:result 01.pretty.tests/23-char-literal-3.good.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/22-char-literal-2.good.expected)
    (:result 01.pretty.tests/22-char-literal-2.good.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/51-instanciation-5.bad.expected)
    (:result 01.pretty.tests/51-instanciation-5.bad.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/119-do-while-2.bad.expected)
    (:result 01.pretty.tests/119-do-while-2.bad.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/106-assignment-3.good.expected)
    (:result 01.pretty.tests/106-assignment-3.good.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/90-case-3.bad.expected)
    (:result 01.pretty.tests/90-case-3.bad.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/102-ref-4.good.expected)
    (:result 01.pretty.tests/102-ref-4.good.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/62-record-projection-2.good.expected)
    (:result 01.pretty.tests/62-record-projection-2.good.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/105-assignment-2.bad.expected)
    (:result 01.pretty.tests/105-assignment-2.bad.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/13-type-con-id-1.good.expected)
    (:result 01.pretty.tests/13-type-con-id-1.good.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/68-local-definition.good.expected)
    (:result 01.pretty.tests/68-local-definition.good.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/49-instanciation-3.bad.expected)
    (:result 01.pretty.tests/49-instanciation-3.bad.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/32-type-definition-sum-2.good.expected)
    (:result 01.pretty.tests/32-type-definition-sum-2.good.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/59-record-2.bad.expected)
    (:result 01.pretty.tests/59-record-2.bad.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/44-value-definition-1.bad.expected)
    (:result 01.pretty.tests/44-value-definition-1.bad.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/38-type-definition-record-1.bad.expected)
    (:result 01.pretty.tests/38-type-definition-record-1.bad.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/12-lexer-label-id-2.bad.expected)
    (:result 01.pretty.tests/12-lexer-label-id-2.bad.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/108-type-ascription-1.bad.expected)
    (:result 01.pretty.tests/108-type-ascription-1.bad.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/89-case-2.good.expected)
    (:result 01.pretty.tests/89-case-2.good.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/101-ref-3.bad.expected)
    (:result 01.pretty.tests/101-ref-3.bad.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/109-type-ascription-2.good.expected)
    (:result 01.pretty.tests/109-type-ascription-2.good.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/68-local-definition.bad.expected)
    (:result 01.pretty.tests/68-local-definition.bad.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/98-if-then-else-3.good.expected)
    (:result 01.pretty.tests/98-if-then-else-3.good.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/69-local-definition-2.bad.expected)
    (:result 01.pretty.tests/69-local-definition-2.bad.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/18-int-literal-4.good.expected)
    (:result 01.pretty.tests/18-int-literal-4.good.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/95-case-8.good.expected)
    (:result 01.pretty.tests/95-case-8.good.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/17-int-literal-3.good.expected)
    (:result 01.pretty.tests/17-int-literal-3.good.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/97-if-then-else-2.good.expected)
    (:result 01.pretty.tests/97-if-then-else-2.good.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/51-instanciation-5.good.expected)
    (:result 01.pretty.tests/51-instanciation-5.good.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/60-record-3.good.expected)
    (:result 01.pretty.tests/60-record-3.good.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/102-ref-4.bad.expected)
    (:result 01.pretty.tests/102-ref-4.bad.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/111-deref-1.good.expected)
    (:result 01.pretty.tests/111-deref-1.good.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/42-external-definition-2.bad.expected)
    (:result 01.pretty.tests/42-external-definition-2.bad.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/75-lambda-3.bad.expected)
    (:result 01.pretty.tests/75-lambda-3.bad.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/70-local-definition-3.good.expected)
    (:result 01.pretty.tests/70-local-definition-3.good.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/98-if-then-else-4.good.expected)
    (:result 01.pretty.tests/98-if-then-else-4.good.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/72-local-definition-5.good.expected)
    (:result 01.pretty.tests/72-local-definition-5.good.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/14-type-con-id-2.bad.expected)
    (:result 01.pretty.tests/14-type-con-id-2.bad.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/46-value-definition-3.good.expected)
    (:result 01.pretty.tests/46-value-definition-3.good.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/89-case-2.bad.expected)
    (:result 01.pretty.tests/89-case-2.bad.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/27-string-literal-1.bad.expected)
    (:result 01.pretty.tests/27-string-literal-1.bad.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/24-char-literal-4.bad.expected)
    (:result 01.pretty.tests/24-char-literal-4.bad.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/87-infix-application-4.good.expected)
    (:result 01.pretty.tests/87-infix-application-4.good.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/41-external-definition-1.bad.expected)
    (:result 01.pretty.tests/41-external-definition-1.bad.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/44-value-definition-1.good.expected)
    (:result 01.pretty.tests/44-value-definition-1.good.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/101-ref-3.good.expected)
    (:result 01.pretty.tests/101-ref-3.good.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/77-application-1.bad.expected)
    (:result 01.pretty.tests/77-application-1.bad.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/47-instanciation.good.expected)
    (:result 01.pretty.tests/47-instanciation.good.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/104-assignment.good.expected)
    (:result 01.pretty.tests/104-assignment.good.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/53-instanciation-7.bad.expected)
    (:result 01.pretty.tests/53-instanciation-7.bad.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/11-lexer-constr-id-3.bad.expected)
    (:result 01.pretty.tests/11-lexer-constr-id-3.bad.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/92-case-5.bad.expected)
    (:result 01.pretty.tests/92-case-5.bad.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/113-deref-3.bad.expected)
    (:result 01.pretty.tests/113-deref-3.bad.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/19-int-literal-5.bad.expected)
    (:result 01.pretty.tests/19-int-literal-5.bad.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/114-while-1.bad.expected)
    (:result 01.pretty.tests/114-while-1.bad.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/999-slam.good.expected)
    (:result 01.pretty.tests/999-slam.good.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/82-application-6.good.expected)
    (:result 01.pretty.tests/82-application-6.good.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/116-for-1.good.expected)
    (:result 01.pretty.tests/116-for-1.good.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/66-sequence-2.bad.expected)
    (:result 01.pretty.tests/66-sequence-2.bad.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/06-lexer-var-id-1.good.expected)
    (:result 01.pretty.tests/06-lexer-var-id-1.good.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/12-lexer-label-id-1.good.expected)
    (:result 01.pretty.tests/12-lexer-label-id-1.good.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/80-application-4.good.expected)
    (:result 01.pretty.tests/80-application-4.good.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/28-string-literal-2.good.expected)
    (:result 01.pretty.tests/28-string-literal-2.good.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/61-record-projection-1.good.expected)
    (:result 01.pretty.tests/61-record-projection-1.good.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/08-lexer-all-id-1.good.expected)
    (:result 01.pretty.tests/08-lexer-all-id-1.good.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/105-assignment-2.good.expected)
    (:result 01.pretty.tests/105-assignment-2.good.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/43-external-definition-3.bad.expected)
    (:result 01.pretty.tests/43-external-definition-3.bad.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/79-application-3.good.expected)
    (:result 01.pretty.tests/79-application-3.good.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/112-deref-2.bad.expected)
    (:result 01.pretty.tests/112-deref-2.bad.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/46-value-definition-3.bad.expected)
    (:result 01.pretty.tests/46-value-definition-3.bad.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/58-record-1.bad.expected)
    (:result 01.pretty.tests/58-record-1.bad.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/78-application-2.bad.expected)
    (:result 01.pretty.tests/78-application-2.bad.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/61-record-projection-1.bad.expected)
    (:result 01.pretty.tests/61-record-projection-1.bad.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/55-constructor-2.bad.expected)
    (:result 01.pretty.tests/55-constructor-2.bad.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/25-char-literal-5.bad.expected)
    (:result 01.pretty.tests/25-char-literal-5.bad.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/117-for-2.bad.expected)
    (:result 01.pretty.tests/117-for-2.bad.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/10-lexer-constr-id-2.bad.expected)
    (:result 01.pretty.tests/10-lexer-constr-id-2.bad.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/86-infix-application-3.good.expected)
    (:result 01.pretty.tests/86-infix-application-3.good.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/107-assignment-4.good.expected)
    (:result 01.pretty.tests/107-assignment-4.good.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/104-assignment.bad.expected)
    (:result 01.pretty.tests/104-assignment.bad.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/118-do-while-1.good.expected)
    (:result 01.pretty.tests/118-do-while-1.good.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/39-type-definition-record-2.good.expected)
    (:result 01.pretty.tests/39-type-definition-record-2.good.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/65-sequence-1.good.expected)
    (:result 01.pretty.tests/65-sequence-1.good.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/15-int-literal-1.good.expected)
    (:result 01.pretty.tests/15-int-literal-1.good.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/67-sequence-3.good.expected)
    (:result 01.pretty.tests/67-sequence-3.good.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/115-while-2.good.expected)
    (:result 01.pretty.tests/115-while-2.good.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/107-assignment-4.bad.expected)
    (:result 01.pretty.tests/107-assignment-4.bad.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/99-ref-1.good.expected)
    (:result 01.pretty.tests/99-ref-1.good.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/26-char-literal-6.bad.expected)
    (:result 01.pretty.tests/26-char-literal-6.bad.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/76-lambda-4.good.expected)
    (:result 01.pretty.tests/76-lambda-4.good.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/33-type-definition-sum-3.good.expected)
    (:result 01.pretty.tests/33-type-definition-sum-3.good.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/12-lexer-label-id-2.good.expected)
    (:result 01.pretty.tests/12-lexer-label-id-2.good.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/116-for-1.bad.expected)
    (:result 01.pretty.tests/116-for-1.bad.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/88-case-1.good.expected)
    (:result 01.pretty.tests/88-case-1.good.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/96-if-then-else.bad.expected)
    (:result 01.pretty.tests/96-if-then-else.bad.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/07-lexer-var-id-2.bad.expected)
    (:result 01.pretty.tests/07-lexer-var-id-2.bad.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/96-if-then-else.good.expected)
    (:result 01.pretty.tests/96-if-then-else.good.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/18-int-literal-4.bad.expected)
    (:result 01.pretty.tests/18-int-literal-4.bad.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/20-int-literal-6.good.expected)
    (:result 01.pretty.tests/20-int-literal-6.good.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/01-constructor-application.bad.expected)
    (:result 01.pretty.tests/01-constructor-application.bad.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/118-do-while-1.bad.expected)
    (:result 01.pretty.tests/118-do-while-1.bad.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/53-instanciation-7.good.expected)
    (:result 01.pretty.tests/53-instanciation-7.good.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/63-record-projection-3.bad.expected)
    (:result 01.pretty.tests/63-record-projection-3.bad.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/95-case-8.bad.expected)
    (:result 01.pretty.tests/95-case-8.bad.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/111-deref-1.bad.expected)
    (:result 01.pretty.tests/111-deref-1.bad.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/70-local-definition-3.bad.expected)
    (:result 01.pretty.tests/70-local-definition-3.bad.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/75-lambda-3.good.expected)
    (:result 01.pretty.tests/75-lambda-3.good.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/87-infix-application-4.bad.expected)
    (:result 01.pretty.tests/87-infix-application-4.bad.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/85-infix-application-2.bad.expected)
    (:result 01.pretty.tests/85-infix-application-2.bad.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/65-sequence-1.bad.expected)
    (:result 01.pretty.tests/65-sequence-1.bad.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/90-case-3.good.expected)
    (:result 01.pretty.tests/90-case-3.good.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/83-application-7.good.expected)
    (:result 01.pretty.tests/83-application-7.good.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/81-application-5.bad.expected)
    (:result 01.pretty.tests/81-application-5.bad.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/34-type-definition-sum-4.good.expected)
    (:result 01.pretty.tests/34-type-definition-sum-4.good.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/36-type-definition-sum-6.bad.expected)
    (:result 01.pretty.tests/36-type-definition-sum-6.bad.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/09-lexer-constr-id-1.bad.expected)
    (:result 01.pretty.tests/09-lexer-constr-id-1.bad.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/29-string-literal-3.bad.expected)
    (:result 01.pretty.tests/29-string-literal-3.bad.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/35-type-definition-sum-5.bad.expected)
    (:result 01.pretty.tests/35-type-definition-sum-5.bad.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/14-type-con-id-2.good.expected)
    (:result 01.pretty.tests/14-type-con-id-2.good.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/09-lexer-constr-id-1.good.expected)
    (:result 01.pretty.tests/09-lexer-constr-id-1.good.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/60-record-3.bad.expected)
    (:result 01.pretty.tests/60-record-3.bad.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/109-type-ascription-2.bad.expected)
    (:result 01.pretty.tests/109-type-ascription-2.bad.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/43-external-definition-3.good.expected)
    (:result 01.pretty.tests/43-external-definition-3.good.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/37-type-definition-sum-7.good.expected)
    (:result 01.pretty.tests/37-type-definition-sum-7.good.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/16-int-literal-2.bad.expected)
    (:result 01.pretty.tests/16-int-literal-2.bad.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/38-type-definition-record-1.good.expected)
    (:result 01.pretty.tests/38-type-definition-record-1.good.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/76-lambda-4.bad.expected)
    (:result 01.pretty.tests/76-lambda-4.bad.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/74-lambda-2.bad.expected)
    (:result 01.pretty.tests/74-lambda-2.bad.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/02-app2.bad.expected)
    (:result 01.pretty.tests/02-app2.bad.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/33-type-definition-sum-3.bad.expected)
    (:result 01.pretty.tests/33-type-definition-sum-3.bad.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/106-assignment-3.bad.expected)
    (:result 01.pretty.tests/106-assignment-3.bad.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/23-char-literal-3.bad.expected)
    (:result 01.pretty.tests/23-char-literal-3.bad.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/07-lexer-var-id-2.good.expected)
    (:result 01.pretty.tests/07-lexer-var-id-2.good.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/93-case-6.good.expected)
    (:result 01.pretty.tests/93-case-6.good.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/16-int-literal-2.good.expected)
    (:result 01.pretty.tests/16-int-literal-2.good.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/71-local-definition-4.bad.expected)
    (:result 01.pretty.tests/71-local-definition-4.bad.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/19-int-literal-5.good.expected)
    (:result 01.pretty.tests/19-int-literal-5.good.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/30-string-literal-4.bad.expected)
    (:result 01.pretty.tests/30-string-literal-4.bad.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/110-type-ascription-3.bad.expected)
    (:result 01.pretty.tests/110-type-ascription-3.bad.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/63-record-projection-3.good.expected)
    (:result 01.pretty.tests/63-record-projection-3.good.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/54-constructor-1.good.expected)
    (:result 01.pretty.tests/54-constructor-1.good.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/67-sequence-3.bad.expected)
    (:result 01.pretty.tests/67-sequence-3.bad.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/83-application-7.bad.expected)
    (:result 01.pretty.tests/83-application-7.bad.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/115-while-2.bad.expected)
    (:result 01.pretty.tests/115-while-2.bad.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/45-value-definition-2.good.expected)
    (:result 01.pretty.tests/45-value-definition-2.good.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/40-type-definition-record-3.bad.expected)
    (:result 01.pretty.tests/40-type-definition-record-3.bad.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/50-instanciation-4.good.expected)
    (:result 01.pretty.tests/50-instanciation-4.good.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/71-local-definition-4.good.expected)
    (:result 01.pretty.tests/71-local-definition-4.good.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/40-type-definition-record-3.good.expected)
    (:result 01.pretty.tests/40-type-definition-record-3.good.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/112-deref-2.good.expected)
    (:result 01.pretty.tests/112-deref-2.good.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/57-constructor-4.good.expected)
    (:result 01.pretty.tests/57-constructor-4.good.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/59-record-2.good.expected)
    (:result 01.pretty.tests/59-record-2.good.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/49-instanciation-3.good.expected)
    (:result 01.pretty.tests/49-instanciation-3.good.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/57-constructor-4.bad.expected)
    (:result 01.pretty.tests/57-constructor-4.bad.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/84-infix-application-1.good.expected)
    (:result 01.pretty.tests/84-infix-application-1.good.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/73-lambda-1.bad.expected)
    (:result 01.pretty.tests/73-lambda-1.bad.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/08-lexer-all-id-1.bad.expected)
    (:result 01.pretty.tests/08-lexer-all-id-1.bad.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/26-char-literal-6.good.expected)
    (:result 01.pretty.tests/26-char-literal-6.good.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/27-string-literal-1.good.expected)
    (:result 01.pretty.tests/27-string-literal-1.good.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/24-char-literal-4.good.expected)
    (:result 01.pretty.tests/24-char-literal-4.good.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/110-type-ascription-3.good.expected)
    (:result 01.pretty.tests/110-type-ascription-3.good.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/25-char-literal-5.good.expected)
    (:result 01.pretty.tests/25-char-literal-5.good.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/85-infix-application-2.good.expected)
    (:result 01.pretty.tests/85-infix-application-2.good.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/114-while-1.good.expected)
    (:result 01.pretty.tests/114-while-1.good.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/55-constructor-2.good.expected)
    (:result 01.pretty.tests/55-constructor-2.good.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/11-lexer-constr-id-3.good.expected)
    (:result 01.pretty.tests/11-lexer-constr-id-3.good.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/30-string-literal-4.good.expected)
    (:result 01.pretty.tests/30-string-literal-4.good.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/52-instanciation-6.good.expected)
    (:result 01.pretty.tests/52-instanciation-6.good.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/47-instanciation.bad.expected)
    (:result 01.pretty.tests/47-instanciation.bad.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/100-ref-2.good.expected)
    (:result 01.pretty.tests/100-ref-2.good.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/80-application-4.bad.expected)
    (:result 01.pretty.tests/80-application-4.bad.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/86-infix-application-3.bad.expected)
    (:result 01.pretty.tests/86-infix-application-3.bad.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/50-instanciation-4.bad.expected)
    (:result 01.pretty.tests/50-instanciation-4.bad.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/73-lambda-1.good.expected)
    (:result 01.pretty.tests/73-lambda-1.good.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/94-case-7.good.expected)
    (:result 01.pretty.tests/94-case-7.good.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/13-type-con-id-1.bad.expected)
    (:result 01.pretty.tests/13-type-con-id-1.bad.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/17-int-literal-3.bad.expected)
    (:result 01.pretty.tests/17-int-literal-3.bad.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/56-constructor-3.bad.expected)
    (:result 01.pretty.tests/56-constructor-3.bad.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/113-deref-3.good.expected)
    (:result 01.pretty.tests/113-deref-3.good.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/48-instanciation-2.bad.expected)
    (:result 01.pretty.tests/48-instanciation-2.bad.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/56-constructor-3.good.expected)
    (:result 01.pretty.tests/56-constructor-3.good.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/12-lexer-label-id-1.bad.expected)
    (:result 01.pretty.tests/12-lexer-label-id-1.bad.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/21-char-literal-1.bad.expected)
    (:result 01.pretty.tests/21-char-literal-1.bad.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/100-ref-2.bad.expected)
    (:result 01.pretty.tests/100-ref-2.bad.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/99-ref-1.bad.expected)
    (:result 01.pretty.tests/99-ref-1.bad.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/39-type-definition-record-2.bad.expected)
    (:result 01.pretty.tests/39-type-definition-record-2.bad.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/41-external-definition-1.good.expected)
    (:result 01.pretty.tests/41-external-definition-1.good.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/34-type-definition-sum-4.bad.expected)
    (:result 01.pretty.tests/34-type-definition-sum-4.bad.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/88-case-1.bad.expected)
    (:result 01.pretty.tests/88-case-1.bad.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/29-string-literal-3.good.expected)
    (:result 01.pretty.tests/29-string-literal-3.good.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/66-sequence-2.good.expected)
    (:result 01.pretty.tests/66-sequence-2.good.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/103-ref-5.bad.expected)
    (:result 01.pretty.tests/103-ref-5.bad.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/04-app2-3.bad.expected)
    (:result 01.pretty.tests/04-app2-3.bad.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/82-application-6.bad.expected)
    (:result 01.pretty.tests/82-application-6.bad.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/35-type-definition-sum-5.good.expected)
    (:result 01.pretty.tests/35-type-definition-sum-5.good.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/22-char-literal-2.bad.expected)
    (:result 01.pretty.tests/22-char-literal-2.bad.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/62-record-projection-2.bad.expected)
    (:result 01.pretty.tests/62-record-projection-2.bad.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/05-app3.bad.expected)
    (:result 01.pretty.tests/05-app3.bad.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/97-if-then-else-2.bad.expected)
    (:result 01.pretty.tests/97-if-then-else-2.bad.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/06-lexer-var-id-1.bad.expected)
    (:result 01.pretty.tests/06-lexer-var-id-1.bad.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/94-case-7.bad.expected)
    (:result 01.pretty.tests/94-case-7.bad.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/72-local-definition-5.bad.expected)
    (:result 01.pretty.tests/72-local-definition-5.bad.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/37-type-definition-sum-7.bad.expected)
    (:result 01.pretty.tests/37-type-definition-sum-7.bad.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/01-constructor-application.good.expected)
    (:result 01.pretty.tests/01-constructor-application.good.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/91-case-4.good.expected)
    (:result 01.pretty.tests/91-case-4.good.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/74-lambda-2.good.expected)
    (:result 01.pretty.tests/74-lambda-2.good.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/103-ref-5.good.expected)
    (:result 01.pretty.tests/103-ref-5.good.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/28-string-literal-2.bad.expected)
    (:result 01.pretty.tests/28-string-literal-2.bad.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/42-external-definition-2.good.expected)
    (:result 01.pretty.tests/42-external-definition-2.good.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/36-type-definition-sum-6.good.expected)
    (:result 01.pretty.tests/36-type-definition-sum-6.good.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/93-case-6.bad.expected)
    (:result 01.pretty.tests/93-case-6.bad.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/52-instanciation-6.bad.expected)
    (:result 01.pretty.tests/52-instanciation-6.bad.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/32-type-definition-sum-2.bad.expected)
    (:result 01.pretty.tests/32-type-definition-sum-2.bad.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/98-if-then-else-4.bad.expected)
    (:result 01.pretty.tests/98-if-then-else-4.bad.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/108-type-ascription-1.good.expected)
    (:result 01.pretty.tests/108-type-ascription-1.good.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/98-if-then-else-3.bad.expected)
    (:result 01.pretty.tests/98-if-then-else-3.bad.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/10-lexer-constr-id-2.good.expected)
    (:result 01.pretty.tests/10-lexer-constr-id-2.good.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/78-application-2.good.expected)
    (:result 01.pretty.tests/78-application-2.good.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/03-app2-2.bad.expected)
    (:result 01.pretty.tests/03-app2-2.bad.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/54-constructor-1.bad.expected)
    (:result 01.pretty.tests/54-constructor-1.bad.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/15-int-literal-1.bad.expected)
    (:result 01.pretty.tests/15-int-literal-1.bad.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/92-case-5.good.expected)
    (:result 01.pretty.tests/92-case-5.good.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/58-record-1.good.expected)
    (:result 01.pretty.tests/58-record-1.good.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/81-application-5.good.expected)
    (:result 01.pretty.tests/81-application-5.good.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/31-type-definition-sum-1.bad.expected)
    (:result 01.pretty.tests/31-type-definition-sum-1.bad.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/77-application-1.good.expected)
    (:result 01.pretty.tests/77-application-1.good.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/20-int-literal-6.bad.expected)
    (:result 01.pretty.tests/20-int-literal-6.bad.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/84-infix-application-1.bad.expected)
    (:result 01.pretty.tests/84-infix-application-1.bad.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/48-instanciation-2.good.expected)
    (:result 01.pretty.tests/48-instanciation-2.good.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/31-type-definition-sum-1.good.expected)
    (:result 01.pretty.tests/31-type-definition-sum-1.good.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/45-value-definition-2.bad.expected)
    (:result 01.pretty.tests/45-value-definition-2.bad.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/21-char-literal-1.good.expected)
    (:result 01.pretty.tests/21-char-literal-1.good.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/119-do-while-2.good.expected)
    (:result 01.pretty.tests/119-do-while-2.good.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/79-application-3.bad.expected)
    (:result 01.pretty.tests/79-application-3.bad.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/91-case-4.bad.expected)
    (:result 01.pretty.tests/91-case-4.bad.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/69-local-definition-2.good.expected)
    (:result 01.pretty.tests/69-local-definition-2.good.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/117-for-2.good.expected)
    (:result 01.pretty.tests/117-for-2.good.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/23-char-literal-3.good.expected)
    (:result 01.pretty.tests/23-char-literal-3.good.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/22-char-literal-2.good.expected)
    (:result 01.pretty.tests/22-char-literal-2.good.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/51-instanciation-5.bad.expected)
    (:result 01.pretty.tests/51-instanciation-5.bad.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/119-do-while-2.bad.expected)
    (:result 01.pretty.tests/119-do-while-2.bad.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/106-assignment-3.good.expected)
    (:result 01.pretty.tests/106-assignment-3.good.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/90-case-3.bad.expected)
    (:result 01.pretty.tests/90-case-3.bad.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/102-ref-4.good.expected)
    (:result 01.pretty.tests/102-ref-4.good.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/62-record-projection-2.good.expected)
    (:result 01.pretty.tests/62-record-projection-2.good.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/105-assignment-2.bad.expected)
    (:result 01.pretty.tests/105-assignment-2.bad.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/13-type-con-id-1.good.expected)
    (:result 01.pretty.tests/13-type-con-id-1.good.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/68-local-definition.good.expected)
    (:result 01.pretty.tests/68-local-definition.good.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/49-instanciation-3.bad.expected)
    (:result 01.pretty.tests/49-instanciation-3.bad.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/32-type-definition-sum-2.good.expected)
    (:result 01.pretty.tests/32-type-definition-sum-2.good.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/59-record-2.bad.expected)
    (:result 01.pretty.tests/59-record-2.bad.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/44-value-definition-1.bad.expected)
    (:result 01.pretty.tests/44-value-definition-1.bad.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/38-type-definition-record-1.bad.expected)
    (:result 01.pretty.tests/38-type-definition-record-1.bad.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/12-lexer-label-id-2.bad.expected)
    (:result 01.pretty.tests/12-lexer-label-id-2.bad.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/108-type-ascription-1.bad.expected)
    (:result 01.pretty.tests/108-type-ascription-1.bad.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/89-case-2.good.expected)
    (:result 01.pretty.tests/89-case-2.good.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/101-ref-3.bad.expected)
    (:result 01.pretty.tests/101-ref-3.bad.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/109-type-ascription-2.good.expected)
    (:result 01.pretty.tests/109-type-ascription-2.good.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/68-local-definition.bad.expected)
    (:result 01.pretty.tests/68-local-definition.bad.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/98-if-then-else-3.good.expected)
    (:result 01.pretty.tests/98-if-then-else-3.good.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/69-local-definition-2.bad.expected)
    (:result 01.pretty.tests/69-local-definition-2.bad.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/18-int-literal-4.good.expected)
    (:result 01.pretty.tests/18-int-literal-4.good.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/95-case-8.good.expected)
    (:result 01.pretty.tests/95-case-8.good.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/17-int-literal-3.good.expected)
    (:result 01.pretty.tests/17-int-literal-3.good.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/97-if-then-else-2.good.expected)
    (:result 01.pretty.tests/97-if-then-else-2.good.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/51-instanciation-5.good.expected)
    (:result 01.pretty.tests/51-instanciation-5.good.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/60-record-3.good.expected)
    (:result 01.pretty.tests/60-record-3.good.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/102-ref-4.bad.expected)
    (:result 01.pretty.tests/102-ref-4.bad.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/111-deref-1.good.expected)
    (:result 01.pretty.tests/111-deref-1.good.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/42-external-definition-2.bad.expected)
    (:result 01.pretty.tests/42-external-definition-2.bad.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/75-lambda-3.bad.expected)
    (:result 01.pretty.tests/75-lambda-3.bad.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/70-local-definition-3.good.expected)
    (:result 01.pretty.tests/70-local-definition-3.good.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/98-if-then-else-4.good.expected)
    (:result 01.pretty.tests/98-if-then-else-4.good.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/72-local-definition-5.good.expected)
    (:result 01.pretty.tests/72-local-definition-5.good.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/14-type-con-id-2.bad.expected)
    (:result 01.pretty.tests/14-type-con-id-2.bad.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/46-value-definition-3.good.expected)
    (:result 01.pretty.tests/46-value-definition-3.good.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/89-case-2.bad.expected)
    (:result 01.pretty.tests/89-case-2.bad.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/27-string-literal-1.bad.expected)
    (:result 01.pretty.tests/27-string-literal-1.bad.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/24-char-literal-4.bad.expected)
    (:result 01.pretty.tests/24-char-literal-4.bad.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/87-infix-application-4.good.expected)
    (:result 01.pretty.tests/87-infix-application-4.good.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/41-external-definition-1.bad.expected)
    (:result 01.pretty.tests/41-external-definition-1.bad.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/44-value-definition-1.good.expected)
    (:result 01.pretty.tests/44-value-definition-1.good.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/101-ref-3.good.expected)
    (:result 01.pretty.tests/101-ref-3.good.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/77-application-1.bad.expected)
    (:result 01.pretty.tests/77-application-1.bad.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/47-instanciation.good.expected)
    (:result 01.pretty.tests/47-instanciation.good.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/104-assignment.good.expected)
    (:result 01.pretty.tests/104-assignment.good.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/53-instanciation-7.bad.expected)
    (:result 01.pretty.tests/53-instanciation-7.bad.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/11-lexer-constr-id-3.bad.expected)
    (:result 01.pretty.tests/11-lexer-constr-id-3.bad.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/92-case-5.bad.expected)
    (:result 01.pretty.tests/92-case-5.bad.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/113-deref-3.bad.expected)
    (:result 01.pretty.tests/113-deref-3.bad.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/19-int-literal-5.bad.expected)
    (:result 01.pretty.tests/19-int-literal-5.bad.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/114-while-1.bad.expected)
    (:result 01.pretty.tests/114-while-1.bad.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/999-slam.good.expected)
    (:result 01.pretty.tests/999-slam.good.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/82-application-6.good.expected)
    (:result 01.pretty.tests/82-application-6.good.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/116-for-1.good.expected)
    (:result 01.pretty.tests/116-for-1.good.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/66-sequence-2.bad.expected)
    (:result 01.pretty.tests/66-sequence-2.bad.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/06-lexer-var-id-1.good.expected)
    (:result 01.pretty.tests/06-lexer-var-id-1.good.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/12-lexer-label-id-1.good.expected)
    (:result 01.pretty.tests/12-lexer-label-id-1.good.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/80-application-4.good.expected)
    (:result 01.pretty.tests/80-application-4.good.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/28-string-literal-2.good.expected)
    (:result 01.pretty.tests/28-string-literal-2.good.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/61-record-projection-1.good.expected)
    (:result 01.pretty.tests/61-record-projection-1.good.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/08-lexer-all-id-1.good.expected)
    (:result 01.pretty.tests/08-lexer-all-id-1.good.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/105-assignment-2.good.expected)
    (:result 01.pretty.tests/105-assignment-2.good.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/43-external-definition-3.bad.expected)
    (:result 01.pretty.tests/43-external-definition-3.bad.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/79-application-3.good.expected)
    (:result 01.pretty.tests/79-application-3.good.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/112-deref-2.bad.expected)
    (:result 01.pretty.tests/112-deref-2.bad.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/46-value-definition-3.bad.expected)
    (:result 01.pretty.tests/46-value-definition-3.bad.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/58-record-1.bad.expected)
    (:result 01.pretty.tests/58-record-1.bad.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/78-application-2.bad.expected)
    (:result 01.pretty.tests/78-application-2.bad.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/61-record-projection-1.bad.expected)
    (:result 01.pretty.tests/61-record-projection-1.bad.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/55-constructor-2.bad.expected)
    (:result 01.pretty.tests/55-constructor-2.bad.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/25-char-literal-5.bad.expected)
    (:result 01.pretty.tests/25-char-literal-5.bad.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/117-for-2.bad.expected)
    (:result 01.pretty.tests/117-for-2.bad.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/10-lexer-constr-id-2.bad.expected)
    (:result 01.pretty.tests/10-lexer-constr-id-2.bad.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/86-infix-application-3.good.expected)
    (:result 01.pretty.tests/86-infix-application-3.good.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/107-assignment-4.good.expected)
    (:result 01.pretty.tests/107-assignment-4.good.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/104-assignment.bad.expected)
    (:result 01.pretty.tests/104-assignment.bad.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/118-do-while-1.good.expected)
    (:result 01.pretty.tests/118-do-while-1.good.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/39-type-definition-record-2.good.expected)
    (:result 01.pretty.tests/39-type-definition-record-2.good.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/65-sequence-1.good.expected)
    (:result 01.pretty.tests/65-sequence-1.good.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/15-int-literal-1.good.expected)
    (:result 01.pretty.tests/15-int-literal-1.good.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/67-sequence-3.good.expected)
    (:result 01.pretty.tests/67-sequence-3.good.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/115-while-2.good.expected)
    (:result 01.pretty.tests/115-while-2.good.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/107-assignment-4.bad.expected)
    (:result 01.pretty.tests/107-assignment-4.bad.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/99-ref-1.good.expected)
    (:result 01.pretty.tests/99-ref-1.good.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/26-char-literal-6.bad.expected)
    (:result 01.pretty.tests/26-char-literal-6.bad.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/76-lambda-4.good.expected)
    (:result 01.pretty.tests/76-lambda-4.good.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/33-type-definition-sum-3.good.expected)
    (:result 01.pretty.tests/33-type-definition-sum-3.good.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/12-lexer-label-id-2.good.expected)
    (:result 01.pretty.tests/12-lexer-label-id-2.good.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/116-for-1.bad.expected)
    (:result 01.pretty.tests/116-for-1.bad.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/88-case-1.good.expected)
    (:result 01.pretty.tests/88-case-1.good.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/96-if-then-else.bad.expected)
    (:result 01.pretty.tests/96-if-then-else.bad.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/07-lexer-var-id-2.bad.expected)
    (:result 01.pretty.tests/07-lexer-var-id-2.bad.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/96-if-then-else.good.expected)
    (:result 01.pretty.tests/96-if-then-else.good.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/18-int-literal-4.bad.expected)
    (:result 01.pretty.tests/18-int-literal-4.bad.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/20-int-literal-6.good.expected)
    (:result 01.pretty.tests/20-int-literal-6.good.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/01-constructor-application.bad.expected)
    (:result 01.pretty.tests/01-constructor-application.bad.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/118-do-while-1.bad.expected)
    (:result 01.pretty.tests/118-do-while-1.bad.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/53-instanciation-7.good.expected)
    (:result 01.pretty.tests/53-instanciation-7.good.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/63-record-projection-3.bad.expected)
    (:result 01.pretty.tests/63-record-projection-3.bad.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/95-case-8.bad.expected)
    (:result 01.pretty.tests/95-case-8.bad.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/111-deref-1.bad.expected)
    (:result 01.pretty.tests/111-deref-1.bad.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/70-local-definition-3.bad.expected)
    (:result 01.pretty.tests/70-local-definition-3.bad.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/75-lambda-3.good.expected)
    (:result 01.pretty.tests/75-lambda-3.good.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/87-infix-application-4.bad.expected)
    (:result 01.pretty.tests/87-infix-application-4.bad.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/85-infix-application-2.bad.expected)
    (:result 01.pretty.tests/85-infix-application-2.bad.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/65-sequence-1.bad.expected)
    (:result 01.pretty.tests/65-sequence-1.bad.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/90-case-3.good.expected)
    (:result 01.pretty.tests/90-case-3.good.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/83-application-7.good.expected)
    (:result 01.pretty.tests/83-application-7.good.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/81-application-5.bad.expected)
    (:result 01.pretty.tests/81-application-5.bad.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/34-type-definition-sum-4.good.expected)
    (:result 01.pretty.tests/34-type-definition-sum-4.good.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/36-type-definition-sum-6.bad.expected)
    (:result 01.pretty.tests/36-type-definition-sum-6.bad.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/09-lexer-constr-id-1.bad.expected)
    (:result 01.pretty.tests/09-lexer-constr-id-1.bad.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/29-string-literal-3.bad.expected)
    (:result 01.pretty.tests/29-string-literal-3.bad.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/35-type-definition-sum-5.bad.expected)
    (:result 01.pretty.tests/35-type-definition-sum-5.bad.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/14-type-con-id-2.good.expected)
    (:result 01.pretty.tests/14-type-con-id-2.good.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/09-lexer-constr-id-1.good.expected)
    (:result 01.pretty.tests/09-lexer-constr-id-1.good.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/60-record-3.bad.expected)
    (:result 01.pretty.tests/60-record-3.bad.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/109-type-ascription-2.bad.expected)
    (:result 01.pretty.tests/109-type-ascription-2.bad.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/43-external-definition-3.good.expected)
    (:result 01.pretty.tests/43-external-definition-3.good.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/37-type-definition-sum-7.good.expected)
    (:result 01.pretty.tests/37-type-definition-sum-7.good.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/16-int-literal-2.bad.expected)
    (:result 01.pretty.tests/16-int-literal-2.bad.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/38-type-definition-record-1.good.expected)
    (:result 01.pretty.tests/38-type-definition-record-1.good.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/76-lambda-4.bad.expected)
    (:result 01.pretty.tests/76-lambda-4.bad.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/74-lambda-2.bad.expected)
    (:result 01.pretty.tests/74-lambda-2.bad.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/02-app2.bad.expected)
    (:result 01.pretty.tests/02-app2.bad.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/33-type-definition-sum-3.bad.expected)
    (:result 01.pretty.tests/33-type-definition-sum-3.bad.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/106-assignment-3.bad.expected)
    (:result 01.pretty.tests/106-assignment-3.bad.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/23-char-literal-3.bad.expected)
    (:result 01.pretty.tests/23-char-literal-3.bad.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/07-lexer-var-id-2.good.expected)
    (:result 01.pretty.tests/07-lexer-var-id-2.good.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/93-case-6.good.expected)
    (:result 01.pretty.tests/93-case-6.good.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/16-int-literal-2.good.expected)
    (:result 01.pretty.tests/16-int-literal-2.good.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/71-local-definition-4.bad.expected)
    (:result 01.pretty.tests/71-local-definition-4.bad.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/19-int-literal-5.good.expected)
    (:result 01.pretty.tests/19-int-literal-5.good.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/30-string-literal-4.bad.expected)
    (:result 01.pretty.tests/30-string-literal-4.bad.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/110-type-ascription-3.bad.expected)
    (:result 01.pretty.tests/110-type-ascription-3.bad.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/63-record-projection-3.good.expected)
    (:result 01.pretty.tests/63-record-projection-3.good.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/54-constructor-1.good.expected)
    (:result 01.pretty.tests/54-constructor-1.good.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/67-sequence-3.bad.expected)
    (:result 01.pretty.tests/67-sequence-3.bad.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/83-application-7.bad.expected)
    (:result 01.pretty.tests/83-application-7.bad.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/115-while-2.bad.expected)
    (:result 01.pretty.tests/115-while-2.bad.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/45-value-definition-2.good.expected)
    (:result 01.pretty.tests/45-value-definition-2.good.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/40-type-definition-record-3.bad.expected)
    (:result 01.pretty.tests/40-type-definition-record-3.bad.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/50-instanciation-4.good.expected)
    (:result 01.pretty.tests/50-instanciation-4.good.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/71-local-definition-4.good.expected)
    (:result 01.pretty.tests/71-local-definition-4.good.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/40-type-definition-record-3.good.expected)
    (:result 01.pretty.tests/40-type-definition-record-3.good.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/112-deref-2.good.expected)
    (:result 01.pretty.tests/112-deref-2.good.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/57-constructor-4.good.expected)
    (:result 01.pretty.tests/57-constructor-4.good.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/59-record-2.good.expected)
    (:result 01.pretty.tests/59-record-2.good.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/49-instanciation-3.good.expected)
    (:result 01.pretty.tests/49-instanciation-3.good.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/57-constructor-4.bad.expected)
    (:result 01.pretty.tests/57-constructor-4.bad.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/84-infix-application-1.good.expected)
    (:result 01.pretty.tests/84-infix-application-1.good.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/73-lambda-1.bad.expected)
    (:result 01.pretty.tests/73-lambda-1.bad.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/08-lexer-all-id-1.bad.expected)
    (:result 01.pretty.tests/08-lexer-all-id-1.bad.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/26-char-literal-6.good.expected)
    (:result 01.pretty.tests/26-char-literal-6.good.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/27-string-literal-1.good.expected)
    (:result 01.pretty.tests/27-string-literal-1.good.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/24-char-literal-4.good.expected)
    (:result 01.pretty.tests/24-char-literal-4.good.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/110-type-ascription-3.good.expected)
    (:result 01.pretty.tests/110-type-ascription-3.good.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/25-char-literal-5.good.expected)
    (:result 01.pretty.tests/25-char-literal-5.good.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/85-infix-application-2.good.expected)
    (:result 01.pretty.tests/85-infix-application-2.good.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/114-while-1.good.expected)
    (:result 01.pretty.tests/114-while-1.good.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/55-constructor-2.good.expected)
    (:result 01.pretty.tests/55-constructor-2.good.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/11-lexer-constr-id-3.good.expected)
    (:result 01.pretty.tests/11-lexer-constr-id-3.good.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/30-string-literal-4.good.expected)
    (:result 01.pretty.tests/30-string-literal-4.good.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/52-instanciation-6.good.expected)
    (:result 01.pretty.tests/52-instanciation-6.good.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/47-instanciation.bad.expected)
    (:result 01.pretty.tests/47-instanciation.bad.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/100-ref-2.good.expected)
    (:result 01.pretty.tests/100-ref-2.good.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/80-application-4.bad.expected)
    (:result 01.pretty.tests/80-application-4.bad.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/86-infix-application-3.bad.expected)
    (:result 01.pretty.tests/86-infix-application-3.bad.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/50-instanciation-4.bad.expected)
    (:result 01.pretty.tests/50-instanciation-4.bad.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/73-lambda-1.good.expected)
    (:result 01.pretty.tests/73-lambda-1.good.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/94-case-7.good.expected)
    (:result 01.pretty.tests/94-case-7.good.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/13-type-con-id-1.bad.expected)
    (:result 01.pretty.tests/13-type-con-id-1.bad.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/17-int-literal-3.bad.expected)
    (:result 01.pretty.tests/17-int-literal-3.bad.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/56-constructor-3.bad.expected)
    (:result 01.pretty.tests/56-constructor-3.bad.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/113-deref-3.good.expected)
    (:result 01.pretty.tests/113-deref-3.good.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/48-instanciation-2.bad.expected)
    (:result 01.pretty.tests/48-instanciation-2.bad.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/56-constructor-3.good.expected)
    (:result 01.pretty.tests/56-constructor-3.good.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/12-lexer-label-id-1.bad.expected)
    (:result 01.pretty.tests/12-lexer-label-id-1.bad.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/21-char-literal-1.bad.expected)
    (:result 01.pretty.tests/21-char-literal-1.bad.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/100-ref-2.bad.expected)
    (:result 01.pretty.tests/100-ref-2.bad.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/99-ref-1.bad.expected)
    (:result 01.pretty.tests/99-ref-1.bad.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/39-type-definition-record-2.bad.expected)
    (:result 01.pretty.tests/39-type-definition-record-2.bad.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/41-external-definition-1.good.expected)
    (:result 01.pretty.tests/41-external-definition-1.good.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/34-type-definition-sum-4.bad.expected)
    (:result 01.pretty.tests/34-type-definition-sum-4.bad.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/88-case-1.bad.expected)
    (:result 01.pretty.tests/88-case-1.bad.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/29-string-literal-3.good.expected)
    (:result 01.pretty.tests/29-string-literal-3.good.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/66-sequence-2.good.expected)
    (:result 01.pretty.tests/66-sequence-2.good.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/103-ref-5.bad.expected)
    (:result 01.pretty.tests/103-ref-5.bad.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/04-app2-3.bad.expected)
    (:result 01.pretty.tests/04-app2-3.bad.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/82-application-6.bad.expected)
    (:result 01.pretty.tests/82-application-6.bad.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/35-type-definition-sum-5.good.expected)
    (:result 01.pretty.tests/35-type-definition-sum-5.good.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/22-char-literal-2.bad.expected)
    (:result 01.pretty.tests/22-char-literal-2.bad.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/62-record-projection-2.bad.expected)
    (:result 01.pretty.tests/62-record-projection-2.bad.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/05-app3.bad.expected)
    (:result 01.pretty.tests/05-app3.bad.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/97-if-then-else-2.bad.expected)
    (:result 01.pretty.tests/97-if-then-else-2.bad.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/06-lexer-var-id-1.bad.expected)
    (:result 01.pretty.tests/06-lexer-var-id-1.bad.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/94-case-7.bad.expected)
    (:result 01.pretty.tests/94-case-7.bad.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/72-local-definition-5.bad.expected)
    (:result 01.pretty.tests/72-local-definition-5.bad.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/37-type-definition-sum-7.bad.expected)
    (:result 01.pretty.tests/37-type-definition-sum-7.bad.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/01-constructor-application.good.expected)
    (:result 01.pretty.tests/01-constructor-application.good.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/91-case-4.good.expected)
    (:result 01.pretty.tests/91-case-4.good.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/74-lambda-2.good.expected)
    (:result 01.pretty.tests/74-lambda-2.good.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/103-ref-5.good.expected)
    (:result 01.pretty.tests/103-ref-5.good.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/28-string-literal-2.bad.expected)
    (:result 01.pretty.tests/28-string-literal-2.bad.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/42-external-definition-2.good.expected)
    (:result 01.pretty.tests/42-external-definition-2.good.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/36-type-definition-sum-6.good.expected)
    (:result 01.pretty.tests/36-type-definition-sum-6.good.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/93-case-6.bad.expected)
    (:result 01.pretty.tests/93-case-6.bad.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/52-instanciation-6.bad.expected)
    (:result 01.pretty.tests/52-instanciation-6.bad.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/32-type-definition-sum-2.bad.expected)
    (:result 01.pretty.tests/32-type-definition-sum-2.bad.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/98-if-then-else-4.bad.expected)
    (:result 01.pretty.tests/98-if-then-else-4.bad.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/108-type-ascription-1.good.expected)
    (:result 01.pretty.tests/108-type-ascription-1.good.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/98-if-then-else-3.bad.expected)
    (:result 01.pretty.tests/98-if-then-else-3.bad.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/10-lexer-constr-id-2.good.expected)
    (:result 01.pretty.tests/10-lexer-constr-id-2.good.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/78-application-2.good.expected)
    (:result 01.pretty.tests/78-application-2.good.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/03-app2-2.bad.expected)
    (:result 01.pretty.tests/03-app2-2.bad.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/54-constructor-1.bad.expected)
    (:result 01.pretty.tests/54-constructor-1.bad.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/15-int-literal-1.bad.expected)
    (:result 01.pretty.tests/15-int-literal-1.bad.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/92-case-5.good.expected)
    (:result 01.pretty.tests/92-case-5.good.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/58-record-1.good.expected)
    (:result 01.pretty.tests/58-record-1.good.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/81-application-5.good.expected)
    (:result 01.pretty.tests/81-application-5.good.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/31-type-definition-sum-1.bad.expected)
    (:result 01.pretty.tests/31-type-definition-sum-1.bad.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/77-application-1.good.expected)
    (:result 01.pretty.tests/77-application-1.good.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/20-int-literal-6.bad.expected)
    (:result 01.pretty.tests/20-int-literal-6.bad.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/84-infix-application-1.bad.expected)
    (:result 01.pretty.tests/84-infix-application-1.bad.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/48-instanciation-2.good.expected)
    (:result 01.pretty.tests/48-instanciation-2.good.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/31-type-definition-sum-1.good.expected)
    (:result 01.pretty.tests/31-type-definition-sum-1.good.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/45-value-definition-2.bad.expected)
    (:result 01.pretty.tests/45-value-definition-2.bad.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/21-char-literal-1.good.expected)
    (:result 01.pretty.tests/21-char-literal-1.good.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/119-do-while-2.good.expected)
    (:result 01.pretty.tests/119-do-while-2.good.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/79-application-3.bad.expected)
    (:result 01.pretty.tests/79-application-3.bad.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/91-case-4.bad.expected)
    (:result 01.pretty.tests/91-case-4.bad.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/69-local-definition-2.good.expected)
    (:result 01.pretty.tests/69-local-definition-2.good.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/117-for-2.good.expected)
    (:result 01.pretty.tests/117-for-2.good.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/23-char-literal-3.good.expected)
    (:result 01.pretty.tests/23-char-literal-3.good.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/22-char-literal-2.good.expected)
    (:result 01.pretty.tests/22-char-literal-2.good.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/51-instanciation-5.bad.expected)
    (:result 01.pretty.tests/51-instanciation-5.bad.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/119-do-while-2.bad.expected)
    (:result 01.pretty.tests/119-do-while-2.bad.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/106-assignment-3.good.expected)
    (:result 01.pretty.tests/106-assignment-3.good.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/90-case-3.bad.expected)
    (:result 01.pretty.tests/90-case-3.bad.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/102-ref-4.good.expected)
    (:result 01.pretty.tests/102-ref-4.good.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/62-record-projection-2.good.expected)
    (:result 01.pretty.tests/62-record-projection-2.good.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/105-assignment-2.bad.expected)
    (:result 01.pretty.tests/105-assignment-2.bad.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/13-type-con-id-1.good.expected)
    (:result 01.pretty.tests/13-type-con-id-1.good.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/68-local-definition.good.expected)
    (:result 01.pretty.tests/68-local-definition.good.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/49-instanciation-3.bad.expected)
    (:result 01.pretty.tests/49-instanciation-3.bad.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/32-type-definition-sum-2.good.expected)
    (:result 01.pretty.tests/32-type-definition-sum-2.good.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/59-record-2.bad.expected)
    (:result 01.pretty.tests/59-record-2.bad.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/44-value-definition-1.bad.expected)
    (:result 01.pretty.tests/44-value-definition-1.bad.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/38-type-definition-record-1.bad.expected)
    (:result 01.pretty.tests/38-type-definition-record-1.bad.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/12-lexer-label-id-2.bad.expected)
    (:result 01.pretty.tests/12-lexer-label-id-2.bad.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/108-type-ascription-1.bad.expected)
    (:result 01.pretty.tests/108-type-ascription-1.bad.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/89-case-2.good.expected)
    (:result 01.pretty.tests/89-case-2.good.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/101-ref-3.bad.expected)
    (:result 01.pretty.tests/101-ref-3.bad.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/109-type-ascription-2.good.expected)
    (:result 01.pretty.tests/109-type-ascription-2.good.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/68-local-definition.bad.expected)
    (:result 01.pretty.tests/68-local-definition.bad.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/98-if-then-else-3.good.expected)
    (:result 01.pretty.tests/98-if-then-else-3.good.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/69-local-definition-2.bad.expected)
    (:result 01.pretty.tests/69-local-definition-2.bad.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/18-int-literal-4.good.expected)
    (:result 01.pretty.tests/18-int-literal-4.good.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/95-case-8.good.expected)
    (:result 01.pretty.tests/95-case-8.good.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/17-int-literal-3.good.expected)
    (:result 01.pretty.tests/17-int-literal-3.good.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/97-if-then-else-2.good.expected)
    (:result 01.pretty.tests/97-if-then-else-2.good.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/51-instanciation-5.good.expected)
    (:result 01.pretty.tests/51-instanciation-5.good.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/60-record-3.good.expected)
    (:result 01.pretty.tests/60-record-3.good.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/102-ref-4.bad.expected)
    (:result 01.pretty.tests/102-ref-4.bad.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/111-deref-1.good.expected)
    (:result 01.pretty.tests/111-deref-1.good.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/42-external-definition-2.bad.expected)
    (:result 01.pretty.tests/42-external-definition-2.bad.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/75-lambda-3.bad.expected)
    (:result 01.pretty.tests/75-lambda-3.bad.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/70-local-definition-3.good.expected)
    (:result 01.pretty.tests/70-local-definition-3.good.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/98-if-then-else-4.good.expected)
    (:result 01.pretty.tests/98-if-then-else-4.good.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/72-local-definition-5.good.expected)
    (:result 01.pretty.tests/72-local-definition-5.good.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/14-type-con-id-2.bad.expected)
    (:result 01.pretty.tests/14-type-con-id-2.bad.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/46-value-definition-3.good.expected)
    (:result 01.pretty.tests/46-value-definition-3.good.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/89-case-2.bad.expected)
    (:result 01.pretty.tests/89-case-2.bad.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/27-string-literal-1.bad.expected)
    (:result 01.pretty.tests/27-string-literal-1.bad.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/24-char-literal-4.bad.expected)
    (:result 01.pretty.tests/24-char-literal-4.bad.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/87-infix-application-4.good.expected)
    (:result 01.pretty.tests/87-infix-application-4.good.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/41-external-definition-1.bad.expected)
    (:result 01.pretty.tests/41-external-definition-1.bad.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/44-value-definition-1.good.expected)
    (:result 01.pretty.tests/44-value-definition-1.good.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/101-ref-3.good.expected)
    (:result 01.pretty.tests/101-ref-3.good.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/77-application-1.bad.expected)
    (:result 01.pretty.tests/77-application-1.bad.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/47-instanciation.good.expected)
    (:result 01.pretty.tests/47-instanciation.good.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/104-assignment.good.expected)
    (:result 01.pretty.tests/104-assignment.good.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/53-instanciation-7.bad.expected)
    (:result 01.pretty.tests/53-instanciation-7.bad.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/11-lexer-constr-id-3.bad.expected)
    (:result 01.pretty.tests/11-lexer-constr-id-3.bad.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/92-case-5.bad.expected)
    (:result 01.pretty.tests/92-case-5.bad.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/113-deref-3.bad.expected)
    (:result 01.pretty.tests/113-deref-3.bad.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/19-int-literal-5.bad.expected)
    (:result 01.pretty.tests/19-int-literal-5.bad.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/114-while-1.bad.expected)
    (:result 01.pretty.tests/114-while-1.bad.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/999-slam.good.expected)
    (:result 01.pretty.tests/999-slam.good.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/82-application-6.good.expected)
    (:result 01.pretty.tests/82-application-6.good.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/116-for-1.good.expected)
    (:result 01.pretty.tests/116-for-1.good.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/66-sequence-2.bad.expected)
    (:result 01.pretty.tests/66-sequence-2.bad.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/06-lexer-var-id-1.good.expected)
    (:result 01.pretty.tests/06-lexer-var-id-1.good.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/12-lexer-label-id-1.good.expected)
    (:result 01.pretty.tests/12-lexer-label-id-1.good.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/80-application-4.good.expected)
    (:result 01.pretty.tests/80-application-4.good.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/28-string-literal-2.good.expected)
    (:result 01.pretty.tests/28-string-literal-2.good.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/61-record-projection-1.good.expected)
    (:result 01.pretty.tests/61-record-projection-1.good.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/08-lexer-all-id-1.good.expected)
    (:result 01.pretty.tests/08-lexer-all-id-1.good.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/105-assignment-2.good.expected)
    (:result 01.pretty.tests/105-assignment-2.good.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/43-external-definition-3.bad.expected)
    (:result 01.pretty.tests/43-external-definition-3.bad.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/79-application-3.good.expected)
    (:result 01.pretty.tests/79-application-3.good.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/112-deref-2.bad.expected)
    (:result 01.pretty.tests/112-deref-2.bad.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/46-value-definition-3.bad.expected)
    (:result 01.pretty.tests/46-value-definition-3.bad.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/58-record-1.bad.expected)
    (:result 01.pretty.tests/58-record-1.bad.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/78-application-2.bad.expected)
    (:result 01.pretty.tests/78-application-2.bad.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/61-record-projection-1.bad.expected)
    (:result 01.pretty.tests/61-record-projection-1.bad.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/55-constructor-2.bad.expected)
    (:result 01.pretty.tests/55-constructor-2.bad.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/25-char-literal-5.bad.expected)
    (:result 01.pretty.tests/25-char-literal-5.bad.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/117-for-2.bad.expected)
    (:result 01.pretty.tests/117-for-2.bad.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/10-lexer-constr-id-2.bad.expected)
    (:result 01.pretty.tests/10-lexer-constr-id-2.bad.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/86-infix-application-3.good.expected)
    (:result 01.pretty.tests/86-infix-application-3.good.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/107-assignment-4.good.expected)
    (:result 01.pretty.tests/107-assignment-4.good.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/104-assignment.bad.expected)
    (:result 01.pretty.tests/104-assignment.bad.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/118-do-while-1.good.expected)
    (:result 01.pretty.tests/118-do-while-1.good.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/39-type-definition-record-2.good.expected)
    (:result 01.pretty.tests/39-type-definition-record-2.good.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/65-sequence-1.good.expected)
    (:result 01.pretty.tests/65-sequence-1.good.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/15-int-literal-1.good.expected)
    (:result 01.pretty.tests/15-int-literal-1.good.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/67-sequence-3.good.expected)
    (:result 01.pretty.tests/67-sequence-3.good.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/115-while-2.good.expected)
    (:result 01.pretty.tests/115-while-2.good.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/107-assignment-4.bad.expected)
    (:result 01.pretty.tests/107-assignment-4.bad.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/99-ref-1.good.expected)
    (:result 01.pretty.tests/99-ref-1.good.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/26-char-literal-6.bad.expected)
    (:result 01.pretty.tests/26-char-literal-6.bad.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/76-lambda-4.good.expected)
    (:result 01.pretty.tests/76-lambda-4.good.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/33-type-definition-sum-3.good.expected)
    (:result 01.pretty.tests/33-type-definition-sum-3.good.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/12-lexer-label-id-2.good.expected)
    (:result 01.pretty.tests/12-lexer-label-id-2.good.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/116-for-1.bad.expected)
    (:result 01.pretty.tests/116-for-1.bad.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/88-case-1.good.expected)
    (:result 01.pretty.tests/88-case-1.good.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/96-if-then-else.bad.expected)
    (:result 01.pretty.tests/96-if-then-else.bad.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/07-lexer-var-id-2.bad.expected)
    (:result 01.pretty.tests/07-lexer-var-id-2.bad.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/96-if-then-else.good.expected)
    (:result 01.pretty.tests/96-if-then-else.good.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/18-int-literal-4.bad.expected)
    (:result 01.pretty.tests/18-int-literal-4.bad.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/20-int-literal-6.good.expected)
    (:result 01.pretty.tests/20-int-literal-6.good.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/01-constructor-application.bad.expected)
    (:result 01.pretty.tests/01-constructor-application.bad.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/118-do-while-1.bad.expected)
    (:result 01.pretty.tests/118-do-while-1.bad.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/53-instanciation-7.good.expected)
    (:result 01.pretty.tests/53-instanciation-7.good.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/63-record-projection-3.bad.expected)
    (:result 01.pretty.tests/63-record-projection-3.bad.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/95-case-8.bad.expected)
    (:result 01.pretty.tests/95-case-8.bad.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/111-deref-1.bad.expected)
    (:result 01.pretty.tests/111-deref-1.bad.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/70-local-definition-3.bad.expected)
    (:result 01.pretty.tests/70-local-definition-3.bad.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/75-lambda-3.good.expected)
    (:result 01.pretty.tests/75-lambda-3.good.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/87-infix-application-4.bad.expected)
    (:result 01.pretty.tests/87-infix-application-4.bad.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/85-infix-application-2.bad.expected)
    (:result 01.pretty.tests/85-infix-application-2.bad.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/65-sequence-1.bad.expected)
    (:result 01.pretty.tests/65-sequence-1.bad.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/90-case-3.good.expected)
    (:result 01.pretty.tests/90-case-3.good.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/83-application-7.good.expected)
    (:result 01.pretty.tests/83-application-7.good.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/81-application-5.bad.expected)
    (:result 01.pretty.tests/81-application-5.bad.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/34-type-definition-sum-4.good.expected)
    (:result 01.pretty.tests/34-type-definition-sum-4.good.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/36-type-definition-sum-6.bad.expected)
    (:result 01.pretty.tests/36-type-definition-sum-6.bad.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/09-lexer-constr-id-1.bad.expected)
    (:result 01.pretty.tests/09-lexer-constr-id-1.bad.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/29-string-literal-3.bad.expected)
    (:result 01.pretty.tests/29-string-literal-3.bad.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/35-type-definition-sum-5.bad.expected)
    (:result 01.pretty.tests/35-type-definition-sum-5.bad.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/14-type-con-id-2.good.expected)
    (:result 01.pretty.tests/14-type-con-id-2.good.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/09-lexer-constr-id-1.good.expected)
    (:result 01.pretty.tests/09-lexer-constr-id-1.good.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/60-record-3.bad.expected)
    (:result 01.pretty.tests/60-record-3.bad.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/109-type-ascription-2.bad.expected)
    (:result 01.pretty.tests/109-type-ascription-2.bad.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/43-external-definition-3.good.expected)
    (:result 01.pretty.tests/43-external-definition-3.good.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/37-type-definition-sum-7.good.expected)
    (:result 01.pretty.tests/37-type-definition-sum-7.good.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/16-int-literal-2.bad.expected)
    (:result 01.pretty.tests/16-int-literal-2.bad.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/38-type-definition-record-1.good.expected)
    (:result 01.pretty.tests/38-type-definition-record-1.good.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/76-lambda-4.bad.expected)
    (:result 01.pretty.tests/76-lambda-4.bad.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/74-lambda-2.bad.expected)
    (:result 01.pretty.tests/74-lambda-2.bad.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/02-app2.bad.expected)
    (:result 01.pretty.tests/02-app2.bad.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/33-type-definition-sum-3.bad.expected)
    (:result 01.pretty.tests/33-type-definition-sum-3.bad.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/106-assignment-3.bad.expected)
    (:result 01.pretty.tests/106-assignment-3.bad.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/23-char-literal-3.bad.expected)
    (:result 01.pretty.tests/23-char-literal-3.bad.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/07-lexer-var-id-2.good.expected)
    (:result 01.pretty.tests/07-lexer-var-id-2.good.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/93-case-6.good.expected)
    (:result 01.pretty.tests/93-case-6.good.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/16-int-literal-2.good.expected)
    (:result 01.pretty.tests/16-int-literal-2.good.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/71-local-definition-4.bad.expected)
    (:result 01.pretty.tests/71-local-definition-4.bad.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/19-int-literal-5.good.expected)
    (:result 01.pretty.tests/19-int-literal-5.good.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/30-string-literal-4.bad.expected)
    (:result 01.pretty.tests/30-string-literal-4.bad.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/110-type-ascription-3.bad.expected)
    (:result 01.pretty.tests/110-type-ascription-3.bad.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/63-record-projection-3.good.expected)
    (:result 01.pretty.tests/63-record-projection-3.good.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/54-constructor-1.good.expected)
    (:result 01.pretty.tests/54-constructor-1.good.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/67-sequence-3.bad.expected)
    (:result 01.pretty.tests/67-sequence-3.bad.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/83-application-7.bad.expected)
    (:result 01.pretty.tests/83-application-7.bad.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/115-while-2.bad.expected)
    (:result 01.pretty.tests/115-while-2.bad.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/45-value-definition-2.good.expected)
    (:result 01.pretty.tests/45-value-definition-2.good.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/40-type-definition-record-3.bad.expected)
    (:result 01.pretty.tests/40-type-definition-record-3.bad.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/50-instanciation-4.good.expected)
    (:result 01.pretty.tests/50-instanciation-4.good.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/71-local-definition-4.good.expected)
    (:result 01.pretty.tests/71-local-definition-4.good.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/40-type-definition-record-3.good.expected)
    (:result 01.pretty.tests/40-type-definition-record-3.good.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/112-deref-2.good.expected)
    (:result 01.pretty.tests/112-deref-2.good.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/57-constructor-4.good.expected)
    (:result 01.pretty.tests/57-constructor-4.good.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/59-record-2.good.expected)
    (:result 01.pretty.tests/59-record-2.good.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/49-instanciation-3.good.expected)
    (:result 01.pretty.tests/49-instanciation-3.good.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/57-constructor-4.bad.expected)
    (:result 01.pretty.tests/57-constructor-4.bad.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/84-infix-application-1.good.expected)
    (:result 01.pretty.tests/84-infix-application-1.good.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/73-lambda-1.bad.expected)
    (:result 01.pretty.tests/73-lambda-1.bad.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/08-lexer-all-id-1.bad.expected)
    (:result 01.pretty.tests/08-lexer-all-id-1.bad.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/26-char-literal-6.good.expected)
    (:result 01.pretty.tests/26-char-literal-6.good.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/27-string-literal-1.good.expected)
    (:result 01.pretty.tests/27-string-literal-1.good.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/24-char-literal-4.good.expected)
    (:result 01.pretty.tests/24-char-literal-4.good.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/110-type-ascription-3.good.expected)
    (:result 01.pretty.tests/110-type-ascription-3.good.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/25-char-literal-5.good.expected)
    (:result 01.pretty.tests/25-char-literal-5.good.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/85-infix-application-2.good.expected)
    (:result 01.pretty.tests/85-infix-application-2.good.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/114-while-1.good.expected)
    (:result 01.pretty.tests/114-while-1.good.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/55-constructor-2.good.expected)
    (:result 01.pretty.tests/55-constructor-2.good.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/11-lexer-constr-id-3.good.expected)
    (:result 01.pretty.tests/11-lexer-constr-id-3.good.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/30-string-literal-4.good.expected)
    (:result 01.pretty.tests/30-string-literal-4.good.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/52-instanciation-6.good.expected)
    (:result 01.pretty.tests/52-instanciation-6.good.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/47-instanciation.bad.expected)
    (:result 01.pretty.tests/47-instanciation.bad.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/100-ref-2.good.expected)
    (:result 01.pretty.tests/100-ref-2.good.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/80-application-4.bad.expected)
    (:result 01.pretty.tests/80-application-4.bad.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/86-infix-application-3.bad.expected)
    (:result 01.pretty.tests/86-infix-application-3.bad.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/50-instanciation-4.bad.expected)
    (:result 01.pretty.tests/50-instanciation-4.bad.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/73-lambda-1.good.expected)
    (:result 01.pretty.tests/73-lambda-1.good.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/94-case-7.good.expected)
    (:result 01.pretty.tests/94-case-7.good.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/13-type-con-id-1.bad.expected)
    (:result 01.pretty.tests/13-type-con-id-1.bad.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/17-int-literal-3.bad.expected)
    (:result 01.pretty.tests/17-int-literal-3.bad.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/56-constructor-3.bad.expected)
    (:result 01.pretty.tests/56-constructor-3.bad.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/113-deref-3.good.expected)
    (:result 01.pretty.tests/113-deref-3.good.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/48-instanciation-2.bad.expected)
    (:result 01.pretty.tests/48-instanciation-2.bad.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/56-constructor-3.good.expected)
    (:result 01.pretty.tests/56-constructor-3.good.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/12-lexer-label-id-1.bad.expected)
    (:result 01.pretty.tests/12-lexer-label-id-1.bad.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/21-char-literal-1.bad.expected)
    (:result 01.pretty.tests/21-char-literal-1.bad.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/100-ref-2.bad.expected)
    (:result 01.pretty.tests/100-ref-2.bad.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/99-ref-1.bad.expected)
    (:result 01.pretty.tests/99-ref-1.bad.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/39-type-definition-record-2.bad.expected)
    (:result 01.pretty.tests/39-type-definition-record-2.bad.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/41-external-definition-1.good.expected)
    (:result 01.pretty.tests/41-external-definition-1.good.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/34-type-definition-sum-4.bad.expected)
    (:result 01.pretty.tests/34-type-definition-sum-4.bad.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/88-case-1.bad.expected)
    (:result 01.pretty.tests/88-case-1.bad.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/29-string-literal-3.good.expected)
    (:result 01.pretty.tests/29-string-literal-3.good.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/66-sequence-2.good.expected)
    (:result 01.pretty.tests/66-sequence-2.good.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/103-ref-5.bad.expected)
    (:result 01.pretty.tests/103-ref-5.bad.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/04-app2-3.bad.expected)
    (:result 01.pretty.tests/04-app2-3.bad.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/82-application-6.bad.expected)
    (:result 01.pretty.tests/82-application-6.bad.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/35-type-definition-sum-5.good.expected)
    (:result 01.pretty.tests/35-type-definition-sum-5.good.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/22-char-literal-2.bad.expected)
    (:result 01.pretty.tests/22-char-literal-2.bad.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/62-record-projection-2.bad.expected)
    (:result 01.pretty.tests/62-record-projection-2.bad.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/05-app3.bad.expected)
    (:result 01.pretty.tests/05-app3.bad.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/97-if-then-else-2.bad.expected)
    (:result 01.pretty.tests/97-if-then-else-2.bad.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/06-lexer-var-id-1.bad.expected)
    (:result 01.pretty.tests/06-lexer-var-id-1.bad.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/94-case-7.bad.expected)
    (:result 01.pretty.tests/94-case-7.bad.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/72-local-definition-5.bad.expected)
    (:result 01.pretty.tests/72-local-definition-5.bad.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/37-type-definition-sum-7.bad.expected)
    (:result 01.pretty.tests/37-type-definition-sum-7.bad.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/01-constructor-application.good.expected)
    (:result 01.pretty.tests/01-constructor-application.good.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/91-case-4.good.expected)
    (:result 01.pretty.tests/91-case-4.good.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/74-lambda-2.good.expected)
    (:result 01.pretty.tests/74-lambda-2.good.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/103-ref-5.good.expected)
    (:result 01.pretty.tests/103-ref-5.good.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/28-string-literal-2.bad.expected)
    (:result 01.pretty.tests/28-string-literal-2.bad.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/42-external-definition-2.good.expected)
    (:result 01.pretty.tests/42-external-definition-2.good.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/36-type-definition-sum-6.good.expected)
    (:result 01.pretty.tests/36-type-definition-sum-6.good.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/93-case-6.bad.expected)
    (:result 01.pretty.tests/93-case-6.bad.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/52-instanciation-6.bad.expected)
    (:result 01.pretty.tests/52-instanciation-6.bad.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/32-type-definition-sum-2.bad.expected)
    (:result 01.pretty.tests/32-type-definition-sum-2.bad.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/98-if-then-else-4.bad.expected)
    (:result 01.pretty.tests/98-if-then-else-4.bad.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/108-type-ascription-1.good.expected)
    (:result 01.pretty.tests/108-type-ascription-1.good.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/98-if-then-else-3.bad.expected)
    (:result 01.pretty.tests/98-if-then-else-3.bad.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/10-lexer-constr-id-2.good.expected)
    (:result 01.pretty.tests/10-lexer-constr-id-2.good.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/78-application-2.good.expected)
    (:result 01.pretty.tests/78-application-2.good.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/03-app2-2.bad.expected)
    (:result 01.pretty.tests/03-app2-2.bad.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/54-constructor-1.bad.expected)
    (:result 01.pretty.tests/54-constructor-1.bad.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/15-int-literal-1.bad.expected)
    (:result 01.pretty.tests/15-int-literal-1.bad.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/92-case-5.good.expected)
    (:result 01.pretty.tests/92-case-5.good.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/58-record-1.good.expected)
    (:result 01.pretty.tests/58-record-1.good.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/81-application-5.good.expected)
    (:result 01.pretty.tests/81-application-5.good.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/31-type-definition-sum-1.bad.expected)
    (:result 01.pretty.tests/31-type-definition-sum-1.bad.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/77-application-1.good.expected)
    (:result 01.pretty.tests/77-application-1.good.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/20-int-literal-6.bad.expected)
    (:result 01.pretty.tests/20-int-literal-6.bad.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/84-infix-application-1.bad.expected)
    (:result 01.pretty.tests/84-infix-application-1.bad.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/48-instanciation-2.good.expected)
    (:result 01.pretty.tests/48-instanciation-2.good.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/31-type-definition-sum-1.good.expected)
    (:result 01.pretty.tests/31-type-definition-sum-1.good.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/45-value-definition-2.bad.expected)
    (:result 01.pretty.tests/45-value-definition-2.bad.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/21-char-literal-1.good.expected)
    (:result 01.pretty.tests/21-char-literal-1.good.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/119-do-while-2.good.expected)
    (:result 01.pretty.tests/119-do-while-2.good.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/79-application-3.bad.expected)
    (:result 01.pretty.tests/79-application-3.bad.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/91-case-4.bad.expected)
    (:result 01.pretty.tests/91-case-4.bad.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/69-local-definition-2.good.expected)
    (:result 01.pretty.tests/69-local-definition-2.good.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/117-for-2.good.expected)
    (:result 01.pretty.tests/117-for-2.good.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/23-char-literal-3.good.expected)
    (:result 01.pretty.tests/23-char-literal-3.good.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/22-char-literal-2.good.expected)
    (:result 01.pretty.tests/22-char-literal-2.good.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/51-instanciation-5.bad.expected)
    (:result 01.pretty.tests/51-instanciation-5.bad.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/119-do-while-2.bad.expected)
    (:result 01.pretty.tests/119-do-while-2.bad.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/106-assignment-3.good.expected)
    (:result 01.pretty.tests/106-assignment-3.good.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/90-case-3.bad.expected)
    (:result 01.pretty.tests/90-case-3.bad.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/102-ref-4.good.expected)
    (:result 01.pretty.tests/102-ref-4.good.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/62-record-projection-2.good.expected)
    (:result 01.pretty.tests/62-record-projection-2.good.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/105-assignment-2.bad.expected)
    (:result 01.pretty.tests/105-assignment-2.bad.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/13-type-con-id-1.good.expected)
    (:result 01.pretty.tests/13-type-con-id-1.good.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/68-local-definition.good.expected)
    (:result 01.pretty.tests/68-local-definition.good.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/49-instanciation-3.bad.expected)
    (:result 01.pretty.tests/49-instanciation-3.bad.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/32-type-definition-sum-2.good.expected)
    (:result 01.pretty.tests/32-type-definition-sum-2.good.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/59-record-2.bad.expected)
    (:result 01.pretty.tests/59-record-2.bad.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/44-value-definition-1.bad.expected)
    (:result 01.pretty.tests/44-value-definition-1.bad.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/38-type-definition-record-1.bad.expected)
    (:result 01.pretty.tests/38-type-definition-record-1.bad.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/12-lexer-label-id-2.bad.expected)
    (:result 01.pretty.tests/12-lexer-label-id-2.bad.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/108-type-ascription-1.bad.expected)
    (:result 01.pretty.tests/108-type-ascription-1.bad.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/89-case-2.good.expected)
    (:result 01.pretty.tests/89-case-2.good.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/101-ref-3.bad.expected)
    (:result 01.pretty.tests/101-ref-3.bad.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/109-type-ascription-2.good.expected)
    (:result 01.pretty.tests/109-type-ascription-2.good.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/68-local-definition.bad.expected)
    (:result 01.pretty.tests/68-local-definition.bad.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/98-if-then-else-3.good.expected)
    (:result 01.pretty.tests/98-if-then-else-3.good.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/69-local-definition-2.bad.expected)
    (:result 01.pretty.tests/69-local-definition-2.bad.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/18-int-literal-4.good.expected)
    (:result 01.pretty.tests/18-int-literal-4.good.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/95-case-8.good.expected)
    (:result 01.pretty.tests/95-case-8.good.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/17-int-literal-3.good.expected)
    (:result 01.pretty.tests/17-int-literal-3.good.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/97-if-then-else-2.good.expected)
    (:result 01.pretty.tests/97-if-then-else-2.good.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/51-instanciation-5.good.expected)
    (:result 01.pretty.tests/51-instanciation-5.good.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/60-record-3.good.expected)
    (:result 01.pretty.tests/60-record-3.good.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/102-ref-4.bad.expected)
    (:result 01.pretty.tests/102-ref-4.bad.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/111-deref-1.good.expected)
    (:result 01.pretty.tests/111-deref-1.good.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/42-external-definition-2.bad.expected)
    (:result 01.pretty.tests/42-external-definition-2.bad.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/75-lambda-3.bad.expected)
    (:result 01.pretty.tests/75-lambda-3.bad.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/70-local-definition-3.good.expected)
    (:result 01.pretty.tests/70-local-definition-3.good.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/98-if-then-else-4.good.expected)
    (:result 01.pretty.tests/98-if-then-else-4.good.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/72-local-definition-5.good.expected)
    (:result 01.pretty.tests/72-local-definition-5.good.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/14-type-con-id-2.bad.expected)
    (:result 01.pretty.tests/14-type-con-id-2.bad.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/46-value-definition-3.good.expected)
    (:result 01.pretty.tests/46-value-definition-3.good.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/89-case-2.bad.expected)
    (:result 01.pretty.tests/89-case-2.bad.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/27-string-literal-1.bad.expected)
    (:result 01.pretty.tests/27-string-literal-1.bad.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/24-char-literal-4.bad.expected)
    (:result 01.pretty.tests/24-char-literal-4.bad.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/87-infix-application-4.good.expected)
    (:result 01.pretty.tests/87-infix-application-4.good.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/41-external-definition-1.bad.expected)
    (:result 01.pretty.tests/41-external-definition-1.bad.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/44-value-definition-1.good.expected)
    (:result 01.pretty.tests/44-value-definition-1.good.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/101-ref-3.good.expected)
    (:result 01.pretty.tests/101-ref-3.good.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/77-application-1.bad.expected)
    (:result 01.pretty.tests/77-application-1.bad.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/47-instanciation.good.expected)
    (:result 01.pretty.tests/47-instanciation.good.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/104-assignment.good.expected)
    (:result 01.pretty.tests/104-assignment.good.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/53-instanciation-7.bad.expected)
    (:result 01.pretty.tests/53-instanciation-7.bad.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/11-lexer-constr-id-3.bad.expected)
    (:result 01.pretty.tests/11-lexer-constr-id-3.bad.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/92-case-5.bad.expected)
    (:result 01.pretty.tests/92-case-5.bad.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/113-deref-3.bad.expected)
    (:result 01.pretty.tests/113-deref-3.bad.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/19-int-literal-5.bad.expected)
    (:result 01.pretty.tests/19-int-literal-5.bad.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/114-while-1.bad.expected)
    (:result 01.pretty.tests/114-while-1.bad.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/999-slam.good.expected)
    (:result 01.pretty.tests/999-slam.good.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/82-application-6.good.expected)
    (:result 01.pretty.tests/82-application-6.good.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/116-for-1.good.expected)
    (:result 01.pretty.tests/116-for-1.good.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/66-sequence-2.bad.expected)
    (:result 01.pretty.tests/66-sequence-2.bad.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/06-lexer-var-id-1.good.expected)
    (:result 01.pretty.tests/06-lexer-var-id-1.good.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/12-lexer-label-id-1.good.expected)
    (:result 01.pretty.tests/12-lexer-label-id-1.good.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/80-application-4.good.expected)
    (:result 01.pretty.tests/80-application-4.good.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/28-string-literal-2.good.expected)
    (:result 01.pretty.tests/28-string-literal-2.good.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/61-record-projection-1.good.expected)
    (:result 01.pretty.tests/61-record-projection-1.good.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/08-lexer-all-id-1.good.expected)
    (:result 01.pretty.tests/08-lexer-all-id-1.good.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/105-assignment-2.good.expected)
    (:result 01.pretty.tests/105-assignment-2.good.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/43-external-definition-3.bad.expected)
    (:result 01.pretty.tests/43-external-definition-3.bad.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/79-application-3.good.expected)
    (:result 01.pretty.tests/79-application-3.good.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/112-deref-2.bad.expected)
    (:result 01.pretty.tests/112-deref-2.bad.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/46-value-definition-3.bad.expected)
    (:result 01.pretty.tests/46-value-definition-3.bad.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/58-record-1.bad.expected)
    (:result 01.pretty.tests/58-record-1.bad.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/78-application-2.bad.expected)
    (:result 01.pretty.tests/78-application-2.bad.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/61-record-projection-1.bad.expected)
    (:result 01.pretty.tests/61-record-projection-1.bad.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/55-constructor-2.bad.expected)
    (:result 01.pretty.tests/55-constructor-2.bad.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/25-char-literal-5.bad.expected)
    (:result 01.pretty.tests/25-char-literal-5.bad.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/117-for-2.bad.expected)
    (:result 01.pretty.tests/117-for-2.bad.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/10-lexer-constr-id-2.bad.expected)
    (:result 01.pretty.tests/10-lexer-constr-id-2.bad.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/86-infix-application-3.good.expected)
    (:result 01.pretty.tests/86-infix-application-3.good.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/107-assignment-4.good.expected)
    (:result 01.pretty.tests/107-assignment-4.good.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/104-assignment.bad.expected)
    (:result 01.pretty.tests/104-assignment.bad.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/118-do-while-1.good.expected)
    (:result 01.pretty.tests/118-do-while-1.good.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/39-type-definition-record-2.good.expected)
    (:result 01.pretty.tests/39-type-definition-record-2.good.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/65-sequence-1.good.expected)
    (:result 01.pretty.tests/65-sequence-1.good.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/15-int-literal-1.good.expected)
    (:result 01.pretty.tests/15-int-literal-1.good.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/67-sequence-3.good.expected)
    (:result 01.pretty.tests/67-sequence-3.good.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/115-while-2.good.expected)
    (:result 01.pretty.tests/115-while-2.good.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/107-assignment-4.bad.expected)
    (:result 01.pretty.tests/107-assignment-4.bad.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/99-ref-1.good.expected)
    (:result 01.pretty.tests/99-ref-1.good.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/26-char-literal-6.bad.expected)
    (:result 01.pretty.tests/26-char-literal-6.bad.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/76-lambda-4.good.expected)
    (:result 01.pretty.tests/76-lambda-4.good.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/33-type-definition-sum-3.good.expected)
    (:result 01.pretty.tests/33-type-definition-sum-3.good.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/12-lexer-label-id-2.good.expected)
    (:result 01.pretty.tests/12-lexer-label-id-2.good.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/116-for-1.bad.expected)
    (:result 01.pretty.tests/116-for-1.bad.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/88-case-1.good.expected)
    (:result 01.pretty.tests/88-case-1.good.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/96-if-then-else.bad.expected)
    (:result 01.pretty.tests/96-if-then-else.bad.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/07-lexer-var-id-2.bad.expected)
    (:result 01.pretty.tests/07-lexer-var-id-2.bad.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/96-if-then-else.good.expected)
    (:result 01.pretty.tests/96-if-then-else.good.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/18-int-literal-4.bad.expected)
    (:result 01.pretty.tests/18-int-literal-4.bad.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/20-int-literal-6.good.expected)
    (:result 01.pretty.tests/20-int-literal-6.good.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/01-constructor-application.bad.expected)
    (:result 01.pretty.tests/01-constructor-application.bad.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/118-do-while-1.bad.expected)
    (:result 01.pretty.tests/118-do-while-1.bad.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/53-instanciation-7.good.expected)
    (:result 01.pretty.tests/53-instanciation-7.good.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/63-record-projection-3.bad.expected)
    (:result 01.pretty.tests/63-record-projection-3.bad.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/95-case-8.bad.expected)
    (:result 01.pretty.tests/95-case-8.bad.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/111-deref-1.bad.expected)
    (:result 01.pretty.tests/111-deref-1.bad.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/70-local-definition-3.bad.expected)
    (:result 01.pretty.tests/70-local-definition-3.bad.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/75-lambda-3.good.expected)
    (:result 01.pretty.tests/75-lambda-3.good.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/87-infix-application-4.bad.expected)
    (:result 01.pretty.tests/87-infix-application-4.bad.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/85-infix-application-2.bad.expected)
    (:result 01.pretty.tests/85-infix-application-2.bad.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/65-sequence-1.bad.expected)
    (:result 01.pretty.tests/65-sequence-1.bad.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/90-case-3.good.expected)
    (:result 01.pretty.tests/90-case-3.good.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/83-application-7.good.expected)
    (:result 01.pretty.tests/83-application-7.good.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/81-application-5.bad.expected)
    (:result 01.pretty.tests/81-application-5.bad.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/34-type-definition-sum-4.good.expected)
    (:result 01.pretty.tests/34-type-definition-sum-4.good.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/36-type-definition-sum-6.bad.expected)
    (:result 01.pretty.tests/36-type-definition-sum-6.bad.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/09-lexer-constr-id-1.bad.expected)
    (:result 01.pretty.tests/09-lexer-constr-id-1.bad.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/29-string-literal-3.bad.expected)
    (:result 01.pretty.tests/29-string-literal-3.bad.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/35-type-definition-sum-5.bad.expected)
    (:result 01.pretty.tests/35-type-definition-sum-5.bad.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/14-type-con-id-2.good.expected)
    (:result 01.pretty.tests/14-type-con-id-2.good.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/09-lexer-constr-id-1.good.expected)
    (:result 01.pretty.tests/09-lexer-constr-id-1.good.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/60-record-3.bad.expected)
    (:result 01.pretty.tests/60-record-3.bad.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/109-type-ascription-2.bad.expected)
    (:result 01.pretty.tests/109-type-ascription-2.bad.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/43-external-definition-3.good.expected)
    (:result 01.pretty.tests/43-external-definition-3.good.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/37-type-definition-sum-7.good.expected)
    (:result 01.pretty.tests/37-type-definition-sum-7.good.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/16-int-literal-2.bad.expected)
    (:result 01.pretty.tests/16-int-literal-2.bad.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/38-type-definition-record-1.good.expected)
    (:result 01.pretty.tests/38-type-definition-record-1.good.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/76-lambda-4.bad.expected)
    (:result 01.pretty.tests/76-lambda-4.bad.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/74-lambda-2.bad.expected)
    (:result 01.pretty.tests/74-lambda-2.bad.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/02-app2.bad.expected)
    (:result 01.pretty.tests/02-app2.bad.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/33-type-definition-sum-3.bad.expected)
    (:result 01.pretty.tests/33-type-definition-sum-3.bad.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/106-assignment-3.bad.expected)
    (:result 01.pretty.tests/106-assignment-3.bad.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/23-char-literal-3.bad.expected)
    (:result 01.pretty.tests/23-char-literal-3.bad.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/07-lexer-var-id-2.good.expected)
    (:result 01.pretty.tests/07-lexer-var-id-2.good.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/93-case-6.good.expected)
    (:result 01.pretty.tests/93-case-6.good.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/16-int-literal-2.good.expected)
    (:result 01.pretty.tests/16-int-literal-2.good.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/71-local-definition-4.bad.expected)
    (:result 01.pretty.tests/71-local-definition-4.bad.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/19-int-literal-5.good.expected)
    (:result 01.pretty.tests/19-int-literal-5.good.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/30-string-literal-4.bad.expected)
    (:result 01.pretty.tests/30-string-literal-4.bad.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/110-type-ascription-3.bad.expected)
    (:result 01.pretty.tests/110-type-ascription-3.bad.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/63-record-projection-3.good.expected)
    (:result 01.pretty.tests/63-record-projection-3.good.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/54-constructor-1.good.expected)
    (:result 01.pretty.tests/54-constructor-1.good.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/67-sequence-3.bad.expected)
    (:result 01.pretty.tests/67-sequence-3.bad.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/83-application-7.bad.expected)
    (:result 01.pretty.tests/83-application-7.bad.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/115-while-2.bad.expected)
    (:result 01.pretty.tests/115-while-2.bad.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/45-value-definition-2.good.expected)
    (:result 01.pretty.tests/45-value-definition-2.good.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/40-type-definition-record-3.bad.expected)
    (:result 01.pretty.tests/40-type-definition-record-3.bad.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/50-instanciation-4.good.expected)
    (:result 01.pretty.tests/50-instanciation-4.good.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/71-local-definition-4.good.expected)
    (:result 01.pretty.tests/71-local-definition-4.good.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/40-type-definition-record-3.good.expected)
    (:result 01.pretty.tests/40-type-definition-record-3.good.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/112-deref-2.good.expected)
    (:result 01.pretty.tests/112-deref-2.good.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/57-constructor-4.good.expected)
    (:result 01.pretty.tests/57-constructor-4.good.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/59-record-2.good.expected)
    (:result 01.pretty.tests/59-record-2.good.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/49-instanciation-3.good.expected)
    (:result 01.pretty.tests/49-instanciation-3.good.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/57-constructor-4.bad.expected)
    (:result 01.pretty.tests/57-constructor-4.bad.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/84-infix-application-1.good.expected)
    (:result 01.pretty.tests/84-infix-application-1.good.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/73-lambda-1.bad.expected)
    (:result 01.pretty.tests/73-lambda-1.bad.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/08-lexer-all-id-1.bad.expected)
    (:result 01.pretty.tests/08-lexer-all-id-1.bad.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/26-char-literal-6.good.expected)
    (:result 01.pretty.tests/26-char-literal-6.good.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/27-string-literal-1.good.expected)
    (:result 01.pretty.tests/27-string-literal-1.good.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/24-char-literal-4.good.expected)
    (:result 01.pretty.tests/24-char-literal-4.good.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/110-type-ascription-3.good.expected)
    (:result 01.pretty.tests/110-type-ascription-3.good.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/25-char-literal-5.good.expected)
    (:result 01.pretty.tests/25-char-literal-5.good.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/85-infix-application-2.good.expected)
    (:result 01.pretty.tests/85-infix-application-2.good.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/114-while-1.good.expected)
    (:result 01.pretty.tests/114-while-1.good.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/55-constructor-2.good.expected)
    (:result 01.pretty.tests/55-constructor-2.good.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/11-lexer-constr-id-3.good.expected)
    (:result 01.pretty.tests/11-lexer-constr-id-3.good.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/30-string-literal-4.good.expected)
    (:result 01.pretty.tests/30-string-literal-4.good.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/52-instanciation-6.good.expected)
    (:result 01.pretty.tests/52-instanciation-6.good.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/47-instanciation.bad.expected)
    (:result 01.pretty.tests/47-instanciation.bad.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/100-ref-2.good.expected)
    (:result 01.pretty.tests/100-ref-2.good.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/80-application-4.bad.expected)
    (:result 01.pretty.tests/80-application-4.bad.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/86-infix-application-3.bad.expected)
    (:result 01.pretty.tests/86-infix-application-3.bad.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/50-instanciation-4.bad.expected)
    (:result 01.pretty.tests/50-instanciation-4.bad.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/73-lambda-1.good.expected)
    (:result 01.pretty.tests/73-lambda-1.good.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/94-case-7.good.expected)
    (:result 01.pretty.tests/94-case-7.good.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/13-type-con-id-1.bad.expected)
    (:result 01.pretty.tests/13-type-con-id-1.bad.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/17-int-literal-3.bad.expected)
    (:result 01.pretty.tests/17-int-literal-3.bad.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/56-constructor-3.bad.expected)
    (:result 01.pretty.tests/56-constructor-3.bad.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/113-deref-3.good.expected)
    (:result 01.pretty.tests/113-deref-3.good.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/48-instanciation-2.bad.expected)
    (:result 01.pretty.tests/48-instanciation-2.bad.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/56-constructor-3.good.expected)
    (:result 01.pretty.tests/56-constructor-3.good.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/12-lexer-label-id-1.bad.expected)
    (:result 01.pretty.tests/12-lexer-label-id-1.bad.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/21-char-literal-1.bad.expected)
    (:result 01.pretty.tests/21-char-literal-1.bad.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/100-ref-2.bad.expected)
    (:result 01.pretty.tests/100-ref-2.bad.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/99-ref-1.bad.expected)
    (:result 01.pretty.tests/99-ref-1.bad.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/39-type-definition-record-2.bad.expected)
    (:result 01.pretty.tests/39-type-definition-record-2.bad.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/41-external-definition-1.good.expected)
    (:result 01.pretty.tests/41-external-definition-1.good.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/34-type-definition-sum-4.bad.expected)
    (:result 01.pretty.tests/34-type-definition-sum-4.bad.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/88-case-1.bad.expected)
    (:result 01.pretty.tests/88-case-1.bad.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/29-string-literal-3.good.expected)
    (:result 01.pretty.tests/29-string-literal-3.good.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/66-sequence-2.good.expected)
    (:result 01.pretty.tests/66-sequence-2.good.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/103-ref-5.bad.expected)
    (:result 01.pretty.tests/103-ref-5.bad.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/04-app2-3.bad.expected)
    (:result 01.pretty.tests/04-app2-3.bad.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/82-application-6.bad.expected)
    (:result 01.pretty.tests/82-application-6.bad.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/35-type-definition-sum-5.good.expected)
    (:result 01.pretty.tests/35-type-definition-sum-5.good.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/22-char-literal-2.bad.expected)
    (:result 01.pretty.tests/22-char-literal-2.bad.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/62-record-projection-2.bad.expected)
    (:result 01.pretty.tests/62-record-projection-2.bad.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/05-app3.bad.expected)
    (:result 01.pretty.tests/05-app3.bad.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/97-if-then-else-2.bad.expected)
    (:result 01.pretty.tests/97-if-then-else-2.bad.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/06-lexer-var-id-1.bad.expected)
    (:result 01.pretty.tests/06-lexer-var-id-1.bad.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/94-case-7.bad.expected)
    (:result 01.pretty.tests/94-case-7.bad.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/72-local-definition-5.bad.expected)
    (:result 01.pretty.tests/72-local-definition-5.bad.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/37-type-definition-sum-7.bad.expected)
    (:result 01.pretty.tests/37-type-definition-sum-7.bad.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/01-constructor-application.good.expected)
    (:result 01.pretty.tests/01-constructor-application.good.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/91-case-4.good.expected)
    (:result 01.pretty.tests/91-case-4.good.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/74-lambda-2.good.expected)
    (:result 01.pretty.tests/74-lambda-2.good.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/103-ref-5.good.expected)
    (:result 01.pretty.tests/103-ref-5.good.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/28-string-literal-2.bad.expected)
    (:result 01.pretty.tests/28-string-literal-2.bad.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/42-external-definition-2.good.expected)
    (:result 01.pretty.tests/42-external-definition-2.good.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/36-type-definition-sum-6.good.expected)
    (:result 01.pretty.tests/36-type-definition-sum-6.good.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/93-case-6.bad.expected)
    (:result 01.pretty.tests/93-case-6.bad.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/52-instanciation-6.bad.expected)
    (:result 01.pretty.tests/52-instanciation-6.bad.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/32-type-definition-sum-2.bad.expected)
    (:result 01.pretty.tests/32-type-definition-sum-2.bad.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/98-if-then-else-4.bad.expected)
    (:result 01.pretty.tests/98-if-then-else-4.bad.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/108-type-ascription-1.good.expected)
    (:result 01.pretty.tests/108-type-ascription-1.good.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/98-if-then-else-3.bad.expected)
    (:result 01.pretty.tests/98-if-then-else-3.bad.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/10-lexer-constr-id-2.good.expected)
    (:result 01.pretty.tests/10-lexer-constr-id-2.good.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/78-application-2.good.expected)
    (:result 01.pretty.tests/78-application-2.good.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/03-app2-2.bad.expected)
    (:result 01.pretty.tests/03-app2-2.bad.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/54-constructor-1.bad.expected)
    (:result 01.pretty.tests/54-constructor-1.bad.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/15-int-literal-1.bad.expected)
    (:result 01.pretty.tests/15-int-literal-1.bad.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/92-case-5.good.expected)
    (:result 01.pretty.tests/92-case-5.good.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/58-record-1.good.expected)
    (:result 01.pretty.tests/58-record-1.good.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/81-application-5.good.expected)
    (:result 01.pretty.tests/81-application-5.good.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/31-type-definition-sum-1.bad.expected)
    (:result 01.pretty.tests/31-type-definition-sum-1.bad.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/77-application-1.good.expected)
    (:result 01.pretty.tests/77-application-1.good.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/20-int-literal-6.bad.expected)
    (:result 01.pretty.tests/20-int-literal-6.bad.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/84-infix-application-1.bad.expected)
    (:result 01.pretty.tests/84-infix-application-1.bad.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/48-instanciation-2.good.expected)
    (:result 01.pretty.tests/48-instanciation-2.good.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/31-type-definition-sum-1.good.expected)
    (:result 01.pretty.tests/31-type-definition-sum-1.good.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/45-value-definition-2.bad.expected)
    (:result 01.pretty.tests/45-value-definition-2.bad.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/21-char-literal-1.good.expected)
    (:result 01.pretty.tests/21-char-literal-1.good.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/119-do-while-2.good.expected)
    (:result 01.pretty.tests/119-do-while-2.good.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/79-application-3.bad.expected)
    (:result 01.pretty.tests/79-application-3.bad.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/91-case-4.bad.expected)
    (:result 01.pretty.tests/91-case-4.bad.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/69-local-definition-2.good.expected)
    (:result 01.pretty.tests/69-local-definition-2.good.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/117-for-2.good.expected)
    (:result 01.pretty.tests/117-for-2.good.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/23-char-literal-3.good.expected)
    (:result 01.pretty.tests/23-char-literal-3.good.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/22-char-literal-2.good.expected)
    (:result 01.pretty.tests/22-char-literal-2.good.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/51-instanciation-5.bad.expected)
    (:result 01.pretty.tests/51-instanciation-5.bad.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/119-do-while-2.bad.expected)
    (:result 01.pretty.tests/119-do-while-2.bad.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/106-assignment-3.good.expected)
    (:result 01.pretty.tests/106-assignment-3.good.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/90-case-3.bad.expected)
    (:result 01.pretty.tests/90-case-3.bad.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/102-ref-4.good.expected)
    (:result 01.pretty.tests/102-ref-4.good.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/62-record-projection-2.good.expected)
    (:result 01.pretty.tests/62-record-projection-2.good.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/105-assignment-2.bad.expected)
    (:result 01.pretty.tests/105-assignment-2.bad.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/13-type-con-id-1.good.expected)
    (:result 01.pretty.tests/13-type-con-id-1.good.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/68-local-definition.good.expected)
    (:result 01.pretty.tests/68-local-definition.good.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/49-instanciation-3.bad.expected)
    (:result 01.pretty.tests/49-instanciation-3.bad.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/32-type-definition-sum-2.good.expected)
    (:result 01.pretty.tests/32-type-definition-sum-2.good.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/59-record-2.bad.expected)
    (:result 01.pretty.tests/59-record-2.bad.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/44-value-definition-1.bad.expected)
    (:result 01.pretty.tests/44-value-definition-1.bad.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/38-type-definition-record-1.bad.expected)
    (:result 01.pretty.tests/38-type-definition-record-1.bad.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/12-lexer-label-id-2.bad.expected)
    (:result 01.pretty.tests/12-lexer-label-id-2.bad.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/108-type-ascription-1.bad.expected)
    (:result 01.pretty.tests/108-type-ascription-1.bad.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/89-case-2.good.expected)
    (:result 01.pretty.tests/89-case-2.good.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/101-ref-3.bad.expected)
    (:result 01.pretty.tests/101-ref-3.bad.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/109-type-ascription-2.good.expected)
    (:result 01.pretty.tests/109-type-ascription-2.good.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/68-local-definition.bad.expected)
    (:result 01.pretty.tests/68-local-definition.bad.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/98-if-then-else-3.good.expected)
    (:result 01.pretty.tests/98-if-then-else-3.good.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/69-local-definition-2.bad.expected)
    (:result 01.pretty.tests/69-local-definition-2.bad.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/18-int-literal-4.good.expected)
    (:result 01.pretty.tests/18-int-literal-4.good.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/95-case-8.good.expected)
    (:result 01.pretty.tests/95-case-8.good.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/17-int-literal-3.good.expected)
    (:result 01.pretty.tests/17-int-literal-3.good.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/97-if-then-else-2.good.expected)
    (:result 01.pretty.tests/97-if-then-else-2.good.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/51-instanciation-5.good.expected)
    (:result 01.pretty.tests/51-instanciation-5.good.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/60-record-3.good.expected)
    (:result 01.pretty.tests/60-record-3.good.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/102-ref-4.bad.expected)
    (:result 01.pretty.tests/102-ref-4.bad.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/111-deref-1.good.expected)
    (:result 01.pretty.tests/111-deref-1.good.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/42-external-definition-2.bad.expected)
    (:result 01.pretty.tests/42-external-definition-2.bad.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/75-lambda-3.bad.expected)
    (:result 01.pretty.tests/75-lambda-3.bad.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/70-local-definition-3.good.expected)
    (:result 01.pretty.tests/70-local-definition-3.good.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/98-if-then-else-4.good.expected)
    (:result 01.pretty.tests/98-if-then-else-4.good.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/72-local-definition-5.good.expected)
    (:result 01.pretty.tests/72-local-definition-5.good.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/14-type-con-id-2.bad.expected)
    (:result 01.pretty.tests/14-type-con-id-2.bad.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/46-value-definition-3.good.expected)
    (:result 01.pretty.tests/46-value-definition-3.good.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/89-case-2.bad.expected)
    (:result 01.pretty.tests/89-case-2.bad.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/27-string-literal-1.bad.expected)
    (:result 01.pretty.tests/27-string-literal-1.bad.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/24-char-literal-4.bad.expected)
    (:result 01.pretty.tests/24-char-literal-4.bad.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/87-infix-application-4.good.expected)
    (:result 01.pretty.tests/87-infix-application-4.good.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/41-external-definition-1.bad.expected)
    (:result 01.pretty.tests/41-external-definition-1.bad.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/44-value-definition-1.good.expected)
    (:result 01.pretty.tests/44-value-definition-1.good.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/101-ref-3.good.expected)
    (:result 01.pretty.tests/101-ref-3.good.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/77-application-1.bad.expected)
    (:result 01.pretty.tests/77-application-1.bad.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/47-instanciation.good.expected)
    (:result 01.pretty.tests/47-instanciation.good.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/104-assignment.good.expected)
    (:result 01.pretty.tests/104-assignment.good.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/53-instanciation-7.bad.expected)
    (:result 01.pretty.tests/53-instanciation-7.bad.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/11-lexer-constr-id-3.bad.expected)
    (:result 01.pretty.tests/11-lexer-constr-id-3.bad.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/92-case-5.bad.expected)
    (:result 01.pretty.tests/92-case-5.bad.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/113-deref-3.bad.expected)
    (:result 01.pretty.tests/113-deref-3.bad.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/19-int-literal-5.bad.expected)
    (:result 01.pretty.tests/19-int-literal-5.bad.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/114-while-1.bad.expected)
    (:result 01.pretty.tests/114-while-1.bad.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/999-slam.good.expected)
    (:result 01.pretty.tests/999-slam.good.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/82-application-6.good.expected)
    (:result 01.pretty.tests/82-application-6.good.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/116-for-1.good.expected)
    (:result 01.pretty.tests/116-for-1.good.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/66-sequence-2.bad.expected)
    (:result 01.pretty.tests/66-sequence-2.bad.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/06-lexer-var-id-1.good.expected)
    (:result 01.pretty.tests/06-lexer-var-id-1.good.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/12-lexer-label-id-1.good.expected)
    (:result 01.pretty.tests/12-lexer-label-id-1.good.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/80-application-4.good.expected)
    (:result 01.pretty.tests/80-application-4.good.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/28-string-literal-2.good.expected)
    (:result 01.pretty.tests/28-string-literal-2.good.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/61-record-projection-1.good.expected)
    (:result 01.pretty.tests/61-record-projection-1.good.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/08-lexer-all-id-1.good.expected)
    (:result 01.pretty.tests/08-lexer-all-id-1.good.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/105-assignment-2.good.expected)
    (:result 01.pretty.tests/105-assignment-2.good.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/43-external-definition-3.bad.expected)
    (:result 01.pretty.tests/43-external-definition-3.bad.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/79-application-3.good.expected)
    (:result 01.pretty.tests/79-application-3.good.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/112-deref-2.bad.expected)
    (:result 01.pretty.tests/112-deref-2.bad.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/46-value-definition-3.bad.expected)
    (:result 01.pretty.tests/46-value-definition-3.bad.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/58-record-1.bad.expected)
    (:result 01.pretty.tests/58-record-1.bad.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/78-application-2.bad.expected)
    (:result 01.pretty.tests/78-application-2.bad.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/61-record-projection-1.bad.expected)
    (:result 01.pretty.tests/61-record-projection-1.bad.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/55-constructor-2.bad.expected)
    (:result 01.pretty.tests/55-constructor-2.bad.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/25-char-literal-5.bad.expected)
    (:result 01.pretty.tests/25-char-literal-5.bad.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/117-for-2.bad.expected)
    (:result 01.pretty.tests/117-for-2.bad.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/10-lexer-constr-id-2.bad.expected)
    (:result 01.pretty.tests/10-lexer-constr-id-2.bad.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/86-infix-application-3.good.expected)
    (:result 01.pretty.tests/86-infix-application-3.good.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/107-assignment-4.good.expected)
    (:result 01.pretty.tests/107-assignment-4.good.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/104-assignment.bad.expected)
    (:result 01.pretty.tests/104-assignment.bad.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/118-do-while-1.good.expected)
    (:result 01.pretty.tests/118-do-while-1.good.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/39-type-definition-record-2.good.expected)
    (:result 01.pretty.tests/39-type-definition-record-2.good.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/65-sequence-1.good.expected)
    (:result 01.pretty.tests/65-sequence-1.good.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/15-int-literal-1.good.expected)
    (:result 01.pretty.tests/15-int-literal-1.good.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/67-sequence-3.good.expected)
    (:result 01.pretty.tests/67-sequence-3.good.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/115-while-2.good.expected)
    (:result 01.pretty.tests/115-while-2.good.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/107-assignment-4.bad.expected)
    (:result 01.pretty.tests/107-assignment-4.bad.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/99-ref-1.good.expected)
    (:result 01.pretty.tests/99-ref-1.good.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/26-char-literal-6.bad.expected)
    (:result 01.pretty.tests/26-char-literal-6.bad.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/76-lambda-4.good.expected)
    (:result 01.pretty.tests/76-lambda-4.good.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/33-type-definition-sum-3.good.expected)
    (:result 01.pretty.tests/33-type-definition-sum-3.good.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/12-lexer-label-id-2.good.expected)
    (:result 01.pretty.tests/12-lexer-label-id-2.good.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/116-for-1.bad.expected)
    (:result 01.pretty.tests/116-for-1.bad.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/88-case-1.good.expected)
    (:result 01.pretty.tests/88-case-1.good.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/96-if-then-else.bad.expected)
    (:result 01.pretty.tests/96-if-then-else.bad.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/07-lexer-var-id-2.bad.expected)
    (:result 01.pretty.tests/07-lexer-var-id-2.bad.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/96-if-then-else.good.expected)
    (:result 01.pretty.tests/96-if-then-else.good.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/18-int-literal-4.bad.expected)
    (:result 01.pretty.tests/18-int-literal-4.bad.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/20-int-literal-6.good.expected)
    (:result 01.pretty.tests/20-int-literal-6.good.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/01-constructor-application.bad.expected)
    (:result 01.pretty.tests/01-constructor-application.bad.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/118-do-while-1.bad.expected)
    (:result 01.pretty.tests/118-do-while-1.bad.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/53-instanciation-7.good.expected)
    (:result 01.pretty.tests/53-instanciation-7.good.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/63-record-projection-3.bad.expected)
    (:result 01.pretty.tests/63-record-projection-3.bad.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/95-case-8.bad.expected)
    (:result 01.pretty.tests/95-case-8.bad.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/111-deref-1.bad.expected)
    (:result 01.pretty.tests/111-deref-1.bad.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/70-local-definition-3.bad.expected)
    (:result 01.pretty.tests/70-local-definition-3.bad.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/75-lambda-3.good.expected)
    (:result 01.pretty.tests/75-lambda-3.good.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/87-infix-application-4.bad.expected)
    (:result 01.pretty.tests/87-infix-application-4.bad.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/85-infix-application-2.bad.expected)
    (:result 01.pretty.tests/85-infix-application-2.bad.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/65-sequence-1.bad.expected)
    (:result 01.pretty.tests/65-sequence-1.bad.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/90-case-3.good.expected)
    (:result 01.pretty.tests/90-case-3.good.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/83-application-7.good.expected)
    (:result 01.pretty.tests/83-application-7.good.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/81-application-5.bad.expected)
    (:result 01.pretty.tests/81-application-5.bad.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/34-type-definition-sum-4.good.expected)
    (:result 01.pretty.tests/34-type-definition-sum-4.good.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/36-type-definition-sum-6.bad.expected)
    (:result 01.pretty.tests/36-type-definition-sum-6.bad.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/09-lexer-constr-id-1.bad.expected)
    (:result 01.pretty.tests/09-lexer-constr-id-1.bad.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/29-string-literal-3.bad.expected)
    (:result 01.pretty.tests/29-string-literal-3.bad.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/35-type-definition-sum-5.bad.expected)
    (:result 01.pretty.tests/35-type-definition-sum-5.bad.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/14-type-con-id-2.good.expected)
    (:result 01.pretty.tests/14-type-con-id-2.good.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/09-lexer-constr-id-1.good.expected)
    (:result 01.pretty.tests/09-lexer-constr-id-1.good.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/60-record-3.bad.expected)
    (:result 01.pretty.tests/60-record-3.bad.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/109-type-ascription-2.bad.expected)
    (:result 01.pretty.tests/109-type-ascription-2.bad.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/43-external-definition-3.good.expected)
    (:result 01.pretty.tests/43-external-definition-3.good.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/37-type-definition-sum-7.good.expected)
    (:result 01.pretty.tests/37-type-definition-sum-7.good.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/16-int-literal-2.bad.expected)
    (:result 01.pretty.tests/16-int-literal-2.bad.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/38-type-definition-record-1.good.expected)
    (:result 01.pretty.tests/38-type-definition-record-1.good.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/76-lambda-4.bad.expected)
    (:result 01.pretty.tests/76-lambda-4.bad.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/74-lambda-2.bad.expected)
    (:result 01.pretty.tests/74-lambda-2.bad.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/02-app2.bad.expected)
    (:result 01.pretty.tests/02-app2.bad.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/33-type-definition-sum-3.bad.expected)
    (:result 01.pretty.tests/33-type-definition-sum-3.bad.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/106-assignment-3.bad.expected)
    (:result 01.pretty.tests/106-assignment-3.bad.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/23-char-literal-3.bad.expected)
    (:result 01.pretty.tests/23-char-literal-3.bad.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/07-lexer-var-id-2.good.expected)
    (:result 01.pretty.tests/07-lexer-var-id-2.good.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/93-case-6.good.expected)
    (:result 01.pretty.tests/93-case-6.good.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/16-int-literal-2.good.expected)
    (:result 01.pretty.tests/16-int-literal-2.good.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/71-local-definition-4.bad.expected)
    (:result 01.pretty.tests/71-local-definition-4.bad.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/19-int-literal-5.good.expected)
    (:result 01.pretty.tests/19-int-literal-5.good.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/30-string-literal-4.bad.expected)
    (:result 01.pretty.tests/30-string-literal-4.bad.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/110-type-ascription-3.bad.expected)
    (:result 01.pretty.tests/110-type-ascription-3.bad.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/63-record-projection-3.good.expected)
    (:result 01.pretty.tests/63-record-projection-3.good.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/54-constructor-1.good.expected)
    (:result 01.pretty.tests/54-constructor-1.good.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/67-sequence-3.bad.expected)
    (:result 01.pretty.tests/67-sequence-3.bad.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/83-application-7.bad.expected)
    (:result 01.pretty.tests/83-application-7.bad.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/115-while-2.bad.expected)
    (:result 01.pretty.tests/115-while-2.bad.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/45-value-definition-2.good.expected)
    (:result 01.pretty.tests/45-value-definition-2.good.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/40-type-definition-record-3.bad.expected)
    (:result 01.pretty.tests/40-type-definition-record-3.bad.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/50-instanciation-4.good.expected)
    (:result 01.pretty.tests/50-instanciation-4.good.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/71-local-definition-4.good.expected)
    (:result 01.pretty.tests/71-local-definition-4.good.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/40-type-definition-record-3.good.expected)
    (:result 01.pretty.tests/40-type-definition-record-3.good.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/112-deref-2.good.expected)
    (:result 01.pretty.tests/112-deref-2.good.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/57-constructor-4.good.expected)
    (:result 01.pretty.tests/57-constructor-4.good.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/59-record-2.good.expected)
    (:result 01.pretty.tests/59-record-2.good.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/49-instanciation-3.good.expected)
    (:result 01.pretty.tests/49-instanciation-3.good.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/57-constructor-4.bad.expected)
    (:result 01.pretty.tests/57-constructor-4.bad.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/84-infix-application-1.good.expected)
    (:result 01.pretty.tests/84-infix-application-1.good.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/73-lambda-1.bad.expected)
    (:result 01.pretty.tests/73-lambda-1.bad.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/08-lexer-all-id-1.bad.expected)
    (:result 01.pretty.tests/08-lexer-all-id-1.bad.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/26-char-literal-6.good.expected)
    (:result 01.pretty.tests/26-char-literal-6.good.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/27-string-literal-1.good.expected)
    (:result 01.pretty.tests/27-string-literal-1.good.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/24-char-literal-4.good.expected)
    (:result 01.pretty.tests/24-char-literal-4.good.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/110-type-ascription-3.good.expected)
    (:result 01.pretty.tests/110-type-ascription-3.good.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/25-char-literal-5.good.expected)
    (:result 01.pretty.tests/25-char-literal-5.good.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/85-infix-application-2.good.expected)
    (:result 01.pretty.tests/85-infix-application-2.good.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/114-while-1.good.expected)
    (:result 01.pretty.tests/114-while-1.good.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/55-constructor-2.good.expected)
    (:result 01.pretty.tests/55-constructor-2.good.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/11-lexer-constr-id-3.good.expected)
    (:result 01.pretty.tests/11-lexer-constr-id-3.good.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/30-string-literal-4.good.expected)
    (:result 01.pretty.tests/30-string-literal-4.good.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/52-instanciation-6.good.expected)
    (:result 01.pretty.tests/52-instanciation-6.good.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/47-instanciation.bad.expected)
    (:result 01.pretty.tests/47-instanciation.bad.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/100-ref-2.good.expected)
    (:result 01.pretty.tests/100-ref-2.good.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/80-application-4.bad.expected)
    (:result 01.pretty.tests/80-application-4.bad.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/86-infix-application-3.bad.expected)
    (:result 01.pretty.tests/86-infix-application-3.bad.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/50-instanciation-4.bad.expected)
    (:result 01.pretty.tests/50-instanciation-4.bad.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/73-lambda-1.good.expected)
    (:result 01.pretty.tests/73-lambda-1.good.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/94-case-7.good.expected)
    (:result 01.pretty.tests/94-case-7.good.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/13-type-con-id-1.bad.expected)
    (:result 01.pretty.tests/13-type-con-id-1.bad.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/17-int-literal-3.bad.expected)
    (:result 01.pretty.tests/17-int-literal-3.bad.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/56-constructor-3.bad.expected)
    (:result 01.pretty.tests/56-constructor-3.bad.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/113-deref-3.good.expected)
    (:result 01.pretty.tests/113-deref-3.good.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/48-instanciation-2.bad.expected)
    (:result 01.pretty.tests/48-instanciation-2.bad.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/56-constructor-3.good.expected)
    (:result 01.pretty.tests/56-constructor-3.good.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/12-lexer-label-id-1.bad.expected)
    (:result 01.pretty.tests/12-lexer-label-id-1.bad.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/21-char-literal-1.bad.expected)
    (:result 01.pretty.tests/21-char-literal-1.bad.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/100-ref-2.bad.expected)
    (:result 01.pretty.tests/100-ref-2.bad.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/99-ref-1.bad.expected)
    (:result 01.pretty.tests/99-ref-1.bad.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/39-type-definition-record-2.bad.expected)
    (:result 01.pretty.tests/39-type-definition-record-2.bad.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/41-external-definition-1.good.expected)
    (:result 01.pretty.tests/41-external-definition-1.good.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/34-type-definition-sum-4.bad.expected)
    (:result 01.pretty.tests/34-type-definition-sum-4.bad.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/88-case-1.bad.expected)
    (:result 01.pretty.tests/88-case-1.bad.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/29-string-literal-3.good.expected)
    (:result 01.pretty.tests/29-string-literal-3.good.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/66-sequence-2.good.expected)
    (:result 01.pretty.tests/66-sequence-2.good.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/103-ref-5.bad.expected)
    (:result 01.pretty.tests/103-ref-5.bad.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/04-app2-3.bad.expected)
    (:result 01.pretty.tests/04-app2-3.bad.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/82-application-6.bad.expected)
    (:result 01.pretty.tests/82-application-6.bad.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/35-type-definition-sum-5.good.expected)
    (:result 01.pretty.tests/35-type-definition-sum-5.good.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/22-char-literal-2.bad.expected)
    (:result 01.pretty.tests/22-char-literal-2.bad.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/62-record-projection-2.bad.expected)
    (:result 01.pretty.tests/62-record-projection-2.bad.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/05-app3.bad.expected)
    (:result 01.pretty.tests/05-app3.bad.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/97-if-then-else-2.bad.expected)
    (:result 01.pretty.tests/97-if-then-else-2.bad.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/06-lexer-var-id-1.bad.expected)
    (:result 01.pretty.tests/06-lexer-var-id-1.bad.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/94-case-7.bad.expected)
    (:result 01.pretty.tests/94-case-7.bad.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/72-local-definition-5.bad.expected)
    (:result 01.pretty.tests/72-local-definition-5.bad.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/37-type-definition-sum-7.bad.expected)
    (:result 01.pretty.tests/37-type-definition-sum-7.bad.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/01-constructor-application.good.expected)
    (:result 01.pretty.tests/01-constructor-application.good.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/91-case-4.good.expected)
    (:result 01.pretty.tests/91-case-4.good.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/74-lambda-2.good.expected)
    (:result 01.pretty.tests/74-lambda-2.good.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/103-ref-5.good.expected)
    (:result 01.pretty.tests/103-ref-5.good.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/28-string-literal-2.bad.expected)
    (:result 01.pretty.tests/28-string-literal-2.bad.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/42-external-definition-2.good.expected)
    (:result 01.pretty.tests/42-external-definition-2.good.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/36-type-definition-sum-6.good.expected)
    (:result 01.pretty.tests/36-type-definition-sum-6.good.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/93-case-6.bad.expected)
    (:result 01.pretty.tests/93-case-6.bad.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/52-instanciation-6.bad.expected)
    (:result 01.pretty.tests/52-instanciation-6.bad.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/32-type-definition-sum-2.bad.expected)
    (:result 01.pretty.tests/32-type-definition-sum-2.bad.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/98-if-then-else-4.bad.expected)
    (:result 01.pretty.tests/98-if-then-else-4.bad.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/108-type-ascription-1.good.expected)
    (:result 01.pretty.tests/108-type-ascription-1.good.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/98-if-then-else-3.bad.expected)
    (:result 01.pretty.tests/98-if-then-else-3.bad.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/10-lexer-constr-id-2.good.expected)
    (:result 01.pretty.tests/10-lexer-constr-id-2.good.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/78-application-2.good.expected)
    (:result 01.pretty.tests/78-application-2.good.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/03-app2-2.bad.expected)
    (:result 01.pretty.tests/03-app2-2.bad.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/54-constructor-1.bad.expected)
    (:result 01.pretty.tests/54-constructor-1.bad.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/15-int-literal-1.bad.expected)
    (:result 01.pretty.tests/15-int-literal-1.bad.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/92-case-5.good.expected)
    (:result 01.pretty.tests/92-case-5.good.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/58-record-1.good.expected)
    (:result 01.pretty.tests/58-record-1.good.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/81-application-5.good.expected)
    (:result 01.pretty.tests/81-application-5.good.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/31-type-definition-sum-1.bad.expected)
    (:result 01.pretty.tests/31-type-definition-sum-1.bad.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/77-application-1.good.expected)
    (:result 01.pretty.tests/77-application-1.good.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/20-int-literal-6.bad.expected)
    (:result 01.pretty.tests/20-int-literal-6.bad.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/84-infix-application-1.bad.expected)
    (:result 01.pretty.tests/84-infix-application-1.bad.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/48-instanciation-2.good.expected)
    (:result 01.pretty.tests/48-instanciation-2.good.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/31-type-definition-sum-1.good.expected)
    (:result 01.pretty.tests/31-type-definition-sum-1.good.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/45-value-definition-2.bad.expected)
    (:result 01.pretty.tests/45-value-definition-2.bad.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/21-char-literal-1.good.expected)
    (:result 01.pretty.tests/21-char-literal-1.good.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/119-do-while-2.good.expected)
    (:result 01.pretty.tests/119-do-while-2.good.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/79-application-3.bad.expected)
    (:result 01.pretty.tests/79-application-3.bad.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/91-case-4.bad.expected)
    (:result 01.pretty.tests/91-case-4.bad.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/69-local-definition-2.good.expected)
    (:result 01.pretty.tests/69-local-definition-2.good.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/117-for-2.good.expected)
    (:result 01.pretty.tests/117-for-2.good.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/23-char-literal-3.good.expected)
    (:result 01.pretty.tests/23-char-literal-3.good.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/22-char-literal-2.good.expected)
    (:result 01.pretty.tests/22-char-literal-2.good.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/51-instanciation-5.bad.expected)
    (:result 01.pretty.tests/51-instanciation-5.bad.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/119-do-while-2.bad.expected)
    (:result 01.pretty.tests/119-do-while-2.bad.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/106-assignment-3.good.expected)
    (:result 01.pretty.tests/106-assignment-3.good.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/90-case-3.bad.expected)
    (:result 01.pretty.tests/90-case-3.bad.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/102-ref-4.good.expected)
    (:result 01.pretty.tests/102-ref-4.good.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/62-record-projection-2.good.expected)
    (:result 01.pretty.tests/62-record-projection-2.good.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/105-assignment-2.bad.expected)
    (:result 01.pretty.tests/105-assignment-2.bad.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/13-type-con-id-1.good.expected)
    (:result 01.pretty.tests/13-type-con-id-1.good.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/68-local-definition.good.expected)
    (:result 01.pretty.tests/68-local-definition.good.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/49-instanciation-3.bad.expected)
    (:result 01.pretty.tests/49-instanciation-3.bad.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/32-type-definition-sum-2.good.expected)
    (:result 01.pretty.tests/32-type-definition-sum-2.good.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/59-record-2.bad.expected)
    (:result 01.pretty.tests/59-record-2.bad.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/44-value-definition-1.bad.expected)
    (:result 01.pretty.tests/44-value-definition-1.bad.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/38-type-definition-record-1.bad.expected)
    (:result 01.pretty.tests/38-type-definition-record-1.bad.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/12-lexer-label-id-2.bad.expected)
    (:result 01.pretty.tests/12-lexer-label-id-2.bad.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/108-type-ascription-1.bad.expected)
    (:result 01.pretty.tests/108-type-ascription-1.bad.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/89-case-2.good.expected)
    (:result 01.pretty.tests/89-case-2.good.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/101-ref-3.bad.expected)
    (:result 01.pretty.tests/101-ref-3.bad.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/109-type-ascription-2.good.expected)
    (:result 01.pretty.tests/109-type-ascription-2.good.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/68-local-definition.bad.expected)
    (:result 01.pretty.tests/68-local-definition.bad.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/98-if-then-else-3.good.expected)
    (:result 01.pretty.tests/98-if-then-else-3.good.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/69-local-definition-2.bad.expected)
    (:result 01.pretty.tests/69-local-definition-2.bad.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/18-int-literal-4.good.expected)
    (:result 01.pretty.tests/18-int-literal-4.good.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/95-case-8.good.expected)
    (:result 01.pretty.tests/95-case-8.good.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/17-int-literal-3.good.expected)
    (:result 01.pretty.tests/17-int-literal-3.good.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/97-if-then-else-2.good.expected)
    (:result 01.pretty.tests/97-if-then-else-2.good.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/51-instanciation-5.good.expected)
    (:result 01.pretty.tests/51-instanciation-5.good.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/60-record-3.good.expected)
    (:result 01.pretty.tests/60-record-3.good.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/102-ref-4.bad.expected)
    (:result 01.pretty.tests/102-ref-4.bad.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/111-deref-1.good.expected)
    (:result 01.pretty.tests/111-deref-1.good.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/42-external-definition-2.bad.expected)
    (:result 01.pretty.tests/42-external-definition-2.bad.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/75-lambda-3.bad.expected)
    (:result 01.pretty.tests/75-lambda-3.bad.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/70-local-definition-3.good.expected)
    (:result 01.pretty.tests/70-local-definition-3.good.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/98-if-then-else-4.good.expected)
    (:result 01.pretty.tests/98-if-then-else-4.good.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/72-local-definition-5.good.expected)
    (:result 01.pretty.tests/72-local-definition-5.good.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/14-type-con-id-2.bad.expected)
    (:result 01.pretty.tests/14-type-con-id-2.bad.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/46-value-definition-3.good.expected)
    (:result 01.pretty.tests/46-value-definition-3.good.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/89-case-2.bad.expected)
    (:result 01.pretty.tests/89-case-2.bad.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/27-string-literal-1.bad.expected)
    (:result 01.pretty.tests/27-string-literal-1.bad.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/24-char-literal-4.bad.expected)
    (:result 01.pretty.tests/24-char-literal-4.bad.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/87-infix-application-4.good.expected)
    (:result 01.pretty.tests/87-infix-application-4.good.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/41-external-definition-1.bad.expected)
    (:result 01.pretty.tests/41-external-definition-1.bad.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/44-value-definition-1.good.expected)
    (:result 01.pretty.tests/44-value-definition-1.good.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/101-ref-3.good.expected)
    (:result 01.pretty.tests/101-ref-3.good.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/77-application-1.bad.expected)
    (:result 01.pretty.tests/77-application-1.bad.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/47-instanciation.good.expected)
    (:result 01.pretty.tests/47-instanciation.good.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/104-assignment.good.expected)
    (:result 01.pretty.tests/104-assignment.good.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/53-instanciation-7.bad.expected)
    (:result 01.pretty.tests/53-instanciation-7.bad.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/11-lexer-constr-id-3.bad.expected)
    (:result 01.pretty.tests/11-lexer-constr-id-3.bad.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/92-case-5.bad.expected)
    (:result 01.pretty.tests/92-case-5.bad.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/113-deref-3.bad.expected)
    (:result 01.pretty.tests/113-deref-3.bad.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/19-int-literal-5.bad.expected)
    (:result 01.pretty.tests/19-int-literal-5.bad.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/114-while-1.bad.expected)
    (:result 01.pretty.tests/114-while-1.bad.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/999-slam.good.expected)
    (:result 01.pretty.tests/999-slam.good.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/82-application-6.good.expected)
    (:result 01.pretty.tests/82-application-6.good.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/116-for-1.good.expected)
    (:result 01.pretty.tests/116-for-1.good.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/66-sequence-2.bad.expected)
    (:result 01.pretty.tests/66-sequence-2.bad.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/06-lexer-var-id-1.good.expected)
    (:result 01.pretty.tests/06-lexer-var-id-1.good.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/12-lexer-label-id-1.good.expected)
    (:result 01.pretty.tests/12-lexer-label-id-1.good.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/80-application-4.good.expected)
    (:result 01.pretty.tests/80-application-4.good.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/28-string-literal-2.good.expected)
    (:result 01.pretty.tests/28-string-literal-2.good.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/61-record-projection-1.good.expected)
    (:result 01.pretty.tests/61-record-projection-1.good.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/08-lexer-all-id-1.good.expected)
    (:result 01.pretty.tests/08-lexer-all-id-1.good.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/105-assignment-2.good.expected)
    (:result 01.pretty.tests/105-assignment-2.good.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/43-external-definition-3.bad.expected)
    (:result 01.pretty.tests/43-external-definition-3.bad.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/79-application-3.good.expected)
    (:result 01.pretty.tests/79-application-3.good.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/112-deref-2.bad.expected)
    (:result 01.pretty.tests/112-deref-2.bad.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/46-value-definition-3.bad.expected)
    (:result 01.pretty.tests/46-value-definition-3.bad.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/58-record-1.bad.expected)
    (:result 01.pretty.tests/58-record-1.bad.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/78-application-2.bad.expected)
    (:result 01.pretty.tests/78-application-2.bad.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/61-record-projection-1.bad.expected)
    (:result 01.pretty.tests/61-record-projection-1.bad.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/55-constructor-2.bad.expected)
    (:result 01.pretty.tests/55-constructor-2.bad.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/25-char-literal-5.bad.expected)
    (:result 01.pretty.tests/25-char-literal-5.bad.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/117-for-2.bad.expected)
    (:result 01.pretty.tests/117-for-2.bad.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/10-lexer-constr-id-2.bad.expected)
    (:result 01.pretty.tests/10-lexer-constr-id-2.bad.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/86-infix-application-3.good.expected)
    (:result 01.pretty.tests/86-infix-application-3.good.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/107-assignment-4.good.expected)
    (:result 01.pretty.tests/107-assignment-4.good.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/104-assignment.bad.expected)
    (:result 01.pretty.tests/104-assignment.bad.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/118-do-while-1.good.expected)
    (:result 01.pretty.tests/118-do-while-1.good.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/39-type-definition-record-2.good.expected)
    (:result 01.pretty.tests/39-type-definition-record-2.good.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/65-sequence-1.good.expected)
    (:result 01.pretty.tests/65-sequence-1.good.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/15-int-literal-1.good.expected)
    (:result 01.pretty.tests/15-int-literal-1.good.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/67-sequence-3.good.expected)
    (:result 01.pretty.tests/67-sequence-3.good.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/115-while-2.good.expected)
    (:result 01.pretty.tests/115-while-2.good.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/107-assignment-4.bad.expected)
    (:result 01.pretty.tests/107-assignment-4.bad.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/99-ref-1.good.expected)
    (:result 01.pretty.tests/99-ref-1.good.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/26-char-literal-6.bad.expected)
    (:result 01.pretty.tests/26-char-literal-6.bad.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/76-lambda-4.good.expected)
    (:result 01.pretty.tests/76-lambda-4.good.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/33-type-definition-sum-3.good.expected)
    (:result 01.pretty.tests/33-type-definition-sum-3.good.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/12-lexer-label-id-2.good.expected)
    (:result 01.pretty.tests/12-lexer-label-id-2.good.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/116-for-1.bad.expected)
    (:result 01.pretty.tests/116-for-1.bad.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/88-case-1.good.expected)
    (:result 01.pretty.tests/88-case-1.good.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/96-if-then-else.bad.expected)
    (:result 01.pretty.tests/96-if-then-else.bad.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/07-lexer-var-id-2.bad.expected)
    (:result 01.pretty.tests/07-lexer-var-id-2.bad.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/96-if-then-else.good.expected)
    (:result 01.pretty.tests/96-if-then-else.good.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/18-int-literal-4.bad.expected)
    (:result 01.pretty.tests/18-int-literal-4.bad.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/20-int-literal-6.good.expected)
    (:result 01.pretty.tests/20-int-literal-6.good.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/01-constructor-application.bad.expected)
    (:result 01.pretty.tests/01-constructor-application.bad.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/118-do-while-1.bad.expected)
    (:result 01.pretty.tests/118-do-while-1.bad.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/53-instanciation-7.good.expected)
    (:result 01.pretty.tests/53-instanciation-7.good.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/63-record-projection-3.bad.expected)
    (:result 01.pretty.tests/63-record-projection-3.bad.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/95-case-8.bad.expected)
    (:result 01.pretty.tests/95-case-8.bad.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/111-deref-1.bad.expected)
    (:result 01.pretty.tests/111-deref-1.bad.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/70-local-definition-3.bad.expected)
    (:result 01.pretty.tests/70-local-definition-3.bad.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/75-lambda-3.good.expected)
    (:result 01.pretty.tests/75-lambda-3.good.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 01.pretty.tests/87-infix-application-4.bad.expected)
    (:result 01.pretty.tests/87-infix-application-4.bad.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/08-arithmetic-08.expected)
    (:result 02.sexp.tests/08-arithmetic-08.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/53-match-12.expected)
    (:result 02.sexp.tests/53-match-12.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/12-boolean-04.expected)
    (:result 02.sexp.tests/12-boolean-04.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/72-list-monad-3.expected)
    (:result 02.sexp.tests/72-list-monad-3.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/18-constructor-04.expected)
    (:result 02.sexp.tests/18-constructor-04.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/29-local-definition-03.expected)
    (:result 02.sexp.tests/29-local-definition-03.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/13-boolean-05.expected)
    (:result 02.sexp.tests/13-boolean-05.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/41-allocate-06.expected)
    (:result 02.sexp.tests/41-allocate-06.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/02-arithmetic-02.expected)
    (:result 02.sexp.tests/02-arithmetic-02.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/20-record-02.expected)
    (:result 02.sexp.tests/20-record-02.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/15-constructor-01.expected)
    (:result 02.sexp.tests/15-constructor-01.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/19-record-01.expected)
    (:result 02.sexp.tests/19-record-01.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/26-sequence-02.expected)
    (:result 02.sexp.tests/26-sequence-02.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/67-sorted.expected)
    (:result 02.sexp.tests/67-sorted.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/04-arithmetic-04.expected)
    (:result 02.sexp.tests/04-arithmetic-04.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/66-concat.expected)
    (:result 02.sexp.tests/66-concat.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/36-allocate-01.expected)
    (:result 02.sexp.tests/36-allocate-01.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/71-list-monad.expected)
    (:result 02.sexp.tests/71-list-monad.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/49-match-08.expected)
    (:result 02.sexp.tests/49-match-08.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/14-string-01.expected)
    (:result 02.sexp.tests/14-string-01.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/50-match-09.expected)
    (:result 02.sexp.tests/50-match-09.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/42-match-01.expected)
    (:result 02.sexp.tests/42-match-01.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/32-application.expected)
    (:result 02.sexp.tests/32-application.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/62-for-01.expected)
    (:result 02.sexp.tests/62-for-01.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/70-tree.expected)
    (:result 02.sexp.tests/70-tree.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/47-match-06.expected)
    (:result 02.sexp.tests/47-match-06.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/59-while-02.expected)
    (:result 02.sexp.tests/59-while-02.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/25-sequence-01.expected)
    (:result 02.sexp.tests/25-sequence-01.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/54-match-13.expected)
    (:result 02.sexp.tests/54-match-13.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/31-local-definition-05.expected)
    (:result 02.sexp.tests/31-local-definition-05.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/05-arithmetic-05.expected)
    (:result 02.sexp.tests/05-arithmetic-05.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/69-sort-big.expected)
    (:result 02.sexp.tests/69-sort-big.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/22-field-01.expected)
    (:result 02.sexp.tests/22-field-01.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/55-if-01.expected)
    (:result 02.sexp.tests/55-if-01.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/17-constructor-03.expected)
    (:result 02.sexp.tests/17-constructor-03.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/03-arithmetic-03.expected)
    (:result 02.sexp.tests/03-arithmetic-03.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/35-application-04.expected)
    (:result 02.sexp.tests/35-application-04.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/10-boolean-02.expected)
    (:result 02.sexp.tests/10-boolean-02.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/11-boolean-03.expected)
    (:result 02.sexp.tests/11-boolean-03.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/60-while-03.expected)
    (:result 02.sexp.tests/60-while-03.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/56-if-02.expected)
    (:result 02.sexp.tests/56-if-02.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/52-match-11.expected)
    (:result 02.sexp.tests/52-match-11.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/01-arithmetic-01.expected)
    (:result 02.sexp.tests/01-arithmetic-01.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/07-arithmetic-07.expected)
    (:result 02.sexp.tests/07-arithmetic-07.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/24-field-03.expected)
    (:result 02.sexp.tests/24-field-03.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/43-match-02.expected)
    (:result 02.sexp.tests/43-match-02.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/34-application-03.expected)
    (:result 02.sexp.tests/34-application-03.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/57-if-03.expected)
    (:result 02.sexp.tests/57-if-03.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/68-sort.expected)
    (:result 02.sexp.tests/68-sort.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/30-local-definition-04.expected)
    (:result 02.sexp.tests/30-local-definition-04.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/45-match-04.expected)
    (:result 02.sexp.tests/45-match-04.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/27-local-definition-01.expected)
    (:result 02.sexp.tests/27-local-definition-01.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/37-allocate-02.expected)
    (:result 02.sexp.tests/37-allocate-02.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/09-boolean-01.expected)
    (:result 02.sexp.tests/09-boolean-01.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/61-while-04.expected)
    (:result 02.sexp.tests/61-while-04.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/48-match-07.expected)
    (:result 02.sexp.tests/48-match-07.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/65-for-04.expected)
    (:result 02.sexp.tests/65-for-04.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/16-constructor-02.expected)
    (:result 02.sexp.tests/16-constructor-02.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/64-for-03.expected)
    (:result 02.sexp.tests/64-for-03.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/46-match-05.expected)
    (:result 02.sexp.tests/46-match-05.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/58-while-01.expected)
    (:result 02.sexp.tests/58-while-01.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/38-allocate-03.expected)
    (:result 02.sexp.tests/38-allocate-03.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/06-arithmetic-06.expected)
    (:result 02.sexp.tests/06-arithmetic-06.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/28-local-definition-02.expected)
    (:result 02.sexp.tests/28-local-definition-02.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/39-allocate-04.expected)
    (:result 02.sexp.tests/39-allocate-04.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/40-allocate-05.expected)
    (:result 02.sexp.tests/40-allocate-05.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/63-for-02.expected)
    (:result 02.sexp.tests/63-for-02.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/23-field-02.expected)
    (:result 02.sexp.tests/23-field-02.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/51-match-10.expected)
    (:result 02.sexp.tests/51-match-10.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/33-application-02.expected)
    (:result 02.sexp.tests/33-application-02.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/21-record-03.expected)
    (:result 02.sexp.tests/21-record-03.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/44-match-03.expected)
    (:result 02.sexp.tests/44-match-03.old_code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/08-arithmetic-08.expected)
    (:result 02.sexp.tests/08-arithmetic-08.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/53-match-12.expected)
    (:result 02.sexp.tests/53-match-12.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/12-boolean-04.expected)
    (:result 02.sexp.tests/12-boolean-04.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/72-list-monad-3.expected)
    (:result 02.sexp.tests/72-list-monad-3.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/18-constructor-04.expected)
    (:result 02.sexp.tests/18-constructor-04.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/29-local-definition-03.expected)
    (:result 02.sexp.tests/29-local-definition-03.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/13-boolean-05.expected)
    (:result 02.sexp.tests/13-boolean-05.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/41-allocate-06.expected)
    (:result 02.sexp.tests/41-allocate-06.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/02-arithmetic-02.expected)
    (:result 02.sexp.tests/02-arithmetic-02.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/20-record-02.expected)
    (:result 02.sexp.tests/20-record-02.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/15-constructor-01.expected)
    (:result 02.sexp.tests/15-constructor-01.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/19-record-01.expected)
    (:result 02.sexp.tests/19-record-01.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/26-sequence-02.expected)
    (:result 02.sexp.tests/26-sequence-02.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/67-sorted.expected)
    (:result 02.sexp.tests/67-sorted.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/04-arithmetic-04.expected)
    (:result 02.sexp.tests/04-arithmetic-04.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/66-concat.expected)
    (:result 02.sexp.tests/66-concat.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/36-allocate-01.expected)
    (:result 02.sexp.tests/36-allocate-01.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/71-list-monad.expected)
    (:result 02.sexp.tests/71-list-monad.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/49-match-08.expected)
    (:result 02.sexp.tests/49-match-08.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/14-string-01.expected)
    (:result 02.sexp.tests/14-string-01.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/50-match-09.expected)
    (:result 02.sexp.tests/50-match-09.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/42-match-01.expected)
    (:result 02.sexp.tests/42-match-01.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/32-application.expected)
    (:result 02.sexp.tests/32-application.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/62-for-01.expected)
    (:result 02.sexp.tests/62-for-01.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/70-tree.expected)
    (:result 02.sexp.tests/70-tree.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/47-match-06.expected)
    (:result 02.sexp.tests/47-match-06.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/59-while-02.expected)
    (:result 02.sexp.tests/59-while-02.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/25-sequence-01.expected)
    (:result 02.sexp.tests/25-sequence-01.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/54-match-13.expected)
    (:result 02.sexp.tests/54-match-13.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/31-local-definition-05.expected)
    (:result 02.sexp.tests/31-local-definition-05.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/05-arithmetic-05.expected)
    (:result 02.sexp.tests/05-arithmetic-05.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/69-sort-big.expected)
    (:result 02.sexp.tests/69-sort-big.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/22-field-01.expected)
    (:result 02.sexp.tests/22-field-01.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/55-if-01.expected)
    (:result 02.sexp.tests/55-if-01.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/17-constructor-03.expected)
    (:result 02.sexp.tests/17-constructor-03.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/03-arithmetic-03.expected)
    (:result 02.sexp.tests/03-arithmetic-03.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/35-application-04.expected)
    (:result 02.sexp.tests/35-application-04.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/10-boolean-02.expected)
    (:result 02.sexp.tests/10-boolean-02.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/11-boolean-03.expected)
    (:result 02.sexp.tests/11-boolean-03.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/60-while-03.expected)
    (:result 02.sexp.tests/60-while-03.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/56-if-02.expected)
    (:result 02.sexp.tests/56-if-02.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/52-match-11.expected)
    (:result 02.sexp.tests/52-match-11.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/01-arithmetic-01.expected)
    (:result 02.sexp.tests/01-arithmetic-01.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/07-arithmetic-07.expected)
    (:result 02.sexp.tests/07-arithmetic-07.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/24-field-03.expected)
    (:result 02.sexp.tests/24-field-03.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/43-match-02.expected)
    (:result 02.sexp.tests/43-match-02.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/34-application-03.expected)
    (:result 02.sexp.tests/34-application-03.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/57-if-03.expected)
    (:result 02.sexp.tests/57-if-03.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/68-sort.expected)
    (:result 02.sexp.tests/68-sort.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/30-local-definition-04.expected)
    (:result 02.sexp.tests/30-local-definition-04.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/45-match-04.expected)
    (:result 02.sexp.tests/45-match-04.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/27-local-definition-01.expected)
    (:result 02.sexp.tests/27-local-definition-01.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/37-allocate-02.expected)
    (:result 02.sexp.tests/37-allocate-02.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/09-boolean-01.expected)
    (:result 02.sexp.tests/09-boolean-01.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/61-while-04.expected)
    (:result 02.sexp.tests/61-while-04.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/48-match-07.expected)
    (:result 02.sexp.tests/48-match-07.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/65-for-04.expected)
    (:result 02.sexp.tests/65-for-04.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/16-constructor-02.expected)
    (:result 02.sexp.tests/16-constructor-02.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/64-for-03.expected)
    (:result 02.sexp.tests/64-for-03.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/46-match-05.expected)
    (:result 02.sexp.tests/46-match-05.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/58-while-01.expected)
    (:result 02.sexp.tests/58-while-01.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/38-allocate-03.expected)
    (:result 02.sexp.tests/38-allocate-03.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/06-arithmetic-06.expected)
    (:result 02.sexp.tests/06-arithmetic-06.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/28-local-definition-02.expected)
    (:result 02.sexp.tests/28-local-definition-02.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/39-allocate-04.expected)
    (:result 02.sexp.tests/39-allocate-04.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/40-allocate-05.expected)
    (:result 02.sexp.tests/40-allocate-05.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/63-for-02.expected)
    (:result 02.sexp.tests/63-for-02.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/23-field-02.expected)
    (:result 02.sexp.tests/23-field-02.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/51-match-10.expected)
    (:result 02.sexp.tests/51-match-10.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/33-application-02.expected)
    (:result 02.sexp.tests/33-application-02.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/21-record-03.expected)
    (:result 02.sexp.tests/21-record-03.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/44-match-03.expected)
    (:result 02.sexp.tests/44-match-03.code.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/08-arithmetic-08.expected)
    (:result 02.sexp.tests/08-arithmetic-08.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/53-match-12.expected)
    (:result 02.sexp.tests/53-match-12.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/12-boolean-04.expected)
    (:result 02.sexp.tests/12-boolean-04.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/72-list-monad-3.expected)
    (:result 02.sexp.tests/72-list-monad-3.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/18-constructor-04.expected)
    (:result 02.sexp.tests/18-constructor-04.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/29-local-definition-03.expected)
    (:result 02.sexp.tests/29-local-definition-03.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/13-boolean-05.expected)
    (:result 02.sexp.tests/13-boolean-05.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/41-allocate-06.expected)
    (:result 02.sexp.tests/41-allocate-06.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/02-arithmetic-02.expected)
    (:result 02.sexp.tests/02-arithmetic-02.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/20-record-02.expected)
    (:result 02.sexp.tests/20-record-02.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/15-constructor-01.expected)
    (:result 02.sexp.tests/15-constructor-01.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/19-record-01.expected)
    (:result 02.sexp.tests/19-record-01.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/26-sequence-02.expected)
    (:result 02.sexp.tests/26-sequence-02.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/67-sorted.expected)
    (:result 02.sexp.tests/67-sorted.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/04-arithmetic-04.expected)
    (:result 02.sexp.tests/04-arithmetic-04.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/66-concat.expected)
    (:result 02.sexp.tests/66-concat.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/36-allocate-01.expected)
    (:result 02.sexp.tests/36-allocate-01.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/71-list-monad.expected)
    (:result 02.sexp.tests/71-list-monad.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/49-match-08.expected)
    (:result 02.sexp.tests/49-match-08.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/14-string-01.expected)
    (:result 02.sexp.tests/14-string-01.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/50-match-09.expected)
    (:result 02.sexp.tests/50-match-09.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/42-match-01.expected)
    (:result 02.sexp.tests/42-match-01.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/32-application.expected)
    (:result 02.sexp.tests/32-application.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/62-for-01.expected)
    (:result 02.sexp.tests/62-for-01.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/70-tree.expected)
    (:result 02.sexp.tests/70-tree.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/47-match-06.expected)
    (:result 02.sexp.tests/47-match-06.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/59-while-02.expected)
    (:result 02.sexp.tests/59-while-02.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/25-sequence-01.expected)
    (:result 02.sexp.tests/25-sequence-01.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/54-match-13.expected)
    (:result 02.sexp.tests/54-match-13.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/31-local-definition-05.expected)
    (:result 02.sexp.tests/31-local-definition-05.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/05-arithmetic-05.expected)
    (:result 02.sexp.tests/05-arithmetic-05.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/69-sort-big.expected)
    (:result 02.sexp.tests/69-sort-big.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/22-field-01.expected)
    (:result 02.sexp.tests/22-field-01.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/55-if-01.expected)
    (:result 02.sexp.tests/55-if-01.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/17-constructor-03.expected)
    (:result 02.sexp.tests/17-constructor-03.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/03-arithmetic-03.expected)
    (:result 02.sexp.tests/03-arithmetic-03.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/35-application-04.expected)
    (:result 02.sexp.tests/35-application-04.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/10-boolean-02.expected)
    (:result 02.sexp.tests/10-boolean-02.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/11-boolean-03.expected)
    (:result 02.sexp.tests/11-boolean-03.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/60-while-03.expected)
    (:result 02.sexp.tests/60-while-03.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/56-if-02.expected)
    (:result 02.sexp.tests/56-if-02.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/52-match-11.expected)
    (:result 02.sexp.tests/52-match-11.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/01-arithmetic-01.expected)
    (:result 02.sexp.tests/01-arithmetic-01.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/07-arithmetic-07.expected)
    (:result 02.sexp.tests/07-arithmetic-07.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/24-field-03.expected)
    (:result 02.sexp.tests/24-field-03.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/43-match-02.expected)
    (:result 02.sexp.tests/43-match-02.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/34-application-03.expected)
    (:result 02.sexp.tests/34-application-03.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/57-if-03.expected)
    (:result 02.sexp.tests/57-if-03.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/68-sort.expected)
    (:result 02.sexp.tests/68-sort.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/30-local-definition-04.expected)
    (:result 02.sexp.tests/30-local-definition-04.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/45-match-04.expected)
    (:result 02.sexp.tests/45-match-04.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/27-local-definition-01.expected)
    (:result 02.sexp.tests/27-local-definition-01.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/37-allocate-02.expected)
    (:result 02.sexp.tests/37-allocate-02.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/09-boolean-01.expected)
    (:result 02.sexp.tests/09-boolean-01.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/61-while-04.expected)
    (:result 02.sexp.tests/61-while-04.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/48-match-07.expected)
    (:result 02.sexp.tests/48-match-07.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/65-for-04.expected)
    (:result 02.sexp.tests/65-for-04.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/16-constructor-02.expected)
    (:result 02.sexp.tests/16-constructor-02.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/64-for-03.expected)
    (:result 02.sexp.tests/64-for-03.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/46-match-05.expected)
    (:result 02.sexp.tests/46-match-05.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/58-while-01.expected)
    (:result 02.sexp.tests/58-while-01.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/38-allocate-03.expected)
    (:result 02.sexp.tests/38-allocate-03.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/06-arithmetic-06.expected)
    (:result 02.sexp.tests/06-arithmetic-06.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/28-local-definition-02.expected)
    (:result 02.sexp.tests/28-local-definition-02.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/39-allocate-04.expected)
    (:result 02.sexp.tests/39-allocate-04.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/40-allocate-05.expected)
    (:result 02.sexp.tests/40-allocate-05.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/63-for-02.expected)
    (:result 02.sexp.tests/63-for-02.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/23-field-02.expected)
    (:result 02.sexp.tests/23-field-02.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/51-match-10.expected)
    (:result 02.sexp.tests/51-match-10.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/33-application-02.expected)
    (:result 02.sexp.tests/33-application-02.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/21-record-03.expected)
    (:result 02.sexp.tests/21-record-03.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/44-match-03.expected)
    (:result 02.sexp.tests/44-match-03.code_no_commute_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/08-arithmetic-08.expected)
    (:result 02.sexp.tests/08-arithmetic-08.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/53-match-12.expected)
    (:result 02.sexp.tests/53-match-12.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/12-boolean-04.expected)
    (:result 02.sexp.tests/12-boolean-04.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/72-list-monad-3.expected)
    (:result 02.sexp.tests/72-list-monad-3.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/18-constructor-04.expected)
    (:result 02.sexp.tests/18-constructor-04.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/29-local-definition-03.expected)
    (:result 02.sexp.tests/29-local-definition-03.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/13-boolean-05.expected)
    (:result 02.sexp.tests/13-boolean-05.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/41-allocate-06.expected)
    (:result 02.sexp.tests/41-allocate-06.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/02-arithmetic-02.expected)
    (:result 02.sexp.tests/02-arithmetic-02.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/20-record-02.expected)
    (:result 02.sexp.tests/20-record-02.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/15-constructor-01.expected)
    (:result 02.sexp.tests/15-constructor-01.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/19-record-01.expected)
    (:result 02.sexp.tests/19-record-01.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/26-sequence-02.expected)
    (:result 02.sexp.tests/26-sequence-02.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/67-sorted.expected)
    (:result 02.sexp.tests/67-sorted.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/04-arithmetic-04.expected)
    (:result 02.sexp.tests/04-arithmetic-04.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/66-concat.expected)
    (:result 02.sexp.tests/66-concat.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/36-allocate-01.expected)
    (:result 02.sexp.tests/36-allocate-01.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/71-list-monad.expected)
    (:result 02.sexp.tests/71-list-monad.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/49-match-08.expected)
    (:result 02.sexp.tests/49-match-08.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/14-string-01.expected)
    (:result 02.sexp.tests/14-string-01.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/50-match-09.expected)
    (:result 02.sexp.tests/50-match-09.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/42-match-01.expected)
    (:result 02.sexp.tests/42-match-01.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/32-application.expected)
    (:result 02.sexp.tests/32-application.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/62-for-01.expected)
    (:result 02.sexp.tests/62-for-01.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/70-tree.expected)
    (:result 02.sexp.tests/70-tree.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/47-match-06.expected)
    (:result 02.sexp.tests/47-match-06.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/59-while-02.expected)
    (:result 02.sexp.tests/59-while-02.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/25-sequence-01.expected)
    (:result 02.sexp.tests/25-sequence-01.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/54-match-13.expected)
    (:result 02.sexp.tests/54-match-13.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/31-local-definition-05.expected)
    (:result 02.sexp.tests/31-local-definition-05.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/05-arithmetic-05.expected)
    (:result 02.sexp.tests/05-arithmetic-05.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/69-sort-big.expected)
    (:result 02.sexp.tests/69-sort-big.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/22-field-01.expected)
    (:result 02.sexp.tests/22-field-01.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/55-if-01.expected)
    (:result 02.sexp.tests/55-if-01.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/17-constructor-03.expected)
    (:result 02.sexp.tests/17-constructor-03.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/03-arithmetic-03.expected)
    (:result 02.sexp.tests/03-arithmetic-03.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/35-application-04.expected)
    (:result 02.sexp.tests/35-application-04.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/10-boolean-02.expected)
    (:result 02.sexp.tests/10-boolean-02.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/11-boolean-03.expected)
    (:result 02.sexp.tests/11-boolean-03.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/60-while-03.expected)
    (:result 02.sexp.tests/60-while-03.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/56-if-02.expected)
    (:result 02.sexp.tests/56-if-02.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/52-match-11.expected)
    (:result 02.sexp.tests/52-match-11.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/01-arithmetic-01.expected)
    (:result 02.sexp.tests/01-arithmetic-01.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/07-arithmetic-07.expected)
    (:result 02.sexp.tests/07-arithmetic-07.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/24-field-03.expected)
    (:result 02.sexp.tests/24-field-03.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/43-match-02.expected)
    (:result 02.sexp.tests/43-match-02.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/34-application-03.expected)
    (:result 02.sexp.tests/34-application-03.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/57-if-03.expected)
    (:result 02.sexp.tests/57-if-03.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/68-sort.expected)
    (:result 02.sexp.tests/68-sort.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/30-local-definition-04.expected)
    (:result 02.sexp.tests/30-local-definition-04.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/45-match-04.expected)
    (:result 02.sexp.tests/45-match-04.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/27-local-definition-01.expected)
    (:result 02.sexp.tests/27-local-definition-01.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/37-allocate-02.expected)
    (:result 02.sexp.tests/37-allocate-02.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/09-boolean-01.expected)
    (:result 02.sexp.tests/09-boolean-01.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/61-while-04.expected)
    (:result 02.sexp.tests/61-while-04.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/48-match-07.expected)
    (:result 02.sexp.tests/48-match-07.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/65-for-04.expected)
    (:result 02.sexp.tests/65-for-04.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/16-constructor-02.expected)
    (:result 02.sexp.tests/16-constructor-02.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/64-for-03.expected)
    (:result 02.sexp.tests/64-for-03.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/46-match-05.expected)
    (:result 02.sexp.tests/46-match-05.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/58-while-01.expected)
    (:result 02.sexp.tests/58-while-01.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/38-allocate-03.expected)
    (:result 02.sexp.tests/38-allocate-03.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/06-arithmetic-06.expected)
    (:result 02.sexp.tests/06-arithmetic-06.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/28-local-definition-02.expected)
    (:result 02.sexp.tests/28-local-definition-02.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/39-allocate-04.expected)
    (:result 02.sexp.tests/39-allocate-04.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/40-allocate-05.expected)
    (:result 02.sexp.tests/40-allocate-05.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/63-for-02.expected)
    (:result 02.sexp.tests/63-for-02.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/23-field-02.expected)
    (:result 02.sexp.tests/23-field-02.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/51-match-10.expected)
    (:result 02.sexp.tests/51-match-10.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/33-application-02.expected)
    (:result 02.sexp.tests/33-application-02.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/21-record-03.expected)
    (:result 02.sexp.tests/21-record-03.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/44-match-03.expected)
    (:result 02.sexp.tests/44-match-03.code_no_inlining.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/08-arithmetic-08.expected)
    (:result 02.sexp.tests/08-arithmetic-08.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/53-match-12.expected)
    (:result 02.sexp.tests/53-match-12.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/12-boolean-04.expected)
    (:result 02.sexp.tests/12-boolean-04.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/72-list-monad-3.expected)
    (:result 02.sexp.tests/72-list-monad-3.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/18-constructor-04.expected)
    (:result 02.sexp.tests/18-constructor-04.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/29-local-definition-03.expected)
    (:result 02.sexp.tests/29-local-definition-03.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/13-boolean-05.expected)
    (:result 02.sexp.tests/13-boolean-05.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/41-allocate-06.expected)
    (:result 02.sexp.tests/41-allocate-06.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/02-arithmetic-02.expected)
    (:result 02.sexp.tests/02-arithmetic-02.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/20-record-02.expected)
    (:result 02.sexp.tests/20-record-02.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/15-constructor-01.expected)
    (:result 02.sexp.tests/15-constructor-01.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/19-record-01.expected)
    (:result 02.sexp.tests/19-record-01.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/26-sequence-02.expected)
    (:result 02.sexp.tests/26-sequence-02.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/67-sorted.expected)
    (:result 02.sexp.tests/67-sorted.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/04-arithmetic-04.expected)
    (:result 02.sexp.tests/04-arithmetic-04.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/66-concat.expected)
    (:result 02.sexp.tests/66-concat.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/36-allocate-01.expected)
    (:result 02.sexp.tests/36-allocate-01.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/71-list-monad.expected)
    (:result 02.sexp.tests/71-list-monad.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/49-match-08.expected)
    (:result 02.sexp.tests/49-match-08.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/14-string-01.expected)
    (:result 02.sexp.tests/14-string-01.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/50-match-09.expected)
    (:result 02.sexp.tests/50-match-09.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/42-match-01.expected)
    (:result 02.sexp.tests/42-match-01.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/32-application.expected)
    (:result 02.sexp.tests/32-application.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/62-for-01.expected)
    (:result 02.sexp.tests/62-for-01.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/70-tree.expected)
    (:result 02.sexp.tests/70-tree.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/47-match-06.expected)
    (:result 02.sexp.tests/47-match-06.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/59-while-02.expected)
    (:result 02.sexp.tests/59-while-02.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/25-sequence-01.expected)
    (:result 02.sexp.tests/25-sequence-01.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/54-match-13.expected)
    (:result 02.sexp.tests/54-match-13.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/31-local-definition-05.expected)
    (:result 02.sexp.tests/31-local-definition-05.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/05-arithmetic-05.expected)
    (:result 02.sexp.tests/05-arithmetic-05.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/69-sort-big.expected)
    (:result 02.sexp.tests/69-sort-big.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/22-field-01.expected)
    (:result 02.sexp.tests/22-field-01.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/55-if-01.expected)
    (:result 02.sexp.tests/55-if-01.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/17-constructor-03.expected)
    (:result 02.sexp.tests/17-constructor-03.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/03-arithmetic-03.expected)
    (:result 02.sexp.tests/03-arithmetic-03.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/35-application-04.expected)
    (:result 02.sexp.tests/35-application-04.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/10-boolean-02.expected)
    (:result 02.sexp.tests/10-boolean-02.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/11-boolean-03.expected)
    (:result 02.sexp.tests/11-boolean-03.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/60-while-03.expected)
    (:result 02.sexp.tests/60-while-03.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/56-if-02.expected)
    (:result 02.sexp.tests/56-if-02.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/52-match-11.expected)
    (:result 02.sexp.tests/52-match-11.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/01-arithmetic-01.expected)
    (:result 02.sexp.tests/01-arithmetic-01.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/07-arithmetic-07.expected)
    (:result 02.sexp.tests/07-arithmetic-07.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/24-field-03.expected)
    (:result 02.sexp.tests/24-field-03.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/43-match-02.expected)
    (:result 02.sexp.tests/43-match-02.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/34-application-03.expected)
    (:result 02.sexp.tests/34-application-03.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/57-if-03.expected)
    (:result 02.sexp.tests/57-if-03.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/68-sort.expected)
    (:result 02.sexp.tests/68-sort.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/30-local-definition-04.expected)
    (:result 02.sexp.tests/30-local-definition-04.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/45-match-04.expected)
    (:result 02.sexp.tests/45-match-04.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/27-local-definition-01.expected)
    (:result 02.sexp.tests/27-local-definition-01.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/37-allocate-02.expected)
    (:result 02.sexp.tests/37-allocate-02.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/09-boolean-01.expected)
    (:result 02.sexp.tests/09-boolean-01.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/61-while-04.expected)
    (:result 02.sexp.tests/61-while-04.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/48-match-07.expected)
    (:result 02.sexp.tests/48-match-07.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/65-for-04.expected)
    (:result 02.sexp.tests/65-for-04.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/16-constructor-02.expected)
    (:result 02.sexp.tests/16-constructor-02.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/64-for-03.expected)
    (:result 02.sexp.tests/64-for-03.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/46-match-05.expected)
    (:result 02.sexp.tests/46-match-05.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/58-while-01.expected)
    (:result 02.sexp.tests/58-while-01.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/38-allocate-03.expected)
    (:result 02.sexp.tests/38-allocate-03.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/06-arithmetic-06.expected)
    (:result 02.sexp.tests/06-arithmetic-06.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/28-local-definition-02.expected)
    (:result 02.sexp.tests/28-local-definition-02.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/39-allocate-04.expected)
    (:result 02.sexp.tests/39-allocate-04.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/40-allocate-05.expected)
    (:result 02.sexp.tests/40-allocate-05.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/63-for-02.expected)
    (:result 02.sexp.tests/63-for-02.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/23-field-02.expected)
    (:result 02.sexp.tests/23-field-02.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/51-match-10.expected)
    (:result 02.sexp.tests/51-match-10.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/33-application-02.expected)
    (:result 02.sexp.tests/33-application-02.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/21-record-03.expected)
    (:result 02.sexp.tests/21-record-03.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/44-match-03.expected)
    (:result 02.sexp.tests/44-match-03.code_no_stack_optim.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/08-arithmetic-08.expected)
    (:result 02.sexp.tests/08-arithmetic-08.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/53-match-12.expected)
    (:result 02.sexp.tests/53-match-12.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/12-boolean-04.expected)
    (:result 02.sexp.tests/12-boolean-04.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/72-list-monad-3.expected)
    (:result 02.sexp.tests/72-list-monad-3.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/18-constructor-04.expected)
    (:result 02.sexp.tests/18-constructor-04.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/29-local-definition-03.expected)
    (:result 02.sexp.tests/29-local-definition-03.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/13-boolean-05.expected)
    (:result 02.sexp.tests/13-boolean-05.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/41-allocate-06.expected)
    (:result 02.sexp.tests/41-allocate-06.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/02-arithmetic-02.expected)
    (:result 02.sexp.tests/02-arithmetic-02.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/20-record-02.expected)
    (:result 02.sexp.tests/20-record-02.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/15-constructor-01.expected)
    (:result 02.sexp.tests/15-constructor-01.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/19-record-01.expected)
    (:result 02.sexp.tests/19-record-01.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/26-sequence-02.expected)
    (:result 02.sexp.tests/26-sequence-02.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/67-sorted.expected)
    (:result 02.sexp.tests/67-sorted.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/04-arithmetic-04.expected)
    (:result 02.sexp.tests/04-arithmetic-04.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/66-concat.expected)
    (:result 02.sexp.tests/66-concat.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/36-allocate-01.expected)
    (:result 02.sexp.tests/36-allocate-01.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/71-list-monad.expected)
    (:result 02.sexp.tests/71-list-monad.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/49-match-08.expected)
    (:result 02.sexp.tests/49-match-08.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/14-string-01.expected)
    (:result 02.sexp.tests/14-string-01.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/50-match-09.expected)
    (:result 02.sexp.tests/50-match-09.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/42-match-01.expected)
    (:result 02.sexp.tests/42-match-01.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/32-application.expected)
    (:result 02.sexp.tests/32-application.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/62-for-01.expected)
    (:result 02.sexp.tests/62-for-01.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/70-tree.expected)
    (:result 02.sexp.tests/70-tree.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/47-match-06.expected)
    (:result 02.sexp.tests/47-match-06.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/59-while-02.expected)
    (:result 02.sexp.tests/59-while-02.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/25-sequence-01.expected)
    (:result 02.sexp.tests/25-sequence-01.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/54-match-13.expected)
    (:result 02.sexp.tests/54-match-13.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/31-local-definition-05.expected)
    (:result 02.sexp.tests/31-local-definition-05.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/05-arithmetic-05.expected)
    (:result 02.sexp.tests/05-arithmetic-05.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/69-sort-big.expected)
    (:result 02.sexp.tests/69-sort-big.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/22-field-01.expected)
    (:result 02.sexp.tests/22-field-01.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/55-if-01.expected)
    (:result 02.sexp.tests/55-if-01.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/17-constructor-03.expected)
    (:result 02.sexp.tests/17-constructor-03.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/03-arithmetic-03.expected)
    (:result 02.sexp.tests/03-arithmetic-03.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/35-application-04.expected)
    (:result 02.sexp.tests/35-application-04.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/10-boolean-02.expected)
    (:result 02.sexp.tests/10-boolean-02.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/11-boolean-03.expected)
    (:result 02.sexp.tests/11-boolean-03.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/60-while-03.expected)
    (:result 02.sexp.tests/60-while-03.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/56-if-02.expected)
    (:result 02.sexp.tests/56-if-02.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/52-match-11.expected)
    (:result 02.sexp.tests/52-match-11.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/01-arithmetic-01.expected)
    (:result 02.sexp.tests/01-arithmetic-01.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/07-arithmetic-07.expected)
    (:result 02.sexp.tests/07-arithmetic-07.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/24-field-03.expected)
    (:result 02.sexp.tests/24-field-03.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/43-match-02.expected)
    (:result 02.sexp.tests/43-match-02.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/34-application-03.expected)
    (:result 02.sexp.tests/34-application-03.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/57-if-03.expected)
    (:result 02.sexp.tests/57-if-03.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/68-sort.expected)
    (:result 02.sexp.tests/68-sort.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/30-local-definition-04.expected)
    (:result 02.sexp.tests/30-local-definition-04.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/45-match-04.expected)
    (:result 02.sexp.tests/45-match-04.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/27-local-definition-01.expected)
    (:result 02.sexp.tests/27-local-definition-01.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/37-allocate-02.expected)
    (:result 02.sexp.tests/37-allocate-02.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/09-boolean-01.expected)
    (:result 02.sexp.tests/09-boolean-01.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/61-while-04.expected)
    (:result 02.sexp.tests/61-while-04.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/48-match-07.expected)
    (:result 02.sexp.tests/48-match-07.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/65-for-04.expected)
    (:result 02.sexp.tests/65-for-04.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/16-constructor-02.expected)
    (:result 02.sexp.tests/16-constructor-02.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/64-for-03.expected)
    (:result 02.sexp.tests/64-for-03.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/46-match-05.expected)
    (:result 02.sexp.tests/46-match-05.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/58-while-01.expected)
    (:result 02.sexp.tests/58-while-01.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/38-allocate-03.expected)
    (:result 02.sexp.tests/38-allocate-03.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/06-arithmetic-06.expected)
    (:result 02.sexp.tests/06-arithmetic-06.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/28-local-definition-02.expected)
    (:result 02.sexp.tests/28-local-definition-02.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/39-allocate-04.expected)
    (:result 02.sexp.tests/39-allocate-04.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/40-allocate-05.expected)
    (:result 02.sexp.tests/40-allocate-05.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/63-for-02.expected)
    (:result 02.sexp.tests/63-for-02.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/23-field-02.expected)
    (:result 02.sexp.tests/23-field-02.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/51-match-10.expected)
    (:result 02.sexp.tests/51-match-10.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/33-application-02.expected)
    (:result 02.sexp.tests/33-application-02.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/21-record-03.expected)
    (:result 02.sexp.tests/21-record-03.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/44-match-03.expected)
    (:result 02.sexp.tests/44-match-03.code_no_commute.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/08-arithmetic-08.expected)
    (:result 02.sexp.tests/08-arithmetic-08.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/53-match-12.expected)
    (:result 02.sexp.tests/53-match-12.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/12-boolean-04.expected)
    (:result 02.sexp.tests/12-boolean-04.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/72-list-monad-3.expected)
    (:result 02.sexp.tests/72-list-monad-3.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/18-constructor-04.expected)
    (:result 02.sexp.tests/18-constructor-04.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/29-local-definition-03.expected)
    (:result 02.sexp.tests/29-local-definition-03.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/13-boolean-05.expected)
    (:result 02.sexp.tests/13-boolean-05.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/41-allocate-06.expected)
    (:result 02.sexp.tests/41-allocate-06.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/02-arithmetic-02.expected)
    (:result 02.sexp.tests/02-arithmetic-02.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/20-record-02.expected)
    (:result 02.sexp.tests/20-record-02.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/15-constructor-01.expected)
    (:result 02.sexp.tests/15-constructor-01.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/19-record-01.expected)
    (:result 02.sexp.tests/19-record-01.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/26-sequence-02.expected)
    (:result 02.sexp.tests/26-sequence-02.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/67-sorted.expected)
    (:result 02.sexp.tests/67-sorted.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/04-arithmetic-04.expected)
    (:result 02.sexp.tests/04-arithmetic-04.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/66-concat.expected)
    (:result 02.sexp.tests/66-concat.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/36-allocate-01.expected)
    (:result 02.sexp.tests/36-allocate-01.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/71-list-monad.expected)
    (:result 02.sexp.tests/71-list-monad.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/49-match-08.expected)
    (:result 02.sexp.tests/49-match-08.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/14-string-01.expected)
    (:result 02.sexp.tests/14-string-01.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/50-match-09.expected)
    (:result 02.sexp.tests/50-match-09.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/42-match-01.expected)
    (:result 02.sexp.tests/42-match-01.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/32-application.expected)
    (:result 02.sexp.tests/32-application.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/62-for-01.expected)
    (:result 02.sexp.tests/62-for-01.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/70-tree.expected)
    (:result 02.sexp.tests/70-tree.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/47-match-06.expected)
    (:result 02.sexp.tests/47-match-06.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/59-while-02.expected)
    (:result 02.sexp.tests/59-while-02.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/25-sequence-01.expected)
    (:result 02.sexp.tests/25-sequence-01.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/54-match-13.expected)
    (:result 02.sexp.tests/54-match-13.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/31-local-definition-05.expected)
    (:result 02.sexp.tests/31-local-definition-05.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/05-arithmetic-05.expected)
    (:result 02.sexp.tests/05-arithmetic-05.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/69-sort-big.expected)
    (:result 02.sexp.tests/69-sort-big.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/22-field-01.expected)
    (:result 02.sexp.tests/22-field-01.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/55-if-01.expected)
    (:result 02.sexp.tests/55-if-01.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/17-constructor-03.expected)
    (:result 02.sexp.tests/17-constructor-03.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/03-arithmetic-03.expected)
    (:result 02.sexp.tests/03-arithmetic-03.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/35-application-04.expected)
    (:result 02.sexp.tests/35-application-04.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/10-boolean-02.expected)
    (:result 02.sexp.tests/10-boolean-02.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/11-boolean-03.expected)
    (:result 02.sexp.tests/11-boolean-03.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/60-while-03.expected)
    (:result 02.sexp.tests/60-while-03.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/56-if-02.expected)
    (:result 02.sexp.tests/56-if-02.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/52-match-11.expected)
    (:result 02.sexp.tests/52-match-11.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/01-arithmetic-01.expected)
    (:result 02.sexp.tests/01-arithmetic-01.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/07-arithmetic-07.expected)
    (:result 02.sexp.tests/07-arithmetic-07.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/24-field-03.expected)
    (:result 02.sexp.tests/24-field-03.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/43-match-02.expected)
    (:result 02.sexp.tests/43-match-02.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/34-application-03.expected)
    (:result 02.sexp.tests/34-application-03.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/57-if-03.expected)
    (:result 02.sexp.tests/57-if-03.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/68-sort.expected)
    (:result 02.sexp.tests/68-sort.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/30-local-definition-04.expected)
    (:result 02.sexp.tests/30-local-definition-04.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/45-match-04.expected)
    (:result 02.sexp.tests/45-match-04.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/27-local-definition-01.expected)
    (:result 02.sexp.tests/27-local-definition-01.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/37-allocate-02.expected)
    (:result 02.sexp.tests/37-allocate-02.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/09-boolean-01.expected)
    (:result 02.sexp.tests/09-boolean-01.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/61-while-04.expected)
    (:result 02.sexp.tests/61-while-04.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/48-match-07.expected)
    (:result 02.sexp.tests/48-match-07.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/65-for-04.expected)
    (:result 02.sexp.tests/65-for-04.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/16-constructor-02.expected)
    (:result 02.sexp.tests/16-constructor-02.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/64-for-03.expected)
    (:result 02.sexp.tests/64-for-03.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/46-match-05.expected)
    (:result 02.sexp.tests/46-match-05.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/58-while-01.expected)
    (:result 02.sexp.tests/58-while-01.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/38-allocate-03.expected)
    (:result 02.sexp.tests/38-allocate-03.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/06-arithmetic-06.expected)
    (:result 02.sexp.tests/06-arithmetic-06.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/28-local-definition-02.expected)
    (:result 02.sexp.tests/28-local-definition-02.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/39-allocate-04.expected)
    (:result 02.sexp.tests/39-allocate-04.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/40-allocate-05.expected)
    (:result 02.sexp.tests/40-allocate-05.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/63-for-02.expected)
    (:result 02.sexp.tests/63-for-02.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/23-field-02.expected)
    (:result 02.sexp.tests/23-field-02.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/51-match-10.expected)
    (:result 02.sexp.tests/51-match-10.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/33-application-02.expected)
    (:result 02.sexp.tests/33-application-02.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/21-record-03.expected)
    (:result 02.sexp.tests/21-record-03.table.backend.output))
  (action
    (diff %{expected} %{result})))

(rule
  (alias test_houblix)
  (deps
    (:expected 02.sexp.tests/44-match-03.expected)
    (:result 02.sexp.tests/44-match-03.table.backend.output))
  (action
    (diff %{expected} %{result})))
