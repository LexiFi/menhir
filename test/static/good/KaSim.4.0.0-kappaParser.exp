Grammar has 44 nonterminal symbols, among which 4 start symbols.
Grammar has 82 terminal symbols.
Grammar has 188 productions.
nullable(variable_declaration) = false
nullable(variable) = false
nullable(value_list) = false
nullable(token_expr) = true
nullable(sum_token) = false
nullable(start_rule) = false
nullable(standalone_effect_list) = false
nullable(standalone_bool_expr) = false
nullable(small_bool_expr) = false
nullable(small_alg_expr) = false
nullable(rule_expression) = false
nullable(rule_content) = false
nullable(rate) = true
nullable(print_expr) = true
nullable(port_expression) = false
nullable(perturbation_post) = true
nullable(perturbation_declaration) = false
nullable(perturbation_alarm) = true
nullable(pattern) = false
nullable(nonempty_print_expr) = false
nullable(non_empty_mixture) = false
nullable(newline) = false
nullable(nbr) = false
nullable(mod_agent) = true
nullable(mid_alg_expr) = false
nullable(link_state_mod) = true
nullable(link_state) = false
nullable(internal_state) = true
nullable(interface_expression) = true
nullable(interactive_command) = false
nullable(instruction) = false
nullable(init_declaration) = false
nullable(effect_list) = false
nullable(effect) = false
nullable(counter_test) = false
nullable(constant) = false
nullable(boolean) = false
nullable(bool_expr) = false
nullable(birate) = false
nullable(arrow) = false
nullable(alg_with_radius) = false
nullable(alg_expr) = false
nullable(agent_expression) = false
nullable(a_link_state) = false
first(variable_declaration) = LABEL ID
first(variable) = TIME PIPE NULL_EVENT LABEL ID EVENT
first(value_list) = STRING
first(token_expr) = PIPE
first(sum_token) = TRUE TMAX TIME TAN SQRT SINUS PIPE OP_PAR NULL_EVENT NOT MINUS MIN MAX LOG LABEL INT INFINITY ID FLOAT FALSE EXPONENT EVENT EMAX CPUTIME COSINUS ABS
first(start_rule) = error TOKEN SIGNATURE PLUS PLOT PIPE PERT OP_PAR OBS NEWLINE MINUS LET LABEL KAPPA_RAR KAPPA_LRAR INIT ID EOF CONFIG
first(standalone_effect_list) = TRACK STOP SPECIES_OF SNAPSHOT PRINTF PLOTENTRY OP_PAR INTRO ID FLUX DELETE ASSIGN APPLY
first(standalone_bool_expr) = TRUE TMAX TIME TAN SQRT SINUS PIPE OP_PAR NULL_EVENT NOT MINUS MIN MAX LOG LABEL INT INFINITY ID FLOAT FALSE EXPONENT EVENT EMAX CPUTIME COSINUS ABS
first(small_bool_expr) = TRUE OP_PAR FALSE
first(small_alg_expr) = TMAX TIME TAN SQRT SINUS PIPE OP_PAR NULL_EVENT MIN MAX LOG LABEL INT INFINITY ID FLOAT EXPONENT EVENT EMAX CPUTIME COSINUS ABS
first(rule_expression) = PLUS PIPE OP_PAR MINUS KAPPA_RAR KAPPA_LRAR ID
first(rule_content) = PLUS PIPE OP_PAR MINUS KAPPA_RAR KAPPA_LRAR ID
first(rate) = TRUE TMAX TIME TAN SQRT SINUS PIPE OP_PAR OP_CUR NULL_EVENT NOT MINUS MIN MAX LOG LABEL INT INFINITY ID FLOAT FALSE EXPONENT EVENT EMAX CPUTIME COSINUS ABS
first(print_expr) = TMAX TIME TAN STRING SQRT SINUS PIPE OP_PAR NULL_EVENT MINUS MIN MAX LOG LABEL INT INFINITY ID FLOAT EXPONENT EVENT EMAX CPUTIME COSINUS ABS
first(port_expression) = ID
first(perturbation_post) = UNTIL REPEAT
first(perturbation_declaration) = TRUE TMAX TIME TAN SQRT SINUS REPEAT PIPE OP_PAR NULL_EVENT NOT MINUS MIN MAX LOG LABEL INT INFINITY ID FLOAT FALSE EXPONENT EVENT EMAX DO CPUTIME COSINUS ALARM ABS
first(perturbation_alarm) = ALARM
first(pattern) = PLUS OP_PAR MINUS ID
first(nonempty_print_expr) = TMAX TIME TAN STRING SQRT SINUS PIPE OP_PAR NULL_EVENT MINUS MIN MAX LOG LABEL INT INFINITY ID FLOAT EXPONENT EVENT EMAX CPUTIME COSINUS ABS
first(non_empty_mixture) = ID
first(newline) = NEWLINE EOF
first(nbr) = INT INFINITY FLOAT
first(mod_agent) = PLUS MINUS
first(mid_alg_expr) = TMAX TIME TAN SQRT SINUS PIPE OP_PAR NULL_EVENT MINUS MIN MAX LOG LABEL INT INFINITY ID FLOAT EXPONENT EVENT EMAX CPUTIME COSINUS ABS
first(link_state_mod) = DIV
first(link_state) = KAPPA_WLD KAPPA_LNK
first(internal_state) = error KAPPA_MRK
first(interface_expression) = ID
first(interactive_command) = error TRACK STOP SPECIES_OF SNAPSHOT RUN PRINTF PLOTENTRY OP_PAR INTRO ID FLUX EOF DELETE ASSIGN APPLY
first(instruction) = TOKEN SIGNATURE PLOT PERT OBS LET INIT CONFIG
first(init_declaration) = TRUE TMAX TIME TAN SQRT SINUS PIPE OP_PAR NULL_EVENT NOT MINUS MIN MAX LOG LABEL INT INFINITY ID FLOAT FALSE EXPONENT EVENT EMAX CPUTIME COSINUS ABS
first(effect_list) = TRACK STOP SPECIES_OF SNAPSHOT PRINTF PLOTENTRY OP_PAR INTRO ID FLUX DELETE ASSIGN APPLY
first(effect) = TRACK STOP SPECIES_OF SNAPSHOT PRINTF PLOTENTRY INTRO ID FLUX DELETE ASSIGN APPLY
first(counter_test) = TYPE
first(constant) = TMAX INT INFINITY FLOAT EMAX CPUTIME
first(boolean) = TRUE FALSE
first(bool_expr) = TRUE TMAX TIME TAN SQRT SINUS PIPE OP_PAR NULL_EVENT NOT MINUS MIN MAX LOG LABEL INT INFINITY ID FLOAT FALSE EXPONENT EVENT EMAX CPUTIME COSINUS ABS
first(birate) = error AT
first(arrow) = KAPPA_RAR KAPPA_LRAR
first(alg_with_radius) = TRUE TMAX TIME TAN SQRT SINUS PIPE OP_PAR NULL_EVENT NOT MINUS MIN MAX LOG LABEL INT INFINITY ID FLOAT FALSE EXPONENT EVENT EMAX CPUTIME COSINUS ABS
first(alg_expr) = TRUE TMAX TIME TAN SQRT SINUS PIPE OP_PAR NULL_EVENT NOT MINUS MIN MAX LOG LABEL INT INFINITY ID FLOAT FALSE EXPONENT EVENT EMAX CPUTIME COSINUS ABS
first(agent_expression) = PLUS MINUS ID
first(a_link_state) = KAPPA_WLD KAPPA_LNK
minimal(variable_declaration) = (* 2 *) LABEL INFINITY
minimal(variable) = (* 1 *) ID
minimal(value_list) = (* 1 *) STRING
minimal(token_expr) = (* 0 *)
minimal(sum_token) = (* 2 *) INFINITY ID
minimal(start_rule) = (* 1 *) EOF
minimal(standalone_effect_list) = (* 2 *) SNAPSHOT EOF
minimal(standalone_bool_expr) = (* 2 *) TRUE EOF
minimal(small_bool_expr) = (* 1 *) TRUE
minimal(small_alg_expr) = (* 1 *) INFINITY
minimal(rule_expression) = (* 2 *) KAPPA_RAR AT
minimal(rule_content) = (* 1 *) KAPPA_RAR
minimal(rate) = (* 0 *)
minimal(print_expr) = (* 0 *)
minimal(port_expression) = (* 1 *) ID
minimal(perturbation_post) = (* 0 *)
minimal(perturbation_declaration) = (* 2 *) DO SNAPSHOT
minimal(perturbation_alarm) = (* 0 *)
minimal(pattern) = (* 2 *) ID error
minimal(nonempty_print_expr) = (* 1 *) STRING
minimal(non_empty_mixture) = (* 3 *) ID OP_PAR CL_PAR
minimal(newline) = (* 1 *) EOF
minimal(nbr) = (* 1 *) INFINITY
minimal(mod_agent) = (* 0 *)
minimal(mid_alg_expr) = (* 1 *) INFINITY
minimal(link_state_mod) = (* 0 *)
minimal(link_state) = (* 1 *) KAPPA_WLD
minimal(internal_state) = (* 0 *)
minimal(interface_expression) = (* 0 *)
minimal(interactive_command) = (* 1 *) EOF
minimal(instruction) = (* 2 *) TOKEN ID
minimal(init_declaration) = (* 2 *) INFINITY ID
minimal(effect_list) = (* 1 *) SNAPSHOT
minimal(effect) = (* 1 *) SNAPSHOT
minimal(counter_test) = (* 2 *) TYPE INT
minimal(constant) = (* 1 *) INFINITY
minimal(boolean) = (* 1 *) TRUE
minimal(bool_expr) = (* 1 *) TRUE
minimal(birate) = (* 1 *) AT
minimal(arrow) = (* 1 *) KAPPA_RAR
minimal(alg_with_radius) = (* 1 *) INFINITY
minimal(alg_expr) = (* 1 *) INFINITY
minimal(agent_expression) = (* 2 *) ID error
minimal(a_link_state) = (* 1 *) KAPPA_WLD
follow(variable_declaration) = NEWLINE EOF
follow(variable) = UNTIL TYPE TRUE TMAX TIME THEN TAN STRING SQRT SMALLER SINUS SET SEMICOLON REPEAT POW PLUS PIPE OR OP_PAR OP_CUR NULL_EVENT NEWLINE MULT MODULO MINUS MIN MAX LOG LABEL KAPPA_RAR KAPPA_LRAR INT INFINITY ID GREATER FLOAT FALSE EXPONENT EVENT EQUAL EOF EMAX ELSE DOT DO DIV DIFF CPUTIME COSINUS COMMA CL_PAR CL_CUR AND ABS
follow(value_list) = NEWLINE EOF
follow(token_expr) = error UNTIL SEMICOLON REPEAT NEWLINE KAPPA_RAR KAPPA_LRAR EOF CL_PAR AT
follow(sum_token) = error UNTIL SEMICOLON REPEAT NEWLINE KAPPA_RAR KAPPA_LRAR EOF CL_PAR AT
follow(start_rule) = #
follow(standalone_effect_list) = #
follow(standalone_bool_expr) = #
follow(small_bool_expr) = THEN SET OR NEWLINE EOF DO CL_PAR AND
follow(small_alg_expr) = UNTIL TYPE TRUE TMAX TIME THEN TAN STRING SQRT SMALLER SINUS SET SEMICOLON REPEAT POW PLUS PIPE OR OP_PAR OP_CUR NULL_EVENT NEWLINE MULT MODULO MINUS MIN MAX LOG LABEL KAPPA_RAR KAPPA_LRAR INT INFINITY ID GREATER FLOAT FALSE EXPONENT EVENT EQUAL EOF EMAX ELSE DOT DO DIV DIFF CPUTIME COSINUS COMMA CL_PAR CL_CUR AND ABS
follow(rule_expression) = NEWLINE EOF
follow(rule_content) = error UNTIL SEMICOLON REPEAT NEWLINE EOF CL_PAR AT
follow(rate) = NEWLINE EOF COMMA
follow(print_expr) = UNTIL SMALLER SEMICOLON REPEAT NEWLINE GREATER EOF CL_PAR
follow(port_expression) = COMMA CL_PAR
follow(perturbation_post) = NEWLINE EOF
follow(perturbation_declaration) = NEWLINE EOF
follow(perturbation_alarm) = TRUE TMAX TIME TAN SQRT SINUS PIPE OP_PAR NULL_EVENT NOT MINUS MIN MAX LOG LABEL INT INFINITY ID FLOAT FALSE EXPONENT EVENT EMAX DO CPUTIME COSINUS ABS
follow(pattern) = error UNTIL TRUE SEMICOLON REPEAT PIPE NEWLINE KAPPA_RAR KAPPA_LRAR FALSE EOF CL_PAR AT
follow(nonempty_print_expr) = UNTIL TRUE STRING SMALLER SEMICOLON REPEAT NEWLINE ID GREATER FALSE EOF CL_PAR
follow(non_empty_mixture) = UNTIL TRUE SEMICOLON REPEAT PIPE NEWLINE FALSE EOF CL_PAR
follow(newline) = #
follow(nbr) = UNTIL TYPE TRUE TMAX TIME THEN TAN STRING SQRT SMALLER SINUS SET SEMICOLON REPEAT POW PLUS PIPE OR OP_PAR OP_CUR NULL_EVENT NOT NEWLINE MULT MODULO MINUS MIN MAX LOG LABEL KAPPA_RAR KAPPA_LRAR INT INFINITY ID GREATER FLOAT FALSE EXPONENT EVENT EQUAL EOF EMAX ELSE DOT DO DIV DIFF CPUTIME COSINUS COMMA CL_PAR CL_CUR AND ABS
follow(mod_agent) = ID
follow(mid_alg_expr) = UNTIL TYPE TRUE TMAX TIME THEN TAN STRING SQRT SMALLER SINUS SET SEMICOLON REPEAT POW PLUS PIPE OR OP_PAR OP_CUR NULL_EVENT NEWLINE MULT MODULO MINUS MIN MAX LOG LABEL KAPPA_RAR KAPPA_LRAR INT INFINITY ID GREATER FLOAT FALSE EXPONENT EVENT EQUAL EOF EMAX ELSE DOT DO DIV DIFF CPUTIME COSINUS COMMA CL_PAR CL_CUR AND ABS
follow(link_state_mod) = COMMA CL_PAR
follow(link_state) = DIV COMMA CL_PAR
follow(internal_state) = KAPPA_WLD KAPPA_LNK DIV COMMA CL_PAR
follow(interface_expression) = CL_PAR
follow(interactive_command) = #
follow(instruction) = NEWLINE EOF
follow(init_declaration) = NEWLINE EOF
follow(effect_list) = UNTIL REPEAT NEWLINE EOF CL_PAR
follow(effect) = UNTIL SEMICOLON REPEAT NEWLINE EOF CL_PAR
follow(counter_test) = PLUS COMMA CL_PAR
follow(constant) = UNTIL TYPE TRUE TMAX TIME THEN TAN STRING SQRT SMALLER SINUS SET SEMICOLON REPEAT POW PLUS PIPE OR OP_PAR OP_CUR NULL_EVENT NEWLINE MULT MODULO MINUS MIN MAX LOG LABEL KAPPA_RAR KAPPA_LRAR INT INFINITY ID GREATER FLOAT FALSE EXPONENT EVENT EQUAL EOF EMAX ELSE DOT DO DIV DIFF CPUTIME COSINUS COMMA CL_PAR CL_CUR AND ABS
follow(boolean) = UNTIL SEMICOLON REPEAT NEWLINE EOF CL_PAR
follow(bool_expr) = THEN SET OR NEWLINE EOF DO CL_PAR AND
follow(birate) = NEWLINE EOF
follow(arrow) = error UNTIL SEMICOLON REPEAT PLUS PIPE OP_PAR NEWLINE MINUS ID EOF CL_PAR AT
follow(alg_with_radius) = CL_PAR CL_CUR
follow(alg_expr) = UNTIL TYPE THEN SMALLER SET SEMICOLON REPEAT OR OP_PAR OP_CUR NEWLINE ID GREATER EQUAL EOF ELSE DO DIFF COMMA CL_PAR CL_CUR AND
follow(agent_expression) = error UNTIL TRUE SEMICOLON REPEAT PIPE NEWLINE KAPPA_RAR KAPPA_LRAR FALSE EOF COMMA CL_PAR AT
follow(a_link_state) = KAPPA_WLD KAPPA_LNK DIV COMMA CL_PAR
Built an LR(0) automaton with 357 states.
The grammar is not SLR(1) -- 20 states have a conflict.
The construction mode is pager.
Built an LR(1) automaton with 400 states.
90 shift/reduce conflicts were silently solved.
156 out of 400 states have a default reduction.
161 out of 400 states are represented.
0 out of 132 symbols keep track of their start position.
0 out of 132 symbols keep track of their end position.
The action table is 33200 entries; 3111 non-zero; 2309 compressed.
The action table occupies roughly 4712 bytes.
The goto table is 19200 entries; 672 non-zero; 1224 compressed.
The goto table occupies roughly 2536 bytes.
The error table occupies roughly 4184 bytes.
The default_reduction table occupies roughly 432 bytes.
The lhs table occupies roughly 224 bytes.
The trace table occupies roughly 8 bytes.
