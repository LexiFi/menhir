State 0:
## Known stack suffix:
##
## LR(1) items:
interactive_command' -> . interactive_command [ # ]
## Transitions:
-- On error shift to state 1
-- On SPACE shift to state 2
-- On NEWLINE shift to state 3
-- On COMMENT shift to state 4
-- On interactive_command shift to state 8
-- On annot shift to state 9
## Reductions:
-- On TRACK reduce production annot ->
-- On STOP reduce production annot ->
-- On SPECIES_OF reduce production annot ->
-- On SNAPSHOT reduce production annot ->
-- On RUN reduce production annot ->
-- On PRINTF reduce production annot ->
-- On PLOTENTRY reduce production annot ->
-- On INTRO reduce production annot ->
-- On FLUX reduce production annot ->
-- On EOF reduce production annot ->
-- On DELETE reduce production annot ->
-- On ASSIGN reduce production annot ->
-- On APPLY reduce production annot ->

State 1:
## Known stack suffix:
## error
## LR(1) items:
interactive_command -> error . [ # ]
## Transitions:
## Reductions:
-- On # reduce production interactive_command -> error

State 2:
## Known stack suffix:
## SPACE
## LR(1) items:
annot -> SPACE . annot [ UNDERSCORE TRUE TRACK TOKEN TMAX TIME THEN TAN STRING STOP SQRT SPECIES_OF SNAPSHOT SMALLER SINUS SIGNATURE SHARP SEMICOLON RUN REPEAT RAR PRINTF POW PLUS PLOTENTRY PLOT PIPE PERT OR OP_PAR OP_CUR OBS NULL_EVENT NOT MULT MOD MINUS MIN MAX LRAR LOG LET LABEL INTRO INT INIT INFINITY ID GREATER FLUX FLOAT FALSE EXPONENT EVENT EQUAL EOF EMAX ELSE DOT DO DIV DIFF DELETE CPUTIME COSINUS CONFIG COMMA COLON CL_PAR CL_CUR CL_BRA ASSIGN APPLY AND ALARM ABS ]
## Transitions:
-- On SPACE shift to state 2
-- On NEWLINE shift to state 3
-- On COMMENT shift to state 4
-- On annot shift to state 7
## Reductions:
-- On UNDERSCORE reduce production annot ->
-- On TRUE reduce production annot ->
-- On TRACK reduce production annot ->
-- On TOKEN reduce production annot ->
-- On TMAX reduce production annot ->
-- On TIME reduce production annot ->
-- On THEN reduce production annot ->
-- On TAN reduce production annot ->
-- On STRING reduce production annot ->
-- On STOP reduce production annot ->
-- On SQRT reduce production annot ->
-- On SPECIES_OF reduce production annot ->
-- On SNAPSHOT reduce production annot ->
-- On SMALLER reduce production annot ->
-- On SINUS reduce production annot ->
-- On SIGNATURE reduce production annot ->
-- On SHARP reduce production annot ->
-- On SEMICOLON reduce production annot ->
-- On RUN reduce production annot ->
-- On REPEAT reduce production annot ->
-- On RAR reduce production annot ->
-- On PRINTF reduce production annot ->
-- On POW reduce production annot ->
-- On PLUS reduce production annot ->
-- On PLOTENTRY reduce production annot ->
-- On PLOT reduce production annot ->
-- On PIPE reduce production annot ->
-- On PERT reduce production annot ->
-- On OR reduce production annot ->
-- On OP_PAR reduce production annot ->
-- On OP_CUR reduce production annot ->
-- On OBS reduce production annot ->
-- On NULL_EVENT reduce production annot ->
-- On NOT reduce production annot ->
-- On MULT reduce production annot ->
-- On MOD reduce production annot ->
-- On MINUS reduce production annot ->
-- On MIN reduce production annot ->
-- On MAX reduce production annot ->
-- On LRAR reduce production annot ->
-- On LOG reduce production annot ->
-- On LET reduce production annot ->
-- On LABEL reduce production annot ->
-- On INTRO reduce production annot ->
-- On INT reduce production annot ->
-- On INIT reduce production annot ->
-- On INFINITY reduce production annot ->
-- On ID reduce production annot ->
-- On GREATER reduce production annot ->
-- On FLUX reduce production annot ->
-- On FLOAT reduce production annot ->
-- On FALSE reduce production annot ->
-- On EXPONENT reduce production annot ->
-- On EVENT reduce production annot ->
-- On EQUAL reduce production annot ->
-- On EOF reduce production annot ->
-- On EMAX reduce production annot ->
-- On ELSE reduce production annot ->
-- On DOT reduce production annot ->
-- On DO reduce production annot ->
-- On DIV reduce production annot ->
-- On DIFF reduce production annot ->
-- On DELETE reduce production annot ->
-- On CPUTIME reduce production annot ->
-- On COSINUS reduce production annot ->
-- On CONFIG reduce production annot ->
-- On COMMA reduce production annot ->
-- On COLON reduce production annot ->
-- On CL_PAR reduce production annot ->
-- On CL_CUR reduce production annot ->
-- On CL_BRA reduce production annot ->
-- On ASSIGN reduce production annot ->
-- On APPLY reduce production annot ->
-- On AND reduce production annot ->
-- On ALARM reduce production annot ->
-- On ABS reduce production annot ->

State 3:
## Known stack suffix:
## NEWLINE
## LR(1) items:
annot -> NEWLINE . annot [ UNDERSCORE TRUE TRACK TOKEN TMAX TIME THEN TAN STRING STOP SQRT SPECIES_OF SNAPSHOT SMALLER SINUS SIGNATURE SHARP SEMICOLON RUN REPEAT RAR PRINTF POW PLUS PLOTENTRY PLOT PIPE PERT OR OP_PAR OP_CUR OBS NULL_EVENT NOT MULT MOD MINUS MIN MAX LRAR LOG LET LABEL INTRO INT INIT INFINITY ID GREATER FLUX FLOAT FALSE EXPONENT EVENT EQUAL EOF EMAX ELSE DOT DO DIV DIFF DELETE CPUTIME COSINUS CONFIG COMMA COLON CL_PAR CL_CUR CL_BRA ASSIGN APPLY AND ALARM ABS ]
## Transitions:
-- On SPACE shift to state 2
-- On NEWLINE shift to state 3
-- On COMMENT shift to state 4
-- On annot shift to state 6
## Reductions:
-- On UNDERSCORE reduce production annot ->
-- On TRUE reduce production annot ->
-- On TRACK reduce production annot ->
-- On TOKEN reduce production annot ->
-- On TMAX reduce production annot ->
-- On TIME reduce production annot ->
-- On THEN reduce production annot ->
-- On TAN reduce production annot ->
-- On STRING reduce production annot ->
-- On STOP reduce production annot ->
-- On SQRT reduce production annot ->
-- On SPECIES_OF reduce production annot ->
-- On SNAPSHOT reduce production annot ->
-- On SMALLER reduce production annot ->
-- On SINUS reduce production annot ->
-- On SIGNATURE reduce production annot ->
-- On SHARP reduce production annot ->
-- On SEMICOLON reduce production annot ->
-- On RUN reduce production annot ->
-- On REPEAT reduce production annot ->
-- On RAR reduce production annot ->
-- On PRINTF reduce production annot ->
-- On POW reduce production annot ->
-- On PLUS reduce production annot ->
-- On PLOTENTRY reduce production annot ->
-- On PLOT reduce production annot ->
-- On PIPE reduce production annot ->
-- On PERT reduce production annot ->
-- On OR reduce production annot ->
-- On OP_PAR reduce production annot ->
-- On OP_CUR reduce production annot ->
-- On OBS reduce production annot ->
-- On NULL_EVENT reduce production annot ->
-- On NOT reduce production annot ->
-- On MULT reduce production annot ->
-- On MOD reduce production annot ->
-- On MINUS reduce production annot ->
-- On MIN reduce production annot ->
-- On MAX reduce production annot ->
-- On LRAR reduce production annot ->
-- On LOG reduce production annot ->
-- On LET reduce production annot ->
-- On LABEL reduce production annot ->
-- On INTRO reduce production annot ->
-- On INT reduce production annot ->
-- On INIT reduce production annot ->
-- On INFINITY reduce production annot ->
-- On ID reduce production annot ->
-- On GREATER reduce production annot ->
-- On FLUX reduce production annot ->
-- On FLOAT reduce production annot ->
-- On FALSE reduce production annot ->
-- On EXPONENT reduce production annot ->
-- On EVENT reduce production annot ->
-- On EQUAL reduce production annot ->
-- On EOF reduce production annot ->
-- On EMAX reduce production annot ->
-- On ELSE reduce production annot ->
-- On DOT reduce production annot ->
-- On DO reduce production annot ->
-- On DIV reduce production annot ->
-- On DIFF reduce production annot ->
-- On DELETE reduce production annot ->
-- On CPUTIME reduce production annot ->
-- On COSINUS reduce production annot ->
-- On CONFIG reduce production annot ->
-- On COMMA reduce production annot ->
-- On COLON reduce production annot ->
-- On CL_PAR reduce production annot ->
-- On CL_CUR reduce production annot ->
-- On CL_BRA reduce production annot ->
-- On ASSIGN reduce production annot ->
-- On APPLY reduce production annot ->
-- On AND reduce production annot ->
-- On ALARM reduce production annot ->
-- On ABS reduce production annot ->

State 4:
## Known stack suffix:
## COMMENT
## LR(1) items:
annot -> COMMENT . annot [ UNDERSCORE TRUE TRACK TOKEN TMAX TIME THEN TAN STRING STOP SQRT SPECIES_OF SNAPSHOT SMALLER SINUS SIGNATURE SHARP SEMICOLON RUN REPEAT RAR PRINTF POW PLUS PLOTENTRY PLOT PIPE PERT OR OP_PAR OP_CUR OBS NULL_EVENT NOT MULT MOD MINUS MIN MAX LRAR LOG LET LABEL INTRO INT INIT INFINITY ID GREATER FLUX FLOAT FALSE EXPONENT EVENT EQUAL EOF EMAX ELSE DOT DO DIV DIFF DELETE CPUTIME COSINUS CONFIG COMMA COLON CL_PAR CL_CUR CL_BRA ASSIGN APPLY AND ALARM ABS ]
## Transitions:
-- On SPACE shift to state 2
-- On NEWLINE shift to state 3
-- On COMMENT shift to state 4
-- On annot shift to state 5
## Reductions:
-- On UNDERSCORE reduce production annot ->
-- On TRUE reduce production annot ->
-- On TRACK reduce production annot ->
-- On TOKEN reduce production annot ->
-- On TMAX reduce production annot ->
-- On TIME reduce production annot ->
-- On THEN reduce production annot ->
-- On TAN reduce production annot ->
-- On STRING reduce production annot ->
-- On STOP reduce production annot ->
-- On SQRT reduce production annot ->
-- On SPECIES_OF reduce production annot ->
-- On SNAPSHOT reduce production annot ->
-- On SMALLER reduce production annot ->
-- On SINUS reduce production annot ->
-- On SIGNATURE reduce production annot ->
-- On SHARP reduce production annot ->
-- On SEMICOLON reduce production annot ->
-- On RUN reduce production annot ->
-- On REPEAT reduce production annot ->
-- On RAR reduce production annot ->
-- On PRINTF reduce production annot ->
-- On POW reduce production annot ->
-- On PLUS reduce production annot ->
-- On PLOTENTRY reduce production annot ->
-- On PLOT reduce production annot ->
-- On PIPE reduce production annot ->
-- On PERT reduce production annot ->
-- On OR reduce production annot ->
-- On OP_PAR reduce production annot ->
-- On OP_CUR reduce production annot ->
-- On OBS reduce production annot ->
-- On NULL_EVENT reduce production annot ->
-- On NOT reduce production annot ->
-- On MULT reduce production annot ->
-- On MOD reduce production annot ->
-- On MINUS reduce production annot ->
-- On MIN reduce production annot ->
-- On MAX reduce production annot ->
-- On LRAR reduce production annot ->
-- On LOG reduce production annot ->
-- On LET reduce production annot ->
-- On LABEL reduce production annot ->
-- On INTRO reduce production annot ->
-- On INT reduce production annot ->
-- On INIT reduce production annot ->
-- On INFINITY reduce production annot ->
-- On ID reduce production annot ->
-- On GREATER reduce production annot ->
-- On FLUX reduce production annot ->
-- On FLOAT reduce production annot ->
-- On FALSE reduce production annot ->
-- On EXPONENT reduce production annot ->
-- On EVENT reduce production annot ->
-- On EQUAL reduce production annot ->
-- On EOF reduce production annot ->
-- On EMAX reduce production annot ->
-- On ELSE reduce production annot ->
-- On DOT reduce production annot ->
-- On DO reduce production annot ->
-- On DIV reduce production annot ->
-- On DIFF reduce production annot ->
-- On DELETE reduce production annot ->
-- On CPUTIME reduce production annot ->
-- On COSINUS reduce production annot ->
-- On CONFIG reduce production annot ->
-- On COMMA reduce production annot ->
-- On COLON reduce production annot ->
-- On CL_PAR reduce production annot ->
-- On CL_CUR reduce production annot ->
-- On CL_BRA reduce production annot ->
-- On ASSIGN reduce production annot ->
-- On APPLY reduce production annot ->
-- On AND reduce production annot ->
-- On ALARM reduce production annot ->
-- On ABS reduce production annot ->

State 5:
## Known stack suffix:
## COMMENT annot
## LR(1) items:
annot -> COMMENT annot . [ UNDERSCORE TRUE TRACK TOKEN TMAX TIME THEN TAN STRING STOP SQRT SPECIES_OF SNAPSHOT SMALLER SINUS SIGNATURE SHARP SEMICOLON RUN REPEAT RAR PRINTF POW PLUS PLOTENTRY PLOT PIPE PERT OR OP_PAR OP_CUR OBS NULL_EVENT NOT MULT MOD MINUS MIN MAX LRAR LOG LET LABEL INTRO INT INIT INFINITY ID GREATER FLUX FLOAT FALSE EXPONENT EVENT EQUAL EOF EMAX ELSE DOT DO DIV DIFF DELETE CPUTIME COSINUS CONFIG COMMA COLON CL_PAR CL_CUR CL_BRA ASSIGN APPLY AND ALARM ABS ]
## Transitions:
## Reductions:
-- On UNDERSCORE reduce production annot -> COMMENT annot
-- On TRUE reduce production annot -> COMMENT annot
-- On TRACK reduce production annot -> COMMENT annot
-- On TOKEN reduce production annot -> COMMENT annot
-- On TMAX reduce production annot -> COMMENT annot
-- On TIME reduce production annot -> COMMENT annot
-- On THEN reduce production annot -> COMMENT annot
-- On TAN reduce production annot -> COMMENT annot
-- On STRING reduce production annot -> COMMENT annot
-- On STOP reduce production annot -> COMMENT annot
-- On SQRT reduce production annot -> COMMENT annot
-- On SPECIES_OF reduce production annot -> COMMENT annot
-- On SNAPSHOT reduce production annot -> COMMENT annot
-- On SMALLER reduce production annot -> COMMENT annot
-- On SINUS reduce production annot -> COMMENT annot
-- On SIGNATURE reduce production annot -> COMMENT annot
-- On SHARP reduce production annot -> COMMENT annot
-- On SEMICOLON reduce production annot -> COMMENT annot
-- On RUN reduce production annot -> COMMENT annot
-- On REPEAT reduce production annot -> COMMENT annot
-- On RAR reduce production annot -> COMMENT annot
-- On PRINTF reduce production annot -> COMMENT annot
-- On POW reduce production annot -> COMMENT annot
-- On PLUS reduce production annot -> COMMENT annot
-- On PLOTENTRY reduce production annot -> COMMENT annot
-- On PLOT reduce production annot -> COMMENT annot
-- On PIPE reduce production annot -> COMMENT annot
-- On PERT reduce production annot -> COMMENT annot
-- On OR reduce production annot -> COMMENT annot
-- On OP_PAR reduce production annot -> COMMENT annot
-- On OP_CUR reduce production annot -> COMMENT annot
-- On OBS reduce production annot -> COMMENT annot
-- On NULL_EVENT reduce production annot -> COMMENT annot
-- On NOT reduce production annot -> COMMENT annot
-- On MULT reduce production annot -> COMMENT annot
-- On MOD reduce production annot -> COMMENT annot
-- On MINUS reduce production annot -> COMMENT annot
-- On MIN reduce production annot -> COMMENT annot
-- On MAX reduce production annot -> COMMENT annot
-- On LRAR reduce production annot -> COMMENT annot
-- On LOG reduce production annot -> COMMENT annot
-- On LET reduce production annot -> COMMENT annot
-- On LABEL reduce production annot -> COMMENT annot
-- On INTRO reduce production annot -> COMMENT annot
-- On INT reduce production annot -> COMMENT annot
-- On INIT reduce production annot -> COMMENT annot
-- On INFINITY reduce production annot -> COMMENT annot
-- On ID reduce production annot -> COMMENT annot
-- On GREATER reduce production annot -> COMMENT annot
-- On FLUX reduce production annot -> COMMENT annot
-- On FLOAT reduce production annot -> COMMENT annot
-- On FALSE reduce production annot -> COMMENT annot
-- On EXPONENT reduce production annot -> COMMENT annot
-- On EVENT reduce production annot -> COMMENT annot
-- On EQUAL reduce production annot -> COMMENT annot
-- On EOF reduce production annot -> COMMENT annot
-- On EMAX reduce production annot -> COMMENT annot
-- On ELSE reduce production annot -> COMMENT annot
-- On DOT reduce production annot -> COMMENT annot
-- On DO reduce production annot -> COMMENT annot
-- On DIV reduce production annot -> COMMENT annot
-- On DIFF reduce production annot -> COMMENT annot
-- On DELETE reduce production annot -> COMMENT annot
-- On CPUTIME reduce production annot -> COMMENT annot
-- On COSINUS reduce production annot -> COMMENT annot
-- On CONFIG reduce production annot -> COMMENT annot
-- On COMMA reduce production annot -> COMMENT annot
-- On COLON reduce production annot -> COMMENT annot
-- On CL_PAR reduce production annot -> COMMENT annot
-- On CL_CUR reduce production annot -> COMMENT annot
-- On CL_BRA reduce production annot -> COMMENT annot
-- On ASSIGN reduce production annot -> COMMENT annot
-- On APPLY reduce production annot -> COMMENT annot
-- On AND reduce production annot -> COMMENT annot
-- On ALARM reduce production annot -> COMMENT annot
-- On ABS reduce production annot -> COMMENT annot

State 6:
## Known stack suffix:
## NEWLINE annot
## LR(1) items:
annot -> NEWLINE annot . [ UNDERSCORE TRUE TRACK TOKEN TMAX TIME THEN TAN STRING STOP SQRT SPECIES_OF SNAPSHOT SMALLER SINUS SIGNATURE SHARP SEMICOLON RUN REPEAT RAR PRINTF POW PLUS PLOTENTRY PLOT PIPE PERT OR OP_PAR OP_CUR OBS NULL_EVENT NOT MULT MOD MINUS MIN MAX LRAR LOG LET LABEL INTRO INT INIT INFINITY ID GREATER FLUX FLOAT FALSE EXPONENT EVENT EQUAL EOF EMAX ELSE DOT DO DIV DIFF DELETE CPUTIME COSINUS CONFIG COMMA COLON CL_PAR CL_CUR CL_BRA ASSIGN APPLY AND ALARM ABS ]
## Transitions:
## Reductions:
-- On UNDERSCORE reduce production annot -> NEWLINE annot
-- On TRUE reduce production annot -> NEWLINE annot
-- On TRACK reduce production annot -> NEWLINE annot
-- On TOKEN reduce production annot -> NEWLINE annot
-- On TMAX reduce production annot -> NEWLINE annot
-- On TIME reduce production annot -> NEWLINE annot
-- On THEN reduce production annot -> NEWLINE annot
-- On TAN reduce production annot -> NEWLINE annot
-- On STRING reduce production annot -> NEWLINE annot
-- On STOP reduce production annot -> NEWLINE annot
-- On SQRT reduce production annot -> NEWLINE annot
-- On SPECIES_OF reduce production annot -> NEWLINE annot
-- On SNAPSHOT reduce production annot -> NEWLINE annot
-- On SMALLER reduce production annot -> NEWLINE annot
-- On SINUS reduce production annot -> NEWLINE annot
-- On SIGNATURE reduce production annot -> NEWLINE annot
-- On SHARP reduce production annot -> NEWLINE annot
-- On SEMICOLON reduce production annot -> NEWLINE annot
-- On RUN reduce production annot -> NEWLINE annot
-- On REPEAT reduce production annot -> NEWLINE annot
-- On RAR reduce production annot -> NEWLINE annot
-- On PRINTF reduce production annot -> NEWLINE annot
-- On POW reduce production annot -> NEWLINE annot
-- On PLUS reduce production annot -> NEWLINE annot
-- On PLOTENTRY reduce production annot -> NEWLINE annot
-- On PLOT reduce production annot -> NEWLINE annot
-- On PIPE reduce production annot -> NEWLINE annot
-- On PERT reduce production annot -> NEWLINE annot
-- On OR reduce production annot -> NEWLINE annot
-- On OP_PAR reduce production annot -> NEWLINE annot
-- On OP_CUR reduce production annot -> NEWLINE annot
-- On OBS reduce production annot -> NEWLINE annot
-- On NULL_EVENT reduce production annot -> NEWLINE annot
-- On NOT reduce production annot -> NEWLINE annot
-- On MULT reduce production annot -> NEWLINE annot
-- On MOD reduce production annot -> NEWLINE annot
-- On MINUS reduce production annot -> NEWLINE annot
-- On MIN reduce production annot -> NEWLINE annot
-- On MAX reduce production annot -> NEWLINE annot
-- On LRAR reduce production annot -> NEWLINE annot
-- On LOG reduce production annot -> NEWLINE annot
-- On LET reduce production annot -> NEWLINE annot
-- On LABEL reduce production annot -> NEWLINE annot
-- On INTRO reduce production annot -> NEWLINE annot
-- On INT reduce production annot -> NEWLINE annot
-- On INIT reduce production annot -> NEWLINE annot
-- On INFINITY reduce production annot -> NEWLINE annot
-- On ID reduce production annot -> NEWLINE annot
-- On GREATER reduce production annot -> NEWLINE annot
-- On FLUX reduce production annot -> NEWLINE annot
-- On FLOAT reduce production annot -> NEWLINE annot
-- On FALSE reduce production annot -> NEWLINE annot
-- On EXPONENT reduce production annot -> NEWLINE annot
-- On EVENT reduce production annot -> NEWLINE annot
-- On EQUAL reduce production annot -> NEWLINE annot
-- On EOF reduce production annot -> NEWLINE annot
-- On EMAX reduce production annot -> NEWLINE annot
-- On ELSE reduce production annot -> NEWLINE annot
-- On DOT reduce production annot -> NEWLINE annot
-- On DO reduce production annot -> NEWLINE annot
-- On DIV reduce production annot -> NEWLINE annot
-- On DIFF reduce production annot -> NEWLINE annot
-- On DELETE reduce production annot -> NEWLINE annot
-- On CPUTIME reduce production annot -> NEWLINE annot
-- On COSINUS reduce production annot -> NEWLINE annot
-- On CONFIG reduce production annot -> NEWLINE annot
-- On COMMA reduce production annot -> NEWLINE annot
-- On COLON reduce production annot -> NEWLINE annot
-- On CL_PAR reduce production annot -> NEWLINE annot
-- On CL_CUR reduce production annot -> NEWLINE annot
-- On CL_BRA reduce production annot -> NEWLINE annot
-- On ASSIGN reduce production annot -> NEWLINE annot
-- On APPLY reduce production annot -> NEWLINE annot
-- On AND reduce production annot -> NEWLINE annot
-- On ALARM reduce production annot -> NEWLINE annot
-- On ABS reduce production annot -> NEWLINE annot

State 7:
## Known stack suffix:
## SPACE annot
## LR(1) items:
annot -> SPACE annot . [ UNDERSCORE TRUE TRACK TOKEN TMAX TIME THEN TAN STRING STOP SQRT SPECIES_OF SNAPSHOT SMALLER SINUS SIGNATURE SHARP SEMICOLON RUN REPEAT RAR PRINTF POW PLUS PLOTENTRY PLOT PIPE PERT OR OP_PAR OP_CUR OBS NULL_EVENT NOT MULT MOD MINUS MIN MAX LRAR LOG LET LABEL INTRO INT INIT INFINITY ID GREATER FLUX FLOAT FALSE EXPONENT EVENT EQUAL EOF EMAX ELSE DOT DO DIV DIFF DELETE CPUTIME COSINUS CONFIG COMMA COLON CL_PAR CL_CUR CL_BRA ASSIGN APPLY AND ALARM ABS ]
## Transitions:
## Reductions:
-- On UNDERSCORE reduce production annot -> SPACE annot
-- On TRUE reduce production annot -> SPACE annot
-- On TRACK reduce production annot -> SPACE annot
-- On TOKEN reduce production annot -> SPACE annot
-- On TMAX reduce production annot -> SPACE annot
-- On TIME reduce production annot -> SPACE annot
-- On THEN reduce production annot -> SPACE annot
-- On TAN reduce production annot -> SPACE annot
-- On STRING reduce production annot -> SPACE annot
-- On STOP reduce production annot -> SPACE annot
-- On SQRT reduce production annot -> SPACE annot
-- On SPECIES_OF reduce production annot -> SPACE annot
-- On SNAPSHOT reduce production annot -> SPACE annot
-- On SMALLER reduce production annot -> SPACE annot
-- On SINUS reduce production annot -> SPACE annot
-- On SIGNATURE reduce production annot -> SPACE annot
-- On SHARP reduce production annot -> SPACE annot
-- On SEMICOLON reduce production annot -> SPACE annot
-- On RUN reduce production annot -> SPACE annot
-- On REPEAT reduce production annot -> SPACE annot
-- On RAR reduce production annot -> SPACE annot
-- On PRINTF reduce production annot -> SPACE annot
-- On POW reduce production annot -> SPACE annot
-- On PLUS reduce production annot -> SPACE annot
-- On PLOTENTRY reduce production annot -> SPACE annot
-- On PLOT reduce production annot -> SPACE annot
-- On PIPE reduce production annot -> SPACE annot
-- On PERT reduce production annot -> SPACE annot
-- On OR reduce production annot -> SPACE annot
-- On OP_PAR reduce production annot -> SPACE annot
-- On OP_CUR reduce production annot -> SPACE annot
-- On OBS reduce production annot -> SPACE annot
-- On NULL_EVENT reduce production annot -> SPACE annot
-- On NOT reduce production annot -> SPACE annot
-- On MULT reduce production annot -> SPACE annot
-- On MOD reduce production annot -> SPACE annot
-- On MINUS reduce production annot -> SPACE annot
-- On MIN reduce production annot -> SPACE annot
-- On MAX reduce production annot -> SPACE annot
-- On LRAR reduce production annot -> SPACE annot
-- On LOG reduce production annot -> SPACE annot
-- On LET reduce production annot -> SPACE annot
-- On LABEL reduce production annot -> SPACE annot
-- On INTRO reduce production annot -> SPACE annot
-- On INT reduce production annot -> SPACE annot
-- On INIT reduce production annot -> SPACE annot
-- On INFINITY reduce production annot -> SPACE annot
-- On ID reduce production annot -> SPACE annot
-- On GREATER reduce production annot -> SPACE annot
-- On FLUX reduce production annot -> SPACE annot
-- On FLOAT reduce production annot -> SPACE annot
-- On FALSE reduce production annot -> SPACE annot
-- On EXPONENT reduce production annot -> SPACE annot
-- On EVENT reduce production annot -> SPACE annot
-- On EQUAL reduce production annot -> SPACE annot
-- On EOF reduce production annot -> SPACE annot
-- On EMAX reduce production annot -> SPACE annot
-- On ELSE reduce production annot -> SPACE annot
-- On DOT reduce production annot -> SPACE annot
-- On DO reduce production annot -> SPACE annot
-- On DIV reduce production annot -> SPACE annot
-- On DIFF reduce production annot -> SPACE annot
-- On DELETE reduce production annot -> SPACE annot
-- On CPUTIME reduce production annot -> SPACE annot
-- On COSINUS reduce production annot -> SPACE annot
-- On CONFIG reduce production annot -> SPACE annot
-- On COMMA reduce production annot -> SPACE annot
-- On COLON reduce production annot -> SPACE annot
-- On CL_PAR reduce production annot -> SPACE annot
-- On CL_CUR reduce production annot -> SPACE annot
-- On CL_BRA reduce production annot -> SPACE annot
-- On ASSIGN reduce production annot -> SPACE annot
-- On APPLY reduce production annot -> SPACE annot
-- On AND reduce production annot -> SPACE annot
-- On ALARM reduce production annot -> SPACE annot
-- On ABS reduce production annot -> SPACE annot

State 8:
## Known stack suffix:
## interactive_command
## LR(1) items:
interactive_command' -> interactive_command . [ # ]
## Transitions:
## Reductions:
-- On # accept interactive_command

State 9:
## Known stack suffix:
## annot
## LR(1) items:
interactive_command -> annot . RUN annot SEMICOLON [ # ]
interactive_command -> annot . RUN annot bool_expr SEMICOLON [ # ]
interactive_command -> annot . effect SEMICOLON [ # ]
interactive_command -> annot . EOF [ # ]
## Transitions:
-- On TRACK shift to state 10
-- On STOP shift to state 159
-- On SPECIES_OF shift to state 309
-- On SNAPSHOT shift to state 316
-- On RUN shift to state 318
-- On PRINTF shift to state 323
-- On PLOTENTRY shift to state 327
-- On INTRO shift to state 329
-- On FLUX shift to state 334
-- On EOF shift to state 343
-- On DELETE shift to state 344
-- On ASSIGN shift to state 349
-- On APPLY shift to state 357
-- On effect shift to state 386
## Reductions:

State 10:
## Known stack suffix:
## TRACK
## LR(1) items:
effect -> TRACK . annot LABEL annot boolean annot [ SEMICOLON EOF CL_PAR ]
effect -> TRACK . annot pattern boolean annot [ SEMICOLON EOF CL_PAR ]
## Transitions:
-- On SPACE shift to state 2
-- On NEWLINE shift to state 3
-- On COMMENT shift to state 4
-- On annot shift to state 11
## Reductions:
-- On LABEL reduce production annot ->
-- On ID reduce production annot ->
-- On DOT reduce production annot ->

State 11:
## Known stack suffix:
## TRACK annot
## LR(1) items:
effect -> TRACK annot . LABEL annot boolean annot [ SEMICOLON EOF CL_PAR ]
effect -> TRACK annot . pattern boolean annot [ SEMICOLON EOF CL_PAR ]
## Transitions:
-- On LABEL shift to state 12
-- On ID shift to state 18
-- On DOT shift to state 150
-- On pattern shift to state 152
-- On agent shift to state 155
## Reductions:

State 12:
## Known stack suffix:
## TRACK annot LABEL
## LR(1) items:
effect -> TRACK annot LABEL . annot boolean annot [ SEMICOLON EOF CL_PAR ]
## Transitions:
-- On SPACE shift to state 2
-- On NEWLINE shift to state 3
-- On COMMENT shift to state 4
-- On annot shift to state 13
## Reductions:
-- On TRUE reduce production annot ->
-- On FALSE reduce production annot ->

State 13:
## Known stack suffix:
## TRACK annot LABEL annot
## LR(1) items:
effect -> TRACK annot LABEL annot . boolean annot [ SEMICOLON EOF CL_PAR ]
## Transitions:
-- On TRUE shift to state 14
-- On FALSE shift to state 15
-- On boolean shift to state 16
## Reductions:

State 14:
## Known stack suffix:
## TRUE
## LR(1) items:
boolean -> TRUE . [ SPACE SEMICOLON NEWLINE GREATER EOF COMMENT CL_PAR ]
## Transitions:
## Reductions:
-- On SPACE reduce production boolean -> TRUE
-- On SEMICOLON reduce production boolean -> TRUE
-- On NEWLINE reduce production boolean -> TRUE
-- On GREATER reduce production boolean -> TRUE
-- On EOF reduce production boolean -> TRUE
-- On COMMENT reduce production boolean -> TRUE
-- On CL_PAR reduce production boolean -> TRUE

State 15:
## Known stack suffix:
## FALSE
## LR(1) items:
boolean -> FALSE . [ SPACE SEMICOLON NEWLINE GREATER EOF COMMENT CL_PAR ]
## Transitions:
## Reductions:
-- On SPACE reduce production boolean -> FALSE
-- On SEMICOLON reduce production boolean -> FALSE
-- On NEWLINE reduce production boolean -> FALSE
-- On GREATER reduce production boolean -> FALSE
-- On EOF reduce production boolean -> FALSE
-- On COMMENT reduce production boolean -> FALSE
-- On CL_PAR reduce production boolean -> FALSE

State 16:
## Known stack suffix:
## TRACK annot LABEL annot boolean
## LR(1) items:
effect -> TRACK annot LABEL annot boolean . annot [ SEMICOLON EOF CL_PAR ]
## Transitions:
-- On SPACE shift to state 2
-- On NEWLINE shift to state 3
-- On COMMENT shift to state 4
-- On annot shift to state 17
## Reductions:
-- On SEMICOLON reduce production annot ->
-- On EOF reduce production annot ->
-- On CL_PAR reduce production annot ->

State 17:
## Known stack suffix:
## TRACK annot LABEL annot boolean annot
## LR(1) items:
effect -> TRACK annot LABEL annot boolean annot . [ SEMICOLON EOF CL_PAR ]
## Transitions:
## Reductions:
-- On SEMICOLON reduce production effect -> TRACK annot LABEL annot boolean annot
-- On EOF reduce production effect -> TRACK annot LABEL annot boolean annot
-- On CL_PAR reduce production effect -> TRACK annot LABEL annot boolean annot

State 18:
## Known stack suffix:
## ID
## LR(1) items:
agent -> ID . annot OP_PAR annot interface CL_PAR agent_modif [ TRUE TOKEN SIGNATURE SEMICOLON RAR PLOT PIPE PERT OBS LRAR LET LABEL INIT ID FALSE EOF DOT CONFIG COMMA CL_PAR ]
agent -> ID . annot COLON annot ID annot OP_PAR annot interface CL_PAR agent_modif [ TRUE TOKEN SIGNATURE SEMICOLON RAR PLOT PIPE PERT OBS LRAR LET LABEL INIT ID FALSE EOF DOT CONFIG COMMA CL_PAR ]
agent -> ID . annot error [ TRUE TOKEN SIGNATURE SEMICOLON RAR PLOT PIPE PERT OBS LRAR LET LABEL INIT ID FALSE EOF DOT CONFIG COMMA CL_PAR ]
## Transitions:
-- On SPACE shift to state 19
-- On NEWLINE shift to state 20
-- On COMMENT shift to state 21
-- On annot shift to state 25
## Reductions:
-- On error reduce production annot ->
-- On OP_PAR reduce production annot ->
-- On COLON reduce production annot ->

State 19:
## Known stack suffix:
## SPACE
## LR(1) items:
annot -> SPACE . annot [ error UNDERSCORE TRUE TOKEN TMAX TIME TAN SQRT SINUS SIGNATURE SHARP RAR PLUS PLOT PIPE PERT OP_PAR OP_CUR OP_BRA OBS NULL_EVENT NOT MINUS MIN MAX LRAR LOG LET LABEL INT INIT INFINITY ID GREATER FLOAT FALSE EXPONENT EVENT EQUAL EOF EMAX DOT CPUTIME COSINUS CONFIG COMMA COLON CL_PAR AT ABS ]
## Transitions:
-- On SPACE shift to state 19
-- On NEWLINE shift to state 20
-- On COMMENT shift to state 21
-- On annot shift to state 24
## Reductions:
-- On error reduce production annot ->
-- On UNDERSCORE reduce production annot ->
-- On TRUE reduce production annot ->
-- On TOKEN reduce production annot ->
-- On TMAX reduce production annot ->
-- On TIME reduce production annot ->
-- On TAN reduce production annot ->
-- On SQRT reduce production annot ->
-- On SINUS reduce production annot ->
-- On SIGNATURE reduce production annot ->
-- On SHARP reduce production annot ->
-- On RAR reduce production annot ->
-- On PLUS reduce production annot ->
-- On PLOT reduce production annot ->
-- On PIPE reduce production annot ->
-- On PERT reduce production annot ->
-- On OP_PAR reduce production annot ->
-- On OP_CUR reduce production annot ->
-- On OP_BRA reduce production annot ->
-- On OBS reduce production annot ->
-- On NULL_EVENT reduce production annot ->
-- On NOT reduce production annot ->
-- On MINUS reduce production annot ->
-- On MIN reduce production annot ->
-- On MAX reduce production annot ->
-- On LRAR reduce production annot ->
-- On LOG reduce production annot ->
-- On LET reduce production annot ->
-- On LABEL reduce production annot ->
-- On INT reduce production annot ->
-- On INIT reduce production annot ->
-- On INFINITY reduce production annot ->
-- On ID reduce production annot ->
-- On GREATER reduce production annot ->
-- On FLOAT reduce production annot ->
-- On FALSE reduce production annot ->
-- On EXPONENT reduce production annot ->
-- On EVENT reduce production annot ->
-- On EQUAL reduce production annot ->
-- On EOF reduce production annot ->
-- On EMAX reduce production annot ->
-- On DOT reduce production annot ->
-- On CPUTIME reduce production annot ->
-- On COSINUS reduce production annot ->
-- On CONFIG reduce production annot ->
-- On COMMA reduce production annot ->
-- On COLON reduce production annot ->
-- On CL_PAR reduce production annot ->
-- On AT reduce production annot ->
-- On ABS reduce production annot ->

State 20:
## Known stack suffix:
## NEWLINE
## LR(1) items:
annot -> NEWLINE . annot [ error UNDERSCORE TRUE TOKEN TMAX TIME TAN SQRT SINUS SIGNATURE SHARP RAR PLUS PLOT PIPE PERT OP_PAR OP_CUR OP_BRA OBS NULL_EVENT NOT MINUS MIN MAX LRAR LOG LET LABEL INT INIT INFINITY ID GREATER FLOAT FALSE EXPONENT EVENT EQUAL EOF EMAX DOT CPUTIME COSINUS CONFIG COMMA COLON CL_PAR AT ABS ]
## Transitions:
-- On SPACE shift to state 19
-- On NEWLINE shift to state 20
-- On COMMENT shift to state 21
-- On annot shift to state 23
## Reductions:
-- On error reduce production annot ->
-- On UNDERSCORE reduce production annot ->
-- On TRUE reduce production annot ->
-- On TOKEN reduce production annot ->
-- On TMAX reduce production annot ->
-- On TIME reduce production annot ->
-- On TAN reduce production annot ->
-- On SQRT reduce production annot ->
-- On SINUS reduce production annot ->
-- On SIGNATURE reduce production annot ->
-- On SHARP reduce production annot ->
-- On RAR reduce production annot ->
-- On PLUS reduce production annot ->
-- On PLOT reduce production annot ->
-- On PIPE reduce production annot ->
-- On PERT reduce production annot ->
-- On OP_PAR reduce production annot ->
-- On OP_CUR reduce production annot ->
-- On OP_BRA reduce production annot ->
-- On OBS reduce production annot ->
-- On NULL_EVENT reduce production annot ->
-- On NOT reduce production annot ->
-- On MINUS reduce production annot ->
-- On MIN reduce production annot ->
-- On MAX reduce production annot ->
-- On LRAR reduce production annot ->
-- On LOG reduce production annot ->
-- On LET reduce production annot ->
-- On LABEL reduce production annot ->
-- On INT reduce production annot ->
-- On INIT reduce production annot ->
-- On INFINITY reduce production annot ->
-- On ID reduce production annot ->
-- On GREATER reduce production annot ->
-- On FLOAT reduce production annot ->
-- On FALSE reduce production annot ->
-- On EXPONENT reduce production annot ->
-- On EVENT reduce production annot ->
-- On EQUAL reduce production annot ->
-- On EOF reduce production annot ->
-- On EMAX reduce production annot ->
-- On DOT reduce production annot ->
-- On CPUTIME reduce production annot ->
-- On COSINUS reduce production annot ->
-- On CONFIG reduce production annot ->
-- On COMMA reduce production annot ->
-- On COLON reduce production annot ->
-- On CL_PAR reduce production annot ->
-- On AT reduce production annot ->
-- On ABS reduce production annot ->

State 21:
## Known stack suffix:
## COMMENT
## LR(1) items:
annot -> COMMENT . annot [ error UNDERSCORE TRUE TOKEN TMAX TIME TAN SQRT SINUS SIGNATURE SHARP RAR PLUS PLOT PIPE PERT OP_PAR OP_CUR OP_BRA OBS NULL_EVENT NOT MINUS MIN MAX LRAR LOG LET LABEL INT INIT INFINITY ID GREATER FLOAT FALSE EXPONENT EVENT EQUAL EOF EMAX DOT CPUTIME COSINUS CONFIG COMMA COLON CL_PAR AT ABS ]
## Transitions:
-- On SPACE shift to state 19
-- On NEWLINE shift to state 20
-- On COMMENT shift to state 21
-- On annot shift to state 22
## Reductions:
-- On error reduce production annot ->
-- On UNDERSCORE reduce production annot ->
-- On TRUE reduce production annot ->
-- On TOKEN reduce production annot ->
-- On TMAX reduce production annot ->
-- On TIME reduce production annot ->
-- On TAN reduce production annot ->
-- On SQRT reduce production annot ->
-- On SINUS reduce production annot ->
-- On SIGNATURE reduce production annot ->
-- On SHARP reduce production annot ->
-- On RAR reduce production annot ->
-- On PLUS reduce production annot ->
-- On PLOT reduce production annot ->
-- On PIPE reduce production annot ->
-- On PERT reduce production annot ->
-- On OP_PAR reduce production annot ->
-- On OP_CUR reduce production annot ->
-- On OP_BRA reduce production annot ->
-- On OBS reduce production annot ->
-- On NULL_EVENT reduce production annot ->
-- On NOT reduce production annot ->
-- On MINUS reduce production annot ->
-- On MIN reduce production annot ->
-- On MAX reduce production annot ->
-- On LRAR reduce production annot ->
-- On LOG reduce production annot ->
-- On LET reduce production annot ->
-- On LABEL reduce production annot ->
-- On INT reduce production annot ->
-- On INIT reduce production annot ->
-- On INFINITY reduce production annot ->
-- On ID reduce production annot ->
-- On GREATER reduce production annot ->
-- On FLOAT reduce production annot ->
-- On FALSE reduce production annot ->
-- On EXPONENT reduce production annot ->
-- On EVENT reduce production annot ->
-- On EQUAL reduce production annot ->
-- On EOF reduce production annot ->
-- On EMAX reduce production annot ->
-- On DOT reduce production annot ->
-- On CPUTIME reduce production annot ->
-- On COSINUS reduce production annot ->
-- On CONFIG reduce production annot ->
-- On COMMA reduce production annot ->
-- On COLON reduce production annot ->
-- On CL_PAR reduce production annot ->
-- On AT reduce production annot ->
-- On ABS reduce production annot ->

State 22:
## Known stack suffix:
## COMMENT annot
## LR(1) items:
annot -> COMMENT annot . [ error UNDERSCORE TRUE TOKEN TMAX TIME TAN SQRT SINUS SIGNATURE SHARP RAR PLUS PLOT PIPE PERT OP_PAR OP_CUR OP_BRA OBS NULL_EVENT NOT MINUS MIN MAX LRAR LOG LET LABEL INT INIT INFINITY ID GREATER FLOAT FALSE EXPONENT EVENT EQUAL EOF EMAX DOT CPUTIME COSINUS CONFIG COMMA COLON CL_PAR AT ABS ]
## Transitions:
## Reductions:
-- On error reduce production annot -> COMMENT annot
-- On UNDERSCORE reduce production annot -> COMMENT annot
-- On TRUE reduce production annot -> COMMENT annot
-- On TOKEN reduce production annot -> COMMENT annot
-- On TMAX reduce production annot -> COMMENT annot
-- On TIME reduce production annot -> COMMENT annot
-- On TAN reduce production annot -> COMMENT annot
-- On SQRT reduce production annot -> COMMENT annot
-- On SINUS reduce production annot -> COMMENT annot
-- On SIGNATURE reduce production annot -> COMMENT annot
-- On SHARP reduce production annot -> COMMENT annot
-- On RAR reduce production annot -> COMMENT annot
-- On PLUS reduce production annot -> COMMENT annot
-- On PLOT reduce production annot -> COMMENT annot
-- On PIPE reduce production annot -> COMMENT annot
-- On PERT reduce production annot -> COMMENT annot
-- On OP_PAR reduce production annot -> COMMENT annot
-- On OP_CUR reduce production annot -> COMMENT annot
-- On OP_BRA reduce production annot -> COMMENT annot
-- On OBS reduce production annot -> COMMENT annot
-- On NULL_EVENT reduce production annot -> COMMENT annot
-- On NOT reduce production annot -> COMMENT annot
-- On MINUS reduce production annot -> COMMENT annot
-- On MIN reduce production annot -> COMMENT annot
-- On MAX reduce production annot -> COMMENT annot
-- On LRAR reduce production annot -> COMMENT annot
-- On LOG reduce production annot -> COMMENT annot
-- On LET reduce production annot -> COMMENT annot
-- On LABEL reduce production annot -> COMMENT annot
-- On INT reduce production annot -> COMMENT annot
-- On INIT reduce production annot -> COMMENT annot
-- On INFINITY reduce production annot -> COMMENT annot
-- On ID reduce production annot -> COMMENT annot
-- On GREATER reduce production annot -> COMMENT annot
-- On FLOAT reduce production annot -> COMMENT annot
-- On FALSE reduce production annot -> COMMENT annot
-- On EXPONENT reduce production annot -> COMMENT annot
-- On EVENT reduce production annot -> COMMENT annot
-- On EQUAL reduce production annot -> COMMENT annot
-- On EOF reduce production annot -> COMMENT annot
-- On EMAX reduce production annot -> COMMENT annot
-- On DOT reduce production annot -> COMMENT annot
-- On CPUTIME reduce production annot -> COMMENT annot
-- On COSINUS reduce production annot -> COMMENT annot
-- On CONFIG reduce production annot -> COMMENT annot
-- On COMMA reduce production annot -> COMMENT annot
-- On COLON reduce production annot -> COMMENT annot
-- On CL_PAR reduce production annot -> COMMENT annot
-- On AT reduce production annot -> COMMENT annot
-- On ABS reduce production annot -> COMMENT annot

State 23:
## Known stack suffix:
## NEWLINE annot
## LR(1) items:
annot -> NEWLINE annot . [ error UNDERSCORE TRUE TOKEN TMAX TIME TAN SQRT SINUS SIGNATURE SHARP RAR PLUS PLOT PIPE PERT OP_PAR OP_CUR OP_BRA OBS NULL_EVENT NOT MINUS MIN MAX LRAR LOG LET LABEL INT INIT INFINITY ID GREATER FLOAT FALSE EXPONENT EVENT EQUAL EOF EMAX DOT CPUTIME COSINUS CONFIG COMMA COLON CL_PAR AT ABS ]
## Transitions:
## Reductions:
-- On error reduce production annot -> NEWLINE annot
-- On UNDERSCORE reduce production annot -> NEWLINE annot
-- On TRUE reduce production annot -> NEWLINE annot
-- On TOKEN reduce production annot -> NEWLINE annot
-- On TMAX reduce production annot -> NEWLINE annot
-- On TIME reduce production annot -> NEWLINE annot
-- On TAN reduce production annot -> NEWLINE annot
-- On SQRT reduce production annot -> NEWLINE annot
-- On SINUS reduce production annot -> NEWLINE annot
-- On SIGNATURE reduce production annot -> NEWLINE annot
-- On SHARP reduce production annot -> NEWLINE annot
-- On RAR reduce production annot -> NEWLINE annot
-- On PLUS reduce production annot -> NEWLINE annot
-- On PLOT reduce production annot -> NEWLINE annot
-- On PIPE reduce production annot -> NEWLINE annot
-- On PERT reduce production annot -> NEWLINE annot
-- On OP_PAR reduce production annot -> NEWLINE annot
-- On OP_CUR reduce production annot -> NEWLINE annot
-- On OP_BRA reduce production annot -> NEWLINE annot
-- On OBS reduce production annot -> NEWLINE annot
-- On NULL_EVENT reduce production annot -> NEWLINE annot
-- On NOT reduce production annot -> NEWLINE annot
-- On MINUS reduce production annot -> NEWLINE annot
-- On MIN reduce production annot -> NEWLINE annot
-- On MAX reduce production annot -> NEWLINE annot
-- On LRAR reduce production annot -> NEWLINE annot
-- On LOG reduce production annot -> NEWLINE annot
-- On LET reduce production annot -> NEWLINE annot
-- On LABEL reduce production annot -> NEWLINE annot
-- On INT reduce production annot -> NEWLINE annot
-- On INIT reduce production annot -> NEWLINE annot
-- On INFINITY reduce production annot -> NEWLINE annot
-- On ID reduce production annot -> NEWLINE annot
-- On GREATER reduce production annot -> NEWLINE annot
-- On FLOAT reduce production annot -> NEWLINE annot
-- On FALSE reduce production annot -> NEWLINE annot
-- On EXPONENT reduce production annot -> NEWLINE annot
-- On EVENT reduce production annot -> NEWLINE annot
-- On EQUAL reduce production annot -> NEWLINE annot
-- On EOF reduce production annot -> NEWLINE annot
-- On EMAX reduce production annot -> NEWLINE annot
-- On DOT reduce production annot -> NEWLINE annot
-- On CPUTIME reduce production annot -> NEWLINE annot
-- On COSINUS reduce production annot -> NEWLINE annot
-- On CONFIG reduce production annot -> NEWLINE annot
-- On COMMA reduce production annot -> NEWLINE annot
-- On COLON reduce production annot -> NEWLINE annot
-- On CL_PAR reduce production annot -> NEWLINE annot
-- On AT reduce production annot -> NEWLINE annot
-- On ABS reduce production annot -> NEWLINE annot

State 24:
## Known stack suffix:
## SPACE annot
## LR(1) items:
annot -> SPACE annot . [ error UNDERSCORE TRUE TOKEN TMAX TIME TAN SQRT SINUS SIGNATURE SHARP RAR PLUS PLOT PIPE PERT OP_PAR OP_CUR OP_BRA OBS NULL_EVENT NOT MINUS MIN MAX LRAR LOG LET LABEL INT INIT INFINITY ID GREATER FLOAT FALSE EXPONENT EVENT EQUAL EOF EMAX DOT CPUTIME COSINUS CONFIG COMMA COLON CL_PAR AT ABS ]
## Transitions:
## Reductions:
-- On error reduce production annot -> SPACE annot
-- On UNDERSCORE reduce production annot -> SPACE annot
-- On TRUE reduce production annot -> SPACE annot
-- On TOKEN reduce production annot -> SPACE annot
-- On TMAX reduce production annot -> SPACE annot
-- On TIME reduce production annot -> SPACE annot
-- On TAN reduce production annot -> SPACE annot
-- On SQRT reduce production annot -> SPACE annot
-- On SINUS reduce production annot -> SPACE annot
-- On SIGNATURE reduce production annot -> SPACE annot
-- On SHARP reduce production annot -> SPACE annot
-- On RAR reduce production annot -> SPACE annot
-- On PLUS reduce production annot -> SPACE annot
-- On PLOT reduce production annot -> SPACE annot
-- On PIPE reduce production annot -> SPACE annot
-- On PERT reduce production annot -> SPACE annot
-- On OP_PAR reduce production annot -> SPACE annot
-- On OP_CUR reduce production annot -> SPACE annot
-- On OP_BRA reduce production annot -> SPACE annot
-- On OBS reduce production annot -> SPACE annot
-- On NULL_EVENT reduce production annot -> SPACE annot
-- On NOT reduce production annot -> SPACE annot
-- On MINUS reduce production annot -> SPACE annot
-- On MIN reduce production annot -> SPACE annot
-- On MAX reduce production annot -> SPACE annot
-- On LRAR reduce production annot -> SPACE annot
-- On LOG reduce production annot -> SPACE annot
-- On LET reduce production annot -> SPACE annot
-- On LABEL reduce production annot -> SPACE annot
-- On INT reduce production annot -> SPACE annot
-- On INIT reduce production annot -> SPACE annot
-- On INFINITY reduce production annot -> SPACE annot
-- On ID reduce production annot -> SPACE annot
-- On GREATER reduce production annot -> SPACE annot
-- On FLOAT reduce production annot -> SPACE annot
-- On FALSE reduce production annot -> SPACE annot
-- On EXPONENT reduce production annot -> SPACE annot
-- On EVENT reduce production annot -> SPACE annot
-- On EQUAL reduce production annot -> SPACE annot
-- On EOF reduce production annot -> SPACE annot
-- On EMAX reduce production annot -> SPACE annot
-- On DOT reduce production annot -> SPACE annot
-- On CPUTIME reduce production annot -> SPACE annot
-- On COSINUS reduce production annot -> SPACE annot
-- On CONFIG reduce production annot -> SPACE annot
-- On COMMA reduce production annot -> SPACE annot
-- On COLON reduce production annot -> SPACE annot
-- On CL_PAR reduce production annot -> SPACE annot
-- On AT reduce production annot -> SPACE annot
-- On ABS reduce production annot -> SPACE annot

State 25:
## Known stack suffix:
## ID annot
## LR(1) items:
agent -> ID annot . OP_PAR annot interface CL_PAR agent_modif [ TRUE TOKEN SIGNATURE SEMICOLON RAR PLOT PIPE PERT OBS LRAR LET LABEL INIT ID FALSE EOF DOT CONFIG COMMA CL_PAR ]
agent -> ID annot . COLON annot ID annot OP_PAR annot interface CL_PAR agent_modif [ TRUE TOKEN SIGNATURE SEMICOLON RAR PLOT PIPE PERT OBS LRAR LET LABEL INIT ID FALSE EOF DOT CONFIG COMMA CL_PAR ]
agent -> ID annot . error [ TRUE TOKEN SIGNATURE SEMICOLON RAR PLOT PIPE PERT OBS LRAR LET LABEL INIT ID FALSE EOF DOT CONFIG COMMA CL_PAR ]
## Transitions:
-- On error shift to state 26
-- On OP_PAR shift to state 27
-- On COLON shift to state 141
## Reductions:

State 26:
## Known stack suffix:
## ID annot error
## LR(1) items:
agent -> ID annot error . [ TRUE TOKEN SIGNATURE SEMICOLON RAR PLOT PIPE PERT OBS LRAR LET LABEL INIT ID FALSE EOF DOT CONFIG COMMA CL_PAR ]
## Transitions:
## Reductions:
-- On TRUE reduce production agent -> ID annot error
-- On TOKEN reduce production agent -> ID annot error
-- On SIGNATURE reduce production agent -> ID annot error
-- On SEMICOLON reduce production agent -> ID annot error
-- On RAR reduce production agent -> ID annot error
-- On PLOT reduce production agent -> ID annot error
-- On PIPE reduce production agent -> ID annot error
-- On PERT reduce production agent -> ID annot error
-- On OBS reduce production agent -> ID annot error
-- On LRAR reduce production agent -> ID annot error
-- On LET reduce production agent -> ID annot error
-- On LABEL reduce production agent -> ID annot error
-- On INIT reduce production agent -> ID annot error
-- On ID reduce production agent -> ID annot error
-- On FALSE reduce production agent -> ID annot error
-- On EOF reduce production agent -> ID annot error
-- On DOT reduce production agent -> ID annot error
-- On CONFIG reduce production agent -> ID annot error
-- On COMMA reduce production agent -> ID annot error
-- On CL_PAR reduce production agent -> ID annot error

State 27:
## Known stack suffix:
## ID annot OP_PAR
## LR(1) items:
agent -> ID annot OP_PAR . annot interface CL_PAR agent_modif [ TRUE TOKEN SIGNATURE SEMICOLON RAR PLOT PIPE PERT OBS LRAR LET LABEL INIT ID FALSE EOF DOT CONFIG COMMA CL_PAR ]
## Transitions:
-- On SPACE shift to state 19
-- On NEWLINE shift to state 20
-- On COMMENT shift to state 21
-- On annot shift to state 28
## Reductions:
-- On error reduce production annot ->
-- On ID reduce production annot ->
-- On CL_PAR reduce production annot ->

State 28:
## Known stack suffix:
## ID annot OP_PAR annot
## LR(1) items:
agent -> ID annot OP_PAR annot . interface CL_PAR agent_modif [ TRUE TOKEN SIGNATURE SEMICOLON RAR PLOT PIPE PERT OBS LRAR LET LABEL INIT ID FALSE EOF DOT CONFIG COMMA CL_PAR ]
## Transitions:
-- On error shift to state 29
-- On ID shift to state 30
-- On site shift to state 128
-- On interface shift to state 133
## Reductions:
-- On CL_PAR reduce production interface ->

State 29:
## Known stack suffix:
## error
## LR(1) items:
interface -> error . [ CL_PAR ]
## Transitions:
## Reductions:
-- On CL_PAR reduce production interface -> error

State 30:
## Known stack suffix:
## ID
## LR(1) items:
site -> ID . annot OP_BRA site_link annot OP_CUR annot site_internal annot [ error ID COMMA CL_PAR ]
site -> ID . annot OP_CUR annot site_internal annot OP_BRA site_link annot [ error ID COMMA CL_PAR ]
site -> ID . annot OP_BRA site_link annot [ error ID COMMA CL_PAR ]
site -> ID . annot OP_CUR annot site_internal annot [ error ID COMMA CL_PAR ]
site -> ID . annot OP_CUR annot site_counter [ error ID COMMA CL_PAR ]
site -> ID . annot [ error ID COMMA CL_PAR ]
## Transitions:
-- On SPACE shift to state 19
-- On NEWLINE shift to state 20
-- On COMMENT shift to state 21
-- On annot shift to state 31
## Reductions:
-- On error reduce production annot ->
-- On OP_CUR reduce production annot ->
-- On OP_BRA reduce production annot ->
-- On ID reduce production annot ->
-- On COMMA reduce production annot ->
-- On CL_PAR reduce production annot ->

State 31:
## Known stack suffix:
## ID annot
## LR(1) items:
site -> ID annot . OP_BRA site_link annot OP_CUR annot site_internal annot [ error ID COMMA CL_PAR ]
site -> ID annot . OP_CUR annot site_internal annot OP_BRA site_link annot [ error ID COMMA CL_PAR ]
site -> ID annot . OP_BRA site_link annot [ error ID COMMA CL_PAR ]
site -> ID annot . OP_CUR annot site_internal annot [ error ID COMMA CL_PAR ]
site -> ID annot . OP_CUR annot site_counter [ error ID COMMA CL_PAR ]
site -> ID annot . [ error ID COMMA CL_PAR ]
## Transitions:
-- On OP_CUR shift to state 32
-- On OP_BRA shift to state 121
## Reductions:
-- On error reduce production site -> ID annot
-- On ID reduce production site -> ID annot
-- On COMMA reduce production site -> ID annot
-- On CL_PAR reduce production site -> ID annot

State 32:
## Known stack suffix:
## ID annot OP_CUR
## LR(1) items:
site -> ID annot OP_CUR . annot site_internal annot OP_BRA site_link annot [ error ID COMMA CL_PAR ]
site -> ID annot OP_CUR . annot site_internal annot [ error ID COMMA CL_PAR ]
site -> ID annot OP_CUR . annot site_counter [ error ID COMMA CL_PAR ]
## Transitions:
-- On SPACE shift to state 19
-- On NEWLINE shift to state 20
-- On COMMENT shift to state 21
-- On annot shift to state 33
## Reductions:
-- On error reduce production annot ->
-- On SHARP reduce production annot ->
-- On PLUS reduce production annot ->
-- On MINUS reduce production annot ->
-- On ID reduce production annot ->
-- On GREATER reduce production annot ->
-- On EQUAL reduce production annot ->

State 33:
## Known stack suffix:
## ID annot OP_CUR annot
## LR(1) items:
site -> ID annot OP_CUR annot . site_internal annot OP_BRA site_link annot [ error ID COMMA CL_PAR ]
site -> ID annot OP_CUR annot . site_internal annot [ error ID COMMA CL_PAR ]
site -> ID annot OP_CUR annot . site_counter [ error ID COMMA CL_PAR ]
## Transitions:
-- On error shift to state 34
-- On SHARP shift to state 35
-- On PLUS shift to state 36
-- On MINUS shift to state 44
-- On ID shift to state 49
-- On GREATER shift to state 50
-- On EQUAL shift to state 55
-- On site_internal shift to state 59
-- On site_counter shift to state 92
-- On internal_states shift to state 93
-- On internal_state shift to state 101
-- On counter_test shift to state 107
-- On counter_modif shift to state 117
## Reductions:

State 34:
## Known stack suffix:
## error
## LR(1) items:
site_internal -> error . [ error SPACE OP_BRA NEWLINE ID COMMENT COMMA CL_PAR ]
## Transitions:
## Reductions:
-- On error reduce production site_internal -> error
-- On SPACE reduce production site_internal -> error
-- On OP_BRA reduce production site_internal -> error
-- On NEWLINE reduce production site_internal -> error
-- On ID reduce production site_internal -> error
-- On COMMENT reduce production site_internal -> error
-- On COMMA reduce production site_internal -> error
-- On CL_PAR reduce production site_internal -> error

State 35:
## Known stack suffix:
## SHARP
## LR(1) items:
internal_state -> SHARP . [ SPACE SHARP NEWLINE ID DIV COMMENT COMMA CL_CUR ]
## Transitions:
## Reductions:
-- On SPACE reduce production internal_state -> SHARP
-- On SHARP reduce production internal_state -> SHARP
-- On NEWLINE reduce production internal_state -> SHARP
-- On ID reduce production internal_state -> SHARP
-- On DIV reduce production internal_state -> SHARP
-- On COMMENT reduce production internal_state -> SHARP
-- On COMMA reduce production internal_state -> SHARP
-- On CL_CUR reduce production internal_state -> SHARP

State 36:
## Known stack suffix:
## PLUS
## LR(1) items:
counter_modif -> PLUS . annot EQUAL annot INT [ SPACE NEWLINE COMMENT CL_CUR ]
counter_modif -> PLUS . annot EQUAL annot MINUS annot INT [ SPACE NEWLINE COMMENT CL_CUR ]
## Transitions:
-- On SPACE shift to state 2
-- On NEWLINE shift to state 3
-- On COMMENT shift to state 4
-- On annot shift to state 37
## Reductions:
-- On EQUAL reduce production annot ->

State 37:
## Known stack suffix:
## PLUS annot
## LR(1) items:
counter_modif -> PLUS annot . EQUAL annot INT [ SPACE NEWLINE COMMENT CL_CUR ]
counter_modif -> PLUS annot . EQUAL annot MINUS annot INT [ SPACE NEWLINE COMMENT CL_CUR ]
## Transitions:
-- On EQUAL shift to state 38
## Reductions:

State 38:
## Known stack suffix:
## PLUS annot EQUAL
## LR(1) items:
counter_modif -> PLUS annot EQUAL . annot INT [ SPACE NEWLINE COMMENT CL_CUR ]
counter_modif -> PLUS annot EQUAL . annot MINUS annot INT [ SPACE NEWLINE COMMENT CL_CUR ]
## Transitions:
-- On SPACE shift to state 2
-- On NEWLINE shift to state 3
-- On COMMENT shift to state 4
-- On annot shift to state 39
## Reductions:
-- On MINUS reduce production annot ->
-- On INT reduce production annot ->

State 39:
## Known stack suffix:
## PLUS annot EQUAL annot
## LR(1) items:
counter_modif -> PLUS annot EQUAL annot . INT [ SPACE NEWLINE COMMENT CL_CUR ]
counter_modif -> PLUS annot EQUAL annot . MINUS annot INT [ SPACE NEWLINE COMMENT CL_CUR ]
## Transitions:
-- On MINUS shift to state 40
-- On INT shift to state 43
## Reductions:

State 40:
## Known stack suffix:
## PLUS annot EQUAL annot MINUS
## LR(1) items:
counter_modif -> PLUS annot EQUAL annot MINUS . annot INT [ SPACE NEWLINE COMMENT CL_CUR ]
## Transitions:
-- On SPACE shift to state 2
-- On NEWLINE shift to state 3
-- On COMMENT shift to state 4
-- On annot shift to state 41
## Reductions:
-- On INT reduce production annot ->

State 41:
## Known stack suffix:
## PLUS annot EQUAL annot MINUS annot
## LR(1) items:
counter_modif -> PLUS annot EQUAL annot MINUS annot . INT [ SPACE NEWLINE COMMENT CL_CUR ]
## Transitions:
-- On INT shift to state 42
## Reductions:

State 42:
## Known stack suffix:
## PLUS annot EQUAL annot MINUS annot INT
## LR(1) items:
counter_modif -> PLUS annot EQUAL annot MINUS annot INT . [ SPACE NEWLINE COMMENT CL_CUR ]
## Transitions:
## Reductions:
-- On SPACE reduce production counter_modif -> PLUS annot EQUAL annot MINUS annot INT
-- On NEWLINE reduce production counter_modif -> PLUS annot EQUAL annot MINUS annot INT
-- On COMMENT reduce production counter_modif -> PLUS annot EQUAL annot MINUS annot INT
-- On CL_CUR reduce production counter_modif -> PLUS annot EQUAL annot MINUS annot INT

State 43:
## Known stack suffix:
## PLUS annot EQUAL annot INT
## LR(1) items:
counter_modif -> PLUS annot EQUAL annot INT . [ SPACE NEWLINE COMMENT CL_CUR ]
## Transitions:
## Reductions:
-- On SPACE reduce production counter_modif -> PLUS annot EQUAL annot INT
-- On NEWLINE reduce production counter_modif -> PLUS annot EQUAL annot INT
-- On COMMENT reduce production counter_modif -> PLUS annot EQUAL annot INT
-- On CL_CUR reduce production counter_modif -> PLUS annot EQUAL annot INT

State 44:
## Known stack suffix:
## MINUS
## LR(1) items:
counter_modif -> MINUS . annot EQUAL annot INT [ SPACE NEWLINE COMMENT CL_CUR ]
## Transitions:
-- On SPACE shift to state 2
-- On NEWLINE shift to state 3
-- On COMMENT shift to state 4
-- On annot shift to state 45
## Reductions:
-- On EQUAL reduce production annot ->

State 45:
## Known stack suffix:
## MINUS annot
## LR(1) items:
counter_modif -> MINUS annot . EQUAL annot INT [ SPACE NEWLINE COMMENT CL_CUR ]
## Transitions:
-- On EQUAL shift to state 46
## Reductions:

State 46:
## Known stack suffix:
## MINUS annot EQUAL
## LR(1) items:
counter_modif -> MINUS annot EQUAL . annot INT [ SPACE NEWLINE COMMENT CL_CUR ]
## Transitions:
-- On SPACE shift to state 2
-- On NEWLINE shift to state 3
-- On COMMENT shift to state 4
-- On annot shift to state 47
## Reductions:
-- On INT reduce production annot ->

State 47:
## Known stack suffix:
## MINUS annot EQUAL annot
## LR(1) items:
counter_modif -> MINUS annot EQUAL annot . INT [ SPACE NEWLINE COMMENT CL_CUR ]
## Transitions:
-- On INT shift to state 48
## Reductions:

State 48:
## Known stack suffix:
## MINUS annot EQUAL annot INT
## LR(1) items:
counter_modif -> MINUS annot EQUAL annot INT . [ SPACE NEWLINE COMMENT CL_CUR ]
## Transitions:
## Reductions:
-- On SPACE reduce production counter_modif -> MINUS annot EQUAL annot INT
-- On NEWLINE reduce production counter_modif -> MINUS annot EQUAL annot INT
-- On COMMENT reduce production counter_modif -> MINUS annot EQUAL annot INT
-- On CL_CUR reduce production counter_modif -> MINUS annot EQUAL annot INT

State 49:
## Known stack suffix:
## ID
## LR(1) items:
internal_state -> ID . [ SPACE SHARP NEWLINE ID DIV COMMENT COMMA CL_CUR ]
## Transitions:
## Reductions:
-- On SPACE reduce production internal_state -> ID
-- On SHARP reduce production internal_state -> ID
-- On NEWLINE reduce production internal_state -> ID
-- On ID reduce production internal_state -> ID
-- On DIV reduce production internal_state -> ID
-- On COMMENT reduce production internal_state -> ID
-- On COMMA reduce production internal_state -> ID
-- On CL_CUR reduce production internal_state -> ID

State 50:
## Known stack suffix:
## GREATER
## LR(1) items:
counter_test -> GREATER . annot EQUAL annot INT [ SPACE NEWLINE DIV COMMENT CL_CUR ]
## Transitions:
-- On SPACE shift to state 2
-- On NEWLINE shift to state 3
-- On COMMENT shift to state 4
-- On annot shift to state 51
## Reductions:
-- On EQUAL reduce production annot ->

State 51:
## Known stack suffix:
## GREATER annot
## LR(1) items:
counter_test -> GREATER annot . EQUAL annot INT [ SPACE NEWLINE DIV COMMENT CL_CUR ]
## Transitions:
-- On EQUAL shift to state 52
## Reductions:

State 52:
## Known stack suffix:
## GREATER annot EQUAL
## LR(1) items:
counter_test -> GREATER annot EQUAL . annot INT [ SPACE NEWLINE DIV COMMENT CL_CUR ]
## Transitions:
-- On SPACE shift to state 2
-- On NEWLINE shift to state 3
-- On COMMENT shift to state 4
-- On annot shift to state 53
## Reductions:
-- On INT reduce production annot ->

State 53:
## Known stack suffix:
## GREATER annot EQUAL annot
## LR(1) items:
counter_test -> GREATER annot EQUAL annot . INT [ SPACE NEWLINE DIV COMMENT CL_CUR ]
## Transitions:
-- On INT shift to state 54
## Reductions:

State 54:
## Known stack suffix:
## GREATER annot EQUAL annot INT
## LR(1) items:
counter_test -> GREATER annot EQUAL annot INT . [ SPACE NEWLINE DIV COMMENT CL_CUR ]
## Transitions:
## Reductions:
-- On SPACE reduce production counter_test -> GREATER annot EQUAL annot INT
-- On NEWLINE reduce production counter_test -> GREATER annot EQUAL annot INT
-- On DIV reduce production counter_test -> GREATER annot EQUAL annot INT
-- On COMMENT reduce production counter_test -> GREATER annot EQUAL annot INT
-- On CL_CUR reduce production counter_test -> GREATER annot EQUAL annot INT

State 55:
## Known stack suffix:
## EQUAL
## LR(1) items:
counter_test -> EQUAL . annot INT [ SPACE NEWLINE DIV COMMENT CL_CUR ]
counter_test -> EQUAL . annot ID [ SPACE NEWLINE DIV COMMENT CL_CUR ]
## Transitions:
-- On SPACE shift to state 2
-- On NEWLINE shift to state 3
-- On COMMENT shift to state 4
-- On annot shift to state 56
## Reductions:
-- On INT reduce production annot ->
-- On ID reduce production annot ->

State 56:
## Known stack suffix:
## EQUAL annot
## LR(1) items:
counter_test -> EQUAL annot . INT [ SPACE NEWLINE DIV COMMENT CL_CUR ]
counter_test -> EQUAL annot . ID [ SPACE NEWLINE DIV COMMENT CL_CUR ]
## Transitions:
-- On INT shift to state 57
-- On ID shift to state 58
## Reductions:

State 57:
## Known stack suffix:
## EQUAL annot INT
## LR(1) items:
counter_test -> EQUAL annot INT . [ SPACE NEWLINE DIV COMMENT CL_CUR ]
## Transitions:
## Reductions:
-- On SPACE reduce production counter_test -> EQUAL annot INT
-- On NEWLINE reduce production counter_test -> EQUAL annot INT
-- On DIV reduce production counter_test -> EQUAL annot INT
-- On COMMENT reduce production counter_test -> EQUAL annot INT
-- On CL_CUR reduce production counter_test -> EQUAL annot INT

State 58:
## Known stack suffix:
## EQUAL annot ID
## LR(1) items:
counter_test -> EQUAL annot ID . [ SPACE NEWLINE DIV COMMENT CL_CUR ]
## Transitions:
## Reductions:
-- On SPACE reduce production counter_test -> EQUAL annot ID
-- On NEWLINE reduce production counter_test -> EQUAL annot ID
-- On DIV reduce production counter_test -> EQUAL annot ID
-- On COMMENT reduce production counter_test -> EQUAL annot ID
-- On CL_CUR reduce production counter_test -> EQUAL annot ID

State 59:
## Known stack suffix:
## ID annot OP_CUR annot site_internal
## LR(1) items:
site -> ID annot OP_CUR annot site_internal . annot OP_BRA site_link annot [ error ID COMMA CL_PAR ]
site -> ID annot OP_CUR annot site_internal . annot [ error ID COMMA CL_PAR ]
## Transitions:
-- On SPACE shift to state 19
-- On NEWLINE shift to state 20
-- On COMMENT shift to state 21
-- On annot shift to state 60
## Reductions:
-- On error reduce production annot ->
-- On OP_BRA reduce production annot ->
-- On ID reduce production annot ->
-- On COMMA reduce production annot ->
-- On CL_PAR reduce production annot ->

State 60:
## Known stack suffix:
## ID annot OP_CUR annot site_internal annot
## LR(1) items:
site -> ID annot OP_CUR annot site_internal annot . OP_BRA site_link annot [ error ID COMMA CL_PAR ]
site -> ID annot OP_CUR annot site_internal annot . [ error ID COMMA CL_PAR ]
## Transitions:
-- On OP_BRA shift to state 61
## Reductions:
-- On error reduce production site -> ID annot OP_CUR annot site_internal annot
-- On ID reduce production site -> ID annot OP_CUR annot site_internal annot
-- On COMMA reduce production site -> ID annot OP_CUR annot site_internal annot
-- On CL_PAR reduce production site -> ID annot OP_CUR annot site_internal annot

State 61:
## Known stack suffix:
## ID annot OP_CUR annot site_internal annot OP_BRA
## LR(1) items:
site -> ID annot OP_CUR annot site_internal annot OP_BRA . site_link annot [ error ID COMMA CL_PAR ]
## Transitions:
-- On SPACE shift to state 19
-- On NEWLINE shift to state 20
-- On COMMENT shift to state 21
-- On site_link shift to state 62
-- On annot shift to state 64
## Reductions:
-- On error reduce production annot ->
-- On UNDERSCORE reduce production annot ->
-- On SHARP reduce production annot ->
-- On INT reduce production annot ->
-- On ID reduce production annot ->
-- On DOT reduce production annot ->

State 62:
## Known stack suffix:
## ID annot OP_CUR annot site_internal annot OP_BRA site_link
## LR(1) items:
site -> ID annot OP_CUR annot site_internal annot OP_BRA site_link . annot [ error ID COMMA CL_PAR ]
## Transitions:
-- On SPACE shift to state 19
-- On NEWLINE shift to state 20
-- On COMMENT shift to state 21
-- On annot shift to state 63
## Reductions:
-- On error reduce production annot ->
-- On ID reduce production annot ->
-- On COMMA reduce production annot ->
-- On CL_PAR reduce production annot ->

State 63:
## Known stack suffix:
## ID annot OP_CUR annot site_internal annot OP_BRA site_link annot
## LR(1) items:
site -> ID annot OP_CUR annot site_internal annot OP_BRA site_link annot . [ error ID COMMA CL_PAR ]
## Transitions:
## Reductions:
-- On error reduce production site -> ID annot OP_CUR annot site_internal annot OP_BRA site_link annot
-- On ID reduce production site -> ID annot OP_CUR annot site_internal annot OP_BRA site_link annot
-- On COMMA reduce production site -> ID annot OP_CUR annot site_internal annot OP_BRA site_link annot
-- On CL_PAR reduce production site -> ID annot OP_CUR annot site_internal annot OP_BRA site_link annot

State 64:
## Known stack suffix:
## annot
## LR(1) items:
site_link -> annot . link_states link_modif CL_BRA [ error SPACE OP_CUR NEWLINE ID COMMENT COMMA CL_PAR ]
site_link -> annot . error [ error SPACE OP_CUR NEWLINE ID COMMENT COMMA CL_PAR ]
## Transitions:
-- On error shift to state 65
-- On UNDERSCORE shift to state 66
-- On SHARP shift to state 67
-- On INT shift to state 68
-- On ID shift to state 69
-- On DOT shift to state 75
-- On link_states shift to state 76
-- On link_state shift to state 86
## Reductions:

State 65:
## Known stack suffix:
## annot error
## LR(1) items:
site_link -> annot error . [ error SPACE OP_CUR NEWLINE ID COMMENT COMMA CL_PAR ]
## Transitions:
## Reductions:
-- On error reduce production site_link -> annot error
-- On SPACE reduce production site_link -> annot error
-- On OP_CUR reduce production site_link -> annot error
-- On NEWLINE reduce production site_link -> annot error
-- On ID reduce production site_link -> annot error
-- On COMMENT reduce production site_link -> annot error
-- On COMMA reduce production site_link -> annot error
-- On CL_PAR reduce production site_link -> annot error

State 66:
## Known stack suffix:
## UNDERSCORE
## LR(1) items:
link_state -> UNDERSCORE . [ UNDERSCORE SPACE SHARP NEWLINE INT ID DOT DIV COMMENT COMMA CL_BRA ]
## Transitions:
## Reductions:
-- On UNDERSCORE reduce production link_state -> UNDERSCORE
-- On SPACE reduce production link_state -> UNDERSCORE
-- On SHARP reduce production link_state -> UNDERSCORE
-- On NEWLINE reduce production link_state -> UNDERSCORE
-- On INT reduce production link_state -> UNDERSCORE
-- On ID reduce production link_state -> UNDERSCORE
-- On DOT reduce production link_state -> UNDERSCORE
-- On DIV reduce production link_state -> UNDERSCORE
-- On COMMENT reduce production link_state -> UNDERSCORE
-- On COMMA reduce production link_state -> UNDERSCORE
-- On CL_BRA reduce production link_state -> UNDERSCORE

State 67:
## Known stack suffix:
## SHARP
## LR(1) items:
link_state -> SHARP . [ UNDERSCORE SPACE SHARP NEWLINE INT ID DOT DIV COMMENT COMMA CL_BRA ]
## Transitions:
## Reductions:
-- On UNDERSCORE reduce production link_state -> SHARP
-- On SPACE reduce production link_state -> SHARP
-- On SHARP reduce production link_state -> SHARP
-- On NEWLINE reduce production link_state -> SHARP
-- On INT reduce production link_state -> SHARP
-- On ID reduce production link_state -> SHARP
-- On DOT reduce production link_state -> SHARP
-- On DIV reduce production link_state -> SHARP
-- On COMMENT reduce production link_state -> SHARP
-- On COMMA reduce production link_state -> SHARP
-- On CL_BRA reduce production link_state -> SHARP

State 68:
## Known stack suffix:
## INT
## LR(1) items:
link_state -> INT . [ UNDERSCORE SPACE SHARP NEWLINE INT ID DOT DIV COMMENT COMMA CL_BRA ]
## Transitions:
## Reductions:
-- On UNDERSCORE reduce production link_state -> INT
-- On SPACE reduce production link_state -> INT
-- On SHARP reduce production link_state -> INT
-- On NEWLINE reduce production link_state -> INT
-- On INT reduce production link_state -> INT
-- On ID reduce production link_state -> INT
-- On DOT reduce production link_state -> INT
-- On DIV reduce production link_state -> INT
-- On COMMENT reduce production link_state -> INT
-- On COMMA reduce production link_state -> INT
-- On CL_BRA reduce production link_state -> INT

State 69:
## Known stack suffix:
## ID
## LR(1) items:
link_state -> ID . annot DOT annot ID [ UNDERSCORE SPACE SHARP NEWLINE INT ID DOT DIV COMMENT COMMA CL_BRA ]
link_state -> ID . annot error [ UNDERSCORE SPACE SHARP NEWLINE INT ID DOT DIV COMMENT COMMA CL_BRA ]
## Transitions:
-- On SPACE shift to state 19
-- On NEWLINE shift to state 20
-- On COMMENT shift to state 21
-- On annot shift to state 70
## Reductions:
-- On error reduce production annot ->
-- On DOT reduce production annot ->

State 70:
## Known stack suffix:
## ID annot
## LR(1) items:
link_state -> ID annot . DOT annot ID [ UNDERSCORE SPACE SHARP NEWLINE INT ID DOT DIV COMMENT COMMA CL_BRA ]
link_state -> ID annot . error [ UNDERSCORE SPACE SHARP NEWLINE INT ID DOT DIV COMMENT COMMA CL_BRA ]
## Transitions:
-- On error shift to state 71
-- On DOT shift to state 72
## Reductions:

State 71:
## Known stack suffix:
## ID annot error
## LR(1) items:
link_state -> ID annot error . [ UNDERSCORE SPACE SHARP NEWLINE INT ID DOT DIV COMMENT COMMA CL_BRA ]
## Transitions:
## Reductions:
-- On UNDERSCORE reduce production link_state -> ID annot error
-- On SPACE reduce production link_state -> ID annot error
-- On SHARP reduce production link_state -> ID annot error
-- On NEWLINE reduce production link_state -> ID annot error
-- On INT reduce production link_state -> ID annot error
-- On ID reduce production link_state -> ID annot error
-- On DOT reduce production link_state -> ID annot error
-- On DIV reduce production link_state -> ID annot error
-- On COMMENT reduce production link_state -> ID annot error
-- On COMMA reduce production link_state -> ID annot error
-- On CL_BRA reduce production link_state -> ID annot error

State 72:
## Known stack suffix:
## ID annot DOT
## LR(1) items:
link_state -> ID annot DOT . annot ID [ UNDERSCORE SPACE SHARP NEWLINE INT ID DOT DIV COMMENT COMMA CL_BRA ]
## Transitions:
-- On SPACE shift to state 2
-- On NEWLINE shift to state 3
-- On COMMENT shift to state 4
-- On annot shift to state 73
## Reductions:
-- On ID reduce production annot ->

State 73:
## Known stack suffix:
## ID annot DOT annot
## LR(1) items:
link_state -> ID annot DOT annot . ID [ UNDERSCORE SPACE SHARP NEWLINE INT ID DOT DIV COMMENT COMMA CL_BRA ]
## Transitions:
-- On ID shift to state 74
## Reductions:

State 74:
## Known stack suffix:
## ID annot DOT annot ID
## LR(1) items:
link_state -> ID annot DOT annot ID . [ UNDERSCORE SPACE SHARP NEWLINE INT ID DOT DIV COMMENT COMMA CL_BRA ]
## Transitions:
## Reductions:
-- On UNDERSCORE reduce production link_state -> ID annot DOT annot ID
-- On SPACE reduce production link_state -> ID annot DOT annot ID
-- On SHARP reduce production link_state -> ID annot DOT annot ID
-- On NEWLINE reduce production link_state -> ID annot DOT annot ID
-- On INT reduce production link_state -> ID annot DOT annot ID
-- On ID reduce production link_state -> ID annot DOT annot ID
-- On DOT reduce production link_state -> ID annot DOT annot ID
-- On DIV reduce production link_state -> ID annot DOT annot ID
-- On COMMENT reduce production link_state -> ID annot DOT annot ID
-- On COMMA reduce production link_state -> ID annot DOT annot ID
-- On CL_BRA reduce production link_state -> ID annot DOT annot ID

State 75:
## Known stack suffix:
## DOT
## LR(1) items:
link_state -> DOT . [ UNDERSCORE SPACE SHARP NEWLINE INT ID DOT DIV COMMENT COMMA CL_BRA ]
## Transitions:
## Reductions:
-- On UNDERSCORE reduce production link_state -> DOT
-- On SPACE reduce production link_state -> DOT
-- On SHARP reduce production link_state -> DOT
-- On NEWLINE reduce production link_state -> DOT
-- On INT reduce production link_state -> DOT
-- On ID reduce production link_state -> DOT
-- On DOT reduce production link_state -> DOT
-- On DIV reduce production link_state -> DOT
-- On COMMENT reduce production link_state -> DOT
-- On COMMA reduce production link_state -> DOT
-- On CL_BRA reduce production link_state -> DOT

State 76:
## Known stack suffix:
## annot link_states
## LR(1) items:
site_link -> annot link_states . link_modif CL_BRA [ error SPACE OP_CUR NEWLINE ID COMMENT COMMA CL_PAR ]
## Transitions:
-- On DIV shift to state 77
-- On link_modif shift to state 84
## Reductions:
-- On CL_BRA reduce production link_modif ->

State 77:
## Known stack suffix:
## DIV
## LR(1) items:
link_modif -> DIV . annot DOT annot [ CL_BRA ]
link_modif -> DIV . annot INT annot [ CL_BRA ]
link_modif -> DIV . annot error [ CL_BRA ]
## Transitions:
-- On SPACE shift to state 19
-- On NEWLINE shift to state 20
-- On COMMENT shift to state 21
-- On annot shift to state 78
## Reductions:
-- On error reduce production annot ->
-- On INT reduce production annot ->
-- On DOT reduce production annot ->

State 78:
## Known stack suffix:
## DIV annot
## LR(1) items:
link_modif -> DIV annot . DOT annot [ CL_BRA ]
link_modif -> DIV annot . INT annot [ CL_BRA ]
link_modif -> DIV annot . error [ CL_BRA ]
## Transitions:
-- On error shift to state 79
-- On INT shift to state 80
-- On DOT shift to state 82
## Reductions:

State 79:
## Known stack suffix:
## DIV annot error
## LR(1) items:
link_modif -> DIV annot error . [ CL_BRA ]
## Transitions:
## Reductions:
-- On CL_BRA reduce production link_modif -> DIV annot error

State 80:
## Known stack suffix:
## DIV annot INT
## LR(1) items:
link_modif -> DIV annot INT . annot [ CL_BRA ]
## Transitions:
-- On SPACE shift to state 2
-- On NEWLINE shift to state 3
-- On COMMENT shift to state 4
-- On annot shift to state 81
## Reductions:
-- On CL_BRA reduce production annot ->

State 81:
## Known stack suffix:
## DIV annot INT annot
## LR(1) items:
link_modif -> DIV annot INT annot . [ CL_BRA ]
## Transitions:
## Reductions:
-- On CL_BRA reduce production link_modif -> DIV annot INT annot

State 82:
## Known stack suffix:
## DIV annot DOT
## LR(1) items:
link_modif -> DIV annot DOT . annot [ CL_BRA ]
## Transitions:
-- On SPACE shift to state 2
-- On NEWLINE shift to state 3
-- On COMMENT shift to state 4
-- On annot shift to state 83
## Reductions:
-- On CL_BRA reduce production annot ->

State 83:
## Known stack suffix:
## DIV annot DOT annot
## LR(1) items:
link_modif -> DIV annot DOT annot . [ CL_BRA ]
## Transitions:
## Reductions:
-- On CL_BRA reduce production link_modif -> DIV annot DOT annot

State 84:
## Known stack suffix:
## annot link_states link_modif
## LR(1) items:
site_link -> annot link_states link_modif . CL_BRA [ error SPACE OP_CUR NEWLINE ID COMMENT COMMA CL_PAR ]
## Transitions:
-- On CL_BRA shift to state 85
## Reductions:

State 85:
## Known stack suffix:
## annot link_states link_modif CL_BRA
## LR(1) items:
site_link -> annot link_states link_modif CL_BRA . [ error SPACE OP_CUR NEWLINE ID COMMENT COMMA CL_PAR ]
## Transitions:
## Reductions:
-- On error reduce production site_link -> annot link_states link_modif CL_BRA
-- On SPACE reduce production site_link -> annot link_states link_modif CL_BRA
-- On OP_CUR reduce production site_link -> annot link_states link_modif CL_BRA
-- On NEWLINE reduce production site_link -> annot link_states link_modif CL_BRA
-- On ID reduce production site_link -> annot link_states link_modif CL_BRA
-- On COMMENT reduce production site_link -> annot link_states link_modif CL_BRA
-- On COMMA reduce production site_link -> annot link_states link_modif CL_BRA
-- On CL_PAR reduce production site_link -> annot link_states link_modif CL_BRA

State 86:
## Known stack suffix:
## link_state
## LR(1) items:
link_states -> link_state . annot [ DIV CL_BRA ]
link_states -> link_state . annot link_states [ DIV CL_BRA ]
link_states -> link_state . annot COMMA annot link_states [ DIV CL_BRA ]
## Transitions:
-- On SPACE shift to state 2
-- On NEWLINE shift to state 3
-- On COMMENT shift to state 4
-- On annot shift to state 87
## Reductions:
-- On UNDERSCORE reduce production annot ->
-- On SHARP reduce production annot ->
-- On INT reduce production annot ->
-- On ID reduce production annot ->
-- On DOT reduce production annot ->
-- On DIV reduce production annot ->
-- On COMMA reduce production annot ->
-- On CL_BRA reduce production annot ->

State 87:
## Known stack suffix:
## link_state annot
## LR(1) items:
link_states -> link_state annot . [ DIV CL_BRA ]
link_states -> link_state annot . link_states [ DIV CL_BRA ]
link_states -> link_state annot . COMMA annot link_states [ DIV CL_BRA ]
## Transitions:
-- On UNDERSCORE shift to state 66
-- On SHARP shift to state 67
-- On INT shift to state 68
-- On ID shift to state 69
-- On DOT shift to state 75
-- On COMMA shift to state 88
-- On link_states shift to state 91
-- On link_state shift to state 86
## Reductions:
-- On DIV reduce production link_states -> link_state annot
-- On CL_BRA reduce production link_states -> link_state annot

State 88:
## Known stack suffix:
## link_state annot COMMA
## LR(1) items:
link_states -> link_state annot COMMA . annot link_states [ DIV CL_BRA ]
## Transitions:
-- On SPACE shift to state 2
-- On NEWLINE shift to state 3
-- On COMMENT shift to state 4
-- On annot shift to state 89
## Reductions:
-- On UNDERSCORE reduce production annot ->
-- On SHARP reduce production annot ->
-- On INT reduce production annot ->
-- On ID reduce production annot ->
-- On DOT reduce production annot ->

State 89:
## Known stack suffix:
## link_state annot COMMA annot
## LR(1) items:
link_states -> link_state annot COMMA annot . link_states [ DIV CL_BRA ]
## Transitions:
-- On UNDERSCORE shift to state 66
-- On SHARP shift to state 67
-- On INT shift to state 68
-- On ID shift to state 69
-- On DOT shift to state 75
-- On link_states shift to state 90
-- On link_state shift to state 86
## Reductions:

State 90:
## Known stack suffix:
## link_state annot COMMA annot link_states
## LR(1) items:
link_states -> link_state annot COMMA annot link_states . [ DIV CL_BRA ]
## Transitions:
## Reductions:
-- On DIV reduce production link_states -> link_state annot COMMA annot link_states
-- On CL_BRA reduce production link_states -> link_state annot COMMA annot link_states

State 91:
## Known stack suffix:
## link_state annot link_states
## LR(1) items:
link_states -> link_state annot link_states . [ DIV CL_BRA ]
## Transitions:
## Reductions:
-- On DIV reduce production link_states -> link_state annot link_states
-- On CL_BRA reduce production link_states -> link_state annot link_states

State 92:
## Known stack suffix:
## ID annot OP_CUR annot site_counter
## LR(1) items:
site -> ID annot OP_CUR annot site_counter . [ error ID COMMA CL_PAR ]
## Transitions:
## Reductions:
-- On error reduce production site -> ID annot OP_CUR annot site_counter
-- On ID reduce production site -> ID annot OP_CUR annot site_counter
-- On COMMA reduce production site -> ID annot OP_CUR annot site_counter
-- On CL_PAR reduce production site -> ID annot OP_CUR annot site_counter

State 93:
## Known stack suffix:
## internal_states
## LR(1) items:
site_internal -> internal_states . internal_modif CL_CUR [ error SPACE OP_BRA NEWLINE ID COMMENT COMMA CL_PAR ]
## Transitions:
-- On DIV shift to state 94
-- On internal_modif shift to state 99
## Reductions:
-- On CL_CUR reduce production internal_modif ->

State 94:
## Known stack suffix:
## DIV
## LR(1) items:
internal_modif -> DIV . annot ID annot [ CL_CUR ]
internal_modif -> DIV . annot error [ CL_CUR ]
## Transitions:
-- On SPACE shift to state 19
-- On NEWLINE shift to state 20
-- On COMMENT shift to state 21
-- On annot shift to state 95
## Reductions:
-- On error reduce production annot ->
-- On ID reduce production annot ->

State 95:
## Known stack suffix:
## DIV annot
## LR(1) items:
internal_modif -> DIV annot . ID annot [ CL_CUR ]
internal_modif -> DIV annot . error [ CL_CUR ]
## Transitions:
-- On error shift to state 96
-- On ID shift to state 97
## Reductions:

State 96:
## Known stack suffix:
## DIV annot error
## LR(1) items:
internal_modif -> DIV annot error . [ CL_CUR ]
## Transitions:
## Reductions:
-- On CL_CUR reduce production internal_modif -> DIV annot error

State 97:
## Known stack suffix:
## DIV annot ID
## LR(1) items:
internal_modif -> DIV annot ID . annot [ CL_CUR ]
## Transitions:
-- On SPACE shift to state 2
-- On NEWLINE shift to state 3
-- On COMMENT shift to state 4
-- On annot shift to state 98
## Reductions:
-- On CL_CUR reduce production annot ->

State 98:
## Known stack suffix:
## DIV annot ID annot
## LR(1) items:
internal_modif -> DIV annot ID annot . [ CL_CUR ]
## Transitions:
## Reductions:
-- On CL_CUR reduce production internal_modif -> DIV annot ID annot

State 99:
## Known stack suffix:
## internal_states internal_modif
## LR(1) items:
site_internal -> internal_states internal_modif . CL_CUR [ error SPACE OP_BRA NEWLINE ID COMMENT COMMA CL_PAR ]
## Transitions:
-- On CL_CUR shift to state 100
## Reductions:

State 100:
## Known stack suffix:
## internal_states internal_modif CL_CUR
## LR(1) items:
site_internal -> internal_states internal_modif CL_CUR . [ error SPACE OP_BRA NEWLINE ID COMMENT COMMA CL_PAR ]
## Transitions:
## Reductions:
-- On error reduce production site_internal -> internal_states internal_modif CL_CUR
-- On SPACE reduce production site_internal -> internal_states internal_modif CL_CUR
-- On OP_BRA reduce production site_internal -> internal_states internal_modif CL_CUR
-- On NEWLINE reduce production site_internal -> internal_states internal_modif CL_CUR
-- On ID reduce production site_internal -> internal_states internal_modif CL_CUR
-- On COMMENT reduce production site_internal -> internal_states internal_modif CL_CUR
-- On COMMA reduce production site_internal -> internal_states internal_modif CL_CUR
-- On CL_PAR reduce production site_internal -> internal_states internal_modif CL_CUR

State 101:
## Known stack suffix:
## internal_state
## LR(1) items:
internal_states -> internal_state . annot [ DIV CL_CUR ]
internal_states -> internal_state . annot internal_states [ DIV CL_CUR ]
internal_states -> internal_state . annot COMMA annot internal_states [ DIV CL_CUR ]
## Transitions:
-- On SPACE shift to state 2
-- On NEWLINE shift to state 3
-- On COMMENT shift to state 4
-- On annot shift to state 102
## Reductions:
-- On SHARP reduce production annot ->
-- On ID reduce production annot ->
-- On DIV reduce production annot ->
-- On COMMA reduce production annot ->
-- On CL_CUR reduce production annot ->

State 102:
## Known stack suffix:
## internal_state annot
## LR(1) items:
internal_states -> internal_state annot . [ DIV CL_CUR ]
internal_states -> internal_state annot . internal_states [ DIV CL_CUR ]
internal_states -> internal_state annot . COMMA annot internal_states [ DIV CL_CUR ]
## Transitions:
-- On SHARP shift to state 35
-- On ID shift to state 49
-- On COMMA shift to state 103
-- On internal_states shift to state 106
-- On internal_state shift to state 101
## Reductions:
-- On DIV reduce production internal_states -> internal_state annot
-- On CL_CUR reduce production internal_states -> internal_state annot

State 103:
## Known stack suffix:
## internal_state annot COMMA
## LR(1) items:
internal_states -> internal_state annot COMMA . annot internal_states [ DIV CL_CUR ]
## Transitions:
-- On SPACE shift to state 2
-- On NEWLINE shift to state 3
-- On COMMENT shift to state 4
-- On annot shift to state 104
## Reductions:
-- On SHARP reduce production annot ->
-- On ID reduce production annot ->

State 104:
## Known stack suffix:
## internal_state annot COMMA annot
## LR(1) items:
internal_states -> internal_state annot COMMA annot . internal_states [ DIV CL_CUR ]
## Transitions:
-- On SHARP shift to state 35
-- On ID shift to state 49
-- On internal_states shift to state 105
-- On internal_state shift to state 101
## Reductions:

State 105:
## Known stack suffix:
## internal_state annot COMMA annot internal_states
## LR(1) items:
internal_states -> internal_state annot COMMA annot internal_states . [ DIV CL_CUR ]
## Transitions:
## Reductions:
-- On DIV reduce production internal_states -> internal_state annot COMMA annot internal_states
-- On CL_CUR reduce production internal_states -> internal_state annot COMMA annot internal_states

State 106:
## Known stack suffix:
## internal_state annot internal_states
## LR(1) items:
internal_states -> internal_state annot internal_states . [ DIV CL_CUR ]
## Transitions:
## Reductions:
-- On DIV reduce production internal_states -> internal_state annot internal_states
-- On CL_CUR reduce production internal_states -> internal_state annot internal_states

State 107:
## Known stack suffix:
## counter_test
## LR(1) items:
site_counter -> counter_test . annot CL_CUR annot [ error ID COMMA CL_PAR ]
site_counter -> counter_test . annot DIV annot counter_modif annot CL_CUR annot [ error ID COMMA CL_PAR ]
## Transitions:
-- On SPACE shift to state 2
-- On NEWLINE shift to state 3
-- On COMMENT shift to state 4
-- On annot shift to state 108
## Reductions:
-- On DIV reduce production annot ->
-- On CL_CUR reduce production annot ->

State 108:
## Known stack suffix:
## counter_test annot
## LR(1) items:
site_counter -> counter_test annot . CL_CUR annot [ error ID COMMA CL_PAR ]
site_counter -> counter_test annot . DIV annot counter_modif annot CL_CUR annot [ error ID COMMA CL_PAR ]
## Transitions:
-- On DIV shift to state 109
-- On CL_CUR shift to state 115
## Reductions:

State 109:
## Known stack suffix:
## counter_test annot DIV
## LR(1) items:
site_counter -> counter_test annot DIV . annot counter_modif annot CL_CUR annot [ error ID COMMA CL_PAR ]
## Transitions:
-- On SPACE shift to state 2
-- On NEWLINE shift to state 3
-- On COMMENT shift to state 4
-- On annot shift to state 110
## Reductions:
-- On PLUS reduce production annot ->
-- On MINUS reduce production annot ->

State 110:
## Known stack suffix:
## counter_test annot DIV annot
## LR(1) items:
site_counter -> counter_test annot DIV annot . counter_modif annot CL_CUR annot [ error ID COMMA CL_PAR ]
## Transitions:
-- On PLUS shift to state 36
-- On MINUS shift to state 44
-- On counter_modif shift to state 111
## Reductions:

State 111:
## Known stack suffix:
## counter_test annot DIV annot counter_modif
## LR(1) items:
site_counter -> counter_test annot DIV annot counter_modif . annot CL_CUR annot [ error ID COMMA CL_PAR ]
## Transitions:
-- On SPACE shift to state 2
-- On NEWLINE shift to state 3
-- On COMMENT shift to state 4
-- On annot shift to state 112
## Reductions:
-- On CL_CUR reduce production annot ->

State 112:
## Known stack suffix:
## counter_test annot DIV annot counter_modif annot
## LR(1) items:
site_counter -> counter_test annot DIV annot counter_modif annot . CL_CUR annot [ error ID COMMA CL_PAR ]
## Transitions:
-- On CL_CUR shift to state 113
## Reductions:

State 113:
## Known stack suffix:
## counter_test annot DIV annot counter_modif annot CL_CUR
## LR(1) items:
site_counter -> counter_test annot DIV annot counter_modif annot CL_CUR . annot [ error ID COMMA CL_PAR ]
## Transitions:
-- On SPACE shift to state 19
-- On NEWLINE shift to state 20
-- On COMMENT shift to state 21
-- On annot shift to state 114
## Reductions:
-- On error reduce production annot ->
-- On ID reduce production annot ->
-- On COMMA reduce production annot ->
-- On CL_PAR reduce production annot ->

State 114:
## Known stack suffix:
## counter_test annot DIV annot counter_modif annot CL_CUR annot
## LR(1) items:
site_counter -> counter_test annot DIV annot counter_modif annot CL_CUR annot . [ error ID COMMA CL_PAR ]
## Transitions:
## Reductions:
-- On error reduce production site_counter -> counter_test annot DIV annot counter_modif annot CL_CUR annot
-- On ID reduce production site_counter -> counter_test annot DIV annot counter_modif annot CL_CUR annot
-- On COMMA reduce production site_counter -> counter_test annot DIV annot counter_modif annot CL_CUR annot
-- On CL_PAR reduce production site_counter -> counter_test annot DIV annot counter_modif annot CL_CUR annot

State 115:
## Known stack suffix:
## counter_test annot CL_CUR
## LR(1) items:
site_counter -> counter_test annot CL_CUR . annot [ error ID COMMA CL_PAR ]
## Transitions:
-- On SPACE shift to state 19
-- On NEWLINE shift to state 20
-- On COMMENT shift to state 21
-- On annot shift to state 116
## Reductions:
-- On error reduce production annot ->
-- On ID reduce production annot ->
-- On COMMA reduce production annot ->
-- On CL_PAR reduce production annot ->

State 116:
## Known stack suffix:
## counter_test annot CL_CUR annot
## LR(1) items:
site_counter -> counter_test annot CL_CUR annot . [ error ID COMMA CL_PAR ]
## Transitions:
## Reductions:
-- On error reduce production site_counter -> counter_test annot CL_CUR annot
-- On ID reduce production site_counter -> counter_test annot CL_CUR annot
-- On COMMA reduce production site_counter -> counter_test annot CL_CUR annot
-- On CL_PAR reduce production site_counter -> counter_test annot CL_CUR annot

State 117:
## Known stack suffix:
## counter_modif
## LR(1) items:
site_counter -> counter_modif . annot CL_CUR annot [ error ID COMMA CL_PAR ]
## Transitions:
-- On SPACE shift to state 2
-- On NEWLINE shift to state 3
-- On COMMENT shift to state 4
-- On annot shift to state 118
## Reductions:
-- On CL_CUR reduce production annot ->

State 118:
## Known stack suffix:
## counter_modif annot
## LR(1) items:
site_counter -> counter_modif annot . CL_CUR annot [ error ID COMMA CL_PAR ]
## Transitions:
-- On CL_CUR shift to state 119
## Reductions:

State 119:
## Known stack suffix:
## counter_modif annot CL_CUR
## LR(1) items:
site_counter -> counter_modif annot CL_CUR . annot [ error ID COMMA CL_PAR ]
## Transitions:
-- On SPACE shift to state 19
-- On NEWLINE shift to state 20
-- On COMMENT shift to state 21
-- On annot shift to state 120
## Reductions:
-- On error reduce production annot ->
-- On ID reduce production annot ->
-- On COMMA reduce production annot ->
-- On CL_PAR reduce production annot ->

State 120:
## Known stack suffix:
## counter_modif annot CL_CUR annot
## LR(1) items:
site_counter -> counter_modif annot CL_CUR annot . [ error ID COMMA CL_PAR ]
## Transitions:
## Reductions:
-- On error reduce production site_counter -> counter_modif annot CL_CUR annot
-- On ID reduce production site_counter -> counter_modif annot CL_CUR annot
-- On COMMA reduce production site_counter -> counter_modif annot CL_CUR annot
-- On CL_PAR reduce production site_counter -> counter_modif annot CL_CUR annot

State 121:
## Known stack suffix:
## ID annot OP_BRA
## LR(1) items:
site -> ID annot OP_BRA . site_link annot OP_CUR annot site_internal annot [ error ID COMMA CL_PAR ]
site -> ID annot OP_BRA . site_link annot [ error ID COMMA CL_PAR ]
## Transitions:
-- On SPACE shift to state 19
-- On NEWLINE shift to state 20
-- On COMMENT shift to state 21
-- On site_link shift to state 122
-- On annot shift to state 64
## Reductions:
-- On error reduce production annot ->
-- On UNDERSCORE reduce production annot ->
-- On SHARP reduce production annot ->
-- On INT reduce production annot ->
-- On ID reduce production annot ->
-- On DOT reduce production annot ->

State 122:
## Known stack suffix:
## ID annot OP_BRA site_link
## LR(1) items:
site -> ID annot OP_BRA site_link . annot OP_CUR annot site_internal annot [ error ID COMMA CL_PAR ]
site -> ID annot OP_BRA site_link . annot [ error ID COMMA CL_PAR ]
## Transitions:
-- On SPACE shift to state 19
-- On NEWLINE shift to state 20
-- On COMMENT shift to state 21
-- On annot shift to state 123
## Reductions:
-- On error reduce production annot ->
-- On OP_CUR reduce production annot ->
-- On ID reduce production annot ->
-- On COMMA reduce production annot ->
-- On CL_PAR reduce production annot ->

State 123:
## Known stack suffix:
## ID annot OP_BRA site_link annot
## LR(1) items:
site -> ID annot OP_BRA site_link annot . OP_CUR annot site_internal annot [ error ID COMMA CL_PAR ]
site -> ID annot OP_BRA site_link annot . [ error ID COMMA CL_PAR ]
## Transitions:
-- On OP_CUR shift to state 124
## Reductions:
-- On error reduce production site -> ID annot OP_BRA site_link annot
-- On ID reduce production site -> ID annot OP_BRA site_link annot
-- On COMMA reduce production site -> ID annot OP_BRA site_link annot
-- On CL_PAR reduce production site -> ID annot OP_BRA site_link annot

State 124:
## Known stack suffix:
## ID annot OP_BRA site_link annot OP_CUR
## LR(1) items:
site -> ID annot OP_BRA site_link annot OP_CUR . annot site_internal annot [ error ID COMMA CL_PAR ]
## Transitions:
-- On SPACE shift to state 19
-- On NEWLINE shift to state 20
-- On COMMENT shift to state 21
-- On annot shift to state 125
## Reductions:
-- On error reduce production annot ->
-- On SHARP reduce production annot ->
-- On ID reduce production annot ->

State 125:
## Known stack suffix:
## ID annot OP_BRA site_link annot OP_CUR annot
## LR(1) items:
site -> ID annot OP_BRA site_link annot OP_CUR annot . site_internal annot [ error ID COMMA CL_PAR ]
## Transitions:
-- On error shift to state 34
-- On SHARP shift to state 35
-- On ID shift to state 49
-- On site_internal shift to state 126
-- On internal_states shift to state 93
-- On internal_state shift to state 101
## Reductions:

State 126:
## Known stack suffix:
## ID annot OP_BRA site_link annot OP_CUR annot site_internal
## LR(1) items:
site -> ID annot OP_BRA site_link annot OP_CUR annot site_internal . annot [ error ID COMMA CL_PAR ]
## Transitions:
-- On SPACE shift to state 19
-- On NEWLINE shift to state 20
-- On COMMENT shift to state 21
-- On annot shift to state 127
## Reductions:
-- On error reduce production annot ->
-- On ID reduce production annot ->
-- On COMMA reduce production annot ->
-- On CL_PAR reduce production annot ->

State 127:
## Known stack suffix:
## ID annot OP_BRA site_link annot OP_CUR annot site_internal annot
## LR(1) items:
site -> ID annot OP_BRA site_link annot OP_CUR annot site_internal annot . [ error ID COMMA CL_PAR ]
## Transitions:
## Reductions:
-- On error reduce production site -> ID annot OP_BRA site_link annot OP_CUR annot site_internal annot
-- On ID reduce production site -> ID annot OP_BRA site_link annot OP_CUR annot site_internal annot
-- On COMMA reduce production site -> ID annot OP_BRA site_link annot OP_CUR annot site_internal annot
-- On CL_PAR reduce production site -> ID annot OP_BRA site_link annot OP_CUR annot site_internal annot

State 128:
## Known stack suffix:
## site
## LR(1) items:
interface -> site . interface [ CL_PAR ]
interface -> site . COMMA annot interface [ CL_PAR ]
## Transitions:
-- On error shift to state 29
-- On ID shift to state 30
-- On COMMA shift to state 129
-- On site shift to state 128
-- On interface shift to state 132
## Reductions:
-- On CL_PAR reduce production interface ->

State 129:
## Known stack suffix:
## site COMMA
## LR(1) items:
interface -> site COMMA . annot interface [ CL_PAR ]
## Transitions:
-- On SPACE shift to state 19
-- On NEWLINE shift to state 20
-- On COMMENT shift to state 21
-- On annot shift to state 130
## Reductions:
-- On error reduce production annot ->
-- On ID reduce production annot ->
-- On CL_PAR reduce production annot ->

State 130:
## Known stack suffix:
## site COMMA annot
## LR(1) items:
interface -> site COMMA annot . interface [ CL_PAR ]
## Transitions:
-- On error shift to state 29
-- On ID shift to state 30
-- On site shift to state 128
-- On interface shift to state 131
## Reductions:
-- On CL_PAR reduce production interface ->

State 131:
## Known stack suffix:
## site COMMA annot interface
## LR(1) items:
interface -> site COMMA annot interface . [ CL_PAR ]
## Transitions:
## Reductions:
-- On CL_PAR reduce production interface -> site COMMA annot interface

State 132:
## Known stack suffix:
## site interface
## LR(1) items:
interface -> site interface . [ CL_PAR ]
## Transitions:
## Reductions:
-- On CL_PAR reduce production interface -> site interface

State 133:
## Known stack suffix:
## ID annot OP_PAR annot interface
## LR(1) items:
agent -> ID annot OP_PAR annot interface . CL_PAR agent_modif [ TRUE TOKEN SIGNATURE SEMICOLON RAR PLOT PIPE PERT OBS LRAR LET LABEL INIT ID FALSE EOF DOT CONFIG COMMA CL_PAR ]
## Transitions:
-- On CL_PAR shift to state 134
## Reductions:

State 134:
## Known stack suffix:
## ID annot OP_PAR annot interface CL_PAR
## LR(1) items:
agent -> ID annot OP_PAR annot interface CL_PAR . agent_modif [ TRUE TOKEN SIGNATURE SEMICOLON RAR PLOT PIPE PERT OBS LRAR LET LABEL INIT ID FALSE EOF DOT CONFIG COMMA CL_PAR ]
## Transitions:
-- On SPACE shift to state 2
-- On NEWLINE shift to state 3
-- On COMMENT shift to state 4
-- On annot shift to state 135
-- On agent_modif shift to state 140
## Reductions:
-- On TRUE reduce production annot ->
-- On TOKEN reduce production annot ->
-- On SIGNATURE reduce production annot ->
-- On SEMICOLON reduce production annot ->
-- On RAR reduce production annot ->
-- On PLUS reduce production annot ->
-- On PLOT reduce production annot ->
-- On PIPE reduce production annot ->
-- On PERT reduce production annot ->
-- On OBS reduce production annot ->
-- On MINUS reduce production annot ->
-- On LRAR reduce production annot ->
-- On LET reduce production annot ->
-- On LABEL reduce production annot ->
-- On INIT reduce production annot ->
-- On ID reduce production annot ->
-- On FALSE reduce production annot ->
-- On EOF reduce production annot ->
-- On DOT reduce production annot ->
-- On CONFIG reduce production annot ->
-- On COMMA reduce production annot ->
-- On CL_PAR reduce production annot ->

State 135:
## Known stack suffix:
## annot
## LR(1) items:
agent_modif -> annot . [ TRUE TOKEN SIGNATURE SEMICOLON RAR PLOT PIPE PERT OBS LRAR LET LABEL INIT ID FALSE EOF DOT CONFIG COMMA CL_PAR ]
agent_modif -> annot . PLUS annot [ TRUE TOKEN SIGNATURE SEMICOLON RAR PLOT PIPE PERT OBS LRAR LET LABEL INIT ID FALSE EOF DOT CONFIG COMMA CL_PAR ]
agent_modif -> annot . MINUS annot [ TRUE TOKEN SIGNATURE SEMICOLON RAR PLOT PIPE PERT OBS LRAR LET LABEL INIT ID FALSE EOF DOT CONFIG COMMA CL_PAR ]
## Transitions:
-- On PLUS shift to state 136
-- On MINUS shift to state 138
## Reductions:
-- On TRUE reduce production agent_modif -> annot
-- On TOKEN reduce production agent_modif -> annot
-- On SIGNATURE reduce production agent_modif -> annot
-- On SEMICOLON reduce production agent_modif -> annot
-- On RAR reduce production agent_modif -> annot
-- On PLOT reduce production agent_modif -> annot
-- On PIPE reduce production agent_modif -> annot
-- On PERT reduce production agent_modif -> annot
-- On OBS reduce production agent_modif -> annot
-- On LRAR reduce production agent_modif -> annot
-- On LET reduce production agent_modif -> annot
-- On LABEL reduce production agent_modif -> annot
-- On INIT reduce production agent_modif -> annot
-- On ID reduce production agent_modif -> annot
-- On FALSE reduce production agent_modif -> annot
-- On EOF reduce production agent_modif -> annot
-- On DOT reduce production agent_modif -> annot
-- On CONFIG reduce production agent_modif -> annot
-- On COMMA reduce production agent_modif -> annot
-- On CL_PAR reduce production agent_modif -> annot

State 136:
## Known stack suffix:
## annot PLUS
## LR(1) items:
agent_modif -> annot PLUS . annot [ TRUE TOKEN SIGNATURE SEMICOLON RAR PLOT PIPE PERT OBS LRAR LET LABEL INIT ID FALSE EOF DOT CONFIG COMMA CL_PAR ]
## Transitions:
-- On SPACE shift to state 2
-- On NEWLINE shift to state 3
-- On COMMENT shift to state 4
-- On annot shift to state 137
## Reductions:
-- On TRUE reduce production annot ->
-- On TOKEN reduce production annot ->
-- On SIGNATURE reduce production annot ->
-- On SEMICOLON reduce production annot ->
-- On RAR reduce production annot ->
-- On PLOT reduce production annot ->
-- On PIPE reduce production annot ->
-- On PERT reduce production annot ->
-- On OBS reduce production annot ->
-- On LRAR reduce production annot ->
-- On LET reduce production annot ->
-- On LABEL reduce production annot ->
-- On INIT reduce production annot ->
-- On ID reduce production annot ->
-- On FALSE reduce production annot ->
-- On EOF reduce production annot ->
-- On DOT reduce production annot ->
-- On CONFIG reduce production annot ->
-- On COMMA reduce production annot ->
-- On CL_PAR reduce production annot ->

State 137:
## Known stack suffix:
## annot PLUS annot
## LR(1) items:
agent_modif -> annot PLUS annot . [ TRUE TOKEN SIGNATURE SEMICOLON RAR PLOT PIPE PERT OBS LRAR LET LABEL INIT ID FALSE EOF DOT CONFIG COMMA CL_PAR ]
## Transitions:
## Reductions:
-- On TRUE reduce production agent_modif -> annot PLUS annot
-- On TOKEN reduce production agent_modif -> annot PLUS annot
-- On SIGNATURE reduce production agent_modif -> annot PLUS annot
-- On SEMICOLON reduce production agent_modif -> annot PLUS annot
-- On RAR reduce production agent_modif -> annot PLUS annot
-- On PLOT reduce production agent_modif -> annot PLUS annot
-- On PIPE reduce production agent_modif -> annot PLUS annot
-- On PERT reduce production agent_modif -> annot PLUS annot
-- On OBS reduce production agent_modif -> annot PLUS annot
-- On LRAR reduce production agent_modif -> annot PLUS annot
-- On LET reduce production agent_modif -> annot PLUS annot
-- On LABEL reduce production agent_modif -> annot PLUS annot
-- On INIT reduce production agent_modif -> annot PLUS annot
-- On ID reduce production agent_modif -> annot PLUS annot
-- On FALSE reduce production agent_modif -> annot PLUS annot
-- On EOF reduce production agent_modif -> annot PLUS annot
-- On DOT reduce production agent_modif -> annot PLUS annot
-- On CONFIG reduce production agent_modif -> annot PLUS annot
-- On COMMA reduce production agent_modif -> annot PLUS annot
-- On CL_PAR reduce production agent_modif -> annot PLUS annot

State 138:
## Known stack suffix:
## annot MINUS
## LR(1) items:
agent_modif -> annot MINUS . annot [ TRUE TOKEN SIGNATURE SEMICOLON RAR PLOT PIPE PERT OBS LRAR LET LABEL INIT ID FALSE EOF DOT CONFIG COMMA CL_PAR ]
## Transitions:
-- On SPACE shift to state 2
-- On NEWLINE shift to state 3
-- On COMMENT shift to state 4
-- On annot shift to state 139
## Reductions:
-- On TRUE reduce production annot ->
-- On TOKEN reduce production annot ->
-- On SIGNATURE reduce production annot ->
-- On SEMICOLON reduce production annot ->
-- On RAR reduce production annot ->
-- On PLOT reduce production annot ->
-- On PIPE reduce production annot ->
-- On PERT reduce production annot ->
-- On OBS reduce production annot ->
-- On LRAR reduce production annot ->
-- On LET reduce production annot ->
-- On LABEL reduce production annot ->
-- On INIT reduce production annot ->
-- On ID reduce production annot ->
-- On FALSE reduce production annot ->
-- On EOF reduce production annot ->
-- On DOT reduce production annot ->
-- On CONFIG reduce production annot ->
-- On COMMA reduce production annot ->
-- On CL_PAR reduce production annot ->

State 139:
## Known stack suffix:
## annot MINUS annot
## LR(1) items:
agent_modif -> annot MINUS annot . [ TRUE TOKEN SIGNATURE SEMICOLON RAR PLOT PIPE PERT OBS LRAR LET LABEL INIT ID FALSE EOF DOT CONFIG COMMA CL_PAR ]
## Transitions:
## Reductions:
-- On TRUE reduce production agent_modif -> annot MINUS annot
-- On TOKEN reduce production agent_modif -> annot MINUS annot
-- On SIGNATURE reduce production agent_modif -> annot MINUS annot
-- On SEMICOLON reduce production agent_modif -> annot MINUS annot
-- On RAR reduce production agent_modif -> annot MINUS annot
-- On PLOT reduce production agent_modif -> annot MINUS annot
-- On PIPE reduce production agent_modif -> annot MINUS annot
-- On PERT reduce production agent_modif -> annot MINUS annot
-- On OBS reduce production agent_modif -> annot MINUS annot
-- On LRAR reduce production agent_modif -> annot MINUS annot
-- On LET reduce production agent_modif -> annot MINUS annot
-- On LABEL reduce production agent_modif -> annot MINUS annot
-- On INIT reduce production agent_modif -> annot MINUS annot
-- On ID reduce production agent_modif -> annot MINUS annot
-- On FALSE reduce production agent_modif -> annot MINUS annot
-- On EOF reduce production agent_modif -> annot MINUS annot
-- On DOT reduce production agent_modif -> annot MINUS annot
-- On CONFIG reduce production agent_modif -> annot MINUS annot
-- On COMMA reduce production agent_modif -> annot MINUS annot
-- On CL_PAR reduce production agent_modif -> annot MINUS annot

State 140:
## Known stack suffix:
## ID annot OP_PAR annot interface CL_PAR agent_modif
## LR(1) items:
agent -> ID annot OP_PAR annot interface CL_PAR agent_modif . [ TRUE TOKEN SIGNATURE SEMICOLON RAR PLOT PIPE PERT OBS LRAR LET LABEL INIT ID FALSE EOF DOT CONFIG COMMA CL_PAR ]
## Transitions:
## Reductions:
-- On TRUE reduce production agent -> ID annot OP_PAR annot interface CL_PAR agent_modif
-- On TOKEN reduce production agent -> ID annot OP_PAR annot interface CL_PAR agent_modif
-- On SIGNATURE reduce production agent -> ID annot OP_PAR annot interface CL_PAR agent_modif
-- On SEMICOLON reduce production agent -> ID annot OP_PAR annot interface CL_PAR agent_modif
-- On RAR reduce production agent -> ID annot OP_PAR annot interface CL_PAR agent_modif
-- On PLOT reduce production agent -> ID annot OP_PAR annot interface CL_PAR agent_modif
-- On PIPE reduce production agent -> ID annot OP_PAR annot interface CL_PAR agent_modif
-- On PERT reduce production agent -> ID annot OP_PAR annot interface CL_PAR agent_modif
-- On OBS reduce production agent -> ID annot OP_PAR annot interface CL_PAR agent_modif
-- On LRAR reduce production agent -> ID annot OP_PAR annot interface CL_PAR agent_modif
-- On LET reduce production agent -> ID annot OP_PAR annot interface CL_PAR agent_modif
-- On LABEL reduce production agent -> ID annot OP_PAR annot interface CL_PAR agent_modif
-- On INIT reduce production agent -> ID annot OP_PAR annot interface CL_PAR agent_modif
-- On ID reduce production agent -> ID annot OP_PAR annot interface CL_PAR agent_modif
-- On FALSE reduce production agent -> ID annot OP_PAR annot interface CL_PAR agent_modif
-- On EOF reduce production agent -> ID annot OP_PAR annot interface CL_PAR agent_modif
-- On DOT reduce production agent -> ID annot OP_PAR annot interface CL_PAR agent_modif
-- On CONFIG reduce production agent -> ID annot OP_PAR annot interface CL_PAR agent_modif
-- On COMMA reduce production agent -> ID annot OP_PAR annot interface CL_PAR agent_modif
-- On CL_PAR reduce production agent -> ID annot OP_PAR annot interface CL_PAR agent_modif

State 141:
## Known stack suffix:
## ID annot COLON
## LR(1) items:
agent -> ID annot COLON . annot ID annot OP_PAR annot interface CL_PAR agent_modif [ TRUE TOKEN SIGNATURE SEMICOLON RAR PLOT PIPE PERT OBS LRAR LET LABEL INIT ID FALSE EOF DOT CONFIG COMMA CL_PAR ]
## Transitions:
-- On SPACE shift to state 2
-- On NEWLINE shift to state 3
-- On COMMENT shift to state 4
-- On annot shift to state 142
## Reductions:
-- On ID reduce production annot ->

State 142:
## Known stack suffix:
## ID annot COLON annot
## LR(1) items:
agent -> ID annot COLON annot . ID annot OP_PAR annot interface CL_PAR agent_modif [ TRUE TOKEN SIGNATURE SEMICOLON RAR PLOT PIPE PERT OBS LRAR LET LABEL INIT ID FALSE EOF DOT CONFIG COMMA CL_PAR ]
## Transitions:
-- On ID shift to state 143
## Reductions:

State 143:
## Known stack suffix:
## ID annot COLON annot ID
## LR(1) items:
agent -> ID annot COLON annot ID . annot OP_PAR annot interface CL_PAR agent_modif [ TRUE TOKEN SIGNATURE SEMICOLON RAR PLOT PIPE PERT OBS LRAR LET LABEL INIT ID FALSE EOF DOT CONFIG COMMA CL_PAR ]
## Transitions:
-- On SPACE shift to state 2
-- On NEWLINE shift to state 3
-- On COMMENT shift to state 4
-- On annot shift to state 144
## Reductions:
-- On OP_PAR reduce production annot ->

State 144:
## Known stack suffix:
## ID annot COLON annot ID annot
## LR(1) items:
agent -> ID annot COLON annot ID annot . OP_PAR annot interface CL_PAR agent_modif [ TRUE TOKEN SIGNATURE SEMICOLON RAR PLOT PIPE PERT OBS LRAR LET LABEL INIT ID FALSE EOF DOT CONFIG COMMA CL_PAR ]
## Transitions:
-- On OP_PAR shift to state 145
## Reductions:

State 145:
## Known stack suffix:
## ID annot COLON annot ID annot OP_PAR
## LR(1) items:
agent -> ID annot COLON annot ID annot OP_PAR . annot interface CL_PAR agent_modif [ TRUE TOKEN SIGNATURE SEMICOLON RAR PLOT PIPE PERT OBS LRAR LET LABEL INIT ID FALSE EOF DOT CONFIG COMMA CL_PAR ]
## Transitions:
-- On SPACE shift to state 19
-- On NEWLINE shift to state 20
-- On COMMENT shift to state 21
-- On annot shift to state 146
## Reductions:
-- On error reduce production annot ->
-- On ID reduce production annot ->
-- On CL_PAR reduce production annot ->

State 146:
## Known stack suffix:
## ID annot COLON annot ID annot OP_PAR annot
## LR(1) items:
agent -> ID annot COLON annot ID annot OP_PAR annot . interface CL_PAR agent_modif [ TRUE TOKEN SIGNATURE SEMICOLON RAR PLOT PIPE PERT OBS LRAR LET LABEL INIT ID FALSE EOF DOT CONFIG COMMA CL_PAR ]
## Transitions:
-- On error shift to state 29
-- On ID shift to state 30
-- On site shift to state 128
-- On interface shift to state 147
## Reductions:
-- On CL_PAR reduce production interface ->

State 147:
## Known stack suffix:
## ID annot COLON annot ID annot OP_PAR annot interface
## LR(1) items:
agent -> ID annot COLON annot ID annot OP_PAR annot interface . CL_PAR agent_modif [ TRUE TOKEN SIGNATURE SEMICOLON RAR PLOT PIPE PERT OBS LRAR LET LABEL INIT ID FALSE EOF DOT CONFIG COMMA CL_PAR ]
## Transitions:
-- On CL_PAR shift to state 148
## Reductions:

State 148:
## Known stack suffix:
## ID annot COLON annot ID annot OP_PAR annot interface CL_PAR
## LR(1) items:
agent -> ID annot COLON annot ID annot OP_PAR annot interface CL_PAR . agent_modif [ TRUE TOKEN SIGNATURE SEMICOLON RAR PLOT PIPE PERT OBS LRAR LET LABEL INIT ID FALSE EOF DOT CONFIG COMMA CL_PAR ]
## Transitions:
-- On SPACE shift to state 2
-- On NEWLINE shift to state 3
-- On COMMENT shift to state 4
-- On annot shift to state 135
-- On agent_modif shift to state 149
## Reductions:
-- On TRUE reduce production annot ->
-- On TOKEN reduce production annot ->
-- On SIGNATURE reduce production annot ->
-- On SEMICOLON reduce production annot ->
-- On RAR reduce production annot ->
-- On PLUS reduce production annot ->
-- On PLOT reduce production annot ->
-- On PIPE reduce production annot ->
-- On PERT reduce production annot ->
-- On OBS reduce production annot ->
-- On MINUS reduce production annot ->
-- On LRAR reduce production annot ->
-- On LET reduce production annot ->
-- On LABEL reduce production annot ->
-- On INIT reduce production annot ->
-- On ID reduce production annot ->
-- On FALSE reduce production annot ->
-- On EOF reduce production annot ->
-- On DOT reduce production annot ->
-- On CONFIG reduce production annot ->
-- On COMMA reduce production annot ->
-- On CL_PAR reduce production annot ->

State 149:
## Known stack suffix:
## ID annot COLON annot ID annot OP_PAR annot interface CL_PAR agent_modif
## LR(1) items:
agent -> ID annot COLON annot ID annot OP_PAR annot interface CL_PAR agent_modif . [ TRUE TOKEN SIGNATURE SEMICOLON RAR PLOT PIPE PERT OBS LRAR LET LABEL INIT ID FALSE EOF DOT CONFIG COMMA CL_PAR ]
## Transitions:
## Reductions:
-- On TRUE reduce production agent -> ID annot COLON annot ID annot OP_PAR annot interface CL_PAR agent_modif
-- On TOKEN reduce production agent -> ID annot COLON annot ID annot OP_PAR annot interface CL_PAR agent_modif
-- On SIGNATURE reduce production agent -> ID annot COLON annot ID annot OP_PAR annot interface CL_PAR agent_modif
-- On SEMICOLON reduce production agent -> ID annot COLON annot ID annot OP_PAR annot interface CL_PAR agent_modif
-- On RAR reduce production agent -> ID annot COLON annot ID annot OP_PAR annot interface CL_PAR agent_modif
-- On PLOT reduce production agent -> ID annot COLON annot ID annot OP_PAR annot interface CL_PAR agent_modif
-- On PIPE reduce production agent -> ID annot COLON annot ID annot OP_PAR annot interface CL_PAR agent_modif
-- On PERT reduce production agent -> ID annot COLON annot ID annot OP_PAR annot interface CL_PAR agent_modif
-- On OBS reduce production agent -> ID annot COLON annot ID annot OP_PAR annot interface CL_PAR agent_modif
-- On LRAR reduce production agent -> ID annot COLON annot ID annot OP_PAR annot interface CL_PAR agent_modif
-- On LET reduce production agent -> ID annot COLON annot ID annot OP_PAR annot interface CL_PAR agent_modif
-- On LABEL reduce production agent -> ID annot COLON annot ID annot OP_PAR annot interface CL_PAR agent_modif
-- On INIT reduce production agent -> ID annot COLON annot ID annot OP_PAR annot interface CL_PAR agent_modif
-- On ID reduce production agent -> ID annot COLON annot ID annot OP_PAR annot interface CL_PAR agent_modif
-- On FALSE reduce production agent -> ID annot COLON annot ID annot OP_PAR annot interface CL_PAR agent_modif
-- On EOF reduce production agent -> ID annot COLON annot ID annot OP_PAR annot interface CL_PAR agent_modif
-- On DOT reduce production agent -> ID annot COLON annot ID annot OP_PAR annot interface CL_PAR agent_modif
-- On CONFIG reduce production agent -> ID annot COLON annot ID annot OP_PAR annot interface CL_PAR agent_modif
-- On COMMA reduce production agent -> ID annot COLON annot ID annot OP_PAR annot interface CL_PAR agent_modif
-- On CL_PAR reduce production agent -> ID annot COLON annot ID annot OP_PAR annot interface CL_PAR agent_modif

State 150:
## Known stack suffix:
## DOT
## LR(1) items:
agent -> DOT . annot [ TRUE TOKEN SIGNATURE SEMICOLON RAR PLOT PIPE PERT OBS LRAR LET LABEL INIT ID FALSE EOF DOT CONFIG COMMA CL_PAR ]
## Transitions:
-- On SPACE shift to state 2
-- On NEWLINE shift to state 3
-- On COMMENT shift to state 4
-- On annot shift to state 151
## Reductions:
-- On TRUE reduce production annot ->
-- On TOKEN reduce production annot ->
-- On SIGNATURE reduce production annot ->
-- On SEMICOLON reduce production annot ->
-- On RAR reduce production annot ->
-- On PLOT reduce production annot ->
-- On PIPE reduce production annot ->
-- On PERT reduce production annot ->
-- On OBS reduce production annot ->
-- On LRAR reduce production annot ->
-- On LET reduce production annot ->
-- On LABEL reduce production annot ->
-- On INIT reduce production annot ->
-- On ID reduce production annot ->
-- On FALSE reduce production annot ->
-- On EOF reduce production annot ->
-- On DOT reduce production annot ->
-- On CONFIG reduce production annot ->
-- On COMMA reduce production annot ->
-- On CL_PAR reduce production annot ->

State 151:
## Known stack suffix:
## DOT annot
## LR(1) items:
agent -> DOT annot . [ TRUE TOKEN SIGNATURE SEMICOLON RAR PLOT PIPE PERT OBS LRAR LET LABEL INIT ID FALSE EOF DOT CONFIG COMMA CL_PAR ]
## Transitions:
## Reductions:
-- On TRUE reduce production agent -> DOT annot
-- On TOKEN reduce production agent -> DOT annot
-- On SIGNATURE reduce production agent -> DOT annot
-- On SEMICOLON reduce production agent -> DOT annot
-- On RAR reduce production agent -> DOT annot
-- On PLOT reduce production agent -> DOT annot
-- On PIPE reduce production agent -> DOT annot
-- On PERT reduce production agent -> DOT annot
-- On OBS reduce production agent -> DOT annot
-- On LRAR reduce production agent -> DOT annot
-- On LET reduce production agent -> DOT annot
-- On LABEL reduce production agent -> DOT annot
-- On INIT reduce production agent -> DOT annot
-- On ID reduce production agent -> DOT annot
-- On FALSE reduce production agent -> DOT annot
-- On EOF reduce production agent -> DOT annot
-- On DOT reduce production agent -> DOT annot
-- On CONFIG reduce production agent -> DOT annot
-- On COMMA reduce production agent -> DOT annot
-- On CL_PAR reduce production agent -> DOT annot

State 152:
## Known stack suffix:
## TRACK annot pattern
## LR(1) items:
effect -> TRACK annot pattern . boolean annot [ SEMICOLON EOF CL_PAR ]
## Transitions:
-- On TRUE shift to state 14
-- On FALSE shift to state 15
-- On boolean shift to state 153
## Reductions:

State 153:
## Known stack suffix:
## TRACK annot pattern boolean
## LR(1) items:
effect -> TRACK annot pattern boolean . annot [ SEMICOLON EOF CL_PAR ]
## Transitions:
-- On SPACE shift to state 2
-- On NEWLINE shift to state 3
-- On COMMENT shift to state 4
-- On annot shift to state 154
## Reductions:
-- On SEMICOLON reduce production annot ->
-- On EOF reduce production annot ->
-- On CL_PAR reduce production annot ->

State 154:
## Known stack suffix:
## TRACK annot pattern boolean annot
## LR(1) items:
effect -> TRACK annot pattern boolean annot . [ SEMICOLON EOF CL_PAR ]
## Transitions:
## Reductions:
-- On SEMICOLON reduce production effect -> TRACK annot pattern boolean annot
-- On EOF reduce production effect -> TRACK annot pattern boolean annot
-- On CL_PAR reduce production effect -> TRACK annot pattern boolean annot

State 155:
## Known stack suffix:
## agent
## LR(1) items:
pattern -> agent . COMMA annot pattern [ TRUE TOKEN SIGNATURE SEMICOLON RAR PLOT PIPE PERT OBS LRAR LET LABEL INIT ID FALSE EOF DOT CONFIG CL_PAR ]
pattern -> agent . [ TRUE TOKEN SIGNATURE SEMICOLON RAR PLOT PIPE PERT OBS LRAR LET LABEL INIT ID FALSE EOF DOT CONFIG CL_PAR ]
## Transitions:
-- On COMMA shift to state 156
## Reductions:
-- On TRUE reduce production pattern -> agent
-- On TOKEN reduce production pattern -> agent
-- On SIGNATURE reduce production pattern -> agent
-- On SEMICOLON reduce production pattern -> agent
-- On RAR reduce production pattern -> agent
-- On PLOT reduce production pattern -> agent
-- On PIPE reduce production pattern -> agent
-- On PERT reduce production pattern -> agent
-- On OBS reduce production pattern -> agent
-- On LRAR reduce production pattern -> agent
-- On LET reduce production pattern -> agent
-- On LABEL reduce production pattern -> agent
-- On INIT reduce production pattern -> agent
-- On ID reduce production pattern -> agent
-- On FALSE reduce production pattern -> agent
-- On EOF reduce production pattern -> agent
-- On DOT reduce production pattern -> agent
-- On CONFIG reduce production pattern -> agent
-- On CL_PAR reduce production pattern -> agent

State 156:
## Known stack suffix:
## agent COMMA
## LR(1) items:
pattern -> agent COMMA . annot pattern [ TRUE TOKEN SIGNATURE SEMICOLON RAR PLOT PIPE PERT OBS LRAR LET LABEL INIT ID FALSE EOF DOT CONFIG CL_PAR ]
## Transitions:
-- On SPACE shift to state 2
-- On NEWLINE shift to state 3
-- On COMMENT shift to state 4
-- On annot shift to state 157
## Reductions:
-- On ID reduce production annot ->
-- On DOT reduce production annot ->

State 157:
## Known stack suffix:
## agent COMMA annot
## LR(1) items:
pattern -> agent COMMA annot . pattern [ TRUE TOKEN SIGNATURE SEMICOLON RAR PLOT PIPE PERT OBS LRAR LET LABEL INIT ID FALSE EOF DOT CONFIG CL_PAR ]
## Transitions:
-- On ID shift to state 18
-- On DOT shift to state 150
-- On pattern shift to state 158
-- On agent shift to state 155
## Reductions:

State 158:
## Known stack suffix:
## agent COMMA annot pattern
## LR(1) items:
pattern -> agent COMMA annot pattern . [ TRUE TOKEN SIGNATURE SEMICOLON RAR PLOT PIPE PERT OBS LRAR LET LABEL INIT ID FALSE EOF DOT CONFIG CL_PAR ]
## Transitions:
## Reductions:
-- On TRUE reduce production pattern -> agent COMMA annot pattern
-- On TOKEN reduce production pattern -> agent COMMA annot pattern
-- On SIGNATURE reduce production pattern -> agent COMMA annot pattern
-- On SEMICOLON reduce production pattern -> agent COMMA annot pattern
-- On RAR reduce production pattern -> agent COMMA annot pattern
-- On PLOT reduce production pattern -> agent COMMA annot pattern
-- On PIPE reduce production pattern -> agent COMMA annot pattern
-- On PERT reduce production pattern -> agent COMMA annot pattern
-- On OBS reduce production pattern -> agent COMMA annot pattern
-- On LRAR reduce production pattern -> agent COMMA annot pattern
-- On LET reduce production pattern -> agent COMMA annot pattern
-- On LABEL reduce production pattern -> agent COMMA annot pattern
-- On INIT reduce production pattern -> agent COMMA annot pattern
-- On ID reduce production pattern -> agent COMMA annot pattern
-- On FALSE reduce production pattern -> agent COMMA annot pattern
-- On EOF reduce production pattern -> agent COMMA annot pattern
-- On DOT reduce production pattern -> agent COMMA annot pattern
-- On CONFIG reduce production pattern -> agent COMMA annot pattern
-- On CL_PAR reduce production pattern -> agent COMMA annot pattern

State 159:
## Known stack suffix:
## STOP
## LR(1) items:
effect -> STOP . print_expr [ SEMICOLON EOF CL_PAR ]
## Transitions:
-- On SPACE shift to state 2
-- On NEWLINE shift to state 3
-- On COMMENT shift to state 4
-- On print_expr shift to state 160
-- On annot shift to state 161
## Reductions:
-- On TMAX reduce production annot ->
-- On TIME reduce production annot ->
-- On TAN reduce production annot ->
-- On STRING reduce production annot ->
-- On SQRT reduce production annot ->
-- On SINUS reduce production annot ->
-- On SEMICOLON reduce production annot ->
-- On PIPE reduce production annot ->
-- On OP_PAR reduce production annot ->
-- On NULL_EVENT reduce production annot ->
-- On MINUS reduce production annot ->
-- On MIN reduce production annot ->
-- On MAX reduce production annot ->
-- On LOG reduce production annot ->
-- On LABEL reduce production annot ->
-- On INT reduce production annot ->
-- On INFINITY reduce production annot ->
-- On ID reduce production annot ->
-- On FLOAT reduce production annot ->
-- On EXPONENT reduce production annot ->
-- On EVENT reduce production annot ->
-- On EOF reduce production annot ->
-- On EMAX reduce production annot ->
-- On CPUTIME reduce production annot ->
-- On COSINUS reduce production annot ->
-- On CL_PAR reduce production annot ->
-- On ABS reduce production annot ->

State 160:
## Known stack suffix:
## STOP print_expr
## LR(1) items:
effect -> STOP print_expr . [ SEMICOLON EOF CL_PAR ]
## Transitions:
## Reductions:
-- On SEMICOLON reduce production effect -> STOP print_expr
-- On EOF reduce production effect -> STOP print_expr
-- On CL_PAR reduce production effect -> STOP print_expr

State 161:
## Known stack suffix:
## annot
## LR(1) items:
print_expr -> annot . [ SEMICOLON GREATER EOF CL_PAR ]
print_expr -> annot . nonempty_print_expr [ SEMICOLON GREATER EOF CL_PAR ]
## Transitions:
-- On TMAX shift to state 162
-- On TIME shift to state 163
-- On TAN shift to state 164
-- On STRING shift to state 290
-- On SQRT shift to state 166
-- On SINUS shift to state 168
-- On PIPE shift to state 170
-- On OP_PAR shift to state 294
-- On NULL_EVENT shift to state 182
-- On MINUS shift to state 189
-- On MIN shift to state 191
-- On MAX shift to state 193
-- On LOG shift to state 195
-- On LABEL shift to state 197
-- On INT shift to state 198
-- On INFINITY shift to state 199
-- On ID shift to state 200
-- On FLOAT shift to state 201
-- On EXPONENT shift to state 202
-- On EVENT shift to state 204
-- On EMAX shift to state 205
-- On CPUTIME shift to state 206
-- On COSINUS shift to state 207
-- On ABS shift to state 209
-- On variable shift to state 211
-- On small_alg_expr shift to state 228
-- On print_expr_list shift to state 304
-- On nonempty_print_expr shift to state 308
-- On nbr shift to state 213
-- On constant shift to state 214
-- On alg_expr_up_to_sum shift to state 240
-- On alg_expr_up_to_prod shift to state 251
-- On alg_expr_up_to_mod shift to state 247
-- On alg_expr_up_to_if shift to state 306
## Reductions:
-- On SEMICOLON reduce production print_expr -> annot
-- On GREATER reduce production print_expr -> annot
-- On EOF reduce production print_expr -> annot
-- On CL_PAR reduce production print_expr -> annot

State 162:
## Known stack suffix:
## TMAX
## LR(1) items:
constant -> TMAX . [ TRUE TOKEN TMAX TIME THEN TAN STRING SQRT SPACE SMALLER SINUS SIGNATURE SEMICOLON RAR POW PLUS PLOT PIPE PERT OR OP_PAR OP_CUR OBS NULL_EVENT NEWLINE MULT MOD MINUS MIN MAX LRAR LOG LET LABEL INT INIT INFINITY ID GREATER FLOAT FALSE EXPONENT EVENT EQUAL EOF EMAX ELSE DOT DO DIV DIFF CPUTIME COSINUS CONFIG COMMENT COMMA COLON CL_PAR CL_CUR AND ABS ]
## Transitions:
## Reductions:
-- On TRUE reduce production constant -> TMAX
-- On TOKEN reduce production constant -> TMAX
-- On TMAX reduce production constant -> TMAX
-- On TIME reduce production constant -> TMAX
-- On THEN reduce production constant -> TMAX
-- On TAN reduce production constant -> TMAX
-- On STRING reduce production constant -> TMAX
-- On SQRT reduce production constant -> TMAX
-- On SPACE reduce production constant -> TMAX
-- On SMALLER reduce production constant -> TMAX
-- On SINUS reduce production constant -> TMAX
-- On SIGNATURE reduce production constant -> TMAX
-- On SEMICOLON reduce production constant -> TMAX
-- On RAR reduce production constant -> TMAX
-- On POW reduce production constant -> TMAX
-- On PLUS reduce production constant -> TMAX
-- On PLOT reduce production constant -> TMAX
-- On PIPE reduce production constant -> TMAX
-- On PERT reduce production constant -> TMAX
-- On OR reduce production constant -> TMAX
-- On OP_PAR reduce production constant -> TMAX
-- On OP_CUR reduce production constant -> TMAX
-- On OBS reduce production constant -> TMAX
-- On NULL_EVENT reduce production constant -> TMAX
-- On NEWLINE reduce production constant -> TMAX
-- On MULT reduce production constant -> TMAX
-- On MOD reduce production constant -> TMAX
-- On MINUS reduce production constant -> TMAX
-- On MIN reduce production constant -> TMAX
-- On MAX reduce production constant -> TMAX
-- On LRAR reduce production constant -> TMAX
-- On LOG reduce production constant -> TMAX
-- On LET reduce production constant -> TMAX
-- On LABEL reduce production constant -> TMAX
-- On INT reduce production constant -> TMAX
-- On INIT reduce production constant -> TMAX
-- On INFINITY reduce production constant -> TMAX
-- On ID reduce production constant -> TMAX
-- On GREATER reduce production constant -> TMAX
-- On FLOAT reduce production constant -> TMAX
-- On FALSE reduce production constant -> TMAX
-- On EXPONENT reduce production constant -> TMAX
-- On EVENT reduce production constant -> TMAX
-- On EQUAL reduce production constant -> TMAX
-- On EOF reduce production constant -> TMAX
-- On EMAX reduce production constant -> TMAX
-- On ELSE reduce production constant -> TMAX
-- On DOT reduce production constant -> TMAX
-- On DO reduce production constant -> TMAX
-- On DIV reduce production constant -> TMAX
-- On DIFF reduce production constant -> TMAX
-- On CPUTIME reduce production constant -> TMAX
-- On COSINUS reduce production constant -> TMAX
-- On CONFIG reduce production constant -> TMAX
-- On COMMENT reduce production constant -> TMAX
-- On COMMA reduce production constant -> TMAX
-- On COLON reduce production constant -> TMAX
-- On CL_PAR reduce production constant -> TMAX
-- On CL_CUR reduce production constant -> TMAX
-- On AND reduce production constant -> TMAX
-- On ABS reduce production constant -> TMAX

State 163:
## Known stack suffix:
## TIME
## LR(1) items:
variable -> TIME . [ TRUE TOKEN TMAX TIME THEN TAN STRING SQRT SPACE SMALLER SINUS SIGNATURE SEMICOLON RAR POW PLUS PLOT PIPE PERT OR OP_PAR OP_CUR OBS NULL_EVENT NEWLINE MULT MOD MINUS MIN MAX LRAR LOG LET LABEL INT INIT INFINITY ID GREATER FLOAT FALSE EXPONENT EVENT EQUAL EOF EMAX ELSE DOT DO DIV DIFF CPUTIME COSINUS CONFIG COMMENT COMMA COLON CL_PAR CL_CUR AND ABS ]
## Transitions:
## Reductions:
-- On TRUE reduce production variable -> TIME
-- On TOKEN reduce production variable -> TIME
-- On TMAX reduce production variable -> TIME
-- On TIME reduce production variable -> TIME
-- On THEN reduce production variable -> TIME
-- On TAN reduce production variable -> TIME
-- On STRING reduce production variable -> TIME
-- On SQRT reduce production variable -> TIME
-- On SPACE reduce production variable -> TIME
-- On SMALLER reduce production variable -> TIME
-- On SINUS reduce production variable -> TIME
-- On SIGNATURE reduce production variable -> TIME
-- On SEMICOLON reduce production variable -> TIME
-- On RAR reduce production variable -> TIME
-- On POW reduce production variable -> TIME
-- On PLUS reduce production variable -> TIME
-- On PLOT reduce production variable -> TIME
-- On PIPE reduce production variable -> TIME
-- On PERT reduce production variable -> TIME
-- On OR reduce production variable -> TIME
-- On OP_PAR reduce production variable -> TIME
-- On OP_CUR reduce production variable -> TIME
-- On OBS reduce production variable -> TIME
-- On NULL_EVENT reduce production variable -> TIME
-- On NEWLINE reduce production variable -> TIME
-- On MULT reduce production variable -> TIME
-- On MOD reduce production variable -> TIME
-- On MINUS reduce production variable -> TIME
-- On MIN reduce production variable -> TIME
-- On MAX reduce production variable -> TIME
-- On LRAR reduce production variable -> TIME
-- On LOG reduce production variable -> TIME
-- On LET reduce production variable -> TIME
-- On LABEL reduce production variable -> TIME
-- On INT reduce production variable -> TIME
-- On INIT reduce production variable -> TIME
-- On INFINITY reduce production variable -> TIME
-- On ID reduce production variable -> TIME
-- On GREATER reduce production variable -> TIME
-- On FLOAT reduce production variable -> TIME
-- On FALSE reduce production variable -> TIME
-- On EXPONENT reduce production variable -> TIME
-- On EVENT reduce production variable -> TIME
-- On EQUAL reduce production variable -> TIME
-- On EOF reduce production variable -> TIME
-- On EMAX reduce production variable -> TIME
-- On ELSE reduce production variable -> TIME
-- On DOT reduce production variable -> TIME
-- On DO reduce production variable -> TIME
-- On DIV reduce production variable -> TIME
-- On DIFF reduce production variable -> TIME
-- On CPUTIME reduce production variable -> TIME
-- On COSINUS reduce production variable -> TIME
-- On CONFIG reduce production variable -> TIME
-- On COMMENT reduce production variable -> TIME
-- On COMMA reduce production variable -> TIME
-- On COLON reduce production variable -> TIME
-- On CL_PAR reduce production variable -> TIME
-- On CL_CUR reduce production variable -> TIME
-- On AND reduce production variable -> TIME
-- On ABS reduce production variable -> TIME

State 164:
## Known stack suffix:
## TAN
## LR(1) items:
small_alg_expr -> TAN . annot small_alg_expr [ TRUE TOKEN TMAX TIME THEN TAN STRING SQRT SPACE SMALLER SINUS SIGNATURE SEMICOLON RAR POW PLUS PLOT PIPE PERT OR OP_PAR OP_CUR OBS NULL_EVENT NEWLINE MULT MOD MINUS MIN MAX LRAR LOG LET LABEL INT INIT INFINITY ID GREATER FLOAT FALSE EXPONENT EVENT EQUAL EOF EMAX ELSE DOT DO DIV DIFF CPUTIME COSINUS CONFIG COMMENT COMMA COLON CL_PAR CL_CUR AND ABS ]
## Transitions:
-- On SPACE shift to state 2
-- On NEWLINE shift to state 3
-- On COMMENT shift to state 4
-- On annot shift to state 165
## Reductions:
-- On TMAX reduce production annot ->
-- On TIME reduce production annot ->
-- On TAN reduce production annot ->
-- On SQRT reduce production annot ->
-- On SINUS reduce production annot ->
-- On PIPE reduce production annot ->
-- On OP_PAR reduce production annot ->
-- On NULL_EVENT reduce production annot ->
-- On MINUS reduce production annot ->
-- On MIN reduce production annot ->
-- On MAX reduce production annot ->
-- On LOG reduce production annot ->
-- On LABEL reduce production annot ->
-- On INT reduce production annot ->
-- On INFINITY reduce production annot ->
-- On ID reduce production annot ->
-- On FLOAT reduce production annot ->
-- On EXPONENT reduce production annot ->
-- On EVENT reduce production annot ->
-- On EMAX reduce production annot ->
-- On CPUTIME reduce production annot ->
-- On COSINUS reduce production annot ->
-- On ABS reduce production annot ->

State 165:
## Known stack suffix:
## TAN annot
## LR(1) items:
small_alg_expr -> TAN annot . small_alg_expr [ TRUE TOKEN TMAX TIME THEN TAN STRING SQRT SPACE SMALLER SINUS SIGNATURE SEMICOLON RAR POW PLUS PLOT PIPE PERT OR OP_PAR OP_CUR OBS NULL_EVENT NEWLINE MULT MOD MINUS MIN MAX LRAR LOG LET LABEL INT INIT INFINITY ID GREATER FLOAT FALSE EXPONENT EVENT EQUAL EOF EMAX ELSE DOT DO DIV DIFF CPUTIME COSINUS CONFIG COMMENT COMMA COLON CL_PAR CL_CUR AND ABS ]
## Transitions:
-- On TMAX shift to state 162
-- On TIME shift to state 163
-- On TAN shift to state 164
-- On SQRT shift to state 166
-- On SINUS shift to state 168
-- On PIPE shift to state 170
-- On OP_PAR shift to state 177
-- On NULL_EVENT shift to state 182
-- On MINUS shift to state 189
-- On MIN shift to state 191
-- On MAX shift to state 193
-- On LOG shift to state 195
-- On LABEL shift to state 197
-- On INT shift to state 198
-- On INFINITY shift to state 199
-- On ID shift to state 200
-- On FLOAT shift to state 201
-- On EXPONENT shift to state 202
-- On EVENT shift to state 204
-- On EMAX shift to state 205
-- On CPUTIME shift to state 206
-- On COSINUS shift to state 207
-- On ABS shift to state 209
-- On variable shift to state 211
-- On small_alg_expr shift to state 289
-- On nbr shift to state 213
-- On constant shift to state 214
## Reductions:

State 166:
## Known stack suffix:
## SQRT
## LR(1) items:
small_alg_expr -> SQRT . annot small_alg_expr [ TRUE TOKEN TMAX TIME THEN TAN STRING SQRT SPACE SMALLER SINUS SIGNATURE SEMICOLON RAR POW PLUS PLOT PIPE PERT OR OP_PAR OP_CUR OBS NULL_EVENT NEWLINE MULT MOD MINUS MIN MAX LRAR LOG LET LABEL INT INIT INFINITY ID GREATER FLOAT FALSE EXPONENT EVENT EQUAL EOF EMAX ELSE DOT DO DIV DIFF CPUTIME COSINUS CONFIG COMMENT COMMA COLON CL_PAR CL_CUR AND ABS ]
## Transitions:
-- On SPACE shift to state 2
-- On NEWLINE shift to state 3
-- On COMMENT shift to state 4
-- On annot shift to state 167
## Reductions:
-- On TMAX reduce production annot ->
-- On TIME reduce production annot ->
-- On TAN reduce production annot ->
-- On SQRT reduce production annot ->
-- On SINUS reduce production annot ->
-- On PIPE reduce production annot ->
-- On OP_PAR reduce production annot ->
-- On NULL_EVENT reduce production annot ->
-- On MINUS reduce production annot ->
-- On MIN reduce production annot ->
-- On MAX reduce production annot ->
-- On LOG reduce production annot ->
-- On LABEL reduce production annot ->
-- On INT reduce production annot ->
-- On INFINITY reduce production annot ->
-- On ID reduce production annot ->
-- On FLOAT reduce production annot ->
-- On EXPONENT reduce production annot ->
-- On EVENT reduce production annot ->
-- On EMAX reduce production annot ->
-- On CPUTIME reduce production annot ->
-- On COSINUS reduce production annot ->
-- On ABS reduce production annot ->

State 167:
## Known stack suffix:
## SQRT annot
## LR(1) items:
small_alg_expr -> SQRT annot . small_alg_expr [ TRUE TOKEN TMAX TIME THEN TAN STRING SQRT SPACE SMALLER SINUS SIGNATURE SEMICOLON RAR POW PLUS PLOT PIPE PERT OR OP_PAR OP_CUR OBS NULL_EVENT NEWLINE MULT MOD MINUS MIN MAX LRAR LOG LET LABEL INT INIT INFINITY ID GREATER FLOAT FALSE EXPONENT EVENT EQUAL EOF EMAX ELSE DOT DO DIV DIFF CPUTIME COSINUS CONFIG COMMENT COMMA COLON CL_PAR CL_CUR AND ABS ]
## Transitions:
-- On TMAX shift to state 162
-- On TIME shift to state 163
-- On TAN shift to state 164
-- On SQRT shift to state 166
-- On SINUS shift to state 168
-- On PIPE shift to state 170
-- On OP_PAR shift to state 177
-- On NULL_EVENT shift to state 182
-- On MINUS shift to state 189
-- On MIN shift to state 191
-- On MAX shift to state 193
-- On LOG shift to state 195
-- On LABEL shift to state 197
-- On INT shift to state 198
-- On INFINITY shift to state 199
-- On ID shift to state 200
-- On FLOAT shift to state 201
-- On EXPONENT shift to state 202
-- On EVENT shift to state 204
-- On EMAX shift to state 205
-- On CPUTIME shift to state 206
-- On COSINUS shift to state 207
-- On ABS shift to state 209
-- On variable shift to state 211
-- On small_alg_expr shift to state 288
-- On nbr shift to state 213
-- On constant shift to state 214
## Reductions:

State 168:
## Known stack suffix:
## SINUS
## LR(1) items:
small_alg_expr -> SINUS . annot small_alg_expr [ TRUE TOKEN TMAX TIME THEN TAN STRING SQRT SPACE SMALLER SINUS SIGNATURE SEMICOLON RAR POW PLUS PLOT PIPE PERT OR OP_PAR OP_CUR OBS NULL_EVENT NEWLINE MULT MOD MINUS MIN MAX LRAR LOG LET LABEL INT INIT INFINITY ID GREATER FLOAT FALSE EXPONENT EVENT EQUAL EOF EMAX ELSE DOT DO DIV DIFF CPUTIME COSINUS CONFIG COMMENT COMMA COLON CL_PAR CL_CUR AND ABS ]
## Transitions:
-- On SPACE shift to state 2
-- On NEWLINE shift to state 3
-- On COMMENT shift to state 4
-- On annot shift to state 169
## Reductions:
-- On TMAX reduce production annot ->
-- On TIME reduce production annot ->
-- On TAN reduce production annot ->
-- On SQRT reduce production annot ->
-- On SINUS reduce production annot ->
-- On PIPE reduce production annot ->
-- On OP_PAR reduce production annot ->
-- On NULL_EVENT reduce production annot ->
-- On MINUS reduce production annot ->
-- On MIN reduce production annot ->
-- On MAX reduce production annot ->
-- On LOG reduce production annot ->
-- On LABEL reduce production annot ->
-- On INT reduce production annot ->
-- On INFINITY reduce production annot ->
-- On ID reduce production annot ->
-- On FLOAT reduce production annot ->
-- On EXPONENT reduce production annot ->
-- On EVENT reduce production annot ->
-- On EMAX reduce production annot ->
-- On CPUTIME reduce production annot ->
-- On COSINUS reduce production annot ->
-- On ABS reduce production annot ->

State 169:
## Known stack suffix:
## SINUS annot
## LR(1) items:
small_alg_expr -> SINUS annot . small_alg_expr [ TRUE TOKEN TMAX TIME THEN TAN STRING SQRT SPACE SMALLER SINUS SIGNATURE SEMICOLON RAR POW PLUS PLOT PIPE PERT OR OP_PAR OP_CUR OBS NULL_EVENT NEWLINE MULT MOD MINUS MIN MAX LRAR LOG LET LABEL INT INIT INFINITY ID GREATER FLOAT FALSE EXPONENT EVENT EQUAL EOF EMAX ELSE DOT DO DIV DIFF CPUTIME COSINUS CONFIG COMMENT COMMA COLON CL_PAR CL_CUR AND ABS ]
## Transitions:
-- On TMAX shift to state 162
-- On TIME shift to state 163
-- On TAN shift to state 164
-- On SQRT shift to state 166
-- On SINUS shift to state 168
-- On PIPE shift to state 170
-- On OP_PAR shift to state 177
-- On NULL_EVENT shift to state 182
-- On MINUS shift to state 189
-- On MIN shift to state 191
-- On MAX shift to state 193
-- On LOG shift to state 195
-- On LABEL shift to state 197
-- On INT shift to state 198
-- On INFINITY shift to state 199
-- On ID shift to state 200
-- On FLOAT shift to state 201
-- On EXPONENT shift to state 202
-- On EVENT shift to state 204
-- On EMAX shift to state 205
-- On CPUTIME shift to state 206
-- On COSINUS shift to state 207
-- On ABS shift to state 209
-- On variable shift to state 211
-- On small_alg_expr shift to state 287
-- On nbr shift to state 213
-- On constant shift to state 214
## Reductions:

State 170:
## Known stack suffix:
## PIPE
## LR(1) items:
variable -> PIPE . annot ID annot PIPE [ TRUE TOKEN TMAX TIME THEN TAN STRING SQRT SPACE SMALLER SINUS SIGNATURE SEMICOLON RAR POW PLUS PLOT PIPE PERT OR OP_PAR OP_CUR OBS NULL_EVENT NEWLINE MULT MOD MINUS MIN MAX LRAR LOG LET LABEL INT INIT INFINITY ID GREATER FLOAT FALSE EXPONENT EVENT EQUAL EOF EMAX ELSE DOT DO DIV DIFF CPUTIME COSINUS CONFIG COMMENT COMMA COLON CL_PAR CL_CUR AND ABS ]
variable -> PIPE . annot pattern PIPE [ TRUE TOKEN TMAX TIME THEN TAN STRING SQRT SPACE SMALLER SINUS SIGNATURE SEMICOLON RAR POW PLUS PLOT PIPE PERT OR OP_PAR OP_CUR OBS NULL_EVENT NEWLINE MULT MOD MINUS MIN MAX LRAR LOG LET LABEL INT INIT INFINITY ID GREATER FLOAT FALSE EXPONENT EVENT EQUAL EOF EMAX ELSE DOT DO DIV DIFF CPUTIME COSINUS CONFIG COMMENT COMMA COLON CL_PAR CL_CUR AND ABS ]
## Transitions:
-- On SPACE shift to state 2
-- On NEWLINE shift to state 3
-- On COMMENT shift to state 4
-- On annot shift to state 171
## Reductions:
-- On ID reduce production annot ->
-- On DOT reduce production annot ->

State 171:
## Known stack suffix:
## PIPE annot
## LR(1) items:
variable -> PIPE annot . ID annot PIPE [ TRUE TOKEN TMAX TIME THEN TAN STRING SQRT SPACE SMALLER SINUS SIGNATURE SEMICOLON RAR POW PLUS PLOT PIPE PERT OR OP_PAR OP_CUR OBS NULL_EVENT NEWLINE MULT MOD MINUS MIN MAX LRAR LOG LET LABEL INT INIT INFINITY ID GREATER FLOAT FALSE EXPONENT EVENT EQUAL EOF EMAX ELSE DOT DO DIV DIFF CPUTIME COSINUS CONFIG COMMENT COMMA COLON CL_PAR CL_CUR AND ABS ]
variable -> PIPE annot . pattern PIPE [ TRUE TOKEN TMAX TIME THEN TAN STRING SQRT SPACE SMALLER SINUS SIGNATURE SEMICOLON RAR POW PLUS PLOT PIPE PERT OR OP_PAR OP_CUR OBS NULL_EVENT NEWLINE MULT MOD MINUS MIN MAX LRAR LOG LET LABEL INT INIT INFINITY ID GREATER FLOAT FALSE EXPONENT EVENT EQUAL EOF EMAX ELSE DOT DO DIV DIFF CPUTIME COSINUS CONFIG COMMENT COMMA COLON CL_PAR CL_CUR AND ABS ]
## Transitions:
-- On ID shift to state 172
-- On DOT shift to state 150
-- On pattern shift to state 175
-- On agent shift to state 155
## Reductions:

State 172:
## Known stack suffix:
## PIPE annot ID
## LR(1) items:
agent -> ID . annot OP_PAR annot interface CL_PAR agent_modif [ PIPE COMMA ]
agent -> ID . annot COLON annot ID annot OP_PAR annot interface CL_PAR agent_modif [ PIPE COMMA ]
agent -> ID . annot error [ PIPE COMMA ]
variable -> PIPE annot ID . annot PIPE [ TRUE TOKEN TMAX TIME THEN TAN STRING SQRT SPACE SMALLER SINUS SIGNATURE SEMICOLON RAR POW PLUS PLOT PIPE PERT OR OP_PAR OP_CUR OBS NULL_EVENT NEWLINE MULT MOD MINUS MIN MAX LRAR LOG LET LABEL INT INIT INFINITY ID GREATER FLOAT FALSE EXPONENT EVENT EQUAL EOF EMAX ELSE DOT DO DIV DIFF CPUTIME COSINUS CONFIG COMMENT COMMA COLON CL_PAR CL_CUR AND ABS ]
## Transitions:
-- On SPACE shift to state 19
-- On NEWLINE shift to state 20
-- On COMMENT shift to state 21
-- On annot shift to state 173
## Reductions:
-- On error reduce production annot ->
-- On PIPE reduce production annot ->
-- On OP_PAR reduce production annot ->
-- On COLON reduce production annot ->

State 173:
## Known stack suffix:
## PIPE annot ID annot
## LR(1) items:
agent -> ID annot . OP_PAR annot interface CL_PAR agent_modif [ PIPE COMMA ]
agent -> ID annot . COLON annot ID annot OP_PAR annot interface CL_PAR agent_modif [ PIPE COMMA ]
agent -> ID annot . error [ PIPE COMMA ]
variable -> PIPE annot ID annot . PIPE [ TRUE TOKEN TMAX TIME THEN TAN STRING SQRT SPACE SMALLER SINUS SIGNATURE SEMICOLON RAR POW PLUS PLOT PIPE PERT OR OP_PAR OP_CUR OBS NULL_EVENT NEWLINE MULT MOD MINUS MIN MAX LRAR LOG LET LABEL INT INIT INFINITY ID GREATER FLOAT FALSE EXPONENT EVENT EQUAL EOF EMAX ELSE DOT DO DIV DIFF CPUTIME COSINUS CONFIG COMMENT COMMA COLON CL_PAR CL_CUR AND ABS ]
## Transitions:
-- On error shift to state 26
-- On PIPE shift to state 174
-- On OP_PAR shift to state 27
-- On COLON shift to state 141
## Reductions:

State 174:
## Known stack suffix:
## PIPE annot ID annot PIPE
## LR(1) items:
variable -> PIPE annot ID annot PIPE . [ TRUE TOKEN TMAX TIME THEN TAN STRING SQRT SPACE SMALLER SINUS SIGNATURE SEMICOLON RAR POW PLUS PLOT PIPE PERT OR OP_PAR OP_CUR OBS NULL_EVENT NEWLINE MULT MOD MINUS MIN MAX LRAR LOG LET LABEL INT INIT INFINITY ID GREATER FLOAT FALSE EXPONENT EVENT EQUAL EOF EMAX ELSE DOT DO DIV DIFF CPUTIME COSINUS CONFIG COMMENT COMMA COLON CL_PAR CL_CUR AND ABS ]
## Transitions:
## Reductions:
-- On TRUE reduce production variable -> PIPE annot ID annot PIPE
-- On TOKEN reduce production variable -> PIPE annot ID annot PIPE
-- On TMAX reduce production variable -> PIPE annot ID annot PIPE
-- On TIME reduce production variable -> PIPE annot ID annot PIPE
-- On THEN reduce production variable -> PIPE annot ID annot PIPE
-- On TAN reduce production variable -> PIPE annot ID annot PIPE
-- On STRING reduce production variable -> PIPE annot ID annot PIPE
-- On SQRT reduce production variable -> PIPE annot ID annot PIPE
-- On SPACE reduce production variable -> PIPE annot ID annot PIPE
-- On SMALLER reduce production variable -> PIPE annot ID annot PIPE
-- On SINUS reduce production variable -> PIPE annot ID annot PIPE
-- On SIGNATURE reduce production variable -> PIPE annot ID annot PIPE
-- On SEMICOLON reduce production variable -> PIPE annot ID annot PIPE
-- On RAR reduce production variable -> PIPE annot ID annot PIPE
-- On POW reduce production variable -> PIPE annot ID annot PIPE
-- On PLUS reduce production variable -> PIPE annot ID annot PIPE
-- On PLOT reduce production variable -> PIPE annot ID annot PIPE
-- On PIPE reduce production variable -> PIPE annot ID annot PIPE
-- On PERT reduce production variable -> PIPE annot ID annot PIPE
-- On OR reduce production variable -> PIPE annot ID annot PIPE
-- On OP_PAR reduce production variable -> PIPE annot ID annot PIPE
-- On OP_CUR reduce production variable -> PIPE annot ID annot PIPE
-- On OBS reduce production variable -> PIPE annot ID annot PIPE
-- On NULL_EVENT reduce production variable -> PIPE annot ID annot PIPE
-- On NEWLINE reduce production variable -> PIPE annot ID annot PIPE
-- On MULT reduce production variable -> PIPE annot ID annot PIPE
-- On MOD reduce production variable -> PIPE annot ID annot PIPE
-- On MINUS reduce production variable -> PIPE annot ID annot PIPE
-- On MIN reduce production variable -> PIPE annot ID annot PIPE
-- On MAX reduce production variable -> PIPE annot ID annot PIPE
-- On LRAR reduce production variable -> PIPE annot ID annot PIPE
-- On LOG reduce production variable -> PIPE annot ID annot PIPE
-- On LET reduce production variable -> PIPE annot ID annot PIPE
-- On LABEL reduce production variable -> PIPE annot ID annot PIPE
-- On INT reduce production variable -> PIPE annot ID annot PIPE
-- On INIT reduce production variable -> PIPE annot ID annot PIPE
-- On INFINITY reduce production variable -> PIPE annot ID annot PIPE
-- On ID reduce production variable -> PIPE annot ID annot PIPE
-- On GREATER reduce production variable -> PIPE annot ID annot PIPE
-- On FLOAT reduce production variable -> PIPE annot ID annot PIPE
-- On FALSE reduce production variable -> PIPE annot ID annot PIPE
-- On EXPONENT reduce production variable -> PIPE annot ID annot PIPE
-- On EVENT reduce production variable -> PIPE annot ID annot PIPE
-- On EQUAL reduce production variable -> PIPE annot ID annot PIPE
-- On EOF reduce production variable -> PIPE annot ID annot PIPE
-- On EMAX reduce production variable -> PIPE annot ID annot PIPE
-- On ELSE reduce production variable -> PIPE annot ID annot PIPE
-- On DOT reduce production variable -> PIPE annot ID annot PIPE
-- On DO reduce production variable -> PIPE annot ID annot PIPE
-- On DIV reduce production variable -> PIPE annot ID annot PIPE
-- On DIFF reduce production variable -> PIPE annot ID annot PIPE
-- On CPUTIME reduce production variable -> PIPE annot ID annot PIPE
-- On COSINUS reduce production variable -> PIPE annot ID annot PIPE
-- On CONFIG reduce production variable -> PIPE annot ID annot PIPE
-- On COMMENT reduce production variable -> PIPE annot ID annot PIPE
-- On COMMA reduce production variable -> PIPE annot ID annot PIPE
-- On COLON reduce production variable -> PIPE annot ID annot PIPE
-- On CL_PAR reduce production variable -> PIPE annot ID annot PIPE
-- On CL_CUR reduce production variable -> PIPE annot ID annot PIPE
-- On AND reduce production variable -> PIPE annot ID annot PIPE
-- On ABS reduce production variable -> PIPE annot ID annot PIPE

State 175:
## Known stack suffix:
## PIPE annot pattern
## LR(1) items:
variable -> PIPE annot pattern . PIPE [ TRUE TOKEN TMAX TIME THEN TAN STRING SQRT SPACE SMALLER SINUS SIGNATURE SEMICOLON RAR POW PLUS PLOT PIPE PERT OR OP_PAR OP_CUR OBS NULL_EVENT NEWLINE MULT MOD MINUS MIN MAX LRAR LOG LET LABEL INT INIT INFINITY ID GREATER FLOAT FALSE EXPONENT EVENT EQUAL EOF EMAX ELSE DOT DO DIV DIFF CPUTIME COSINUS CONFIG COMMENT COMMA COLON CL_PAR CL_CUR AND ABS ]
## Transitions:
-- On PIPE shift to state 176
## Reductions:

State 176:
## Known stack suffix:
## PIPE annot pattern PIPE
## LR(1) items:
variable -> PIPE annot pattern PIPE . [ TRUE TOKEN TMAX TIME THEN TAN STRING SQRT SPACE SMALLER SINUS SIGNATURE SEMICOLON RAR POW PLUS PLOT PIPE PERT OR OP_PAR OP_CUR OBS NULL_EVENT NEWLINE MULT MOD MINUS MIN MAX LRAR LOG LET LABEL INT INIT INFINITY ID GREATER FLOAT FALSE EXPONENT EVENT EQUAL EOF EMAX ELSE DOT DO DIV DIFF CPUTIME COSINUS CONFIG COMMENT COMMA COLON CL_PAR CL_CUR AND ABS ]
## Transitions:
## Reductions:
-- On TRUE reduce production variable -> PIPE annot pattern PIPE
-- On TOKEN reduce production variable -> PIPE annot pattern PIPE
-- On TMAX reduce production variable -> PIPE annot pattern PIPE
-- On TIME reduce production variable -> PIPE annot pattern PIPE
-- On THEN reduce production variable -> PIPE annot pattern PIPE
-- On TAN reduce production variable -> PIPE annot pattern PIPE
-- On STRING reduce production variable -> PIPE annot pattern PIPE
-- On SQRT reduce production variable -> PIPE annot pattern PIPE
-- On SPACE reduce production variable -> PIPE annot pattern PIPE
-- On SMALLER reduce production variable -> PIPE annot pattern PIPE
-- On SINUS reduce production variable -> PIPE annot pattern PIPE
-- On SIGNATURE reduce production variable -> PIPE annot pattern PIPE
-- On SEMICOLON reduce production variable -> PIPE annot pattern PIPE
-- On RAR reduce production variable -> PIPE annot pattern PIPE
-- On POW reduce production variable -> PIPE annot pattern PIPE
-- On PLUS reduce production variable -> PIPE annot pattern PIPE
-- On PLOT reduce production variable -> PIPE annot pattern PIPE
-- On PIPE reduce production variable -> PIPE annot pattern PIPE
-- On PERT reduce production variable -> PIPE annot pattern PIPE
-- On OR reduce production variable -> PIPE annot pattern PIPE
-- On OP_PAR reduce production variable -> PIPE annot pattern PIPE
-- On OP_CUR reduce production variable -> PIPE annot pattern PIPE
-- On OBS reduce production variable -> PIPE annot pattern PIPE
-- On NULL_EVENT reduce production variable -> PIPE annot pattern PIPE
-- On NEWLINE reduce production variable -> PIPE annot pattern PIPE
-- On MULT reduce production variable -> PIPE annot pattern PIPE
-- On MOD reduce production variable -> PIPE annot pattern PIPE
-- On MINUS reduce production variable -> PIPE annot pattern PIPE
-- On MIN reduce production variable -> PIPE annot pattern PIPE
-- On MAX reduce production variable -> PIPE annot pattern PIPE
-- On LRAR reduce production variable -> PIPE annot pattern PIPE
-- On LOG reduce production variable -> PIPE annot pattern PIPE
-- On LET reduce production variable -> PIPE annot pattern PIPE
-- On LABEL reduce production variable -> PIPE annot pattern PIPE
-- On INT reduce production variable -> PIPE annot pattern PIPE
-- On INIT reduce production variable -> PIPE annot pattern PIPE
-- On INFINITY reduce production variable -> PIPE annot pattern PIPE
-- On ID reduce production variable -> PIPE annot pattern PIPE
-- On GREATER reduce production variable -> PIPE annot pattern PIPE
-- On FLOAT reduce production variable -> PIPE annot pattern PIPE
-- On FALSE reduce production variable -> PIPE annot pattern PIPE
-- On EXPONENT reduce production variable -> PIPE annot pattern PIPE
-- On EVENT reduce production variable -> PIPE annot pattern PIPE
-- On EQUAL reduce production variable -> PIPE annot pattern PIPE
-- On EOF reduce production variable -> PIPE annot pattern PIPE
-- On EMAX reduce production variable -> PIPE annot pattern PIPE
-- On ELSE reduce production variable -> PIPE annot pattern PIPE
-- On DOT reduce production variable -> PIPE annot pattern PIPE
-- On DO reduce production variable -> PIPE annot pattern PIPE
-- On DIV reduce production variable -> PIPE annot pattern PIPE
-- On DIFF reduce production variable -> PIPE annot pattern PIPE
-- On CPUTIME reduce production variable -> PIPE annot pattern PIPE
-- On COSINUS reduce production variable -> PIPE annot pattern PIPE
-- On CONFIG reduce production variable -> PIPE annot pattern PIPE
-- On COMMENT reduce production variable -> PIPE annot pattern PIPE
-- On COMMA reduce production variable -> PIPE annot pattern PIPE
-- On COLON reduce production variable -> PIPE annot pattern PIPE
-- On CL_PAR reduce production variable -> PIPE annot pattern PIPE
-- On CL_CUR reduce production variable -> PIPE annot pattern PIPE
-- On AND reduce production variable -> PIPE annot pattern PIPE
-- On ABS reduce production variable -> PIPE annot pattern PIPE

State 177:
## Known stack suffix:
## OP_PAR
## LR(1) items:
small_alg_expr -> OP_PAR . annot alg_expr CL_PAR [ TRUE TOKEN TMAX TIME THEN TAN STRING SQRT SPACE SMALLER SINUS SIGNATURE SEMICOLON RAR POW PLUS PLOT PIPE PERT OR OP_PAR OP_CUR OBS NULL_EVENT NEWLINE MULT MOD MINUS MIN MAX LRAR LOG LET LABEL INT INIT INFINITY ID GREATER FLOAT FALSE EXPONENT EVENT EQUAL EOF EMAX ELSE DOT DO DIV DIFF CPUTIME COSINUS CONFIG COMMENT COMMA COLON CL_PAR CL_CUR AND ABS ]
## Transitions:
-- On SPACE shift to state 2
-- On NEWLINE shift to state 3
-- On COMMENT shift to state 4
-- On annot shift to state 178
## Reductions:
-- On TRUE reduce production annot ->
-- On TMAX reduce production annot ->
-- On TIME reduce production annot ->
-- On TAN reduce production annot ->
-- On SQRT reduce production annot ->
-- On SINUS reduce production annot ->
-- On PIPE reduce production annot ->
-- On OP_PAR reduce production annot ->
-- On NULL_EVENT reduce production annot ->
-- On NOT reduce production annot ->
-- On MINUS reduce production annot ->
-- On MIN reduce production annot ->
-- On MAX reduce production annot ->
-- On LOG reduce production annot ->
-- On LABEL reduce production annot ->
-- On INT reduce production annot ->
-- On INFINITY reduce production annot ->
-- On ID reduce production annot ->
-- On FLOAT reduce production annot ->
-- On FALSE reduce production annot ->
-- On EXPONENT reduce production annot ->
-- On EVENT reduce production annot ->
-- On EMAX reduce production annot ->
-- On CPUTIME reduce production annot ->
-- On COSINUS reduce production annot ->
-- On ABS reduce production annot ->

State 178:
## Known stack suffix:
## OP_PAR annot
## LR(1) items:
small_alg_expr -> OP_PAR annot . alg_expr CL_PAR [ TRUE TOKEN TMAX TIME THEN TAN STRING SQRT SPACE SMALLER SINUS SIGNATURE SEMICOLON RAR POW PLUS PLOT PIPE PERT OR OP_PAR OP_CUR OBS NULL_EVENT NEWLINE MULT MOD MINUS MIN MAX LRAR LOG LET LABEL INT INIT INFINITY ID GREATER FLOAT FALSE EXPONENT EVENT EQUAL EOF EMAX ELSE DOT DO DIV DIFF CPUTIME COSINUS CONFIG COMMENT COMMA COLON CL_PAR CL_CUR AND ABS ]
## Transitions:
-- On TRUE shift to state 179
-- On TMAX shift to state 162
-- On TIME shift to state 163
-- On TAN shift to state 164
-- On SQRT shift to state 166
-- On SINUS shift to state 168
-- On PIPE shift to state 170
-- On OP_PAR shift to state 180
-- On NULL_EVENT shift to state 182
-- On NOT shift to state 183
-- On MINUS shift to state 189
-- On MIN shift to state 191
-- On MAX shift to state 193
-- On LOG shift to state 195
-- On LABEL shift to state 197
-- On INT shift to state 198
-- On INFINITY shift to state 199
-- On ID shift to state 200
-- On FLOAT shift to state 201
-- On FALSE shift to state 225
-- On EXPONENT shift to state 202
-- On EVENT shift to state 204
-- On EMAX shift to state 205
-- On CPUTIME shift to state 206
-- On COSINUS shift to state 207
-- On ABS shift to state 209
-- On variable shift to state 211
-- On small_bool_expr shift to state 226
-- On small_alg_expr shift to state 228
-- On nbr shift to state 213
-- On constant shift to state 214
-- On bool_expr_no_or shift to state 233
-- On bool_expr_comp shift to state 236
-- On bool_expr shift to state 255
-- On alg_expr_up_to_sum shift to state 240
-- On alg_expr_up_to_prod shift to state 251
-- On alg_expr_up_to_mod shift to state 247
-- On alg_expr_up_to_if shift to state 258
-- On alg_expr shift to state 283
## Reductions:

State 179:
## Known stack suffix:
## TRUE
## LR(1) items:
small_bool_expr -> TRUE . [ TOKEN THEN SPACE SIGNATURE SEMICOLON RAR PLOT PIPE PERT OR OBS NEWLINE LRAR LET LABEL INIT ID EOF DOT DO CONFIG COMMENT CL_PAR AND ]
## Transitions:
## Reductions:
-- On TOKEN reduce production small_bool_expr -> TRUE
-- On THEN reduce production small_bool_expr -> TRUE
-- On SPACE reduce production small_bool_expr -> TRUE
-- On SIGNATURE reduce production small_bool_expr -> TRUE
-- On SEMICOLON reduce production small_bool_expr -> TRUE
-- On RAR reduce production small_bool_expr -> TRUE
-- On PLOT reduce production small_bool_expr -> TRUE
-- On PIPE reduce production small_bool_expr -> TRUE
-- On PERT reduce production small_bool_expr -> TRUE
-- On OR reduce production small_bool_expr -> TRUE
-- On OBS reduce production small_bool_expr -> TRUE
-- On NEWLINE reduce production small_bool_expr -> TRUE
-- On LRAR reduce production small_bool_expr -> TRUE
-- On LET reduce production small_bool_expr -> TRUE
-- On LABEL reduce production small_bool_expr -> TRUE
-- On INIT reduce production small_bool_expr -> TRUE
-- On ID reduce production small_bool_expr -> TRUE
-- On EOF reduce production small_bool_expr -> TRUE
-- On DOT reduce production small_bool_expr -> TRUE
-- On DO reduce production small_bool_expr -> TRUE
-- On CONFIG reduce production small_bool_expr -> TRUE
-- On COMMENT reduce production small_bool_expr -> TRUE
-- On CL_PAR reduce production small_bool_expr -> TRUE
-- On AND reduce production small_bool_expr -> TRUE

State 180:
## Known stack suffix:
## OP_PAR
## LR(1) items:
small_alg_expr -> OP_PAR . annot alg_expr CL_PAR [ TOKEN THEN SPACE SMALLER SIGNATURE SEMICOLON RAR POW PLUS PLOT PIPE PERT OR OP_PAR OP_CUR OBS NEWLINE MULT MOD MINUS LRAR LET LABEL INIT ID GREATER EQUAL EOF ELSE DOT DO DIV DIFF CONFIG COMMENT COMMA CL_PAR AND ]
small_bool_expr -> OP_PAR . annot bool_expr CL_PAR [ THEN SPACE OR NEWLINE COMMENT CL_PAR AND ]
## Transitions:
-- On SPACE shift to state 2
-- On NEWLINE shift to state 3
-- On COMMENT shift to state 4
-- On annot shift to state 181
## Reductions:
-- On TRUE reduce production annot ->
-- On TMAX reduce production annot ->
-- On TIME reduce production annot ->
-- On TAN reduce production annot ->
-- On SQRT reduce production annot ->
-- On SINUS reduce production annot ->
-- On PIPE reduce production annot ->
-- On OP_PAR reduce production annot ->
-- On NULL_EVENT reduce production annot ->
-- On NOT reduce production annot ->
-- On MINUS reduce production annot ->
-- On MIN reduce production annot ->
-- On MAX reduce production annot ->
-- On LOG reduce production annot ->
-- On LABEL reduce production annot ->
-- On INT reduce production annot ->
-- On INFINITY reduce production annot ->
-- On ID reduce production annot ->
-- On FLOAT reduce production annot ->
-- On FALSE reduce production annot ->
-- On EXPONENT reduce production annot ->
-- On EVENT reduce production annot ->
-- On EMAX reduce production annot ->
-- On CPUTIME reduce production annot ->
-- On COSINUS reduce production annot ->
-- On ABS reduce production annot ->

State 181:
## Known stack suffix:
## OP_PAR annot
## LR(1) items:
small_alg_expr -> OP_PAR annot . alg_expr CL_PAR [ TOKEN THEN SPACE SMALLER SIGNATURE SEMICOLON RAR POW PLUS PLOT PIPE PERT OR OP_PAR OP_CUR OBS NEWLINE MULT MOD MINUS LRAR LET LABEL INIT ID GREATER EQUAL EOF ELSE DOT DO DIV DIFF CONFIG COMMENT COMMA CL_PAR AND ]
small_bool_expr -> OP_PAR annot . bool_expr CL_PAR [ THEN SPACE OR NEWLINE COMMENT CL_PAR AND ]
## Transitions:
-- On TRUE shift to state 179
-- On TMAX shift to state 162
-- On TIME shift to state 163
-- On TAN shift to state 164
-- On SQRT shift to state 166
-- On SINUS shift to state 168
-- On PIPE shift to state 170
-- On OP_PAR shift to state 180
-- On NULL_EVENT shift to state 182
-- On NOT shift to state 183
-- On MINUS shift to state 189
-- On MIN shift to state 191
-- On MAX shift to state 193
-- On LOG shift to state 195
-- On LABEL shift to state 197
-- On INT shift to state 198
-- On INFINITY shift to state 199
-- On ID shift to state 200
-- On FLOAT shift to state 201
-- On FALSE shift to state 225
-- On EXPONENT shift to state 202
-- On EVENT shift to state 204
-- On EMAX shift to state 205
-- On CPUTIME shift to state 206
-- On COSINUS shift to state 207
-- On ABS shift to state 209
-- On variable shift to state 211
-- On small_bool_expr shift to state 226
-- On small_alg_expr shift to state 228
-- On nbr shift to state 213
-- On constant shift to state 214
-- On bool_expr_no_or shift to state 233
-- On bool_expr_comp shift to state 236
-- On bool_expr shift to state 281
-- On alg_expr_up_to_sum shift to state 240
-- On alg_expr_up_to_prod shift to state 251
-- On alg_expr_up_to_mod shift to state 247
-- On alg_expr_up_to_if shift to state 258
-- On alg_expr shift to state 283
## Reductions:

State 182:
## Known stack suffix:
## NULL_EVENT
## LR(1) items:
variable -> NULL_EVENT . [ TRUE TOKEN TMAX TIME THEN TAN STRING SQRT SPACE SMALLER SINUS SIGNATURE SEMICOLON RAR POW PLUS PLOT PIPE PERT OR OP_PAR OP_CUR OBS NULL_EVENT NEWLINE MULT MOD MINUS MIN MAX LRAR LOG LET LABEL INT INIT INFINITY ID GREATER FLOAT FALSE EXPONENT EVENT EQUAL EOF EMAX ELSE DOT DO DIV DIFF CPUTIME COSINUS CONFIG COMMENT COMMA COLON CL_PAR CL_CUR AND ABS ]
## Transitions:
## Reductions:
-- On TRUE reduce production variable -> NULL_EVENT
-- On TOKEN reduce production variable -> NULL_EVENT
-- On TMAX reduce production variable -> NULL_EVENT
-- On TIME reduce production variable -> NULL_EVENT
-- On THEN reduce production variable -> NULL_EVENT
-- On TAN reduce production variable -> NULL_EVENT
-- On STRING reduce production variable -> NULL_EVENT
-- On SQRT reduce production variable -> NULL_EVENT
-- On SPACE reduce production variable -> NULL_EVENT
-- On SMALLER reduce production variable -> NULL_EVENT
-- On SINUS reduce production variable -> NULL_EVENT
-- On SIGNATURE reduce production variable -> NULL_EVENT
-- On SEMICOLON reduce production variable -> NULL_EVENT
-- On RAR reduce production variable -> NULL_EVENT
-- On POW reduce production variable -> NULL_EVENT
-- On PLUS reduce production variable -> NULL_EVENT
-- On PLOT reduce production variable -> NULL_EVENT
-- On PIPE reduce production variable -> NULL_EVENT
-- On PERT reduce production variable -> NULL_EVENT
-- On OR reduce production variable -> NULL_EVENT
-- On OP_PAR reduce production variable -> NULL_EVENT
-- On OP_CUR reduce production variable -> NULL_EVENT
-- On OBS reduce production variable -> NULL_EVENT
-- On NULL_EVENT reduce production variable -> NULL_EVENT
-- On NEWLINE reduce production variable -> NULL_EVENT
-- On MULT reduce production variable -> NULL_EVENT
-- On MOD reduce production variable -> NULL_EVENT
-- On MINUS reduce production variable -> NULL_EVENT
-- On MIN reduce production variable -> NULL_EVENT
-- On MAX reduce production variable -> NULL_EVENT
-- On LRAR reduce production variable -> NULL_EVENT
-- On LOG reduce production variable -> NULL_EVENT
-- On LET reduce production variable -> NULL_EVENT
-- On LABEL reduce production variable -> NULL_EVENT
-- On INT reduce production variable -> NULL_EVENT
-- On INIT reduce production variable -> NULL_EVENT
-- On INFINITY reduce production variable -> NULL_EVENT
-- On ID reduce production variable -> NULL_EVENT
-- On GREATER reduce production variable -> NULL_EVENT
-- On FLOAT reduce production variable -> NULL_EVENT
-- On FALSE reduce production variable -> NULL_EVENT
-- On EXPONENT reduce production variable -> NULL_EVENT
-- On EVENT reduce production variable -> NULL_EVENT
-- On EQUAL reduce production variable -> NULL_EVENT
-- On EOF reduce production variable -> NULL_EVENT
-- On EMAX reduce production variable -> NULL_EVENT
-- On ELSE reduce production variable -> NULL_EVENT
-- On DOT reduce production variable -> NULL_EVENT
-- On DO reduce production variable -> NULL_EVENT
-- On DIV reduce production variable -> NULL_EVENT
-- On DIFF reduce production variable -> NULL_EVENT
-- On CPUTIME reduce production variable -> NULL_EVENT
-- On COSINUS reduce production variable -> NULL_EVENT
-- On CONFIG reduce production variable -> NULL_EVENT
-- On COMMENT reduce production variable -> NULL_EVENT
-- On COMMA reduce production variable -> NULL_EVENT
-- On COLON reduce production variable -> NULL_EVENT
-- On CL_PAR reduce production variable -> NULL_EVENT
-- On CL_CUR reduce production variable -> NULL_EVENT
-- On AND reduce production variable -> NULL_EVENT
-- On ABS reduce production variable -> NULL_EVENT

State 183:
## Known stack suffix:
## NOT
## LR(1) items:
small_bool_expr -> NOT . annot small_bool_expr [ TOKEN THEN SPACE SIGNATURE SEMICOLON RAR PLOT PIPE PERT OR OBS NEWLINE LRAR LET LABEL INIT ID EOF DOT DO CONFIG COMMENT CL_PAR AND ]
## Transitions:
-- On SPACE shift to state 2
-- On NEWLINE shift to state 3
-- On COMMENT shift to state 4
-- On annot shift to state 184
## Reductions:
-- On TRUE reduce production annot ->
-- On OP_PAR reduce production annot ->
-- On NOT reduce production annot ->
-- On FALSE reduce production annot ->

State 184:
## Known stack suffix:
## NOT annot
## LR(1) items:
small_bool_expr -> NOT annot . small_bool_expr [ TOKEN THEN SPACE SIGNATURE SEMICOLON RAR PLOT PIPE PERT OR OBS NEWLINE LRAR LET LABEL INIT ID EOF DOT DO CONFIG COMMENT CL_PAR AND ]
## Transitions:
-- On TRUE shift to state 179
-- On OP_PAR shift to state 185
-- On NOT shift to state 183
-- On FALSE shift to state 225
-- On small_bool_expr shift to state 286
## Reductions:

State 185:
## Known stack suffix:
## OP_PAR
## LR(1) items:
small_bool_expr -> OP_PAR . annot bool_expr CL_PAR [ TOKEN THEN SPACE SIGNATURE SEMICOLON RAR PLOT PIPE PERT OR OBS NEWLINE LRAR LET LABEL INIT ID EOF DOT DO CONFIG COMMENT CL_PAR AND ]
## Transitions:
-- On SPACE shift to state 2
-- On NEWLINE shift to state 3
-- On COMMENT shift to state 4
-- On annot shift to state 186
## Reductions:
-- On TRUE reduce production annot ->
-- On TMAX reduce production annot ->
-- On TIME reduce production annot ->
-- On TAN reduce production annot ->
-- On SQRT reduce production annot ->
-- On SINUS reduce production annot ->
-- On PIPE reduce production annot ->
-- On OP_PAR reduce production annot ->
-- On NULL_EVENT reduce production annot ->
-- On NOT reduce production annot ->
-- On MINUS reduce production annot ->
-- On MIN reduce production annot ->
-- On MAX reduce production annot ->
-- On LOG reduce production annot ->
-- On LABEL reduce production annot ->
-- On INT reduce production annot ->
-- On INFINITY reduce production annot ->
-- On ID reduce production annot ->
-- On FLOAT reduce production annot ->
-- On FALSE reduce production annot ->
-- On EXPONENT reduce production annot ->
-- On EVENT reduce production annot ->
-- On EMAX reduce production annot ->
-- On CPUTIME reduce production annot ->
-- On COSINUS reduce production annot ->
-- On ABS reduce production annot ->

State 186:
## Known stack suffix:
## OP_PAR annot
## LR(1) items:
small_bool_expr -> OP_PAR annot . bool_expr CL_PAR [ TOKEN THEN SPACE SIGNATURE SEMICOLON RAR PLOT PIPE PERT OR OBS NEWLINE LRAR LET LABEL INIT ID EOF DOT DO CONFIG COMMENT CL_PAR AND ]
## Transitions:
-- On TRUE shift to state 179
-- On TMAX shift to state 162
-- On TIME shift to state 163
-- On TAN shift to state 164
-- On SQRT shift to state 166
-- On SINUS shift to state 168
-- On PIPE shift to state 170
-- On OP_PAR shift to state 187
-- On NULL_EVENT shift to state 182
-- On NOT shift to state 183
-- On MINUS shift to state 189
-- On MIN shift to state 191
-- On MAX shift to state 193
-- On LOG shift to state 195
-- On LABEL shift to state 197
-- On INT shift to state 198
-- On INFINITY shift to state 199
-- On ID shift to state 200
-- On FLOAT shift to state 201
-- On FALSE shift to state 225
-- On EXPONENT shift to state 202
-- On EVENT shift to state 204
-- On EMAX shift to state 205
-- On CPUTIME shift to state 206
-- On COSINUS shift to state 207
-- On ABS shift to state 209
-- On variable shift to state 211
-- On small_bool_expr shift to state 226
-- On small_alg_expr shift to state 228
-- On nbr shift to state 213
-- On constant shift to state 214
-- On bool_expr_no_or shift to state 233
-- On bool_expr_comp shift to state 236
-- On bool_expr shift to state 285
-- On alg_expr_up_to_sum shift to state 240
-- On alg_expr_up_to_prod shift to state 251
-- On alg_expr_up_to_mod shift to state 247
-- On alg_expr_up_to_if shift to state 252
## Reductions:

State 187:
## Known stack suffix:
## OP_PAR
## LR(1) items:
small_alg_expr -> OP_PAR . annot alg_expr CL_PAR [ SPACE SMALLER POW PLUS NEWLINE MULT MOD MINUS GREATER EQUAL DIV DIFF COMMENT COLON CL_CUR ]
small_bool_expr -> OP_PAR . annot bool_expr CL_PAR [ TOKEN THEN SPACE SIGNATURE SEMICOLON RAR PLOT PIPE PERT OR OBS NEWLINE LRAR LET LABEL INIT ID EOF DOT DO CONFIG COMMENT CL_PAR AND ]
## Transitions:
-- On SPACE shift to state 2
-- On NEWLINE shift to state 3
-- On COMMENT shift to state 4
-- On annot shift to state 188
## Reductions:
-- On TRUE reduce production annot ->
-- On TMAX reduce production annot ->
-- On TIME reduce production annot ->
-- On TAN reduce production annot ->
-- On SQRT reduce production annot ->
-- On SINUS reduce production annot ->
-- On PIPE reduce production annot ->
-- On OP_PAR reduce production annot ->
-- On NULL_EVENT reduce production annot ->
-- On NOT reduce production annot ->
-- On MINUS reduce production annot ->
-- On MIN reduce production annot ->
-- On MAX reduce production annot ->
-- On LOG reduce production annot ->
-- On LABEL reduce production annot ->
-- On INT reduce production annot ->
-- On INFINITY reduce production annot ->
-- On ID reduce production annot ->
-- On FLOAT reduce production annot ->
-- On FALSE reduce production annot ->
-- On EXPONENT reduce production annot ->
-- On EVENT reduce production annot ->
-- On EMAX reduce production annot ->
-- On CPUTIME reduce production annot ->
-- On COSINUS reduce production annot ->
-- On ABS reduce production annot ->

State 188:
## Known stack suffix:
## OP_PAR annot
## LR(1) items:
small_alg_expr -> OP_PAR annot . alg_expr CL_PAR [ SPACE SMALLER POW PLUS NEWLINE MULT MOD MINUS GREATER EQUAL DIV DIFF COMMENT COLON CL_CUR ]
small_bool_expr -> OP_PAR annot . bool_expr CL_PAR [ TOKEN THEN SPACE SIGNATURE SEMICOLON RAR PLOT PIPE PERT OR OBS NEWLINE LRAR LET LABEL INIT ID EOF DOT DO CONFIG COMMENT CL_PAR AND ]
## Transitions:
-- On TRUE shift to state 179
-- On TMAX shift to state 162
-- On TIME shift to state 163
-- On TAN shift to state 164
-- On SQRT shift to state 166
-- On SINUS shift to state 168
-- On PIPE shift to state 170
-- On OP_PAR shift to state 180
-- On NULL_EVENT shift to state 182
-- On NOT shift to state 183
-- On MINUS shift to state 189
-- On MIN shift to state 191
-- On MAX shift to state 193
-- On LOG shift to state 195
-- On LABEL shift to state 197
-- On INT shift to state 198
-- On INFINITY shift to state 199
-- On ID shift to state 200
-- On FLOAT shift to state 201
-- On FALSE shift to state 225
-- On EXPONENT shift to state 202
-- On EVENT shift to state 204
-- On EMAX shift to state 205
-- On CPUTIME shift to state 206
-- On COSINUS shift to state 207
-- On ABS shift to state 209
-- On variable shift to state 211
-- On small_bool_expr shift to state 226
-- On small_alg_expr shift to state 228
-- On nbr shift to state 213
-- On constant shift to state 214
-- On bool_expr_no_or shift to state 233
-- On bool_expr_comp shift to state 236
-- On bool_expr shift to state 281
-- On alg_expr_up_to_sum shift to state 240
-- On alg_expr_up_to_prod shift to state 251
-- On alg_expr_up_to_mod shift to state 247
-- On alg_expr_up_to_if shift to state 258
-- On alg_expr shift to state 283
## Reductions:

State 189:
## Known stack suffix:
## MINUS
## LR(1) items:
small_alg_expr -> MINUS . annot small_alg_expr [ TRUE TOKEN TMAX TIME THEN TAN STRING SQRT SPACE SMALLER SINUS SIGNATURE SEMICOLON RAR POW PLUS PLOT PIPE PERT OR OP_PAR OP_CUR OBS NULL_EVENT NEWLINE MULT MOD MINUS MIN MAX LRAR LOG LET LABEL INT INIT INFINITY ID GREATER FLOAT FALSE EXPONENT EVENT EQUAL EOF EMAX ELSE DOT DO DIV DIFF CPUTIME COSINUS CONFIG COMMENT COMMA COLON CL_PAR CL_CUR AND ABS ]
## Transitions:
-- On SPACE shift to state 2
-- On NEWLINE shift to state 3
-- On COMMENT shift to state 4
-- On annot shift to state 190
## Reductions:
-- On TMAX reduce production annot ->
-- On TIME reduce production annot ->
-- On TAN reduce production annot ->
-- On SQRT reduce production annot ->
-- On SINUS reduce production annot ->
-- On PIPE reduce production annot ->
-- On OP_PAR reduce production annot ->
-- On NULL_EVENT reduce production annot ->
-- On MINUS reduce production annot ->
-- On MIN reduce production annot ->
-- On MAX reduce production annot ->
-- On LOG reduce production annot ->
-- On LABEL reduce production annot ->
-- On INT reduce production annot ->
-- On INFINITY reduce production annot ->
-- On ID reduce production annot ->
-- On FLOAT reduce production annot ->
-- On EXPONENT reduce production annot ->
-- On EVENT reduce production annot ->
-- On EMAX reduce production annot ->
-- On CPUTIME reduce production annot ->
-- On COSINUS reduce production annot ->
-- On ABS reduce production annot ->

State 190:
## Known stack suffix:
## MINUS annot
## LR(1) items:
small_alg_expr -> MINUS annot . small_alg_expr [ TRUE TOKEN TMAX TIME THEN TAN STRING SQRT SPACE SMALLER SINUS SIGNATURE SEMICOLON RAR POW PLUS PLOT PIPE PERT OR OP_PAR OP_CUR OBS NULL_EVENT NEWLINE MULT MOD MINUS MIN MAX LRAR LOG LET LABEL INT INIT INFINITY ID GREATER FLOAT FALSE EXPONENT EVENT EQUAL EOF EMAX ELSE DOT DO DIV DIFF CPUTIME COSINUS CONFIG COMMENT COMMA COLON CL_PAR CL_CUR AND ABS ]
## Transitions:
-- On TMAX shift to state 162
-- On TIME shift to state 163
-- On TAN shift to state 164
-- On SQRT shift to state 166
-- On SINUS shift to state 168
-- On PIPE shift to state 170
-- On OP_PAR shift to state 177
-- On NULL_EVENT shift to state 182
-- On MINUS shift to state 189
-- On MIN shift to state 191
-- On MAX shift to state 193
-- On LOG shift to state 195
-- On LABEL shift to state 197
-- On INT shift to state 198
-- On INFINITY shift to state 199
-- On ID shift to state 200
-- On FLOAT shift to state 201
-- On EXPONENT shift to state 202
-- On EVENT shift to state 204
-- On EMAX shift to state 205
-- On CPUTIME shift to state 206
-- On COSINUS shift to state 207
-- On ABS shift to state 209
-- On variable shift to state 211
-- On small_alg_expr shift to state 224
-- On nbr shift to state 213
-- On constant shift to state 214
## Reductions:

State 191:
## Known stack suffix:
## MIN
## LR(1) items:
small_alg_expr -> MIN . annot small_alg_expr annot small_alg_expr [ TRUE TOKEN TMAX TIME THEN TAN STRING SQRT SPACE SMALLER SINUS SIGNATURE SEMICOLON RAR POW PLUS PLOT PIPE PERT OR OP_PAR OP_CUR OBS NULL_EVENT NEWLINE MULT MOD MINUS MIN MAX LRAR LOG LET LABEL INT INIT INFINITY ID GREATER FLOAT FALSE EXPONENT EVENT EQUAL EOF EMAX ELSE DOT DO DIV DIFF CPUTIME COSINUS CONFIG COMMENT COMMA COLON CL_PAR CL_CUR AND ABS ]
## Transitions:
-- On SPACE shift to state 2
-- On NEWLINE shift to state 3
-- On COMMENT shift to state 4
-- On annot shift to state 192
## Reductions:
-- On TMAX reduce production annot ->
-- On TIME reduce production annot ->
-- On TAN reduce production annot ->
-- On SQRT reduce production annot ->
-- On SINUS reduce production annot ->
-- On PIPE reduce production annot ->
-- On OP_PAR reduce production annot ->
-- On NULL_EVENT reduce production annot ->
-- On MINUS reduce production annot ->
-- On MIN reduce production annot ->
-- On MAX reduce production annot ->
-- On LOG reduce production annot ->
-- On LABEL reduce production annot ->
-- On INT reduce production annot ->
-- On INFINITY reduce production annot ->
-- On ID reduce production annot ->
-- On FLOAT reduce production annot ->
-- On EXPONENT reduce production annot ->
-- On EVENT reduce production annot ->
-- On EMAX reduce production annot ->
-- On CPUTIME reduce production annot ->
-- On COSINUS reduce production annot ->
-- On ABS reduce production annot ->

State 192:
## Known stack suffix:
## MIN annot
## LR(1) items:
small_alg_expr -> MIN annot . small_alg_expr annot small_alg_expr [ TRUE TOKEN TMAX TIME THEN TAN STRING SQRT SPACE SMALLER SINUS SIGNATURE SEMICOLON RAR POW PLUS PLOT PIPE PERT OR OP_PAR OP_CUR OBS NULL_EVENT NEWLINE MULT MOD MINUS MIN MAX LRAR LOG LET LABEL INT INIT INFINITY ID GREATER FLOAT FALSE EXPONENT EVENT EQUAL EOF EMAX ELSE DOT DO DIV DIFF CPUTIME COSINUS CONFIG COMMENT COMMA COLON CL_PAR CL_CUR AND ABS ]
## Transitions:
-- On TMAX shift to state 162
-- On TIME shift to state 163
-- On TAN shift to state 164
-- On SQRT shift to state 166
-- On SINUS shift to state 168
-- On PIPE shift to state 170
-- On OP_PAR shift to state 177
-- On NULL_EVENT shift to state 182
-- On MINUS shift to state 189
-- On MIN shift to state 191
-- On MAX shift to state 193
-- On LOG shift to state 195
-- On LABEL shift to state 197
-- On INT shift to state 198
-- On INFINITY shift to state 199
-- On ID shift to state 200
-- On FLOAT shift to state 201
-- On EXPONENT shift to state 202
-- On EVENT shift to state 204
-- On EMAX shift to state 205
-- On CPUTIME shift to state 206
-- On COSINUS shift to state 207
-- On ABS shift to state 209
-- On variable shift to state 211
-- On small_alg_expr shift to state 221
-- On nbr shift to state 213
-- On constant shift to state 214
## Reductions:

State 193:
## Known stack suffix:
## MAX
## LR(1) items:
small_alg_expr -> MAX . annot small_alg_expr annot small_alg_expr [ TRUE TOKEN TMAX TIME THEN TAN STRING SQRT SPACE SMALLER SINUS SIGNATURE SEMICOLON RAR POW PLUS PLOT PIPE PERT OR OP_PAR OP_CUR OBS NULL_EVENT NEWLINE MULT MOD MINUS MIN MAX LRAR LOG LET LABEL INT INIT INFINITY ID GREATER FLOAT FALSE EXPONENT EVENT EQUAL EOF EMAX ELSE DOT DO DIV DIFF CPUTIME COSINUS CONFIG COMMENT COMMA COLON CL_PAR CL_CUR AND ABS ]
## Transitions:
-- On SPACE shift to state 2
-- On NEWLINE shift to state 3
-- On COMMENT shift to state 4
-- On annot shift to state 194
## Reductions:
-- On TMAX reduce production annot ->
-- On TIME reduce production annot ->
-- On TAN reduce production annot ->
-- On SQRT reduce production annot ->
-- On SINUS reduce production annot ->
-- On PIPE reduce production annot ->
-- On OP_PAR reduce production annot ->
-- On NULL_EVENT reduce production annot ->
-- On MINUS reduce production annot ->
-- On MIN reduce production annot ->
-- On MAX reduce production annot ->
-- On LOG reduce production annot ->
-- On LABEL reduce production annot ->
-- On INT reduce production annot ->
-- On INFINITY reduce production annot ->
-- On ID reduce production annot ->
-- On FLOAT reduce production annot ->
-- On EXPONENT reduce production annot ->
-- On EVENT reduce production annot ->
-- On EMAX reduce production annot ->
-- On CPUTIME reduce production annot ->
-- On COSINUS reduce production annot ->
-- On ABS reduce production annot ->

State 194:
## Known stack suffix:
## MAX annot
## LR(1) items:
small_alg_expr -> MAX annot . small_alg_expr annot small_alg_expr [ TRUE TOKEN TMAX TIME THEN TAN STRING SQRT SPACE SMALLER SINUS SIGNATURE SEMICOLON RAR POW PLUS PLOT PIPE PERT OR OP_PAR OP_CUR OBS NULL_EVENT NEWLINE MULT MOD MINUS MIN MAX LRAR LOG LET LABEL INT INIT INFINITY ID GREATER FLOAT FALSE EXPONENT EVENT EQUAL EOF EMAX ELSE DOT DO DIV DIFF CPUTIME COSINUS CONFIG COMMENT COMMA COLON CL_PAR CL_CUR AND ABS ]
## Transitions:
-- On TMAX shift to state 162
-- On TIME shift to state 163
-- On TAN shift to state 164
-- On SQRT shift to state 166
-- On SINUS shift to state 168
-- On PIPE shift to state 170
-- On OP_PAR shift to state 177
-- On NULL_EVENT shift to state 182
-- On MINUS shift to state 189
-- On MIN shift to state 191
-- On MAX shift to state 193
-- On LOG shift to state 195
-- On LABEL shift to state 197
-- On INT shift to state 198
-- On INFINITY shift to state 199
-- On ID shift to state 200
-- On FLOAT shift to state 201
-- On EXPONENT shift to state 202
-- On EVENT shift to state 204
-- On EMAX shift to state 205
-- On CPUTIME shift to state 206
-- On COSINUS shift to state 207
-- On ABS shift to state 209
-- On variable shift to state 211
-- On small_alg_expr shift to state 218
-- On nbr shift to state 213
-- On constant shift to state 214
## Reductions:

State 195:
## Known stack suffix:
## LOG
## LR(1) items:
small_alg_expr -> LOG . annot small_alg_expr [ TRUE TOKEN TMAX TIME THEN TAN STRING SQRT SPACE SMALLER SINUS SIGNATURE SEMICOLON RAR POW PLUS PLOT PIPE PERT OR OP_PAR OP_CUR OBS NULL_EVENT NEWLINE MULT MOD MINUS MIN MAX LRAR LOG LET LABEL INT INIT INFINITY ID GREATER FLOAT FALSE EXPONENT EVENT EQUAL EOF EMAX ELSE DOT DO DIV DIFF CPUTIME COSINUS CONFIG COMMENT COMMA COLON CL_PAR CL_CUR AND ABS ]
## Transitions:
-- On SPACE shift to state 2
-- On NEWLINE shift to state 3
-- On COMMENT shift to state 4
-- On annot shift to state 196
## Reductions:
-- On TMAX reduce production annot ->
-- On TIME reduce production annot ->
-- On TAN reduce production annot ->
-- On SQRT reduce production annot ->
-- On SINUS reduce production annot ->
-- On PIPE reduce production annot ->
-- On OP_PAR reduce production annot ->
-- On NULL_EVENT reduce production annot ->
-- On MINUS reduce production annot ->
-- On MIN reduce production annot ->
-- On MAX reduce production annot ->
-- On LOG reduce production annot ->
-- On LABEL reduce production annot ->
-- On INT reduce production annot ->
-- On INFINITY reduce production annot ->
-- On ID reduce production annot ->
-- On FLOAT reduce production annot ->
-- On EXPONENT reduce production annot ->
-- On EVENT reduce production annot ->
-- On EMAX reduce production annot ->
-- On CPUTIME reduce production annot ->
-- On COSINUS reduce production annot ->
-- On ABS reduce production annot ->

State 196:
## Known stack suffix:
## LOG annot
## LR(1) items:
small_alg_expr -> LOG annot . small_alg_expr [ TRUE TOKEN TMAX TIME THEN TAN STRING SQRT SPACE SMALLER SINUS SIGNATURE SEMICOLON RAR POW PLUS PLOT PIPE PERT OR OP_PAR OP_CUR OBS NULL_EVENT NEWLINE MULT MOD MINUS MIN MAX LRAR LOG LET LABEL INT INIT INFINITY ID GREATER FLOAT FALSE EXPONENT EVENT EQUAL EOF EMAX ELSE DOT DO DIV DIFF CPUTIME COSINUS CONFIG COMMENT COMMA COLON CL_PAR CL_CUR AND ABS ]
## Transitions:
-- On TMAX shift to state 162
-- On TIME shift to state 163
-- On TAN shift to state 164
-- On SQRT shift to state 166
-- On SINUS shift to state 168
-- On PIPE shift to state 170
-- On OP_PAR shift to state 177
-- On NULL_EVENT shift to state 182
-- On MINUS shift to state 189
-- On MIN shift to state 191
-- On MAX shift to state 193
-- On LOG shift to state 195
-- On LABEL shift to state 197
-- On INT shift to state 198
-- On INFINITY shift to state 199
-- On ID shift to state 200
-- On FLOAT shift to state 201
-- On EXPONENT shift to state 202
-- On EVENT shift to state 204
-- On EMAX shift to state 205
-- On CPUTIME shift to state 206
-- On COSINUS shift to state 207
-- On ABS shift to state 209
-- On variable shift to state 211
-- On small_alg_expr shift to state 217
-- On nbr shift to state 213
-- On constant shift to state 214
## Reductions:

State 197:
## Known stack suffix:
## LABEL
## LR(1) items:
variable -> LABEL . [ TRUE TOKEN TMAX TIME THEN TAN STRING SQRT SPACE SMALLER SINUS SIGNATURE SEMICOLON RAR POW PLUS PLOT PIPE PERT OR OP_PAR OP_CUR OBS NULL_EVENT NEWLINE MULT MOD MINUS MIN MAX LRAR LOG LET LABEL INT INIT INFINITY ID GREATER FLOAT FALSE EXPONENT EVENT EQUAL EOF EMAX ELSE DOT DO DIV DIFF CPUTIME COSINUS CONFIG COMMENT COMMA COLON CL_PAR CL_CUR AND ABS ]
## Transitions:
## Reductions:
-- On TRUE reduce production variable -> LABEL
-- On TOKEN reduce production variable -> LABEL
-- On TMAX reduce production variable -> LABEL
-- On TIME reduce production variable -> LABEL
-- On THEN reduce production variable -> LABEL
-- On TAN reduce production variable -> LABEL
-- On STRING reduce production variable -> LABEL
-- On SQRT reduce production variable -> LABEL
-- On SPACE reduce production variable -> LABEL
-- On SMALLER reduce production variable -> LABEL
-- On SINUS reduce production variable -> LABEL
-- On SIGNATURE reduce production variable -> LABEL
-- On SEMICOLON reduce production variable -> LABEL
-- On RAR reduce production variable -> LABEL
-- On POW reduce production variable -> LABEL
-- On PLUS reduce production variable -> LABEL
-- On PLOT reduce production variable -> LABEL
-- On PIPE reduce production variable -> LABEL
-- On PERT reduce production variable -> LABEL
-- On OR reduce production variable -> LABEL
-- On OP_PAR reduce production variable -> LABEL
-- On OP_CUR reduce production variable -> LABEL
-- On OBS reduce production variable -> LABEL
-- On NULL_EVENT reduce production variable -> LABEL
-- On NEWLINE reduce production variable -> LABEL
-- On MULT reduce production variable -> LABEL
-- On MOD reduce production variable -> LABEL
-- On MINUS reduce production variable -> LABEL
-- On MIN reduce production variable -> LABEL
-- On MAX reduce production variable -> LABEL
-- On LRAR reduce production variable -> LABEL
-- On LOG reduce production variable -> LABEL
-- On LET reduce production variable -> LABEL
-- On LABEL reduce production variable -> LABEL
-- On INT reduce production variable -> LABEL
-- On INIT reduce production variable -> LABEL
-- On INFINITY reduce production variable -> LABEL
-- On ID reduce production variable -> LABEL
-- On GREATER reduce production variable -> LABEL
-- On FLOAT reduce production variable -> LABEL
-- On FALSE reduce production variable -> LABEL
-- On EXPONENT reduce production variable -> LABEL
-- On EVENT reduce production variable -> LABEL
-- On EQUAL reduce production variable -> LABEL
-- On EOF reduce production variable -> LABEL
-- On EMAX reduce production variable -> LABEL
-- On ELSE reduce production variable -> LABEL
-- On DOT reduce production variable -> LABEL
-- On DO reduce production variable -> LABEL
-- On DIV reduce production variable -> LABEL
-- On DIFF reduce production variable -> LABEL
-- On CPUTIME reduce production variable -> LABEL
-- On COSINUS reduce production variable -> LABEL
-- On CONFIG reduce production variable -> LABEL
-- On COMMENT reduce production variable -> LABEL
-- On COMMA reduce production variable -> LABEL
-- On COLON reduce production variable -> LABEL
-- On CL_PAR reduce production variable -> LABEL
-- On CL_CUR reduce production variable -> LABEL
-- On AND reduce production variable -> LABEL
-- On ABS reduce production variable -> LABEL

State 198:
## Known stack suffix:
## INT
## LR(1) items:
nbr -> INT . [ TRUE TOKEN TMAX TIME THEN TAN STRING SQRT SPACE SMALLER SINUS SIGNATURE SEMICOLON RAR POW PLUS PLOT PIPE PERT OR OP_PAR OP_CUR OBS NULL_EVENT NOT NEWLINE MULT MOD MINUS MIN MAX LRAR LOG LET LABEL INT INIT INFINITY ID GREATER FLOAT FALSE EXPONENT EVENT EQUAL EOF EMAX ELSE DOT DO DIV DIFF CPUTIME COSINUS CONFIG COMMENT COMMA COLON CL_PAR CL_CUR AND ABS ]
## Transitions:
## Reductions:
-- On TRUE reduce production nbr -> INT
-- On TOKEN reduce production nbr -> INT
-- On TMAX reduce production nbr -> INT
-- On TIME reduce production nbr -> INT
-- On THEN reduce production nbr -> INT
-- On TAN reduce production nbr -> INT
-- On STRING reduce production nbr -> INT
-- On SQRT reduce production nbr -> INT
-- On SPACE reduce production nbr -> INT
-- On SMALLER reduce production nbr -> INT
-- On SINUS reduce production nbr -> INT
-- On SIGNATURE reduce production nbr -> INT
-- On SEMICOLON reduce production nbr -> INT
-- On RAR reduce production nbr -> INT
-- On POW reduce production nbr -> INT
-- On PLUS reduce production nbr -> INT
-- On PLOT reduce production nbr -> INT
-- On PIPE reduce production nbr -> INT
-- On PERT reduce production nbr -> INT
-- On OR reduce production nbr -> INT
-- On OP_PAR reduce production nbr -> INT
-- On OP_CUR reduce production nbr -> INT
-- On OBS reduce production nbr -> INT
-- On NULL_EVENT reduce production nbr -> INT
-- On NOT reduce production nbr -> INT
-- On NEWLINE reduce production nbr -> INT
-- On MULT reduce production nbr -> INT
-- On MOD reduce production nbr -> INT
-- On MINUS reduce production nbr -> INT
-- On MIN reduce production nbr -> INT
-- On MAX reduce production nbr -> INT
-- On LRAR reduce production nbr -> INT
-- On LOG reduce production nbr -> INT
-- On LET reduce production nbr -> INT
-- On LABEL reduce production nbr -> INT
-- On INT reduce production nbr -> INT
-- On INIT reduce production nbr -> INT
-- On INFINITY reduce production nbr -> INT
-- On ID reduce production nbr -> INT
-- On GREATER reduce production nbr -> INT
-- On FLOAT reduce production nbr -> INT
-- On FALSE reduce production nbr -> INT
-- On EXPONENT reduce production nbr -> INT
-- On EVENT reduce production nbr -> INT
-- On EQUAL reduce production nbr -> INT
-- On EOF reduce production nbr -> INT
-- On EMAX reduce production nbr -> INT
-- On ELSE reduce production nbr -> INT
-- On DOT reduce production nbr -> INT
-- On DO reduce production nbr -> INT
-- On DIV reduce production nbr -> INT
-- On DIFF reduce production nbr -> INT
-- On CPUTIME reduce production nbr -> INT
-- On COSINUS reduce production nbr -> INT
-- On CONFIG reduce production nbr -> INT
-- On COMMENT reduce production nbr -> INT
-- On COMMA reduce production nbr -> INT
-- On COLON reduce production nbr -> INT
-- On CL_PAR reduce production nbr -> INT
-- On CL_CUR reduce production nbr -> INT
-- On AND reduce production nbr -> INT
-- On ABS reduce production nbr -> INT

State 199:
## Known stack suffix:
## INFINITY
## LR(1) items:
nbr -> INFINITY . [ TRUE TOKEN TMAX TIME THEN TAN STRING SQRT SPACE SMALLER SINUS SIGNATURE SEMICOLON RAR POW PLUS PLOT PIPE PERT OR OP_PAR OP_CUR OBS NULL_EVENT NOT NEWLINE MULT MOD MINUS MIN MAX LRAR LOG LET LABEL INT INIT INFINITY ID GREATER FLOAT FALSE EXPONENT EVENT EQUAL EOF EMAX ELSE DOT DO DIV DIFF CPUTIME COSINUS CONFIG COMMENT COMMA COLON CL_PAR CL_CUR AND ABS ]
## Transitions:
## Reductions:
-- On TRUE reduce production nbr -> INFINITY
-- On TOKEN reduce production nbr -> INFINITY
-- On TMAX reduce production nbr -> INFINITY
-- On TIME reduce production nbr -> INFINITY
-- On THEN reduce production nbr -> INFINITY
-- On TAN reduce production nbr -> INFINITY
-- On STRING reduce production nbr -> INFINITY
-- On SQRT reduce production nbr -> INFINITY
-- On SPACE reduce production nbr -> INFINITY
-- On SMALLER reduce production nbr -> INFINITY
-- On SINUS reduce production nbr -> INFINITY
-- On SIGNATURE reduce production nbr -> INFINITY
-- On SEMICOLON reduce production nbr -> INFINITY
-- On RAR reduce production nbr -> INFINITY
-- On POW reduce production nbr -> INFINITY
-- On PLUS reduce production nbr -> INFINITY
-- On PLOT reduce production nbr -> INFINITY
-- On PIPE reduce production nbr -> INFINITY
-- On PERT reduce production nbr -> INFINITY
-- On OR reduce production nbr -> INFINITY
-- On OP_PAR reduce production nbr -> INFINITY
-- On OP_CUR reduce production nbr -> INFINITY
-- On OBS reduce production nbr -> INFINITY
-- On NULL_EVENT reduce production nbr -> INFINITY
-- On NOT reduce production nbr -> INFINITY
-- On NEWLINE reduce production nbr -> INFINITY
-- On MULT reduce production nbr -> INFINITY
-- On MOD reduce production nbr -> INFINITY
-- On MINUS reduce production nbr -> INFINITY
-- On MIN reduce production nbr -> INFINITY
-- On MAX reduce production nbr -> INFINITY
-- On LRAR reduce production nbr -> INFINITY
-- On LOG reduce production nbr -> INFINITY
-- On LET reduce production nbr -> INFINITY
-- On LABEL reduce production nbr -> INFINITY
-- On INT reduce production nbr -> INFINITY
-- On INIT reduce production nbr -> INFINITY
-- On INFINITY reduce production nbr -> INFINITY
-- On ID reduce production nbr -> INFINITY
-- On GREATER reduce production nbr -> INFINITY
-- On FLOAT reduce production nbr -> INFINITY
-- On FALSE reduce production nbr -> INFINITY
-- On EXPONENT reduce production nbr -> INFINITY
-- On EVENT reduce production nbr -> INFINITY
-- On EQUAL reduce production nbr -> INFINITY
-- On EOF reduce production nbr -> INFINITY
-- On EMAX reduce production nbr -> INFINITY
-- On ELSE reduce production nbr -> INFINITY
-- On DOT reduce production nbr -> INFINITY
-- On DO reduce production nbr -> INFINITY
-- On DIV reduce production nbr -> INFINITY
-- On DIFF reduce production nbr -> INFINITY
-- On CPUTIME reduce production nbr -> INFINITY
-- On COSINUS reduce production nbr -> INFINITY
-- On CONFIG reduce production nbr -> INFINITY
-- On COMMENT reduce production nbr -> INFINITY
-- On COMMA reduce production nbr -> INFINITY
-- On COLON reduce production nbr -> INFINITY
-- On CL_PAR reduce production nbr -> INFINITY
-- On CL_CUR reduce production nbr -> INFINITY
-- On AND reduce production nbr -> INFINITY
-- On ABS reduce production nbr -> INFINITY

State 200:
## Known stack suffix:
## ID
## LR(1) items:
variable -> ID . [ TRUE TOKEN TMAX TIME THEN TAN STRING SQRT SPACE SMALLER SINUS SIGNATURE SEMICOLON RAR POW PLUS PLOT PIPE PERT OR OP_PAR OP_CUR OBS NULL_EVENT NEWLINE MULT MOD MINUS MIN MAX LRAR LOG LET LABEL INT INIT INFINITY ID GREATER FLOAT FALSE EXPONENT EVENT EQUAL EOF EMAX ELSE DOT DO DIV DIFF CPUTIME COSINUS CONFIG COMMENT COMMA COLON CL_PAR CL_CUR AND ABS ]
## Transitions:
## Reductions:
-- On TRUE reduce production variable -> ID
-- On TOKEN reduce production variable -> ID
-- On TMAX reduce production variable -> ID
-- On TIME reduce production variable -> ID
-- On THEN reduce production variable -> ID
-- On TAN reduce production variable -> ID
-- On STRING reduce production variable -> ID
-- On SQRT reduce production variable -> ID
-- On SPACE reduce production variable -> ID
-- On SMALLER reduce production variable -> ID
-- On SINUS reduce production variable -> ID
-- On SIGNATURE reduce production variable -> ID
-- On SEMICOLON reduce production variable -> ID
-- On RAR reduce production variable -> ID
-- On POW reduce production variable -> ID
-- On PLUS reduce production variable -> ID
-- On PLOT reduce production variable -> ID
-- On PIPE reduce production variable -> ID
-- On PERT reduce production variable -> ID
-- On OR reduce production variable -> ID
-- On OP_PAR reduce production variable -> ID
-- On OP_CUR reduce production variable -> ID
-- On OBS reduce production variable -> ID
-- On NULL_EVENT reduce production variable -> ID
-- On NEWLINE reduce production variable -> ID
-- On MULT reduce production variable -> ID
-- On MOD reduce production variable -> ID
-- On MINUS reduce production variable -> ID
-- On MIN reduce production variable -> ID
-- On MAX reduce production variable -> ID
-- On LRAR reduce production variable -> ID
-- On LOG reduce production variable -> ID
-- On LET reduce production variable -> ID
-- On LABEL reduce production variable -> ID
-- On INT reduce production variable -> ID
-- On INIT reduce production variable -> ID
-- On INFINITY reduce production variable -> ID
-- On ID reduce production variable -> ID
-- On GREATER reduce production variable -> ID
-- On FLOAT reduce production variable -> ID
-- On FALSE reduce production variable -> ID
-- On EXPONENT reduce production variable -> ID
-- On EVENT reduce production variable -> ID
-- On EQUAL reduce production variable -> ID
-- On EOF reduce production variable -> ID
-- On EMAX reduce production variable -> ID
-- On ELSE reduce production variable -> ID
-- On DOT reduce production variable -> ID
-- On DO reduce production variable -> ID
-- On DIV reduce production variable -> ID
-- On DIFF reduce production variable -> ID
-- On CPUTIME reduce production variable -> ID
-- On COSINUS reduce production variable -> ID
-- On CONFIG reduce production variable -> ID
-- On COMMENT reduce production variable -> ID
-- On COMMA reduce production variable -> ID
-- On COLON reduce production variable -> ID
-- On CL_PAR reduce production variable -> ID
-- On CL_CUR reduce production variable -> ID
-- On AND reduce production variable -> ID
-- On ABS reduce production variable -> ID

State 201:
## Known stack suffix:
## FLOAT
## LR(1) items:
nbr -> FLOAT . [ TRUE TOKEN TMAX TIME THEN TAN STRING SQRT SPACE SMALLER SINUS SIGNATURE SEMICOLON RAR POW PLUS PLOT PIPE PERT OR OP_PAR OP_CUR OBS NULL_EVENT NOT NEWLINE MULT MOD MINUS MIN MAX LRAR LOG LET LABEL INT INIT INFINITY ID GREATER FLOAT FALSE EXPONENT EVENT EQUAL EOF EMAX ELSE DOT DO DIV DIFF CPUTIME COSINUS CONFIG COMMENT COMMA COLON CL_PAR CL_CUR AND ABS ]
## Transitions:
## Reductions:
-- On TRUE reduce production nbr -> FLOAT
-- On TOKEN reduce production nbr -> FLOAT
-- On TMAX reduce production nbr -> FLOAT
-- On TIME reduce production nbr -> FLOAT
-- On THEN reduce production nbr -> FLOAT
-- On TAN reduce production nbr -> FLOAT
-- On STRING reduce production nbr -> FLOAT
-- On SQRT reduce production nbr -> FLOAT
-- On SPACE reduce production nbr -> FLOAT
-- On SMALLER reduce production nbr -> FLOAT
-- On SINUS reduce production nbr -> FLOAT
-- On SIGNATURE reduce production nbr -> FLOAT
-- On SEMICOLON reduce production nbr -> FLOAT
-- On RAR reduce production nbr -> FLOAT
-- On POW reduce production nbr -> FLOAT
-- On PLUS reduce production nbr -> FLOAT
-- On PLOT reduce production nbr -> FLOAT
-- On PIPE reduce production nbr -> FLOAT
-- On PERT reduce production nbr -> FLOAT
-- On OR reduce production nbr -> FLOAT
-- On OP_PAR reduce production nbr -> FLOAT
-- On OP_CUR reduce production nbr -> FLOAT
-- On OBS reduce production nbr -> FLOAT
-- On NULL_EVENT reduce production nbr -> FLOAT
-- On NOT reduce production nbr -> FLOAT
-- On NEWLINE reduce production nbr -> FLOAT
-- On MULT reduce production nbr -> FLOAT
-- On MOD reduce production nbr -> FLOAT
-- On MINUS reduce production nbr -> FLOAT
-- On MIN reduce production nbr -> FLOAT
-- On MAX reduce production nbr -> FLOAT
-- On LRAR reduce production nbr -> FLOAT
-- On LOG reduce production nbr -> FLOAT
-- On LET reduce production nbr -> FLOAT
-- On LABEL reduce production nbr -> FLOAT
-- On INT reduce production nbr -> FLOAT
-- On INIT reduce production nbr -> FLOAT
-- On INFINITY reduce production nbr -> FLOAT
-- On ID reduce production nbr -> FLOAT
-- On GREATER reduce production nbr -> FLOAT
-- On FLOAT reduce production nbr -> FLOAT
-- On FALSE reduce production nbr -> FLOAT
-- On EXPONENT reduce production nbr -> FLOAT
-- On EVENT reduce production nbr -> FLOAT
-- On EQUAL reduce production nbr -> FLOAT
-- On EOF reduce production nbr -> FLOAT
-- On EMAX reduce production nbr -> FLOAT
-- On ELSE reduce production nbr -> FLOAT
-- On DOT reduce production nbr -> FLOAT
-- On DO reduce production nbr -> FLOAT
-- On DIV reduce production nbr -> FLOAT
-- On DIFF reduce production nbr -> FLOAT
-- On CPUTIME reduce production nbr -> FLOAT
-- On COSINUS reduce production nbr -> FLOAT
-- On CONFIG reduce production nbr -> FLOAT
-- On COMMENT reduce production nbr -> FLOAT
-- On COMMA reduce production nbr -> FLOAT
-- On COLON reduce production nbr -> FLOAT
-- On CL_PAR reduce production nbr -> FLOAT
-- On CL_CUR reduce production nbr -> FLOAT
-- On AND reduce production nbr -> FLOAT
-- On ABS reduce production nbr -> FLOAT

State 202:
## Known stack suffix:
## EXPONENT
## LR(1) items:
small_alg_expr -> EXPONENT . annot small_alg_expr [ TRUE TOKEN TMAX TIME THEN TAN STRING SQRT SPACE SMALLER SINUS SIGNATURE SEMICOLON RAR POW PLUS PLOT PIPE PERT OR OP_PAR OP_CUR OBS NULL_EVENT NEWLINE MULT MOD MINUS MIN MAX LRAR LOG LET LABEL INT INIT INFINITY ID GREATER FLOAT FALSE EXPONENT EVENT EQUAL EOF EMAX ELSE DOT DO DIV DIFF CPUTIME COSINUS CONFIG COMMENT COMMA COLON CL_PAR CL_CUR AND ABS ]
## Transitions:
-- On SPACE shift to state 2
-- On NEWLINE shift to state 3
-- On COMMENT shift to state 4
-- On annot shift to state 203
## Reductions:
-- On TMAX reduce production annot ->
-- On TIME reduce production annot ->
-- On TAN reduce production annot ->
-- On SQRT reduce production annot ->
-- On SINUS reduce production annot ->
-- On PIPE reduce production annot ->
-- On OP_PAR reduce production annot ->
-- On NULL_EVENT reduce production annot ->
-- On MINUS reduce production annot ->
-- On MIN reduce production annot ->
-- On MAX reduce production annot ->
-- On LOG reduce production annot ->
-- On LABEL reduce production annot ->
-- On INT reduce production annot ->
-- On INFINITY reduce production annot ->
-- On ID reduce production annot ->
-- On FLOAT reduce production annot ->
-- On EXPONENT reduce production annot ->
-- On EVENT reduce production annot ->
-- On EMAX reduce production annot ->
-- On CPUTIME reduce production annot ->
-- On COSINUS reduce production annot ->
-- On ABS reduce production annot ->

State 203:
## Known stack suffix:
## EXPONENT annot
## LR(1) items:
small_alg_expr -> EXPONENT annot . small_alg_expr [ TRUE TOKEN TMAX TIME THEN TAN STRING SQRT SPACE SMALLER SINUS SIGNATURE SEMICOLON RAR POW PLUS PLOT PIPE PERT OR OP_PAR OP_CUR OBS NULL_EVENT NEWLINE MULT MOD MINUS MIN MAX LRAR LOG LET LABEL INT INIT INFINITY ID GREATER FLOAT FALSE EXPONENT EVENT EQUAL EOF EMAX ELSE DOT DO DIV DIFF CPUTIME COSINUS CONFIG COMMENT COMMA COLON CL_PAR CL_CUR AND ABS ]
## Transitions:
-- On TMAX shift to state 162
-- On TIME shift to state 163
-- On TAN shift to state 164
-- On SQRT shift to state 166
-- On SINUS shift to state 168
-- On PIPE shift to state 170
-- On OP_PAR shift to state 177
-- On NULL_EVENT shift to state 182
-- On MINUS shift to state 189
-- On MIN shift to state 191
-- On MAX shift to state 193
-- On LOG shift to state 195
-- On LABEL shift to state 197
-- On INT shift to state 198
-- On INFINITY shift to state 199
-- On ID shift to state 200
-- On FLOAT shift to state 201
-- On EXPONENT shift to state 202
-- On EVENT shift to state 204
-- On EMAX shift to state 205
-- On CPUTIME shift to state 206
-- On COSINUS shift to state 207
-- On ABS shift to state 209
-- On variable shift to state 211
-- On small_alg_expr shift to state 216
-- On nbr shift to state 213
-- On constant shift to state 214
## Reductions:

State 204:
## Known stack suffix:
## EVENT
## LR(1) items:
variable -> EVENT . [ TRUE TOKEN TMAX TIME THEN TAN STRING SQRT SPACE SMALLER SINUS SIGNATURE SEMICOLON RAR POW PLUS PLOT PIPE PERT OR OP_PAR OP_CUR OBS NULL_EVENT NEWLINE MULT MOD MINUS MIN MAX LRAR LOG LET LABEL INT INIT INFINITY ID GREATER FLOAT FALSE EXPONENT EVENT EQUAL EOF EMAX ELSE DOT DO DIV DIFF CPUTIME COSINUS CONFIG COMMENT COMMA COLON CL_PAR CL_CUR AND ABS ]
## Transitions:
## Reductions:
-- On TRUE reduce production variable -> EVENT
-- On TOKEN reduce production variable -> EVENT
-- On TMAX reduce production variable -> EVENT
-- On TIME reduce production variable -> EVENT
-- On THEN reduce production variable -> EVENT
-- On TAN reduce production variable -> EVENT
-- On STRING reduce production variable -> EVENT
-- On SQRT reduce production variable -> EVENT
-- On SPACE reduce production variable -> EVENT
-- On SMALLER reduce production variable -> EVENT
-- On SINUS reduce production variable -> EVENT
-- On SIGNATURE reduce production variable -> EVENT
-- On SEMICOLON reduce production variable -> EVENT
-- On RAR reduce production variable -> EVENT
-- On POW reduce production variable -> EVENT
-- On PLUS reduce production variable -> EVENT
-- On PLOT reduce production variable -> EVENT
-- On PIPE reduce production variable -> EVENT
-- On PERT reduce production variable -> EVENT
-- On OR reduce production variable -> EVENT
-- On OP_PAR reduce production variable -> EVENT
-- On OP_CUR reduce production variable -> EVENT
-- On OBS reduce production variable -> EVENT
-- On NULL_EVENT reduce production variable -> EVENT
-- On NEWLINE reduce production variable -> EVENT
-- On MULT reduce production variable -> EVENT
-- On MOD reduce production variable -> EVENT
-- On MINUS reduce production variable -> EVENT
-- On MIN reduce production variable -> EVENT
-- On MAX reduce production variable -> EVENT
-- On LRAR reduce production variable -> EVENT
-- On LOG reduce production variable -> EVENT
-- On LET reduce production variable -> EVENT
-- On LABEL reduce production variable -> EVENT
-- On INT reduce production variable -> EVENT
-- On INIT reduce production variable -> EVENT
-- On INFINITY reduce production variable -> EVENT
-- On ID reduce production variable -> EVENT
-- On GREATER reduce production variable -> EVENT
-- On FLOAT reduce production variable -> EVENT
-- On FALSE reduce production variable -> EVENT
-- On EXPONENT reduce production variable -> EVENT
-- On EVENT reduce production variable -> EVENT
-- On EQUAL reduce production variable -> EVENT
-- On EOF reduce production variable -> EVENT
-- On EMAX reduce production variable -> EVENT
-- On ELSE reduce production variable -> EVENT
-- On DOT reduce production variable -> EVENT
-- On DO reduce production variable -> EVENT
-- On DIV reduce production variable -> EVENT
-- On DIFF reduce production variable -> EVENT
-- On CPUTIME reduce production variable -> EVENT
-- On COSINUS reduce production variable -> EVENT
-- On CONFIG reduce production variable -> EVENT
-- On COMMENT reduce production variable -> EVENT
-- On COMMA reduce production variable -> EVENT
-- On COLON reduce production variable -> EVENT
-- On CL_PAR reduce production variable -> EVENT
-- On CL_CUR reduce production variable -> EVENT
-- On AND reduce production variable -> EVENT
-- On ABS reduce production variable -> EVENT

State 205:
## Known stack suffix:
## EMAX
## LR(1) items:
constant -> EMAX . [ TRUE TOKEN TMAX TIME THEN TAN STRING SQRT SPACE SMALLER SINUS SIGNATURE SEMICOLON RAR POW PLUS PLOT PIPE PERT OR OP_PAR OP_CUR OBS NULL_EVENT NEWLINE MULT MOD MINUS MIN MAX LRAR LOG LET LABEL INT INIT INFINITY ID GREATER FLOAT FALSE EXPONENT EVENT EQUAL EOF EMAX ELSE DOT DO DIV DIFF CPUTIME COSINUS CONFIG COMMENT COMMA COLON CL_PAR CL_CUR AND ABS ]
## Transitions:
## Reductions:
-- On TRUE reduce production constant -> EMAX
-- On TOKEN reduce production constant -> EMAX
-- On TMAX reduce production constant -> EMAX
-- On TIME reduce production constant -> EMAX
-- On THEN reduce production constant -> EMAX
-- On TAN reduce production constant -> EMAX
-- On STRING reduce production constant -> EMAX
-- On SQRT reduce production constant -> EMAX
-- On SPACE reduce production constant -> EMAX
-- On SMALLER reduce production constant -> EMAX
-- On SINUS reduce production constant -> EMAX
-- On SIGNATURE reduce production constant -> EMAX
-- On SEMICOLON reduce production constant -> EMAX
-- On RAR reduce production constant -> EMAX
-- On POW reduce production constant -> EMAX
-- On PLUS reduce production constant -> EMAX
-- On PLOT reduce production constant -> EMAX
-- On PIPE reduce production constant -> EMAX
-- On PERT reduce production constant -> EMAX
-- On OR reduce production constant -> EMAX
-- On OP_PAR reduce production constant -> EMAX
-- On OP_CUR reduce production constant -> EMAX
-- On OBS reduce production constant -> EMAX
-- On NULL_EVENT reduce production constant -> EMAX
-- On NEWLINE reduce production constant -> EMAX
-- On MULT reduce production constant -> EMAX
-- On MOD reduce production constant -> EMAX
-- On MINUS reduce production constant -> EMAX
-- On MIN reduce production constant -> EMAX
-- On MAX reduce production constant -> EMAX
-- On LRAR reduce production constant -> EMAX
-- On LOG reduce production constant -> EMAX
-- On LET reduce production constant -> EMAX
-- On LABEL reduce production constant -> EMAX
-- On INT reduce production constant -> EMAX
-- On INIT reduce production constant -> EMAX
-- On INFINITY reduce production constant -> EMAX
-- On ID reduce production constant -> EMAX
-- On GREATER reduce production constant -> EMAX
-- On FLOAT reduce production constant -> EMAX
-- On FALSE reduce production constant -> EMAX
-- On EXPONENT reduce production constant -> EMAX
-- On EVENT reduce production constant -> EMAX
-- On EQUAL reduce production constant -> EMAX
-- On EOF reduce production constant -> EMAX
-- On EMAX reduce production constant -> EMAX
-- On ELSE reduce production constant -> EMAX
-- On DOT reduce production constant -> EMAX
-- On DO reduce production constant -> EMAX
-- On DIV reduce production constant -> EMAX
-- On DIFF reduce production constant -> EMAX
-- On CPUTIME reduce production constant -> EMAX
-- On COSINUS reduce production constant -> EMAX
-- On CONFIG reduce production constant -> EMAX
-- On COMMENT reduce production constant -> EMAX
-- On COMMA reduce production constant -> EMAX
-- On COLON reduce production constant -> EMAX
-- On CL_PAR reduce production constant -> EMAX
-- On CL_CUR reduce production constant -> EMAX
-- On AND reduce production constant -> EMAX
-- On ABS reduce production constant -> EMAX

State 206:
## Known stack suffix:
## CPUTIME
## LR(1) items:
constant -> CPUTIME . [ TRUE TOKEN TMAX TIME THEN TAN STRING SQRT SPACE SMALLER SINUS SIGNATURE SEMICOLON RAR POW PLUS PLOT PIPE PERT OR OP_PAR OP_CUR OBS NULL_EVENT NEWLINE MULT MOD MINUS MIN MAX LRAR LOG LET LABEL INT INIT INFINITY ID GREATER FLOAT FALSE EXPONENT EVENT EQUAL EOF EMAX ELSE DOT DO DIV DIFF CPUTIME COSINUS CONFIG COMMENT COMMA COLON CL_PAR CL_CUR AND ABS ]
## Transitions:
## Reductions:
-- On TRUE reduce production constant -> CPUTIME
-- On TOKEN reduce production constant -> CPUTIME
-- On TMAX reduce production constant -> CPUTIME
-- On TIME reduce production constant -> CPUTIME
-- On THEN reduce production constant -> CPUTIME
-- On TAN reduce production constant -> CPUTIME
-- On STRING reduce production constant -> CPUTIME
-- On SQRT reduce production constant -> CPUTIME
-- On SPACE reduce production constant -> CPUTIME
-- On SMALLER reduce production constant -> CPUTIME
-- On SINUS reduce production constant -> CPUTIME
-- On SIGNATURE reduce production constant -> CPUTIME
-- On SEMICOLON reduce production constant -> CPUTIME
-- On RAR reduce production constant -> CPUTIME
-- On POW reduce production constant -> CPUTIME
-- On PLUS reduce production constant -> CPUTIME
-- On PLOT reduce production constant -> CPUTIME
-- On PIPE reduce production constant -> CPUTIME
-- On PERT reduce production constant -> CPUTIME
-- On OR reduce production constant -> CPUTIME
-- On OP_PAR reduce production constant -> CPUTIME
-- On OP_CUR reduce production constant -> CPUTIME
-- On OBS reduce production constant -> CPUTIME
-- On NULL_EVENT reduce production constant -> CPUTIME
-- On NEWLINE reduce production constant -> CPUTIME
-- On MULT reduce production constant -> CPUTIME
-- On MOD reduce production constant -> CPUTIME
-- On MINUS reduce production constant -> CPUTIME
-- On MIN reduce production constant -> CPUTIME
-- On MAX reduce production constant -> CPUTIME
-- On LRAR reduce production constant -> CPUTIME
-- On LOG reduce production constant -> CPUTIME
-- On LET reduce production constant -> CPUTIME
-- On LABEL reduce production constant -> CPUTIME
-- On INT reduce production constant -> CPUTIME
-- On INIT reduce production constant -> CPUTIME
-- On INFINITY reduce production constant -> CPUTIME
-- On ID reduce production constant -> CPUTIME
-- On GREATER reduce production constant -> CPUTIME
-- On FLOAT reduce production constant -> CPUTIME
-- On FALSE reduce production constant -> CPUTIME
-- On EXPONENT reduce production constant -> CPUTIME
-- On EVENT reduce production constant -> CPUTIME
-- On EQUAL reduce production constant -> CPUTIME
-- On EOF reduce production constant -> CPUTIME
-- On EMAX reduce production constant -> CPUTIME
-- On ELSE reduce production constant -> CPUTIME
-- On DOT reduce production constant -> CPUTIME
-- On DO reduce production constant -> CPUTIME
-- On DIV reduce production constant -> CPUTIME
-- On DIFF reduce production constant -> CPUTIME
-- On CPUTIME reduce production constant -> CPUTIME
-- On COSINUS reduce production constant -> CPUTIME
-- On CONFIG reduce production constant -> CPUTIME
-- On COMMENT reduce production constant -> CPUTIME
-- On COMMA reduce production constant -> CPUTIME
-- On COLON reduce production constant -> CPUTIME
-- On CL_PAR reduce production constant -> CPUTIME
-- On CL_CUR reduce production constant -> CPUTIME
-- On AND reduce production constant -> CPUTIME
-- On ABS reduce production constant -> CPUTIME

State 207:
## Known stack suffix:
## COSINUS
## LR(1) items:
small_alg_expr -> COSINUS . annot small_alg_expr [ TRUE TOKEN TMAX TIME THEN TAN STRING SQRT SPACE SMALLER SINUS SIGNATURE SEMICOLON RAR POW PLUS PLOT PIPE PERT OR OP_PAR OP_CUR OBS NULL_EVENT NEWLINE MULT MOD MINUS MIN MAX LRAR LOG LET LABEL INT INIT INFINITY ID GREATER FLOAT FALSE EXPONENT EVENT EQUAL EOF EMAX ELSE DOT DO DIV DIFF CPUTIME COSINUS CONFIG COMMENT COMMA COLON CL_PAR CL_CUR AND ABS ]
## Transitions:
-- On SPACE shift to state 2
-- On NEWLINE shift to state 3
-- On COMMENT shift to state 4
-- On annot shift to state 208
## Reductions:
-- On TMAX reduce production annot ->
-- On TIME reduce production annot ->
-- On TAN reduce production annot ->
-- On SQRT reduce production annot ->
-- On SINUS reduce production annot ->
-- On PIPE reduce production annot ->
-- On OP_PAR reduce production annot ->
-- On NULL_EVENT reduce production annot ->
-- On MINUS reduce production annot ->
-- On MIN reduce production annot ->
-- On MAX reduce production annot ->
-- On LOG reduce production annot ->
-- On LABEL reduce production annot ->
-- On INT reduce production annot ->
-- On INFINITY reduce production annot ->
-- On ID reduce production annot ->
-- On FLOAT reduce production annot ->
-- On EXPONENT reduce production annot ->
-- On EVENT reduce production annot ->
-- On EMAX reduce production annot ->
-- On CPUTIME reduce production annot ->
-- On COSINUS reduce production annot ->
-- On ABS reduce production annot ->

State 208:
## Known stack suffix:
## COSINUS annot
## LR(1) items:
small_alg_expr -> COSINUS annot . small_alg_expr [ TRUE TOKEN TMAX TIME THEN TAN STRING SQRT SPACE SMALLER SINUS SIGNATURE SEMICOLON RAR POW PLUS PLOT PIPE PERT OR OP_PAR OP_CUR OBS NULL_EVENT NEWLINE MULT MOD MINUS MIN MAX LRAR LOG LET LABEL INT INIT INFINITY ID GREATER FLOAT FALSE EXPONENT EVENT EQUAL EOF EMAX ELSE DOT DO DIV DIFF CPUTIME COSINUS CONFIG COMMENT COMMA COLON CL_PAR CL_CUR AND ABS ]
## Transitions:
-- On TMAX shift to state 162
-- On TIME shift to state 163
-- On TAN shift to state 164
-- On SQRT shift to state 166
-- On SINUS shift to state 168
-- On PIPE shift to state 170
-- On OP_PAR shift to state 177
-- On NULL_EVENT shift to state 182
-- On MINUS shift to state 189
-- On MIN shift to state 191
-- On MAX shift to state 193
-- On LOG shift to state 195
-- On LABEL shift to state 197
-- On INT shift to state 198
-- On INFINITY shift to state 199
-- On ID shift to state 200
-- On FLOAT shift to state 201
-- On EXPONENT shift to state 202
-- On EVENT shift to state 204
-- On EMAX shift to state 205
-- On CPUTIME shift to state 206
-- On COSINUS shift to state 207
-- On ABS shift to state 209
-- On variable shift to state 211
-- On small_alg_expr shift to state 215
-- On nbr shift to state 213
-- On constant shift to state 214
## Reductions:

State 209:
## Known stack suffix:
## ABS
## LR(1) items:
small_alg_expr -> ABS . annot small_alg_expr [ TRUE TOKEN TMAX TIME THEN TAN STRING SQRT SPACE SMALLER SINUS SIGNATURE SEMICOLON RAR POW PLUS PLOT PIPE PERT OR OP_PAR OP_CUR OBS NULL_EVENT NEWLINE MULT MOD MINUS MIN MAX LRAR LOG LET LABEL INT INIT INFINITY ID GREATER FLOAT FALSE EXPONENT EVENT EQUAL EOF EMAX ELSE DOT DO DIV DIFF CPUTIME COSINUS CONFIG COMMENT COMMA COLON CL_PAR CL_CUR AND ABS ]
## Transitions:
-- On SPACE shift to state 2
-- On NEWLINE shift to state 3
-- On COMMENT shift to state 4
-- On annot shift to state 210
## Reductions:
-- On TMAX reduce production annot ->
-- On TIME reduce production annot ->
-- On TAN reduce production annot ->
-- On SQRT reduce production annot ->
-- On SINUS reduce production annot ->
-- On PIPE reduce production annot ->
-- On OP_PAR reduce production annot ->
-- On NULL_EVENT reduce production annot ->
-- On MINUS reduce production annot ->
-- On MIN reduce production annot ->
-- On MAX reduce production annot ->
-- On LOG reduce production annot ->
-- On LABEL reduce production annot ->
-- On INT reduce production annot ->
-- On INFINITY reduce production annot ->
-- On ID reduce production annot ->
-- On FLOAT reduce production annot ->
-- On EXPONENT reduce production annot ->
-- On EVENT reduce production annot ->
-- On EMAX reduce production annot ->
-- On CPUTIME reduce production annot ->
-- On COSINUS reduce production annot ->
-- On ABS reduce production annot ->

State 210:
## Known stack suffix:
## ABS annot
## LR(1) items:
small_alg_expr -> ABS annot . small_alg_expr [ TRUE TOKEN TMAX TIME THEN TAN STRING SQRT SPACE SMALLER SINUS SIGNATURE SEMICOLON RAR POW PLUS PLOT PIPE PERT OR OP_PAR OP_CUR OBS NULL_EVENT NEWLINE MULT MOD MINUS MIN MAX LRAR LOG LET LABEL INT INIT INFINITY ID GREATER FLOAT FALSE EXPONENT EVENT EQUAL EOF EMAX ELSE DOT DO DIV DIFF CPUTIME COSINUS CONFIG COMMENT COMMA COLON CL_PAR CL_CUR AND ABS ]
## Transitions:
-- On TMAX shift to state 162
-- On TIME shift to state 163
-- On TAN shift to state 164
-- On SQRT shift to state 166
-- On SINUS shift to state 168
-- On PIPE shift to state 170
-- On OP_PAR shift to state 177
-- On NULL_EVENT shift to state 182
-- On MINUS shift to state 189
-- On MIN shift to state 191
-- On MAX shift to state 193
-- On LOG shift to state 195
-- On LABEL shift to state 197
-- On INT shift to state 198
-- On INFINITY shift to state 199
-- On ID shift to state 200
-- On FLOAT shift to state 201
-- On EXPONENT shift to state 202
-- On EVENT shift to state 204
-- On EMAX shift to state 205
-- On CPUTIME shift to state 206
-- On COSINUS shift to state 207
-- On ABS shift to state 209
-- On variable shift to state 211
-- On small_alg_expr shift to state 212
-- On nbr shift to state 213
-- On constant shift to state 214
## Reductions:

State 211:
## Known stack suffix:
## variable
## LR(1) items:
small_alg_expr -> variable . [ TRUE TOKEN TMAX TIME THEN TAN STRING SQRT SPACE SMALLER SINUS SIGNATURE SEMICOLON RAR POW PLUS PLOT PIPE PERT OR OP_PAR OP_CUR OBS NULL_EVENT NEWLINE MULT MOD MINUS MIN MAX LRAR LOG LET LABEL INT INIT INFINITY ID GREATER FLOAT FALSE EXPONENT EVENT EQUAL EOF EMAX ELSE DOT DO DIV DIFF CPUTIME COSINUS CONFIG COMMENT COMMA COLON CL_PAR CL_CUR AND ABS ]
## Transitions:
## Reductions:
-- On TRUE reduce production small_alg_expr -> variable
-- On TOKEN reduce production small_alg_expr -> variable
-- On TMAX reduce production small_alg_expr -> variable
-- On TIME reduce production small_alg_expr -> variable
-- On THEN reduce production small_alg_expr -> variable
-- On TAN reduce production small_alg_expr -> variable
-- On STRING reduce production small_alg_expr -> variable
-- On SQRT reduce production small_alg_expr -> variable
-- On SPACE reduce production small_alg_expr -> variable
-- On SMALLER reduce production small_alg_expr -> variable
-- On SINUS reduce production small_alg_expr -> variable
-- On SIGNATURE reduce production small_alg_expr -> variable
-- On SEMICOLON reduce production small_alg_expr -> variable
-- On RAR reduce production small_alg_expr -> variable
-- On POW reduce production small_alg_expr -> variable
-- On PLUS reduce production small_alg_expr -> variable
-- On PLOT reduce production small_alg_expr -> variable
-- On PIPE reduce production small_alg_expr -> variable
-- On PERT reduce production small_alg_expr -> variable
-- On OR reduce production small_alg_expr -> variable
-- On OP_PAR reduce production small_alg_expr -> variable
-- On OP_CUR reduce production small_alg_expr -> variable
-- On OBS reduce production small_alg_expr -> variable
-- On NULL_EVENT reduce production small_alg_expr -> variable
-- On NEWLINE reduce production small_alg_expr -> variable
-- On MULT reduce production small_alg_expr -> variable
-- On MOD reduce production small_alg_expr -> variable
-- On MINUS reduce production small_alg_expr -> variable
-- On MIN reduce production small_alg_expr -> variable
-- On MAX reduce production small_alg_expr -> variable
-- On LRAR reduce production small_alg_expr -> variable
-- On LOG reduce production small_alg_expr -> variable
-- On LET reduce production small_alg_expr -> variable
-- On LABEL reduce production small_alg_expr -> variable
-- On INT reduce production small_alg_expr -> variable
-- On INIT reduce production small_alg_expr -> variable
-- On INFINITY reduce production small_alg_expr -> variable
-- On ID reduce production small_alg_expr -> variable
-- On GREATER reduce production small_alg_expr -> variable
-- On FLOAT reduce production small_alg_expr -> variable
-- On FALSE reduce production small_alg_expr -> variable
-- On EXPONENT reduce production small_alg_expr -> variable
-- On EVENT reduce production small_alg_expr -> variable
-- On EQUAL reduce production small_alg_expr -> variable
-- On EOF reduce production small_alg_expr -> variable
-- On EMAX reduce production small_alg_expr -> variable
-- On ELSE reduce production small_alg_expr -> variable
-- On DOT reduce production small_alg_expr -> variable
-- On DO reduce production small_alg_expr -> variable
-- On DIV reduce production small_alg_expr -> variable
-- On DIFF reduce production small_alg_expr -> variable
-- On CPUTIME reduce production small_alg_expr -> variable
-- On COSINUS reduce production small_alg_expr -> variable
-- On CONFIG reduce production small_alg_expr -> variable
-- On COMMENT reduce production small_alg_expr -> variable
-- On COMMA reduce production small_alg_expr -> variable
-- On COLON reduce production small_alg_expr -> variable
-- On CL_PAR reduce production small_alg_expr -> variable
-- On CL_CUR reduce production small_alg_expr -> variable
-- On AND reduce production small_alg_expr -> variable
-- On ABS reduce production small_alg_expr -> variable

State 212:
## Known stack suffix:
## ABS annot small_alg_expr
## LR(1) items:
small_alg_expr -> ABS annot small_alg_expr . [ TRUE TOKEN TMAX TIME THEN TAN STRING SQRT SPACE SMALLER SINUS SIGNATURE SEMICOLON RAR POW PLUS PLOT PIPE PERT OR OP_PAR OP_CUR OBS NULL_EVENT NEWLINE MULT MOD MINUS MIN MAX LRAR LOG LET LABEL INT INIT INFINITY ID GREATER FLOAT FALSE EXPONENT EVENT EQUAL EOF EMAX ELSE DOT DO DIV DIFF CPUTIME COSINUS CONFIG COMMENT COMMA COLON CL_PAR CL_CUR AND ABS ]
## Transitions:
## Reductions:
-- On TRUE reduce production small_alg_expr -> ABS annot small_alg_expr
-- On TOKEN reduce production small_alg_expr -> ABS annot small_alg_expr
-- On TMAX reduce production small_alg_expr -> ABS annot small_alg_expr
-- On TIME reduce production small_alg_expr -> ABS annot small_alg_expr
-- On THEN reduce production small_alg_expr -> ABS annot small_alg_expr
-- On TAN reduce production small_alg_expr -> ABS annot small_alg_expr
-- On STRING reduce production small_alg_expr -> ABS annot small_alg_expr
-- On SQRT reduce production small_alg_expr -> ABS annot small_alg_expr
-- On SPACE reduce production small_alg_expr -> ABS annot small_alg_expr
-- On SMALLER reduce production small_alg_expr -> ABS annot small_alg_expr
-- On SINUS reduce production small_alg_expr -> ABS annot small_alg_expr
-- On SIGNATURE reduce production small_alg_expr -> ABS annot small_alg_expr
-- On SEMICOLON reduce production small_alg_expr -> ABS annot small_alg_expr
-- On RAR reduce production small_alg_expr -> ABS annot small_alg_expr
-- On POW reduce production small_alg_expr -> ABS annot small_alg_expr
-- On PLUS reduce production small_alg_expr -> ABS annot small_alg_expr
-- On PLOT reduce production small_alg_expr -> ABS annot small_alg_expr
-- On PIPE reduce production small_alg_expr -> ABS annot small_alg_expr
-- On PERT reduce production small_alg_expr -> ABS annot small_alg_expr
-- On OR reduce production small_alg_expr -> ABS annot small_alg_expr
-- On OP_PAR reduce production small_alg_expr -> ABS annot small_alg_expr
-- On OP_CUR reduce production small_alg_expr -> ABS annot small_alg_expr
-- On OBS reduce production small_alg_expr -> ABS annot small_alg_expr
-- On NULL_EVENT reduce production small_alg_expr -> ABS annot small_alg_expr
-- On NEWLINE reduce production small_alg_expr -> ABS annot small_alg_expr
-- On MULT reduce production small_alg_expr -> ABS annot small_alg_expr
-- On MOD reduce production small_alg_expr -> ABS annot small_alg_expr
-- On MINUS reduce production small_alg_expr -> ABS annot small_alg_expr
-- On MIN reduce production small_alg_expr -> ABS annot small_alg_expr
-- On MAX reduce production small_alg_expr -> ABS annot small_alg_expr
-- On LRAR reduce production small_alg_expr -> ABS annot small_alg_expr
-- On LOG reduce production small_alg_expr -> ABS annot small_alg_expr
-- On LET reduce production small_alg_expr -> ABS annot small_alg_expr
-- On LABEL reduce production small_alg_expr -> ABS annot small_alg_expr
-- On INT reduce production small_alg_expr -> ABS annot small_alg_expr
-- On INIT reduce production small_alg_expr -> ABS annot small_alg_expr
-- On INFINITY reduce production small_alg_expr -> ABS annot small_alg_expr
-- On ID reduce production small_alg_expr -> ABS annot small_alg_expr
-- On GREATER reduce production small_alg_expr -> ABS annot small_alg_expr
-- On FLOAT reduce production small_alg_expr -> ABS annot small_alg_expr
-- On FALSE reduce production small_alg_expr -> ABS annot small_alg_expr
-- On EXPONENT reduce production small_alg_expr -> ABS annot small_alg_expr
-- On EVENT reduce production small_alg_expr -> ABS annot small_alg_expr
-- On EQUAL reduce production small_alg_expr -> ABS annot small_alg_expr
-- On EOF reduce production small_alg_expr -> ABS annot small_alg_expr
-- On EMAX reduce production small_alg_expr -> ABS annot small_alg_expr
-- On ELSE reduce production small_alg_expr -> ABS annot small_alg_expr
-- On DOT reduce production small_alg_expr -> ABS annot small_alg_expr
-- On DO reduce production small_alg_expr -> ABS annot small_alg_expr
-- On DIV reduce production small_alg_expr -> ABS annot small_alg_expr
-- On DIFF reduce production small_alg_expr -> ABS annot small_alg_expr
-- On CPUTIME reduce production small_alg_expr -> ABS annot small_alg_expr
-- On COSINUS reduce production small_alg_expr -> ABS annot small_alg_expr
-- On CONFIG reduce production small_alg_expr -> ABS annot small_alg_expr
-- On COMMENT reduce production small_alg_expr -> ABS annot small_alg_expr
-- On COMMA reduce production small_alg_expr -> ABS annot small_alg_expr
-- On COLON reduce production small_alg_expr -> ABS annot small_alg_expr
-- On CL_PAR reduce production small_alg_expr -> ABS annot small_alg_expr
-- On CL_CUR reduce production small_alg_expr -> ABS annot small_alg_expr
-- On AND reduce production small_alg_expr -> ABS annot small_alg_expr
-- On ABS reduce production small_alg_expr -> ABS annot small_alg_expr

State 213:
## Known stack suffix:
## nbr
## LR(1) items:
constant -> nbr . [ TRUE TOKEN TMAX TIME THEN TAN STRING SQRT SPACE SMALLER SINUS SIGNATURE SEMICOLON RAR POW PLUS PLOT PIPE PERT OR OP_PAR OP_CUR OBS NULL_EVENT NEWLINE MULT MOD MINUS MIN MAX LRAR LOG LET LABEL INT INIT INFINITY ID GREATER FLOAT FALSE EXPONENT EVENT EQUAL EOF EMAX ELSE DOT DO DIV DIFF CPUTIME COSINUS CONFIG COMMENT COMMA COLON CL_PAR CL_CUR AND ABS ]
## Transitions:
## Reductions:
-- On TRUE reduce production constant -> nbr
-- On TOKEN reduce production constant -> nbr
-- On TMAX reduce production constant -> nbr
-- On TIME reduce production constant -> nbr
-- On THEN reduce production constant -> nbr
-- On TAN reduce production constant -> nbr
-- On STRING reduce production constant -> nbr
-- On SQRT reduce production constant -> nbr
-- On SPACE reduce production constant -> nbr
-- On SMALLER reduce production constant -> nbr
-- On SINUS reduce production constant -> nbr
-- On SIGNATURE reduce production constant -> nbr
-- On SEMICOLON reduce production constant -> nbr
-- On RAR reduce production constant -> nbr
-- On POW reduce production constant -> nbr
-- On PLUS reduce production constant -> nbr
-- On PLOT reduce production constant -> nbr
-- On PIPE reduce production constant -> nbr
-- On PERT reduce production constant -> nbr
-- On OR reduce production constant -> nbr
-- On OP_PAR reduce production constant -> nbr
-- On OP_CUR reduce production constant -> nbr
-- On OBS reduce production constant -> nbr
-- On NULL_EVENT reduce production constant -> nbr
-- On NEWLINE reduce production constant -> nbr
-- On MULT reduce production constant -> nbr
-- On MOD reduce production constant -> nbr
-- On MINUS reduce production constant -> nbr
-- On MIN reduce production constant -> nbr
-- On MAX reduce production constant -> nbr
-- On LRAR reduce production constant -> nbr
-- On LOG reduce production constant -> nbr
-- On LET reduce production constant -> nbr
-- On LABEL reduce production constant -> nbr
-- On INT reduce production constant -> nbr
-- On INIT reduce production constant -> nbr
-- On INFINITY reduce production constant -> nbr
-- On ID reduce production constant -> nbr
-- On GREATER reduce production constant -> nbr
-- On FLOAT reduce production constant -> nbr
-- On FALSE reduce production constant -> nbr
-- On EXPONENT reduce production constant -> nbr
-- On EVENT reduce production constant -> nbr
-- On EQUAL reduce production constant -> nbr
-- On EOF reduce production constant -> nbr
-- On EMAX reduce production constant -> nbr
-- On ELSE reduce production constant -> nbr
-- On DOT reduce production constant -> nbr
-- On DO reduce production constant -> nbr
-- On DIV reduce production constant -> nbr
-- On DIFF reduce production constant -> nbr
-- On CPUTIME reduce production constant -> nbr
-- On COSINUS reduce production constant -> nbr
-- On CONFIG reduce production constant -> nbr
-- On COMMENT reduce production constant -> nbr
-- On COMMA reduce production constant -> nbr
-- On COLON reduce production constant -> nbr
-- On CL_PAR reduce production constant -> nbr
-- On CL_CUR reduce production constant -> nbr
-- On AND reduce production constant -> nbr
-- On ABS reduce production constant -> nbr

State 214:
## Known stack suffix:
## constant
## LR(1) items:
small_alg_expr -> constant . [ TRUE TOKEN TMAX TIME THEN TAN STRING SQRT SPACE SMALLER SINUS SIGNATURE SEMICOLON RAR POW PLUS PLOT PIPE PERT OR OP_PAR OP_CUR OBS NULL_EVENT NEWLINE MULT MOD MINUS MIN MAX LRAR LOG LET LABEL INT INIT INFINITY ID GREATER FLOAT FALSE EXPONENT EVENT EQUAL EOF EMAX ELSE DOT DO DIV DIFF CPUTIME COSINUS CONFIG COMMENT COMMA COLON CL_PAR CL_CUR AND ABS ]
## Transitions:
## Reductions:
-- On TRUE reduce production small_alg_expr -> constant
-- On TOKEN reduce production small_alg_expr -> constant
-- On TMAX reduce production small_alg_expr -> constant
-- On TIME reduce production small_alg_expr -> constant
-- On THEN reduce production small_alg_expr -> constant
-- On TAN reduce production small_alg_expr -> constant
-- On STRING reduce production small_alg_expr -> constant
-- On SQRT reduce production small_alg_expr -> constant
-- On SPACE reduce production small_alg_expr -> constant
-- On SMALLER reduce production small_alg_expr -> constant
-- On SINUS reduce production small_alg_expr -> constant
-- On SIGNATURE reduce production small_alg_expr -> constant
-- On SEMICOLON reduce production small_alg_expr -> constant
-- On RAR reduce production small_alg_expr -> constant
-- On POW reduce production small_alg_expr -> constant
-- On PLUS reduce production small_alg_expr -> constant
-- On PLOT reduce production small_alg_expr -> constant
-- On PIPE reduce production small_alg_expr -> constant
-- On PERT reduce production small_alg_expr -> constant
-- On OR reduce production small_alg_expr -> constant
-- On OP_PAR reduce production small_alg_expr -> constant
-- On OP_CUR reduce production small_alg_expr -> constant
-- On OBS reduce production small_alg_expr -> constant
-- On NULL_EVENT reduce production small_alg_expr -> constant
-- On NEWLINE reduce production small_alg_expr -> constant
-- On MULT reduce production small_alg_expr -> constant
-- On MOD reduce production small_alg_expr -> constant
-- On MINUS reduce production small_alg_expr -> constant
-- On MIN reduce production small_alg_expr -> constant
-- On MAX reduce production small_alg_expr -> constant
-- On LRAR reduce production small_alg_expr -> constant
-- On LOG reduce production small_alg_expr -> constant
-- On LET reduce production small_alg_expr -> constant
-- On LABEL reduce production small_alg_expr -> constant
-- On INT reduce production small_alg_expr -> constant
-- On INIT reduce production small_alg_expr -> constant
-- On INFINITY reduce production small_alg_expr -> constant
-- On ID reduce production small_alg_expr -> constant
-- On GREATER reduce production small_alg_expr -> constant
-- On FLOAT reduce production small_alg_expr -> constant
-- On FALSE reduce production small_alg_expr -> constant
-- On EXPONENT reduce production small_alg_expr -> constant
-- On EVENT reduce production small_alg_expr -> constant
-- On EQUAL reduce production small_alg_expr -> constant
-- On EOF reduce production small_alg_expr -> constant
-- On EMAX reduce production small_alg_expr -> constant
-- On ELSE reduce production small_alg_expr -> constant
-- On DOT reduce production small_alg_expr -> constant
-- On DO reduce production small_alg_expr -> constant
-- On DIV reduce production small_alg_expr -> constant
-- On DIFF reduce production small_alg_expr -> constant
-- On CPUTIME reduce production small_alg_expr -> constant
-- On COSINUS reduce production small_alg_expr -> constant
-- On CONFIG reduce production small_alg_expr -> constant
-- On COMMENT reduce production small_alg_expr -> constant
-- On COMMA reduce production small_alg_expr -> constant
-- On COLON reduce production small_alg_expr -> constant
-- On CL_PAR reduce production small_alg_expr -> constant
-- On CL_CUR reduce production small_alg_expr -> constant
-- On AND reduce production small_alg_expr -> constant
-- On ABS reduce production small_alg_expr -> constant

State 215:
## Known stack suffix:
## COSINUS annot small_alg_expr
## LR(1) items:
small_alg_expr -> COSINUS annot small_alg_expr . [ TRUE TOKEN TMAX TIME THEN TAN STRING SQRT SPACE SMALLER SINUS SIGNATURE SEMICOLON RAR POW PLUS PLOT PIPE PERT OR OP_PAR OP_CUR OBS NULL_EVENT NEWLINE MULT MOD MINUS MIN MAX LRAR LOG LET LABEL INT INIT INFINITY ID GREATER FLOAT FALSE EXPONENT EVENT EQUAL EOF EMAX ELSE DOT DO DIV DIFF CPUTIME COSINUS CONFIG COMMENT COMMA COLON CL_PAR CL_CUR AND ABS ]
## Transitions:
## Reductions:
-- On TRUE reduce production small_alg_expr -> COSINUS annot small_alg_expr
-- On TOKEN reduce production small_alg_expr -> COSINUS annot small_alg_expr
-- On TMAX reduce production small_alg_expr -> COSINUS annot small_alg_expr
-- On TIME reduce production small_alg_expr -> COSINUS annot small_alg_expr
-- On THEN reduce production small_alg_expr -> COSINUS annot small_alg_expr
-- On TAN reduce production small_alg_expr -> COSINUS annot small_alg_expr
-- On STRING reduce production small_alg_expr -> COSINUS annot small_alg_expr
-- On SQRT reduce production small_alg_expr -> COSINUS annot small_alg_expr
-- On SPACE reduce production small_alg_expr -> COSINUS annot small_alg_expr
-- On SMALLER reduce production small_alg_expr -> COSINUS annot small_alg_expr
-- On SINUS reduce production small_alg_expr -> COSINUS annot small_alg_expr
-- On SIGNATURE reduce production small_alg_expr -> COSINUS annot small_alg_expr
-- On SEMICOLON reduce production small_alg_expr -> COSINUS annot small_alg_expr
-- On RAR reduce production small_alg_expr -> COSINUS annot small_alg_expr
-- On POW reduce production small_alg_expr -> COSINUS annot small_alg_expr
-- On PLUS reduce production small_alg_expr -> COSINUS annot small_alg_expr
-- On PLOT reduce production small_alg_expr -> COSINUS annot small_alg_expr
-- On PIPE reduce production small_alg_expr -> COSINUS annot small_alg_expr
-- On PERT reduce production small_alg_expr -> COSINUS annot small_alg_expr
-- On OR reduce production small_alg_expr -> COSINUS annot small_alg_expr
-- On OP_PAR reduce production small_alg_expr -> COSINUS annot small_alg_expr
-- On OP_CUR reduce production small_alg_expr -> COSINUS annot small_alg_expr
-- On OBS reduce production small_alg_expr -> COSINUS annot small_alg_expr
-- On NULL_EVENT reduce production small_alg_expr -> COSINUS annot small_alg_expr
-- On NEWLINE reduce production small_alg_expr -> COSINUS annot small_alg_expr
-- On MULT reduce production small_alg_expr -> COSINUS annot small_alg_expr
-- On MOD reduce production small_alg_expr -> COSINUS annot small_alg_expr
-- On MINUS reduce production small_alg_expr -> COSINUS annot small_alg_expr
-- On MIN reduce production small_alg_expr -> COSINUS annot small_alg_expr
-- On MAX reduce production small_alg_expr -> COSINUS annot small_alg_expr
-- On LRAR reduce production small_alg_expr -> COSINUS annot small_alg_expr
-- On LOG reduce production small_alg_expr -> COSINUS annot small_alg_expr
-- On LET reduce production small_alg_expr -> COSINUS annot small_alg_expr
-- On LABEL reduce production small_alg_expr -> COSINUS annot small_alg_expr
-- On INT reduce production small_alg_expr -> COSINUS annot small_alg_expr
-- On INIT reduce production small_alg_expr -> COSINUS annot small_alg_expr
-- On INFINITY reduce production small_alg_expr -> COSINUS annot small_alg_expr
-- On ID reduce production small_alg_expr -> COSINUS annot small_alg_expr
-- On GREATER reduce production small_alg_expr -> COSINUS annot small_alg_expr
-- On FLOAT reduce production small_alg_expr -> COSINUS annot small_alg_expr
-- On FALSE reduce production small_alg_expr -> COSINUS annot small_alg_expr
-- On EXPONENT reduce production small_alg_expr -> COSINUS annot small_alg_expr
-- On EVENT reduce production small_alg_expr -> COSINUS annot small_alg_expr
-- On EQUAL reduce production small_alg_expr -> COSINUS annot small_alg_expr
-- On EOF reduce production small_alg_expr -> COSINUS annot small_alg_expr
-- On EMAX reduce production small_alg_expr -> COSINUS annot small_alg_expr
-- On ELSE reduce production small_alg_expr -> COSINUS annot small_alg_expr
-- On DOT reduce production small_alg_expr -> COSINUS annot small_alg_expr
-- On DO reduce production small_alg_expr -> COSINUS annot small_alg_expr
-- On DIV reduce production small_alg_expr -> COSINUS annot small_alg_expr
-- On DIFF reduce production small_alg_expr -> COSINUS annot small_alg_expr
-- On CPUTIME reduce production small_alg_expr -> COSINUS annot small_alg_expr
-- On COSINUS reduce production small_alg_expr -> COSINUS annot small_alg_expr
-- On CONFIG reduce production small_alg_expr -> COSINUS annot small_alg_expr
-- On COMMENT reduce production small_alg_expr -> COSINUS annot small_alg_expr
-- On COMMA reduce production small_alg_expr -> COSINUS annot small_alg_expr
-- On COLON reduce production small_alg_expr -> COSINUS annot small_alg_expr
-- On CL_PAR reduce production small_alg_expr -> COSINUS annot small_alg_expr
-- On CL_CUR reduce production small_alg_expr -> COSINUS annot small_alg_expr
-- On AND reduce production small_alg_expr -> COSINUS annot small_alg_expr
-- On ABS reduce production small_alg_expr -> COSINUS annot small_alg_expr

State 216:
## Known stack suffix:
## EXPONENT annot small_alg_expr
## LR(1) items:
small_alg_expr -> EXPONENT annot small_alg_expr . [ TRUE TOKEN TMAX TIME THEN TAN STRING SQRT SPACE SMALLER SINUS SIGNATURE SEMICOLON RAR POW PLUS PLOT PIPE PERT OR OP_PAR OP_CUR OBS NULL_EVENT NEWLINE MULT MOD MINUS MIN MAX LRAR LOG LET LABEL INT INIT INFINITY ID GREATER FLOAT FALSE EXPONENT EVENT EQUAL EOF EMAX ELSE DOT DO DIV DIFF CPUTIME COSINUS CONFIG COMMENT COMMA COLON CL_PAR CL_CUR AND ABS ]
## Transitions:
## Reductions:
-- On TRUE reduce production small_alg_expr -> EXPONENT annot small_alg_expr
-- On TOKEN reduce production small_alg_expr -> EXPONENT annot small_alg_expr
-- On TMAX reduce production small_alg_expr -> EXPONENT annot small_alg_expr
-- On TIME reduce production small_alg_expr -> EXPONENT annot small_alg_expr
-- On THEN reduce production small_alg_expr -> EXPONENT annot small_alg_expr
-- On TAN reduce production small_alg_expr -> EXPONENT annot small_alg_expr
-- On STRING reduce production small_alg_expr -> EXPONENT annot small_alg_expr
-- On SQRT reduce production small_alg_expr -> EXPONENT annot small_alg_expr
-- On SPACE reduce production small_alg_expr -> EXPONENT annot small_alg_expr
-- On SMALLER reduce production small_alg_expr -> EXPONENT annot small_alg_expr
-- On SINUS reduce production small_alg_expr -> EXPONENT annot small_alg_expr
-- On SIGNATURE reduce production small_alg_expr -> EXPONENT annot small_alg_expr
-- On SEMICOLON reduce production small_alg_expr -> EXPONENT annot small_alg_expr
-- On RAR reduce production small_alg_expr -> EXPONENT annot small_alg_expr
-- On POW reduce production small_alg_expr -> EXPONENT annot small_alg_expr
-- On PLUS reduce production small_alg_expr -> EXPONENT annot small_alg_expr
-- On PLOT reduce production small_alg_expr -> EXPONENT annot small_alg_expr
-- On PIPE reduce production small_alg_expr -> EXPONENT annot small_alg_expr
-- On PERT reduce production small_alg_expr -> EXPONENT annot small_alg_expr
-- On OR reduce production small_alg_expr -> EXPONENT annot small_alg_expr
-- On OP_PAR reduce production small_alg_expr -> EXPONENT annot small_alg_expr
-- On OP_CUR reduce production small_alg_expr -> EXPONENT annot small_alg_expr
-- On OBS reduce production small_alg_expr -> EXPONENT annot small_alg_expr
-- On NULL_EVENT reduce production small_alg_expr -> EXPONENT annot small_alg_expr
-- On NEWLINE reduce production small_alg_expr -> EXPONENT annot small_alg_expr
-- On MULT reduce production small_alg_expr -> EXPONENT annot small_alg_expr
-- On MOD reduce production small_alg_expr -> EXPONENT annot small_alg_expr
-- On MINUS reduce production small_alg_expr -> EXPONENT annot small_alg_expr
-- On MIN reduce production small_alg_expr -> EXPONENT annot small_alg_expr
-- On MAX reduce production small_alg_expr -> EXPONENT annot small_alg_expr
-- On LRAR reduce production small_alg_expr -> EXPONENT annot small_alg_expr
-- On LOG reduce production small_alg_expr -> EXPONENT annot small_alg_expr
-- On LET reduce production small_alg_expr -> EXPONENT annot small_alg_expr
-- On LABEL reduce production small_alg_expr -> EXPONENT annot small_alg_expr
-- On INT reduce production small_alg_expr -> EXPONENT annot small_alg_expr
-- On INIT reduce production small_alg_expr -> EXPONENT annot small_alg_expr
-- On INFINITY reduce production small_alg_expr -> EXPONENT annot small_alg_expr
-- On ID reduce production small_alg_expr -> EXPONENT annot small_alg_expr
-- On GREATER reduce production small_alg_expr -> EXPONENT annot small_alg_expr
-- On FLOAT reduce production small_alg_expr -> EXPONENT annot small_alg_expr
-- On FALSE reduce production small_alg_expr -> EXPONENT annot small_alg_expr
-- On EXPONENT reduce production small_alg_expr -> EXPONENT annot small_alg_expr
-- On EVENT reduce production small_alg_expr -> EXPONENT annot small_alg_expr
-- On EQUAL reduce production small_alg_expr -> EXPONENT annot small_alg_expr
-- On EOF reduce production small_alg_expr -> EXPONENT annot small_alg_expr
-- On EMAX reduce production small_alg_expr -> EXPONENT annot small_alg_expr
-- On ELSE reduce production small_alg_expr -> EXPONENT annot small_alg_expr
-- On DOT reduce production small_alg_expr -> EXPONENT annot small_alg_expr
-- On DO reduce production small_alg_expr -> EXPONENT annot small_alg_expr
-- On DIV reduce production small_alg_expr -> EXPONENT annot small_alg_expr
-- On DIFF reduce production small_alg_expr -> EXPONENT annot small_alg_expr
-- On CPUTIME reduce production small_alg_expr -> EXPONENT annot small_alg_expr
-- On COSINUS reduce production small_alg_expr -> EXPONENT annot small_alg_expr
-- On CONFIG reduce production small_alg_expr -> EXPONENT annot small_alg_expr
-- On COMMENT reduce production small_alg_expr -> EXPONENT annot small_alg_expr
-- On COMMA reduce production small_alg_expr -> EXPONENT annot small_alg_expr
-- On COLON reduce production small_alg_expr -> EXPONENT annot small_alg_expr
-- On CL_PAR reduce production small_alg_expr -> EXPONENT annot small_alg_expr
-- On CL_CUR reduce production small_alg_expr -> EXPONENT annot small_alg_expr
-- On AND reduce production small_alg_expr -> EXPONENT annot small_alg_expr
-- On ABS reduce production small_alg_expr -> EXPONENT annot small_alg_expr

State 217:
## Known stack suffix:
## LOG annot small_alg_expr
## LR(1) items:
small_alg_expr -> LOG annot small_alg_expr . [ TRUE TOKEN TMAX TIME THEN TAN STRING SQRT SPACE SMALLER SINUS SIGNATURE SEMICOLON RAR POW PLUS PLOT PIPE PERT OR OP_PAR OP_CUR OBS NULL_EVENT NEWLINE MULT MOD MINUS MIN MAX LRAR LOG LET LABEL INT INIT INFINITY ID GREATER FLOAT FALSE EXPONENT EVENT EQUAL EOF EMAX ELSE DOT DO DIV DIFF CPUTIME COSINUS CONFIG COMMENT COMMA COLON CL_PAR CL_CUR AND ABS ]
## Transitions:
## Reductions:
-- On TRUE reduce production small_alg_expr -> LOG annot small_alg_expr
-- On TOKEN reduce production small_alg_expr -> LOG annot small_alg_expr
-- On TMAX reduce production small_alg_expr -> LOG annot small_alg_expr
-- On TIME reduce production small_alg_expr -> LOG annot small_alg_expr
-- On THEN reduce production small_alg_expr -> LOG annot small_alg_expr
-- On TAN reduce production small_alg_expr -> LOG annot small_alg_expr
-- On STRING reduce production small_alg_expr -> LOG annot small_alg_expr
-- On SQRT reduce production small_alg_expr -> LOG annot small_alg_expr
-- On SPACE reduce production small_alg_expr -> LOG annot small_alg_expr
-- On SMALLER reduce production small_alg_expr -> LOG annot small_alg_expr
-- On SINUS reduce production small_alg_expr -> LOG annot small_alg_expr
-- On SIGNATURE reduce production small_alg_expr -> LOG annot small_alg_expr
-- On SEMICOLON reduce production small_alg_expr -> LOG annot small_alg_expr
-- On RAR reduce production small_alg_expr -> LOG annot small_alg_expr
-- On POW reduce production small_alg_expr -> LOG annot small_alg_expr
-- On PLUS reduce production small_alg_expr -> LOG annot small_alg_expr
-- On PLOT reduce production small_alg_expr -> LOG annot small_alg_expr
-- On PIPE reduce production small_alg_expr -> LOG annot small_alg_expr
-- On PERT reduce production small_alg_expr -> LOG annot small_alg_expr
-- On OR reduce production small_alg_expr -> LOG annot small_alg_expr
-- On OP_PAR reduce production small_alg_expr -> LOG annot small_alg_expr
-- On OP_CUR reduce production small_alg_expr -> LOG annot small_alg_expr
-- On OBS reduce production small_alg_expr -> LOG annot small_alg_expr
-- On NULL_EVENT reduce production small_alg_expr -> LOG annot small_alg_expr
-- On NEWLINE reduce production small_alg_expr -> LOG annot small_alg_expr
-- On MULT reduce production small_alg_expr -> LOG annot small_alg_expr
-- On MOD reduce production small_alg_expr -> LOG annot small_alg_expr
-- On MINUS reduce production small_alg_expr -> LOG annot small_alg_expr
-- On MIN reduce production small_alg_expr -> LOG annot small_alg_expr
-- On MAX reduce production small_alg_expr -> LOG annot small_alg_expr
-- On LRAR reduce production small_alg_expr -> LOG annot small_alg_expr
-- On LOG reduce production small_alg_expr -> LOG annot small_alg_expr
-- On LET reduce production small_alg_expr -> LOG annot small_alg_expr
-- On LABEL reduce production small_alg_expr -> LOG annot small_alg_expr
-- On INT reduce production small_alg_expr -> LOG annot small_alg_expr
-- On INIT reduce production small_alg_expr -> LOG annot small_alg_expr
-- On INFINITY reduce production small_alg_expr -> LOG annot small_alg_expr
-- On ID reduce production small_alg_expr -> LOG annot small_alg_expr
-- On GREATER reduce production small_alg_expr -> LOG annot small_alg_expr
-- On FLOAT reduce production small_alg_expr -> LOG annot small_alg_expr
-- On FALSE reduce production small_alg_expr -> LOG annot small_alg_expr
-- On EXPONENT reduce production small_alg_expr -> LOG annot small_alg_expr
-- On EVENT reduce production small_alg_expr -> LOG annot small_alg_expr
-- On EQUAL reduce production small_alg_expr -> LOG annot small_alg_expr
-- On EOF reduce production small_alg_expr -> LOG annot small_alg_expr
-- On EMAX reduce production small_alg_expr -> LOG annot small_alg_expr
-- On ELSE reduce production small_alg_expr -> LOG annot small_alg_expr
-- On DOT reduce production small_alg_expr -> LOG annot small_alg_expr
-- On DO reduce production small_alg_expr -> LOG annot small_alg_expr
-- On DIV reduce production small_alg_expr -> LOG annot small_alg_expr
-- On DIFF reduce production small_alg_expr -> LOG annot small_alg_expr
-- On CPUTIME reduce production small_alg_expr -> LOG annot small_alg_expr
-- On COSINUS reduce production small_alg_expr -> LOG annot small_alg_expr
-- On CONFIG reduce production small_alg_expr -> LOG annot small_alg_expr
-- On COMMENT reduce production small_alg_expr -> LOG annot small_alg_expr
-- On COMMA reduce production small_alg_expr -> LOG annot small_alg_expr
-- On COLON reduce production small_alg_expr -> LOG annot small_alg_expr
-- On CL_PAR reduce production small_alg_expr -> LOG annot small_alg_expr
-- On CL_CUR reduce production small_alg_expr -> LOG annot small_alg_expr
-- On AND reduce production small_alg_expr -> LOG annot small_alg_expr
-- On ABS reduce production small_alg_expr -> LOG annot small_alg_expr

State 218:
## Known stack suffix:
## MAX annot small_alg_expr
## LR(1) items:
small_alg_expr -> MAX annot small_alg_expr . annot small_alg_expr [ TRUE TOKEN TMAX TIME THEN TAN STRING SQRT SPACE SMALLER SINUS SIGNATURE SEMICOLON RAR POW PLUS PLOT PIPE PERT OR OP_PAR OP_CUR OBS NULL_EVENT NEWLINE MULT MOD MINUS MIN MAX LRAR LOG LET LABEL INT INIT INFINITY ID GREATER FLOAT FALSE EXPONENT EVENT EQUAL EOF EMAX ELSE DOT DO DIV DIFF CPUTIME COSINUS CONFIG COMMENT COMMA COLON CL_PAR CL_CUR AND ABS ]
## Transitions:
-- On SPACE shift to state 2
-- On NEWLINE shift to state 3
-- On COMMENT shift to state 4
-- On annot shift to state 219
## Reductions:
-- On TMAX reduce production annot ->
-- On TIME reduce production annot ->
-- On TAN reduce production annot ->
-- On SQRT reduce production annot ->
-- On SINUS reduce production annot ->
-- On PIPE reduce production annot ->
-- On OP_PAR reduce production annot ->
-- On NULL_EVENT reduce production annot ->
-- On MINUS reduce production annot ->
-- On MIN reduce production annot ->
-- On MAX reduce production annot ->
-- On LOG reduce production annot ->
-- On LABEL reduce production annot ->
-- On INT reduce production annot ->
-- On INFINITY reduce production annot ->
-- On ID reduce production annot ->
-- On FLOAT reduce production annot ->
-- On EXPONENT reduce production annot ->
-- On EVENT reduce production annot ->
-- On EMAX reduce production annot ->
-- On CPUTIME reduce production annot ->
-- On COSINUS reduce production annot ->
-- On ABS reduce production annot ->

State 219:
## Known stack suffix:
## MAX annot small_alg_expr annot
## LR(1) items:
small_alg_expr -> MAX annot small_alg_expr annot . small_alg_expr [ TRUE TOKEN TMAX TIME THEN TAN STRING SQRT SPACE SMALLER SINUS SIGNATURE SEMICOLON RAR POW PLUS PLOT PIPE PERT OR OP_PAR OP_CUR OBS NULL_EVENT NEWLINE MULT MOD MINUS MIN MAX LRAR LOG LET LABEL INT INIT INFINITY ID GREATER FLOAT FALSE EXPONENT EVENT EQUAL EOF EMAX ELSE DOT DO DIV DIFF CPUTIME COSINUS CONFIG COMMENT COMMA COLON CL_PAR CL_CUR AND ABS ]
## Transitions:
-- On TMAX shift to state 162
-- On TIME shift to state 163
-- On TAN shift to state 164
-- On SQRT shift to state 166
-- On SINUS shift to state 168
-- On PIPE shift to state 170
-- On OP_PAR shift to state 177
-- On NULL_EVENT shift to state 182
-- On MINUS shift to state 189
-- On MIN shift to state 191
-- On MAX shift to state 193
-- On LOG shift to state 195
-- On LABEL shift to state 197
-- On INT shift to state 198
-- On INFINITY shift to state 199
-- On ID shift to state 200
-- On FLOAT shift to state 201
-- On EXPONENT shift to state 202
-- On EVENT shift to state 204
-- On EMAX shift to state 205
-- On CPUTIME shift to state 206
-- On COSINUS shift to state 207
-- On ABS shift to state 209
-- On variable shift to state 211
-- On small_alg_expr shift to state 220
-- On nbr shift to state 213
-- On constant shift to state 214
## Reductions:

State 220:
## Known stack suffix:
## MAX annot small_alg_expr annot small_alg_expr
## LR(1) items:
small_alg_expr -> MAX annot small_alg_expr annot small_alg_expr . [ TRUE TOKEN TMAX TIME THEN TAN STRING SQRT SPACE SMALLER SINUS SIGNATURE SEMICOLON RAR POW PLUS PLOT PIPE PERT OR OP_PAR OP_CUR OBS NULL_EVENT NEWLINE MULT MOD MINUS MIN MAX LRAR LOG LET LABEL INT INIT INFINITY ID GREATER FLOAT FALSE EXPONENT EVENT EQUAL EOF EMAX ELSE DOT DO DIV DIFF CPUTIME COSINUS CONFIG COMMENT COMMA COLON CL_PAR CL_CUR AND ABS ]
## Transitions:
## Reductions:
-- On TRUE reduce production small_alg_expr -> MAX annot small_alg_expr annot small_alg_expr
-- On TOKEN reduce production small_alg_expr -> MAX annot small_alg_expr annot small_alg_expr
-- On TMAX reduce production small_alg_expr -> MAX annot small_alg_expr annot small_alg_expr
-- On TIME reduce production small_alg_expr -> MAX annot small_alg_expr annot small_alg_expr
-- On THEN reduce production small_alg_expr -> MAX annot small_alg_expr annot small_alg_expr
-- On TAN reduce production small_alg_expr -> MAX annot small_alg_expr annot small_alg_expr
-- On STRING reduce production small_alg_expr -> MAX annot small_alg_expr annot small_alg_expr
-- On SQRT reduce production small_alg_expr -> MAX annot small_alg_expr annot small_alg_expr
-- On SPACE reduce production small_alg_expr -> MAX annot small_alg_expr annot small_alg_expr
-- On SMALLER reduce production small_alg_expr -> MAX annot small_alg_expr annot small_alg_expr
-- On SINUS reduce production small_alg_expr -> MAX annot small_alg_expr annot small_alg_expr
-- On SIGNATURE reduce production small_alg_expr -> MAX annot small_alg_expr annot small_alg_expr
-- On SEMICOLON reduce production small_alg_expr -> MAX annot small_alg_expr annot small_alg_expr
-- On RAR reduce production small_alg_expr -> MAX annot small_alg_expr annot small_alg_expr
-- On POW reduce production small_alg_expr -> MAX annot small_alg_expr annot small_alg_expr
-- On PLUS reduce production small_alg_expr -> MAX annot small_alg_expr annot small_alg_expr
-- On PLOT reduce production small_alg_expr -> MAX annot small_alg_expr annot small_alg_expr
-- On PIPE reduce production small_alg_expr -> MAX annot small_alg_expr annot small_alg_expr
-- On PERT reduce production small_alg_expr -> MAX annot small_alg_expr annot small_alg_expr
-- On OR reduce production small_alg_expr -> MAX annot small_alg_expr annot small_alg_expr
-- On OP_PAR reduce production small_alg_expr -> MAX annot small_alg_expr annot small_alg_expr
-- On OP_CUR reduce production small_alg_expr -> MAX annot small_alg_expr annot small_alg_expr
-- On OBS reduce production small_alg_expr -> MAX annot small_alg_expr annot small_alg_expr
-- On NULL_EVENT reduce production small_alg_expr -> MAX annot small_alg_expr annot small_alg_expr
-- On NEWLINE reduce production small_alg_expr -> MAX annot small_alg_expr annot small_alg_expr
-- On MULT reduce production small_alg_expr -> MAX annot small_alg_expr annot small_alg_expr
-- On MOD reduce production small_alg_expr -> MAX annot small_alg_expr annot small_alg_expr
-- On MINUS reduce production small_alg_expr -> MAX annot small_alg_expr annot small_alg_expr
-- On MIN reduce production small_alg_expr -> MAX annot small_alg_expr annot small_alg_expr
-- On MAX reduce production small_alg_expr -> MAX annot small_alg_expr annot small_alg_expr
-- On LRAR reduce production small_alg_expr -> MAX annot small_alg_expr annot small_alg_expr
-- On LOG reduce production small_alg_expr -> MAX annot small_alg_expr annot small_alg_expr
-- On LET reduce production small_alg_expr -> MAX annot small_alg_expr annot small_alg_expr
-- On LABEL reduce production small_alg_expr -> MAX annot small_alg_expr annot small_alg_expr
-- On INT reduce production small_alg_expr -> MAX annot small_alg_expr annot small_alg_expr
-- On INIT reduce production small_alg_expr -> MAX annot small_alg_expr annot small_alg_expr
-- On INFINITY reduce production small_alg_expr -> MAX annot small_alg_expr annot small_alg_expr
-- On ID reduce production small_alg_expr -> MAX annot small_alg_expr annot small_alg_expr
-- On GREATER reduce production small_alg_expr -> MAX annot small_alg_expr annot small_alg_expr
-- On FLOAT reduce production small_alg_expr -> MAX annot small_alg_expr annot small_alg_expr
-- On FALSE reduce production small_alg_expr -> MAX annot small_alg_expr annot small_alg_expr
-- On EXPONENT reduce production small_alg_expr -> MAX annot small_alg_expr annot small_alg_expr
-- On EVENT reduce production small_alg_expr -> MAX annot small_alg_expr annot small_alg_expr
-- On EQUAL reduce production small_alg_expr -> MAX annot small_alg_expr annot small_alg_expr
-- On EOF reduce production small_alg_expr -> MAX annot small_alg_expr annot small_alg_expr
-- On EMAX reduce production small_alg_expr -> MAX annot small_alg_expr annot small_alg_expr
-- On ELSE reduce production small_alg_expr -> MAX annot small_alg_expr annot small_alg_expr
-- On DOT reduce production small_alg_expr -> MAX annot small_alg_expr annot small_alg_expr
-- On DO reduce production small_alg_expr -> MAX annot small_alg_expr annot small_alg_expr
-- On DIV reduce production small_alg_expr -> MAX annot small_alg_expr annot small_alg_expr
-- On DIFF reduce production small_alg_expr -> MAX annot small_alg_expr annot small_alg_expr
-- On CPUTIME reduce production small_alg_expr -> MAX annot small_alg_expr annot small_alg_expr
-- On COSINUS reduce production small_alg_expr -> MAX annot small_alg_expr annot small_alg_expr
-- On CONFIG reduce production small_alg_expr -> MAX annot small_alg_expr annot small_alg_expr
-- On COMMENT reduce production small_alg_expr -> MAX annot small_alg_expr annot small_alg_expr
-- On COMMA reduce production small_alg_expr -> MAX annot small_alg_expr annot small_alg_expr
-- On COLON reduce production small_alg_expr -> MAX annot small_alg_expr annot small_alg_expr
-- On CL_PAR reduce production small_alg_expr -> MAX annot small_alg_expr annot small_alg_expr
-- On CL_CUR reduce production small_alg_expr -> MAX annot small_alg_expr annot small_alg_expr
-- On AND reduce production small_alg_expr -> MAX annot small_alg_expr annot small_alg_expr
-- On ABS reduce production small_alg_expr -> MAX annot small_alg_expr annot small_alg_expr

State 221:
## Known stack suffix:
## MIN annot small_alg_expr
## LR(1) items:
small_alg_expr -> MIN annot small_alg_expr . annot small_alg_expr [ TRUE TOKEN TMAX TIME THEN TAN STRING SQRT SPACE SMALLER SINUS SIGNATURE SEMICOLON RAR POW PLUS PLOT PIPE PERT OR OP_PAR OP_CUR OBS NULL_EVENT NEWLINE MULT MOD MINUS MIN MAX LRAR LOG LET LABEL INT INIT INFINITY ID GREATER FLOAT FALSE EXPONENT EVENT EQUAL EOF EMAX ELSE DOT DO DIV DIFF CPUTIME COSINUS CONFIG COMMENT COMMA COLON CL_PAR CL_CUR AND ABS ]
## Transitions:
-- On SPACE shift to state 2
-- On NEWLINE shift to state 3
-- On COMMENT shift to state 4
-- On annot shift to state 222
## Reductions:
-- On TMAX reduce production annot ->
-- On TIME reduce production annot ->
-- On TAN reduce production annot ->
-- On SQRT reduce production annot ->
-- On SINUS reduce production annot ->
-- On PIPE reduce production annot ->
-- On OP_PAR reduce production annot ->
-- On NULL_EVENT reduce production annot ->
-- On MINUS reduce production annot ->
-- On MIN reduce production annot ->
-- On MAX reduce production annot ->
-- On LOG reduce production annot ->
-- On LABEL reduce production annot ->
-- On INT reduce production annot ->
-- On INFINITY reduce production annot ->
-- On ID reduce production annot ->
-- On FLOAT reduce production annot ->
-- On EXPONENT reduce production annot ->
-- On EVENT reduce production annot ->
-- On EMAX reduce production annot ->
-- On CPUTIME reduce production annot ->
-- On COSINUS reduce production annot ->
-- On ABS reduce production annot ->

State 222:
## Known stack suffix:
## MIN annot small_alg_expr annot
## LR(1) items:
small_alg_expr -> MIN annot small_alg_expr annot . small_alg_expr [ TRUE TOKEN TMAX TIME THEN TAN STRING SQRT SPACE SMALLER SINUS SIGNATURE SEMICOLON RAR POW PLUS PLOT PIPE PERT OR OP_PAR OP_CUR OBS NULL_EVENT NEWLINE MULT MOD MINUS MIN MAX LRAR LOG LET LABEL INT INIT INFINITY ID GREATER FLOAT FALSE EXPONENT EVENT EQUAL EOF EMAX ELSE DOT DO DIV DIFF CPUTIME COSINUS CONFIG COMMENT COMMA COLON CL_PAR CL_CUR AND ABS ]
## Transitions:
-- On TMAX shift to state 162
-- On TIME shift to state 163
-- On TAN shift to state 164
-- On SQRT shift to state 166
-- On SINUS shift to state 168
-- On PIPE shift to state 170
-- On OP_PAR shift to state 177
-- On NULL_EVENT shift to state 182
-- On MINUS shift to state 189
-- On MIN shift to state 191
-- On MAX shift to state 193
-- On LOG shift to state 195
-- On LABEL shift to state 197
-- On INT shift to state 198
-- On INFINITY shift to state 199
-- On ID shift to state 200
-- On FLOAT shift to state 201
-- On EXPONENT shift to state 202
-- On EVENT shift to state 204
-- On EMAX shift to state 205
-- On CPUTIME shift to state 206
-- On COSINUS shift to state 207
-- On ABS shift to state 209
-- On variable shift to state 211
-- On small_alg_expr shift to state 223
-- On nbr shift to state 213
-- On constant shift to state 214
## Reductions:

State 223:
## Known stack suffix:
## MIN annot small_alg_expr annot small_alg_expr
## LR(1) items:
small_alg_expr -> MIN annot small_alg_expr annot small_alg_expr . [ TRUE TOKEN TMAX TIME THEN TAN STRING SQRT SPACE SMALLER SINUS SIGNATURE SEMICOLON RAR POW PLUS PLOT PIPE PERT OR OP_PAR OP_CUR OBS NULL_EVENT NEWLINE MULT MOD MINUS MIN MAX LRAR LOG LET LABEL INT INIT INFINITY ID GREATER FLOAT FALSE EXPONENT EVENT EQUAL EOF EMAX ELSE DOT DO DIV DIFF CPUTIME COSINUS CONFIG COMMENT COMMA COLON CL_PAR CL_CUR AND ABS ]
## Transitions:
## Reductions:
-- On TRUE reduce production small_alg_expr -> MIN annot small_alg_expr annot small_alg_expr
-- On TOKEN reduce production small_alg_expr -> MIN annot small_alg_expr annot small_alg_expr
-- On TMAX reduce production small_alg_expr -> MIN annot small_alg_expr annot small_alg_expr
-- On TIME reduce production small_alg_expr -> MIN annot small_alg_expr annot small_alg_expr
-- On THEN reduce production small_alg_expr -> MIN annot small_alg_expr annot small_alg_expr
-- On TAN reduce production small_alg_expr -> MIN annot small_alg_expr annot small_alg_expr
-- On STRING reduce production small_alg_expr -> MIN annot small_alg_expr annot small_alg_expr
-- On SQRT reduce production small_alg_expr -> MIN annot small_alg_expr annot small_alg_expr
-- On SPACE reduce production small_alg_expr -> MIN annot small_alg_expr annot small_alg_expr
-- On SMALLER reduce production small_alg_expr -> MIN annot small_alg_expr annot small_alg_expr
-- On SINUS reduce production small_alg_expr -> MIN annot small_alg_expr annot small_alg_expr
-- On SIGNATURE reduce production small_alg_expr -> MIN annot small_alg_expr annot small_alg_expr
-- On SEMICOLON reduce production small_alg_expr -> MIN annot small_alg_expr annot small_alg_expr
-- On RAR reduce production small_alg_expr -> MIN annot small_alg_expr annot small_alg_expr
-- On POW reduce production small_alg_expr -> MIN annot small_alg_expr annot small_alg_expr
-- On PLUS reduce production small_alg_expr -> MIN annot small_alg_expr annot small_alg_expr
-- On PLOT reduce production small_alg_expr -> MIN annot small_alg_expr annot small_alg_expr
-- On PIPE reduce production small_alg_expr -> MIN annot small_alg_expr annot small_alg_expr
-- On PERT reduce production small_alg_expr -> MIN annot small_alg_expr annot small_alg_expr
-- On OR reduce production small_alg_expr -> MIN annot small_alg_expr annot small_alg_expr
-- On OP_PAR reduce production small_alg_expr -> MIN annot small_alg_expr annot small_alg_expr
-- On OP_CUR reduce production small_alg_expr -> MIN annot small_alg_expr annot small_alg_expr
-- On OBS reduce production small_alg_expr -> MIN annot small_alg_expr annot small_alg_expr
-- On NULL_EVENT reduce production small_alg_expr -> MIN annot small_alg_expr annot small_alg_expr
-- On NEWLINE reduce production small_alg_expr -> MIN annot small_alg_expr annot small_alg_expr
-- On MULT reduce production small_alg_expr -> MIN annot small_alg_expr annot small_alg_expr
-- On MOD reduce production small_alg_expr -> MIN annot small_alg_expr annot small_alg_expr
-- On MINUS reduce production small_alg_expr -> MIN annot small_alg_expr annot small_alg_expr
-- On MIN reduce production small_alg_expr -> MIN annot small_alg_expr annot small_alg_expr
-- On MAX reduce production small_alg_expr -> MIN annot small_alg_expr annot small_alg_expr
-- On LRAR reduce production small_alg_expr -> MIN annot small_alg_expr annot small_alg_expr
-- On LOG reduce production small_alg_expr -> MIN annot small_alg_expr annot small_alg_expr
-- On LET reduce production small_alg_expr -> MIN annot small_alg_expr annot small_alg_expr
-- On LABEL reduce production small_alg_expr -> MIN annot small_alg_expr annot small_alg_expr
-- On INT reduce production small_alg_expr -> MIN annot small_alg_expr annot small_alg_expr
-- On INIT reduce production small_alg_expr -> MIN annot small_alg_expr annot small_alg_expr
-- On INFINITY reduce production small_alg_expr -> MIN annot small_alg_expr annot small_alg_expr
-- On ID reduce production small_alg_expr -> MIN annot small_alg_expr annot small_alg_expr
-- On GREATER reduce production small_alg_expr -> MIN annot small_alg_expr annot small_alg_expr
-- On FLOAT reduce production small_alg_expr -> MIN annot small_alg_expr annot small_alg_expr
-- On FALSE reduce production small_alg_expr -> MIN annot small_alg_expr annot small_alg_expr
-- On EXPONENT reduce production small_alg_expr -> MIN annot small_alg_expr annot small_alg_expr
-- On EVENT reduce production small_alg_expr -> MIN annot small_alg_expr annot small_alg_expr
-- On EQUAL reduce production small_alg_expr -> MIN annot small_alg_expr annot small_alg_expr
-- On EOF reduce production small_alg_expr -> MIN annot small_alg_expr annot small_alg_expr
-- On EMAX reduce production small_alg_expr -> MIN annot small_alg_expr annot small_alg_expr
-- On ELSE reduce production small_alg_expr -> MIN annot small_alg_expr annot small_alg_expr
-- On DOT reduce production small_alg_expr -> MIN annot small_alg_expr annot small_alg_expr
-- On DO reduce production small_alg_expr -> MIN annot small_alg_expr annot small_alg_expr
-- On DIV reduce production small_alg_expr -> MIN annot small_alg_expr annot small_alg_expr
-- On DIFF reduce production small_alg_expr -> MIN annot small_alg_expr annot small_alg_expr
-- On CPUTIME reduce production small_alg_expr -> MIN annot small_alg_expr annot small_alg_expr
-- On COSINUS reduce production small_alg_expr -> MIN annot small_alg_expr annot small_alg_expr
-- On CONFIG reduce production small_alg_expr -> MIN annot small_alg_expr annot small_alg_expr
-- On COMMENT reduce production small_alg_expr -> MIN annot small_alg_expr annot small_alg_expr
-- On COMMA reduce production small_alg_expr -> MIN annot small_alg_expr annot small_alg_expr
-- On COLON reduce production small_alg_expr -> MIN annot small_alg_expr annot small_alg_expr
-- On CL_PAR reduce production small_alg_expr -> MIN annot small_alg_expr annot small_alg_expr
-- On CL_CUR reduce production small_alg_expr -> MIN annot small_alg_expr annot small_alg_expr
-- On AND reduce production small_alg_expr -> MIN annot small_alg_expr annot small_alg_expr
-- On ABS reduce production small_alg_expr -> MIN annot small_alg_expr annot small_alg_expr

State 224:
## Known stack suffix:
## MINUS annot small_alg_expr
## LR(1) items:
small_alg_expr -> MINUS annot small_alg_expr . [ TRUE TOKEN TMAX TIME THEN TAN STRING SQRT SPACE SMALLER SINUS SIGNATURE SEMICOLON RAR POW PLUS PLOT PIPE PERT OR OP_PAR OP_CUR OBS NULL_EVENT NEWLINE MULT MOD MINUS MIN MAX LRAR LOG LET LABEL INT INIT INFINITY ID GREATER FLOAT FALSE EXPONENT EVENT EQUAL EOF EMAX ELSE DOT DO DIV DIFF CPUTIME COSINUS CONFIG COMMENT COMMA COLON CL_PAR CL_CUR AND ABS ]
## Transitions:
## Reductions:
-- On TRUE reduce production small_alg_expr -> MINUS annot small_alg_expr
-- On TOKEN reduce production small_alg_expr -> MINUS annot small_alg_expr
-- On TMAX reduce production small_alg_expr -> MINUS annot small_alg_expr
-- On TIME reduce production small_alg_expr -> MINUS annot small_alg_expr
-- On THEN reduce production small_alg_expr -> MINUS annot small_alg_expr
-- On TAN reduce production small_alg_expr -> MINUS annot small_alg_expr
-- On STRING reduce production small_alg_expr -> MINUS annot small_alg_expr
-- On SQRT reduce production small_alg_expr -> MINUS annot small_alg_expr
-- On SPACE reduce production small_alg_expr -> MINUS annot small_alg_expr
-- On SMALLER reduce production small_alg_expr -> MINUS annot small_alg_expr
-- On SINUS reduce production small_alg_expr -> MINUS annot small_alg_expr
-- On SIGNATURE reduce production small_alg_expr -> MINUS annot small_alg_expr
-- On SEMICOLON reduce production small_alg_expr -> MINUS annot small_alg_expr
-- On RAR reduce production small_alg_expr -> MINUS annot small_alg_expr
-- On POW reduce production small_alg_expr -> MINUS annot small_alg_expr
-- On PLUS reduce production small_alg_expr -> MINUS annot small_alg_expr
-- On PLOT reduce production small_alg_expr -> MINUS annot small_alg_expr
-- On PIPE reduce production small_alg_expr -> MINUS annot small_alg_expr
-- On PERT reduce production small_alg_expr -> MINUS annot small_alg_expr
-- On OR reduce production small_alg_expr -> MINUS annot small_alg_expr
-- On OP_PAR reduce production small_alg_expr -> MINUS annot small_alg_expr
-- On OP_CUR reduce production small_alg_expr -> MINUS annot small_alg_expr
-- On OBS reduce production small_alg_expr -> MINUS annot small_alg_expr
-- On NULL_EVENT reduce production small_alg_expr -> MINUS annot small_alg_expr
-- On NEWLINE reduce production small_alg_expr -> MINUS annot small_alg_expr
-- On MULT reduce production small_alg_expr -> MINUS annot small_alg_expr
-- On MOD reduce production small_alg_expr -> MINUS annot small_alg_expr
-- On MINUS reduce production small_alg_expr -> MINUS annot small_alg_expr
-- On MIN reduce production small_alg_expr -> MINUS annot small_alg_expr
-- On MAX reduce production small_alg_expr -> MINUS annot small_alg_expr
-- On LRAR reduce production small_alg_expr -> MINUS annot small_alg_expr
-- On LOG reduce production small_alg_expr -> MINUS annot small_alg_expr
-- On LET reduce production small_alg_expr -> MINUS annot small_alg_expr
-- On LABEL reduce production small_alg_expr -> MINUS annot small_alg_expr
-- On INT reduce production small_alg_expr -> MINUS annot small_alg_expr
-- On INIT reduce production small_alg_expr -> MINUS annot small_alg_expr
-- On INFINITY reduce production small_alg_expr -> MINUS annot small_alg_expr
-- On ID reduce production small_alg_expr -> MINUS annot small_alg_expr
-- On GREATER reduce production small_alg_expr -> MINUS annot small_alg_expr
-- On FLOAT reduce production small_alg_expr -> MINUS annot small_alg_expr
-- On FALSE reduce production small_alg_expr -> MINUS annot small_alg_expr
-- On EXPONENT reduce production small_alg_expr -> MINUS annot small_alg_expr
-- On EVENT reduce production small_alg_expr -> MINUS annot small_alg_expr
-- On EQUAL reduce production small_alg_expr -> MINUS annot small_alg_expr
-- On EOF reduce production small_alg_expr -> MINUS annot small_alg_expr
-- On EMAX reduce production small_alg_expr -> MINUS annot small_alg_expr
-- On ELSE reduce production small_alg_expr -> MINUS annot small_alg_expr
-- On DOT reduce production small_alg_expr -> MINUS annot small_alg_expr
-- On DO reduce production small_alg_expr -> MINUS annot small_alg_expr
-- On DIV reduce production small_alg_expr -> MINUS annot small_alg_expr
-- On DIFF reduce production small_alg_expr -> MINUS annot small_alg_expr
-- On CPUTIME reduce production small_alg_expr -> MINUS annot small_alg_expr
-- On COSINUS reduce production small_alg_expr -> MINUS annot small_alg_expr
-- On CONFIG reduce production small_alg_expr -> MINUS annot small_alg_expr
-- On COMMENT reduce production small_alg_expr -> MINUS annot small_alg_expr
-- On COMMA reduce production small_alg_expr -> MINUS annot small_alg_expr
-- On COLON reduce production small_alg_expr -> MINUS annot small_alg_expr
-- On CL_PAR reduce production small_alg_expr -> MINUS annot small_alg_expr
-- On CL_CUR reduce production small_alg_expr -> MINUS annot small_alg_expr
-- On AND reduce production small_alg_expr -> MINUS annot small_alg_expr
-- On ABS reduce production small_alg_expr -> MINUS annot small_alg_expr

State 225:
## Known stack suffix:
## FALSE
## LR(1) items:
small_bool_expr -> FALSE . [ TOKEN THEN SPACE SIGNATURE SEMICOLON RAR PLOT PIPE PERT OR OBS NEWLINE LRAR LET LABEL INIT ID EOF DOT DO CONFIG COMMENT CL_PAR AND ]
## Transitions:
## Reductions:
-- On TOKEN reduce production small_bool_expr -> FALSE
-- On THEN reduce production small_bool_expr -> FALSE
-- On SPACE reduce production small_bool_expr -> FALSE
-- On SIGNATURE reduce production small_bool_expr -> FALSE
-- On SEMICOLON reduce production small_bool_expr -> FALSE
-- On RAR reduce production small_bool_expr -> FALSE
-- On PLOT reduce production small_bool_expr -> FALSE
-- On PIPE reduce production small_bool_expr -> FALSE
-- On PERT reduce production small_bool_expr -> FALSE
-- On OR reduce production small_bool_expr -> FALSE
-- On OBS reduce production small_bool_expr -> FALSE
-- On NEWLINE reduce production small_bool_expr -> FALSE
-- On LRAR reduce production small_bool_expr -> FALSE
-- On LET reduce production small_bool_expr -> FALSE
-- On LABEL reduce production small_bool_expr -> FALSE
-- On INIT reduce production small_bool_expr -> FALSE
-- On ID reduce production small_bool_expr -> FALSE
-- On EOF reduce production small_bool_expr -> FALSE
-- On DOT reduce production small_bool_expr -> FALSE
-- On DO reduce production small_bool_expr -> FALSE
-- On CONFIG reduce production small_bool_expr -> FALSE
-- On COMMENT reduce production small_bool_expr -> FALSE
-- On CL_PAR reduce production small_bool_expr -> FALSE
-- On AND reduce production small_bool_expr -> FALSE

State 226:
## Known stack suffix:
## small_bool_expr
## LR(1) items:
bool_expr_comp -> small_bool_expr . annot [ TOKEN THEN SIGNATURE SEMICOLON RAR PLOT PIPE PERT OR OBS LRAR LET LABEL INIT ID EOF DOT DO CONFIG CL_PAR AND ]
## Transitions:
-- On SPACE shift to state 2
-- On NEWLINE shift to state 3
-- On COMMENT shift to state 4
-- On annot shift to state 227
## Reductions:
-- On TOKEN reduce production annot ->
-- On THEN reduce production annot ->
-- On SIGNATURE reduce production annot ->
-- On SEMICOLON reduce production annot ->
-- On RAR reduce production annot ->
-- On PLOT reduce production annot ->
-- On PIPE reduce production annot ->
-- On PERT reduce production annot ->
-- On OR reduce production annot ->
-- On OBS reduce production annot ->
-- On LRAR reduce production annot ->
-- On LET reduce production annot ->
-- On LABEL reduce production annot ->
-- On INIT reduce production annot ->
-- On ID reduce production annot ->
-- On EOF reduce production annot ->
-- On DOT reduce production annot ->
-- On DO reduce production annot ->
-- On CONFIG reduce production annot ->
-- On CL_PAR reduce production annot ->
-- On AND reduce production annot ->

State 227:
## Known stack suffix:
## small_bool_expr annot
## LR(1) items:
bool_expr_comp -> small_bool_expr annot . [ TOKEN THEN SIGNATURE SEMICOLON RAR PLOT PIPE PERT OR OBS LRAR LET LABEL INIT ID EOF DOT DO CONFIG CL_PAR AND ]
## Transitions:
## Reductions:
-- On TOKEN reduce production bool_expr_comp -> small_bool_expr annot
-- On THEN reduce production bool_expr_comp -> small_bool_expr annot
-- On SIGNATURE reduce production bool_expr_comp -> small_bool_expr annot
-- On SEMICOLON reduce production bool_expr_comp -> small_bool_expr annot
-- On RAR reduce production bool_expr_comp -> small_bool_expr annot
-- On PLOT reduce production bool_expr_comp -> small_bool_expr annot
-- On PIPE reduce production bool_expr_comp -> small_bool_expr annot
-- On PERT reduce production bool_expr_comp -> small_bool_expr annot
-- On OR reduce production bool_expr_comp -> small_bool_expr annot
-- On OBS reduce production bool_expr_comp -> small_bool_expr annot
-- On LRAR reduce production bool_expr_comp -> small_bool_expr annot
-- On LET reduce production bool_expr_comp -> small_bool_expr annot
-- On LABEL reduce production bool_expr_comp -> small_bool_expr annot
-- On INIT reduce production bool_expr_comp -> small_bool_expr annot
-- On ID reduce production bool_expr_comp -> small_bool_expr annot
-- On EOF reduce production bool_expr_comp -> small_bool_expr annot
-- On DOT reduce production bool_expr_comp -> small_bool_expr annot
-- On DO reduce production bool_expr_comp -> small_bool_expr annot
-- On CONFIG reduce production bool_expr_comp -> small_bool_expr annot
-- On CL_PAR reduce production bool_expr_comp -> small_bool_expr annot
-- On AND reduce production bool_expr_comp -> small_bool_expr annot

State 228:
## Known stack suffix:
## small_alg_expr
## LR(1) items:
alg_expr_up_to_mod -> small_alg_expr . annot [ TRUE TOKEN THEN STRING SMALLER SIGNATURE SEMICOLON RAR PLUS PLOT PIPE PERT OR OP_PAR OP_CUR OBS MULT MOD MINUS LRAR LET LABEL INIT ID GREATER FALSE EQUAL EOF ELSE DOT DO DIV DIFF CONFIG COMMA COLON CL_PAR CL_CUR AND ]
alg_expr_up_to_mod -> small_alg_expr . annot POW annot alg_expr_up_to_mod [ TRUE TOKEN THEN STRING SMALLER SIGNATURE SEMICOLON RAR PLUS PLOT PIPE PERT OR OP_PAR OP_CUR OBS MULT MOD MINUS LRAR LET LABEL INIT ID GREATER FALSE EQUAL EOF ELSE DOT DO DIV DIFF CONFIG COMMA COLON CL_PAR CL_CUR AND ]
## Transitions:
-- On SPACE shift to state 2
-- On NEWLINE shift to state 3
-- On COMMENT shift to state 4
-- On annot shift to state 229
## Reductions:
-- On TRUE reduce production annot ->
-- On TOKEN reduce production annot ->
-- On THEN reduce production annot ->
-- On STRING reduce production annot ->
-- On SMALLER reduce production annot ->
-- On SIGNATURE reduce production annot ->
-- On SEMICOLON reduce production annot ->
-- On RAR reduce production annot ->
-- On POW reduce production annot ->
-- On PLUS reduce production annot ->
-- On PLOT reduce production annot ->
-- On PIPE reduce production annot ->
-- On PERT reduce production annot ->
-- On OR reduce production annot ->
-- On OP_PAR reduce production annot ->
-- On OP_CUR reduce production annot ->
-- On OBS reduce production annot ->
-- On MULT reduce production annot ->
-- On MOD reduce production annot ->
-- On MINUS reduce production annot ->
-- On LRAR reduce production annot ->
-- On LET reduce production annot ->
-- On LABEL reduce production annot ->
-- On INIT reduce production annot ->
-- On ID reduce production annot ->
-- On GREATER reduce production annot ->
-- On FALSE reduce production annot ->
-- On EQUAL reduce production annot ->
-- On EOF reduce production annot ->
-- On ELSE reduce production annot ->
-- On DOT reduce production annot ->
-- On DO reduce production annot ->
-- On DIV reduce production annot ->
-- On DIFF reduce production annot ->
-- On CONFIG reduce production annot ->
-- On COMMA reduce production annot ->
-- On COLON reduce production annot ->
-- On CL_PAR reduce production annot ->
-- On CL_CUR reduce production annot ->
-- On AND reduce production annot ->

State 229:
## Known stack suffix:
## small_alg_expr annot
## LR(1) items:
alg_expr_up_to_mod -> small_alg_expr annot . [ TRUE TOKEN THEN STRING SMALLER SIGNATURE SEMICOLON RAR PLUS PLOT PIPE PERT OR OP_PAR OP_CUR OBS MULT MOD MINUS LRAR LET LABEL INIT ID GREATER FALSE EQUAL EOF ELSE DOT DO DIV DIFF CONFIG COMMA COLON CL_PAR CL_CUR AND ]
alg_expr_up_to_mod -> small_alg_expr annot . POW annot alg_expr_up_to_mod [ TRUE TOKEN THEN STRING SMALLER SIGNATURE SEMICOLON RAR PLUS PLOT PIPE PERT OR OP_PAR OP_CUR OBS MULT MOD MINUS LRAR LET LABEL INIT ID GREATER FALSE EQUAL EOF ELSE DOT DO DIV DIFF CONFIG COMMA COLON CL_PAR CL_CUR AND ]
## Transitions:
-- On POW shift to state 230
## Reductions:
-- On TRUE reduce production alg_expr_up_to_mod -> small_alg_expr annot
-- On TOKEN reduce production alg_expr_up_to_mod -> small_alg_expr annot
-- On THEN reduce production alg_expr_up_to_mod -> small_alg_expr annot
-- On STRING reduce production alg_expr_up_to_mod -> small_alg_expr annot
-- On SMALLER reduce production alg_expr_up_to_mod -> small_alg_expr annot
-- On SIGNATURE reduce production alg_expr_up_to_mod -> small_alg_expr annot
-- On SEMICOLON reduce production alg_expr_up_to_mod -> small_alg_expr annot
-- On RAR reduce production alg_expr_up_to_mod -> small_alg_expr annot
-- On PLUS reduce production alg_expr_up_to_mod -> small_alg_expr annot
-- On PLOT reduce production alg_expr_up_to_mod -> small_alg_expr annot
-- On PIPE reduce production alg_expr_up_to_mod -> small_alg_expr annot
-- On PERT reduce production alg_expr_up_to_mod -> small_alg_expr annot
-- On OR reduce production alg_expr_up_to_mod -> small_alg_expr annot
-- On OP_PAR reduce production alg_expr_up_to_mod -> small_alg_expr annot
-- On OP_CUR reduce production alg_expr_up_to_mod -> small_alg_expr annot
-- On OBS reduce production alg_expr_up_to_mod -> small_alg_expr annot
-- On MULT reduce production alg_expr_up_to_mod -> small_alg_expr annot
-- On MOD reduce production alg_expr_up_to_mod -> small_alg_expr annot
-- On MINUS reduce production alg_expr_up_to_mod -> small_alg_expr annot
-- On LRAR reduce production alg_expr_up_to_mod -> small_alg_expr annot
-- On LET reduce production alg_expr_up_to_mod -> small_alg_expr annot
-- On LABEL reduce production alg_expr_up_to_mod -> small_alg_expr annot
-- On INIT reduce production alg_expr_up_to_mod -> small_alg_expr annot
-- On ID reduce production alg_expr_up_to_mod -> small_alg_expr annot
-- On GREATER reduce production alg_expr_up_to_mod -> small_alg_expr annot
-- On FALSE reduce production alg_expr_up_to_mod -> small_alg_expr annot
-- On EQUAL reduce production alg_expr_up_to_mod -> small_alg_expr annot
-- On EOF reduce production alg_expr_up_to_mod -> small_alg_expr annot
-- On ELSE reduce production alg_expr_up_to_mod -> small_alg_expr annot
-- On DOT reduce production alg_expr_up_to_mod -> small_alg_expr annot
-- On DO reduce production alg_expr_up_to_mod -> small_alg_expr annot
-- On DIV reduce production alg_expr_up_to_mod -> small_alg_expr annot
-- On DIFF reduce production alg_expr_up_to_mod -> small_alg_expr annot
-- On CONFIG reduce production alg_expr_up_to_mod -> small_alg_expr annot
-- On COMMA reduce production alg_expr_up_to_mod -> small_alg_expr annot
-- On COLON reduce production alg_expr_up_to_mod -> small_alg_expr annot
-- On CL_PAR reduce production alg_expr_up_to_mod -> small_alg_expr annot
-- On CL_CUR reduce production alg_expr_up_to_mod -> small_alg_expr annot
-- On AND reduce production alg_expr_up_to_mod -> small_alg_expr annot

State 230:
## Known stack suffix:
## small_alg_expr annot POW
## LR(1) items:
alg_expr_up_to_mod -> small_alg_expr annot POW . annot alg_expr_up_to_mod [ TRUE TOKEN THEN STRING SMALLER SIGNATURE SEMICOLON RAR PLUS PLOT PIPE PERT OR OP_PAR OP_CUR OBS MULT MOD MINUS LRAR LET LABEL INIT ID GREATER FALSE EQUAL EOF ELSE DOT DO DIV DIFF CONFIG COMMA COLON CL_PAR CL_CUR AND ]
## Transitions:
-- On SPACE shift to state 2
-- On NEWLINE shift to state 3
-- On COMMENT shift to state 4
-- On annot shift to state 231
## Reductions:
-- On TMAX reduce production annot ->
-- On TIME reduce production annot ->
-- On TAN reduce production annot ->
-- On SQRT reduce production annot ->
-- On SINUS reduce production annot ->
-- On PIPE reduce production annot ->
-- On OP_PAR reduce production annot ->
-- On NULL_EVENT reduce production annot ->
-- On MINUS reduce production annot ->
-- On MIN reduce production annot ->
-- On MAX reduce production annot ->
-- On LOG reduce production annot ->
-- On LABEL reduce production annot ->
-- On INT reduce production annot ->
-- On INFINITY reduce production annot ->
-- On ID reduce production annot ->
-- On FLOAT reduce production annot ->
-- On EXPONENT reduce production annot ->
-- On EVENT reduce production annot ->
-- On EMAX reduce production annot ->
-- On CPUTIME reduce production annot ->
-- On COSINUS reduce production annot ->
-- On ABS reduce production annot ->

State 231:
## Known stack suffix:
## small_alg_expr annot POW annot
## LR(1) items:
alg_expr_up_to_mod -> small_alg_expr annot POW annot . alg_expr_up_to_mod [ TRUE TOKEN THEN STRING SMALLER SIGNATURE SEMICOLON RAR PLUS PLOT PIPE PERT OR OP_PAR OP_CUR OBS MULT MOD MINUS LRAR LET LABEL INIT ID GREATER FALSE EQUAL EOF ELSE DOT DO DIV DIFF CONFIG COMMA COLON CL_PAR CL_CUR AND ]
## Transitions:
-- On TMAX shift to state 162
-- On TIME shift to state 163
-- On TAN shift to state 164
-- On SQRT shift to state 166
-- On SINUS shift to state 168
-- On PIPE shift to state 170
-- On OP_PAR shift to state 177
-- On NULL_EVENT shift to state 182
-- On MINUS shift to state 189
-- On MIN shift to state 191
-- On MAX shift to state 193
-- On LOG shift to state 195
-- On LABEL shift to state 197
-- On INT shift to state 198
-- On INFINITY shift to state 199
-- On ID shift to state 200
-- On FLOAT shift to state 201
-- On EXPONENT shift to state 202
-- On EVENT shift to state 204
-- On EMAX shift to state 205
-- On CPUTIME shift to state 206
-- On COSINUS shift to state 207
-- On ABS shift to state 209
-- On variable shift to state 211
-- On small_alg_expr shift to state 228
-- On nbr shift to state 213
-- On constant shift to state 214
-- On alg_expr_up_to_mod shift to state 232
## Reductions:

State 232:
## Known stack suffix:
## small_alg_expr annot POW annot alg_expr_up_to_mod
## LR(1) items:
alg_expr_up_to_mod -> small_alg_expr annot POW annot alg_expr_up_to_mod . [ TRUE TOKEN THEN STRING SMALLER SIGNATURE SEMICOLON RAR PLUS PLOT PIPE PERT OR OP_PAR OP_CUR OBS MULT MOD MINUS LRAR LET LABEL INIT ID GREATER FALSE EQUAL EOF ELSE DOT DO DIV DIFF CONFIG COMMA COLON CL_PAR CL_CUR AND ]
## Transitions:
## Reductions:
-- On TRUE reduce production alg_expr_up_to_mod -> small_alg_expr annot POW annot alg_expr_up_to_mod
-- On TOKEN reduce production alg_expr_up_to_mod -> small_alg_expr annot POW annot alg_expr_up_to_mod
-- On THEN reduce production alg_expr_up_to_mod -> small_alg_expr annot POW annot alg_expr_up_to_mod
-- On STRING reduce production alg_expr_up_to_mod -> small_alg_expr annot POW annot alg_expr_up_to_mod
-- On SMALLER reduce production alg_expr_up_to_mod -> small_alg_expr annot POW annot alg_expr_up_to_mod
-- On SIGNATURE reduce production alg_expr_up_to_mod -> small_alg_expr annot POW annot alg_expr_up_to_mod
-- On SEMICOLON reduce production alg_expr_up_to_mod -> small_alg_expr annot POW annot alg_expr_up_to_mod
-- On RAR reduce production alg_expr_up_to_mod -> small_alg_expr annot POW annot alg_expr_up_to_mod
-- On PLUS reduce production alg_expr_up_to_mod -> small_alg_expr annot POW annot alg_expr_up_to_mod
-- On PLOT reduce production alg_expr_up_to_mod -> small_alg_expr annot POW annot alg_expr_up_to_mod
-- On PIPE reduce production alg_expr_up_to_mod -> small_alg_expr annot POW annot alg_expr_up_to_mod
-- On PERT reduce production alg_expr_up_to_mod -> small_alg_expr annot POW annot alg_expr_up_to_mod
-- On OR reduce production alg_expr_up_to_mod -> small_alg_expr annot POW annot alg_expr_up_to_mod
-- On OP_PAR reduce production alg_expr_up_to_mod -> small_alg_expr annot POW annot alg_expr_up_to_mod
-- On OP_CUR reduce production alg_expr_up_to_mod -> small_alg_expr annot POW annot alg_expr_up_to_mod
-- On OBS reduce production alg_expr_up_to_mod -> small_alg_expr annot POW annot alg_expr_up_to_mod
-- On MULT reduce production alg_expr_up_to_mod -> small_alg_expr annot POW annot alg_expr_up_to_mod
-- On MOD reduce production alg_expr_up_to_mod -> small_alg_expr annot POW annot alg_expr_up_to_mod
-- On MINUS reduce production alg_expr_up_to_mod -> small_alg_expr annot POW annot alg_expr_up_to_mod
-- On LRAR reduce production alg_expr_up_to_mod -> small_alg_expr annot POW annot alg_expr_up_to_mod
-- On LET reduce production alg_expr_up_to_mod -> small_alg_expr annot POW annot alg_expr_up_to_mod
-- On LABEL reduce production alg_expr_up_to_mod -> small_alg_expr annot POW annot alg_expr_up_to_mod
-- On INIT reduce production alg_expr_up_to_mod -> small_alg_expr annot POW annot alg_expr_up_to_mod
-- On ID reduce production alg_expr_up_to_mod -> small_alg_expr annot POW annot alg_expr_up_to_mod
-- On GREATER reduce production alg_expr_up_to_mod -> small_alg_expr annot POW annot alg_expr_up_to_mod
-- On FALSE reduce production alg_expr_up_to_mod -> small_alg_expr annot POW annot alg_expr_up_to_mod
-- On EQUAL reduce production alg_expr_up_to_mod -> small_alg_expr annot POW annot alg_expr_up_to_mod
-- On EOF reduce production alg_expr_up_to_mod -> small_alg_expr annot POW annot alg_expr_up_to_mod
-- On ELSE reduce production alg_expr_up_to_mod -> small_alg_expr annot POW annot alg_expr_up_to_mod
-- On DOT reduce production alg_expr_up_to_mod -> small_alg_expr annot POW annot alg_expr_up_to_mod
-- On DO reduce production alg_expr_up_to_mod -> small_alg_expr annot POW annot alg_expr_up_to_mod
-- On DIV reduce production alg_expr_up_to_mod -> small_alg_expr annot POW annot alg_expr_up_to_mod
-- On DIFF reduce production alg_expr_up_to_mod -> small_alg_expr annot POW annot alg_expr_up_to_mod
-- On CONFIG reduce production alg_expr_up_to_mod -> small_alg_expr annot POW annot alg_expr_up_to_mod
-- On COMMA reduce production alg_expr_up_to_mod -> small_alg_expr annot POW annot alg_expr_up_to_mod
-- On COLON reduce production alg_expr_up_to_mod -> small_alg_expr annot POW annot alg_expr_up_to_mod
-- On CL_PAR reduce production alg_expr_up_to_mod -> small_alg_expr annot POW annot alg_expr_up_to_mod
-- On CL_CUR reduce production alg_expr_up_to_mod -> small_alg_expr annot POW annot alg_expr_up_to_mod
-- On AND reduce production alg_expr_up_to_mod -> small_alg_expr annot POW annot alg_expr_up_to_mod

State 233:
## Known stack suffix:
## bool_expr_no_or
## LR(1) items:
bool_expr -> bool_expr_no_or . [ TOKEN THEN SIGNATURE SEMICOLON RAR PLOT PIPE PERT OBS LRAR LET LABEL INIT ID EOF DOT DO CONFIG CL_PAR ]
bool_expr -> bool_expr_no_or . OR annot bool_expr [ TOKEN THEN SIGNATURE SEMICOLON RAR PLOT PIPE PERT OBS LRAR LET LABEL INIT ID EOF DOT DO CONFIG CL_PAR ]
## Transitions:
-- On OR shift to state 234
## Reductions:
-- On TOKEN reduce production bool_expr -> bool_expr_no_or
-- On THEN reduce production bool_expr -> bool_expr_no_or
-- On SIGNATURE reduce production bool_expr -> bool_expr_no_or
-- On SEMICOLON reduce production bool_expr -> bool_expr_no_or
-- On RAR reduce production bool_expr -> bool_expr_no_or
-- On PLOT reduce production bool_expr -> bool_expr_no_or
-- On PIPE reduce production bool_expr -> bool_expr_no_or
-- On PERT reduce production bool_expr -> bool_expr_no_or
-- On OBS reduce production bool_expr -> bool_expr_no_or
-- On LRAR reduce production bool_expr -> bool_expr_no_or
-- On LET reduce production bool_expr -> bool_expr_no_or
-- On LABEL reduce production bool_expr -> bool_expr_no_or
-- On INIT reduce production bool_expr -> bool_expr_no_or
-- On ID reduce production bool_expr -> bool_expr_no_or
-- On EOF reduce production bool_expr -> bool_expr_no_or
-- On DOT reduce production bool_expr -> bool_expr_no_or
-- On DO reduce production bool_expr -> bool_expr_no_or
-- On CONFIG reduce production bool_expr -> bool_expr_no_or
-- On CL_PAR reduce production bool_expr -> bool_expr_no_or

State 234:
## Known stack suffix:
## bool_expr_no_or OR
## LR(1) items:
bool_expr -> bool_expr_no_or OR . annot bool_expr [ TOKEN THEN SIGNATURE SEMICOLON RAR PLOT PIPE PERT OBS LRAR LET LABEL INIT ID EOF DOT DO CONFIG CL_PAR ]
## Transitions:
-- On SPACE shift to state 2
-- On NEWLINE shift to state 3
-- On COMMENT shift to state 4
-- On annot shift to state 235
## Reductions:
-- On TRUE reduce production annot ->
-- On TMAX reduce production annot ->
-- On TIME reduce production annot ->
-- On TAN reduce production annot ->
-- On SQRT reduce production annot ->
-- On SINUS reduce production annot ->
-- On PIPE reduce production annot ->
-- On OP_PAR reduce production annot ->
-- On NULL_EVENT reduce production annot ->
-- On NOT reduce production annot ->
-- On MINUS reduce production annot ->
-- On MIN reduce production annot ->
-- On MAX reduce production annot ->
-- On LOG reduce production annot ->
-- On LABEL reduce production annot ->
-- On INT reduce production annot ->
-- On INFINITY reduce production annot ->
-- On ID reduce production annot ->
-- On FLOAT reduce production annot ->
-- On FALSE reduce production annot ->
-- On EXPONENT reduce production annot ->
-- On EVENT reduce production annot ->
-- On EMAX reduce production annot ->
-- On CPUTIME reduce production annot ->
-- On COSINUS reduce production annot ->
-- On ABS reduce production annot ->

State 235:
## Known stack suffix:
## bool_expr_no_or OR annot
## LR(1) items:
bool_expr -> bool_expr_no_or OR annot . bool_expr [ TOKEN THEN SIGNATURE SEMICOLON RAR PLOT PIPE PERT OBS LRAR LET LABEL INIT ID EOF DOT DO CONFIG CL_PAR ]
## Transitions:
-- On TRUE shift to state 179
-- On TMAX shift to state 162
-- On TIME shift to state 163
-- On TAN shift to state 164
-- On SQRT shift to state 166
-- On SINUS shift to state 168
-- On PIPE shift to state 170
-- On OP_PAR shift to state 187
-- On NULL_EVENT shift to state 182
-- On NOT shift to state 183
-- On MINUS shift to state 189
-- On MIN shift to state 191
-- On MAX shift to state 193
-- On LOG shift to state 195
-- On LABEL shift to state 197
-- On INT shift to state 198
-- On INFINITY shift to state 199
-- On ID shift to state 200
-- On FLOAT shift to state 201
-- On FALSE shift to state 225
-- On EXPONENT shift to state 202
-- On EVENT shift to state 204
-- On EMAX shift to state 205
-- On CPUTIME shift to state 206
-- On COSINUS shift to state 207
-- On ABS shift to state 209
-- On variable shift to state 211
-- On small_bool_expr shift to state 226
-- On small_alg_expr shift to state 228
-- On nbr shift to state 213
-- On constant shift to state 214
-- On bool_expr_no_or shift to state 233
-- On bool_expr_comp shift to state 236
-- On bool_expr shift to state 280
-- On alg_expr_up_to_sum shift to state 240
-- On alg_expr_up_to_prod shift to state 251
-- On alg_expr_up_to_mod shift to state 247
-- On alg_expr_up_to_if shift to state 252
## Reductions:

State 236:
## Known stack suffix:
## bool_expr_comp
## LR(1) items:
bool_expr_no_or -> bool_expr_comp . [ TOKEN THEN SIGNATURE SEMICOLON RAR PLOT PIPE PERT OR OBS LRAR LET LABEL INIT ID EOF DOT DO CONFIG CL_PAR ]
bool_expr_no_or -> bool_expr_comp . AND annot bool_expr_no_or [ TOKEN THEN SIGNATURE SEMICOLON RAR PLOT PIPE PERT OR OBS LRAR LET LABEL INIT ID EOF DOT DO CONFIG CL_PAR ]
## Transitions:
-- On AND shift to state 237
## Reductions:
-- On TOKEN reduce production bool_expr_no_or -> bool_expr_comp
-- On THEN reduce production bool_expr_no_or -> bool_expr_comp
-- On SIGNATURE reduce production bool_expr_no_or -> bool_expr_comp
-- On SEMICOLON reduce production bool_expr_no_or -> bool_expr_comp
-- On RAR reduce production bool_expr_no_or -> bool_expr_comp
-- On PLOT reduce production bool_expr_no_or -> bool_expr_comp
-- On PIPE reduce production bool_expr_no_or -> bool_expr_comp
-- On PERT reduce production bool_expr_no_or -> bool_expr_comp
-- On OR reduce production bool_expr_no_or -> bool_expr_comp
-- On OBS reduce production bool_expr_no_or -> bool_expr_comp
-- On LRAR reduce production bool_expr_no_or -> bool_expr_comp
-- On LET reduce production bool_expr_no_or -> bool_expr_comp
-- On LABEL reduce production bool_expr_no_or -> bool_expr_comp
-- On INIT reduce production bool_expr_no_or -> bool_expr_comp
-- On ID reduce production bool_expr_no_or -> bool_expr_comp
-- On EOF reduce production bool_expr_no_or -> bool_expr_comp
-- On DOT reduce production bool_expr_no_or -> bool_expr_comp
-- On DO reduce production bool_expr_no_or -> bool_expr_comp
-- On CONFIG reduce production bool_expr_no_or -> bool_expr_comp
-- On CL_PAR reduce production bool_expr_no_or -> bool_expr_comp

State 237:
## Known stack suffix:
## bool_expr_comp AND
## LR(1) items:
bool_expr_no_or -> bool_expr_comp AND . annot bool_expr_no_or [ TOKEN THEN SIGNATURE SEMICOLON RAR PLOT PIPE PERT OR OBS LRAR LET LABEL INIT ID EOF DOT DO CONFIG CL_PAR ]
## Transitions:
-- On SPACE shift to state 2
-- On NEWLINE shift to state 3
-- On COMMENT shift to state 4
-- On annot shift to state 238
## Reductions:
-- On TRUE reduce production annot ->
-- On TMAX reduce production annot ->
-- On TIME reduce production annot ->
-- On TAN reduce production annot ->
-- On SQRT reduce production annot ->
-- On SINUS reduce production annot ->
-- On PIPE reduce production annot ->
-- On OP_PAR reduce production annot ->
-- On NULL_EVENT reduce production annot ->
-- On NOT reduce production annot ->
-- On MINUS reduce production annot ->
-- On MIN reduce production annot ->
-- On MAX reduce production annot ->
-- On LOG reduce production annot ->
-- On LABEL reduce production annot ->
-- On INT reduce production annot ->
-- On INFINITY reduce production annot ->
-- On ID reduce production annot ->
-- On FLOAT reduce production annot ->
-- On FALSE reduce production annot ->
-- On EXPONENT reduce production annot ->
-- On EVENT reduce production annot ->
-- On EMAX reduce production annot ->
-- On CPUTIME reduce production annot ->
-- On COSINUS reduce production annot ->
-- On ABS reduce production annot ->

State 238:
## Known stack suffix:
## bool_expr_comp AND annot
## LR(1) items:
bool_expr_no_or -> bool_expr_comp AND annot . bool_expr_no_or [ TOKEN THEN SIGNATURE SEMICOLON RAR PLOT PIPE PERT OR OBS LRAR LET LABEL INIT ID EOF DOT DO CONFIG CL_PAR ]
## Transitions:
-- On TRUE shift to state 179
-- On TMAX shift to state 162
-- On TIME shift to state 163
-- On TAN shift to state 164
-- On SQRT shift to state 166
-- On SINUS shift to state 168
-- On PIPE shift to state 170
-- On OP_PAR shift to state 187
-- On NULL_EVENT shift to state 182
-- On NOT shift to state 183
-- On MINUS shift to state 189
-- On MIN shift to state 191
-- On MAX shift to state 193
-- On LOG shift to state 195
-- On LABEL shift to state 197
-- On INT shift to state 198
-- On INFINITY shift to state 199
-- On ID shift to state 200
-- On FLOAT shift to state 201
-- On FALSE shift to state 225
-- On EXPONENT shift to state 202
-- On EVENT shift to state 204
-- On EMAX shift to state 205
-- On CPUTIME shift to state 206
-- On COSINUS shift to state 207
-- On ABS shift to state 209
-- On variable shift to state 211
-- On small_bool_expr shift to state 226
-- On small_alg_expr shift to state 228
-- On nbr shift to state 213
-- On constant shift to state 214
-- On bool_expr_no_or shift to state 239
-- On bool_expr_comp shift to state 236
-- On alg_expr_up_to_sum shift to state 240
-- On alg_expr_up_to_prod shift to state 251
-- On alg_expr_up_to_mod shift to state 247
-- On alg_expr_up_to_if shift to state 252
## Reductions:

State 239:
## Known stack suffix:
## bool_expr_comp AND annot bool_expr_no_or
## LR(1) items:
bool_expr_no_or -> bool_expr_comp AND annot bool_expr_no_or . [ TOKEN THEN SIGNATURE SEMICOLON RAR PLOT PIPE PERT OR OBS LRAR LET LABEL INIT ID EOF DOT DO CONFIG CL_PAR ]
## Transitions:
## Reductions:
-- On TOKEN reduce production bool_expr_no_or -> bool_expr_comp AND annot bool_expr_no_or
-- On THEN reduce production bool_expr_no_or -> bool_expr_comp AND annot bool_expr_no_or
-- On SIGNATURE reduce production bool_expr_no_or -> bool_expr_comp AND annot bool_expr_no_or
-- On SEMICOLON reduce production bool_expr_no_or -> bool_expr_comp AND annot bool_expr_no_or
-- On RAR reduce production bool_expr_no_or -> bool_expr_comp AND annot bool_expr_no_or
-- On PLOT reduce production bool_expr_no_or -> bool_expr_comp AND annot bool_expr_no_or
-- On PIPE reduce production bool_expr_no_or -> bool_expr_comp AND annot bool_expr_no_or
-- On PERT reduce production bool_expr_no_or -> bool_expr_comp AND annot bool_expr_no_or
-- On OR reduce production bool_expr_no_or -> bool_expr_comp AND annot bool_expr_no_or
-- On OBS reduce production bool_expr_no_or -> bool_expr_comp AND annot bool_expr_no_or
-- On LRAR reduce production bool_expr_no_or -> bool_expr_comp AND annot bool_expr_no_or
-- On LET reduce production bool_expr_no_or -> bool_expr_comp AND annot bool_expr_no_or
-- On LABEL reduce production bool_expr_no_or -> bool_expr_comp AND annot bool_expr_no_or
-- On INIT reduce production bool_expr_no_or -> bool_expr_comp AND annot bool_expr_no_or
-- On ID reduce production bool_expr_no_or -> bool_expr_comp AND annot bool_expr_no_or
-- On EOF reduce production bool_expr_no_or -> bool_expr_comp AND annot bool_expr_no_or
-- On DOT reduce production bool_expr_no_or -> bool_expr_comp AND annot bool_expr_no_or
-- On DO reduce production bool_expr_no_or -> bool_expr_comp AND annot bool_expr_no_or
-- On CONFIG reduce production bool_expr_no_or -> bool_expr_comp AND annot bool_expr_no_or
-- On CL_PAR reduce production bool_expr_no_or -> bool_expr_comp AND annot bool_expr_no_or

State 240:
## Known stack suffix:
## alg_expr_up_to_sum
## LR(1) items:
alg_expr_up_to_if -> alg_expr_up_to_sum . [ TRUE TOKEN THEN STRING SMALLER SIGNATURE SEMICOLON RAR PLUS PLOT PIPE PERT OR OP_PAR OP_CUR OBS MINUS LRAR LET LABEL INIT ID GREATER FALSE EQUAL EOF ELSE DOT DO DIFF CONFIG COMMA COLON CL_PAR CL_CUR AND ]
alg_expr_up_to_sum -> alg_expr_up_to_sum . MULT annot alg_expr_up_to_prod [ TRUE TOKEN THEN STRING SMALLER SIGNATURE SEMICOLON RAR PLUS PLOT PIPE PERT OR OP_PAR OP_CUR OBS MULT MINUS LRAR LET LABEL INIT ID GREATER FALSE EQUAL EOF ELSE DOT DO DIV DIFF CONFIG COMMA COLON CL_PAR CL_CUR AND ]
alg_expr_up_to_sum -> alg_expr_up_to_sum . DIV annot alg_expr_up_to_prod [ TRUE TOKEN THEN STRING SMALLER SIGNATURE SEMICOLON RAR PLUS PLOT PIPE PERT OR OP_PAR OP_CUR OBS MULT MINUS LRAR LET LABEL INIT ID GREATER FALSE EQUAL EOF ELSE DOT DO DIV DIFF CONFIG COMMA COLON CL_PAR CL_CUR AND ]
## Transitions:
-- On MULT shift to state 241
-- On DIV shift to state 248
## Reductions:
-- On TRUE reduce production alg_expr_up_to_if -> alg_expr_up_to_sum
-- On TOKEN reduce production alg_expr_up_to_if -> alg_expr_up_to_sum
-- On THEN reduce production alg_expr_up_to_if -> alg_expr_up_to_sum
-- On STRING reduce production alg_expr_up_to_if -> alg_expr_up_to_sum
-- On SMALLER reduce production alg_expr_up_to_if -> alg_expr_up_to_sum
-- On SIGNATURE reduce production alg_expr_up_to_if -> alg_expr_up_to_sum
-- On SEMICOLON reduce production alg_expr_up_to_if -> alg_expr_up_to_sum
-- On RAR reduce production alg_expr_up_to_if -> alg_expr_up_to_sum
-- On PLUS reduce production alg_expr_up_to_if -> alg_expr_up_to_sum
-- On PLOT reduce production alg_expr_up_to_if -> alg_expr_up_to_sum
-- On PIPE reduce production alg_expr_up_to_if -> alg_expr_up_to_sum
-- On PERT reduce production alg_expr_up_to_if -> alg_expr_up_to_sum
-- On OR reduce production alg_expr_up_to_if -> alg_expr_up_to_sum
-- On OP_PAR reduce production alg_expr_up_to_if -> alg_expr_up_to_sum
-- On OP_CUR reduce production alg_expr_up_to_if -> alg_expr_up_to_sum
-- On OBS reduce production alg_expr_up_to_if -> alg_expr_up_to_sum
-- On MINUS reduce production alg_expr_up_to_if -> alg_expr_up_to_sum
-- On LRAR reduce production alg_expr_up_to_if -> alg_expr_up_to_sum
-- On LET reduce production alg_expr_up_to_if -> alg_expr_up_to_sum
-- On LABEL reduce production alg_expr_up_to_if -> alg_expr_up_to_sum
-- On INIT reduce production alg_expr_up_to_if -> alg_expr_up_to_sum
-- On ID reduce production alg_expr_up_to_if -> alg_expr_up_to_sum
-- On GREATER reduce production alg_expr_up_to_if -> alg_expr_up_to_sum
-- On FALSE reduce production alg_expr_up_to_if -> alg_expr_up_to_sum
-- On EQUAL reduce production alg_expr_up_to_if -> alg_expr_up_to_sum
-- On EOF reduce production alg_expr_up_to_if -> alg_expr_up_to_sum
-- On ELSE reduce production alg_expr_up_to_if -> alg_expr_up_to_sum
-- On DOT reduce production alg_expr_up_to_if -> alg_expr_up_to_sum
-- On DO reduce production alg_expr_up_to_if -> alg_expr_up_to_sum
-- On DIFF reduce production alg_expr_up_to_if -> alg_expr_up_to_sum
-- On CONFIG reduce production alg_expr_up_to_if -> alg_expr_up_to_sum
-- On COMMA reduce production alg_expr_up_to_if -> alg_expr_up_to_sum
-- On COLON reduce production alg_expr_up_to_if -> alg_expr_up_to_sum
-- On CL_PAR reduce production alg_expr_up_to_if -> alg_expr_up_to_sum
-- On CL_CUR reduce production alg_expr_up_to_if -> alg_expr_up_to_sum
-- On AND reduce production alg_expr_up_to_if -> alg_expr_up_to_sum

State 241:
## Known stack suffix:
## alg_expr_up_to_sum MULT
## LR(1) items:
alg_expr_up_to_sum -> alg_expr_up_to_sum MULT . annot alg_expr_up_to_prod [ TRUE TOKEN THEN STRING SMALLER SIGNATURE SEMICOLON RAR PLUS PLOT PIPE PERT OR OP_PAR OP_CUR OBS MULT MINUS LRAR LET LABEL INIT ID GREATER FALSE EQUAL EOF ELSE DOT DO DIV DIFF CONFIG COMMA COLON CL_PAR CL_CUR AND ]
## Transitions:
-- On SPACE shift to state 2
-- On NEWLINE shift to state 3
-- On COMMENT shift to state 4
-- On annot shift to state 242
## Reductions:
-- On TMAX reduce production annot ->
-- On TIME reduce production annot ->
-- On TAN reduce production annot ->
-- On SQRT reduce production annot ->
-- On SINUS reduce production annot ->
-- On PIPE reduce production annot ->
-- On OP_PAR reduce production annot ->
-- On NULL_EVENT reduce production annot ->
-- On MINUS reduce production annot ->
-- On MIN reduce production annot ->
-- On MAX reduce production annot ->
-- On LOG reduce production annot ->
-- On LABEL reduce production annot ->
-- On INT reduce production annot ->
-- On INFINITY reduce production annot ->
-- On ID reduce production annot ->
-- On FLOAT reduce production annot ->
-- On EXPONENT reduce production annot ->
-- On EVENT reduce production annot ->
-- On EMAX reduce production annot ->
-- On CPUTIME reduce production annot ->
-- On COSINUS reduce production annot ->
-- On ABS reduce production annot ->

State 242:
## Known stack suffix:
## alg_expr_up_to_sum MULT annot
## LR(1) items:
alg_expr_up_to_sum -> alg_expr_up_to_sum MULT annot . alg_expr_up_to_prod [ TRUE TOKEN THEN STRING SMALLER SIGNATURE SEMICOLON RAR PLUS PLOT PIPE PERT OR OP_PAR OP_CUR OBS MULT MINUS LRAR LET LABEL INIT ID GREATER FALSE EQUAL EOF ELSE DOT DO DIV DIFF CONFIG COMMA COLON CL_PAR CL_CUR AND ]
## Transitions:
-- On TMAX shift to state 162
-- On TIME shift to state 163
-- On TAN shift to state 164
-- On SQRT shift to state 166
-- On SINUS shift to state 168
-- On PIPE shift to state 170
-- On OP_PAR shift to state 177
-- On NULL_EVENT shift to state 182
-- On MINUS shift to state 189
-- On MIN shift to state 191
-- On MAX shift to state 193
-- On LOG shift to state 195
-- On LABEL shift to state 197
-- On INT shift to state 198
-- On INFINITY shift to state 199
-- On ID shift to state 200
-- On FLOAT shift to state 201
-- On EXPONENT shift to state 202
-- On EVENT shift to state 204
-- On EMAX shift to state 205
-- On CPUTIME shift to state 206
-- On COSINUS shift to state 207
-- On ABS shift to state 209
-- On variable shift to state 211
-- On small_alg_expr shift to state 228
-- On nbr shift to state 213
-- On constant shift to state 214
-- On alg_expr_up_to_prod shift to state 243
-- On alg_expr_up_to_mod shift to state 247
## Reductions:

State 243:
## Known stack suffix:
## alg_expr_up_to_sum MULT annot alg_expr_up_to_prod
## LR(1) items:
alg_expr_up_to_prod -> alg_expr_up_to_prod . MOD annot alg_expr_up_to_mod [ TRUE TOKEN THEN STRING SMALLER SIGNATURE SEMICOLON RAR PLUS PLOT PIPE PERT OR OP_PAR OP_CUR OBS MULT MOD MINUS LRAR LET LABEL INIT ID GREATER FALSE EQUAL EOF ELSE DOT DO DIV DIFF CONFIG COMMA COLON CL_PAR CL_CUR AND ]
alg_expr_up_to_sum -> alg_expr_up_to_sum MULT annot alg_expr_up_to_prod . [ TRUE TOKEN THEN STRING SMALLER SIGNATURE SEMICOLON RAR PLUS PLOT PIPE PERT OR OP_PAR OP_CUR OBS MULT MINUS LRAR LET LABEL INIT ID GREATER FALSE EQUAL EOF ELSE DOT DO DIV DIFF CONFIG COMMA COLON CL_PAR CL_CUR AND ]
## Transitions:
-- On MOD shift to state 244
## Reductions:
-- On TRUE reduce production alg_expr_up_to_sum -> alg_expr_up_to_sum MULT annot alg_expr_up_to_prod
-- On TOKEN reduce production alg_expr_up_to_sum -> alg_expr_up_to_sum MULT annot alg_expr_up_to_prod
-- On THEN reduce production alg_expr_up_to_sum -> alg_expr_up_to_sum MULT annot alg_expr_up_to_prod
-- On STRING reduce production alg_expr_up_to_sum -> alg_expr_up_to_sum MULT annot alg_expr_up_to_prod
-- On SMALLER reduce production alg_expr_up_to_sum -> alg_expr_up_to_sum MULT annot alg_expr_up_to_prod
-- On SIGNATURE reduce production alg_expr_up_to_sum -> alg_expr_up_to_sum MULT annot alg_expr_up_to_prod
-- On SEMICOLON reduce production alg_expr_up_to_sum -> alg_expr_up_to_sum MULT annot alg_expr_up_to_prod
-- On RAR reduce production alg_expr_up_to_sum -> alg_expr_up_to_sum MULT annot alg_expr_up_to_prod
-- On PLUS reduce production alg_expr_up_to_sum -> alg_expr_up_to_sum MULT annot alg_expr_up_to_prod
-- On PLOT reduce production alg_expr_up_to_sum -> alg_expr_up_to_sum MULT annot alg_expr_up_to_prod
-- On PIPE reduce production alg_expr_up_to_sum -> alg_expr_up_to_sum MULT annot alg_expr_up_to_prod
-- On PERT reduce production alg_expr_up_to_sum -> alg_expr_up_to_sum MULT annot alg_expr_up_to_prod
-- On OR reduce production alg_expr_up_to_sum -> alg_expr_up_to_sum MULT annot alg_expr_up_to_prod
-- On OP_PAR reduce production alg_expr_up_to_sum -> alg_expr_up_to_sum MULT annot alg_expr_up_to_prod
-- On OP_CUR reduce production alg_expr_up_to_sum -> alg_expr_up_to_sum MULT annot alg_expr_up_to_prod
-- On OBS reduce production alg_expr_up_to_sum -> alg_expr_up_to_sum MULT annot alg_expr_up_to_prod
-- On MULT reduce production alg_expr_up_to_sum -> alg_expr_up_to_sum MULT annot alg_expr_up_to_prod
-- On MINUS reduce production alg_expr_up_to_sum -> alg_expr_up_to_sum MULT annot alg_expr_up_to_prod
-- On LRAR reduce production alg_expr_up_to_sum -> alg_expr_up_to_sum MULT annot alg_expr_up_to_prod
-- On LET reduce production alg_expr_up_to_sum -> alg_expr_up_to_sum MULT annot alg_expr_up_to_prod
-- On LABEL reduce production alg_expr_up_to_sum -> alg_expr_up_to_sum MULT annot alg_expr_up_to_prod
-- On INIT reduce production alg_expr_up_to_sum -> alg_expr_up_to_sum MULT annot alg_expr_up_to_prod
-- On ID reduce production alg_expr_up_to_sum -> alg_expr_up_to_sum MULT annot alg_expr_up_to_prod
-- On GREATER reduce production alg_expr_up_to_sum -> alg_expr_up_to_sum MULT annot alg_expr_up_to_prod
-- On FALSE reduce production alg_expr_up_to_sum -> alg_expr_up_to_sum MULT annot alg_expr_up_to_prod
-- On EQUAL reduce production alg_expr_up_to_sum -> alg_expr_up_to_sum MULT annot alg_expr_up_to_prod
-- On EOF reduce production alg_expr_up_to_sum -> alg_expr_up_to_sum MULT annot alg_expr_up_to_prod
-- On ELSE reduce production alg_expr_up_to_sum -> alg_expr_up_to_sum MULT annot alg_expr_up_to_prod
-- On DOT reduce production alg_expr_up_to_sum -> alg_expr_up_to_sum MULT annot alg_expr_up_to_prod
-- On DO reduce production alg_expr_up_to_sum -> alg_expr_up_to_sum MULT annot alg_expr_up_to_prod
-- On DIV reduce production alg_expr_up_to_sum -> alg_expr_up_to_sum MULT annot alg_expr_up_to_prod
-- On DIFF reduce production alg_expr_up_to_sum -> alg_expr_up_to_sum MULT annot alg_expr_up_to_prod
-- On CONFIG reduce production alg_expr_up_to_sum -> alg_expr_up_to_sum MULT annot alg_expr_up_to_prod
-- On COMMA reduce production alg_expr_up_to_sum -> alg_expr_up_to_sum MULT annot alg_expr_up_to_prod
-- On COLON reduce production alg_expr_up_to_sum -> alg_expr_up_to_sum MULT annot alg_expr_up_to_prod
-- On CL_PAR reduce production alg_expr_up_to_sum -> alg_expr_up_to_sum MULT annot alg_expr_up_to_prod
-- On CL_CUR reduce production alg_expr_up_to_sum -> alg_expr_up_to_sum MULT annot alg_expr_up_to_prod
-- On AND reduce production alg_expr_up_to_sum -> alg_expr_up_to_sum MULT annot alg_expr_up_to_prod

State 244:
## Known stack suffix:
## alg_expr_up_to_prod MOD
## LR(1) items:
alg_expr_up_to_prod -> alg_expr_up_to_prod MOD . annot alg_expr_up_to_mod [ TRUE TOKEN THEN STRING SMALLER SIGNATURE SEMICOLON RAR PLUS PLOT PIPE PERT OR OP_PAR OP_CUR OBS MULT MOD MINUS LRAR LET LABEL INIT ID GREATER FALSE EQUAL EOF ELSE DOT DO DIV DIFF CONFIG COMMA COLON CL_PAR CL_CUR AND ]
## Transitions:
-- On SPACE shift to state 2
-- On NEWLINE shift to state 3
-- On COMMENT shift to state 4
-- On annot shift to state 245
## Reductions:
-- On TMAX reduce production annot ->
-- On TIME reduce production annot ->
-- On TAN reduce production annot ->
-- On SQRT reduce production annot ->
-- On SINUS reduce production annot ->
-- On PIPE reduce production annot ->
-- On OP_PAR reduce production annot ->
-- On NULL_EVENT reduce production annot ->
-- On MINUS reduce production annot ->
-- On MIN reduce production annot ->
-- On MAX reduce production annot ->
-- On LOG reduce production annot ->
-- On LABEL reduce production annot ->
-- On INT reduce production annot ->
-- On INFINITY reduce production annot ->
-- On ID reduce production annot ->
-- On FLOAT reduce production annot ->
-- On EXPONENT reduce production annot ->
-- On EVENT reduce production annot ->
-- On EMAX reduce production annot ->
-- On CPUTIME reduce production annot ->
-- On COSINUS reduce production annot ->
-- On ABS reduce production annot ->

State 245:
## Known stack suffix:
## alg_expr_up_to_prod MOD annot
## LR(1) items:
alg_expr_up_to_prod -> alg_expr_up_to_prod MOD annot . alg_expr_up_to_mod [ TRUE TOKEN THEN STRING SMALLER SIGNATURE SEMICOLON RAR PLUS PLOT PIPE PERT OR OP_PAR OP_CUR OBS MULT MOD MINUS LRAR LET LABEL INIT ID GREATER FALSE EQUAL EOF ELSE DOT DO DIV DIFF CONFIG COMMA COLON CL_PAR CL_CUR AND ]
## Transitions:
-- On TMAX shift to state 162
-- On TIME shift to state 163
-- On TAN shift to state 164
-- On SQRT shift to state 166
-- On SINUS shift to state 168
-- On PIPE shift to state 170
-- On OP_PAR shift to state 177
-- On NULL_EVENT shift to state 182
-- On MINUS shift to state 189
-- On MIN shift to state 191
-- On MAX shift to state 193
-- On LOG shift to state 195
-- On LABEL shift to state 197
-- On INT shift to state 198
-- On INFINITY shift to state 199
-- On ID shift to state 200
-- On FLOAT shift to state 201
-- On EXPONENT shift to state 202
-- On EVENT shift to state 204
-- On EMAX shift to state 205
-- On CPUTIME shift to state 206
-- On COSINUS shift to state 207
-- On ABS shift to state 209
-- On variable shift to state 211
-- On small_alg_expr shift to state 228
-- On nbr shift to state 213
-- On constant shift to state 214
-- On alg_expr_up_to_mod shift to state 246
## Reductions:

State 246:
## Known stack suffix:
## alg_expr_up_to_prod MOD annot alg_expr_up_to_mod
## LR(1) items:
alg_expr_up_to_prod -> alg_expr_up_to_prod MOD annot alg_expr_up_to_mod . [ TRUE TOKEN THEN STRING SMALLER SIGNATURE SEMICOLON RAR PLUS PLOT PIPE PERT OR OP_PAR OP_CUR OBS MULT MOD MINUS LRAR LET LABEL INIT ID GREATER FALSE EQUAL EOF ELSE DOT DO DIV DIFF CONFIG COMMA COLON CL_PAR CL_CUR AND ]
## Transitions:
## Reductions:
-- On TRUE reduce production alg_expr_up_to_prod -> alg_expr_up_to_prod MOD annot alg_expr_up_to_mod
-- On TOKEN reduce production alg_expr_up_to_prod -> alg_expr_up_to_prod MOD annot alg_expr_up_to_mod
-- On THEN reduce production alg_expr_up_to_prod -> alg_expr_up_to_prod MOD annot alg_expr_up_to_mod
-- On STRING reduce production alg_expr_up_to_prod -> alg_expr_up_to_prod MOD annot alg_expr_up_to_mod
-- On SMALLER reduce production alg_expr_up_to_prod -> alg_expr_up_to_prod MOD annot alg_expr_up_to_mod
-- On SIGNATURE reduce production alg_expr_up_to_prod -> alg_expr_up_to_prod MOD annot alg_expr_up_to_mod
-- On SEMICOLON reduce production alg_expr_up_to_prod -> alg_expr_up_to_prod MOD annot alg_expr_up_to_mod
-- On RAR reduce production alg_expr_up_to_prod -> alg_expr_up_to_prod MOD annot alg_expr_up_to_mod
-- On PLUS reduce production alg_expr_up_to_prod -> alg_expr_up_to_prod MOD annot alg_expr_up_to_mod
-- On PLOT reduce production alg_expr_up_to_prod -> alg_expr_up_to_prod MOD annot alg_expr_up_to_mod
-- On PIPE reduce production alg_expr_up_to_prod -> alg_expr_up_to_prod MOD annot alg_expr_up_to_mod
-- On PERT reduce production alg_expr_up_to_prod -> alg_expr_up_to_prod MOD annot alg_expr_up_to_mod
-- On OR reduce production alg_expr_up_to_prod -> alg_expr_up_to_prod MOD annot alg_expr_up_to_mod
-- On OP_PAR reduce production alg_expr_up_to_prod -> alg_expr_up_to_prod MOD annot alg_expr_up_to_mod
-- On OP_CUR reduce production alg_expr_up_to_prod -> alg_expr_up_to_prod MOD annot alg_expr_up_to_mod
-- On OBS reduce production alg_expr_up_to_prod -> alg_expr_up_to_prod MOD annot alg_expr_up_to_mod
-- On MULT reduce production alg_expr_up_to_prod -> alg_expr_up_to_prod MOD annot alg_expr_up_to_mod
-- On MOD reduce production alg_expr_up_to_prod -> alg_expr_up_to_prod MOD annot alg_expr_up_to_mod
-- On MINUS reduce production alg_expr_up_to_prod -> alg_expr_up_to_prod MOD annot alg_expr_up_to_mod
-- On LRAR reduce production alg_expr_up_to_prod -> alg_expr_up_to_prod MOD annot alg_expr_up_to_mod
-- On LET reduce production alg_expr_up_to_prod -> alg_expr_up_to_prod MOD annot alg_expr_up_to_mod
-- On LABEL reduce production alg_expr_up_to_prod -> alg_expr_up_to_prod MOD annot alg_expr_up_to_mod
-- On INIT reduce production alg_expr_up_to_prod -> alg_expr_up_to_prod MOD annot alg_expr_up_to_mod
-- On ID reduce production alg_expr_up_to_prod -> alg_expr_up_to_prod MOD annot alg_expr_up_to_mod
-- On GREATER reduce production alg_expr_up_to_prod -> alg_expr_up_to_prod MOD annot alg_expr_up_to_mod
-- On FALSE reduce production alg_expr_up_to_prod -> alg_expr_up_to_prod MOD annot alg_expr_up_to_mod
-- On EQUAL reduce production alg_expr_up_to_prod -> alg_expr_up_to_prod MOD annot alg_expr_up_to_mod
-- On EOF reduce production alg_expr_up_to_prod -> alg_expr_up_to_prod MOD annot alg_expr_up_to_mod
-- On ELSE reduce production alg_expr_up_to_prod -> alg_expr_up_to_prod MOD annot alg_expr_up_to_mod
-- On DOT reduce production alg_expr_up_to_prod -> alg_expr_up_to_prod MOD annot alg_expr_up_to_mod
-- On DO reduce production alg_expr_up_to_prod -> alg_expr_up_to_prod MOD annot alg_expr_up_to_mod
-- On DIV reduce production alg_expr_up_to_prod -> alg_expr_up_to_prod MOD annot alg_expr_up_to_mod
-- On DIFF reduce production alg_expr_up_to_prod -> alg_expr_up_to_prod MOD annot alg_expr_up_to_mod
-- On CONFIG reduce production alg_expr_up_to_prod -> alg_expr_up_to_prod MOD annot alg_expr_up_to_mod
-- On COMMA reduce production alg_expr_up_to_prod -> alg_expr_up_to_prod MOD annot alg_expr_up_to_mod
-- On COLON reduce production alg_expr_up_to_prod -> alg_expr_up_to_prod MOD annot alg_expr_up_to_mod
-- On CL_PAR reduce production alg_expr_up_to_prod -> alg_expr_up_to_prod MOD annot alg_expr_up_to_mod
-- On CL_CUR reduce production alg_expr_up_to_prod -> alg_expr_up_to_prod MOD annot alg_expr_up_to_mod
-- On AND reduce production alg_expr_up_to_prod -> alg_expr_up_to_prod MOD annot alg_expr_up_to_mod

State 247:
## Known stack suffix:
## alg_expr_up_to_mod
## LR(1) items:
alg_expr_up_to_prod -> alg_expr_up_to_mod . [ TRUE TOKEN THEN STRING SMALLER SIGNATURE SEMICOLON RAR PLUS PLOT PIPE PERT OR OP_PAR OP_CUR OBS MULT MOD MINUS LRAR LET LABEL INIT ID GREATER FALSE EQUAL EOF ELSE DOT DO DIV DIFF CONFIG COMMA COLON CL_PAR CL_CUR AND ]
## Transitions:
## Reductions:
-- On TRUE reduce production alg_expr_up_to_prod -> alg_expr_up_to_mod
-- On TOKEN reduce production alg_expr_up_to_prod -> alg_expr_up_to_mod
-- On THEN reduce production alg_expr_up_to_prod -> alg_expr_up_to_mod
-- On STRING reduce production alg_expr_up_to_prod -> alg_expr_up_to_mod
-- On SMALLER reduce production alg_expr_up_to_prod -> alg_expr_up_to_mod
-- On SIGNATURE reduce production alg_expr_up_to_prod -> alg_expr_up_to_mod
-- On SEMICOLON reduce production alg_expr_up_to_prod -> alg_expr_up_to_mod
-- On RAR reduce production alg_expr_up_to_prod -> alg_expr_up_to_mod
-- On PLUS reduce production alg_expr_up_to_prod -> alg_expr_up_to_mod
-- On PLOT reduce production alg_expr_up_to_prod -> alg_expr_up_to_mod
-- On PIPE reduce production alg_expr_up_to_prod -> alg_expr_up_to_mod
-- On PERT reduce production alg_expr_up_to_prod -> alg_expr_up_to_mod
-- On OR reduce production alg_expr_up_to_prod -> alg_expr_up_to_mod
-- On OP_PAR reduce production alg_expr_up_to_prod -> alg_expr_up_to_mod
-- On OP_CUR reduce production alg_expr_up_to_prod -> alg_expr_up_to_mod
-- On OBS reduce production alg_expr_up_to_prod -> alg_expr_up_to_mod
-- On MULT reduce production alg_expr_up_to_prod -> alg_expr_up_to_mod
-- On MOD reduce production alg_expr_up_to_prod -> alg_expr_up_to_mod
-- On MINUS reduce production alg_expr_up_to_prod -> alg_expr_up_to_mod
-- On LRAR reduce production alg_expr_up_to_prod -> alg_expr_up_to_mod
-- On LET reduce production alg_expr_up_to_prod -> alg_expr_up_to_mod
-- On LABEL reduce production alg_expr_up_to_prod -> alg_expr_up_to_mod
-- On INIT reduce production alg_expr_up_to_prod -> alg_expr_up_to_mod
-- On ID reduce production alg_expr_up_to_prod -> alg_expr_up_to_mod
-- On GREATER reduce production alg_expr_up_to_prod -> alg_expr_up_to_mod
-- On FALSE reduce production alg_expr_up_to_prod -> alg_expr_up_to_mod
-- On EQUAL reduce production alg_expr_up_to_prod -> alg_expr_up_to_mod
-- On EOF reduce production alg_expr_up_to_prod -> alg_expr_up_to_mod
-- On ELSE reduce production alg_expr_up_to_prod -> alg_expr_up_to_mod
-- On DOT reduce production alg_expr_up_to_prod -> alg_expr_up_to_mod
-- On DO reduce production alg_expr_up_to_prod -> alg_expr_up_to_mod
-- On DIV reduce production alg_expr_up_to_prod -> alg_expr_up_to_mod
-- On DIFF reduce production alg_expr_up_to_prod -> alg_expr_up_to_mod
-- On CONFIG reduce production alg_expr_up_to_prod -> alg_expr_up_to_mod
-- On COMMA reduce production alg_expr_up_to_prod -> alg_expr_up_to_mod
-- On COLON reduce production alg_expr_up_to_prod -> alg_expr_up_to_mod
-- On CL_PAR reduce production alg_expr_up_to_prod -> alg_expr_up_to_mod
-- On CL_CUR reduce production alg_expr_up_to_prod -> alg_expr_up_to_mod
-- On AND reduce production alg_expr_up_to_prod -> alg_expr_up_to_mod

State 248:
## Known stack suffix:
## alg_expr_up_to_sum DIV
## LR(1) items:
alg_expr_up_to_sum -> alg_expr_up_to_sum DIV . annot alg_expr_up_to_prod [ TRUE TOKEN THEN STRING SMALLER SIGNATURE SEMICOLON RAR PLUS PLOT PIPE PERT OR OP_PAR OP_CUR OBS MULT MINUS LRAR LET LABEL INIT ID GREATER FALSE EQUAL EOF ELSE DOT DO DIV DIFF CONFIG COMMA COLON CL_PAR CL_CUR AND ]
## Transitions:
-- On SPACE shift to state 2
-- On NEWLINE shift to state 3
-- On COMMENT shift to state 4
-- On annot shift to state 249
## Reductions:
-- On TMAX reduce production annot ->
-- On TIME reduce production annot ->
-- On TAN reduce production annot ->
-- On SQRT reduce production annot ->
-- On SINUS reduce production annot ->
-- On PIPE reduce production annot ->
-- On OP_PAR reduce production annot ->
-- On NULL_EVENT reduce production annot ->
-- On MINUS reduce production annot ->
-- On MIN reduce production annot ->
-- On MAX reduce production annot ->
-- On LOG reduce production annot ->
-- On LABEL reduce production annot ->
-- On INT reduce production annot ->
-- On INFINITY reduce production annot ->
-- On ID reduce production annot ->
-- On FLOAT reduce production annot ->
-- On EXPONENT reduce production annot ->
-- On EVENT reduce production annot ->
-- On EMAX reduce production annot ->
-- On CPUTIME reduce production annot ->
-- On COSINUS reduce production annot ->
-- On ABS reduce production annot ->

State 249:
## Known stack suffix:
## alg_expr_up_to_sum DIV annot
## LR(1) items:
alg_expr_up_to_sum -> alg_expr_up_to_sum DIV annot . alg_expr_up_to_prod [ TRUE TOKEN THEN STRING SMALLER SIGNATURE SEMICOLON RAR PLUS PLOT PIPE PERT OR OP_PAR OP_CUR OBS MULT MINUS LRAR LET LABEL INIT ID GREATER FALSE EQUAL EOF ELSE DOT DO DIV DIFF CONFIG COMMA COLON CL_PAR CL_CUR AND ]
## Transitions:
-- On TMAX shift to state 162
-- On TIME shift to state 163
-- On TAN shift to state 164
-- On SQRT shift to state 166
-- On SINUS shift to state 168
-- On PIPE shift to state 170
-- On OP_PAR shift to state 177
-- On NULL_EVENT shift to state 182
-- On MINUS shift to state 189
-- On MIN shift to state 191
-- On MAX shift to state 193
-- On LOG shift to state 195
-- On LABEL shift to state 197
-- On INT shift to state 198
-- On INFINITY shift to state 199
-- On ID shift to state 200
-- On FLOAT shift to state 201
-- On EXPONENT shift to state 202
-- On EVENT shift to state 204
-- On EMAX shift to state 205
-- On CPUTIME shift to state 206
-- On COSINUS shift to state 207
-- On ABS shift to state 209
-- On variable shift to state 211
-- On small_alg_expr shift to state 228
-- On nbr shift to state 213
-- On constant shift to state 214
-- On alg_expr_up_to_prod shift to state 250
-- On alg_expr_up_to_mod shift to state 247
## Reductions:

State 250:
## Known stack suffix:
## alg_expr_up_to_sum DIV annot alg_expr_up_to_prod
## LR(1) items:
alg_expr_up_to_prod -> alg_expr_up_to_prod . MOD annot alg_expr_up_to_mod [ TRUE TOKEN THEN STRING SMALLER SIGNATURE SEMICOLON RAR PLUS PLOT PIPE PERT OR OP_PAR OP_CUR OBS MULT MOD MINUS LRAR LET LABEL INIT ID GREATER FALSE EQUAL EOF ELSE DOT DO DIV DIFF CONFIG COMMA COLON CL_PAR CL_CUR AND ]
alg_expr_up_to_sum -> alg_expr_up_to_sum DIV annot alg_expr_up_to_prod . [ TRUE TOKEN THEN STRING SMALLER SIGNATURE SEMICOLON RAR PLUS PLOT PIPE PERT OR OP_PAR OP_CUR OBS MULT MINUS LRAR LET LABEL INIT ID GREATER FALSE EQUAL EOF ELSE DOT DO DIV DIFF CONFIG COMMA COLON CL_PAR CL_CUR AND ]
## Transitions:
-- On MOD shift to state 244
## Reductions:
-- On TRUE reduce production alg_expr_up_to_sum -> alg_expr_up_to_sum DIV annot alg_expr_up_to_prod
-- On TOKEN reduce production alg_expr_up_to_sum -> alg_expr_up_to_sum DIV annot alg_expr_up_to_prod
-- On THEN reduce production alg_expr_up_to_sum -> alg_expr_up_to_sum DIV annot alg_expr_up_to_prod
-- On STRING reduce production alg_expr_up_to_sum -> alg_expr_up_to_sum DIV annot alg_expr_up_to_prod
-- On SMALLER reduce production alg_expr_up_to_sum -> alg_expr_up_to_sum DIV annot alg_expr_up_to_prod
-- On SIGNATURE reduce production alg_expr_up_to_sum -> alg_expr_up_to_sum DIV annot alg_expr_up_to_prod
-- On SEMICOLON reduce production alg_expr_up_to_sum -> alg_expr_up_to_sum DIV annot alg_expr_up_to_prod
-- On RAR reduce production alg_expr_up_to_sum -> alg_expr_up_to_sum DIV annot alg_expr_up_to_prod
-- On PLUS reduce production alg_expr_up_to_sum -> alg_expr_up_to_sum DIV annot alg_expr_up_to_prod
-- On PLOT reduce production alg_expr_up_to_sum -> alg_expr_up_to_sum DIV annot alg_expr_up_to_prod
-- On PIPE reduce production alg_expr_up_to_sum -> alg_expr_up_to_sum DIV annot alg_expr_up_to_prod
-- On PERT reduce production alg_expr_up_to_sum -> alg_expr_up_to_sum DIV annot alg_expr_up_to_prod
-- On OR reduce production alg_expr_up_to_sum -> alg_expr_up_to_sum DIV annot alg_expr_up_to_prod
-- On OP_PAR reduce production alg_expr_up_to_sum -> alg_expr_up_to_sum DIV annot alg_expr_up_to_prod
-- On OP_CUR reduce production alg_expr_up_to_sum -> alg_expr_up_to_sum DIV annot alg_expr_up_to_prod
-- On OBS reduce production alg_expr_up_to_sum -> alg_expr_up_to_sum DIV annot alg_expr_up_to_prod
-- On MULT reduce production alg_expr_up_to_sum -> alg_expr_up_to_sum DIV annot alg_expr_up_to_prod
-- On MINUS reduce production alg_expr_up_to_sum -> alg_expr_up_to_sum DIV annot alg_expr_up_to_prod
-- On LRAR reduce production alg_expr_up_to_sum -> alg_expr_up_to_sum DIV annot alg_expr_up_to_prod
-- On LET reduce production alg_expr_up_to_sum -> alg_expr_up_to_sum DIV annot alg_expr_up_to_prod
-- On LABEL reduce production alg_expr_up_to_sum -> alg_expr_up_to_sum DIV annot alg_expr_up_to_prod
-- On INIT reduce production alg_expr_up_to_sum -> alg_expr_up_to_sum DIV annot alg_expr_up_to_prod
-- On ID reduce production alg_expr_up_to_sum -> alg_expr_up_to_sum DIV annot alg_expr_up_to_prod
-- On GREATER reduce production alg_expr_up_to_sum -> alg_expr_up_to_sum DIV annot alg_expr_up_to_prod
-- On FALSE reduce production alg_expr_up_to_sum -> alg_expr_up_to_sum DIV annot alg_expr_up_to_prod
-- On EQUAL reduce production alg_expr_up_to_sum -> alg_expr_up_to_sum DIV annot alg_expr_up_to_prod
-- On EOF reduce production alg_expr_up_to_sum -> alg_expr_up_to_sum DIV annot alg_expr_up_to_prod
-- On ELSE reduce production alg_expr_up_to_sum -> alg_expr_up_to_sum DIV annot alg_expr_up_to_prod
-- On DOT reduce production alg_expr_up_to_sum -> alg_expr_up_to_sum DIV annot alg_expr_up_to_prod
-- On DO reduce production alg_expr_up_to_sum -> alg_expr_up_to_sum DIV annot alg_expr_up_to_prod
-- On DIV reduce production alg_expr_up_to_sum -> alg_expr_up_to_sum DIV annot alg_expr_up_to_prod
-- On DIFF reduce production alg_expr_up_to_sum -> alg_expr_up_to_sum DIV annot alg_expr_up_to_prod
-- On CONFIG reduce production alg_expr_up_to_sum -> alg_expr_up_to_sum DIV annot alg_expr_up_to_prod
-- On COMMA reduce production alg_expr_up_to_sum -> alg_expr_up_to_sum DIV annot alg_expr_up_to_prod
-- On COLON reduce production alg_expr_up_to_sum -> alg_expr_up_to_sum DIV annot alg_expr_up_to_prod
-- On CL_PAR reduce production alg_expr_up_to_sum -> alg_expr_up_to_sum DIV annot alg_expr_up_to_prod
-- On CL_CUR reduce production alg_expr_up_to_sum -> alg_expr_up_to_sum DIV annot alg_expr_up_to_prod
-- On AND reduce production alg_expr_up_to_sum -> alg_expr_up_to_sum DIV annot alg_expr_up_to_prod

State 251:
## Known stack suffix:
## alg_expr_up_to_prod
## LR(1) items:
alg_expr_up_to_prod -> alg_expr_up_to_prod . MOD annot alg_expr_up_to_mod [ TRUE TOKEN THEN STRING SMALLER SIGNATURE SEMICOLON RAR PLUS PLOT PIPE PERT OR OP_PAR OP_CUR OBS MULT MOD MINUS LRAR LET LABEL INIT ID GREATER FALSE EQUAL EOF ELSE DOT DO DIV DIFF CONFIG COMMA COLON CL_PAR CL_CUR AND ]
alg_expr_up_to_sum -> alg_expr_up_to_prod . [ TRUE TOKEN THEN STRING SMALLER SIGNATURE SEMICOLON RAR PLUS PLOT PIPE PERT OR OP_PAR OP_CUR OBS MULT MINUS LRAR LET LABEL INIT ID GREATER FALSE EQUAL EOF ELSE DOT DO DIV DIFF CONFIG COMMA COLON CL_PAR CL_CUR AND ]
## Transitions:
-- On MOD shift to state 244
## Reductions:
-- On TRUE reduce production alg_expr_up_to_sum -> alg_expr_up_to_prod
-- On TOKEN reduce production alg_expr_up_to_sum -> alg_expr_up_to_prod
-- On THEN reduce production alg_expr_up_to_sum -> alg_expr_up_to_prod
-- On STRING reduce production alg_expr_up_to_sum -> alg_expr_up_to_prod
-- On SMALLER reduce production alg_expr_up_to_sum -> alg_expr_up_to_prod
-- On SIGNATURE reduce production alg_expr_up_to_sum -> alg_expr_up_to_prod
-- On SEMICOLON reduce production alg_expr_up_to_sum -> alg_expr_up_to_prod
-- On RAR reduce production alg_expr_up_to_sum -> alg_expr_up_to_prod
-- On PLUS reduce production alg_expr_up_to_sum -> alg_expr_up_to_prod
-- On PLOT reduce production alg_expr_up_to_sum -> alg_expr_up_to_prod
-- On PIPE reduce production alg_expr_up_to_sum -> alg_expr_up_to_prod
-- On PERT reduce production alg_expr_up_to_sum -> alg_expr_up_to_prod
-- On OR reduce production alg_expr_up_to_sum -> alg_expr_up_to_prod
-- On OP_PAR reduce production alg_expr_up_to_sum -> alg_expr_up_to_prod
-- On OP_CUR reduce production alg_expr_up_to_sum -> alg_expr_up_to_prod
-- On OBS reduce production alg_expr_up_to_sum -> alg_expr_up_to_prod
-- On MULT reduce production alg_expr_up_to_sum -> alg_expr_up_to_prod
-- On MINUS reduce production alg_expr_up_to_sum -> alg_expr_up_to_prod
-- On LRAR reduce production alg_expr_up_to_sum -> alg_expr_up_to_prod
-- On LET reduce production alg_expr_up_to_sum -> alg_expr_up_to_prod
-- On LABEL reduce production alg_expr_up_to_sum -> alg_expr_up_to_prod
-- On INIT reduce production alg_expr_up_to_sum -> alg_expr_up_to_prod
-- On ID reduce production alg_expr_up_to_sum -> alg_expr_up_to_prod
-- On GREATER reduce production alg_expr_up_to_sum -> alg_expr_up_to_prod
-- On FALSE reduce production alg_expr_up_to_sum -> alg_expr_up_to_prod
-- On EQUAL reduce production alg_expr_up_to_sum -> alg_expr_up_to_prod
-- On EOF reduce production alg_expr_up_to_sum -> alg_expr_up_to_prod
-- On ELSE reduce production alg_expr_up_to_sum -> alg_expr_up_to_prod
-- On DOT reduce production alg_expr_up_to_sum -> alg_expr_up_to_prod
-- On DO reduce production alg_expr_up_to_sum -> alg_expr_up_to_prod
-- On DIV reduce production alg_expr_up_to_sum -> alg_expr_up_to_prod
-- On DIFF reduce production alg_expr_up_to_sum -> alg_expr_up_to_prod
-- On CONFIG reduce production alg_expr_up_to_sum -> alg_expr_up_to_prod
-- On COMMA reduce production alg_expr_up_to_sum -> alg_expr_up_to_prod
-- On COLON reduce production alg_expr_up_to_sum -> alg_expr_up_to_prod
-- On CL_PAR reduce production alg_expr_up_to_sum -> alg_expr_up_to_prod
-- On CL_CUR reduce production alg_expr_up_to_sum -> alg_expr_up_to_prod
-- On AND reduce production alg_expr_up_to_sum -> alg_expr_up_to_prod

State 252:
## Known stack suffix:
## alg_expr_up_to_if
## LR(1) items:
alg_expr_up_to_if -> alg_expr_up_to_if . PLUS annot alg_expr_up_to_sum [ SMALLER PLUS MINUS GREATER EQUAL DIFF ]
alg_expr_up_to_if -> alg_expr_up_to_if . MINUS annot alg_expr_up_to_sum [ SMALLER PLUS MINUS GREATER EQUAL DIFF ]
bool_expr_comp -> alg_expr_up_to_if . GREATER annot alg_expr [ TOKEN THEN SIGNATURE SEMICOLON RAR PLOT PIPE PERT OR OBS LRAR LET LABEL INIT ID EOF DOT DO CONFIG CL_PAR AND ]
bool_expr_comp -> alg_expr_up_to_if . SMALLER annot alg_expr [ TOKEN THEN SIGNATURE SEMICOLON RAR PLOT PIPE PERT OR OBS LRAR LET LABEL INIT ID EOF DOT DO CONFIG CL_PAR AND ]
bool_expr_comp -> alg_expr_up_to_if . EQUAL annot alg_expr [ TOKEN THEN SIGNATURE SEMICOLON RAR PLOT PIPE PERT OR OBS LRAR LET LABEL INIT ID EOF DOT DO CONFIG CL_PAR AND ]
bool_expr_comp -> alg_expr_up_to_if . DIFF annot alg_expr [ TOKEN THEN SIGNATURE SEMICOLON RAR PLOT PIPE PERT OR OBS LRAR LET LABEL INIT ID EOF DOT DO CONFIG CL_PAR AND ]
## Transitions:
-- On SMALLER shift to state 253
-- On PLUS shift to state 259
-- On MINUS shift to state 262
-- On GREATER shift to state 265
-- On EQUAL shift to state 268
-- On DIFF shift to state 271
## Reductions:

State 253:
## Known stack suffix:
## alg_expr_up_to_if SMALLER
## LR(1) items:
bool_expr_comp -> alg_expr_up_to_if SMALLER . annot alg_expr [ TOKEN THEN SIGNATURE SEMICOLON RAR PLOT PIPE PERT OR OBS LRAR LET LABEL INIT ID EOF DOT DO CONFIG CL_PAR AND ]
## Transitions:
-- On SPACE shift to state 2
-- On NEWLINE shift to state 3
-- On COMMENT shift to state 4
-- On annot shift to state 254
## Reductions:
-- On TRUE reduce production annot ->
-- On TMAX reduce production annot ->
-- On TIME reduce production annot ->
-- On TAN reduce production annot ->
-- On SQRT reduce production annot ->
-- On SINUS reduce production annot ->
-- On PIPE reduce production annot ->
-- On OP_PAR reduce production annot ->
-- On NULL_EVENT reduce production annot ->
-- On NOT reduce production annot ->
-- On MINUS reduce production annot ->
-- On MIN reduce production annot ->
-- On MAX reduce production annot ->
-- On LOG reduce production annot ->
-- On LABEL reduce production annot ->
-- On INT reduce production annot ->
-- On INFINITY reduce production annot ->
-- On ID reduce production annot ->
-- On FLOAT reduce production annot ->
-- On FALSE reduce production annot ->
-- On EXPONENT reduce production annot ->
-- On EVENT reduce production annot ->
-- On EMAX reduce production annot ->
-- On CPUTIME reduce production annot ->
-- On COSINUS reduce production annot ->
-- On ABS reduce production annot ->

State 254:
## Known stack suffix:
## alg_expr_up_to_if SMALLER annot
## LR(1) items:
bool_expr_comp -> alg_expr_up_to_if SMALLER annot . alg_expr [ TOKEN THEN SIGNATURE SEMICOLON RAR PLOT PIPE PERT OR OBS LRAR LET LABEL INIT ID EOF DOT DO CONFIG CL_PAR AND ]
## Transitions:
-- On TRUE shift to state 179
-- On TMAX shift to state 162
-- On TIME shift to state 163
-- On TAN shift to state 164
-- On SQRT shift to state 166
-- On SINUS shift to state 168
-- On PIPE shift to state 170
-- On OP_PAR shift to state 180
-- On NULL_EVENT shift to state 182
-- On NOT shift to state 183
-- On MINUS shift to state 189
-- On MIN shift to state 191
-- On MAX shift to state 193
-- On LOG shift to state 195
-- On LABEL shift to state 197
-- On INT shift to state 198
-- On INFINITY shift to state 199
-- On ID shift to state 200
-- On FLOAT shift to state 201
-- On FALSE shift to state 225
-- On EXPONENT shift to state 202
-- On EVENT shift to state 204
-- On EMAX shift to state 205
-- On CPUTIME shift to state 206
-- On COSINUS shift to state 207
-- On ABS shift to state 209
-- On variable shift to state 211
-- On small_bool_expr shift to state 226
-- On small_alg_expr shift to state 228
-- On nbr shift to state 213
-- On constant shift to state 214
-- On bool_expr_no_or shift to state 233
-- On bool_expr_comp shift to state 236
-- On bool_expr shift to state 255
-- On alg_expr_up_to_sum shift to state 240
-- On alg_expr_up_to_prod shift to state 251
-- On alg_expr_up_to_mod shift to state 247
-- On alg_expr_up_to_if shift to state 258
-- On alg_expr shift to state 279
## Reductions:

State 255:
## Known stack suffix:
## bool_expr
## LR(1) items:
alg_expr -> bool_expr . THEN annot alg_expr ELSE annot small_alg_expr annot [ TOKEN THEN SIGNATURE SEMICOLON RAR PLOT PIPE PERT OR OP_PAR OP_CUR OBS LRAR LET LABEL INIT ID EOF ELSE DOT DO CONFIG COMMA COLON CL_PAR CL_CUR AND ]
## Transitions:
-- On THEN shift to state 256
## Reductions:

State 256:
## Known stack suffix:
## bool_expr THEN
## LR(1) items:
alg_expr -> bool_expr THEN . annot alg_expr ELSE annot small_alg_expr annot [ TOKEN THEN SIGNATURE SEMICOLON RAR PLOT PIPE PERT OR OP_PAR OP_CUR OBS LRAR LET LABEL INIT ID EOF ELSE DOT DO CONFIG COMMA COLON CL_PAR CL_CUR AND ]
## Transitions:
-- On SPACE shift to state 2
-- On NEWLINE shift to state 3
-- On COMMENT shift to state 4
-- On annot shift to state 257
## Reductions:
-- On TRUE reduce production annot ->
-- On TMAX reduce production annot ->
-- On TIME reduce production annot ->
-- On TAN reduce production annot ->
-- On SQRT reduce production annot ->
-- On SINUS reduce production annot ->
-- On PIPE reduce production annot ->
-- On OP_PAR reduce production annot ->
-- On NULL_EVENT reduce production annot ->
-- On NOT reduce production annot ->
-- On MINUS reduce production annot ->
-- On MIN reduce production annot ->
-- On MAX reduce production annot ->
-- On LOG reduce production annot ->
-- On LABEL reduce production annot ->
-- On INT reduce production annot ->
-- On INFINITY reduce production annot ->
-- On ID reduce production annot ->
-- On FLOAT reduce production annot ->
-- On FALSE reduce production annot ->
-- On EXPONENT reduce production annot ->
-- On EVENT reduce production annot ->
-- On EMAX reduce production annot ->
-- On CPUTIME reduce production annot ->
-- On COSINUS reduce production annot ->
-- On ABS reduce production annot ->

State 257:
## Known stack suffix:
## bool_expr THEN annot
## LR(1) items:
alg_expr -> bool_expr THEN annot . alg_expr ELSE annot small_alg_expr annot [ TOKEN THEN SIGNATURE SEMICOLON RAR PLOT PIPE PERT OR OP_PAR OP_CUR OBS LRAR LET LABEL INIT ID EOF ELSE DOT DO CONFIG COMMA COLON CL_PAR CL_CUR AND ]
## Transitions:
-- On TRUE shift to state 179
-- On TMAX shift to state 162
-- On TIME shift to state 163
-- On TAN shift to state 164
-- On SQRT shift to state 166
-- On SINUS shift to state 168
-- On PIPE shift to state 170
-- On OP_PAR shift to state 180
-- On NULL_EVENT shift to state 182
-- On NOT shift to state 183
-- On MINUS shift to state 189
-- On MIN shift to state 191
-- On MAX shift to state 193
-- On LOG shift to state 195
-- On LABEL shift to state 197
-- On INT shift to state 198
-- On INFINITY shift to state 199
-- On ID shift to state 200
-- On FLOAT shift to state 201
-- On FALSE shift to state 225
-- On EXPONENT shift to state 202
-- On EVENT shift to state 204
-- On EMAX shift to state 205
-- On CPUTIME shift to state 206
-- On COSINUS shift to state 207
-- On ABS shift to state 209
-- On variable shift to state 211
-- On small_bool_expr shift to state 226
-- On small_alg_expr shift to state 228
-- On nbr shift to state 213
-- On constant shift to state 214
-- On bool_expr_no_or shift to state 233
-- On bool_expr_comp shift to state 236
-- On bool_expr shift to state 255
-- On alg_expr_up_to_sum shift to state 240
-- On alg_expr_up_to_prod shift to state 251
-- On alg_expr_up_to_mod shift to state 247
-- On alg_expr_up_to_if shift to state 258
-- On alg_expr shift to state 274
## Reductions:

State 258:
## Known stack suffix:
## alg_expr_up_to_if
## LR(1) items:
alg_expr -> alg_expr_up_to_if . [ TOKEN THEN SIGNATURE SEMICOLON RAR PLOT PIPE PERT OR OP_PAR OP_CUR OBS LRAR LET LABEL INIT ID EOF ELSE DOT DO CONFIG COMMA COLON CL_PAR CL_CUR AND ]
alg_expr_up_to_if -> alg_expr_up_to_if . PLUS annot alg_expr_up_to_sum [ TOKEN THEN SMALLER SIGNATURE SEMICOLON RAR PLUS PLOT PIPE PERT OR OP_PAR OP_CUR OBS MINUS LRAR LET LABEL INIT ID GREATER EQUAL EOF ELSE DOT DO DIFF CONFIG COMMA COLON CL_PAR CL_CUR AND ]
alg_expr_up_to_if -> alg_expr_up_to_if . MINUS annot alg_expr_up_to_sum [ TOKEN THEN SMALLER SIGNATURE SEMICOLON RAR PLUS PLOT PIPE PERT OR OP_PAR OP_CUR OBS MINUS LRAR LET LABEL INIT ID GREATER EQUAL EOF ELSE DOT DO DIFF CONFIG COMMA COLON CL_PAR CL_CUR AND ]
bool_expr_comp -> alg_expr_up_to_if . GREATER annot alg_expr [ THEN OR CL_PAR AND ]
bool_expr_comp -> alg_expr_up_to_if . SMALLER annot alg_expr [ THEN OR CL_PAR AND ]
bool_expr_comp -> alg_expr_up_to_if . EQUAL annot alg_expr [ THEN OR CL_PAR AND ]
bool_expr_comp -> alg_expr_up_to_if . DIFF annot alg_expr [ THEN OR CL_PAR AND ]
## Transitions:
-- On SMALLER shift to state 253
-- On PLUS shift to state 259
-- On MINUS shift to state 262
-- On GREATER shift to state 265
-- On EQUAL shift to state 268
-- On DIFF shift to state 271
## Reductions:
-- On TOKEN reduce production alg_expr -> alg_expr_up_to_if
-- On THEN reduce production alg_expr -> alg_expr_up_to_if
-- On SIGNATURE reduce production alg_expr -> alg_expr_up_to_if
-- On SEMICOLON reduce production alg_expr -> alg_expr_up_to_if
-- On RAR reduce production alg_expr -> alg_expr_up_to_if
-- On PLOT reduce production alg_expr -> alg_expr_up_to_if
-- On PIPE reduce production alg_expr -> alg_expr_up_to_if
-- On PERT reduce production alg_expr -> alg_expr_up_to_if
-- On OR reduce production alg_expr -> alg_expr_up_to_if
-- On OP_PAR reduce production alg_expr -> alg_expr_up_to_if
-- On OP_CUR reduce production alg_expr -> alg_expr_up_to_if
-- On OBS reduce production alg_expr -> alg_expr_up_to_if
-- On LRAR reduce production alg_expr -> alg_expr_up_to_if
-- On LET reduce production alg_expr -> alg_expr_up_to_if
-- On LABEL reduce production alg_expr -> alg_expr_up_to_if
-- On INIT reduce production alg_expr -> alg_expr_up_to_if
-- On ID reduce production alg_expr -> alg_expr_up_to_if
-- On EOF reduce production alg_expr -> alg_expr_up_to_if
-- On ELSE reduce production alg_expr -> alg_expr_up_to_if
-- On DOT reduce production alg_expr -> alg_expr_up_to_if
-- On DO reduce production alg_expr -> alg_expr_up_to_if
-- On CONFIG reduce production alg_expr -> alg_expr_up_to_if
-- On COMMA reduce production alg_expr -> alg_expr_up_to_if
-- On COLON reduce production alg_expr -> alg_expr_up_to_if
-- On CL_PAR reduce production alg_expr -> alg_expr_up_to_if
-- On CL_CUR reduce production alg_expr -> alg_expr_up_to_if
-- On AND reduce production alg_expr -> alg_expr_up_to_if

State 259:
## Known stack suffix:
## alg_expr_up_to_if PLUS
## LR(1) items:
alg_expr_up_to_if -> alg_expr_up_to_if PLUS . annot alg_expr_up_to_sum [ TRUE TOKEN THEN STRING SMALLER SIGNATURE SEMICOLON RAR PLUS PLOT PIPE PERT OR OP_PAR OP_CUR OBS MINUS LRAR LET LABEL INIT ID GREATER FALSE EQUAL EOF ELSE DOT DO DIFF CONFIG COMMA COLON CL_PAR CL_CUR AND ]
## Transitions:
-- On SPACE shift to state 2
-- On NEWLINE shift to state 3
-- On COMMENT shift to state 4
-- On annot shift to state 260
## Reductions:
-- On TMAX reduce production annot ->
-- On TIME reduce production annot ->
-- On TAN reduce production annot ->
-- On SQRT reduce production annot ->
-- On SINUS reduce production annot ->
-- On PIPE reduce production annot ->
-- On OP_PAR reduce production annot ->
-- On NULL_EVENT reduce production annot ->
-- On MINUS reduce production annot ->
-- On MIN reduce production annot ->
-- On MAX reduce production annot ->
-- On LOG reduce production annot ->
-- On LABEL reduce production annot ->
-- On INT reduce production annot ->
-- On INFINITY reduce production annot ->
-- On ID reduce production annot ->
-- On FLOAT reduce production annot ->
-- On EXPONENT reduce production annot ->
-- On EVENT reduce production annot ->
-- On EMAX reduce production annot ->
-- On CPUTIME reduce production annot ->
-- On COSINUS reduce production annot ->
-- On ABS reduce production annot ->

State 260:
## Known stack suffix:
## alg_expr_up_to_if PLUS annot
## LR(1) items:
alg_expr_up_to_if -> alg_expr_up_to_if PLUS annot . alg_expr_up_to_sum [ TRUE TOKEN THEN STRING SMALLER SIGNATURE SEMICOLON RAR PLUS PLOT PIPE PERT OR OP_PAR OP_CUR OBS MINUS LRAR LET LABEL INIT ID GREATER FALSE EQUAL EOF ELSE DOT DO DIFF CONFIG COMMA COLON CL_PAR CL_CUR AND ]
## Transitions:
-- On TMAX shift to state 162
-- On TIME shift to state 163
-- On TAN shift to state 164
-- On SQRT shift to state 166
-- On SINUS shift to state 168
-- On PIPE shift to state 170
-- On OP_PAR shift to state 177
-- On NULL_EVENT shift to state 182
-- On MINUS shift to state 189
-- On MIN shift to state 191
-- On MAX shift to state 193
-- On LOG shift to state 195
-- On LABEL shift to state 197
-- On INT shift to state 198
-- On INFINITY shift to state 199
-- On ID shift to state 200
-- On FLOAT shift to state 201
-- On EXPONENT shift to state 202
-- On EVENT shift to state 204
-- On EMAX shift to state 205
-- On CPUTIME shift to state 206
-- On COSINUS shift to state 207
-- On ABS shift to state 209
-- On variable shift to state 211
-- On small_alg_expr shift to state 228
-- On nbr shift to state 213
-- On constant shift to state 214
-- On alg_expr_up_to_sum shift to state 261
-- On alg_expr_up_to_prod shift to state 251
-- On alg_expr_up_to_mod shift to state 247
## Reductions:

State 261:
## Known stack suffix:
## alg_expr_up_to_if PLUS annot alg_expr_up_to_sum
## LR(1) items:
alg_expr_up_to_if -> alg_expr_up_to_if PLUS annot alg_expr_up_to_sum . [ TRUE TOKEN THEN STRING SMALLER SIGNATURE SEMICOLON RAR PLUS PLOT PIPE PERT OR OP_PAR OP_CUR OBS MINUS LRAR LET LABEL INIT ID GREATER FALSE EQUAL EOF ELSE DOT DO DIFF CONFIG COMMA COLON CL_PAR CL_CUR AND ]
alg_expr_up_to_sum -> alg_expr_up_to_sum . MULT annot alg_expr_up_to_prod [ TRUE TOKEN THEN STRING SMALLER SIGNATURE SEMICOLON RAR PLUS PLOT PIPE PERT OR OP_PAR OP_CUR OBS MULT MINUS LRAR LET LABEL INIT ID GREATER FALSE EQUAL EOF ELSE DOT DO DIV DIFF CONFIG COMMA COLON CL_PAR CL_CUR AND ]
alg_expr_up_to_sum -> alg_expr_up_to_sum . DIV annot alg_expr_up_to_prod [ TRUE TOKEN THEN STRING SMALLER SIGNATURE SEMICOLON RAR PLUS PLOT PIPE PERT OR OP_PAR OP_CUR OBS MULT MINUS LRAR LET LABEL INIT ID GREATER FALSE EQUAL EOF ELSE DOT DO DIV DIFF CONFIG COMMA COLON CL_PAR CL_CUR AND ]
## Transitions:
-- On MULT shift to state 241
-- On DIV shift to state 248
## Reductions:
-- On TRUE reduce production alg_expr_up_to_if -> alg_expr_up_to_if PLUS annot alg_expr_up_to_sum
-- On TOKEN reduce production alg_expr_up_to_if -> alg_expr_up_to_if PLUS annot alg_expr_up_to_sum
-- On THEN reduce production alg_expr_up_to_if -> alg_expr_up_to_if PLUS annot alg_expr_up_to_sum
-- On STRING reduce production alg_expr_up_to_if -> alg_expr_up_to_if PLUS annot alg_expr_up_to_sum
-- On SMALLER reduce production alg_expr_up_to_if -> alg_expr_up_to_if PLUS annot alg_expr_up_to_sum
-- On SIGNATURE reduce production alg_expr_up_to_if -> alg_expr_up_to_if PLUS annot alg_expr_up_to_sum
-- On SEMICOLON reduce production alg_expr_up_to_if -> alg_expr_up_to_if PLUS annot alg_expr_up_to_sum
-- On RAR reduce production alg_expr_up_to_if -> alg_expr_up_to_if PLUS annot alg_expr_up_to_sum
-- On PLUS reduce production alg_expr_up_to_if -> alg_expr_up_to_if PLUS annot alg_expr_up_to_sum
-- On PLOT reduce production alg_expr_up_to_if -> alg_expr_up_to_if PLUS annot alg_expr_up_to_sum
-- On PIPE reduce production alg_expr_up_to_if -> alg_expr_up_to_if PLUS annot alg_expr_up_to_sum
-- On PERT reduce production alg_expr_up_to_if -> alg_expr_up_to_if PLUS annot alg_expr_up_to_sum
-- On OR reduce production alg_expr_up_to_if -> alg_expr_up_to_if PLUS annot alg_expr_up_to_sum
-- On OP_PAR reduce production alg_expr_up_to_if -> alg_expr_up_to_if PLUS annot alg_expr_up_to_sum
-- On OP_CUR reduce production alg_expr_up_to_if -> alg_expr_up_to_if PLUS annot alg_expr_up_to_sum
-- On OBS reduce production alg_expr_up_to_if -> alg_expr_up_to_if PLUS annot alg_expr_up_to_sum
-- On MINUS reduce production alg_expr_up_to_if -> alg_expr_up_to_if PLUS annot alg_expr_up_to_sum
-- On LRAR reduce production alg_expr_up_to_if -> alg_expr_up_to_if PLUS annot alg_expr_up_to_sum
-- On LET reduce production alg_expr_up_to_if -> alg_expr_up_to_if PLUS annot alg_expr_up_to_sum
-- On LABEL reduce production alg_expr_up_to_if -> alg_expr_up_to_if PLUS annot alg_expr_up_to_sum
-- On INIT reduce production alg_expr_up_to_if -> alg_expr_up_to_if PLUS annot alg_expr_up_to_sum
-- On ID reduce production alg_expr_up_to_if -> alg_expr_up_to_if PLUS annot alg_expr_up_to_sum
-- On GREATER reduce production alg_expr_up_to_if -> alg_expr_up_to_if PLUS annot alg_expr_up_to_sum
-- On FALSE reduce production alg_expr_up_to_if -> alg_expr_up_to_if PLUS annot alg_expr_up_to_sum
-- On EQUAL reduce production alg_expr_up_to_if -> alg_expr_up_to_if PLUS annot alg_expr_up_to_sum
-- On EOF reduce production alg_expr_up_to_if -> alg_expr_up_to_if PLUS annot alg_expr_up_to_sum
-- On ELSE reduce production alg_expr_up_to_if -> alg_expr_up_to_if PLUS annot alg_expr_up_to_sum
-- On DOT reduce production alg_expr_up_to_if -> alg_expr_up_to_if PLUS annot alg_expr_up_to_sum
-- On DO reduce production alg_expr_up_to_if -> alg_expr_up_to_if PLUS annot alg_expr_up_to_sum
-- On DIFF reduce production alg_expr_up_to_if -> alg_expr_up_to_if PLUS annot alg_expr_up_to_sum
-- On CONFIG reduce production alg_expr_up_to_if -> alg_expr_up_to_if PLUS annot alg_expr_up_to_sum
-- On COMMA reduce production alg_expr_up_to_if -> alg_expr_up_to_if PLUS annot alg_expr_up_to_sum
-- On COLON reduce production alg_expr_up_to_if -> alg_expr_up_to_if PLUS annot alg_expr_up_to_sum
-- On CL_PAR reduce production alg_expr_up_to_if -> alg_expr_up_to_if PLUS annot alg_expr_up_to_sum
-- On CL_CUR reduce production alg_expr_up_to_if -> alg_expr_up_to_if PLUS annot alg_expr_up_to_sum
-- On AND reduce production alg_expr_up_to_if -> alg_expr_up_to_if PLUS annot alg_expr_up_to_sum

State 262:
## Known stack suffix:
## alg_expr_up_to_if MINUS
## LR(1) items:
alg_expr_up_to_if -> alg_expr_up_to_if MINUS . annot alg_expr_up_to_sum [ TRUE TOKEN THEN STRING SMALLER SIGNATURE SEMICOLON RAR PLUS PLOT PIPE PERT OR OP_PAR OP_CUR OBS MINUS LRAR LET LABEL INIT ID GREATER FALSE EQUAL EOF ELSE DOT DO DIFF CONFIG COMMA COLON CL_PAR CL_CUR AND ]
## Transitions:
-- On SPACE shift to state 2
-- On NEWLINE shift to state 3
-- On COMMENT shift to state 4
-- On annot shift to state 263
## Reductions:
-- On TMAX reduce production annot ->
-- On TIME reduce production annot ->
-- On TAN reduce production annot ->
-- On SQRT reduce production annot ->
-- On SINUS reduce production annot ->
-- On PIPE reduce production annot ->
-- On OP_PAR reduce production annot ->
-- On NULL_EVENT reduce production annot ->
-- On MINUS reduce production annot ->
-- On MIN reduce production annot ->
-- On MAX reduce production annot ->
-- On LOG reduce production annot ->
-- On LABEL reduce production annot ->
-- On INT reduce production annot ->
-- On INFINITY reduce production annot ->
-- On ID reduce production annot ->
-- On FLOAT reduce production annot ->
-- On EXPONENT reduce production annot ->
-- On EVENT reduce production annot ->
-- On EMAX reduce production annot ->
-- On CPUTIME reduce production annot ->
-- On COSINUS reduce production annot ->
-- On ABS reduce production annot ->

State 263:
## Known stack suffix:
## alg_expr_up_to_if MINUS annot
## LR(1) items:
alg_expr_up_to_if -> alg_expr_up_to_if MINUS annot . alg_expr_up_to_sum [ TRUE TOKEN THEN STRING SMALLER SIGNATURE SEMICOLON RAR PLUS PLOT PIPE PERT OR OP_PAR OP_CUR OBS MINUS LRAR LET LABEL INIT ID GREATER FALSE EQUAL EOF ELSE DOT DO DIFF CONFIG COMMA COLON CL_PAR CL_CUR AND ]
## Transitions:
-- On TMAX shift to state 162
-- On TIME shift to state 163
-- On TAN shift to state 164
-- On SQRT shift to state 166
-- On SINUS shift to state 168
-- On PIPE shift to state 170
-- On OP_PAR shift to state 177
-- On NULL_EVENT shift to state 182
-- On MINUS shift to state 189
-- On MIN shift to state 191
-- On MAX shift to state 193
-- On LOG shift to state 195
-- On LABEL shift to state 197
-- On INT shift to state 198
-- On INFINITY shift to state 199
-- On ID shift to state 200
-- On FLOAT shift to state 201
-- On EXPONENT shift to state 202
-- On EVENT shift to state 204
-- On EMAX shift to state 205
-- On CPUTIME shift to state 206
-- On COSINUS shift to state 207
-- On ABS shift to state 209
-- On variable shift to state 211
-- On small_alg_expr shift to state 228
-- On nbr shift to state 213
-- On constant shift to state 214
-- On alg_expr_up_to_sum shift to state 264
-- On alg_expr_up_to_prod shift to state 251
-- On alg_expr_up_to_mod shift to state 247
## Reductions:

State 264:
## Known stack suffix:
## alg_expr_up_to_if MINUS annot alg_expr_up_to_sum
## LR(1) items:
alg_expr_up_to_if -> alg_expr_up_to_if MINUS annot alg_expr_up_to_sum . [ TRUE TOKEN THEN STRING SMALLER SIGNATURE SEMICOLON RAR PLUS PLOT PIPE PERT OR OP_PAR OP_CUR OBS MINUS LRAR LET LABEL INIT ID GREATER FALSE EQUAL EOF ELSE DOT DO DIFF CONFIG COMMA COLON CL_PAR CL_CUR AND ]
alg_expr_up_to_sum -> alg_expr_up_to_sum . MULT annot alg_expr_up_to_prod [ TRUE TOKEN THEN STRING SMALLER SIGNATURE SEMICOLON RAR PLUS PLOT PIPE PERT OR OP_PAR OP_CUR OBS MULT MINUS LRAR LET LABEL INIT ID GREATER FALSE EQUAL EOF ELSE DOT DO DIV DIFF CONFIG COMMA COLON CL_PAR CL_CUR AND ]
alg_expr_up_to_sum -> alg_expr_up_to_sum . DIV annot alg_expr_up_to_prod [ TRUE TOKEN THEN STRING SMALLER SIGNATURE SEMICOLON RAR PLUS PLOT PIPE PERT OR OP_PAR OP_CUR OBS MULT MINUS LRAR LET LABEL INIT ID GREATER FALSE EQUAL EOF ELSE DOT DO DIV DIFF CONFIG COMMA COLON CL_PAR CL_CUR AND ]
## Transitions:
-- On MULT shift to state 241
-- On DIV shift to state 248
## Reductions:
-- On TRUE reduce production alg_expr_up_to_if -> alg_expr_up_to_if MINUS annot alg_expr_up_to_sum
-- On TOKEN reduce production alg_expr_up_to_if -> alg_expr_up_to_if MINUS annot alg_expr_up_to_sum
-- On THEN reduce production alg_expr_up_to_if -> alg_expr_up_to_if MINUS annot alg_expr_up_to_sum
-- On STRING reduce production alg_expr_up_to_if -> alg_expr_up_to_if MINUS annot alg_expr_up_to_sum
-- On SMALLER reduce production alg_expr_up_to_if -> alg_expr_up_to_if MINUS annot alg_expr_up_to_sum
-- On SIGNATURE reduce production alg_expr_up_to_if -> alg_expr_up_to_if MINUS annot alg_expr_up_to_sum
-- On SEMICOLON reduce production alg_expr_up_to_if -> alg_expr_up_to_if MINUS annot alg_expr_up_to_sum
-- On RAR reduce production alg_expr_up_to_if -> alg_expr_up_to_if MINUS annot alg_expr_up_to_sum
-- On PLUS reduce production alg_expr_up_to_if -> alg_expr_up_to_if MINUS annot alg_expr_up_to_sum
-- On PLOT reduce production alg_expr_up_to_if -> alg_expr_up_to_if MINUS annot alg_expr_up_to_sum
-- On PIPE reduce production alg_expr_up_to_if -> alg_expr_up_to_if MINUS annot alg_expr_up_to_sum
-- On PERT reduce production alg_expr_up_to_if -> alg_expr_up_to_if MINUS annot alg_expr_up_to_sum
-- On OR reduce production alg_expr_up_to_if -> alg_expr_up_to_if MINUS annot alg_expr_up_to_sum
-- On OP_PAR reduce production alg_expr_up_to_if -> alg_expr_up_to_if MINUS annot alg_expr_up_to_sum
-- On OP_CUR reduce production alg_expr_up_to_if -> alg_expr_up_to_if MINUS annot alg_expr_up_to_sum
-- On OBS reduce production alg_expr_up_to_if -> alg_expr_up_to_if MINUS annot alg_expr_up_to_sum
-- On MINUS reduce production alg_expr_up_to_if -> alg_expr_up_to_if MINUS annot alg_expr_up_to_sum
-- On LRAR reduce production alg_expr_up_to_if -> alg_expr_up_to_if MINUS annot alg_expr_up_to_sum
-- On LET reduce production alg_expr_up_to_if -> alg_expr_up_to_if MINUS annot alg_expr_up_to_sum
-- On LABEL reduce production alg_expr_up_to_if -> alg_expr_up_to_if MINUS annot alg_expr_up_to_sum
-- On INIT reduce production alg_expr_up_to_if -> alg_expr_up_to_if MINUS annot alg_expr_up_to_sum
-- On ID reduce production alg_expr_up_to_if -> alg_expr_up_to_if MINUS annot alg_expr_up_to_sum
-- On GREATER reduce production alg_expr_up_to_if -> alg_expr_up_to_if MINUS annot alg_expr_up_to_sum
-- On FALSE reduce production alg_expr_up_to_if -> alg_expr_up_to_if MINUS annot alg_expr_up_to_sum
-- On EQUAL reduce production alg_expr_up_to_if -> alg_expr_up_to_if MINUS annot alg_expr_up_to_sum
-- On EOF reduce production alg_expr_up_to_if -> alg_expr_up_to_if MINUS annot alg_expr_up_to_sum
-- On ELSE reduce production alg_expr_up_to_if -> alg_expr_up_to_if MINUS annot alg_expr_up_to_sum
-- On DOT reduce production alg_expr_up_to_if -> alg_expr_up_to_if MINUS annot alg_expr_up_to_sum
-- On DO reduce production alg_expr_up_to_if -> alg_expr_up_to_if MINUS annot alg_expr_up_to_sum
-- On DIFF reduce production alg_expr_up_to_if -> alg_expr_up_to_if MINUS annot alg_expr_up_to_sum
-- On CONFIG reduce production alg_expr_up_to_if -> alg_expr_up_to_if MINUS annot alg_expr_up_to_sum
-- On COMMA reduce production alg_expr_up_to_if -> alg_expr_up_to_if MINUS annot alg_expr_up_to_sum
-- On COLON reduce production alg_expr_up_to_if -> alg_expr_up_to_if MINUS annot alg_expr_up_to_sum
-- On CL_PAR reduce production alg_expr_up_to_if -> alg_expr_up_to_if MINUS annot alg_expr_up_to_sum
-- On CL_CUR reduce production alg_expr_up_to_if -> alg_expr_up_to_if MINUS annot alg_expr_up_to_sum
-- On AND reduce production alg_expr_up_to_if -> alg_expr_up_to_if MINUS annot alg_expr_up_to_sum

State 265:
## Known stack suffix:
## alg_expr_up_to_if GREATER
## LR(1) items:
bool_expr_comp -> alg_expr_up_to_if GREATER . annot alg_expr [ TOKEN THEN SIGNATURE SEMICOLON RAR PLOT PIPE PERT OR OBS LRAR LET LABEL INIT ID EOF DOT DO CONFIG CL_PAR AND ]
## Transitions:
-- On SPACE shift to state 2
-- On NEWLINE shift to state 3
-- On COMMENT shift to state 4
-- On annot shift to state 266
## Reductions:
-- On TRUE reduce production annot ->
-- On TMAX reduce production annot ->
-- On TIME reduce production annot ->
-- On TAN reduce production annot ->
-- On SQRT reduce production annot ->
-- On SINUS reduce production annot ->
-- On PIPE reduce production annot ->
-- On OP_PAR reduce production annot ->
-- On NULL_EVENT reduce production annot ->
-- On NOT reduce production annot ->
-- On MINUS reduce production annot ->
-- On MIN reduce production annot ->
-- On MAX reduce production annot ->
-- On LOG reduce production annot ->
-- On LABEL reduce production annot ->
-- On INT reduce production annot ->
-- On INFINITY reduce production annot ->
-- On ID reduce production annot ->
-- On FLOAT reduce production annot ->
-- On FALSE reduce production annot ->
-- On EXPONENT reduce production annot ->
-- On EVENT reduce production annot ->
-- On EMAX reduce production annot ->
-- On CPUTIME reduce production annot ->
-- On COSINUS reduce production annot ->
-- On ABS reduce production annot ->

State 266:
## Known stack suffix:
## alg_expr_up_to_if GREATER annot
## LR(1) items:
bool_expr_comp -> alg_expr_up_to_if GREATER annot . alg_expr [ TOKEN THEN SIGNATURE SEMICOLON RAR PLOT PIPE PERT OR OBS LRAR LET LABEL INIT ID EOF DOT DO CONFIG CL_PAR AND ]
## Transitions:
-- On TRUE shift to state 179
-- On TMAX shift to state 162
-- On TIME shift to state 163
-- On TAN shift to state 164
-- On SQRT shift to state 166
-- On SINUS shift to state 168
-- On PIPE shift to state 170
-- On OP_PAR shift to state 180
-- On NULL_EVENT shift to state 182
-- On NOT shift to state 183
-- On MINUS shift to state 189
-- On MIN shift to state 191
-- On MAX shift to state 193
-- On LOG shift to state 195
-- On LABEL shift to state 197
-- On INT shift to state 198
-- On INFINITY shift to state 199
-- On ID shift to state 200
-- On FLOAT shift to state 201
-- On FALSE shift to state 225
-- On EXPONENT shift to state 202
-- On EVENT shift to state 204
-- On EMAX shift to state 205
-- On CPUTIME shift to state 206
-- On COSINUS shift to state 207
-- On ABS shift to state 209
-- On variable shift to state 211
-- On small_bool_expr shift to state 226
-- On small_alg_expr shift to state 228
-- On nbr shift to state 213
-- On constant shift to state 214
-- On bool_expr_no_or shift to state 233
-- On bool_expr_comp shift to state 236
-- On bool_expr shift to state 255
-- On alg_expr_up_to_sum shift to state 240
-- On alg_expr_up_to_prod shift to state 251
-- On alg_expr_up_to_mod shift to state 247
-- On alg_expr_up_to_if shift to state 258
-- On alg_expr shift to state 267
## Reductions:

State 267:
## Known stack suffix:
## alg_expr_up_to_if GREATER annot alg_expr
## LR(1) items:
bool_expr_comp -> alg_expr_up_to_if GREATER annot alg_expr . [ TOKEN THEN SIGNATURE SEMICOLON RAR PLOT PIPE PERT OR OBS LRAR LET LABEL INIT ID EOF DOT DO CONFIG CL_PAR AND ]
## Transitions:
## Reductions:
-- On TOKEN reduce production bool_expr_comp -> alg_expr_up_to_if GREATER annot alg_expr
-- On THEN reduce production bool_expr_comp -> alg_expr_up_to_if GREATER annot alg_expr
-- On SIGNATURE reduce production bool_expr_comp -> alg_expr_up_to_if GREATER annot alg_expr
-- On SEMICOLON reduce production bool_expr_comp -> alg_expr_up_to_if GREATER annot alg_expr
-- On RAR reduce production bool_expr_comp -> alg_expr_up_to_if GREATER annot alg_expr
-- On PLOT reduce production bool_expr_comp -> alg_expr_up_to_if GREATER annot alg_expr
-- On PIPE reduce production bool_expr_comp -> alg_expr_up_to_if GREATER annot alg_expr
-- On PERT reduce production bool_expr_comp -> alg_expr_up_to_if GREATER annot alg_expr
-- On OR reduce production bool_expr_comp -> alg_expr_up_to_if GREATER annot alg_expr
-- On OBS reduce production bool_expr_comp -> alg_expr_up_to_if GREATER annot alg_expr
-- On LRAR reduce production bool_expr_comp -> alg_expr_up_to_if GREATER annot alg_expr
-- On LET reduce production bool_expr_comp -> alg_expr_up_to_if GREATER annot alg_expr
-- On LABEL reduce production bool_expr_comp -> alg_expr_up_to_if GREATER annot alg_expr
-- On INIT reduce production bool_expr_comp -> alg_expr_up_to_if GREATER annot alg_expr
-- On ID reduce production bool_expr_comp -> alg_expr_up_to_if GREATER annot alg_expr
-- On EOF reduce production bool_expr_comp -> alg_expr_up_to_if GREATER annot alg_expr
-- On DOT reduce production bool_expr_comp -> alg_expr_up_to_if GREATER annot alg_expr
-- On DO reduce production bool_expr_comp -> alg_expr_up_to_if GREATER annot alg_expr
-- On CONFIG reduce production bool_expr_comp -> alg_expr_up_to_if GREATER annot alg_expr
-- On CL_PAR reduce production bool_expr_comp -> alg_expr_up_to_if GREATER annot alg_expr
-- On AND reduce production bool_expr_comp -> alg_expr_up_to_if GREATER annot alg_expr

State 268:
## Known stack suffix:
## alg_expr_up_to_if EQUAL
## LR(1) items:
bool_expr_comp -> alg_expr_up_to_if EQUAL . annot alg_expr [ TOKEN THEN SIGNATURE SEMICOLON RAR PLOT PIPE PERT OR OBS LRAR LET LABEL INIT ID EOF DOT DO CONFIG CL_PAR AND ]
## Transitions:
-- On SPACE shift to state 2
-- On NEWLINE shift to state 3
-- On COMMENT shift to state 4
-- On annot shift to state 269
## Reductions:
-- On TRUE reduce production annot ->
-- On TMAX reduce production annot ->
-- On TIME reduce production annot ->
-- On TAN reduce production annot ->
-- On SQRT reduce production annot ->
-- On SINUS reduce production annot ->
-- On PIPE reduce production annot ->
-- On OP_PAR reduce production annot ->
-- On NULL_EVENT reduce production annot ->
-- On NOT reduce production annot ->
-- On MINUS reduce production annot ->
-- On MIN reduce production annot ->
-- On MAX reduce production annot ->
-- On LOG reduce production annot ->
-- On LABEL reduce production annot ->
-- On INT reduce production annot ->
-- On INFINITY reduce production annot ->
-- On ID reduce production annot ->
-- On FLOAT reduce production annot ->
-- On FALSE reduce production annot ->
-- On EXPONENT reduce production annot ->
-- On EVENT reduce production annot ->
-- On EMAX reduce production annot ->
-- On CPUTIME reduce production annot ->
-- On COSINUS reduce production annot ->
-- On ABS reduce production annot ->

State 269:
## Known stack suffix:
## alg_expr_up_to_if EQUAL annot
## LR(1) items:
bool_expr_comp -> alg_expr_up_to_if EQUAL annot . alg_expr [ TOKEN THEN SIGNATURE SEMICOLON RAR PLOT PIPE PERT OR OBS LRAR LET LABEL INIT ID EOF DOT DO CONFIG CL_PAR AND ]
## Transitions:
-- On TRUE shift to state 179
-- On TMAX shift to state 162
-- On TIME shift to state 163
-- On TAN shift to state 164
-- On SQRT shift to state 166
-- On SINUS shift to state 168
-- On PIPE shift to state 170
-- On OP_PAR shift to state 180
-- On NULL_EVENT shift to state 182
-- On NOT shift to state 183
-- On MINUS shift to state 189
-- On MIN shift to state 191
-- On MAX shift to state 193
-- On LOG shift to state 195
-- On LABEL shift to state 197
-- On INT shift to state 198
-- On INFINITY shift to state 199
-- On ID shift to state 200
-- On FLOAT shift to state 201
-- On FALSE shift to state 225
-- On EXPONENT shift to state 202
-- On EVENT shift to state 204
-- On EMAX shift to state 205
-- On CPUTIME shift to state 206
-- On COSINUS shift to state 207
-- On ABS shift to state 209
-- On variable shift to state 211
-- On small_bool_expr shift to state 226
-- On small_alg_expr shift to state 228
-- On nbr shift to state 213
-- On constant shift to state 214
-- On bool_expr_no_or shift to state 233
-- On bool_expr_comp shift to state 236
-- On bool_expr shift to state 255
-- On alg_expr_up_to_sum shift to state 240
-- On alg_expr_up_to_prod shift to state 251
-- On alg_expr_up_to_mod shift to state 247
-- On alg_expr_up_to_if shift to state 258
-- On alg_expr shift to state 270
## Reductions:

State 270:
## Known stack suffix:
## alg_expr_up_to_if EQUAL annot alg_expr
## LR(1) items:
bool_expr_comp -> alg_expr_up_to_if EQUAL annot alg_expr . [ TOKEN THEN SIGNATURE SEMICOLON RAR PLOT PIPE PERT OR OBS LRAR LET LABEL INIT ID EOF DOT DO CONFIG CL_PAR AND ]
## Transitions:
## Reductions:
-- On TOKEN reduce production bool_expr_comp -> alg_expr_up_to_if EQUAL annot alg_expr
-- On THEN reduce production bool_expr_comp -> alg_expr_up_to_if EQUAL annot alg_expr
-- On SIGNATURE reduce production bool_expr_comp -> alg_expr_up_to_if EQUAL annot alg_expr
-- On SEMICOLON reduce production bool_expr_comp -> alg_expr_up_to_if EQUAL annot alg_expr
-- On RAR reduce production bool_expr_comp -> alg_expr_up_to_if EQUAL annot alg_expr
-- On PLOT reduce production bool_expr_comp -> alg_expr_up_to_if EQUAL annot alg_expr
-- On PIPE reduce production bool_expr_comp -> alg_expr_up_to_if EQUAL annot alg_expr
-- On PERT reduce production bool_expr_comp -> alg_expr_up_to_if EQUAL annot alg_expr
-- On OR reduce production bool_expr_comp -> alg_expr_up_to_if EQUAL annot alg_expr
-- On OBS reduce production bool_expr_comp -> alg_expr_up_to_if EQUAL annot alg_expr
-- On LRAR reduce production bool_expr_comp -> alg_expr_up_to_if EQUAL annot alg_expr
-- On LET reduce production bool_expr_comp -> alg_expr_up_to_if EQUAL annot alg_expr
-- On LABEL reduce production bool_expr_comp -> alg_expr_up_to_if EQUAL annot alg_expr
-- On INIT reduce production bool_expr_comp -> alg_expr_up_to_if EQUAL annot alg_expr
-- On ID reduce production bool_expr_comp -> alg_expr_up_to_if EQUAL annot alg_expr
-- On EOF reduce production bool_expr_comp -> alg_expr_up_to_if EQUAL annot alg_expr
-- On DOT reduce production bool_expr_comp -> alg_expr_up_to_if EQUAL annot alg_expr
-- On DO reduce production bool_expr_comp -> alg_expr_up_to_if EQUAL annot alg_expr
-- On CONFIG reduce production bool_expr_comp -> alg_expr_up_to_if EQUAL annot alg_expr
-- On CL_PAR reduce production bool_expr_comp -> alg_expr_up_to_if EQUAL annot alg_expr
-- On AND reduce production bool_expr_comp -> alg_expr_up_to_if EQUAL annot alg_expr

State 271:
## Known stack suffix:
## alg_expr_up_to_if DIFF
## LR(1) items:
bool_expr_comp -> alg_expr_up_to_if DIFF . annot alg_expr [ TOKEN THEN SIGNATURE SEMICOLON RAR PLOT PIPE PERT OR OBS LRAR LET LABEL INIT ID EOF DOT DO CONFIG CL_PAR AND ]
## Transitions:
-- On SPACE shift to state 2
-- On NEWLINE shift to state 3
-- On COMMENT shift to state 4
-- On annot shift to state 272
## Reductions:
-- On TRUE reduce production annot ->
-- On TMAX reduce production annot ->
-- On TIME reduce production annot ->
-- On TAN reduce production annot ->
-- On SQRT reduce production annot ->
-- On SINUS reduce production annot ->
-- On PIPE reduce production annot ->
-- On OP_PAR reduce production annot ->
-- On NULL_EVENT reduce production annot ->
-- On NOT reduce production annot ->
-- On MINUS reduce production annot ->
-- On MIN reduce production annot ->
-- On MAX reduce production annot ->
-- On LOG reduce production annot ->
-- On LABEL reduce production annot ->
-- On INT reduce production annot ->
-- On INFINITY reduce production annot ->
-- On ID reduce production annot ->
-- On FLOAT reduce production annot ->
-- On FALSE reduce production annot ->
-- On EXPONENT reduce production annot ->
-- On EVENT reduce production annot ->
-- On EMAX reduce production annot ->
-- On CPUTIME reduce production annot ->
-- On COSINUS reduce production annot ->
-- On ABS reduce production annot ->

State 272:
## Known stack suffix:
## alg_expr_up_to_if DIFF annot
## LR(1) items:
bool_expr_comp -> alg_expr_up_to_if DIFF annot . alg_expr [ TOKEN THEN SIGNATURE SEMICOLON RAR PLOT PIPE PERT OR OBS LRAR LET LABEL INIT ID EOF DOT DO CONFIG CL_PAR AND ]
## Transitions:
-- On TRUE shift to state 179
-- On TMAX shift to state 162
-- On TIME shift to state 163
-- On TAN shift to state 164
-- On SQRT shift to state 166
-- On SINUS shift to state 168
-- On PIPE shift to state 170
-- On OP_PAR shift to state 180
-- On NULL_EVENT shift to state 182
-- On NOT shift to state 183
-- On MINUS shift to state 189
-- On MIN shift to state 191
-- On MAX shift to state 193
-- On LOG shift to state 195
-- On LABEL shift to state 197
-- On INT shift to state 198
-- On INFINITY shift to state 199
-- On ID shift to state 200
-- On FLOAT shift to state 201
-- On FALSE shift to state 225
-- On EXPONENT shift to state 202
-- On EVENT shift to state 204
-- On EMAX shift to state 205
-- On CPUTIME shift to state 206
-- On COSINUS shift to state 207
-- On ABS shift to state 209
-- On variable shift to state 211
-- On small_bool_expr shift to state 226
-- On small_alg_expr shift to state 228
-- On nbr shift to state 213
-- On constant shift to state 214
-- On bool_expr_no_or shift to state 233
-- On bool_expr_comp shift to state 236
-- On bool_expr shift to state 255
-- On alg_expr_up_to_sum shift to state 240
-- On alg_expr_up_to_prod shift to state 251
-- On alg_expr_up_to_mod shift to state 247
-- On alg_expr_up_to_if shift to state 258
-- On alg_expr shift to state 273
## Reductions:

State 273:
## Known stack suffix:
## alg_expr_up_to_if DIFF annot alg_expr
## LR(1) items:
bool_expr_comp -> alg_expr_up_to_if DIFF annot alg_expr . [ TOKEN THEN SIGNATURE SEMICOLON RAR PLOT PIPE PERT OR OBS LRAR LET LABEL INIT ID EOF DOT DO CONFIG CL_PAR AND ]
## Transitions:
## Reductions:
-- On TOKEN reduce production bool_expr_comp -> alg_expr_up_to_if DIFF annot alg_expr
-- On THEN reduce production bool_expr_comp -> alg_expr_up_to_if DIFF annot alg_expr
-- On SIGNATURE reduce production bool_expr_comp -> alg_expr_up_to_if DIFF annot alg_expr
-- On SEMICOLON reduce production bool_expr_comp -> alg_expr_up_to_if DIFF annot alg_expr
-- On RAR reduce production bool_expr_comp -> alg_expr_up_to_if DIFF annot alg_expr
-- On PLOT reduce production bool_expr_comp -> alg_expr_up_to_if DIFF annot alg_expr
-- On PIPE reduce production bool_expr_comp -> alg_expr_up_to_if DIFF annot alg_expr
-- On PERT reduce production bool_expr_comp -> alg_expr_up_to_if DIFF annot alg_expr
-- On OR reduce production bool_expr_comp -> alg_expr_up_to_if DIFF annot alg_expr
-- On OBS reduce production bool_expr_comp -> alg_expr_up_to_if DIFF annot alg_expr
-- On LRAR reduce production bool_expr_comp -> alg_expr_up_to_if DIFF annot alg_expr
-- On LET reduce production bool_expr_comp -> alg_expr_up_to_if DIFF annot alg_expr
-- On LABEL reduce production bool_expr_comp -> alg_expr_up_to_if DIFF annot alg_expr
-- On INIT reduce production bool_expr_comp -> alg_expr_up_to_if DIFF annot alg_expr
-- On ID reduce production bool_expr_comp -> alg_expr_up_to_if DIFF annot alg_expr
-- On EOF reduce production bool_expr_comp -> alg_expr_up_to_if DIFF annot alg_expr
-- On DOT reduce production bool_expr_comp -> alg_expr_up_to_if DIFF annot alg_expr
-- On DO reduce production bool_expr_comp -> alg_expr_up_to_if DIFF annot alg_expr
-- On CONFIG reduce production bool_expr_comp -> alg_expr_up_to_if DIFF annot alg_expr
-- On CL_PAR reduce production bool_expr_comp -> alg_expr_up_to_if DIFF annot alg_expr
-- On AND reduce production bool_expr_comp -> alg_expr_up_to_if DIFF annot alg_expr

State 274:
## Known stack suffix:
## bool_expr THEN annot alg_expr
## LR(1) items:
alg_expr -> bool_expr THEN annot alg_expr . ELSE annot small_alg_expr annot [ TOKEN THEN SIGNATURE SEMICOLON RAR PLOT PIPE PERT OR OP_PAR OP_CUR OBS LRAR LET LABEL INIT ID EOF ELSE DOT DO CONFIG COMMA COLON CL_PAR CL_CUR AND ]
## Transitions:
-- On ELSE shift to state 275
## Reductions:

State 275:
## Known stack suffix:
## bool_expr THEN annot alg_expr ELSE
## LR(1) items:
alg_expr -> bool_expr THEN annot alg_expr ELSE . annot small_alg_expr annot [ TOKEN THEN SIGNATURE SEMICOLON RAR PLOT PIPE PERT OR OP_PAR OP_CUR OBS LRAR LET LABEL INIT ID EOF ELSE DOT DO CONFIG COMMA COLON CL_PAR CL_CUR AND ]
## Transitions:
-- On SPACE shift to state 2
-- On NEWLINE shift to state 3
-- On COMMENT shift to state 4
-- On annot shift to state 276
## Reductions:
-- On TMAX reduce production annot ->
-- On TIME reduce production annot ->
-- On TAN reduce production annot ->
-- On SQRT reduce production annot ->
-- On SINUS reduce production annot ->
-- On PIPE reduce production annot ->
-- On OP_PAR reduce production annot ->
-- On NULL_EVENT reduce production annot ->
-- On MINUS reduce production annot ->
-- On MIN reduce production annot ->
-- On MAX reduce production annot ->
-- On LOG reduce production annot ->
-- On LABEL reduce production annot ->
-- On INT reduce production annot ->
-- On INFINITY reduce production annot ->
-- On ID reduce production annot ->
-- On FLOAT reduce production annot ->
-- On EXPONENT reduce production annot ->
-- On EVENT reduce production annot ->
-- On EMAX reduce production annot ->
-- On CPUTIME reduce production annot ->
-- On COSINUS reduce production annot ->
-- On ABS reduce production annot ->

State 276:
## Known stack suffix:
## bool_expr THEN annot alg_expr ELSE annot
## LR(1) items:
alg_expr -> bool_expr THEN annot alg_expr ELSE annot . small_alg_expr annot [ TOKEN THEN SIGNATURE SEMICOLON RAR PLOT PIPE PERT OR OP_PAR OP_CUR OBS LRAR LET LABEL INIT ID EOF ELSE DOT DO CONFIG COMMA COLON CL_PAR CL_CUR AND ]
## Transitions:
-- On TMAX shift to state 162
-- On TIME shift to state 163
-- On TAN shift to state 164
-- On SQRT shift to state 166
-- On SINUS shift to state 168
-- On PIPE shift to state 170
-- On OP_PAR shift to state 177
-- On NULL_EVENT shift to state 182
-- On MINUS shift to state 189
-- On MIN shift to state 191
-- On MAX shift to state 193
-- On LOG shift to state 195
-- On LABEL shift to state 197
-- On INT shift to state 198
-- On INFINITY shift to state 199
-- On ID shift to state 200
-- On FLOAT shift to state 201
-- On EXPONENT shift to state 202
-- On EVENT shift to state 204
-- On EMAX shift to state 205
-- On CPUTIME shift to state 206
-- On COSINUS shift to state 207
-- On ABS shift to state 209
-- On variable shift to state 211
-- On small_alg_expr shift to state 277
-- On nbr shift to state 213
-- On constant shift to state 214
## Reductions:

State 277:
## Known stack suffix:
## bool_expr THEN annot alg_expr ELSE annot small_alg_expr
## LR(1) items:
alg_expr -> bool_expr THEN annot alg_expr ELSE annot small_alg_expr . annot [ TOKEN THEN SIGNATURE SEMICOLON RAR PLOT PIPE PERT OR OP_PAR OP_CUR OBS LRAR LET LABEL INIT ID EOF ELSE DOT DO CONFIG COMMA COLON CL_PAR CL_CUR AND ]
## Transitions:
-- On SPACE shift to state 2
-- On NEWLINE shift to state 3
-- On COMMENT shift to state 4
-- On annot shift to state 278
## Reductions:
-- On TOKEN reduce production annot ->
-- On THEN reduce production annot ->
-- On SIGNATURE reduce production annot ->
-- On SEMICOLON reduce production annot ->
-- On RAR reduce production annot ->
-- On PLOT reduce production annot ->
-- On PIPE reduce production annot ->
-- On PERT reduce production annot ->
-- On OR reduce production annot ->
-- On OP_PAR reduce production annot ->
-- On OP_CUR reduce production annot ->
-- On OBS reduce production annot ->
-- On LRAR reduce production annot ->
-- On LET reduce production annot ->
-- On LABEL reduce production annot ->
-- On INIT reduce production annot ->
-- On ID reduce production annot ->
-- On EOF reduce production annot ->
-- On ELSE reduce production annot ->
-- On DOT reduce production annot ->
-- On DO reduce production annot ->
-- On CONFIG reduce production annot ->
-- On COMMA reduce production annot ->
-- On COLON reduce production annot ->
-- On CL_PAR reduce production annot ->
-- On CL_CUR reduce production annot ->
-- On AND reduce production annot ->

State 278:
## Known stack suffix:
## bool_expr THEN annot alg_expr ELSE annot small_alg_expr annot
## LR(1) items:
alg_expr -> bool_expr THEN annot alg_expr ELSE annot small_alg_expr annot . [ TOKEN THEN SIGNATURE SEMICOLON RAR PLOT PIPE PERT OR OP_PAR OP_CUR OBS LRAR LET LABEL INIT ID EOF ELSE DOT DO CONFIG COMMA COLON CL_PAR CL_CUR AND ]
## Transitions:
## Reductions:
-- On TOKEN reduce production alg_expr -> bool_expr THEN annot alg_expr ELSE annot small_alg_expr annot
-- On THEN reduce production alg_expr -> bool_expr THEN annot alg_expr ELSE annot small_alg_expr annot
-- On SIGNATURE reduce production alg_expr -> bool_expr THEN annot alg_expr ELSE annot small_alg_expr annot
-- On SEMICOLON reduce production alg_expr -> bool_expr THEN annot alg_expr ELSE annot small_alg_expr annot
-- On RAR reduce production alg_expr -> bool_expr THEN annot alg_expr ELSE annot small_alg_expr annot
-- On PLOT reduce production alg_expr -> bool_expr THEN annot alg_expr ELSE annot small_alg_expr annot
-- On PIPE reduce production alg_expr -> bool_expr THEN annot alg_expr ELSE annot small_alg_expr annot
-- On PERT reduce production alg_expr -> bool_expr THEN annot alg_expr ELSE annot small_alg_expr annot
-- On OR reduce production alg_expr -> bool_expr THEN annot alg_expr ELSE annot small_alg_expr annot
-- On OP_PAR reduce production alg_expr -> bool_expr THEN annot alg_expr ELSE annot small_alg_expr annot
-- On OP_CUR reduce production alg_expr -> bool_expr THEN annot alg_expr ELSE annot small_alg_expr annot
-- On OBS reduce production alg_expr -> bool_expr THEN annot alg_expr ELSE annot small_alg_expr annot
-- On LRAR reduce production alg_expr -> bool_expr THEN annot alg_expr ELSE annot small_alg_expr annot
-- On LET reduce production alg_expr -> bool_expr THEN annot alg_expr ELSE annot small_alg_expr annot
-- On LABEL reduce production alg_expr -> bool_expr THEN annot alg_expr ELSE annot small_alg_expr annot
-- On INIT reduce production alg_expr -> bool_expr THEN annot alg_expr ELSE annot small_alg_expr annot
-- On ID reduce production alg_expr -> bool_expr THEN annot alg_expr ELSE annot small_alg_expr annot
-- On EOF reduce production alg_expr -> bool_expr THEN annot alg_expr ELSE annot small_alg_expr annot
-- On ELSE reduce production alg_expr -> bool_expr THEN annot alg_expr ELSE annot small_alg_expr annot
-- On DOT reduce production alg_expr -> bool_expr THEN annot alg_expr ELSE annot small_alg_expr annot
-- On DO reduce production alg_expr -> bool_expr THEN annot alg_expr ELSE annot small_alg_expr annot
-- On CONFIG reduce production alg_expr -> bool_expr THEN annot alg_expr ELSE annot small_alg_expr annot
-- On COMMA reduce production alg_expr -> bool_expr THEN annot alg_expr ELSE annot small_alg_expr annot
-- On COLON reduce production alg_expr -> bool_expr THEN annot alg_expr ELSE annot small_alg_expr annot
-- On CL_PAR reduce production alg_expr -> bool_expr THEN annot alg_expr ELSE annot small_alg_expr annot
-- On CL_CUR reduce production alg_expr -> bool_expr THEN annot alg_expr ELSE annot small_alg_expr annot
-- On AND reduce production alg_expr -> bool_expr THEN annot alg_expr ELSE annot small_alg_expr annot

State 279:
## Known stack suffix:
## alg_expr_up_to_if SMALLER annot alg_expr
## LR(1) items:
bool_expr_comp -> alg_expr_up_to_if SMALLER annot alg_expr . [ TOKEN THEN SIGNATURE SEMICOLON RAR PLOT PIPE PERT OR OBS LRAR LET LABEL INIT ID EOF DOT DO CONFIG CL_PAR AND ]
## Transitions:
## Reductions:
-- On TOKEN reduce production bool_expr_comp -> alg_expr_up_to_if SMALLER annot alg_expr
-- On THEN reduce production bool_expr_comp -> alg_expr_up_to_if SMALLER annot alg_expr
-- On SIGNATURE reduce production bool_expr_comp -> alg_expr_up_to_if SMALLER annot alg_expr
-- On SEMICOLON reduce production bool_expr_comp -> alg_expr_up_to_if SMALLER annot alg_expr
-- On RAR reduce production bool_expr_comp -> alg_expr_up_to_if SMALLER annot alg_expr
-- On PLOT reduce production bool_expr_comp -> alg_expr_up_to_if SMALLER annot alg_expr
-- On PIPE reduce production bool_expr_comp -> alg_expr_up_to_if SMALLER annot alg_expr
-- On PERT reduce production bool_expr_comp -> alg_expr_up_to_if SMALLER annot alg_expr
-- On OR reduce production bool_expr_comp -> alg_expr_up_to_if SMALLER annot alg_expr
-- On OBS reduce production bool_expr_comp -> alg_expr_up_to_if SMALLER annot alg_expr
-- On LRAR reduce production bool_expr_comp -> alg_expr_up_to_if SMALLER annot alg_expr
-- On LET reduce production bool_expr_comp -> alg_expr_up_to_if SMALLER annot alg_expr
-- On LABEL reduce production bool_expr_comp -> alg_expr_up_to_if SMALLER annot alg_expr
-- On INIT reduce production bool_expr_comp -> alg_expr_up_to_if SMALLER annot alg_expr
-- On ID reduce production bool_expr_comp -> alg_expr_up_to_if SMALLER annot alg_expr
-- On EOF reduce production bool_expr_comp -> alg_expr_up_to_if SMALLER annot alg_expr
-- On DOT reduce production bool_expr_comp -> alg_expr_up_to_if SMALLER annot alg_expr
-- On DO reduce production bool_expr_comp -> alg_expr_up_to_if SMALLER annot alg_expr
-- On CONFIG reduce production bool_expr_comp -> alg_expr_up_to_if SMALLER annot alg_expr
-- On CL_PAR reduce production bool_expr_comp -> alg_expr_up_to_if SMALLER annot alg_expr
-- On AND reduce production bool_expr_comp -> alg_expr_up_to_if SMALLER annot alg_expr

State 280:
## Known stack suffix:
## bool_expr_no_or OR annot bool_expr
## LR(1) items:
bool_expr -> bool_expr_no_or OR annot bool_expr . [ TOKEN THEN SIGNATURE SEMICOLON RAR PLOT PIPE PERT OBS LRAR LET LABEL INIT ID EOF DOT DO CONFIG CL_PAR ]
## Transitions:
## Reductions:
-- On TOKEN reduce production bool_expr -> bool_expr_no_or OR annot bool_expr
-- On THEN reduce production bool_expr -> bool_expr_no_or OR annot bool_expr
-- On SIGNATURE reduce production bool_expr -> bool_expr_no_or OR annot bool_expr
-- On SEMICOLON reduce production bool_expr -> bool_expr_no_or OR annot bool_expr
-- On RAR reduce production bool_expr -> bool_expr_no_or OR annot bool_expr
-- On PLOT reduce production bool_expr -> bool_expr_no_or OR annot bool_expr
-- On PIPE reduce production bool_expr -> bool_expr_no_or OR annot bool_expr
-- On PERT reduce production bool_expr -> bool_expr_no_or OR annot bool_expr
-- On OBS reduce production bool_expr -> bool_expr_no_or OR annot bool_expr
-- On LRAR reduce production bool_expr -> bool_expr_no_or OR annot bool_expr
-- On LET reduce production bool_expr -> bool_expr_no_or OR annot bool_expr
-- On LABEL reduce production bool_expr -> bool_expr_no_or OR annot bool_expr
-- On INIT reduce production bool_expr -> bool_expr_no_or OR annot bool_expr
-- On ID reduce production bool_expr -> bool_expr_no_or OR annot bool_expr
-- On EOF reduce production bool_expr -> bool_expr_no_or OR annot bool_expr
-- On DOT reduce production bool_expr -> bool_expr_no_or OR annot bool_expr
-- On DO reduce production bool_expr -> bool_expr_no_or OR annot bool_expr
-- On CONFIG reduce production bool_expr -> bool_expr_no_or OR annot bool_expr
-- On CL_PAR reduce production bool_expr -> bool_expr_no_or OR annot bool_expr

State 281:
## Known stack suffix:
## OP_PAR annot bool_expr
## LR(1) items:
alg_expr -> bool_expr . THEN annot alg_expr ELSE annot small_alg_expr annot [ CL_PAR ]
small_bool_expr -> OP_PAR annot bool_expr . CL_PAR [ TOKEN THEN SPACE SIGNATURE SEMICOLON RAR PLOT PIPE PERT OR OBS NEWLINE LRAR LET LABEL INIT ID EOF DOT DO CONFIG COMMENT CL_PAR AND ]
## Transitions:
-- On THEN shift to state 256
-- On CL_PAR shift to state 282
## Reductions:

State 282:
## Known stack suffix:
## OP_PAR annot bool_expr CL_PAR
## LR(1) items:
small_bool_expr -> OP_PAR annot bool_expr CL_PAR . [ TOKEN THEN SPACE SIGNATURE SEMICOLON RAR PLOT PIPE PERT OR OBS NEWLINE LRAR LET LABEL INIT ID EOF DOT DO CONFIG COMMENT CL_PAR AND ]
## Transitions:
## Reductions:
-- On TOKEN reduce production small_bool_expr -> OP_PAR annot bool_expr CL_PAR
-- On THEN reduce production small_bool_expr -> OP_PAR annot bool_expr CL_PAR
-- On SPACE reduce production small_bool_expr -> OP_PAR annot bool_expr CL_PAR
-- On SIGNATURE reduce production small_bool_expr -> OP_PAR annot bool_expr CL_PAR
-- On SEMICOLON reduce production small_bool_expr -> OP_PAR annot bool_expr CL_PAR
-- On RAR reduce production small_bool_expr -> OP_PAR annot bool_expr CL_PAR
-- On PLOT reduce production small_bool_expr -> OP_PAR annot bool_expr CL_PAR
-- On PIPE reduce production small_bool_expr -> OP_PAR annot bool_expr CL_PAR
-- On PERT reduce production small_bool_expr -> OP_PAR annot bool_expr CL_PAR
-- On OR reduce production small_bool_expr -> OP_PAR annot bool_expr CL_PAR
-- On OBS reduce production small_bool_expr -> OP_PAR annot bool_expr CL_PAR
-- On NEWLINE reduce production small_bool_expr -> OP_PAR annot bool_expr CL_PAR
-- On LRAR reduce production small_bool_expr -> OP_PAR annot bool_expr CL_PAR
-- On LET reduce production small_bool_expr -> OP_PAR annot bool_expr CL_PAR
-- On LABEL reduce production small_bool_expr -> OP_PAR annot bool_expr CL_PAR
-- On INIT reduce production small_bool_expr -> OP_PAR annot bool_expr CL_PAR
-- On ID reduce production small_bool_expr -> OP_PAR annot bool_expr CL_PAR
-- On EOF reduce production small_bool_expr -> OP_PAR annot bool_expr CL_PAR
-- On DOT reduce production small_bool_expr -> OP_PAR annot bool_expr CL_PAR
-- On DO reduce production small_bool_expr -> OP_PAR annot bool_expr CL_PAR
-- On CONFIG reduce production small_bool_expr -> OP_PAR annot bool_expr CL_PAR
-- On COMMENT reduce production small_bool_expr -> OP_PAR annot bool_expr CL_PAR
-- On CL_PAR reduce production small_bool_expr -> OP_PAR annot bool_expr CL_PAR
-- On AND reduce production small_bool_expr -> OP_PAR annot bool_expr CL_PAR

State 283:
## Known stack suffix:
## OP_PAR annot alg_expr
## LR(1) items:
small_alg_expr -> OP_PAR annot alg_expr . CL_PAR [ TRUE TOKEN TMAX TIME THEN TAN STRING SQRT SPACE SMALLER SINUS SIGNATURE SEMICOLON RAR POW PLUS PLOT PIPE PERT OR OP_PAR OP_CUR OBS NULL_EVENT NEWLINE MULT MOD MINUS MIN MAX LRAR LOG LET LABEL INT INIT INFINITY ID GREATER FLOAT FALSE EXPONENT EVENT EQUAL EOF EMAX ELSE DOT DO DIV DIFF CPUTIME COSINUS CONFIG COMMENT COMMA COLON CL_PAR CL_CUR AND ABS ]
## Transitions:
-- On CL_PAR shift to state 284
## Reductions:

State 284:
## Known stack suffix:
## OP_PAR annot alg_expr CL_PAR
## LR(1) items:
small_alg_expr -> OP_PAR annot alg_expr CL_PAR . [ TRUE TOKEN TMAX TIME THEN TAN STRING SQRT SPACE SMALLER SINUS SIGNATURE SEMICOLON RAR POW PLUS PLOT PIPE PERT OR OP_PAR OP_CUR OBS NULL_EVENT NEWLINE MULT MOD MINUS MIN MAX LRAR LOG LET LABEL INT INIT INFINITY ID GREATER FLOAT FALSE EXPONENT EVENT EQUAL EOF EMAX ELSE DOT DO DIV DIFF CPUTIME COSINUS CONFIG COMMENT COMMA COLON CL_PAR CL_CUR AND ABS ]
## Transitions:
## Reductions:
-- On TRUE reduce production small_alg_expr -> OP_PAR annot alg_expr CL_PAR
-- On TOKEN reduce production small_alg_expr -> OP_PAR annot alg_expr CL_PAR
-- On TMAX reduce production small_alg_expr -> OP_PAR annot alg_expr CL_PAR
-- On TIME reduce production small_alg_expr -> OP_PAR annot alg_expr CL_PAR
-- On THEN reduce production small_alg_expr -> OP_PAR annot alg_expr CL_PAR
-- On TAN reduce production small_alg_expr -> OP_PAR annot alg_expr CL_PAR
-- On STRING reduce production small_alg_expr -> OP_PAR annot alg_expr CL_PAR
-- On SQRT reduce production small_alg_expr -> OP_PAR annot alg_expr CL_PAR
-- On SPACE reduce production small_alg_expr -> OP_PAR annot alg_expr CL_PAR
-- On SMALLER reduce production small_alg_expr -> OP_PAR annot alg_expr CL_PAR
-- On SINUS reduce production small_alg_expr -> OP_PAR annot alg_expr CL_PAR
-- On SIGNATURE reduce production small_alg_expr -> OP_PAR annot alg_expr CL_PAR
-- On SEMICOLON reduce production small_alg_expr -> OP_PAR annot alg_expr CL_PAR
-- On RAR reduce production small_alg_expr -> OP_PAR annot alg_expr CL_PAR
-- On POW reduce production small_alg_expr -> OP_PAR annot alg_expr CL_PAR
-- On PLUS reduce production small_alg_expr -> OP_PAR annot alg_expr CL_PAR
-- On PLOT reduce production small_alg_expr -> OP_PAR annot alg_expr CL_PAR
-- On PIPE reduce production small_alg_expr -> OP_PAR annot alg_expr CL_PAR
-- On PERT reduce production small_alg_expr -> OP_PAR annot alg_expr CL_PAR
-- On OR reduce production small_alg_expr -> OP_PAR annot alg_expr CL_PAR
-- On OP_PAR reduce production small_alg_expr -> OP_PAR annot alg_expr CL_PAR
-- On OP_CUR reduce production small_alg_expr -> OP_PAR annot alg_expr CL_PAR
-- On OBS reduce production small_alg_expr -> OP_PAR annot alg_expr CL_PAR
-- On NULL_EVENT reduce production small_alg_expr -> OP_PAR annot alg_expr CL_PAR
-- On NEWLINE reduce production small_alg_expr -> OP_PAR annot alg_expr CL_PAR
-- On MULT reduce production small_alg_expr -> OP_PAR annot alg_expr CL_PAR
-- On MOD reduce production small_alg_expr -> OP_PAR annot alg_expr CL_PAR
-- On MINUS reduce production small_alg_expr -> OP_PAR annot alg_expr CL_PAR
-- On MIN reduce production small_alg_expr -> OP_PAR annot alg_expr CL_PAR
-- On MAX reduce production small_alg_expr -> OP_PAR annot alg_expr CL_PAR
-- On LRAR reduce production small_alg_expr -> OP_PAR annot alg_expr CL_PAR
-- On LOG reduce production small_alg_expr -> OP_PAR annot alg_expr CL_PAR
-- On LET reduce production small_alg_expr -> OP_PAR annot alg_expr CL_PAR
-- On LABEL reduce production small_alg_expr -> OP_PAR annot alg_expr CL_PAR
-- On INT reduce production small_alg_expr -> OP_PAR annot alg_expr CL_PAR
-- On INIT reduce production small_alg_expr -> OP_PAR annot alg_expr CL_PAR
-- On INFINITY reduce production small_alg_expr -> OP_PAR annot alg_expr CL_PAR
-- On ID reduce production small_alg_expr -> OP_PAR annot alg_expr CL_PAR
-- On GREATER reduce production small_alg_expr -> OP_PAR annot alg_expr CL_PAR
-- On FLOAT reduce production small_alg_expr -> OP_PAR annot alg_expr CL_PAR
-- On FALSE reduce production small_alg_expr -> OP_PAR annot alg_expr CL_PAR
-- On EXPONENT reduce production small_alg_expr -> OP_PAR annot alg_expr CL_PAR
-- On EVENT reduce production small_alg_expr -> OP_PAR annot alg_expr CL_PAR
-- On EQUAL reduce production small_alg_expr -> OP_PAR annot alg_expr CL_PAR
-- On EOF reduce production small_alg_expr -> OP_PAR annot alg_expr CL_PAR
-- On EMAX reduce production small_alg_expr -> OP_PAR annot alg_expr CL_PAR
-- On ELSE reduce production small_alg_expr -> OP_PAR annot alg_expr CL_PAR
-- On DOT reduce production small_alg_expr -> OP_PAR annot alg_expr CL_PAR
-- On DO reduce production small_alg_expr -> OP_PAR annot alg_expr CL_PAR
-- On DIV reduce production small_alg_expr -> OP_PAR annot alg_expr CL_PAR
-- On DIFF reduce production small_alg_expr -> OP_PAR annot alg_expr CL_PAR
-- On CPUTIME reduce production small_alg_expr -> OP_PAR annot alg_expr CL_PAR
-- On COSINUS reduce production small_alg_expr -> OP_PAR annot alg_expr CL_PAR
-- On CONFIG reduce production small_alg_expr -> OP_PAR annot alg_expr CL_PAR
-- On COMMENT reduce production small_alg_expr -> OP_PAR annot alg_expr CL_PAR
-- On COMMA reduce production small_alg_expr -> OP_PAR annot alg_expr CL_PAR
-- On COLON reduce production small_alg_expr -> OP_PAR annot alg_expr CL_PAR
-- On CL_PAR reduce production small_alg_expr -> OP_PAR annot alg_expr CL_PAR
-- On CL_CUR reduce production small_alg_expr -> OP_PAR annot alg_expr CL_PAR
-- On AND reduce production small_alg_expr -> OP_PAR annot alg_expr CL_PAR
-- On ABS reduce production small_alg_expr -> OP_PAR annot alg_expr CL_PAR

State 285:
## Known stack suffix:
## OP_PAR annot bool_expr
## LR(1) items:
small_bool_expr -> OP_PAR annot bool_expr . CL_PAR [ TOKEN THEN SPACE SIGNATURE SEMICOLON RAR PLOT PIPE PERT OR OBS NEWLINE LRAR LET LABEL INIT ID EOF DOT DO CONFIG COMMENT CL_PAR AND ]
## Transitions:
-- On CL_PAR shift to state 282
## Reductions:

State 286:
## Known stack suffix:
## NOT annot small_bool_expr
## LR(1) items:
small_bool_expr -> NOT annot small_bool_expr . [ TOKEN THEN SPACE SIGNATURE SEMICOLON RAR PLOT PIPE PERT OR OBS NEWLINE LRAR LET LABEL INIT ID EOF DOT DO CONFIG COMMENT CL_PAR AND ]
## Transitions:
## Reductions:
-- On TOKEN reduce production small_bool_expr -> NOT annot small_bool_expr
-- On THEN reduce production small_bool_expr -> NOT annot small_bool_expr
-- On SPACE reduce production small_bool_expr -> NOT annot small_bool_expr
-- On SIGNATURE reduce production small_bool_expr -> NOT annot small_bool_expr
-- On SEMICOLON reduce production small_bool_expr -> NOT annot small_bool_expr
-- On RAR reduce production small_bool_expr -> NOT annot small_bool_expr
-- On PLOT reduce production small_bool_expr -> NOT annot small_bool_expr
-- On PIPE reduce production small_bool_expr -> NOT annot small_bool_expr
-- On PERT reduce production small_bool_expr -> NOT annot small_bool_expr
-- On OR reduce production small_bool_expr -> NOT annot small_bool_expr
-- On OBS reduce production small_bool_expr -> NOT annot small_bool_expr
-- On NEWLINE reduce production small_bool_expr -> NOT annot small_bool_expr
-- On LRAR reduce production small_bool_expr -> NOT annot small_bool_expr
-- On LET reduce production small_bool_expr -> NOT annot small_bool_expr
-- On LABEL reduce production small_bool_expr -> NOT annot small_bool_expr
-- On INIT reduce production small_bool_expr -> NOT annot small_bool_expr
-- On ID reduce production small_bool_expr -> NOT annot small_bool_expr
-- On EOF reduce production small_bool_expr -> NOT annot small_bool_expr
-- On DOT reduce production small_bool_expr -> NOT annot small_bool_expr
-- On DO reduce production small_bool_expr -> NOT annot small_bool_expr
-- On CONFIG reduce production small_bool_expr -> NOT annot small_bool_expr
-- On COMMENT reduce production small_bool_expr -> NOT annot small_bool_expr
-- On CL_PAR reduce production small_bool_expr -> NOT annot small_bool_expr
-- On AND reduce production small_bool_expr -> NOT annot small_bool_expr

State 287:
## Known stack suffix:
## SINUS annot small_alg_expr
## LR(1) items:
small_alg_expr -> SINUS annot small_alg_expr . [ TRUE TOKEN TMAX TIME THEN TAN STRING SQRT SPACE SMALLER SINUS SIGNATURE SEMICOLON RAR POW PLUS PLOT PIPE PERT OR OP_PAR OP_CUR OBS NULL_EVENT NEWLINE MULT MOD MINUS MIN MAX LRAR LOG LET LABEL INT INIT INFINITY ID GREATER FLOAT FALSE EXPONENT EVENT EQUAL EOF EMAX ELSE DOT DO DIV DIFF CPUTIME COSINUS CONFIG COMMENT COMMA COLON CL_PAR CL_CUR AND ABS ]
## Transitions:
## Reductions:
-- On TRUE reduce production small_alg_expr -> SINUS annot small_alg_expr
-- On TOKEN reduce production small_alg_expr -> SINUS annot small_alg_expr
-- On TMAX reduce production small_alg_expr -> SINUS annot small_alg_expr
-- On TIME reduce production small_alg_expr -> SINUS annot small_alg_expr
-- On THEN reduce production small_alg_expr -> SINUS annot small_alg_expr
-- On TAN reduce production small_alg_expr -> SINUS annot small_alg_expr
-- On STRING reduce production small_alg_expr -> SINUS annot small_alg_expr
-- On SQRT reduce production small_alg_expr -> SINUS annot small_alg_expr
-- On SPACE reduce production small_alg_expr -> SINUS annot small_alg_expr
-- On SMALLER reduce production small_alg_expr -> SINUS annot small_alg_expr
-- On SINUS reduce production small_alg_expr -> SINUS annot small_alg_expr
-- On SIGNATURE reduce production small_alg_expr -> SINUS annot small_alg_expr
-- On SEMICOLON reduce production small_alg_expr -> SINUS annot small_alg_expr
-- On RAR reduce production small_alg_expr -> SINUS annot small_alg_expr
-- On POW reduce production small_alg_expr -> SINUS annot small_alg_expr
-- On PLUS reduce production small_alg_expr -> SINUS annot small_alg_expr
-- On PLOT reduce production small_alg_expr -> SINUS annot small_alg_expr
-- On PIPE reduce production small_alg_expr -> SINUS annot small_alg_expr
-- On PERT reduce production small_alg_expr -> SINUS annot small_alg_expr
-- On OR reduce production small_alg_expr -> SINUS annot small_alg_expr
-- On OP_PAR reduce production small_alg_expr -> SINUS annot small_alg_expr
-- On OP_CUR reduce production small_alg_expr -> SINUS annot small_alg_expr
-- On OBS reduce production small_alg_expr -> SINUS annot small_alg_expr
-- On NULL_EVENT reduce production small_alg_expr -> SINUS annot small_alg_expr
-- On NEWLINE reduce production small_alg_expr -> SINUS annot small_alg_expr
-- On MULT reduce production small_alg_expr -> SINUS annot small_alg_expr
-- On MOD reduce production small_alg_expr -> SINUS annot small_alg_expr
-- On MINUS reduce production small_alg_expr -> SINUS annot small_alg_expr
-- On MIN reduce production small_alg_expr -> SINUS annot small_alg_expr
-- On MAX reduce production small_alg_expr -> SINUS annot small_alg_expr
-- On LRAR reduce production small_alg_expr -> SINUS annot small_alg_expr
-- On LOG reduce production small_alg_expr -> SINUS annot small_alg_expr
-- On LET reduce production small_alg_expr -> SINUS annot small_alg_expr
-- On LABEL reduce production small_alg_expr -> SINUS annot small_alg_expr
-- On INT reduce production small_alg_expr -> SINUS annot small_alg_expr
-- On INIT reduce production small_alg_expr -> SINUS annot small_alg_expr
-- On INFINITY reduce production small_alg_expr -> SINUS annot small_alg_expr
-- On ID reduce production small_alg_expr -> SINUS annot small_alg_expr
-- On GREATER reduce production small_alg_expr -> SINUS annot small_alg_expr
-- On FLOAT reduce production small_alg_expr -> SINUS annot small_alg_expr
-- On FALSE reduce production small_alg_expr -> SINUS annot small_alg_expr
-- On EXPONENT reduce production small_alg_expr -> SINUS annot small_alg_expr
-- On EVENT reduce production small_alg_expr -> SINUS annot small_alg_expr
-- On EQUAL reduce production small_alg_expr -> SINUS annot small_alg_expr
-- On EOF reduce production small_alg_expr -> SINUS annot small_alg_expr
-- On EMAX reduce production small_alg_expr -> SINUS annot small_alg_expr
-- On ELSE reduce production small_alg_expr -> SINUS annot small_alg_expr
-- On DOT reduce production small_alg_expr -> SINUS annot small_alg_expr
-- On DO reduce production small_alg_expr -> SINUS annot small_alg_expr
-- On DIV reduce production small_alg_expr -> SINUS annot small_alg_expr
-- On DIFF reduce production small_alg_expr -> SINUS annot small_alg_expr
-- On CPUTIME reduce production small_alg_expr -> SINUS annot small_alg_expr
-- On COSINUS reduce production small_alg_expr -> SINUS annot small_alg_expr
-- On CONFIG reduce production small_alg_expr -> SINUS annot small_alg_expr
-- On COMMENT reduce production small_alg_expr -> SINUS annot small_alg_expr
-- On COMMA reduce production small_alg_expr -> SINUS annot small_alg_expr
-- On COLON reduce production small_alg_expr -> SINUS annot small_alg_expr
-- On CL_PAR reduce production small_alg_expr -> SINUS annot small_alg_expr
-- On CL_CUR reduce production small_alg_expr -> SINUS annot small_alg_expr
-- On AND reduce production small_alg_expr -> SINUS annot small_alg_expr
-- On ABS reduce production small_alg_expr -> SINUS annot small_alg_expr

State 288:
## Known stack suffix:
## SQRT annot small_alg_expr
## LR(1) items:
small_alg_expr -> SQRT annot small_alg_expr . [ TRUE TOKEN TMAX TIME THEN TAN STRING SQRT SPACE SMALLER SINUS SIGNATURE SEMICOLON RAR POW PLUS PLOT PIPE PERT OR OP_PAR OP_CUR OBS NULL_EVENT NEWLINE MULT MOD MINUS MIN MAX LRAR LOG LET LABEL INT INIT INFINITY ID GREATER FLOAT FALSE EXPONENT EVENT EQUAL EOF EMAX ELSE DOT DO DIV DIFF CPUTIME COSINUS CONFIG COMMENT COMMA COLON CL_PAR CL_CUR AND ABS ]
## Transitions:
## Reductions:
-- On TRUE reduce production small_alg_expr -> SQRT annot small_alg_expr
-- On TOKEN reduce production small_alg_expr -> SQRT annot small_alg_expr
-- On TMAX reduce production small_alg_expr -> SQRT annot small_alg_expr
-- On TIME reduce production small_alg_expr -> SQRT annot small_alg_expr
-- On THEN reduce production small_alg_expr -> SQRT annot small_alg_expr
-- On TAN reduce production small_alg_expr -> SQRT annot small_alg_expr
-- On STRING reduce production small_alg_expr -> SQRT annot small_alg_expr
-- On SQRT reduce production small_alg_expr -> SQRT annot small_alg_expr
-- On SPACE reduce production small_alg_expr -> SQRT annot small_alg_expr
-- On SMALLER reduce production small_alg_expr -> SQRT annot small_alg_expr
-- On SINUS reduce production small_alg_expr -> SQRT annot small_alg_expr
-- On SIGNATURE reduce production small_alg_expr -> SQRT annot small_alg_expr
-- On SEMICOLON reduce production small_alg_expr -> SQRT annot small_alg_expr
-- On RAR reduce production small_alg_expr -> SQRT annot small_alg_expr
-- On POW reduce production small_alg_expr -> SQRT annot small_alg_expr
-- On PLUS reduce production small_alg_expr -> SQRT annot small_alg_expr
-- On PLOT reduce production small_alg_expr -> SQRT annot small_alg_expr
-- On PIPE reduce production small_alg_expr -> SQRT annot small_alg_expr
-- On PERT reduce production small_alg_expr -> SQRT annot small_alg_expr
-- On OR reduce production small_alg_expr -> SQRT annot small_alg_expr
-- On OP_PAR reduce production small_alg_expr -> SQRT annot small_alg_expr
-- On OP_CUR reduce production small_alg_expr -> SQRT annot small_alg_expr
-- On OBS reduce production small_alg_expr -> SQRT annot small_alg_expr
-- On NULL_EVENT reduce production small_alg_expr -> SQRT annot small_alg_expr
-- On NEWLINE reduce production small_alg_expr -> SQRT annot small_alg_expr
-- On MULT reduce production small_alg_expr -> SQRT annot small_alg_expr
-- On MOD reduce production small_alg_expr -> SQRT annot small_alg_expr
-- On MINUS reduce production small_alg_expr -> SQRT annot small_alg_expr
-- On MIN reduce production small_alg_expr -> SQRT annot small_alg_expr
-- On MAX reduce production small_alg_expr -> SQRT annot small_alg_expr
-- On LRAR reduce production small_alg_expr -> SQRT annot small_alg_expr
-- On LOG reduce production small_alg_expr -> SQRT annot small_alg_expr
-- On LET reduce production small_alg_expr -> SQRT annot small_alg_expr
-- On LABEL reduce production small_alg_expr -> SQRT annot small_alg_expr
-- On INT reduce production small_alg_expr -> SQRT annot small_alg_expr
-- On INIT reduce production small_alg_expr -> SQRT annot small_alg_expr
-- On INFINITY reduce production small_alg_expr -> SQRT annot small_alg_expr
-- On ID reduce production small_alg_expr -> SQRT annot small_alg_expr
-- On GREATER reduce production small_alg_expr -> SQRT annot small_alg_expr
-- On FLOAT reduce production small_alg_expr -> SQRT annot small_alg_expr
-- On FALSE reduce production small_alg_expr -> SQRT annot small_alg_expr
-- On EXPONENT reduce production small_alg_expr -> SQRT annot small_alg_expr
-- On EVENT reduce production small_alg_expr -> SQRT annot small_alg_expr
-- On EQUAL reduce production small_alg_expr -> SQRT annot small_alg_expr
-- On EOF reduce production small_alg_expr -> SQRT annot small_alg_expr
-- On EMAX reduce production small_alg_expr -> SQRT annot small_alg_expr
-- On ELSE reduce production small_alg_expr -> SQRT annot small_alg_expr
-- On DOT reduce production small_alg_expr -> SQRT annot small_alg_expr
-- On DO reduce production small_alg_expr -> SQRT annot small_alg_expr
-- On DIV reduce production small_alg_expr -> SQRT annot small_alg_expr
-- On DIFF reduce production small_alg_expr -> SQRT annot small_alg_expr
-- On CPUTIME reduce production small_alg_expr -> SQRT annot small_alg_expr
-- On COSINUS reduce production small_alg_expr -> SQRT annot small_alg_expr
-- On CONFIG reduce production small_alg_expr -> SQRT annot small_alg_expr
-- On COMMENT reduce production small_alg_expr -> SQRT annot small_alg_expr
-- On COMMA reduce production small_alg_expr -> SQRT annot small_alg_expr
-- On COLON reduce production small_alg_expr -> SQRT annot small_alg_expr
-- On CL_PAR reduce production small_alg_expr -> SQRT annot small_alg_expr
-- On CL_CUR reduce production small_alg_expr -> SQRT annot small_alg_expr
-- On AND reduce production small_alg_expr -> SQRT annot small_alg_expr
-- On ABS reduce production small_alg_expr -> SQRT annot small_alg_expr

State 289:
## Known stack suffix:
## TAN annot small_alg_expr
## LR(1) items:
small_alg_expr -> TAN annot small_alg_expr . [ TRUE TOKEN TMAX TIME THEN TAN STRING SQRT SPACE SMALLER SINUS SIGNATURE SEMICOLON RAR POW PLUS PLOT PIPE PERT OR OP_PAR OP_CUR OBS NULL_EVENT NEWLINE MULT MOD MINUS MIN MAX LRAR LOG LET LABEL INT INIT INFINITY ID GREATER FLOAT FALSE EXPONENT EVENT EQUAL EOF EMAX ELSE DOT DO DIV DIFF CPUTIME COSINUS CONFIG COMMENT COMMA COLON CL_PAR CL_CUR AND ABS ]
## Transitions:
## Reductions:
-- On TRUE reduce production small_alg_expr -> TAN annot small_alg_expr
-- On TOKEN reduce production small_alg_expr -> TAN annot small_alg_expr
-- On TMAX reduce production small_alg_expr -> TAN annot small_alg_expr
-- On TIME reduce production small_alg_expr -> TAN annot small_alg_expr
-- On THEN reduce production small_alg_expr -> TAN annot small_alg_expr
-- On TAN reduce production small_alg_expr -> TAN annot small_alg_expr
-- On STRING reduce production small_alg_expr -> TAN annot small_alg_expr
-- On SQRT reduce production small_alg_expr -> TAN annot small_alg_expr
-- On SPACE reduce production small_alg_expr -> TAN annot small_alg_expr
-- On SMALLER reduce production small_alg_expr -> TAN annot small_alg_expr
-- On SINUS reduce production small_alg_expr -> TAN annot small_alg_expr
-- On SIGNATURE reduce production small_alg_expr -> TAN annot small_alg_expr
-- On SEMICOLON reduce production small_alg_expr -> TAN annot small_alg_expr
-- On RAR reduce production small_alg_expr -> TAN annot small_alg_expr
-- On POW reduce production small_alg_expr -> TAN annot small_alg_expr
-- On PLUS reduce production small_alg_expr -> TAN annot small_alg_expr
-- On PLOT reduce production small_alg_expr -> TAN annot small_alg_expr
-- On PIPE reduce production small_alg_expr -> TAN annot small_alg_expr
-- On PERT reduce production small_alg_expr -> TAN annot small_alg_expr
-- On OR reduce production small_alg_expr -> TAN annot small_alg_expr
-- On OP_PAR reduce production small_alg_expr -> TAN annot small_alg_expr
-- On OP_CUR reduce production small_alg_expr -> TAN annot small_alg_expr
-- On OBS reduce production small_alg_expr -> TAN annot small_alg_expr
-- On NULL_EVENT reduce production small_alg_expr -> TAN annot small_alg_expr
-- On NEWLINE reduce production small_alg_expr -> TAN annot small_alg_expr
-- On MULT reduce production small_alg_expr -> TAN annot small_alg_expr
-- On MOD reduce production small_alg_expr -> TAN annot small_alg_expr
-- On MINUS reduce production small_alg_expr -> TAN annot small_alg_expr
-- On MIN reduce production small_alg_expr -> TAN annot small_alg_expr
-- On MAX reduce production small_alg_expr -> TAN annot small_alg_expr
-- On LRAR reduce production small_alg_expr -> TAN annot small_alg_expr
-- On LOG reduce production small_alg_expr -> TAN annot small_alg_expr
-- On LET reduce production small_alg_expr -> TAN annot small_alg_expr
-- On LABEL reduce production small_alg_expr -> TAN annot small_alg_expr
-- On INT reduce production small_alg_expr -> TAN annot small_alg_expr
-- On INIT reduce production small_alg_expr -> TAN annot small_alg_expr
-- On INFINITY reduce production small_alg_expr -> TAN annot small_alg_expr
-- On ID reduce production small_alg_expr -> TAN annot small_alg_expr
-- On GREATER reduce production small_alg_expr -> TAN annot small_alg_expr
-- On FLOAT reduce production small_alg_expr -> TAN annot small_alg_expr
-- On FALSE reduce production small_alg_expr -> TAN annot small_alg_expr
-- On EXPONENT reduce production small_alg_expr -> TAN annot small_alg_expr
-- On EVENT reduce production small_alg_expr -> TAN annot small_alg_expr
-- On EQUAL reduce production small_alg_expr -> TAN annot small_alg_expr
-- On EOF reduce production small_alg_expr -> TAN annot small_alg_expr
-- On EMAX reduce production small_alg_expr -> TAN annot small_alg_expr
-- On ELSE reduce production small_alg_expr -> TAN annot small_alg_expr
-- On DOT reduce production small_alg_expr -> TAN annot small_alg_expr
-- On DO reduce production small_alg_expr -> TAN annot small_alg_expr
-- On DIV reduce production small_alg_expr -> TAN annot small_alg_expr
-- On DIFF reduce production small_alg_expr -> TAN annot small_alg_expr
-- On CPUTIME reduce production small_alg_expr -> TAN annot small_alg_expr
-- On COSINUS reduce production small_alg_expr -> TAN annot small_alg_expr
-- On CONFIG reduce production small_alg_expr -> TAN annot small_alg_expr
-- On COMMENT reduce production small_alg_expr -> TAN annot small_alg_expr
-- On COMMA reduce production small_alg_expr -> TAN annot small_alg_expr
-- On COLON reduce production small_alg_expr -> TAN annot small_alg_expr
-- On CL_PAR reduce production small_alg_expr -> TAN annot small_alg_expr
-- On CL_CUR reduce production small_alg_expr -> TAN annot small_alg_expr
-- On AND reduce production small_alg_expr -> TAN annot small_alg_expr
-- On ABS reduce production small_alg_expr -> TAN annot small_alg_expr

State 290:
## Known stack suffix:
## STRING
## LR(1) items:
nonempty_print_expr -> STRING . annot [ TRUE STRING SEMICOLON GREATER FALSE EOF CL_PAR ]
print_expr_list -> STRING . annot DOT annot nonempty_print_expr [ TRUE STRING SEMICOLON GREATER FALSE EOF CL_PAR ]
## Transitions:
-- On SPACE shift to state 2
-- On NEWLINE shift to state 3
-- On COMMENT shift to state 4
-- On annot shift to state 291
## Reductions:
-- On TRUE reduce production annot ->
-- On STRING reduce production annot ->
-- On SEMICOLON reduce production annot ->
-- On GREATER reduce production annot ->
-- On FALSE reduce production annot ->
-- On EOF reduce production annot ->
-- On DOT reduce production annot ->
-- On CL_PAR reduce production annot ->

State 291:
## Known stack suffix:
## STRING annot
## LR(1) items:
nonempty_print_expr -> STRING annot . [ TRUE STRING SEMICOLON GREATER FALSE EOF CL_PAR ]
print_expr_list -> STRING annot . DOT annot nonempty_print_expr [ TRUE STRING SEMICOLON GREATER FALSE EOF CL_PAR ]
## Transitions:
-- On DOT shift to state 292
## Reductions:
-- On TRUE reduce production nonempty_print_expr -> STRING annot
-- On STRING reduce production nonempty_print_expr -> STRING annot
-- On SEMICOLON reduce production nonempty_print_expr -> STRING annot
-- On GREATER reduce production nonempty_print_expr -> STRING annot
-- On FALSE reduce production nonempty_print_expr -> STRING annot
-- On EOF reduce production nonempty_print_expr -> STRING annot
-- On CL_PAR reduce production nonempty_print_expr -> STRING annot

State 292:
## Known stack suffix:
## STRING annot DOT
## LR(1) items:
print_expr_list -> STRING annot DOT . annot nonempty_print_expr [ TRUE STRING SEMICOLON GREATER FALSE EOF CL_PAR ]
## Transitions:
-- On SPACE shift to state 2
-- On NEWLINE shift to state 3
-- On COMMENT shift to state 4
-- On annot shift to state 293
## Reductions:
-- On TMAX reduce production annot ->
-- On TIME reduce production annot ->
-- On TAN reduce production annot ->
-- On STRING reduce production annot ->
-- On SQRT reduce production annot ->
-- On SINUS reduce production annot ->
-- On PIPE reduce production annot ->
-- On OP_PAR reduce production annot ->
-- On NULL_EVENT reduce production annot ->
-- On MINUS reduce production annot ->
-- On MIN reduce production annot ->
-- On MAX reduce production annot ->
-- On LOG reduce production annot ->
-- On LABEL reduce production annot ->
-- On INT reduce production annot ->
-- On INFINITY reduce production annot ->
-- On ID reduce production annot ->
-- On FLOAT reduce production annot ->
-- On EXPONENT reduce production annot ->
-- On EVENT reduce production annot ->
-- On EMAX reduce production annot ->
-- On CPUTIME reduce production annot ->
-- On COSINUS reduce production annot ->
-- On ABS reduce production annot ->

State 293:
## Known stack suffix:
## STRING annot DOT annot
## LR(1) items:
print_expr_list -> STRING annot DOT annot . nonempty_print_expr [ TRUE STRING SEMICOLON GREATER FALSE EOF CL_PAR ]
## Transitions:
-- On TMAX shift to state 162
-- On TIME shift to state 163
-- On TAN shift to state 164
-- On STRING shift to state 290
-- On SQRT shift to state 166
-- On SINUS shift to state 168
-- On PIPE shift to state 170
-- On OP_PAR shift to state 294
-- On NULL_EVENT shift to state 182
-- On MINUS shift to state 189
-- On MIN shift to state 191
-- On MAX shift to state 193
-- On LOG shift to state 195
-- On LABEL shift to state 197
-- On INT shift to state 198
-- On INFINITY shift to state 199
-- On ID shift to state 200
-- On FLOAT shift to state 201
-- On EXPONENT shift to state 202
-- On EVENT shift to state 204
-- On EMAX shift to state 205
-- On CPUTIME shift to state 206
-- On COSINUS shift to state 207
-- On ABS shift to state 209
-- On variable shift to state 211
-- On small_alg_expr shift to state 228
-- On print_expr_list shift to state 304
-- On nonempty_print_expr shift to state 307
-- On nbr shift to state 213
-- On constant shift to state 214
-- On alg_expr_up_to_sum shift to state 240
-- On alg_expr_up_to_prod shift to state 251
-- On alg_expr_up_to_mod shift to state 247
-- On alg_expr_up_to_if shift to state 306
## Reductions:

State 294:
## Known stack suffix:
## OP_PAR
## LR(1) items:
nonempty_print_expr -> OP_PAR . annot print_expr_list CL_PAR annot [ TRUE STRING SEMICOLON GREATER FALSE EOF CL_PAR ]
small_alg_expr -> OP_PAR . annot alg_expr CL_PAR [ TRUE STRING SPACE SEMICOLON POW PLUS NEWLINE MULT MOD MINUS GREATER FALSE EOF DOT DIV COMMENT CL_PAR ]
## Transitions:
-- On SPACE shift to state 2
-- On NEWLINE shift to state 3
-- On COMMENT shift to state 4
-- On annot shift to state 295
## Reductions:
-- On TRUE reduce production annot ->
-- On TMAX reduce production annot ->
-- On TIME reduce production annot ->
-- On TAN reduce production annot ->
-- On STRING reduce production annot ->
-- On SQRT reduce production annot ->
-- On SINUS reduce production annot ->
-- On PIPE reduce production annot ->
-- On OP_PAR reduce production annot ->
-- On NULL_EVENT reduce production annot ->
-- On NOT reduce production annot ->
-- On MINUS reduce production annot ->
-- On MIN reduce production annot ->
-- On MAX reduce production annot ->
-- On LOG reduce production annot ->
-- On LABEL reduce production annot ->
-- On INT reduce production annot ->
-- On INFINITY reduce production annot ->
-- On ID reduce production annot ->
-- On FLOAT reduce production annot ->
-- On FALSE reduce production annot ->
-- On EXPONENT reduce production annot ->
-- On EVENT reduce production annot ->
-- On EMAX reduce production annot ->
-- On CPUTIME reduce production annot ->
-- On COSINUS reduce production annot ->
-- On ABS reduce production annot ->

State 295:
## Known stack suffix:
## OP_PAR annot
## LR(1) items:
nonempty_print_expr -> OP_PAR annot . print_expr_list CL_PAR annot [ TRUE STRING SEMICOLON GREATER FALSE EOF CL_PAR ]
small_alg_expr -> OP_PAR annot . alg_expr CL_PAR [ TRUE STRING SPACE SEMICOLON POW PLUS NEWLINE MULT MOD MINUS GREATER FALSE EOF DOT DIV COMMENT CL_PAR ]
## Transitions:
-- On TRUE shift to state 179
-- On TMAX shift to state 162
-- On TIME shift to state 163
-- On TAN shift to state 164
-- On STRING shift to state 296
-- On SQRT shift to state 166
-- On SINUS shift to state 168
-- On PIPE shift to state 170
-- On OP_PAR shift to state 180
-- On NULL_EVENT shift to state 182
-- On NOT shift to state 183
-- On MINUS shift to state 189
-- On MIN shift to state 191
-- On MAX shift to state 193
-- On LOG shift to state 195
-- On LABEL shift to state 197
-- On INT shift to state 198
-- On INFINITY shift to state 199
-- On ID shift to state 200
-- On FLOAT shift to state 201
-- On FALSE shift to state 225
-- On EXPONENT shift to state 202
-- On EVENT shift to state 204
-- On EMAX shift to state 205
-- On CPUTIME shift to state 206
-- On COSINUS shift to state 207
-- On ABS shift to state 209
-- On variable shift to state 211
-- On small_bool_expr shift to state 226
-- On small_alg_expr shift to state 228
-- On print_expr_list shift to state 298
-- On nbr shift to state 213
-- On constant shift to state 214
-- On bool_expr_no_or shift to state 233
-- On bool_expr_comp shift to state 236
-- On bool_expr shift to state 255
-- On alg_expr_up_to_sum shift to state 240
-- On alg_expr_up_to_prod shift to state 251
-- On alg_expr_up_to_mod shift to state 247
-- On alg_expr_up_to_if shift to state 301
-- On alg_expr shift to state 283
## Reductions:

State 296:
## Known stack suffix:
## STRING
## LR(1) items:
print_expr_list -> STRING . annot DOT annot nonempty_print_expr [ CL_PAR ]
## Transitions:
-- On SPACE shift to state 2
-- On NEWLINE shift to state 3
-- On COMMENT shift to state 4
-- On annot shift to state 297
## Reductions:
-- On DOT reduce production annot ->

State 297:
## Known stack suffix:
## STRING annot
## LR(1) items:
print_expr_list -> STRING annot . DOT annot nonempty_print_expr [ CL_PAR ]
## Transitions:
-- On DOT shift to state 292
## Reductions:

State 298:
## Known stack suffix:
## OP_PAR annot print_expr_list
## LR(1) items:
nonempty_print_expr -> OP_PAR annot print_expr_list . CL_PAR annot [ TRUE STRING SEMICOLON GREATER FALSE EOF CL_PAR ]
## Transitions:
-- On CL_PAR shift to state 299
## Reductions:

State 299:
## Known stack suffix:
## OP_PAR annot print_expr_list CL_PAR
## LR(1) items:
nonempty_print_expr -> OP_PAR annot print_expr_list CL_PAR . annot [ TRUE STRING SEMICOLON GREATER FALSE EOF CL_PAR ]
## Transitions:
-- On SPACE shift to state 2
-- On NEWLINE shift to state 3
-- On COMMENT shift to state 4
-- On annot shift to state 300
## Reductions:
-- On TRUE reduce production annot ->
-- On STRING reduce production annot ->
-- On SEMICOLON reduce production annot ->
-- On GREATER reduce production annot ->
-- On FALSE reduce production annot ->
-- On EOF reduce production annot ->
-- On CL_PAR reduce production annot ->

State 300:
## Known stack suffix:
## OP_PAR annot print_expr_list CL_PAR annot
## LR(1) items:
nonempty_print_expr -> OP_PAR annot print_expr_list CL_PAR annot . [ TRUE STRING SEMICOLON GREATER FALSE EOF CL_PAR ]
## Transitions:
## Reductions:
-- On TRUE reduce production nonempty_print_expr -> OP_PAR annot print_expr_list CL_PAR annot
-- On STRING reduce production nonempty_print_expr -> OP_PAR annot print_expr_list CL_PAR annot
-- On SEMICOLON reduce production nonempty_print_expr -> OP_PAR annot print_expr_list CL_PAR annot
-- On GREATER reduce production nonempty_print_expr -> OP_PAR annot print_expr_list CL_PAR annot
-- On FALSE reduce production nonempty_print_expr -> OP_PAR annot print_expr_list CL_PAR annot
-- On EOF reduce production nonempty_print_expr -> OP_PAR annot print_expr_list CL_PAR annot
-- On CL_PAR reduce production nonempty_print_expr -> OP_PAR annot print_expr_list CL_PAR annot

State 301:
## Known stack suffix:
## alg_expr_up_to_if
## LR(1) items:
alg_expr -> alg_expr_up_to_if . [ CL_PAR ]
alg_expr_up_to_if -> alg_expr_up_to_if . PLUS annot alg_expr_up_to_sum [ SMALLER PLUS MINUS GREATER EQUAL DOT DIFF CL_PAR ]
alg_expr_up_to_if -> alg_expr_up_to_if . MINUS annot alg_expr_up_to_sum [ SMALLER PLUS MINUS GREATER EQUAL DOT DIFF CL_PAR ]
bool_expr_comp -> alg_expr_up_to_if . GREATER annot alg_expr [ THEN OR AND ]
bool_expr_comp -> alg_expr_up_to_if . SMALLER annot alg_expr [ THEN OR AND ]
bool_expr_comp -> alg_expr_up_to_if . EQUAL annot alg_expr [ THEN OR AND ]
bool_expr_comp -> alg_expr_up_to_if . DIFF annot alg_expr [ THEN OR AND ]
print_expr_list -> alg_expr_up_to_if . DOT annot nonempty_print_expr [ CL_PAR ]
## Transitions:
-- On SMALLER shift to state 253
-- On PLUS shift to state 259
-- On MINUS shift to state 262
-- On GREATER shift to state 265
-- On EQUAL shift to state 268
-- On DOT shift to state 302
-- On DIFF shift to state 271
## Reductions:
-- On CL_PAR reduce production alg_expr -> alg_expr_up_to_if

State 302:
## Known stack suffix:
## alg_expr_up_to_if DOT
## LR(1) items:
print_expr_list -> alg_expr_up_to_if DOT . annot nonempty_print_expr [ TRUE STRING SEMICOLON GREATER FALSE EOF CL_PAR ]
## Transitions:
-- On SPACE shift to state 2
-- On NEWLINE shift to state 3
-- On COMMENT shift to state 4
-- On annot shift to state 303
## Reductions:
-- On TMAX reduce production annot ->
-- On TIME reduce production annot ->
-- On TAN reduce production annot ->
-- On STRING reduce production annot ->
-- On SQRT reduce production annot ->
-- On SINUS reduce production annot ->
-- On PIPE reduce production annot ->
-- On OP_PAR reduce production annot ->
-- On NULL_EVENT reduce production annot ->
-- On MINUS reduce production annot ->
-- On MIN reduce production annot ->
-- On MAX reduce production annot ->
-- On LOG reduce production annot ->
-- On LABEL reduce production annot ->
-- On INT reduce production annot ->
-- On INFINITY reduce production annot ->
-- On ID reduce production annot ->
-- On FLOAT reduce production annot ->
-- On EXPONENT reduce production annot ->
-- On EVENT reduce production annot ->
-- On EMAX reduce production annot ->
-- On CPUTIME reduce production annot ->
-- On COSINUS reduce production annot ->
-- On ABS reduce production annot ->

State 303:
## Known stack suffix:
## alg_expr_up_to_if DOT annot
## LR(1) items:
print_expr_list -> alg_expr_up_to_if DOT annot . nonempty_print_expr [ TRUE STRING SEMICOLON GREATER FALSE EOF CL_PAR ]
## Transitions:
-- On TMAX shift to state 162
-- On TIME shift to state 163
-- On TAN shift to state 164
-- On STRING shift to state 290
-- On SQRT shift to state 166
-- On SINUS shift to state 168
-- On PIPE shift to state 170
-- On OP_PAR shift to state 294
-- On NULL_EVENT shift to state 182
-- On MINUS shift to state 189
-- On MIN shift to state 191
-- On MAX shift to state 193
-- On LOG shift to state 195
-- On LABEL shift to state 197
-- On INT shift to state 198
-- On INFINITY shift to state 199
-- On ID shift to state 200
-- On FLOAT shift to state 201
-- On EXPONENT shift to state 202
-- On EVENT shift to state 204
-- On EMAX shift to state 205
-- On CPUTIME shift to state 206
-- On COSINUS shift to state 207
-- On ABS shift to state 209
-- On variable shift to state 211
-- On small_alg_expr shift to state 228
-- On print_expr_list shift to state 304
-- On nonempty_print_expr shift to state 305
-- On nbr shift to state 213
-- On constant shift to state 214
-- On alg_expr_up_to_sum shift to state 240
-- On alg_expr_up_to_prod shift to state 251
-- On alg_expr_up_to_mod shift to state 247
-- On alg_expr_up_to_if shift to state 306
## Reductions:

State 304:
## Known stack suffix:
## print_expr_list
## LR(1) items:
nonempty_print_expr -> print_expr_list . [ TRUE STRING SEMICOLON GREATER FALSE EOF CL_PAR ]
## Transitions:
## Reductions:
-- On TRUE reduce production nonempty_print_expr -> print_expr_list
-- On STRING reduce production nonempty_print_expr -> print_expr_list
-- On SEMICOLON reduce production nonempty_print_expr -> print_expr_list
-- On GREATER reduce production nonempty_print_expr -> print_expr_list
-- On FALSE reduce production nonempty_print_expr -> print_expr_list
-- On EOF reduce production nonempty_print_expr -> print_expr_list
-- On CL_PAR reduce production nonempty_print_expr -> print_expr_list

State 305:
## Known stack suffix:
## alg_expr_up_to_if DOT annot nonempty_print_expr
## LR(1) items:
print_expr_list -> alg_expr_up_to_if DOT annot nonempty_print_expr . [ TRUE STRING SEMICOLON GREATER FALSE EOF CL_PAR ]
## Transitions:
## Reductions:
-- On TRUE reduce production print_expr_list -> alg_expr_up_to_if DOT annot nonempty_print_expr
-- On STRING reduce production print_expr_list -> alg_expr_up_to_if DOT annot nonempty_print_expr
-- On SEMICOLON reduce production print_expr_list -> alg_expr_up_to_if DOT annot nonempty_print_expr
-- On GREATER reduce production print_expr_list -> alg_expr_up_to_if DOT annot nonempty_print_expr
-- On FALSE reduce production print_expr_list -> alg_expr_up_to_if DOT annot nonempty_print_expr
-- On EOF reduce production print_expr_list -> alg_expr_up_to_if DOT annot nonempty_print_expr
-- On CL_PAR reduce production print_expr_list -> alg_expr_up_to_if DOT annot nonempty_print_expr

State 306:
## Known stack suffix:
## alg_expr_up_to_if
## LR(1) items:
alg_expr_up_to_if -> alg_expr_up_to_if . PLUS annot alg_expr_up_to_sum [ TRUE STRING SEMICOLON PLUS MINUS GREATER FALSE EOF DOT CL_PAR ]
alg_expr_up_to_if -> alg_expr_up_to_if . MINUS annot alg_expr_up_to_sum [ TRUE STRING SEMICOLON PLUS MINUS GREATER FALSE EOF DOT CL_PAR ]
nonempty_print_expr -> alg_expr_up_to_if . [ TRUE STRING SEMICOLON GREATER FALSE EOF CL_PAR ]
print_expr_list -> alg_expr_up_to_if . DOT annot nonempty_print_expr [ TRUE STRING SEMICOLON GREATER FALSE EOF CL_PAR ]
## Transitions:
-- On PLUS shift to state 259
-- On MINUS shift to state 262
-- On DOT shift to state 302
## Reductions:
-- On TRUE reduce production nonempty_print_expr -> alg_expr_up_to_if
-- On STRING reduce production nonempty_print_expr -> alg_expr_up_to_if
-- On SEMICOLON reduce production nonempty_print_expr -> alg_expr_up_to_if
-- On GREATER reduce production nonempty_print_expr -> alg_expr_up_to_if
-- On FALSE reduce production nonempty_print_expr -> alg_expr_up_to_if
-- On EOF reduce production nonempty_print_expr -> alg_expr_up_to_if
-- On CL_PAR reduce production nonempty_print_expr -> alg_expr_up_to_if

State 307:
## Known stack suffix:
## STRING annot DOT annot nonempty_print_expr
## LR(1) items:
print_expr_list -> STRING annot DOT annot nonempty_print_expr . [ TRUE STRING SEMICOLON GREATER FALSE EOF CL_PAR ]
## Transitions:
## Reductions:
-- On TRUE reduce production print_expr_list -> STRING annot DOT annot nonempty_print_expr
-- On STRING reduce production print_expr_list -> STRING annot DOT annot nonempty_print_expr
-- On SEMICOLON reduce production print_expr_list -> STRING annot DOT annot nonempty_print_expr
-- On GREATER reduce production print_expr_list -> STRING annot DOT annot nonempty_print_expr
-- On FALSE reduce production print_expr_list -> STRING annot DOT annot nonempty_print_expr
-- On EOF reduce production print_expr_list -> STRING annot DOT annot nonempty_print_expr
-- On CL_PAR reduce production print_expr_list -> STRING annot DOT annot nonempty_print_expr

State 308:
## Known stack suffix:
## annot nonempty_print_expr
## LR(1) items:
print_expr -> annot nonempty_print_expr . [ SEMICOLON GREATER EOF CL_PAR ]
## Transitions:
## Reductions:
-- On SEMICOLON reduce production print_expr -> annot nonempty_print_expr
-- On GREATER reduce production print_expr -> annot nonempty_print_expr
-- On EOF reduce production print_expr -> annot nonempty_print_expr
-- On CL_PAR reduce production print_expr -> annot nonempty_print_expr

State 309:
## Known stack suffix:
## SPECIES_OF
## LR(1) items:
effect -> SPECIES_OF . annot pattern boolean annot GREATER print_expr [ SEMICOLON EOF CL_PAR ]
## Transitions:
-- On SPACE shift to state 2
-- On NEWLINE shift to state 3
-- On COMMENT shift to state 4
-- On annot shift to state 310
## Reductions:
-- On ID reduce production annot ->
-- On DOT reduce production annot ->

State 310:
## Known stack suffix:
## SPECIES_OF annot
## LR(1) items:
effect -> SPECIES_OF annot . pattern boolean annot GREATER print_expr [ SEMICOLON EOF CL_PAR ]
## Transitions:
-- On ID shift to state 18
-- On DOT shift to state 150
-- On pattern shift to state 311
-- On agent shift to state 155
## Reductions:

State 311:
## Known stack suffix:
## SPECIES_OF annot pattern
## LR(1) items:
effect -> SPECIES_OF annot pattern . boolean annot GREATER print_expr [ SEMICOLON EOF CL_PAR ]
## Transitions:
-- On TRUE shift to state 14
-- On FALSE shift to state 15
-- On boolean shift to state 312
## Reductions:

State 312:
## Known stack suffix:
## SPECIES_OF annot pattern boolean
## LR(1) items:
effect -> SPECIES_OF annot pattern boolean . annot GREATER print_expr [ SEMICOLON EOF CL_PAR ]
## Transitions:
-- On SPACE shift to state 2
-- On NEWLINE shift to state 3
-- On COMMENT shift to state 4
-- On annot shift to state 313
## Reductions:
-- On GREATER reduce production annot ->

State 313:
## Known stack suffix:
## SPECIES_OF annot pattern boolean annot
## LR(1) items:
effect -> SPECIES_OF annot pattern boolean annot . GREATER print_expr [ SEMICOLON EOF CL_PAR ]
## Transitions:
-- On GREATER shift to state 314
## Reductions:

State 314:
## Known stack suffix:
## SPECIES_OF annot pattern boolean annot GREATER
## LR(1) items:
effect -> SPECIES_OF annot pattern boolean annot GREATER . print_expr [ SEMICOLON EOF CL_PAR ]
## Transitions:
-- On SPACE shift to state 2
-- On NEWLINE shift to state 3
-- On COMMENT shift to state 4
-- On print_expr shift to state 315
-- On annot shift to state 161
## Reductions:
-- On TMAX reduce production annot ->
-- On TIME reduce production annot ->
-- On TAN reduce production annot ->
-- On STRING reduce production annot ->
-- On SQRT reduce production annot ->
-- On SINUS reduce production annot ->
-- On SEMICOLON reduce production annot ->
-- On PIPE reduce production annot ->
-- On OP_PAR reduce production annot ->
-- On NULL_EVENT reduce production annot ->
-- On MINUS reduce production annot ->
-- On MIN reduce production annot ->
-- On MAX reduce production annot ->
-- On LOG reduce production annot ->
-- On LABEL reduce production annot ->
-- On INT reduce production annot ->
-- On INFINITY reduce production annot ->
-- On ID reduce production annot ->
-- On FLOAT reduce production annot ->
-- On EXPONENT reduce production annot ->
-- On EVENT reduce production annot ->
-- On EOF reduce production annot ->
-- On EMAX reduce production annot ->
-- On CPUTIME reduce production annot ->
-- On COSINUS reduce production annot ->
-- On CL_PAR reduce production annot ->
-- On ABS reduce production annot ->

State 315:
## Known stack suffix:
## SPECIES_OF annot pattern boolean annot GREATER print_expr
## LR(1) items:
effect -> SPECIES_OF annot pattern boolean annot GREATER print_expr . [ SEMICOLON EOF CL_PAR ]
## Transitions:
## Reductions:
-- On SEMICOLON reduce production effect -> SPECIES_OF annot pattern boolean annot GREATER print_expr
-- On EOF reduce production effect -> SPECIES_OF annot pattern boolean annot GREATER print_expr
-- On CL_PAR reduce production effect -> SPECIES_OF annot pattern boolean annot GREATER print_expr

State 316:
## Known stack suffix:
## SNAPSHOT
## LR(1) items:
effect -> SNAPSHOT . print_expr [ SEMICOLON EOF CL_PAR ]
## Transitions:
-- On SPACE shift to state 2
-- On NEWLINE shift to state 3
-- On COMMENT shift to state 4
-- On print_expr shift to state 317
-- On annot shift to state 161
## Reductions:
-- On TMAX reduce production annot ->
-- On TIME reduce production annot ->
-- On TAN reduce production annot ->
-- On STRING reduce production annot ->
-- On SQRT reduce production annot ->
-- On SINUS reduce production annot ->
-- On SEMICOLON reduce production annot ->
-- On PIPE reduce production annot ->
-- On OP_PAR reduce production annot ->
-- On NULL_EVENT reduce production annot ->
-- On MINUS reduce production annot ->
-- On MIN reduce production annot ->
-- On MAX reduce production annot ->
-- On LOG reduce production annot ->
-- On LABEL reduce production annot ->
-- On INT reduce production annot ->
-- On INFINITY reduce production annot ->
-- On ID reduce production annot ->
-- On FLOAT reduce production annot ->
-- On EXPONENT reduce production annot ->
-- On EVENT reduce production annot ->
-- On EOF reduce production annot ->
-- On EMAX reduce production annot ->
-- On CPUTIME reduce production annot ->
-- On COSINUS reduce production annot ->
-- On CL_PAR reduce production annot ->
-- On ABS reduce production annot ->

State 317:
## Known stack suffix:
## SNAPSHOT print_expr
## LR(1) items:
effect -> SNAPSHOT print_expr . [ SEMICOLON EOF CL_PAR ]
## Transitions:
## Reductions:
-- On SEMICOLON reduce production effect -> SNAPSHOT print_expr
-- On EOF reduce production effect -> SNAPSHOT print_expr
-- On CL_PAR reduce production effect -> SNAPSHOT print_expr

State 318:
## Known stack suffix:
## annot RUN
## LR(1) items:
interactive_command -> annot RUN . annot SEMICOLON [ # ]
interactive_command -> annot RUN . annot bool_expr SEMICOLON [ # ]
## Transitions:
-- On SPACE shift to state 2
-- On NEWLINE shift to state 3
-- On COMMENT shift to state 4
-- On annot shift to state 319
## Reductions:
-- On TRUE reduce production annot ->
-- On TMAX reduce production annot ->
-- On TIME reduce production annot ->
-- On TAN reduce production annot ->
-- On SQRT reduce production annot ->
-- On SINUS reduce production annot ->
-- On SEMICOLON reduce production annot ->
-- On PIPE reduce production annot ->
-- On OP_PAR reduce production annot ->
-- On NULL_EVENT reduce production annot ->
-- On NOT reduce production annot ->
-- On MINUS reduce production annot ->
-- On MIN reduce production annot ->
-- On MAX reduce production annot ->
-- On LOG reduce production annot ->
-- On LABEL reduce production annot ->
-- On INT reduce production annot ->
-- On INFINITY reduce production annot ->
-- On ID reduce production annot ->
-- On FLOAT reduce production annot ->
-- On FALSE reduce production annot ->
-- On EXPONENT reduce production annot ->
-- On EVENT reduce production annot ->
-- On EMAX reduce production annot ->
-- On CPUTIME reduce production annot ->
-- On COSINUS reduce production annot ->
-- On ABS reduce production annot ->

State 319:
## Known stack suffix:
## annot RUN annot
## LR(1) items:
interactive_command -> annot RUN annot . SEMICOLON [ # ]
interactive_command -> annot RUN annot . bool_expr SEMICOLON [ # ]
## Transitions:
-- On TRUE shift to state 179
-- On TMAX shift to state 162
-- On TIME shift to state 163
-- On TAN shift to state 164
-- On SQRT shift to state 166
-- On SINUS shift to state 168
-- On SEMICOLON shift to state 320
-- On PIPE shift to state 170
-- On OP_PAR shift to state 187
-- On NULL_EVENT shift to state 182
-- On NOT shift to state 183
-- On MINUS shift to state 189
-- On MIN shift to state 191
-- On MAX shift to state 193
-- On LOG shift to state 195
-- On LABEL shift to state 197
-- On INT shift to state 198
-- On INFINITY shift to state 199
-- On ID shift to state 200
-- On FLOAT shift to state 201
-- On FALSE shift to state 225
-- On EXPONENT shift to state 202
-- On EVENT shift to state 204
-- On EMAX shift to state 205
-- On CPUTIME shift to state 206
-- On COSINUS shift to state 207
-- On ABS shift to state 209
-- On variable shift to state 211
-- On small_bool_expr shift to state 226
-- On small_alg_expr shift to state 228
-- On nbr shift to state 213
-- On constant shift to state 214
-- On bool_expr_no_or shift to state 233
-- On bool_expr_comp shift to state 236
-- On bool_expr shift to state 321
-- On alg_expr_up_to_sum shift to state 240
-- On alg_expr_up_to_prod shift to state 251
-- On alg_expr_up_to_mod shift to state 247
-- On alg_expr_up_to_if shift to state 252
## Reductions:

State 320:
## Known stack suffix:
## annot RUN annot SEMICOLON
## LR(1) items:
interactive_command -> annot RUN annot SEMICOLON . [ # ]
## Transitions:
## Reductions:
-- On # reduce production interactive_command -> annot RUN annot SEMICOLON

State 321:
## Known stack suffix:
## annot RUN annot bool_expr
## LR(1) items:
interactive_command -> annot RUN annot bool_expr . SEMICOLON [ # ]
## Transitions:
-- On SEMICOLON shift to state 322
## Reductions:

State 322:
## Known stack suffix:
## annot RUN annot bool_expr SEMICOLON
## LR(1) items:
interactive_command -> annot RUN annot bool_expr SEMICOLON . [ # ]
## Transitions:
## Reductions:
-- On # reduce production interactive_command -> annot RUN annot bool_expr SEMICOLON

State 323:
## Known stack suffix:
## PRINTF
## LR(1) items:
effect -> PRINTF . print_expr GREATER print_expr [ SEMICOLON EOF CL_PAR ]
effect -> PRINTF . print_expr [ SEMICOLON EOF CL_PAR ]
## Transitions:
-- On SPACE shift to state 2
-- On NEWLINE shift to state 3
-- On COMMENT shift to state 4
-- On print_expr shift to state 324
-- On annot shift to state 161
## Reductions:
-- On TMAX reduce production annot ->
-- On TIME reduce production annot ->
-- On TAN reduce production annot ->
-- On STRING reduce production annot ->
-- On SQRT reduce production annot ->
-- On SINUS reduce production annot ->
-- On SEMICOLON reduce production annot ->
-- On PIPE reduce production annot ->
-- On OP_PAR reduce production annot ->
-- On NULL_EVENT reduce production annot ->
-- On MINUS reduce production annot ->
-- On MIN reduce production annot ->
-- On MAX reduce production annot ->
-- On LOG reduce production annot ->
-- On LABEL reduce production annot ->
-- On INT reduce production annot ->
-- On INFINITY reduce production annot ->
-- On ID reduce production annot ->
-- On GREATER reduce production annot ->
-- On FLOAT reduce production annot ->
-- On EXPONENT reduce production annot ->
-- On EVENT reduce production annot ->
-- On EOF reduce production annot ->
-- On EMAX reduce production annot ->
-- On CPUTIME reduce production annot ->
-- On COSINUS reduce production annot ->
-- On CL_PAR reduce production annot ->
-- On ABS reduce production annot ->

State 324:
## Known stack suffix:
## PRINTF print_expr
## LR(1) items:
effect -> PRINTF print_expr . GREATER print_expr [ SEMICOLON EOF CL_PAR ]
effect -> PRINTF print_expr . [ SEMICOLON EOF CL_PAR ]
## Transitions:
-- On GREATER shift to state 325
## Reductions:
-- On SEMICOLON reduce production effect -> PRINTF print_expr
-- On EOF reduce production effect -> PRINTF print_expr
-- On CL_PAR reduce production effect -> PRINTF print_expr

State 325:
## Known stack suffix:
## PRINTF print_expr GREATER
## LR(1) items:
effect -> PRINTF print_expr GREATER . print_expr [ SEMICOLON EOF CL_PAR ]
## Transitions:
-- On SPACE shift to state 2
-- On NEWLINE shift to state 3
-- On COMMENT shift to state 4
-- On print_expr shift to state 326
-- On annot shift to state 161
## Reductions:
-- On TMAX reduce production annot ->
-- On TIME reduce production annot ->
-- On TAN reduce production annot ->
-- On STRING reduce production annot ->
-- On SQRT reduce production annot ->
-- On SINUS reduce production annot ->
-- On SEMICOLON reduce production annot ->
-- On PIPE reduce production annot ->
-- On OP_PAR reduce production annot ->
-- On NULL_EVENT reduce production annot ->
-- On MINUS reduce production annot ->
-- On MIN reduce production annot ->
-- On MAX reduce production annot ->
-- On LOG reduce production annot ->
-- On LABEL reduce production annot ->
-- On INT reduce production annot ->
-- On INFINITY reduce production annot ->
-- On ID reduce production annot ->
-- On FLOAT reduce production annot ->
-- On EXPONENT reduce production annot ->
-- On EVENT reduce production annot ->
-- On EOF reduce production annot ->
-- On EMAX reduce production annot ->
-- On CPUTIME reduce production annot ->
-- On COSINUS reduce production annot ->
-- On CL_PAR reduce production annot ->
-- On ABS reduce production annot ->

State 326:
## Known stack suffix:
## PRINTF print_expr GREATER print_expr
## LR(1) items:
effect -> PRINTF print_expr GREATER print_expr . [ SEMICOLON EOF CL_PAR ]
## Transitions:
## Reductions:
-- On SEMICOLON reduce production effect -> PRINTF print_expr GREATER print_expr
-- On EOF reduce production effect -> PRINTF print_expr GREATER print_expr
-- On CL_PAR reduce production effect -> PRINTF print_expr GREATER print_expr

State 327:
## Known stack suffix:
## PLOTENTRY
## LR(1) items:
effect -> PLOTENTRY . annot [ SEMICOLON EOF CL_PAR ]
## Transitions:
-- On SPACE shift to state 2
-- On NEWLINE shift to state 3
-- On COMMENT shift to state 4
-- On annot shift to state 328
## Reductions:
-- On SEMICOLON reduce production annot ->
-- On EOF reduce production annot ->
-- On CL_PAR reduce production annot ->

State 328:
## Known stack suffix:
## PLOTENTRY annot
## LR(1) items:
effect -> PLOTENTRY annot . [ SEMICOLON EOF CL_PAR ]
## Transitions:
## Reductions:
-- On SEMICOLON reduce production effect -> PLOTENTRY annot
-- On EOF reduce production effect -> PLOTENTRY annot
-- On CL_PAR reduce production effect -> PLOTENTRY annot

State 329:
## Known stack suffix:
## INTRO
## LR(1) items:
effect -> INTRO . annot alg_expr pattern [ SEMICOLON EOF CL_PAR ]
effect -> INTRO . annot error [ SEMICOLON EOF CL_PAR ]
## Transitions:
-- On SPACE shift to state 19
-- On NEWLINE shift to state 20
-- On COMMENT shift to state 21
-- On annot shift to state 330
## Reductions:
-- On error reduce production annot ->
-- On TRUE reduce production annot ->
-- On TMAX reduce production annot ->
-- On TIME reduce production annot ->
-- On TAN reduce production annot ->
-- On SQRT reduce production annot ->
-- On SINUS reduce production annot ->
-- On PIPE reduce production annot ->
-- On OP_PAR reduce production annot ->
-- On NULL_EVENT reduce production annot ->
-- On NOT reduce production annot ->
-- On MINUS reduce production annot ->
-- On MIN reduce production annot ->
-- On MAX reduce production annot ->
-- On LOG reduce production annot ->
-- On LABEL reduce production annot ->
-- On INT reduce production annot ->
-- On INFINITY reduce production annot ->
-- On ID reduce production annot ->
-- On FLOAT reduce production annot ->
-- On FALSE reduce production annot ->
-- On EXPONENT reduce production annot ->
-- On EVENT reduce production annot ->
-- On EMAX reduce production annot ->
-- On CPUTIME reduce production annot ->
-- On COSINUS reduce production annot ->
-- On ABS reduce production annot ->

State 330:
## Known stack suffix:
## INTRO annot
## LR(1) items:
effect -> INTRO annot . alg_expr pattern [ SEMICOLON EOF CL_PAR ]
effect -> INTRO annot . error [ SEMICOLON EOF CL_PAR ]
## Transitions:
-- On error shift to state 331
-- On TRUE shift to state 179
-- On TMAX shift to state 162
-- On TIME shift to state 163
-- On TAN shift to state 164
-- On SQRT shift to state 166
-- On SINUS shift to state 168
-- On PIPE shift to state 170
-- On OP_PAR shift to state 180
-- On NULL_EVENT shift to state 182
-- On NOT shift to state 183
-- On MINUS shift to state 189
-- On MIN shift to state 191
-- On MAX shift to state 193
-- On LOG shift to state 195
-- On LABEL shift to state 197
-- On INT shift to state 198
-- On INFINITY shift to state 199
-- On ID shift to state 200
-- On FLOAT shift to state 201
-- On FALSE shift to state 225
-- On EXPONENT shift to state 202
-- On EVENT shift to state 204
-- On EMAX shift to state 205
-- On CPUTIME shift to state 206
-- On COSINUS shift to state 207
-- On ABS shift to state 209
-- On variable shift to state 211
-- On small_bool_expr shift to state 226
-- On small_alg_expr shift to state 228
-- On nbr shift to state 213
-- On constant shift to state 214
-- On bool_expr_no_or shift to state 233
-- On bool_expr_comp shift to state 236
-- On bool_expr shift to state 255
-- On alg_expr_up_to_sum shift to state 240
-- On alg_expr_up_to_prod shift to state 251
-- On alg_expr_up_to_mod shift to state 247
-- On alg_expr_up_to_if shift to state 258
-- On alg_expr shift to state 332
## Reductions:

State 331:
## Known stack suffix:
## INTRO annot error
## LR(1) items:
effect -> INTRO annot error . [ SEMICOLON EOF CL_PAR ]
## Transitions:
## Reductions:
-- On SEMICOLON reduce production effect -> INTRO annot error
-- On EOF reduce production effect -> INTRO annot error
-- On CL_PAR reduce production effect -> INTRO annot error

State 332:
## Known stack suffix:
## INTRO annot alg_expr
## LR(1) items:
effect -> INTRO annot alg_expr . pattern [ SEMICOLON EOF CL_PAR ]
## Transitions:
-- On ID shift to state 18
-- On DOT shift to state 150
-- On pattern shift to state 333
-- On agent shift to state 155
## Reductions:

State 333:
## Known stack suffix:
## INTRO annot alg_expr pattern
## LR(1) items:
effect -> INTRO annot alg_expr pattern . [ SEMICOLON EOF CL_PAR ]
## Transitions:
## Reductions:
-- On SEMICOLON reduce production effect -> INTRO annot alg_expr pattern
-- On EOF reduce production effect -> INTRO annot alg_expr pattern
-- On CL_PAR reduce production effect -> INTRO annot alg_expr pattern

State 334:
## Known stack suffix:
## FLUX
## LR(1) items:
effect -> FLUX . annot nonempty_print_expr boolean annot [ SEMICOLON EOF CL_PAR ]
effect -> FLUX . annot nonempty_print_expr STRING annot boolean annot [ SEMICOLON EOF CL_PAR ]
## Transitions:
-- On SPACE shift to state 2
-- On NEWLINE shift to state 3
-- On COMMENT shift to state 4
-- On annot shift to state 335
## Reductions:
-- On TMAX reduce production annot ->
-- On TIME reduce production annot ->
-- On TAN reduce production annot ->
-- On STRING reduce production annot ->
-- On SQRT reduce production annot ->
-- On SINUS reduce production annot ->
-- On PIPE reduce production annot ->
-- On OP_PAR reduce production annot ->
-- On NULL_EVENT reduce production annot ->
-- On MINUS reduce production annot ->
-- On MIN reduce production annot ->
-- On MAX reduce production annot ->
-- On LOG reduce production annot ->
-- On LABEL reduce production annot ->
-- On INT reduce production annot ->
-- On INFINITY reduce production annot ->
-- On ID reduce production annot ->
-- On FLOAT reduce production annot ->
-- On EXPONENT reduce production annot ->
-- On EVENT reduce production annot ->
-- On EMAX reduce production annot ->
-- On CPUTIME reduce production annot ->
-- On COSINUS reduce production annot ->
-- On ABS reduce production annot ->

State 335:
## Known stack suffix:
## FLUX annot
## LR(1) items:
effect -> FLUX annot . nonempty_print_expr boolean annot [ SEMICOLON EOF CL_PAR ]
effect -> FLUX annot . nonempty_print_expr STRING annot boolean annot [ SEMICOLON EOF CL_PAR ]
## Transitions:
-- On TMAX shift to state 162
-- On TIME shift to state 163
-- On TAN shift to state 164
-- On STRING shift to state 290
-- On SQRT shift to state 166
-- On SINUS shift to state 168
-- On PIPE shift to state 170
-- On OP_PAR shift to state 294
-- On NULL_EVENT shift to state 182
-- On MINUS shift to state 189
-- On MIN shift to state 191
-- On MAX shift to state 193
-- On LOG shift to state 195
-- On LABEL shift to state 197
-- On INT shift to state 198
-- On INFINITY shift to state 199
-- On ID shift to state 200
-- On FLOAT shift to state 201
-- On EXPONENT shift to state 202
-- On EVENT shift to state 204
-- On EMAX shift to state 205
-- On CPUTIME shift to state 206
-- On COSINUS shift to state 207
-- On ABS shift to state 209
-- On variable shift to state 211
-- On small_alg_expr shift to state 228
-- On print_expr_list shift to state 304
-- On nonempty_print_expr shift to state 336
-- On nbr shift to state 213
-- On constant shift to state 214
-- On alg_expr_up_to_sum shift to state 240
-- On alg_expr_up_to_prod shift to state 251
-- On alg_expr_up_to_mod shift to state 247
-- On alg_expr_up_to_if shift to state 306
## Reductions:

State 336:
## Known stack suffix:
## FLUX annot nonempty_print_expr
## LR(1) items:
effect -> FLUX annot nonempty_print_expr . boolean annot [ SEMICOLON EOF CL_PAR ]
effect -> FLUX annot nonempty_print_expr . STRING annot boolean annot [ SEMICOLON EOF CL_PAR ]
## Transitions:
-- On TRUE shift to state 14
-- On STRING shift to state 337
-- On FALSE shift to state 15
-- On boolean shift to state 341
## Reductions:

State 337:
## Known stack suffix:
## FLUX annot nonempty_print_expr STRING
## LR(1) items:
effect -> FLUX annot nonempty_print_expr STRING . annot boolean annot [ SEMICOLON EOF CL_PAR ]
## Transitions:
-- On SPACE shift to state 2
-- On NEWLINE shift to state 3
-- On COMMENT shift to state 4
-- On annot shift to state 338
## Reductions:
-- On TRUE reduce production annot ->
-- On FALSE reduce production annot ->

State 338:
## Known stack suffix:
## FLUX annot nonempty_print_expr STRING annot
## LR(1) items:
effect -> FLUX annot nonempty_print_expr STRING annot . boolean annot [ SEMICOLON EOF CL_PAR ]
## Transitions:
-- On TRUE shift to state 14
-- On FALSE shift to state 15
-- On boolean shift to state 339
## Reductions:

State 339:
## Known stack suffix:
## FLUX annot nonempty_print_expr STRING annot boolean
## LR(1) items:
effect -> FLUX annot nonempty_print_expr STRING annot boolean . annot [ SEMICOLON EOF CL_PAR ]
## Transitions:
-- On SPACE shift to state 2
-- On NEWLINE shift to state 3
-- On COMMENT shift to state 4
-- On annot shift to state 340
## Reductions:
-- On SEMICOLON reduce production annot ->
-- On EOF reduce production annot ->
-- On CL_PAR reduce production annot ->

State 340:
## Known stack suffix:
## FLUX annot nonempty_print_expr STRING annot boolean annot
## LR(1) items:
effect -> FLUX annot nonempty_print_expr STRING annot boolean annot . [ SEMICOLON EOF CL_PAR ]
## Transitions:
## Reductions:
-- On SEMICOLON reduce production effect -> FLUX annot nonempty_print_expr STRING annot boolean annot
-- On EOF reduce production effect -> FLUX annot nonempty_print_expr STRING annot boolean annot
-- On CL_PAR reduce production effect -> FLUX annot nonempty_print_expr STRING annot boolean annot

State 341:
## Known stack suffix:
## FLUX annot nonempty_print_expr boolean
## LR(1) items:
effect -> FLUX annot nonempty_print_expr boolean . annot [ SEMICOLON EOF CL_PAR ]
## Transitions:
-- On SPACE shift to state 2
-- On NEWLINE shift to state 3
-- On COMMENT shift to state 4
-- On annot shift to state 342
## Reductions:
-- On SEMICOLON reduce production annot ->
-- On EOF reduce production annot ->
-- On CL_PAR reduce production annot ->

State 342:
## Known stack suffix:
## FLUX annot nonempty_print_expr boolean annot
## LR(1) items:
effect -> FLUX annot nonempty_print_expr boolean annot . [ SEMICOLON EOF CL_PAR ]
## Transitions:
## Reductions:
-- On SEMICOLON reduce production effect -> FLUX annot nonempty_print_expr boolean annot
-- On EOF reduce production effect -> FLUX annot nonempty_print_expr boolean annot
-- On CL_PAR reduce production effect -> FLUX annot nonempty_print_expr boolean annot

State 343:
## Known stack suffix:
## annot EOF
## LR(1) items:
interactive_command -> annot EOF . [ # ]
## Transitions:
## Reductions:
-- On # reduce production interactive_command -> annot EOF

State 344:
## Known stack suffix:
## DELETE
## LR(1) items:
effect -> DELETE . annot alg_expr pattern [ SEMICOLON EOF CL_PAR ]
effect -> DELETE . annot error [ SEMICOLON EOF CL_PAR ]
## Transitions:
-- On SPACE shift to state 19
-- On NEWLINE shift to state 20
-- On COMMENT shift to state 21
-- On annot shift to state 345
## Reductions:
-- On error reduce production annot ->
-- On TRUE reduce production annot ->
-- On TMAX reduce production annot ->
-- On TIME reduce production annot ->
-- On TAN reduce production annot ->
-- On SQRT reduce production annot ->
-- On SINUS reduce production annot ->
-- On PIPE reduce production annot ->
-- On OP_PAR reduce production annot ->
-- On NULL_EVENT reduce production annot ->
-- On NOT reduce production annot ->
-- On MINUS reduce production annot ->
-- On MIN reduce production annot ->
-- On MAX reduce production annot ->
-- On LOG reduce production annot ->
-- On LABEL reduce production annot ->
-- On INT reduce production annot ->
-- On INFINITY reduce production annot ->
-- On ID reduce production annot ->
-- On FLOAT reduce production annot ->
-- On FALSE reduce production annot ->
-- On EXPONENT reduce production annot ->
-- On EVENT reduce production annot ->
-- On EMAX reduce production annot ->
-- On CPUTIME reduce production annot ->
-- On COSINUS reduce production annot ->
-- On ABS reduce production annot ->

State 345:
## Known stack suffix:
## DELETE annot
## LR(1) items:
effect -> DELETE annot . alg_expr pattern [ SEMICOLON EOF CL_PAR ]
effect -> DELETE annot . error [ SEMICOLON EOF CL_PAR ]
## Transitions:
-- On error shift to state 346
-- On TRUE shift to state 179
-- On TMAX shift to state 162
-- On TIME shift to state 163
-- On TAN shift to state 164
-- On SQRT shift to state 166
-- On SINUS shift to state 168
-- On PIPE shift to state 170
-- On OP_PAR shift to state 180
-- On NULL_EVENT shift to state 182
-- On NOT shift to state 183
-- On MINUS shift to state 189
-- On MIN shift to state 191
-- On MAX shift to state 193
-- On LOG shift to state 195
-- On LABEL shift to state 197
-- On INT shift to state 198
-- On INFINITY shift to state 199
-- On ID shift to state 200
-- On FLOAT shift to state 201
-- On FALSE shift to state 225
-- On EXPONENT shift to state 202
-- On EVENT shift to state 204
-- On EMAX shift to state 205
-- On CPUTIME shift to state 206
-- On COSINUS shift to state 207
-- On ABS shift to state 209
-- On variable shift to state 211
-- On small_bool_expr shift to state 226
-- On small_alg_expr shift to state 228
-- On nbr shift to state 213
-- On constant shift to state 214
-- On bool_expr_no_or shift to state 233
-- On bool_expr_comp shift to state 236
-- On bool_expr shift to state 255
-- On alg_expr_up_to_sum shift to state 240
-- On alg_expr_up_to_prod shift to state 251
-- On alg_expr_up_to_mod shift to state 247
-- On alg_expr_up_to_if shift to state 258
-- On alg_expr shift to state 347
## Reductions:

State 346:
## Known stack suffix:
## DELETE annot error
## LR(1) items:
effect -> DELETE annot error . [ SEMICOLON EOF CL_PAR ]
## Transitions:
## Reductions:
-- On SEMICOLON reduce production effect -> DELETE annot error
-- On EOF reduce production effect -> DELETE annot error
-- On CL_PAR reduce production effect -> DELETE annot error

State 347:
## Known stack suffix:
## DELETE annot alg_expr
## LR(1) items:
effect -> DELETE annot alg_expr . pattern [ SEMICOLON EOF CL_PAR ]
## Transitions:
-- On ID shift to state 18
-- On DOT shift to state 150
-- On pattern shift to state 348
-- On agent shift to state 155
## Reductions:

State 348:
## Known stack suffix:
## DELETE annot alg_expr pattern
## LR(1) items:
effect -> DELETE annot alg_expr pattern . [ SEMICOLON EOF CL_PAR ]
## Transitions:
## Reductions:
-- On SEMICOLON reduce production effect -> DELETE annot alg_expr pattern
-- On EOF reduce production effect -> DELETE annot alg_expr pattern
-- On CL_PAR reduce production effect -> DELETE annot alg_expr pattern

State 349:
## Known stack suffix:
## ASSIGN
## LR(1) items:
effect -> ASSIGN . annot ID annot alg_expr [ SEMICOLON EOF CL_PAR ]
effect -> ASSIGN . annot LABEL annot alg_expr [ SEMICOLON EOF CL_PAR ]
## Transitions:
-- On SPACE shift to state 2
-- On NEWLINE shift to state 3
-- On COMMENT shift to state 4
-- On annot shift to state 350
## Reductions:
-- On LABEL reduce production annot ->
-- On ID reduce production annot ->

State 350:
## Known stack suffix:
## ASSIGN annot
## LR(1) items:
effect -> ASSIGN annot . ID annot alg_expr [ SEMICOLON EOF CL_PAR ]
effect -> ASSIGN annot . LABEL annot alg_expr [ SEMICOLON EOF CL_PAR ]
## Transitions:
-- On LABEL shift to state 351
-- On ID shift to state 354
## Reductions:

State 351:
## Known stack suffix:
## ASSIGN annot LABEL
## LR(1) items:
effect -> ASSIGN annot LABEL . annot alg_expr [ SEMICOLON EOF CL_PAR ]
## Transitions:
-- On SPACE shift to state 2
-- On NEWLINE shift to state 3
-- On COMMENT shift to state 4
-- On annot shift to state 352
## Reductions:
-- On TRUE reduce production annot ->
-- On TMAX reduce production annot ->
-- On TIME reduce production annot ->
-- On TAN reduce production annot ->
-- On SQRT reduce production annot ->
-- On SINUS reduce production annot ->
-- On PIPE reduce production annot ->
-- On OP_PAR reduce production annot ->
-- On NULL_EVENT reduce production annot ->
-- On NOT reduce production annot ->
-- On MINUS reduce production annot ->
-- On MIN reduce production annot ->
-- On MAX reduce production annot ->
-- On LOG reduce production annot ->
-- On LABEL reduce production annot ->
-- On INT reduce production annot ->
-- On INFINITY reduce production annot ->
-- On ID reduce production annot ->
-- On FLOAT reduce production annot ->
-- On FALSE reduce production annot ->
-- On EXPONENT reduce production annot ->
-- On EVENT reduce production annot ->
-- On EMAX reduce production annot ->
-- On CPUTIME reduce production annot ->
-- On COSINUS reduce production annot ->
-- On ABS reduce production annot ->

State 352:
## Known stack suffix:
## ASSIGN annot LABEL annot
## LR(1) items:
effect -> ASSIGN annot LABEL annot . alg_expr [ SEMICOLON EOF CL_PAR ]
## Transitions:
-- On TRUE shift to state 179
-- On TMAX shift to state 162
-- On TIME shift to state 163
-- On TAN shift to state 164
-- On SQRT shift to state 166
-- On SINUS shift to state 168
-- On PIPE shift to state 170
-- On OP_PAR shift to state 180
-- On NULL_EVENT shift to state 182
-- On NOT shift to state 183
-- On MINUS shift to state 189
-- On MIN shift to state 191
-- On MAX shift to state 193
-- On LOG shift to state 195
-- On LABEL shift to state 197
-- On INT shift to state 198
-- On INFINITY shift to state 199
-- On ID shift to state 200
-- On FLOAT shift to state 201
-- On FALSE shift to state 225
-- On EXPONENT shift to state 202
-- On EVENT shift to state 204
-- On EMAX shift to state 205
-- On CPUTIME shift to state 206
-- On COSINUS shift to state 207
-- On ABS shift to state 209
-- On variable shift to state 211
-- On small_bool_expr shift to state 226
-- On small_alg_expr shift to state 228
-- On nbr shift to state 213
-- On constant shift to state 214
-- On bool_expr_no_or shift to state 233
-- On bool_expr_comp shift to state 236
-- On bool_expr shift to state 255
-- On alg_expr_up_to_sum shift to state 240
-- On alg_expr_up_to_prod shift to state 251
-- On alg_expr_up_to_mod shift to state 247
-- On alg_expr_up_to_if shift to state 258
-- On alg_expr shift to state 353
## Reductions:

State 353:
## Known stack suffix:
## ASSIGN annot LABEL annot alg_expr
## LR(1) items:
effect -> ASSIGN annot LABEL annot alg_expr . [ SEMICOLON EOF CL_PAR ]
## Transitions:
## Reductions:
-- On SEMICOLON reduce production effect -> ASSIGN annot LABEL annot alg_expr
-- On EOF reduce production effect -> ASSIGN annot LABEL annot alg_expr
-- On CL_PAR reduce production effect -> ASSIGN annot LABEL annot alg_expr

State 354:
## Known stack suffix:
## ASSIGN annot ID
## LR(1) items:
effect -> ASSIGN annot ID . annot alg_expr [ SEMICOLON EOF CL_PAR ]
## Transitions:
-- On SPACE shift to state 2
-- On NEWLINE shift to state 3
-- On COMMENT shift to state 4
-- On annot shift to state 355
## Reductions:
-- On TRUE reduce production annot ->
-- On TMAX reduce production annot ->
-- On TIME reduce production annot ->
-- On TAN reduce production annot ->
-- On SQRT reduce production annot ->
-- On SINUS reduce production annot ->
-- On PIPE reduce production annot ->
-- On OP_PAR reduce production annot ->
-- On NULL_EVENT reduce production annot ->
-- On NOT reduce production annot ->
-- On MINUS reduce production annot ->
-- On MIN reduce production annot ->
-- On MAX reduce production annot ->
-- On LOG reduce production annot ->
-- On LABEL reduce production annot ->
-- On INT reduce production annot ->
-- On INFINITY reduce production annot ->
-- On ID reduce production annot ->
-- On FLOAT reduce production annot ->
-- On FALSE reduce production annot ->
-- On EXPONENT reduce production annot ->
-- On EVENT reduce production annot ->
-- On EMAX reduce production annot ->
-- On CPUTIME reduce production annot ->
-- On COSINUS reduce production annot ->
-- On ABS reduce production annot ->

State 355:
## Known stack suffix:
## ASSIGN annot ID annot
## LR(1) items:
effect -> ASSIGN annot ID annot . alg_expr [ SEMICOLON EOF CL_PAR ]
## Transitions:
-- On TRUE shift to state 179
-- On TMAX shift to state 162
-- On TIME shift to state 163
-- On TAN shift to state 164
-- On SQRT shift to state 166
-- On SINUS shift to state 168
-- On PIPE shift to state 170
-- On OP_PAR shift to state 180
-- On NULL_EVENT shift to state 182
-- On NOT shift to state 183
-- On MINUS shift to state 189
-- On MIN shift to state 191
-- On MAX shift to state 193
-- On LOG shift to state 195
-- On LABEL shift to state 197
-- On INT shift to state 198
-- On INFINITY shift to state 199
-- On ID shift to state 200
-- On FLOAT shift to state 201
-- On FALSE shift to state 225
-- On EXPONENT shift to state 202
-- On EVENT shift to state 204
-- On EMAX shift to state 205
-- On CPUTIME shift to state 206
-- On COSINUS shift to state 207
-- On ABS shift to state 209
-- On variable shift to state 211
-- On small_bool_expr shift to state 226
-- On small_alg_expr shift to state 228
-- On nbr shift to state 213
-- On constant shift to state 214
-- On bool_expr_no_or shift to state 233
-- On bool_expr_comp shift to state 236
-- On bool_expr shift to state 255
-- On alg_expr_up_to_sum shift to state 240
-- On alg_expr_up_to_prod shift to state 251
-- On alg_expr_up_to_mod shift to state 247
-- On alg_expr_up_to_if shift to state 258
-- On alg_expr shift to state 356
## Reductions:

State 356:
## Known stack suffix:
## ASSIGN annot ID annot alg_expr
## LR(1) items:
effect -> ASSIGN annot ID annot alg_expr . [ SEMICOLON EOF CL_PAR ]
## Transitions:
## Reductions:
-- On SEMICOLON reduce production effect -> ASSIGN annot ID annot alg_expr
-- On EOF reduce production effect -> ASSIGN annot ID annot alg_expr
-- On CL_PAR reduce production effect -> ASSIGN annot ID annot alg_expr

State 357:
## Known stack suffix:
## APPLY
## LR(1) items:
effect -> APPLY . annot alg_expr rule_content [ SEMICOLON EOF CL_PAR ]
## Transitions:
-- On SPACE shift to state 2
-- On NEWLINE shift to state 3
-- On COMMENT shift to state 4
-- On annot shift to state 358
## Reductions:
-- On TRUE reduce production annot ->
-- On TMAX reduce production annot ->
-- On TIME reduce production annot ->
-- On TAN reduce production annot ->
-- On SQRT reduce production annot ->
-- On SINUS reduce production annot ->
-- On PIPE reduce production annot ->
-- On OP_PAR reduce production annot ->
-- On NULL_EVENT reduce production annot ->
-- On NOT reduce production annot ->
-- On MINUS reduce production annot ->
-- On MIN reduce production annot ->
-- On MAX reduce production annot ->
-- On LOG reduce production annot ->
-- On LABEL reduce production annot ->
-- On INT reduce production annot ->
-- On INFINITY reduce production annot ->
-- On ID reduce production annot ->
-- On FLOAT reduce production annot ->
-- On FALSE reduce production annot ->
-- On EXPONENT reduce production annot ->
-- On EVENT reduce production annot ->
-- On EMAX reduce production annot ->
-- On CPUTIME reduce production annot ->
-- On COSINUS reduce production annot ->
-- On ABS reduce production annot ->

State 358:
## Known stack suffix:
## APPLY annot
## LR(1) items:
effect -> APPLY annot . alg_expr rule_content [ SEMICOLON EOF CL_PAR ]
## Transitions:
-- On TRUE shift to state 179
-- On TMAX shift to state 162
-- On TIME shift to state 163
-- On TAN shift to state 164
-- On SQRT shift to state 166
-- On SINUS shift to state 168
-- On PIPE shift to state 170
-- On OP_PAR shift to state 180
-- On NULL_EVENT shift to state 182
-- On NOT shift to state 183
-- On MINUS shift to state 189
-- On MIN shift to state 191
-- On MAX shift to state 193
-- On LOG shift to state 195
-- On LABEL shift to state 197
-- On INT shift to state 198
-- On INFINITY shift to state 199
-- On ID shift to state 200
-- On FLOAT shift to state 201
-- On FALSE shift to state 225
-- On EXPONENT shift to state 202
-- On EVENT shift to state 204
-- On EMAX shift to state 205
-- On CPUTIME shift to state 206
-- On COSINUS shift to state 207
-- On ABS shift to state 209
-- On variable shift to state 211
-- On small_bool_expr shift to state 226
-- On small_alg_expr shift to state 228
-- On nbr shift to state 213
-- On constant shift to state 214
-- On bool_expr_no_or shift to state 233
-- On bool_expr_comp shift to state 236
-- On bool_expr shift to state 255
-- On alg_expr_up_to_sum shift to state 240
-- On alg_expr_up_to_prod shift to state 251
-- On alg_expr_up_to_mod shift to state 247
-- On alg_expr_up_to_if shift to state 258
-- On alg_expr shift to state 359
## Reductions:

State 359:
## Known stack suffix:
## APPLY annot alg_expr
## LR(1) items:
effect -> APPLY annot alg_expr . rule_content [ SEMICOLON EOF CL_PAR ]
## Transitions:
-- On RAR shift to state 360
-- On PIPE shift to state 361
-- On LRAR shift to state 372
-- On ID shift to state 18
-- On DOT shift to state 150
-- On rule_side shift to state 373
-- On rule_content shift to state 382
-- On pattern shift to state 377
-- On arrow shift to state 383
-- On agent shift to state 155
## Reductions:

State 360:
## Known stack suffix:
## RAR
## LR(1) items:
arrow -> RAR . [ SPACE SEMICOLON PIPE NEWLINE ID EOF DOT COMMENT CL_PAR ]
## Transitions:
## Reductions:
-- On SPACE reduce production arrow -> RAR
-- On SEMICOLON reduce production arrow -> RAR
-- On PIPE reduce production arrow -> RAR
-- On NEWLINE reduce production arrow -> RAR
-- On ID reduce production arrow -> RAR
-- On EOF reduce production arrow -> RAR
-- On DOT reduce production arrow -> RAR
-- On COMMENT reduce production arrow -> RAR
-- On CL_PAR reduce production arrow -> RAR

State 361:
## Known stack suffix:
## PIPE
## LR(1) items:
rule_side -> PIPE . annot sum_token [ SEMICOLON RAR LRAR EOF CL_PAR ]
rule_side -> PIPE . annot error [ SEMICOLON RAR LRAR EOF CL_PAR ]
## Transitions:
-- On SPACE shift to state 19
-- On NEWLINE shift to state 20
-- On COMMENT shift to state 21
-- On annot shift to state 362
## Reductions:
-- On error reduce production annot ->
-- On TMAX reduce production annot ->
-- On TIME reduce production annot ->
-- On TAN reduce production annot ->
-- On SQRT reduce production annot ->
-- On SINUS reduce production annot ->
-- On PIPE reduce production annot ->
-- On OP_PAR reduce production annot ->
-- On NULL_EVENT reduce production annot ->
-- On MINUS reduce production annot ->
-- On MIN reduce production annot ->
-- On MAX reduce production annot ->
-- On LOG reduce production annot ->
-- On LABEL reduce production annot ->
-- On INT reduce production annot ->
-- On INFINITY reduce production annot ->
-- On ID reduce production annot ->
-- On FLOAT reduce production annot ->
-- On EXPONENT reduce production annot ->
-- On EVENT reduce production annot ->
-- On EMAX reduce production annot ->
-- On CPUTIME reduce production annot ->
-- On COSINUS reduce production annot ->
-- On ABS reduce production annot ->

State 362:
## Known stack suffix:
## PIPE annot
## LR(1) items:
rule_side -> PIPE annot . sum_token [ SEMICOLON RAR LRAR EOF CL_PAR ]
rule_side -> PIPE annot . error [ SEMICOLON RAR LRAR EOF CL_PAR ]
## Transitions:
-- On error shift to state 363
-- On TMAX shift to state 162
-- On TIME shift to state 163
-- On TAN shift to state 164
-- On SQRT shift to state 166
-- On SINUS shift to state 168
-- On PIPE shift to state 170
-- On OP_PAR shift to state 177
-- On NULL_EVENT shift to state 182
-- On MINUS shift to state 189
-- On MIN shift to state 191
-- On MAX shift to state 193
-- On LOG shift to state 195
-- On LABEL shift to state 197
-- On INT shift to state 198
-- On INFINITY shift to state 199
-- On ID shift to state 200
-- On FLOAT shift to state 201
-- On EXPONENT shift to state 202
-- On EVENT shift to state 204
-- On EMAX shift to state 205
-- On CPUTIME shift to state 206
-- On COSINUS shift to state 207
-- On ABS shift to state 209
-- On variable shift to state 211
-- On sum_token shift to state 364
-- On small_alg_expr shift to state 365
-- On nbr shift to state 213
-- On constant shift to state 214
## Reductions:

State 363:
## Known stack suffix:
## PIPE annot error
## LR(1) items:
rule_side -> PIPE annot error . [ SEMICOLON RAR LRAR EOF CL_PAR ]
## Transitions:
## Reductions:
-- On SEMICOLON reduce production rule_side -> PIPE annot error
-- On RAR reduce production rule_side -> PIPE annot error
-- On LRAR reduce production rule_side -> PIPE annot error
-- On EOF reduce production rule_side -> PIPE annot error
-- On CL_PAR reduce production rule_side -> PIPE annot error

State 364:
## Known stack suffix:
## PIPE annot sum_token
## LR(1) items:
rule_side -> PIPE annot sum_token . [ SEMICOLON RAR LRAR EOF CL_PAR ]
## Transitions:
## Reductions:
-- On SEMICOLON reduce production rule_side -> PIPE annot sum_token
-- On RAR reduce production rule_side -> PIPE annot sum_token
-- On LRAR reduce production rule_side -> PIPE annot sum_token
-- On EOF reduce production rule_side -> PIPE annot sum_token
-- On CL_PAR reduce production rule_side -> PIPE annot sum_token

State 365:
## Known stack suffix:
## small_alg_expr
## LR(1) items:
sum_token -> small_alg_expr . annot ID annot [ SEMICOLON RAR LRAR EOF CL_PAR ]
sum_token -> small_alg_expr . annot ID annot COMMA annot sum_token [ SEMICOLON RAR LRAR EOF CL_PAR ]
## Transitions:
-- On SPACE shift to state 2
-- On NEWLINE shift to state 3
-- On COMMENT shift to state 4
-- On annot shift to state 366
## Reductions:
-- On ID reduce production annot ->

State 366:
## Known stack suffix:
## small_alg_expr annot
## LR(1) items:
sum_token -> small_alg_expr annot . ID annot [ SEMICOLON RAR LRAR EOF CL_PAR ]
sum_token -> small_alg_expr annot . ID annot COMMA annot sum_token [ SEMICOLON RAR LRAR EOF CL_PAR ]
## Transitions:
-- On ID shift to state 367
## Reductions:

State 367:
## Known stack suffix:
## small_alg_expr annot ID
## LR(1) items:
sum_token -> small_alg_expr annot ID . annot [ SEMICOLON RAR LRAR EOF CL_PAR ]
sum_token -> small_alg_expr annot ID . annot COMMA annot sum_token [ SEMICOLON RAR LRAR EOF CL_PAR ]
## Transitions:
-- On SPACE shift to state 2
-- On NEWLINE shift to state 3
-- On COMMENT shift to state 4
-- On annot shift to state 368
## Reductions:
-- On SEMICOLON reduce production annot ->
-- On RAR reduce production annot ->
-- On LRAR reduce production annot ->
-- On EOF reduce production annot ->
-- On COMMA reduce production annot ->
-- On CL_PAR reduce production annot ->

State 368:
## Known stack suffix:
## small_alg_expr annot ID annot
## LR(1) items:
sum_token -> small_alg_expr annot ID annot . [ SEMICOLON RAR LRAR EOF CL_PAR ]
sum_token -> small_alg_expr annot ID annot . COMMA annot sum_token [ SEMICOLON RAR LRAR EOF CL_PAR ]
## Transitions:
-- On COMMA shift to state 369
## Reductions:
-- On SEMICOLON reduce production sum_token -> small_alg_expr annot ID annot
-- On RAR reduce production sum_token -> small_alg_expr annot ID annot
-- On LRAR reduce production sum_token -> small_alg_expr annot ID annot
-- On EOF reduce production sum_token -> small_alg_expr annot ID annot
-- On CL_PAR reduce production sum_token -> small_alg_expr annot ID annot

State 369:
## Known stack suffix:
## small_alg_expr annot ID annot COMMA
## LR(1) items:
sum_token -> small_alg_expr annot ID annot COMMA . annot sum_token [ SEMICOLON RAR LRAR EOF CL_PAR ]
## Transitions:
-- On SPACE shift to state 2
-- On NEWLINE shift to state 3
-- On COMMENT shift to state 4
-- On annot shift to state 370
## Reductions:
-- On TMAX reduce production annot ->
-- On TIME reduce production annot ->
-- On TAN reduce production annot ->
-- On SQRT reduce production annot ->
-- On SINUS reduce production annot ->
-- On PIPE reduce production annot ->
-- On OP_PAR reduce production annot ->
-- On NULL_EVENT reduce production annot ->
-- On MINUS reduce production annot ->
-- On MIN reduce production annot ->
-- On MAX reduce production annot ->
-- On LOG reduce production annot ->
-- On LABEL reduce production annot ->
-- On INT reduce production annot ->
-- On INFINITY reduce production annot ->
-- On ID reduce production annot ->
-- On FLOAT reduce production annot ->
-- On EXPONENT reduce production annot ->
-- On EVENT reduce production annot ->
-- On EMAX reduce production annot ->
-- On CPUTIME reduce production annot ->
-- On COSINUS reduce production annot ->
-- On ABS reduce production annot ->

State 370:
## Known stack suffix:
## small_alg_expr annot ID annot COMMA annot
## LR(1) items:
sum_token -> small_alg_expr annot ID annot COMMA annot . sum_token [ SEMICOLON RAR LRAR EOF CL_PAR ]
## Transitions:
-- On TMAX shift to state 162
-- On TIME shift to state 163
-- On TAN shift to state 164
-- On SQRT shift to state 166
-- On SINUS shift to state 168
-- On PIPE shift to state 170
-- On OP_PAR shift to state 177
-- On NULL_EVENT shift to state 182
-- On MINUS shift to state 189
-- On MIN shift to state 191
-- On MAX shift to state 193
-- On LOG shift to state 195
-- On LABEL shift to state 197
-- On INT shift to state 198
-- On INFINITY shift to state 199
-- On ID shift to state 200
-- On FLOAT shift to state 201
-- On EXPONENT shift to state 202
-- On EVENT shift to state 204
-- On EMAX shift to state 205
-- On CPUTIME shift to state 206
-- On COSINUS shift to state 207
-- On ABS shift to state 209
-- On variable shift to state 211
-- On sum_token shift to state 371
-- On small_alg_expr shift to state 365
-- On nbr shift to state 213
-- On constant shift to state 214
## Reductions:

State 371:
## Known stack suffix:
## small_alg_expr annot ID annot COMMA annot sum_token
## LR(1) items:
sum_token -> small_alg_expr annot ID annot COMMA annot sum_token . [ SEMICOLON RAR LRAR EOF CL_PAR ]
## Transitions:
## Reductions:
-- On SEMICOLON reduce production sum_token -> small_alg_expr annot ID annot COMMA annot sum_token
-- On RAR reduce production sum_token -> small_alg_expr annot ID annot COMMA annot sum_token
-- On LRAR reduce production sum_token -> small_alg_expr annot ID annot COMMA annot sum_token
-- On EOF reduce production sum_token -> small_alg_expr annot ID annot COMMA annot sum_token
-- On CL_PAR reduce production sum_token -> small_alg_expr annot ID annot COMMA annot sum_token

State 372:
## Known stack suffix:
## LRAR
## LR(1) items:
arrow -> LRAR . [ SPACE SEMICOLON PIPE NEWLINE ID EOF DOT COMMENT CL_PAR ]
## Transitions:
## Reductions:
-- On SPACE reduce production arrow -> LRAR
-- On SEMICOLON reduce production arrow -> LRAR
-- On PIPE reduce production arrow -> LRAR
-- On NEWLINE reduce production arrow -> LRAR
-- On ID reduce production arrow -> LRAR
-- On EOF reduce production arrow -> LRAR
-- On DOT reduce production arrow -> LRAR
-- On COMMENT reduce production arrow -> LRAR
-- On CL_PAR reduce production arrow -> LRAR

State 373:
## Known stack suffix:
## rule_side
## LR(1) items:
rule_content -> rule_side . arrow annot rule_side [ SEMICOLON EOF CL_PAR ]
rule_content -> rule_side . arrow annot [ SEMICOLON EOF CL_PAR ]
rule_content -> rule_side . [ SEMICOLON EOF CL_PAR ]
## Transitions:
-- On RAR shift to state 360
-- On LRAR shift to state 372
-- On arrow shift to state 374
## Reductions:
-- On SEMICOLON reduce production rule_content -> rule_side
-- On EOF reduce production rule_content -> rule_side
-- On CL_PAR reduce production rule_content -> rule_side

State 374:
## Known stack suffix:
## rule_side arrow
## LR(1) items:
rule_content -> rule_side arrow . annot rule_side [ SEMICOLON EOF CL_PAR ]
rule_content -> rule_side arrow . annot [ SEMICOLON EOF CL_PAR ]
## Transitions:
-- On SPACE shift to state 2
-- On NEWLINE shift to state 3
-- On COMMENT shift to state 4
-- On annot shift to state 375
## Reductions:
-- On SEMICOLON reduce production annot ->
-- On PIPE reduce production annot ->
-- On ID reduce production annot ->
-- On EOF reduce production annot ->
-- On DOT reduce production annot ->
-- On CL_PAR reduce production annot ->

State 375:
## Known stack suffix:
## rule_side arrow annot
## LR(1) items:
rule_content -> rule_side arrow annot . rule_side [ SEMICOLON EOF CL_PAR ]
rule_content -> rule_side arrow annot . [ SEMICOLON EOF CL_PAR ]
## Transitions:
-- On PIPE shift to state 361
-- On ID shift to state 18
-- On DOT shift to state 150
-- On rule_side shift to state 376
-- On pattern shift to state 377
-- On agent shift to state 155
## Reductions:
-- On SEMICOLON reduce production rule_content -> rule_side arrow annot
-- On EOF reduce production rule_content -> rule_side arrow annot
-- On CL_PAR reduce production rule_content -> rule_side arrow annot

State 376:
## Known stack suffix:
## rule_side arrow annot rule_side
## LR(1) items:
rule_content -> rule_side arrow annot rule_side . [ SEMICOLON EOF CL_PAR ]
## Transitions:
## Reductions:
-- On SEMICOLON reduce production rule_content -> rule_side arrow annot rule_side
-- On EOF reduce production rule_content -> rule_side arrow annot rule_side
-- On CL_PAR reduce production rule_content -> rule_side arrow annot rule_side

State 377:
## Known stack suffix:
## pattern
## LR(1) items:
rule_side -> pattern . [ SEMICOLON RAR LRAR EOF CL_PAR ]
rule_side -> pattern . PIPE annot sum_token [ SEMICOLON RAR LRAR EOF CL_PAR ]
rule_side -> pattern . PIPE annot error [ SEMICOLON RAR LRAR EOF CL_PAR ]
## Transitions:
-- On PIPE shift to state 378
## Reductions:
-- On SEMICOLON reduce production rule_side -> pattern
-- On RAR reduce production rule_side -> pattern
-- On LRAR reduce production rule_side -> pattern
-- On EOF reduce production rule_side -> pattern
-- On CL_PAR reduce production rule_side -> pattern

State 378:
## Known stack suffix:
## pattern PIPE
## LR(1) items:
rule_side -> pattern PIPE . annot sum_token [ SEMICOLON RAR LRAR EOF CL_PAR ]
rule_side -> pattern PIPE . annot error [ SEMICOLON RAR LRAR EOF CL_PAR ]
## Transitions:
-- On SPACE shift to state 19
-- On NEWLINE shift to state 20
-- On COMMENT shift to state 21
-- On annot shift to state 379
## Reductions:
-- On error reduce production annot ->
-- On TMAX reduce production annot ->
-- On TIME reduce production annot ->
-- On TAN reduce production annot ->
-- On SQRT reduce production annot ->
-- On SINUS reduce production annot ->
-- On PIPE reduce production annot ->
-- On OP_PAR reduce production annot ->
-- On NULL_EVENT reduce production annot ->
-- On MINUS reduce production annot ->
-- On MIN reduce production annot ->
-- On MAX reduce production annot ->
-- On LOG reduce production annot ->
-- On LABEL reduce production annot ->
-- On INT reduce production annot ->
-- On INFINITY reduce production annot ->
-- On ID reduce production annot ->
-- On FLOAT reduce production annot ->
-- On EXPONENT reduce production annot ->
-- On EVENT reduce production annot ->
-- On EMAX reduce production annot ->
-- On CPUTIME reduce production annot ->
-- On COSINUS reduce production annot ->
-- On ABS reduce production annot ->

State 379:
## Known stack suffix:
## pattern PIPE annot
## LR(1) items:
rule_side -> pattern PIPE annot . sum_token [ SEMICOLON RAR LRAR EOF CL_PAR ]
rule_side -> pattern PIPE annot . error [ SEMICOLON RAR LRAR EOF CL_PAR ]
## Transitions:
-- On error shift to state 380
-- On TMAX shift to state 162
-- On TIME shift to state 163
-- On TAN shift to state 164
-- On SQRT shift to state 166
-- On SINUS shift to state 168
-- On PIPE shift to state 170
-- On OP_PAR shift to state 177
-- On NULL_EVENT shift to state 182
-- On MINUS shift to state 189
-- On MIN shift to state 191
-- On MAX shift to state 193
-- On LOG shift to state 195
-- On LABEL shift to state 197
-- On INT shift to state 198
-- On INFINITY shift to state 199
-- On ID shift to state 200
-- On FLOAT shift to state 201
-- On EXPONENT shift to state 202
-- On EVENT shift to state 204
-- On EMAX shift to state 205
-- On CPUTIME shift to state 206
-- On COSINUS shift to state 207
-- On ABS shift to state 209
-- On variable shift to state 211
-- On sum_token shift to state 381
-- On small_alg_expr shift to state 365
-- On nbr shift to state 213
-- On constant shift to state 214
## Reductions:

State 380:
## Known stack suffix:
## pattern PIPE annot error
## LR(1) items:
rule_side -> pattern PIPE annot error . [ SEMICOLON RAR LRAR EOF CL_PAR ]
## Transitions:
## Reductions:
-- On SEMICOLON reduce production rule_side -> pattern PIPE annot error
-- On RAR reduce production rule_side -> pattern PIPE annot error
-- On LRAR reduce production rule_side -> pattern PIPE annot error
-- On EOF reduce production rule_side -> pattern PIPE annot error
-- On CL_PAR reduce production rule_side -> pattern PIPE annot error

State 381:
## Known stack suffix:
## pattern PIPE annot sum_token
## LR(1) items:
rule_side -> pattern PIPE annot sum_token . [ SEMICOLON RAR LRAR EOF CL_PAR ]
## Transitions:
## Reductions:
-- On SEMICOLON reduce production rule_side -> pattern PIPE annot sum_token
-- On RAR reduce production rule_side -> pattern PIPE annot sum_token
-- On LRAR reduce production rule_side -> pattern PIPE annot sum_token
-- On EOF reduce production rule_side -> pattern PIPE annot sum_token
-- On CL_PAR reduce production rule_side -> pattern PIPE annot sum_token

State 382:
## Known stack suffix:
## APPLY annot alg_expr rule_content
## LR(1) items:
effect -> APPLY annot alg_expr rule_content . [ SEMICOLON EOF CL_PAR ]
## Transitions:
## Reductions:
-- On SEMICOLON reduce production effect -> APPLY annot alg_expr rule_content
-- On EOF reduce production effect -> APPLY annot alg_expr rule_content
-- On CL_PAR reduce production effect -> APPLY annot alg_expr rule_content

State 383:
## Known stack suffix:
## arrow
## LR(1) items:
rule_content -> arrow . annot rule_side [ SEMICOLON EOF CL_PAR ]
## Transitions:
-- On SPACE shift to state 2
-- On NEWLINE shift to state 3
-- On COMMENT shift to state 4
-- On annot shift to state 384
## Reductions:
-- On PIPE reduce production annot ->
-- On ID reduce production annot ->
-- On DOT reduce production annot ->

State 384:
## Known stack suffix:
## arrow annot
## LR(1) items:
rule_content -> arrow annot . rule_side [ SEMICOLON EOF CL_PAR ]
## Transitions:
-- On PIPE shift to state 361
-- On ID shift to state 18
-- On DOT shift to state 150
-- On rule_side shift to state 385
-- On pattern shift to state 377
-- On agent shift to state 155
## Reductions:

State 385:
## Known stack suffix:
## arrow annot rule_side
## LR(1) items:
rule_content -> arrow annot rule_side . [ SEMICOLON EOF CL_PAR ]
## Transitions:
## Reductions:
-- On SEMICOLON reduce production rule_content -> arrow annot rule_side
-- On EOF reduce production rule_content -> arrow annot rule_side
-- On CL_PAR reduce production rule_content -> arrow annot rule_side

State 386:
## Known stack suffix:
## annot effect
## LR(1) items:
interactive_command -> annot effect . SEMICOLON [ # ]
## Transitions:
-- On SEMICOLON shift to state 387
## Reductions:

State 387:
## Known stack suffix:
## annot effect SEMICOLON
## LR(1) items:
interactive_command -> annot effect SEMICOLON . [ # ]
## Transitions:
## Reductions:
-- On # reduce production interactive_command -> annot effect SEMICOLON

State 388:
## Known stack suffix:
##
## LR(1) items:
model' -> . model [ # ]
## Transitions:
-- On error shift to state 389
-- On SPACE shift to state 2
-- On NEWLINE shift to state 3
-- On COMMENT shift to state 4
-- On model shift to state 390
-- On annot shift to state 391
## Reductions:
-- On TOKEN reduce production annot ->
-- On SIGNATURE reduce production annot ->
-- On RAR reduce production annot ->
-- On PLOT reduce production annot ->
-- On PIPE reduce production annot ->
-- On PERT reduce production annot ->
-- On OBS reduce production annot ->
-- On LRAR reduce production annot ->
-- On LET reduce production annot ->
-- On LABEL reduce production annot ->
-- On INIT reduce production annot ->
-- On ID reduce production annot ->
-- On EOF reduce production annot ->
-- On DOT reduce production annot ->
-- On CONFIG reduce production annot ->

State 389:
## Known stack suffix:
## error
## LR(1) items:
model -> error . [ # ]
## Transitions:
## Reductions:
-- On # reduce production model -> error

State 390:
## Known stack suffix:
## model
## LR(1) items:
model' -> model . [ # ]
## Transitions:
## Reductions:
-- On # accept model

State 391:
## Known stack suffix:
## annot
## LR(1) items:
model -> annot . model_body [ # ]
## Transitions:
-- On TOKEN shift to state 392
-- On SIGNATURE shift to state 396
-- On RAR shift to state 360
-- On PLOT shift to state 400
-- On PIPE shift to state 404
-- On PERT shift to state 415
-- On OBS shift to state 448
-- On LRAR shift to state 372
-- On LET shift to state 460
-- On LABEL shift to state 463
-- On INIT shift to state 536
-- On ID shift to state 465
-- On EOF shift to state 555
-- On DOT shift to state 490
-- On CONFIG shift to state 556
-- On sentence shift to state 564
-- On rule_side shift to state 492
-- On rule_content shift to state 507
-- On rule shift to state 565
-- On pattern shift to state 498
-- On model_body shift to state 567
-- On arrow shift to state 533
-- On agent shift to state 503
## Reductions:

State 392:
## Known stack suffix:
## TOKEN
## LR(1) items:
sentence -> TOKEN . annot ID annot [ TOKEN SIGNATURE RAR PLOT PIPE PERT OBS LRAR LET LABEL INIT ID EOF DOT CONFIG ]
## Transitions:
-- On SPACE shift to state 2
-- On NEWLINE shift to state 3
-- On COMMENT shift to state 4
-- On annot shift to state 393
## Reductions:
-- On ID reduce production annot ->

State 393:
## Known stack suffix:
## TOKEN annot
## LR(1) items:
sentence -> TOKEN annot . ID annot [ TOKEN SIGNATURE RAR PLOT PIPE PERT OBS LRAR LET LABEL INIT ID EOF DOT CONFIG ]
## Transitions:
-- On ID shift to state 394
## Reductions:

State 394:
## Known stack suffix:
## TOKEN annot ID
## LR(1) items:
sentence -> TOKEN annot ID . annot [ TOKEN SIGNATURE RAR PLOT PIPE PERT OBS LRAR LET LABEL INIT ID EOF DOT CONFIG ]
## Transitions:
-- On SPACE shift to state 2
-- On NEWLINE shift to state 3
-- On COMMENT shift to state 4
-- On annot shift to state 395
## Reductions:
-- On TOKEN reduce production annot ->
-- On SIGNATURE reduce production annot ->
-- On RAR reduce production annot ->
-- On PLOT reduce production annot ->
-- On PIPE reduce production annot ->
-- On PERT reduce production annot ->
-- On OBS reduce production annot ->
-- On LRAR reduce production annot ->
-- On LET reduce production annot ->
-- On LABEL reduce production annot ->
-- On INIT reduce production annot ->
-- On ID reduce production annot ->
-- On EOF reduce production annot ->
-- On DOT reduce production annot ->
-- On CONFIG reduce production annot ->

State 395:
## Known stack suffix:
## TOKEN annot ID annot
## LR(1) items:
sentence -> TOKEN annot ID annot . [ TOKEN SIGNATURE RAR PLOT PIPE PERT OBS LRAR LET LABEL INIT ID EOF DOT CONFIG ]
## Transitions:
## Reductions:
-- On TOKEN reduce production sentence -> TOKEN annot ID annot
-- On SIGNATURE reduce production sentence -> TOKEN annot ID annot
-- On RAR reduce production sentence -> TOKEN annot ID annot
-- On PLOT reduce production sentence -> TOKEN annot ID annot
-- On PIPE reduce production sentence -> TOKEN annot ID annot
-- On PERT reduce production sentence -> TOKEN annot ID annot
-- On OBS reduce production sentence -> TOKEN annot ID annot
-- On LRAR reduce production sentence -> TOKEN annot ID annot
-- On LET reduce production sentence -> TOKEN annot ID annot
-- On LABEL reduce production sentence -> TOKEN annot ID annot
-- On INIT reduce production sentence -> TOKEN annot ID annot
-- On ID reduce production sentence -> TOKEN annot ID annot
-- On EOF reduce production sentence -> TOKEN annot ID annot
-- On DOT reduce production sentence -> TOKEN annot ID annot
-- On CONFIG reduce production sentence -> TOKEN annot ID annot

State 396:
## Known stack suffix:
## SIGNATURE
## LR(1) items:
sentence -> SIGNATURE . annot agent [ TOKEN SIGNATURE RAR PLOT PIPE PERT OBS LRAR LET LABEL INIT ID EOF DOT CONFIG ]
sentence -> SIGNATURE . annot error [ TOKEN SIGNATURE RAR PLOT PIPE PERT OBS LRAR LET LABEL INIT ID EOF DOT CONFIG ]
## Transitions:
-- On SPACE shift to state 19
-- On NEWLINE shift to state 20
-- On COMMENT shift to state 21
-- On annot shift to state 397
## Reductions:
-- On error reduce production annot ->
-- On ID reduce production annot ->
-- On DOT reduce production annot ->

State 397:
## Known stack suffix:
## SIGNATURE annot
## LR(1) items:
sentence -> SIGNATURE annot . agent [ TOKEN SIGNATURE RAR PLOT PIPE PERT OBS LRAR LET LABEL INIT ID EOF DOT CONFIG ]
sentence -> SIGNATURE annot . error [ TOKEN SIGNATURE RAR PLOT PIPE PERT OBS LRAR LET LABEL INIT ID EOF DOT CONFIG ]
## Transitions:
-- On error shift to state 398
-- On ID shift to state 18
-- On DOT shift to state 150
-- On agent shift to state 399
## Reductions:

State 398:
## Known stack suffix:
## SIGNATURE annot error
## LR(1) items:
sentence -> SIGNATURE annot error . [ TOKEN SIGNATURE RAR PLOT PIPE PERT OBS LRAR LET LABEL INIT ID EOF DOT CONFIG ]
## Transitions:
## Reductions:
-- On TOKEN reduce production sentence -> SIGNATURE annot error
-- On SIGNATURE reduce production sentence -> SIGNATURE annot error
-- On RAR reduce production sentence -> SIGNATURE annot error
-- On PLOT reduce production sentence -> SIGNATURE annot error
-- On PIPE reduce production sentence -> SIGNATURE annot error
-- On PERT reduce production sentence -> SIGNATURE annot error
-- On OBS reduce production sentence -> SIGNATURE annot error
-- On LRAR reduce production sentence -> SIGNATURE annot error
-- On LET reduce production sentence -> SIGNATURE annot error
-- On LABEL reduce production sentence -> SIGNATURE annot error
-- On INIT reduce production sentence -> SIGNATURE annot error
-- On ID reduce production sentence -> SIGNATURE annot error
-- On EOF reduce production sentence -> SIGNATURE annot error
-- On DOT reduce production sentence -> SIGNATURE annot error
-- On CONFIG reduce production sentence -> SIGNATURE annot error

State 399:
## Known stack suffix:
## SIGNATURE annot agent
## LR(1) items:
sentence -> SIGNATURE annot agent . [ TOKEN SIGNATURE RAR PLOT PIPE PERT OBS LRAR LET LABEL INIT ID EOF DOT CONFIG ]
## Transitions:
## Reductions:
-- On TOKEN reduce production sentence -> SIGNATURE annot agent
-- On SIGNATURE reduce production sentence -> SIGNATURE annot agent
-- On RAR reduce production sentence -> SIGNATURE annot agent
-- On PLOT reduce production sentence -> SIGNATURE annot agent
-- On PIPE reduce production sentence -> SIGNATURE annot agent
-- On PERT reduce production sentence -> SIGNATURE annot agent
-- On OBS reduce production sentence -> SIGNATURE annot agent
-- On LRAR reduce production sentence -> SIGNATURE annot agent
-- On LET reduce production sentence -> SIGNATURE annot agent
-- On LABEL reduce production sentence -> SIGNATURE annot agent
-- On INIT reduce production sentence -> SIGNATURE annot agent
-- On ID reduce production sentence -> SIGNATURE annot agent
-- On EOF reduce production sentence -> SIGNATURE annot agent
-- On DOT reduce production sentence -> SIGNATURE annot agent
-- On CONFIG reduce production sentence -> SIGNATURE annot agent

State 400:
## Known stack suffix:
## PLOT
## LR(1) items:
sentence -> PLOT . annot alg_expr [ TOKEN SIGNATURE RAR PLOT PIPE PERT OBS LRAR LET LABEL INIT ID EOF DOT CONFIG ]
sentence -> PLOT . annot error [ TOKEN SIGNATURE RAR PLOT PIPE PERT OBS LRAR LET LABEL INIT ID EOF DOT CONFIG ]
## Transitions:
-- On SPACE shift to state 19
-- On NEWLINE shift to state 20
-- On COMMENT shift to state 21
-- On annot shift to state 401
## Reductions:
-- On error reduce production annot ->
-- On TRUE reduce production annot ->
-- On TMAX reduce production annot ->
-- On TIME reduce production annot ->
-- On TAN reduce production annot ->
-- On SQRT reduce production annot ->
-- On SINUS reduce production annot ->
-- On PIPE reduce production annot ->
-- On OP_PAR reduce production annot ->
-- On NULL_EVENT reduce production annot ->
-- On NOT reduce production annot ->
-- On MINUS reduce production annot ->
-- On MIN reduce production annot ->
-- On MAX reduce production annot ->
-- On LOG reduce production annot ->
-- On LABEL reduce production annot ->
-- On INT reduce production annot ->
-- On INFINITY reduce production annot ->
-- On ID reduce production annot ->
-- On FLOAT reduce production annot ->
-- On FALSE reduce production annot ->
-- On EXPONENT reduce production annot ->
-- On EVENT reduce production annot ->
-- On EMAX reduce production annot ->
-- On CPUTIME reduce production annot ->
-- On COSINUS reduce production annot ->
-- On ABS reduce production annot ->

State 401:
## Known stack suffix:
## PLOT annot
## LR(1) items:
sentence -> PLOT annot . alg_expr [ TOKEN SIGNATURE RAR PLOT PIPE PERT OBS LRAR LET LABEL INIT ID EOF DOT CONFIG ]
sentence -> PLOT annot . error [ TOKEN SIGNATURE RAR PLOT PIPE PERT OBS LRAR LET LABEL INIT ID EOF DOT CONFIG ]
## Transitions:
-- On error shift to state 402
-- On TRUE shift to state 179
-- On TMAX shift to state 162
-- On TIME shift to state 163
-- On TAN shift to state 164
-- On SQRT shift to state 166
-- On SINUS shift to state 168
-- On PIPE shift to state 170
-- On OP_PAR shift to state 180
-- On NULL_EVENT shift to state 182
-- On NOT shift to state 183
-- On MINUS shift to state 189
-- On MIN shift to state 191
-- On MAX shift to state 193
-- On LOG shift to state 195
-- On LABEL shift to state 197
-- On INT shift to state 198
-- On INFINITY shift to state 199
-- On ID shift to state 200
-- On FLOAT shift to state 201
-- On FALSE shift to state 225
-- On EXPONENT shift to state 202
-- On EVENT shift to state 204
-- On EMAX shift to state 205
-- On CPUTIME shift to state 206
-- On COSINUS shift to state 207
-- On ABS shift to state 209
-- On variable shift to state 211
-- On small_bool_expr shift to state 226
-- On small_alg_expr shift to state 228
-- On nbr shift to state 213
-- On constant shift to state 214
-- On bool_expr_no_or shift to state 233
-- On bool_expr_comp shift to state 236
-- On bool_expr shift to state 255
-- On alg_expr_up_to_sum shift to state 240
-- On alg_expr_up_to_prod shift to state 251
-- On alg_expr_up_to_mod shift to state 247
-- On alg_expr_up_to_if shift to state 258
-- On alg_expr shift to state 403
## Reductions:

State 402:
## Known stack suffix:
## PLOT annot error
## LR(1) items:
sentence -> PLOT annot error . [ TOKEN SIGNATURE RAR PLOT PIPE PERT OBS LRAR LET LABEL INIT ID EOF DOT CONFIG ]
## Transitions:
## Reductions:
-- On TOKEN reduce production sentence -> PLOT annot error
-- On SIGNATURE reduce production sentence -> PLOT annot error
-- On RAR reduce production sentence -> PLOT annot error
-- On PLOT reduce production sentence -> PLOT annot error
-- On PIPE reduce production sentence -> PLOT annot error
-- On PERT reduce production sentence -> PLOT annot error
-- On OBS reduce production sentence -> PLOT annot error
-- On LRAR reduce production sentence -> PLOT annot error
-- On LET reduce production sentence -> PLOT annot error
-- On LABEL reduce production sentence -> PLOT annot error
-- On INIT reduce production sentence -> PLOT annot error
-- On ID reduce production sentence -> PLOT annot error
-- On EOF reduce production sentence -> PLOT annot error
-- On DOT reduce production sentence -> PLOT annot error
-- On CONFIG reduce production sentence -> PLOT annot error

State 403:
## Known stack suffix:
## PLOT annot alg_expr
## LR(1) items:
sentence -> PLOT annot alg_expr . [ TOKEN SIGNATURE RAR PLOT PIPE PERT OBS LRAR LET LABEL INIT ID EOF DOT CONFIG ]
## Transitions:
## Reductions:
-- On TOKEN reduce production sentence -> PLOT annot alg_expr
-- On SIGNATURE reduce production sentence -> PLOT annot alg_expr
-- On RAR reduce production sentence -> PLOT annot alg_expr
-- On PLOT reduce production sentence -> PLOT annot alg_expr
-- On PIPE reduce production sentence -> PLOT annot alg_expr
-- On PERT reduce production sentence -> PLOT annot alg_expr
-- On OBS reduce production sentence -> PLOT annot alg_expr
-- On LRAR reduce production sentence -> PLOT annot alg_expr
-- On LET reduce production sentence -> PLOT annot alg_expr
-- On LABEL reduce production sentence -> PLOT annot alg_expr
-- On INIT reduce production sentence -> PLOT annot alg_expr
-- On ID reduce production sentence -> PLOT annot alg_expr
-- On EOF reduce production sentence -> PLOT annot alg_expr
-- On DOT reduce production sentence -> PLOT annot alg_expr
-- On CONFIG reduce production sentence -> PLOT annot alg_expr

State 404:
## Known stack suffix:
## PIPE
## LR(1) items:
rule_side -> PIPE . annot sum_token [ error RAR LRAR AT ]
rule_side -> PIPE . annot error [ error RAR LRAR AT ]
## Transitions:
-- On SPACE shift to state 19
-- On NEWLINE shift to state 20
-- On COMMENT shift to state 21
-- On annot shift to state 405
## Reductions:
-- On error reduce production annot ->
-- On TMAX reduce production annot ->
-- On TIME reduce production annot ->
-- On TAN reduce production annot ->
-- On SQRT reduce production annot ->
-- On SINUS reduce production annot ->
-- On PIPE reduce production annot ->
-- On OP_PAR reduce production annot ->
-- On NULL_EVENT reduce production annot ->
-- On MINUS reduce production annot ->
-- On MIN reduce production annot ->
-- On MAX reduce production annot ->
-- On LOG reduce production annot ->
-- On LABEL reduce production annot ->
-- On INT reduce production annot ->
-- On INFINITY reduce production annot ->
-- On ID reduce production annot ->
-- On FLOAT reduce production annot ->
-- On EXPONENT reduce production annot ->
-- On EVENT reduce production annot ->
-- On EMAX reduce production annot ->
-- On CPUTIME reduce production annot ->
-- On COSINUS reduce production annot ->
-- On ABS reduce production annot ->

State 405:
## Known stack suffix:
## PIPE annot
## LR(1) items:
rule_side -> PIPE annot . sum_token [ error RAR LRAR AT ]
rule_side -> PIPE annot . error [ error RAR LRAR AT ]
## Transitions:
-- On error shift to state 406
-- On TMAX shift to state 162
-- On TIME shift to state 163
-- On TAN shift to state 164
-- On SQRT shift to state 166
-- On SINUS shift to state 168
-- On PIPE shift to state 170
-- On OP_PAR shift to state 177
-- On NULL_EVENT shift to state 182
-- On MINUS shift to state 189
-- On MIN shift to state 191
-- On MAX shift to state 193
-- On LOG shift to state 195
-- On LABEL shift to state 197
-- On INT shift to state 198
-- On INFINITY shift to state 199
-- On ID shift to state 200
-- On FLOAT shift to state 201
-- On EXPONENT shift to state 202
-- On EVENT shift to state 204
-- On EMAX shift to state 205
-- On CPUTIME shift to state 206
-- On COSINUS shift to state 207
-- On ABS shift to state 209
-- On variable shift to state 211
-- On sum_token shift to state 407
-- On small_alg_expr shift to state 408
-- On nbr shift to state 213
-- On constant shift to state 214
## Reductions:

State 406:
## Known stack suffix:
## PIPE annot error
## LR(1) items:
rule_side -> PIPE annot error . [ error RAR LRAR AT ]
## Transitions:
## Reductions:
-- On error reduce production rule_side -> PIPE annot error
-- On RAR reduce production rule_side -> PIPE annot error
-- On LRAR reduce production rule_side -> PIPE annot error
-- On AT reduce production rule_side -> PIPE annot error

State 407:
## Known stack suffix:
## PIPE annot sum_token
## LR(1) items:
rule_side -> PIPE annot sum_token . [ error RAR LRAR AT ]
## Transitions:
## Reductions:
-- On error reduce production rule_side -> PIPE annot sum_token
-- On RAR reduce production rule_side -> PIPE annot sum_token
-- On LRAR reduce production rule_side -> PIPE annot sum_token
-- On AT reduce production rule_side -> PIPE annot sum_token

State 408:
## Known stack suffix:
## small_alg_expr
## LR(1) items:
sum_token -> small_alg_expr . annot ID annot [ error RAR LRAR AT ]
sum_token -> small_alg_expr . annot ID annot COMMA annot sum_token [ error RAR LRAR AT ]
## Transitions:
-- On SPACE shift to state 2
-- On NEWLINE shift to state 3
-- On COMMENT shift to state 4
-- On annot shift to state 409
## Reductions:
-- On ID reduce production annot ->

State 409:
## Known stack suffix:
## small_alg_expr annot
## LR(1) items:
sum_token -> small_alg_expr annot . ID annot [ error RAR LRAR AT ]
sum_token -> small_alg_expr annot . ID annot COMMA annot sum_token [ error RAR LRAR AT ]
## Transitions:
-- On ID shift to state 410
## Reductions:

State 410:
## Known stack suffix:
## small_alg_expr annot ID
## LR(1) items:
sum_token -> small_alg_expr annot ID . annot [ error RAR LRAR AT ]
sum_token -> small_alg_expr annot ID . annot COMMA annot sum_token [ error RAR LRAR AT ]
## Transitions:
-- On SPACE shift to state 19
-- On NEWLINE shift to state 20
-- On COMMENT shift to state 21
-- On annot shift to state 411
## Reductions:
-- On error reduce production annot ->
-- On RAR reduce production annot ->
-- On LRAR reduce production annot ->
-- On COMMA reduce production annot ->
-- On AT reduce production annot ->

State 411:
## Known stack suffix:
## small_alg_expr annot ID annot
## LR(1) items:
sum_token -> small_alg_expr annot ID annot . [ error RAR LRAR AT ]
sum_token -> small_alg_expr annot ID annot . COMMA annot sum_token [ error RAR LRAR AT ]
## Transitions:
-- On COMMA shift to state 412
## Reductions:
-- On error reduce production sum_token -> small_alg_expr annot ID annot
-- On RAR reduce production sum_token -> small_alg_expr annot ID annot
-- On LRAR reduce production sum_token -> small_alg_expr annot ID annot
-- On AT reduce production sum_token -> small_alg_expr annot ID annot

State 412:
## Known stack suffix:
## small_alg_expr annot ID annot COMMA
## LR(1) items:
sum_token -> small_alg_expr annot ID annot COMMA . annot sum_token [ error RAR LRAR AT ]
## Transitions:
-- On SPACE shift to state 2
-- On NEWLINE shift to state 3
-- On COMMENT shift to state 4
-- On annot shift to state 413
## Reductions:
-- On TMAX reduce production annot ->
-- On TIME reduce production annot ->
-- On TAN reduce production annot ->
-- On SQRT reduce production annot ->
-- On SINUS reduce production annot ->
-- On PIPE reduce production annot ->
-- On OP_PAR reduce production annot ->
-- On NULL_EVENT reduce production annot ->
-- On MINUS reduce production annot ->
-- On MIN reduce production annot ->
-- On MAX reduce production annot ->
-- On LOG reduce production annot ->
-- On LABEL reduce production annot ->
-- On INT reduce production annot ->
-- On INFINITY reduce production annot ->
-- On ID reduce production annot ->
-- On FLOAT reduce production annot ->
-- On EXPONENT reduce production annot ->
-- On EVENT reduce production annot ->
-- On EMAX reduce production annot ->
-- On CPUTIME reduce production annot ->
-- On COSINUS reduce production annot ->
-- On ABS reduce production annot ->

State 413:
## Known stack suffix:
## small_alg_expr annot ID annot COMMA annot
## LR(1) items:
sum_token -> small_alg_expr annot ID annot COMMA annot . sum_token [ error RAR LRAR AT ]
## Transitions:
-- On TMAX shift to state 162
-- On TIME shift to state 163
-- On TAN shift to state 164
-- On SQRT shift to state 166
-- On SINUS shift to state 168
-- On PIPE shift to state 170
-- On OP_PAR shift to state 177
-- On NULL_EVENT shift to state 182
-- On MINUS shift to state 189
-- On MIN shift to state 191
-- On MAX shift to state 193
-- On LOG shift to state 195
-- On LABEL shift to state 197
-- On INT shift to state 198
-- On INFINITY shift to state 199
-- On ID shift to state 200
-- On FLOAT shift to state 201
-- On EXPONENT shift to state 202
-- On EVENT shift to state 204
-- On EMAX shift to state 205
-- On CPUTIME shift to state 206
-- On COSINUS shift to state 207
-- On ABS shift to state 209
-- On variable shift to state 211
-- On sum_token shift to state 414
-- On small_alg_expr shift to state 408
-- On nbr shift to state 213
-- On constant shift to state 214
## Reductions:

State 414:
## Known stack suffix:
## small_alg_expr annot ID annot COMMA annot sum_token
## LR(1) items:
sum_token -> small_alg_expr annot ID annot COMMA annot sum_token . [ error RAR LRAR AT ]
## Transitions:
## Reductions:
-- On error reduce production sum_token -> small_alg_expr annot ID annot COMMA annot sum_token
-- On RAR reduce production sum_token -> small_alg_expr annot ID annot COMMA annot sum_token
-- On LRAR reduce production sum_token -> small_alg_expr annot ID annot COMMA annot sum_token
-- On AT reduce production sum_token -> small_alg_expr annot ID annot COMMA annot sum_token

State 415:
## Known stack suffix:
## PERT
## LR(1) items:
sentence -> PERT . perturbation_declaration [ TOKEN SIGNATURE RAR PLOT PIPE PERT OBS LRAR LET LABEL INIT ID EOF DOT CONFIG ]
## Transitions:
-- On SPACE shift to state 2
-- On NEWLINE shift to state 3
-- On COMMENT shift to state 4
-- On perturbation_declaration shift to state 416
-- On perturbation_alarm shift to state 417
-- On annot shift to state 443
## Reductions:
-- On TRUE reduce production annot ->
-- On TMAX reduce production annot ->
-- On TIME reduce production annot ->
-- On TAN reduce production annot ->
-- On SQRT reduce production annot ->
-- On SINUS reduce production annot ->
-- On PIPE reduce production annot ->
-- On OP_PAR reduce production annot ->
-- On NULL_EVENT reduce production annot ->
-- On NOT reduce production annot ->
-- On MINUS reduce production annot ->
-- On MIN reduce production annot ->
-- On MAX reduce production annot ->
-- On LOG reduce production annot ->
-- On LABEL reduce production annot ->
-- On INT reduce production annot ->
-- On INFINITY reduce production annot ->
-- On ID reduce production annot ->
-- On FLOAT reduce production annot ->
-- On FALSE reduce production annot ->
-- On EXPONENT reduce production annot ->
-- On EVENT reduce production annot ->
-- On EMAX reduce production annot ->
-- On DO reduce production annot ->
-- On CPUTIME reduce production annot ->
-- On COSINUS reduce production annot ->
-- On ALARM reduce production annot ->
-- On ABS reduce production annot ->

State 416:
## Known stack suffix:
## PERT perturbation_declaration
## LR(1) items:
sentence -> PERT perturbation_declaration . [ TOKEN SIGNATURE RAR PLOT PIPE PERT OBS LRAR LET LABEL INIT ID EOF DOT CONFIG ]
## Transitions:
## Reductions:
-- On TOKEN reduce production sentence -> PERT perturbation_declaration
-- On SIGNATURE reduce production sentence -> PERT perturbation_declaration
-- On RAR reduce production sentence -> PERT perturbation_declaration
-- On PLOT reduce production sentence -> PERT perturbation_declaration
-- On PIPE reduce production sentence -> PERT perturbation_declaration
-- On PERT reduce production sentence -> PERT perturbation_declaration
-- On OBS reduce production sentence -> PERT perturbation_declaration
-- On LRAR reduce production sentence -> PERT perturbation_declaration
-- On LET reduce production sentence -> PERT perturbation_declaration
-- On LABEL reduce production sentence -> PERT perturbation_declaration
-- On INIT reduce production sentence -> PERT perturbation_declaration
-- On ID reduce production sentence -> PERT perturbation_declaration
-- On EOF reduce production sentence -> PERT perturbation_declaration
-- On DOT reduce production sentence -> PERT perturbation_declaration
-- On CONFIG reduce production sentence -> PERT perturbation_declaration

State 417:
## Known stack suffix:
## perturbation_alarm
## LR(1) items:
perturbation_declaration -> perturbation_alarm . bool_expr DO annot effect_list perturbation_post [ TOKEN SIGNATURE RAR PLOT PIPE PERT OBS LRAR LET LABEL INIT ID EOF DOT CONFIG ]
perturbation_declaration -> perturbation_alarm . DO annot effect_list perturbation_post [ TOKEN SIGNATURE RAR PLOT PIPE PERT OBS LRAR LET LABEL INIT ID EOF DOT CONFIG ]
## Transitions:
-- On TRUE shift to state 179
-- On TMAX shift to state 162
-- On TIME shift to state 163
-- On TAN shift to state 164
-- On SQRT shift to state 166
-- On SINUS shift to state 168
-- On PIPE shift to state 170
-- On OP_PAR shift to state 187
-- On NULL_EVENT shift to state 182
-- On NOT shift to state 183
-- On MINUS shift to state 189
-- On MIN shift to state 191
-- On MAX shift to state 193
-- On LOG shift to state 195
-- On LABEL shift to state 197
-- On INT shift to state 198
-- On INFINITY shift to state 199
-- On ID shift to state 200
-- On FLOAT shift to state 201
-- On FALSE shift to state 225
-- On EXPONENT shift to state 202
-- On EVENT shift to state 204
-- On EMAX shift to state 205
-- On DO shift to state 418
-- On CPUTIME shift to state 206
-- On COSINUS shift to state 207
-- On ABS shift to state 209
-- On variable shift to state 211
-- On small_bool_expr shift to state 226
-- On small_alg_expr shift to state 228
-- On nbr shift to state 213
-- On constant shift to state 214
-- On bool_expr_no_or shift to state 233
-- On bool_expr_comp shift to state 236
-- On bool_expr shift to state 438
-- On alg_expr_up_to_sum shift to state 240
-- On alg_expr_up_to_prod shift to state 251
-- On alg_expr_up_to_mod shift to state 247
-- On alg_expr_up_to_if shift to state 252
## Reductions:

State 418:
## Known stack suffix:
## perturbation_alarm DO
## LR(1) items:
perturbation_declaration -> perturbation_alarm DO . annot effect_list perturbation_post [ TOKEN SIGNATURE RAR PLOT PIPE PERT OBS LRAR LET LABEL INIT ID EOF DOT CONFIG ]
## Transitions:
-- On SPACE shift to state 2
-- On NEWLINE shift to state 3
-- On COMMENT shift to state 4
-- On annot shift to state 419
## Reductions:
-- On TRACK reduce production annot ->
-- On STOP reduce production annot ->
-- On SPECIES_OF reduce production annot ->
-- On SNAPSHOT reduce production annot ->
-- On PRINTF reduce production annot ->
-- On PLOTENTRY reduce production annot ->
-- On OP_PAR reduce production annot ->
-- On INTRO reduce production annot ->
-- On FLUX reduce production annot ->
-- On DELETE reduce production annot ->
-- On ASSIGN reduce production annot ->
-- On APPLY reduce production annot ->

State 419:
## Known stack suffix:
## perturbation_alarm DO annot
## LR(1) items:
perturbation_declaration -> perturbation_alarm DO annot . effect_list perturbation_post [ TOKEN SIGNATURE RAR PLOT PIPE PERT OBS LRAR LET LABEL INIT ID EOF DOT CONFIG ]
## Transitions:
-- On TRACK shift to state 10
-- On STOP shift to state 159
-- On SPECIES_OF shift to state 309
-- On SNAPSHOT shift to state 316
-- On PRINTF shift to state 323
-- On PLOTENTRY shift to state 327
-- On OP_PAR shift to state 420
-- On INTRO shift to state 329
-- On FLUX shift to state 334
-- On DELETE shift to state 344
-- On ASSIGN shift to state 349
-- On APPLY shift to state 357
-- On effect_list shift to state 429
-- On effect shift to state 434
## Reductions:

State 420:
## Known stack suffix:
## OP_PAR
## LR(1) items:
effect_list -> OP_PAR . annot partial_effect_list CL_PAR annot [ TOKEN SIGNATURE REPEAT RAR PLOT PIPE PERT OBS LRAR LET LABEL INIT ID EOF DOT CONFIG ]
## Transitions:
-- On SPACE shift to state 2
-- On NEWLINE shift to state 3
-- On COMMENT shift to state 4
-- On annot shift to state 421
## Reductions:
-- On TRACK reduce production annot ->
-- On STOP reduce production annot ->
-- On SPECIES_OF reduce production annot ->
-- On SNAPSHOT reduce production annot ->
-- On PRINTF reduce production annot ->
-- On PLOTENTRY reduce production annot ->
-- On INTRO reduce production annot ->
-- On FLUX reduce production annot ->
-- On DELETE reduce production annot ->
-- On ASSIGN reduce production annot ->
-- On APPLY reduce production annot ->

State 421:
## Known stack suffix:
## OP_PAR annot
## LR(1) items:
effect_list -> OP_PAR annot . partial_effect_list CL_PAR annot [ TOKEN SIGNATURE REPEAT RAR PLOT PIPE PERT OBS LRAR LET LABEL INIT ID EOF DOT CONFIG ]
## Transitions:
-- On TRACK shift to state 10
-- On STOP shift to state 159
-- On SPECIES_OF shift to state 309
-- On SNAPSHOT shift to state 316
-- On PRINTF shift to state 323
-- On PLOTENTRY shift to state 327
-- On INTRO shift to state 329
-- On FLUX shift to state 334
-- On DELETE shift to state 344
-- On ASSIGN shift to state 349
-- On APPLY shift to state 357
-- On partial_effect_list shift to state 422
-- On effect shift to state 425
## Reductions:

State 422:
## Known stack suffix:
## OP_PAR annot partial_effect_list
## LR(1) items:
effect_list -> OP_PAR annot partial_effect_list . CL_PAR annot [ TOKEN SIGNATURE REPEAT RAR PLOT PIPE PERT OBS LRAR LET LABEL INIT ID EOF DOT CONFIG ]
## Transitions:
-- On CL_PAR shift to state 423
## Reductions:

State 423:
## Known stack suffix:
## OP_PAR annot partial_effect_list CL_PAR
## LR(1) items:
effect_list -> OP_PAR annot partial_effect_list CL_PAR . annot [ TOKEN SIGNATURE REPEAT RAR PLOT PIPE PERT OBS LRAR LET LABEL INIT ID EOF DOT CONFIG ]
## Transitions:
-- On SPACE shift to state 2
-- On NEWLINE shift to state 3
-- On COMMENT shift to state 4
-- On annot shift to state 424
## Reductions:
-- On TOKEN reduce production annot ->
-- On SIGNATURE reduce production annot ->
-- On REPEAT reduce production annot ->
-- On RAR reduce production annot ->
-- On PLOT reduce production annot ->
-- On PIPE reduce production annot ->
-- On PERT reduce production annot ->
-- On OBS reduce production annot ->
-- On LRAR reduce production annot ->
-- On LET reduce production annot ->
-- On LABEL reduce production annot ->
-- On INIT reduce production annot ->
-- On ID reduce production annot ->
-- On EOF reduce production annot ->
-- On DOT reduce production annot ->
-- On CONFIG reduce production annot ->

State 424:
## Known stack suffix:
## OP_PAR annot partial_effect_list CL_PAR annot
## LR(1) items:
effect_list -> OP_PAR annot partial_effect_list CL_PAR annot . [ TOKEN SIGNATURE REPEAT RAR PLOT PIPE PERT OBS LRAR LET LABEL INIT ID EOF DOT CONFIG ]
## Transitions:
## Reductions:
-- On TOKEN reduce production effect_list -> OP_PAR annot partial_effect_list CL_PAR annot
-- On SIGNATURE reduce production effect_list -> OP_PAR annot partial_effect_list CL_PAR annot
-- On REPEAT reduce production effect_list -> OP_PAR annot partial_effect_list CL_PAR annot
-- On RAR reduce production effect_list -> OP_PAR annot partial_effect_list CL_PAR annot
-- On PLOT reduce production effect_list -> OP_PAR annot partial_effect_list CL_PAR annot
-- On PIPE reduce production effect_list -> OP_PAR annot partial_effect_list CL_PAR annot
-- On PERT reduce production effect_list -> OP_PAR annot partial_effect_list CL_PAR annot
-- On OBS reduce production effect_list -> OP_PAR annot partial_effect_list CL_PAR annot
-- On LRAR reduce production effect_list -> OP_PAR annot partial_effect_list CL_PAR annot
-- On LET reduce production effect_list -> OP_PAR annot partial_effect_list CL_PAR annot
-- On LABEL reduce production effect_list -> OP_PAR annot partial_effect_list CL_PAR annot
-- On INIT reduce production effect_list -> OP_PAR annot partial_effect_list CL_PAR annot
-- On ID reduce production effect_list -> OP_PAR annot partial_effect_list CL_PAR annot
-- On EOF reduce production effect_list -> OP_PAR annot partial_effect_list CL_PAR annot
-- On DOT reduce production effect_list -> OP_PAR annot partial_effect_list CL_PAR annot
-- On CONFIG reduce production effect_list -> OP_PAR annot partial_effect_list CL_PAR annot

State 425:
## Known stack suffix:
## effect
## LR(1) items:
partial_effect_list -> effect . SEMICOLON annot [ EOF CL_PAR ]
partial_effect_list -> effect . [ EOF CL_PAR ]
partial_effect_list -> effect . SEMICOLON annot partial_effect_list [ EOF CL_PAR ]
## Transitions:
-- On SEMICOLON shift to state 426
## Reductions:
-- On EOF reduce production partial_effect_list -> effect
-- On CL_PAR reduce production partial_effect_list -> effect

State 426:
## Known stack suffix:
## effect SEMICOLON
## LR(1) items:
partial_effect_list -> effect SEMICOLON . annot [ EOF CL_PAR ]
partial_effect_list -> effect SEMICOLON . annot partial_effect_list [ EOF CL_PAR ]
## Transitions:
-- On SPACE shift to state 2
-- On NEWLINE shift to state 3
-- On COMMENT shift to state 4
-- On annot shift to state 427
## Reductions:
-- On TRACK reduce production annot ->
-- On STOP reduce production annot ->
-- On SPECIES_OF reduce production annot ->
-- On SNAPSHOT reduce production annot ->
-- On PRINTF reduce production annot ->
-- On PLOTENTRY reduce production annot ->
-- On INTRO reduce production annot ->
-- On FLUX reduce production annot ->
-- On EOF reduce production annot ->
-- On DELETE reduce production annot ->
-- On CL_PAR reduce production annot ->
-- On ASSIGN reduce production annot ->
-- On APPLY reduce production annot ->

State 427:
## Known stack suffix:
## effect SEMICOLON annot
## LR(1) items:
partial_effect_list -> effect SEMICOLON annot . [ EOF CL_PAR ]
partial_effect_list -> effect SEMICOLON annot . partial_effect_list [ EOF CL_PAR ]
## Transitions:
-- On TRACK shift to state 10
-- On STOP shift to state 159
-- On SPECIES_OF shift to state 309
-- On SNAPSHOT shift to state 316
-- On PRINTF shift to state 323
-- On PLOTENTRY shift to state 327
-- On INTRO shift to state 329
-- On FLUX shift to state 334
-- On DELETE shift to state 344
-- On ASSIGN shift to state 349
-- On APPLY shift to state 357
-- On partial_effect_list shift to state 428
-- On effect shift to state 425
## Reductions:
-- On EOF reduce production partial_effect_list -> effect SEMICOLON annot
-- On CL_PAR reduce production partial_effect_list -> effect SEMICOLON annot

State 428:
## Known stack suffix:
## effect SEMICOLON annot partial_effect_list
## LR(1) items:
partial_effect_list -> effect SEMICOLON annot partial_effect_list . [ EOF CL_PAR ]
## Transitions:
## Reductions:
-- On EOF reduce production partial_effect_list -> effect SEMICOLON annot partial_effect_list
-- On CL_PAR reduce production partial_effect_list -> effect SEMICOLON annot partial_effect_list

State 429:
## Known stack suffix:
## perturbation_alarm DO annot effect_list
## LR(1) items:
perturbation_declaration -> perturbation_alarm DO annot effect_list . perturbation_post [ TOKEN SIGNATURE RAR PLOT PIPE PERT OBS LRAR LET LABEL INIT ID EOF DOT CONFIG ]
## Transitions:
-- On REPEAT shift to state 430
-- On perturbation_post shift to state 433
## Reductions:
-- On TOKEN reduce production perturbation_post ->
-- On SIGNATURE reduce production perturbation_post ->
-- On RAR reduce production perturbation_post ->
-- On PLOT reduce production perturbation_post ->
-- On PIPE reduce production perturbation_post ->
-- On PERT reduce production perturbation_post ->
-- On OBS reduce production perturbation_post ->
-- On LRAR reduce production perturbation_post ->
-- On LET reduce production perturbation_post ->
-- On LABEL reduce production perturbation_post ->
-- On INIT reduce production perturbation_post ->
-- On ID reduce production perturbation_post ->
-- On EOF reduce production perturbation_post ->
-- On DOT reduce production perturbation_post ->
-- On CONFIG reduce production perturbation_post ->

State 430:
## Known stack suffix:
## REPEAT
## LR(1) items:
perturbation_post -> REPEAT . annot bool_expr [ TOKEN SIGNATURE RAR PLOT PIPE PERT OBS LRAR LET LABEL INIT ID EOF DOT CONFIG ]
## Transitions:
-- On SPACE shift to state 2
-- On NEWLINE shift to state 3
-- On COMMENT shift to state 4
-- On annot shift to state 431
## Reductions:
-- On TRUE reduce production annot ->
-- On TMAX reduce production annot ->
-- On TIME reduce production annot ->
-- On TAN reduce production annot ->
-- On SQRT reduce production annot ->
-- On SINUS reduce production annot ->
-- On PIPE reduce production annot ->
-- On OP_PAR reduce production annot ->
-- On NULL_EVENT reduce production annot ->
-- On NOT reduce production annot ->
-- On MINUS reduce production annot ->
-- On MIN reduce production annot ->
-- On MAX reduce production annot ->
-- On LOG reduce production annot ->
-- On LABEL reduce production annot ->
-- On INT reduce production annot ->
-- On INFINITY reduce production annot ->
-- On ID reduce production annot ->
-- On FLOAT reduce production annot ->
-- On FALSE reduce production annot ->
-- On EXPONENT reduce production annot ->
-- On EVENT reduce production annot ->
-- On EMAX reduce production annot ->
-- On CPUTIME reduce production annot ->
-- On COSINUS reduce production annot ->
-- On ABS reduce production annot ->

State 431:
## Known stack suffix:
## REPEAT annot
## LR(1) items:
perturbation_post -> REPEAT annot . bool_expr [ TOKEN SIGNATURE RAR PLOT PIPE PERT OBS LRAR LET LABEL INIT ID EOF DOT CONFIG ]
## Transitions:
-- On TRUE shift to state 179
-- On TMAX shift to state 162
-- On TIME shift to state 163
-- On TAN shift to state 164
-- On SQRT shift to state 166
-- On SINUS shift to state 168
-- On PIPE shift to state 170
-- On OP_PAR shift to state 187
-- On NULL_EVENT shift to state 182
-- On NOT shift to state 183
-- On MINUS shift to state 189
-- On MIN shift to state 191
-- On MAX shift to state 193
-- On LOG shift to state 195
-- On LABEL shift to state 197
-- On INT shift to state 198
-- On INFINITY shift to state 199
-- On ID shift to state 200
-- On FLOAT shift to state 201
-- On FALSE shift to state 225
-- On EXPONENT shift to state 202
-- On EVENT shift to state 204
-- On EMAX shift to state 205
-- On CPUTIME shift to state 206
-- On COSINUS shift to state 207
-- On ABS shift to state 209
-- On variable shift to state 211
-- On small_bool_expr shift to state 226
-- On small_alg_expr shift to state 228
-- On nbr shift to state 213
-- On constant shift to state 214
-- On bool_expr_no_or shift to state 233
-- On bool_expr_comp shift to state 236
-- On bool_expr shift to state 432
-- On alg_expr_up_to_sum shift to state 240
-- On alg_expr_up_to_prod shift to state 251
-- On alg_expr_up_to_mod shift to state 247
-- On alg_expr_up_to_if shift to state 252
## Reductions:

State 432:
## Known stack suffix:
## REPEAT annot bool_expr
## LR(1) items:
perturbation_post -> REPEAT annot bool_expr . [ TOKEN SIGNATURE RAR PLOT PIPE PERT OBS LRAR LET LABEL INIT ID EOF DOT CONFIG ]
## Transitions:
## Reductions:
-- On TOKEN reduce production perturbation_post -> REPEAT annot bool_expr
-- On SIGNATURE reduce production perturbation_post -> REPEAT annot bool_expr
-- On RAR reduce production perturbation_post -> REPEAT annot bool_expr
-- On PLOT reduce production perturbation_post -> REPEAT annot bool_expr
-- On PIPE reduce production perturbation_post -> REPEAT annot bool_expr
-- On PERT reduce production perturbation_post -> REPEAT annot bool_expr
-- On OBS reduce production perturbation_post -> REPEAT annot bool_expr
-- On LRAR reduce production perturbation_post -> REPEAT annot bool_expr
-- On LET reduce production perturbation_post -> REPEAT annot bool_expr
-- On LABEL reduce production perturbation_post -> REPEAT annot bool_expr
-- On INIT reduce production perturbation_post -> REPEAT annot bool_expr
-- On ID reduce production perturbation_post -> REPEAT annot bool_expr
-- On EOF reduce production perturbation_post -> REPEAT annot bool_expr
-- On DOT reduce production perturbation_post -> REPEAT annot bool_expr
-- On CONFIG reduce production perturbation_post -> REPEAT annot bool_expr

State 433:
## Known stack suffix:
## perturbation_alarm DO annot effect_list perturbation_post
## LR(1) items:
perturbation_declaration -> perturbation_alarm DO annot effect_list perturbation_post . [ TOKEN SIGNATURE RAR PLOT PIPE PERT OBS LRAR LET LABEL INIT ID EOF DOT CONFIG ]
## Transitions:
## Reductions:
-- On TOKEN reduce production perturbation_declaration -> perturbation_alarm DO annot effect_list perturbation_post
-- On SIGNATURE reduce production perturbation_declaration -> perturbation_alarm DO annot effect_list perturbation_post
-- On RAR reduce production perturbation_declaration -> perturbation_alarm DO annot effect_list perturbation_post
-- On PLOT reduce production perturbation_declaration -> perturbation_alarm DO annot effect_list perturbation_post
-- On PIPE reduce production perturbation_declaration -> perturbation_alarm DO annot effect_list perturbation_post
-- On PERT reduce production perturbation_declaration -> perturbation_alarm DO annot effect_list perturbation_post
-- On OBS reduce production perturbation_declaration -> perturbation_alarm DO annot effect_list perturbation_post
-- On LRAR reduce production perturbation_declaration -> perturbation_alarm DO annot effect_list perturbation_post
-- On LET reduce production perturbation_declaration -> perturbation_alarm DO annot effect_list perturbation_post
-- On LABEL reduce production perturbation_declaration -> perturbation_alarm DO annot effect_list perturbation_post
-- On INIT reduce production perturbation_declaration -> perturbation_alarm DO annot effect_list perturbation_post
-- On ID reduce production perturbation_declaration -> perturbation_alarm DO annot effect_list perturbation_post
-- On EOF reduce production perturbation_declaration -> perturbation_alarm DO annot effect_list perturbation_post
-- On DOT reduce production perturbation_declaration -> perturbation_alarm DO annot effect_list perturbation_post
-- On CONFIG reduce production perturbation_declaration -> perturbation_alarm DO annot effect_list perturbation_post

State 434:
## Known stack suffix:
## effect
## LR(1) items:
effect_list -> effect . SEMICOLON annot [ TOKEN SIGNATURE REPEAT RAR PLOT PIPE PERT OBS LRAR LET LABEL INIT ID EOF DOT CONFIG ]
effect_list -> effect . SEMICOLON annot effect_list [ TOKEN SIGNATURE REPEAT RAR PLOT PIPE PERT OBS LRAR LET LABEL INIT ID EOF DOT CONFIG ]
## Transitions:
-- On SEMICOLON shift to state 435
## Reductions:

State 435:
## Known stack suffix:
## effect SEMICOLON
## LR(1) items:
effect_list -> effect SEMICOLON . annot [ TOKEN SIGNATURE REPEAT RAR PLOT PIPE PERT OBS LRAR LET LABEL INIT ID EOF DOT CONFIG ]
effect_list -> effect SEMICOLON . annot effect_list [ TOKEN SIGNATURE REPEAT RAR PLOT PIPE PERT OBS LRAR LET LABEL INIT ID EOF DOT CONFIG ]
## Transitions:
-- On SPACE shift to state 2
-- On NEWLINE shift to state 3
-- On COMMENT shift to state 4
-- On annot shift to state 436
## Reductions:
-- On TRACK reduce production annot ->
-- On TOKEN reduce production annot ->
-- On STOP reduce production annot ->
-- On SPECIES_OF reduce production annot ->
-- On SNAPSHOT reduce production annot ->
-- On SIGNATURE reduce production annot ->
-- On REPEAT reduce production annot ->
-- On RAR reduce production annot ->
-- On PRINTF reduce production annot ->
-- On PLOTENTRY reduce production annot ->
-- On PLOT reduce production annot ->
-- On PIPE reduce production annot ->
-- On PERT reduce production annot ->
-- On OP_PAR reduce production annot ->
-- On OBS reduce production annot ->
-- On LRAR reduce production annot ->
-- On LET reduce production annot ->
-- On LABEL reduce production annot ->
-- On INTRO reduce production annot ->
-- On INIT reduce production annot ->
-- On ID reduce production annot ->
-- On FLUX reduce production annot ->
-- On EOF reduce production annot ->
-- On DOT reduce production annot ->
-- On DELETE reduce production annot ->
-- On CONFIG reduce production annot ->
-- On ASSIGN reduce production annot ->
-- On APPLY reduce production annot ->

State 436:
## Known stack suffix:
## effect SEMICOLON annot
## LR(1) items:
effect_list -> effect SEMICOLON annot . [ TOKEN SIGNATURE REPEAT RAR PLOT PIPE PERT OBS LRAR LET LABEL INIT ID EOF DOT CONFIG ]
effect_list -> effect SEMICOLON annot . effect_list [ TOKEN SIGNATURE REPEAT RAR PLOT PIPE PERT OBS LRAR LET LABEL INIT ID EOF DOT CONFIG ]
## Transitions:
-- On TRACK shift to state 10
-- On STOP shift to state 159
-- On SPECIES_OF shift to state 309
-- On SNAPSHOT shift to state 316
-- On PRINTF shift to state 323
-- On PLOTENTRY shift to state 327
-- On OP_PAR shift to state 420
-- On INTRO shift to state 329
-- On FLUX shift to state 334
-- On DELETE shift to state 344
-- On ASSIGN shift to state 349
-- On APPLY shift to state 357
-- On effect_list shift to state 437
-- On effect shift to state 434
## Reductions:
-- On TOKEN reduce production effect_list -> effect SEMICOLON annot
-- On SIGNATURE reduce production effect_list -> effect SEMICOLON annot
-- On REPEAT reduce production effect_list -> effect SEMICOLON annot
-- On RAR reduce production effect_list -> effect SEMICOLON annot
-- On PLOT reduce production effect_list -> effect SEMICOLON annot
-- On PIPE reduce production effect_list -> effect SEMICOLON annot
-- On PERT reduce production effect_list -> effect SEMICOLON annot
-- On OBS reduce production effect_list -> effect SEMICOLON annot
-- On LRAR reduce production effect_list -> effect SEMICOLON annot
-- On LET reduce production effect_list -> effect SEMICOLON annot
-- On LABEL reduce production effect_list -> effect SEMICOLON annot
-- On INIT reduce production effect_list -> effect SEMICOLON annot
-- On ID reduce production effect_list -> effect SEMICOLON annot
-- On EOF reduce production effect_list -> effect SEMICOLON annot
-- On DOT reduce production effect_list -> effect SEMICOLON annot
-- On CONFIG reduce production effect_list -> effect SEMICOLON annot

State 437:
## Known stack suffix:
## effect SEMICOLON annot effect_list
## LR(1) items:
effect_list -> effect SEMICOLON annot effect_list . [ TOKEN SIGNATURE REPEAT RAR PLOT PIPE PERT OBS LRAR LET LABEL INIT ID EOF DOT CONFIG ]
## Transitions:
## Reductions:
-- On TOKEN reduce production effect_list -> effect SEMICOLON annot effect_list
-- On SIGNATURE reduce production effect_list -> effect SEMICOLON annot effect_list
-- On REPEAT reduce production effect_list -> effect SEMICOLON annot effect_list
-- On RAR reduce production effect_list -> effect SEMICOLON annot effect_list
-- On PLOT reduce production effect_list -> effect SEMICOLON annot effect_list
-- On PIPE reduce production effect_list -> effect SEMICOLON annot effect_list
-- On PERT reduce production effect_list -> effect SEMICOLON annot effect_list
-- On OBS reduce production effect_list -> effect SEMICOLON annot effect_list
-- On LRAR reduce production effect_list -> effect SEMICOLON annot effect_list
-- On LET reduce production effect_list -> effect SEMICOLON annot effect_list
-- On LABEL reduce production effect_list -> effect SEMICOLON annot effect_list
-- On INIT reduce production effect_list -> effect SEMICOLON annot effect_list
-- On ID reduce production effect_list -> effect SEMICOLON annot effect_list
-- On EOF reduce production effect_list -> effect SEMICOLON annot effect_list
-- On DOT reduce production effect_list -> effect SEMICOLON annot effect_list
-- On CONFIG reduce production effect_list -> effect SEMICOLON annot effect_list

State 438:
## Known stack suffix:
## perturbation_alarm bool_expr
## LR(1) items:
perturbation_declaration -> perturbation_alarm bool_expr . DO annot effect_list perturbation_post [ TOKEN SIGNATURE RAR PLOT PIPE PERT OBS LRAR LET LABEL INIT ID EOF DOT CONFIG ]
## Transitions:
-- On DO shift to state 439
## Reductions:

State 439:
## Known stack suffix:
## perturbation_alarm bool_expr DO
## LR(1) items:
perturbation_declaration -> perturbation_alarm bool_expr DO . annot effect_list perturbation_post [ TOKEN SIGNATURE RAR PLOT PIPE PERT OBS LRAR LET LABEL INIT ID EOF DOT CONFIG ]
## Transitions:
-- On SPACE shift to state 2
-- On NEWLINE shift to state 3
-- On COMMENT shift to state 4
-- On annot shift to state 440
## Reductions:
-- On TRACK reduce production annot ->
-- On STOP reduce production annot ->
-- On SPECIES_OF reduce production annot ->
-- On SNAPSHOT reduce production annot ->
-- On PRINTF reduce production annot ->
-- On PLOTENTRY reduce production annot ->
-- On OP_PAR reduce production annot ->
-- On INTRO reduce production annot ->
-- On FLUX reduce production annot ->
-- On DELETE reduce production annot ->
-- On ASSIGN reduce production annot ->
-- On APPLY reduce production annot ->

State 440:
## Known stack suffix:
## perturbation_alarm bool_expr DO annot
## LR(1) items:
perturbation_declaration -> perturbation_alarm bool_expr DO annot . effect_list perturbation_post [ TOKEN SIGNATURE RAR PLOT PIPE PERT OBS LRAR LET LABEL INIT ID EOF DOT CONFIG ]
## Transitions:
-- On TRACK shift to state 10
-- On STOP shift to state 159
-- On SPECIES_OF shift to state 309
-- On SNAPSHOT shift to state 316
-- On PRINTF shift to state 323
-- On PLOTENTRY shift to state 327
-- On OP_PAR shift to state 420
-- On INTRO shift to state 329
-- On FLUX shift to state 334
-- On DELETE shift to state 344
-- On ASSIGN shift to state 349
-- On APPLY shift to state 357
-- On effect_list shift to state 441
-- On effect shift to state 434
## Reductions:

State 441:
## Known stack suffix:
## perturbation_alarm bool_expr DO annot effect_list
## LR(1) items:
perturbation_declaration -> perturbation_alarm bool_expr DO annot effect_list . perturbation_post [ TOKEN SIGNATURE RAR PLOT PIPE PERT OBS LRAR LET LABEL INIT ID EOF DOT CONFIG ]
## Transitions:
-- On REPEAT shift to state 430
-- On perturbation_post shift to state 442
## Reductions:
-- On TOKEN reduce production perturbation_post ->
-- On SIGNATURE reduce production perturbation_post ->
-- On RAR reduce production perturbation_post ->
-- On PLOT reduce production perturbation_post ->
-- On PIPE reduce production perturbation_post ->
-- On PERT reduce production perturbation_post ->
-- On OBS reduce production perturbation_post ->
-- On LRAR reduce production perturbation_post ->
-- On LET reduce production perturbation_post ->
-- On LABEL reduce production perturbation_post ->
-- On INIT reduce production perturbation_post ->
-- On ID reduce production perturbation_post ->
-- On EOF reduce production perturbation_post ->
-- On DOT reduce production perturbation_post ->
-- On CONFIG reduce production perturbation_post ->

State 442:
## Known stack suffix:
## perturbation_alarm bool_expr DO annot effect_list perturbation_post
## LR(1) items:
perturbation_declaration -> perturbation_alarm bool_expr DO annot effect_list perturbation_post . [ TOKEN SIGNATURE RAR PLOT PIPE PERT OBS LRAR LET LABEL INIT ID EOF DOT CONFIG ]
## Transitions:
## Reductions:
-- On TOKEN reduce production perturbation_declaration -> perturbation_alarm bool_expr DO annot effect_list perturbation_post
-- On SIGNATURE reduce production perturbation_declaration -> perturbation_alarm bool_expr DO annot effect_list perturbation_post
-- On RAR reduce production perturbation_declaration -> perturbation_alarm bool_expr DO annot effect_list perturbation_post
-- On PLOT reduce production perturbation_declaration -> perturbation_alarm bool_expr DO annot effect_list perturbation_post
-- On PIPE reduce production perturbation_declaration -> perturbation_alarm bool_expr DO annot effect_list perturbation_post
-- On PERT reduce production perturbation_declaration -> perturbation_alarm bool_expr DO annot effect_list perturbation_post
-- On OBS reduce production perturbation_declaration -> perturbation_alarm bool_expr DO annot effect_list perturbation_post
-- On LRAR reduce production perturbation_declaration -> perturbation_alarm bool_expr DO annot effect_list perturbation_post
-- On LET reduce production perturbation_declaration -> perturbation_alarm bool_expr DO annot effect_list perturbation_post
-- On LABEL reduce production perturbation_declaration -> perturbation_alarm bool_expr DO annot effect_list perturbation_post
-- On INIT reduce production perturbation_declaration -> perturbation_alarm bool_expr DO annot effect_list perturbation_post
-- On ID reduce production perturbation_declaration -> perturbation_alarm bool_expr DO annot effect_list perturbation_post
-- On EOF reduce production perturbation_declaration -> perturbation_alarm bool_expr DO annot effect_list perturbation_post
-- On DOT reduce production perturbation_declaration -> perturbation_alarm bool_expr DO annot effect_list perturbation_post
-- On CONFIG reduce production perturbation_declaration -> perturbation_alarm bool_expr DO annot effect_list perturbation_post

State 443:
## Known stack suffix:
## annot
## LR(1) items:
perturbation_alarm -> annot . [ TRUE TMAX TIME TAN SQRT SINUS PIPE OP_PAR NULL_EVENT NOT MINUS MIN MAX LOG LABEL INT INFINITY ID FLOAT FALSE EXPONENT EVENT EMAX DO CPUTIME COSINUS ABS ]
perturbation_alarm -> annot . ALARM annot nbr annot [ TRUE TMAX TIME TAN SQRT SINUS PIPE OP_PAR NULL_EVENT NOT MINUS MIN MAX LOG LABEL INT INFINITY ID FLOAT FALSE EXPONENT EVENT EMAX DO CPUTIME COSINUS ABS ]
## Transitions:
-- On ALARM shift to state 444
## Reductions:
-- On TRUE reduce production perturbation_alarm -> annot
-- On TMAX reduce production perturbation_alarm -> annot
-- On TIME reduce production perturbation_alarm -> annot
-- On TAN reduce production perturbation_alarm -> annot
-- On SQRT reduce production perturbation_alarm -> annot
-- On SINUS reduce production perturbation_alarm -> annot
-- On PIPE reduce production perturbation_alarm -> annot
-- On OP_PAR reduce production perturbation_alarm -> annot
-- On NULL_EVENT reduce production perturbation_alarm -> annot
-- On NOT reduce production perturbation_alarm -> annot
-- On MINUS reduce production perturbation_alarm -> annot
-- On MIN reduce production perturbation_alarm -> annot
-- On MAX reduce production perturbation_alarm -> annot
-- On LOG reduce production perturbation_alarm -> annot
-- On LABEL reduce production perturbation_alarm -> annot
-- On INT reduce production perturbation_alarm -> annot
-- On INFINITY reduce production perturbation_alarm -> annot
-- On ID reduce production perturbation_alarm -> annot
-- On FLOAT reduce production perturbation_alarm -> annot
-- On FALSE reduce production perturbation_alarm -> annot
-- On EXPONENT reduce production perturbation_alarm -> annot
-- On EVENT reduce production perturbation_alarm -> annot
-- On EMAX reduce production perturbation_alarm -> annot
-- On DO reduce production perturbation_alarm -> annot
-- On CPUTIME reduce production perturbation_alarm -> annot
-- On COSINUS reduce production perturbation_alarm -> annot
-- On ABS reduce production perturbation_alarm -> annot

State 444:
## Known stack suffix:
## annot ALARM
## LR(1) items:
perturbation_alarm -> annot ALARM . annot nbr annot [ TRUE TMAX TIME TAN SQRT SINUS PIPE OP_PAR NULL_EVENT NOT MINUS MIN MAX LOG LABEL INT INFINITY ID FLOAT FALSE EXPONENT EVENT EMAX DO CPUTIME COSINUS ABS ]
## Transitions:
-- On SPACE shift to state 2
-- On NEWLINE shift to state 3
-- On COMMENT shift to state 4
-- On annot shift to state 445
## Reductions:
-- On INT reduce production annot ->
-- On INFINITY reduce production annot ->
-- On FLOAT reduce production annot ->

State 445:
## Known stack suffix:
## annot ALARM annot
## LR(1) items:
perturbation_alarm -> annot ALARM annot . nbr annot [ TRUE TMAX TIME TAN SQRT SINUS PIPE OP_PAR NULL_EVENT NOT MINUS MIN MAX LOG LABEL INT INFINITY ID FLOAT FALSE EXPONENT EVENT EMAX DO CPUTIME COSINUS ABS ]
## Transitions:
-- On INT shift to state 198
-- On INFINITY shift to state 199
-- On FLOAT shift to state 201
-- On nbr shift to state 446
## Reductions:

State 446:
## Known stack suffix:
## annot ALARM annot nbr
## LR(1) items:
perturbation_alarm -> annot ALARM annot nbr . annot [ TRUE TMAX TIME TAN SQRT SINUS PIPE OP_PAR NULL_EVENT NOT MINUS MIN MAX LOG LABEL INT INFINITY ID FLOAT FALSE EXPONENT EVENT EMAX DO CPUTIME COSINUS ABS ]
## Transitions:
-- On SPACE shift to state 2
-- On NEWLINE shift to state 3
-- On COMMENT shift to state 4
-- On annot shift to state 447
## Reductions:
-- On TRUE reduce production annot ->
-- On TMAX reduce production annot ->
-- On TIME reduce production annot ->
-- On TAN reduce production annot ->
-- On SQRT reduce production annot ->
-- On SINUS reduce production annot ->
-- On PIPE reduce production annot ->
-- On OP_PAR reduce production annot ->
-- On NULL_EVENT reduce production annot ->
-- On NOT reduce production annot ->
-- On MINUS reduce production annot ->
-- On MIN reduce production annot ->
-- On MAX reduce production annot ->
-- On LOG reduce production annot ->
-- On LABEL reduce production annot ->
-- On INT reduce production annot ->
-- On INFINITY reduce production annot ->
-- On ID reduce production annot ->
-- On FLOAT reduce production annot ->
-- On FALSE reduce production annot ->
-- On EXPONENT reduce production annot ->
-- On EVENT reduce production annot ->
-- On EMAX reduce production annot ->
-- On DO reduce production annot ->
-- On CPUTIME reduce production annot ->
-- On COSINUS reduce production annot ->
-- On ABS reduce production annot ->

State 447:
## Known stack suffix:
## annot ALARM annot nbr annot
## LR(1) items:
perturbation_alarm -> annot ALARM annot nbr annot . [ TRUE TMAX TIME TAN SQRT SINUS PIPE OP_PAR NULL_EVENT NOT MINUS MIN MAX LOG LABEL INT INFINITY ID FLOAT FALSE EXPONENT EVENT EMAX DO CPUTIME COSINUS ABS ]
## Transitions:
## Reductions:
-- On TRUE reduce production perturbation_alarm -> annot ALARM annot nbr annot
-- On TMAX reduce production perturbation_alarm -> annot ALARM annot nbr annot
-- On TIME reduce production perturbation_alarm -> annot ALARM annot nbr annot
-- On TAN reduce production perturbation_alarm -> annot ALARM annot nbr annot
-- On SQRT reduce production perturbation_alarm -> annot ALARM annot nbr annot
-- On SINUS reduce production perturbation_alarm -> annot ALARM annot nbr annot
-- On PIPE reduce production perturbation_alarm -> annot ALARM annot nbr annot
-- On OP_PAR reduce production perturbation_alarm -> annot ALARM annot nbr annot
-- On NULL_EVENT reduce production perturbation_alarm -> annot ALARM annot nbr annot
-- On NOT reduce production perturbation_alarm -> annot ALARM annot nbr annot
-- On MINUS reduce production perturbation_alarm -> annot ALARM annot nbr annot
-- On MIN reduce production perturbation_alarm -> annot ALARM annot nbr annot
-- On MAX reduce production perturbation_alarm -> annot ALARM annot nbr annot
-- On LOG reduce production perturbation_alarm -> annot ALARM annot nbr annot
-- On LABEL reduce production perturbation_alarm -> annot ALARM annot nbr annot
-- On INT reduce production perturbation_alarm -> annot ALARM annot nbr annot
-- On INFINITY reduce production perturbation_alarm -> annot ALARM annot nbr annot
-- On ID reduce production perturbation_alarm -> annot ALARM annot nbr annot
-- On FLOAT reduce production perturbation_alarm -> annot ALARM annot nbr annot
-- On FALSE reduce production perturbation_alarm -> annot ALARM annot nbr annot
-- On EXPONENT reduce production perturbation_alarm -> annot ALARM annot nbr annot
-- On EVENT reduce production perturbation_alarm -> annot ALARM annot nbr annot
-- On EMAX reduce production perturbation_alarm -> annot ALARM annot nbr annot
-- On DO reduce production perturbation_alarm -> annot ALARM annot nbr annot
-- On CPUTIME reduce production perturbation_alarm -> annot ALARM annot nbr annot
-- On COSINUS reduce production perturbation_alarm -> annot ALARM annot nbr annot
-- On ABS reduce production perturbation_alarm -> annot ALARM annot nbr annot

State 448:
## Known stack suffix:
## OBS
## LR(1) items:
sentence -> OBS . annot variable_declaration [ TOKEN SIGNATURE RAR PLOT PIPE PERT OBS LRAR LET LABEL INIT ID EOF DOT CONFIG ]
## Transitions:
-- On SPACE shift to state 19
-- On NEWLINE shift to state 20
-- On COMMENT shift to state 21
-- On annot shift to state 449
## Reductions:
-- On error reduce production annot ->
-- On LABEL reduce production annot ->
-- On ID reduce production annot ->

State 449:
## Known stack suffix:
## OBS annot
## LR(1) items:
sentence -> OBS annot . variable_declaration [ TOKEN SIGNATURE RAR PLOT PIPE PERT OBS LRAR LET LABEL INIT ID EOF DOT CONFIG ]
## Transitions:
-- On error shift to state 450
-- On LABEL shift to state 451
-- On ID shift to state 455
-- On variable_declaration shift to state 459
## Reductions:

State 450:
## Known stack suffix:
## error
## LR(1) items:
variable_declaration -> error . [ TOKEN SIGNATURE RAR PLOT PIPE PERT OBS LRAR LET LABEL INIT ID EOF DOT CONFIG ]
## Transitions:
## Reductions:
-- On TOKEN reduce production variable_declaration -> error
-- On SIGNATURE reduce production variable_declaration -> error
-- On RAR reduce production variable_declaration -> error
-- On PLOT reduce production variable_declaration -> error
-- On PIPE reduce production variable_declaration -> error
-- On PERT reduce production variable_declaration -> error
-- On OBS reduce production variable_declaration -> error
-- On LRAR reduce production variable_declaration -> error
-- On LET reduce production variable_declaration -> error
-- On LABEL reduce production variable_declaration -> error
-- On INIT reduce production variable_declaration -> error
-- On ID reduce production variable_declaration -> error
-- On EOF reduce production variable_declaration -> error
-- On DOT reduce production variable_declaration -> error
-- On CONFIG reduce production variable_declaration -> error

State 451:
## Known stack suffix:
## LABEL
## LR(1) items:
variable_declaration -> LABEL . annot alg_expr [ TOKEN SIGNATURE RAR PLOT PIPE PERT OBS LRAR LET LABEL INIT ID EOF DOT CONFIG ]
variable_declaration -> LABEL . annot error [ TOKEN SIGNATURE RAR PLOT PIPE PERT OBS LRAR LET LABEL INIT ID EOF DOT CONFIG ]
## Transitions:
-- On SPACE shift to state 19
-- On NEWLINE shift to state 20
-- On COMMENT shift to state 21
-- On annot shift to state 452
## Reductions:
-- On error reduce production annot ->
-- On TRUE reduce production annot ->
-- On TMAX reduce production annot ->
-- On TIME reduce production annot ->
-- On TAN reduce production annot ->
-- On SQRT reduce production annot ->
-- On SINUS reduce production annot ->
-- On PIPE reduce production annot ->
-- On OP_PAR reduce production annot ->
-- On NULL_EVENT reduce production annot ->
-- On NOT reduce production annot ->
-- On MINUS reduce production annot ->
-- On MIN reduce production annot ->
-- On MAX reduce production annot ->
-- On LOG reduce production annot ->
-- On LABEL reduce production annot ->
-- On INT reduce production annot ->
-- On INFINITY reduce production annot ->
-- On ID reduce production annot ->
-- On FLOAT reduce production annot ->
-- On FALSE reduce production annot ->
-- On EXPONENT reduce production annot ->
-- On EVENT reduce production annot ->
-- On EMAX reduce production annot ->
-- On CPUTIME reduce production annot ->
-- On COSINUS reduce production annot ->
-- On ABS reduce production annot ->

State 452:
## Known stack suffix:
## LABEL annot
## LR(1) items:
variable_declaration -> LABEL annot . alg_expr [ TOKEN SIGNATURE RAR PLOT PIPE PERT OBS LRAR LET LABEL INIT ID EOF DOT CONFIG ]
variable_declaration -> LABEL annot . error [ TOKEN SIGNATURE RAR PLOT PIPE PERT OBS LRAR LET LABEL INIT ID EOF DOT CONFIG ]
## Transitions:
-- On error shift to state 453
-- On TRUE shift to state 179
-- On TMAX shift to state 162
-- On TIME shift to state 163
-- On TAN shift to state 164
-- On SQRT shift to state 166
-- On SINUS shift to state 168
-- On PIPE shift to state 170
-- On OP_PAR shift to state 180
-- On NULL_EVENT shift to state 182
-- On NOT shift to state 183
-- On MINUS shift to state 189
-- On MIN shift to state 191
-- On MAX shift to state 193
-- On LOG shift to state 195
-- On LABEL shift to state 197
-- On INT shift to state 198
-- On INFINITY shift to state 199
-- On ID shift to state 200
-- On FLOAT shift to state 201
-- On FALSE shift to state 225
-- On EXPONENT shift to state 202
-- On EVENT shift to state 204
-- On EMAX shift to state 205
-- On CPUTIME shift to state 206
-- On COSINUS shift to state 207
-- On ABS shift to state 209
-- On variable shift to state 211
-- On small_bool_expr shift to state 226
-- On small_alg_expr shift to state 228
-- On nbr shift to state 213
-- On constant shift to state 214
-- On bool_expr_no_or shift to state 233
-- On bool_expr_comp shift to state 236
-- On bool_expr shift to state 255
-- On alg_expr_up_to_sum shift to state 240
-- On alg_expr_up_to_prod shift to state 251
-- On alg_expr_up_to_mod shift to state 247
-- On alg_expr_up_to_if shift to state 258
-- On alg_expr shift to state 454
## Reductions:

State 453:
## Known stack suffix:
## LABEL annot error
## LR(1) items:
variable_declaration -> LABEL annot error . [ TOKEN SIGNATURE RAR PLOT PIPE PERT OBS LRAR LET LABEL INIT ID EOF DOT CONFIG ]
## Transitions:
## Reductions:
-- On TOKEN reduce production variable_declaration -> LABEL annot error
-- On SIGNATURE reduce production variable_declaration -> LABEL annot error
-- On RAR reduce production variable_declaration -> LABEL annot error
-- On PLOT reduce production variable_declaration -> LABEL annot error
-- On PIPE reduce production variable_declaration -> LABEL annot error
-- On PERT reduce production variable_declaration -> LABEL annot error
-- On OBS reduce production variable_declaration -> LABEL annot error
-- On LRAR reduce production variable_declaration -> LABEL annot error
-- On LET reduce production variable_declaration -> LABEL annot error
-- On LABEL reduce production variable_declaration -> LABEL annot error
-- On INIT reduce production variable_declaration -> LABEL annot error
-- On ID reduce production variable_declaration -> LABEL annot error
-- On EOF reduce production variable_declaration -> LABEL annot error
-- On DOT reduce production variable_declaration -> LABEL annot error
-- On CONFIG reduce production variable_declaration -> LABEL annot error

State 454:
## Known stack suffix:
## LABEL annot alg_expr
## LR(1) items:
variable_declaration -> LABEL annot alg_expr . [ TOKEN SIGNATURE RAR PLOT PIPE PERT OBS LRAR LET LABEL INIT ID EOF DOT CONFIG ]
## Transitions:
## Reductions:
-- On TOKEN reduce production variable_declaration -> LABEL annot alg_expr
-- On SIGNATURE reduce production variable_declaration -> LABEL annot alg_expr
-- On RAR reduce production variable_declaration -> LABEL annot alg_expr
-- On PLOT reduce production variable_declaration -> LABEL annot alg_expr
-- On PIPE reduce production variable_declaration -> LABEL annot alg_expr
-- On PERT reduce production variable_declaration -> LABEL annot alg_expr
-- On OBS reduce production variable_declaration -> LABEL annot alg_expr
-- On LRAR reduce production variable_declaration -> LABEL annot alg_expr
-- On LET reduce production variable_declaration -> LABEL annot alg_expr
-- On LABEL reduce production variable_declaration -> LABEL annot alg_expr
-- On INIT reduce production variable_declaration -> LABEL annot alg_expr
-- On ID reduce production variable_declaration -> LABEL annot alg_expr
-- On EOF reduce production variable_declaration -> LABEL annot alg_expr
-- On DOT reduce production variable_declaration -> LABEL annot alg_expr
-- On CONFIG reduce production variable_declaration -> LABEL annot alg_expr

State 455:
## Known stack suffix:
## ID
## LR(1) items:
variable_declaration -> ID . annot alg_expr [ TOKEN SIGNATURE RAR PLOT PIPE PERT OBS LRAR LET LABEL INIT ID EOF DOT CONFIG ]
variable_declaration -> ID . annot error [ TOKEN SIGNATURE RAR PLOT PIPE PERT OBS LRAR LET LABEL INIT ID EOF DOT CONFIG ]
## Transitions:
-- On SPACE shift to state 19
-- On NEWLINE shift to state 20
-- On COMMENT shift to state 21
-- On annot shift to state 456
## Reductions:
-- On error reduce production annot ->
-- On TRUE reduce production annot ->
-- On TMAX reduce production annot ->
-- On TIME reduce production annot ->
-- On TAN reduce production annot ->
-- On SQRT reduce production annot ->
-- On SINUS reduce production annot ->
-- On PIPE reduce production annot ->
-- On OP_PAR reduce production annot ->
-- On NULL_EVENT reduce production annot ->
-- On NOT reduce production annot ->
-- On MINUS reduce production annot ->
-- On MIN reduce production annot ->
-- On MAX reduce production annot ->
-- On LOG reduce production annot ->
-- On LABEL reduce production annot ->
-- On INT reduce production annot ->
-- On INFINITY reduce production annot ->
-- On ID reduce production annot ->
-- On FLOAT reduce production annot ->
-- On FALSE reduce production annot ->
-- On EXPONENT reduce production annot ->
-- On EVENT reduce production annot ->
-- On EMAX reduce production annot ->
-- On CPUTIME reduce production annot ->
-- On COSINUS reduce production annot ->
-- On ABS reduce production annot ->

State 456:
## Known stack suffix:
## ID annot
## LR(1) items:
variable_declaration -> ID annot . alg_expr [ TOKEN SIGNATURE RAR PLOT PIPE PERT OBS LRAR LET LABEL INIT ID EOF DOT CONFIG ]
variable_declaration -> ID annot . error [ TOKEN SIGNATURE RAR PLOT PIPE PERT OBS LRAR LET LABEL INIT ID EOF DOT CONFIG ]
## Transitions:
-- On error shift to state 457
-- On TRUE shift to state 179
-- On TMAX shift to state 162
-- On TIME shift to state 163
-- On TAN shift to state 164
-- On SQRT shift to state 166
-- On SINUS shift to state 168
-- On PIPE shift to state 170
-- On OP_PAR shift to state 180
-- On NULL_EVENT shift to state 182
-- On NOT shift to state 183
-- On MINUS shift to state 189
-- On MIN shift to state 191
-- On MAX shift to state 193
-- On LOG shift to state 195
-- On LABEL shift to state 197
-- On INT shift to state 198
-- On INFINITY shift to state 199
-- On ID shift to state 200
-- On FLOAT shift to state 201
-- On FALSE shift to state 225
-- On EXPONENT shift to state 202
-- On EVENT shift to state 204
-- On EMAX shift to state 205
-- On CPUTIME shift to state 206
-- On COSINUS shift to state 207
-- On ABS shift to state 209
-- On variable shift to state 211
-- On small_bool_expr shift to state 226
-- On small_alg_expr shift to state 228
-- On nbr shift to state 213
-- On constant shift to state 214
-- On bool_expr_no_or shift to state 233
-- On bool_expr_comp shift to state 236
-- On bool_expr shift to state 255
-- On alg_expr_up_to_sum shift to state 240
-- On alg_expr_up_to_prod shift to state 251
-- On alg_expr_up_to_mod shift to state 247
-- On alg_expr_up_to_if shift to state 258
-- On alg_expr shift to state 458
## Reductions:

State 457:
## Known stack suffix:
## ID annot error
## LR(1) items:
variable_declaration -> ID annot error . [ TOKEN SIGNATURE RAR PLOT PIPE PERT OBS LRAR LET LABEL INIT ID EOF DOT CONFIG ]
## Transitions:
## Reductions:
-- On TOKEN reduce production variable_declaration -> ID annot error
-- On SIGNATURE reduce production variable_declaration -> ID annot error
-- On RAR reduce production variable_declaration -> ID annot error
-- On PLOT reduce production variable_declaration -> ID annot error
-- On PIPE reduce production variable_declaration -> ID annot error
-- On PERT reduce production variable_declaration -> ID annot error
-- On OBS reduce production variable_declaration -> ID annot error
-- On LRAR reduce production variable_declaration -> ID annot error
-- On LET reduce production variable_declaration -> ID annot error
-- On LABEL reduce production variable_declaration -> ID annot error
-- On INIT reduce production variable_declaration -> ID annot error
-- On ID reduce production variable_declaration -> ID annot error
-- On EOF reduce production variable_declaration -> ID annot error
-- On DOT reduce production variable_declaration -> ID annot error
-- On CONFIG reduce production variable_declaration -> ID annot error

State 458:
## Known stack suffix:
## ID annot alg_expr
## LR(1) items:
variable_declaration -> ID annot alg_expr . [ TOKEN SIGNATURE RAR PLOT PIPE PERT OBS LRAR LET LABEL INIT ID EOF DOT CONFIG ]
## Transitions:
## Reductions:
-- On TOKEN reduce production variable_declaration -> ID annot alg_expr
-- On SIGNATURE reduce production variable_declaration -> ID annot alg_expr
-- On RAR reduce production variable_declaration -> ID annot alg_expr
-- On PLOT reduce production variable_declaration -> ID annot alg_expr
-- On PIPE reduce production variable_declaration -> ID annot alg_expr
-- On PERT reduce production variable_declaration -> ID annot alg_expr
-- On OBS reduce production variable_declaration -> ID annot alg_expr
-- On LRAR reduce production variable_declaration -> ID annot alg_expr
-- On LET reduce production variable_declaration -> ID annot alg_expr
-- On LABEL reduce production variable_declaration -> ID annot alg_expr
-- On INIT reduce production variable_declaration -> ID annot alg_expr
-- On ID reduce production variable_declaration -> ID annot alg_expr
-- On EOF reduce production variable_declaration -> ID annot alg_expr
-- On DOT reduce production variable_declaration -> ID annot alg_expr
-- On CONFIG reduce production variable_declaration -> ID annot alg_expr

State 459:
## Known stack suffix:
## OBS annot variable_declaration
## LR(1) items:
sentence -> OBS annot variable_declaration . [ TOKEN SIGNATURE RAR PLOT PIPE PERT OBS LRAR LET LABEL INIT ID EOF DOT CONFIG ]
## Transitions:
## Reductions:
-- On TOKEN reduce production sentence -> OBS annot variable_declaration
-- On SIGNATURE reduce production sentence -> OBS annot variable_declaration
-- On RAR reduce production sentence -> OBS annot variable_declaration
-- On PLOT reduce production sentence -> OBS annot variable_declaration
-- On PIPE reduce production sentence -> OBS annot variable_declaration
-- On PERT reduce production sentence -> OBS annot variable_declaration
-- On OBS reduce production sentence -> OBS annot variable_declaration
-- On LRAR reduce production sentence -> OBS annot variable_declaration
-- On LET reduce production sentence -> OBS annot variable_declaration
-- On LABEL reduce production sentence -> OBS annot variable_declaration
-- On INIT reduce production sentence -> OBS annot variable_declaration
-- On ID reduce production sentence -> OBS annot variable_declaration
-- On EOF reduce production sentence -> OBS annot variable_declaration
-- On DOT reduce production sentence -> OBS annot variable_declaration
-- On CONFIG reduce production sentence -> OBS annot variable_declaration

State 460:
## Known stack suffix:
## LET
## LR(1) items:
sentence -> LET . annot variable_declaration [ TOKEN SIGNATURE RAR PLOT PIPE PERT OBS LRAR LET LABEL INIT ID EOF DOT CONFIG ]
## Transitions:
-- On SPACE shift to state 19
-- On NEWLINE shift to state 20
-- On COMMENT shift to state 21
-- On annot shift to state 461
## Reductions:
-- On error reduce production annot ->
-- On LABEL reduce production annot ->
-- On ID reduce production annot ->

State 461:
## Known stack suffix:
## LET annot
## LR(1) items:
sentence -> LET annot . variable_declaration [ TOKEN SIGNATURE RAR PLOT PIPE PERT OBS LRAR LET LABEL INIT ID EOF DOT CONFIG ]
## Transitions:
-- On error shift to state 450
-- On LABEL shift to state 451
-- On ID shift to state 455
-- On variable_declaration shift to state 462
## Reductions:

State 462:
## Known stack suffix:
## LET annot variable_declaration
## LR(1) items:
sentence -> LET annot variable_declaration . [ TOKEN SIGNATURE RAR PLOT PIPE PERT OBS LRAR LET LABEL INIT ID EOF DOT CONFIG ]
## Transitions:
## Reductions:
-- On TOKEN reduce production sentence -> LET annot variable_declaration
-- On SIGNATURE reduce production sentence -> LET annot variable_declaration
-- On RAR reduce production sentence -> LET annot variable_declaration
-- On PLOT reduce production sentence -> LET annot variable_declaration
-- On PIPE reduce production sentence -> LET annot variable_declaration
-- On PERT reduce production sentence -> LET annot variable_declaration
-- On OBS reduce production sentence -> LET annot variable_declaration
-- On LRAR reduce production sentence -> LET annot variable_declaration
-- On LET reduce production sentence -> LET annot variable_declaration
-- On LABEL reduce production sentence -> LET annot variable_declaration
-- On INIT reduce production sentence -> LET annot variable_declaration
-- On ID reduce production sentence -> LET annot variable_declaration
-- On EOF reduce production sentence -> LET annot variable_declaration
-- On DOT reduce production sentence -> LET annot variable_declaration
-- On CONFIG reduce production sentence -> LET annot variable_declaration

State 463:
## Known stack suffix:
## LABEL
## LR(1) items:
sentence -> LABEL . annot rule [ TOKEN SIGNATURE RAR PLOT PIPE PERT OBS LRAR LET LABEL INIT ID EOF DOT CONFIG ]
sentence -> LABEL . annot EQUAL annot alg_expr [ TOKEN SIGNATURE RAR PLOT PIPE PERT OBS LRAR LET LABEL INIT ID EOF DOT CONFIG ]
## Transitions:
-- On SPACE shift to state 2
-- On NEWLINE shift to state 3
-- On COMMENT shift to state 4
-- On annot shift to state 464
## Reductions:
-- On RAR reduce production annot ->
-- On PIPE reduce production annot ->
-- On LRAR reduce production annot ->
-- On ID reduce production annot ->
-- On EQUAL reduce production annot ->
-- On DOT reduce production annot ->

State 464:
## Known stack suffix:
## LABEL annot
## LR(1) items:
sentence -> LABEL annot . rule [ TOKEN SIGNATURE RAR PLOT PIPE PERT OBS LRAR LET LABEL INIT ID EOF DOT CONFIG ]
sentence -> LABEL annot . EQUAL annot alg_expr [ TOKEN SIGNATURE RAR PLOT PIPE PERT OBS LRAR LET LABEL INIT ID EOF DOT CONFIG ]
## Transitions:
-- On RAR shift to state 360
-- On PIPE shift to state 404
-- On LRAR shift to state 372
-- On ID shift to state 465
-- On EQUAL shift to state 487
-- On DOT shift to state 490
-- On rule_side shift to state 492
-- On rule_content shift to state 507
-- On rule shift to state 532
-- On pattern shift to state 498
-- On arrow shift to state 533
-- On agent shift to state 503
## Reductions:

State 465:
## Known stack suffix:
## ID
## LR(1) items:
agent -> ID . annot OP_PAR annot interface CL_PAR agent_modif [ error RAR PIPE LRAR COMMA AT ]
agent -> ID . annot COLON annot ID annot OP_PAR annot interface CL_PAR agent_modif [ error RAR PIPE LRAR COMMA AT ]
agent -> ID . annot error [ error RAR PIPE LRAR COMMA AT ]
## Transitions:
-- On SPACE shift to state 19
-- On NEWLINE shift to state 20
-- On COMMENT shift to state 21
-- On annot shift to state 466
## Reductions:
-- On error reduce production annot ->
-- On OP_PAR reduce production annot ->
-- On COLON reduce production annot ->

State 466:
## Known stack suffix:
## ID annot
## LR(1) items:
agent -> ID annot . OP_PAR annot interface CL_PAR agent_modif [ error RAR PIPE LRAR COMMA AT ]
agent -> ID annot . COLON annot ID annot OP_PAR annot interface CL_PAR agent_modif [ error RAR PIPE LRAR COMMA AT ]
agent -> ID annot . error [ error RAR PIPE LRAR COMMA AT ]
## Transitions:
-- On error shift to state 467
-- On OP_PAR shift to state 468
-- On COLON shift to state 478
## Reductions:

State 467:
## Known stack suffix:
## ID annot error
## LR(1) items:
agent -> ID annot error . [ error RAR PIPE LRAR COMMA AT ]
## Transitions:
## Reductions:
-- On error reduce production agent -> ID annot error
-- On RAR reduce production agent -> ID annot error
-- On PIPE reduce production agent -> ID annot error
-- On LRAR reduce production agent -> ID annot error
-- On COMMA reduce production agent -> ID annot error
-- On AT reduce production agent -> ID annot error

State 468:
## Known stack suffix:
## ID annot OP_PAR
## LR(1) items:
agent -> ID annot OP_PAR . annot interface CL_PAR agent_modif [ error RAR PIPE LRAR COMMA AT ]
## Transitions:
-- On SPACE shift to state 19
-- On NEWLINE shift to state 20
-- On COMMENT shift to state 21
-- On annot shift to state 469
## Reductions:
-- On error reduce production annot ->
-- On ID reduce production annot ->
-- On CL_PAR reduce production annot ->

State 469:
## Known stack suffix:
## ID annot OP_PAR annot
## LR(1) items:
agent -> ID annot OP_PAR annot . interface CL_PAR agent_modif [ error RAR PIPE LRAR COMMA AT ]
## Transitions:
-- On error shift to state 29
-- On ID shift to state 30
-- On site shift to state 128
-- On interface shift to state 470
## Reductions:
-- On CL_PAR reduce production interface ->

State 470:
## Known stack suffix:
## ID annot OP_PAR annot interface
## LR(1) items:
agent -> ID annot OP_PAR annot interface . CL_PAR agent_modif [ error RAR PIPE LRAR COMMA AT ]
## Transitions:
-- On CL_PAR shift to state 471
## Reductions:

State 471:
## Known stack suffix:
## ID annot OP_PAR annot interface CL_PAR
## LR(1) items:
agent -> ID annot OP_PAR annot interface CL_PAR . agent_modif [ error RAR PIPE LRAR COMMA AT ]
## Transitions:
-- On SPACE shift to state 19
-- On NEWLINE shift to state 20
-- On COMMENT shift to state 21
-- On annot shift to state 472
-- On agent_modif shift to state 477
## Reductions:
-- On error reduce production annot ->
-- On RAR reduce production annot ->
-- On PLUS reduce production annot ->
-- On PIPE reduce production annot ->
-- On MINUS reduce production annot ->
-- On LRAR reduce production annot ->
-- On COMMA reduce production annot ->
-- On AT reduce production annot ->

State 472:
## Known stack suffix:
## annot
## LR(1) items:
agent_modif -> annot . [ error RAR PIPE LRAR COMMA AT ]
agent_modif -> annot . PLUS annot [ error RAR PIPE LRAR COMMA AT ]
agent_modif -> annot . MINUS annot [ error RAR PIPE LRAR COMMA AT ]
## Transitions:
-- On PLUS shift to state 473
-- On MINUS shift to state 475
## Reductions:
-- On error reduce production agent_modif -> annot
-- On RAR reduce production agent_modif -> annot
-- On PIPE reduce production agent_modif -> annot
-- On LRAR reduce production agent_modif -> annot
-- On COMMA reduce production agent_modif -> annot
-- On AT reduce production agent_modif -> annot

State 473:
## Known stack suffix:
## annot PLUS
## LR(1) items:
agent_modif -> annot PLUS . annot [ error RAR PIPE LRAR COMMA AT ]
## Transitions:
-- On SPACE shift to state 19
-- On NEWLINE shift to state 20
-- On COMMENT shift to state 21
-- On annot shift to state 474
## Reductions:
-- On error reduce production annot ->
-- On RAR reduce production annot ->
-- On PIPE reduce production annot ->
-- On LRAR reduce production annot ->
-- On COMMA reduce production annot ->
-- On AT reduce production annot ->

State 474:
## Known stack suffix:
## annot PLUS annot
## LR(1) items:
agent_modif -> annot PLUS annot . [ error RAR PIPE LRAR COMMA AT ]
## Transitions:
## Reductions:
-- On error reduce production agent_modif -> annot PLUS annot
-- On RAR reduce production agent_modif -> annot PLUS annot
-- On PIPE reduce production agent_modif -> annot PLUS annot
-- On LRAR reduce production agent_modif -> annot PLUS annot
-- On COMMA reduce production agent_modif -> annot PLUS annot
-- On AT reduce production agent_modif -> annot PLUS annot

State 475:
## Known stack suffix:
## annot MINUS
## LR(1) items:
agent_modif -> annot MINUS . annot [ error RAR PIPE LRAR COMMA AT ]
## Transitions:
-- On SPACE shift to state 19
-- On NEWLINE shift to state 20
-- On COMMENT shift to state 21
-- On annot shift to state 476
## Reductions:
-- On error reduce production annot ->
-- On RAR reduce production annot ->
-- On PIPE reduce production annot ->
-- On LRAR reduce production annot ->
-- On COMMA reduce production annot ->
-- On AT reduce production annot ->

State 476:
## Known stack suffix:
## annot MINUS annot
## LR(1) items:
agent_modif -> annot MINUS annot . [ error RAR PIPE LRAR COMMA AT ]
## Transitions:
## Reductions:
-- On error reduce production agent_modif -> annot MINUS annot
-- On RAR reduce production agent_modif -> annot MINUS annot
-- On PIPE reduce production agent_modif -> annot MINUS annot
-- On LRAR reduce production agent_modif -> annot MINUS annot
-- On COMMA reduce production agent_modif -> annot MINUS annot
-- On AT reduce production agent_modif -> annot MINUS annot

State 477:
## Known stack suffix:
## ID annot OP_PAR annot interface CL_PAR agent_modif
## LR(1) items:
agent -> ID annot OP_PAR annot interface CL_PAR agent_modif . [ error RAR PIPE LRAR COMMA AT ]
## Transitions:
## Reductions:
-- On error reduce production agent -> ID annot OP_PAR annot interface CL_PAR agent_modif
-- On RAR reduce production agent -> ID annot OP_PAR annot interface CL_PAR agent_modif
-- On PIPE reduce production agent -> ID annot OP_PAR annot interface CL_PAR agent_modif
-- On LRAR reduce production agent -> ID annot OP_PAR annot interface CL_PAR agent_modif
-- On COMMA reduce production agent -> ID annot OP_PAR annot interface CL_PAR agent_modif
-- On AT reduce production agent -> ID annot OP_PAR annot interface CL_PAR agent_modif

State 478:
## Known stack suffix:
## ID annot COLON
## LR(1) items:
agent -> ID annot COLON . annot ID annot OP_PAR annot interface CL_PAR agent_modif [ error RAR PIPE LRAR COMMA AT ]
## Transitions:
-- On SPACE shift to state 2
-- On NEWLINE shift to state 3
-- On COMMENT shift to state 4
-- On annot shift to state 479
## Reductions:
-- On ID reduce production annot ->

State 479:
## Known stack suffix:
## ID annot COLON annot
## LR(1) items:
agent -> ID annot COLON annot . ID annot OP_PAR annot interface CL_PAR agent_modif [ error RAR PIPE LRAR COMMA AT ]
## Transitions:
-- On ID shift to state 480
## Reductions:

State 480:
## Known stack suffix:
## ID annot COLON annot ID
## LR(1) items:
agent -> ID annot COLON annot ID . annot OP_PAR annot interface CL_PAR agent_modif [ error RAR PIPE LRAR COMMA AT ]
## Transitions:
-- On SPACE shift to state 2
-- On NEWLINE shift to state 3
-- On COMMENT shift to state 4
-- On annot shift to state 481
## Reductions:
-- On OP_PAR reduce production annot ->

State 481:
## Known stack suffix:
## ID annot COLON annot ID annot
## LR(1) items:
agent -> ID annot COLON annot ID annot . OP_PAR annot interface CL_PAR agent_modif [ error RAR PIPE LRAR COMMA AT ]
## Transitions:
-- On OP_PAR shift to state 482
## Reductions:

State 482:
## Known stack suffix:
## ID annot COLON annot ID annot OP_PAR
## LR(1) items:
agent -> ID annot COLON annot ID annot OP_PAR . annot interface CL_PAR agent_modif [ error RAR PIPE LRAR COMMA AT ]
## Transitions:
-- On SPACE shift to state 19
-- On NEWLINE shift to state 20
-- On COMMENT shift to state 21
-- On annot shift to state 483
## Reductions:
-- On error reduce production annot ->
-- On ID reduce production annot ->
-- On CL_PAR reduce production annot ->

State 483:
## Known stack suffix:
## ID annot COLON annot ID annot OP_PAR annot
## LR(1) items:
agent -> ID annot COLON annot ID annot OP_PAR annot . interface CL_PAR agent_modif [ error RAR PIPE LRAR COMMA AT ]
## Transitions:
-- On error shift to state 29
-- On ID shift to state 30
-- On site shift to state 128
-- On interface shift to state 484
## Reductions:
-- On CL_PAR reduce production interface ->

State 484:
## Known stack suffix:
## ID annot COLON annot ID annot OP_PAR annot interface
## LR(1) items:
agent -> ID annot COLON annot ID annot OP_PAR annot interface . CL_PAR agent_modif [ error RAR PIPE LRAR COMMA AT ]
## Transitions:
-- On CL_PAR shift to state 485
## Reductions:

State 485:
## Known stack suffix:
## ID annot COLON annot ID annot OP_PAR annot interface CL_PAR
## LR(1) items:
agent -> ID annot COLON annot ID annot OP_PAR annot interface CL_PAR . agent_modif [ error RAR PIPE LRAR COMMA AT ]
## Transitions:
-- On SPACE shift to state 19
-- On NEWLINE shift to state 20
-- On COMMENT shift to state 21
-- On annot shift to state 472
-- On agent_modif shift to state 486
## Reductions:
-- On error reduce production annot ->
-- On RAR reduce production annot ->
-- On PLUS reduce production annot ->
-- On PIPE reduce production annot ->
-- On MINUS reduce production annot ->
-- On LRAR reduce production annot ->
-- On COMMA reduce production annot ->
-- On AT reduce production annot ->

State 486:
## Known stack suffix:
## ID annot COLON annot ID annot OP_PAR annot interface CL_PAR agent_modif
## LR(1) items:
agent -> ID annot COLON annot ID annot OP_PAR annot interface CL_PAR agent_modif . [ error RAR PIPE LRAR COMMA AT ]
## Transitions:
## Reductions:
-- On error reduce production agent -> ID annot COLON annot ID annot OP_PAR annot interface CL_PAR agent_modif
-- On RAR reduce production agent -> ID annot COLON annot ID annot OP_PAR annot interface CL_PAR agent_modif
-- On PIPE reduce production agent -> ID annot COLON annot ID annot OP_PAR annot interface CL_PAR agent_modif
-- On LRAR reduce production agent -> ID annot COLON annot ID annot OP_PAR annot interface CL_PAR agent_modif
-- On COMMA reduce production agent -> ID annot COLON annot ID annot OP_PAR annot interface CL_PAR agent_modif
-- On AT reduce production agent -> ID annot COLON annot ID annot OP_PAR annot interface CL_PAR agent_modif

State 487:
## Known stack suffix:
## LABEL annot EQUAL
## LR(1) items:
sentence -> LABEL annot EQUAL . annot alg_expr [ TOKEN SIGNATURE RAR PLOT PIPE PERT OBS LRAR LET LABEL INIT ID EOF DOT CONFIG ]
## Transitions:
-- On SPACE shift to state 2
-- On NEWLINE shift to state 3
-- On COMMENT shift to state 4
-- On annot shift to state 488
## Reductions:
-- On TRUE reduce production annot ->
-- On TMAX reduce production annot ->
-- On TIME reduce production annot ->
-- On TAN reduce production annot ->
-- On SQRT reduce production annot ->
-- On SINUS reduce production annot ->
-- On PIPE reduce production annot ->
-- On OP_PAR reduce production annot ->
-- On NULL_EVENT reduce production annot ->
-- On NOT reduce production annot ->
-- On MINUS reduce production annot ->
-- On MIN reduce production annot ->
-- On MAX reduce production annot ->
-- On LOG reduce production annot ->
-- On LABEL reduce production annot ->
-- On INT reduce production annot ->
-- On INFINITY reduce production annot ->
-- On ID reduce production annot ->
-- On FLOAT reduce production annot ->
-- On FALSE reduce production annot ->
-- On EXPONENT reduce production annot ->
-- On EVENT reduce production annot ->
-- On EMAX reduce production annot ->
-- On CPUTIME reduce production annot ->
-- On COSINUS reduce production annot ->
-- On ABS reduce production annot ->

State 488:
## Known stack suffix:
## LABEL annot EQUAL annot
## LR(1) items:
sentence -> LABEL annot EQUAL annot . alg_expr [ TOKEN SIGNATURE RAR PLOT PIPE PERT OBS LRAR LET LABEL INIT ID EOF DOT CONFIG ]
## Transitions:
-- On TRUE shift to state 179
-- On TMAX shift to state 162
-- On TIME shift to state 163
-- On TAN shift to state 164
-- On SQRT shift to state 166
-- On SINUS shift to state 168
-- On PIPE shift to state 170
-- On OP_PAR shift to state 180
-- On NULL_EVENT shift to state 182
-- On NOT shift to state 183
-- On MINUS shift to state 189
-- On MIN shift to state 191
-- On MAX shift to state 193
-- On LOG shift to state 195
-- On LABEL shift to state 197
-- On INT shift to state 198
-- On INFINITY shift to state 199
-- On ID shift to state 200
-- On FLOAT shift to state 201
-- On FALSE shift to state 225
-- On EXPONENT shift to state 202
-- On EVENT shift to state 204
-- On EMAX shift to state 205
-- On CPUTIME shift to state 206
-- On COSINUS shift to state 207
-- On ABS shift to state 209
-- On variable shift to state 211
-- On small_bool_expr shift to state 226
-- On small_alg_expr shift to state 228
-- On nbr shift to state 213
-- On constant shift to state 214
-- On bool_expr_no_or shift to state 233
-- On bool_expr_comp shift to state 236
-- On bool_expr shift to state 255
-- On alg_expr_up_to_sum shift to state 240
-- On alg_expr_up_to_prod shift to state 251
-- On alg_expr_up_to_mod shift to state 247
-- On alg_expr_up_to_if shift to state 258
-- On alg_expr shift to state 489
## Reductions:

State 489:
## Known stack suffix:
## LABEL annot EQUAL annot alg_expr
## LR(1) items:
sentence -> LABEL annot EQUAL annot alg_expr . [ TOKEN SIGNATURE RAR PLOT PIPE PERT OBS LRAR LET LABEL INIT ID EOF DOT CONFIG ]
## Transitions:
## Reductions:
-- On TOKEN reduce production sentence -> LABEL annot EQUAL annot alg_expr
-- On SIGNATURE reduce production sentence -> LABEL annot EQUAL annot alg_expr
-- On RAR reduce production sentence -> LABEL annot EQUAL annot alg_expr
-- On PLOT reduce production sentence -> LABEL annot EQUAL annot alg_expr
-- On PIPE reduce production sentence -> LABEL annot EQUAL annot alg_expr
-- On PERT reduce production sentence -> LABEL annot EQUAL annot alg_expr
-- On OBS reduce production sentence -> LABEL annot EQUAL annot alg_expr
-- On LRAR reduce production sentence -> LABEL annot EQUAL annot alg_expr
-- On LET reduce production sentence -> LABEL annot EQUAL annot alg_expr
-- On LABEL reduce production sentence -> LABEL annot EQUAL annot alg_expr
-- On INIT reduce production sentence -> LABEL annot EQUAL annot alg_expr
-- On ID reduce production sentence -> LABEL annot EQUAL annot alg_expr
-- On EOF reduce production sentence -> LABEL annot EQUAL annot alg_expr
-- On DOT reduce production sentence -> LABEL annot EQUAL annot alg_expr
-- On CONFIG reduce production sentence -> LABEL annot EQUAL annot alg_expr

State 490:
## Known stack suffix:
## DOT
## LR(1) items:
agent -> DOT . annot [ error RAR PIPE LRAR COMMA AT ]
## Transitions:
-- On SPACE shift to state 19
-- On NEWLINE shift to state 20
-- On COMMENT shift to state 21
-- On annot shift to state 491
## Reductions:
-- On error reduce production annot ->
-- On RAR reduce production annot ->
-- On PIPE reduce production annot ->
-- On LRAR reduce production annot ->
-- On COMMA reduce production annot ->
-- On AT reduce production annot ->

State 491:
## Known stack suffix:
## DOT annot
## LR(1) items:
agent -> DOT annot . [ error RAR PIPE LRAR COMMA AT ]
## Transitions:
## Reductions:
-- On error reduce production agent -> DOT annot
-- On RAR reduce production agent -> DOT annot
-- On PIPE reduce production agent -> DOT annot
-- On LRAR reduce production agent -> DOT annot
-- On COMMA reduce production agent -> DOT annot
-- On AT reduce production agent -> DOT annot

State 492:
## Known stack suffix:
## rule_side
## LR(1) items:
rule_content -> rule_side . arrow annot rule_side [ error AT ]
rule_content -> rule_side . arrow annot [ error AT ]
rule_content -> rule_side . [ error AT ]
## Transitions:
-- On RAR shift to state 493
-- On LRAR shift to state 494
-- On arrow shift to state 495
## Reductions:
-- On error reduce production rule_content -> rule_side
-- On AT reduce production rule_content -> rule_side

State 493:
## Known stack suffix:
## RAR
## LR(1) items:
arrow -> RAR . [ error SPACE PIPE NEWLINE ID DOT COMMENT AT ]
## Transitions:
## Reductions:
-- On error reduce production arrow -> RAR
-- On SPACE reduce production arrow -> RAR
-- On PIPE reduce production arrow -> RAR
-- On NEWLINE reduce production arrow -> RAR
-- On ID reduce production arrow -> RAR
-- On DOT reduce production arrow -> RAR
-- On COMMENT reduce production arrow -> RAR
-- On AT reduce production arrow -> RAR

State 494:
## Known stack suffix:
## LRAR
## LR(1) items:
arrow -> LRAR . [ error SPACE PIPE NEWLINE ID DOT COMMENT AT ]
## Transitions:
## Reductions:
-- On error reduce production arrow -> LRAR
-- On SPACE reduce production arrow -> LRAR
-- On PIPE reduce production arrow -> LRAR
-- On NEWLINE reduce production arrow -> LRAR
-- On ID reduce production arrow -> LRAR
-- On DOT reduce production arrow -> LRAR
-- On COMMENT reduce production arrow -> LRAR
-- On AT reduce production arrow -> LRAR

State 495:
## Known stack suffix:
## rule_side arrow
## LR(1) items:
rule_content -> rule_side arrow . annot rule_side [ error AT ]
rule_content -> rule_side arrow . annot [ error AT ]
## Transitions:
-- On SPACE shift to state 19
-- On NEWLINE shift to state 20
-- On COMMENT shift to state 21
-- On annot shift to state 496
## Reductions:
-- On error reduce production annot ->
-- On PIPE reduce production annot ->
-- On ID reduce production annot ->
-- On DOT reduce production annot ->
-- On AT reduce production annot ->

State 496:
## Known stack suffix:
## rule_side arrow annot
## LR(1) items:
rule_content -> rule_side arrow annot . rule_side [ error AT ]
rule_content -> rule_side arrow annot . [ error AT ]
## Transitions:
-- On PIPE shift to state 404
-- On ID shift to state 465
-- On DOT shift to state 490
-- On rule_side shift to state 497
-- On pattern shift to state 498
-- On agent shift to state 503
## Reductions:
-- On error reduce production rule_content -> rule_side arrow annot
-- On AT reduce production rule_content -> rule_side arrow annot

State 497:
## Known stack suffix:
## rule_side arrow annot rule_side
## LR(1) items:
rule_content -> rule_side arrow annot rule_side . [ error AT ]
## Transitions:
## Reductions:
-- On error reduce production rule_content -> rule_side arrow annot rule_side
-- On AT reduce production rule_content -> rule_side arrow annot rule_side

State 498:
## Known stack suffix:
## pattern
## LR(1) items:
rule_side -> pattern . [ error RAR LRAR AT ]
rule_side -> pattern . PIPE annot sum_token [ error RAR LRAR AT ]
rule_side -> pattern . PIPE annot error [ error RAR LRAR AT ]
## Transitions:
-- On PIPE shift to state 499
## Reductions:
-- On error reduce production rule_side -> pattern
-- On RAR reduce production rule_side -> pattern
-- On LRAR reduce production rule_side -> pattern
-- On AT reduce production rule_side -> pattern

State 499:
## Known stack suffix:
## pattern PIPE
## LR(1) items:
rule_side -> pattern PIPE . annot sum_token [ error RAR LRAR AT ]
rule_side -> pattern PIPE . annot error [ error RAR LRAR AT ]
## Transitions:
-- On SPACE shift to state 19
-- On NEWLINE shift to state 20
-- On COMMENT shift to state 21
-- On annot shift to state 500
## Reductions:
-- On error reduce production annot ->
-- On TMAX reduce production annot ->
-- On TIME reduce production annot ->
-- On TAN reduce production annot ->
-- On SQRT reduce production annot ->
-- On SINUS reduce production annot ->
-- On PIPE reduce production annot ->
-- On OP_PAR reduce production annot ->
-- On NULL_EVENT reduce production annot ->
-- On MINUS reduce production annot ->
-- On MIN reduce production annot ->
-- On MAX reduce production annot ->
-- On LOG reduce production annot ->
-- On LABEL reduce production annot ->
-- On INT reduce production annot ->
-- On INFINITY reduce production annot ->
-- On ID reduce production annot ->
-- On FLOAT reduce production annot ->
-- On EXPONENT reduce production annot ->
-- On EVENT reduce production annot ->
-- On EMAX reduce production annot ->
-- On CPUTIME reduce production annot ->
-- On COSINUS reduce production annot ->
-- On ABS reduce production annot ->

State 500:
## Known stack suffix:
## pattern PIPE annot
## LR(1) items:
rule_side -> pattern PIPE annot . sum_token [ error RAR LRAR AT ]
rule_side -> pattern PIPE annot . error [ error RAR LRAR AT ]
## Transitions:
-- On error shift to state 501
-- On TMAX shift to state 162
-- On TIME shift to state 163
-- On TAN shift to state 164
-- On SQRT shift to state 166
-- On SINUS shift to state 168
-- On PIPE shift to state 170
-- On OP_PAR shift to state 177
-- On NULL_EVENT shift to state 182
-- On MINUS shift to state 189
-- On MIN shift to state 191
-- On MAX shift to state 193
-- On LOG shift to state 195
-- On LABEL shift to state 197
-- On INT shift to state 198
-- On INFINITY shift to state 199
-- On ID shift to state 200
-- On FLOAT shift to state 201
-- On EXPONENT shift to state 202
-- On EVENT shift to state 204
-- On EMAX shift to state 205
-- On CPUTIME shift to state 206
-- On COSINUS shift to state 207
-- On ABS shift to state 209
-- On variable shift to state 211
-- On sum_token shift to state 502
-- On small_alg_expr shift to state 408
-- On nbr shift to state 213
-- On constant shift to state 214
## Reductions:

State 501:
## Known stack suffix:
## pattern PIPE annot error
## LR(1) items:
rule_side -> pattern PIPE annot error . [ error RAR LRAR AT ]
## Transitions:
## Reductions:
-- On error reduce production rule_side -> pattern PIPE annot error
-- On RAR reduce production rule_side -> pattern PIPE annot error
-- On LRAR reduce production rule_side -> pattern PIPE annot error
-- On AT reduce production rule_side -> pattern PIPE annot error

State 502:
## Known stack suffix:
## pattern PIPE annot sum_token
## LR(1) items:
rule_side -> pattern PIPE annot sum_token . [ error RAR LRAR AT ]
## Transitions:
## Reductions:
-- On error reduce production rule_side -> pattern PIPE annot sum_token
-- On RAR reduce production rule_side -> pattern PIPE annot sum_token
-- On LRAR reduce production rule_side -> pattern PIPE annot sum_token
-- On AT reduce production rule_side -> pattern PIPE annot sum_token

State 503:
## Known stack suffix:
## agent
## LR(1) items:
pattern -> agent . COMMA annot pattern [ error RAR PIPE LRAR AT ]
pattern -> agent . [ error RAR PIPE LRAR AT ]
## Transitions:
-- On COMMA shift to state 504
## Reductions:
-- On error reduce production pattern -> agent
-- On RAR reduce production pattern -> agent
-- On PIPE reduce production pattern -> agent
-- On LRAR reduce production pattern -> agent
-- On AT reduce production pattern -> agent

State 504:
## Known stack suffix:
## agent COMMA
## LR(1) items:
pattern -> agent COMMA . annot pattern [ error RAR PIPE LRAR AT ]
## Transitions:
-- On SPACE shift to state 2
-- On NEWLINE shift to state 3
-- On COMMENT shift to state 4
-- On annot shift to state 505
## Reductions:
-- On ID reduce production annot ->
-- On DOT reduce production annot ->

State 505:
## Known stack suffix:
## agent COMMA annot
## LR(1) items:
pattern -> agent COMMA annot . pattern [ error RAR PIPE LRAR AT ]
## Transitions:
-- On ID shift to state 465
-- On DOT shift to state 490
-- On pattern shift to state 506
-- On agent shift to state 503
## Reductions:

State 506:
## Known stack suffix:
## agent COMMA annot pattern
## LR(1) items:
pattern -> agent COMMA annot pattern . [ error RAR PIPE LRAR AT ]
## Transitions:
## Reductions:
-- On error reduce production pattern -> agent COMMA annot pattern
-- On RAR reduce production pattern -> agent COMMA annot pattern
-- On PIPE reduce production pattern -> agent COMMA annot pattern
-- On LRAR reduce production pattern -> agent COMMA annot pattern
-- On AT reduce production pattern -> agent COMMA annot pattern

State 507:
## Known stack suffix:
## rule_content
## LR(1) items:
rule -> rule_content . birate [ TOKEN SIGNATURE RAR PLOT PIPE PERT OBS LRAR LET LABEL INIT ID EOF DOT CONFIG ]
rule -> rule_content . error [ TOKEN SIGNATURE RAR PLOT PIPE PERT OBS LRAR LET LABEL INIT ID EOF DOT CONFIG ]
## Transitions:
-- On error shift to state 508
-- On AT shift to state 509
-- On birate shift to state 531
## Reductions:

State 508:
## Known stack suffix:
## rule_content error
## LR(1) items:
rule -> rule_content error . [ TOKEN SIGNATURE RAR PLOT PIPE PERT OBS LRAR LET LABEL INIT ID EOF DOT CONFIG ]
## Transitions:
## Reductions:
-- On TOKEN reduce production rule -> rule_content error
-- On SIGNATURE reduce production rule -> rule_content error
-- On RAR reduce production rule -> rule_content error
-- On PLOT reduce production rule -> rule_content error
-- On PIPE reduce production rule -> rule_content error
-- On PERT reduce production rule -> rule_content error
-- On OBS reduce production rule -> rule_content error
-- On LRAR reduce production rule -> rule_content error
-- On LET reduce production rule -> rule_content error
-- On LABEL reduce production rule -> rule_content error
-- On INIT reduce production rule -> rule_content error
-- On ID reduce production rule -> rule_content error
-- On EOF reduce production rule -> rule_content error
-- On DOT reduce production rule -> rule_content error
-- On CONFIG reduce production rule -> rule_content error

State 509:
## Known stack suffix:
## AT
## LR(1) items:
birate -> AT . annot rate [ TOKEN SIGNATURE RAR PLOT PIPE PERT OBS LRAR LET LABEL INIT ID EOF DOT CONFIG ]
birate -> AT . annot rate COMMA annot rate [ TOKEN SIGNATURE RAR PLOT PIPE PERT OBS LRAR LET LABEL INIT ID EOF DOT CONFIG ]
## Transitions:
-- On SPACE shift to state 2
-- On NEWLINE shift to state 3
-- On COMMENT shift to state 4
-- On annot shift to state 510
## Reductions:
-- On TRUE reduce production annot ->
-- On TMAX reduce production annot ->
-- On TIME reduce production annot ->
-- On TAN reduce production annot ->
-- On SQRT reduce production annot ->
-- On SINUS reduce production annot ->
-- On PIPE reduce production annot ->
-- On OP_PAR reduce production annot ->
-- On OP_CUR reduce production annot ->
-- On NULL_EVENT reduce production annot ->
-- On NOT reduce production annot ->
-- On MINUS reduce production annot ->
-- On MIN reduce production annot ->
-- On MAX reduce production annot ->
-- On LOG reduce production annot ->
-- On LABEL reduce production annot ->
-- On INT reduce production annot ->
-- On INFINITY reduce production annot ->
-- On ID reduce production annot ->
-- On FLOAT reduce production annot ->
-- On FALSE reduce production annot ->
-- On EXPONENT reduce production annot ->
-- On EVENT reduce production annot ->
-- On EMAX reduce production annot ->
-- On CPUTIME reduce production annot ->
-- On COSINUS reduce production annot ->
-- On ABS reduce production annot ->

State 510:
## Known stack suffix:
## AT annot
## LR(1) items:
birate -> AT annot . rate [ TOKEN SIGNATURE RAR PLOT PIPE PERT OBS LRAR LET LABEL INIT ID EOF DOT CONFIG ]
birate -> AT annot . rate COMMA annot rate [ TOKEN SIGNATURE RAR PLOT PIPE PERT OBS LRAR LET LABEL INIT ID EOF DOT CONFIG ]
## Transitions:
-- On TRUE shift to state 179
-- On TMAX shift to state 162
-- On TIME shift to state 163
-- On TAN shift to state 164
-- On SQRT shift to state 166
-- On SINUS shift to state 168
-- On PIPE shift to state 170
-- On OP_PAR shift to state 180
-- On OP_CUR shift to state 511
-- On NULL_EVENT shift to state 182
-- On NOT shift to state 183
-- On MINUS shift to state 189
-- On MIN shift to state 191
-- On MAX shift to state 193
-- On LOG shift to state 195
-- On LABEL shift to state 197
-- On INT shift to state 198
-- On INFINITY shift to state 199
-- On ID shift to state 200
-- On FLOAT shift to state 201
-- On FALSE shift to state 225
-- On EXPONENT shift to state 202
-- On EVENT shift to state 204
-- On EMAX shift to state 205
-- On CPUTIME shift to state 206
-- On COSINUS shift to state 207
-- On ABS shift to state 209
-- On variable shift to state 211
-- On small_bool_expr shift to state 226
-- On small_alg_expr shift to state 228
-- On rate shift to state 521
-- On nbr shift to state 213
-- On constant shift to state 214
-- On bool_expr_no_or shift to state 233
-- On bool_expr_comp shift to state 236
-- On bool_expr shift to state 255
-- On alg_expr_up_to_sum shift to state 240
-- On alg_expr_up_to_prod shift to state 251
-- On alg_expr_up_to_mod shift to state 247
-- On alg_expr_up_to_if shift to state 258
-- On alg_expr shift to state 525
## Reductions:

State 511:
## Known stack suffix:
## OP_CUR
## LR(1) items:
rate -> OP_CUR . annot alg_with_radius CL_CUR annot alg_expr [ TOKEN SIGNATURE RAR PLOT PIPE PERT OBS LRAR LET LABEL INIT ID EOF DOT CONFIG COMMA ]
## Transitions:
-- On SPACE shift to state 2
-- On NEWLINE shift to state 3
-- On COMMENT shift to state 4
-- On annot shift to state 512
## Reductions:
-- On TRUE reduce production annot ->
-- On TMAX reduce production annot ->
-- On TIME reduce production annot ->
-- On TAN reduce production annot ->
-- On SQRT reduce production annot ->
-- On SINUS reduce production annot ->
-- On PIPE reduce production annot ->
-- On OP_PAR reduce production annot ->
-- On NULL_EVENT reduce production annot ->
-- On NOT reduce production annot ->
-- On MINUS reduce production annot ->
-- On MIN reduce production annot ->
-- On MAX reduce production annot ->
-- On LOG reduce production annot ->
-- On LABEL reduce production annot ->
-- On INT reduce production annot ->
-- On INFINITY reduce production annot ->
-- On ID reduce production annot ->
-- On FLOAT reduce production annot ->
-- On FALSE reduce production annot ->
-- On EXPONENT reduce production annot ->
-- On EVENT reduce production annot ->
-- On EMAX reduce production annot ->
-- On CPUTIME reduce production annot ->
-- On COSINUS reduce production annot ->
-- On ABS reduce production annot ->

State 512:
## Known stack suffix:
## OP_CUR annot
## LR(1) items:
rate -> OP_CUR annot . alg_with_radius CL_CUR annot alg_expr [ TOKEN SIGNATURE RAR PLOT PIPE PERT OBS LRAR LET LABEL INIT ID EOF DOT CONFIG COMMA ]
## Transitions:
-- On TRUE shift to state 179
-- On TMAX shift to state 162
-- On TIME shift to state 163
-- On TAN shift to state 164
-- On SQRT shift to state 166
-- On SINUS shift to state 168
-- On PIPE shift to state 170
-- On OP_PAR shift to state 187
-- On NULL_EVENT shift to state 182
-- On NOT shift to state 183
-- On MINUS shift to state 189
-- On MIN shift to state 191
-- On MAX shift to state 193
-- On LOG shift to state 195
-- On LABEL shift to state 197
-- On INT shift to state 198
-- On INFINITY shift to state 199
-- On ID shift to state 200
-- On FLOAT shift to state 201
-- On FALSE shift to state 225
-- On EXPONENT shift to state 202
-- On EVENT shift to state 204
-- On EMAX shift to state 205
-- On CPUTIME shift to state 206
-- On COSINUS shift to state 207
-- On ABS shift to state 209
-- On variable shift to state 211
-- On small_bool_expr shift to state 226
-- On small_alg_expr shift to state 228
-- On nbr shift to state 213
-- On constant shift to state 214
-- On bool_expr_no_or shift to state 233
-- On bool_expr_comp shift to state 236
-- On bool_expr shift to state 255
-- On alg_with_radius shift to state 513
-- On alg_expr_up_to_sum shift to state 240
-- On alg_expr_up_to_prod shift to state 251
-- On alg_expr_up_to_mod shift to state 247
-- On alg_expr_up_to_if shift to state 258
-- On alg_expr shift to state 517
## Reductions:

State 513:
## Known stack suffix:
## OP_CUR annot alg_with_radius
## LR(1) items:
rate -> OP_CUR annot alg_with_radius . CL_CUR annot alg_expr [ TOKEN SIGNATURE RAR PLOT PIPE PERT OBS LRAR LET LABEL INIT ID EOF DOT CONFIG COMMA ]
## Transitions:
-- On CL_CUR shift to state 514
## Reductions:

State 514:
## Known stack suffix:
## OP_CUR annot alg_with_radius CL_CUR
## LR(1) items:
rate -> OP_CUR annot alg_with_radius CL_CUR . annot alg_expr [ TOKEN SIGNATURE RAR PLOT PIPE PERT OBS LRAR LET LABEL INIT ID EOF DOT CONFIG COMMA ]
## Transitions:
-- On SPACE shift to state 2
-- On NEWLINE shift to state 3
-- On COMMENT shift to state 4
-- On annot shift to state 515
## Reductions:
-- On TRUE reduce production annot ->
-- On TMAX reduce production annot ->
-- On TIME reduce production annot ->
-- On TAN reduce production annot ->
-- On SQRT reduce production annot ->
-- On SINUS reduce production annot ->
-- On PIPE reduce production annot ->
-- On OP_PAR reduce production annot ->
-- On NULL_EVENT reduce production annot ->
-- On NOT reduce production annot ->
-- On MINUS reduce production annot ->
-- On MIN reduce production annot ->
-- On MAX reduce production annot ->
-- On LOG reduce production annot ->
-- On LABEL reduce production annot ->
-- On INT reduce production annot ->
-- On INFINITY reduce production annot ->
-- On ID reduce production annot ->
-- On FLOAT reduce production annot ->
-- On FALSE reduce production annot ->
-- On EXPONENT reduce production annot ->
-- On EVENT reduce production annot ->
-- On EMAX reduce production annot ->
-- On CPUTIME reduce production annot ->
-- On COSINUS reduce production annot ->
-- On ABS reduce production annot ->

State 515:
## Known stack suffix:
## OP_CUR annot alg_with_radius CL_CUR annot
## LR(1) items:
rate -> OP_CUR annot alg_with_radius CL_CUR annot . alg_expr [ TOKEN SIGNATURE RAR PLOT PIPE PERT OBS LRAR LET LABEL INIT ID EOF DOT CONFIG COMMA ]
## Transitions:
-- On TRUE shift to state 179
-- On TMAX shift to state 162
-- On TIME shift to state 163
-- On TAN shift to state 164
-- On SQRT shift to state 166
-- On SINUS shift to state 168
-- On PIPE shift to state 170
-- On OP_PAR shift to state 180
-- On NULL_EVENT shift to state 182
-- On NOT shift to state 183
-- On MINUS shift to state 189
-- On MIN shift to state 191
-- On MAX shift to state 193
-- On LOG shift to state 195
-- On LABEL shift to state 197
-- On INT shift to state 198
-- On INFINITY shift to state 199
-- On ID shift to state 200
-- On FLOAT shift to state 201
-- On FALSE shift to state 225
-- On EXPONENT shift to state 202
-- On EVENT shift to state 204
-- On EMAX shift to state 205
-- On CPUTIME shift to state 206
-- On COSINUS shift to state 207
-- On ABS shift to state 209
-- On variable shift to state 211
-- On small_bool_expr shift to state 226
-- On small_alg_expr shift to state 228
-- On nbr shift to state 213
-- On constant shift to state 214
-- On bool_expr_no_or shift to state 233
-- On bool_expr_comp shift to state 236
-- On bool_expr shift to state 255
-- On alg_expr_up_to_sum shift to state 240
-- On alg_expr_up_to_prod shift to state 251
-- On alg_expr_up_to_mod shift to state 247
-- On alg_expr_up_to_if shift to state 258
-- On alg_expr shift to state 516
## Reductions:

State 516:
## Known stack suffix:
## OP_CUR annot alg_with_radius CL_CUR annot alg_expr
## LR(1) items:
rate -> OP_CUR annot alg_with_radius CL_CUR annot alg_expr . [ TOKEN SIGNATURE RAR PLOT PIPE PERT OBS LRAR LET LABEL INIT ID EOF DOT CONFIG COMMA ]
## Transitions:
## Reductions:
-- On TOKEN reduce production rate -> OP_CUR annot alg_with_radius CL_CUR annot alg_expr
-- On SIGNATURE reduce production rate -> OP_CUR annot alg_with_radius CL_CUR annot alg_expr
-- On RAR reduce production rate -> OP_CUR annot alg_with_radius CL_CUR annot alg_expr
-- On PLOT reduce production rate -> OP_CUR annot alg_with_radius CL_CUR annot alg_expr
-- On PIPE reduce production rate -> OP_CUR annot alg_with_radius CL_CUR annot alg_expr
-- On PERT reduce production rate -> OP_CUR annot alg_with_radius CL_CUR annot alg_expr
-- On OBS reduce production rate -> OP_CUR annot alg_with_radius CL_CUR annot alg_expr
-- On LRAR reduce production rate -> OP_CUR annot alg_with_radius CL_CUR annot alg_expr
-- On LET reduce production rate -> OP_CUR annot alg_with_radius CL_CUR annot alg_expr
-- On LABEL reduce production rate -> OP_CUR annot alg_with_radius CL_CUR annot alg_expr
-- On INIT reduce production rate -> OP_CUR annot alg_with_radius CL_CUR annot alg_expr
-- On ID reduce production rate -> OP_CUR annot alg_with_radius CL_CUR annot alg_expr
-- On EOF reduce production rate -> OP_CUR annot alg_with_radius CL_CUR annot alg_expr
-- On DOT reduce production rate -> OP_CUR annot alg_with_radius CL_CUR annot alg_expr
-- On CONFIG reduce production rate -> OP_CUR annot alg_with_radius CL_CUR annot alg_expr
-- On COMMA reduce production rate -> OP_CUR annot alg_with_radius CL_CUR annot alg_expr

State 517:
## Known stack suffix:
## alg_expr
## LR(1) items:
alg_with_radius -> alg_expr . [ CL_CUR ]
alg_with_radius -> alg_expr . COLON annot alg_expr [ CL_CUR ]
## Transitions:
-- On COLON shift to state 518
## Reductions:
-- On CL_CUR reduce production alg_with_radius -> alg_expr

State 518:
## Known stack suffix:
## alg_expr COLON
## LR(1) items:
alg_with_radius -> alg_expr COLON . annot alg_expr [ CL_CUR ]
## Transitions:
-- On SPACE shift to state 2
-- On NEWLINE shift to state 3
-- On COMMENT shift to state 4
-- On annot shift to state 519
## Reductions:
-- On TRUE reduce production annot ->
-- On TMAX reduce production annot ->
-- On TIME reduce production annot ->
-- On TAN reduce production annot ->
-- On SQRT reduce production annot ->
-- On SINUS reduce production annot ->
-- On PIPE reduce production annot ->
-- On OP_PAR reduce production annot ->
-- On NULL_EVENT reduce production annot ->
-- On NOT reduce production annot ->
-- On MINUS reduce production annot ->
-- On MIN reduce production annot ->
-- On MAX reduce production annot ->
-- On LOG reduce production annot ->
-- On LABEL reduce production annot ->
-- On INT reduce production annot ->
-- On INFINITY reduce production annot ->
-- On ID reduce production annot ->
-- On FLOAT reduce production annot ->
-- On FALSE reduce production annot ->
-- On EXPONENT reduce production annot ->
-- On EVENT reduce production annot ->
-- On EMAX reduce production annot ->
-- On CPUTIME reduce production annot ->
-- On COSINUS reduce production annot ->
-- On ABS reduce production annot ->

State 519:
## Known stack suffix:
## alg_expr COLON annot
## LR(1) items:
alg_with_radius -> alg_expr COLON annot . alg_expr [ CL_CUR ]
## Transitions:
-- On TRUE shift to state 179
-- On TMAX shift to state 162
-- On TIME shift to state 163
-- On TAN shift to state 164
-- On SQRT shift to state 166
-- On SINUS shift to state 168
-- On PIPE shift to state 170
-- On OP_PAR shift to state 187
-- On NULL_EVENT shift to state 182
-- On NOT shift to state 183
-- On MINUS shift to state 189
-- On MIN shift to state 191
-- On MAX shift to state 193
-- On LOG shift to state 195
-- On LABEL shift to state 197
-- On INT shift to state 198
-- On INFINITY shift to state 199
-- On ID shift to state 200
-- On FLOAT shift to state 201
-- On FALSE shift to state 225
-- On EXPONENT shift to state 202
-- On EVENT shift to state 204
-- On EMAX shift to state 205
-- On CPUTIME shift to state 206
-- On COSINUS shift to state 207
-- On ABS shift to state 209
-- On variable shift to state 211
-- On small_bool_expr shift to state 226
-- On small_alg_expr shift to state 228
-- On nbr shift to state 213
-- On constant shift to state 214
-- On bool_expr_no_or shift to state 233
-- On bool_expr_comp shift to state 236
-- On bool_expr shift to state 255
-- On alg_expr_up_to_sum shift to state 240
-- On alg_expr_up_to_prod shift to state 251
-- On alg_expr_up_to_mod shift to state 247
-- On alg_expr_up_to_if shift to state 258
-- On alg_expr shift to state 520
## Reductions:

State 520:
## Known stack suffix:
## alg_expr COLON annot alg_expr
## LR(1) items:
alg_with_radius -> alg_expr COLON annot alg_expr . [ CL_CUR ]
## Transitions:
## Reductions:
-- On CL_CUR reduce production alg_with_radius -> alg_expr COLON annot alg_expr

State 521:
## Known stack suffix:
## AT annot rate
## LR(1) items:
birate -> AT annot rate . [ TOKEN SIGNATURE RAR PLOT PIPE PERT OBS LRAR LET LABEL INIT ID EOF DOT CONFIG ]
birate -> AT annot rate . COMMA annot rate [ TOKEN SIGNATURE RAR PLOT PIPE PERT OBS LRAR LET LABEL INIT ID EOF DOT CONFIG ]
## Transitions:
-- On COMMA shift to state 522
## Reductions:
-- On TOKEN reduce production birate -> AT annot rate
-- On SIGNATURE reduce production birate -> AT annot rate
-- On RAR reduce production birate -> AT annot rate
-- On PLOT reduce production birate -> AT annot rate
-- On PIPE reduce production birate -> AT annot rate
-- On PERT reduce production birate -> AT annot rate
-- On OBS reduce production birate -> AT annot rate
-- On LRAR reduce production birate -> AT annot rate
-- On LET reduce production birate -> AT annot rate
-- On LABEL reduce production birate -> AT annot rate
-- On INIT reduce production birate -> AT annot rate
-- On ID reduce production birate -> AT annot rate
-- On EOF reduce production birate -> AT annot rate
-- On DOT reduce production birate -> AT annot rate
-- On CONFIG reduce production birate -> AT annot rate

State 522:
## Known stack suffix:
## AT annot rate COMMA
## LR(1) items:
birate -> AT annot rate COMMA . annot rate [ TOKEN SIGNATURE RAR PLOT PIPE PERT OBS LRAR LET LABEL INIT ID EOF DOT CONFIG ]
## Transitions:
-- On SPACE shift to state 2
-- On NEWLINE shift to state 3
-- On COMMENT shift to state 4
-- On annot shift to state 523
## Reductions:
-- On TRUE reduce production annot ->
-- On TMAX reduce production annot ->
-- On TIME reduce production annot ->
-- On TAN reduce production annot ->
-- On SQRT reduce production annot ->
-- On SINUS reduce production annot ->
-- On PIPE reduce production annot ->
-- On OP_PAR reduce production annot ->
-- On OP_CUR reduce production annot ->
-- On NULL_EVENT reduce production annot ->
-- On NOT reduce production annot ->
-- On MINUS reduce production annot ->
-- On MIN reduce production annot ->
-- On MAX reduce production annot ->
-- On LOG reduce production annot ->
-- On LABEL reduce production annot ->
-- On INT reduce production annot ->
-- On INFINITY reduce production annot ->
-- On ID reduce production annot ->
-- On FLOAT reduce production annot ->
-- On FALSE reduce production annot ->
-- On EXPONENT reduce production annot ->
-- On EVENT reduce production annot ->
-- On EMAX reduce production annot ->
-- On CPUTIME reduce production annot ->
-- On COSINUS reduce production annot ->
-- On ABS reduce production annot ->

State 523:
## Known stack suffix:
## AT annot rate COMMA annot
## LR(1) items:
birate -> AT annot rate COMMA annot . rate [ TOKEN SIGNATURE RAR PLOT PIPE PERT OBS LRAR LET LABEL INIT ID EOF DOT CONFIG ]
## Transitions:
-- On TRUE shift to state 179
-- On TMAX shift to state 162
-- On TIME shift to state 163
-- On TAN shift to state 164
-- On SQRT shift to state 166
-- On SINUS shift to state 168
-- On PIPE shift to state 170
-- On OP_PAR shift to state 180
-- On OP_CUR shift to state 511
-- On NULL_EVENT shift to state 182
-- On NOT shift to state 183
-- On MINUS shift to state 189
-- On MIN shift to state 191
-- On MAX shift to state 193
-- On LOG shift to state 195
-- On LABEL shift to state 197
-- On INT shift to state 198
-- On INFINITY shift to state 199
-- On ID shift to state 200
-- On FLOAT shift to state 201
-- On FALSE shift to state 225
-- On EXPONENT shift to state 202
-- On EVENT shift to state 204
-- On EMAX shift to state 205
-- On CPUTIME shift to state 206
-- On COSINUS shift to state 207
-- On ABS shift to state 209
-- On variable shift to state 211
-- On small_bool_expr shift to state 226
-- On small_alg_expr shift to state 228
-- On rate shift to state 524
-- On nbr shift to state 213
-- On constant shift to state 214
-- On bool_expr_no_or shift to state 233
-- On bool_expr_comp shift to state 236
-- On bool_expr shift to state 255
-- On alg_expr_up_to_sum shift to state 240
-- On alg_expr_up_to_prod shift to state 251
-- On alg_expr_up_to_mod shift to state 247
-- On alg_expr_up_to_if shift to state 258
-- On alg_expr shift to state 525
## Reductions:

State 524:
## Known stack suffix:
## AT annot rate COMMA annot rate
## LR(1) items:
birate -> AT annot rate COMMA annot rate . [ TOKEN SIGNATURE RAR PLOT PIPE PERT OBS LRAR LET LABEL INIT ID EOF DOT CONFIG ]
## Transitions:
## Reductions:
-- On TOKEN reduce production birate -> AT annot rate COMMA annot rate
-- On SIGNATURE reduce production birate -> AT annot rate COMMA annot rate
-- On RAR reduce production birate -> AT annot rate COMMA annot rate
-- On PLOT reduce production birate -> AT annot rate COMMA annot rate
-- On PIPE reduce production birate -> AT annot rate COMMA annot rate
-- On PERT reduce production birate -> AT annot rate COMMA annot rate
-- On OBS reduce production birate -> AT annot rate COMMA annot rate
-- On LRAR reduce production birate -> AT annot rate COMMA annot rate
-- On LET reduce production birate -> AT annot rate COMMA annot rate
-- On LABEL reduce production birate -> AT annot rate COMMA annot rate
-- On INIT reduce production birate -> AT annot rate COMMA annot rate
-- On ID reduce production birate -> AT annot rate COMMA annot rate
-- On EOF reduce production birate -> AT annot rate COMMA annot rate
-- On DOT reduce production birate -> AT annot rate COMMA annot rate
-- On CONFIG reduce production birate -> AT annot rate COMMA annot rate

State 525:
## Known stack suffix:
## alg_expr
## LR(1) items:
rate -> alg_expr . OP_CUR annot alg_with_radius CL_CUR annot [ TOKEN SIGNATURE RAR PLOT PIPE PERT OBS LRAR LET LABEL INIT ID EOF DOT CONFIG COMMA ]
rate -> alg_expr . [ TOKEN SIGNATURE RAR PLOT PIPE PERT OBS LRAR LET LABEL INIT ID EOF DOT CONFIG COMMA ]
## Transitions:
-- On OP_CUR shift to state 526
## Reductions:
-- On TOKEN reduce production rate -> alg_expr
-- On SIGNATURE reduce production rate -> alg_expr
-- On RAR reduce production rate -> alg_expr
-- On PLOT reduce production rate -> alg_expr
-- On PIPE reduce production rate -> alg_expr
-- On PERT reduce production rate -> alg_expr
-- On OBS reduce production rate -> alg_expr
-- On LRAR reduce production rate -> alg_expr
-- On LET reduce production rate -> alg_expr
-- On LABEL reduce production rate -> alg_expr
-- On INIT reduce production rate -> alg_expr
-- On ID reduce production rate -> alg_expr
-- On EOF reduce production rate -> alg_expr
-- On DOT reduce production rate -> alg_expr
-- On CONFIG reduce production rate -> alg_expr
-- On COMMA reduce production rate -> alg_expr

State 526:
## Known stack suffix:
## alg_expr OP_CUR
## LR(1) items:
rate -> alg_expr OP_CUR . annot alg_with_radius CL_CUR annot [ TOKEN SIGNATURE RAR PLOT PIPE PERT OBS LRAR LET LABEL INIT ID EOF DOT CONFIG COMMA ]
## Transitions:
-- On SPACE shift to state 2
-- On NEWLINE shift to state 3
-- On COMMENT shift to state 4
-- On annot shift to state 527
## Reductions:
-- On TRUE reduce production annot ->
-- On TMAX reduce production annot ->
-- On TIME reduce production annot ->
-- On TAN reduce production annot ->
-- On SQRT reduce production annot ->
-- On SINUS reduce production annot ->
-- On PIPE reduce production annot ->
-- On OP_PAR reduce production annot ->
-- On NULL_EVENT reduce production annot ->
-- On NOT reduce production annot ->
-- On MINUS reduce production annot ->
-- On MIN reduce production annot ->
-- On MAX reduce production annot ->
-- On LOG reduce production annot ->
-- On LABEL reduce production annot ->
-- On INT reduce production annot ->
-- On INFINITY reduce production annot ->
-- On ID reduce production annot ->
-- On FLOAT reduce production annot ->
-- On FALSE reduce production annot ->
-- On EXPONENT reduce production annot ->
-- On EVENT reduce production annot ->
-- On EMAX reduce production annot ->
-- On CPUTIME reduce production annot ->
-- On COSINUS reduce production annot ->
-- On ABS reduce production annot ->

State 527:
## Known stack suffix:
## alg_expr OP_CUR annot
## LR(1) items:
rate -> alg_expr OP_CUR annot . alg_with_radius CL_CUR annot [ TOKEN SIGNATURE RAR PLOT PIPE PERT OBS LRAR LET LABEL INIT ID EOF DOT CONFIG COMMA ]
## Transitions:
-- On TRUE shift to state 179
-- On TMAX shift to state 162
-- On TIME shift to state 163
-- On TAN shift to state 164
-- On SQRT shift to state 166
-- On SINUS shift to state 168
-- On PIPE shift to state 170
-- On OP_PAR shift to state 187
-- On NULL_EVENT shift to state 182
-- On NOT shift to state 183
-- On MINUS shift to state 189
-- On MIN shift to state 191
-- On MAX shift to state 193
-- On LOG shift to state 195
-- On LABEL shift to state 197
-- On INT shift to state 198
-- On INFINITY shift to state 199
-- On ID shift to state 200
-- On FLOAT shift to state 201
-- On FALSE shift to state 225
-- On EXPONENT shift to state 202
-- On EVENT shift to state 204
-- On EMAX shift to state 205
-- On CPUTIME shift to state 206
-- On COSINUS shift to state 207
-- On ABS shift to state 209
-- On variable shift to state 211
-- On small_bool_expr shift to state 226
-- On small_alg_expr shift to state 228
-- On nbr shift to state 213
-- On constant shift to state 214
-- On bool_expr_no_or shift to state 233
-- On bool_expr_comp shift to state 236
-- On bool_expr shift to state 255
-- On alg_with_radius shift to state 528
-- On alg_expr_up_to_sum shift to state 240
-- On alg_expr_up_to_prod shift to state 251
-- On alg_expr_up_to_mod shift to state 247
-- On alg_expr_up_to_if shift to state 258
-- On alg_expr shift to state 517
## Reductions:

State 528:
## Known stack suffix:
## alg_expr OP_CUR annot alg_with_radius
## LR(1) items:
rate -> alg_expr OP_CUR annot alg_with_radius . CL_CUR annot [ TOKEN SIGNATURE RAR PLOT PIPE PERT OBS LRAR LET LABEL INIT ID EOF DOT CONFIG COMMA ]
## Transitions:
-- On CL_CUR shift to state 529
## Reductions:

State 529:
## Known stack suffix:
## alg_expr OP_CUR annot alg_with_radius CL_CUR
## LR(1) items:
rate -> alg_expr OP_CUR annot alg_with_radius CL_CUR . annot [ TOKEN SIGNATURE RAR PLOT PIPE PERT OBS LRAR LET LABEL INIT ID EOF DOT CONFIG COMMA ]
## Transitions:
-- On SPACE shift to state 2
-- On NEWLINE shift to state 3
-- On COMMENT shift to state 4
-- On annot shift to state 530
## Reductions:
-- On TOKEN reduce production annot ->
-- On SIGNATURE reduce production annot ->
-- On RAR reduce production annot ->
-- On PLOT reduce production annot ->
-- On PIPE reduce production annot ->
-- On PERT reduce production annot ->
-- On OBS reduce production annot ->
-- On LRAR reduce production annot ->
-- On LET reduce production annot ->
-- On LABEL reduce production annot ->
-- On INIT reduce production annot ->
-- On ID reduce production annot ->
-- On EOF reduce production annot ->
-- On DOT reduce production annot ->
-- On CONFIG reduce production annot ->
-- On COMMA reduce production annot ->

State 530:
## Known stack suffix:
## alg_expr OP_CUR annot alg_with_radius CL_CUR annot
## LR(1) items:
rate -> alg_expr OP_CUR annot alg_with_radius CL_CUR annot . [ TOKEN SIGNATURE RAR PLOT PIPE PERT OBS LRAR LET LABEL INIT ID EOF DOT CONFIG COMMA ]
## Transitions:
## Reductions:
-- On TOKEN reduce production rate -> alg_expr OP_CUR annot alg_with_radius CL_CUR annot
-- On SIGNATURE reduce production rate -> alg_expr OP_CUR annot alg_with_radius CL_CUR annot
-- On RAR reduce production rate -> alg_expr OP_CUR annot alg_with_radius CL_CUR annot
-- On PLOT reduce production rate -> alg_expr OP_CUR annot alg_with_radius CL_CUR annot
-- On PIPE reduce production rate -> alg_expr OP_CUR annot alg_with_radius CL_CUR annot
-- On PERT reduce production rate -> alg_expr OP_CUR annot alg_with_radius CL_CUR annot
-- On OBS reduce production rate -> alg_expr OP_CUR annot alg_with_radius CL_CUR annot
-- On LRAR reduce production rate -> alg_expr OP_CUR annot alg_with_radius CL_CUR annot
-- On LET reduce production rate -> alg_expr OP_CUR annot alg_with_radius CL_CUR annot
-- On LABEL reduce production rate -> alg_expr OP_CUR annot alg_with_radius CL_CUR annot
-- On INIT reduce production rate -> alg_expr OP_CUR annot alg_with_radius CL_CUR annot
-- On ID reduce production rate -> alg_expr OP_CUR annot alg_with_radius CL_CUR annot
-- On EOF reduce production rate -> alg_expr OP_CUR annot alg_with_radius CL_CUR annot
-- On DOT reduce production rate -> alg_expr OP_CUR annot alg_with_radius CL_CUR annot
-- On CONFIG reduce production rate -> alg_expr OP_CUR annot alg_with_radius CL_CUR annot
-- On COMMA reduce production rate -> alg_expr OP_CUR annot alg_with_radius CL_CUR annot

State 531:
## Known stack suffix:
## rule_content birate
## LR(1) items:
rule -> rule_content birate . [ TOKEN SIGNATURE RAR PLOT PIPE PERT OBS LRAR LET LABEL INIT ID EOF DOT CONFIG ]
## Transitions:
## Reductions:
-- On TOKEN reduce production rule -> rule_content birate
-- On SIGNATURE reduce production rule -> rule_content birate
-- On RAR reduce production rule -> rule_content birate
-- On PLOT reduce production rule -> rule_content birate
-- On PIPE reduce production rule -> rule_content birate
-- On PERT reduce production rule -> rule_content birate
-- On OBS reduce production rule -> rule_content birate
-- On LRAR reduce production rule -> rule_content birate
-- On LET reduce production rule -> rule_content birate
-- On LABEL reduce production rule -> rule_content birate
-- On INIT reduce production rule -> rule_content birate
-- On ID reduce production rule -> rule_content birate
-- On EOF reduce production rule -> rule_content birate
-- On DOT reduce production rule -> rule_content birate
-- On CONFIG reduce production rule -> rule_content birate

State 532:
## Known stack suffix:
## LABEL annot rule
## LR(1) items:
sentence -> LABEL annot rule . [ TOKEN SIGNATURE RAR PLOT PIPE PERT OBS LRAR LET LABEL INIT ID EOF DOT CONFIG ]
## Transitions:
## Reductions:
-- On TOKEN reduce production sentence -> LABEL annot rule
-- On SIGNATURE reduce production sentence -> LABEL annot rule
-- On RAR reduce production sentence -> LABEL annot rule
-- On PLOT reduce production sentence -> LABEL annot rule
-- On PIPE reduce production sentence -> LABEL annot rule
-- On PERT reduce production sentence -> LABEL annot rule
-- On OBS reduce production sentence -> LABEL annot rule
-- On LRAR reduce production sentence -> LABEL annot rule
-- On LET reduce production sentence -> LABEL annot rule
-- On LABEL reduce production sentence -> LABEL annot rule
-- On INIT reduce production sentence -> LABEL annot rule
-- On ID reduce production sentence -> LABEL annot rule
-- On EOF reduce production sentence -> LABEL annot rule
-- On DOT reduce production sentence -> LABEL annot rule
-- On CONFIG reduce production sentence -> LABEL annot rule

State 533:
## Known stack suffix:
## arrow
## LR(1) items:
rule_content -> arrow . annot rule_side [ error AT ]
## Transitions:
-- On SPACE shift to state 2
-- On NEWLINE shift to state 3
-- On COMMENT shift to state 4
-- On annot shift to state 534
## Reductions:
-- On PIPE reduce production annot ->
-- On ID reduce production annot ->
-- On DOT reduce production annot ->

State 534:
## Known stack suffix:
## arrow annot
## LR(1) items:
rule_content -> arrow annot . rule_side [ error AT ]
## Transitions:
-- On PIPE shift to state 404
-- On ID shift to state 465
-- On DOT shift to state 490
-- On rule_side shift to state 535
-- On pattern shift to state 498
-- On agent shift to state 503
## Reductions:

State 535:
## Known stack suffix:
## arrow annot rule_side
## LR(1) items:
rule_content -> arrow annot rule_side . [ error AT ]
## Transitions:
## Reductions:
-- On error reduce production rule_content -> arrow annot rule_side
-- On AT reduce production rule_content -> arrow annot rule_side

State 536:
## Known stack suffix:
## INIT
## LR(1) items:
sentence -> INIT . annot init_declaration [ TOKEN SIGNATURE RAR PLOT PIPE PERT OBS LRAR LET LABEL INIT ID EOF DOT CONFIG ]
## Transitions:
-- On SPACE shift to state 19
-- On NEWLINE shift to state 20
-- On COMMENT shift to state 21
-- On annot shift to state 537
## Reductions:
-- On error reduce production annot ->
-- On TRUE reduce production annot ->
-- On TMAX reduce production annot ->
-- On TIME reduce production annot ->
-- On TAN reduce production annot ->
-- On SQRT reduce production annot ->
-- On SINUS reduce production annot ->
-- On PIPE reduce production annot ->
-- On OP_PAR reduce production annot ->
-- On NULL_EVENT reduce production annot ->
-- On NOT reduce production annot ->
-- On MINUS reduce production annot ->
-- On MIN reduce production annot ->
-- On MAX reduce production annot ->
-- On LOG reduce production annot ->
-- On LABEL reduce production annot ->
-- On INT reduce production annot ->
-- On INFINITY reduce production annot ->
-- On ID reduce production annot ->
-- On FLOAT reduce production annot ->
-- On FALSE reduce production annot ->
-- On EXPONENT reduce production annot ->
-- On EVENT reduce production annot ->
-- On EMAX reduce production annot ->
-- On CPUTIME reduce production annot ->
-- On COSINUS reduce production annot ->
-- On ABS reduce production annot ->

State 537:
## Known stack suffix:
## INIT annot
## LR(1) items:
sentence -> INIT annot . init_declaration [ TOKEN SIGNATURE RAR PLOT PIPE PERT OBS LRAR LET LABEL INIT ID EOF DOT CONFIG ]
## Transitions:
-- On error shift to state 538
-- On TRUE shift to state 179
-- On TMAX shift to state 162
-- On TIME shift to state 163
-- On TAN shift to state 164
-- On SQRT shift to state 166
-- On SINUS shift to state 168
-- On PIPE shift to state 170
-- On OP_PAR shift to state 180
-- On NULL_EVENT shift to state 182
-- On NOT shift to state 183
-- On MINUS shift to state 189
-- On MIN shift to state 191
-- On MAX shift to state 193
-- On LOG shift to state 195
-- On LABEL shift to state 197
-- On INT shift to state 198
-- On INFINITY shift to state 199
-- On ID shift to state 200
-- On FLOAT shift to state 201
-- On FALSE shift to state 225
-- On EXPONENT shift to state 202
-- On EVENT shift to state 204
-- On EMAX shift to state 205
-- On CPUTIME shift to state 206
-- On COSINUS shift to state 207
-- On ABS shift to state 209
-- On variable shift to state 211
-- On small_bool_expr shift to state 226
-- On small_alg_expr shift to state 228
-- On nbr shift to state 213
-- On init_declaration shift to state 539
-- On constant shift to state 214
-- On bool_expr_no_or shift to state 233
-- On bool_expr_comp shift to state 236
-- On bool_expr shift to state 255
-- On alg_expr_up_to_sum shift to state 240
-- On alg_expr_up_to_prod shift to state 251
-- On alg_expr_up_to_mod shift to state 247
-- On alg_expr_up_to_if shift to state 258
-- On alg_expr shift to state 540
## Reductions:

State 538:
## Known stack suffix:
## error
## LR(1) items:
init_declaration -> error . [ TOKEN SIGNATURE RAR PLOT PIPE PERT OBS LRAR LET LABEL INIT ID EOF DOT CONFIG ]
## Transitions:
## Reductions:
-- On TOKEN reduce production init_declaration -> error
-- On SIGNATURE reduce production init_declaration -> error
-- On RAR reduce production init_declaration -> error
-- On PLOT reduce production init_declaration -> error
-- On PIPE reduce production init_declaration -> error
-- On PERT reduce production init_declaration -> error
-- On OBS reduce production init_declaration -> error
-- On LRAR reduce production init_declaration -> error
-- On LET reduce production init_declaration -> error
-- On LABEL reduce production init_declaration -> error
-- On INIT reduce production init_declaration -> error
-- On ID reduce production init_declaration -> error
-- On EOF reduce production init_declaration -> error
-- On DOT reduce production init_declaration -> error
-- On CONFIG reduce production init_declaration -> error

State 539:
## Known stack suffix:
## INIT annot init_declaration
## LR(1) items:
sentence -> INIT annot init_declaration . [ TOKEN SIGNATURE RAR PLOT PIPE PERT OBS LRAR LET LABEL INIT ID EOF DOT CONFIG ]
## Transitions:
## Reductions:
-- On TOKEN reduce production sentence -> INIT annot init_declaration
-- On SIGNATURE reduce production sentence -> INIT annot init_declaration
-- On RAR reduce production sentence -> INIT annot init_declaration
-- On PLOT reduce production sentence -> INIT annot init_declaration
-- On PIPE reduce production sentence -> INIT annot init_declaration
-- On PERT reduce production sentence -> INIT annot init_declaration
-- On OBS reduce production sentence -> INIT annot init_declaration
-- On LRAR reduce production sentence -> INIT annot init_declaration
-- On LET reduce production sentence -> INIT annot init_declaration
-- On LABEL reduce production sentence -> INIT annot init_declaration
-- On INIT reduce production sentence -> INIT annot init_declaration
-- On ID reduce production sentence -> INIT annot init_declaration
-- On EOF reduce production sentence -> INIT annot init_declaration
-- On DOT reduce production sentence -> INIT annot init_declaration
-- On CONFIG reduce production sentence -> INIT annot init_declaration

State 540:
## Known stack suffix:
## alg_expr
## LR(1) items:
init_declaration -> alg_expr . pattern [ TOKEN SIGNATURE RAR PLOT PIPE PERT OBS LRAR LET LABEL INIT ID EOF DOT CONFIG ]
init_declaration -> alg_expr . OP_PAR annot pattern CL_PAR annot [ TOKEN SIGNATURE RAR PLOT PIPE PERT OBS LRAR LET LABEL INIT ID EOF DOT CONFIG ]
init_declaration -> alg_expr . id_list [ TOKEN SIGNATURE RAR PLOT PIPE PERT OBS LRAR LET LABEL INIT ID EOF DOT CONFIG ]
## Transitions:
-- On OP_PAR shift to state 541
-- On ID shift to state 546
-- On DOT shift to state 150
-- On pattern shift to state 553
-- On id_list shift to state 554
-- On agent shift to state 155
## Reductions:

State 541:
## Known stack suffix:
## alg_expr OP_PAR
## LR(1) items:
init_declaration -> alg_expr OP_PAR . annot pattern CL_PAR annot [ TOKEN SIGNATURE RAR PLOT PIPE PERT OBS LRAR LET LABEL INIT ID EOF DOT CONFIG ]
## Transitions:
-- On SPACE shift to state 2
-- On NEWLINE shift to state 3
-- On COMMENT shift to state 4
-- On annot shift to state 542
## Reductions:
-- On ID reduce production annot ->
-- On DOT reduce production annot ->

State 542:
## Known stack suffix:
## alg_expr OP_PAR annot
## LR(1) items:
init_declaration -> alg_expr OP_PAR annot . pattern CL_PAR annot [ TOKEN SIGNATURE RAR PLOT PIPE PERT OBS LRAR LET LABEL INIT ID EOF DOT CONFIG ]
## Transitions:
-- On ID shift to state 18
-- On DOT shift to state 150
-- On pattern shift to state 543
-- On agent shift to state 155
## Reductions:

State 543:
## Known stack suffix:
## alg_expr OP_PAR annot pattern
## LR(1) items:
init_declaration -> alg_expr OP_PAR annot pattern . CL_PAR annot [ TOKEN SIGNATURE RAR PLOT PIPE PERT OBS LRAR LET LABEL INIT ID EOF DOT CONFIG ]
## Transitions:
-- On CL_PAR shift to state 544
## Reductions:

State 544:
## Known stack suffix:
## alg_expr OP_PAR annot pattern CL_PAR
## LR(1) items:
init_declaration -> alg_expr OP_PAR annot pattern CL_PAR . annot [ TOKEN SIGNATURE RAR PLOT PIPE PERT OBS LRAR LET LABEL INIT ID EOF DOT CONFIG ]
## Transitions:
-- On SPACE shift to state 2
-- On NEWLINE shift to state 3
-- On COMMENT shift to state 4
-- On annot shift to state 545
## Reductions:
-- On TOKEN reduce production annot ->
-- On SIGNATURE reduce production annot ->
-- On RAR reduce production annot ->
-- On PLOT reduce production annot ->
-- On PIPE reduce production annot ->
-- On PERT reduce production annot ->
-- On OBS reduce production annot ->
-- On LRAR reduce production annot ->
-- On LET reduce production annot ->
-- On LABEL reduce production annot ->
-- On INIT reduce production annot ->
-- On ID reduce production annot ->
-- On EOF reduce production annot ->
-- On DOT reduce production annot ->
-- On CONFIG reduce production annot ->

State 545:
## Known stack suffix:
## alg_expr OP_PAR annot pattern CL_PAR annot
## LR(1) items:
init_declaration -> alg_expr OP_PAR annot pattern CL_PAR annot . [ TOKEN SIGNATURE RAR PLOT PIPE PERT OBS LRAR LET LABEL INIT ID EOF DOT CONFIG ]
## Transitions:
## Reductions:
-- On TOKEN reduce production init_declaration -> alg_expr OP_PAR annot pattern CL_PAR annot
-- On SIGNATURE reduce production init_declaration -> alg_expr OP_PAR annot pattern CL_PAR annot
-- On RAR reduce production init_declaration -> alg_expr OP_PAR annot pattern CL_PAR annot
-- On PLOT reduce production init_declaration -> alg_expr OP_PAR annot pattern CL_PAR annot
-- On PIPE reduce production init_declaration -> alg_expr OP_PAR annot pattern CL_PAR annot
-- On PERT reduce production init_declaration -> alg_expr OP_PAR annot pattern CL_PAR annot
-- On OBS reduce production init_declaration -> alg_expr OP_PAR annot pattern CL_PAR annot
-- On LRAR reduce production init_declaration -> alg_expr OP_PAR annot pattern CL_PAR annot
-- On LET reduce production init_declaration -> alg_expr OP_PAR annot pattern CL_PAR annot
-- On LABEL reduce production init_declaration -> alg_expr OP_PAR annot pattern CL_PAR annot
-- On INIT reduce production init_declaration -> alg_expr OP_PAR annot pattern CL_PAR annot
-- On ID reduce production init_declaration -> alg_expr OP_PAR annot pattern CL_PAR annot
-- On EOF reduce production init_declaration -> alg_expr OP_PAR annot pattern CL_PAR annot
-- On DOT reduce production init_declaration -> alg_expr OP_PAR annot pattern CL_PAR annot
-- On CONFIG reduce production init_declaration -> alg_expr OP_PAR annot pattern CL_PAR annot

State 546:
## Known stack suffix:
## ID
## LR(1) items:
agent -> ID . annot OP_PAR annot interface CL_PAR agent_modif [ TOKEN SIGNATURE RAR PLOT PIPE PERT OBS LRAR LET LABEL INIT ID EOF DOT CONFIG COMMA ]
agent -> ID . annot COLON annot ID annot OP_PAR annot interface CL_PAR agent_modif [ TOKEN SIGNATURE RAR PLOT PIPE PERT OBS LRAR LET LABEL INIT ID EOF DOT CONFIG COMMA ]
agent -> ID . annot error [ TOKEN SIGNATURE RAR PLOT PIPE PERT OBS LRAR LET LABEL INIT ID EOF DOT CONFIG COMMA ]
id_list -> ID . annot [ TOKEN SIGNATURE RAR PLOT PIPE PERT OBS LRAR LET LABEL INIT ID EOF DOT CONFIG ]
id_list -> ID . annot COMMA annot id_list [ TOKEN SIGNATURE RAR PLOT PIPE PERT OBS LRAR LET LABEL INIT ID EOF DOT CONFIG ]
## Transitions:
-- On SPACE shift to state 19
-- On NEWLINE shift to state 20
-- On COMMENT shift to state 21
-- On annot shift to state 547
## Reductions:
-- On error reduce production annot ->
-- On TOKEN reduce production annot ->
-- On SIGNATURE reduce production annot ->
-- On RAR reduce production annot ->
-- On PLOT reduce production annot ->
-- On PIPE reduce production annot ->
-- On PERT reduce production annot ->
-- On OP_PAR reduce production annot ->
-- On OBS reduce production annot ->
-- On LRAR reduce production annot ->
-- On LET reduce production annot ->
-- On LABEL reduce production annot ->
-- On INIT reduce production annot ->
-- On ID reduce production annot ->
-- On EOF reduce production annot ->
-- On DOT reduce production annot ->
-- On CONFIG reduce production annot ->
-- On COMMA reduce production annot ->
-- On COLON reduce production annot ->

State 547:
## Known stack suffix:
## ID annot
## LR(1) items:
agent -> ID annot . OP_PAR annot interface CL_PAR agent_modif [ TOKEN SIGNATURE RAR PLOT PIPE PERT OBS LRAR LET LABEL INIT ID EOF DOT CONFIG COMMA ]
agent -> ID annot . COLON annot ID annot OP_PAR annot interface CL_PAR agent_modif [ TOKEN SIGNATURE RAR PLOT PIPE PERT OBS LRAR LET LABEL INIT ID EOF DOT CONFIG COMMA ]
agent -> ID annot . error [ TOKEN SIGNATURE RAR PLOT PIPE PERT OBS LRAR LET LABEL INIT ID EOF DOT CONFIG COMMA ]
id_list -> ID annot . [ TOKEN SIGNATURE RAR PLOT PIPE PERT OBS LRAR LET LABEL INIT ID EOF DOT CONFIG ]
id_list -> ID annot . COMMA annot id_list [ TOKEN SIGNATURE RAR PLOT PIPE PERT OBS LRAR LET LABEL INIT ID EOF DOT CONFIG ]
## Transitions:
-- On error shift to state 26
-- On OP_PAR shift to state 27
-- On COMMA shift to state 548
-- On COLON shift to state 141
## Reductions:
-- On TOKEN reduce production id_list -> ID annot
-- On SIGNATURE reduce production id_list -> ID annot
-- On RAR reduce production id_list -> ID annot
-- On PLOT reduce production id_list -> ID annot
-- On PIPE reduce production id_list -> ID annot
-- On PERT reduce production id_list -> ID annot
-- On OBS reduce production id_list -> ID annot
-- On LRAR reduce production id_list -> ID annot
-- On LET reduce production id_list -> ID annot
-- On LABEL reduce production id_list -> ID annot
-- On INIT reduce production id_list -> ID annot
-- On ID reduce production id_list -> ID annot
-- On EOF reduce production id_list -> ID annot
-- On DOT reduce production id_list -> ID annot
-- On CONFIG reduce production id_list -> ID annot

State 548:
## Known stack suffix:
## ID annot COMMA
## LR(1) items:
id_list -> ID annot COMMA . annot id_list [ TOKEN SIGNATURE RAR PLOT PIPE PERT OBS LRAR LET LABEL INIT ID EOF DOT CONFIG ]
## Transitions:
-- On SPACE shift to state 2
-- On NEWLINE shift to state 3
-- On COMMENT shift to state 4
-- On annot shift to state 549
## Reductions:
-- On ID reduce production annot ->

State 549:
## Known stack suffix:
## ID annot COMMA annot
## LR(1) items:
id_list -> ID annot COMMA annot . id_list [ TOKEN SIGNATURE RAR PLOT PIPE PERT OBS LRAR LET LABEL INIT ID EOF DOT CONFIG ]
## Transitions:
-- On ID shift to state 550
-- On id_list shift to state 552
## Reductions:

State 550:
## Known stack suffix:
## ID
## LR(1) items:
id_list -> ID . annot [ TOKEN SIGNATURE RAR PLOT PIPE PERT OBS LRAR LET LABEL INIT ID EOF DOT CONFIG ]
id_list -> ID . annot COMMA annot id_list [ TOKEN SIGNATURE RAR PLOT PIPE PERT OBS LRAR LET LABEL INIT ID EOF DOT CONFIG ]
## Transitions:
-- On SPACE shift to state 2
-- On NEWLINE shift to state 3
-- On COMMENT shift to state 4
-- On annot shift to state 551
## Reductions:
-- On TOKEN reduce production annot ->
-- On SIGNATURE reduce production annot ->
-- On RAR reduce production annot ->
-- On PLOT reduce production annot ->
-- On PIPE reduce production annot ->
-- On PERT reduce production annot ->
-- On OBS reduce production annot ->
-- On LRAR reduce production annot ->
-- On LET reduce production annot ->
-- On LABEL reduce production annot ->
-- On INIT reduce production annot ->
-- On ID reduce production annot ->
-- On EOF reduce production annot ->
-- On DOT reduce production annot ->
-- On CONFIG reduce production annot ->
-- On COMMA reduce production annot ->

State 551:
## Known stack suffix:
## ID annot
## LR(1) items:
id_list -> ID annot . [ TOKEN SIGNATURE RAR PLOT PIPE PERT OBS LRAR LET LABEL INIT ID EOF DOT CONFIG ]
id_list -> ID annot . COMMA annot id_list [ TOKEN SIGNATURE RAR PLOT PIPE PERT OBS LRAR LET LABEL INIT ID EOF DOT CONFIG ]
## Transitions:
-- On COMMA shift to state 548
## Reductions:
-- On TOKEN reduce production id_list -> ID annot
-- On SIGNATURE reduce production id_list -> ID annot
-- On RAR reduce production id_list -> ID annot
-- On PLOT reduce production id_list -> ID annot
-- On PIPE reduce production id_list -> ID annot
-- On PERT reduce production id_list -> ID annot
-- On OBS reduce production id_list -> ID annot
-- On LRAR reduce production id_list -> ID annot
-- On LET reduce production id_list -> ID annot
-- On LABEL reduce production id_list -> ID annot
-- On INIT reduce production id_list -> ID annot
-- On ID reduce production id_list -> ID annot
-- On EOF reduce production id_list -> ID annot
-- On DOT reduce production id_list -> ID annot
-- On CONFIG reduce production id_list -> ID annot

State 552:
## Known stack suffix:
## ID annot COMMA annot id_list
## LR(1) items:
id_list -> ID annot COMMA annot id_list . [ TOKEN SIGNATURE RAR PLOT PIPE PERT OBS LRAR LET LABEL INIT ID EOF DOT CONFIG ]
## Transitions:
## Reductions:
-- On TOKEN reduce production id_list -> ID annot COMMA annot id_list
-- On SIGNATURE reduce production id_list -> ID annot COMMA annot id_list
-- On RAR reduce production id_list -> ID annot COMMA annot id_list
-- On PLOT reduce production id_list -> ID annot COMMA annot id_list
-- On PIPE reduce production id_list -> ID annot COMMA annot id_list
-- On PERT reduce production id_list -> ID annot COMMA annot id_list
-- On OBS reduce production id_list -> ID annot COMMA annot id_list
-- On LRAR reduce production id_list -> ID annot COMMA annot id_list
-- On LET reduce production id_list -> ID annot COMMA annot id_list
-- On LABEL reduce production id_list -> ID annot COMMA annot id_list
-- On INIT reduce production id_list -> ID annot COMMA annot id_list
-- On ID reduce production id_list -> ID annot COMMA annot id_list
-- On EOF reduce production id_list -> ID annot COMMA annot id_list
-- On DOT reduce production id_list -> ID annot COMMA annot id_list
-- On CONFIG reduce production id_list -> ID annot COMMA annot id_list

State 553:
## Known stack suffix:
## alg_expr pattern
## LR(1) items:
init_declaration -> alg_expr pattern . [ TOKEN SIGNATURE RAR PLOT PIPE PERT OBS LRAR LET LABEL INIT ID EOF DOT CONFIG ]
## Transitions:
## Reductions:
-- On TOKEN reduce production init_declaration -> alg_expr pattern
-- On SIGNATURE reduce production init_declaration -> alg_expr pattern
-- On RAR reduce production init_declaration -> alg_expr pattern
-- On PLOT reduce production init_declaration -> alg_expr pattern
-- On PIPE reduce production init_declaration -> alg_expr pattern
-- On PERT reduce production init_declaration -> alg_expr pattern
-- On OBS reduce production init_declaration -> alg_expr pattern
-- On LRAR reduce production init_declaration -> alg_expr pattern
-- On LET reduce production init_declaration -> alg_expr pattern
-- On LABEL reduce production init_declaration -> alg_expr pattern
-- On INIT reduce production init_declaration -> alg_expr pattern
-- On ID reduce production init_declaration -> alg_expr pattern
-- On EOF reduce production init_declaration -> alg_expr pattern
-- On DOT reduce production init_declaration -> alg_expr pattern
-- On CONFIG reduce production init_declaration -> alg_expr pattern

State 554:
## Known stack suffix:
## alg_expr id_list
## LR(1) items:
init_declaration -> alg_expr id_list . [ TOKEN SIGNATURE RAR PLOT PIPE PERT OBS LRAR LET LABEL INIT ID EOF DOT CONFIG ]
## Transitions:
## Reductions:
-- On TOKEN reduce production init_declaration -> alg_expr id_list
-- On SIGNATURE reduce production init_declaration -> alg_expr id_list
-- On RAR reduce production init_declaration -> alg_expr id_list
-- On PLOT reduce production init_declaration -> alg_expr id_list
-- On PIPE reduce production init_declaration -> alg_expr id_list
-- On PERT reduce production init_declaration -> alg_expr id_list
-- On OBS reduce production init_declaration -> alg_expr id_list
-- On LRAR reduce production init_declaration -> alg_expr id_list
-- On LET reduce production init_declaration -> alg_expr id_list
-- On LABEL reduce production init_declaration -> alg_expr id_list
-- On INIT reduce production init_declaration -> alg_expr id_list
-- On ID reduce production init_declaration -> alg_expr id_list
-- On EOF reduce production init_declaration -> alg_expr id_list
-- On DOT reduce production init_declaration -> alg_expr id_list
-- On CONFIG reduce production init_declaration -> alg_expr id_list

State 555:
## Known stack suffix:
## EOF
## LR(1) items:
model_body -> EOF . [ # ]
## Transitions:
## Reductions:
-- On # reduce production model_body -> EOF

State 556:
## Known stack suffix:
## CONFIG
## LR(1) items:
sentence -> CONFIG . annot STRING annot value_list [ TOKEN SIGNATURE RAR PLOT PIPE PERT OBS LRAR LET LABEL INIT ID EOF DOT CONFIG ]
## Transitions:
-- On SPACE shift to state 2
-- On NEWLINE shift to state 3
-- On COMMENT shift to state 4
-- On annot shift to state 557
## Reductions:
-- On STRING reduce production annot ->

State 557:
## Known stack suffix:
## CONFIG annot
## LR(1) items:
sentence -> CONFIG annot . STRING annot value_list [ TOKEN SIGNATURE RAR PLOT PIPE PERT OBS LRAR LET LABEL INIT ID EOF DOT CONFIG ]
## Transitions:
-- On STRING shift to state 558
## Reductions:

State 558:
## Known stack suffix:
## CONFIG annot STRING
## LR(1) items:
sentence -> CONFIG annot STRING . annot value_list [ TOKEN SIGNATURE RAR PLOT PIPE PERT OBS LRAR LET LABEL INIT ID EOF DOT CONFIG ]
## Transitions:
-- On SPACE shift to state 2
-- On NEWLINE shift to state 3
-- On COMMENT shift to state 4
-- On annot shift to state 559
## Reductions:
-- On STRING reduce production annot ->

State 559:
## Known stack suffix:
## CONFIG annot STRING annot
## LR(1) items:
sentence -> CONFIG annot STRING annot . value_list [ TOKEN SIGNATURE RAR PLOT PIPE PERT OBS LRAR LET LABEL INIT ID EOF DOT CONFIG ]
## Transitions:
-- On STRING shift to state 560
-- On value_list shift to state 563
## Reductions:

State 560:
## Known stack suffix:
## STRING
## LR(1) items:
value_list -> STRING . annot [ TOKEN SIGNATURE RAR PLOT PIPE PERT OBS LRAR LET LABEL INIT ID EOF DOT CONFIG ]
value_list -> STRING . annot value_list [ TOKEN SIGNATURE RAR PLOT PIPE PERT OBS LRAR LET LABEL INIT ID EOF DOT CONFIG ]
## Transitions:
-- On SPACE shift to state 2
-- On NEWLINE shift to state 3
-- On COMMENT shift to state 4
-- On annot shift to state 561
## Reductions:
-- On TOKEN reduce production annot ->
-- On STRING reduce production annot ->
-- On SIGNATURE reduce production annot ->
-- On RAR reduce production annot ->
-- On PLOT reduce production annot ->
-- On PIPE reduce production annot ->
-- On PERT reduce production annot ->
-- On OBS reduce production annot ->
-- On LRAR reduce production annot ->
-- On LET reduce production annot ->
-- On LABEL reduce production annot ->
-- On INIT reduce production annot ->
-- On ID reduce production annot ->
-- On EOF reduce production annot ->
-- On DOT reduce production annot ->
-- On CONFIG reduce production annot ->

State 561:
## Known stack suffix:
## STRING annot
## LR(1) items:
value_list -> STRING annot . [ TOKEN SIGNATURE RAR PLOT PIPE PERT OBS LRAR LET LABEL INIT ID EOF DOT CONFIG ]
value_list -> STRING annot . value_list [ TOKEN SIGNATURE RAR PLOT PIPE PERT OBS LRAR LET LABEL INIT ID EOF DOT CONFIG ]
## Transitions:
-- On STRING shift to state 560
-- On value_list shift to state 562
## Reductions:
-- On TOKEN reduce production value_list -> STRING annot
-- On SIGNATURE reduce production value_list -> STRING annot
-- On RAR reduce production value_list -> STRING annot
-- On PLOT reduce production value_list -> STRING annot
-- On PIPE reduce production value_list -> STRING annot
-- On PERT reduce production value_list -> STRING annot
-- On OBS reduce production value_list -> STRING annot
-- On LRAR reduce production value_list -> STRING annot
-- On LET reduce production value_list -> STRING annot
-- On LABEL reduce production value_list -> STRING annot
-- On INIT reduce production value_list -> STRING annot
-- On ID reduce production value_list -> STRING annot
-- On EOF reduce production value_list -> STRING annot
-- On DOT reduce production value_list -> STRING annot
-- On CONFIG reduce production value_list -> STRING annot

State 562:
## Known stack suffix:
## STRING annot value_list
## LR(1) items:
value_list -> STRING annot value_list . [ TOKEN SIGNATURE RAR PLOT PIPE PERT OBS LRAR LET LABEL INIT ID EOF DOT CONFIG ]
## Transitions:
## Reductions:
-- On TOKEN reduce production value_list -> STRING annot value_list
-- On SIGNATURE reduce production value_list -> STRING annot value_list
-- On RAR reduce production value_list -> STRING annot value_list
-- On PLOT reduce production value_list -> STRING annot value_list
-- On PIPE reduce production value_list -> STRING annot value_list
-- On PERT reduce production value_list -> STRING annot value_list
-- On OBS reduce production value_list -> STRING annot value_list
-- On LRAR reduce production value_list -> STRING annot value_list
-- On LET reduce production value_list -> STRING annot value_list
-- On LABEL reduce production value_list -> STRING annot value_list
-- On INIT reduce production value_list -> STRING annot value_list
-- On ID reduce production value_list -> STRING annot value_list
-- On EOF reduce production value_list -> STRING annot value_list
-- On DOT reduce production value_list -> STRING annot value_list
-- On CONFIG reduce production value_list -> STRING annot value_list

State 563:
## Known stack suffix:
## CONFIG annot STRING annot value_list
## LR(1) items:
sentence -> CONFIG annot STRING annot value_list . [ TOKEN SIGNATURE RAR PLOT PIPE PERT OBS LRAR LET LABEL INIT ID EOF DOT CONFIG ]
## Transitions:
## Reductions:
-- On TOKEN reduce production sentence -> CONFIG annot STRING annot value_list
-- On SIGNATURE reduce production sentence -> CONFIG annot STRING annot value_list
-- On RAR reduce production sentence -> CONFIG annot STRING annot value_list
-- On PLOT reduce production sentence -> CONFIG annot STRING annot value_list
-- On PIPE reduce production sentence -> CONFIG annot STRING annot value_list
-- On PERT reduce production sentence -> CONFIG annot STRING annot value_list
-- On OBS reduce production sentence -> CONFIG annot STRING annot value_list
-- On LRAR reduce production sentence -> CONFIG annot STRING annot value_list
-- On LET reduce production sentence -> CONFIG annot STRING annot value_list
-- On LABEL reduce production sentence -> CONFIG annot STRING annot value_list
-- On INIT reduce production sentence -> CONFIG annot STRING annot value_list
-- On ID reduce production sentence -> CONFIG annot STRING annot value_list
-- On EOF reduce production sentence -> CONFIG annot STRING annot value_list
-- On DOT reduce production sentence -> CONFIG annot STRING annot value_list
-- On CONFIG reduce production sentence -> CONFIG annot STRING annot value_list

State 564:
## Known stack suffix:
## sentence
## LR(1) items:
model_body -> sentence . model_body [ # ]
## Transitions:
-- On TOKEN shift to state 392
-- On SIGNATURE shift to state 396
-- On RAR shift to state 360
-- On PLOT shift to state 400
-- On PIPE shift to state 404
-- On PERT shift to state 415
-- On OBS shift to state 448
-- On LRAR shift to state 372
-- On LET shift to state 460
-- On LABEL shift to state 463
-- On INIT shift to state 536
-- On ID shift to state 465
-- On EOF shift to state 555
-- On DOT shift to state 490
-- On CONFIG shift to state 556
-- On sentence shift to state 564
-- On rule_side shift to state 492
-- On rule_content shift to state 507
-- On rule shift to state 565
-- On pattern shift to state 498
-- On model_body shift to state 566
-- On arrow shift to state 533
-- On agent shift to state 503
## Reductions:

State 565:
## Known stack suffix:
## rule
## LR(1) items:
sentence -> rule . [ TOKEN SIGNATURE RAR PLOT PIPE PERT OBS LRAR LET LABEL INIT ID EOF DOT CONFIG ]
## Transitions:
## Reductions:
-- On TOKEN reduce production sentence -> rule
-- On SIGNATURE reduce production sentence -> rule
-- On RAR reduce production sentence -> rule
-- On PLOT reduce production sentence -> rule
-- On PIPE reduce production sentence -> rule
-- On PERT reduce production sentence -> rule
-- On OBS reduce production sentence -> rule
-- On LRAR reduce production sentence -> rule
-- On LET reduce production sentence -> rule
-- On LABEL reduce production sentence -> rule
-- On INIT reduce production sentence -> rule
-- On ID reduce production sentence -> rule
-- On EOF reduce production sentence -> rule
-- On DOT reduce production sentence -> rule
-- On CONFIG reduce production sentence -> rule

State 566:
## Known stack suffix:
## sentence model_body
## LR(1) items:
model_body -> sentence model_body . [ # ]
## Transitions:
## Reductions:
-- On # reduce production model_body -> sentence model_body

State 567:
## Known stack suffix:
## annot model_body
## LR(1) items:
model -> annot model_body . [ # ]
## Transitions:
## Reductions:
-- On # reduce production model -> annot model_body

State 568:
## Known stack suffix:
##
## LR(1) items:
standalone_bool_expr' -> . standalone_bool_expr [ # ]
## Transitions:
-- On SPACE shift to state 19
-- On NEWLINE shift to state 20
-- On COMMENT shift to state 21
-- On standalone_bool_expr shift to state 569
-- On annot shift to state 570
## Reductions:
-- On error reduce production annot ->
-- On TRUE reduce production annot ->
-- On TMAX reduce production annot ->
-- On TIME reduce production annot ->
-- On TAN reduce production annot ->
-- On SQRT reduce production annot ->
-- On SINUS reduce production annot ->
-- On PIPE reduce production annot ->
-- On OP_PAR reduce production annot ->
-- On NULL_EVENT reduce production annot ->
-- On NOT reduce production annot ->
-- On MINUS reduce production annot ->
-- On MIN reduce production annot ->
-- On MAX reduce production annot ->
-- On LOG reduce production annot ->
-- On LABEL reduce production annot ->
-- On INT reduce production annot ->
-- On INFINITY reduce production annot ->
-- On ID reduce production annot ->
-- On FLOAT reduce production annot ->
-- On FALSE reduce production annot ->
-- On EXPONENT reduce production annot ->
-- On EVENT reduce production annot ->
-- On EMAX reduce production annot ->
-- On CPUTIME reduce production annot ->
-- On COSINUS reduce production annot ->
-- On ABS reduce production annot ->

State 569:
## Known stack suffix:
## standalone_bool_expr
## LR(1) items:
standalone_bool_expr' -> standalone_bool_expr . [ # ]
## Transitions:
## Reductions:
-- On # accept standalone_bool_expr

State 570:
## Known stack suffix:
## annot
## LR(1) items:
standalone_bool_expr -> annot . bool_expr EOF [ # ]
standalone_bool_expr -> annot . error [ # ]
## Transitions:
-- On error shift to state 571
-- On TRUE shift to state 179
-- On TMAX shift to state 162
-- On TIME shift to state 163
-- On TAN shift to state 164
-- On SQRT shift to state 166
-- On SINUS shift to state 168
-- On PIPE shift to state 170
-- On OP_PAR shift to state 187
-- On NULL_EVENT shift to state 182
-- On NOT shift to state 183
-- On MINUS shift to state 189
-- On MIN shift to state 191
-- On MAX shift to state 193
-- On LOG shift to state 195
-- On LABEL shift to state 197
-- On INT shift to state 198
-- On INFINITY shift to state 199
-- On ID shift to state 200
-- On FLOAT shift to state 201
-- On FALSE shift to state 225
-- On EXPONENT shift to state 202
-- On EVENT shift to state 204
-- On EMAX shift to state 205
-- On CPUTIME shift to state 206
-- On COSINUS shift to state 207
-- On ABS shift to state 209
-- On variable shift to state 211
-- On small_bool_expr shift to state 226
-- On small_alg_expr shift to state 228
-- On nbr shift to state 213
-- On constant shift to state 214
-- On bool_expr_no_or shift to state 233
-- On bool_expr_comp shift to state 236
-- On bool_expr shift to state 572
-- On alg_expr_up_to_sum shift to state 240
-- On alg_expr_up_to_prod shift to state 251
-- On alg_expr_up_to_mod shift to state 247
-- On alg_expr_up_to_if shift to state 252
## Reductions:

State 571:
## Known stack suffix:
## annot error
## LR(1) items:
standalone_bool_expr -> annot error . [ # ]
## Transitions:
## Reductions:
-- On # reduce production standalone_bool_expr -> annot error

State 572:
## Known stack suffix:
## annot bool_expr
## LR(1) items:
standalone_bool_expr -> annot bool_expr . EOF [ # ]
## Transitions:
-- On EOF shift to state 573
## Reductions:

State 573:
## Known stack suffix:
## annot bool_expr EOF
## LR(1) items:
standalone_bool_expr -> annot bool_expr EOF . [ # ]
## Transitions:
## Reductions:
-- On # reduce production standalone_bool_expr -> annot bool_expr EOF

State 574:
## Known stack suffix:
##
## LR(1) items:
standalone_effect_list' -> . standalone_effect_list [ # ]
## Transitions:
-- On error shift to state 575
-- On SPACE shift to state 2
-- On NEWLINE shift to state 3
-- On COMMENT shift to state 4
-- On standalone_effect_list shift to state 576
-- On annot shift to state 577
## Reductions:
-- On TRACK reduce production annot ->
-- On STOP reduce production annot ->
-- On SPECIES_OF reduce production annot ->
-- On SNAPSHOT reduce production annot ->
-- On PRINTF reduce production annot ->
-- On PLOTENTRY reduce production annot ->
-- On INTRO reduce production annot ->
-- On FLUX reduce production annot ->
-- On DELETE reduce production annot ->
-- On ASSIGN reduce production annot ->
-- On APPLY reduce production annot ->

State 575:
## Known stack suffix:
## error
## LR(1) items:
standalone_effect_list -> error . [ # ]
## Transitions:
## Reductions:
-- On # reduce production standalone_effect_list -> error

State 576:
## Known stack suffix:
## standalone_effect_list
## LR(1) items:
standalone_effect_list' -> standalone_effect_list . [ # ]
## Transitions:
## Reductions:
-- On # accept standalone_effect_list

State 577:
## Known stack suffix:
## annot
## LR(1) items:
standalone_effect_list -> annot . partial_effect_list EOF [ # ]
## Transitions:
-- On TRACK shift to state 10
-- On STOP shift to state 159
-- On SPECIES_OF shift to state 309
-- On SNAPSHOT shift to state 316
-- On PRINTF shift to state 323
-- On PLOTENTRY shift to state 327
-- On INTRO shift to state 329
-- On FLUX shift to state 334
-- On DELETE shift to state 344
-- On ASSIGN shift to state 349
-- On APPLY shift to state 357
-- On partial_effect_list shift to state 578
-- On effect shift to state 425
## Reductions:

State 578:
## Known stack suffix:
## annot partial_effect_list
## LR(1) items:
standalone_effect_list -> annot partial_effect_list . EOF [ # ]
## Transitions:
-- On EOF shift to state 579
## Reductions:

State 579:
## Known stack suffix:
## annot partial_effect_list EOF
## LR(1) items:
standalone_effect_list -> annot partial_effect_list EOF . [ # ]
## Transitions:
## Reductions:
-- On # reduce production standalone_effect_list -> annot partial_effect_list EOF

