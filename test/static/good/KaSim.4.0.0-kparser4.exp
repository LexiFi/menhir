Grammar has 58 nonterminal symbols, among which 4 start symbols.
Grammar has 81 terminal symbols.
Grammar has 209 productions.
nullable(variable_declaration) = false
nullable(variable) = false
nullable(value_list) = false
nullable(sum_token) = false
nullable(standalone_effect_list) = false
nullable(standalone_bool_expr) = false
nullable(small_bool_expr) = false
nullable(small_alg_expr) = false
nullable(site_link) = false
nullable(site_internal) = false
nullable(site_counter) = false
nullable(site) = false
nullable(sentence) = false
nullable(rule_side) = false
nullable(rule_content) = false
nullable(rule) = false
nullable(rate) = false
nullable(print_expr_list) = false
nullable(print_expr) = true
nullable(perturbation_post) = true
nullable(perturbation_declaration) = false
nullable(perturbation_alarm) = true
nullable(pattern) = false
nullable(partial_effect_list) = false
nullable(nonempty_print_expr) = false
nullable(nbr) = false
nullable(model_body) = false
nullable(model) = false
nullable(link_states) = false
nullable(link_state) = false
nullable(link_modif) = true
nullable(internal_states) = false
nullable(internal_state) = false
nullable(internal_modif) = true
nullable(interface) = true
nullable(interactive_command) = false
nullable(init_declaration) = false
nullable(id_list) = false
nullable(effect_list) = false
nullable(effect) = false
nullable(counter_test) = false
nullable(counter_modif) = false
nullable(constant) = false
nullable(boolean) = false
nullable(bool_expr_no_or) = false
nullable(bool_expr_comp) = false
nullable(bool_expr) = false
nullable(birate) = false
nullable(arrow) = false
nullable(annot) = true
nullable(alg_with_radius) = false
nullable(alg_expr_up_to_sum) = false
nullable(alg_expr_up_to_prod) = false
nullable(alg_expr_up_to_mod) = false
nullable(alg_expr_up_to_if) = false
nullable(alg_expr) = false
nullable(agent_modif) = true
nullable(agent) = false
first(variable_declaration) = error LABEL ID
first(variable) = TIME PIPE NULL_EVENT LABEL ID EVENT
first(value_list) = STRING
first(sum_token) = TMAX TIME TAN SQRT SINUS PIPE OP_PAR NULL_EVENT MINUS MIN MAX LOG LABEL INT INFINITY ID FLOAT EXPONENT EVENT EMAX CPUTIME COSINUS ABS
first(standalone_effect_list) = error TRACK STOP SPECIES_OF SPACE SNAPSHOT PRINTF PLOTENTRY NEWLINE INTRO FLUX DELETE COMMENT ASSIGN APPLY
first(standalone_bool_expr) = error TRUE TMAX TIME TAN SQRT SPACE SINUS PIPE OP_PAR NULL_EVENT NOT NEWLINE MINUS MIN MAX LOG LABEL INT INFINITY ID FLOAT FALSE EXPONENT EVENT EMAX CPUTIME COSINUS COMMENT ABS
first(small_bool_expr) = TRUE OP_PAR NOT FALSE
first(small_alg_expr) = TMAX TIME TAN SQRT SINUS PIPE OP_PAR NULL_EVENT MINUS MIN MAX LOG LABEL INT INFINITY ID FLOAT EXPONENT EVENT EMAX CPUTIME COSINUS ABS
first(site_link) = error UNDERSCORE SPACE SHARP NEWLINE INT ID DOT COMMENT
first(site_internal) = error SHARP ID
first(site_counter) = PLUS MINUS GREATER EQUAL
first(site) = ID
first(sentence) = TOKEN SIGNATURE RAR PLOT PIPE PERT OBS LRAR LET LABEL INIT ID DOT CONFIG
first(rule_side) = PIPE ID DOT
first(rule_content) = RAR PIPE LRAR ID DOT
first(rule) = RAR PIPE LRAR ID DOT
first(rate) = TRUE TMAX TIME TAN SQRT SINUS PIPE OP_PAR OP_CUR NULL_EVENT NOT MINUS MIN MAX LOG LABEL INT INFINITY ID FLOAT FALSE EXPONENT EVENT EMAX CPUTIME COSINUS ABS
first(print_expr_list) = TMAX TIME TAN STRING SQRT SINUS PIPE OP_PAR NULL_EVENT MINUS MIN MAX LOG LABEL INT INFINITY ID FLOAT EXPONENT EVENT EMAX CPUTIME COSINUS ABS
first(print_expr) = TMAX TIME TAN STRING SQRT SPACE SINUS PIPE OP_PAR NULL_EVENT NEWLINE MINUS MIN MAX LOG LABEL INT INFINITY ID FLOAT EXPONENT EVENT EMAX CPUTIME COSINUS COMMENT ABS
first(perturbation_post) = REPEAT
first(perturbation_declaration) = TRUE TMAX TIME TAN SQRT SPACE SINUS PIPE OP_PAR NULL_EVENT NOT NEWLINE MINUS MIN MAX LOG LABEL INT INFINITY ID FLOAT FALSE EXPONENT EVENT EMAX DO CPUTIME COSINUS COMMENT ALARM ABS
first(perturbation_alarm) = SPACE NEWLINE COMMENT ALARM
first(pattern) = ID DOT
first(partial_effect_list) = TRACK STOP SPECIES_OF SNAPSHOT PRINTF PLOTENTRY INTRO FLUX DELETE ASSIGN APPLY
first(nonempty_print_expr) = TMAX TIME TAN STRING SQRT SINUS PIPE OP_PAR NULL_EVENT MINUS MIN MAX LOG LABEL INT INFINITY ID FLOAT EXPONENT EVENT EMAX CPUTIME COSINUS ABS
first(nbr) = INT INFINITY FLOAT
first(model_body) = TOKEN SIGNATURE RAR PLOT PIPE PERT OBS LRAR LET LABEL INIT ID EOF DOT CONFIG
first(model) = error TOKEN SPACE SIGNATURE RAR PLOT PIPE PERT OBS NEWLINE LRAR LET LABEL INIT ID EOF DOT CONFIG COMMENT
first(link_states) = UNDERSCORE SHARP INT ID DOT
first(link_state) = UNDERSCORE SHARP INT ID DOT
first(link_modif) = DIV
first(internal_states) = SHARP ID
first(internal_state) = SHARP ID
first(internal_modif) = DIV
first(interface) = error ID
first(interactive_command) = error TRACK STOP SPECIES_OF SPACE SNAPSHOT RUN PRINTF PLOTENTRY NEWLINE INTRO FLUX EOF DELETE COMMENT ASSIGN APPLY
first(init_declaration) = error TRUE TMAX TIME TAN SQRT SINUS PIPE OP_PAR NULL_EVENT NOT MINUS MIN MAX LOG LABEL INT INFINITY ID FLOAT FALSE EXPONENT EVENT EMAX CPUTIME COSINUS ABS
first(id_list) = ID
first(effect_list) = TRACK STOP SPECIES_OF SNAPSHOT PRINTF PLOTENTRY OP_PAR INTRO FLUX DELETE ASSIGN APPLY
first(effect) = TRACK STOP SPECIES_OF SNAPSHOT PRINTF PLOTENTRY INTRO FLUX DELETE ASSIGN APPLY
first(counter_test) = GREATER EQUAL
first(counter_modif) = PLUS MINUS
first(constant) = TMAX INT INFINITY FLOAT EMAX CPUTIME
first(boolean) = TRUE FALSE
first(bool_expr_no_or) = TRUE TMAX TIME TAN SQRT SINUS PIPE OP_PAR NULL_EVENT NOT MINUS MIN MAX LOG LABEL INT INFINITY ID FLOAT FALSE EXPONENT EVENT EMAX CPUTIME COSINUS ABS
first(bool_expr_comp) = TRUE TMAX TIME TAN SQRT SINUS PIPE OP_PAR NULL_EVENT NOT MINUS MIN MAX LOG LABEL INT INFINITY ID FLOAT FALSE EXPONENT EVENT EMAX CPUTIME COSINUS ABS
first(bool_expr) = TRUE TMAX TIME TAN SQRT SINUS PIPE OP_PAR NULL_EVENT NOT MINUS MIN MAX LOG LABEL INT INFINITY ID FLOAT FALSE EXPONENT EVENT EMAX CPUTIME COSINUS ABS
first(birate) = AT
first(arrow) = RAR LRAR
first(annot) = SPACE NEWLINE COMMENT
first(alg_with_radius) = TRUE TMAX TIME TAN SQRT SINUS PIPE OP_PAR NULL_EVENT NOT MINUS MIN MAX LOG LABEL INT INFINITY ID FLOAT FALSE EXPONENT EVENT EMAX CPUTIME COSINUS ABS
first(alg_expr_up_to_sum) = TMAX TIME TAN SQRT SINUS PIPE OP_PAR NULL_EVENT MINUS MIN MAX LOG LABEL INT INFINITY ID FLOAT EXPONENT EVENT EMAX CPUTIME COSINUS ABS
first(alg_expr_up_to_prod) = TMAX TIME TAN SQRT SINUS PIPE OP_PAR NULL_EVENT MINUS MIN MAX LOG LABEL INT INFINITY ID FLOAT EXPONENT EVENT EMAX CPUTIME COSINUS ABS
first(alg_expr_up_to_mod) = TMAX TIME TAN SQRT SINUS PIPE OP_PAR NULL_EVENT MINUS MIN MAX LOG LABEL INT INFINITY ID FLOAT EXPONENT EVENT EMAX CPUTIME COSINUS ABS
first(alg_expr_up_to_if) = TMAX TIME TAN SQRT SINUS PIPE OP_PAR NULL_EVENT MINUS MIN MAX LOG LABEL INT INFINITY ID FLOAT EXPONENT EVENT EMAX CPUTIME COSINUS ABS
first(alg_expr) = TRUE TMAX TIME TAN SQRT SINUS PIPE OP_PAR NULL_EVENT NOT MINUS MIN MAX LOG LABEL INT INFINITY ID FLOAT FALSE EXPONENT EVENT EMAX CPUTIME COSINUS ABS
first(agent_modif) = SPACE PLUS NEWLINE MINUS COMMENT
first(agent) = ID DOT
minimal(variable_declaration) = (* 2 *) LABEL INFINITY
minimal(variable) = (* 1 *) ID
minimal(value_list) = (* 1 *) STRING
minimal(sum_token) = (* 2 *) INFINITY ID
minimal(standalone_effect_list) = (* 2 *) SNAPSHOT EOF
minimal(standalone_bool_expr) = (* 2 *) TRUE EOF
minimal(small_bool_expr) = (* 1 *) TRUE
minimal(small_alg_expr) = (* 1 *) INFINITY
minimal(site_link) = (* 2 *) DOT CL_BRA
minimal(site_internal) = (* 2 *) ID CL_CUR
minimal(site_counter) = (* 3 *) EQUAL INT CL_CUR
minimal(site) = (* 1 *) ID
minimal(sentence) = (* 2 *) SIGNATURE DOT
minimal(rule_side) = (* 1 *) DOT
minimal(rule_content) = (* 1 *) DOT
minimal(rule) = (* 3 *) DOT AT INFINITY
minimal(rate) = (* 1 *) INFINITY
minimal(print_expr_list) = (* 3 *) STRING DOT STRING
minimal(print_expr) = (* 0 *)
minimal(perturbation_post) = (* 0 *)
minimal(perturbation_declaration) = (* 3 *) DO SNAPSHOT SEMICOLON
minimal(perturbation_alarm) = (* 0 *)
minimal(pattern) = (* 1 *) DOT
minimal(partial_effect_list) = (* 1 *) SNAPSHOT
minimal(nonempty_print_expr) = (* 1 *) STRING
minimal(nbr) = (* 1 *) INFINITY
minimal(model_body) = (* 1 *) EOF
minimal(model) = (* 1 *) EOF
minimal(link_states) = (* 1 *) DOT
minimal(link_state) = (* 1 *) DOT
minimal(link_modif) = (* 0 *)
minimal(internal_states) = (* 1 *) ID
minimal(internal_state) = (* 1 *) ID
minimal(internal_modif) = (* 0 *)
minimal(interface) = (* 0 *)
minimal(interactive_command) = (* 1 *) EOF
minimal(init_declaration) = (* 2 *) INFINITY DOT
minimal(id_list) = (* 1 *) ID
minimal(effect_list) = (* 2 *) SNAPSHOT SEMICOLON
minimal(effect) = (* 1 *) SNAPSHOT
minimal(counter_test) = (* 2 *) EQUAL INT
minimal(counter_modif) = (* 3 *) PLUS EQUAL INT
minimal(constant) = (* 1 *) INFINITY
minimal(boolean) = (* 1 *) TRUE
minimal(bool_expr_no_or) = (* 1 *) TRUE
minimal(bool_expr_comp) = (* 1 *) TRUE
minimal(bool_expr) = (* 1 *) TRUE
minimal(birate) = (* 2 *) AT INFINITY
minimal(arrow) = (* 1 *) RAR
minimal(annot) = (* 0 *)
minimal(alg_with_radius) = (* 1 *) INFINITY
minimal(alg_expr_up_to_sum) = (* 1 *) INFINITY
minimal(alg_expr_up_to_prod) = (* 1 *) INFINITY
minimal(alg_expr_up_to_mod) = (* 1 *) INFINITY
minimal(alg_expr_up_to_if) = (* 1 *) INFINITY
minimal(alg_expr) = (* 1 *) INFINITY
minimal(agent_modif) = (* 0 *)
minimal(agent) = (* 1 *) DOT
maximal(variable_declaration) = infinity
maximal(variable) = infinity
maximal(value_list) = infinity
maximal(sum_token) = infinity
maximal(standalone_effect_list) = infinity
maximal(standalone_bool_expr) = infinity
maximal(small_bool_expr) = infinity
maximal(small_alg_expr) = infinity
maximal(site_link) = infinity
maximal(site_internal) = infinity
maximal(site_counter) = infinity
maximal(site) = infinity
maximal(sentence) = infinity
maximal(rule_side) = infinity
maximal(rule_content) = infinity
maximal(rule) = infinity
maximal(rate) = infinity
maximal(print_expr_list) = infinity
maximal(print_expr) = infinity
maximal(perturbation_post) = infinity
maximal(perturbation_declaration) = infinity
maximal(perturbation_alarm) = infinity
maximal(pattern) = infinity
maximal(partial_effect_list) = infinity
maximal(nonempty_print_expr) = infinity
maximal(nbr) = 1
maximal(model_body) = infinity
maximal(model) = infinity
maximal(link_states) = infinity
maximal(link_state) = infinity
maximal(link_modif) = infinity
maximal(internal_states) = infinity
maximal(internal_state) = 1
maximal(internal_modif) = infinity
maximal(interface) = infinity
maximal(interactive_command) = infinity
maximal(init_declaration) = infinity
maximal(id_list) = infinity
maximal(effect_list) = infinity
maximal(effect) = infinity
maximal(counter_test) = infinity
maximal(counter_modif) = infinity
maximal(constant) = 1
maximal(boolean) = 1
maximal(bool_expr_no_or) = infinity
maximal(bool_expr_comp) = infinity
maximal(bool_expr) = infinity
maximal(birate) = infinity
maximal(arrow) = 1
maximal(annot) = infinity
maximal(alg_with_radius) = infinity
maximal(alg_expr_up_to_sum) = infinity
maximal(alg_expr_up_to_prod) = infinity
maximal(alg_expr_up_to_mod) = infinity
maximal(alg_expr_up_to_if) = infinity
maximal(alg_expr) = infinity
maximal(agent_modif) = infinity
maximal(agent) = infinity
follow(variable_declaration) = TOKEN SIGNATURE RAR PLOT PIPE PERT OBS LRAR LET LABEL INIT ID EOF DOT CONFIG
follow(variable) = TRUE TOKEN TMAX TIME THEN TAN STRING SQRT SPACE SMALLER SINUS SIGNATURE SEMICOLON RAR POW PLUS PLOT PIPE PERT OR OP_PAR OP_CUR OBS NULL_EVENT NEWLINE MULT MOD MINUS MIN MAX LRAR LOG LET LABEL INT INIT INFINITY ID GREATER FLOAT FALSE EXPONENT EVENT EQUAL EOF EMAX ELSE DOT DO DIV DIFF CPUTIME COSINUS CONFIG COMMENT COMMA COLON CL_PAR CL_CUR AND ABS
follow(value_list) = TOKEN SIGNATURE RAR PLOT PIPE PERT OBS LRAR LET LABEL INIT ID EOF DOT CONFIG
follow(sum_token) = error SEMICOLON RAR LRAR EOF CL_PAR AT
follow(standalone_effect_list) = #
follow(standalone_bool_expr) = #
follow(small_bool_expr) = TOKEN THEN SPACE SIGNATURE SEMICOLON RAR PLOT PIPE PERT OR OBS NEWLINE LRAR LET LABEL INIT ID EOF DOT DO CONFIG COMMENT CL_PAR AND
follow(small_alg_expr) = TRUE TOKEN TMAX TIME THEN TAN STRING SQRT SPACE SMALLER SINUS SIGNATURE SEMICOLON RAR POW PLUS PLOT PIPE PERT OR OP_PAR OP_CUR OBS NULL_EVENT NEWLINE MULT MOD MINUS MIN MAX LRAR LOG LET LABEL INT INIT INFINITY ID GREATER FLOAT FALSE EXPONENT EVENT EQUAL EOF EMAX ELSE DOT DO DIV DIFF CPUTIME COSINUS CONFIG COMMENT COMMA COLON CL_PAR CL_CUR AND ABS
follow(site_link) = error SPACE OP_CUR NEWLINE ID COMMENT COMMA CL_PAR
follow(site_internal) = error SPACE OP_BRA NEWLINE ID COMMENT COMMA CL_PAR
follow(site_counter) = error ID COMMA CL_PAR
follow(site) = error ID COMMA CL_PAR
follow(sentence) = TOKEN SIGNATURE RAR PLOT PIPE PERT OBS LRAR LET LABEL INIT ID EOF DOT CONFIG
follow(rule_side) = error SEMICOLON RAR LRAR EOF CL_PAR AT
follow(rule_content) = error SEMICOLON EOF CL_PAR AT
follow(rule) = TOKEN SIGNATURE RAR PLOT PIPE PERT OBS LRAR LET LABEL INIT ID EOF DOT CONFIG
follow(rate) = TOKEN SIGNATURE RAR PLOT PIPE PERT OBS LRAR LET LABEL INIT ID EOF DOT CONFIG COMMA
follow(print_expr_list) = TRUE STRING SEMICOLON GREATER FALSE EOF CL_PAR
follow(print_expr) = SEMICOLON GREATER EOF CL_PAR
follow(perturbation_post) = TOKEN SIGNATURE RAR PLOT PIPE PERT OBS LRAR LET LABEL INIT ID EOF DOT CONFIG
follow(perturbation_declaration) = TOKEN SIGNATURE RAR PLOT PIPE PERT OBS LRAR LET LABEL INIT ID EOF DOT CONFIG
follow(perturbation_alarm) = TRUE TMAX TIME TAN SQRT SINUS PIPE OP_PAR NULL_EVENT NOT MINUS MIN MAX LOG LABEL INT INFINITY ID FLOAT FALSE EXPONENT EVENT EMAX DO CPUTIME COSINUS ABS
follow(pattern) = error TRUE TOKEN SIGNATURE SEMICOLON RAR PLOT PIPE PERT OBS LRAR LET LABEL INIT ID FALSE EOF DOT CONFIG CL_PAR AT
follow(partial_effect_list) = EOF CL_PAR
follow(nonempty_print_expr) = TRUE STRING SEMICOLON GREATER FALSE EOF CL_PAR
follow(nbr) = TRUE TOKEN TMAX TIME THEN TAN STRING SQRT SPACE SMALLER SINUS SIGNATURE SEMICOLON RAR POW PLUS PLOT PIPE PERT OR OP_PAR OP_CUR OBS NULL_EVENT NOT NEWLINE MULT MOD MINUS MIN MAX LRAR LOG LET LABEL INT INIT INFINITY ID GREATER FLOAT FALSE EXPONENT EVENT EQUAL EOF EMAX ELSE DOT DO DIV DIFF CPUTIME COSINUS CONFIG COMMENT COMMA COLON CL_PAR CL_CUR AND ABS
follow(model_body) = #
follow(model) = #
follow(link_states) = DIV CL_BRA
follow(link_state) = UNDERSCORE SPACE SHARP NEWLINE INT ID DOT DIV COMMENT COMMA CL_BRA
follow(link_modif) = CL_BRA
follow(internal_states) = DIV CL_CUR
follow(internal_state) = SPACE SHARP NEWLINE ID DIV COMMENT COMMA CL_CUR
follow(internal_modif) = CL_CUR
follow(interface) = CL_PAR
follow(interactive_command) = #
follow(init_declaration) = TOKEN SIGNATURE RAR PLOT PIPE PERT OBS LRAR LET LABEL INIT ID EOF DOT CONFIG
follow(id_list) = TOKEN SIGNATURE RAR PLOT PIPE PERT OBS LRAR LET LABEL INIT ID EOF DOT CONFIG
follow(effect_list) = TOKEN SIGNATURE REPEAT RAR PLOT PIPE PERT OBS LRAR LET LABEL INIT ID EOF DOT CONFIG
follow(effect) = SEMICOLON EOF CL_PAR
follow(counter_test) = SPACE NEWLINE DIV COMMENT CL_CUR
follow(counter_modif) = SPACE NEWLINE COMMENT CL_CUR
follow(constant) = TRUE TOKEN TMAX TIME THEN TAN STRING SQRT SPACE SMALLER SINUS SIGNATURE SEMICOLON RAR POW PLUS PLOT PIPE PERT OR OP_PAR OP_CUR OBS NULL_EVENT NEWLINE MULT MOD MINUS MIN MAX LRAR LOG LET LABEL INT INIT INFINITY ID GREATER FLOAT FALSE EXPONENT EVENT EQUAL EOF EMAX ELSE DOT DO DIV DIFF CPUTIME COSINUS CONFIG COMMENT COMMA COLON CL_PAR CL_CUR AND ABS
follow(boolean) = SPACE SEMICOLON NEWLINE GREATER EOF COMMENT CL_PAR
follow(bool_expr_no_or) = TOKEN THEN SIGNATURE SEMICOLON RAR PLOT PIPE PERT OR OBS LRAR LET LABEL INIT ID EOF DOT DO CONFIG CL_PAR
follow(bool_expr_comp) = TOKEN THEN SIGNATURE SEMICOLON RAR PLOT PIPE PERT OR OBS LRAR LET LABEL INIT ID EOF DOT DO CONFIG CL_PAR AND
follow(bool_expr) = TOKEN THEN SIGNATURE SEMICOLON RAR PLOT PIPE PERT OBS LRAR LET LABEL INIT ID EOF DOT DO CONFIG CL_PAR
follow(birate) = TOKEN SIGNATURE RAR PLOT PIPE PERT OBS LRAR LET LABEL INIT ID EOF DOT CONFIG
follow(arrow) = error SPACE SEMICOLON PIPE NEWLINE ID EOF DOT COMMENT CL_PAR AT
follow(annot) = error UNDERSCORE TRUE TRACK TOKEN TMAX TIME THEN TAN STRING STOP SQRT SPECIES_OF SNAPSHOT SMALLER SINUS SIGNATURE SHARP SEMICOLON RUN REPEAT RAR PRINTF POW PLUS PLOTENTRY PLOT PIPE PERT OR OP_PAR OP_CUR OP_BRA OBS NULL_EVENT NOT MULT MOD MINUS MIN MAX LRAR LOG LET LABEL INTRO INT INIT INFINITY ID GREATER FLUX FLOAT FALSE EXPONENT EVENT EQUAL EOF EMAX ELSE DOT DO DIV DIFF DELETE CPUTIME COSINUS CONFIG COMMA COLON CL_PAR CL_CUR CL_BRA AT ASSIGN APPLY AND ALARM ABS
follow(alg_with_radius) = CL_CUR
follow(alg_expr_up_to_sum) = TRUE TOKEN THEN STRING SMALLER SIGNATURE SEMICOLON RAR PLUS PLOT PIPE PERT OR OP_PAR OP_CUR OBS MULT MINUS LRAR LET LABEL INIT ID GREATER FALSE EQUAL EOF ELSE DOT DO DIV DIFF CONFIG COMMA COLON CL_PAR CL_CUR AND
follow(alg_expr_up_to_prod) = TRUE TOKEN THEN STRING SMALLER SIGNATURE SEMICOLON RAR PLUS PLOT PIPE PERT OR OP_PAR OP_CUR OBS MULT MOD MINUS LRAR LET LABEL INIT ID GREATER FALSE EQUAL EOF ELSE DOT DO DIV DIFF CONFIG COMMA COLON CL_PAR CL_CUR AND
follow(alg_expr_up_to_mod) = TRUE TOKEN THEN STRING SMALLER SIGNATURE SEMICOLON RAR PLUS PLOT PIPE PERT OR OP_PAR OP_CUR OBS MULT MOD MINUS LRAR LET LABEL INIT ID GREATER FALSE EQUAL EOF ELSE DOT DO DIV DIFF CONFIG COMMA COLON CL_PAR CL_CUR AND
follow(alg_expr_up_to_if) = TRUE TOKEN THEN STRING SMALLER SIGNATURE SEMICOLON RAR PLUS PLOT PIPE PERT OR OP_PAR OP_CUR OBS MINUS LRAR LET LABEL INIT ID GREATER FALSE EQUAL EOF ELSE DOT DO DIFF CONFIG COMMA COLON CL_PAR CL_CUR AND
follow(alg_expr) = TOKEN THEN SIGNATURE SEMICOLON RAR PLOT PIPE PERT OR OP_PAR OP_CUR OBS LRAR LET LABEL INIT ID EOF ELSE DOT DO CONFIG COMMA COLON CL_PAR CL_CUR AND
follow(agent_modif) = error TRUE TOKEN SIGNATURE SEMICOLON RAR PLOT PIPE PERT OBS LRAR LET LABEL INIT ID FALSE EOF DOT CONFIG COMMA CL_PAR AT
follow(agent) = error TRUE TOKEN SIGNATURE SEMICOLON RAR PLOT PIPE PERT OBS LRAR LET LABEL INIT ID FALSE EOF DOT CONFIG COMMA CL_PAR AT
Built an LR(0) automaton with 519 states.
The grammar is not SLR(1) -- 4 states have a conflict.
The construction mode is pager.
Built an LR(1) automaton with 580 states.
193 out of 580 states have a default reduction.
The action table is 47560 entries; 5778 non-zero; 2792 compressed.
The action table occupies roughly 5672 bytes.
The goto table is 35960 entries; 895 non-zero; 1540 compressed.
The goto table occupies roughly 3168 bytes.
The error table occupies roughly 5984 bytes.
The default_reduction table occupies roughly 616 bytes.
The lhs table occupies roughly 248 bytes.
The trace table occupies roughly 8 bytes.
