Grammar has 84 nonterminal symbols, among which 1 start symbols.
Grammar has 73 terminal symbols.
Grammar has 228 productions.
nullable(univ_spec) = false
nullable(tm) = false
nullable(tele_with_env) = false
nullable(tele) = false
nullable(spine_con) = false
nullable(separated_nonempty_list(PIPE,located(econ))) = false
nullable(separated_nonempty_list(PIPE,eface)) = false
nullable(separated_nonempty_list(PIPE,econstr)) = false
nullable(separated_nonempty_list(PIPE,ecofib0)) = false
nullable(separated_nonempty_list(PIPE,eclause)) = false
nullable(separated_nonempty_list(COMMA,mlval)) = false
nullable(separated_nonempty_list(COMMA,located(econ))) = false
nullable(separated_nonempty_list(COMMA,einvpat)) = false
nullable(pipe_block(located(econ))) = false
nullable(pipe_block(eface)) = false
nullable(pipe_block(eclause)) = false
nullable(option(preceded(IN,located(econ)))) = true
nullable(option(preceded(COLON,univ_spec))) = true
nullable(option(located(atomic))) = true
nullable(option(PIPE)) = true
nullable(nonempty_list(etele_cell)) = false
nullable(nonempty_list(ATOM)) = false
nullable(multibind(tm)) = false
nullable(multibind(constrained)) = false
nullable(mlval) = false
nullable(mltoplevel) = false
nullable(mlcmd) = false
nullable(loption(separated_nonempty_list(PIPE,located(econ)))) = true
nullable(loption(separated_nonempty_list(PIPE,eface))) = true
nullable(loption(separated_nonempty_list(PIPE,econstr))) = true
nullable(loption(separated_nonempty_list(PIPE,eclause))) = true
nullable(loption(separated_nonempty_list(COMMA,mlval))) = true
nullable(loption(pipe_block(eface))) = true
nullable(located(spine_con)) = false
nullable(located(edimension)) = false
nullable(located(econ)) = false
nullable(located(atomoid_econ)) = false
nullable(located(atomic_mlcmd)) = false
nullable(located(atomic)) = false
nullable(located(EOF)) = false
nullable(list(tm)) = true
nullable(list(framic)) = true
nullable(list(face(tm))) = true
nullable(list(face(dimbind(tm)))) = true
nullable(list(etele_cell)) = true
nullable(list(epatbind)) = true
nullable(list(einvpat)) = true
nullable(list(ATOM)) = true
nullable(kind) = true
nullable(head) = false
nullable(framoid) = false
nullable(framic) = false
nullable(face(tm)) = false
nullable(face(dimbind(tm))) = false
nullable(etele_cell) = false
nullable(escheme) = true
nullable(eproj) = false
nullable(epatbind) = false
nullable(elist(tm)) = true
nullable(elist(face(tm))) = true
nullable(elist(face(dimbind(tm)))) = true
nullable(einvpat) = false
nullable(eface) = false
nullable(eequation) = false
nullable(edimension) = false
nullable(edata_params) = true
nullable(econstr) = false
nullable(econ) = false
nullable(ecofib0) = false
nullable(ecofib) = false
nullable(eclause) = false
nullable(dimbind(tm)) = false
nullable(def_modifiers) = true
nullable(debug_filter) = true
nullable(data_modifiers) = true
nullable(data_decl) = false
nullable(cut) = false
nullable(constrained) = false
nullable(cmd) = false
nullable(atomoid_econ) = false
nullable(atomic_mlcmd) = false
nullable(atomic) = false
nullable(atom_econ) = false
nullable(app_proj_spine) = false
first(univ_spec) = TYPE
first(tm) = NUMERAL LPR ATOM
first(tele_with_env) = NUMERAL LSQ LPR ATOM
first(tele) = NUMERAL LSQ LPR ATOM
first(spine_con) = V TYPE REFL NUMERAL LTR LSQ LPR HOLE_NAME ELIM COMP BOX BACKTICK ATOM
first(separated_nonempty_list(PIPE,located(econ))) = V TYPE REFL NUMERAL LTR LSQ LPR LET LAM HOLE_NAME ELIM DIM COMP COE BOX BACKTICK ATOM
first(separated_nonempty_list(PIPE,eface)) = NUMERAL LPR BOUNDARY ATOM
first(separated_nonempty_list(PIPE,econstr)) = ATOM
first(separated_nonempty_list(PIPE,ecofib0)) = NUMERAL LPR BOUNDARY ATOM
first(separated_nonempty_list(PIPE,eclause)) = ATOM AST
first(separated_nonempty_list(COMMA,mlval)) = STRING LGL LBR ATOM
first(separated_nonempty_list(COMMA,located(econ))) = V TYPE REFL NUMERAL LTR LSQ LPR LET LAM HOLE_NAME ELIM DIM COMP COE BOX BACKTICK ATOM
first(separated_nonempty_list(COMMA,einvpat)) = LSQ LPR ATOM AST
first(pipe_block(located(econ))) = WITH LSQ
first(pipe_block(eface)) = WITH LSQ
first(pipe_block(eclause)) = WITH LSQ
first(option(preceded(IN,located(econ)))) = IN
first(option(preceded(COLON,univ_spec))) = COLON
first(option(located(atomic))) = TYPE REFL NUMERAL LTR LPR HOLE_NAME ELIM BACKTICK ATOM
first(option(PIPE)) = PIPE
first(nonempty_list(etele_cell)) = LPR DIM
first(nonempty_list(ATOM)) = ATOM
first(multibind(tm)) = NUMERAL LSQ LPR LGL ATOM
first(multibind(constrained)) = NUMERAL LSQ LPR LGL ATOM
first(mlval) = STRING LGL LBR ATOM
first(mltoplevel) = error QUIT PUBLIC PRIVATE OPAQUE META IMPORT EOF DEF DATA
first(mlcmd) = STRING PRINT NORMALIZE LPR LLGL LGL LET LBR FUN DEBUG CHECK BEGIN BANG ATOM
first(loption(separated_nonempty_list(PIPE,located(econ)))) = V TYPE REFL NUMERAL LTR LSQ LPR LET LAM HOLE_NAME ELIM DIM COMP COE BOX BACKTICK ATOM
first(loption(separated_nonempty_list(PIPE,eface))) = NUMERAL LPR BOUNDARY ATOM
first(loption(separated_nonempty_list(PIPE,econstr))) = ATOM
first(loption(separated_nonempty_list(PIPE,eclause))) = ATOM AST
first(loption(separated_nonempty_list(COMMA,mlval))) = STRING LGL LBR ATOM
first(loption(pipe_block(eface))) = WITH LSQ
first(located(spine_con)) = V TYPE REFL NUMERAL LTR LSQ LPR HOLE_NAME ELIM COMP BOX BACKTICK ATOM
first(located(edimension)) = NUMERAL LPR ATOM
first(located(econ)) = V TYPE REFL NUMERAL LTR LSQ LPR LET LAM HOLE_NAME ELIM DIM COMP COE BOX BACKTICK ATOM
first(located(atomoid_econ)) = TYPE REFL NUMERAL LTR LPR HOLE_NAME ELIM BACKTICK
first(located(atomic_mlcmd)) = STRING PRINT NORMALIZE LPR LLGL LGL LBR BEGIN BANG ATOM
first(located(atomic)) = TYPE REFL NUMERAL LTR LPR HOLE_NAME ELIM BACKTICK ATOM
first(located(EOF)) = EOF
first(list(tm)) = NUMERAL LPR ATOM
first(list(framic)) = TYPE REFL NUMERAL LTR LPR HOLE_NAME ELIM DOT BACKTICK ATOM
first(list(face(tm))) = LSQ
first(list(face(dimbind(tm)))) = LSQ
first(list(etele_cell)) = LPR DIM
first(list(epatbind)) = LSQ LPR ATOM AST
first(list(einvpat)) = LSQ LPR ATOM AST
first(list(ATOM)) = ATOM
first(kind) = PRE KAN
first(head) = LPR ATOM
first(framoid) = TYPE REFL NUMERAL LTR LPR HOLE_NAME ELIM DOT BACKTICK
first(framic) = TYPE REFL NUMERAL LTR LPR HOLE_NAME ELIM DOT BACKTICK ATOM
first(face(tm)) = LSQ
first(face(dimbind(tm))) = LSQ
first(etele_cell) = LPR DIM
first(escheme) = LPR DIM COLON
first(eproj) = DOT
first(epatbind) = LSQ LPR ATOM AST
first(elist(tm)) = NUMERAL LPR ATOM
first(elist(face(tm))) = LSQ
first(elist(face(dimbind(tm)))) = LSQ
first(einvpat) = LSQ LPR ATOM AST
first(eface) = NUMERAL LPR BOUNDARY ATOM
first(eequation) = NUMERAL LPR ATOM
first(edimension) = NUMERAL LPR ATOM
first(edata_params) = LPR DIM
first(econstr) = ATOM
first(econ) = V TYPE REFL NUMERAL LTR LSQ LPR LET LAM HOLE_NAME ELIM DIM COMP COE BOX BACKTICK ATOM
first(ecofib0) = NUMERAL LPR BOUNDARY ATOM
first(ecofib) = NUMERAL LPR BOUNDARY ATOM
first(eclause) = ATOM AST
first(dimbind(tm)) = LGL
first(def_modifiers) = PRIVATE OPAQUE
first(debug_filter) = ATOM
first(data_modifiers) = PRIVATE
first(data_decl) = DATA
first(cut) = LPR ATOM
first(constrained) = NUMERAL LPR ATOM
first(cmd) = LPR ATOM
first(atomoid_econ) = TYPE REFL NUMERAL LTR LPR HOLE_NAME ELIM BACKTICK
first(atomic_mlcmd) = STRING PRINT NORMALIZE LPR LLGL LGL LBR BEGIN BANG ATOM
first(atomic) = TYPE REFL NUMERAL LTR LPR HOLE_NAME ELIM BACKTICK ATOM
first(atom_econ) = ATOM
first(app_proj_spine) = TYPE REFL NUMERAL LTR LPR HOLE_NAME ELIM BACKTICK ATOM
minimal(univ_spec) = (* 1 *) TYPE
minimal(tm) = (* 1 *) NUMERAL
minimal(tele_with_env) = (* 1 *) NUMERAL
minimal(tele) = (* 1 *) NUMERAL
minimal(spine_con) = (* 1 *) ATOM
minimal(separated_nonempty_list(PIPE,located(econ))) = (* 1 *) ATOM
minimal(separated_nonempty_list(PIPE,eface)) = (* 5 *) NUMERAL EQUALS NUMERAL RIGHT_ARROW ATOM
minimal(separated_nonempty_list(PIPE,econstr)) = (* 1 *) ATOM
minimal(separated_nonempty_list(PIPE,ecofib0)) = (* 3 *) NUMERAL EQUALS NUMERAL
minimal(separated_nonempty_list(PIPE,eclause)) = (* 3 *) ATOM RIGHT_ARROW ATOM
minimal(separated_nonempty_list(COMMA,mlval)) = (* 1 *) STRING
minimal(separated_nonempty_list(COMMA,located(econ))) = (* 1 *) ATOM
minimal(separated_nonempty_list(COMMA,einvpat)) = (* 1 *) ATOM
minimal(pipe_block(located(econ))) = (* 2 *) WITH END
minimal(pipe_block(eface)) = (* 2 *) WITH END
minimal(pipe_block(eclause)) = (* 2 *) WITH END
minimal(option(preceded(IN,located(econ)))) = (* 0 *)
minimal(option(preceded(COLON,univ_spec))) = (* 0 *)
minimal(option(located(atomic))) = (* 0 *)
minimal(option(PIPE)) = (* 0 *)
minimal(nonempty_list(etele_cell)) = (* 1 *) DIM
minimal(nonempty_list(ATOM)) = (* 1 *) ATOM
minimal(multibind(tm)) = (* 1 *) NUMERAL
minimal(multibind(constrained)) = (* 1 *) NUMERAL
minimal(mlval) = (* 1 *) STRING
minimal(mltoplevel) = (* 1 *) EOF
minimal(mlcmd) = (* 1 *) STRING
minimal(loption(separated_nonempty_list(PIPE,located(econ)))) = (* 0 *)
minimal(loption(separated_nonempty_list(PIPE,eface))) = (* 0 *)
minimal(loption(separated_nonempty_list(PIPE,econstr))) = (* 0 *)
minimal(loption(separated_nonempty_list(PIPE,eclause))) = (* 0 *)
minimal(loption(separated_nonempty_list(COMMA,mlval))) = (* 0 *)
minimal(loption(pipe_block(eface))) = (* 0 *)
minimal(located(spine_con)) = (* 1 *) ATOM
minimal(located(edimension)) = (* 1 *) NUMERAL
minimal(located(econ)) = (* 1 *) ATOM
minimal(located(atomoid_econ)) = (* 1 *) HOLE_NAME
minimal(located(atomic_mlcmd)) = (* 1 *) STRING
minimal(located(atomic)) = (* 1 *) ATOM
minimal(located(EOF)) = (* 1 *) EOF
minimal(list(tm)) = (* 0 *)
minimal(list(framic)) = (* 0 *)
minimal(list(face(tm))) = (* 0 *)
minimal(list(face(dimbind(tm)))) = (* 0 *)
minimal(list(etele_cell)) = (* 0 *)
minimal(list(epatbind)) = (* 0 *)
minimal(list(einvpat)) = (* 0 *)
minimal(list(ATOM)) = (* 0 *)
minimal(kind) = (* 0 *)
minimal(head) = (* 1 *) ATOM
minimal(framoid) = (* 1 *) HOLE_NAME
minimal(framic) = (* 1 *) ATOM
minimal(face(tm)) = (* 6 *) LSQ NUMERAL EQUALS NUMERAL NUMERAL RSQ
minimal(face(dimbind(tm))) = (* 9 *) LSQ NUMERAL EQUALS NUMERAL LGL ATOM RGL NUMERAL RSQ
minimal(etele_cell) = (* 1 *) DIM
minimal(escheme) = (* 0 *)
minimal(eproj) = (* 2 *) DOT FST
minimal(epatbind) = (* 1 *) ATOM
minimal(elist(tm)) = (* 0 *)
minimal(elist(face(tm))) = (* 0 *)
minimal(elist(face(dimbind(tm)))) = (* 0 *)
minimal(einvpat) = (* 1 *) ATOM
minimal(eface) = (* 5 *) NUMERAL EQUALS NUMERAL RIGHT_ARROW ATOM
minimal(eequation) = (* 3 *) NUMERAL EQUALS NUMERAL
minimal(edimension) = (* 1 *) NUMERAL
minimal(edata_params) = (* 0 *)
minimal(econstr) = (* 1 *) ATOM
minimal(econ) = (* 1 *) ATOM
minimal(ecofib0) = (* 3 *) NUMERAL EQUALS NUMERAL
minimal(ecofib) = (* 3 *) NUMERAL EQUALS NUMERAL
minimal(eclause) = (* 3 *) ATOM RIGHT_ARROW ATOM
minimal(dimbind(tm)) = (* 4 *) LGL ATOM RGL NUMERAL
minimal(def_modifiers) = (* 0 *)
minimal(debug_filter) = (* 0 *)
minimal(data_modifiers) = (* 0 *)
minimal(data_decl) = (* 3 *) DATA ATOM WHERE
minimal(cut) = (* 1 *) ATOM
minimal(constrained) = (* 1 *) NUMERAL
minimal(cmd) = (* 1 *) ATOM
minimal(atomoid_econ) = (* 1 *) HOLE_NAME
minimal(atomic_mlcmd) = (* 1 *) STRING
minimal(atomic) = (* 1 *) ATOM
minimal(atom_econ) = (* 1 *) ATOM
minimal(app_proj_spine) = (* 1 *) ATOM
maximal(univ_spec) = 4
maximal(tm) = infinity
maximal(tele_with_env) = infinity
maximal(tele) = infinity
maximal(spine_con) = infinity
maximal(separated_nonempty_list(PIPE,located(econ))) = infinity
maximal(separated_nonempty_list(PIPE,eface)) = infinity
maximal(separated_nonempty_list(PIPE,econstr)) = infinity
maximal(separated_nonempty_list(PIPE,ecofib0)) = infinity
maximal(separated_nonempty_list(PIPE,eclause)) = infinity
maximal(separated_nonempty_list(COMMA,mlval)) = infinity
maximal(separated_nonempty_list(COMMA,located(econ))) = infinity
maximal(separated_nonempty_list(COMMA,einvpat)) = infinity
maximal(pipe_block(located(econ))) = infinity
maximal(pipe_block(eface)) = infinity
maximal(pipe_block(eclause)) = infinity
maximal(option(preceded(IN,located(econ)))) = infinity
maximal(option(preceded(COLON,univ_spec))) = 5
maximal(option(located(atomic))) = infinity
maximal(option(PIPE)) = 1
maximal(nonempty_list(etele_cell)) = infinity
maximal(nonempty_list(ATOM)) = infinity
maximal(multibind(tm)) = infinity
maximal(multibind(constrained)) = infinity
maximal(mlval) = infinity
maximal(mltoplevel) = infinity
maximal(mlcmd) = infinity
maximal(loption(separated_nonempty_list(PIPE,located(econ)))) = infinity
maximal(loption(separated_nonempty_list(PIPE,eface))) = infinity
maximal(loption(separated_nonempty_list(PIPE,econstr))) = infinity
maximal(loption(separated_nonempty_list(PIPE,eclause))) = infinity
maximal(loption(separated_nonempty_list(COMMA,mlval))) = infinity
maximal(loption(pipe_block(eface))) = infinity
maximal(located(spine_con)) = infinity
maximal(located(edimension)) = infinity
maximal(located(econ)) = infinity
maximal(located(atomoid_econ)) = infinity
maximal(located(atomic_mlcmd)) = infinity
maximal(located(atomic)) = infinity
maximal(located(EOF)) = 1
maximal(list(tm)) = infinity
maximal(list(framic)) = infinity
maximal(list(face(tm))) = infinity
maximal(list(face(dimbind(tm)))) = infinity
maximal(list(etele_cell)) = infinity
maximal(list(epatbind)) = infinity
maximal(list(einvpat)) = infinity
maximal(list(ATOM)) = infinity
maximal(kind) = 1
maximal(head) = infinity
maximal(framoid) = infinity
maximal(framic) = infinity
maximal(face(tm)) = infinity
maximal(face(dimbind(tm))) = infinity
maximal(etele_cell) = infinity
maximal(escheme) = infinity
maximal(eproj) = 2
maximal(epatbind) = infinity
maximal(elist(tm)) = infinity
maximal(elist(face(tm))) = infinity
maximal(elist(face(dimbind(tm)))) = infinity
maximal(einvpat) = infinity
maximal(eface) = infinity
maximal(eequation) = infinity
maximal(edimension) = infinity
maximal(edata_params) = infinity
maximal(econstr) = infinity
maximal(econ) = infinity
maximal(ecofib0) = infinity
maximal(ecofib) = infinity
maximal(eclause) = infinity
maximal(dimbind(tm)) = infinity
maximal(def_modifiers) = 2
maximal(debug_filter) = 1
maximal(data_modifiers) = 1
maximal(data_decl) = infinity
maximal(cut) = infinity
maximal(constrained) = infinity
maximal(cmd) = infinity
maximal(atomoid_econ) = infinity
maximal(atomic_mlcmd) = infinity
maximal(atomic) = infinity
maximal(atom_econ) = 3
maximal(app_proj_spine) = infinity
follow(univ_spec) = error WITH WHERE TYPE TIMES RSQ RRGL RPR RIGHT_ARROW REFL RBR QUIT PUBLIC PRIVATE PIPE OPAQUE NUMERAL META LTR LSQ LPR IN IMPORT HOLE_NAME EQUALS EOF END ELIM DOT DEF DATA COMMA BACKTICK ATOM AST
follow(tm) = error WITH TYPE TIMES RSQ RRGL RPR RIGHT_ARROW REFL RBR QUIT PUBLIC PRIVATE PIPE OPAQUE NUMERAL META LTR LSQ LPR LGL IN IMPORT HOLE_NAME EQUALS EOF END ELIM DOT DEF DATA COMMA BACKTICK ATOM AST
follow(tele_with_env) = RPR
follow(tele) = RPR
follow(spine_con) = error WITH TIMES RSQ RRGL RPR RIGHT_ARROW RBR QUIT PUBLIC PRIVATE PIPE OPAQUE META LSQ IN IMPORT EQUALS EOF END DEF DATA COMMA AST
follow(separated_nonempty_list(PIPE,located(econ))) = RSQ END
follow(separated_nonempty_list(PIPE,eface)) = RSQ END
follow(separated_nonempty_list(PIPE,econstr)) = error RRGL QUIT PUBLIC PRIVATE OPAQUE META IMPORT EOF DEF DATA
follow(separated_nonempty_list(PIPE,ecofib0)) = RPR RIGHT_ARROW
follow(separated_nonempty_list(PIPE,eclause)) = RSQ END
follow(separated_nonempty_list(COMMA,mlval)) = RGL
follow(separated_nonempty_list(COMMA,located(econ))) = RPR
follow(separated_nonempty_list(COMMA,einvpat)) = RPR
follow(pipe_block(located(econ))) = error WITH TIMES RSQ RRGL RPR RIGHT_ARROW RBR QUIT PUBLIC PRIVATE PIPE OPAQUE META LSQ IN IMPORT EQUALS EOF END DEF DATA COMMA AST
follow(pipe_block(eface)) = error WITH TIMES RSQ RRGL RPR RIGHT_ARROW RBR QUIT PUBLIC PRIVATE PIPE OPAQUE META LSQ IN IMPORT EQUALS EOF END DEF DATA COMMA AST
follow(pipe_block(eclause)) = error WITH TYPE TIMES RSQ RRGL RPR RIGHT_ARROW REFL RBR QUIT PUBLIC PRIVATE PIPE OPAQUE NUMERAL META LTR LSQ LPR IN IMPORT HOLE_NAME EQUALS EOF END ELIM DOT DEF DATA COMMA BACKTICK ATOM AST
follow(option(preceded(IN,located(econ)))) = WITH LSQ
follow(option(preceded(COLON,univ_spec))) = WHERE
follow(option(located(atomic))) = WITH LSQ IN
follow(option(PIPE)) = error V TYPE RSQ RRGL REFL QUIT PUBLIC PRIVATE OPAQUE NUMERAL META LTR LSQ LPR LET LAM IMPORT HOLE_NAME EOF END ELIM DIM DEF DATA COMP COE BOX BOUNDARY BACKTICK ATOM AST
follow(nonempty_list(etele_cell)) = TIMES RIGHT_TACK RIGHT_ARROW AST
follow(nonempty_list(ATOM)) = error WITH TYPE TIMES RSQ RRGL RPR RIGHT_ARROW REFL RBR QUIT PUBLIC PRIVATE PIPE OPAQUE NUMERAL META LTR LSQ LPR IN IMPORT HOLE_NAME EQUALS EOF END ELIM DOT DEF DATA COMMA COLON CARET BACKTICK AST
follow(multibind(tm)) = RPR
follow(multibind(constrained)) = RPR
follow(mlval) = STRING SEMI RTR RPR RGL RBR LGL LBR IN END COMMA COLON ATOM
follow(mltoplevel) = #
follow(mlcmd) = RTR RPR RBR IN END
follow(loption(separated_nonempty_list(PIPE,located(econ)))) = RSQ END
follow(loption(separated_nonempty_list(PIPE,eface))) = RSQ END
follow(loption(separated_nonempty_list(PIPE,econstr))) = error RRGL QUIT PUBLIC PRIVATE OPAQUE META IMPORT EOF DEF DATA
follow(loption(separated_nonempty_list(PIPE,eclause))) = RSQ END
follow(loption(separated_nonempty_list(COMMA,mlval))) = RGL
follow(loption(pipe_block(eface))) = error RRGL QUIT PUBLIC PRIVATE PIPE OPAQUE META IMPORT EOF DEF DATA
follow(located(spine_con)) = TIMES RIGHT_ARROW AST
follow(located(edimension)) = RPR RIGHT_ARROW PIPE EQUALS ATOM
follow(located(econ)) = error WITH RSQ RRGL RPR RBR QUIT PUBLIC PRIVATE PIPE OPAQUE META LSQ IN IMPORT EQUALS EOF END DEF DATA COMMA
follow(located(atomoid_econ)) = error WITH TYPE TIMES RSQ RRGL RPR RIGHT_ARROW REFL RBR QUIT PUBLIC PRIVATE PIPE OPAQUE NUMERAL META LTR LSQ LPR IN IMPORT HOLE_NAME EQUALS EOF END ELIM DOT DEF DATA COMMA BACKTICK ATOM AST
follow(located(atomic_mlcmd)) = STRING SEMI RTR RPR RBR LGL LBR IN END ATOM
follow(located(atomic)) = error WITH TYPE TIMES RSQ RRGL RPR RIGHT_ARROW REFL RBR QUIT PUBLIC PRIVATE PIPE OPAQUE NUMERAL META LTR LSQ LPR IN IMPORT HOLE_NAME EQUALS EOF END ELIM DOT DEF DATA COMMA BACKTICK ATOM AST
follow(located(EOF)) = #
follow(list(tm)) = RPR
follow(list(framic)) = error WITH TIMES RSQ RRGL RPR RIGHT_ARROW RBR QUIT PUBLIC PRIVATE PIPE OPAQUE META LSQ IN IMPORT EQUALS EOF END DEF DATA COMMA AST
follow(list(face(tm))) = RPR
follow(list(face(dimbind(tm)))) = RPR
follow(list(etele_cell)) = error WITH RRGL QUIT PUBLIC PRIVATE PIPE OPAQUE META LSQ IMPORT EQUALS EOF DEF DATA COLON
follow(list(epatbind)) = RIGHT_ARROW
follow(list(einvpat)) = RIGHT_ARROW
follow(list(ATOM)) = RGL
follow(kind) = error WITH WHERE TYPE TIMES RSQ RRGL RPR RIGHT_ARROW REFL RBR QUIT PUBLIC PRIVATE PIPE OPAQUE NUMERAL META LTR LSQ LPR IN IMPORT HOLE_NAME EQUALS EOF END ELIM DOT DEF DATA COMMA CARET BACKTICK ATOM AST
follow(head) = error WITH TYPE TIMES RSQ RRGL RPR RIGHT_ARROW REFL RBR QUIT PUBLIC PRIVATE PIPE OPAQUE NUMERAL META LTR LSQ LPR LGL IN IMPORT HOLE_NAME EQUALS EOF END ELIM DOT DEF DATA COMMA BACKTICK ATOM AST
follow(framoid) = error WITH TYPE TIMES RSQ RRGL RPR RIGHT_ARROW REFL RBR QUIT PUBLIC PRIVATE PIPE OPAQUE NUMERAL META LTR LSQ LPR IN IMPORT HOLE_NAME EQUALS EOF END ELIM DOT DEF DATA COMMA BACKTICK ATOM AST
follow(framic) = error WITH TYPE TIMES RSQ RRGL RPR RIGHT_ARROW REFL RBR QUIT PUBLIC PRIVATE PIPE OPAQUE NUMERAL META LTR LSQ LPR IN IMPORT HOLE_NAME EQUALS EOF END ELIM DOT DEF DATA COMMA BACKTICK ATOM AST
follow(face(tm)) = RPR LSQ
follow(face(dimbind(tm))) = RPR LSQ
follow(etele_cell) = error WITH TIMES RRGL RIGHT_TACK RIGHT_ARROW QUIT PUBLIC PRIVATE PIPE OPAQUE META LSQ LPR IMPORT EQUALS EOF DIM DEF DATA COLON AST
follow(escheme) = EQUALS
follow(eproj) = error WITH TYPE TIMES RSQ RRGL RPR RIGHT_ARROW REFL RBR QUIT PUBLIC PRIVATE PIPE OPAQUE NUMERAL META LTR LSQ LPR IN IMPORT HOLE_NAME EQUALS EOF END ELIM DOT DEF DATA COMMA BACKTICK ATOM AST
follow(epatbind) = RIGHT_ARROW LSQ LPR ATOM AST
follow(elist(tm)) = RPR
follow(elist(face(tm))) = RPR
follow(elist(face(dimbind(tm)))) = RPR
follow(einvpat) = RPR RIGHT_ARROW LSQ LPR EQUALS DIM COMMA COLON ATOM AST
follow(eface) = RSQ PIPE END
follow(eequation) = RPR RIGHT_ARROW PIPE ATOM
follow(edimension) = RPR RIGHT_ARROW PIPE EQUALS ATOM
follow(edata_params) = ATOM
follow(econstr) = error RRGL QUIT PUBLIC PRIVATE PIPE OPAQUE META IMPORT EOF DEF DATA
follow(econ) = error WITH RSQ RRGL RPR RBR QUIT PUBLIC PRIVATE PIPE OPAQUE META LSQ IN IMPORT EQUALS EOF END DEF DATA COMMA
follow(ecofib0) = RPR RIGHT_ARROW PIPE ATOM
follow(ecofib) = RPR RIGHT_ARROW
follow(eclause) = RSQ PIPE END
follow(dimbind(tm)) = RSQ NUMERAL LPR ATOM
follow(def_modifiers) = DEF
follow(debug_filter) = RTR RPR RBR IN END
follow(data_modifiers) = DATA
follow(data_decl) = error RRGL QUIT PUBLIC PRIVATE OPAQUE META IMPORT EOF DEF DATA
follow(cut) = error WITH TYPE TIMES RSQ RRGL RPR RIGHT_ARROW REFL RBR QUIT PUBLIC PRIVATE PIPE OPAQUE NUMERAL META LTR LSQ LPR LGL IN IMPORT HOLE_NAME EQUALS EOF END ELIM DOT DEF DATA COMMA BACKTICK ATOM AST
follow(constrained) = RPR
follow(cmd) = error WITH TYPE TIMES RSQ RRGL RPR RIGHT_ARROW REFL RBR QUIT PUBLIC PRIVATE PIPE OPAQUE NUMERAL META LTR LSQ LPR LGL IN IMPORT HOLE_NAME EQUALS EOF END ELIM DOT DEF DATA COMMA BACKTICK ATOM AST
follow(atomoid_econ) = error WITH TYPE TIMES RSQ RRGL RPR RIGHT_ARROW REFL RBR QUIT PUBLIC PRIVATE PIPE OPAQUE NUMERAL META LTR LSQ LPR IN IMPORT HOLE_NAME EQUALS EOF END ELIM DOT DEF DATA COMMA BACKTICK ATOM AST
follow(atomic_mlcmd) = STRING SEMI RTR RPR RBR LGL LBR IN END ATOM
follow(atomic) = error WITH TYPE TIMES RSQ RRGL RPR RIGHT_ARROW REFL RBR QUIT PUBLIC PRIVATE PIPE OPAQUE NUMERAL META LTR LSQ LPR IN IMPORT HOLE_NAME EQUALS EOF END ELIM DOT DEF DATA COMMA BACKTICK ATOM AST
follow(atom_econ) = error WITH TYPE TIMES RSQ RRGL RPR RIGHT_ARROW REFL RBR QUIT PUBLIC PRIVATE PIPE OPAQUE NUMERAL META LTR LSQ LPR IN IMPORT HOLE_NAME EQUALS EOF END ELIM DOT DEF DATA COMMA BACKTICK ATOM AST
follow(app_proj_spine) = error WITH TIMES RSQ RRGL RPR RIGHT_ARROW RBR QUIT PUBLIC PRIVATE PIPE OPAQUE META LSQ IN IMPORT EQUALS EOF END DEF DATA COMMA AST
Built an LR(0) automaton with 512 states.
The grammar is not SLR(1) -- 3 states have a conflict.
The construction mode is pager.
Built an LR(1) automaton with 782 states.
273 out of 782 states have a default reduction.
318 out of 782 states are represented.
44 out of 160 symbols keep track of their start position.
54 out of 160 symbols keep track of their end position.
131 out of 229 productions exploit shiftreduce optimization.
157 out of 782 states can peek at an error.
1882 functions before inlining, 368 functions after inlining.
