State 0:
## Known stack suffix:
##
## LR(1) items:
heterogenous_term_and_type' -> . heterogenous_term_and_type [ # ]
## Transitions:
-- On SYMBOL shift to state 1
-- On LPAREN shift to state 2
-- On LAMBDA0 shift to state 3
-- On LAMBDA shift to state 6
-- On IDENT shift to state 8
-- On type_or_term0(COLON) shift to state 13
-- On type_or_term(COLON) shift to state 26
-- On heterogenous_term_and_type shift to state 55
-- On bound_term(COLON) shift to state 16
## Reductions:

State 1:
## Known stack suffix:
## SYMBOL
## LR(1) items:
type_or_term0(COLON) -> SYMBOL . [ RPAREN LIN_ARROW COLON ARROW ]
type_or_term0(COLON) -> SYMBOL . type_or_term0(COLON) [ RPAREN LIN_ARROW COLON ARROW ]
## Transitions:
-- On SYMBOL shift to state 1
-- On LPAREN shift to state 2
-- On IDENT shift to state 23
-- On type_or_term0(COLON) shift to state 25
## Reductions:
-- On RPAREN LIN_ARROW COLON ARROW
--   reduce production type_or_term0(COLON) -> SYMBOL

State 2:
## Known stack suffix:
## LPAREN
## LR(1) items:
type_or_term0(COLON) -> LPAREN . type_or_term(COLON) RPAREN [ RPAREN LIN_ARROW COLON ARROW ]
type_or_term0(COLON) -> LPAREN . type_or_term(COLON) RPAREN type_or_term0(COLON) [ RPAREN LIN_ARROW COLON ARROW ]
## Transitions:
-- On SYMBOL shift to state 1
-- On LPAREN shift to state 2
-- On LAMBDA0 shift to state 3
-- On LAMBDA shift to state 6
-- On IDENT shift to state 8
-- On type_or_term0(COLON) shift to state 13
-- On type_or_term(COLON) shift to state 21
-- On bound_term(COLON) shift to state 16
## Reductions:

State 3:
## Known stack suffix:
## LAMBDA0
## LR(1) items:
bound_term(COLON) -> LAMBDA0 . bound_term_ending(COLON) [ RPAREN COLON ]
## Transitions:
-- On IDENT shift to state 4
-- On bound_term_ending(COLON) shift to state 20
## Reductions:

State 4:
## Known stack suffix:
## IDENT
## LR(1) items:
bound_term_ending(COLON) -> IDENT . DOT type_or_term(COLON) [ RPAREN COLON ]
bound_term_ending(COLON) -> IDENT . bound_term_ending(COLON) [ RPAREN COLON ]
## Transitions:
-- On IDENT shift to state 4
-- On DOT shift to state 5
-- On bound_term_ending(COLON) shift to state 11
## Reductions:

State 5:
## Known stack suffix:
## IDENT DOT
## LR(1) items:
bound_term_ending(COLON) -> IDENT DOT . type_or_term(COLON) [ RPAREN COLON ]
## Transitions:
-- On SYMBOL shift to state 1
-- On LPAREN shift to state 2
-- On LAMBDA0 shift to state 3
-- On LAMBDA shift to state 6
-- On IDENT shift to state 8
-- On type_or_term0(COLON) shift to state 13
-- On type_or_term(COLON) shift to state 19
-- On bound_term(COLON) shift to state 16
## Reductions:

State 6:
## Known stack suffix:
## LAMBDA
## LR(1) items:
bound_term(COLON) -> LAMBDA . bound_term_ending(COLON) [ RPAREN COLON ]
## Transitions:
-- On IDENT shift to state 4
-- On bound_term_ending(COLON) shift to state 7
## Reductions:

State 7:
## Known stack suffix:
## LAMBDA bound_term_ending(COLON)
## LR(1) items:
bound_term(COLON) -> LAMBDA bound_term_ending(COLON) . [ RPAREN COLON ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production bound_term(COLON) -> LAMBDA bound_term_ending(COLON)

State 8:
## Known stack suffix:
## IDENT
## LR(1) items:
bound_term(COLON) -> IDENT . bound_term_ending(COLON) [ RPAREN COLON ]
type_or_term0(COLON) -> IDENT . [ RPAREN LIN_ARROW COLON ARROW ]
type_or_term0(COLON) -> IDENT . type_or_term0(COLON) [ RPAREN LIN_ARROW COLON ARROW ]
## Transitions:
-- On SYMBOL shift to state 1
-- On LPAREN shift to state 2
-- On IDENT shift to state 9
-- On type_or_term0(COLON) shift to state 10
-- On bound_term_ending(COLON) shift to state 12
## Reductions:
-- On RPAREN LIN_ARROW COLON ARROW
--   reduce production type_or_term0(COLON) -> IDENT

State 9:
## Known stack suffix:
## IDENT
## LR(1) items:
bound_term_ending(COLON) -> IDENT . DOT type_or_term(COLON) [ RPAREN COLON ]
bound_term_ending(COLON) -> IDENT . bound_term_ending(COLON) [ RPAREN COLON ]
type_or_term0(COLON) -> IDENT . [ RPAREN LIN_ARROW COLON ARROW ]
type_or_term0(COLON) -> IDENT . type_or_term0(COLON) [ RPAREN LIN_ARROW COLON ARROW ]
## Transitions:
-- On SYMBOL shift to state 1
-- On LPAREN shift to state 2
-- On IDENT shift to state 9
-- On DOT shift to state 5
-- On type_or_term0(COLON) shift to state 10
-- On bound_term_ending(COLON) shift to state 11
## Reductions:
-- On RPAREN LIN_ARROW COLON ARROW
--   reduce production type_or_term0(COLON) -> IDENT

State 10:
## Known stack suffix:
## IDENT type_or_term0(COLON)
## LR(1) items:
type_or_term0(COLON) -> IDENT type_or_term0(COLON) . [ RPAREN LIN_ARROW COLON ARROW ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production type_or_term0(COLON) -> IDENT type_or_term0(COLON)

State 11:
## Known stack suffix:
## IDENT bound_term_ending(COLON)
## LR(1) items:
bound_term_ending(COLON) -> IDENT bound_term_ending(COLON) . [ RPAREN COLON ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production bound_term_ending(COLON) -> IDENT bound_term_ending(COLON)

State 12:
## Known stack suffix:
## IDENT bound_term_ending(COLON)
## LR(1) items:
bound_term(COLON) -> IDENT bound_term_ending(COLON) . [ RPAREN COLON ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production bound_term(COLON) -> IDENT bound_term_ending(COLON)

State 13:
## Known stack suffix:
## type_or_term0(COLON)
## LR(1) items:
type_or_term(COLON) -> type_or_term0(COLON) . [ RPAREN COLON ]
type_or_term(COLON) -> type_or_term0(COLON) . ARROW type_or_term(COLON) [ RPAREN COLON ]
type_or_term(COLON) -> type_or_term0(COLON) . LIN_ARROW type_or_term(COLON) [ RPAREN COLON ]
## Transitions:
-- On LIN_ARROW shift to state 14
-- On ARROW shift to state 17
## Reductions:
-- On TYPE SYMBOL SIG_OPEN SEMICOLON RSQBRACKET RPAREN PREFIX NL_LEX_OPEN LSQBRACKET LPAREN LEX_OPEN LAMBDA0 LAMBDA INFIX IDENT EQUAL EOI END_OF_DEC DOT COMPOSE COMMA COLON_EQUAL COLON BINDER
--   reduce production type_or_term(COLON) -> type_or_term0(COLON)

State 14:
## Known stack suffix:
## type_or_term0(COLON) LIN_ARROW
## LR(1) items:
type_or_term(COLON) -> type_or_term0(COLON) LIN_ARROW . type_or_term(COLON) [ RPAREN COLON ]
## Transitions:
-- On SYMBOL shift to state 1
-- On LPAREN shift to state 2
-- On LAMBDA0 shift to state 3
-- On LAMBDA shift to state 6
-- On IDENT shift to state 8
-- On type_or_term0(COLON) shift to state 13
-- On type_or_term(COLON) shift to state 15
-- On bound_term(COLON) shift to state 16
## Reductions:

State 15:
## Known stack suffix:
## type_or_term0(COLON) LIN_ARROW type_or_term(COLON)
## LR(1) items:
type_or_term(COLON) -> type_or_term0(COLON) LIN_ARROW type_or_term(COLON) . [ RPAREN COLON ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production type_or_term(COLON) -> type_or_term0(COLON) LIN_ARROW type_or_term(COLON)

State 16:
## Known stack suffix:
## bound_term(COLON)
## LR(1) items:
type_or_term(COLON) -> bound_term(COLON) . [ RPAREN COLON ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production type_or_term(COLON) -> bound_term(COLON)

State 17:
## Known stack suffix:
## type_or_term0(COLON) ARROW
## LR(1) items:
type_or_term(COLON) -> type_or_term0(COLON) ARROW . type_or_term(COLON) [ RPAREN COLON ]
## Transitions:
-- On SYMBOL shift to state 1
-- On LPAREN shift to state 2
-- On LAMBDA0 shift to state 3
-- On LAMBDA shift to state 6
-- On IDENT shift to state 8
-- On type_or_term0(COLON) shift to state 13
-- On type_or_term(COLON) shift to state 18
-- On bound_term(COLON) shift to state 16
## Reductions:

State 18:
## Known stack suffix:
## type_or_term0(COLON) ARROW type_or_term(COLON)
## LR(1) items:
type_or_term(COLON) -> type_or_term0(COLON) ARROW type_or_term(COLON) . [ RPAREN COLON ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production type_or_term(COLON) -> type_or_term0(COLON) ARROW type_or_term(COLON)

State 19:
## Known stack suffix:
## IDENT DOT type_or_term(COLON)
## LR(1) items:
bound_term_ending(COLON) -> IDENT DOT type_or_term(COLON) . [ RPAREN COLON ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production bound_term_ending(COLON) -> IDENT DOT type_or_term(COLON)

State 20:
## Known stack suffix:
## LAMBDA0 bound_term_ending(COLON)
## LR(1) items:
bound_term(COLON) -> LAMBDA0 bound_term_ending(COLON) . [ RPAREN COLON ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production bound_term(COLON) -> LAMBDA0 bound_term_ending(COLON)

State 21:
## Known stack suffix:
## LPAREN type_or_term(COLON)
## LR(1) items:
type_or_term0(COLON) -> LPAREN type_or_term(COLON) . RPAREN [ RPAREN LIN_ARROW COLON ARROW ]
type_or_term0(COLON) -> LPAREN type_or_term(COLON) . RPAREN type_or_term0(COLON) [ RPAREN LIN_ARROW COLON ARROW ]
## Transitions:
-- On RPAREN shift to state 22
## Reductions:

State 22:
## Known stack suffix:
## LPAREN type_or_term(COLON) RPAREN
## LR(1) items:
type_or_term0(COLON) -> LPAREN type_or_term(COLON) RPAREN . [ RPAREN LIN_ARROW COLON ARROW ]
type_or_term0(COLON) -> LPAREN type_or_term(COLON) RPAREN . type_or_term0(COLON) [ RPAREN LIN_ARROW COLON ARROW ]
## Transitions:
-- On SYMBOL shift to state 1
-- On LPAREN shift to state 2
-- On IDENT shift to state 23
-- On type_or_term0(COLON) shift to state 24
## Reductions:
-- On RPAREN LIN_ARROW COLON ARROW
--   reduce production type_or_term0(COLON) -> LPAREN type_or_term(COLON) RPAREN

State 23:
## Known stack suffix:
## IDENT
## LR(1) items:
type_or_term0(COLON) -> IDENT . [ RPAREN LIN_ARROW COLON ARROW ]
type_or_term0(COLON) -> IDENT . type_or_term0(COLON) [ RPAREN LIN_ARROW COLON ARROW ]
## Transitions:
-- On SYMBOL shift to state 1
-- On LPAREN shift to state 2
-- On IDENT shift to state 23
-- On type_or_term0(COLON) shift to state 10
## Reductions:
-- On RPAREN LIN_ARROW COLON ARROW
--   reduce production type_or_term0(COLON) -> IDENT

State 24:
## Known stack suffix:
## LPAREN type_or_term(COLON) RPAREN type_or_term0(COLON)
## LR(1) items:
type_or_term0(COLON) -> LPAREN type_or_term(COLON) RPAREN type_or_term0(COLON) . [ RPAREN LIN_ARROW COLON ARROW ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production type_or_term0(COLON) -> LPAREN type_or_term(COLON) RPAREN type_or_term0(COLON)

State 25:
## Known stack suffix:
## SYMBOL type_or_term0(COLON)
## LR(1) items:
type_or_term0(COLON) -> SYMBOL type_or_term0(COLON) . [ RPAREN LIN_ARROW COLON ARROW ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production type_or_term0(COLON) -> SYMBOL type_or_term0(COLON)

State 26:
## Known stack suffix:
## type_or_term(COLON)
## LR(1) items:
heterogenous_term_and_type -> type_or_term(COLON) . COLON type_or_term(EOI) EOI [ # ]
## Transitions:
-- On COLON shift to state 27
## Reductions:

State 27:
## Known stack suffix:
## type_or_term(COLON) COLON
## LR(1) items:
heterogenous_term_and_type -> type_or_term(COLON) COLON . type_or_term(EOI) EOI [ # ]
## Transitions:
-- On SYMBOL shift to state 28
-- On LPAREN shift to state 29
-- On LAMBDA0 shift to state 30
-- On LAMBDA shift to state 33
-- On IDENT shift to state 35
-- On type_or_term0(EOI) shift to state 40
-- On type_or_term(EOI) shift to state 53
-- On bound_term(EOI) shift to state 43
## Reductions:

State 28:
## Known stack suffix:
## SYMBOL
## LR(1) items:
type_or_term0(EOI) -> SYMBOL . [ RPAREN LIN_ARROW EOI ARROW ]
type_or_term0(EOI) -> SYMBOL . type_or_term0(EOI) [ RPAREN LIN_ARROW EOI ARROW ]
## Transitions:
-- On SYMBOL shift to state 28
-- On LPAREN shift to state 29
-- On IDENT shift to state 50
-- On type_or_term0(EOI) shift to state 52
## Reductions:
-- On RPAREN LIN_ARROW EOI ARROW
--   reduce production type_or_term0(EOI) -> SYMBOL

State 29:
## Known stack suffix:
## LPAREN
## LR(1) items:
type_or_term0(EOI) -> LPAREN . type_or_term(EOI) RPAREN [ RPAREN LIN_ARROW EOI ARROW ]
type_or_term0(EOI) -> LPAREN . type_or_term(EOI) RPAREN type_or_term0(EOI) [ RPAREN LIN_ARROW EOI ARROW ]
## Transitions:
-- On SYMBOL shift to state 28
-- On LPAREN shift to state 29
-- On LAMBDA0 shift to state 30
-- On LAMBDA shift to state 33
-- On IDENT shift to state 35
-- On type_or_term0(EOI) shift to state 40
-- On type_or_term(EOI) shift to state 48
-- On bound_term(EOI) shift to state 43
## Reductions:

State 30:
## Known stack suffix:
## LAMBDA0
## LR(1) items:
bound_term(EOI) -> LAMBDA0 . bound_term_ending(EOI) [ RPAREN EOI ]
## Transitions:
-- On IDENT shift to state 31
-- On bound_term_ending(EOI) shift to state 47
## Reductions:

State 31:
## Known stack suffix:
## IDENT
## LR(1) items:
bound_term_ending(EOI) -> IDENT . DOT type_or_term(EOI) [ RPAREN EOI ]
bound_term_ending(EOI) -> IDENT . bound_term_ending(EOI) [ RPAREN EOI ]
## Transitions:
-- On IDENT shift to state 31
-- On DOT shift to state 32
-- On bound_term_ending(EOI) shift to state 38
## Reductions:

State 32:
## Known stack suffix:
## IDENT DOT
## LR(1) items:
bound_term_ending(EOI) -> IDENT DOT . type_or_term(EOI) [ RPAREN EOI ]
## Transitions:
-- On SYMBOL shift to state 28
-- On LPAREN shift to state 29
-- On LAMBDA0 shift to state 30
-- On LAMBDA shift to state 33
-- On IDENT shift to state 35
-- On type_or_term0(EOI) shift to state 40
-- On type_or_term(EOI) shift to state 46
-- On bound_term(EOI) shift to state 43
## Reductions:

State 33:
## Known stack suffix:
## LAMBDA
## LR(1) items:
bound_term(EOI) -> LAMBDA . bound_term_ending(EOI) [ RPAREN EOI ]
## Transitions:
-- On IDENT shift to state 31
-- On bound_term_ending(EOI) shift to state 34
## Reductions:

State 34:
## Known stack suffix:
## LAMBDA bound_term_ending(EOI)
## LR(1) items:
bound_term(EOI) -> LAMBDA bound_term_ending(EOI) . [ RPAREN EOI ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production bound_term(EOI) -> LAMBDA bound_term_ending(EOI)

State 35:
## Known stack suffix:
## IDENT
## LR(1) items:
bound_term(EOI) -> IDENT . bound_term_ending(EOI) [ RPAREN EOI ]
type_or_term0(EOI) -> IDENT . [ RPAREN LIN_ARROW EOI ARROW ]
type_or_term0(EOI) -> IDENT . type_or_term0(EOI) [ RPAREN LIN_ARROW EOI ARROW ]
## Transitions:
-- On SYMBOL shift to state 28
-- On LPAREN shift to state 29
-- On IDENT shift to state 36
-- On type_or_term0(EOI) shift to state 37
-- On bound_term_ending(EOI) shift to state 39
## Reductions:
-- On RPAREN LIN_ARROW EOI ARROW
--   reduce production type_or_term0(EOI) -> IDENT

State 36:
## Known stack suffix:
## IDENT
## LR(1) items:
bound_term_ending(EOI) -> IDENT . DOT type_or_term(EOI) [ RPAREN EOI ]
bound_term_ending(EOI) -> IDENT . bound_term_ending(EOI) [ RPAREN EOI ]
type_or_term0(EOI) -> IDENT . [ RPAREN LIN_ARROW EOI ARROW ]
type_or_term0(EOI) -> IDENT . type_or_term0(EOI) [ RPAREN LIN_ARROW EOI ARROW ]
## Transitions:
-- On SYMBOL shift to state 28
-- On LPAREN shift to state 29
-- On IDENT shift to state 36
-- On DOT shift to state 32
-- On type_or_term0(EOI) shift to state 37
-- On bound_term_ending(EOI) shift to state 38
## Reductions:
-- On RPAREN LIN_ARROW EOI ARROW
--   reduce production type_or_term0(EOI) -> IDENT

State 37:
## Known stack suffix:
## IDENT type_or_term0(EOI)
## LR(1) items:
type_or_term0(EOI) -> IDENT type_or_term0(EOI) . [ RPAREN LIN_ARROW EOI ARROW ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production type_or_term0(EOI) -> IDENT type_or_term0(EOI)

State 38:
## Known stack suffix:
## IDENT bound_term_ending(EOI)
## LR(1) items:
bound_term_ending(EOI) -> IDENT bound_term_ending(EOI) . [ RPAREN EOI ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production bound_term_ending(EOI) -> IDENT bound_term_ending(EOI)

State 39:
## Known stack suffix:
## IDENT bound_term_ending(EOI)
## LR(1) items:
bound_term(EOI) -> IDENT bound_term_ending(EOI) . [ RPAREN EOI ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production bound_term(EOI) -> IDENT bound_term_ending(EOI)

State 40:
## Known stack suffix:
## type_or_term0(EOI)
## LR(1) items:
type_or_term(EOI) -> type_or_term0(EOI) . [ RPAREN EOI ]
type_or_term(EOI) -> type_or_term0(EOI) . ARROW type_or_term(EOI) [ RPAREN EOI ]
type_or_term(EOI) -> type_or_term0(EOI) . LIN_ARROW type_or_term(EOI) [ RPAREN EOI ]
## Transitions:
-- On LIN_ARROW shift to state 41
-- On ARROW shift to state 44
## Reductions:
-- On TYPE SYMBOL SIG_OPEN SEMICOLON RSQBRACKET RPAREN PREFIX NL_LEX_OPEN LSQBRACKET LPAREN LEX_OPEN LAMBDA0 LAMBDA INFIX IDENT EQUAL EOI END_OF_DEC DOT COMPOSE COMMA COLON_EQUAL COLON BINDER
--   reduce production type_or_term(EOI) -> type_or_term0(EOI)

State 41:
## Known stack suffix:
## type_or_term0(EOI) LIN_ARROW
## LR(1) items:
type_or_term(EOI) -> type_or_term0(EOI) LIN_ARROW . type_or_term(EOI) [ RPAREN EOI ]
## Transitions:
-- On SYMBOL shift to state 28
-- On LPAREN shift to state 29
-- On LAMBDA0 shift to state 30
-- On LAMBDA shift to state 33
-- On IDENT shift to state 35
-- On type_or_term0(EOI) shift to state 40
-- On type_or_term(EOI) shift to state 42
-- On bound_term(EOI) shift to state 43
## Reductions:

State 42:
## Known stack suffix:
## type_or_term0(EOI) LIN_ARROW type_or_term(EOI)
## LR(1) items:
type_or_term(EOI) -> type_or_term0(EOI) LIN_ARROW type_or_term(EOI) . [ RPAREN EOI ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production type_or_term(EOI) -> type_or_term0(EOI) LIN_ARROW type_or_term(EOI)

State 43:
## Known stack suffix:
## bound_term(EOI)
## LR(1) items:
type_or_term(EOI) -> bound_term(EOI) . [ RPAREN EOI ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production type_or_term(EOI) -> bound_term(EOI)

State 44:
## Known stack suffix:
## type_or_term0(EOI) ARROW
## LR(1) items:
type_or_term(EOI) -> type_or_term0(EOI) ARROW . type_or_term(EOI) [ RPAREN EOI ]
## Transitions:
-- On SYMBOL shift to state 28
-- On LPAREN shift to state 29
-- On LAMBDA0 shift to state 30
-- On LAMBDA shift to state 33
-- On IDENT shift to state 35
-- On type_or_term0(EOI) shift to state 40
-- On type_or_term(EOI) shift to state 45
-- On bound_term(EOI) shift to state 43
## Reductions:

State 45:
## Known stack suffix:
## type_or_term0(EOI) ARROW type_or_term(EOI)
## LR(1) items:
type_or_term(EOI) -> type_or_term0(EOI) ARROW type_or_term(EOI) . [ RPAREN EOI ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production type_or_term(EOI) -> type_or_term0(EOI) ARROW type_or_term(EOI)

State 46:
## Known stack suffix:
## IDENT DOT type_or_term(EOI)
## LR(1) items:
bound_term_ending(EOI) -> IDENT DOT type_or_term(EOI) . [ RPAREN EOI ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production bound_term_ending(EOI) -> IDENT DOT type_or_term(EOI)

State 47:
## Known stack suffix:
## LAMBDA0 bound_term_ending(EOI)
## LR(1) items:
bound_term(EOI) -> LAMBDA0 bound_term_ending(EOI) . [ RPAREN EOI ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production bound_term(EOI) -> LAMBDA0 bound_term_ending(EOI)

State 48:
## Known stack suffix:
## LPAREN type_or_term(EOI)
## LR(1) items:
type_or_term0(EOI) -> LPAREN type_or_term(EOI) . RPAREN [ RPAREN LIN_ARROW EOI ARROW ]
type_or_term0(EOI) -> LPAREN type_or_term(EOI) . RPAREN type_or_term0(EOI) [ RPAREN LIN_ARROW EOI ARROW ]
## Transitions:
-- On RPAREN shift to state 49
## Reductions:

State 49:
## Known stack suffix:
## LPAREN type_or_term(EOI) RPAREN
## LR(1) items:
type_or_term0(EOI) -> LPAREN type_or_term(EOI) RPAREN . [ RPAREN LIN_ARROW EOI ARROW ]
type_or_term0(EOI) -> LPAREN type_or_term(EOI) RPAREN . type_or_term0(EOI) [ RPAREN LIN_ARROW EOI ARROW ]
## Transitions:
-- On SYMBOL shift to state 28
-- On LPAREN shift to state 29
-- On IDENT shift to state 50
-- On type_or_term0(EOI) shift to state 51
## Reductions:
-- On RPAREN LIN_ARROW EOI ARROW
--   reduce production type_or_term0(EOI) -> LPAREN type_or_term(EOI) RPAREN

State 50:
## Known stack suffix:
## IDENT
## LR(1) items:
type_or_term0(EOI) -> IDENT . [ RPAREN LIN_ARROW EOI ARROW ]
type_or_term0(EOI) -> IDENT . type_or_term0(EOI) [ RPAREN LIN_ARROW EOI ARROW ]
## Transitions:
-- On SYMBOL shift to state 28
-- On LPAREN shift to state 29
-- On IDENT shift to state 50
-- On type_or_term0(EOI) shift to state 37
## Reductions:
-- On RPAREN LIN_ARROW EOI ARROW
--   reduce production type_or_term0(EOI) -> IDENT

State 51:
## Known stack suffix:
## LPAREN type_or_term(EOI) RPAREN type_or_term0(EOI)
## LR(1) items:
type_or_term0(EOI) -> LPAREN type_or_term(EOI) RPAREN type_or_term0(EOI) . [ RPAREN LIN_ARROW EOI ARROW ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production type_or_term0(EOI) -> LPAREN type_or_term(EOI) RPAREN type_or_term0(EOI)

State 52:
## Known stack suffix:
## SYMBOL type_or_term0(EOI)
## LR(1) items:
type_or_term0(EOI) -> SYMBOL type_or_term0(EOI) . [ RPAREN LIN_ARROW EOI ARROW ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production type_or_term0(EOI) -> SYMBOL type_or_term0(EOI)

State 53:
## Known stack suffix:
## type_or_term(COLON) COLON type_or_term(EOI)
## LR(1) items:
heterogenous_term_and_type -> type_or_term(COLON) COLON type_or_term(EOI) . EOI [ # ]
## Transitions:
-- On EOI shift to state 54
## Reductions:

State 54:
## Known stack suffix:
## type_or_term(COLON) COLON type_or_term(EOI) EOI
## LR(1) items:
heterogenous_term_and_type -> type_or_term(COLON) COLON type_or_term(EOI) EOI . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production heterogenous_term_and_type -> type_or_term(COLON) COLON type_or_term(EOI) EOI

State 55:
## Known stack suffix:
## heterogenous_term_and_type
## LR(1) items:
heterogenous_term_and_type' -> heterogenous_term_and_type . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, accept heterogenous_term_and_type

State 56:
## Known stack suffix:
##
## LR(1) items:
lex_entry_eoi' -> . lex_entry_eoi [ # ]
## Transitions:
-- On SYMBOL shift to state 57
-- On IDENT shift to state 58
-- On separated_nonempty_list(COMMA,id_or_sym) shift to state 59
-- On lex_entry_eoi shift to state 87
-- On lex_entry shift to state 88
-- On id_or_sym shift to state 90
## Reductions:

State 57:
## Known stack suffix:
## SYMBOL
## LR(1) items:
id_or_sym -> SYMBOL . [ COMMA COLON_EQUAL ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production id_or_sym -> SYMBOL

State 58:
## Known stack suffix:
## IDENT
## LR(1) items:
id_or_sym -> IDENT . [ COMMA COLON_EQUAL ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production id_or_sym -> IDENT

State 59:
## Known stack suffix:
## separated_nonempty_list(COMMA,id_or_sym)
## LR(1) items:
lex_entry -> separated_nonempty_list(COMMA,id_or_sym) . COLON_EQUAL type_or_term(SEMICOLON) [ SEMICOLON EOI END_OF_DEC ]
## Transitions:
-- On COLON_EQUAL shift to state 60
## Reductions:

State 60:
## Known stack suffix:
## separated_nonempty_list(COMMA,id_or_sym) COLON_EQUAL
## LR(1) items:
lex_entry -> separated_nonempty_list(COMMA,id_or_sym) COLON_EQUAL . type_or_term(SEMICOLON) [ SEMICOLON EOI END_OF_DEC ]
## Transitions:
-- On SYMBOL shift to state 61
-- On LPAREN shift to state 62
-- On LAMBDA0 shift to state 63
-- On LAMBDA shift to state 66
-- On IDENT shift to state 68
-- On type_or_term0(SEMICOLON) shift to state 73
-- On type_or_term(SEMICOLON) shift to state 86
-- On bound_term(SEMICOLON) shift to state 76
## Reductions:

State 61:
## Known stack suffix:
## SYMBOL
## LR(1) items:
type_or_term0(SEMICOLON) -> SYMBOL . [ SEMICOLON RPAREN LIN_ARROW EOI END_OF_DEC ARROW ]
type_or_term0(SEMICOLON) -> SYMBOL . type_or_term0(SEMICOLON) [ SEMICOLON RPAREN LIN_ARROW EOI END_OF_DEC ARROW ]
## Transitions:
-- On SYMBOL shift to state 61
-- On LPAREN shift to state 62
-- On IDENT shift to state 83
-- On type_or_term0(SEMICOLON) shift to state 85
## Reductions:
-- On SEMICOLON RPAREN LIN_ARROW EOI END_OF_DEC ARROW
--   reduce production type_or_term0(SEMICOLON) -> SYMBOL

State 62:
## Known stack suffix:
## LPAREN
## LR(1) items:
type_or_term0(SEMICOLON) -> LPAREN . type_or_term(SEMICOLON) RPAREN [ SEMICOLON RPAREN LIN_ARROW EOI END_OF_DEC ARROW ]
type_or_term0(SEMICOLON) -> LPAREN . type_or_term(SEMICOLON) RPAREN type_or_term0(SEMICOLON) [ SEMICOLON RPAREN LIN_ARROW EOI END_OF_DEC ARROW ]
## Transitions:
-- On SYMBOL shift to state 61
-- On LPAREN shift to state 62
-- On LAMBDA0 shift to state 63
-- On LAMBDA shift to state 66
-- On IDENT shift to state 68
-- On type_or_term0(SEMICOLON) shift to state 73
-- On type_or_term(SEMICOLON) shift to state 81
-- On bound_term(SEMICOLON) shift to state 76
## Reductions:

State 63:
## Known stack suffix:
## LAMBDA0
## LR(1) items:
bound_term(SEMICOLON) -> LAMBDA0 . bound_term_ending(SEMICOLON) [ SEMICOLON RPAREN EOI END_OF_DEC ]
## Transitions:
-- On IDENT shift to state 64
-- On bound_term_ending(SEMICOLON) shift to state 80
## Reductions:

State 64:
## Known stack suffix:
## IDENT
## LR(1) items:
bound_term_ending(SEMICOLON) -> IDENT . DOT type_or_term(SEMICOLON) [ SEMICOLON RPAREN EOI END_OF_DEC ]
bound_term_ending(SEMICOLON) -> IDENT . bound_term_ending(SEMICOLON) [ SEMICOLON RPAREN EOI END_OF_DEC ]
## Transitions:
-- On IDENT shift to state 64
-- On DOT shift to state 65
-- On bound_term_ending(SEMICOLON) shift to state 71
## Reductions:

State 65:
## Known stack suffix:
## IDENT DOT
## LR(1) items:
bound_term_ending(SEMICOLON) -> IDENT DOT . type_or_term(SEMICOLON) [ SEMICOLON RPAREN EOI END_OF_DEC ]
## Transitions:
-- On SYMBOL shift to state 61
-- On LPAREN shift to state 62
-- On LAMBDA0 shift to state 63
-- On LAMBDA shift to state 66
-- On IDENT shift to state 68
-- On type_or_term0(SEMICOLON) shift to state 73
-- On type_or_term(SEMICOLON) shift to state 79
-- On bound_term(SEMICOLON) shift to state 76
## Reductions:

State 66:
## Known stack suffix:
## LAMBDA
## LR(1) items:
bound_term(SEMICOLON) -> LAMBDA . bound_term_ending(SEMICOLON) [ SEMICOLON RPAREN EOI END_OF_DEC ]
## Transitions:
-- On IDENT shift to state 64
-- On bound_term_ending(SEMICOLON) shift to state 67
## Reductions:

State 67:
## Known stack suffix:
## LAMBDA bound_term_ending(SEMICOLON)
## LR(1) items:
bound_term(SEMICOLON) -> LAMBDA bound_term_ending(SEMICOLON) . [ SEMICOLON RPAREN EOI END_OF_DEC ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production bound_term(SEMICOLON) -> LAMBDA bound_term_ending(SEMICOLON)

State 68:
## Known stack suffix:
## IDENT
## LR(1) items:
bound_term(SEMICOLON) -> IDENT . bound_term_ending(SEMICOLON) [ SEMICOLON RPAREN EOI END_OF_DEC ]
type_or_term0(SEMICOLON) -> IDENT . [ SEMICOLON RPAREN LIN_ARROW EOI END_OF_DEC ARROW ]
type_or_term0(SEMICOLON) -> IDENT . type_or_term0(SEMICOLON) [ SEMICOLON RPAREN LIN_ARROW EOI END_OF_DEC ARROW ]
## Transitions:
-- On SYMBOL shift to state 61
-- On LPAREN shift to state 62
-- On IDENT shift to state 69
-- On type_or_term0(SEMICOLON) shift to state 70
-- On bound_term_ending(SEMICOLON) shift to state 72
## Reductions:
-- On SEMICOLON RPAREN LIN_ARROW EOI END_OF_DEC ARROW
--   reduce production type_or_term0(SEMICOLON) -> IDENT

State 69:
## Known stack suffix:
## IDENT
## LR(1) items:
bound_term_ending(SEMICOLON) -> IDENT . DOT type_or_term(SEMICOLON) [ SEMICOLON RPAREN EOI END_OF_DEC ]
bound_term_ending(SEMICOLON) -> IDENT . bound_term_ending(SEMICOLON) [ SEMICOLON RPAREN EOI END_OF_DEC ]
type_or_term0(SEMICOLON) -> IDENT . [ SEMICOLON RPAREN LIN_ARROW EOI END_OF_DEC ARROW ]
type_or_term0(SEMICOLON) -> IDENT . type_or_term0(SEMICOLON) [ SEMICOLON RPAREN LIN_ARROW EOI END_OF_DEC ARROW ]
## Transitions:
-- On SYMBOL shift to state 61
-- On LPAREN shift to state 62
-- On IDENT shift to state 69
-- On DOT shift to state 65
-- On type_or_term0(SEMICOLON) shift to state 70
-- On bound_term_ending(SEMICOLON) shift to state 71
## Reductions:
-- On SEMICOLON RPAREN LIN_ARROW EOI END_OF_DEC ARROW
--   reduce production type_or_term0(SEMICOLON) -> IDENT

State 70:
## Known stack suffix:
## IDENT type_or_term0(SEMICOLON)
## LR(1) items:
type_or_term0(SEMICOLON) -> IDENT type_or_term0(SEMICOLON) . [ SEMICOLON RPAREN LIN_ARROW EOI END_OF_DEC ARROW ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production type_or_term0(SEMICOLON) -> IDENT type_or_term0(SEMICOLON)

State 71:
## Known stack suffix:
## IDENT bound_term_ending(SEMICOLON)
## LR(1) items:
bound_term_ending(SEMICOLON) -> IDENT bound_term_ending(SEMICOLON) . [ SEMICOLON RPAREN EOI END_OF_DEC ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production bound_term_ending(SEMICOLON) -> IDENT bound_term_ending(SEMICOLON)

State 72:
## Known stack suffix:
## IDENT bound_term_ending(SEMICOLON)
## LR(1) items:
bound_term(SEMICOLON) -> IDENT bound_term_ending(SEMICOLON) . [ SEMICOLON RPAREN EOI END_OF_DEC ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production bound_term(SEMICOLON) -> IDENT bound_term_ending(SEMICOLON)

State 73:
## Known stack suffix:
## type_or_term0(SEMICOLON)
## LR(1) items:
type_or_term(SEMICOLON) -> type_or_term0(SEMICOLON) . [ SEMICOLON RPAREN EOI END_OF_DEC ]
type_or_term(SEMICOLON) -> type_or_term0(SEMICOLON) . ARROW type_or_term(SEMICOLON) [ SEMICOLON RPAREN EOI END_OF_DEC ]
type_or_term(SEMICOLON) -> type_or_term0(SEMICOLON) . LIN_ARROW type_or_term(SEMICOLON) [ SEMICOLON RPAREN EOI END_OF_DEC ]
## Transitions:
-- On LIN_ARROW shift to state 74
-- On ARROW shift to state 77
## Reductions:
-- On TYPE SYMBOL SIG_OPEN SEMICOLON RSQBRACKET RPAREN PREFIX NL_LEX_OPEN LSQBRACKET LPAREN LEX_OPEN LAMBDA0 LAMBDA INFIX IDENT EQUAL EOI END_OF_DEC DOT COMPOSE COMMA COLON_EQUAL COLON BINDER
--   reduce production type_or_term(SEMICOLON) -> type_or_term0(SEMICOLON)

State 74:
## Known stack suffix:
## type_or_term0(SEMICOLON) LIN_ARROW
## LR(1) items:
type_or_term(SEMICOLON) -> type_or_term0(SEMICOLON) LIN_ARROW . type_or_term(SEMICOLON) [ SEMICOLON RPAREN EOI END_OF_DEC ]
## Transitions:
-- On SYMBOL shift to state 61
-- On LPAREN shift to state 62
-- On LAMBDA0 shift to state 63
-- On LAMBDA shift to state 66
-- On IDENT shift to state 68
-- On type_or_term0(SEMICOLON) shift to state 73
-- On type_or_term(SEMICOLON) shift to state 75
-- On bound_term(SEMICOLON) shift to state 76
## Reductions:

State 75:
## Known stack suffix:
## type_or_term0(SEMICOLON) LIN_ARROW type_or_term(SEMICOLON)
## LR(1) items:
type_or_term(SEMICOLON) -> type_or_term0(SEMICOLON) LIN_ARROW type_or_term(SEMICOLON) . [ SEMICOLON RPAREN EOI END_OF_DEC ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production type_or_term(SEMICOLON) -> type_or_term0(SEMICOLON) LIN_ARROW type_or_term(SEMICOLON)

State 76:
## Known stack suffix:
## bound_term(SEMICOLON)
## LR(1) items:
type_or_term(SEMICOLON) -> bound_term(SEMICOLON) . [ SEMICOLON RPAREN EOI END_OF_DEC ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production type_or_term(SEMICOLON) -> bound_term(SEMICOLON)

State 77:
## Known stack suffix:
## type_or_term0(SEMICOLON) ARROW
## LR(1) items:
type_or_term(SEMICOLON) -> type_or_term0(SEMICOLON) ARROW . type_or_term(SEMICOLON) [ SEMICOLON RPAREN EOI END_OF_DEC ]
## Transitions:
-- On SYMBOL shift to state 61
-- On LPAREN shift to state 62
-- On LAMBDA0 shift to state 63
-- On LAMBDA shift to state 66
-- On IDENT shift to state 68
-- On type_or_term0(SEMICOLON) shift to state 73
-- On type_or_term(SEMICOLON) shift to state 78
-- On bound_term(SEMICOLON) shift to state 76
## Reductions:

State 78:
## Known stack suffix:
## type_or_term0(SEMICOLON) ARROW type_or_term(SEMICOLON)
## LR(1) items:
type_or_term(SEMICOLON) -> type_or_term0(SEMICOLON) ARROW type_or_term(SEMICOLON) . [ SEMICOLON RPAREN EOI END_OF_DEC ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production type_or_term(SEMICOLON) -> type_or_term0(SEMICOLON) ARROW type_or_term(SEMICOLON)

State 79:
## Known stack suffix:
## IDENT DOT type_or_term(SEMICOLON)
## LR(1) items:
bound_term_ending(SEMICOLON) -> IDENT DOT type_or_term(SEMICOLON) . [ SEMICOLON RPAREN EOI END_OF_DEC ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production bound_term_ending(SEMICOLON) -> IDENT DOT type_or_term(SEMICOLON)

State 80:
## Known stack suffix:
## LAMBDA0 bound_term_ending(SEMICOLON)
## LR(1) items:
bound_term(SEMICOLON) -> LAMBDA0 bound_term_ending(SEMICOLON) . [ SEMICOLON RPAREN EOI END_OF_DEC ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production bound_term(SEMICOLON) -> LAMBDA0 bound_term_ending(SEMICOLON)

State 81:
## Known stack suffix:
## LPAREN type_or_term(SEMICOLON)
## LR(1) items:
type_or_term0(SEMICOLON) -> LPAREN type_or_term(SEMICOLON) . RPAREN [ SEMICOLON RPAREN LIN_ARROW EOI END_OF_DEC ARROW ]
type_or_term0(SEMICOLON) -> LPAREN type_or_term(SEMICOLON) . RPAREN type_or_term0(SEMICOLON) [ SEMICOLON RPAREN LIN_ARROW EOI END_OF_DEC ARROW ]
## Transitions:
-- On RPAREN shift to state 82
## Reductions:

State 82:
## Known stack suffix:
## LPAREN type_or_term(SEMICOLON) RPAREN
## LR(1) items:
type_or_term0(SEMICOLON) -> LPAREN type_or_term(SEMICOLON) RPAREN . [ SEMICOLON RPAREN LIN_ARROW EOI END_OF_DEC ARROW ]
type_or_term0(SEMICOLON) -> LPAREN type_or_term(SEMICOLON) RPAREN . type_or_term0(SEMICOLON) [ SEMICOLON RPAREN LIN_ARROW EOI END_OF_DEC ARROW ]
## Transitions:
-- On SYMBOL shift to state 61
-- On LPAREN shift to state 62
-- On IDENT shift to state 83
-- On type_or_term0(SEMICOLON) shift to state 84
## Reductions:
-- On SEMICOLON RPAREN LIN_ARROW EOI END_OF_DEC ARROW
--   reduce production type_or_term0(SEMICOLON) -> LPAREN type_or_term(SEMICOLON) RPAREN

State 83:
## Known stack suffix:
## IDENT
## LR(1) items:
type_or_term0(SEMICOLON) -> IDENT . [ SEMICOLON RPAREN LIN_ARROW EOI END_OF_DEC ARROW ]
type_or_term0(SEMICOLON) -> IDENT . type_or_term0(SEMICOLON) [ SEMICOLON RPAREN LIN_ARROW EOI END_OF_DEC ARROW ]
## Transitions:
-- On SYMBOL shift to state 61
-- On LPAREN shift to state 62
-- On IDENT shift to state 83
-- On type_or_term0(SEMICOLON) shift to state 70
## Reductions:
-- On SEMICOLON RPAREN LIN_ARROW EOI END_OF_DEC ARROW
--   reduce production type_or_term0(SEMICOLON) -> IDENT

State 84:
## Known stack suffix:
## LPAREN type_or_term(SEMICOLON) RPAREN type_or_term0(SEMICOLON)
## LR(1) items:
type_or_term0(SEMICOLON) -> LPAREN type_or_term(SEMICOLON) RPAREN type_or_term0(SEMICOLON) . [ SEMICOLON RPAREN LIN_ARROW EOI END_OF_DEC ARROW ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production type_or_term0(SEMICOLON) -> LPAREN type_or_term(SEMICOLON) RPAREN type_or_term0(SEMICOLON)

State 85:
## Known stack suffix:
## SYMBOL type_or_term0(SEMICOLON)
## LR(1) items:
type_or_term0(SEMICOLON) -> SYMBOL type_or_term0(SEMICOLON) . [ SEMICOLON RPAREN LIN_ARROW EOI END_OF_DEC ARROW ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production type_or_term0(SEMICOLON) -> SYMBOL type_or_term0(SEMICOLON)

State 86:
## Known stack suffix:
## separated_nonempty_list(COMMA,id_or_sym) COLON_EQUAL type_or_term(SEMICOLON)
## LR(1) items:
lex_entry -> separated_nonempty_list(COMMA,id_or_sym) COLON_EQUAL type_or_term(SEMICOLON) . [ SEMICOLON EOI END_OF_DEC ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production lex_entry -> separated_nonempty_list(COMMA,id_or_sym) COLON_EQUAL type_or_term(SEMICOLON)

State 87:
## Known stack suffix:
## lex_entry_eoi
## LR(1) items:
lex_entry_eoi' -> lex_entry_eoi . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, accept lex_entry_eoi

State 88:
## Known stack suffix:
## lex_entry
## LR(1) items:
lex_entry_eoi -> lex_entry . EOI [ # ]
## Transitions:
-- On EOI shift to state 89
## Reductions:

State 89:
## Known stack suffix:
## lex_entry EOI
## LR(1) items:
lex_entry_eoi -> lex_entry EOI . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production lex_entry_eoi -> lex_entry EOI

State 90:
## Known stack suffix:
## id_or_sym
## LR(1) items:
separated_nonempty_list(COMMA,id_or_sym) -> id_or_sym . [ COLON_EQUAL ]
separated_nonempty_list(COMMA,id_or_sym) -> id_or_sym . COMMA separated_nonempty_list(COMMA,id_or_sym) [ COLON_EQUAL ]
## Transitions:
-- On COMMA shift to state 91
## Reductions:
-- On COLON_EQUAL
--   reduce production separated_nonempty_list(COMMA,id_or_sym) -> id_or_sym

State 91:
## Known stack suffix:
## id_or_sym COMMA
## LR(1) items:
separated_nonempty_list(COMMA,id_or_sym) -> id_or_sym COMMA . separated_nonempty_list(COMMA,id_or_sym) [ COLON_EQUAL ]
## Transitions:
-- On SYMBOL shift to state 57
-- On IDENT shift to state 58
-- On separated_nonempty_list(COMMA,id_or_sym) shift to state 92
-- On id_or_sym shift to state 90
## Reductions:

State 92:
## Known stack suffix:
## id_or_sym COMMA separated_nonempty_list(COMMA,id_or_sym)
## LR(1) items:
separated_nonempty_list(COMMA,id_or_sym) -> id_or_sym COMMA separated_nonempty_list(COMMA,id_or_sym) . [ COLON_EQUAL ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production separated_nonempty_list(COMMA,id_or_sym) -> id_or_sym COMMA separated_nonempty_list(COMMA,id_or_sym)

State 93:
## Known stack suffix:
##
## LR(1) items:
main' -> . main [ # ]
## Transitions:
-- On SIG_OPEN shift to state 94
-- On NL_LEX_OPEN shift to state 161
-- On LEX_OPEN shift to state 175
-- On signature shift to state 193
-- On sig_or_lex shift to state 194
-- On nonempty_list(sig_or_lex) shift to state 197
-- On main shift to state 199
-- On lexicon shift to state 196
## Reductions:

State 94:
## Known stack suffix:
## SIG_OPEN
## LR(1) items:
signature -> SIG_OPEN . IDENT EQUAL end_of_dec(sig_entry) [ SIG_OPEN NL_LEX_OPEN LEX_OPEN EOI ]
## Transitions:
-- On IDENT shift to state 95
## Reductions:

State 95:
## Known stack suffix:
## SIG_OPEN IDENT
## LR(1) items:
signature -> SIG_OPEN IDENT . EQUAL end_of_dec(sig_entry) [ SIG_OPEN NL_LEX_OPEN LEX_OPEN EOI ]
## Transitions:
-- On EQUAL shift to state 96
## Reductions:

State 96:
## Known stack suffix:
## SIG_OPEN IDENT EQUAL
## LR(1) items:
signature -> SIG_OPEN IDENT EQUAL . end_of_dec(sig_entry) [ SIG_OPEN NL_LEX_OPEN LEX_OPEN EOI ]
## Transitions:
-- On PREFIX shift to state 97
-- On INFIX shift to state 105
-- On IDENT shift to state 130
-- On BINDER shift to state 139
-- On type_definition shift to state 147
-- On type_declaration shift to state 148
-- On term_definition shift to state 149
-- On term_declaration shift to state 150
-- On sig_entry shift to state 151
-- On separated_nonempty_list(COMMA,IDENT) shift to state 153
-- On end_of_dec(sig_entry) shift to state 160
## Reductions:

State 97:
## Known stack suffix:
## PREFIX
## LR(1) items:
term_declaration -> PREFIX . SYMBOL COLON type_or_term(SEMICOLON) [ SEMICOLON EOI END_OF_DEC ]
term_definition -> PREFIX . SYMBOL EQUAL type_or_term(COLON) COLON type_or_term(SEMICOLON) [ SEMICOLON EOI END_OF_DEC ]
## Transitions:
-- On SYMBOL shift to state 98
## Reductions:

State 98:
## Known stack suffix:
## PREFIX SYMBOL
## LR(1) items:
term_declaration -> PREFIX SYMBOL . COLON type_or_term(SEMICOLON) [ SEMICOLON EOI END_OF_DEC ]
term_definition -> PREFIX SYMBOL . EQUAL type_or_term(COLON) COLON type_or_term(SEMICOLON) [ SEMICOLON EOI END_OF_DEC ]
## Transitions:
-- On EQUAL shift to state 99
-- On COLON shift to state 103
## Reductions:

State 99:
## Known stack suffix:
## PREFIX SYMBOL EQUAL
## LR(1) items:
term_definition -> PREFIX SYMBOL EQUAL . type_or_term(COLON) COLON type_or_term(SEMICOLON) [ SEMICOLON EOI END_OF_DEC ]
## Transitions:
-- On SYMBOL shift to state 1
-- On LPAREN shift to state 2
-- On LAMBDA0 shift to state 3
-- On LAMBDA shift to state 6
-- On IDENT shift to state 8
-- On type_or_term0(COLON) shift to state 13
-- On type_or_term(COLON) shift to state 100
-- On bound_term(COLON) shift to state 16
## Reductions:

State 100:
## Known stack suffix:
## PREFIX SYMBOL EQUAL type_or_term(COLON)
## LR(1) items:
term_definition -> PREFIX SYMBOL EQUAL type_or_term(COLON) . COLON type_or_term(SEMICOLON) [ SEMICOLON EOI END_OF_DEC ]
## Transitions:
-- On COLON shift to state 101
## Reductions:

State 101:
## Known stack suffix:
## PREFIX SYMBOL EQUAL type_or_term(COLON) COLON
## LR(1) items:
term_definition -> PREFIX SYMBOL EQUAL type_or_term(COLON) COLON . type_or_term(SEMICOLON) [ SEMICOLON EOI END_OF_DEC ]
## Transitions:
-- On SYMBOL shift to state 61
-- On LPAREN shift to state 62
-- On LAMBDA0 shift to state 63
-- On LAMBDA shift to state 66
-- On IDENT shift to state 68
-- On type_or_term0(SEMICOLON) shift to state 73
-- On type_or_term(SEMICOLON) shift to state 102
-- On bound_term(SEMICOLON) shift to state 76
## Reductions:

State 102:
## Known stack suffix:
## PREFIX SYMBOL EQUAL type_or_term(COLON) COLON type_or_term(SEMICOLON)
## LR(1) items:
term_definition -> PREFIX SYMBOL EQUAL type_or_term(COLON) COLON type_or_term(SEMICOLON) . [ SEMICOLON EOI END_OF_DEC ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production term_definition -> PREFIX SYMBOL EQUAL type_or_term(COLON) COLON type_or_term(SEMICOLON)

State 103:
## Known stack suffix:
## PREFIX SYMBOL COLON
## LR(1) items:
term_declaration -> PREFIX SYMBOL COLON . type_or_term(SEMICOLON) [ SEMICOLON EOI END_OF_DEC ]
## Transitions:
-- On SYMBOL shift to state 61
-- On LPAREN shift to state 62
-- On LAMBDA0 shift to state 63
-- On LAMBDA shift to state 66
-- On IDENT shift to state 68
-- On type_or_term0(SEMICOLON) shift to state 73
-- On type_or_term(SEMICOLON) shift to state 104
-- On bound_term(SEMICOLON) shift to state 76
## Reductions:

State 104:
## Known stack suffix:
## PREFIX SYMBOL COLON type_or_term(SEMICOLON)
## LR(1) items:
term_declaration -> PREFIX SYMBOL COLON type_or_term(SEMICOLON) . [ SEMICOLON EOI END_OF_DEC ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production term_declaration -> PREFIX SYMBOL COLON type_or_term(SEMICOLON)

State 105:
## Known stack suffix:
## INFIX
## LR(1) items:
term_declaration -> INFIX . SYMBOL COLON type_or_term(SEMICOLON) [ SEMICOLON EOI END_OF_DEC ]
term_declaration -> INFIX . LSQBRACKET separated_nonempty_list(COMMA,infix_option_value) RSQBRACKET SYMBOL COLON type_or_term(SEMICOLON) [ SEMICOLON EOI END_OF_DEC ]
term_definition -> INFIX . SYMBOL EQUAL type_or_term(COLON) COLON type_or_term(SEMICOLON) [ SEMICOLON EOI END_OF_DEC ]
term_definition -> INFIX . LSQBRACKET separated_nonempty_list(COMMA,infix_option_value) RSQBRACKET SYMBOL EQUAL type_or_term(COLON) COLON type_or_term(SEMICOLON) [ SEMICOLON EOI END_OF_DEC ]
## Transitions:
-- On SYMBOL shift to state 106
-- On LSQBRACKET shift to state 113
## Reductions:

State 106:
## Known stack suffix:
## INFIX SYMBOL
## LR(1) items:
term_declaration -> INFIX SYMBOL . COLON type_or_term(SEMICOLON) [ SEMICOLON EOI END_OF_DEC ]
term_definition -> INFIX SYMBOL . EQUAL type_or_term(COLON) COLON type_or_term(SEMICOLON) [ SEMICOLON EOI END_OF_DEC ]
## Transitions:
-- On EQUAL shift to state 107
-- On COLON shift to state 111
## Reductions:

State 107:
## Known stack suffix:
## INFIX SYMBOL EQUAL
## LR(1) items:
term_definition -> INFIX SYMBOL EQUAL . type_or_term(COLON) COLON type_or_term(SEMICOLON) [ SEMICOLON EOI END_OF_DEC ]
## Transitions:
-- On SYMBOL shift to state 1
-- On LPAREN shift to state 2
-- On LAMBDA0 shift to state 3
-- On LAMBDA shift to state 6
-- On IDENT shift to state 8
-- On type_or_term0(COLON) shift to state 13
-- On type_or_term(COLON) shift to state 108
-- On bound_term(COLON) shift to state 16
## Reductions:

State 108:
## Known stack suffix:
## INFIX SYMBOL EQUAL type_or_term(COLON)
## LR(1) items:
term_definition -> INFIX SYMBOL EQUAL type_or_term(COLON) . COLON type_or_term(SEMICOLON) [ SEMICOLON EOI END_OF_DEC ]
## Transitions:
-- On COLON shift to state 109
## Reductions:

State 109:
## Known stack suffix:
## INFIX SYMBOL EQUAL type_or_term(COLON) COLON
## LR(1) items:
term_definition -> INFIX SYMBOL EQUAL type_or_term(COLON) COLON . type_or_term(SEMICOLON) [ SEMICOLON EOI END_OF_DEC ]
## Transitions:
-- On SYMBOL shift to state 61
-- On LPAREN shift to state 62
-- On LAMBDA0 shift to state 63
-- On LAMBDA shift to state 66
-- On IDENT shift to state 68
-- On type_or_term0(SEMICOLON) shift to state 73
-- On type_or_term(SEMICOLON) shift to state 110
-- On bound_term(SEMICOLON) shift to state 76
## Reductions:

State 110:
## Known stack suffix:
## INFIX SYMBOL EQUAL type_or_term(COLON) COLON type_or_term(SEMICOLON)
## LR(1) items:
term_definition -> INFIX SYMBOL EQUAL type_or_term(COLON) COLON type_or_term(SEMICOLON) . [ SEMICOLON EOI END_OF_DEC ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production term_definition -> INFIX SYMBOL EQUAL type_or_term(COLON) COLON type_or_term(SEMICOLON)

State 111:
## Known stack suffix:
## INFIX SYMBOL COLON
## LR(1) items:
term_declaration -> INFIX SYMBOL COLON . type_or_term(SEMICOLON) [ SEMICOLON EOI END_OF_DEC ]
## Transitions:
-- On SYMBOL shift to state 61
-- On LPAREN shift to state 62
-- On LAMBDA0 shift to state 63
-- On LAMBDA shift to state 66
-- On IDENT shift to state 68
-- On type_or_term0(SEMICOLON) shift to state 73
-- On type_or_term(SEMICOLON) shift to state 112
-- On bound_term(SEMICOLON) shift to state 76
## Reductions:

State 112:
## Known stack suffix:
## INFIX SYMBOL COLON type_or_term(SEMICOLON)
## LR(1) items:
term_declaration -> INFIX SYMBOL COLON type_or_term(SEMICOLON) . [ SEMICOLON EOI END_OF_DEC ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production term_declaration -> INFIX SYMBOL COLON type_or_term(SEMICOLON)

State 113:
## Known stack suffix:
## INFIX LSQBRACKET
## LR(1) items:
term_declaration -> INFIX LSQBRACKET . separated_nonempty_list(COMMA,infix_option_value) RSQBRACKET SYMBOL COLON type_or_term(SEMICOLON) [ SEMICOLON EOI END_OF_DEC ]
term_definition -> INFIX LSQBRACKET . separated_nonempty_list(COMMA,infix_option_value) RSQBRACKET SYMBOL EQUAL type_or_term(COLON) COLON type_or_term(SEMICOLON) [ SEMICOLON EOI END_OF_DEC ]
## Transitions:
-- On SYMBOL shift to state 114
-- On IDENT shift to state 117
-- On separated_nonempty_list(COMMA,infix_option_value) shift to state 121
## Reductions:

State 114:
## Known stack suffix:
## SYMBOL
## LR(1) items:
separated_nonempty_list(COMMA,infix_option_value) -> SYMBOL . SYMBOL [ RSQBRACKET ]
separated_nonempty_list(COMMA,infix_option_value) -> SYMBOL . SYMBOL COMMA separated_nonempty_list(COMMA,infix_option_value) [ RSQBRACKET ]
## Transitions:
-- On SYMBOL shift to state 115
## Reductions:

State 115:
## Known stack suffix:
## SYMBOL SYMBOL
## LR(1) items:
separated_nonempty_list(COMMA,infix_option_value) -> SYMBOL SYMBOL . [ RSQBRACKET ]
separated_nonempty_list(COMMA,infix_option_value) -> SYMBOL SYMBOL . COMMA separated_nonempty_list(COMMA,infix_option_value) [ RSQBRACKET ]
## Transitions:
-- On COMMA shift to state 116
## Reductions:
-- On RSQBRACKET
--   reduce production separated_nonempty_list(COMMA,infix_option_value) -> SYMBOL SYMBOL

State 116:
## Known stack suffix:
## SYMBOL SYMBOL COMMA
## LR(1) items:
separated_nonempty_list(COMMA,infix_option_value) -> SYMBOL SYMBOL COMMA . separated_nonempty_list(COMMA,infix_option_value) [ RSQBRACKET ]
## Transitions:
-- On SYMBOL shift to state 114
-- On IDENT shift to state 117
-- On separated_nonempty_list(COMMA,infix_option_value) shift to state 120
## Reductions:

State 117:
## Known stack suffix:
## IDENT
## LR(1) items:
separated_nonempty_list(COMMA,infix_option_value) -> IDENT . [ RSQBRACKET ]
separated_nonempty_list(COMMA,infix_option_value) -> IDENT . COMMA separated_nonempty_list(COMMA,infix_option_value) [ RSQBRACKET ]
## Transitions:
-- On COMMA shift to state 118
## Reductions:
-- On RSQBRACKET
--   reduce production separated_nonempty_list(COMMA,infix_option_value) -> IDENT

State 118:
## Known stack suffix:
## IDENT COMMA
## LR(1) items:
separated_nonempty_list(COMMA,infix_option_value) -> IDENT COMMA . separated_nonempty_list(COMMA,infix_option_value) [ RSQBRACKET ]
## Transitions:
-- On SYMBOL shift to state 114
-- On IDENT shift to state 117
-- On separated_nonempty_list(COMMA,infix_option_value) shift to state 119
## Reductions:

State 119:
## Known stack suffix:
## IDENT COMMA separated_nonempty_list(COMMA,infix_option_value)
## LR(1) items:
separated_nonempty_list(COMMA,infix_option_value) -> IDENT COMMA separated_nonempty_list(COMMA,infix_option_value) . [ RSQBRACKET ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production separated_nonempty_list(COMMA,infix_option_value) -> IDENT COMMA separated_nonempty_list(COMMA,infix_option_value)

State 120:
## Known stack suffix:
## SYMBOL SYMBOL COMMA separated_nonempty_list(COMMA,infix_option_value)
## LR(1) items:
separated_nonempty_list(COMMA,infix_option_value) -> SYMBOL SYMBOL COMMA separated_nonempty_list(COMMA,infix_option_value) . [ RSQBRACKET ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production separated_nonempty_list(COMMA,infix_option_value) -> SYMBOL SYMBOL COMMA separated_nonempty_list(COMMA,infix_option_value)

State 121:
## Known stack suffix:
## INFIX LSQBRACKET separated_nonempty_list(COMMA,infix_option_value)
## LR(1) items:
term_declaration -> INFIX LSQBRACKET separated_nonempty_list(COMMA,infix_option_value) . RSQBRACKET SYMBOL COLON type_or_term(SEMICOLON) [ SEMICOLON EOI END_OF_DEC ]
term_definition -> INFIX LSQBRACKET separated_nonempty_list(COMMA,infix_option_value) . RSQBRACKET SYMBOL EQUAL type_or_term(COLON) COLON type_or_term(SEMICOLON) [ SEMICOLON EOI END_OF_DEC ]
## Transitions:
-- On RSQBRACKET shift to state 122
## Reductions:

State 122:
## Known stack suffix:
## INFIX LSQBRACKET separated_nonempty_list(COMMA,infix_option_value) RSQBRACKET
## LR(1) items:
term_declaration -> INFIX LSQBRACKET separated_nonempty_list(COMMA,infix_option_value) RSQBRACKET . SYMBOL COLON type_or_term(SEMICOLON) [ SEMICOLON EOI END_OF_DEC ]
term_definition -> INFIX LSQBRACKET separated_nonempty_list(COMMA,infix_option_value) RSQBRACKET . SYMBOL EQUAL type_or_term(COLON) COLON type_or_term(SEMICOLON) [ SEMICOLON EOI END_OF_DEC ]
## Transitions:
-- On SYMBOL shift to state 123
## Reductions:

State 123:
## Known stack suffix:
## INFIX LSQBRACKET separated_nonempty_list(COMMA,infix_option_value) RSQBRACKET SYMBOL
## LR(1) items:
term_declaration -> INFIX LSQBRACKET separated_nonempty_list(COMMA,infix_option_value) RSQBRACKET SYMBOL . COLON type_or_term(SEMICOLON) [ SEMICOLON EOI END_OF_DEC ]
term_definition -> INFIX LSQBRACKET separated_nonempty_list(COMMA,infix_option_value) RSQBRACKET SYMBOL . EQUAL type_or_term(COLON) COLON type_or_term(SEMICOLON) [ SEMICOLON EOI END_OF_DEC ]
## Transitions:
-- On EQUAL shift to state 124
-- On COLON shift to state 128
## Reductions:

State 124:
## Known stack suffix:
## INFIX LSQBRACKET separated_nonempty_list(COMMA,infix_option_value) RSQBRACKET SYMBOL EQUAL
## LR(1) items:
term_definition -> INFIX LSQBRACKET separated_nonempty_list(COMMA,infix_option_value) RSQBRACKET SYMBOL EQUAL . type_or_term(COLON) COLON type_or_term(SEMICOLON) [ SEMICOLON EOI END_OF_DEC ]
## Transitions:
-- On SYMBOL shift to state 1
-- On LPAREN shift to state 2
-- On LAMBDA0 shift to state 3
-- On LAMBDA shift to state 6
-- On IDENT shift to state 8
-- On type_or_term0(COLON) shift to state 13
-- On type_or_term(COLON) shift to state 125
-- On bound_term(COLON) shift to state 16
## Reductions:

State 125:
## Known stack suffix:
## INFIX LSQBRACKET separated_nonempty_list(COMMA,infix_option_value) RSQBRACKET SYMBOL EQUAL type_or_term(COLON)
## LR(1) items:
term_definition -> INFIX LSQBRACKET separated_nonempty_list(COMMA,infix_option_value) RSQBRACKET SYMBOL EQUAL type_or_term(COLON) . COLON type_or_term(SEMICOLON) [ SEMICOLON EOI END_OF_DEC ]
## Transitions:
-- On COLON shift to state 126
## Reductions:

State 126:
## Known stack suffix:
## INFIX LSQBRACKET separated_nonempty_list(COMMA,infix_option_value) RSQBRACKET SYMBOL EQUAL type_or_term(COLON) COLON
## LR(1) items:
term_definition -> INFIX LSQBRACKET separated_nonempty_list(COMMA,infix_option_value) RSQBRACKET SYMBOL EQUAL type_or_term(COLON) COLON . type_or_term(SEMICOLON) [ SEMICOLON EOI END_OF_DEC ]
## Transitions:
-- On SYMBOL shift to state 61
-- On LPAREN shift to state 62
-- On LAMBDA0 shift to state 63
-- On LAMBDA shift to state 66
-- On IDENT shift to state 68
-- On type_or_term0(SEMICOLON) shift to state 73
-- On type_or_term(SEMICOLON) shift to state 127
-- On bound_term(SEMICOLON) shift to state 76
## Reductions:

State 127:
## Known stack suffix:
## INFIX LSQBRACKET separated_nonempty_list(COMMA,infix_option_value) RSQBRACKET SYMBOL EQUAL type_or_term(COLON) COLON type_or_term(SEMICOLON)
## LR(1) items:
term_definition -> INFIX LSQBRACKET separated_nonempty_list(COMMA,infix_option_value) RSQBRACKET SYMBOL EQUAL type_or_term(COLON) COLON type_or_term(SEMICOLON) . [ SEMICOLON EOI END_OF_DEC ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production term_definition -> INFIX LSQBRACKET separated_nonempty_list(COMMA,infix_option_value) RSQBRACKET SYMBOL EQUAL type_or_term(COLON) COLON type_or_term(SEMICOLON)

State 128:
## Known stack suffix:
## INFIX LSQBRACKET separated_nonempty_list(COMMA,infix_option_value) RSQBRACKET SYMBOL COLON
## LR(1) items:
term_declaration -> INFIX LSQBRACKET separated_nonempty_list(COMMA,infix_option_value) RSQBRACKET SYMBOL COLON . type_or_term(SEMICOLON) [ SEMICOLON EOI END_OF_DEC ]
## Transitions:
-- On SYMBOL shift to state 61
-- On LPAREN shift to state 62
-- On LAMBDA0 shift to state 63
-- On LAMBDA shift to state 66
-- On IDENT shift to state 68
-- On type_or_term0(SEMICOLON) shift to state 73
-- On type_or_term(SEMICOLON) shift to state 129
-- On bound_term(SEMICOLON) shift to state 76
## Reductions:

State 129:
## Known stack suffix:
## INFIX LSQBRACKET separated_nonempty_list(COMMA,infix_option_value) RSQBRACKET SYMBOL COLON type_or_term(SEMICOLON)
## LR(1) items:
term_declaration -> INFIX LSQBRACKET separated_nonempty_list(COMMA,infix_option_value) RSQBRACKET SYMBOL COLON type_or_term(SEMICOLON) . [ SEMICOLON EOI END_OF_DEC ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production term_declaration -> INFIX LSQBRACKET separated_nonempty_list(COMMA,infix_option_value) RSQBRACKET SYMBOL COLON type_or_term(SEMICOLON)

State 130:
## Known stack suffix:
## IDENT
## LR(1) items:
separated_nonempty_list(COMMA,IDENT) -> IDENT . [ COLON ]
separated_nonempty_list(COMMA,IDENT) -> IDENT . COMMA separated_nonempty_list(COMMA,IDENT) [ COLON ]
term_definition -> IDENT . EQUAL type_or_term(COLON) COLON type_or_term(SEMICOLON) [ SEMICOLON EOI END_OF_DEC ]
type_definition -> IDENT . EQUAL type_or_term(COLON) COLON TYPE [ SEMICOLON EOI END_OF_DEC ]
## Transitions:
-- On EQUAL shift to state 131
-- On COMMA shift to state 136
## Reductions:
-- On COLON
--   reduce production separated_nonempty_list(COMMA,IDENT) -> IDENT

State 131:
## Known stack suffix:
## IDENT EQUAL
## LR(1) items:
term_definition -> IDENT EQUAL . type_or_term(COLON) COLON type_or_term(SEMICOLON) [ SEMICOLON EOI END_OF_DEC ]
type_definition -> IDENT EQUAL . type_or_term(COLON) COLON TYPE [ SEMICOLON EOI END_OF_DEC ]
## Transitions:
-- On SYMBOL shift to state 1
-- On LPAREN shift to state 2
-- On LAMBDA0 shift to state 3
-- On LAMBDA shift to state 6
-- On IDENT shift to state 8
-- On type_or_term0(COLON) shift to state 13
-- On type_or_term(COLON) shift to state 132
-- On bound_term(COLON) shift to state 16
## Reductions:

State 132:
## Known stack suffix:
## IDENT EQUAL type_or_term(COLON)
## LR(1) items:
term_definition -> IDENT EQUAL type_or_term(COLON) . COLON type_or_term(SEMICOLON) [ SEMICOLON EOI END_OF_DEC ]
type_definition -> IDENT EQUAL type_or_term(COLON) . COLON TYPE [ SEMICOLON EOI END_OF_DEC ]
## Transitions:
-- On COLON shift to state 133
## Reductions:

State 133:
## Known stack suffix:
## IDENT EQUAL type_or_term(COLON) COLON
## LR(1) items:
term_definition -> IDENT EQUAL type_or_term(COLON) COLON . type_or_term(SEMICOLON) [ SEMICOLON EOI END_OF_DEC ]
type_definition -> IDENT EQUAL type_or_term(COLON) COLON . TYPE [ SEMICOLON EOI END_OF_DEC ]
## Transitions:
-- On TYPE shift to state 134
-- On SYMBOL shift to state 61
-- On LPAREN shift to state 62
-- On LAMBDA0 shift to state 63
-- On LAMBDA shift to state 66
-- On IDENT shift to state 68
-- On type_or_term0(SEMICOLON) shift to state 73
-- On type_or_term(SEMICOLON) shift to state 135
-- On bound_term(SEMICOLON) shift to state 76
## Reductions:

State 134:
## Known stack suffix:
## IDENT EQUAL type_or_term(COLON) COLON TYPE
## LR(1) items:
type_definition -> IDENT EQUAL type_or_term(COLON) COLON TYPE . [ SEMICOLON EOI END_OF_DEC ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production type_definition -> IDENT EQUAL type_or_term(COLON) COLON TYPE

State 135:
## Known stack suffix:
## IDENT EQUAL type_or_term(COLON) COLON type_or_term(SEMICOLON)
## LR(1) items:
term_definition -> IDENT EQUAL type_or_term(COLON) COLON type_or_term(SEMICOLON) . [ SEMICOLON EOI END_OF_DEC ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production term_definition -> IDENT EQUAL type_or_term(COLON) COLON type_or_term(SEMICOLON)

State 136:
## Known stack suffix:
## IDENT COMMA
## LR(1) items:
separated_nonempty_list(COMMA,IDENT) -> IDENT COMMA . separated_nonempty_list(COMMA,IDENT) [ COLON ]
## Transitions:
-- On IDENT shift to state 137
-- On separated_nonempty_list(COMMA,IDENT) shift to state 138
## Reductions:

State 137:
## Known stack suffix:
## IDENT
## LR(1) items:
separated_nonempty_list(COMMA,IDENT) -> IDENT . [ COLON ]
separated_nonempty_list(COMMA,IDENT) -> IDENT . COMMA separated_nonempty_list(COMMA,IDENT) [ COLON ]
## Transitions:
-- On COMMA shift to state 136
## Reductions:
-- On COLON
--   reduce production separated_nonempty_list(COMMA,IDENT) -> IDENT

State 138:
## Known stack suffix:
## IDENT COMMA separated_nonempty_list(COMMA,IDENT)
## LR(1) items:
separated_nonempty_list(COMMA,IDENT) -> IDENT COMMA separated_nonempty_list(COMMA,IDENT) . [ COLON ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production separated_nonempty_list(COMMA,IDENT) -> IDENT COMMA separated_nonempty_list(COMMA,IDENT)

State 139:
## Known stack suffix:
## BINDER
## LR(1) items:
term_declaration -> BINDER . IDENT COLON type_or_term(SEMICOLON) [ SEMICOLON EOI END_OF_DEC ]
term_definition -> BINDER . IDENT EQUAL type_or_term(COLON) COLON type_or_term(SEMICOLON) [ SEMICOLON EOI END_OF_DEC ]
## Transitions:
-- On IDENT shift to state 140
## Reductions:

State 140:
## Known stack suffix:
## BINDER IDENT
## LR(1) items:
term_declaration -> BINDER IDENT . COLON type_or_term(SEMICOLON) [ SEMICOLON EOI END_OF_DEC ]
term_definition -> BINDER IDENT . EQUAL type_or_term(COLON) COLON type_or_term(SEMICOLON) [ SEMICOLON EOI END_OF_DEC ]
## Transitions:
-- On EQUAL shift to state 141
-- On COLON shift to state 145
## Reductions:

State 141:
## Known stack suffix:
## BINDER IDENT EQUAL
## LR(1) items:
term_definition -> BINDER IDENT EQUAL . type_or_term(COLON) COLON type_or_term(SEMICOLON) [ SEMICOLON EOI END_OF_DEC ]
## Transitions:
-- On SYMBOL shift to state 1
-- On LPAREN shift to state 2
-- On LAMBDA0 shift to state 3
-- On LAMBDA shift to state 6
-- On IDENT shift to state 8
-- On type_or_term0(COLON) shift to state 13
-- On type_or_term(COLON) shift to state 142
-- On bound_term(COLON) shift to state 16
## Reductions:

State 142:
## Known stack suffix:
## BINDER IDENT EQUAL type_or_term(COLON)
## LR(1) items:
term_definition -> BINDER IDENT EQUAL type_or_term(COLON) . COLON type_or_term(SEMICOLON) [ SEMICOLON EOI END_OF_DEC ]
## Transitions:
-- On COLON shift to state 143
## Reductions:

State 143:
## Known stack suffix:
## BINDER IDENT EQUAL type_or_term(COLON) COLON
## LR(1) items:
term_definition -> BINDER IDENT EQUAL type_or_term(COLON) COLON . type_or_term(SEMICOLON) [ SEMICOLON EOI END_OF_DEC ]
## Transitions:
-- On SYMBOL shift to state 61
-- On LPAREN shift to state 62
-- On LAMBDA0 shift to state 63
-- On LAMBDA shift to state 66
-- On IDENT shift to state 68
-- On type_or_term0(SEMICOLON) shift to state 73
-- On type_or_term(SEMICOLON) shift to state 144
-- On bound_term(SEMICOLON) shift to state 76
## Reductions:

State 144:
## Known stack suffix:
## BINDER IDENT EQUAL type_or_term(COLON) COLON type_or_term(SEMICOLON)
## LR(1) items:
term_definition -> BINDER IDENT EQUAL type_or_term(COLON) COLON type_or_term(SEMICOLON) . [ SEMICOLON EOI END_OF_DEC ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production term_definition -> BINDER IDENT EQUAL type_or_term(COLON) COLON type_or_term(SEMICOLON)

State 145:
## Known stack suffix:
## BINDER IDENT COLON
## LR(1) items:
term_declaration -> BINDER IDENT COLON . type_or_term(SEMICOLON) [ SEMICOLON EOI END_OF_DEC ]
## Transitions:
-- On SYMBOL shift to state 61
-- On LPAREN shift to state 62
-- On LAMBDA0 shift to state 63
-- On LAMBDA shift to state 66
-- On IDENT shift to state 68
-- On type_or_term0(SEMICOLON) shift to state 73
-- On type_or_term(SEMICOLON) shift to state 146
-- On bound_term(SEMICOLON) shift to state 76
## Reductions:

State 146:
## Known stack suffix:
## BINDER IDENT COLON type_or_term(SEMICOLON)
## LR(1) items:
term_declaration -> BINDER IDENT COLON type_or_term(SEMICOLON) . [ SEMICOLON EOI END_OF_DEC ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production term_declaration -> BINDER IDENT COLON type_or_term(SEMICOLON)

State 147:
## Known stack suffix:
## type_definition
## LR(1) items:
sig_entry -> type_definition . [ SEMICOLON EOI END_OF_DEC ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production sig_entry -> type_definition

State 148:
## Known stack suffix:
## type_declaration
## LR(1) items:
sig_entry -> type_declaration . [ SEMICOLON EOI END_OF_DEC ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production sig_entry -> type_declaration

State 149:
## Known stack suffix:
## term_definition
## LR(1) items:
sig_entry -> term_definition . [ SEMICOLON EOI END_OF_DEC ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production sig_entry -> term_definition

State 150:
## Known stack suffix:
## term_declaration
## LR(1) items:
sig_entry -> term_declaration . [ SEMICOLON EOI END_OF_DEC ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production sig_entry -> term_declaration

State 151:
## Known stack suffix:
## sig_entry
## LR(1) items:
end_of_dec(sig_entry) -> sig_entry . option(SEMICOLON) END_OF_DEC [ SIG_OPEN NL_LEX_OPEN LEX_OPEN EOI ]
end_of_dec(sig_entry) -> sig_entry . SEMICOLON end_of_dec(sig_entry) [ SIG_OPEN NL_LEX_OPEN LEX_OPEN EOI ]
## Transitions:
-- On SEMICOLON shift to state 152
-- On option(SEMICOLON) shift to state 158
## Reductions:
-- On END_OF_DEC
--   reduce production option(SEMICOLON) ->

State 152:
## Known stack suffix:
## sig_entry SEMICOLON
## LR(1) items:
end_of_dec(sig_entry) -> sig_entry SEMICOLON . end_of_dec(sig_entry) [ SIG_OPEN NL_LEX_OPEN LEX_OPEN EOI ]
option(SEMICOLON) -> SEMICOLON . [ END_OF_DEC ]
## Transitions:
-- On PREFIX shift to state 97
-- On INFIX shift to state 105
-- On IDENT shift to state 130
-- On BINDER shift to state 139
-- On type_definition shift to state 147
-- On type_declaration shift to state 148
-- On term_definition shift to state 149
-- On term_declaration shift to state 150
-- On sig_entry shift to state 151
-- On separated_nonempty_list(COMMA,IDENT) shift to state 153
-- On end_of_dec(sig_entry) shift to state 157
## Reductions:
-- On END_OF_DEC
--   reduce production option(SEMICOLON) -> SEMICOLON

State 153:
## Known stack suffix:
## separated_nonempty_list(COMMA,IDENT)
## LR(1) items:
term_declaration -> separated_nonempty_list(COMMA,IDENT) . COLON type_or_term(SEMICOLON) [ SEMICOLON EOI END_OF_DEC ]
type_declaration -> separated_nonempty_list(COMMA,IDENT) . COLON TYPE [ SEMICOLON EOI END_OF_DEC ]
## Transitions:
-- On COLON shift to state 154
## Reductions:

State 154:
## Known stack suffix:
## separated_nonempty_list(COMMA,IDENT) COLON
## LR(1) items:
term_declaration -> separated_nonempty_list(COMMA,IDENT) COLON . type_or_term(SEMICOLON) [ SEMICOLON EOI END_OF_DEC ]
type_declaration -> separated_nonempty_list(COMMA,IDENT) COLON . TYPE [ SEMICOLON EOI END_OF_DEC ]
## Transitions:
-- On TYPE shift to state 155
-- On SYMBOL shift to state 61
-- On LPAREN shift to state 62
-- On LAMBDA0 shift to state 63
-- On LAMBDA shift to state 66
-- On IDENT shift to state 68
-- On type_or_term0(SEMICOLON) shift to state 73
-- On type_or_term(SEMICOLON) shift to state 156
-- On bound_term(SEMICOLON) shift to state 76
## Reductions:

State 155:
## Known stack suffix:
## separated_nonempty_list(COMMA,IDENT) COLON TYPE
## LR(1) items:
type_declaration -> separated_nonempty_list(COMMA,IDENT) COLON TYPE . [ SEMICOLON EOI END_OF_DEC ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production type_declaration -> separated_nonempty_list(COMMA,IDENT) COLON TYPE

State 156:
## Known stack suffix:
## separated_nonempty_list(COMMA,IDENT) COLON type_or_term(SEMICOLON)
## LR(1) items:
term_declaration -> separated_nonempty_list(COMMA,IDENT) COLON type_or_term(SEMICOLON) . [ SEMICOLON EOI END_OF_DEC ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production term_declaration -> separated_nonempty_list(COMMA,IDENT) COLON type_or_term(SEMICOLON)

State 157:
## Known stack suffix:
## sig_entry SEMICOLON end_of_dec(sig_entry)
## LR(1) items:
end_of_dec(sig_entry) -> sig_entry SEMICOLON end_of_dec(sig_entry) . [ SIG_OPEN NL_LEX_OPEN LEX_OPEN EOI ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production end_of_dec(sig_entry) -> sig_entry SEMICOLON end_of_dec(sig_entry)

State 158:
## Known stack suffix:
## sig_entry option(SEMICOLON)
## LR(1) items:
end_of_dec(sig_entry) -> sig_entry option(SEMICOLON) . END_OF_DEC [ SIG_OPEN NL_LEX_OPEN LEX_OPEN EOI ]
## Transitions:
-- On END_OF_DEC shift to state 159
## Reductions:

State 159:
## Known stack suffix:
## sig_entry option(SEMICOLON) END_OF_DEC
## LR(1) items:
end_of_dec(sig_entry) -> sig_entry option(SEMICOLON) END_OF_DEC . [ SIG_OPEN NL_LEX_OPEN LEX_OPEN EOI ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production end_of_dec(sig_entry) -> sig_entry option(SEMICOLON) END_OF_DEC

State 160:
## Known stack suffix:
## SIG_OPEN IDENT EQUAL end_of_dec(sig_entry)
## LR(1) items:
signature -> SIG_OPEN IDENT EQUAL end_of_dec(sig_entry) . [ SIG_OPEN NL_LEX_OPEN LEX_OPEN EOI ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production signature -> SIG_OPEN IDENT EQUAL end_of_dec(sig_entry)

State 161:
## Known stack suffix:
## NL_LEX_OPEN
## LR(1) items:
lexicon -> NL_LEX_OPEN . IDENT LPAREN IDENT RPAREN COLON IDENT EQUAL end_of_dec(lex_entry) [ SIG_OPEN NL_LEX_OPEN LEX_OPEN EOI ]
## Transitions:
-- On IDENT shift to state 162
## Reductions:

State 162:
## Known stack suffix:
## NL_LEX_OPEN IDENT
## LR(1) items:
lexicon -> NL_LEX_OPEN IDENT . LPAREN IDENT RPAREN COLON IDENT EQUAL end_of_dec(lex_entry) [ SIG_OPEN NL_LEX_OPEN LEX_OPEN EOI ]
## Transitions:
-- On LPAREN shift to state 163
## Reductions:

State 163:
## Known stack suffix:
## NL_LEX_OPEN IDENT LPAREN
## LR(1) items:
lexicon -> NL_LEX_OPEN IDENT LPAREN . IDENT RPAREN COLON IDENT EQUAL end_of_dec(lex_entry) [ SIG_OPEN NL_LEX_OPEN LEX_OPEN EOI ]
## Transitions:
-- On IDENT shift to state 164
## Reductions:

State 164:
## Known stack suffix:
## NL_LEX_OPEN IDENT LPAREN IDENT
## LR(1) items:
lexicon -> NL_LEX_OPEN IDENT LPAREN IDENT . RPAREN COLON IDENT EQUAL end_of_dec(lex_entry) [ SIG_OPEN NL_LEX_OPEN LEX_OPEN EOI ]
## Transitions:
-- On RPAREN shift to state 165
## Reductions:

State 165:
## Known stack suffix:
## NL_LEX_OPEN IDENT LPAREN IDENT RPAREN
## LR(1) items:
lexicon -> NL_LEX_OPEN IDENT LPAREN IDENT RPAREN . COLON IDENT EQUAL end_of_dec(lex_entry) [ SIG_OPEN NL_LEX_OPEN LEX_OPEN EOI ]
## Transitions:
-- On COLON shift to state 166
## Reductions:

State 166:
## Known stack suffix:
## NL_LEX_OPEN IDENT LPAREN IDENT RPAREN COLON
## LR(1) items:
lexicon -> NL_LEX_OPEN IDENT LPAREN IDENT RPAREN COLON . IDENT EQUAL end_of_dec(lex_entry) [ SIG_OPEN NL_LEX_OPEN LEX_OPEN EOI ]
## Transitions:
-- On IDENT shift to state 167
## Reductions:

State 167:
## Known stack suffix:
## NL_LEX_OPEN IDENT LPAREN IDENT RPAREN COLON IDENT
## LR(1) items:
lexicon -> NL_LEX_OPEN IDENT LPAREN IDENT RPAREN COLON IDENT . EQUAL end_of_dec(lex_entry) [ SIG_OPEN NL_LEX_OPEN LEX_OPEN EOI ]
## Transitions:
-- On EQUAL shift to state 168
## Reductions:

State 168:
## Known stack suffix:
## NL_LEX_OPEN IDENT LPAREN IDENT RPAREN COLON IDENT EQUAL
## LR(1) items:
lexicon -> NL_LEX_OPEN IDENT LPAREN IDENT RPAREN COLON IDENT EQUAL . end_of_dec(lex_entry) [ SIG_OPEN NL_LEX_OPEN LEX_OPEN EOI ]
## Transitions:
-- On SYMBOL shift to state 57
-- On IDENT shift to state 58
-- On separated_nonempty_list(COMMA,id_or_sym) shift to state 59
-- On lex_entry shift to state 169
-- On id_or_sym shift to state 90
-- On end_of_dec(lex_entry) shift to state 174
## Reductions:

State 169:
## Known stack suffix:
## lex_entry
## LR(1) items:
end_of_dec(lex_entry) -> lex_entry . option(SEMICOLON) END_OF_DEC [ SIG_OPEN NL_LEX_OPEN LEX_OPEN EOI ]
end_of_dec(lex_entry) -> lex_entry . SEMICOLON end_of_dec(lex_entry) [ SIG_OPEN NL_LEX_OPEN LEX_OPEN EOI ]
## Transitions:
-- On SEMICOLON shift to state 170
-- On option(SEMICOLON) shift to state 172
## Reductions:
-- On END_OF_DEC
--   reduce production option(SEMICOLON) ->

State 170:
## Known stack suffix:
## lex_entry SEMICOLON
## LR(1) items:
end_of_dec(lex_entry) -> lex_entry SEMICOLON . end_of_dec(lex_entry) [ SIG_OPEN NL_LEX_OPEN LEX_OPEN EOI ]
option(SEMICOLON) -> SEMICOLON . [ END_OF_DEC ]
## Transitions:
-- On SYMBOL shift to state 57
-- On IDENT shift to state 58
-- On separated_nonempty_list(COMMA,id_or_sym) shift to state 59
-- On lex_entry shift to state 169
-- On id_or_sym shift to state 90
-- On end_of_dec(lex_entry) shift to state 171
## Reductions:
-- On END_OF_DEC
--   reduce production option(SEMICOLON) -> SEMICOLON

State 171:
## Known stack suffix:
## lex_entry SEMICOLON end_of_dec(lex_entry)
## LR(1) items:
end_of_dec(lex_entry) -> lex_entry SEMICOLON end_of_dec(lex_entry) . [ SIG_OPEN NL_LEX_OPEN LEX_OPEN EOI ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production end_of_dec(lex_entry) -> lex_entry SEMICOLON end_of_dec(lex_entry)

State 172:
## Known stack suffix:
## lex_entry option(SEMICOLON)
## LR(1) items:
end_of_dec(lex_entry) -> lex_entry option(SEMICOLON) . END_OF_DEC [ SIG_OPEN NL_LEX_OPEN LEX_OPEN EOI ]
## Transitions:
-- On END_OF_DEC shift to state 173
## Reductions:

State 173:
## Known stack suffix:
## lex_entry option(SEMICOLON) END_OF_DEC
## LR(1) items:
end_of_dec(lex_entry) -> lex_entry option(SEMICOLON) END_OF_DEC . [ SIG_OPEN NL_LEX_OPEN LEX_OPEN EOI ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production end_of_dec(lex_entry) -> lex_entry option(SEMICOLON) END_OF_DEC

State 174:
## Known stack suffix:
## NL_LEX_OPEN IDENT LPAREN IDENT RPAREN COLON IDENT EQUAL end_of_dec(lex_entry)
## LR(1) items:
lexicon -> NL_LEX_OPEN IDENT LPAREN IDENT RPAREN COLON IDENT EQUAL end_of_dec(lex_entry) . [ SIG_OPEN NL_LEX_OPEN LEX_OPEN EOI ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production lexicon -> NL_LEX_OPEN IDENT LPAREN IDENT RPAREN COLON IDENT EQUAL end_of_dec(lex_entry)

State 175:
## Known stack suffix:
## LEX_OPEN
## LR(1) items:
lexicon -> LEX_OPEN . IDENT LPAREN IDENT RPAREN COLON IDENT EQUAL end_of_dec(lex_entry) [ SIG_OPEN NL_LEX_OPEN LEX_OPEN EOI ]
lexicon -> LEX_OPEN . IDENT EQUAL lexicon_exp [ SIG_OPEN NL_LEX_OPEN LEX_OPEN EOI ]
## Transitions:
-- On IDENT shift to state 176
## Reductions:

State 176:
## Known stack suffix:
## LEX_OPEN IDENT
## LR(1) items:
lexicon -> LEX_OPEN IDENT . LPAREN IDENT RPAREN COLON IDENT EQUAL end_of_dec(lex_entry) [ SIG_OPEN NL_LEX_OPEN LEX_OPEN EOI ]
lexicon -> LEX_OPEN IDENT . EQUAL lexicon_exp [ SIG_OPEN NL_LEX_OPEN LEX_OPEN EOI ]
## Transitions:
-- On LPAREN shift to state 177
-- On EQUAL shift to state 184
## Reductions:

State 177:
## Known stack suffix:
## LEX_OPEN IDENT LPAREN
## LR(1) items:
lexicon -> LEX_OPEN IDENT LPAREN . IDENT RPAREN COLON IDENT EQUAL end_of_dec(lex_entry) [ SIG_OPEN NL_LEX_OPEN LEX_OPEN EOI ]
## Transitions:
-- On IDENT shift to state 178
## Reductions:

State 178:
## Known stack suffix:
## LEX_OPEN IDENT LPAREN IDENT
## LR(1) items:
lexicon -> LEX_OPEN IDENT LPAREN IDENT . RPAREN COLON IDENT EQUAL end_of_dec(lex_entry) [ SIG_OPEN NL_LEX_OPEN LEX_OPEN EOI ]
## Transitions:
-- On RPAREN shift to state 179
## Reductions:

State 179:
## Known stack suffix:
## LEX_OPEN IDENT LPAREN IDENT RPAREN
## LR(1) items:
lexicon -> LEX_OPEN IDENT LPAREN IDENT RPAREN . COLON IDENT EQUAL end_of_dec(lex_entry) [ SIG_OPEN NL_LEX_OPEN LEX_OPEN EOI ]
## Transitions:
-- On COLON shift to state 180
## Reductions:

State 180:
## Known stack suffix:
## LEX_OPEN IDENT LPAREN IDENT RPAREN COLON
## LR(1) items:
lexicon -> LEX_OPEN IDENT LPAREN IDENT RPAREN COLON . IDENT EQUAL end_of_dec(lex_entry) [ SIG_OPEN NL_LEX_OPEN LEX_OPEN EOI ]
## Transitions:
-- On IDENT shift to state 181
## Reductions:

State 181:
## Known stack suffix:
## LEX_OPEN IDENT LPAREN IDENT RPAREN COLON IDENT
## LR(1) items:
lexicon -> LEX_OPEN IDENT LPAREN IDENT RPAREN COLON IDENT . EQUAL end_of_dec(lex_entry) [ SIG_OPEN NL_LEX_OPEN LEX_OPEN EOI ]
## Transitions:
-- On EQUAL shift to state 182
## Reductions:

State 182:
## Known stack suffix:
## LEX_OPEN IDENT LPAREN IDENT RPAREN COLON IDENT EQUAL
## LR(1) items:
lexicon -> LEX_OPEN IDENT LPAREN IDENT RPAREN COLON IDENT EQUAL . end_of_dec(lex_entry) [ SIG_OPEN NL_LEX_OPEN LEX_OPEN EOI ]
## Transitions:
-- On SYMBOL shift to state 57
-- On IDENT shift to state 58
-- On separated_nonempty_list(COMMA,id_or_sym) shift to state 59
-- On lex_entry shift to state 169
-- On id_or_sym shift to state 90
-- On end_of_dec(lex_entry) shift to state 183
## Reductions:

State 183:
## Known stack suffix:
## LEX_OPEN IDENT LPAREN IDENT RPAREN COLON IDENT EQUAL end_of_dec(lex_entry)
## LR(1) items:
lexicon -> LEX_OPEN IDENT LPAREN IDENT RPAREN COLON IDENT EQUAL end_of_dec(lex_entry) . [ SIG_OPEN NL_LEX_OPEN LEX_OPEN EOI ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production lexicon -> LEX_OPEN IDENT LPAREN IDENT RPAREN COLON IDENT EQUAL end_of_dec(lex_entry)

State 184:
## Known stack suffix:
## LEX_OPEN IDENT EQUAL
## LR(1) items:
lexicon -> LEX_OPEN IDENT EQUAL . lexicon_exp [ SIG_OPEN NL_LEX_OPEN LEX_OPEN EOI ]
## Transitions:
-- On LPAREN shift to state 185
-- On IDENT shift to state 186
-- On lexicon_exp0 shift to state 187
-- On lexicon_exp shift to state 192
## Reductions:

State 185:
## Known stack suffix:
## LPAREN
## LR(1) items:
lexicon_exp0 -> LPAREN . lexicon_exp RPAREN [ SIG_OPEN RPAREN NL_LEX_OPEN LEX_OPEN EOI COMPOSE ]
## Transitions:
-- On LPAREN shift to state 185
-- On IDENT shift to state 186
-- On lexicon_exp0 shift to state 187
-- On lexicon_exp shift to state 190
## Reductions:

State 186:
## Known stack suffix:
## IDENT
## LR(1) items:
lexicon_exp0 -> IDENT . [ SIG_OPEN RPAREN NL_LEX_OPEN LEX_OPEN EOI COMPOSE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production lexicon_exp0 -> IDENT

State 187:
## Known stack suffix:
## lexicon_exp0
## LR(1) items:
lexicon_exp -> lexicon_exp0 . [ SIG_OPEN RPAREN NL_LEX_OPEN LEX_OPEN EOI ]
lexicon_exp -> lexicon_exp0 . COMPOSE lexicon_exp [ SIG_OPEN RPAREN NL_LEX_OPEN LEX_OPEN EOI ]
## Transitions:
-- On COMPOSE shift to state 188
## Reductions:
-- On SIG_OPEN RPAREN NL_LEX_OPEN LEX_OPEN EOI
--   reduce production lexicon_exp -> lexicon_exp0

State 188:
## Known stack suffix:
## lexicon_exp0 COMPOSE
## LR(1) items:
lexicon_exp -> lexicon_exp0 COMPOSE . lexicon_exp [ SIG_OPEN RPAREN NL_LEX_OPEN LEX_OPEN EOI ]
## Transitions:
-- On LPAREN shift to state 185
-- On IDENT shift to state 186
-- On lexicon_exp0 shift to state 187
-- On lexicon_exp shift to state 189
## Reductions:

State 189:
## Known stack suffix:
## lexicon_exp0 COMPOSE lexicon_exp
## LR(1) items:
lexicon_exp -> lexicon_exp0 COMPOSE lexicon_exp . [ SIG_OPEN RPAREN NL_LEX_OPEN LEX_OPEN EOI ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production lexicon_exp -> lexicon_exp0 COMPOSE lexicon_exp

State 190:
## Known stack suffix:
## LPAREN lexicon_exp
## LR(1) items:
lexicon_exp0 -> LPAREN lexicon_exp . RPAREN [ SIG_OPEN RPAREN NL_LEX_OPEN LEX_OPEN EOI COMPOSE ]
## Transitions:
-- On RPAREN shift to state 191
## Reductions:

State 191:
## Known stack suffix:
## LPAREN lexicon_exp RPAREN
## LR(1) items:
lexicon_exp0 -> LPAREN lexicon_exp RPAREN . [ SIG_OPEN RPAREN NL_LEX_OPEN LEX_OPEN EOI COMPOSE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production lexicon_exp0 -> LPAREN lexicon_exp RPAREN

State 192:
## Known stack suffix:
## LEX_OPEN IDENT EQUAL lexicon_exp
## LR(1) items:
lexicon -> LEX_OPEN IDENT EQUAL lexicon_exp . [ SIG_OPEN NL_LEX_OPEN LEX_OPEN EOI ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production lexicon -> LEX_OPEN IDENT EQUAL lexicon_exp

State 193:
## Known stack suffix:
## signature
## LR(1) items:
sig_or_lex -> signature . [ SIG_OPEN NL_LEX_OPEN LEX_OPEN EOI ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production sig_or_lex -> signature

State 194:
## Known stack suffix:
## sig_or_lex
## LR(1) items:
nonempty_list(sig_or_lex) -> sig_or_lex . [ EOI ]
nonempty_list(sig_or_lex) -> sig_or_lex . nonempty_list(sig_or_lex) [ EOI ]
## Transitions:
-- On SIG_OPEN shift to state 94
-- On NL_LEX_OPEN shift to state 161
-- On LEX_OPEN shift to state 175
-- On signature shift to state 193
-- On sig_or_lex shift to state 194
-- On nonempty_list(sig_or_lex) shift to state 195
-- On lexicon shift to state 196
## Reductions:
-- On EOI
--   reduce production nonempty_list(sig_or_lex) -> sig_or_lex

State 195:
## Known stack suffix:
## sig_or_lex nonempty_list(sig_or_lex)
## LR(1) items:
nonempty_list(sig_or_lex) -> sig_or_lex nonempty_list(sig_or_lex) . [ EOI ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production nonempty_list(sig_or_lex) -> sig_or_lex nonempty_list(sig_or_lex)

State 196:
## Known stack suffix:
## lexicon
## LR(1) items:
sig_or_lex -> lexicon . [ SIG_OPEN NL_LEX_OPEN LEX_OPEN EOI ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production sig_or_lex -> lexicon

State 197:
## Known stack suffix:
## nonempty_list(sig_or_lex)
## LR(1) items:
main -> nonempty_list(sig_or_lex) . EOI [ # ]
## Transitions:
-- On EOI shift to state 198
## Reductions:

State 198:
## Known stack suffix:
## nonempty_list(sig_or_lex) EOI
## LR(1) items:
main -> nonempty_list(sig_or_lex) EOI . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production main -> nonempty_list(sig_or_lex) EOI

State 199:
## Known stack suffix:
## main
## LR(1) items:
main' -> main . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, accept main

State 200:
## Known stack suffix:
##
## LR(1) items:
sig_entry_eoi' -> . sig_entry_eoi [ # ]
## Transitions:
-- On PREFIX shift to state 97
-- On INFIX shift to state 105
-- On IDENT shift to state 130
-- On BINDER shift to state 139
-- On type_definition shift to state 147
-- On type_declaration shift to state 148
-- On term_definition shift to state 149
-- On term_declaration shift to state 150
-- On sig_entry_eoi shift to state 201
-- On sig_entry shift to state 202
-- On separated_nonempty_list(COMMA,IDENT) shift to state 153
## Reductions:

State 201:
## Known stack suffix:
## sig_entry_eoi
## LR(1) items:
sig_entry_eoi' -> sig_entry_eoi . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, accept sig_entry_eoi

State 202:
## Known stack suffix:
## sig_entry
## LR(1) items:
sig_entry_eoi -> sig_entry . EOI [ # ]
## Transitions:
-- On EOI shift to state 203
## Reductions:

State 203:
## Known stack suffix:
## sig_entry EOI
## LR(1) items:
sig_entry_eoi -> sig_entry EOI . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production sig_entry_eoi -> sig_entry EOI

State 204:
## Known stack suffix:
##
## LR(1) items:
term_alone' -> . term_alone [ # ]
## Transitions:
-- On SYMBOL shift to state 1
-- On LPAREN shift to state 2
-- On LAMBDA0 shift to state 3
-- On LAMBDA shift to state 6
-- On IDENT shift to state 8
-- On type_or_term0(COLON) shift to state 13
-- On type_or_term(COLON) shift to state 205
-- On term_alone shift to state 209
-- On bound_term(COLON) shift to state 16
## Reductions:

State 205:
## Known stack suffix:
## type_or_term(COLON)
## LR(1) items:
term_alone -> type_or_term(COLON) . COLON type_or_term(EOI) EOI [ # ]
## Transitions:
-- On COLON shift to state 206
## Reductions:

State 206:
## Known stack suffix:
## type_or_term(COLON) COLON
## LR(1) items:
term_alone -> type_or_term(COLON) COLON . type_or_term(EOI) EOI [ # ]
## Transitions:
-- On SYMBOL shift to state 28
-- On LPAREN shift to state 29
-- On LAMBDA0 shift to state 30
-- On LAMBDA shift to state 33
-- On IDENT shift to state 35
-- On type_or_term0(EOI) shift to state 40
-- On type_or_term(EOI) shift to state 207
-- On bound_term(EOI) shift to state 43
## Reductions:

State 207:
## Known stack suffix:
## type_or_term(COLON) COLON type_or_term(EOI)
## LR(1) items:
term_alone -> type_or_term(COLON) COLON type_or_term(EOI) . EOI [ # ]
## Transitions:
-- On EOI shift to state 208
## Reductions:

State 208:
## Known stack suffix:
## type_or_term(COLON) COLON type_or_term(EOI) EOI
## LR(1) items:
term_alone -> type_or_term(COLON) COLON type_or_term(EOI) EOI . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production term_alone -> type_or_term(COLON) COLON type_or_term(EOI) EOI

State 209:
## Known stack suffix:
## term_alone
## LR(1) items:
term_alone' -> term_alone . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, accept term_alone

