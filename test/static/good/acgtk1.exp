Grammar has 36 nonterminal symbols, among which 5 start symbols.
Grammar has 26 terminal symbols.
Grammar has 95 productions.
nullable(type_or_term0(SEMICOLON)) = false
nullable(type_or_term0(EOI)) = false
nullable(type_or_term0(COLON)) = false
nullable(type_or_term(SEMICOLON)) = false
nullable(type_or_term(EOI)) = false
nullable(type_or_term(COLON)) = false
nullable(type_definition) = false
nullable(type_declaration) = false
nullable(term_definition) = false
nullable(term_declaration) = false
nullable(term_alone) = false
nullable(signature) = false
nullable(sig_or_lex) = false
nullable(sig_entry_eoi) = false
nullable(sig_entry) = false
nullable(separated_nonempty_list(COMMA,infix_option_value)) = false
nullable(separated_nonempty_list(COMMA,id_or_sym)) = false
nullable(separated_nonempty_list(COMMA,IDENT)) = false
nullable(option(SEMICOLON)) = true
nullable(nonempty_list(sig_or_lex)) = false
nullable(main) = false
nullable(lexicon_exp0) = false
nullable(lexicon_exp) = false
nullable(lexicon) = false
nullable(lex_entry_eoi) = false
nullable(lex_entry) = false
nullable(id_or_sym) = false
nullable(heterogenous_term_and_type) = false
nullable(end_of_dec(sig_entry)) = false
nullable(end_of_dec(lex_entry)) = false
nullable(bound_term_ending(SEMICOLON)) = false
nullable(bound_term_ending(EOI)) = false
nullable(bound_term_ending(COLON)) = false
nullable(bound_term(SEMICOLON)) = false
nullable(bound_term(EOI)) = false
nullable(bound_term(COLON)) = false
first(type_or_term0(SEMICOLON)) = SYMBOL LPAREN IDENT
first(type_or_term0(EOI)) = SYMBOL LPAREN IDENT
first(type_or_term0(COLON)) = SYMBOL LPAREN IDENT
first(type_or_term(SEMICOLON)) = SYMBOL LPAREN LAMBDA0 LAMBDA IDENT
first(type_or_term(EOI)) = SYMBOL LPAREN LAMBDA0 LAMBDA IDENT
first(type_or_term(COLON)) = SYMBOL LPAREN LAMBDA0 LAMBDA IDENT
first(type_definition) = IDENT
first(type_declaration) = IDENT
first(term_definition) = PREFIX INFIX IDENT BINDER
first(term_declaration) = PREFIX INFIX IDENT BINDER
first(term_alone) = SYMBOL LPAREN LAMBDA0 LAMBDA IDENT
first(signature) = SIG_OPEN
first(sig_or_lex) = SIG_OPEN NL_LEX_OPEN LEX_OPEN
first(sig_entry_eoi) = PREFIX INFIX IDENT BINDER
first(sig_entry) = PREFIX INFIX IDENT BINDER
first(separated_nonempty_list(COMMA,infix_option_value)) = SYMBOL IDENT
first(separated_nonempty_list(COMMA,id_or_sym)) = SYMBOL IDENT
first(separated_nonempty_list(COMMA,IDENT)) = IDENT
first(option(SEMICOLON)) = SEMICOLON
first(nonempty_list(sig_or_lex)) = SIG_OPEN NL_LEX_OPEN LEX_OPEN
first(main) = SIG_OPEN NL_LEX_OPEN LEX_OPEN
first(lexicon_exp0) = LPAREN IDENT
first(lexicon_exp) = LPAREN IDENT
first(lexicon) = NL_LEX_OPEN LEX_OPEN
first(lex_entry_eoi) = SYMBOL IDENT
first(lex_entry) = SYMBOL IDENT
first(id_or_sym) = SYMBOL IDENT
first(heterogenous_term_and_type) = SYMBOL LPAREN LAMBDA0 LAMBDA IDENT
first(end_of_dec(sig_entry)) = PREFIX INFIX IDENT BINDER
first(end_of_dec(lex_entry)) = SYMBOL IDENT
first(bound_term_ending(SEMICOLON)) = IDENT
first(bound_term_ending(EOI)) = IDENT
first(bound_term_ending(COLON)) = IDENT
first(bound_term(SEMICOLON)) = LAMBDA0 LAMBDA IDENT
first(bound_term(EOI)) = LAMBDA0 LAMBDA IDENT
first(bound_term(COLON)) = LAMBDA0 LAMBDA IDENT
minimal(type_or_term0(SEMICOLON)) = (* 1 *) IDENT
minimal(type_or_term0(EOI)) = (* 1 *) IDENT
minimal(type_or_term0(COLON)) = (* 1 *) IDENT
minimal(type_or_term(SEMICOLON)) = (* 1 *) IDENT
minimal(type_or_term(EOI)) = (* 1 *) IDENT
minimal(type_or_term(COLON)) = (* 1 *) IDENT
minimal(type_definition) = (* 5 *) IDENT EQUAL IDENT COLON TYPE
minimal(type_declaration) = (* 3 *) IDENT COLON TYPE
minimal(term_definition) = (* 5 *) IDENT EQUAL IDENT COLON IDENT
minimal(term_declaration) = (* 3 *) IDENT COLON IDENT
minimal(term_alone) = (* 4 *) IDENT COLON IDENT EOI
minimal(signature) = (* 7 *) SIG_OPEN IDENT EQUAL IDENT COLON TYPE END_OF_DEC
minimal(sig_or_lex) = (* 4 *) LEX_OPEN IDENT EQUAL IDENT
minimal(sig_entry_eoi) = (* 4 *) IDENT COLON TYPE EOI
minimal(sig_entry) = (* 3 *) IDENT COLON TYPE
minimal(separated_nonempty_list(COMMA,infix_option_value)) = (* 1 *) IDENT
minimal(separated_nonempty_list(COMMA,id_or_sym)) = (* 1 *) IDENT
minimal(separated_nonempty_list(COMMA,IDENT)) = (* 1 *) IDENT
minimal(option(SEMICOLON)) = (* 0 *)
minimal(nonempty_list(sig_or_lex)) = (* 4 *) LEX_OPEN IDENT EQUAL IDENT
minimal(main) = (* 5 *) LEX_OPEN IDENT EQUAL IDENT EOI
minimal(lexicon_exp0) = (* 1 *) IDENT
minimal(lexicon_exp) = (* 1 *) IDENT
minimal(lexicon) = (* 4 *) LEX_OPEN IDENT EQUAL IDENT
minimal(lex_entry_eoi) = (* 4 *) IDENT COLON_EQUAL IDENT EOI
minimal(lex_entry) = (* 3 *) IDENT COLON_EQUAL IDENT
minimal(id_or_sym) = (* 1 *) IDENT
minimal(heterogenous_term_and_type) = (* 4 *) IDENT COLON IDENT EOI
minimal(end_of_dec(sig_entry)) = (* 4 *) IDENT COLON TYPE END_OF_DEC
minimal(end_of_dec(lex_entry)) = (* 4 *) IDENT COLON_EQUAL IDENT END_OF_DEC
minimal(bound_term_ending(SEMICOLON)) = (* 3 *) IDENT DOT IDENT
minimal(bound_term_ending(EOI)) = (* 3 *) IDENT DOT IDENT
minimal(bound_term_ending(COLON)) = (* 3 *) IDENT DOT IDENT
minimal(bound_term(SEMICOLON)) = (* 4 *) LAMBDA IDENT DOT IDENT
minimal(bound_term(EOI)) = (* 4 *) LAMBDA IDENT DOT IDENT
minimal(bound_term(COLON)) = (* 4 *) LAMBDA IDENT DOT IDENT
maximal(type_or_term0(SEMICOLON)) = infinity
maximal(type_or_term0(EOI)) = infinity
maximal(type_or_term0(COLON)) = infinity
maximal(type_or_term(SEMICOLON)) = infinity
maximal(type_or_term(EOI)) = infinity
maximal(type_or_term(COLON)) = infinity
maximal(type_definition) = infinity
maximal(type_declaration) = infinity
maximal(term_definition) = infinity
maximal(term_declaration) = infinity
maximal(term_alone) = infinity
maximal(signature) = infinity
maximal(sig_or_lex) = infinity
maximal(sig_entry_eoi) = infinity
maximal(sig_entry) = infinity
maximal(separated_nonempty_list(COMMA,infix_option_value)) = infinity
maximal(separated_nonempty_list(COMMA,id_or_sym)) = infinity
maximal(separated_nonempty_list(COMMA,IDENT)) = infinity
maximal(option(SEMICOLON)) = 1
maximal(nonempty_list(sig_or_lex)) = infinity
maximal(main) = infinity
maximal(lexicon_exp0) = infinity
maximal(lexicon_exp) = infinity
maximal(lexicon) = infinity
maximal(lex_entry_eoi) = infinity
maximal(lex_entry) = infinity
maximal(id_or_sym) = 1
maximal(heterogenous_term_and_type) = infinity
maximal(end_of_dec(sig_entry)) = infinity
maximal(end_of_dec(lex_entry)) = infinity
maximal(bound_term_ending(SEMICOLON)) = infinity
maximal(bound_term_ending(EOI)) = infinity
maximal(bound_term_ending(COLON)) = infinity
maximal(bound_term(SEMICOLON)) = infinity
maximal(bound_term(EOI)) = infinity
maximal(bound_term(COLON)) = infinity
follow(type_or_term0(SEMICOLON)) = SEMICOLON RPAREN LIN_ARROW EOI END_OF_DEC ARROW
follow(type_or_term0(EOI)) = RPAREN LIN_ARROW EOI ARROW
follow(type_or_term0(COLON)) = RPAREN LIN_ARROW COLON ARROW
follow(type_or_term(SEMICOLON)) = SEMICOLON RPAREN EOI END_OF_DEC
follow(type_or_term(EOI)) = RPAREN EOI
follow(type_or_term(COLON)) = RPAREN COLON
follow(type_definition) = SEMICOLON EOI END_OF_DEC
follow(type_declaration) = SEMICOLON EOI END_OF_DEC
follow(term_definition) = SEMICOLON EOI END_OF_DEC
follow(term_declaration) = SEMICOLON EOI END_OF_DEC
follow(term_alone) = #
follow(signature) = SIG_OPEN NL_LEX_OPEN LEX_OPEN EOI
follow(sig_or_lex) = SIG_OPEN NL_LEX_OPEN LEX_OPEN EOI
follow(sig_entry_eoi) = #
follow(sig_entry) = SEMICOLON EOI END_OF_DEC
follow(separated_nonempty_list(COMMA,infix_option_value)) = RSQBRACKET
follow(separated_nonempty_list(COMMA,id_or_sym)) = COLON_EQUAL
follow(separated_nonempty_list(COMMA,IDENT)) = COLON
follow(option(SEMICOLON)) = END_OF_DEC
follow(nonempty_list(sig_or_lex)) = EOI
follow(main) = #
follow(lexicon_exp0) = SIG_OPEN RPAREN NL_LEX_OPEN LEX_OPEN EOI COMPOSE
follow(lexicon_exp) = SIG_OPEN RPAREN NL_LEX_OPEN LEX_OPEN EOI
follow(lexicon) = SIG_OPEN NL_LEX_OPEN LEX_OPEN EOI
follow(lex_entry_eoi) = #
follow(lex_entry) = SEMICOLON EOI END_OF_DEC
follow(id_or_sym) = COMMA COLON_EQUAL
follow(heterogenous_term_and_type) = #
follow(end_of_dec(sig_entry)) = SIG_OPEN NL_LEX_OPEN LEX_OPEN EOI
follow(end_of_dec(lex_entry)) = SIG_OPEN NL_LEX_OPEN LEX_OPEN EOI
follow(bound_term_ending(SEMICOLON)) = SEMICOLON RPAREN EOI END_OF_DEC
follow(bound_term_ending(EOI)) = RPAREN EOI
follow(bound_term_ending(COLON)) = RPAREN COLON
follow(bound_term(SEMICOLON)) = SEMICOLON RPAREN EOI END_OF_DEC
follow(bound_term(EOI)) = RPAREN EOI
follow(bound_term(COLON)) = RPAREN COLON
Built an LR(0) automaton with 210 states.
The grammar is SLR(1).
The construction mode is pager.
Built an LR(1) automaton with 210 states.
Extra reductions on error were added in 18 states.
Priority played a role in 0 of these states.
80 out of 210 states have a default reduction.
The action table is 5670 entries; 487 non-zero; 510 compressed.
The action table occupies roughly 1112 bytes.
The goto table is 8610 entries; 188 non-zero; 397 compressed.
The goto table occupies roughly 704 bytes.
The error table occupies roughly 744 bytes.
The default_reduction table occupies roughly 248 bytes.
The lhs table occupies roughly 136 bytes.
The trace table occupies roughly 8 bytes.
