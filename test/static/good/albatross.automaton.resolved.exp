State 0:
file' -> . file [ # ]
-- On KWuse shift to state 1
-- On use_block shift to state 13
-- On file shift to state 422
-- On decls shift to state 423
-- On UIDENTIFIER reduce production decls -> 
-- On SEMICOL reduce production decls -> 
-- On NUMBER reduce production decls -> 
-- On LPAREN reduce production decls -> 
-- On LIDENTIFIER reduce production decls -> 
-- On KWtrue reduce production decls -> 
-- On KWimmutable reduce production decls -> 
-- On KWfalse reduce production decls -> 
-- On KWdeferred reduce production decls -> 
-- On KWclass reduce production decls -> 
-- On KWcase reduce production decls -> 
-- On KWall reduce production decls -> 

State 1:
use_block -> KWuse . module_list KWend [ UIDENTIFIER SEMICOL NUMBER LPAREN LIDENTIFIER KWtrue KWimmutable KWfalse KWdeferred KWclass KWcase KWall # ]
-- On LIDENTIFIER shift to state 2
-- On one_module shift to state 3
-- On module_list shift to state 11
-- On dotted_id_list shift to state 8

State 2:
dotted_id_list -> LIDENTIFIER . [ SEMICOL NEWLINE KWend DOT ]
-- On SEMICOL reduce production dotted_id_list -> LIDENTIFIER
-- On NEWLINE reduce production dotted_id_list -> LIDENTIFIER
-- On KWend reduce production dotted_id_list -> LIDENTIFIER
-- On DOT reduce production dotted_id_list -> LIDENTIFIER

State 3:
module_list -> one_module . [ KWend ]
module_list -> one_module . separator module_list [ KWend ]
-- On SEMICOL shift to state 4
-- On NEWLINE shift to state 5
-- On separator shift to state 6
-- On KWend reduce production module_list -> one_module

State 4:
separator -> SEMICOL . [ USCORE TIMES PLUS NUMBER MINUS LPAREN LIDENTIFIER LBRACKET LBRACE KWtrue KWsome KWrequire KWproof KWold KWnote KWnot KWinspect KWif KWfalse KWensure KWdeferred KWall KWagent KWResult ]
-- On USCORE reduce production separator -> SEMICOL
-- On TIMES reduce production separator -> SEMICOL
-- On PLUS reduce production separator -> SEMICOL
-- On NUMBER reduce production separator -> SEMICOL
-- On MINUS reduce production separator -> SEMICOL
-- On LPAREN reduce production separator -> SEMICOL
-- On LIDENTIFIER reduce production separator -> SEMICOL
-- On LBRACKET reduce production separator -> SEMICOL
-- On LBRACE reduce production separator -> SEMICOL
-- On KWtrue reduce production separator -> SEMICOL
-- On KWsome reduce production separator -> SEMICOL
-- On KWrequire reduce production separator -> SEMICOL
-- On KWproof reduce production separator -> SEMICOL
-- On KWold reduce production separator -> SEMICOL
-- On KWnote reduce production separator -> SEMICOL
-- On KWnot reduce production separator -> SEMICOL
-- On KWinspect reduce production separator -> SEMICOL
-- On KWif reduce production separator -> SEMICOL
-- On KWfalse reduce production separator -> SEMICOL
-- On KWensure reduce production separator -> SEMICOL
-- On KWdeferred reduce production separator -> SEMICOL
-- On KWall reduce production separator -> SEMICOL
-- On KWagent reduce production separator -> SEMICOL
-- On KWResult reduce production separator -> SEMICOL

State 5:
separator -> NEWLINE . [ USCORE TIMES PLUS NUMBER MINUS LPAREN LIDENTIFIER LBRACKET LBRACE KWtrue KWsome KWrequire KWproof KWold KWnote KWnot KWinspect KWif KWfalse KWensure KWdeferred KWall KWagent KWResult ]
-- On USCORE reduce production separator -> NEWLINE
-- On TIMES reduce production separator -> NEWLINE
-- On PLUS reduce production separator -> NEWLINE
-- On NUMBER reduce production separator -> NEWLINE
-- On MINUS reduce production separator -> NEWLINE
-- On LPAREN reduce production separator -> NEWLINE
-- On LIDENTIFIER reduce production separator -> NEWLINE
-- On LBRACKET reduce production separator -> NEWLINE
-- On LBRACE reduce production separator -> NEWLINE
-- On KWtrue reduce production separator -> NEWLINE
-- On KWsome reduce production separator -> NEWLINE
-- On KWrequire reduce production separator -> NEWLINE
-- On KWproof reduce production separator -> NEWLINE
-- On KWold reduce production separator -> NEWLINE
-- On KWnote reduce production separator -> NEWLINE
-- On KWnot reduce production separator -> NEWLINE
-- On KWinspect reduce production separator -> NEWLINE
-- On KWif reduce production separator -> NEWLINE
-- On KWfalse reduce production separator -> NEWLINE
-- On KWensure reduce production separator -> NEWLINE
-- On KWdeferred reduce production separator -> NEWLINE
-- On KWall reduce production separator -> NEWLINE
-- On KWagent reduce production separator -> NEWLINE
-- On KWResult reduce production separator -> NEWLINE

State 6:
module_list -> one_module separator . module_list [ KWend ]
-- On LIDENTIFIER shift to state 2
-- On one_module shift to state 3
-- On module_list shift to state 7
-- On dotted_id_list shift to state 8

State 7:
module_list -> one_module separator module_list . [ KWend ]
-- On KWend reduce production module_list -> one_module separator module_list

State 8:
dotted_id_list -> dotted_id_list . DOT LIDENTIFIER [ SEMICOL NEWLINE KWend DOT ]
one_module -> dotted_id_list . [ SEMICOL NEWLINE KWend ]
-- On DOT shift to state 9
-- On SEMICOL reduce production one_module -> dotted_id_list
-- On NEWLINE reduce production one_module -> dotted_id_list
-- On KWend reduce production one_module -> dotted_id_list

State 9:
dotted_id_list -> dotted_id_list DOT . LIDENTIFIER [ SEMICOL NEWLINE KWend DOT ]
-- On LIDENTIFIER shift to state 10

State 10:
dotted_id_list -> dotted_id_list DOT LIDENTIFIER . [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
-- On UIDENTIFIER reduce production dotted_id_list -> dotted_id_list DOT LIDENTIFIER
-- On TIMES reduce production dotted_id_list -> dotted_id_list DOT LIDENTIFIER
-- On SEMICOL reduce production dotted_id_list -> dotted_id_list DOT LIDENTIFIER
-- On RPAREN reduce production dotted_id_list -> dotted_id_list DOT LIDENTIFIER
-- On RBRACKET reduce production dotted_id_list -> dotted_id_list DOT LIDENTIFIER
-- On RBRACE reduce production dotted_id_list -> dotted_id_list DOT LIDENTIFIER
-- On PLUS reduce production dotted_id_list -> dotted_id_list DOT LIDENTIFIER
-- On NUMBER reduce production dotted_id_list -> dotted_id_list DOT LIDENTIFIER
-- On NOTIN reduce production dotted_id_list -> dotted_id_list DOT LIDENTIFIER
-- On NEWLINE reduce production dotted_id_list -> dotted_id_list DOT LIDENTIFIER
-- On NEQ reduce production dotted_id_list -> dotted_id_list DOT LIDENTIFIER
-- On MINUS reduce production dotted_id_list -> dotted_id_list DOT LIDENTIFIER
-- On LT reduce production dotted_id_list -> dotted_id_list DOT LIDENTIFIER
-- On LPAREN reduce production dotted_id_list -> dotted_id_list DOT LIDENTIFIER
-- On LIDENTIFIER reduce production dotted_id_list -> dotted_id_list DOT LIDENTIFIER
-- On LE reduce production dotted_id_list -> dotted_id_list DOT LIDENTIFIER
-- On LBRACKET reduce production dotted_id_list -> dotted_id_list DOT LIDENTIFIER
-- On KWtrue reduce production dotted_id_list -> dotted_id_list DOT LIDENTIFIER
-- On KWthen reduce production dotted_id_list -> dotted_id_list DOT LIDENTIFIER
-- On KWproof reduce production dotted_id_list -> dotted_id_list DOT LIDENTIFIER
-- On KWor reduce production dotted_id_list -> dotted_id_list DOT LIDENTIFIER
-- On KWnote reduce production dotted_id_list -> dotted_id_list DOT LIDENTIFIER
-- On KWlocal reduce production dotted_id_list -> dotted_id_list DOT LIDENTIFIER
-- On KWin reduce production dotted_id_list -> dotted_id_list DOT LIDENTIFIER
-- On KWimmutable reduce production dotted_id_list -> dotted_id_list DOT LIDENTIFIER
-- On KWfalse reduce production dotted_id_list -> dotted_id_list DOT LIDENTIFIER
-- On KWensure reduce production dotted_id_list -> dotted_id_list DOT LIDENTIFIER
-- On KWend reduce production dotted_id_list -> dotted_id_list DOT LIDENTIFIER
-- On KWelseif reduce production dotted_id_list -> dotted_id_list DOT LIDENTIFIER
-- On KWelse reduce production dotted_id_list -> dotted_id_list DOT LIDENTIFIER
-- On KWdo reduce production dotted_id_list -> dotted_id_list DOT LIDENTIFIER
-- On KWdeferred reduce production dotted_id_list -> dotted_id_list DOT LIDENTIFIER
-- On KWclass reduce production dotted_id_list -> dotted_id_list DOT LIDENTIFIER
-- On KWcase reduce production dotted_id_list -> dotted_id_list DOT LIDENTIFIER
-- On KWas reduce production dotted_id_list -> dotted_id_list DOT LIDENTIFIER
-- On KWand reduce production dotted_id_list -> dotted_id_list DOT LIDENTIFIER
-- On KWall reduce production dotted_id_list -> dotted_id_list DOT LIDENTIFIER
-- On GT reduce production dotted_id_list -> dotted_id_list DOT LIDENTIFIER
-- On GE reduce production dotted_id_list -> dotted_id_list DOT LIDENTIFIER
-- On EQ reduce production dotted_id_list -> dotted_id_list DOT LIDENTIFIER
-- On DOT reduce production dotted_id_list -> dotted_id_list DOT LIDENTIFIER
-- On DIVIDE reduce production dotted_id_list -> dotted_id_list DOT LIDENTIFIER
-- On DCOLON reduce production dotted_id_list -> dotted_id_list DOT LIDENTIFIER
-- On DBAR reduce production dotted_id_list -> dotted_id_list DOT LIDENTIFIER
-- On DARROW reduce production dotted_id_list -> dotted_id_list DOT LIDENTIFIER
-- On COMMA reduce production dotted_id_list -> dotted_id_list DOT LIDENTIFIER
-- On COLON reduce production dotted_id_list -> dotted_id_list DOT LIDENTIFIER
-- On CARET reduce production dotted_id_list -> dotted_id_list DOT LIDENTIFIER
-- On BAR reduce production dotted_id_list -> dotted_id_list DOT LIDENTIFIER

State 11:
use_block -> KWuse module_list . KWend [ UIDENTIFIER SEMICOL NUMBER LPAREN LIDENTIFIER KWtrue KWimmutable KWfalse KWdeferred KWclass KWcase KWall # ]
-- On KWend shift to state 12

State 12:
use_block -> KWuse module_list KWend . [ UIDENTIFIER SEMICOL NUMBER LPAREN LIDENTIFIER KWtrue KWimmutable KWfalse KWdeferred KWclass KWcase KWall # ]
-- On UIDENTIFIER reduce production use_block -> KWuse module_list KWend
-- On SEMICOL reduce production use_block -> KWuse module_list KWend
-- On NUMBER reduce production use_block -> KWuse module_list KWend
-- On LPAREN reduce production use_block -> KWuse module_list KWend
-- On LIDENTIFIER reduce production use_block -> KWuse module_list KWend
-- On KWtrue reduce production use_block -> KWuse module_list KWend
-- On KWimmutable reduce production use_block -> KWuse module_list KWend
-- On KWfalse reduce production use_block -> KWuse module_list KWend
-- On KWdeferred reduce production use_block -> KWuse module_list KWend
-- On KWclass reduce production use_block -> KWuse module_list KWend
-- On KWcase reduce production use_block -> KWuse module_list KWend
-- On KWall reduce production use_block -> KWuse module_list KWend

State 13:
file -> use_block . optsemi decls [ # ]
-- On SEMICOL shift to state 14
-- On optsemi shift to state 15
-- On UIDENTIFIER reduce production optsemi -> 
-- On NUMBER reduce production optsemi -> 
-- On LPAREN reduce production optsemi -> 
-- On LIDENTIFIER reduce production optsemi -> 
-- On KWtrue reduce production optsemi -> 
-- On KWimmutable reduce production optsemi -> 
-- On KWfalse reduce production optsemi -> 
-- On KWdeferred reduce production optsemi -> 
-- On KWclass reduce production optsemi -> 
-- On KWcase reduce production optsemi -> 
-- On KWall reduce production optsemi -> 

State 14:
optsemi -> SEMICOL . [ UIDENTIFIER SEMICOL NUMBER LPAREN LIDENTIFIER LBRACKET KWtrue KWrequire KWproof KWnote KWlocal KWimmutable KWghost KWfalse KWensure KWend KWdo KWdeferred KWclass KWcase KWall # ]
-- On UIDENTIFIER reduce production optsemi -> SEMICOL
-- On SEMICOL reduce production optsemi -> SEMICOL
-- On NUMBER reduce production optsemi -> SEMICOL
-- On LPAREN reduce production optsemi -> SEMICOL
-- On LIDENTIFIER reduce production optsemi -> SEMICOL
-- On LBRACKET reduce production optsemi -> SEMICOL
-- On KWtrue reduce production optsemi -> SEMICOL
-- On KWrequire reduce production optsemi -> SEMICOL
-- On KWproof reduce production optsemi -> SEMICOL
-- On KWnote reduce production optsemi -> SEMICOL
-- On KWlocal reduce production optsemi -> SEMICOL
-- On KWimmutable reduce production optsemi -> SEMICOL
-- On KWghost reduce production optsemi -> SEMICOL
-- On KWfalse reduce production optsemi -> SEMICOL
-- On KWensure reduce production optsemi -> SEMICOL
-- On KWend reduce production optsemi -> SEMICOL
-- On KWdo reduce production optsemi -> SEMICOL
-- On KWdeferred reduce production optsemi -> SEMICOL
-- On KWclass reduce production optsemi -> SEMICOL
-- On KWcase reduce production optsemi -> SEMICOL
-- On KWall reduce production optsemi -> SEMICOL

State 15:
file -> use_block optsemi . decls [ # ]
-- On decls shift to state 16
-- On UIDENTIFIER reduce production decls -> 
-- On SEMICOL reduce production decls -> 
-- On NUMBER reduce production decls -> 
-- On LPAREN reduce production decls -> 
-- On LIDENTIFIER reduce production decls -> 
-- On KWtrue reduce production decls -> 
-- On KWimmutable reduce production decls -> 
-- On KWfalse reduce production decls -> 
-- On KWdeferred reduce production decls -> 
-- On KWclass reduce production decls -> 
-- On KWcase reduce production decls -> 
-- On KWall reduce production decls -> 

State 16:
decls -> decls . optsemi decl [ UIDENTIFIER SEMICOL NUMBER LPAREN LIDENTIFIER KWtrue KWimmutable KWfalse KWdeferred KWclass KWcase KWall # ]
file -> use_block optsemi decls . [ # ]
-- On SEMICOL shift to state 14
-- On optsemi shift to state 17
-- On UIDENTIFIER reduce production optsemi -> 
-- On NUMBER reduce production optsemi -> 
-- On LPAREN reduce production optsemi -> 
-- On LIDENTIFIER reduce production optsemi -> 
-- On KWtrue reduce production optsemi -> 
-- On KWimmutable reduce production optsemi -> 
-- On KWfalse reduce production optsemi -> 
-- On KWdeferred reduce production optsemi -> 
-- On KWclass reduce production optsemi -> 
-- On KWcase reduce production optsemi -> 
-- On KWall reduce production optsemi -> 

State 17:
decls -> decls optsemi . decl [ UIDENTIFIER SEMICOL NUMBER LPAREN LIDENTIFIER KWtrue KWimmutable KWfalse KWdeferred KWclass KWcase KWall # ]
-- On UIDENTIFIER shift to state 18
-- On NUMBER shift to state 55
-- On LPAREN shift to state 56
-- On LIDENTIFIER shift to state 85
-- On KWtrue shift to state 86
-- On KWimmutable shift to state 87
-- On KWfalse shift to state 88
-- On KWdeferred shift to state 89
-- On KWcase shift to state 90
-- On KWall shift to state 91
-- On proof_all_expr shift to state 316
-- On nameopconst_info shift to state 317
-- On nameopconst shift to state 368
-- On named_feature shift to state 369
-- On header_mark shift to state 370
-- On formal_generic shift to state 418
-- On featopconst shift to state 386
-- On decl shift to state 419
-- On class_declaration shift to state 420
-- On ass_feat shift to state 421
-- On KWclass reduce production header_mark -> 

State 18:
formal_generic -> UIDENTIFIER . COLON type_nt [ UIDENTIFIER SEMICOL NUMBER LPAREN LIDENTIFIER KWtrue KWimmutable KWfalse KWdeferred KWclass KWcase KWall # ]
-- On COLON shift to state 19

State 19:
formal_generic -> UIDENTIFIER COLON . type_nt [ UIDENTIFIER SEMICOL NUMBER LPAREN LIDENTIFIER KWtrue KWimmutable KWfalse KWdeferred KWclass KWcase KWall # ]
-- On UIDENTIFIER shift to state 20
-- On LPAREN shift to state 22
-- On LIDENTIFIER shift to state 2
-- On LBRACKET shift to state 23
-- On type_nt shift to state 54
-- On tuple_type shift to state 24
-- On star_type shift to state 25
-- On simple_type shift to state 26
-- On qmark_type shift to state 27
-- On path shift to state 28
-- On list_type shift to state 31
-- On elem_type shift to state 43
-- On dotted_id_list shift to state 36
-- On arrow_type shift to state 46

State 20:
simple_type -> UIDENTIFIER . actual_generics [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE QMARK PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWrequire KWrename KWproof KWor KWnote KWlocal KWin KWimmutable KWghost KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ASSIGN ARROW # ]
-- On LBRACKET shift to state 21
-- On actual_generics shift to state 53
-- On UIDENTIFIER reduce production actual_generics -> 
-- On TIMES reduce production actual_generics -> 
-- On SEMICOL reduce production actual_generics -> 
-- On RPAREN reduce production actual_generics -> 
-- On RBRACKET reduce production actual_generics -> 
-- On RBRACE reduce production actual_generics -> 
-- On QMARK reduce production actual_generics -> 
-- On PLUS reduce production actual_generics -> 
-- On NUMBER reduce production actual_generics -> 
-- On NOTIN reduce production actual_generics -> 
-- On NEWLINE reduce production actual_generics -> 
-- On NEQ reduce production actual_generics -> 
-- On MINUS reduce production actual_generics -> 
-- On LT reduce production actual_generics -> 
-- On LPAREN reduce production actual_generics -> 
-- On LIDENTIFIER reduce production actual_generics -> 
-- On LE reduce production actual_generics -> 
-- On KWtrue reduce production actual_generics -> 
-- On KWthen reduce production actual_generics -> 
-- On KWrequire reduce production actual_generics -> 
-- On KWrename reduce production actual_generics -> 
-- On KWproof reduce production actual_generics -> 
-- On KWor reduce production actual_generics -> 
-- On KWnote reduce production actual_generics -> 
-- On KWlocal reduce production actual_generics -> 
-- On KWin reduce production actual_generics -> 
-- On KWimmutable reduce production actual_generics -> 
-- On KWghost reduce production actual_generics -> 
-- On KWfalse reduce production actual_generics -> 
-- On KWensure reduce production actual_generics -> 
-- On KWend reduce production actual_generics -> 
-- On KWelseif reduce production actual_generics -> 
-- On KWelse reduce production actual_generics -> 
-- On KWdo reduce production actual_generics -> 
-- On KWdeferred reduce production actual_generics -> 
-- On KWclass reduce production actual_generics -> 
-- On KWcase reduce production actual_generics -> 
-- On KWas reduce production actual_generics -> 
-- On KWand reduce production actual_generics -> 
-- On KWall reduce production actual_generics -> 
-- On GT reduce production actual_generics -> 
-- On GE reduce production actual_generics -> 
-- On EQ reduce production actual_generics -> 
-- On DOT reduce production actual_generics -> 
-- On DIVIDE reduce production actual_generics -> 
-- On DCOLON reduce production actual_generics -> 
-- On DBAR reduce production actual_generics -> 
-- On DARROW reduce production actual_generics -> 
-- On COMMA reduce production actual_generics -> 
-- On COLON reduce production actual_generics -> 
-- On CARET reduce production actual_generics -> 
-- On BAR reduce production actual_generics -> 
-- On ASSIGN reduce production actual_generics -> 
-- On ARROW reduce production actual_generics -> 

State 21:
actual_generics -> LBRACKET . type_list RBRACKET [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE QMARK PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWrequire KWrename KWproof KWor KWnote KWlocal KWin KWimmutable KWghost KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ASSIGN ARROW # ]
-- On UIDENTIFIER shift to state 20
-- On LPAREN shift to state 22
-- On LIDENTIFIER shift to state 2
-- On LBRACKET shift to state 23
-- On type_nt shift to state 49
-- On type_list_min2 shift to state 50
-- On type_list shift to state 51
-- On tuple_type shift to state 24
-- On star_type shift to state 25
-- On simple_type shift to state 26
-- On qmark_type shift to state 27
-- On path shift to state 28
-- On list_type shift to state 31
-- On elem_type shift to state 43
-- On dotted_id_list shift to state 36
-- On arrow_type shift to state 46

State 22:
elem_type -> LPAREN . type_nt RPAREN [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE QMARK PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWrequire KWrename KWproof KWor KWnote KWlocal KWin KWimmutable KWghost KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ASSIGN ARROW # ]
tuple_type -> LPAREN . type_list_min2 RPAREN [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE QMARK PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWrequire KWrename KWproof KWor KWnote KWlocal KWin KWimmutable KWghost KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ASSIGN ARROW # ]
-- On UIDENTIFIER shift to state 20
-- On LPAREN shift to state 22
-- On LIDENTIFIER shift to state 2
-- On LBRACKET shift to state 23
-- On type_nt shift to state 38
-- On type_list_min2 shift to state 47
-- On tuple_type shift to state 24
-- On star_type shift to state 25
-- On simple_type shift to state 26
-- On qmark_type shift to state 27
-- On path shift to state 28
-- On list_type shift to state 31
-- On elem_type shift to state 43
-- On dotted_id_list shift to state 36
-- On arrow_type shift to state 46

State 23:
list_type -> LBRACKET . elem_type RBRACKET [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE QMARK PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWrequire KWrename KWproof KWor KWnote KWlocal KWin KWimmutable KWghost KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ASSIGN ARROW # ]
-- On UIDENTIFIER shift to state 20
-- On LPAREN shift to state 22
-- On LIDENTIFIER shift to state 2
-- On LBRACKET shift to state 23
-- On tuple_type shift to state 24
-- On star_type shift to state 25
-- On simple_type shift to state 26
-- On qmark_type shift to state 27
-- On path shift to state 28
-- On list_type shift to state 31
-- On elem_type shift to state 32
-- On dotted_id_list shift to state 36

State 24:
elem_type -> tuple_type . [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE QMARK PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWrequire KWrename KWproof KWor KWnote KWlocal KWin KWimmutable KWghost KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ASSIGN ARROW # ]
-- On UIDENTIFIER reduce production elem_type -> tuple_type
-- On TIMES reduce production elem_type -> tuple_type
-- On SEMICOL reduce production elem_type -> tuple_type
-- On RPAREN reduce production elem_type -> tuple_type
-- On RBRACKET reduce production elem_type -> tuple_type
-- On RBRACE reduce production elem_type -> tuple_type
-- On QMARK reduce production elem_type -> tuple_type
-- On PLUS reduce production elem_type -> tuple_type
-- On NUMBER reduce production elem_type -> tuple_type
-- On NOTIN reduce production elem_type -> tuple_type
-- On NEWLINE reduce production elem_type -> tuple_type
-- On NEQ reduce production elem_type -> tuple_type
-- On MINUS reduce production elem_type -> tuple_type
-- On LT reduce production elem_type -> tuple_type
-- On LPAREN reduce production elem_type -> tuple_type
-- On LIDENTIFIER reduce production elem_type -> tuple_type
-- On LE reduce production elem_type -> tuple_type
-- On LBRACKET reduce production elem_type -> tuple_type
-- On KWtrue reduce production elem_type -> tuple_type
-- On KWthen reduce production elem_type -> tuple_type
-- On KWrequire reduce production elem_type -> tuple_type
-- On KWrename reduce production elem_type -> tuple_type
-- On KWproof reduce production elem_type -> tuple_type
-- On KWor reduce production elem_type -> tuple_type
-- On KWnote reduce production elem_type -> tuple_type
-- On KWlocal reduce production elem_type -> tuple_type
-- On KWin reduce production elem_type -> tuple_type
-- On KWimmutable reduce production elem_type -> tuple_type
-- On KWghost reduce production elem_type -> tuple_type
-- On KWfalse reduce production elem_type -> tuple_type
-- On KWensure reduce production elem_type -> tuple_type
-- On KWend reduce production elem_type -> tuple_type
-- On KWelseif reduce production elem_type -> tuple_type
-- On KWelse reduce production elem_type -> tuple_type
-- On KWdo reduce production elem_type -> tuple_type
-- On KWdeferred reduce production elem_type -> tuple_type
-- On KWclass reduce production elem_type -> tuple_type
-- On KWcase reduce production elem_type -> tuple_type
-- On KWas reduce production elem_type -> tuple_type
-- On KWand reduce production elem_type -> tuple_type
-- On KWall reduce production elem_type -> tuple_type
-- On GT reduce production elem_type -> tuple_type
-- On GE reduce production elem_type -> tuple_type
-- On EQ reduce production elem_type -> tuple_type
-- On DOT reduce production elem_type -> tuple_type
-- On DIVIDE reduce production elem_type -> tuple_type
-- On DCOLON reduce production elem_type -> tuple_type
-- On DBAR reduce production elem_type -> tuple_type
-- On DARROW reduce production elem_type -> tuple_type
-- On COMMA reduce production elem_type -> tuple_type
-- On COLON reduce production elem_type -> tuple_type
-- On CARET reduce production elem_type -> tuple_type
-- On BAR reduce production elem_type -> tuple_type
-- On ASSIGN reduce production elem_type -> tuple_type
-- On ARROW reduce production elem_type -> tuple_type

State 25:
elem_type -> star_type . [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE QMARK PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWrequire KWrename KWproof KWor KWnote KWlocal KWin KWimmutable KWghost KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ASSIGN ARROW # ]
-- On UIDENTIFIER reduce production elem_type -> star_type
-- On TIMES reduce production elem_type -> star_type
-- On SEMICOL reduce production elem_type -> star_type
-- On RPAREN reduce production elem_type -> star_type
-- On RBRACKET reduce production elem_type -> star_type
-- On RBRACE reduce production elem_type -> star_type
-- On QMARK reduce production elem_type -> star_type
-- On PLUS reduce production elem_type -> star_type
-- On NUMBER reduce production elem_type -> star_type
-- On NOTIN reduce production elem_type -> star_type
-- On NEWLINE reduce production elem_type -> star_type
-- On NEQ reduce production elem_type -> star_type
-- On MINUS reduce production elem_type -> star_type
-- On LT reduce production elem_type -> star_type
-- On LPAREN reduce production elem_type -> star_type
-- On LIDENTIFIER reduce production elem_type -> star_type
-- On LE reduce production elem_type -> star_type
-- On LBRACKET reduce production elem_type -> star_type
-- On KWtrue reduce production elem_type -> star_type
-- On KWthen reduce production elem_type -> star_type
-- On KWrequire reduce production elem_type -> star_type
-- On KWrename reduce production elem_type -> star_type
-- On KWproof reduce production elem_type -> star_type
-- On KWor reduce production elem_type -> star_type
-- On KWnote reduce production elem_type -> star_type
-- On KWlocal reduce production elem_type -> star_type
-- On KWin reduce production elem_type -> star_type
-- On KWimmutable reduce production elem_type -> star_type
-- On KWghost reduce production elem_type -> star_type
-- On KWfalse reduce production elem_type -> star_type
-- On KWensure reduce production elem_type -> star_type
-- On KWend reduce production elem_type -> star_type
-- On KWelseif reduce production elem_type -> star_type
-- On KWelse reduce production elem_type -> star_type
-- On KWdo reduce production elem_type -> star_type
-- On KWdeferred reduce production elem_type -> star_type
-- On KWclass reduce production elem_type -> star_type
-- On KWcase reduce production elem_type -> star_type
-- On KWas reduce production elem_type -> star_type
-- On KWand reduce production elem_type -> star_type
-- On KWall reduce production elem_type -> star_type
-- On GT reduce production elem_type -> star_type
-- On GE reduce production elem_type -> star_type
-- On EQ reduce production elem_type -> star_type
-- On DOT reduce production elem_type -> star_type
-- On DIVIDE reduce production elem_type -> star_type
-- On DCOLON reduce production elem_type -> star_type
-- On DBAR reduce production elem_type -> star_type
-- On DARROW reduce production elem_type -> star_type
-- On COMMA reduce production elem_type -> star_type
-- On COLON reduce production elem_type -> star_type
-- On CARET reduce production elem_type -> star_type
-- On BAR reduce production elem_type -> star_type
-- On ASSIGN reduce production elem_type -> star_type
-- On ARROW reduce production elem_type -> star_type

State 26:
elem_type -> simple_type . [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE QMARK PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWrequire KWrename KWproof KWor KWnote KWlocal KWin KWimmutable KWghost KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ASSIGN ARROW # ]
-- On UIDENTIFIER reduce production elem_type -> simple_type
-- On TIMES reduce production elem_type -> simple_type
-- On SEMICOL reduce production elem_type -> simple_type
-- On RPAREN reduce production elem_type -> simple_type
-- On RBRACKET reduce production elem_type -> simple_type
-- On RBRACE reduce production elem_type -> simple_type
-- On QMARK reduce production elem_type -> simple_type
-- On PLUS reduce production elem_type -> simple_type
-- On NUMBER reduce production elem_type -> simple_type
-- On NOTIN reduce production elem_type -> simple_type
-- On NEWLINE reduce production elem_type -> simple_type
-- On NEQ reduce production elem_type -> simple_type
-- On MINUS reduce production elem_type -> simple_type
-- On LT reduce production elem_type -> simple_type
-- On LPAREN reduce production elem_type -> simple_type
-- On LIDENTIFIER reduce production elem_type -> simple_type
-- On LE reduce production elem_type -> simple_type
-- On LBRACKET reduce production elem_type -> simple_type
-- On KWtrue reduce production elem_type -> simple_type
-- On KWthen reduce production elem_type -> simple_type
-- On KWrequire reduce production elem_type -> simple_type
-- On KWrename reduce production elem_type -> simple_type
-- On KWproof reduce production elem_type -> simple_type
-- On KWor reduce production elem_type -> simple_type
-- On KWnote reduce production elem_type -> simple_type
-- On KWlocal reduce production elem_type -> simple_type
-- On KWin reduce production elem_type -> simple_type
-- On KWimmutable reduce production elem_type -> simple_type
-- On KWghost reduce production elem_type -> simple_type
-- On KWfalse reduce production elem_type -> simple_type
-- On KWensure reduce production elem_type -> simple_type
-- On KWend reduce production elem_type -> simple_type
-- On KWelseif reduce production elem_type -> simple_type
-- On KWelse reduce production elem_type -> simple_type
-- On KWdo reduce production elem_type -> simple_type
-- On KWdeferred reduce production elem_type -> simple_type
-- On KWclass reduce production elem_type -> simple_type
-- On KWcase reduce production elem_type -> simple_type
-- On KWas reduce production elem_type -> simple_type
-- On KWand reduce production elem_type -> simple_type
-- On KWall reduce production elem_type -> simple_type
-- On GT reduce production elem_type -> simple_type
-- On GE reduce production elem_type -> simple_type
-- On EQ reduce production elem_type -> simple_type
-- On DOT reduce production elem_type -> simple_type
-- On DIVIDE reduce production elem_type -> simple_type
-- On DCOLON reduce production elem_type -> simple_type
-- On DBAR reduce production elem_type -> simple_type
-- On DARROW reduce production elem_type -> simple_type
-- On COMMA reduce production elem_type -> simple_type
-- On COLON reduce production elem_type -> simple_type
-- On CARET reduce production elem_type -> simple_type
-- On BAR reduce production elem_type -> simple_type
-- On ASSIGN reduce production elem_type -> simple_type
-- On ARROW reduce production elem_type -> simple_type

State 27:
elem_type -> qmark_type . [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE QMARK PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWrequire KWrename KWproof KWor KWnote KWlocal KWin KWimmutable KWghost KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ASSIGN ARROW # ]
-- On UIDENTIFIER reduce production elem_type -> qmark_type
-- On TIMES reduce production elem_type -> qmark_type
-- On SEMICOL reduce production elem_type -> qmark_type
-- On RPAREN reduce production elem_type -> qmark_type
-- On RBRACKET reduce production elem_type -> qmark_type
-- On RBRACE reduce production elem_type -> qmark_type
-- On QMARK reduce production elem_type -> qmark_type
-- On PLUS reduce production elem_type -> qmark_type
-- On NUMBER reduce production elem_type -> qmark_type
-- On NOTIN reduce production elem_type -> qmark_type
-- On NEWLINE reduce production elem_type -> qmark_type
-- On NEQ reduce production elem_type -> qmark_type
-- On MINUS reduce production elem_type -> qmark_type
-- On LT reduce production elem_type -> qmark_type
-- On LPAREN reduce production elem_type -> qmark_type
-- On LIDENTIFIER reduce production elem_type -> qmark_type
-- On LE reduce production elem_type -> qmark_type
-- On LBRACKET reduce production elem_type -> qmark_type
-- On KWtrue reduce production elem_type -> qmark_type
-- On KWthen reduce production elem_type -> qmark_type
-- On KWrequire reduce production elem_type -> qmark_type
-- On KWrename reduce production elem_type -> qmark_type
-- On KWproof reduce production elem_type -> qmark_type
-- On KWor reduce production elem_type -> qmark_type
-- On KWnote reduce production elem_type -> qmark_type
-- On KWlocal reduce production elem_type -> qmark_type
-- On KWin reduce production elem_type -> qmark_type
-- On KWimmutable reduce production elem_type -> qmark_type
-- On KWghost reduce production elem_type -> qmark_type
-- On KWfalse reduce production elem_type -> qmark_type
-- On KWensure reduce production elem_type -> qmark_type
-- On KWend reduce production elem_type -> qmark_type
-- On KWelseif reduce production elem_type -> qmark_type
-- On KWelse reduce production elem_type -> qmark_type
-- On KWdo reduce production elem_type -> qmark_type
-- On KWdeferred reduce production elem_type -> qmark_type
-- On KWclass reduce production elem_type -> qmark_type
-- On KWcase reduce production elem_type -> qmark_type
-- On KWas reduce production elem_type -> qmark_type
-- On KWand reduce production elem_type -> qmark_type
-- On KWall reduce production elem_type -> qmark_type
-- On GT reduce production elem_type -> qmark_type
-- On GE reduce production elem_type -> qmark_type
-- On EQ reduce production elem_type -> qmark_type
-- On DOT reduce production elem_type -> qmark_type
-- On DIVIDE reduce production elem_type -> qmark_type
-- On DCOLON reduce production elem_type -> qmark_type
-- On DBAR reduce production elem_type -> qmark_type
-- On DARROW reduce production elem_type -> qmark_type
-- On COMMA reduce production elem_type -> qmark_type
-- On COLON reduce production elem_type -> qmark_type
-- On CARET reduce production elem_type -> qmark_type
-- On BAR reduce production elem_type -> qmark_type
-- On ASSIGN reduce production elem_type -> qmark_type
-- On ARROW reduce production elem_type -> qmark_type

State 28:
simple_type -> path . UIDENTIFIER actual_generics [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE QMARK PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWrequire KWrename KWproof KWor KWnote KWlocal KWin KWimmutable KWghost KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ASSIGN ARROW # ]
-- On UIDENTIFIER shift to state 29

State 29:
simple_type -> path UIDENTIFIER . actual_generics [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE QMARK PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWrequire KWrename KWproof KWor KWnote KWlocal KWin KWimmutable KWghost KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ASSIGN ARROW # ]
-- On LBRACKET shift to state 21
-- On actual_generics shift to state 30
-- On UIDENTIFIER reduce production actual_generics -> 
-- On TIMES reduce production actual_generics -> 
-- On SEMICOL reduce production actual_generics -> 
-- On RPAREN reduce production actual_generics -> 
-- On RBRACKET reduce production actual_generics -> 
-- On RBRACE reduce production actual_generics -> 
-- On QMARK reduce production actual_generics -> 
-- On PLUS reduce production actual_generics -> 
-- On NUMBER reduce production actual_generics -> 
-- On NOTIN reduce production actual_generics -> 
-- On NEWLINE reduce production actual_generics -> 
-- On NEQ reduce production actual_generics -> 
-- On MINUS reduce production actual_generics -> 
-- On LT reduce production actual_generics -> 
-- On LPAREN reduce production actual_generics -> 
-- On LIDENTIFIER reduce production actual_generics -> 
-- On LE reduce production actual_generics -> 
-- On KWtrue reduce production actual_generics -> 
-- On KWthen reduce production actual_generics -> 
-- On KWrequire reduce production actual_generics -> 
-- On KWrename reduce production actual_generics -> 
-- On KWproof reduce production actual_generics -> 
-- On KWor reduce production actual_generics -> 
-- On KWnote reduce production actual_generics -> 
-- On KWlocal reduce production actual_generics -> 
-- On KWin reduce production actual_generics -> 
-- On KWimmutable reduce production actual_generics -> 
-- On KWghost reduce production actual_generics -> 
-- On KWfalse reduce production actual_generics -> 
-- On KWensure reduce production actual_generics -> 
-- On KWend reduce production actual_generics -> 
-- On KWelseif reduce production actual_generics -> 
-- On KWelse reduce production actual_generics -> 
-- On KWdo reduce production actual_generics -> 
-- On KWdeferred reduce production actual_generics -> 
-- On KWclass reduce production actual_generics -> 
-- On KWcase reduce production actual_generics -> 
-- On KWas reduce production actual_generics -> 
-- On KWand reduce production actual_generics -> 
-- On KWall reduce production actual_generics -> 
-- On GT reduce production actual_generics -> 
-- On GE reduce production actual_generics -> 
-- On EQ reduce production actual_generics -> 
-- On DOT reduce production actual_generics -> 
-- On DIVIDE reduce production actual_generics -> 
-- On DCOLON reduce production actual_generics -> 
-- On DBAR reduce production actual_generics -> 
-- On DARROW reduce production actual_generics -> 
-- On COMMA reduce production actual_generics -> 
-- On COLON reduce production actual_generics -> 
-- On CARET reduce production actual_generics -> 
-- On BAR reduce production actual_generics -> 
-- On ASSIGN reduce production actual_generics -> 
-- On ARROW reduce production actual_generics -> 

State 30:
simple_type -> path UIDENTIFIER actual_generics . [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE QMARK PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWrequire KWrename KWproof KWor KWnote KWlocal KWin KWimmutable KWghost KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ASSIGN ARROW # ]
-- On UIDENTIFIER reduce production simple_type -> path UIDENTIFIER actual_generics
-- On TIMES reduce production simple_type -> path UIDENTIFIER actual_generics
-- On SEMICOL reduce production simple_type -> path UIDENTIFIER actual_generics
-- On RPAREN reduce production simple_type -> path UIDENTIFIER actual_generics
-- On RBRACKET reduce production simple_type -> path UIDENTIFIER actual_generics
-- On RBRACE reduce production simple_type -> path UIDENTIFIER actual_generics
-- On QMARK reduce production simple_type -> path UIDENTIFIER actual_generics
-- On PLUS reduce production simple_type -> path UIDENTIFIER actual_generics
-- On NUMBER reduce production simple_type -> path UIDENTIFIER actual_generics
-- On NOTIN reduce production simple_type -> path UIDENTIFIER actual_generics
-- On NEWLINE reduce production simple_type -> path UIDENTIFIER actual_generics
-- On NEQ reduce production simple_type -> path UIDENTIFIER actual_generics
-- On MINUS reduce production simple_type -> path UIDENTIFIER actual_generics
-- On LT reduce production simple_type -> path UIDENTIFIER actual_generics
-- On LPAREN reduce production simple_type -> path UIDENTIFIER actual_generics
-- On LIDENTIFIER reduce production simple_type -> path UIDENTIFIER actual_generics
-- On LE reduce production simple_type -> path UIDENTIFIER actual_generics
-- On LBRACKET reduce production simple_type -> path UIDENTIFIER actual_generics
-- On KWtrue reduce production simple_type -> path UIDENTIFIER actual_generics
-- On KWthen reduce production simple_type -> path UIDENTIFIER actual_generics
-- On KWrequire reduce production simple_type -> path UIDENTIFIER actual_generics
-- On KWrename reduce production simple_type -> path UIDENTIFIER actual_generics
-- On KWproof reduce production simple_type -> path UIDENTIFIER actual_generics
-- On KWor reduce production simple_type -> path UIDENTIFIER actual_generics
-- On KWnote reduce production simple_type -> path UIDENTIFIER actual_generics
-- On KWlocal reduce production simple_type -> path UIDENTIFIER actual_generics
-- On KWin reduce production simple_type -> path UIDENTIFIER actual_generics
-- On KWimmutable reduce production simple_type -> path UIDENTIFIER actual_generics
-- On KWghost reduce production simple_type -> path UIDENTIFIER actual_generics
-- On KWfalse reduce production simple_type -> path UIDENTIFIER actual_generics
-- On KWensure reduce production simple_type -> path UIDENTIFIER actual_generics
-- On KWend reduce production simple_type -> path UIDENTIFIER actual_generics
-- On KWelseif reduce production simple_type -> path UIDENTIFIER actual_generics
-- On KWelse reduce production simple_type -> path UIDENTIFIER actual_generics
-- On KWdo reduce production simple_type -> path UIDENTIFIER actual_generics
-- On KWdeferred reduce production simple_type -> path UIDENTIFIER actual_generics
-- On KWclass reduce production simple_type -> path UIDENTIFIER actual_generics
-- On KWcase reduce production simple_type -> path UIDENTIFIER actual_generics
-- On KWas reduce production simple_type -> path UIDENTIFIER actual_generics
-- On KWand reduce production simple_type -> path UIDENTIFIER actual_generics
-- On KWall reduce production simple_type -> path UIDENTIFIER actual_generics
-- On GT reduce production simple_type -> path UIDENTIFIER actual_generics
-- On GE reduce production simple_type -> path UIDENTIFIER actual_generics
-- On EQ reduce production simple_type -> path UIDENTIFIER actual_generics
-- On DOT reduce production simple_type -> path UIDENTIFIER actual_generics
-- On DIVIDE reduce production simple_type -> path UIDENTIFIER actual_generics
-- On DCOLON reduce production simple_type -> path UIDENTIFIER actual_generics
-- On DBAR reduce production simple_type -> path UIDENTIFIER actual_generics
-- On DARROW reduce production simple_type -> path UIDENTIFIER actual_generics
-- On COMMA reduce production simple_type -> path UIDENTIFIER actual_generics
-- On COLON reduce production simple_type -> path UIDENTIFIER actual_generics
-- On CARET reduce production simple_type -> path UIDENTIFIER actual_generics
-- On BAR reduce production simple_type -> path UIDENTIFIER actual_generics
-- On ASSIGN reduce production simple_type -> path UIDENTIFIER actual_generics
-- On ARROW reduce production simple_type -> path UIDENTIFIER actual_generics

State 31:
elem_type -> list_type . [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE QMARK PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWrequire KWrename KWproof KWor KWnote KWlocal KWin KWimmutable KWghost KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ASSIGN ARROW # ]
-- On UIDENTIFIER reduce production elem_type -> list_type
-- On TIMES reduce production elem_type -> list_type
-- On SEMICOL reduce production elem_type -> list_type
-- On RPAREN reduce production elem_type -> list_type
-- On RBRACKET reduce production elem_type -> list_type
-- On RBRACE reduce production elem_type -> list_type
-- On QMARK reduce production elem_type -> list_type
-- On PLUS reduce production elem_type -> list_type
-- On NUMBER reduce production elem_type -> list_type
-- On NOTIN reduce production elem_type -> list_type
-- On NEWLINE reduce production elem_type -> list_type
-- On NEQ reduce production elem_type -> list_type
-- On MINUS reduce production elem_type -> list_type
-- On LT reduce production elem_type -> list_type
-- On LPAREN reduce production elem_type -> list_type
-- On LIDENTIFIER reduce production elem_type -> list_type
-- On LE reduce production elem_type -> list_type
-- On LBRACKET reduce production elem_type -> list_type
-- On KWtrue reduce production elem_type -> list_type
-- On KWthen reduce production elem_type -> list_type
-- On KWrequire reduce production elem_type -> list_type
-- On KWrename reduce production elem_type -> list_type
-- On KWproof reduce production elem_type -> list_type
-- On KWor reduce production elem_type -> list_type
-- On KWnote reduce production elem_type -> list_type
-- On KWlocal reduce production elem_type -> list_type
-- On KWin reduce production elem_type -> list_type
-- On KWimmutable reduce production elem_type -> list_type
-- On KWghost reduce production elem_type -> list_type
-- On KWfalse reduce production elem_type -> list_type
-- On KWensure reduce production elem_type -> list_type
-- On KWend reduce production elem_type -> list_type
-- On KWelseif reduce production elem_type -> list_type
-- On KWelse reduce production elem_type -> list_type
-- On KWdo reduce production elem_type -> list_type
-- On KWdeferred reduce production elem_type -> list_type
-- On KWclass reduce production elem_type -> list_type
-- On KWcase reduce production elem_type -> list_type
-- On KWas reduce production elem_type -> list_type
-- On KWand reduce production elem_type -> list_type
-- On KWall reduce production elem_type -> list_type
-- On GT reduce production elem_type -> list_type
-- On GE reduce production elem_type -> list_type
-- On EQ reduce production elem_type -> list_type
-- On DOT reduce production elem_type -> list_type
-- On DIVIDE reduce production elem_type -> list_type
-- On DCOLON reduce production elem_type -> list_type
-- On DBAR reduce production elem_type -> list_type
-- On DARROW reduce production elem_type -> list_type
-- On COMMA reduce production elem_type -> list_type
-- On COLON reduce production elem_type -> list_type
-- On CARET reduce production elem_type -> list_type
-- On BAR reduce production elem_type -> list_type
-- On ASSIGN reduce production elem_type -> list_type
-- On ARROW reduce production elem_type -> list_type

State 32:
list_type -> LBRACKET elem_type . RBRACKET [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE QMARK PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWrequire KWrename KWproof KWor KWnote KWlocal KWin KWimmutable KWghost KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ASSIGN ARROW # ]
qmark_type -> elem_type . QMARK [ TIMES RBRACKET QMARK ]
star_type -> elem_type . TIMES [ TIMES RBRACKET QMARK ]
-- On TIMES shift to state 33
-- On RBRACKET shift to state 34
-- On QMARK shift to state 35

State 33:
star_type -> elem_type TIMES . [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE QMARK PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWrequire KWrename KWproof KWor KWnote KWlocal KWin KWimmutable KWghost KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ASSIGN ARROW # ]
-- On UIDENTIFIER reduce production star_type -> elem_type TIMES
-- On TIMES reduce production star_type -> elem_type TIMES
-- On SEMICOL reduce production star_type -> elem_type TIMES
-- On RPAREN reduce production star_type -> elem_type TIMES
-- On RBRACKET reduce production star_type -> elem_type TIMES
-- On RBRACE reduce production star_type -> elem_type TIMES
-- On QMARK reduce production star_type -> elem_type TIMES
-- On PLUS reduce production star_type -> elem_type TIMES
-- On NUMBER reduce production star_type -> elem_type TIMES
-- On NOTIN reduce production star_type -> elem_type TIMES
-- On NEWLINE reduce production star_type -> elem_type TIMES
-- On NEQ reduce production star_type -> elem_type TIMES
-- On MINUS reduce production star_type -> elem_type TIMES
-- On LT reduce production star_type -> elem_type TIMES
-- On LPAREN reduce production star_type -> elem_type TIMES
-- On LIDENTIFIER reduce production star_type -> elem_type TIMES
-- On LE reduce production star_type -> elem_type TIMES
-- On LBRACKET reduce production star_type -> elem_type TIMES
-- On KWtrue reduce production star_type -> elem_type TIMES
-- On KWthen reduce production star_type -> elem_type TIMES
-- On KWrequire reduce production star_type -> elem_type TIMES
-- On KWrename reduce production star_type -> elem_type TIMES
-- On KWproof reduce production star_type -> elem_type TIMES
-- On KWor reduce production star_type -> elem_type TIMES
-- On KWnote reduce production star_type -> elem_type TIMES
-- On KWlocal reduce production star_type -> elem_type TIMES
-- On KWin reduce production star_type -> elem_type TIMES
-- On KWimmutable reduce production star_type -> elem_type TIMES
-- On KWghost reduce production star_type -> elem_type TIMES
-- On KWfalse reduce production star_type -> elem_type TIMES
-- On KWensure reduce production star_type -> elem_type TIMES
-- On KWend reduce production star_type -> elem_type TIMES
-- On KWelseif reduce production star_type -> elem_type TIMES
-- On KWelse reduce production star_type -> elem_type TIMES
-- On KWdo reduce production star_type -> elem_type TIMES
-- On KWdeferred reduce production star_type -> elem_type TIMES
-- On KWclass reduce production star_type -> elem_type TIMES
-- On KWcase reduce production star_type -> elem_type TIMES
-- On KWas reduce production star_type -> elem_type TIMES
-- On KWand reduce production star_type -> elem_type TIMES
-- On KWall reduce production star_type -> elem_type TIMES
-- On GT reduce production star_type -> elem_type TIMES
-- On GE reduce production star_type -> elem_type TIMES
-- On EQ reduce production star_type -> elem_type TIMES
-- On DOT reduce production star_type -> elem_type TIMES
-- On DIVIDE reduce production star_type -> elem_type TIMES
-- On DCOLON reduce production star_type -> elem_type TIMES
-- On DBAR reduce production star_type -> elem_type TIMES
-- On DARROW reduce production star_type -> elem_type TIMES
-- On COMMA reduce production star_type -> elem_type TIMES
-- On COLON reduce production star_type -> elem_type TIMES
-- On CARET reduce production star_type -> elem_type TIMES
-- On BAR reduce production star_type -> elem_type TIMES
-- On ASSIGN reduce production star_type -> elem_type TIMES
-- On ARROW reduce production star_type -> elem_type TIMES

State 34:
list_type -> LBRACKET elem_type RBRACKET . [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE QMARK PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWrequire KWrename KWproof KWor KWnote KWlocal KWin KWimmutable KWghost KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ASSIGN ARROW # ]
-- On UIDENTIFIER reduce production list_type -> LBRACKET elem_type RBRACKET
-- On TIMES reduce production list_type -> LBRACKET elem_type RBRACKET
-- On SEMICOL reduce production list_type -> LBRACKET elem_type RBRACKET
-- On RPAREN reduce production list_type -> LBRACKET elem_type RBRACKET
-- On RBRACKET reduce production list_type -> LBRACKET elem_type RBRACKET
-- On RBRACE reduce production list_type -> LBRACKET elem_type RBRACKET
-- On QMARK reduce production list_type -> LBRACKET elem_type RBRACKET
-- On PLUS reduce production list_type -> LBRACKET elem_type RBRACKET
-- On NUMBER reduce production list_type -> LBRACKET elem_type RBRACKET
-- On NOTIN reduce production list_type -> LBRACKET elem_type RBRACKET
-- On NEWLINE reduce production list_type -> LBRACKET elem_type RBRACKET
-- On NEQ reduce production list_type -> LBRACKET elem_type RBRACKET
-- On MINUS reduce production list_type -> LBRACKET elem_type RBRACKET
-- On LT reduce production list_type -> LBRACKET elem_type RBRACKET
-- On LPAREN reduce production list_type -> LBRACKET elem_type RBRACKET
-- On LIDENTIFIER reduce production list_type -> LBRACKET elem_type RBRACKET
-- On LE reduce production list_type -> LBRACKET elem_type RBRACKET
-- On LBRACKET reduce production list_type -> LBRACKET elem_type RBRACKET
-- On KWtrue reduce production list_type -> LBRACKET elem_type RBRACKET
-- On KWthen reduce production list_type -> LBRACKET elem_type RBRACKET
-- On KWrequire reduce production list_type -> LBRACKET elem_type RBRACKET
-- On KWrename reduce production list_type -> LBRACKET elem_type RBRACKET
-- On KWproof reduce production list_type -> LBRACKET elem_type RBRACKET
-- On KWor reduce production list_type -> LBRACKET elem_type RBRACKET
-- On KWnote reduce production list_type -> LBRACKET elem_type RBRACKET
-- On KWlocal reduce production list_type -> LBRACKET elem_type RBRACKET
-- On KWin reduce production list_type -> LBRACKET elem_type RBRACKET
-- On KWimmutable reduce production list_type -> LBRACKET elem_type RBRACKET
-- On KWghost reduce production list_type -> LBRACKET elem_type RBRACKET
-- On KWfalse reduce production list_type -> LBRACKET elem_type RBRACKET
-- On KWensure reduce production list_type -> LBRACKET elem_type RBRACKET
-- On KWend reduce production list_type -> LBRACKET elem_type RBRACKET
-- On KWelseif reduce production list_type -> LBRACKET elem_type RBRACKET
-- On KWelse reduce production list_type -> LBRACKET elem_type RBRACKET
-- On KWdo reduce production list_type -> LBRACKET elem_type RBRACKET
-- On KWdeferred reduce production list_type -> LBRACKET elem_type RBRACKET
-- On KWclass reduce production list_type -> LBRACKET elem_type RBRACKET
-- On KWcase reduce production list_type -> LBRACKET elem_type RBRACKET
-- On KWas reduce production list_type -> LBRACKET elem_type RBRACKET
-- On KWand reduce production list_type -> LBRACKET elem_type RBRACKET
-- On KWall reduce production list_type -> LBRACKET elem_type RBRACKET
-- On GT reduce production list_type -> LBRACKET elem_type RBRACKET
-- On GE reduce production list_type -> LBRACKET elem_type RBRACKET
-- On EQ reduce production list_type -> LBRACKET elem_type RBRACKET
-- On DOT reduce production list_type -> LBRACKET elem_type RBRACKET
-- On DIVIDE reduce production list_type -> LBRACKET elem_type RBRACKET
-- On DCOLON reduce production list_type -> LBRACKET elem_type RBRACKET
-- On DBAR reduce production list_type -> LBRACKET elem_type RBRACKET
-- On DARROW reduce production list_type -> LBRACKET elem_type RBRACKET
-- On COMMA reduce production list_type -> LBRACKET elem_type RBRACKET
-- On COLON reduce production list_type -> LBRACKET elem_type RBRACKET
-- On CARET reduce production list_type -> LBRACKET elem_type RBRACKET
-- On BAR reduce production list_type -> LBRACKET elem_type RBRACKET
-- On ASSIGN reduce production list_type -> LBRACKET elem_type RBRACKET
-- On ARROW reduce production list_type -> LBRACKET elem_type RBRACKET

State 35:
qmark_type -> elem_type QMARK . [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE QMARK PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWrequire KWrename KWproof KWor KWnote KWlocal KWin KWimmutable KWghost KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ASSIGN ARROW # ]
-- On UIDENTIFIER reduce production qmark_type -> elem_type QMARK
-- On TIMES reduce production qmark_type -> elem_type QMARK
-- On SEMICOL reduce production qmark_type -> elem_type QMARK
-- On RPAREN reduce production qmark_type -> elem_type QMARK
-- On RBRACKET reduce production qmark_type -> elem_type QMARK
-- On RBRACE reduce production qmark_type -> elem_type QMARK
-- On QMARK reduce production qmark_type -> elem_type QMARK
-- On PLUS reduce production qmark_type -> elem_type QMARK
-- On NUMBER reduce production qmark_type -> elem_type QMARK
-- On NOTIN reduce production qmark_type -> elem_type QMARK
-- On NEWLINE reduce production qmark_type -> elem_type QMARK
-- On NEQ reduce production qmark_type -> elem_type QMARK
-- On MINUS reduce production qmark_type -> elem_type QMARK
-- On LT reduce production qmark_type -> elem_type QMARK
-- On LPAREN reduce production qmark_type -> elem_type QMARK
-- On LIDENTIFIER reduce production qmark_type -> elem_type QMARK
-- On LE reduce production qmark_type -> elem_type QMARK
-- On LBRACKET reduce production qmark_type -> elem_type QMARK
-- On KWtrue reduce production qmark_type -> elem_type QMARK
-- On KWthen reduce production qmark_type -> elem_type QMARK
-- On KWrequire reduce production qmark_type -> elem_type QMARK
-- On KWrename reduce production qmark_type -> elem_type QMARK
-- On KWproof reduce production qmark_type -> elem_type QMARK
-- On KWor reduce production qmark_type -> elem_type QMARK
-- On KWnote reduce production qmark_type -> elem_type QMARK
-- On KWlocal reduce production qmark_type -> elem_type QMARK
-- On KWin reduce production qmark_type -> elem_type QMARK
-- On KWimmutable reduce production qmark_type -> elem_type QMARK
-- On KWghost reduce production qmark_type -> elem_type QMARK
-- On KWfalse reduce production qmark_type -> elem_type QMARK
-- On KWensure reduce production qmark_type -> elem_type QMARK
-- On KWend reduce production qmark_type -> elem_type QMARK
-- On KWelseif reduce production qmark_type -> elem_type QMARK
-- On KWelse reduce production qmark_type -> elem_type QMARK
-- On KWdo reduce production qmark_type -> elem_type QMARK
-- On KWdeferred reduce production qmark_type -> elem_type QMARK
-- On KWclass reduce production qmark_type -> elem_type QMARK
-- On KWcase reduce production qmark_type -> elem_type QMARK
-- On KWas reduce production qmark_type -> elem_type QMARK
-- On KWand reduce production qmark_type -> elem_type QMARK
-- On KWall reduce production qmark_type -> elem_type QMARK
-- On GT reduce production qmark_type -> elem_type QMARK
-- On GE reduce production qmark_type -> elem_type QMARK
-- On EQ reduce production qmark_type -> elem_type QMARK
-- On DOT reduce production qmark_type -> elem_type QMARK
-- On DIVIDE reduce production qmark_type -> elem_type QMARK
-- On DCOLON reduce production qmark_type -> elem_type QMARK
-- On DBAR reduce production qmark_type -> elem_type QMARK
-- On DARROW reduce production qmark_type -> elem_type QMARK
-- On COMMA reduce production qmark_type -> elem_type QMARK
-- On COLON reduce production qmark_type -> elem_type QMARK
-- On CARET reduce production qmark_type -> elem_type QMARK
-- On BAR reduce production qmark_type -> elem_type QMARK
-- On ASSIGN reduce production qmark_type -> elem_type QMARK
-- On ARROW reduce production qmark_type -> elem_type QMARK

State 36:
dotted_id_list -> dotted_id_list . DOT LIDENTIFIER [ DOT ]
path -> dotted_id_list . DOT [ UIDENTIFIER ]
-- On DOT shift to state 37

State 37:
dotted_id_list -> dotted_id_list DOT . LIDENTIFIER [ DOT ]
path -> dotted_id_list DOT . [ UIDENTIFIER ]
-- On LIDENTIFIER shift to state 10
-- On UIDENTIFIER reduce production path -> dotted_id_list DOT

State 38:
elem_type -> LPAREN type_nt . RPAREN [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE QMARK PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWrequire KWrename KWproof KWor KWnote KWlocal KWin KWimmutable KWghost KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ASSIGN ARROW # ]
type_list_min2 -> type_nt . COMMA type_nt [ RPAREN ]
type_list_min2 -> type_nt . COMMA type_list_min2 [ RPAREN ]
-- On RPAREN shift to state 39
-- On COMMA shift to state 40

State 39:
elem_type -> LPAREN type_nt RPAREN . [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE QMARK PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWrequire KWrename KWproof KWor KWnote KWlocal KWin KWimmutable KWghost KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ASSIGN ARROW # ]
-- On UIDENTIFIER reduce production elem_type -> LPAREN type_nt RPAREN
-- On TIMES reduce production elem_type -> LPAREN type_nt RPAREN
-- On SEMICOL reduce production elem_type -> LPAREN type_nt RPAREN
-- On RPAREN reduce production elem_type -> LPAREN type_nt RPAREN
-- On RBRACKET reduce production elem_type -> LPAREN type_nt RPAREN
-- On RBRACE reduce production elem_type -> LPAREN type_nt RPAREN
-- On QMARK reduce production elem_type -> LPAREN type_nt RPAREN
-- On PLUS reduce production elem_type -> LPAREN type_nt RPAREN
-- On NUMBER reduce production elem_type -> LPAREN type_nt RPAREN
-- On NOTIN reduce production elem_type -> LPAREN type_nt RPAREN
-- On NEWLINE reduce production elem_type -> LPAREN type_nt RPAREN
-- On NEQ reduce production elem_type -> LPAREN type_nt RPAREN
-- On MINUS reduce production elem_type -> LPAREN type_nt RPAREN
-- On LT reduce production elem_type -> LPAREN type_nt RPAREN
-- On LPAREN reduce production elem_type -> LPAREN type_nt RPAREN
-- On LIDENTIFIER reduce production elem_type -> LPAREN type_nt RPAREN
-- On LE reduce production elem_type -> LPAREN type_nt RPAREN
-- On LBRACKET reduce production elem_type -> LPAREN type_nt RPAREN
-- On KWtrue reduce production elem_type -> LPAREN type_nt RPAREN
-- On KWthen reduce production elem_type -> LPAREN type_nt RPAREN
-- On KWrequire reduce production elem_type -> LPAREN type_nt RPAREN
-- On KWrename reduce production elem_type -> LPAREN type_nt RPAREN
-- On KWproof reduce production elem_type -> LPAREN type_nt RPAREN
-- On KWor reduce production elem_type -> LPAREN type_nt RPAREN
-- On KWnote reduce production elem_type -> LPAREN type_nt RPAREN
-- On KWlocal reduce production elem_type -> LPAREN type_nt RPAREN
-- On KWin reduce production elem_type -> LPAREN type_nt RPAREN
-- On KWimmutable reduce production elem_type -> LPAREN type_nt RPAREN
-- On KWghost reduce production elem_type -> LPAREN type_nt RPAREN
-- On KWfalse reduce production elem_type -> LPAREN type_nt RPAREN
-- On KWensure reduce production elem_type -> LPAREN type_nt RPAREN
-- On KWend reduce production elem_type -> LPAREN type_nt RPAREN
-- On KWelseif reduce production elem_type -> LPAREN type_nt RPAREN
-- On KWelse reduce production elem_type -> LPAREN type_nt RPAREN
-- On KWdo reduce production elem_type -> LPAREN type_nt RPAREN
-- On KWdeferred reduce production elem_type -> LPAREN type_nt RPAREN
-- On KWclass reduce production elem_type -> LPAREN type_nt RPAREN
-- On KWcase reduce production elem_type -> LPAREN type_nt RPAREN
-- On KWas reduce production elem_type -> LPAREN type_nt RPAREN
-- On KWand reduce production elem_type -> LPAREN type_nt RPAREN
-- On KWall reduce production elem_type -> LPAREN type_nt RPAREN
-- On GT reduce production elem_type -> LPAREN type_nt RPAREN
-- On GE reduce production elem_type -> LPAREN type_nt RPAREN
-- On EQ reduce production elem_type -> LPAREN type_nt RPAREN
-- On DOT reduce production elem_type -> LPAREN type_nt RPAREN
-- On DIVIDE reduce production elem_type -> LPAREN type_nt RPAREN
-- On DCOLON reduce production elem_type -> LPAREN type_nt RPAREN
-- On DBAR reduce production elem_type -> LPAREN type_nt RPAREN
-- On DARROW reduce production elem_type -> LPAREN type_nt RPAREN
-- On COMMA reduce production elem_type -> LPAREN type_nt RPAREN
-- On COLON reduce production elem_type -> LPAREN type_nt RPAREN
-- On CARET reduce production elem_type -> LPAREN type_nt RPAREN
-- On BAR reduce production elem_type -> LPAREN type_nt RPAREN
-- On ASSIGN reduce production elem_type -> LPAREN type_nt RPAREN
-- On ARROW reduce production elem_type -> LPAREN type_nt RPAREN

State 40:
type_list_min2 -> type_nt COMMA . type_nt [ RPAREN RBRACKET ]
type_list_min2 -> type_nt COMMA . type_list_min2 [ RPAREN RBRACKET ]
-- On UIDENTIFIER shift to state 20
-- On LPAREN shift to state 22
-- On LIDENTIFIER shift to state 2
-- On LBRACKET shift to state 23
-- On type_nt shift to state 41
-- On type_list_min2 shift to state 42
-- On tuple_type shift to state 24
-- On star_type shift to state 25
-- On simple_type shift to state 26
-- On qmark_type shift to state 27
-- On path shift to state 28
-- On list_type shift to state 31
-- On elem_type shift to state 43
-- On dotted_id_list shift to state 36
-- On arrow_type shift to state 46

State 41:
type_list_min2 -> type_nt . COMMA type_nt [ RPAREN RBRACKET ]
type_list_min2 -> type_nt COMMA type_nt . [ RPAREN RBRACKET ]
type_list_min2 -> type_nt . COMMA type_list_min2 [ RPAREN RBRACKET ]
-- On COMMA shift to state 40
-- On RPAREN reduce production type_list_min2 -> type_nt COMMA type_nt
-- On RBRACKET reduce production type_list_min2 -> type_nt COMMA type_nt

State 42:
type_list_min2 -> type_nt COMMA type_list_min2 . [ RPAREN RBRACKET ]
-- On RPAREN reduce production type_list_min2 -> type_nt COMMA type_list_min2
-- On RBRACKET reduce production type_list_min2 -> type_nt COMMA type_list_min2

State 43:
arrow_type -> elem_type . ARROW type_nt [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWrename KWproof KWor KWnote KWlocal KWin KWimmutable KWghost KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ASSIGN # ]
qmark_type -> elem_type . QMARK [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE QMARK PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWrename KWproof KWor KWnote KWlocal KWin KWimmutable KWghost KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ASSIGN ARROW # ]
star_type -> elem_type . TIMES [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE QMARK PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWrename KWproof KWor KWnote KWlocal KWin KWimmutable KWghost KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ASSIGN ARROW # ]
type_nt -> elem_type . [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWrename KWproof KWor KWnote KWlocal KWin KWimmutable KWghost KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ASSIGN # ]
-- On TIMES shift to state 33
-- On QMARK shift to state 35
-- On ARROW shift to state 44
-- On UIDENTIFIER reduce production type_nt -> elem_type
-- On SEMICOL reduce production type_nt -> elem_type
-- On RPAREN reduce production type_nt -> elem_type
-- On RBRACKET reduce production type_nt -> elem_type
-- On RBRACE reduce production type_nt -> elem_type
-- On PLUS reduce production type_nt -> elem_type
-- On NUMBER reduce production type_nt -> elem_type
-- On NOTIN reduce production type_nt -> elem_type
-- On NEWLINE reduce production type_nt -> elem_type
-- On NEQ reduce production type_nt -> elem_type
-- On MINUS reduce production type_nt -> elem_type
-- On LT reduce production type_nt -> elem_type
-- On LPAREN reduce production type_nt -> elem_type
-- On LIDENTIFIER reduce production type_nt -> elem_type
-- On LE reduce production type_nt -> elem_type
-- On LBRACKET reduce production type_nt -> elem_type
-- On KWtrue reduce production type_nt -> elem_type
-- On KWthen reduce production type_nt -> elem_type
-- On KWrename reduce production type_nt -> elem_type
-- On KWproof reduce production type_nt -> elem_type
-- On KWor reduce production type_nt -> elem_type
-- On KWnote reduce production type_nt -> elem_type
-- On KWlocal reduce production type_nt -> elem_type
-- On KWin reduce production type_nt -> elem_type
-- On KWimmutable reduce production type_nt -> elem_type
-- On KWghost reduce production type_nt -> elem_type
-- On KWfalse reduce production type_nt -> elem_type
-- On KWensure reduce production type_nt -> elem_type
-- On KWend reduce production type_nt -> elem_type
-- On KWelseif reduce production type_nt -> elem_type
-- On KWelse reduce production type_nt -> elem_type
-- On KWdo reduce production type_nt -> elem_type
-- On KWdeferred reduce production type_nt -> elem_type
-- On KWclass reduce production type_nt -> elem_type
-- On KWcase reduce production type_nt -> elem_type
-- On KWas reduce production type_nt -> elem_type
-- On KWand reduce production type_nt -> elem_type
-- On KWall reduce production type_nt -> elem_type
-- On GT reduce production type_nt -> elem_type
-- On GE reduce production type_nt -> elem_type
-- On EQ reduce production type_nt -> elem_type
-- On DOT reduce production type_nt -> elem_type
-- On DIVIDE reduce production type_nt -> elem_type
-- On DCOLON reduce production type_nt -> elem_type
-- On DBAR reduce production type_nt -> elem_type
-- On DARROW reduce production type_nt -> elem_type
-- On COMMA reduce production type_nt -> elem_type
-- On COLON reduce production type_nt -> elem_type
-- On CARET reduce production type_nt -> elem_type
-- On BAR reduce production type_nt -> elem_type
-- On ASSIGN reduce production type_nt -> elem_type

State 44:
arrow_type -> elem_type ARROW . type_nt [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWrename KWproof KWor KWnote KWlocal KWin KWimmutable KWghost KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ASSIGN # ]
-- On UIDENTIFIER shift to state 20
-- On LPAREN shift to state 22
-- On LIDENTIFIER shift to state 2
-- On LBRACKET shift to state 23
-- On type_nt shift to state 45
-- On tuple_type shift to state 24
-- On star_type shift to state 25
-- On simple_type shift to state 26
-- On qmark_type shift to state 27
-- On path shift to state 28
-- On list_type shift to state 31
-- On elem_type shift to state 43
-- On dotted_id_list shift to state 36
-- On arrow_type shift to state 46

State 45:
arrow_type -> elem_type ARROW type_nt . [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWrename KWproof KWor KWnote KWlocal KWin KWimmutable KWghost KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ASSIGN # ]
-- On UIDENTIFIER reduce production arrow_type -> elem_type ARROW type_nt
-- On TIMES reduce production arrow_type -> elem_type ARROW type_nt
-- On SEMICOL reduce production arrow_type -> elem_type ARROW type_nt
-- On RPAREN reduce production arrow_type -> elem_type ARROW type_nt
-- On RBRACKET reduce production arrow_type -> elem_type ARROW type_nt
-- On RBRACE reduce production arrow_type -> elem_type ARROW type_nt
-- On PLUS reduce production arrow_type -> elem_type ARROW type_nt
-- On NUMBER reduce production arrow_type -> elem_type ARROW type_nt
-- On NOTIN reduce production arrow_type -> elem_type ARROW type_nt
-- On NEWLINE reduce production arrow_type -> elem_type ARROW type_nt
-- On NEQ reduce production arrow_type -> elem_type ARROW type_nt
-- On MINUS reduce production arrow_type -> elem_type ARROW type_nt
-- On LT reduce production arrow_type -> elem_type ARROW type_nt
-- On LPAREN reduce production arrow_type -> elem_type ARROW type_nt
-- On LIDENTIFIER reduce production arrow_type -> elem_type ARROW type_nt
-- On LE reduce production arrow_type -> elem_type ARROW type_nt
-- On LBRACKET reduce production arrow_type -> elem_type ARROW type_nt
-- On KWtrue reduce production arrow_type -> elem_type ARROW type_nt
-- On KWthen reduce production arrow_type -> elem_type ARROW type_nt
-- On KWrename reduce production arrow_type -> elem_type ARROW type_nt
-- On KWproof reduce production arrow_type -> elem_type ARROW type_nt
-- On KWor reduce production arrow_type -> elem_type ARROW type_nt
-- On KWnote reduce production arrow_type -> elem_type ARROW type_nt
-- On KWlocal reduce production arrow_type -> elem_type ARROW type_nt
-- On KWin reduce production arrow_type -> elem_type ARROW type_nt
-- On KWimmutable reduce production arrow_type -> elem_type ARROW type_nt
-- On KWghost reduce production arrow_type -> elem_type ARROW type_nt
-- On KWfalse reduce production arrow_type -> elem_type ARROW type_nt
-- On KWensure reduce production arrow_type -> elem_type ARROW type_nt
-- On KWend reduce production arrow_type -> elem_type ARROW type_nt
-- On KWelseif reduce production arrow_type -> elem_type ARROW type_nt
-- On KWelse reduce production arrow_type -> elem_type ARROW type_nt
-- On KWdo reduce production arrow_type -> elem_type ARROW type_nt
-- On KWdeferred reduce production arrow_type -> elem_type ARROW type_nt
-- On KWclass reduce production arrow_type -> elem_type ARROW type_nt
-- On KWcase reduce production arrow_type -> elem_type ARROW type_nt
-- On KWas reduce production arrow_type -> elem_type ARROW type_nt
-- On KWand reduce production arrow_type -> elem_type ARROW type_nt
-- On KWall reduce production arrow_type -> elem_type ARROW type_nt
-- On GT reduce production arrow_type -> elem_type ARROW type_nt
-- On GE reduce production arrow_type -> elem_type ARROW type_nt
-- On EQ reduce production arrow_type -> elem_type ARROW type_nt
-- On DOT reduce production arrow_type -> elem_type ARROW type_nt
-- On DIVIDE reduce production arrow_type -> elem_type ARROW type_nt
-- On DCOLON reduce production arrow_type -> elem_type ARROW type_nt
-- On DBAR reduce production arrow_type -> elem_type ARROW type_nt
-- On DARROW reduce production arrow_type -> elem_type ARROW type_nt
-- On COMMA reduce production arrow_type -> elem_type ARROW type_nt
-- On COLON reduce production arrow_type -> elem_type ARROW type_nt
-- On CARET reduce production arrow_type -> elem_type ARROW type_nt
-- On BAR reduce production arrow_type -> elem_type ARROW type_nt
-- On ASSIGN reduce production arrow_type -> elem_type ARROW type_nt

State 46:
type_nt -> arrow_type . [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWrename KWproof KWor KWnote KWlocal KWin KWimmutable KWghost KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ASSIGN # ]
-- On UIDENTIFIER reduce production type_nt -> arrow_type
-- On TIMES reduce production type_nt -> arrow_type
-- On SEMICOL reduce production type_nt -> arrow_type
-- On RPAREN reduce production type_nt -> arrow_type
-- On RBRACKET reduce production type_nt -> arrow_type
-- On RBRACE reduce production type_nt -> arrow_type
-- On PLUS reduce production type_nt -> arrow_type
-- On NUMBER reduce production type_nt -> arrow_type
-- On NOTIN reduce production type_nt -> arrow_type
-- On NEWLINE reduce production type_nt -> arrow_type
-- On NEQ reduce production type_nt -> arrow_type
-- On MINUS reduce production type_nt -> arrow_type
-- On LT reduce production type_nt -> arrow_type
-- On LPAREN reduce production type_nt -> arrow_type
-- On LIDENTIFIER reduce production type_nt -> arrow_type
-- On LE reduce production type_nt -> arrow_type
-- On LBRACKET reduce production type_nt -> arrow_type
-- On KWtrue reduce production type_nt -> arrow_type
-- On KWthen reduce production type_nt -> arrow_type
-- On KWrename reduce production type_nt -> arrow_type
-- On KWproof reduce production type_nt -> arrow_type
-- On KWor reduce production type_nt -> arrow_type
-- On KWnote reduce production type_nt -> arrow_type
-- On KWlocal reduce production type_nt -> arrow_type
-- On KWin reduce production type_nt -> arrow_type
-- On KWimmutable reduce production type_nt -> arrow_type
-- On KWghost reduce production type_nt -> arrow_type
-- On KWfalse reduce production type_nt -> arrow_type
-- On KWensure reduce production type_nt -> arrow_type
-- On KWend reduce production type_nt -> arrow_type
-- On KWelseif reduce production type_nt -> arrow_type
-- On KWelse reduce production type_nt -> arrow_type
-- On KWdo reduce production type_nt -> arrow_type
-- On KWdeferred reduce production type_nt -> arrow_type
-- On KWclass reduce production type_nt -> arrow_type
-- On KWcase reduce production type_nt -> arrow_type
-- On KWas reduce production type_nt -> arrow_type
-- On KWand reduce production type_nt -> arrow_type
-- On KWall reduce production type_nt -> arrow_type
-- On GT reduce production type_nt -> arrow_type
-- On GE reduce production type_nt -> arrow_type
-- On EQ reduce production type_nt -> arrow_type
-- On DOT reduce production type_nt -> arrow_type
-- On DIVIDE reduce production type_nt -> arrow_type
-- On DCOLON reduce production type_nt -> arrow_type
-- On DBAR reduce production type_nt -> arrow_type
-- On DARROW reduce production type_nt -> arrow_type
-- On COMMA reduce production type_nt -> arrow_type
-- On COLON reduce production type_nt -> arrow_type
-- On CARET reduce production type_nt -> arrow_type
-- On BAR reduce production type_nt -> arrow_type
-- On ASSIGN reduce production type_nt -> arrow_type

State 47:
tuple_type -> LPAREN type_list_min2 . RPAREN [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE QMARK PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWrequire KWrename KWproof KWor KWnote KWlocal KWin KWimmutable KWghost KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ASSIGN ARROW # ]
-- On RPAREN shift to state 48

State 48:
tuple_type -> LPAREN type_list_min2 RPAREN . [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE QMARK PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWrequire KWrename KWproof KWor KWnote KWlocal KWin KWimmutable KWghost KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ASSIGN ARROW # ]
-- On UIDENTIFIER reduce production tuple_type -> LPAREN type_list_min2 RPAREN
-- On TIMES reduce production tuple_type -> LPAREN type_list_min2 RPAREN
-- On SEMICOL reduce production tuple_type -> LPAREN type_list_min2 RPAREN
-- On RPAREN reduce production tuple_type -> LPAREN type_list_min2 RPAREN
-- On RBRACKET reduce production tuple_type -> LPAREN type_list_min2 RPAREN
-- On RBRACE reduce production tuple_type -> LPAREN type_list_min2 RPAREN
-- On QMARK reduce production tuple_type -> LPAREN type_list_min2 RPAREN
-- On PLUS reduce production tuple_type -> LPAREN type_list_min2 RPAREN
-- On NUMBER reduce production tuple_type -> LPAREN type_list_min2 RPAREN
-- On NOTIN reduce production tuple_type -> LPAREN type_list_min2 RPAREN
-- On NEWLINE reduce production tuple_type -> LPAREN type_list_min2 RPAREN
-- On NEQ reduce production tuple_type -> LPAREN type_list_min2 RPAREN
-- On MINUS reduce production tuple_type -> LPAREN type_list_min2 RPAREN
-- On LT reduce production tuple_type -> LPAREN type_list_min2 RPAREN
-- On LPAREN reduce production tuple_type -> LPAREN type_list_min2 RPAREN
-- On LIDENTIFIER reduce production tuple_type -> LPAREN type_list_min2 RPAREN
-- On LE reduce production tuple_type -> LPAREN type_list_min2 RPAREN
-- On LBRACKET reduce production tuple_type -> LPAREN type_list_min2 RPAREN
-- On KWtrue reduce production tuple_type -> LPAREN type_list_min2 RPAREN
-- On KWthen reduce production tuple_type -> LPAREN type_list_min2 RPAREN
-- On KWrequire reduce production tuple_type -> LPAREN type_list_min2 RPAREN
-- On KWrename reduce production tuple_type -> LPAREN type_list_min2 RPAREN
-- On KWproof reduce production tuple_type -> LPAREN type_list_min2 RPAREN
-- On KWor reduce production tuple_type -> LPAREN type_list_min2 RPAREN
-- On KWnote reduce production tuple_type -> LPAREN type_list_min2 RPAREN
-- On KWlocal reduce production tuple_type -> LPAREN type_list_min2 RPAREN
-- On KWin reduce production tuple_type -> LPAREN type_list_min2 RPAREN
-- On KWimmutable reduce production tuple_type -> LPAREN type_list_min2 RPAREN
-- On KWghost reduce production tuple_type -> LPAREN type_list_min2 RPAREN
-- On KWfalse reduce production tuple_type -> LPAREN type_list_min2 RPAREN
-- On KWensure reduce production tuple_type -> LPAREN type_list_min2 RPAREN
-- On KWend reduce production tuple_type -> LPAREN type_list_min2 RPAREN
-- On KWelseif reduce production tuple_type -> LPAREN type_list_min2 RPAREN
-- On KWelse reduce production tuple_type -> LPAREN type_list_min2 RPAREN
-- On KWdo reduce production tuple_type -> LPAREN type_list_min2 RPAREN
-- On KWdeferred reduce production tuple_type -> LPAREN type_list_min2 RPAREN
-- On KWclass reduce production tuple_type -> LPAREN type_list_min2 RPAREN
-- On KWcase reduce production tuple_type -> LPAREN type_list_min2 RPAREN
-- On KWas reduce production tuple_type -> LPAREN type_list_min2 RPAREN
-- On KWand reduce production tuple_type -> LPAREN type_list_min2 RPAREN
-- On KWall reduce production tuple_type -> LPAREN type_list_min2 RPAREN
-- On GT reduce production tuple_type -> LPAREN type_list_min2 RPAREN
-- On GE reduce production tuple_type -> LPAREN type_list_min2 RPAREN
-- On EQ reduce production tuple_type -> LPAREN type_list_min2 RPAREN
-- On DOT reduce production tuple_type -> LPAREN type_list_min2 RPAREN
-- On DIVIDE reduce production tuple_type -> LPAREN type_list_min2 RPAREN
-- On DCOLON reduce production tuple_type -> LPAREN type_list_min2 RPAREN
-- On DBAR reduce production tuple_type -> LPAREN type_list_min2 RPAREN
-- On DARROW reduce production tuple_type -> LPAREN type_list_min2 RPAREN
-- On COMMA reduce production tuple_type -> LPAREN type_list_min2 RPAREN
-- On COLON reduce production tuple_type -> LPAREN type_list_min2 RPAREN
-- On CARET reduce production tuple_type -> LPAREN type_list_min2 RPAREN
-- On BAR reduce production tuple_type -> LPAREN type_list_min2 RPAREN
-- On ASSIGN reduce production tuple_type -> LPAREN type_list_min2 RPAREN
-- On ARROW reduce production tuple_type -> LPAREN type_list_min2 RPAREN

State 49:
type_list -> type_nt . [ RPAREN RBRACKET ]
type_list_min2 -> type_nt . COMMA type_nt [ RPAREN RBRACKET ]
type_list_min2 -> type_nt . COMMA type_list_min2 [ RPAREN RBRACKET ]
-- On COMMA shift to state 40
-- On RPAREN reduce production type_list -> type_nt
-- On RBRACKET reduce production type_list -> type_nt

State 50:
type_list -> type_list_min2 . [ RPAREN RBRACKET ]
-- On RPAREN reduce production type_list -> type_list_min2
-- On RBRACKET reduce production type_list -> type_list_min2

State 51:
actual_generics -> LBRACKET type_list . RBRACKET [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE QMARK PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWrequire KWrename KWproof KWor KWnote KWlocal KWin KWimmutable KWghost KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ASSIGN ARROW # ]
-- On RBRACKET shift to state 52

State 52:
actual_generics -> LBRACKET type_list RBRACKET . [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE QMARK PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWrequire KWrename KWproof KWor KWnote KWlocal KWin KWimmutable KWghost KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ASSIGN ARROW # ]
-- On UIDENTIFIER reduce production actual_generics -> LBRACKET type_list RBRACKET
-- On TIMES reduce production actual_generics -> LBRACKET type_list RBRACKET
-- On SEMICOL reduce production actual_generics -> LBRACKET type_list RBRACKET
-- On RPAREN reduce production actual_generics -> LBRACKET type_list RBRACKET
-- On RBRACKET reduce production actual_generics -> LBRACKET type_list RBRACKET
-- On RBRACE reduce production actual_generics -> LBRACKET type_list RBRACKET
-- On QMARK reduce production actual_generics -> LBRACKET type_list RBRACKET
-- On PLUS reduce production actual_generics -> LBRACKET type_list RBRACKET
-- On NUMBER reduce production actual_generics -> LBRACKET type_list RBRACKET
-- On NOTIN reduce production actual_generics -> LBRACKET type_list RBRACKET
-- On NEWLINE reduce production actual_generics -> LBRACKET type_list RBRACKET
-- On NEQ reduce production actual_generics -> LBRACKET type_list RBRACKET
-- On MINUS reduce production actual_generics -> LBRACKET type_list RBRACKET
-- On LT reduce production actual_generics -> LBRACKET type_list RBRACKET
-- On LPAREN reduce production actual_generics -> LBRACKET type_list RBRACKET
-- On LIDENTIFIER reduce production actual_generics -> LBRACKET type_list RBRACKET
-- On LE reduce production actual_generics -> LBRACKET type_list RBRACKET
-- On LBRACKET reduce production actual_generics -> LBRACKET type_list RBRACKET
-- On KWtrue reduce production actual_generics -> LBRACKET type_list RBRACKET
-- On KWthen reduce production actual_generics -> LBRACKET type_list RBRACKET
-- On KWrequire reduce production actual_generics -> LBRACKET type_list RBRACKET
-- On KWrename reduce production actual_generics -> LBRACKET type_list RBRACKET
-- On KWproof reduce production actual_generics -> LBRACKET type_list RBRACKET
-- On KWor reduce production actual_generics -> LBRACKET type_list RBRACKET
-- On KWnote reduce production actual_generics -> LBRACKET type_list RBRACKET
-- On KWlocal reduce production actual_generics -> LBRACKET type_list RBRACKET
-- On KWin reduce production actual_generics -> LBRACKET type_list RBRACKET
-- On KWimmutable reduce production actual_generics -> LBRACKET type_list RBRACKET
-- On KWghost reduce production actual_generics -> LBRACKET type_list RBRACKET
-- On KWfalse reduce production actual_generics -> LBRACKET type_list RBRACKET
-- On KWensure reduce production actual_generics -> LBRACKET type_list RBRACKET
-- On KWend reduce production actual_generics -> LBRACKET type_list RBRACKET
-- On KWelseif reduce production actual_generics -> LBRACKET type_list RBRACKET
-- On KWelse reduce production actual_generics -> LBRACKET type_list RBRACKET
-- On KWdo reduce production actual_generics -> LBRACKET type_list RBRACKET
-- On KWdeferred reduce production actual_generics -> LBRACKET type_list RBRACKET
-- On KWclass reduce production actual_generics -> LBRACKET type_list RBRACKET
-- On KWcase reduce production actual_generics -> LBRACKET type_list RBRACKET
-- On KWas reduce production actual_generics -> LBRACKET type_list RBRACKET
-- On KWand reduce production actual_generics -> LBRACKET type_list RBRACKET
-- On KWall reduce production actual_generics -> LBRACKET type_list RBRACKET
-- On GT reduce production actual_generics -> LBRACKET type_list RBRACKET
-- On GE reduce production actual_generics -> LBRACKET type_list RBRACKET
-- On EQ reduce production actual_generics -> LBRACKET type_list RBRACKET
-- On DOT reduce production actual_generics -> LBRACKET type_list RBRACKET
-- On DIVIDE reduce production actual_generics -> LBRACKET type_list RBRACKET
-- On DCOLON reduce production actual_generics -> LBRACKET type_list RBRACKET
-- On DBAR reduce production actual_generics -> LBRACKET type_list RBRACKET
-- On DARROW reduce production actual_generics -> LBRACKET type_list RBRACKET
-- On COMMA reduce production actual_generics -> LBRACKET type_list RBRACKET
-- On COLON reduce production actual_generics -> LBRACKET type_list RBRACKET
-- On CARET reduce production actual_generics -> LBRACKET type_list RBRACKET
-- On BAR reduce production actual_generics -> LBRACKET type_list RBRACKET
-- On ASSIGN reduce production actual_generics -> LBRACKET type_list RBRACKET
-- On ARROW reduce production actual_generics -> LBRACKET type_list RBRACKET

State 53:
simple_type -> UIDENTIFIER actual_generics . [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE QMARK PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWrequire KWrename KWproof KWor KWnote KWlocal KWin KWimmutable KWghost KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ASSIGN ARROW # ]
-- On UIDENTIFIER reduce production simple_type -> UIDENTIFIER actual_generics
-- On TIMES reduce production simple_type -> UIDENTIFIER actual_generics
-- On SEMICOL reduce production simple_type -> UIDENTIFIER actual_generics
-- On RPAREN reduce production simple_type -> UIDENTIFIER actual_generics
-- On RBRACKET reduce production simple_type -> UIDENTIFIER actual_generics
-- On RBRACE reduce production simple_type -> UIDENTIFIER actual_generics
-- On QMARK reduce production simple_type -> UIDENTIFIER actual_generics
-- On PLUS reduce production simple_type -> UIDENTIFIER actual_generics
-- On NUMBER reduce production simple_type -> UIDENTIFIER actual_generics
-- On NOTIN reduce production simple_type -> UIDENTIFIER actual_generics
-- On NEWLINE reduce production simple_type -> UIDENTIFIER actual_generics
-- On NEQ reduce production simple_type -> UIDENTIFIER actual_generics
-- On MINUS reduce production simple_type -> UIDENTIFIER actual_generics
-- On LT reduce production simple_type -> UIDENTIFIER actual_generics
-- On LPAREN reduce production simple_type -> UIDENTIFIER actual_generics
-- On LIDENTIFIER reduce production simple_type -> UIDENTIFIER actual_generics
-- On LE reduce production simple_type -> UIDENTIFIER actual_generics
-- On LBRACKET reduce production simple_type -> UIDENTIFIER actual_generics
-- On KWtrue reduce production simple_type -> UIDENTIFIER actual_generics
-- On KWthen reduce production simple_type -> UIDENTIFIER actual_generics
-- On KWrequire reduce production simple_type -> UIDENTIFIER actual_generics
-- On KWrename reduce production simple_type -> UIDENTIFIER actual_generics
-- On KWproof reduce production simple_type -> UIDENTIFIER actual_generics
-- On KWor reduce production simple_type -> UIDENTIFIER actual_generics
-- On KWnote reduce production simple_type -> UIDENTIFIER actual_generics
-- On KWlocal reduce production simple_type -> UIDENTIFIER actual_generics
-- On KWin reduce production simple_type -> UIDENTIFIER actual_generics
-- On KWimmutable reduce production simple_type -> UIDENTIFIER actual_generics
-- On KWghost reduce production simple_type -> UIDENTIFIER actual_generics
-- On KWfalse reduce production simple_type -> UIDENTIFIER actual_generics
-- On KWensure reduce production simple_type -> UIDENTIFIER actual_generics
-- On KWend reduce production simple_type -> UIDENTIFIER actual_generics
-- On KWelseif reduce production simple_type -> UIDENTIFIER actual_generics
-- On KWelse reduce production simple_type -> UIDENTIFIER actual_generics
-- On KWdo reduce production simple_type -> UIDENTIFIER actual_generics
-- On KWdeferred reduce production simple_type -> UIDENTIFIER actual_generics
-- On KWclass reduce production simple_type -> UIDENTIFIER actual_generics
-- On KWcase reduce production simple_type -> UIDENTIFIER actual_generics
-- On KWas reduce production simple_type -> UIDENTIFIER actual_generics
-- On KWand reduce production simple_type -> UIDENTIFIER actual_generics
-- On KWall reduce production simple_type -> UIDENTIFIER actual_generics
-- On GT reduce production simple_type -> UIDENTIFIER actual_generics
-- On GE reduce production simple_type -> UIDENTIFIER actual_generics
-- On EQ reduce production simple_type -> UIDENTIFIER actual_generics
-- On DOT reduce production simple_type -> UIDENTIFIER actual_generics
-- On DIVIDE reduce production simple_type -> UIDENTIFIER actual_generics
-- On DCOLON reduce production simple_type -> UIDENTIFIER actual_generics
-- On DBAR reduce production simple_type -> UIDENTIFIER actual_generics
-- On DARROW reduce production simple_type -> UIDENTIFIER actual_generics
-- On COMMA reduce production simple_type -> UIDENTIFIER actual_generics
-- On COLON reduce production simple_type -> UIDENTIFIER actual_generics
-- On CARET reduce production simple_type -> UIDENTIFIER actual_generics
-- On BAR reduce production simple_type -> UIDENTIFIER actual_generics
-- On ASSIGN reduce production simple_type -> UIDENTIFIER actual_generics
-- On ARROW reduce production simple_type -> UIDENTIFIER actual_generics

State 54:
formal_generic -> UIDENTIFIER COLON type_nt . [ UIDENTIFIER SEMICOL NUMBER LPAREN LIDENTIFIER KWtrue KWimmutable KWfalse KWdeferred KWclass KWcase KWall # ]
-- On UIDENTIFIER reduce production formal_generic -> UIDENTIFIER COLON type_nt
-- On SEMICOL reduce production formal_generic -> UIDENTIFIER COLON type_nt
-- On NUMBER reduce production formal_generic -> UIDENTIFIER COLON type_nt
-- On LPAREN reduce production formal_generic -> UIDENTIFIER COLON type_nt
-- On LIDENTIFIER reduce production formal_generic -> UIDENTIFIER COLON type_nt
-- On KWtrue reduce production formal_generic -> UIDENTIFIER COLON type_nt
-- On KWimmutable reduce production formal_generic -> UIDENTIFIER COLON type_nt
-- On KWfalse reduce production formal_generic -> UIDENTIFIER COLON type_nt
-- On KWdeferred reduce production formal_generic -> UIDENTIFIER COLON type_nt
-- On KWclass reduce production formal_generic -> UIDENTIFIER COLON type_nt
-- On KWcase reduce production formal_generic -> UIDENTIFIER COLON type_nt
-- On KWall reduce production formal_generic -> UIDENTIFIER COLON type_nt

State 55:
featopconst -> NUMBER . [ SEMICOL NUMBER NEWLINE LPAREN LIDENTIFIER KWtrue KWinherit KWfalse KWend KWas EXCLAM COLON ]
-- On SEMICOL reduce production featopconst -> NUMBER
-- On NUMBER reduce production featopconst -> NUMBER
-- On NEWLINE reduce production featopconst -> NUMBER
-- On LPAREN reduce production featopconst -> NUMBER
-- On LIDENTIFIER reduce production featopconst -> NUMBER
-- On KWtrue reduce production featopconst -> NUMBER
-- On KWinherit reduce production featopconst -> NUMBER
-- On KWfalse reduce production featopconst -> NUMBER
-- On KWend reduce production featopconst -> NUMBER
-- On KWas reduce production featopconst -> NUMBER
-- On EXCLAM reduce production featopconst -> NUMBER
-- On COLON reduce production featopconst -> NUMBER

State 56:
featopconst -> LPAREN . operator RPAREN [ SEMICOL NUMBER NEWLINE LPAREN LIDENTIFIER KWtrue KWinherit KWfalse KWend KWas EXCLAM COLON ]
-- On TIMES shift to state 57
-- On ROPERATOR shift to state 58
-- On PLUS shift to state 59
-- On PARENOP shift to state 60
-- On OPERATOR shift to state 61
-- On NOTIN shift to state 62
-- On NEQV shift to state 63
-- On NEQ shift to state 64
-- On MINUS shift to state 65
-- On LT shift to state 66
-- On LE shift to state 67
-- On KWor shift to state 68
-- On KWnot shift to state 69
-- On KWin shift to state 70
-- On KWand shift to state 71
-- On GT shift to state 72
-- On GE shift to state 73
-- On EQV shift to state 74
-- On EQ shift to state 75
-- On DIVIDE shift to state 76
-- On DCOLON shift to state 77
-- On DBAR shift to state 78
-- On DARROW shift to state 79
-- On CARET shift to state 80
-- On BRACKETOP shift to state 81
-- On BAR shift to state 82
-- On operator shift to state 83

State 57:
operator -> TIMES . [ RPAREN ]
-- On RPAREN reduce production operator -> TIMES

State 58:
operator -> ROPERATOR . [ RPAREN ]
-- On RPAREN reduce production operator -> ROPERATOR

State 59:
operator -> PLUS . [ RPAREN ]
-- On RPAREN reduce production operator -> PLUS

State 60:
operator -> PARENOP . [ RPAREN ]
-- On RPAREN reduce production operator -> PARENOP

State 61:
operator -> OPERATOR . [ RPAREN ]
-- On RPAREN reduce production operator -> OPERATOR

State 62:
operator -> NOTIN . [ RPAREN ]
-- On RPAREN reduce production operator -> NOTIN

State 63:
operator -> NEQV . [ RPAREN ]
-- On RPAREN reduce production operator -> NEQV

State 64:
operator -> NEQ . [ RPAREN ]
-- On RPAREN reduce production operator -> NEQ

State 65:
operator -> MINUS . [ RPAREN ]
-- On RPAREN reduce production operator -> MINUS

State 66:
operator -> LT . [ RPAREN ]
-- On RPAREN reduce production operator -> LT

State 67:
operator -> LE . [ RPAREN ]
-- On RPAREN reduce production operator -> LE

State 68:
operator -> KWor . [ RPAREN ]
-- On RPAREN reduce production operator -> KWor

State 69:
operator -> KWnot . [ RPAREN ]
-- On RPAREN reduce production operator -> KWnot

State 70:
operator -> KWin . [ RPAREN ]
-- On RPAREN reduce production operator -> KWin

State 71:
operator -> KWand . [ RPAREN ]
-- On RPAREN reduce production operator -> KWand

State 72:
operator -> GT . [ RPAREN ]
-- On RPAREN reduce production operator -> GT

State 73:
operator -> GE . [ RPAREN ]
-- On RPAREN reduce production operator -> GE

State 74:
operator -> EQV . [ RPAREN ]
-- On RPAREN reduce production operator -> EQV

State 75:
operator -> EQ . [ RPAREN ]
-- On RPAREN reduce production operator -> EQ

State 76:
operator -> DIVIDE . [ RPAREN ]
-- On RPAREN reduce production operator -> DIVIDE

State 77:
operator -> DCOLON . [ RPAREN ]
-- On RPAREN reduce production operator -> DCOLON

State 78:
operator -> DBAR . [ RPAREN ]
-- On RPAREN reduce production operator -> DBAR

State 79:
operator -> DARROW . [ RPAREN ]
-- On RPAREN reduce production operator -> DARROW

State 80:
operator -> CARET . [ RPAREN ]
-- On RPAREN reduce production operator -> CARET

State 81:
operator -> BRACKETOP . [ RPAREN ]
-- On RPAREN reduce production operator -> BRACKETOP

State 82:
operator -> BAR . [ RPAREN ]
-- On RPAREN reduce production operator -> BAR

State 83:
featopconst -> LPAREN operator . RPAREN [ SEMICOL NUMBER NEWLINE LPAREN LIDENTIFIER KWtrue KWinherit KWfalse KWend KWas EXCLAM COLON ]
-- On RPAREN shift to state 84

State 84:
featopconst -> LPAREN operator RPAREN . [ SEMICOL NUMBER NEWLINE LPAREN LIDENTIFIER KWtrue KWinherit KWfalse KWend KWas EXCLAM COLON ]
-- On SEMICOL reduce production featopconst -> LPAREN operator RPAREN
-- On NUMBER reduce production featopconst -> LPAREN operator RPAREN
-- On NEWLINE reduce production featopconst -> LPAREN operator RPAREN
-- On LPAREN reduce production featopconst -> LPAREN operator RPAREN
-- On LIDENTIFIER reduce production featopconst -> LPAREN operator RPAREN
-- On KWtrue reduce production featopconst -> LPAREN operator RPAREN
-- On KWinherit reduce production featopconst -> LPAREN operator RPAREN
-- On KWfalse reduce production featopconst -> LPAREN operator RPAREN
-- On KWend reduce production featopconst -> LPAREN operator RPAREN
-- On KWas reduce production featopconst -> LPAREN operator RPAREN
-- On EXCLAM reduce production featopconst -> LPAREN operator RPAREN
-- On COLON reduce production featopconst -> LPAREN operator RPAREN

State 85:
nameopconst -> LIDENTIFIER . [ SEMICOL NUMBER NEWLINE LPAREN LIDENTIFIER KWtrue KWinherit KWfalse KWend KWas EXCLAM COLON ]
-- On SEMICOL reduce production nameopconst -> LIDENTIFIER
-- On NUMBER reduce production nameopconst -> LIDENTIFIER
-- On NEWLINE reduce production nameopconst -> LIDENTIFIER
-- On LPAREN reduce production nameopconst -> LIDENTIFIER
-- On LIDENTIFIER reduce production nameopconst -> LIDENTIFIER
-- On KWtrue reduce production nameopconst -> LIDENTIFIER
-- On KWinherit reduce production nameopconst -> LIDENTIFIER
-- On KWfalse reduce production nameopconst -> LIDENTIFIER
-- On KWend reduce production nameopconst -> LIDENTIFIER
-- On KWas reduce production nameopconst -> LIDENTIFIER
-- On EXCLAM reduce production nameopconst -> LIDENTIFIER
-- On COLON reduce production nameopconst -> LIDENTIFIER

State 86:
featopconst -> KWtrue . [ SEMICOL NUMBER NEWLINE LPAREN LIDENTIFIER KWtrue KWinherit KWfalse KWend KWas EXCLAM COLON ]
-- On SEMICOL reduce production featopconst -> KWtrue
-- On NUMBER reduce production featopconst -> KWtrue
-- On NEWLINE reduce production featopconst -> KWtrue
-- On LPAREN reduce production featopconst -> KWtrue
-- On LIDENTIFIER reduce production featopconst -> KWtrue
-- On KWtrue reduce production featopconst -> KWtrue
-- On KWinherit reduce production featopconst -> KWtrue
-- On KWfalse reduce production featopconst -> KWtrue
-- On KWend reduce production featopconst -> KWtrue
-- On KWas reduce production featopconst -> KWtrue
-- On EXCLAM reduce production featopconst -> KWtrue
-- On COLON reduce production featopconst -> KWtrue

State 87:
header_mark -> KWimmutable . [ KWclass ]
-- On KWclass reduce production header_mark -> KWimmutable

State 88:
featopconst -> KWfalse . [ SEMICOL NUMBER NEWLINE LPAREN LIDENTIFIER KWtrue KWinherit KWfalse KWend KWas EXCLAM COLON ]
-- On SEMICOL reduce production featopconst -> KWfalse
-- On NUMBER reduce production featopconst -> KWfalse
-- On NEWLINE reduce production featopconst -> KWfalse
-- On LPAREN reduce production featopconst -> KWfalse
-- On LIDENTIFIER reduce production featopconst -> KWfalse
-- On KWtrue reduce production featopconst -> KWfalse
-- On KWinherit reduce production featopconst -> KWfalse
-- On KWfalse reduce production featopconst -> KWfalse
-- On KWend reduce production featopconst -> KWfalse
-- On KWas reduce production featopconst -> KWfalse
-- On EXCLAM reduce production featopconst -> KWfalse
-- On COLON reduce production featopconst -> KWfalse

State 89:
header_mark -> KWdeferred . [ KWclass ]
-- On KWclass reduce production header_mark -> KWdeferred

State 90:
header_mark -> KWcase . [ KWclass ]
-- On KWclass reduce production header_mark -> KWcase

State 91:
proof_all_expr -> KWall . formal_arguments_opt opt_nl ass_req_opt ass_imp ass_ens KWend [ UIDENTIFIER SEMICOL NUMBER LPAREN LIDENTIFIER KWtrue KWimmutable KWfalse KWdeferred KWclass KWcase KWall # ]
-- On LPAREN shift to state 92
-- On formal_arguments_opt shift to state 104
-- On formal_arguments shift to state 315
-- On SEMICOL reduce production formal_arguments_opt -> 
-- On NEWLINE reduce production formal_arguments_opt -> 
-- On KWrequire reduce production formal_arguments_opt -> 
-- On KWproof reduce production formal_arguments_opt -> 
-- On KWnote reduce production formal_arguments_opt -> 
-- On KWensure reduce production formal_arguments_opt -> 
-- On KWdeferred reduce production formal_arguments_opt -> 

State 92:
formal_arguments -> LPAREN . entity_list RPAREN [ USCORE UIDENTIFIER TIMES SEMICOL PLUS NUMBER NEWLINE MINUS LPAREN LIDENTIFIER LBRACKET LBRACE KWtrue KWsome KWrequire KWproof KWold KWnote KWnot KWlocal KWinspect KWinherit KWimmutable KWif KWfalse KWensure KWend KWdo KWdeferred KWclass KWcase KWall KWagent KWResult EXCLAM COLON ARROW # ]
-- On LIDENTIFIER shift to state 93
-- On identifier_list shift to state 96
-- On entity_list shift to state 99
-- On entity_group shift to state 101

State 93:
identifier_list -> LIDENTIFIER . [ SEMICOL RPAREN KWproof KWdo COMMA COLON ASSIGN ]
identifier_list -> LIDENTIFIER . COMMA identifier_list [ SEMICOL RPAREN KWproof KWdo COMMA COLON ASSIGN ]
-- On COMMA shift to state 94
-- On SEMICOL reduce production identifier_list -> LIDENTIFIER
-- On RPAREN reduce production identifier_list -> LIDENTIFIER
-- On KWproof reduce production identifier_list -> LIDENTIFIER
-- On KWdo reduce production identifier_list -> LIDENTIFIER
-- On COLON reduce production identifier_list -> LIDENTIFIER
-- On ASSIGN reduce production identifier_list -> LIDENTIFIER

State 94:
identifier_list -> LIDENTIFIER COMMA . identifier_list [ SEMICOL RPAREN KWproof KWdo COMMA COLON ASSIGN ]
-- On LIDENTIFIER shift to state 93
-- On identifier_list shift to state 95

State 95:
identifier_list -> LIDENTIFIER COMMA identifier_list . [ SEMICOL RPAREN KWproof KWdo COMMA COLON ASSIGN ]
-- On SEMICOL reduce production identifier_list -> LIDENTIFIER COMMA identifier_list
-- On RPAREN reduce production identifier_list -> LIDENTIFIER COMMA identifier_list
-- On KWproof reduce production identifier_list -> LIDENTIFIER COMMA identifier_list
-- On KWdo reduce production identifier_list -> LIDENTIFIER COMMA identifier_list
-- On COMMA reduce production identifier_list -> LIDENTIFIER COMMA identifier_list
-- On COLON reduce production identifier_list -> LIDENTIFIER COMMA identifier_list
-- On ASSIGN reduce production identifier_list -> LIDENTIFIER COMMA identifier_list

State 96:
entity_group -> identifier_list . [ SEMICOL RPAREN KWproof KWdo COMMA ASSIGN ]
entity_group -> identifier_list . COLON type_nt [ SEMICOL RPAREN KWproof KWdo COMMA ASSIGN ]
-- On COLON shift to state 97
-- On SEMICOL reduce production entity_group -> identifier_list
-- On RPAREN reduce production entity_group -> identifier_list
-- On KWproof reduce production entity_group -> identifier_list
-- On KWdo reduce production entity_group -> identifier_list
-- On COMMA reduce production entity_group -> identifier_list
-- On ASSIGN reduce production entity_group -> identifier_list

State 97:
entity_group -> identifier_list COLON . type_nt [ SEMICOL RPAREN KWproof KWdo COMMA ASSIGN ]
-- On UIDENTIFIER shift to state 20
-- On LPAREN shift to state 22
-- On LIDENTIFIER shift to state 2
-- On LBRACKET shift to state 23
-- On type_nt shift to state 98
-- On tuple_type shift to state 24
-- On star_type shift to state 25
-- On simple_type shift to state 26
-- On qmark_type shift to state 27
-- On path shift to state 28
-- On list_type shift to state 31
-- On elem_type shift to state 43
-- On dotted_id_list shift to state 36
-- On arrow_type shift to state 46

State 98:
entity_group -> identifier_list COLON type_nt . [ SEMICOL RPAREN KWproof KWdo COMMA ASSIGN ]
-- On SEMICOL reduce production entity_group -> identifier_list COLON type_nt
-- On RPAREN reduce production entity_group -> identifier_list COLON type_nt
-- On KWproof reduce production entity_group -> identifier_list COLON type_nt
-- On KWdo reduce production entity_group -> identifier_list COLON type_nt
-- On COMMA reduce production entity_group -> identifier_list COLON type_nt
-- On ASSIGN reduce production entity_group -> identifier_list COLON type_nt

State 99:
formal_arguments -> LPAREN entity_list . RPAREN [ USCORE UIDENTIFIER TIMES SEMICOL PLUS NUMBER NEWLINE MINUS LPAREN LIDENTIFIER LBRACKET LBRACE KWtrue KWsome KWrequire KWproof KWold KWnote KWnot KWlocal KWinspect KWinherit KWimmutable KWif KWfalse KWensure KWend KWdo KWdeferred KWclass KWcase KWall KWagent KWResult EXCLAM COLON ARROW # ]
-- On RPAREN shift to state 100

State 100:
formal_arguments -> LPAREN entity_list RPAREN . [ USCORE UIDENTIFIER TIMES SEMICOL PLUS NUMBER NEWLINE MINUS LPAREN LIDENTIFIER LBRACKET LBRACE KWtrue KWsome KWrequire KWproof KWold KWnote KWnot KWlocal KWinspect KWinherit KWimmutable KWif KWfalse KWensure KWend KWdo KWdeferred KWclass KWcase KWall KWagent KWResult EXCLAM COLON ARROW # ]
-- On USCORE reduce production formal_arguments -> LPAREN entity_list RPAREN
-- On UIDENTIFIER reduce production formal_arguments -> LPAREN entity_list RPAREN
-- On TIMES reduce production formal_arguments -> LPAREN entity_list RPAREN
-- On SEMICOL reduce production formal_arguments -> LPAREN entity_list RPAREN
-- On PLUS reduce production formal_arguments -> LPAREN entity_list RPAREN
-- On NUMBER reduce production formal_arguments -> LPAREN entity_list RPAREN
-- On NEWLINE reduce production formal_arguments -> LPAREN entity_list RPAREN
-- On MINUS reduce production formal_arguments -> LPAREN entity_list RPAREN
-- On LPAREN reduce production formal_arguments -> LPAREN entity_list RPAREN
-- On LIDENTIFIER reduce production formal_arguments -> LPAREN entity_list RPAREN
-- On LBRACKET reduce production formal_arguments -> LPAREN entity_list RPAREN
-- On LBRACE reduce production formal_arguments -> LPAREN entity_list RPAREN
-- On KWtrue reduce production formal_arguments -> LPAREN entity_list RPAREN
-- On KWsome reduce production formal_arguments -> LPAREN entity_list RPAREN
-- On KWrequire reduce production formal_arguments -> LPAREN entity_list RPAREN
-- On KWproof reduce production formal_arguments -> LPAREN entity_list RPAREN
-- On KWold reduce production formal_arguments -> LPAREN entity_list RPAREN
-- On KWnote reduce production formal_arguments -> LPAREN entity_list RPAREN
-- On KWnot reduce production formal_arguments -> LPAREN entity_list RPAREN
-- On KWlocal reduce production formal_arguments -> LPAREN entity_list RPAREN
-- On KWinspect reduce production formal_arguments -> LPAREN entity_list RPAREN
-- On KWinherit reduce production formal_arguments -> LPAREN entity_list RPAREN
-- On KWimmutable reduce production formal_arguments -> LPAREN entity_list RPAREN
-- On KWif reduce production formal_arguments -> LPAREN entity_list RPAREN
-- On KWfalse reduce production formal_arguments -> LPAREN entity_list RPAREN
-- On KWensure reduce production formal_arguments -> LPAREN entity_list RPAREN
-- On KWend reduce production formal_arguments -> LPAREN entity_list RPAREN
-- On KWdo reduce production formal_arguments -> LPAREN entity_list RPAREN
-- On KWdeferred reduce production formal_arguments -> LPAREN entity_list RPAREN
-- On KWclass reduce production formal_arguments -> LPAREN entity_list RPAREN
-- On KWcase reduce production formal_arguments -> LPAREN entity_list RPAREN
-- On KWall reduce production formal_arguments -> LPAREN entity_list RPAREN
-- On KWagent reduce production formal_arguments -> LPAREN entity_list RPAREN
-- On KWResult reduce production formal_arguments -> LPAREN entity_list RPAREN
-- On EXCLAM reduce production formal_arguments -> LPAREN entity_list RPAREN
-- On COLON reduce production formal_arguments -> LPAREN entity_list RPAREN
-- On ARROW reduce production formal_arguments -> LPAREN entity_list RPAREN

State 101:
entity_list -> entity_group . [ SEMICOL RPAREN KWproof KWdo ASSIGN ]
entity_list -> entity_group . COMMA entity_list [ SEMICOL RPAREN KWproof KWdo ASSIGN ]
-- On COMMA shift to state 102
-- On SEMICOL reduce production entity_list -> entity_group
-- On RPAREN reduce production entity_list -> entity_group
-- On KWproof reduce production entity_list -> entity_group
-- On KWdo reduce production entity_list -> entity_group
-- On ASSIGN reduce production entity_list -> entity_group

State 102:
entity_list -> entity_group COMMA . entity_list [ SEMICOL RPAREN KWproof KWdo ASSIGN ]
-- On LIDENTIFIER shift to state 93
-- On identifier_list shift to state 96
-- On entity_list shift to state 103
-- On entity_group shift to state 101

State 103:
entity_list -> entity_group COMMA entity_list . [ SEMICOL RPAREN KWproof KWdo ASSIGN ]
-- On SEMICOL reduce production entity_list -> entity_group COMMA entity_list
-- On RPAREN reduce production entity_list -> entity_group COMMA entity_list
-- On KWproof reduce production entity_list -> entity_group COMMA entity_list
-- On KWdo reduce production entity_list -> entity_group COMMA entity_list
-- On ASSIGN reduce production entity_list -> entity_group COMMA entity_list

State 104:
proof_all_expr -> KWall formal_arguments_opt . opt_nl ass_req_opt ass_imp ass_ens KWend [ UIDENTIFIER SEMICOL NUMBER LPAREN LIDENTIFIER KWtrue KWimmutable KWfalse KWdeferred KWclass KWcase KWall # ]
-- On SEMICOL shift to state 105
-- On NEWLINE shift to state 106
-- On opt_nl shift to state 107
-- On KWrequire reduce production opt_nl -> 
-- On KWproof reduce production opt_nl -> 
-- On KWnote reduce production opt_nl -> 
-- On KWensure reduce production opt_nl -> 
-- On KWdeferred reduce production opt_nl -> 

State 105:
opt_nl -> SEMICOL . [ USCORE TIMES PLUS NUMBER MINUS LPAREN LIDENTIFIER LBRACKET LBRACE KWtrue KWsome KWrequire KWproof KWold KWnote KWnot KWinspect KWif KWfalse KWensure KWdeferred KWall KWagent KWResult ]
-- On USCORE reduce production opt_nl -> SEMICOL
-- On TIMES reduce production opt_nl -> SEMICOL
-- On PLUS reduce production opt_nl -> SEMICOL
-- On NUMBER reduce production opt_nl -> SEMICOL
-- On MINUS reduce production opt_nl -> SEMICOL
-- On LPAREN reduce production opt_nl -> SEMICOL
-- On LIDENTIFIER reduce production opt_nl -> SEMICOL
-- On LBRACKET reduce production opt_nl -> SEMICOL
-- On LBRACE reduce production opt_nl -> SEMICOL
-- On KWtrue reduce production opt_nl -> SEMICOL
-- On KWsome reduce production opt_nl -> SEMICOL
-- On KWrequire reduce production opt_nl -> SEMICOL
-- On KWproof reduce production opt_nl -> SEMICOL
-- On KWold reduce production opt_nl -> SEMICOL
-- On KWnote reduce production opt_nl -> SEMICOL
-- On KWnot reduce production opt_nl -> SEMICOL
-- On KWinspect reduce production opt_nl -> SEMICOL
-- On KWif reduce production opt_nl -> SEMICOL
-- On KWfalse reduce production opt_nl -> SEMICOL
-- On KWensure reduce production opt_nl -> SEMICOL
-- On KWdeferred reduce production opt_nl -> SEMICOL
-- On KWall reduce production opt_nl -> SEMICOL
-- On KWagent reduce production opt_nl -> SEMICOL
-- On KWResult reduce production opt_nl -> SEMICOL

State 106:
opt_nl -> NEWLINE . [ USCORE TIMES PLUS NUMBER MINUS LPAREN LIDENTIFIER LBRACKET LBRACE KWtrue KWsome KWrequire KWproof KWold KWnote KWnot KWinspect KWif KWfalse KWensure KWdeferred KWall KWagent KWResult ]
-- On USCORE reduce production opt_nl -> NEWLINE
-- On TIMES reduce production opt_nl -> NEWLINE
-- On PLUS reduce production opt_nl -> NEWLINE
-- On NUMBER reduce production opt_nl -> NEWLINE
-- On MINUS reduce production opt_nl -> NEWLINE
-- On LPAREN reduce production opt_nl -> NEWLINE
-- On LIDENTIFIER reduce production opt_nl -> NEWLINE
-- On LBRACKET reduce production opt_nl -> NEWLINE
-- On LBRACE reduce production opt_nl -> NEWLINE
-- On KWtrue reduce production opt_nl -> NEWLINE
-- On KWsome reduce production opt_nl -> NEWLINE
-- On KWrequire reduce production opt_nl -> NEWLINE
-- On KWproof reduce production opt_nl -> NEWLINE
-- On KWold reduce production opt_nl -> NEWLINE
-- On KWnote reduce production opt_nl -> NEWLINE
-- On KWnot reduce production opt_nl -> NEWLINE
-- On KWinspect reduce production opt_nl -> NEWLINE
-- On KWif reduce production opt_nl -> NEWLINE
-- On KWfalse reduce production opt_nl -> NEWLINE
-- On KWensure reduce production opt_nl -> NEWLINE
-- On KWdeferred reduce production opt_nl -> NEWLINE
-- On KWall reduce production opt_nl -> NEWLINE
-- On KWagent reduce production opt_nl -> NEWLINE
-- On KWResult reduce production opt_nl -> NEWLINE

State 107:
proof_all_expr -> KWall formal_arguments_opt opt_nl . ass_req_opt ass_imp ass_ens KWend [ UIDENTIFIER SEMICOL NUMBER LPAREN LIDENTIFIER KWtrue KWimmutable KWfalse KWdeferred KWclass KWcase KWall # ]
-- On KWrequire shift to state 108
-- On ass_req_opt shift to state 277
-- On ass_req shift to state 295
-- On KWproof reduce production ass_req_opt -> 
-- On KWnote reduce production ass_req_opt -> 
-- On KWensure reduce production ass_req_opt -> 
-- On KWdeferred reduce production ass_req_opt -> 

State 108:
ass_req -> KWrequire . ass_seq [ KWproof KWnote KWensure KWdeferred ]
ass_req -> KWrequire . ass_seq separator [ KWproof KWnote KWensure KWdeferred ]
-- On USCORE shift to state 109
-- On TIMES shift to state 110
-- On PLUS shift to state 111
-- On NUMBER shift to state 112
-- On MINUS shift to state 113
-- On LPAREN shift to state 114
-- On LIDENTIFIER shift to state 116
-- On LBRACKET shift to state 118
-- On LBRACE shift to state 119
-- On KWtrue shift to state 120
-- On KWsome shift to state 121
-- On KWold shift to state 124
-- On KWnot shift to state 125
-- On KWinspect shift to state 126
-- On KWif shift to state 127
-- On KWfalse shift to state 128
-- On KWall shift to state 129
-- On KWagent shift to state 132
-- On KWResult shift to state 144
-- On operator_expr shift to state 145
-- On info_expr shift to state 273
-- On expr shift to state 148
-- On exp_inspect shift to state 176
-- On exp_conditional shift to state 177
-- On dotted_id_list shift to state 178
-- On atomic_expr shift to state 187
-- On ass_seq shift to state 274

State 109:
atomic_expr -> USCORE . [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
-- On UIDENTIFIER reduce production atomic_expr -> USCORE
-- On TIMES reduce production atomic_expr -> USCORE
-- On SEMICOL reduce production atomic_expr -> USCORE
-- On RPAREN reduce production atomic_expr -> USCORE
-- On RBRACKET reduce production atomic_expr -> USCORE
-- On RBRACE reduce production atomic_expr -> USCORE
-- On PLUS reduce production atomic_expr -> USCORE
-- On NUMBER reduce production atomic_expr -> USCORE
-- On NOTIN reduce production atomic_expr -> USCORE
-- On NEWLINE reduce production atomic_expr -> USCORE
-- On NEQ reduce production atomic_expr -> USCORE
-- On MINUS reduce production atomic_expr -> USCORE
-- On LT reduce production atomic_expr -> USCORE
-- On LPAREN reduce production atomic_expr -> USCORE
-- On LIDENTIFIER reduce production atomic_expr -> USCORE
-- On LE reduce production atomic_expr -> USCORE
-- On LBRACKET reduce production atomic_expr -> USCORE
-- On KWtrue reduce production atomic_expr -> USCORE
-- On KWthen reduce production atomic_expr -> USCORE
-- On KWproof reduce production atomic_expr -> USCORE
-- On KWor reduce production atomic_expr -> USCORE
-- On KWnote reduce production atomic_expr -> USCORE
-- On KWlocal reduce production atomic_expr -> USCORE
-- On KWin reduce production atomic_expr -> USCORE
-- On KWimmutable reduce production atomic_expr -> USCORE
-- On KWfalse reduce production atomic_expr -> USCORE
-- On KWensure reduce production atomic_expr -> USCORE
-- On KWend reduce production atomic_expr -> USCORE
-- On KWelseif reduce production atomic_expr -> USCORE
-- On KWelse reduce production atomic_expr -> USCORE
-- On KWdo reduce production atomic_expr -> USCORE
-- On KWdeferred reduce production atomic_expr -> USCORE
-- On KWclass reduce production atomic_expr -> USCORE
-- On KWcase reduce production atomic_expr -> USCORE
-- On KWas reduce production atomic_expr -> USCORE
-- On KWand reduce production atomic_expr -> USCORE
-- On KWall reduce production atomic_expr -> USCORE
-- On GT reduce production atomic_expr -> USCORE
-- On GE reduce production atomic_expr -> USCORE
-- On EQ reduce production atomic_expr -> USCORE
-- On DOT reduce production atomic_expr -> USCORE
-- On DIVIDE reduce production atomic_expr -> USCORE
-- On DCOLON reduce production atomic_expr -> USCORE
-- On DBAR reduce production atomic_expr -> USCORE
-- On DARROW reduce production atomic_expr -> USCORE
-- On COMMA reduce production atomic_expr -> USCORE
-- On COLON reduce production atomic_expr -> USCORE
-- On CARET reduce production atomic_expr -> USCORE
-- On BAR reduce production atomic_expr -> USCORE

State 110:
operator_expr -> TIMES . expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
-- On USCORE shift to state 109
-- On TIMES shift to state 110
-- On PLUS shift to state 111
-- On NUMBER shift to state 112
-- On MINUS shift to state 113
-- On LPAREN shift to state 114
-- On LIDENTIFIER shift to state 116
-- On LBRACKET shift to state 118
-- On LBRACE shift to state 119
-- On KWtrue shift to state 120
-- On KWsome shift to state 121
-- On KWold shift to state 124
-- On KWnot shift to state 125
-- On KWinspect shift to state 126
-- On KWif shift to state 127
-- On KWfalse shift to state 128
-- On KWall shift to state 129
-- On KWagent shift to state 132
-- On KWResult shift to state 144
-- On operator_expr shift to state 145
-- On expr shift to state 272
-- On exp_inspect shift to state 176
-- On exp_conditional shift to state 177
-- On dotted_id_list shift to state 178
-- On atomic_expr shift to state 187

State 111:
operator_expr -> PLUS . expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
-- On USCORE shift to state 109
-- On TIMES shift to state 110
-- On PLUS shift to state 111
-- On NUMBER shift to state 112
-- On MINUS shift to state 113
-- On LPAREN shift to state 114
-- On LIDENTIFIER shift to state 116
-- On LBRACKET shift to state 118
-- On LBRACE shift to state 119
-- On KWtrue shift to state 120
-- On KWsome shift to state 121
-- On KWold shift to state 124
-- On KWnot shift to state 125
-- On KWinspect shift to state 126
-- On KWif shift to state 127
-- On KWfalse shift to state 128
-- On KWall shift to state 129
-- On KWagent shift to state 132
-- On KWResult shift to state 144
-- On operator_expr shift to state 145
-- On expr shift to state 213
-- On exp_inspect shift to state 176
-- On exp_conditional shift to state 177
-- On dotted_id_list shift to state 178
-- On atomic_expr shift to state 187

State 112:
atomic_expr -> NUMBER . [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
-- On UIDENTIFIER reduce production atomic_expr -> NUMBER
-- On TIMES reduce production atomic_expr -> NUMBER
-- On SEMICOL reduce production atomic_expr -> NUMBER
-- On RPAREN reduce production atomic_expr -> NUMBER
-- On RBRACKET reduce production atomic_expr -> NUMBER
-- On RBRACE reduce production atomic_expr -> NUMBER
-- On PLUS reduce production atomic_expr -> NUMBER
-- On NUMBER reduce production atomic_expr -> NUMBER
-- On NOTIN reduce production atomic_expr -> NUMBER
-- On NEWLINE reduce production atomic_expr -> NUMBER
-- On NEQ reduce production atomic_expr -> NUMBER
-- On MINUS reduce production atomic_expr -> NUMBER
-- On LT reduce production atomic_expr -> NUMBER
-- On LPAREN reduce production atomic_expr -> NUMBER
-- On LIDENTIFIER reduce production atomic_expr -> NUMBER
-- On LE reduce production atomic_expr -> NUMBER
-- On LBRACKET reduce production atomic_expr -> NUMBER
-- On KWtrue reduce production atomic_expr -> NUMBER
-- On KWthen reduce production atomic_expr -> NUMBER
-- On KWproof reduce production atomic_expr -> NUMBER
-- On KWor reduce production atomic_expr -> NUMBER
-- On KWnote reduce production atomic_expr -> NUMBER
-- On KWlocal reduce production atomic_expr -> NUMBER
-- On KWin reduce production atomic_expr -> NUMBER
-- On KWimmutable reduce production atomic_expr -> NUMBER
-- On KWfalse reduce production atomic_expr -> NUMBER
-- On KWensure reduce production atomic_expr -> NUMBER
-- On KWend reduce production atomic_expr -> NUMBER
-- On KWelseif reduce production atomic_expr -> NUMBER
-- On KWelse reduce production atomic_expr -> NUMBER
-- On KWdo reduce production atomic_expr -> NUMBER
-- On KWdeferred reduce production atomic_expr -> NUMBER
-- On KWclass reduce production atomic_expr -> NUMBER
-- On KWcase reduce production atomic_expr -> NUMBER
-- On KWas reduce production atomic_expr -> NUMBER
-- On KWand reduce production atomic_expr -> NUMBER
-- On KWall reduce production atomic_expr -> NUMBER
-- On GT reduce production atomic_expr -> NUMBER
-- On GE reduce production atomic_expr -> NUMBER
-- On EQ reduce production atomic_expr -> NUMBER
-- On DOT reduce production atomic_expr -> NUMBER
-- On DIVIDE reduce production atomic_expr -> NUMBER
-- On DCOLON reduce production atomic_expr -> NUMBER
-- On DBAR reduce production atomic_expr -> NUMBER
-- On DARROW reduce production atomic_expr -> NUMBER
-- On COMMA reduce production atomic_expr -> NUMBER
-- On COLON reduce production atomic_expr -> NUMBER
-- On CARET reduce production atomic_expr -> NUMBER
-- On BAR reduce production atomic_expr -> NUMBER

State 113:
operator_expr -> MINUS . expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
-- On USCORE shift to state 109
-- On TIMES shift to state 110
-- On PLUS shift to state 111
-- On NUMBER shift to state 112
-- On MINUS shift to state 113
-- On LPAREN shift to state 114
-- On LIDENTIFIER shift to state 116
-- On LBRACKET shift to state 118
-- On LBRACE shift to state 119
-- On KWtrue shift to state 120
-- On KWsome shift to state 121
-- On KWold shift to state 124
-- On KWnot shift to state 125
-- On KWinspect shift to state 126
-- On KWif shift to state 127
-- On KWfalse shift to state 128
-- On KWall shift to state 129
-- On KWagent shift to state 132
-- On KWResult shift to state 144
-- On operator_expr shift to state 145
-- On expr shift to state 215
-- On exp_inspect shift to state 176
-- On exp_conditional shift to state 177
-- On dotted_id_list shift to state 178
-- On atomic_expr shift to state 187

State 114:
expr -> LPAREN . expr RPAREN [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
expr -> LPAREN . operator RPAREN [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
expr -> LPAREN . expr RPAREN ARROW expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
-- On USCORE shift to state 109
-- On TIMES shift to state 115
-- On ROPERATOR shift to state 58
-- On PLUS shift to state 212
-- On PARENOP shift to state 60
-- On OPERATOR shift to state 61
-- On NUMBER shift to state 112
-- On NOTIN shift to state 62
-- On NEQV shift to state 63
-- On NEQ shift to state 64
-- On MINUS shift to state 214
-- On LT shift to state 66
-- On LPAREN shift to state 114
-- On LIDENTIFIER shift to state 116
-- On LE shift to state 67
-- On LBRACKET shift to state 118
-- On LBRACE shift to state 119
-- On KWtrue shift to state 120
-- On KWsome shift to state 121
-- On KWor shift to state 68
-- On KWold shift to state 124
-- On KWnot shift to state 224
-- On KWinspect shift to state 126
-- On KWin shift to state 70
-- On KWif shift to state 127
-- On KWfalse shift to state 128
-- On KWand shift to state 71
-- On KWall shift to state 129
-- On KWagent shift to state 132
-- On KWResult shift to state 144
-- On GT shift to state 72
-- On GE shift to state 73
-- On EQV shift to state 74
-- On EQ shift to state 75
-- On DIVIDE shift to state 76
-- On DCOLON shift to state 77
-- On DBAR shift to state 78
-- On DARROW shift to state 79
-- On CARET shift to state 80
-- On BRACKETOP shift to state 81
-- On BAR shift to state 82
-- On operator_expr shift to state 145
-- On operator shift to state 226
-- On expr shift to state 228
-- On exp_inspect shift to state 176
-- On exp_conditional shift to state 177
-- On dotted_id_list shift to state 178
-- On atomic_expr shift to state 187

State 115:
operator -> TIMES . [ RPAREN ]
operator_expr -> TIMES . expr [ TIMES RPAREN PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
-- On USCORE shift to state 109
-- On TIMES shift to state 110
-- On PLUS shift to state 111
-- On NUMBER shift to state 112
-- On MINUS shift to state 113
-- On LPAREN shift to state 114
-- On LIDENTIFIER shift to state 116
-- On LBRACKET shift to state 118
-- On LBRACE shift to state 119
-- On KWtrue shift to state 120
-- On KWsome shift to state 121
-- On KWold shift to state 124
-- On KWnot shift to state 125
-- On KWinspect shift to state 126
-- On KWif shift to state 127
-- On KWfalse shift to state 128
-- On KWall shift to state 129
-- On KWagent shift to state 132
-- On KWResult shift to state 144
-- On operator_expr shift to state 145
-- On expr shift to state 272
-- On exp_inspect shift to state 176
-- On exp_conditional shift to state 177
-- On dotted_id_list shift to state 178
-- On atomic_expr shift to state 187
-- On RPAREN reduce production operator -> TIMES

State 116:
dotted_id_list -> LIDENTIFIER . [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
expr -> LIDENTIFIER . ARROW expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
-- On ARROW shift to state 117
-- On UIDENTIFIER reduce production dotted_id_list -> LIDENTIFIER
-- On TIMES reduce production dotted_id_list -> LIDENTIFIER
-- On SEMICOL reduce production dotted_id_list -> LIDENTIFIER
-- On RPAREN reduce production dotted_id_list -> LIDENTIFIER
-- On RBRACKET reduce production dotted_id_list -> LIDENTIFIER
-- On RBRACE reduce production dotted_id_list -> LIDENTIFIER
-- On PLUS reduce production dotted_id_list -> LIDENTIFIER
-- On NUMBER reduce production dotted_id_list -> LIDENTIFIER
-- On NOTIN reduce production dotted_id_list -> LIDENTIFIER
-- On NEWLINE reduce production dotted_id_list -> LIDENTIFIER
-- On NEQ reduce production dotted_id_list -> LIDENTIFIER
-- On MINUS reduce production dotted_id_list -> LIDENTIFIER
-- On LT reduce production dotted_id_list -> LIDENTIFIER
-- On LPAREN reduce production dotted_id_list -> LIDENTIFIER
-- On LIDENTIFIER reduce production dotted_id_list -> LIDENTIFIER
-- On LE reduce production dotted_id_list -> LIDENTIFIER
-- On LBRACKET reduce production dotted_id_list -> LIDENTIFIER
-- On KWtrue reduce production dotted_id_list -> LIDENTIFIER
-- On KWthen reduce production dotted_id_list -> LIDENTIFIER
-- On KWproof reduce production dotted_id_list -> LIDENTIFIER
-- On KWor reduce production dotted_id_list -> LIDENTIFIER
-- On KWnote reduce production dotted_id_list -> LIDENTIFIER
-- On KWlocal reduce production dotted_id_list -> LIDENTIFIER
-- On KWin reduce production dotted_id_list -> LIDENTIFIER
-- On KWimmutable reduce production dotted_id_list -> LIDENTIFIER
-- On KWfalse reduce production dotted_id_list -> LIDENTIFIER
-- On KWensure reduce production dotted_id_list -> LIDENTIFIER
-- On KWend reduce production dotted_id_list -> LIDENTIFIER
-- On KWelseif reduce production dotted_id_list -> LIDENTIFIER
-- On KWelse reduce production dotted_id_list -> LIDENTIFIER
-- On KWdo reduce production dotted_id_list -> LIDENTIFIER
-- On KWdeferred reduce production dotted_id_list -> LIDENTIFIER
-- On KWclass reduce production dotted_id_list -> LIDENTIFIER
-- On KWcase reduce production dotted_id_list -> LIDENTIFIER
-- On KWas reduce production dotted_id_list -> LIDENTIFIER
-- On KWand reduce production dotted_id_list -> LIDENTIFIER
-- On KWall reduce production dotted_id_list -> LIDENTIFIER
-- On GT reduce production dotted_id_list -> LIDENTIFIER
-- On GE reduce production dotted_id_list -> LIDENTIFIER
-- On EQ reduce production dotted_id_list -> LIDENTIFIER
-- On DOT reduce production dotted_id_list -> LIDENTIFIER
-- On DIVIDE reduce production dotted_id_list -> LIDENTIFIER
-- On DCOLON reduce production dotted_id_list -> LIDENTIFIER
-- On DBAR reduce production dotted_id_list -> LIDENTIFIER
-- On DARROW reduce production dotted_id_list -> LIDENTIFIER
-- On COMMA reduce production dotted_id_list -> LIDENTIFIER
-- On COLON reduce production dotted_id_list -> LIDENTIFIER
-- On CARET reduce production dotted_id_list -> LIDENTIFIER
-- On BAR reduce production dotted_id_list -> LIDENTIFIER

State 117:
expr -> LIDENTIFIER ARROW . expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
-- On USCORE shift to state 109
-- On TIMES shift to state 110
-- On PLUS shift to state 111
-- On NUMBER shift to state 112
-- On MINUS shift to state 113
-- On LPAREN shift to state 114
-- On LIDENTIFIER shift to state 116
-- On LBRACKET shift to state 118
-- On LBRACE shift to state 119
-- On KWtrue shift to state 120
-- On KWsome shift to state 121
-- On KWold shift to state 124
-- On KWnot shift to state 125
-- On KWinspect shift to state 126
-- On KWif shift to state 127
-- On KWfalse shift to state 128
-- On KWall shift to state 129
-- On KWagent shift to state 132
-- On KWResult shift to state 144
-- On operator_expr shift to state 145
-- On expr shift to state 271
-- On exp_inspect shift to state 176
-- On exp_conditional shift to state 177
-- On dotted_id_list shift to state 178
-- On atomic_expr shift to state 187

State 118:
expr -> LBRACKET . expr RBRACKET [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
-- On USCORE shift to state 109
-- On TIMES shift to state 110
-- On PLUS shift to state 111
-- On NUMBER shift to state 112
-- On MINUS shift to state 113
-- On LPAREN shift to state 114
-- On LIDENTIFIER shift to state 116
-- On LBRACKET shift to state 118
-- On LBRACE shift to state 119
-- On KWtrue shift to state 120
-- On KWsome shift to state 121
-- On KWold shift to state 124
-- On KWnot shift to state 125
-- On KWinspect shift to state 126
-- On KWif shift to state 127
-- On KWfalse shift to state 128
-- On KWall shift to state 129
-- On KWagent shift to state 132
-- On KWResult shift to state 144
-- On operator_expr shift to state 145
-- On expr shift to state 217
-- On exp_inspect shift to state 176
-- On exp_conditional shift to state 177
-- On dotted_id_list shift to state 178
-- On atomic_expr shift to state 187

State 119:
expr -> LBRACE . expr RBRACE [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
-- On USCORE shift to state 109
-- On TIMES shift to state 110
-- On PLUS shift to state 111
-- On NUMBER shift to state 112
-- On MINUS shift to state 113
-- On LPAREN shift to state 114
-- On LIDENTIFIER shift to state 116
-- On LBRACKET shift to state 118
-- On LBRACE shift to state 119
-- On KWtrue shift to state 120
-- On KWsome shift to state 121
-- On KWold shift to state 124
-- On KWnot shift to state 125
-- On KWinspect shift to state 126
-- On KWif shift to state 127
-- On KWfalse shift to state 128
-- On KWall shift to state 129
-- On KWagent shift to state 132
-- On KWResult shift to state 144
-- On operator_expr shift to state 145
-- On expr shift to state 269
-- On exp_inspect shift to state 176
-- On exp_conditional shift to state 177
-- On dotted_id_list shift to state 178
-- On atomic_expr shift to state 187

State 120:
atomic_expr -> KWtrue . [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
-- On UIDENTIFIER reduce production atomic_expr -> KWtrue
-- On TIMES reduce production atomic_expr -> KWtrue
-- On SEMICOL reduce production atomic_expr -> KWtrue
-- On RPAREN reduce production atomic_expr -> KWtrue
-- On RBRACKET reduce production atomic_expr -> KWtrue
-- On RBRACE reduce production atomic_expr -> KWtrue
-- On PLUS reduce production atomic_expr -> KWtrue
-- On NUMBER reduce production atomic_expr -> KWtrue
-- On NOTIN reduce production atomic_expr -> KWtrue
-- On NEWLINE reduce production atomic_expr -> KWtrue
-- On NEQ reduce production atomic_expr -> KWtrue
-- On MINUS reduce production atomic_expr -> KWtrue
-- On LT reduce production atomic_expr -> KWtrue
-- On LPAREN reduce production atomic_expr -> KWtrue
-- On LIDENTIFIER reduce production atomic_expr -> KWtrue
-- On LE reduce production atomic_expr -> KWtrue
-- On LBRACKET reduce production atomic_expr -> KWtrue
-- On KWtrue reduce production atomic_expr -> KWtrue
-- On KWthen reduce production atomic_expr -> KWtrue
-- On KWproof reduce production atomic_expr -> KWtrue
-- On KWor reduce production atomic_expr -> KWtrue
-- On KWnote reduce production atomic_expr -> KWtrue
-- On KWlocal reduce production atomic_expr -> KWtrue
-- On KWin reduce production atomic_expr -> KWtrue
-- On KWimmutable reduce production atomic_expr -> KWtrue
-- On KWfalse reduce production atomic_expr -> KWtrue
-- On KWensure reduce production atomic_expr -> KWtrue
-- On KWend reduce production atomic_expr -> KWtrue
-- On KWelseif reduce production atomic_expr -> KWtrue
-- On KWelse reduce production atomic_expr -> KWtrue
-- On KWdo reduce production atomic_expr -> KWtrue
-- On KWdeferred reduce production atomic_expr -> KWtrue
-- On KWclass reduce production atomic_expr -> KWtrue
-- On KWcase reduce production atomic_expr -> KWtrue
-- On KWas reduce production atomic_expr -> KWtrue
-- On KWand reduce production atomic_expr -> KWtrue
-- On KWall reduce production atomic_expr -> KWtrue
-- On GT reduce production atomic_expr -> KWtrue
-- On GE reduce production atomic_expr -> KWtrue
-- On EQ reduce production atomic_expr -> KWtrue
-- On DOT reduce production atomic_expr -> KWtrue
-- On DIVIDE reduce production atomic_expr -> KWtrue
-- On DCOLON reduce production atomic_expr -> KWtrue
-- On DBAR reduce production atomic_expr -> KWtrue
-- On DARROW reduce production atomic_expr -> KWtrue
-- On COMMA reduce production atomic_expr -> KWtrue
-- On COLON reduce production atomic_expr -> KWtrue
-- On CARET reduce production atomic_expr -> KWtrue
-- On BAR reduce production atomic_expr -> KWtrue

State 121:
expr -> KWsome . formal_arguments opt_nl expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
-- On LPAREN shift to state 92
-- On formal_arguments shift to state 122

State 122:
expr -> KWsome formal_arguments . opt_nl expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
-- On SEMICOL shift to state 105
-- On NEWLINE shift to state 106
-- On opt_nl shift to state 123
-- On USCORE reduce production opt_nl -> 
-- On TIMES reduce production opt_nl -> 
-- On PLUS reduce production opt_nl -> 
-- On NUMBER reduce production opt_nl -> 
-- On MINUS reduce production opt_nl -> 
-- On LPAREN reduce production opt_nl -> 
-- On LIDENTIFIER reduce production opt_nl -> 
-- On LBRACKET reduce production opt_nl -> 
-- On LBRACE reduce production opt_nl -> 
-- On KWtrue reduce production opt_nl -> 
-- On KWsome reduce production opt_nl -> 
-- On KWold reduce production opt_nl -> 
-- On KWnot reduce production opt_nl -> 
-- On KWinspect reduce production opt_nl -> 
-- On KWif reduce production opt_nl -> 
-- On KWfalse reduce production opt_nl -> 
-- On KWall reduce production opt_nl -> 
-- On KWagent reduce production opt_nl -> 
-- On KWResult reduce production opt_nl -> 

State 123:
expr -> KWsome formal_arguments opt_nl . expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
-- On USCORE shift to state 109
-- On TIMES shift to state 110
-- On PLUS shift to state 111
-- On NUMBER shift to state 112
-- On MINUS shift to state 113
-- On LPAREN shift to state 114
-- On LIDENTIFIER shift to state 116
-- On LBRACKET shift to state 118
-- On LBRACE shift to state 119
-- On KWtrue shift to state 120
-- On KWsome shift to state 121
-- On KWold shift to state 124
-- On KWnot shift to state 125
-- On KWinspect shift to state 126
-- On KWif shift to state 127
-- On KWfalse shift to state 128
-- On KWall shift to state 129
-- On KWagent shift to state 132
-- On KWResult shift to state 144
-- On operator_expr shift to state 145
-- On expr shift to state 268
-- On exp_inspect shift to state 176
-- On exp_conditional shift to state 177
-- On dotted_id_list shift to state 178
-- On atomic_expr shift to state 187

State 124:
operator_expr -> KWold . expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
-- On USCORE shift to state 109
-- On TIMES shift to state 110
-- On PLUS shift to state 111
-- On NUMBER shift to state 112
-- On MINUS shift to state 113
-- On LPAREN shift to state 114
-- On LIDENTIFIER shift to state 116
-- On LBRACKET shift to state 118
-- On LBRACE shift to state 119
-- On KWtrue shift to state 120
-- On KWsome shift to state 121
-- On KWold shift to state 124
-- On KWnot shift to state 125
-- On KWinspect shift to state 126
-- On KWif shift to state 127
-- On KWfalse shift to state 128
-- On KWall shift to state 129
-- On KWagent shift to state 132
-- On KWResult shift to state 144
-- On operator_expr shift to state 145
-- On expr shift to state 267
-- On exp_inspect shift to state 176
-- On exp_conditional shift to state 177
-- On dotted_id_list shift to state 178
-- On atomic_expr shift to state 187

State 125:
operator_expr -> KWnot . expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
-- On USCORE shift to state 109
-- On TIMES shift to state 110
-- On PLUS shift to state 111
-- On NUMBER shift to state 112
-- On MINUS shift to state 113
-- On LPAREN shift to state 114
-- On LIDENTIFIER shift to state 116
-- On LBRACKET shift to state 118
-- On LBRACE shift to state 119
-- On KWtrue shift to state 120
-- On KWsome shift to state 121
-- On KWold shift to state 124
-- On KWnot shift to state 125
-- On KWinspect shift to state 126
-- On KWif shift to state 127
-- On KWfalse shift to state 128
-- On KWall shift to state 129
-- On KWagent shift to state 132
-- On KWResult shift to state 144
-- On operator_expr shift to state 145
-- On expr shift to state 225
-- On exp_inspect shift to state 176
-- On exp_conditional shift to state 177
-- On dotted_id_list shift to state 178
-- On atomic_expr shift to state 187

State 126:
exp_inspect -> KWinspect . expr exp_case_list KWend [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
-- On USCORE shift to state 109
-- On TIMES shift to state 110
-- On PLUS shift to state 111
-- On NUMBER shift to state 112
-- On MINUS shift to state 113
-- On LPAREN shift to state 114
-- On LIDENTIFIER shift to state 116
-- On LBRACKET shift to state 118
-- On LBRACE shift to state 119
-- On KWtrue shift to state 120
-- On KWsome shift to state 121
-- On KWold shift to state 124
-- On KWnot shift to state 125
-- On KWinspect shift to state 126
-- On KWif shift to state 127
-- On KWfalse shift to state 128
-- On KWall shift to state 129
-- On KWagent shift to state 132
-- On KWResult shift to state 144
-- On operator_expr shift to state 145
-- On expr shift to state 258
-- On exp_inspect shift to state 176
-- On exp_conditional shift to state 177
-- On dotted_id_list shift to state 178
-- On atomic_expr shift to state 187

State 127:
exp_conditional -> KWif . exp_then_part_list exp_else_part KWend [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
-- On USCORE shift to state 109
-- On TIMES shift to state 110
-- On PLUS shift to state 111
-- On NUMBER shift to state 112
-- On MINUS shift to state 113
-- On LPAREN shift to state 114
-- On LIDENTIFIER shift to state 116
-- On LBRACKET shift to state 118
-- On LBRACE shift to state 119
-- On KWtrue shift to state 120
-- On KWsome shift to state 121
-- On KWold shift to state 124
-- On KWnot shift to state 125
-- On KWinspect shift to state 126
-- On KWif shift to state 127
-- On KWfalse shift to state 128
-- On KWall shift to state 129
-- On KWagent shift to state 132
-- On KWResult shift to state 144
-- On operator_expr shift to state 145
-- On expr shift to state 247
-- On exp_then_part_list shift to state 250
-- On exp_then_part shift to state 255
-- On exp_inspect shift to state 176
-- On exp_conditional shift to state 177
-- On dotted_id_list shift to state 178
-- On atomic_expr shift to state 187

State 128:
atomic_expr -> KWfalse . [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
-- On UIDENTIFIER reduce production atomic_expr -> KWfalse
-- On TIMES reduce production atomic_expr -> KWfalse
-- On SEMICOL reduce production atomic_expr -> KWfalse
-- On RPAREN reduce production atomic_expr -> KWfalse
-- On RBRACKET reduce production atomic_expr -> KWfalse
-- On RBRACE reduce production atomic_expr -> KWfalse
-- On PLUS reduce production atomic_expr -> KWfalse
-- On NUMBER reduce production atomic_expr -> KWfalse
-- On NOTIN reduce production atomic_expr -> KWfalse
-- On NEWLINE reduce production atomic_expr -> KWfalse
-- On NEQ reduce production atomic_expr -> KWfalse
-- On MINUS reduce production atomic_expr -> KWfalse
-- On LT reduce production atomic_expr -> KWfalse
-- On LPAREN reduce production atomic_expr -> KWfalse
-- On LIDENTIFIER reduce production atomic_expr -> KWfalse
-- On LE reduce production atomic_expr -> KWfalse
-- On LBRACKET reduce production atomic_expr -> KWfalse
-- On KWtrue reduce production atomic_expr -> KWfalse
-- On KWthen reduce production atomic_expr -> KWfalse
-- On KWproof reduce production atomic_expr -> KWfalse
-- On KWor reduce production atomic_expr -> KWfalse
-- On KWnote reduce production atomic_expr -> KWfalse
-- On KWlocal reduce production atomic_expr -> KWfalse
-- On KWin reduce production atomic_expr -> KWfalse
-- On KWimmutable reduce production atomic_expr -> KWfalse
-- On KWfalse reduce production atomic_expr -> KWfalse
-- On KWensure reduce production atomic_expr -> KWfalse
-- On KWend reduce production atomic_expr -> KWfalse
-- On KWelseif reduce production atomic_expr -> KWfalse
-- On KWelse reduce production atomic_expr -> KWfalse
-- On KWdo reduce production atomic_expr -> KWfalse
-- On KWdeferred reduce production atomic_expr -> KWfalse
-- On KWclass reduce production atomic_expr -> KWfalse
-- On KWcase reduce production atomic_expr -> KWfalse
-- On KWas reduce production atomic_expr -> KWfalse
-- On KWand reduce production atomic_expr -> KWfalse
-- On KWall reduce production atomic_expr -> KWfalse
-- On GT reduce production atomic_expr -> KWfalse
-- On GE reduce production atomic_expr -> KWfalse
-- On EQ reduce production atomic_expr -> KWfalse
-- On DOT reduce production atomic_expr -> KWfalse
-- On DIVIDE reduce production atomic_expr -> KWfalse
-- On DCOLON reduce production atomic_expr -> KWfalse
-- On DBAR reduce production atomic_expr -> KWfalse
-- On DARROW reduce production atomic_expr -> KWfalse
-- On COMMA reduce production atomic_expr -> KWfalse
-- On COLON reduce production atomic_expr -> KWfalse
-- On CARET reduce production atomic_expr -> KWfalse
-- On BAR reduce production atomic_expr -> KWfalse

State 129:
expr -> KWall . formal_arguments opt_nl expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
-- On LPAREN shift to state 92
-- On formal_arguments shift to state 130

State 130:
expr -> KWall formal_arguments . opt_nl expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
-- On SEMICOL shift to state 105
-- On NEWLINE shift to state 106
-- On opt_nl shift to state 131
-- On USCORE reduce production opt_nl -> 
-- On TIMES reduce production opt_nl -> 
-- On PLUS reduce production opt_nl -> 
-- On NUMBER reduce production opt_nl -> 
-- On MINUS reduce production opt_nl -> 
-- On LPAREN reduce production opt_nl -> 
-- On LIDENTIFIER reduce production opt_nl -> 
-- On LBRACKET reduce production opt_nl -> 
-- On LBRACE reduce production opt_nl -> 
-- On KWtrue reduce production opt_nl -> 
-- On KWsome reduce production opt_nl -> 
-- On KWold reduce production opt_nl -> 
-- On KWnot reduce production opt_nl -> 
-- On KWinspect reduce production opt_nl -> 
-- On KWif reduce production opt_nl -> 
-- On KWfalse reduce production opt_nl -> 
-- On KWall reduce production opt_nl -> 
-- On KWagent reduce production opt_nl -> 
-- On KWResult reduce production opt_nl -> 

State 131:
expr -> KWall formal_arguments opt_nl . expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
-- On USCORE shift to state 109
-- On TIMES shift to state 110
-- On PLUS shift to state 111
-- On NUMBER shift to state 112
-- On MINUS shift to state 113
-- On LPAREN shift to state 114
-- On LIDENTIFIER shift to state 116
-- On LBRACKET shift to state 118
-- On LBRACE shift to state 119
-- On KWtrue shift to state 120
-- On KWsome shift to state 121
-- On KWold shift to state 124
-- On KWnot shift to state 125
-- On KWinspect shift to state 126
-- On KWif shift to state 127
-- On KWfalse shift to state 128
-- On KWall shift to state 129
-- On KWagent shift to state 132
-- On KWResult shift to state 144
-- On operator_expr shift to state 145
-- On expr shift to state 246
-- On exp_inspect shift to state 176
-- On exp_conditional shift to state 177
-- On dotted_id_list shift to state 178
-- On atomic_expr shift to state 187

State 132:
expr -> KWagent . formal_arguments_info return_type_opt optsemi require_block_opt ensure_block KWend [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
-- On LPAREN shift to state 92
-- On formal_arguments_info shift to state 133
-- On formal_arguments shift to state 245

State 133:
expr -> KWagent formal_arguments_info . return_type_opt optsemi require_block_opt ensure_block KWend [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
-- On EXCLAM shift to state 134
-- On COLON shift to state 137
-- On return_type_opt shift to state 141
-- On return_type shift to state 244
-- On SEMICOL reduce production return_type_opt -> 
-- On KWrequire reduce production return_type_opt -> 
-- On KWensure reduce production return_type_opt -> 

State 134:
return_type -> EXCLAM . COLON elem_type [ UIDENTIFIER SEMICOL NUMBER LPAREN LIDENTIFIER KWtrue KWrequire KWproof KWnote KWlocal KWimmutable KWfalse KWensure KWdo KWdeferred KWclass KWcase KWall EQ ARROW # ]
-- On COLON shift to state 135

State 135:
return_type -> EXCLAM COLON . elem_type [ UIDENTIFIER SEMICOL NUMBER LPAREN LIDENTIFIER KWtrue KWrequire KWproof KWnote KWlocal KWimmutable KWfalse KWensure KWdo KWdeferred KWclass KWcase KWall EQ ARROW # ]
-- On UIDENTIFIER shift to state 20
-- On LPAREN shift to state 22
-- On LIDENTIFIER shift to state 2
-- On LBRACKET shift to state 23
-- On tuple_type shift to state 24
-- On star_type shift to state 25
-- On simple_type shift to state 26
-- On qmark_type shift to state 27
-- On path shift to state 28
-- On list_type shift to state 31
-- On elem_type shift to state 136
-- On dotted_id_list shift to state 36

State 136:
qmark_type -> elem_type . QMARK [ UIDENTIFIER TIMES SEMICOL QMARK NUMBER LPAREN LIDENTIFIER KWtrue KWrequire KWproof KWnote KWlocal KWimmutable KWfalse KWensure KWdo KWdeferred KWclass KWcase KWall EQ ARROW # ]
return_type -> EXCLAM COLON elem_type . [ UIDENTIFIER SEMICOL NUMBER LPAREN LIDENTIFIER KWtrue KWrequire KWproof KWnote KWlocal KWimmutable KWfalse KWensure KWdo KWdeferred KWclass KWcase KWall EQ ARROW # ]
star_type -> elem_type . TIMES [ UIDENTIFIER TIMES SEMICOL QMARK NUMBER LPAREN LIDENTIFIER KWtrue KWrequire KWproof KWnote KWlocal KWimmutable KWfalse KWensure KWdo KWdeferred KWclass KWcase KWall EQ ARROW # ]
-- On TIMES shift to state 33
-- On QMARK shift to state 35
-- On UIDENTIFIER reduce production return_type -> EXCLAM COLON elem_type
-- On SEMICOL reduce production return_type -> EXCLAM COLON elem_type
-- On NUMBER reduce production return_type -> EXCLAM COLON elem_type
-- On LPAREN reduce production return_type -> EXCLAM COLON elem_type
-- On LIDENTIFIER reduce production return_type -> EXCLAM COLON elem_type
-- On KWtrue reduce production return_type -> EXCLAM COLON elem_type
-- On KWrequire reduce production return_type -> EXCLAM COLON elem_type
-- On KWproof reduce production return_type -> EXCLAM COLON elem_type
-- On KWnote reduce production return_type -> EXCLAM COLON elem_type
-- On KWlocal reduce production return_type -> EXCLAM COLON elem_type
-- On KWimmutable reduce production return_type -> EXCLAM COLON elem_type
-- On KWfalse reduce production return_type -> EXCLAM COLON elem_type
-- On KWensure reduce production return_type -> EXCLAM COLON elem_type
-- On KWdo reduce production return_type -> EXCLAM COLON elem_type
-- On KWdeferred reduce production return_type -> EXCLAM COLON elem_type
-- On KWclass reduce production return_type -> EXCLAM COLON elem_type
-- On KWcase reduce production return_type -> EXCLAM COLON elem_type
-- On KWall reduce production return_type -> EXCLAM COLON elem_type
-- On EQ reduce production return_type -> EXCLAM COLON elem_type
-- On ARROW reduce production return_type -> EXCLAM COLON elem_type

State 137:
return_type -> COLON . elem_type [ UIDENTIFIER SEMICOL NUMBER LPAREN LIDENTIFIER KWtrue KWrequire KWproof KWnote KWlocal KWimmutable KWfalse KWensure KWdo KWdeferred KWclass KWcase KWall EQ ARROW # ]
return_type -> COLON . KWghost elem_type [ UIDENTIFIER SEMICOL NUMBER LPAREN LIDENTIFIER KWtrue KWrequire KWproof KWnote KWlocal KWimmutable KWfalse KWensure KWdo KWdeferred KWclass KWcase KWall EQ ARROW # ]
-- On UIDENTIFIER shift to state 20
-- On LPAREN shift to state 22
-- On LIDENTIFIER shift to state 2
-- On LBRACKET shift to state 23
-- On KWghost shift to state 138
-- On tuple_type shift to state 24
-- On star_type shift to state 25
-- On simple_type shift to state 26
-- On qmark_type shift to state 27
-- On path shift to state 28
-- On list_type shift to state 31
-- On elem_type shift to state 140
-- On dotted_id_list shift to state 36

State 138:
return_type -> COLON KWghost . elem_type [ UIDENTIFIER SEMICOL NUMBER LPAREN LIDENTIFIER KWtrue KWrequire KWproof KWnote KWlocal KWimmutable KWfalse KWensure KWdo KWdeferred KWclass KWcase KWall EQ ARROW # ]
-- On UIDENTIFIER shift to state 20
-- On LPAREN shift to state 22
-- On LIDENTIFIER shift to state 2
-- On LBRACKET shift to state 23
-- On tuple_type shift to state 24
-- On star_type shift to state 25
-- On simple_type shift to state 26
-- On qmark_type shift to state 27
-- On path shift to state 28
-- On list_type shift to state 31
-- On elem_type shift to state 139
-- On dotted_id_list shift to state 36

State 139:
qmark_type -> elem_type . QMARK [ UIDENTIFIER TIMES SEMICOL QMARK NUMBER LPAREN LIDENTIFIER KWtrue KWrequire KWproof KWnote KWlocal KWimmutable KWfalse KWensure KWdo KWdeferred KWclass KWcase KWall EQ ARROW # ]
return_type -> COLON KWghost elem_type . [ UIDENTIFIER SEMICOL NUMBER LPAREN LIDENTIFIER KWtrue KWrequire KWproof KWnote KWlocal KWimmutable KWfalse KWensure KWdo KWdeferred KWclass KWcase KWall EQ ARROW # ]
star_type -> elem_type . TIMES [ UIDENTIFIER TIMES SEMICOL QMARK NUMBER LPAREN LIDENTIFIER KWtrue KWrequire KWproof KWnote KWlocal KWimmutable KWfalse KWensure KWdo KWdeferred KWclass KWcase KWall EQ ARROW # ]
-- On TIMES shift to state 33
-- On QMARK shift to state 35
-- On UIDENTIFIER reduce production return_type -> COLON KWghost elem_type
-- On SEMICOL reduce production return_type -> COLON KWghost elem_type
-- On NUMBER reduce production return_type -> COLON KWghost elem_type
-- On LPAREN reduce production return_type -> COLON KWghost elem_type
-- On LIDENTIFIER reduce production return_type -> COLON KWghost elem_type
-- On KWtrue reduce production return_type -> COLON KWghost elem_type
-- On KWrequire reduce production return_type -> COLON KWghost elem_type
-- On KWproof reduce production return_type -> COLON KWghost elem_type
-- On KWnote reduce production return_type -> COLON KWghost elem_type
-- On KWlocal reduce production return_type -> COLON KWghost elem_type
-- On KWimmutable reduce production return_type -> COLON KWghost elem_type
-- On KWfalse reduce production return_type -> COLON KWghost elem_type
-- On KWensure reduce production return_type -> COLON KWghost elem_type
-- On KWdo reduce production return_type -> COLON KWghost elem_type
-- On KWdeferred reduce production return_type -> COLON KWghost elem_type
-- On KWclass reduce production return_type -> COLON KWghost elem_type
-- On KWcase reduce production return_type -> COLON KWghost elem_type
-- On KWall reduce production return_type -> COLON KWghost elem_type
-- On EQ reduce production return_type -> COLON KWghost elem_type
-- On ARROW reduce production return_type -> COLON KWghost elem_type

State 140:
qmark_type -> elem_type . QMARK [ UIDENTIFIER TIMES SEMICOL QMARK NUMBER LPAREN LIDENTIFIER KWtrue KWrequire KWproof KWnote KWlocal KWimmutable KWfalse KWensure KWdo KWdeferred KWclass KWcase KWall EQ ARROW # ]
return_type -> COLON elem_type . [ UIDENTIFIER SEMICOL NUMBER LPAREN LIDENTIFIER KWtrue KWrequire KWproof KWnote KWlocal KWimmutable KWfalse KWensure KWdo KWdeferred KWclass KWcase KWall EQ ARROW # ]
star_type -> elem_type . TIMES [ UIDENTIFIER TIMES SEMICOL QMARK NUMBER LPAREN LIDENTIFIER KWtrue KWrequire KWproof KWnote KWlocal KWimmutable KWfalse KWensure KWdo KWdeferred KWclass KWcase KWall EQ ARROW # ]
-- On TIMES shift to state 33
-- On QMARK shift to state 35
-- On UIDENTIFIER reduce production return_type -> COLON elem_type
-- On SEMICOL reduce production return_type -> COLON elem_type
-- On NUMBER reduce production return_type -> COLON elem_type
-- On LPAREN reduce production return_type -> COLON elem_type
-- On LIDENTIFIER reduce production return_type -> COLON elem_type
-- On KWtrue reduce production return_type -> COLON elem_type
-- On KWrequire reduce production return_type -> COLON elem_type
-- On KWproof reduce production return_type -> COLON elem_type
-- On KWnote reduce production return_type -> COLON elem_type
-- On KWlocal reduce production return_type -> COLON elem_type
-- On KWimmutable reduce production return_type -> COLON elem_type
-- On KWfalse reduce production return_type -> COLON elem_type
-- On KWensure reduce production return_type -> COLON elem_type
-- On KWdo reduce production return_type -> COLON elem_type
-- On KWdeferred reduce production return_type -> COLON elem_type
-- On KWclass reduce production return_type -> COLON elem_type
-- On KWcase reduce production return_type -> COLON elem_type
-- On KWall reduce production return_type -> COLON elem_type
-- On EQ reduce production return_type -> COLON elem_type
-- On ARROW reduce production return_type -> COLON elem_type

State 141:
expr -> KWagent formal_arguments_info return_type_opt . optsemi require_block_opt ensure_block KWend [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
-- On SEMICOL shift to state 14
-- On optsemi shift to state 142
-- On KWrequire reduce production optsemi -> 
-- On KWensure reduce production optsemi -> 

State 142:
expr -> KWagent formal_arguments_info return_type_opt optsemi . require_block_opt ensure_block KWend [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
-- On KWrequire shift to state 143
-- On require_block_opt shift to state 238
-- On require_block shift to state 243
-- On KWensure reduce production require_block_opt -> 

State 143:
require_block -> KWrequire . compound [ KWproof KWnote KWlocal KWensure KWend KWdo KWdeferred ]
-- On USCORE shift to state 109
-- On TIMES shift to state 110
-- On PLUS shift to state 111
-- On NUMBER shift to state 112
-- On MINUS shift to state 113
-- On LPAREN shift to state 114
-- On LIDENTIFIER shift to state 116
-- On LBRACKET shift to state 118
-- On LBRACE shift to state 119
-- On KWtrue shift to state 120
-- On KWsome shift to state 121
-- On KWold shift to state 124
-- On KWnot shift to state 125
-- On KWinspect shift to state 126
-- On KWif shift to state 127
-- On KWfalse shift to state 128
-- On KWall shift to state 129
-- On KWagent shift to state 132
-- On KWResult shift to state 144
-- On operator_expr shift to state 145
-- On info_expr shift to state 146
-- On expr shift to state 148
-- On exp_inspect shift to state 176
-- On exp_conditional shift to state 177
-- On dotted_id_list shift to state 178
-- On compound_list shift to state 236
-- On compound shift to state 237
-- On atomic_expr shift to state 187

State 144:
atomic_expr -> KWResult . [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
-- On UIDENTIFIER reduce production atomic_expr -> KWResult
-- On TIMES reduce production atomic_expr -> KWResult
-- On SEMICOL reduce production atomic_expr -> KWResult
-- On RPAREN reduce production atomic_expr -> KWResult
-- On RBRACKET reduce production atomic_expr -> KWResult
-- On RBRACE reduce production atomic_expr -> KWResult
-- On PLUS reduce production atomic_expr -> KWResult
-- On NUMBER reduce production atomic_expr -> KWResult
-- On NOTIN reduce production atomic_expr -> KWResult
-- On NEWLINE reduce production atomic_expr -> KWResult
-- On NEQ reduce production atomic_expr -> KWResult
-- On MINUS reduce production atomic_expr -> KWResult
-- On LT reduce production atomic_expr -> KWResult
-- On LPAREN reduce production atomic_expr -> KWResult
-- On LIDENTIFIER reduce production atomic_expr -> KWResult
-- On LE reduce production atomic_expr -> KWResult
-- On LBRACKET reduce production atomic_expr -> KWResult
-- On KWtrue reduce production atomic_expr -> KWResult
-- On KWthen reduce production atomic_expr -> KWResult
-- On KWproof reduce production atomic_expr -> KWResult
-- On KWor reduce production atomic_expr -> KWResult
-- On KWnote reduce production atomic_expr -> KWResult
-- On KWlocal reduce production atomic_expr -> KWResult
-- On KWin reduce production atomic_expr -> KWResult
-- On KWimmutable reduce production atomic_expr -> KWResult
-- On KWfalse reduce production atomic_expr -> KWResult
-- On KWensure reduce production atomic_expr -> KWResult
-- On KWend reduce production atomic_expr -> KWResult
-- On KWelseif reduce production atomic_expr -> KWResult
-- On KWelse reduce production atomic_expr -> KWResult
-- On KWdo reduce production atomic_expr -> KWResult
-- On KWdeferred reduce production atomic_expr -> KWResult
-- On KWclass reduce production atomic_expr -> KWResult
-- On KWcase reduce production atomic_expr -> KWResult
-- On KWas reduce production atomic_expr -> KWResult
-- On KWand reduce production atomic_expr -> KWResult
-- On KWall reduce production atomic_expr -> KWResult
-- On GT reduce production atomic_expr -> KWResult
-- On GE reduce production atomic_expr -> KWResult
-- On EQ reduce production atomic_expr -> KWResult
-- On DOT reduce production atomic_expr -> KWResult
-- On DIVIDE reduce production atomic_expr -> KWResult
-- On DCOLON reduce production atomic_expr -> KWResult
-- On DBAR reduce production atomic_expr -> KWResult
-- On DARROW reduce production atomic_expr -> KWResult
-- On COMMA reduce production atomic_expr -> KWResult
-- On COLON reduce production atomic_expr -> KWResult
-- On CARET reduce production atomic_expr -> KWResult
-- On BAR reduce production atomic_expr -> KWResult

State 145:
expr -> operator_expr . [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
-- On UIDENTIFIER reduce production expr -> operator_expr
-- On TIMES reduce production expr -> operator_expr
-- On SEMICOL reduce production expr -> operator_expr
-- On RPAREN reduce production expr -> operator_expr
-- On RBRACKET reduce production expr -> operator_expr
-- On RBRACE reduce production expr -> operator_expr
-- On PLUS reduce production expr -> operator_expr
-- On NUMBER reduce production expr -> operator_expr
-- On NOTIN reduce production expr -> operator_expr
-- On NEWLINE reduce production expr -> operator_expr
-- On NEQ reduce production expr -> operator_expr
-- On MINUS reduce production expr -> operator_expr
-- On LT reduce production expr -> operator_expr
-- On LPAREN reduce production expr -> operator_expr
-- On LIDENTIFIER reduce production expr -> operator_expr
-- On LE reduce production expr -> operator_expr
-- On LBRACKET reduce production expr -> operator_expr
-- On KWtrue reduce production expr -> operator_expr
-- On KWthen reduce production expr -> operator_expr
-- On KWproof reduce production expr -> operator_expr
-- On KWor reduce production expr -> operator_expr
-- On KWnote reduce production expr -> operator_expr
-- On KWlocal reduce production expr -> operator_expr
-- On KWin reduce production expr -> operator_expr
-- On KWimmutable reduce production expr -> operator_expr
-- On KWfalse reduce production expr -> operator_expr
-- On KWensure reduce production expr -> operator_expr
-- On KWend reduce production expr -> operator_expr
-- On KWelseif reduce production expr -> operator_expr
-- On KWelse reduce production expr -> operator_expr
-- On KWdo reduce production expr -> operator_expr
-- On KWdeferred reduce production expr -> operator_expr
-- On KWclass reduce production expr -> operator_expr
-- On KWcase reduce production expr -> operator_expr
-- On KWas reduce production expr -> operator_expr
-- On KWand reduce production expr -> operator_expr
-- On KWall reduce production expr -> operator_expr
-- On GT reduce production expr -> operator_expr
-- On GE reduce production expr -> operator_expr
-- On EQ reduce production expr -> operator_expr
-- On DOT reduce production expr -> operator_expr
-- On DIVIDE reduce production expr -> operator_expr
-- On DCOLON reduce production expr -> operator_expr
-- On DBAR reduce production expr -> operator_expr
-- On DARROW reduce production expr -> operator_expr
-- On COMMA reduce production expr -> operator_expr
-- On COLON reduce production expr -> operator_expr
-- On CARET reduce production expr -> operator_expr
-- On BAR reduce production expr -> operator_expr

State 146:
compound_list -> info_expr . optsemi [ KWproof KWnote KWlocal KWensure KWend KWdo KWdeferred ]
compound_list -> info_expr . SEMICOL compound_list [ KWproof KWnote KWlocal KWensure KWend KWdo KWdeferred ]
-- On SEMICOL shift to state 147
-- On optsemi shift to state 235
-- On KWproof reduce production optsemi -> 
-- On KWnote reduce production optsemi -> 
-- On KWlocal reduce production optsemi -> 
-- On KWensure reduce production optsemi -> 
-- On KWend reduce production optsemi -> 
-- On KWdo reduce production optsemi -> 
-- On KWdeferred reduce production optsemi -> 

State 147:
compound_list -> info_expr SEMICOL . compound_list [ KWproof KWnote KWlocal KWensure KWend KWdo KWdeferred ]
optsemi -> SEMICOL . [ KWproof KWnote KWlocal KWensure KWend KWdo KWdeferred ]
-- On USCORE shift to state 109
-- On TIMES shift to state 110
-- On PLUS shift to state 111
-- On NUMBER shift to state 112
-- On MINUS shift to state 113
-- On LPAREN shift to state 114
-- On LIDENTIFIER shift to state 116
-- On LBRACKET shift to state 118
-- On LBRACE shift to state 119
-- On KWtrue shift to state 120
-- On KWsome shift to state 121
-- On KWold shift to state 124
-- On KWnot shift to state 125
-- On KWinspect shift to state 126
-- On KWif shift to state 127
-- On KWfalse shift to state 128
-- On KWall shift to state 129
-- On KWagent shift to state 132
-- On KWResult shift to state 144
-- On operator_expr shift to state 145
-- On info_expr shift to state 146
-- On expr shift to state 148
-- On exp_inspect shift to state 176
-- On exp_conditional shift to state 177
-- On dotted_id_list shift to state 178
-- On compound_list shift to state 234
-- On atomic_expr shift to state 187
-- On KWproof reduce production optsemi -> SEMICOL
-- On KWnote reduce production optsemi -> SEMICOL
-- On KWlocal reduce production optsemi -> SEMICOL
-- On KWensure reduce production optsemi -> SEMICOL
-- On KWend reduce production optsemi -> SEMICOL
-- On KWdo reduce production optsemi -> SEMICOL
-- On KWdeferred reduce production optsemi -> SEMICOL

State 148:
expr -> expr . COMMA expr [ UIDENTIFIER TIMES SEMICOL PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
expr -> expr . LPAREN expr RPAREN [ UIDENTIFIER TIMES SEMICOL PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
expr -> expr . LBRACKET expr RBRACKET [ UIDENTIFIER TIMES SEMICOL PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
expr -> expr . DOT LIDENTIFIER [ UIDENTIFIER TIMES SEMICOL PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
expr -> expr . DOT LBRACE expr RBRACE [ UIDENTIFIER TIMES SEMICOL PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
expr -> expr . COLON type_nt [ UIDENTIFIER TIMES SEMICOL PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
info_expr -> expr . [ UIDENTIFIER SEMICOL NUMBER NEWLINE LPAREN LIDENTIFIER KWtrue KWproof KWnote KWlocal KWimmutable KWfalse KWensure KWend KWdo KWdeferred KWclass KWcase KWall # ]
operator_expr -> expr . PLUS expr [ UIDENTIFIER TIMES SEMICOL PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . MINUS expr [ UIDENTIFIER TIMES SEMICOL PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . TIMES expr [ UIDENTIFIER TIMES SEMICOL PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . DIVIDE expr [ UIDENTIFIER TIMES SEMICOL PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . CARET expr [ UIDENTIFIER TIMES SEMICOL PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . KWin expr [ UIDENTIFIER TIMES SEMICOL PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . NOTIN expr [ UIDENTIFIER TIMES SEMICOL PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . EQ expr [ UIDENTIFIER TIMES SEMICOL PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . NEQ expr [ UIDENTIFIER TIMES SEMICOL PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . LT expr [ UIDENTIFIER TIMES SEMICOL PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . LE expr [ UIDENTIFIER TIMES SEMICOL PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . GT expr [ UIDENTIFIER TIMES SEMICOL PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . GE expr [ UIDENTIFIER TIMES SEMICOL PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . KWas expr [ UIDENTIFIER TIMES SEMICOL PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . KWand expr [ UIDENTIFIER TIMES SEMICOL PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . KWor expr [ UIDENTIFIER TIMES SEMICOL PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . DCOLON expr [ UIDENTIFIER TIMES SEMICOL PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . COLON expr [ UIDENTIFIER TIMES SEMICOL PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . BAR expr [ UIDENTIFIER TIMES SEMICOL PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . DBAR expr [ UIDENTIFIER TIMES SEMICOL PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . DARROW expr [ UIDENTIFIER TIMES SEMICOL PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
-- On TIMES shift to state 149
-- On PLUS shift to state 154
-- On NOTIN shift to state 159
-- On NEQ shift to state 168
-- On MINUS shift to state 161
-- On LT shift to state 183
-- On LPAREN shift to state 151
-- On LE shift to state 190
-- On LBRACKET shift to state 156
-- On KWor shift to state 192
-- On KWin shift to state 194
-- On KWas shift to state 196
-- On KWand shift to state 204
-- On GT shift to state 198
-- On GE shift to state 200
-- On EQ shift to state 202
-- On DOT shift to state 163
-- On DIVIDE shift to state 170
-- On DCOLON shift to state 172
-- On DBAR shift to state 185
-- On DARROW shift to state 206
-- On COMMA shift to state 208
-- On COLON shift to state 210
-- On CARET shift to state 174
-- On BAR shift to state 188
-- On UIDENTIFIER reduce production info_expr -> expr
-- On SEMICOL reduce production info_expr -> expr
-- On NUMBER reduce production info_expr -> expr
-- On NEWLINE reduce production info_expr -> expr
-- On LIDENTIFIER reduce production info_expr -> expr
-- On KWtrue reduce production info_expr -> expr
-- On KWproof reduce production info_expr -> expr
-- On KWnote reduce production info_expr -> expr
-- On KWlocal reduce production info_expr -> expr
-- On KWimmutable reduce production info_expr -> expr
-- On KWfalse reduce production info_expr -> expr
-- On KWensure reduce production info_expr -> expr
-- On KWend reduce production info_expr -> expr
-- On KWdo reduce production info_expr -> expr
-- On KWdeferred reduce production info_expr -> expr
-- On KWclass reduce production info_expr -> expr
-- On KWcase reduce production info_expr -> expr
-- On KWall reduce production info_expr -> expr

State 149:
operator_expr -> expr TIMES . expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
-- On USCORE shift to state 109
-- On TIMES shift to state 110
-- On PLUS shift to state 111
-- On NUMBER shift to state 112
-- On MINUS shift to state 113
-- On LPAREN shift to state 114
-- On LIDENTIFIER shift to state 116
-- On LBRACKET shift to state 118
-- On LBRACE shift to state 119
-- On KWtrue shift to state 120
-- On KWsome shift to state 121
-- On KWold shift to state 124
-- On KWnot shift to state 125
-- On KWinspect shift to state 126
-- On KWif shift to state 127
-- On KWfalse shift to state 128
-- On KWall shift to state 129
-- On KWagent shift to state 132
-- On KWResult shift to state 144
-- On operator_expr shift to state 145
-- On expr shift to state 150
-- On exp_inspect shift to state 176
-- On exp_conditional shift to state 177
-- On dotted_id_list shift to state 178
-- On atomic_expr shift to state 187

State 150:
expr -> expr . COMMA expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
expr -> expr . LPAREN expr RPAREN [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
expr -> expr . LBRACKET expr RBRACKET [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
expr -> expr . DOT LIDENTIFIER [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
expr -> expr . DOT LBRACE expr RBRACE [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
expr -> expr . COLON type_nt [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . PLUS expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . MINUS expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . TIMES expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr TIMES expr . [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . DIVIDE expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . CARET expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . KWin expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . NOTIN expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . EQ expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . NEQ expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . LT expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . LE expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . GT expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . GE expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . KWas expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . KWand expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . KWor expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . DCOLON expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . COLON expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . BAR expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . DBAR expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . DARROW expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
-- On LPAREN shift to state 151
-- On LBRACKET shift to state 156
-- On DOT shift to state 163
-- On DCOLON shift to state 172
-- On CARET shift to state 174
-- On UIDENTIFIER reduce production operator_expr -> expr TIMES expr
-- On TIMES reduce production operator_expr -> expr TIMES expr
-- On SEMICOL reduce production operator_expr -> expr TIMES expr
-- On RPAREN reduce production operator_expr -> expr TIMES expr
-- On RBRACKET reduce production operator_expr -> expr TIMES expr
-- On RBRACE reduce production operator_expr -> expr TIMES expr
-- On PLUS reduce production operator_expr -> expr TIMES expr
-- On NUMBER reduce production operator_expr -> expr TIMES expr
-- On NOTIN reduce production operator_expr -> expr TIMES expr
-- On NEWLINE reduce production operator_expr -> expr TIMES expr
-- On NEQ reduce production operator_expr -> expr TIMES expr
-- On MINUS reduce production operator_expr -> expr TIMES expr
-- On LT reduce production operator_expr -> expr TIMES expr
-- On LIDENTIFIER reduce production operator_expr -> expr TIMES expr
-- On LE reduce production operator_expr -> expr TIMES expr
-- On KWtrue reduce production operator_expr -> expr TIMES expr
-- On KWthen reduce production operator_expr -> expr TIMES expr
-- On KWproof reduce production operator_expr -> expr TIMES expr
-- On KWor reduce production operator_expr -> expr TIMES expr
-- On KWnote reduce production operator_expr -> expr TIMES expr
-- On KWlocal reduce production operator_expr -> expr TIMES expr
-- On KWin reduce production operator_expr -> expr TIMES expr
-- On KWimmutable reduce production operator_expr -> expr TIMES expr
-- On KWfalse reduce production operator_expr -> expr TIMES expr
-- On KWensure reduce production operator_expr -> expr TIMES expr
-- On KWend reduce production operator_expr -> expr TIMES expr
-- On KWelseif reduce production operator_expr -> expr TIMES expr
-- On KWelse reduce production operator_expr -> expr TIMES expr
-- On KWdo reduce production operator_expr -> expr TIMES expr
-- On KWdeferred reduce production operator_expr -> expr TIMES expr
-- On KWclass reduce production operator_expr -> expr TIMES expr
-- On KWcase reduce production operator_expr -> expr TIMES expr
-- On KWas reduce production operator_expr -> expr TIMES expr
-- On KWand reduce production operator_expr -> expr TIMES expr
-- On KWall reduce production operator_expr -> expr TIMES expr
-- On GT reduce production operator_expr -> expr TIMES expr
-- On GE reduce production operator_expr -> expr TIMES expr
-- On EQ reduce production operator_expr -> expr TIMES expr
-- On DIVIDE reduce production operator_expr -> expr TIMES expr
-- On DBAR reduce production operator_expr -> expr TIMES expr
-- On DARROW reduce production operator_expr -> expr TIMES expr
-- On COMMA reduce production operator_expr -> expr TIMES expr
-- On COLON reduce production operator_expr -> expr TIMES expr
-- On BAR reduce production operator_expr -> expr TIMES expr

State 151:
expr -> expr LPAREN . expr RPAREN [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
-- On USCORE shift to state 109
-- On TIMES shift to state 110
-- On PLUS shift to state 111
-- On NUMBER shift to state 112
-- On MINUS shift to state 113
-- On LPAREN shift to state 114
-- On LIDENTIFIER shift to state 116
-- On LBRACKET shift to state 118
-- On LBRACE shift to state 119
-- On KWtrue shift to state 120
-- On KWsome shift to state 121
-- On KWold shift to state 124
-- On KWnot shift to state 125
-- On KWinspect shift to state 126
-- On KWif shift to state 127
-- On KWfalse shift to state 128
-- On KWall shift to state 129
-- On KWagent shift to state 132
-- On KWResult shift to state 144
-- On operator_expr shift to state 145
-- On expr shift to state 152
-- On exp_inspect shift to state 176
-- On exp_conditional shift to state 177
-- On dotted_id_list shift to state 178
-- On atomic_expr shift to state 187

State 152:
expr -> expr . COMMA expr [ TIMES RPAREN PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
expr -> expr . LPAREN expr RPAREN [ TIMES RPAREN PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
expr -> expr LPAREN expr . RPAREN [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
expr -> expr . LBRACKET expr RBRACKET [ TIMES RPAREN PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
expr -> expr . DOT LIDENTIFIER [ TIMES RPAREN PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
expr -> expr . DOT LBRACE expr RBRACE [ TIMES RPAREN PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
expr -> expr . COLON type_nt [ TIMES RPAREN PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . PLUS expr [ TIMES RPAREN PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . MINUS expr [ TIMES RPAREN PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . TIMES expr [ TIMES RPAREN PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . DIVIDE expr [ TIMES RPAREN PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . CARET expr [ TIMES RPAREN PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . KWin expr [ TIMES RPAREN PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . NOTIN expr [ TIMES RPAREN PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . EQ expr [ TIMES RPAREN PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . NEQ expr [ TIMES RPAREN PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . LT expr [ TIMES RPAREN PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . LE expr [ TIMES RPAREN PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . GT expr [ TIMES RPAREN PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . GE expr [ TIMES RPAREN PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . KWas expr [ TIMES RPAREN PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . KWand expr [ TIMES RPAREN PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . KWor expr [ TIMES RPAREN PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . DCOLON expr [ TIMES RPAREN PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . COLON expr [ TIMES RPAREN PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . BAR expr [ TIMES RPAREN PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . DBAR expr [ TIMES RPAREN PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . DARROW expr [ TIMES RPAREN PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
-- On TIMES shift to state 149
-- On RPAREN shift to state 153
-- On PLUS shift to state 154
-- On NOTIN shift to state 159
-- On NEQ shift to state 168
-- On MINUS shift to state 161
-- On LT shift to state 183
-- On LPAREN shift to state 151
-- On LE shift to state 190
-- On LBRACKET shift to state 156
-- On KWor shift to state 192
-- On KWin shift to state 194
-- On KWas shift to state 196
-- On KWand shift to state 204
-- On GT shift to state 198
-- On GE shift to state 200
-- On EQ shift to state 202
-- On DOT shift to state 163
-- On DIVIDE shift to state 170
-- On DCOLON shift to state 172
-- On DBAR shift to state 185
-- On DARROW shift to state 206
-- On COMMA shift to state 208
-- On COLON shift to state 210
-- On CARET shift to state 174
-- On BAR shift to state 188

State 153:
expr -> expr LPAREN expr RPAREN . [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
-- On UIDENTIFIER reduce production expr -> expr LPAREN expr RPAREN
-- On TIMES reduce production expr -> expr LPAREN expr RPAREN
-- On SEMICOL reduce production expr -> expr LPAREN expr RPAREN
-- On RPAREN reduce production expr -> expr LPAREN expr RPAREN
-- On RBRACKET reduce production expr -> expr LPAREN expr RPAREN
-- On RBRACE reduce production expr -> expr LPAREN expr RPAREN
-- On PLUS reduce production expr -> expr LPAREN expr RPAREN
-- On NUMBER reduce production expr -> expr LPAREN expr RPAREN
-- On NOTIN reduce production expr -> expr LPAREN expr RPAREN
-- On NEWLINE reduce production expr -> expr LPAREN expr RPAREN
-- On NEQ reduce production expr -> expr LPAREN expr RPAREN
-- On MINUS reduce production expr -> expr LPAREN expr RPAREN
-- On LT reduce production expr -> expr LPAREN expr RPAREN
-- On LPAREN reduce production expr -> expr LPAREN expr RPAREN
-- On LIDENTIFIER reduce production expr -> expr LPAREN expr RPAREN
-- On LE reduce production expr -> expr LPAREN expr RPAREN
-- On LBRACKET reduce production expr -> expr LPAREN expr RPAREN
-- On KWtrue reduce production expr -> expr LPAREN expr RPAREN
-- On KWthen reduce production expr -> expr LPAREN expr RPAREN
-- On KWproof reduce production expr -> expr LPAREN expr RPAREN
-- On KWor reduce production expr -> expr LPAREN expr RPAREN
-- On KWnote reduce production expr -> expr LPAREN expr RPAREN
-- On KWlocal reduce production expr -> expr LPAREN expr RPAREN
-- On KWin reduce production expr -> expr LPAREN expr RPAREN
-- On KWimmutable reduce production expr -> expr LPAREN expr RPAREN
-- On KWfalse reduce production expr -> expr LPAREN expr RPAREN
-- On KWensure reduce production expr -> expr LPAREN expr RPAREN
-- On KWend reduce production expr -> expr LPAREN expr RPAREN
-- On KWelseif reduce production expr -> expr LPAREN expr RPAREN
-- On KWelse reduce production expr -> expr LPAREN expr RPAREN
-- On KWdo reduce production expr -> expr LPAREN expr RPAREN
-- On KWdeferred reduce production expr -> expr LPAREN expr RPAREN
-- On KWclass reduce production expr -> expr LPAREN expr RPAREN
-- On KWcase reduce production expr -> expr LPAREN expr RPAREN
-- On KWas reduce production expr -> expr LPAREN expr RPAREN
-- On KWand reduce production expr -> expr LPAREN expr RPAREN
-- On KWall reduce production expr -> expr LPAREN expr RPAREN
-- On GT reduce production expr -> expr LPAREN expr RPAREN
-- On GE reduce production expr -> expr LPAREN expr RPAREN
-- On EQ reduce production expr -> expr LPAREN expr RPAREN
-- On DOT reduce production expr -> expr LPAREN expr RPAREN
-- On DIVIDE reduce production expr -> expr LPAREN expr RPAREN
-- On DCOLON reduce production expr -> expr LPAREN expr RPAREN
-- On DBAR reduce production expr -> expr LPAREN expr RPAREN
-- On DARROW reduce production expr -> expr LPAREN expr RPAREN
-- On COMMA reduce production expr -> expr LPAREN expr RPAREN
-- On COLON reduce production expr -> expr LPAREN expr RPAREN
-- On CARET reduce production expr -> expr LPAREN expr RPAREN
-- On BAR reduce production expr -> expr LPAREN expr RPAREN

State 154:
operator_expr -> expr PLUS . expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
-- On USCORE shift to state 109
-- On TIMES shift to state 110
-- On PLUS shift to state 111
-- On NUMBER shift to state 112
-- On MINUS shift to state 113
-- On LPAREN shift to state 114
-- On LIDENTIFIER shift to state 116
-- On LBRACKET shift to state 118
-- On LBRACE shift to state 119
-- On KWtrue shift to state 120
-- On KWsome shift to state 121
-- On KWold shift to state 124
-- On KWnot shift to state 125
-- On KWinspect shift to state 126
-- On KWif shift to state 127
-- On KWfalse shift to state 128
-- On KWall shift to state 129
-- On KWagent shift to state 132
-- On KWResult shift to state 144
-- On operator_expr shift to state 145
-- On expr shift to state 155
-- On exp_inspect shift to state 176
-- On exp_conditional shift to state 177
-- On dotted_id_list shift to state 178
-- On atomic_expr shift to state 187

State 155:
expr -> expr . COMMA expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
expr -> expr . LPAREN expr RPAREN [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
expr -> expr . LBRACKET expr RBRACKET [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
expr -> expr . DOT LIDENTIFIER [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
expr -> expr . DOT LBRACE expr RBRACE [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
expr -> expr . COLON type_nt [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . PLUS expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr PLUS expr . [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . MINUS expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . TIMES expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . DIVIDE expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . CARET expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . KWin expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . NOTIN expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . EQ expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . NEQ expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . LT expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . LE expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . GT expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . GE expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . KWas expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . KWand expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . KWor expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . DCOLON expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . COLON expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . BAR expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . DBAR expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . DARROW expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
-- On TIMES shift to state 149
-- On LPAREN shift to state 151
-- On LBRACKET shift to state 156
-- On DOT shift to state 163
-- On DIVIDE shift to state 170
-- On DCOLON shift to state 172
-- On CARET shift to state 174
-- On UIDENTIFIER reduce production operator_expr -> expr PLUS expr
-- On SEMICOL reduce production operator_expr -> expr PLUS expr
-- On RPAREN reduce production operator_expr -> expr PLUS expr
-- On RBRACKET reduce production operator_expr -> expr PLUS expr
-- On RBRACE reduce production operator_expr -> expr PLUS expr
-- On PLUS reduce production operator_expr -> expr PLUS expr
-- On NUMBER reduce production operator_expr -> expr PLUS expr
-- On NOTIN reduce production operator_expr -> expr PLUS expr
-- On NEWLINE reduce production operator_expr -> expr PLUS expr
-- On NEQ reduce production operator_expr -> expr PLUS expr
-- On MINUS reduce production operator_expr -> expr PLUS expr
-- On LT reduce production operator_expr -> expr PLUS expr
-- On LIDENTIFIER reduce production operator_expr -> expr PLUS expr
-- On LE reduce production operator_expr -> expr PLUS expr
-- On KWtrue reduce production operator_expr -> expr PLUS expr
-- On KWthen reduce production operator_expr -> expr PLUS expr
-- On KWproof reduce production operator_expr -> expr PLUS expr
-- On KWor reduce production operator_expr -> expr PLUS expr
-- On KWnote reduce production operator_expr -> expr PLUS expr
-- On KWlocal reduce production operator_expr -> expr PLUS expr
-- On KWin reduce production operator_expr -> expr PLUS expr
-- On KWimmutable reduce production operator_expr -> expr PLUS expr
-- On KWfalse reduce production operator_expr -> expr PLUS expr
-- On KWensure reduce production operator_expr -> expr PLUS expr
-- On KWend reduce production operator_expr -> expr PLUS expr
-- On KWelseif reduce production operator_expr -> expr PLUS expr
-- On KWelse reduce production operator_expr -> expr PLUS expr
-- On KWdo reduce production operator_expr -> expr PLUS expr
-- On KWdeferred reduce production operator_expr -> expr PLUS expr
-- On KWclass reduce production operator_expr -> expr PLUS expr
-- On KWcase reduce production operator_expr -> expr PLUS expr
-- On KWas reduce production operator_expr -> expr PLUS expr
-- On KWand reduce production operator_expr -> expr PLUS expr
-- On KWall reduce production operator_expr -> expr PLUS expr
-- On GT reduce production operator_expr -> expr PLUS expr
-- On GE reduce production operator_expr -> expr PLUS expr
-- On EQ reduce production operator_expr -> expr PLUS expr
-- On DBAR reduce production operator_expr -> expr PLUS expr
-- On DARROW reduce production operator_expr -> expr PLUS expr
-- On COMMA reduce production operator_expr -> expr PLUS expr
-- On COLON reduce production operator_expr -> expr PLUS expr
-- On BAR reduce production operator_expr -> expr PLUS expr

State 156:
expr -> expr LBRACKET . expr RBRACKET [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
-- On USCORE shift to state 109
-- On TIMES shift to state 110
-- On PLUS shift to state 111
-- On NUMBER shift to state 112
-- On MINUS shift to state 113
-- On LPAREN shift to state 114
-- On LIDENTIFIER shift to state 116
-- On LBRACKET shift to state 118
-- On LBRACE shift to state 119
-- On KWtrue shift to state 120
-- On KWsome shift to state 121
-- On KWold shift to state 124
-- On KWnot shift to state 125
-- On KWinspect shift to state 126
-- On KWif shift to state 127
-- On KWfalse shift to state 128
-- On KWall shift to state 129
-- On KWagent shift to state 132
-- On KWResult shift to state 144
-- On operator_expr shift to state 145
-- On expr shift to state 157
-- On exp_inspect shift to state 176
-- On exp_conditional shift to state 177
-- On dotted_id_list shift to state 178
-- On atomic_expr shift to state 187

State 157:
expr -> expr . COMMA expr [ TIMES RBRACKET PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
expr -> expr . LPAREN expr RPAREN [ TIMES RBRACKET PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
expr -> expr . LBRACKET expr RBRACKET [ TIMES RBRACKET PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
expr -> expr LBRACKET expr . RBRACKET [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
expr -> expr . DOT LIDENTIFIER [ TIMES RBRACKET PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
expr -> expr . DOT LBRACE expr RBRACE [ TIMES RBRACKET PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
expr -> expr . COLON type_nt [ TIMES RBRACKET PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . PLUS expr [ TIMES RBRACKET PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . MINUS expr [ TIMES RBRACKET PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . TIMES expr [ TIMES RBRACKET PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . DIVIDE expr [ TIMES RBRACKET PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . CARET expr [ TIMES RBRACKET PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . KWin expr [ TIMES RBRACKET PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . NOTIN expr [ TIMES RBRACKET PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . EQ expr [ TIMES RBRACKET PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . NEQ expr [ TIMES RBRACKET PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . LT expr [ TIMES RBRACKET PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . LE expr [ TIMES RBRACKET PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . GT expr [ TIMES RBRACKET PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . GE expr [ TIMES RBRACKET PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . KWas expr [ TIMES RBRACKET PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . KWand expr [ TIMES RBRACKET PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . KWor expr [ TIMES RBRACKET PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . DCOLON expr [ TIMES RBRACKET PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . COLON expr [ TIMES RBRACKET PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . BAR expr [ TIMES RBRACKET PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . DBAR expr [ TIMES RBRACKET PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . DARROW expr [ TIMES RBRACKET PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
-- On TIMES shift to state 149
-- On RBRACKET shift to state 158
-- On PLUS shift to state 154
-- On NOTIN shift to state 159
-- On NEQ shift to state 168
-- On MINUS shift to state 161
-- On LT shift to state 183
-- On LPAREN shift to state 151
-- On LE shift to state 190
-- On LBRACKET shift to state 156
-- On KWor shift to state 192
-- On KWin shift to state 194
-- On KWas shift to state 196
-- On KWand shift to state 204
-- On GT shift to state 198
-- On GE shift to state 200
-- On EQ shift to state 202
-- On DOT shift to state 163
-- On DIVIDE shift to state 170
-- On DCOLON shift to state 172
-- On DBAR shift to state 185
-- On DARROW shift to state 206
-- On COMMA shift to state 208
-- On COLON shift to state 210
-- On CARET shift to state 174
-- On BAR shift to state 188

State 158:
expr -> expr LBRACKET expr RBRACKET . [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
-- On UIDENTIFIER reduce production expr -> expr LBRACKET expr RBRACKET
-- On TIMES reduce production expr -> expr LBRACKET expr RBRACKET
-- On SEMICOL reduce production expr -> expr LBRACKET expr RBRACKET
-- On RPAREN reduce production expr -> expr LBRACKET expr RBRACKET
-- On RBRACKET reduce production expr -> expr LBRACKET expr RBRACKET
-- On RBRACE reduce production expr -> expr LBRACKET expr RBRACKET
-- On PLUS reduce production expr -> expr LBRACKET expr RBRACKET
-- On NUMBER reduce production expr -> expr LBRACKET expr RBRACKET
-- On NOTIN reduce production expr -> expr LBRACKET expr RBRACKET
-- On NEWLINE reduce production expr -> expr LBRACKET expr RBRACKET
-- On NEQ reduce production expr -> expr LBRACKET expr RBRACKET
-- On MINUS reduce production expr -> expr LBRACKET expr RBRACKET
-- On LT reduce production expr -> expr LBRACKET expr RBRACKET
-- On LPAREN reduce production expr -> expr LBRACKET expr RBRACKET
-- On LIDENTIFIER reduce production expr -> expr LBRACKET expr RBRACKET
-- On LE reduce production expr -> expr LBRACKET expr RBRACKET
-- On LBRACKET reduce production expr -> expr LBRACKET expr RBRACKET
-- On KWtrue reduce production expr -> expr LBRACKET expr RBRACKET
-- On KWthen reduce production expr -> expr LBRACKET expr RBRACKET
-- On KWproof reduce production expr -> expr LBRACKET expr RBRACKET
-- On KWor reduce production expr -> expr LBRACKET expr RBRACKET
-- On KWnote reduce production expr -> expr LBRACKET expr RBRACKET
-- On KWlocal reduce production expr -> expr LBRACKET expr RBRACKET
-- On KWin reduce production expr -> expr LBRACKET expr RBRACKET
-- On KWimmutable reduce production expr -> expr LBRACKET expr RBRACKET
-- On KWfalse reduce production expr -> expr LBRACKET expr RBRACKET
-- On KWensure reduce production expr -> expr LBRACKET expr RBRACKET
-- On KWend reduce production expr -> expr LBRACKET expr RBRACKET
-- On KWelseif reduce production expr -> expr LBRACKET expr RBRACKET
-- On KWelse reduce production expr -> expr LBRACKET expr RBRACKET
-- On KWdo reduce production expr -> expr LBRACKET expr RBRACKET
-- On KWdeferred reduce production expr -> expr LBRACKET expr RBRACKET
-- On KWclass reduce production expr -> expr LBRACKET expr RBRACKET
-- On KWcase reduce production expr -> expr LBRACKET expr RBRACKET
-- On KWas reduce production expr -> expr LBRACKET expr RBRACKET
-- On KWand reduce production expr -> expr LBRACKET expr RBRACKET
-- On KWall reduce production expr -> expr LBRACKET expr RBRACKET
-- On GT reduce production expr -> expr LBRACKET expr RBRACKET
-- On GE reduce production expr -> expr LBRACKET expr RBRACKET
-- On EQ reduce production expr -> expr LBRACKET expr RBRACKET
-- On DOT reduce production expr -> expr LBRACKET expr RBRACKET
-- On DIVIDE reduce production expr -> expr LBRACKET expr RBRACKET
-- On DCOLON reduce production expr -> expr LBRACKET expr RBRACKET
-- On DBAR reduce production expr -> expr LBRACKET expr RBRACKET
-- On DARROW reduce production expr -> expr LBRACKET expr RBRACKET
-- On COMMA reduce production expr -> expr LBRACKET expr RBRACKET
-- On COLON reduce production expr -> expr LBRACKET expr RBRACKET
-- On CARET reduce production expr -> expr LBRACKET expr RBRACKET
-- On BAR reduce production expr -> expr LBRACKET expr RBRACKET

State 159:
operator_expr -> expr NOTIN . expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
-- On USCORE shift to state 109
-- On TIMES shift to state 110
-- On PLUS shift to state 111
-- On NUMBER shift to state 112
-- On MINUS shift to state 113
-- On LPAREN shift to state 114
-- On LIDENTIFIER shift to state 116
-- On LBRACKET shift to state 118
-- On LBRACE shift to state 119
-- On KWtrue shift to state 120
-- On KWsome shift to state 121
-- On KWold shift to state 124
-- On KWnot shift to state 125
-- On KWinspect shift to state 126
-- On KWif shift to state 127
-- On KWfalse shift to state 128
-- On KWall shift to state 129
-- On KWagent shift to state 132
-- On KWResult shift to state 144
-- On operator_expr shift to state 145
-- On expr shift to state 160
-- On exp_inspect shift to state 176
-- On exp_conditional shift to state 177
-- On dotted_id_list shift to state 178
-- On atomic_expr shift to state 187

State 160:
expr -> expr . COMMA expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
expr -> expr . LPAREN expr RPAREN [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
expr -> expr . LBRACKET expr RBRACKET [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
expr -> expr . DOT LIDENTIFIER [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
expr -> expr . DOT LBRACE expr RBRACE [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
expr -> expr . COLON type_nt [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . PLUS expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . MINUS expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . TIMES expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . DIVIDE expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . CARET expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . KWin expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . NOTIN expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr NOTIN expr . [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . EQ expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . NEQ expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . LT expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . LE expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . GT expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . GE expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . KWas expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . KWand expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . KWor expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . DCOLON expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . COLON expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . BAR expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . DBAR expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . DARROW expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
-- On TIMES shift to state 149
-- On PLUS shift to state 154
-- On MINUS shift to state 161
-- On LPAREN shift to state 151
-- On LBRACKET shift to state 156
-- On DOT shift to state 163
-- On DIVIDE shift to state 170
-- On DCOLON shift to state 172
-- On DBAR shift to state 185
-- On CARET shift to state 174
-- On BAR shift to state 188
-- On UIDENTIFIER reduce production operator_expr -> expr NOTIN expr
-- On SEMICOL reduce production operator_expr -> expr NOTIN expr
-- On RPAREN reduce production operator_expr -> expr NOTIN expr
-- On RBRACKET reduce production operator_expr -> expr NOTIN expr
-- On RBRACE reduce production operator_expr -> expr NOTIN expr
-- On NUMBER reduce production operator_expr -> expr NOTIN expr
-- On NEWLINE reduce production operator_expr -> expr NOTIN expr
-- On LIDENTIFIER reduce production operator_expr -> expr NOTIN expr
-- On KWtrue reduce production operator_expr -> expr NOTIN expr
-- On KWthen reduce production operator_expr -> expr NOTIN expr
-- On KWproof reduce production operator_expr -> expr NOTIN expr
-- On KWor reduce production operator_expr -> expr NOTIN expr
-- On KWnote reduce production operator_expr -> expr NOTIN expr
-- On KWlocal reduce production operator_expr -> expr NOTIN expr
-- On KWimmutable reduce production operator_expr -> expr NOTIN expr
-- On KWfalse reduce production operator_expr -> expr NOTIN expr
-- On KWensure reduce production operator_expr -> expr NOTIN expr
-- On KWend reduce production operator_expr -> expr NOTIN expr
-- On KWelseif reduce production operator_expr -> expr NOTIN expr
-- On KWelse reduce production operator_expr -> expr NOTIN expr
-- On KWdo reduce production operator_expr -> expr NOTIN expr
-- On KWdeferred reduce production operator_expr -> expr NOTIN expr
-- On KWclass reduce production operator_expr -> expr NOTIN expr
-- On KWcase reduce production operator_expr -> expr NOTIN expr
-- On KWand reduce production operator_expr -> expr NOTIN expr
-- On KWall reduce production operator_expr -> expr NOTIN expr
-- On DARROW reduce production operator_expr -> expr NOTIN expr
-- On COMMA reduce production operator_expr -> expr NOTIN expr
-- On COLON reduce production operator_expr -> expr NOTIN expr

State 161:
operator_expr -> expr MINUS . expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
-- On USCORE shift to state 109
-- On TIMES shift to state 110
-- On PLUS shift to state 111
-- On NUMBER shift to state 112
-- On MINUS shift to state 113
-- On LPAREN shift to state 114
-- On LIDENTIFIER shift to state 116
-- On LBRACKET shift to state 118
-- On LBRACE shift to state 119
-- On KWtrue shift to state 120
-- On KWsome shift to state 121
-- On KWold shift to state 124
-- On KWnot shift to state 125
-- On KWinspect shift to state 126
-- On KWif shift to state 127
-- On KWfalse shift to state 128
-- On KWall shift to state 129
-- On KWagent shift to state 132
-- On KWResult shift to state 144
-- On operator_expr shift to state 145
-- On expr shift to state 162
-- On exp_inspect shift to state 176
-- On exp_conditional shift to state 177
-- On dotted_id_list shift to state 178
-- On atomic_expr shift to state 187

State 162:
expr -> expr . COMMA expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
expr -> expr . LPAREN expr RPAREN [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
expr -> expr . LBRACKET expr RBRACKET [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
expr -> expr . DOT LIDENTIFIER [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
expr -> expr . DOT LBRACE expr RBRACE [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
expr -> expr . COLON type_nt [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . PLUS expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . MINUS expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr MINUS expr . [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . TIMES expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . DIVIDE expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . CARET expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . KWin expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . NOTIN expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . EQ expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . NEQ expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . LT expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . LE expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . GT expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . GE expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . KWas expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . KWand expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . KWor expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . DCOLON expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . COLON expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . BAR expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . DBAR expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . DARROW expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
-- On TIMES shift to state 149
-- On LPAREN shift to state 151
-- On LBRACKET shift to state 156
-- On DOT shift to state 163
-- On DIVIDE shift to state 170
-- On DCOLON shift to state 172
-- On CARET shift to state 174
-- On UIDENTIFIER reduce production operator_expr -> expr MINUS expr
-- On SEMICOL reduce production operator_expr -> expr MINUS expr
-- On RPAREN reduce production operator_expr -> expr MINUS expr
-- On RBRACKET reduce production operator_expr -> expr MINUS expr
-- On RBRACE reduce production operator_expr -> expr MINUS expr
-- On PLUS reduce production operator_expr -> expr MINUS expr
-- On NUMBER reduce production operator_expr -> expr MINUS expr
-- On NOTIN reduce production operator_expr -> expr MINUS expr
-- On NEWLINE reduce production operator_expr -> expr MINUS expr
-- On NEQ reduce production operator_expr -> expr MINUS expr
-- On MINUS reduce production operator_expr -> expr MINUS expr
-- On LT reduce production operator_expr -> expr MINUS expr
-- On LIDENTIFIER reduce production operator_expr -> expr MINUS expr
-- On LE reduce production operator_expr -> expr MINUS expr
-- On KWtrue reduce production operator_expr -> expr MINUS expr
-- On KWthen reduce production operator_expr -> expr MINUS expr
-- On KWproof reduce production operator_expr -> expr MINUS expr
-- On KWor reduce production operator_expr -> expr MINUS expr
-- On KWnote reduce production operator_expr -> expr MINUS expr
-- On KWlocal reduce production operator_expr -> expr MINUS expr
-- On KWin reduce production operator_expr -> expr MINUS expr
-- On KWimmutable reduce production operator_expr -> expr MINUS expr
-- On KWfalse reduce production operator_expr -> expr MINUS expr
-- On KWensure reduce production operator_expr -> expr MINUS expr
-- On KWend reduce production operator_expr -> expr MINUS expr
-- On KWelseif reduce production operator_expr -> expr MINUS expr
-- On KWelse reduce production operator_expr -> expr MINUS expr
-- On KWdo reduce production operator_expr -> expr MINUS expr
-- On KWdeferred reduce production operator_expr -> expr MINUS expr
-- On KWclass reduce production operator_expr -> expr MINUS expr
-- On KWcase reduce production operator_expr -> expr MINUS expr
-- On KWas reduce production operator_expr -> expr MINUS expr
-- On KWand reduce production operator_expr -> expr MINUS expr
-- On KWall reduce production operator_expr -> expr MINUS expr
-- On GT reduce production operator_expr -> expr MINUS expr
-- On GE reduce production operator_expr -> expr MINUS expr
-- On EQ reduce production operator_expr -> expr MINUS expr
-- On DBAR reduce production operator_expr -> expr MINUS expr
-- On DARROW reduce production operator_expr -> expr MINUS expr
-- On COMMA reduce production operator_expr -> expr MINUS expr
-- On COLON reduce production operator_expr -> expr MINUS expr
-- On BAR reduce production operator_expr -> expr MINUS expr

State 163:
expr -> expr DOT . LIDENTIFIER [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
expr -> expr DOT . LBRACE expr RBRACE [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
-- On LIDENTIFIER shift to state 164
-- On LBRACE shift to state 165

State 164:
expr -> expr DOT LIDENTIFIER . [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
-- On UIDENTIFIER reduce production expr -> expr DOT LIDENTIFIER
-- On TIMES reduce production expr -> expr DOT LIDENTIFIER
-- On SEMICOL reduce production expr -> expr DOT LIDENTIFIER
-- On RPAREN reduce production expr -> expr DOT LIDENTIFIER
-- On RBRACKET reduce production expr -> expr DOT LIDENTIFIER
-- On RBRACE reduce production expr -> expr DOT LIDENTIFIER
-- On PLUS reduce production expr -> expr DOT LIDENTIFIER
-- On NUMBER reduce production expr -> expr DOT LIDENTIFIER
-- On NOTIN reduce production expr -> expr DOT LIDENTIFIER
-- On NEWLINE reduce production expr -> expr DOT LIDENTIFIER
-- On NEQ reduce production expr -> expr DOT LIDENTIFIER
-- On MINUS reduce production expr -> expr DOT LIDENTIFIER
-- On LT reduce production expr -> expr DOT LIDENTIFIER
-- On LPAREN reduce production expr -> expr DOT LIDENTIFIER
-- On LIDENTIFIER reduce production expr -> expr DOT LIDENTIFIER
-- On LE reduce production expr -> expr DOT LIDENTIFIER
-- On LBRACKET reduce production expr -> expr DOT LIDENTIFIER
-- On KWtrue reduce production expr -> expr DOT LIDENTIFIER
-- On KWthen reduce production expr -> expr DOT LIDENTIFIER
-- On KWproof reduce production expr -> expr DOT LIDENTIFIER
-- On KWor reduce production expr -> expr DOT LIDENTIFIER
-- On KWnote reduce production expr -> expr DOT LIDENTIFIER
-- On KWlocal reduce production expr -> expr DOT LIDENTIFIER
-- On KWin reduce production expr -> expr DOT LIDENTIFIER
-- On KWimmutable reduce production expr -> expr DOT LIDENTIFIER
-- On KWfalse reduce production expr -> expr DOT LIDENTIFIER
-- On KWensure reduce production expr -> expr DOT LIDENTIFIER
-- On KWend reduce production expr -> expr DOT LIDENTIFIER
-- On KWelseif reduce production expr -> expr DOT LIDENTIFIER
-- On KWelse reduce production expr -> expr DOT LIDENTIFIER
-- On KWdo reduce production expr -> expr DOT LIDENTIFIER
-- On KWdeferred reduce production expr -> expr DOT LIDENTIFIER
-- On KWclass reduce production expr -> expr DOT LIDENTIFIER
-- On KWcase reduce production expr -> expr DOT LIDENTIFIER
-- On KWas reduce production expr -> expr DOT LIDENTIFIER
-- On KWand reduce production expr -> expr DOT LIDENTIFIER
-- On KWall reduce production expr -> expr DOT LIDENTIFIER
-- On GT reduce production expr -> expr DOT LIDENTIFIER
-- On GE reduce production expr -> expr DOT LIDENTIFIER
-- On EQ reduce production expr -> expr DOT LIDENTIFIER
-- On DOT reduce production expr -> expr DOT LIDENTIFIER
-- On DIVIDE reduce production expr -> expr DOT LIDENTIFIER
-- On DCOLON reduce production expr -> expr DOT LIDENTIFIER
-- On DBAR reduce production expr -> expr DOT LIDENTIFIER
-- On DARROW reduce production expr -> expr DOT LIDENTIFIER
-- On COMMA reduce production expr -> expr DOT LIDENTIFIER
-- On COLON reduce production expr -> expr DOT LIDENTIFIER
-- On CARET reduce production expr -> expr DOT LIDENTIFIER
-- On BAR reduce production expr -> expr DOT LIDENTIFIER

State 165:
expr -> expr DOT LBRACE . expr RBRACE [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
-- On USCORE shift to state 109
-- On TIMES shift to state 110
-- On PLUS shift to state 111
-- On NUMBER shift to state 112
-- On MINUS shift to state 113
-- On LPAREN shift to state 114
-- On LIDENTIFIER shift to state 116
-- On LBRACKET shift to state 118
-- On LBRACE shift to state 119
-- On KWtrue shift to state 120
-- On KWsome shift to state 121
-- On KWold shift to state 124
-- On KWnot shift to state 125
-- On KWinspect shift to state 126
-- On KWif shift to state 127
-- On KWfalse shift to state 128
-- On KWall shift to state 129
-- On KWagent shift to state 132
-- On KWResult shift to state 144
-- On operator_expr shift to state 145
-- On expr shift to state 166
-- On exp_inspect shift to state 176
-- On exp_conditional shift to state 177
-- On dotted_id_list shift to state 178
-- On atomic_expr shift to state 187

State 166:
expr -> expr . COMMA expr [ TIMES RBRACE PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
expr -> expr . LPAREN expr RPAREN [ TIMES RBRACE PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
expr -> expr . LBRACKET expr RBRACKET [ TIMES RBRACE PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
expr -> expr . DOT LIDENTIFIER [ TIMES RBRACE PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
expr -> expr . DOT LBRACE expr RBRACE [ TIMES RBRACE PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
expr -> expr DOT LBRACE expr . RBRACE [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
expr -> expr . COLON type_nt [ TIMES RBRACE PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . PLUS expr [ TIMES RBRACE PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . MINUS expr [ TIMES RBRACE PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . TIMES expr [ TIMES RBRACE PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . DIVIDE expr [ TIMES RBRACE PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . CARET expr [ TIMES RBRACE PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . KWin expr [ TIMES RBRACE PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . NOTIN expr [ TIMES RBRACE PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . EQ expr [ TIMES RBRACE PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . NEQ expr [ TIMES RBRACE PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . LT expr [ TIMES RBRACE PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . LE expr [ TIMES RBRACE PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . GT expr [ TIMES RBRACE PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . GE expr [ TIMES RBRACE PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . KWas expr [ TIMES RBRACE PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . KWand expr [ TIMES RBRACE PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . KWor expr [ TIMES RBRACE PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . DCOLON expr [ TIMES RBRACE PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . COLON expr [ TIMES RBRACE PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . BAR expr [ TIMES RBRACE PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . DBAR expr [ TIMES RBRACE PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . DARROW expr [ TIMES RBRACE PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
-- On TIMES shift to state 149
-- On RBRACE shift to state 167
-- On PLUS shift to state 154
-- On NOTIN shift to state 159
-- On NEQ shift to state 168
-- On MINUS shift to state 161
-- On LT shift to state 183
-- On LPAREN shift to state 151
-- On LE shift to state 190
-- On LBRACKET shift to state 156
-- On KWor shift to state 192
-- On KWin shift to state 194
-- On KWas shift to state 196
-- On KWand shift to state 204
-- On GT shift to state 198
-- On GE shift to state 200
-- On EQ shift to state 202
-- On DOT shift to state 163
-- On DIVIDE shift to state 170
-- On DCOLON shift to state 172
-- On DBAR shift to state 185
-- On DARROW shift to state 206
-- On COMMA shift to state 208
-- On COLON shift to state 210
-- On CARET shift to state 174
-- On BAR shift to state 188

State 167:
expr -> expr DOT LBRACE expr RBRACE . [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
-- On UIDENTIFIER reduce production expr -> expr DOT LBRACE expr RBRACE
-- On TIMES reduce production expr -> expr DOT LBRACE expr RBRACE
-- On SEMICOL reduce production expr -> expr DOT LBRACE expr RBRACE
-- On RPAREN reduce production expr -> expr DOT LBRACE expr RBRACE
-- On RBRACKET reduce production expr -> expr DOT LBRACE expr RBRACE
-- On RBRACE reduce production expr -> expr DOT LBRACE expr RBRACE
-- On PLUS reduce production expr -> expr DOT LBRACE expr RBRACE
-- On NUMBER reduce production expr -> expr DOT LBRACE expr RBRACE
-- On NOTIN reduce production expr -> expr DOT LBRACE expr RBRACE
-- On NEWLINE reduce production expr -> expr DOT LBRACE expr RBRACE
-- On NEQ reduce production expr -> expr DOT LBRACE expr RBRACE
-- On MINUS reduce production expr -> expr DOT LBRACE expr RBRACE
-- On LT reduce production expr -> expr DOT LBRACE expr RBRACE
-- On LPAREN reduce production expr -> expr DOT LBRACE expr RBRACE
-- On LIDENTIFIER reduce production expr -> expr DOT LBRACE expr RBRACE
-- On LE reduce production expr -> expr DOT LBRACE expr RBRACE
-- On LBRACKET reduce production expr -> expr DOT LBRACE expr RBRACE
-- On KWtrue reduce production expr -> expr DOT LBRACE expr RBRACE
-- On KWthen reduce production expr -> expr DOT LBRACE expr RBRACE
-- On KWproof reduce production expr -> expr DOT LBRACE expr RBRACE
-- On KWor reduce production expr -> expr DOT LBRACE expr RBRACE
-- On KWnote reduce production expr -> expr DOT LBRACE expr RBRACE
-- On KWlocal reduce production expr -> expr DOT LBRACE expr RBRACE
-- On KWin reduce production expr -> expr DOT LBRACE expr RBRACE
-- On KWimmutable reduce production expr -> expr DOT LBRACE expr RBRACE
-- On KWfalse reduce production expr -> expr DOT LBRACE expr RBRACE
-- On KWensure reduce production expr -> expr DOT LBRACE expr RBRACE
-- On KWend reduce production expr -> expr DOT LBRACE expr RBRACE
-- On KWelseif reduce production expr -> expr DOT LBRACE expr RBRACE
-- On KWelse reduce production expr -> expr DOT LBRACE expr RBRACE
-- On KWdo reduce production expr -> expr DOT LBRACE expr RBRACE
-- On KWdeferred reduce production expr -> expr DOT LBRACE expr RBRACE
-- On KWclass reduce production expr -> expr DOT LBRACE expr RBRACE
-- On KWcase reduce production expr -> expr DOT LBRACE expr RBRACE
-- On KWas reduce production expr -> expr DOT LBRACE expr RBRACE
-- On KWand reduce production expr -> expr DOT LBRACE expr RBRACE
-- On KWall reduce production expr -> expr DOT LBRACE expr RBRACE
-- On GT reduce production expr -> expr DOT LBRACE expr RBRACE
-- On GE reduce production expr -> expr DOT LBRACE expr RBRACE
-- On EQ reduce production expr -> expr DOT LBRACE expr RBRACE
-- On DOT reduce production expr -> expr DOT LBRACE expr RBRACE
-- On DIVIDE reduce production expr -> expr DOT LBRACE expr RBRACE
-- On DCOLON reduce production expr -> expr DOT LBRACE expr RBRACE
-- On DBAR reduce production expr -> expr DOT LBRACE expr RBRACE
-- On DARROW reduce production expr -> expr DOT LBRACE expr RBRACE
-- On COMMA reduce production expr -> expr DOT LBRACE expr RBRACE
-- On COLON reduce production expr -> expr DOT LBRACE expr RBRACE
-- On CARET reduce production expr -> expr DOT LBRACE expr RBRACE
-- On BAR reduce production expr -> expr DOT LBRACE expr RBRACE

State 168:
operator_expr -> expr NEQ . expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
-- On USCORE shift to state 109
-- On TIMES shift to state 110
-- On PLUS shift to state 111
-- On NUMBER shift to state 112
-- On MINUS shift to state 113
-- On LPAREN shift to state 114
-- On LIDENTIFIER shift to state 116
-- On LBRACKET shift to state 118
-- On LBRACE shift to state 119
-- On KWtrue shift to state 120
-- On KWsome shift to state 121
-- On KWold shift to state 124
-- On KWnot shift to state 125
-- On KWinspect shift to state 126
-- On KWif shift to state 127
-- On KWfalse shift to state 128
-- On KWall shift to state 129
-- On KWagent shift to state 132
-- On KWResult shift to state 144
-- On operator_expr shift to state 145
-- On expr shift to state 169
-- On exp_inspect shift to state 176
-- On exp_conditional shift to state 177
-- On dotted_id_list shift to state 178
-- On atomic_expr shift to state 187

State 169:
expr -> expr . COMMA expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
expr -> expr . LPAREN expr RPAREN [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
expr -> expr . LBRACKET expr RBRACKET [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
expr -> expr . DOT LIDENTIFIER [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
expr -> expr . DOT LBRACE expr RBRACE [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
expr -> expr . COLON type_nt [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . PLUS expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . MINUS expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . TIMES expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . DIVIDE expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . CARET expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . KWin expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . NOTIN expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . EQ expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . NEQ expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr NEQ expr . [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . LT expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . LE expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . GT expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . GE expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . KWas expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . KWand expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . KWor expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . DCOLON expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . COLON expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . BAR expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . DBAR expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . DARROW expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
-- On TIMES shift to state 149
-- On PLUS shift to state 154
-- On MINUS shift to state 161
-- On LPAREN shift to state 151
-- On LBRACKET shift to state 156
-- On DOT shift to state 163
-- On DIVIDE shift to state 170
-- On DCOLON shift to state 172
-- On DBAR shift to state 185
-- On CARET shift to state 174
-- On BAR shift to state 188
-- On UIDENTIFIER reduce production operator_expr -> expr NEQ expr
-- On SEMICOL reduce production operator_expr -> expr NEQ expr
-- On RPAREN reduce production operator_expr -> expr NEQ expr
-- On RBRACKET reduce production operator_expr -> expr NEQ expr
-- On RBRACE reduce production operator_expr -> expr NEQ expr
-- On NUMBER reduce production operator_expr -> expr NEQ expr
-- On NEWLINE reduce production operator_expr -> expr NEQ expr
-- On LIDENTIFIER reduce production operator_expr -> expr NEQ expr
-- On KWtrue reduce production operator_expr -> expr NEQ expr
-- On KWthen reduce production operator_expr -> expr NEQ expr
-- On KWproof reduce production operator_expr -> expr NEQ expr
-- On KWor reduce production operator_expr -> expr NEQ expr
-- On KWnote reduce production operator_expr -> expr NEQ expr
-- On KWlocal reduce production operator_expr -> expr NEQ expr
-- On KWimmutable reduce production operator_expr -> expr NEQ expr
-- On KWfalse reduce production operator_expr -> expr NEQ expr
-- On KWensure reduce production operator_expr -> expr NEQ expr
-- On KWend reduce production operator_expr -> expr NEQ expr
-- On KWelseif reduce production operator_expr -> expr NEQ expr
-- On KWelse reduce production operator_expr -> expr NEQ expr
-- On KWdo reduce production operator_expr -> expr NEQ expr
-- On KWdeferred reduce production operator_expr -> expr NEQ expr
-- On KWclass reduce production operator_expr -> expr NEQ expr
-- On KWcase reduce production operator_expr -> expr NEQ expr
-- On KWand reduce production operator_expr -> expr NEQ expr
-- On KWall reduce production operator_expr -> expr NEQ expr
-- On DARROW reduce production operator_expr -> expr NEQ expr
-- On COMMA reduce production operator_expr -> expr NEQ expr
-- On COLON reduce production operator_expr -> expr NEQ expr

State 170:
operator_expr -> expr DIVIDE . expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
-- On USCORE shift to state 109
-- On TIMES shift to state 110
-- On PLUS shift to state 111
-- On NUMBER shift to state 112
-- On MINUS shift to state 113
-- On LPAREN shift to state 114
-- On LIDENTIFIER shift to state 116
-- On LBRACKET shift to state 118
-- On LBRACE shift to state 119
-- On KWtrue shift to state 120
-- On KWsome shift to state 121
-- On KWold shift to state 124
-- On KWnot shift to state 125
-- On KWinspect shift to state 126
-- On KWif shift to state 127
-- On KWfalse shift to state 128
-- On KWall shift to state 129
-- On KWagent shift to state 132
-- On KWResult shift to state 144
-- On operator_expr shift to state 145
-- On expr shift to state 171
-- On exp_inspect shift to state 176
-- On exp_conditional shift to state 177
-- On dotted_id_list shift to state 178
-- On atomic_expr shift to state 187

State 171:
expr -> expr . COMMA expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
expr -> expr . LPAREN expr RPAREN [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
expr -> expr . LBRACKET expr RBRACKET [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
expr -> expr . DOT LIDENTIFIER [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
expr -> expr . DOT LBRACE expr RBRACE [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
expr -> expr . COLON type_nt [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . PLUS expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . MINUS expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . TIMES expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . DIVIDE expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr DIVIDE expr . [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . CARET expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . KWin expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . NOTIN expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . EQ expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . NEQ expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . LT expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . LE expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . GT expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . GE expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . KWas expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . KWand expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . KWor expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . DCOLON expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . COLON expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . BAR expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . DBAR expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . DARROW expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
-- On LPAREN shift to state 151
-- On LBRACKET shift to state 156
-- On DOT shift to state 163
-- On DCOLON shift to state 172
-- On CARET shift to state 174
-- On UIDENTIFIER reduce production operator_expr -> expr DIVIDE expr
-- On TIMES reduce production operator_expr -> expr DIVIDE expr
-- On SEMICOL reduce production operator_expr -> expr DIVIDE expr
-- On RPAREN reduce production operator_expr -> expr DIVIDE expr
-- On RBRACKET reduce production operator_expr -> expr DIVIDE expr
-- On RBRACE reduce production operator_expr -> expr DIVIDE expr
-- On PLUS reduce production operator_expr -> expr DIVIDE expr
-- On NUMBER reduce production operator_expr -> expr DIVIDE expr
-- On NOTIN reduce production operator_expr -> expr DIVIDE expr
-- On NEWLINE reduce production operator_expr -> expr DIVIDE expr
-- On NEQ reduce production operator_expr -> expr DIVIDE expr
-- On MINUS reduce production operator_expr -> expr DIVIDE expr
-- On LT reduce production operator_expr -> expr DIVIDE expr
-- On LIDENTIFIER reduce production operator_expr -> expr DIVIDE expr
-- On LE reduce production operator_expr -> expr DIVIDE expr
-- On KWtrue reduce production operator_expr -> expr DIVIDE expr
-- On KWthen reduce production operator_expr -> expr DIVIDE expr
-- On KWproof reduce production operator_expr -> expr DIVIDE expr
-- On KWor reduce production operator_expr -> expr DIVIDE expr
-- On KWnote reduce production operator_expr -> expr DIVIDE expr
-- On KWlocal reduce production operator_expr -> expr DIVIDE expr
-- On KWin reduce production operator_expr -> expr DIVIDE expr
-- On KWimmutable reduce production operator_expr -> expr DIVIDE expr
-- On KWfalse reduce production operator_expr -> expr DIVIDE expr
-- On KWensure reduce production operator_expr -> expr DIVIDE expr
-- On KWend reduce production operator_expr -> expr DIVIDE expr
-- On KWelseif reduce production operator_expr -> expr DIVIDE expr
-- On KWelse reduce production operator_expr -> expr DIVIDE expr
-- On KWdo reduce production operator_expr -> expr DIVIDE expr
-- On KWdeferred reduce production operator_expr -> expr DIVIDE expr
-- On KWclass reduce production operator_expr -> expr DIVIDE expr
-- On KWcase reduce production operator_expr -> expr DIVIDE expr
-- On KWas reduce production operator_expr -> expr DIVIDE expr
-- On KWand reduce production operator_expr -> expr DIVIDE expr
-- On KWall reduce production operator_expr -> expr DIVIDE expr
-- On GT reduce production operator_expr -> expr DIVIDE expr
-- On GE reduce production operator_expr -> expr DIVIDE expr
-- On EQ reduce production operator_expr -> expr DIVIDE expr
-- On DIVIDE reduce production operator_expr -> expr DIVIDE expr
-- On DBAR reduce production operator_expr -> expr DIVIDE expr
-- On DARROW reduce production operator_expr -> expr DIVIDE expr
-- On COMMA reduce production operator_expr -> expr DIVIDE expr
-- On COLON reduce production operator_expr -> expr DIVIDE expr
-- On BAR reduce production operator_expr -> expr DIVIDE expr

State 172:
operator_expr -> expr DCOLON . expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
-- On USCORE shift to state 109
-- On TIMES shift to state 110
-- On PLUS shift to state 111
-- On NUMBER shift to state 112
-- On MINUS shift to state 113
-- On LPAREN shift to state 114
-- On LIDENTIFIER shift to state 116
-- On LBRACKET shift to state 118
-- On LBRACE shift to state 119
-- On KWtrue shift to state 120
-- On KWsome shift to state 121
-- On KWold shift to state 124
-- On KWnot shift to state 125
-- On KWinspect shift to state 126
-- On KWif shift to state 127
-- On KWfalse shift to state 128
-- On KWall shift to state 129
-- On KWagent shift to state 132
-- On KWResult shift to state 144
-- On operator_expr shift to state 145
-- On expr shift to state 173
-- On exp_inspect shift to state 176
-- On exp_conditional shift to state 177
-- On dotted_id_list shift to state 178
-- On atomic_expr shift to state 187

State 173:
expr -> expr . COMMA expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
expr -> expr . LPAREN expr RPAREN [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
expr -> expr . LBRACKET expr RBRACKET [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
expr -> expr . DOT LIDENTIFIER [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
expr -> expr . DOT LBRACE expr RBRACE [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
expr -> expr . COLON type_nt [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . PLUS expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . MINUS expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . TIMES expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . DIVIDE expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . CARET expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . KWin expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . NOTIN expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . EQ expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . NEQ expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . LT expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . LE expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . GT expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . GE expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . KWas expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . KWand expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . KWor expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . DCOLON expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr DCOLON expr . [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . COLON expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . BAR expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . DBAR expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . DARROW expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
-- On LPAREN shift to state 151
-- On LBRACKET shift to state 156
-- On DOT shift to state 163
-- On DCOLON shift to state 172
-- On CARET shift to state 174
-- On UIDENTIFIER reduce production operator_expr -> expr DCOLON expr
-- On TIMES reduce production operator_expr -> expr DCOLON expr
-- On SEMICOL reduce production operator_expr -> expr DCOLON expr
-- On RPAREN reduce production operator_expr -> expr DCOLON expr
-- On RBRACKET reduce production operator_expr -> expr DCOLON expr
-- On RBRACE reduce production operator_expr -> expr DCOLON expr
-- On PLUS reduce production operator_expr -> expr DCOLON expr
-- On NUMBER reduce production operator_expr -> expr DCOLON expr
-- On NOTIN reduce production operator_expr -> expr DCOLON expr
-- On NEWLINE reduce production operator_expr -> expr DCOLON expr
-- On NEQ reduce production operator_expr -> expr DCOLON expr
-- On MINUS reduce production operator_expr -> expr DCOLON expr
-- On LT reduce production operator_expr -> expr DCOLON expr
-- On LIDENTIFIER reduce production operator_expr -> expr DCOLON expr
-- On LE reduce production operator_expr -> expr DCOLON expr
-- On KWtrue reduce production operator_expr -> expr DCOLON expr
-- On KWthen reduce production operator_expr -> expr DCOLON expr
-- On KWproof reduce production operator_expr -> expr DCOLON expr
-- On KWor reduce production operator_expr -> expr DCOLON expr
-- On KWnote reduce production operator_expr -> expr DCOLON expr
-- On KWlocal reduce production operator_expr -> expr DCOLON expr
-- On KWin reduce production operator_expr -> expr DCOLON expr
-- On KWimmutable reduce production operator_expr -> expr DCOLON expr
-- On KWfalse reduce production operator_expr -> expr DCOLON expr
-- On KWensure reduce production operator_expr -> expr DCOLON expr
-- On KWend reduce production operator_expr -> expr DCOLON expr
-- On KWelseif reduce production operator_expr -> expr DCOLON expr
-- On KWelse reduce production operator_expr -> expr DCOLON expr
-- On KWdo reduce production operator_expr -> expr DCOLON expr
-- On KWdeferred reduce production operator_expr -> expr DCOLON expr
-- On KWclass reduce production operator_expr -> expr DCOLON expr
-- On KWcase reduce production operator_expr -> expr DCOLON expr
-- On KWas reduce production operator_expr -> expr DCOLON expr
-- On KWand reduce production operator_expr -> expr DCOLON expr
-- On KWall reduce production operator_expr -> expr DCOLON expr
-- On GT reduce production operator_expr -> expr DCOLON expr
-- On GE reduce production operator_expr -> expr DCOLON expr
-- On EQ reduce production operator_expr -> expr DCOLON expr
-- On DIVIDE reduce production operator_expr -> expr DCOLON expr
-- On DBAR reduce production operator_expr -> expr DCOLON expr
-- On DARROW reduce production operator_expr -> expr DCOLON expr
-- On COMMA reduce production operator_expr -> expr DCOLON expr
-- On COLON reduce production operator_expr -> expr DCOLON expr
-- On BAR reduce production operator_expr -> expr DCOLON expr

State 174:
operator_expr -> expr CARET . expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
-- On USCORE shift to state 109
-- On TIMES shift to state 110
-- On PLUS shift to state 111
-- On NUMBER shift to state 112
-- On MINUS shift to state 113
-- On LPAREN shift to state 114
-- On LIDENTIFIER shift to state 116
-- On LBRACKET shift to state 118
-- On LBRACE shift to state 119
-- On KWtrue shift to state 120
-- On KWsome shift to state 121
-- On KWold shift to state 124
-- On KWnot shift to state 125
-- On KWinspect shift to state 126
-- On KWif shift to state 127
-- On KWfalse shift to state 128
-- On KWall shift to state 129
-- On KWagent shift to state 132
-- On KWResult shift to state 144
-- On operator_expr shift to state 145
-- On expr shift to state 175
-- On exp_inspect shift to state 176
-- On exp_conditional shift to state 177
-- On dotted_id_list shift to state 178
-- On atomic_expr shift to state 187

State 175:
expr -> expr . COMMA expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
expr -> expr . LPAREN expr RPAREN [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
expr -> expr . LBRACKET expr RBRACKET [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
expr -> expr . DOT LIDENTIFIER [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
expr -> expr . DOT LBRACE expr RBRACE [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
expr -> expr . COLON type_nt [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . PLUS expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . MINUS expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . TIMES expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . DIVIDE expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . CARET expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr CARET expr . [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . KWin expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . NOTIN expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . EQ expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . NEQ expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . LT expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . LE expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . GT expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . GE expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . KWas expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . KWand expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . KWor expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . DCOLON expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . COLON expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . BAR expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . DBAR expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . DARROW expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
-- On LPAREN shift to state 151
-- On LBRACKET shift to state 156
-- On DOT shift to state 163
-- On DCOLON shift to state 172
-- On CARET shift to state 174
-- On UIDENTIFIER reduce production operator_expr -> expr CARET expr
-- On TIMES reduce production operator_expr -> expr CARET expr
-- On SEMICOL reduce production operator_expr -> expr CARET expr
-- On RPAREN reduce production operator_expr -> expr CARET expr
-- On RBRACKET reduce production operator_expr -> expr CARET expr
-- On RBRACE reduce production operator_expr -> expr CARET expr
-- On PLUS reduce production operator_expr -> expr CARET expr
-- On NUMBER reduce production operator_expr -> expr CARET expr
-- On NOTIN reduce production operator_expr -> expr CARET expr
-- On NEWLINE reduce production operator_expr -> expr CARET expr
-- On NEQ reduce production operator_expr -> expr CARET expr
-- On MINUS reduce production operator_expr -> expr CARET expr
-- On LT reduce production operator_expr -> expr CARET expr
-- On LIDENTIFIER reduce production operator_expr -> expr CARET expr
-- On LE reduce production operator_expr -> expr CARET expr
-- On KWtrue reduce production operator_expr -> expr CARET expr
-- On KWthen reduce production operator_expr -> expr CARET expr
-- On KWproof reduce production operator_expr -> expr CARET expr
-- On KWor reduce production operator_expr -> expr CARET expr
-- On KWnote reduce production operator_expr -> expr CARET expr
-- On KWlocal reduce production operator_expr -> expr CARET expr
-- On KWin reduce production operator_expr -> expr CARET expr
-- On KWimmutable reduce production operator_expr -> expr CARET expr
-- On KWfalse reduce production operator_expr -> expr CARET expr
-- On KWensure reduce production operator_expr -> expr CARET expr
-- On KWend reduce production operator_expr -> expr CARET expr
-- On KWelseif reduce production operator_expr -> expr CARET expr
-- On KWelse reduce production operator_expr -> expr CARET expr
-- On KWdo reduce production operator_expr -> expr CARET expr
-- On KWdeferred reduce production operator_expr -> expr CARET expr
-- On KWclass reduce production operator_expr -> expr CARET expr
-- On KWcase reduce production operator_expr -> expr CARET expr
-- On KWas reduce production operator_expr -> expr CARET expr
-- On KWand reduce production operator_expr -> expr CARET expr
-- On KWall reduce production operator_expr -> expr CARET expr
-- On GT reduce production operator_expr -> expr CARET expr
-- On GE reduce production operator_expr -> expr CARET expr
-- On EQ reduce production operator_expr -> expr CARET expr
-- On DIVIDE reduce production operator_expr -> expr CARET expr
-- On DBAR reduce production operator_expr -> expr CARET expr
-- On DARROW reduce production operator_expr -> expr CARET expr
-- On COMMA reduce production operator_expr -> expr CARET expr
-- On COLON reduce production operator_expr -> expr CARET expr
-- On BAR reduce production operator_expr -> expr CARET expr

State 176:
expr -> exp_inspect . [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
-- On UIDENTIFIER reduce production expr -> exp_inspect
-- On TIMES reduce production expr -> exp_inspect
-- On SEMICOL reduce production expr -> exp_inspect
-- On RPAREN reduce production expr -> exp_inspect
-- On RBRACKET reduce production expr -> exp_inspect
-- On RBRACE reduce production expr -> exp_inspect
-- On PLUS reduce production expr -> exp_inspect
-- On NUMBER reduce production expr -> exp_inspect
-- On NOTIN reduce production expr -> exp_inspect
-- On NEWLINE reduce production expr -> exp_inspect
-- On NEQ reduce production expr -> exp_inspect
-- On MINUS reduce production expr -> exp_inspect
-- On LT reduce production expr -> exp_inspect
-- On LPAREN reduce production expr -> exp_inspect
-- On LIDENTIFIER reduce production expr -> exp_inspect
-- On LE reduce production expr -> exp_inspect
-- On LBRACKET reduce production expr -> exp_inspect
-- On KWtrue reduce production expr -> exp_inspect
-- On KWthen reduce production expr -> exp_inspect
-- On KWproof reduce production expr -> exp_inspect
-- On KWor reduce production expr -> exp_inspect
-- On KWnote reduce production expr -> exp_inspect
-- On KWlocal reduce production expr -> exp_inspect
-- On KWin reduce production expr -> exp_inspect
-- On KWimmutable reduce production expr -> exp_inspect
-- On KWfalse reduce production expr -> exp_inspect
-- On KWensure reduce production expr -> exp_inspect
-- On KWend reduce production expr -> exp_inspect
-- On KWelseif reduce production expr -> exp_inspect
-- On KWelse reduce production expr -> exp_inspect
-- On KWdo reduce production expr -> exp_inspect
-- On KWdeferred reduce production expr -> exp_inspect
-- On KWclass reduce production expr -> exp_inspect
-- On KWcase reduce production expr -> exp_inspect
-- On KWas reduce production expr -> exp_inspect
-- On KWand reduce production expr -> exp_inspect
-- On KWall reduce production expr -> exp_inspect
-- On GT reduce production expr -> exp_inspect
-- On GE reduce production expr -> exp_inspect
-- On EQ reduce production expr -> exp_inspect
-- On DOT reduce production expr -> exp_inspect
-- On DIVIDE reduce production expr -> exp_inspect
-- On DCOLON reduce production expr -> exp_inspect
-- On DBAR reduce production expr -> exp_inspect
-- On DARROW reduce production expr -> exp_inspect
-- On COMMA reduce production expr -> exp_inspect
-- On COLON reduce production expr -> exp_inspect
-- On CARET reduce production expr -> exp_inspect
-- On BAR reduce production expr -> exp_inspect

State 177:
expr -> exp_conditional . [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
-- On UIDENTIFIER reduce production expr -> exp_conditional
-- On TIMES reduce production expr -> exp_conditional
-- On SEMICOL reduce production expr -> exp_conditional
-- On RPAREN reduce production expr -> exp_conditional
-- On RBRACKET reduce production expr -> exp_conditional
-- On RBRACE reduce production expr -> exp_conditional
-- On PLUS reduce production expr -> exp_conditional
-- On NUMBER reduce production expr -> exp_conditional
-- On NOTIN reduce production expr -> exp_conditional
-- On NEWLINE reduce production expr -> exp_conditional
-- On NEQ reduce production expr -> exp_conditional
-- On MINUS reduce production expr -> exp_conditional
-- On LT reduce production expr -> exp_conditional
-- On LPAREN reduce production expr -> exp_conditional
-- On LIDENTIFIER reduce production expr -> exp_conditional
-- On LE reduce production expr -> exp_conditional
-- On LBRACKET reduce production expr -> exp_conditional
-- On KWtrue reduce production expr -> exp_conditional
-- On KWthen reduce production expr -> exp_conditional
-- On KWproof reduce production expr -> exp_conditional
-- On KWor reduce production expr -> exp_conditional
-- On KWnote reduce production expr -> exp_conditional
-- On KWlocal reduce production expr -> exp_conditional
-- On KWin reduce production expr -> exp_conditional
-- On KWimmutable reduce production expr -> exp_conditional
-- On KWfalse reduce production expr -> exp_conditional
-- On KWensure reduce production expr -> exp_conditional
-- On KWend reduce production expr -> exp_conditional
-- On KWelseif reduce production expr -> exp_conditional
-- On KWelse reduce production expr -> exp_conditional
-- On KWdo reduce production expr -> exp_conditional
-- On KWdeferred reduce production expr -> exp_conditional
-- On KWclass reduce production expr -> exp_conditional
-- On KWcase reduce production expr -> exp_conditional
-- On KWas reduce production expr -> exp_conditional
-- On KWand reduce production expr -> exp_conditional
-- On KWall reduce production expr -> exp_conditional
-- On GT reduce production expr -> exp_conditional
-- On GE reduce production expr -> exp_conditional
-- On EQ reduce production expr -> exp_conditional
-- On DOT reduce production expr -> exp_conditional
-- On DIVIDE reduce production expr -> exp_conditional
-- On DCOLON reduce production expr -> exp_conditional
-- On DBAR reduce production expr -> exp_conditional
-- On DARROW reduce production expr -> exp_conditional
-- On COMMA reduce production expr -> exp_conditional
-- On COLON reduce production expr -> exp_conditional
-- On CARET reduce production expr -> exp_conditional
-- On BAR reduce production expr -> exp_conditional

State 178:
atomic_expr -> dotted_id_list . [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
dotted_id_list -> dotted_id_list . DOT LIDENTIFIER [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
expr -> dotted_id_list . DOT LPAREN expr RPAREN [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
expr -> dotted_id_list . DOT LBRACE expr RBRACE [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
-- On DOT shift to state 179
-- On UIDENTIFIER reduce production atomic_expr -> dotted_id_list
-- On TIMES reduce production atomic_expr -> dotted_id_list
-- On SEMICOL reduce production atomic_expr -> dotted_id_list
-- On RPAREN reduce production atomic_expr -> dotted_id_list
-- On RBRACKET reduce production atomic_expr -> dotted_id_list
-- On RBRACE reduce production atomic_expr -> dotted_id_list
-- On PLUS reduce production atomic_expr -> dotted_id_list
-- On NUMBER reduce production atomic_expr -> dotted_id_list
-- On NOTIN reduce production atomic_expr -> dotted_id_list
-- On NEWLINE reduce production atomic_expr -> dotted_id_list
-- On NEQ reduce production atomic_expr -> dotted_id_list
-- On MINUS reduce production atomic_expr -> dotted_id_list
-- On LT reduce production atomic_expr -> dotted_id_list
-- On LPAREN reduce production atomic_expr -> dotted_id_list
-- On LIDENTIFIER reduce production atomic_expr -> dotted_id_list
-- On LE reduce production atomic_expr -> dotted_id_list
-- On LBRACKET reduce production atomic_expr -> dotted_id_list
-- On KWtrue reduce production atomic_expr -> dotted_id_list
-- On KWthen reduce production atomic_expr -> dotted_id_list
-- On KWproof reduce production atomic_expr -> dotted_id_list
-- On KWor reduce production atomic_expr -> dotted_id_list
-- On KWnote reduce production atomic_expr -> dotted_id_list
-- On KWlocal reduce production atomic_expr -> dotted_id_list
-- On KWin reduce production atomic_expr -> dotted_id_list
-- On KWimmutable reduce production atomic_expr -> dotted_id_list
-- On KWfalse reduce production atomic_expr -> dotted_id_list
-- On KWensure reduce production atomic_expr -> dotted_id_list
-- On KWend reduce production atomic_expr -> dotted_id_list
-- On KWelseif reduce production atomic_expr -> dotted_id_list
-- On KWelse reduce production atomic_expr -> dotted_id_list
-- On KWdo reduce production atomic_expr -> dotted_id_list
-- On KWdeferred reduce production atomic_expr -> dotted_id_list
-- On KWclass reduce production atomic_expr -> dotted_id_list
-- On KWcase reduce production atomic_expr -> dotted_id_list
-- On KWas reduce production atomic_expr -> dotted_id_list
-- On KWand reduce production atomic_expr -> dotted_id_list
-- On KWall reduce production atomic_expr -> dotted_id_list
-- On GT reduce production atomic_expr -> dotted_id_list
-- On GE reduce production atomic_expr -> dotted_id_list
-- On EQ reduce production atomic_expr -> dotted_id_list
-- On DIVIDE reduce production atomic_expr -> dotted_id_list
-- On DCOLON reduce production atomic_expr -> dotted_id_list
-- On DBAR reduce production atomic_expr -> dotted_id_list
-- On DARROW reduce production atomic_expr -> dotted_id_list
-- On COMMA reduce production atomic_expr -> dotted_id_list
-- On COLON reduce production atomic_expr -> dotted_id_list
-- On CARET reduce production atomic_expr -> dotted_id_list
-- On BAR reduce production atomic_expr -> dotted_id_list

State 179:
dotted_id_list -> dotted_id_list DOT . LIDENTIFIER [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
expr -> dotted_id_list DOT . LPAREN expr RPAREN [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
expr -> dotted_id_list DOT . LBRACE expr RBRACE [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
-- On LPAREN shift to state 180
-- On LIDENTIFIER shift to state 10
-- On LBRACE shift to state 221

State 180:
expr -> dotted_id_list DOT LPAREN . expr RPAREN [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
-- On USCORE shift to state 109
-- On TIMES shift to state 110
-- On PLUS shift to state 111
-- On NUMBER shift to state 112
-- On MINUS shift to state 113
-- On LPAREN shift to state 114
-- On LIDENTIFIER shift to state 116
-- On LBRACKET shift to state 118
-- On LBRACE shift to state 119
-- On KWtrue shift to state 120
-- On KWsome shift to state 121
-- On KWold shift to state 124
-- On KWnot shift to state 125
-- On KWinspect shift to state 126
-- On KWif shift to state 127
-- On KWfalse shift to state 128
-- On KWall shift to state 129
-- On KWagent shift to state 132
-- On KWResult shift to state 144
-- On operator_expr shift to state 145
-- On expr shift to state 181
-- On exp_inspect shift to state 176
-- On exp_conditional shift to state 177
-- On dotted_id_list shift to state 178
-- On atomic_expr shift to state 187

State 181:
expr -> expr . COMMA expr [ TIMES RPAREN PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
expr -> expr . LPAREN expr RPAREN [ TIMES RPAREN PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
expr -> expr . LBRACKET expr RBRACKET [ TIMES RPAREN PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
expr -> expr . DOT LIDENTIFIER [ TIMES RPAREN PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
expr -> expr . DOT LBRACE expr RBRACE [ TIMES RPAREN PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
expr -> dotted_id_list DOT LPAREN expr . RPAREN [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
expr -> expr . COLON type_nt [ TIMES RPAREN PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . PLUS expr [ TIMES RPAREN PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . MINUS expr [ TIMES RPAREN PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . TIMES expr [ TIMES RPAREN PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . DIVIDE expr [ TIMES RPAREN PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . CARET expr [ TIMES RPAREN PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . KWin expr [ TIMES RPAREN PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . NOTIN expr [ TIMES RPAREN PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . EQ expr [ TIMES RPAREN PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . NEQ expr [ TIMES RPAREN PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . LT expr [ TIMES RPAREN PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . LE expr [ TIMES RPAREN PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . GT expr [ TIMES RPAREN PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . GE expr [ TIMES RPAREN PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . KWas expr [ TIMES RPAREN PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . KWand expr [ TIMES RPAREN PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . KWor expr [ TIMES RPAREN PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . DCOLON expr [ TIMES RPAREN PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . COLON expr [ TIMES RPAREN PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . BAR expr [ TIMES RPAREN PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . DBAR expr [ TIMES RPAREN PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . DARROW expr [ TIMES RPAREN PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
-- On TIMES shift to state 149
-- On RPAREN shift to state 182
-- On PLUS shift to state 154
-- On NOTIN shift to state 159
-- On NEQ shift to state 168
-- On MINUS shift to state 161
-- On LT shift to state 183
-- On LPAREN shift to state 151
-- On LE shift to state 190
-- On LBRACKET shift to state 156
-- On KWor shift to state 192
-- On KWin shift to state 194
-- On KWas shift to state 196
-- On KWand shift to state 204
-- On GT shift to state 198
-- On GE shift to state 200
-- On EQ shift to state 202
-- On DOT shift to state 163
-- On DIVIDE shift to state 170
-- On DCOLON shift to state 172
-- On DBAR shift to state 185
-- On DARROW shift to state 206
-- On COMMA shift to state 208
-- On COLON shift to state 210
-- On CARET shift to state 174
-- On BAR shift to state 188

State 182:
expr -> dotted_id_list DOT LPAREN expr RPAREN . [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
-- On UIDENTIFIER reduce production expr -> dotted_id_list DOT LPAREN expr RPAREN
-- On TIMES reduce production expr -> dotted_id_list DOT LPAREN expr RPAREN
-- On SEMICOL reduce production expr -> dotted_id_list DOT LPAREN expr RPAREN
-- On RPAREN reduce production expr -> dotted_id_list DOT LPAREN expr RPAREN
-- On RBRACKET reduce production expr -> dotted_id_list DOT LPAREN expr RPAREN
-- On RBRACE reduce production expr -> dotted_id_list DOT LPAREN expr RPAREN
-- On PLUS reduce production expr -> dotted_id_list DOT LPAREN expr RPAREN
-- On NUMBER reduce production expr -> dotted_id_list DOT LPAREN expr RPAREN
-- On NOTIN reduce production expr -> dotted_id_list DOT LPAREN expr RPAREN
-- On NEWLINE reduce production expr -> dotted_id_list DOT LPAREN expr RPAREN
-- On NEQ reduce production expr -> dotted_id_list DOT LPAREN expr RPAREN
-- On MINUS reduce production expr -> dotted_id_list DOT LPAREN expr RPAREN
-- On LT reduce production expr -> dotted_id_list DOT LPAREN expr RPAREN
-- On LPAREN reduce production expr -> dotted_id_list DOT LPAREN expr RPAREN
-- On LIDENTIFIER reduce production expr -> dotted_id_list DOT LPAREN expr RPAREN
-- On LE reduce production expr -> dotted_id_list DOT LPAREN expr RPAREN
-- On LBRACKET reduce production expr -> dotted_id_list DOT LPAREN expr RPAREN
-- On KWtrue reduce production expr -> dotted_id_list DOT LPAREN expr RPAREN
-- On KWthen reduce production expr -> dotted_id_list DOT LPAREN expr RPAREN
-- On KWproof reduce production expr -> dotted_id_list DOT LPAREN expr RPAREN
-- On KWor reduce production expr -> dotted_id_list DOT LPAREN expr RPAREN
-- On KWnote reduce production expr -> dotted_id_list DOT LPAREN expr RPAREN
-- On KWlocal reduce production expr -> dotted_id_list DOT LPAREN expr RPAREN
-- On KWin reduce production expr -> dotted_id_list DOT LPAREN expr RPAREN
-- On KWimmutable reduce production expr -> dotted_id_list DOT LPAREN expr RPAREN
-- On KWfalse reduce production expr -> dotted_id_list DOT LPAREN expr RPAREN
-- On KWensure reduce production expr -> dotted_id_list DOT LPAREN expr RPAREN
-- On KWend reduce production expr -> dotted_id_list DOT LPAREN expr RPAREN
-- On KWelseif reduce production expr -> dotted_id_list DOT LPAREN expr RPAREN
-- On KWelse reduce production expr -> dotted_id_list DOT LPAREN expr RPAREN
-- On KWdo reduce production expr -> dotted_id_list DOT LPAREN expr RPAREN
-- On KWdeferred reduce production expr -> dotted_id_list DOT LPAREN expr RPAREN
-- On KWclass reduce production expr -> dotted_id_list DOT LPAREN expr RPAREN
-- On KWcase reduce production expr -> dotted_id_list DOT LPAREN expr RPAREN
-- On KWas reduce production expr -> dotted_id_list DOT LPAREN expr RPAREN
-- On KWand reduce production expr -> dotted_id_list DOT LPAREN expr RPAREN
-- On KWall reduce production expr -> dotted_id_list DOT LPAREN expr RPAREN
-- On GT reduce production expr -> dotted_id_list DOT LPAREN expr RPAREN
-- On GE reduce production expr -> dotted_id_list DOT LPAREN expr RPAREN
-- On EQ reduce production expr -> dotted_id_list DOT LPAREN expr RPAREN
-- On DOT reduce production expr -> dotted_id_list DOT LPAREN expr RPAREN
-- On DIVIDE reduce production expr -> dotted_id_list DOT LPAREN expr RPAREN
-- On DCOLON reduce production expr -> dotted_id_list DOT LPAREN expr RPAREN
-- On DBAR reduce production expr -> dotted_id_list DOT LPAREN expr RPAREN
-- On DARROW reduce production expr -> dotted_id_list DOT LPAREN expr RPAREN
-- On COMMA reduce production expr -> dotted_id_list DOT LPAREN expr RPAREN
-- On COLON reduce production expr -> dotted_id_list DOT LPAREN expr RPAREN
-- On CARET reduce production expr -> dotted_id_list DOT LPAREN expr RPAREN
-- On BAR reduce production expr -> dotted_id_list DOT LPAREN expr RPAREN

State 183:
operator_expr -> expr LT . expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
-- On USCORE shift to state 109
-- On TIMES shift to state 110
-- On PLUS shift to state 111
-- On NUMBER shift to state 112
-- On MINUS shift to state 113
-- On LPAREN shift to state 114
-- On LIDENTIFIER shift to state 116
-- On LBRACKET shift to state 118
-- On LBRACE shift to state 119
-- On KWtrue shift to state 120
-- On KWsome shift to state 121
-- On KWold shift to state 124
-- On KWnot shift to state 125
-- On KWinspect shift to state 126
-- On KWif shift to state 127
-- On KWfalse shift to state 128
-- On KWall shift to state 129
-- On KWagent shift to state 132
-- On KWResult shift to state 144
-- On operator_expr shift to state 145
-- On expr shift to state 184
-- On exp_inspect shift to state 176
-- On exp_conditional shift to state 177
-- On dotted_id_list shift to state 178
-- On atomic_expr shift to state 187

State 184:
expr -> expr . COMMA expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
expr -> expr . LPAREN expr RPAREN [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
expr -> expr . LBRACKET expr RBRACKET [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
expr -> expr . DOT LIDENTIFIER [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
expr -> expr . DOT LBRACE expr RBRACE [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
expr -> expr . COLON type_nt [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . PLUS expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . MINUS expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . TIMES expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . DIVIDE expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . CARET expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . KWin expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . NOTIN expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . EQ expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . NEQ expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . LT expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr LT expr . [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . LE expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . GT expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . GE expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . KWas expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . KWand expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . KWor expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . DCOLON expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . COLON expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . BAR expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . DBAR expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . DARROW expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
-- On TIMES shift to state 149
-- On PLUS shift to state 154
-- On MINUS shift to state 161
-- On LPAREN shift to state 151
-- On LBRACKET shift to state 156
-- On DOT shift to state 163
-- On DIVIDE shift to state 170
-- On DCOLON shift to state 172
-- On DBAR shift to state 185
-- On CARET shift to state 174
-- On BAR shift to state 188
-- On UIDENTIFIER reduce production operator_expr -> expr LT expr
-- On SEMICOL reduce production operator_expr -> expr LT expr
-- On RPAREN reduce production operator_expr -> expr LT expr
-- On RBRACKET reduce production operator_expr -> expr LT expr
-- On RBRACE reduce production operator_expr -> expr LT expr
-- On NUMBER reduce production operator_expr -> expr LT expr
-- On NEWLINE reduce production operator_expr -> expr LT expr
-- On LIDENTIFIER reduce production operator_expr -> expr LT expr
-- On KWtrue reduce production operator_expr -> expr LT expr
-- On KWthen reduce production operator_expr -> expr LT expr
-- On KWproof reduce production operator_expr -> expr LT expr
-- On KWor reduce production operator_expr -> expr LT expr
-- On KWnote reduce production operator_expr -> expr LT expr
-- On KWlocal reduce production operator_expr -> expr LT expr
-- On KWimmutable reduce production operator_expr -> expr LT expr
-- On KWfalse reduce production operator_expr -> expr LT expr
-- On KWensure reduce production operator_expr -> expr LT expr
-- On KWend reduce production operator_expr -> expr LT expr
-- On KWelseif reduce production operator_expr -> expr LT expr
-- On KWelse reduce production operator_expr -> expr LT expr
-- On KWdo reduce production operator_expr -> expr LT expr
-- On KWdeferred reduce production operator_expr -> expr LT expr
-- On KWclass reduce production operator_expr -> expr LT expr
-- On KWcase reduce production operator_expr -> expr LT expr
-- On KWand reduce production operator_expr -> expr LT expr
-- On KWall reduce production operator_expr -> expr LT expr
-- On DARROW reduce production operator_expr -> expr LT expr
-- On COMMA reduce production operator_expr -> expr LT expr
-- On COLON reduce production operator_expr -> expr LT expr

State 185:
operator_expr -> expr DBAR . expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
-- On USCORE shift to state 109
-- On TIMES shift to state 110
-- On PLUS shift to state 111
-- On NUMBER shift to state 112
-- On MINUS shift to state 113
-- On LPAREN shift to state 114
-- On LIDENTIFIER shift to state 116
-- On LBRACKET shift to state 118
-- On LBRACE shift to state 119
-- On KWtrue shift to state 120
-- On KWsome shift to state 121
-- On KWold shift to state 124
-- On KWnot shift to state 125
-- On KWinspect shift to state 126
-- On KWif shift to state 127
-- On KWfalse shift to state 128
-- On KWall shift to state 129
-- On KWagent shift to state 132
-- On KWResult shift to state 144
-- On operator_expr shift to state 145
-- On expr shift to state 186
-- On exp_inspect shift to state 176
-- On exp_conditional shift to state 177
-- On dotted_id_list shift to state 178
-- On atomic_expr shift to state 187

State 186:
expr -> expr . COMMA expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
expr -> expr . LPAREN expr RPAREN [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
expr -> expr . LBRACKET expr RBRACKET [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
expr -> expr . DOT LIDENTIFIER [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
expr -> expr . DOT LBRACE expr RBRACE [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
expr -> expr . COLON type_nt [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . PLUS expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . MINUS expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . TIMES expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . DIVIDE expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . CARET expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . KWin expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . NOTIN expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . EQ expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . NEQ expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . LT expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . LE expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . GT expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . GE expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . KWas expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . KWand expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . KWor expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . DCOLON expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . COLON expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . BAR expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . DBAR expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr DBAR expr . [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . DARROW expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
-- On TIMES shift to state 149
-- On PLUS shift to state 154
-- On MINUS shift to state 161
-- On LPAREN shift to state 151
-- On LBRACKET shift to state 156
-- On DOT shift to state 163
-- On DIVIDE shift to state 170
-- On DCOLON shift to state 172
-- On CARET shift to state 174
-- On UIDENTIFIER reduce production operator_expr -> expr DBAR expr
-- On SEMICOL reduce production operator_expr -> expr DBAR expr
-- On RPAREN reduce production operator_expr -> expr DBAR expr
-- On RBRACKET reduce production operator_expr -> expr DBAR expr
-- On RBRACE reduce production operator_expr -> expr DBAR expr
-- On NUMBER reduce production operator_expr -> expr DBAR expr
-- On NOTIN reduce production operator_expr -> expr DBAR expr
-- On NEWLINE reduce production operator_expr -> expr DBAR expr
-- On NEQ reduce production operator_expr -> expr DBAR expr
-- On LT reduce production operator_expr -> expr DBAR expr
-- On LIDENTIFIER reduce production operator_expr -> expr DBAR expr
-- On LE reduce production operator_expr -> expr DBAR expr
-- On KWtrue reduce production operator_expr -> expr DBAR expr
-- On KWthen reduce production operator_expr -> expr DBAR expr
-- On KWproof reduce production operator_expr -> expr DBAR expr
-- On KWor reduce production operator_expr -> expr DBAR expr
-- On KWnote reduce production operator_expr -> expr DBAR expr
-- On KWlocal reduce production operator_expr -> expr DBAR expr
-- On KWin reduce production operator_expr -> expr DBAR expr
-- On KWimmutable reduce production operator_expr -> expr DBAR expr
-- On KWfalse reduce production operator_expr -> expr DBAR expr
-- On KWensure reduce production operator_expr -> expr DBAR expr
-- On KWend reduce production operator_expr -> expr DBAR expr
-- On KWelseif reduce production operator_expr -> expr DBAR expr
-- On KWelse reduce production operator_expr -> expr DBAR expr
-- On KWdo reduce production operator_expr -> expr DBAR expr
-- On KWdeferred reduce production operator_expr -> expr DBAR expr
-- On KWclass reduce production operator_expr -> expr DBAR expr
-- On KWcase reduce production operator_expr -> expr DBAR expr
-- On KWas reduce production operator_expr -> expr DBAR expr
-- On KWand reduce production operator_expr -> expr DBAR expr
-- On KWall reduce production operator_expr -> expr DBAR expr
-- On GT reduce production operator_expr -> expr DBAR expr
-- On GE reduce production operator_expr -> expr DBAR expr
-- On EQ reduce production operator_expr -> expr DBAR expr
-- On DBAR reduce production operator_expr -> expr DBAR expr
-- On DARROW reduce production operator_expr -> expr DBAR expr
-- On COMMA reduce production operator_expr -> expr DBAR expr
-- On COLON reduce production operator_expr -> expr DBAR expr
-- On BAR reduce production operator_expr -> expr DBAR expr

State 187:
expr -> atomic_expr . [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
-- On UIDENTIFIER reduce production expr -> atomic_expr
-- On TIMES reduce production expr -> atomic_expr
-- On SEMICOL reduce production expr -> atomic_expr
-- On RPAREN reduce production expr -> atomic_expr
-- On RBRACKET reduce production expr -> atomic_expr
-- On RBRACE reduce production expr -> atomic_expr
-- On PLUS reduce production expr -> atomic_expr
-- On NUMBER reduce production expr -> atomic_expr
-- On NOTIN reduce production expr -> atomic_expr
-- On NEWLINE reduce production expr -> atomic_expr
-- On NEQ reduce production expr -> atomic_expr
-- On MINUS reduce production expr -> atomic_expr
-- On LT reduce production expr -> atomic_expr
-- On LPAREN reduce production expr -> atomic_expr
-- On LIDENTIFIER reduce production expr -> atomic_expr
-- On LE reduce production expr -> atomic_expr
-- On LBRACKET reduce production expr -> atomic_expr
-- On KWtrue reduce production expr -> atomic_expr
-- On KWthen reduce production expr -> atomic_expr
-- On KWproof reduce production expr -> atomic_expr
-- On KWor reduce production expr -> atomic_expr
-- On KWnote reduce production expr -> atomic_expr
-- On KWlocal reduce production expr -> atomic_expr
-- On KWin reduce production expr -> atomic_expr
-- On KWimmutable reduce production expr -> atomic_expr
-- On KWfalse reduce production expr -> atomic_expr
-- On KWensure reduce production expr -> atomic_expr
-- On KWend reduce production expr -> atomic_expr
-- On KWelseif reduce production expr -> atomic_expr
-- On KWelse reduce production expr -> atomic_expr
-- On KWdo reduce production expr -> atomic_expr
-- On KWdeferred reduce production expr -> atomic_expr
-- On KWclass reduce production expr -> atomic_expr
-- On KWcase reduce production expr -> atomic_expr
-- On KWas reduce production expr -> atomic_expr
-- On KWand reduce production expr -> atomic_expr
-- On KWall reduce production expr -> atomic_expr
-- On GT reduce production expr -> atomic_expr
-- On GE reduce production expr -> atomic_expr
-- On EQ reduce production expr -> atomic_expr
-- On DOT reduce production expr -> atomic_expr
-- On DIVIDE reduce production expr -> atomic_expr
-- On DCOLON reduce production expr -> atomic_expr
-- On DBAR reduce production expr -> atomic_expr
-- On DARROW reduce production expr -> atomic_expr
-- On COMMA reduce production expr -> atomic_expr
-- On COLON reduce production expr -> atomic_expr
-- On CARET reduce production expr -> atomic_expr
-- On BAR reduce production expr -> atomic_expr

State 188:
operator_expr -> expr BAR . expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
-- On USCORE shift to state 109
-- On TIMES shift to state 110
-- On PLUS shift to state 111
-- On NUMBER shift to state 112
-- On MINUS shift to state 113
-- On LPAREN shift to state 114
-- On LIDENTIFIER shift to state 116
-- On LBRACKET shift to state 118
-- On LBRACE shift to state 119
-- On KWtrue shift to state 120
-- On KWsome shift to state 121
-- On KWold shift to state 124
-- On KWnot shift to state 125
-- On KWinspect shift to state 126
-- On KWif shift to state 127
-- On KWfalse shift to state 128
-- On KWall shift to state 129
-- On KWagent shift to state 132
-- On KWResult shift to state 144
-- On operator_expr shift to state 145
-- On expr shift to state 189
-- On exp_inspect shift to state 176
-- On exp_conditional shift to state 177
-- On dotted_id_list shift to state 178
-- On atomic_expr shift to state 187

State 189:
expr -> expr . COMMA expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
expr -> expr . LPAREN expr RPAREN [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
expr -> expr . LBRACKET expr RBRACKET [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
expr -> expr . DOT LIDENTIFIER [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
expr -> expr . DOT LBRACE expr RBRACE [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
expr -> expr . COLON type_nt [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . PLUS expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . MINUS expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . TIMES expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . DIVIDE expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . CARET expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . KWin expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . NOTIN expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . EQ expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . NEQ expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . LT expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . LE expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . GT expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . GE expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . KWas expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . KWand expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . KWor expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . DCOLON expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . COLON expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . BAR expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr BAR expr . [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . DBAR expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . DARROW expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
-- On TIMES shift to state 149
-- On PLUS shift to state 154
-- On MINUS shift to state 161
-- On LPAREN shift to state 151
-- On LBRACKET shift to state 156
-- On DOT shift to state 163
-- On DIVIDE shift to state 170
-- On DCOLON shift to state 172
-- On CARET shift to state 174
-- On UIDENTIFIER reduce production operator_expr -> expr BAR expr
-- On SEMICOL reduce production operator_expr -> expr BAR expr
-- On RPAREN reduce production operator_expr -> expr BAR expr
-- On RBRACKET reduce production operator_expr -> expr BAR expr
-- On RBRACE reduce production operator_expr -> expr BAR expr
-- On NUMBER reduce production operator_expr -> expr BAR expr
-- On NOTIN reduce production operator_expr -> expr BAR expr
-- On NEWLINE reduce production operator_expr -> expr BAR expr
-- On NEQ reduce production operator_expr -> expr BAR expr
-- On LT reduce production operator_expr -> expr BAR expr
-- On LIDENTIFIER reduce production operator_expr -> expr BAR expr
-- On LE reduce production operator_expr -> expr BAR expr
-- On KWtrue reduce production operator_expr -> expr BAR expr
-- On KWthen reduce production operator_expr -> expr BAR expr
-- On KWproof reduce production operator_expr -> expr BAR expr
-- On KWor reduce production operator_expr -> expr BAR expr
-- On KWnote reduce production operator_expr -> expr BAR expr
-- On KWlocal reduce production operator_expr -> expr BAR expr
-- On KWin reduce production operator_expr -> expr BAR expr
-- On KWimmutable reduce production operator_expr -> expr BAR expr
-- On KWfalse reduce production operator_expr -> expr BAR expr
-- On KWensure reduce production operator_expr -> expr BAR expr
-- On KWend reduce production operator_expr -> expr BAR expr
-- On KWelseif reduce production operator_expr -> expr BAR expr
-- On KWelse reduce production operator_expr -> expr BAR expr
-- On KWdo reduce production operator_expr -> expr BAR expr
-- On KWdeferred reduce production operator_expr -> expr BAR expr
-- On KWclass reduce production operator_expr -> expr BAR expr
-- On KWcase reduce production operator_expr -> expr BAR expr
-- On KWas reduce production operator_expr -> expr BAR expr
-- On KWand reduce production operator_expr -> expr BAR expr
-- On KWall reduce production operator_expr -> expr BAR expr
-- On GT reduce production operator_expr -> expr BAR expr
-- On GE reduce production operator_expr -> expr BAR expr
-- On EQ reduce production operator_expr -> expr BAR expr
-- On DBAR reduce production operator_expr -> expr BAR expr
-- On DARROW reduce production operator_expr -> expr BAR expr
-- On COMMA reduce production operator_expr -> expr BAR expr
-- On COLON reduce production operator_expr -> expr BAR expr
-- On BAR reduce production operator_expr -> expr BAR expr

State 190:
operator_expr -> expr LE . expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
-- On USCORE shift to state 109
-- On TIMES shift to state 110
-- On PLUS shift to state 111
-- On NUMBER shift to state 112
-- On MINUS shift to state 113
-- On LPAREN shift to state 114
-- On LIDENTIFIER shift to state 116
-- On LBRACKET shift to state 118
-- On LBRACE shift to state 119
-- On KWtrue shift to state 120
-- On KWsome shift to state 121
-- On KWold shift to state 124
-- On KWnot shift to state 125
-- On KWinspect shift to state 126
-- On KWif shift to state 127
-- On KWfalse shift to state 128
-- On KWall shift to state 129
-- On KWagent shift to state 132
-- On KWResult shift to state 144
-- On operator_expr shift to state 145
-- On expr shift to state 191
-- On exp_inspect shift to state 176
-- On exp_conditional shift to state 177
-- On dotted_id_list shift to state 178
-- On atomic_expr shift to state 187

State 191:
expr -> expr . COMMA expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
expr -> expr . LPAREN expr RPAREN [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
expr -> expr . LBRACKET expr RBRACKET [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
expr -> expr . DOT LIDENTIFIER [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
expr -> expr . DOT LBRACE expr RBRACE [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
expr -> expr . COLON type_nt [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . PLUS expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . MINUS expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . TIMES expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . DIVIDE expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . CARET expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . KWin expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . NOTIN expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . EQ expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . NEQ expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . LT expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . LE expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr LE expr . [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . GT expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . GE expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . KWas expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . KWand expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . KWor expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . DCOLON expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . COLON expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . BAR expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . DBAR expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . DARROW expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
-- On TIMES shift to state 149
-- On PLUS shift to state 154
-- On MINUS shift to state 161
-- On LPAREN shift to state 151
-- On LBRACKET shift to state 156
-- On DOT shift to state 163
-- On DIVIDE shift to state 170
-- On DCOLON shift to state 172
-- On DBAR shift to state 185
-- On CARET shift to state 174
-- On BAR shift to state 188
-- On UIDENTIFIER reduce production operator_expr -> expr LE expr
-- On SEMICOL reduce production operator_expr -> expr LE expr
-- On RPAREN reduce production operator_expr -> expr LE expr
-- On RBRACKET reduce production operator_expr -> expr LE expr
-- On RBRACE reduce production operator_expr -> expr LE expr
-- On NUMBER reduce production operator_expr -> expr LE expr
-- On NEWLINE reduce production operator_expr -> expr LE expr
-- On LIDENTIFIER reduce production operator_expr -> expr LE expr
-- On KWtrue reduce production operator_expr -> expr LE expr
-- On KWthen reduce production operator_expr -> expr LE expr
-- On KWproof reduce production operator_expr -> expr LE expr
-- On KWor reduce production operator_expr -> expr LE expr
-- On KWnote reduce production operator_expr -> expr LE expr
-- On KWlocal reduce production operator_expr -> expr LE expr
-- On KWimmutable reduce production operator_expr -> expr LE expr
-- On KWfalse reduce production operator_expr -> expr LE expr
-- On KWensure reduce production operator_expr -> expr LE expr
-- On KWend reduce production operator_expr -> expr LE expr
-- On KWelseif reduce production operator_expr -> expr LE expr
-- On KWelse reduce production operator_expr -> expr LE expr
-- On KWdo reduce production operator_expr -> expr LE expr
-- On KWdeferred reduce production operator_expr -> expr LE expr
-- On KWclass reduce production operator_expr -> expr LE expr
-- On KWcase reduce production operator_expr -> expr LE expr
-- On KWand reduce production operator_expr -> expr LE expr
-- On KWall reduce production operator_expr -> expr LE expr
-- On DARROW reduce production operator_expr -> expr LE expr
-- On COMMA reduce production operator_expr -> expr LE expr
-- On COLON reduce production operator_expr -> expr LE expr

State 192:
operator_expr -> expr KWor . expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
-- On USCORE shift to state 109
-- On TIMES shift to state 110
-- On PLUS shift to state 111
-- On NUMBER shift to state 112
-- On MINUS shift to state 113
-- On LPAREN shift to state 114
-- On LIDENTIFIER shift to state 116
-- On LBRACKET shift to state 118
-- On LBRACE shift to state 119
-- On KWtrue shift to state 120
-- On KWsome shift to state 121
-- On KWold shift to state 124
-- On KWnot shift to state 125
-- On KWinspect shift to state 126
-- On KWif shift to state 127
-- On KWfalse shift to state 128
-- On KWall shift to state 129
-- On KWagent shift to state 132
-- On KWResult shift to state 144
-- On operator_expr shift to state 145
-- On expr shift to state 193
-- On exp_inspect shift to state 176
-- On exp_conditional shift to state 177
-- On dotted_id_list shift to state 178
-- On atomic_expr shift to state 187

State 193:
expr -> expr . COMMA expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
expr -> expr . LPAREN expr RPAREN [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
expr -> expr . LBRACKET expr RBRACKET [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
expr -> expr . DOT LIDENTIFIER [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
expr -> expr . DOT LBRACE expr RBRACE [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
expr -> expr . COLON type_nt [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . PLUS expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . MINUS expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . TIMES expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . DIVIDE expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . CARET expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . KWin expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . NOTIN expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . EQ expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . NEQ expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . LT expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . LE expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . GT expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . GE expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . KWas expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . KWand expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . KWor expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr KWor expr . [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . DCOLON expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . COLON expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . BAR expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . DBAR expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . DARROW expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
-- On TIMES shift to state 149
-- On PLUS shift to state 154
-- On NOTIN shift to state 159
-- On NEQ shift to state 168
-- On MINUS shift to state 161
-- On LT shift to state 183
-- On LPAREN shift to state 151
-- On LE shift to state 190
-- On LBRACKET shift to state 156
-- On KWin shift to state 194
-- On KWas shift to state 196
-- On GT shift to state 198
-- On GE shift to state 200
-- On EQ shift to state 202
-- On DOT shift to state 163
-- On DIVIDE shift to state 170
-- On DCOLON shift to state 172
-- On DBAR shift to state 185
-- On CARET shift to state 174
-- On BAR shift to state 188
-- On UIDENTIFIER reduce production operator_expr -> expr KWor expr
-- On SEMICOL reduce production operator_expr -> expr KWor expr
-- On RPAREN reduce production operator_expr -> expr KWor expr
-- On RBRACKET reduce production operator_expr -> expr KWor expr
-- On RBRACE reduce production operator_expr -> expr KWor expr
-- On NUMBER reduce production operator_expr -> expr KWor expr
-- On NEWLINE reduce production operator_expr -> expr KWor expr
-- On LIDENTIFIER reduce production operator_expr -> expr KWor expr
-- On KWtrue reduce production operator_expr -> expr KWor expr
-- On KWthen reduce production operator_expr -> expr KWor expr
-- On KWproof reduce production operator_expr -> expr KWor expr
-- On KWor reduce production operator_expr -> expr KWor expr
-- On KWnote reduce production operator_expr -> expr KWor expr
-- On KWlocal reduce production operator_expr -> expr KWor expr
-- On KWimmutable reduce production operator_expr -> expr KWor expr
-- On KWfalse reduce production operator_expr -> expr KWor expr
-- On KWensure reduce production operator_expr -> expr KWor expr
-- On KWend reduce production operator_expr -> expr KWor expr
-- On KWelseif reduce production operator_expr -> expr KWor expr
-- On KWelse reduce production operator_expr -> expr KWor expr
-- On KWdo reduce production operator_expr -> expr KWor expr
-- On KWdeferred reduce production operator_expr -> expr KWor expr
-- On KWclass reduce production operator_expr -> expr KWor expr
-- On KWcase reduce production operator_expr -> expr KWor expr
-- On KWand reduce production operator_expr -> expr KWor expr
-- On KWall reduce production operator_expr -> expr KWor expr
-- On DARROW reduce production operator_expr -> expr KWor expr
-- On COMMA reduce production operator_expr -> expr KWor expr
-- On COLON reduce production operator_expr -> expr KWor expr

State 194:
operator_expr -> expr KWin . expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
-- On USCORE shift to state 109
-- On TIMES shift to state 110
-- On PLUS shift to state 111
-- On NUMBER shift to state 112
-- On MINUS shift to state 113
-- On LPAREN shift to state 114
-- On LIDENTIFIER shift to state 116
-- On LBRACKET shift to state 118
-- On LBRACE shift to state 119
-- On KWtrue shift to state 120
-- On KWsome shift to state 121
-- On KWold shift to state 124
-- On KWnot shift to state 125
-- On KWinspect shift to state 126
-- On KWif shift to state 127
-- On KWfalse shift to state 128
-- On KWall shift to state 129
-- On KWagent shift to state 132
-- On KWResult shift to state 144
-- On operator_expr shift to state 145
-- On expr shift to state 195
-- On exp_inspect shift to state 176
-- On exp_conditional shift to state 177
-- On dotted_id_list shift to state 178
-- On atomic_expr shift to state 187

State 195:
expr -> expr . COMMA expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
expr -> expr . LPAREN expr RPAREN [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
expr -> expr . LBRACKET expr RBRACKET [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
expr -> expr . DOT LIDENTIFIER [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
expr -> expr . DOT LBRACE expr RBRACE [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
expr -> expr . COLON type_nt [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . PLUS expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . MINUS expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . TIMES expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . DIVIDE expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . CARET expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . KWin expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr KWin expr . [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . NOTIN expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . EQ expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . NEQ expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . LT expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . LE expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . GT expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . GE expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . KWas expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . KWand expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . KWor expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . DCOLON expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . COLON expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . BAR expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . DBAR expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . DARROW expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
-- On TIMES shift to state 149
-- On PLUS shift to state 154
-- On MINUS shift to state 161
-- On LPAREN shift to state 151
-- On LBRACKET shift to state 156
-- On DOT shift to state 163
-- On DIVIDE shift to state 170
-- On DCOLON shift to state 172
-- On DBAR shift to state 185
-- On CARET shift to state 174
-- On BAR shift to state 188
-- On UIDENTIFIER reduce production operator_expr -> expr KWin expr
-- On SEMICOL reduce production operator_expr -> expr KWin expr
-- On RPAREN reduce production operator_expr -> expr KWin expr
-- On RBRACKET reduce production operator_expr -> expr KWin expr
-- On RBRACE reduce production operator_expr -> expr KWin expr
-- On NUMBER reduce production operator_expr -> expr KWin expr
-- On NEWLINE reduce production operator_expr -> expr KWin expr
-- On LIDENTIFIER reduce production operator_expr -> expr KWin expr
-- On KWtrue reduce production operator_expr -> expr KWin expr
-- On KWthen reduce production operator_expr -> expr KWin expr
-- On KWproof reduce production operator_expr -> expr KWin expr
-- On KWor reduce production operator_expr -> expr KWin expr
-- On KWnote reduce production operator_expr -> expr KWin expr
-- On KWlocal reduce production operator_expr -> expr KWin expr
-- On KWimmutable reduce production operator_expr -> expr KWin expr
-- On KWfalse reduce production operator_expr -> expr KWin expr
-- On KWensure reduce production operator_expr -> expr KWin expr
-- On KWend reduce production operator_expr -> expr KWin expr
-- On KWelseif reduce production operator_expr -> expr KWin expr
-- On KWelse reduce production operator_expr -> expr KWin expr
-- On KWdo reduce production operator_expr -> expr KWin expr
-- On KWdeferred reduce production operator_expr -> expr KWin expr
-- On KWclass reduce production operator_expr -> expr KWin expr
-- On KWcase reduce production operator_expr -> expr KWin expr
-- On KWand reduce production operator_expr -> expr KWin expr
-- On KWall reduce production operator_expr -> expr KWin expr
-- On DARROW reduce production operator_expr -> expr KWin expr
-- On COMMA reduce production operator_expr -> expr KWin expr
-- On COLON reduce production operator_expr -> expr KWin expr

State 196:
operator_expr -> expr KWas . expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
-- On USCORE shift to state 109
-- On TIMES shift to state 110
-- On PLUS shift to state 111
-- On NUMBER shift to state 112
-- On MINUS shift to state 113
-- On LPAREN shift to state 114
-- On LIDENTIFIER shift to state 116
-- On LBRACKET shift to state 118
-- On LBRACE shift to state 119
-- On KWtrue shift to state 120
-- On KWsome shift to state 121
-- On KWold shift to state 124
-- On KWnot shift to state 125
-- On KWinspect shift to state 126
-- On KWif shift to state 127
-- On KWfalse shift to state 128
-- On KWall shift to state 129
-- On KWagent shift to state 132
-- On KWResult shift to state 144
-- On operator_expr shift to state 145
-- On expr shift to state 197
-- On exp_inspect shift to state 176
-- On exp_conditional shift to state 177
-- On dotted_id_list shift to state 178
-- On atomic_expr shift to state 187

State 197:
expr -> expr . COMMA expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
expr -> expr . LPAREN expr RPAREN [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
expr -> expr . LBRACKET expr RBRACKET [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
expr -> expr . DOT LIDENTIFIER [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
expr -> expr . DOT LBRACE expr RBRACE [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
expr -> expr . COLON type_nt [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . PLUS expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . MINUS expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . TIMES expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . DIVIDE expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . CARET expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . KWin expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . NOTIN expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . EQ expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . NEQ expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . LT expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . LE expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . GT expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . GE expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . KWas expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr KWas expr . [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . KWand expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . KWor expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . DCOLON expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . COLON expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . BAR expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . DBAR expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . DARROW expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
-- On TIMES shift to state 149
-- On PLUS shift to state 154
-- On MINUS shift to state 161
-- On LPAREN shift to state 151
-- On LBRACKET shift to state 156
-- On DOT shift to state 163
-- On DIVIDE shift to state 170
-- On DCOLON shift to state 172
-- On DBAR shift to state 185
-- On CARET shift to state 174
-- On BAR shift to state 188
-- On UIDENTIFIER reduce production operator_expr -> expr KWas expr
-- On SEMICOL reduce production operator_expr -> expr KWas expr
-- On RPAREN reduce production operator_expr -> expr KWas expr
-- On RBRACKET reduce production operator_expr -> expr KWas expr
-- On RBRACE reduce production operator_expr -> expr KWas expr
-- On NUMBER reduce production operator_expr -> expr KWas expr
-- On NEWLINE reduce production operator_expr -> expr KWas expr
-- On LIDENTIFIER reduce production operator_expr -> expr KWas expr
-- On KWtrue reduce production operator_expr -> expr KWas expr
-- On KWthen reduce production operator_expr -> expr KWas expr
-- On KWproof reduce production operator_expr -> expr KWas expr
-- On KWor reduce production operator_expr -> expr KWas expr
-- On KWnote reduce production operator_expr -> expr KWas expr
-- On KWlocal reduce production operator_expr -> expr KWas expr
-- On KWimmutable reduce production operator_expr -> expr KWas expr
-- On KWfalse reduce production operator_expr -> expr KWas expr
-- On KWensure reduce production operator_expr -> expr KWas expr
-- On KWend reduce production operator_expr -> expr KWas expr
-- On KWelseif reduce production operator_expr -> expr KWas expr
-- On KWelse reduce production operator_expr -> expr KWas expr
-- On KWdo reduce production operator_expr -> expr KWas expr
-- On KWdeferred reduce production operator_expr -> expr KWas expr
-- On KWclass reduce production operator_expr -> expr KWas expr
-- On KWcase reduce production operator_expr -> expr KWas expr
-- On KWand reduce production operator_expr -> expr KWas expr
-- On KWall reduce production operator_expr -> expr KWas expr
-- On DARROW reduce production operator_expr -> expr KWas expr
-- On COMMA reduce production operator_expr -> expr KWas expr
-- On COLON reduce production operator_expr -> expr KWas expr

State 198:
operator_expr -> expr GT . expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
-- On USCORE shift to state 109
-- On TIMES shift to state 110
-- On PLUS shift to state 111
-- On NUMBER shift to state 112
-- On MINUS shift to state 113
-- On LPAREN shift to state 114
-- On LIDENTIFIER shift to state 116
-- On LBRACKET shift to state 118
-- On LBRACE shift to state 119
-- On KWtrue shift to state 120
-- On KWsome shift to state 121
-- On KWold shift to state 124
-- On KWnot shift to state 125
-- On KWinspect shift to state 126
-- On KWif shift to state 127
-- On KWfalse shift to state 128
-- On KWall shift to state 129
-- On KWagent shift to state 132
-- On KWResult shift to state 144
-- On operator_expr shift to state 145
-- On expr shift to state 199
-- On exp_inspect shift to state 176
-- On exp_conditional shift to state 177
-- On dotted_id_list shift to state 178
-- On atomic_expr shift to state 187

State 199:
expr -> expr . COMMA expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
expr -> expr . LPAREN expr RPAREN [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
expr -> expr . LBRACKET expr RBRACKET [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
expr -> expr . DOT LIDENTIFIER [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
expr -> expr . DOT LBRACE expr RBRACE [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
expr -> expr . COLON type_nt [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . PLUS expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . MINUS expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . TIMES expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . DIVIDE expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . CARET expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . KWin expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . NOTIN expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . EQ expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . NEQ expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . LT expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . LE expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . GT expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr GT expr . [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . GE expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . KWas expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . KWand expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . KWor expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . DCOLON expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . COLON expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . BAR expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . DBAR expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . DARROW expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
-- On TIMES shift to state 149
-- On PLUS shift to state 154
-- On MINUS shift to state 161
-- On LPAREN shift to state 151
-- On LBRACKET shift to state 156
-- On DOT shift to state 163
-- On DIVIDE shift to state 170
-- On DCOLON shift to state 172
-- On DBAR shift to state 185
-- On CARET shift to state 174
-- On BAR shift to state 188
-- On UIDENTIFIER reduce production operator_expr -> expr GT expr
-- On SEMICOL reduce production operator_expr -> expr GT expr
-- On RPAREN reduce production operator_expr -> expr GT expr
-- On RBRACKET reduce production operator_expr -> expr GT expr
-- On RBRACE reduce production operator_expr -> expr GT expr
-- On NUMBER reduce production operator_expr -> expr GT expr
-- On NEWLINE reduce production operator_expr -> expr GT expr
-- On LIDENTIFIER reduce production operator_expr -> expr GT expr
-- On KWtrue reduce production operator_expr -> expr GT expr
-- On KWthen reduce production operator_expr -> expr GT expr
-- On KWproof reduce production operator_expr -> expr GT expr
-- On KWor reduce production operator_expr -> expr GT expr
-- On KWnote reduce production operator_expr -> expr GT expr
-- On KWlocal reduce production operator_expr -> expr GT expr
-- On KWimmutable reduce production operator_expr -> expr GT expr
-- On KWfalse reduce production operator_expr -> expr GT expr
-- On KWensure reduce production operator_expr -> expr GT expr
-- On KWend reduce production operator_expr -> expr GT expr
-- On KWelseif reduce production operator_expr -> expr GT expr
-- On KWelse reduce production operator_expr -> expr GT expr
-- On KWdo reduce production operator_expr -> expr GT expr
-- On KWdeferred reduce production operator_expr -> expr GT expr
-- On KWclass reduce production operator_expr -> expr GT expr
-- On KWcase reduce production operator_expr -> expr GT expr
-- On KWand reduce production operator_expr -> expr GT expr
-- On KWall reduce production operator_expr -> expr GT expr
-- On DARROW reduce production operator_expr -> expr GT expr
-- On COMMA reduce production operator_expr -> expr GT expr
-- On COLON reduce production operator_expr -> expr GT expr

State 200:
operator_expr -> expr GE . expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
-- On USCORE shift to state 109
-- On TIMES shift to state 110
-- On PLUS shift to state 111
-- On NUMBER shift to state 112
-- On MINUS shift to state 113
-- On LPAREN shift to state 114
-- On LIDENTIFIER shift to state 116
-- On LBRACKET shift to state 118
-- On LBRACE shift to state 119
-- On KWtrue shift to state 120
-- On KWsome shift to state 121
-- On KWold shift to state 124
-- On KWnot shift to state 125
-- On KWinspect shift to state 126
-- On KWif shift to state 127
-- On KWfalse shift to state 128
-- On KWall shift to state 129
-- On KWagent shift to state 132
-- On KWResult shift to state 144
-- On operator_expr shift to state 145
-- On expr shift to state 201
-- On exp_inspect shift to state 176
-- On exp_conditional shift to state 177
-- On dotted_id_list shift to state 178
-- On atomic_expr shift to state 187

State 201:
expr -> expr . COMMA expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
expr -> expr . LPAREN expr RPAREN [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
expr -> expr . LBRACKET expr RBRACKET [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
expr -> expr . DOT LIDENTIFIER [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
expr -> expr . DOT LBRACE expr RBRACE [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
expr -> expr . COLON type_nt [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . PLUS expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . MINUS expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . TIMES expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . DIVIDE expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . CARET expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . KWin expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . NOTIN expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . EQ expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . NEQ expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . LT expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . LE expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . GT expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . GE expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr GE expr . [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . KWas expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . KWand expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . KWor expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . DCOLON expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . COLON expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . BAR expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . DBAR expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . DARROW expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
-- On TIMES shift to state 149
-- On PLUS shift to state 154
-- On MINUS shift to state 161
-- On LPAREN shift to state 151
-- On LBRACKET shift to state 156
-- On DOT shift to state 163
-- On DIVIDE shift to state 170
-- On DCOLON shift to state 172
-- On DBAR shift to state 185
-- On CARET shift to state 174
-- On BAR shift to state 188
-- On UIDENTIFIER reduce production operator_expr -> expr GE expr
-- On SEMICOL reduce production operator_expr -> expr GE expr
-- On RPAREN reduce production operator_expr -> expr GE expr
-- On RBRACKET reduce production operator_expr -> expr GE expr
-- On RBRACE reduce production operator_expr -> expr GE expr
-- On NUMBER reduce production operator_expr -> expr GE expr
-- On NEWLINE reduce production operator_expr -> expr GE expr
-- On LIDENTIFIER reduce production operator_expr -> expr GE expr
-- On KWtrue reduce production operator_expr -> expr GE expr
-- On KWthen reduce production operator_expr -> expr GE expr
-- On KWproof reduce production operator_expr -> expr GE expr
-- On KWor reduce production operator_expr -> expr GE expr
-- On KWnote reduce production operator_expr -> expr GE expr
-- On KWlocal reduce production operator_expr -> expr GE expr
-- On KWimmutable reduce production operator_expr -> expr GE expr
-- On KWfalse reduce production operator_expr -> expr GE expr
-- On KWensure reduce production operator_expr -> expr GE expr
-- On KWend reduce production operator_expr -> expr GE expr
-- On KWelseif reduce production operator_expr -> expr GE expr
-- On KWelse reduce production operator_expr -> expr GE expr
-- On KWdo reduce production operator_expr -> expr GE expr
-- On KWdeferred reduce production operator_expr -> expr GE expr
-- On KWclass reduce production operator_expr -> expr GE expr
-- On KWcase reduce production operator_expr -> expr GE expr
-- On KWand reduce production operator_expr -> expr GE expr
-- On KWall reduce production operator_expr -> expr GE expr
-- On DARROW reduce production operator_expr -> expr GE expr
-- On COMMA reduce production operator_expr -> expr GE expr
-- On COLON reduce production operator_expr -> expr GE expr

State 202:
operator_expr -> expr EQ . expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
-- On USCORE shift to state 109
-- On TIMES shift to state 110
-- On PLUS shift to state 111
-- On NUMBER shift to state 112
-- On MINUS shift to state 113
-- On LPAREN shift to state 114
-- On LIDENTIFIER shift to state 116
-- On LBRACKET shift to state 118
-- On LBRACE shift to state 119
-- On KWtrue shift to state 120
-- On KWsome shift to state 121
-- On KWold shift to state 124
-- On KWnot shift to state 125
-- On KWinspect shift to state 126
-- On KWif shift to state 127
-- On KWfalse shift to state 128
-- On KWall shift to state 129
-- On KWagent shift to state 132
-- On KWResult shift to state 144
-- On operator_expr shift to state 145
-- On expr shift to state 203
-- On exp_inspect shift to state 176
-- On exp_conditional shift to state 177
-- On dotted_id_list shift to state 178
-- On atomic_expr shift to state 187

State 203:
expr -> expr . COMMA expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
expr -> expr . LPAREN expr RPAREN [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
expr -> expr . LBRACKET expr RBRACKET [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
expr -> expr . DOT LIDENTIFIER [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
expr -> expr . DOT LBRACE expr RBRACE [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
expr -> expr . COLON type_nt [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . PLUS expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . MINUS expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . TIMES expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . DIVIDE expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . CARET expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . KWin expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . NOTIN expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . EQ expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr EQ expr . [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . NEQ expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . LT expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . LE expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . GT expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . GE expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . KWas expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . KWand expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . KWor expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . DCOLON expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . COLON expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . BAR expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . DBAR expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . DARROW expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
-- On TIMES shift to state 149
-- On PLUS shift to state 154
-- On MINUS shift to state 161
-- On LPAREN shift to state 151
-- On LBRACKET shift to state 156
-- On DOT shift to state 163
-- On DIVIDE shift to state 170
-- On DCOLON shift to state 172
-- On DBAR shift to state 185
-- On CARET shift to state 174
-- On BAR shift to state 188
-- On UIDENTIFIER reduce production operator_expr -> expr EQ expr
-- On SEMICOL reduce production operator_expr -> expr EQ expr
-- On RPAREN reduce production operator_expr -> expr EQ expr
-- On RBRACKET reduce production operator_expr -> expr EQ expr
-- On RBRACE reduce production operator_expr -> expr EQ expr
-- On NUMBER reduce production operator_expr -> expr EQ expr
-- On NEWLINE reduce production operator_expr -> expr EQ expr
-- On LIDENTIFIER reduce production operator_expr -> expr EQ expr
-- On KWtrue reduce production operator_expr -> expr EQ expr
-- On KWthen reduce production operator_expr -> expr EQ expr
-- On KWproof reduce production operator_expr -> expr EQ expr
-- On KWor reduce production operator_expr -> expr EQ expr
-- On KWnote reduce production operator_expr -> expr EQ expr
-- On KWlocal reduce production operator_expr -> expr EQ expr
-- On KWimmutable reduce production operator_expr -> expr EQ expr
-- On KWfalse reduce production operator_expr -> expr EQ expr
-- On KWensure reduce production operator_expr -> expr EQ expr
-- On KWend reduce production operator_expr -> expr EQ expr
-- On KWelseif reduce production operator_expr -> expr EQ expr
-- On KWelse reduce production operator_expr -> expr EQ expr
-- On KWdo reduce production operator_expr -> expr EQ expr
-- On KWdeferred reduce production operator_expr -> expr EQ expr
-- On KWclass reduce production operator_expr -> expr EQ expr
-- On KWcase reduce production operator_expr -> expr EQ expr
-- On KWand reduce production operator_expr -> expr EQ expr
-- On KWall reduce production operator_expr -> expr EQ expr
-- On DARROW reduce production operator_expr -> expr EQ expr
-- On COMMA reduce production operator_expr -> expr EQ expr
-- On COLON reduce production operator_expr -> expr EQ expr

State 204:
operator_expr -> expr KWand . expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
-- On USCORE shift to state 109
-- On TIMES shift to state 110
-- On PLUS shift to state 111
-- On NUMBER shift to state 112
-- On MINUS shift to state 113
-- On LPAREN shift to state 114
-- On LIDENTIFIER shift to state 116
-- On LBRACKET shift to state 118
-- On LBRACE shift to state 119
-- On KWtrue shift to state 120
-- On KWsome shift to state 121
-- On KWold shift to state 124
-- On KWnot shift to state 125
-- On KWinspect shift to state 126
-- On KWif shift to state 127
-- On KWfalse shift to state 128
-- On KWall shift to state 129
-- On KWagent shift to state 132
-- On KWResult shift to state 144
-- On operator_expr shift to state 145
-- On expr shift to state 205
-- On exp_inspect shift to state 176
-- On exp_conditional shift to state 177
-- On dotted_id_list shift to state 178
-- On atomic_expr shift to state 187

State 205:
expr -> expr . COMMA expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
expr -> expr . LPAREN expr RPAREN [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
expr -> expr . LBRACKET expr RBRACKET [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
expr -> expr . DOT LIDENTIFIER [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
expr -> expr . DOT LBRACE expr RBRACE [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
expr -> expr . COLON type_nt [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . PLUS expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . MINUS expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . TIMES expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . DIVIDE expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . CARET expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . KWin expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . NOTIN expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . EQ expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . NEQ expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . LT expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . LE expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . GT expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . GE expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . KWas expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . KWand expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr KWand expr . [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . KWor expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . DCOLON expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . COLON expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . BAR expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . DBAR expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . DARROW expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
-- On TIMES shift to state 149
-- On PLUS shift to state 154
-- On NOTIN shift to state 159
-- On NEQ shift to state 168
-- On MINUS shift to state 161
-- On LT shift to state 183
-- On LPAREN shift to state 151
-- On LE shift to state 190
-- On LBRACKET shift to state 156
-- On KWin shift to state 194
-- On KWas shift to state 196
-- On GT shift to state 198
-- On GE shift to state 200
-- On EQ shift to state 202
-- On DOT shift to state 163
-- On DIVIDE shift to state 170
-- On DCOLON shift to state 172
-- On DBAR shift to state 185
-- On CARET shift to state 174
-- On BAR shift to state 188
-- On UIDENTIFIER reduce production operator_expr -> expr KWand expr
-- On SEMICOL reduce production operator_expr -> expr KWand expr
-- On RPAREN reduce production operator_expr -> expr KWand expr
-- On RBRACKET reduce production operator_expr -> expr KWand expr
-- On RBRACE reduce production operator_expr -> expr KWand expr
-- On NUMBER reduce production operator_expr -> expr KWand expr
-- On NEWLINE reduce production operator_expr -> expr KWand expr
-- On LIDENTIFIER reduce production operator_expr -> expr KWand expr
-- On KWtrue reduce production operator_expr -> expr KWand expr
-- On KWthen reduce production operator_expr -> expr KWand expr
-- On KWproof reduce production operator_expr -> expr KWand expr
-- On KWor reduce production operator_expr -> expr KWand expr
-- On KWnote reduce production operator_expr -> expr KWand expr
-- On KWlocal reduce production operator_expr -> expr KWand expr
-- On KWimmutable reduce production operator_expr -> expr KWand expr
-- On KWfalse reduce production operator_expr -> expr KWand expr
-- On KWensure reduce production operator_expr -> expr KWand expr
-- On KWend reduce production operator_expr -> expr KWand expr
-- On KWelseif reduce production operator_expr -> expr KWand expr
-- On KWelse reduce production operator_expr -> expr KWand expr
-- On KWdo reduce production operator_expr -> expr KWand expr
-- On KWdeferred reduce production operator_expr -> expr KWand expr
-- On KWclass reduce production operator_expr -> expr KWand expr
-- On KWcase reduce production operator_expr -> expr KWand expr
-- On KWand reduce production operator_expr -> expr KWand expr
-- On KWall reduce production operator_expr -> expr KWand expr
-- On DARROW reduce production operator_expr -> expr KWand expr
-- On COMMA reduce production operator_expr -> expr KWand expr
-- On COLON reduce production operator_expr -> expr KWand expr

State 206:
operator_expr -> expr DARROW . expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
-- On USCORE shift to state 109
-- On TIMES shift to state 110
-- On PLUS shift to state 111
-- On NUMBER shift to state 112
-- On MINUS shift to state 113
-- On LPAREN shift to state 114
-- On LIDENTIFIER shift to state 116
-- On LBRACKET shift to state 118
-- On LBRACE shift to state 119
-- On KWtrue shift to state 120
-- On KWsome shift to state 121
-- On KWold shift to state 124
-- On KWnot shift to state 125
-- On KWinspect shift to state 126
-- On KWif shift to state 127
-- On KWfalse shift to state 128
-- On KWall shift to state 129
-- On KWagent shift to state 132
-- On KWResult shift to state 144
-- On operator_expr shift to state 145
-- On expr shift to state 207
-- On exp_inspect shift to state 176
-- On exp_conditional shift to state 177
-- On dotted_id_list shift to state 178
-- On atomic_expr shift to state 187

State 207:
expr -> expr . COMMA expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
expr -> expr . LPAREN expr RPAREN [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
expr -> expr . LBRACKET expr RBRACKET [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
expr -> expr . DOT LIDENTIFIER [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
expr -> expr . DOT LBRACE expr RBRACE [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
expr -> expr . COLON type_nt [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . PLUS expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . MINUS expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . TIMES expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . DIVIDE expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . CARET expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . KWin expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . NOTIN expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . EQ expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . NEQ expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . LT expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . LE expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . GT expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . GE expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . KWas expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . KWand expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . KWor expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . DCOLON expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . COLON expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . BAR expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . DBAR expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . DARROW expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr DARROW expr . [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
-- On TIMES shift to state 149
-- On PLUS shift to state 154
-- On NOTIN shift to state 159
-- On NEQ shift to state 168
-- On MINUS shift to state 161
-- On LT shift to state 183
-- On LPAREN shift to state 151
-- On LE shift to state 190
-- On LBRACKET shift to state 156
-- On KWor shift to state 192
-- On KWin shift to state 194
-- On KWas shift to state 196
-- On KWand shift to state 204
-- On GT shift to state 198
-- On GE shift to state 200
-- On EQ shift to state 202
-- On DOT shift to state 163
-- On DIVIDE shift to state 170
-- On DCOLON shift to state 172
-- On DBAR shift to state 185
-- On DARROW shift to state 206
-- On CARET shift to state 174
-- On BAR shift to state 188
-- On UIDENTIFIER reduce production operator_expr -> expr DARROW expr
-- On SEMICOL reduce production operator_expr -> expr DARROW expr
-- On RPAREN reduce production operator_expr -> expr DARROW expr
-- On RBRACKET reduce production operator_expr -> expr DARROW expr
-- On RBRACE reduce production operator_expr -> expr DARROW expr
-- On NUMBER reduce production operator_expr -> expr DARROW expr
-- On NEWLINE reduce production operator_expr -> expr DARROW expr
-- On LIDENTIFIER reduce production operator_expr -> expr DARROW expr
-- On KWtrue reduce production operator_expr -> expr DARROW expr
-- On KWthen reduce production operator_expr -> expr DARROW expr
-- On KWproof reduce production operator_expr -> expr DARROW expr
-- On KWnote reduce production operator_expr -> expr DARROW expr
-- On KWlocal reduce production operator_expr -> expr DARROW expr
-- On KWimmutable reduce production operator_expr -> expr DARROW expr
-- On KWfalse reduce production operator_expr -> expr DARROW expr
-- On KWensure reduce production operator_expr -> expr DARROW expr
-- On KWend reduce production operator_expr -> expr DARROW expr
-- On KWelseif reduce production operator_expr -> expr DARROW expr
-- On KWelse reduce production operator_expr -> expr DARROW expr
-- On KWdo reduce production operator_expr -> expr DARROW expr
-- On KWdeferred reduce production operator_expr -> expr DARROW expr
-- On KWclass reduce production operator_expr -> expr DARROW expr
-- On KWcase reduce production operator_expr -> expr DARROW expr
-- On KWall reduce production operator_expr -> expr DARROW expr
-- On COMMA reduce production operator_expr -> expr DARROW expr
-- On COLON reduce production operator_expr -> expr DARROW expr

State 208:
expr -> expr COMMA . expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
-- On USCORE shift to state 109
-- On TIMES shift to state 110
-- On PLUS shift to state 111
-- On NUMBER shift to state 112
-- On MINUS shift to state 113
-- On LPAREN shift to state 114
-- On LIDENTIFIER shift to state 116
-- On LBRACKET shift to state 118
-- On LBRACE shift to state 119
-- On KWtrue shift to state 120
-- On KWsome shift to state 121
-- On KWold shift to state 124
-- On KWnot shift to state 125
-- On KWinspect shift to state 126
-- On KWif shift to state 127
-- On KWfalse shift to state 128
-- On KWall shift to state 129
-- On KWagent shift to state 132
-- On KWResult shift to state 144
-- On operator_expr shift to state 145
-- On expr shift to state 209
-- On exp_inspect shift to state 176
-- On exp_conditional shift to state 177
-- On dotted_id_list shift to state 178
-- On atomic_expr shift to state 187

State 209:
expr -> expr . COMMA expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
expr -> expr COMMA expr . [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
expr -> expr . LPAREN expr RPAREN [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
expr -> expr . LBRACKET expr RBRACKET [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
expr -> expr . DOT LIDENTIFIER [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
expr -> expr . DOT LBRACE expr RBRACE [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
expr -> expr . COLON type_nt [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . PLUS expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . MINUS expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . TIMES expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . DIVIDE expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . CARET expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . KWin expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . NOTIN expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . EQ expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . NEQ expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . LT expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . LE expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . GT expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . GE expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . KWas expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . KWand expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . KWor expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . DCOLON expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . COLON expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . BAR expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . DBAR expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . DARROW expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
-- On TIMES shift to state 149
-- On PLUS shift to state 154
-- On NOTIN shift to state 159
-- On NEQ shift to state 168
-- On MINUS shift to state 161
-- On LT shift to state 183
-- On LPAREN shift to state 151
-- On LE shift to state 190
-- On LBRACKET shift to state 156
-- On KWor shift to state 192
-- On KWin shift to state 194
-- On KWas shift to state 196
-- On KWand shift to state 204
-- On GT shift to state 198
-- On GE shift to state 200
-- On EQ shift to state 202
-- On DOT shift to state 163
-- On DIVIDE shift to state 170
-- On DCOLON shift to state 172
-- On DBAR shift to state 185
-- On DARROW shift to state 206
-- On COMMA shift to state 208
-- On COLON shift to state 210
-- On CARET shift to state 174
-- On BAR shift to state 188
-- On UIDENTIFIER reduce production expr -> expr COMMA expr
-- On SEMICOL reduce production expr -> expr COMMA expr
-- On RPAREN reduce production expr -> expr COMMA expr
-- On RBRACKET reduce production expr -> expr COMMA expr
-- On RBRACE reduce production expr -> expr COMMA expr
-- On NUMBER reduce production expr -> expr COMMA expr
-- On NEWLINE reduce production expr -> expr COMMA expr
-- On LIDENTIFIER reduce production expr -> expr COMMA expr
-- On KWtrue reduce production expr -> expr COMMA expr
-- On KWthen reduce production expr -> expr COMMA expr
-- On KWproof reduce production expr -> expr COMMA expr
-- On KWnote reduce production expr -> expr COMMA expr
-- On KWlocal reduce production expr -> expr COMMA expr
-- On KWimmutable reduce production expr -> expr COMMA expr
-- On KWfalse reduce production expr -> expr COMMA expr
-- On KWensure reduce production expr -> expr COMMA expr
-- On KWend reduce production expr -> expr COMMA expr
-- On KWelseif reduce production expr -> expr COMMA expr
-- On KWelse reduce production expr -> expr COMMA expr
-- On KWdo reduce production expr -> expr COMMA expr
-- On KWdeferred reduce production expr -> expr COMMA expr
-- On KWclass reduce production expr -> expr COMMA expr
-- On KWcase reduce production expr -> expr COMMA expr
-- On KWall reduce production expr -> expr COMMA expr

State 210:
expr -> expr COLON . type_nt [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr COLON . expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
-- On USCORE shift to state 109
-- On UIDENTIFIER shift to state 20
-- On TIMES shift to state 110
-- On PLUS shift to state 111
-- On NUMBER shift to state 112
-- On MINUS shift to state 113
-- On LPAREN shift to state 211
-- On LIDENTIFIER shift to state 116
-- On LBRACKET shift to state 216
-- On LBRACE shift to state 119
-- On KWtrue shift to state 120
-- On KWsome shift to state 121
-- On KWold shift to state 124
-- On KWnot shift to state 125
-- On KWinspect shift to state 126
-- On KWif shift to state 127
-- On KWfalse shift to state 128
-- On KWall shift to state 129
-- On KWagent shift to state 132
-- On KWResult shift to state 144
-- On type_nt shift to state 232
-- On tuple_type shift to state 24
-- On star_type shift to state 25
-- On simple_type shift to state 26
-- On qmark_type shift to state 27
-- On path shift to state 28
-- On operator_expr shift to state 145
-- On list_type shift to state 31
-- On expr shift to state 233
-- On exp_inspect shift to state 176
-- On exp_conditional shift to state 177
-- On elem_type shift to state 43
-- On dotted_id_list shift to state 219
-- On atomic_expr shift to state 187
-- On arrow_type shift to state 46

State 211:
elem_type -> LPAREN . type_nt RPAREN [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE QMARK PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ARROW # ]
expr -> LPAREN . expr RPAREN [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
expr -> LPAREN . operator RPAREN [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
expr -> LPAREN . expr RPAREN ARROW expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
tuple_type -> LPAREN . type_list_min2 RPAREN [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE QMARK PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ARROW # ]
-- On USCORE shift to state 109
-- On UIDENTIFIER shift to state 20
-- On TIMES shift to state 115
-- On ROPERATOR shift to state 58
-- On PLUS shift to state 212
-- On PARENOP shift to state 60
-- On OPERATOR shift to state 61
-- On NUMBER shift to state 112
-- On NOTIN shift to state 62
-- On NEQV shift to state 63
-- On NEQ shift to state 64
-- On MINUS shift to state 214
-- On LT shift to state 66
-- On LPAREN shift to state 211
-- On LIDENTIFIER shift to state 116
-- On LE shift to state 67
-- On LBRACKET shift to state 216
-- On LBRACE shift to state 119
-- On KWtrue shift to state 120
-- On KWsome shift to state 121
-- On KWor shift to state 68
-- On KWold shift to state 124
-- On KWnot shift to state 224
-- On KWinspect shift to state 126
-- On KWin shift to state 70
-- On KWif shift to state 127
-- On KWfalse shift to state 128
-- On KWand shift to state 71
-- On KWall shift to state 129
-- On KWagent shift to state 132
-- On KWResult shift to state 144
-- On GT shift to state 72
-- On GE shift to state 73
-- On EQV shift to state 74
-- On EQ shift to state 75
-- On DIVIDE shift to state 76
-- On DCOLON shift to state 77
-- On DBAR shift to state 78
-- On DARROW shift to state 79
-- On CARET shift to state 80
-- On BRACKETOP shift to state 81
-- On BAR shift to state 82
-- On type_nt shift to state 38
-- On type_list_min2 shift to state 47
-- On tuple_type shift to state 24
-- On star_type shift to state 25
-- On simple_type shift to state 26
-- On qmark_type shift to state 27
-- On path shift to state 28
-- On operator_expr shift to state 145
-- On operator shift to state 226
-- On list_type shift to state 31
-- On expr shift to state 228
-- On exp_inspect shift to state 176
-- On exp_conditional shift to state 177
-- On elem_type shift to state 43
-- On dotted_id_list shift to state 219
-- On atomic_expr shift to state 187
-- On arrow_type shift to state 46

State 212:
operator -> PLUS . [ RPAREN ]
operator_expr -> PLUS . expr [ TIMES RPAREN PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
-- On USCORE shift to state 109
-- On TIMES shift to state 110
-- On PLUS shift to state 111
-- On NUMBER shift to state 112
-- On MINUS shift to state 113
-- On LPAREN shift to state 114
-- On LIDENTIFIER shift to state 116
-- On LBRACKET shift to state 118
-- On LBRACE shift to state 119
-- On KWtrue shift to state 120
-- On KWsome shift to state 121
-- On KWold shift to state 124
-- On KWnot shift to state 125
-- On KWinspect shift to state 126
-- On KWif shift to state 127
-- On KWfalse shift to state 128
-- On KWall shift to state 129
-- On KWagent shift to state 132
-- On KWResult shift to state 144
-- On operator_expr shift to state 145
-- On expr shift to state 213
-- On exp_inspect shift to state 176
-- On exp_conditional shift to state 177
-- On dotted_id_list shift to state 178
-- On atomic_expr shift to state 187
-- On RPAREN reduce production operator -> PLUS

State 213:
expr -> expr . COMMA expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
expr -> expr . LPAREN expr RPAREN [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
expr -> expr . LBRACKET expr RBRACKET [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
expr -> expr . DOT LIDENTIFIER [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
expr -> expr . DOT LBRACE expr RBRACE [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
expr -> expr . COLON type_nt [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . PLUS expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . MINUS expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> PLUS expr . [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . TIMES expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . DIVIDE expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . CARET expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . KWin expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . NOTIN expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . EQ expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . NEQ expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . LT expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . LE expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . GT expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . GE expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . KWas expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . KWand expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . KWor expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . DCOLON expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . COLON expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . BAR expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . DBAR expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . DARROW expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
-- On TIMES shift to state 149
-- On LPAREN shift to state 151
-- On LBRACKET shift to state 156
-- On DOT shift to state 163
-- On DIVIDE shift to state 170
-- On DCOLON shift to state 172
-- On CARET shift to state 174
-- On UIDENTIFIER reduce production operator_expr -> PLUS expr
-- On SEMICOL reduce production operator_expr -> PLUS expr
-- On RPAREN reduce production operator_expr -> PLUS expr
-- On RBRACKET reduce production operator_expr -> PLUS expr
-- On RBRACE reduce production operator_expr -> PLUS expr
-- On PLUS reduce production operator_expr -> PLUS expr
-- On NUMBER reduce production operator_expr -> PLUS expr
-- On NOTIN reduce production operator_expr -> PLUS expr
-- On NEWLINE reduce production operator_expr -> PLUS expr
-- On NEQ reduce production operator_expr -> PLUS expr
-- On MINUS reduce production operator_expr -> PLUS expr
-- On LT reduce production operator_expr -> PLUS expr
-- On LIDENTIFIER reduce production operator_expr -> PLUS expr
-- On LE reduce production operator_expr -> PLUS expr
-- On KWtrue reduce production operator_expr -> PLUS expr
-- On KWthen reduce production operator_expr -> PLUS expr
-- On KWproof reduce production operator_expr -> PLUS expr
-- On KWor reduce production operator_expr -> PLUS expr
-- On KWnote reduce production operator_expr -> PLUS expr
-- On KWlocal reduce production operator_expr -> PLUS expr
-- On KWin reduce production operator_expr -> PLUS expr
-- On KWimmutable reduce production operator_expr -> PLUS expr
-- On KWfalse reduce production operator_expr -> PLUS expr
-- On KWensure reduce production operator_expr -> PLUS expr
-- On KWend reduce production operator_expr -> PLUS expr
-- On KWelseif reduce production operator_expr -> PLUS expr
-- On KWelse reduce production operator_expr -> PLUS expr
-- On KWdo reduce production operator_expr -> PLUS expr
-- On KWdeferred reduce production operator_expr -> PLUS expr
-- On KWclass reduce production operator_expr -> PLUS expr
-- On KWcase reduce production operator_expr -> PLUS expr
-- On KWas reduce production operator_expr -> PLUS expr
-- On KWand reduce production operator_expr -> PLUS expr
-- On KWall reduce production operator_expr -> PLUS expr
-- On GT reduce production operator_expr -> PLUS expr
-- On GE reduce production operator_expr -> PLUS expr
-- On EQ reduce production operator_expr -> PLUS expr
-- On DBAR reduce production operator_expr -> PLUS expr
-- On DARROW reduce production operator_expr -> PLUS expr
-- On COMMA reduce production operator_expr -> PLUS expr
-- On COLON reduce production operator_expr -> PLUS expr
-- On BAR reduce production operator_expr -> PLUS expr

State 214:
operator -> MINUS . [ RPAREN ]
operator_expr -> MINUS . expr [ TIMES RPAREN PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
-- On USCORE shift to state 109
-- On TIMES shift to state 110
-- On PLUS shift to state 111
-- On NUMBER shift to state 112
-- On MINUS shift to state 113
-- On LPAREN shift to state 114
-- On LIDENTIFIER shift to state 116
-- On LBRACKET shift to state 118
-- On LBRACE shift to state 119
-- On KWtrue shift to state 120
-- On KWsome shift to state 121
-- On KWold shift to state 124
-- On KWnot shift to state 125
-- On KWinspect shift to state 126
-- On KWif shift to state 127
-- On KWfalse shift to state 128
-- On KWall shift to state 129
-- On KWagent shift to state 132
-- On KWResult shift to state 144
-- On operator_expr shift to state 145
-- On expr shift to state 215
-- On exp_inspect shift to state 176
-- On exp_conditional shift to state 177
-- On dotted_id_list shift to state 178
-- On atomic_expr shift to state 187
-- On RPAREN reduce production operator -> MINUS

State 215:
expr -> expr . COMMA expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
expr -> expr . LPAREN expr RPAREN [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
expr -> expr . LBRACKET expr RBRACKET [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
expr -> expr . DOT LIDENTIFIER [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
expr -> expr . DOT LBRACE expr RBRACE [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
expr -> expr . COLON type_nt [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . PLUS expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . MINUS expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> MINUS expr . [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . TIMES expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . DIVIDE expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . CARET expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . KWin expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . NOTIN expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . EQ expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . NEQ expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . LT expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . LE expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . GT expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . GE expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . KWas expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . KWand expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . KWor expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . DCOLON expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . COLON expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . BAR expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . DBAR expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . DARROW expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
-- On TIMES shift to state 149
-- On LPAREN shift to state 151
-- On LBRACKET shift to state 156
-- On DOT shift to state 163
-- On DIVIDE shift to state 170
-- On DCOLON shift to state 172
-- On CARET shift to state 174
-- On UIDENTIFIER reduce production operator_expr -> MINUS expr
-- On SEMICOL reduce production operator_expr -> MINUS expr
-- On RPAREN reduce production operator_expr -> MINUS expr
-- On RBRACKET reduce production operator_expr -> MINUS expr
-- On RBRACE reduce production operator_expr -> MINUS expr
-- On PLUS reduce production operator_expr -> MINUS expr
-- On NUMBER reduce production operator_expr -> MINUS expr
-- On NOTIN reduce production operator_expr -> MINUS expr
-- On NEWLINE reduce production operator_expr -> MINUS expr
-- On NEQ reduce production operator_expr -> MINUS expr
-- On MINUS reduce production operator_expr -> MINUS expr
-- On LT reduce production operator_expr -> MINUS expr
-- On LIDENTIFIER reduce production operator_expr -> MINUS expr
-- On LE reduce production operator_expr -> MINUS expr
-- On KWtrue reduce production operator_expr -> MINUS expr
-- On KWthen reduce production operator_expr -> MINUS expr
-- On KWproof reduce production operator_expr -> MINUS expr
-- On KWor reduce production operator_expr -> MINUS expr
-- On KWnote reduce production operator_expr -> MINUS expr
-- On KWlocal reduce production operator_expr -> MINUS expr
-- On KWin reduce production operator_expr -> MINUS expr
-- On KWimmutable reduce production operator_expr -> MINUS expr
-- On KWfalse reduce production operator_expr -> MINUS expr
-- On KWensure reduce production operator_expr -> MINUS expr
-- On KWend reduce production operator_expr -> MINUS expr
-- On KWelseif reduce production operator_expr -> MINUS expr
-- On KWelse reduce production operator_expr -> MINUS expr
-- On KWdo reduce production operator_expr -> MINUS expr
-- On KWdeferred reduce production operator_expr -> MINUS expr
-- On KWclass reduce production operator_expr -> MINUS expr
-- On KWcase reduce production operator_expr -> MINUS expr
-- On KWas reduce production operator_expr -> MINUS expr
-- On KWand reduce production operator_expr -> MINUS expr
-- On KWall reduce production operator_expr -> MINUS expr
-- On GT reduce production operator_expr -> MINUS expr
-- On GE reduce production operator_expr -> MINUS expr
-- On EQ reduce production operator_expr -> MINUS expr
-- On DBAR reduce production operator_expr -> MINUS expr
-- On DARROW reduce production operator_expr -> MINUS expr
-- On COMMA reduce production operator_expr -> MINUS expr
-- On COLON reduce production operator_expr -> MINUS expr
-- On BAR reduce production operator_expr -> MINUS expr

State 216:
expr -> LBRACKET . expr RBRACKET [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
list_type -> LBRACKET . elem_type RBRACKET [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE QMARK PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ARROW # ]
-- On USCORE shift to state 109
-- On UIDENTIFIER shift to state 20
-- On TIMES shift to state 110
-- On PLUS shift to state 111
-- On NUMBER shift to state 112
-- On MINUS shift to state 113
-- On LPAREN shift to state 211
-- On LIDENTIFIER shift to state 116
-- On LBRACKET shift to state 216
-- On LBRACE shift to state 119
-- On KWtrue shift to state 120
-- On KWsome shift to state 121
-- On KWold shift to state 124
-- On KWnot shift to state 125
-- On KWinspect shift to state 126
-- On KWif shift to state 127
-- On KWfalse shift to state 128
-- On KWall shift to state 129
-- On KWagent shift to state 132
-- On KWResult shift to state 144
-- On tuple_type shift to state 24
-- On star_type shift to state 25
-- On simple_type shift to state 26
-- On qmark_type shift to state 27
-- On path shift to state 28
-- On operator_expr shift to state 145
-- On list_type shift to state 31
-- On expr shift to state 217
-- On exp_inspect shift to state 176
-- On exp_conditional shift to state 177
-- On elem_type shift to state 32
-- On dotted_id_list shift to state 219
-- On atomic_expr shift to state 187

State 217:
expr -> LBRACKET expr . RBRACKET [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
expr -> expr . COMMA expr [ TIMES RBRACKET PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
expr -> expr . LPAREN expr RPAREN [ TIMES RBRACKET PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
expr -> expr . LBRACKET expr RBRACKET [ TIMES RBRACKET PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
expr -> expr . DOT LIDENTIFIER [ TIMES RBRACKET PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
expr -> expr . DOT LBRACE expr RBRACE [ TIMES RBRACKET PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
expr -> expr . COLON type_nt [ TIMES RBRACKET PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . PLUS expr [ TIMES RBRACKET PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . MINUS expr [ TIMES RBRACKET PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . TIMES expr [ TIMES RBRACKET PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . DIVIDE expr [ TIMES RBRACKET PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . CARET expr [ TIMES RBRACKET PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . KWin expr [ TIMES RBRACKET PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . NOTIN expr [ TIMES RBRACKET PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . EQ expr [ TIMES RBRACKET PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . NEQ expr [ TIMES RBRACKET PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . LT expr [ TIMES RBRACKET PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . LE expr [ TIMES RBRACKET PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . GT expr [ TIMES RBRACKET PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . GE expr [ TIMES RBRACKET PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . KWas expr [ TIMES RBRACKET PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . KWand expr [ TIMES RBRACKET PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . KWor expr [ TIMES RBRACKET PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . DCOLON expr [ TIMES RBRACKET PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . COLON expr [ TIMES RBRACKET PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . BAR expr [ TIMES RBRACKET PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . DBAR expr [ TIMES RBRACKET PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . DARROW expr [ TIMES RBRACKET PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
-- On TIMES shift to state 149
-- On RBRACKET shift to state 218
-- On PLUS shift to state 154
-- On NOTIN shift to state 159
-- On NEQ shift to state 168
-- On MINUS shift to state 161
-- On LT shift to state 183
-- On LPAREN shift to state 151
-- On LE shift to state 190
-- On LBRACKET shift to state 156
-- On KWor shift to state 192
-- On KWin shift to state 194
-- On KWas shift to state 196
-- On KWand shift to state 204
-- On GT shift to state 198
-- On GE shift to state 200
-- On EQ shift to state 202
-- On DOT shift to state 163
-- On DIVIDE shift to state 170
-- On DCOLON shift to state 172
-- On DBAR shift to state 185
-- On DARROW shift to state 206
-- On COMMA shift to state 208
-- On COLON shift to state 210
-- On CARET shift to state 174
-- On BAR shift to state 188

State 218:
expr -> LBRACKET expr RBRACKET . [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
-- On UIDENTIFIER reduce production expr -> LBRACKET expr RBRACKET
-- On TIMES reduce production expr -> LBRACKET expr RBRACKET
-- On SEMICOL reduce production expr -> LBRACKET expr RBRACKET
-- On RPAREN reduce production expr -> LBRACKET expr RBRACKET
-- On RBRACKET reduce production expr -> LBRACKET expr RBRACKET
-- On RBRACE reduce production expr -> LBRACKET expr RBRACKET
-- On PLUS reduce production expr -> LBRACKET expr RBRACKET
-- On NUMBER reduce production expr -> LBRACKET expr RBRACKET
-- On NOTIN reduce production expr -> LBRACKET expr RBRACKET
-- On NEWLINE reduce production expr -> LBRACKET expr RBRACKET
-- On NEQ reduce production expr -> LBRACKET expr RBRACKET
-- On MINUS reduce production expr -> LBRACKET expr RBRACKET
-- On LT reduce production expr -> LBRACKET expr RBRACKET
-- On LPAREN reduce production expr -> LBRACKET expr RBRACKET
-- On LIDENTIFIER reduce production expr -> LBRACKET expr RBRACKET
-- On LE reduce production expr -> LBRACKET expr RBRACKET
-- On LBRACKET reduce production expr -> LBRACKET expr RBRACKET
-- On KWtrue reduce production expr -> LBRACKET expr RBRACKET
-- On KWthen reduce production expr -> LBRACKET expr RBRACKET
-- On KWproof reduce production expr -> LBRACKET expr RBRACKET
-- On KWor reduce production expr -> LBRACKET expr RBRACKET
-- On KWnote reduce production expr -> LBRACKET expr RBRACKET
-- On KWlocal reduce production expr -> LBRACKET expr RBRACKET
-- On KWin reduce production expr -> LBRACKET expr RBRACKET
-- On KWimmutable reduce production expr -> LBRACKET expr RBRACKET
-- On KWfalse reduce production expr -> LBRACKET expr RBRACKET
-- On KWensure reduce production expr -> LBRACKET expr RBRACKET
-- On KWend reduce production expr -> LBRACKET expr RBRACKET
-- On KWelseif reduce production expr -> LBRACKET expr RBRACKET
-- On KWelse reduce production expr -> LBRACKET expr RBRACKET
-- On KWdo reduce production expr -> LBRACKET expr RBRACKET
-- On KWdeferred reduce production expr -> LBRACKET expr RBRACKET
-- On KWclass reduce production expr -> LBRACKET expr RBRACKET
-- On KWcase reduce production expr -> LBRACKET expr RBRACKET
-- On KWas reduce production expr -> LBRACKET expr RBRACKET
-- On KWand reduce production expr -> LBRACKET expr RBRACKET
-- On KWall reduce production expr -> LBRACKET expr RBRACKET
-- On GT reduce production expr -> LBRACKET expr RBRACKET
-- On GE reduce production expr -> LBRACKET expr RBRACKET
-- On EQ reduce production expr -> LBRACKET expr RBRACKET
-- On DOT reduce production expr -> LBRACKET expr RBRACKET
-- On DIVIDE reduce production expr -> LBRACKET expr RBRACKET
-- On DCOLON reduce production expr -> LBRACKET expr RBRACKET
-- On DBAR reduce production expr -> LBRACKET expr RBRACKET
-- On DARROW reduce production expr -> LBRACKET expr RBRACKET
-- On COMMA reduce production expr -> LBRACKET expr RBRACKET
-- On COLON reduce production expr -> LBRACKET expr RBRACKET
-- On CARET reduce production expr -> LBRACKET expr RBRACKET
-- On BAR reduce production expr -> LBRACKET expr RBRACKET

State 219:
atomic_expr -> dotted_id_list . [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
dotted_id_list -> dotted_id_list . DOT LIDENTIFIER [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
expr -> dotted_id_list . DOT LPAREN expr RPAREN [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
expr -> dotted_id_list . DOT LBRACE expr RBRACE [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
path -> dotted_id_list . DOT [ UIDENTIFIER ]
-- On DOT shift to state 220
-- On UIDENTIFIER reduce production atomic_expr -> dotted_id_list
-- On TIMES reduce production atomic_expr -> dotted_id_list
-- On SEMICOL reduce production atomic_expr -> dotted_id_list
-- On RPAREN reduce production atomic_expr -> dotted_id_list
-- On RBRACKET reduce production atomic_expr -> dotted_id_list
-- On RBRACE reduce production atomic_expr -> dotted_id_list
-- On PLUS reduce production atomic_expr -> dotted_id_list
-- On NUMBER reduce production atomic_expr -> dotted_id_list
-- On NOTIN reduce production atomic_expr -> dotted_id_list
-- On NEWLINE reduce production atomic_expr -> dotted_id_list
-- On NEQ reduce production atomic_expr -> dotted_id_list
-- On MINUS reduce production atomic_expr -> dotted_id_list
-- On LT reduce production atomic_expr -> dotted_id_list
-- On LPAREN reduce production atomic_expr -> dotted_id_list
-- On LIDENTIFIER reduce production atomic_expr -> dotted_id_list
-- On LE reduce production atomic_expr -> dotted_id_list
-- On LBRACKET reduce production atomic_expr -> dotted_id_list
-- On KWtrue reduce production atomic_expr -> dotted_id_list
-- On KWthen reduce production atomic_expr -> dotted_id_list
-- On KWproof reduce production atomic_expr -> dotted_id_list
-- On KWor reduce production atomic_expr -> dotted_id_list
-- On KWnote reduce production atomic_expr -> dotted_id_list
-- On KWlocal reduce production atomic_expr -> dotted_id_list
-- On KWin reduce production atomic_expr -> dotted_id_list
-- On KWimmutable reduce production atomic_expr -> dotted_id_list
-- On KWfalse reduce production atomic_expr -> dotted_id_list
-- On KWensure reduce production atomic_expr -> dotted_id_list
-- On KWend reduce production atomic_expr -> dotted_id_list
-- On KWelseif reduce production atomic_expr -> dotted_id_list
-- On KWelse reduce production atomic_expr -> dotted_id_list
-- On KWdo reduce production atomic_expr -> dotted_id_list
-- On KWdeferred reduce production atomic_expr -> dotted_id_list
-- On KWclass reduce production atomic_expr -> dotted_id_list
-- On KWcase reduce production atomic_expr -> dotted_id_list
-- On KWas reduce production atomic_expr -> dotted_id_list
-- On KWand reduce production atomic_expr -> dotted_id_list
-- On KWall reduce production atomic_expr -> dotted_id_list
-- On GT reduce production atomic_expr -> dotted_id_list
-- On GE reduce production atomic_expr -> dotted_id_list
-- On EQ reduce production atomic_expr -> dotted_id_list
-- On DIVIDE reduce production atomic_expr -> dotted_id_list
-- On DCOLON reduce production atomic_expr -> dotted_id_list
-- On DBAR reduce production atomic_expr -> dotted_id_list
-- On DARROW reduce production atomic_expr -> dotted_id_list
-- On COMMA reduce production atomic_expr -> dotted_id_list
-- On COLON reduce production atomic_expr -> dotted_id_list
-- On CARET reduce production atomic_expr -> dotted_id_list
-- On BAR reduce production atomic_expr -> dotted_id_list

State 220:
dotted_id_list -> dotted_id_list DOT . LIDENTIFIER [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
expr -> dotted_id_list DOT . LPAREN expr RPAREN [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
expr -> dotted_id_list DOT . LBRACE expr RBRACE [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
path -> dotted_id_list DOT . [ UIDENTIFIER ]
-- On LPAREN shift to state 180
-- On LIDENTIFIER shift to state 10
-- On LBRACE shift to state 221
-- On UIDENTIFIER reduce production path -> dotted_id_list DOT

State 221:
expr -> dotted_id_list DOT LBRACE . expr RBRACE [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
-- On USCORE shift to state 109
-- On TIMES shift to state 110
-- On PLUS shift to state 111
-- On NUMBER shift to state 112
-- On MINUS shift to state 113
-- On LPAREN shift to state 114
-- On LIDENTIFIER shift to state 116
-- On LBRACKET shift to state 118
-- On LBRACE shift to state 119
-- On KWtrue shift to state 120
-- On KWsome shift to state 121
-- On KWold shift to state 124
-- On KWnot shift to state 125
-- On KWinspect shift to state 126
-- On KWif shift to state 127
-- On KWfalse shift to state 128
-- On KWall shift to state 129
-- On KWagent shift to state 132
-- On KWResult shift to state 144
-- On operator_expr shift to state 145
-- On expr shift to state 222
-- On exp_inspect shift to state 176
-- On exp_conditional shift to state 177
-- On dotted_id_list shift to state 178
-- On atomic_expr shift to state 187

State 222:
expr -> expr . COMMA expr [ TIMES RBRACE PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
expr -> expr . LPAREN expr RPAREN [ TIMES RBRACE PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
expr -> expr . LBRACKET expr RBRACKET [ TIMES RBRACE PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
expr -> expr . DOT LIDENTIFIER [ TIMES RBRACE PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
expr -> expr . DOT LBRACE expr RBRACE [ TIMES RBRACE PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
expr -> dotted_id_list DOT LBRACE expr . RBRACE [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
expr -> expr . COLON type_nt [ TIMES RBRACE PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . PLUS expr [ TIMES RBRACE PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . MINUS expr [ TIMES RBRACE PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . TIMES expr [ TIMES RBRACE PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . DIVIDE expr [ TIMES RBRACE PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . CARET expr [ TIMES RBRACE PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . KWin expr [ TIMES RBRACE PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . NOTIN expr [ TIMES RBRACE PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . EQ expr [ TIMES RBRACE PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . NEQ expr [ TIMES RBRACE PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . LT expr [ TIMES RBRACE PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . LE expr [ TIMES RBRACE PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . GT expr [ TIMES RBRACE PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . GE expr [ TIMES RBRACE PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . KWas expr [ TIMES RBRACE PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . KWand expr [ TIMES RBRACE PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . KWor expr [ TIMES RBRACE PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . DCOLON expr [ TIMES RBRACE PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . COLON expr [ TIMES RBRACE PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . BAR expr [ TIMES RBRACE PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . DBAR expr [ TIMES RBRACE PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . DARROW expr [ TIMES RBRACE PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
-- On TIMES shift to state 149
-- On RBRACE shift to state 223
-- On PLUS shift to state 154
-- On NOTIN shift to state 159
-- On NEQ shift to state 168
-- On MINUS shift to state 161
-- On LT shift to state 183
-- On LPAREN shift to state 151
-- On LE shift to state 190
-- On LBRACKET shift to state 156
-- On KWor shift to state 192
-- On KWin shift to state 194
-- On KWas shift to state 196
-- On KWand shift to state 204
-- On GT shift to state 198
-- On GE shift to state 200
-- On EQ shift to state 202
-- On DOT shift to state 163
-- On DIVIDE shift to state 170
-- On DCOLON shift to state 172
-- On DBAR shift to state 185
-- On DARROW shift to state 206
-- On COMMA shift to state 208
-- On COLON shift to state 210
-- On CARET shift to state 174
-- On BAR shift to state 188

State 223:
expr -> dotted_id_list DOT LBRACE expr RBRACE . [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
-- On UIDENTIFIER reduce production expr -> dotted_id_list DOT LBRACE expr RBRACE
-- On TIMES reduce production expr -> dotted_id_list DOT LBRACE expr RBRACE
-- On SEMICOL reduce production expr -> dotted_id_list DOT LBRACE expr RBRACE
-- On RPAREN reduce production expr -> dotted_id_list DOT LBRACE expr RBRACE
-- On RBRACKET reduce production expr -> dotted_id_list DOT LBRACE expr RBRACE
-- On RBRACE reduce production expr -> dotted_id_list DOT LBRACE expr RBRACE
-- On PLUS reduce production expr -> dotted_id_list DOT LBRACE expr RBRACE
-- On NUMBER reduce production expr -> dotted_id_list DOT LBRACE expr RBRACE
-- On NOTIN reduce production expr -> dotted_id_list DOT LBRACE expr RBRACE
-- On NEWLINE reduce production expr -> dotted_id_list DOT LBRACE expr RBRACE
-- On NEQ reduce production expr -> dotted_id_list DOT LBRACE expr RBRACE
-- On MINUS reduce production expr -> dotted_id_list DOT LBRACE expr RBRACE
-- On LT reduce production expr -> dotted_id_list DOT LBRACE expr RBRACE
-- On LPAREN reduce production expr -> dotted_id_list DOT LBRACE expr RBRACE
-- On LIDENTIFIER reduce production expr -> dotted_id_list DOT LBRACE expr RBRACE
-- On LE reduce production expr -> dotted_id_list DOT LBRACE expr RBRACE
-- On LBRACKET reduce production expr -> dotted_id_list DOT LBRACE expr RBRACE
-- On KWtrue reduce production expr -> dotted_id_list DOT LBRACE expr RBRACE
-- On KWthen reduce production expr -> dotted_id_list DOT LBRACE expr RBRACE
-- On KWproof reduce production expr -> dotted_id_list DOT LBRACE expr RBRACE
-- On KWor reduce production expr -> dotted_id_list DOT LBRACE expr RBRACE
-- On KWnote reduce production expr -> dotted_id_list DOT LBRACE expr RBRACE
-- On KWlocal reduce production expr -> dotted_id_list DOT LBRACE expr RBRACE
-- On KWin reduce production expr -> dotted_id_list DOT LBRACE expr RBRACE
-- On KWimmutable reduce production expr -> dotted_id_list DOT LBRACE expr RBRACE
-- On KWfalse reduce production expr -> dotted_id_list DOT LBRACE expr RBRACE
-- On KWensure reduce production expr -> dotted_id_list DOT LBRACE expr RBRACE
-- On KWend reduce production expr -> dotted_id_list DOT LBRACE expr RBRACE
-- On KWelseif reduce production expr -> dotted_id_list DOT LBRACE expr RBRACE
-- On KWelse reduce production expr -> dotted_id_list DOT LBRACE expr RBRACE
-- On KWdo reduce production expr -> dotted_id_list DOT LBRACE expr RBRACE
-- On KWdeferred reduce production expr -> dotted_id_list DOT LBRACE expr RBRACE
-- On KWclass reduce production expr -> dotted_id_list DOT LBRACE expr RBRACE
-- On KWcase reduce production expr -> dotted_id_list DOT LBRACE expr RBRACE
-- On KWas reduce production expr -> dotted_id_list DOT LBRACE expr RBRACE
-- On KWand reduce production expr -> dotted_id_list DOT LBRACE expr RBRACE
-- On KWall reduce production expr -> dotted_id_list DOT LBRACE expr RBRACE
-- On GT reduce production expr -> dotted_id_list DOT LBRACE expr RBRACE
-- On GE reduce production expr -> dotted_id_list DOT LBRACE expr RBRACE
-- On EQ reduce production expr -> dotted_id_list DOT LBRACE expr RBRACE
-- On DOT reduce production expr -> dotted_id_list DOT LBRACE expr RBRACE
-- On DIVIDE reduce production expr -> dotted_id_list DOT LBRACE expr RBRACE
-- On DCOLON reduce production expr -> dotted_id_list DOT LBRACE expr RBRACE
-- On DBAR reduce production expr -> dotted_id_list DOT LBRACE expr RBRACE
-- On DARROW reduce production expr -> dotted_id_list DOT LBRACE expr RBRACE
-- On COMMA reduce production expr -> dotted_id_list DOT LBRACE expr RBRACE
-- On COLON reduce production expr -> dotted_id_list DOT LBRACE expr RBRACE
-- On CARET reduce production expr -> dotted_id_list DOT LBRACE expr RBRACE
-- On BAR reduce production expr -> dotted_id_list DOT LBRACE expr RBRACE

State 224:
operator -> KWnot . [ RPAREN ]
operator_expr -> KWnot . expr [ TIMES RPAREN PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
-- On USCORE shift to state 109
-- On TIMES shift to state 110
-- On PLUS shift to state 111
-- On NUMBER shift to state 112
-- On MINUS shift to state 113
-- On LPAREN shift to state 114
-- On LIDENTIFIER shift to state 116
-- On LBRACKET shift to state 118
-- On LBRACE shift to state 119
-- On KWtrue shift to state 120
-- On KWsome shift to state 121
-- On KWold shift to state 124
-- On KWnot shift to state 125
-- On KWinspect shift to state 126
-- On KWif shift to state 127
-- On KWfalse shift to state 128
-- On KWall shift to state 129
-- On KWagent shift to state 132
-- On KWResult shift to state 144
-- On operator_expr shift to state 145
-- On expr shift to state 225
-- On exp_inspect shift to state 176
-- On exp_conditional shift to state 177
-- On dotted_id_list shift to state 178
-- On atomic_expr shift to state 187
-- On RPAREN reduce production operator -> KWnot

State 225:
expr -> expr . COMMA expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
expr -> expr . LPAREN expr RPAREN [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
expr -> expr . LBRACKET expr RBRACKET [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
expr -> expr . DOT LIDENTIFIER [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
expr -> expr . DOT LBRACE expr RBRACE [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
expr -> expr . COLON type_nt [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . PLUS expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . MINUS expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . TIMES expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . DIVIDE expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . CARET expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . KWin expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . NOTIN expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . EQ expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . NEQ expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . LT expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . LE expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . GT expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . GE expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . KWas expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . KWand expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . KWor expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> KWnot expr . [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . DCOLON expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . COLON expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . BAR expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . DBAR expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . DARROW expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
-- On LPAREN shift to state 151
-- On LBRACKET shift to state 156
-- On DOT shift to state 163
-- On UIDENTIFIER reduce production operator_expr -> KWnot expr
-- On TIMES reduce production operator_expr -> KWnot expr
-- On SEMICOL reduce production operator_expr -> KWnot expr
-- On RPAREN reduce production operator_expr -> KWnot expr
-- On RBRACKET reduce production operator_expr -> KWnot expr
-- On RBRACE reduce production operator_expr -> KWnot expr
-- On PLUS reduce production operator_expr -> KWnot expr
-- On NUMBER reduce production operator_expr -> KWnot expr
-- On NOTIN reduce production operator_expr -> KWnot expr
-- On NEWLINE reduce production operator_expr -> KWnot expr
-- On NEQ reduce production operator_expr -> KWnot expr
-- On MINUS reduce production operator_expr -> KWnot expr
-- On LT reduce production operator_expr -> KWnot expr
-- On LIDENTIFIER reduce production operator_expr -> KWnot expr
-- On LE reduce production operator_expr -> KWnot expr
-- On KWtrue reduce production operator_expr -> KWnot expr
-- On KWthen reduce production operator_expr -> KWnot expr
-- On KWproof reduce production operator_expr -> KWnot expr
-- On KWor reduce production operator_expr -> KWnot expr
-- On KWnote reduce production operator_expr -> KWnot expr
-- On KWlocal reduce production operator_expr -> KWnot expr
-- On KWin reduce production operator_expr -> KWnot expr
-- On KWimmutable reduce production operator_expr -> KWnot expr
-- On KWfalse reduce production operator_expr -> KWnot expr
-- On KWensure reduce production operator_expr -> KWnot expr
-- On KWend reduce production operator_expr -> KWnot expr
-- On KWelseif reduce production operator_expr -> KWnot expr
-- On KWelse reduce production operator_expr -> KWnot expr
-- On KWdo reduce production operator_expr -> KWnot expr
-- On KWdeferred reduce production operator_expr -> KWnot expr
-- On KWclass reduce production operator_expr -> KWnot expr
-- On KWcase reduce production operator_expr -> KWnot expr
-- On KWas reduce production operator_expr -> KWnot expr
-- On KWand reduce production operator_expr -> KWnot expr
-- On KWall reduce production operator_expr -> KWnot expr
-- On GT reduce production operator_expr -> KWnot expr
-- On GE reduce production operator_expr -> KWnot expr
-- On EQ reduce production operator_expr -> KWnot expr
-- On DIVIDE reduce production operator_expr -> KWnot expr
-- On DCOLON reduce production operator_expr -> KWnot expr
-- On DBAR reduce production operator_expr -> KWnot expr
-- On DARROW reduce production operator_expr -> KWnot expr
-- On COMMA reduce production operator_expr -> KWnot expr
-- On COLON reduce production operator_expr -> KWnot expr
-- On CARET reduce production operator_expr -> KWnot expr
-- On BAR reduce production operator_expr -> KWnot expr

State 226:
expr -> LPAREN operator . RPAREN [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
-- On RPAREN shift to state 227

State 227:
expr -> LPAREN operator RPAREN . [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
-- On UIDENTIFIER reduce production expr -> LPAREN operator RPAREN
-- On TIMES reduce production expr -> LPAREN operator RPAREN
-- On SEMICOL reduce production expr -> LPAREN operator RPAREN
-- On RPAREN reduce production expr -> LPAREN operator RPAREN
-- On RBRACKET reduce production expr -> LPAREN operator RPAREN
-- On RBRACE reduce production expr -> LPAREN operator RPAREN
-- On PLUS reduce production expr -> LPAREN operator RPAREN
-- On NUMBER reduce production expr -> LPAREN operator RPAREN
-- On NOTIN reduce production expr -> LPAREN operator RPAREN
-- On NEWLINE reduce production expr -> LPAREN operator RPAREN
-- On NEQ reduce production expr -> LPAREN operator RPAREN
-- On MINUS reduce production expr -> LPAREN operator RPAREN
-- On LT reduce production expr -> LPAREN operator RPAREN
-- On LPAREN reduce production expr -> LPAREN operator RPAREN
-- On LIDENTIFIER reduce production expr -> LPAREN operator RPAREN
-- On LE reduce production expr -> LPAREN operator RPAREN
-- On LBRACKET reduce production expr -> LPAREN operator RPAREN
-- On KWtrue reduce production expr -> LPAREN operator RPAREN
-- On KWthen reduce production expr -> LPAREN operator RPAREN
-- On KWproof reduce production expr -> LPAREN operator RPAREN
-- On KWor reduce production expr -> LPAREN operator RPAREN
-- On KWnote reduce production expr -> LPAREN operator RPAREN
-- On KWlocal reduce production expr -> LPAREN operator RPAREN
-- On KWin reduce production expr -> LPAREN operator RPAREN
-- On KWimmutable reduce production expr -> LPAREN operator RPAREN
-- On KWfalse reduce production expr -> LPAREN operator RPAREN
-- On KWensure reduce production expr -> LPAREN operator RPAREN
-- On KWend reduce production expr -> LPAREN operator RPAREN
-- On KWelseif reduce production expr -> LPAREN operator RPAREN
-- On KWelse reduce production expr -> LPAREN operator RPAREN
-- On KWdo reduce production expr -> LPAREN operator RPAREN
-- On KWdeferred reduce production expr -> LPAREN operator RPAREN
-- On KWclass reduce production expr -> LPAREN operator RPAREN
-- On KWcase reduce production expr -> LPAREN operator RPAREN
-- On KWas reduce production expr -> LPAREN operator RPAREN
-- On KWand reduce production expr -> LPAREN operator RPAREN
-- On KWall reduce production expr -> LPAREN operator RPAREN
-- On GT reduce production expr -> LPAREN operator RPAREN
-- On GE reduce production expr -> LPAREN operator RPAREN
-- On EQ reduce production expr -> LPAREN operator RPAREN
-- On DOT reduce production expr -> LPAREN operator RPAREN
-- On DIVIDE reduce production expr -> LPAREN operator RPAREN
-- On DCOLON reduce production expr -> LPAREN operator RPAREN
-- On DBAR reduce production expr -> LPAREN operator RPAREN
-- On DARROW reduce production expr -> LPAREN operator RPAREN
-- On COMMA reduce production expr -> LPAREN operator RPAREN
-- On COLON reduce production expr -> LPAREN operator RPAREN
-- On CARET reduce production expr -> LPAREN operator RPAREN
-- On BAR reduce production expr -> LPAREN operator RPAREN

State 228:
expr -> LPAREN expr . RPAREN [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
expr -> expr . COMMA expr [ TIMES RPAREN PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
expr -> expr . LPAREN expr RPAREN [ TIMES RPAREN PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
expr -> expr . LBRACKET expr RBRACKET [ TIMES RPAREN PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
expr -> expr . DOT LIDENTIFIER [ TIMES RPAREN PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
expr -> expr . DOT LBRACE expr RBRACE [ TIMES RPAREN PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
expr -> expr . COLON type_nt [ TIMES RPAREN PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
expr -> LPAREN expr . RPAREN ARROW expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . PLUS expr [ TIMES RPAREN PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . MINUS expr [ TIMES RPAREN PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . TIMES expr [ TIMES RPAREN PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . DIVIDE expr [ TIMES RPAREN PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . CARET expr [ TIMES RPAREN PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . KWin expr [ TIMES RPAREN PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . NOTIN expr [ TIMES RPAREN PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . EQ expr [ TIMES RPAREN PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . NEQ expr [ TIMES RPAREN PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . LT expr [ TIMES RPAREN PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . LE expr [ TIMES RPAREN PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . GT expr [ TIMES RPAREN PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . GE expr [ TIMES RPAREN PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . KWas expr [ TIMES RPAREN PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . KWand expr [ TIMES RPAREN PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . KWor expr [ TIMES RPAREN PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . DCOLON expr [ TIMES RPAREN PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . COLON expr [ TIMES RPAREN PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . BAR expr [ TIMES RPAREN PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . DBAR expr [ TIMES RPAREN PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . DARROW expr [ TIMES RPAREN PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
-- On TIMES shift to state 149
-- On RPAREN shift to state 229
-- On PLUS shift to state 154
-- On NOTIN shift to state 159
-- On NEQ shift to state 168
-- On MINUS shift to state 161
-- On LT shift to state 183
-- On LPAREN shift to state 151
-- On LE shift to state 190
-- On LBRACKET shift to state 156
-- On KWor shift to state 192
-- On KWin shift to state 194
-- On KWas shift to state 196
-- On KWand shift to state 204
-- On GT shift to state 198
-- On GE shift to state 200
-- On EQ shift to state 202
-- On DOT shift to state 163
-- On DIVIDE shift to state 170
-- On DCOLON shift to state 172
-- On DBAR shift to state 185
-- On DARROW shift to state 206
-- On COMMA shift to state 208
-- On COLON shift to state 210
-- On CARET shift to state 174
-- On BAR shift to state 188

State 229:
expr -> LPAREN expr RPAREN . [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
expr -> LPAREN expr RPAREN . ARROW expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
-- On ARROW shift to state 230
-- On UIDENTIFIER reduce production expr -> LPAREN expr RPAREN
-- On TIMES reduce production expr -> LPAREN expr RPAREN
-- On SEMICOL reduce production expr -> LPAREN expr RPAREN
-- On RPAREN reduce production expr -> LPAREN expr RPAREN
-- On RBRACKET reduce production expr -> LPAREN expr RPAREN
-- On RBRACE reduce production expr -> LPAREN expr RPAREN
-- On PLUS reduce production expr -> LPAREN expr RPAREN
-- On NUMBER reduce production expr -> LPAREN expr RPAREN
-- On NOTIN reduce production expr -> LPAREN expr RPAREN
-- On NEWLINE reduce production expr -> LPAREN expr RPAREN
-- On NEQ reduce production expr -> LPAREN expr RPAREN
-- On MINUS reduce production expr -> LPAREN expr RPAREN
-- On LT reduce production expr -> LPAREN expr RPAREN
-- On LPAREN reduce production expr -> LPAREN expr RPAREN
-- On LIDENTIFIER reduce production expr -> LPAREN expr RPAREN
-- On LE reduce production expr -> LPAREN expr RPAREN
-- On LBRACKET reduce production expr -> LPAREN expr RPAREN
-- On KWtrue reduce production expr -> LPAREN expr RPAREN
-- On KWthen reduce production expr -> LPAREN expr RPAREN
-- On KWproof reduce production expr -> LPAREN expr RPAREN
-- On KWor reduce production expr -> LPAREN expr RPAREN
-- On KWnote reduce production expr -> LPAREN expr RPAREN
-- On KWlocal reduce production expr -> LPAREN expr RPAREN
-- On KWin reduce production expr -> LPAREN expr RPAREN
-- On KWimmutable reduce production expr -> LPAREN expr RPAREN
-- On KWfalse reduce production expr -> LPAREN expr RPAREN
-- On KWensure reduce production expr -> LPAREN expr RPAREN
-- On KWend reduce production expr -> LPAREN expr RPAREN
-- On KWelseif reduce production expr -> LPAREN expr RPAREN
-- On KWelse reduce production expr -> LPAREN expr RPAREN
-- On KWdo reduce production expr -> LPAREN expr RPAREN
-- On KWdeferred reduce production expr -> LPAREN expr RPAREN
-- On KWclass reduce production expr -> LPAREN expr RPAREN
-- On KWcase reduce production expr -> LPAREN expr RPAREN
-- On KWas reduce production expr -> LPAREN expr RPAREN
-- On KWand reduce production expr -> LPAREN expr RPAREN
-- On KWall reduce production expr -> LPAREN expr RPAREN
-- On GT reduce production expr -> LPAREN expr RPAREN
-- On GE reduce production expr -> LPAREN expr RPAREN
-- On EQ reduce production expr -> LPAREN expr RPAREN
-- On DOT reduce production expr -> LPAREN expr RPAREN
-- On DIVIDE reduce production expr -> LPAREN expr RPAREN
-- On DCOLON reduce production expr -> LPAREN expr RPAREN
-- On DBAR reduce production expr -> LPAREN expr RPAREN
-- On DARROW reduce production expr -> LPAREN expr RPAREN
-- On COMMA reduce production expr -> LPAREN expr RPAREN
-- On COLON reduce production expr -> LPAREN expr RPAREN
-- On CARET reduce production expr -> LPAREN expr RPAREN
-- On BAR reduce production expr -> LPAREN expr RPAREN

State 230:
expr -> LPAREN expr RPAREN ARROW . expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
-- On USCORE shift to state 109
-- On TIMES shift to state 110
-- On PLUS shift to state 111
-- On NUMBER shift to state 112
-- On MINUS shift to state 113
-- On LPAREN shift to state 114
-- On LIDENTIFIER shift to state 116
-- On LBRACKET shift to state 118
-- On LBRACE shift to state 119
-- On KWtrue shift to state 120
-- On KWsome shift to state 121
-- On KWold shift to state 124
-- On KWnot shift to state 125
-- On KWinspect shift to state 126
-- On KWif shift to state 127
-- On KWfalse shift to state 128
-- On KWall shift to state 129
-- On KWagent shift to state 132
-- On KWResult shift to state 144
-- On operator_expr shift to state 145
-- On expr shift to state 231
-- On exp_inspect shift to state 176
-- On exp_conditional shift to state 177
-- On dotted_id_list shift to state 178
-- On atomic_expr shift to state 187

State 231:
expr -> expr . COMMA expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
expr -> expr . LPAREN expr RPAREN [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
expr -> expr . LBRACKET expr RBRACKET [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
expr -> expr . DOT LIDENTIFIER [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
expr -> expr . DOT LBRACE expr RBRACE [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
expr -> expr . COLON type_nt [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
expr -> LPAREN expr RPAREN ARROW expr . [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . PLUS expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . MINUS expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . TIMES expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . DIVIDE expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . CARET expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . KWin expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . NOTIN expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . EQ expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . NEQ expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . LT expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . LE expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . GT expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . GE expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . KWas expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . KWand expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . KWor expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . DCOLON expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . COLON expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . BAR expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . DBAR expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . DARROW expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
-- On TIMES shift to state 149
-- On PLUS shift to state 154
-- On NOTIN shift to state 159
-- On NEQ shift to state 168
-- On MINUS shift to state 161
-- On LT shift to state 183
-- On LPAREN shift to state 151
-- On LE shift to state 190
-- On LBRACKET shift to state 156
-- On KWor shift to state 192
-- On KWin shift to state 194
-- On KWas shift to state 196
-- On KWand shift to state 204
-- On GT shift to state 198
-- On GE shift to state 200
-- On EQ shift to state 202
-- On DOT shift to state 163
-- On DIVIDE shift to state 170
-- On DCOLON shift to state 172
-- On DBAR shift to state 185
-- On DARROW shift to state 206
-- On COMMA shift to state 208
-- On COLON shift to state 210
-- On CARET shift to state 174
-- On BAR shift to state 188
-- On UIDENTIFIER reduce production expr -> LPAREN expr RPAREN ARROW expr
-- On SEMICOL reduce production expr -> LPAREN expr RPAREN ARROW expr
-- On RPAREN reduce production expr -> LPAREN expr RPAREN ARROW expr
-- On RBRACKET reduce production expr -> LPAREN expr RPAREN ARROW expr
-- On RBRACE reduce production expr -> LPAREN expr RPAREN ARROW expr
-- On NUMBER reduce production expr -> LPAREN expr RPAREN ARROW expr
-- On NEWLINE reduce production expr -> LPAREN expr RPAREN ARROW expr
-- On LIDENTIFIER reduce production expr -> LPAREN expr RPAREN ARROW expr
-- On KWtrue reduce production expr -> LPAREN expr RPAREN ARROW expr
-- On KWthen reduce production expr -> LPAREN expr RPAREN ARROW expr
-- On KWproof reduce production expr -> LPAREN expr RPAREN ARROW expr
-- On KWnote reduce production expr -> LPAREN expr RPAREN ARROW expr
-- On KWlocal reduce production expr -> LPAREN expr RPAREN ARROW expr
-- On KWimmutable reduce production expr -> LPAREN expr RPAREN ARROW expr
-- On KWfalse reduce production expr -> LPAREN expr RPAREN ARROW expr
-- On KWensure reduce production expr -> LPAREN expr RPAREN ARROW expr
-- On KWend reduce production expr -> LPAREN expr RPAREN ARROW expr
-- On KWelseif reduce production expr -> LPAREN expr RPAREN ARROW expr
-- On KWelse reduce production expr -> LPAREN expr RPAREN ARROW expr
-- On KWdo reduce production expr -> LPAREN expr RPAREN ARROW expr
-- On KWdeferred reduce production expr -> LPAREN expr RPAREN ARROW expr
-- On KWclass reduce production expr -> LPAREN expr RPAREN ARROW expr
-- On KWcase reduce production expr -> LPAREN expr RPAREN ARROW expr
-- On KWall reduce production expr -> LPAREN expr RPAREN ARROW expr

State 232:
expr -> expr COLON type_nt . [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
-- On UIDENTIFIER reduce production expr -> expr COLON type_nt
-- On TIMES reduce production expr -> expr COLON type_nt
-- On SEMICOL reduce production expr -> expr COLON type_nt
-- On RPAREN reduce production expr -> expr COLON type_nt
-- On RBRACKET reduce production expr -> expr COLON type_nt
-- On RBRACE reduce production expr -> expr COLON type_nt
-- On PLUS reduce production expr -> expr COLON type_nt
-- On NUMBER reduce production expr -> expr COLON type_nt
-- On NOTIN reduce production expr -> expr COLON type_nt
-- On NEWLINE reduce production expr -> expr COLON type_nt
-- On NEQ reduce production expr -> expr COLON type_nt
-- On MINUS reduce production expr -> expr COLON type_nt
-- On LT reduce production expr -> expr COLON type_nt
-- On LPAREN reduce production expr -> expr COLON type_nt
-- On LIDENTIFIER reduce production expr -> expr COLON type_nt
-- On LE reduce production expr -> expr COLON type_nt
-- On LBRACKET reduce production expr -> expr COLON type_nt
-- On KWtrue reduce production expr -> expr COLON type_nt
-- On KWthen reduce production expr -> expr COLON type_nt
-- On KWproof reduce production expr -> expr COLON type_nt
-- On KWor reduce production expr -> expr COLON type_nt
-- On KWnote reduce production expr -> expr COLON type_nt
-- On KWlocal reduce production expr -> expr COLON type_nt
-- On KWin reduce production expr -> expr COLON type_nt
-- On KWimmutable reduce production expr -> expr COLON type_nt
-- On KWfalse reduce production expr -> expr COLON type_nt
-- On KWensure reduce production expr -> expr COLON type_nt
-- On KWend reduce production expr -> expr COLON type_nt
-- On KWelseif reduce production expr -> expr COLON type_nt
-- On KWelse reduce production expr -> expr COLON type_nt
-- On KWdo reduce production expr -> expr COLON type_nt
-- On KWdeferred reduce production expr -> expr COLON type_nt
-- On KWclass reduce production expr -> expr COLON type_nt
-- On KWcase reduce production expr -> expr COLON type_nt
-- On KWas reduce production expr -> expr COLON type_nt
-- On KWand reduce production expr -> expr COLON type_nt
-- On KWall reduce production expr -> expr COLON type_nt
-- On GT reduce production expr -> expr COLON type_nt
-- On GE reduce production expr -> expr COLON type_nt
-- On EQ reduce production expr -> expr COLON type_nt
-- On DOT reduce production expr -> expr COLON type_nt
-- On DIVIDE reduce production expr -> expr COLON type_nt
-- On DCOLON reduce production expr -> expr COLON type_nt
-- On DBAR reduce production expr -> expr COLON type_nt
-- On DARROW reduce production expr -> expr COLON type_nt
-- On COMMA reduce production expr -> expr COLON type_nt
-- On COLON reduce production expr -> expr COLON type_nt
-- On CARET reduce production expr -> expr COLON type_nt
-- On BAR reduce production expr -> expr COLON type_nt

State 233:
expr -> expr . COMMA expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
expr -> expr . LPAREN expr RPAREN [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
expr -> expr . LBRACKET expr RBRACKET [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
expr -> expr . DOT LIDENTIFIER [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
expr -> expr . DOT LBRACE expr RBRACE [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
expr -> expr . COLON type_nt [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . PLUS expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . MINUS expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . TIMES expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . DIVIDE expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . CARET expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . KWin expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . NOTIN expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . EQ expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . NEQ expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . LT expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . LE expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . GT expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . GE expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . KWas expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . KWand expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . KWor expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . DCOLON expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . COLON expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr COLON expr . [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . BAR expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . DBAR expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . DARROW expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
-- On TIMES shift to state 149
-- On PLUS shift to state 154
-- On NOTIN shift to state 159
-- On NEQ shift to state 168
-- On MINUS shift to state 161
-- On LT shift to state 183
-- On LPAREN shift to state 151
-- On LE shift to state 190
-- On LBRACKET shift to state 156
-- On KWor shift to state 192
-- On KWin shift to state 194
-- On KWas shift to state 196
-- On KWand shift to state 204
-- On GT shift to state 198
-- On GE shift to state 200
-- On EQ shift to state 202
-- On DOT shift to state 163
-- On DIVIDE shift to state 170
-- On DCOLON shift to state 172
-- On DBAR shift to state 185
-- On DARROW shift to state 206
-- On CARET shift to state 174
-- On BAR shift to state 188
-- On UIDENTIFIER reduce production operator_expr -> expr COLON expr
-- On SEMICOL reduce production operator_expr -> expr COLON expr
-- On RPAREN reduce production operator_expr -> expr COLON expr
-- On RBRACKET reduce production operator_expr -> expr COLON expr
-- On RBRACE reduce production operator_expr -> expr COLON expr
-- On NUMBER reduce production operator_expr -> expr COLON expr
-- On NEWLINE reduce production operator_expr -> expr COLON expr
-- On LIDENTIFIER reduce production operator_expr -> expr COLON expr
-- On KWtrue reduce production operator_expr -> expr COLON expr
-- On KWthen reduce production operator_expr -> expr COLON expr
-- On KWproof reduce production operator_expr -> expr COLON expr
-- On KWnote reduce production operator_expr -> expr COLON expr
-- On KWlocal reduce production operator_expr -> expr COLON expr
-- On KWimmutable reduce production operator_expr -> expr COLON expr
-- On KWfalse reduce production operator_expr -> expr COLON expr
-- On KWensure reduce production operator_expr -> expr COLON expr
-- On KWend reduce production operator_expr -> expr COLON expr
-- On KWelseif reduce production operator_expr -> expr COLON expr
-- On KWelse reduce production operator_expr -> expr COLON expr
-- On KWdo reduce production operator_expr -> expr COLON expr
-- On KWdeferred reduce production operator_expr -> expr COLON expr
-- On KWclass reduce production operator_expr -> expr COLON expr
-- On KWcase reduce production operator_expr -> expr COLON expr
-- On KWall reduce production operator_expr -> expr COLON expr
-- On COMMA reduce production operator_expr -> expr COLON expr
-- On COLON reduce production operator_expr -> expr COLON expr

State 234:
compound_list -> info_expr SEMICOL compound_list . [ KWproof KWnote KWlocal KWensure KWend KWdo KWdeferred ]
-- On KWproof reduce production compound_list -> info_expr SEMICOL compound_list
-- On KWnote reduce production compound_list -> info_expr SEMICOL compound_list
-- On KWlocal reduce production compound_list -> info_expr SEMICOL compound_list
-- On KWensure reduce production compound_list -> info_expr SEMICOL compound_list
-- On KWend reduce production compound_list -> info_expr SEMICOL compound_list
-- On KWdo reduce production compound_list -> info_expr SEMICOL compound_list
-- On KWdeferred reduce production compound_list -> info_expr SEMICOL compound_list

State 235:
compound_list -> info_expr optsemi . [ KWproof KWnote KWlocal KWensure KWend KWdo KWdeferred ]
-- On KWproof reduce production compound_list -> info_expr optsemi
-- On KWnote reduce production compound_list -> info_expr optsemi
-- On KWlocal reduce production compound_list -> info_expr optsemi
-- On KWensure reduce production compound_list -> info_expr optsemi
-- On KWend reduce production compound_list -> info_expr optsemi
-- On KWdo reduce production compound_list -> info_expr optsemi
-- On KWdeferred reduce production compound_list -> info_expr optsemi

State 236:
compound -> compound_list . [ KWproof KWnote KWlocal KWensure KWend KWdo KWdeferred ]
-- On KWproof reduce production compound -> compound_list
-- On KWnote reduce production compound -> compound_list
-- On KWlocal reduce production compound -> compound_list
-- On KWensure reduce production compound -> compound_list
-- On KWend reduce production compound -> compound_list
-- On KWdo reduce production compound -> compound_list
-- On KWdeferred reduce production compound -> compound_list

State 237:
require_block -> KWrequire compound . [ KWproof KWnote KWlocal KWensure KWend KWdo KWdeferred ]
-- On KWproof reduce production require_block -> KWrequire compound
-- On KWnote reduce production require_block -> KWrequire compound
-- On KWlocal reduce production require_block -> KWrequire compound
-- On KWensure reduce production require_block -> KWrequire compound
-- On KWend reduce production require_block -> KWrequire compound
-- On KWdo reduce production require_block -> KWrequire compound
-- On KWdeferred reduce production require_block -> KWrequire compound

State 238:
expr -> KWagent formal_arguments_info return_type_opt optsemi require_block_opt . ensure_block KWend [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
-- On KWensure shift to state 239
-- On ensure_block shift to state 241

State 239:
ensure_block -> KWensure . compound [ KWend ]
-- On USCORE shift to state 109
-- On TIMES shift to state 110
-- On PLUS shift to state 111
-- On NUMBER shift to state 112
-- On MINUS shift to state 113
-- On LPAREN shift to state 114
-- On LIDENTIFIER shift to state 116
-- On LBRACKET shift to state 118
-- On LBRACE shift to state 119
-- On KWtrue shift to state 120
-- On KWsome shift to state 121
-- On KWold shift to state 124
-- On KWnot shift to state 125
-- On KWinspect shift to state 126
-- On KWif shift to state 127
-- On KWfalse shift to state 128
-- On KWall shift to state 129
-- On KWagent shift to state 132
-- On KWResult shift to state 144
-- On operator_expr shift to state 145
-- On info_expr shift to state 146
-- On expr shift to state 148
-- On exp_inspect shift to state 176
-- On exp_conditional shift to state 177
-- On dotted_id_list shift to state 178
-- On compound_list shift to state 236
-- On compound shift to state 240
-- On atomic_expr shift to state 187

State 240:
ensure_block -> KWensure compound . [ KWend ]
-- On KWend reduce production ensure_block -> KWensure compound

State 241:
expr -> KWagent formal_arguments_info return_type_opt optsemi require_block_opt ensure_block . KWend [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
-- On KWend shift to state 242

State 242:
expr -> KWagent formal_arguments_info return_type_opt optsemi require_block_opt ensure_block KWend . [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
-- On UIDENTIFIER reduce production expr -> KWagent formal_arguments_info return_type_opt optsemi require_block_opt ensure_block KWend
-- On TIMES reduce production expr -> KWagent formal_arguments_info return_type_opt optsemi require_block_opt ensure_block KWend
-- On SEMICOL reduce production expr -> KWagent formal_arguments_info return_type_opt optsemi require_block_opt ensure_block KWend
-- On RPAREN reduce production expr -> KWagent formal_arguments_info return_type_opt optsemi require_block_opt ensure_block KWend
-- On RBRACKET reduce production expr -> KWagent formal_arguments_info return_type_opt optsemi require_block_opt ensure_block KWend
-- On RBRACE reduce production expr -> KWagent formal_arguments_info return_type_opt optsemi require_block_opt ensure_block KWend
-- On PLUS reduce production expr -> KWagent formal_arguments_info return_type_opt optsemi require_block_opt ensure_block KWend
-- On NUMBER reduce production expr -> KWagent formal_arguments_info return_type_opt optsemi require_block_opt ensure_block KWend
-- On NOTIN reduce production expr -> KWagent formal_arguments_info return_type_opt optsemi require_block_opt ensure_block KWend
-- On NEWLINE reduce production expr -> KWagent formal_arguments_info return_type_opt optsemi require_block_opt ensure_block KWend
-- On NEQ reduce production expr -> KWagent formal_arguments_info return_type_opt optsemi require_block_opt ensure_block KWend
-- On MINUS reduce production expr -> KWagent formal_arguments_info return_type_opt optsemi require_block_opt ensure_block KWend
-- On LT reduce production expr -> KWagent formal_arguments_info return_type_opt optsemi require_block_opt ensure_block KWend
-- On LPAREN reduce production expr -> KWagent formal_arguments_info return_type_opt optsemi require_block_opt ensure_block KWend
-- On LIDENTIFIER reduce production expr -> KWagent formal_arguments_info return_type_opt optsemi require_block_opt ensure_block KWend
-- On LE reduce production expr -> KWagent formal_arguments_info return_type_opt optsemi require_block_opt ensure_block KWend
-- On LBRACKET reduce production expr -> KWagent formal_arguments_info return_type_opt optsemi require_block_opt ensure_block KWend
-- On KWtrue reduce production expr -> KWagent formal_arguments_info return_type_opt optsemi require_block_opt ensure_block KWend
-- On KWthen reduce production expr -> KWagent formal_arguments_info return_type_opt optsemi require_block_opt ensure_block KWend
-- On KWproof reduce production expr -> KWagent formal_arguments_info return_type_opt optsemi require_block_opt ensure_block KWend
-- On KWor reduce production expr -> KWagent formal_arguments_info return_type_opt optsemi require_block_opt ensure_block KWend
-- On KWnote reduce production expr -> KWagent formal_arguments_info return_type_opt optsemi require_block_opt ensure_block KWend
-- On KWlocal reduce production expr -> KWagent formal_arguments_info return_type_opt optsemi require_block_opt ensure_block KWend
-- On KWin reduce production expr -> KWagent formal_arguments_info return_type_opt optsemi require_block_opt ensure_block KWend
-- On KWimmutable reduce production expr -> KWagent formal_arguments_info return_type_opt optsemi require_block_opt ensure_block KWend
-- On KWfalse reduce production expr -> KWagent formal_arguments_info return_type_opt optsemi require_block_opt ensure_block KWend
-- On KWensure reduce production expr -> KWagent formal_arguments_info return_type_opt optsemi require_block_opt ensure_block KWend
-- On KWend reduce production expr -> KWagent formal_arguments_info return_type_opt optsemi require_block_opt ensure_block KWend
-- On KWelseif reduce production expr -> KWagent formal_arguments_info return_type_opt optsemi require_block_opt ensure_block KWend
-- On KWelse reduce production expr -> KWagent formal_arguments_info return_type_opt optsemi require_block_opt ensure_block KWend
-- On KWdo reduce production expr -> KWagent formal_arguments_info return_type_opt optsemi require_block_opt ensure_block KWend
-- On KWdeferred reduce production expr -> KWagent formal_arguments_info return_type_opt optsemi require_block_opt ensure_block KWend
-- On KWclass reduce production expr -> KWagent formal_arguments_info return_type_opt optsemi require_block_opt ensure_block KWend
-- On KWcase reduce production expr -> KWagent formal_arguments_info return_type_opt optsemi require_block_opt ensure_block KWend
-- On KWas reduce production expr -> KWagent formal_arguments_info return_type_opt optsemi require_block_opt ensure_block KWend
-- On KWand reduce production expr -> KWagent formal_arguments_info return_type_opt optsemi require_block_opt ensure_block KWend
-- On KWall reduce production expr -> KWagent formal_arguments_info return_type_opt optsemi require_block_opt ensure_block KWend
-- On GT reduce production expr -> KWagent formal_arguments_info return_type_opt optsemi require_block_opt ensure_block KWend
-- On GE reduce production expr -> KWagent formal_arguments_info return_type_opt optsemi require_block_opt ensure_block KWend
-- On EQ reduce production expr -> KWagent formal_arguments_info return_type_opt optsemi require_block_opt ensure_block KWend
-- On DOT reduce production expr -> KWagent formal_arguments_info return_type_opt optsemi require_block_opt ensure_block KWend
-- On DIVIDE reduce production expr -> KWagent formal_arguments_info return_type_opt optsemi require_block_opt ensure_block KWend
-- On DCOLON reduce production expr -> KWagent formal_arguments_info return_type_opt optsemi require_block_opt ensure_block KWend
-- On DBAR reduce production expr -> KWagent formal_arguments_info return_type_opt optsemi require_block_opt ensure_block KWend
-- On DARROW reduce production expr -> KWagent formal_arguments_info return_type_opt optsemi require_block_opt ensure_block KWend
-- On COMMA reduce production expr -> KWagent formal_arguments_info return_type_opt optsemi require_block_opt ensure_block KWend
-- On COLON reduce production expr -> KWagent formal_arguments_info return_type_opt optsemi require_block_opt ensure_block KWend
-- On CARET reduce production expr -> KWagent formal_arguments_info return_type_opt optsemi require_block_opt ensure_block KWend
-- On BAR reduce production expr -> KWagent formal_arguments_info return_type_opt optsemi require_block_opt ensure_block KWend

State 243:
require_block_opt -> require_block . [ KWensure ]
-- On KWensure reduce production require_block_opt -> require_block

State 244:
return_type_opt -> return_type . [ UIDENTIFIER SEMICOL NUMBER LPAREN LIDENTIFIER KWtrue KWrequire KWproof KWnote KWlocal KWimmutable KWfalse KWensure KWdo KWdeferred KWclass KWcase KWall ARROW # ]
-- On UIDENTIFIER reduce production return_type_opt -> return_type
-- On SEMICOL reduce production return_type_opt -> return_type
-- On NUMBER reduce production return_type_opt -> return_type
-- On LPAREN reduce production return_type_opt -> return_type
-- On LIDENTIFIER reduce production return_type_opt -> return_type
-- On KWtrue reduce production return_type_opt -> return_type
-- On KWrequire reduce production return_type_opt -> return_type
-- On KWproof reduce production return_type_opt -> return_type
-- On KWnote reduce production return_type_opt -> return_type
-- On KWlocal reduce production return_type_opt -> return_type
-- On KWimmutable reduce production return_type_opt -> return_type
-- On KWfalse reduce production return_type_opt -> return_type
-- On KWensure reduce production return_type_opt -> return_type
-- On KWdo reduce production return_type_opt -> return_type
-- On KWdeferred reduce production return_type_opt -> return_type
-- On KWclass reduce production return_type_opt -> return_type
-- On KWcase reduce production return_type_opt -> return_type
-- On KWall reduce production return_type_opt -> return_type
-- On ARROW reduce production return_type_opt -> return_type

State 245:
formal_arguments_info -> formal_arguments . [ UIDENTIFIER SEMICOL NUMBER LPAREN LIDENTIFIER KWtrue KWrequire KWproof KWnote KWlocal KWimmutable KWfalse KWensure KWdo KWdeferred KWclass KWcase KWall EXCLAM COLON ARROW # ]
-- On UIDENTIFIER reduce production formal_arguments_info -> formal_arguments
-- On SEMICOL reduce production formal_arguments_info -> formal_arguments
-- On NUMBER reduce production formal_arguments_info -> formal_arguments
-- On LPAREN reduce production formal_arguments_info -> formal_arguments
-- On LIDENTIFIER reduce production formal_arguments_info -> formal_arguments
-- On KWtrue reduce production formal_arguments_info -> formal_arguments
-- On KWrequire reduce production formal_arguments_info -> formal_arguments
-- On KWproof reduce production formal_arguments_info -> formal_arguments
-- On KWnote reduce production formal_arguments_info -> formal_arguments
-- On KWlocal reduce production formal_arguments_info -> formal_arguments
-- On KWimmutable reduce production formal_arguments_info -> formal_arguments
-- On KWfalse reduce production formal_arguments_info -> formal_arguments
-- On KWensure reduce production formal_arguments_info -> formal_arguments
-- On KWdo reduce production formal_arguments_info -> formal_arguments
-- On KWdeferred reduce production formal_arguments_info -> formal_arguments
-- On KWclass reduce production formal_arguments_info -> formal_arguments
-- On KWcase reduce production formal_arguments_info -> formal_arguments
-- On KWall reduce production formal_arguments_info -> formal_arguments
-- On EXCLAM reduce production formal_arguments_info -> formal_arguments
-- On COLON reduce production formal_arguments_info -> formal_arguments
-- On ARROW reduce production formal_arguments_info -> formal_arguments

State 246:
expr -> expr . COMMA expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
expr -> expr . LPAREN expr RPAREN [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
expr -> expr . LBRACKET expr RBRACKET [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
expr -> expr . DOT LIDENTIFIER [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
expr -> expr . DOT LBRACE expr RBRACE [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
expr -> expr . COLON type_nt [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
expr -> KWall formal_arguments opt_nl expr . [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . PLUS expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . MINUS expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . TIMES expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . DIVIDE expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . CARET expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . KWin expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . NOTIN expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . EQ expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . NEQ expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . LT expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . LE expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . GT expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . GE expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . KWas expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . KWand expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . KWor expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . DCOLON expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . COLON expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . BAR expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . DBAR expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . DARROW expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
-- On TIMES shift to state 149
-- On PLUS shift to state 154
-- On NOTIN shift to state 159
-- On NEQ shift to state 168
-- On MINUS shift to state 161
-- On LT shift to state 183
-- On LPAREN shift to state 151
-- On LE shift to state 190
-- On LBRACKET shift to state 156
-- On KWor shift to state 192
-- On KWin shift to state 194
-- On KWas shift to state 196
-- On KWand shift to state 204
-- On GT shift to state 198
-- On GE shift to state 200
-- On EQ shift to state 202
-- On DOT shift to state 163
-- On DIVIDE shift to state 170
-- On DCOLON shift to state 172
-- On DBAR shift to state 185
-- On DARROW shift to state 206
-- On COMMA shift to state 208
-- On COLON shift to state 210
-- On CARET shift to state 174
-- On BAR shift to state 188
-- On UIDENTIFIER reduce production expr -> KWall formal_arguments opt_nl expr
-- On SEMICOL reduce production expr -> KWall formal_arguments opt_nl expr
-- On RPAREN reduce production expr -> KWall formal_arguments opt_nl expr
-- On RBRACKET reduce production expr -> KWall formal_arguments opt_nl expr
-- On RBRACE reduce production expr -> KWall formal_arguments opt_nl expr
-- On NUMBER reduce production expr -> KWall formal_arguments opt_nl expr
-- On NEWLINE reduce production expr -> KWall formal_arguments opt_nl expr
-- On LIDENTIFIER reduce production expr -> KWall formal_arguments opt_nl expr
-- On KWtrue reduce production expr -> KWall formal_arguments opt_nl expr
-- On KWthen reduce production expr -> KWall formal_arguments opt_nl expr
-- On KWproof reduce production expr -> KWall formal_arguments opt_nl expr
-- On KWnote reduce production expr -> KWall formal_arguments opt_nl expr
-- On KWlocal reduce production expr -> KWall formal_arguments opt_nl expr
-- On KWimmutable reduce production expr -> KWall formal_arguments opt_nl expr
-- On KWfalse reduce production expr -> KWall formal_arguments opt_nl expr
-- On KWensure reduce production expr -> KWall formal_arguments opt_nl expr
-- On KWend reduce production expr -> KWall formal_arguments opt_nl expr
-- On KWelseif reduce production expr -> KWall formal_arguments opt_nl expr
-- On KWelse reduce production expr -> KWall formal_arguments opt_nl expr
-- On KWdo reduce production expr -> KWall formal_arguments opt_nl expr
-- On KWdeferred reduce production expr -> KWall formal_arguments opt_nl expr
-- On KWclass reduce production expr -> KWall formal_arguments opt_nl expr
-- On KWcase reduce production expr -> KWall formal_arguments opt_nl expr
-- On KWall reduce production expr -> KWall formal_arguments opt_nl expr

State 247:
exp_then_part -> expr . KWthen expr [ KWend KWelseif KWelse ]
expr -> expr . COMMA expr [ TIMES PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWthen KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
expr -> expr . LPAREN expr RPAREN [ TIMES PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWthen KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
expr -> expr . LBRACKET expr RBRACKET [ TIMES PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWthen KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
expr -> expr . DOT LIDENTIFIER [ TIMES PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWthen KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
expr -> expr . DOT LBRACE expr RBRACE [ TIMES PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWthen KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
expr -> expr . COLON type_nt [ TIMES PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWthen KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . PLUS expr [ TIMES PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWthen KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . MINUS expr [ TIMES PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWthen KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . TIMES expr [ TIMES PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWthen KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . DIVIDE expr [ TIMES PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWthen KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . CARET expr [ TIMES PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWthen KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . KWin expr [ TIMES PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWthen KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . NOTIN expr [ TIMES PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWthen KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . EQ expr [ TIMES PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWthen KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . NEQ expr [ TIMES PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWthen KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . LT expr [ TIMES PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWthen KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . LE expr [ TIMES PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWthen KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . GT expr [ TIMES PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWthen KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . GE expr [ TIMES PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWthen KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . KWas expr [ TIMES PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWthen KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . KWand expr [ TIMES PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWthen KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . KWor expr [ TIMES PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWthen KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . DCOLON expr [ TIMES PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWthen KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . COLON expr [ TIMES PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWthen KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . BAR expr [ TIMES PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWthen KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . DBAR expr [ TIMES PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWthen KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . DARROW expr [ TIMES PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWthen KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
-- On TIMES shift to state 149
-- On PLUS shift to state 154
-- On NOTIN shift to state 159
-- On NEQ shift to state 168
-- On MINUS shift to state 161
-- On LT shift to state 183
-- On LPAREN shift to state 151
-- On LE shift to state 190
-- On LBRACKET shift to state 156
-- On KWthen shift to state 248
-- On KWor shift to state 192
-- On KWin shift to state 194
-- On KWas shift to state 196
-- On KWand shift to state 204
-- On GT shift to state 198
-- On GE shift to state 200
-- On EQ shift to state 202
-- On DOT shift to state 163
-- On DIVIDE shift to state 170
-- On DCOLON shift to state 172
-- On DBAR shift to state 185
-- On DARROW shift to state 206
-- On COMMA shift to state 208
-- On COLON shift to state 210
-- On CARET shift to state 174
-- On BAR shift to state 188

State 248:
exp_then_part -> expr KWthen . expr [ KWend KWelseif KWelse ]
-- On USCORE shift to state 109
-- On TIMES shift to state 110
-- On PLUS shift to state 111
-- On NUMBER shift to state 112
-- On MINUS shift to state 113
-- On LPAREN shift to state 114
-- On LIDENTIFIER shift to state 116
-- On LBRACKET shift to state 118
-- On LBRACE shift to state 119
-- On KWtrue shift to state 120
-- On KWsome shift to state 121
-- On KWold shift to state 124
-- On KWnot shift to state 125
-- On KWinspect shift to state 126
-- On KWif shift to state 127
-- On KWfalse shift to state 128
-- On KWall shift to state 129
-- On KWagent shift to state 132
-- On KWResult shift to state 144
-- On operator_expr shift to state 145
-- On expr shift to state 249
-- On exp_inspect shift to state 176
-- On exp_conditional shift to state 177
-- On dotted_id_list shift to state 178
-- On atomic_expr shift to state 187

State 249:
exp_then_part -> expr KWthen expr . [ KWend KWelseif KWelse ]
expr -> expr . COMMA expr [ TIMES PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWend KWelseif KWelse KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
expr -> expr . LPAREN expr RPAREN [ TIMES PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWend KWelseif KWelse KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
expr -> expr . LBRACKET expr RBRACKET [ TIMES PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWend KWelseif KWelse KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
expr -> expr . DOT LIDENTIFIER [ TIMES PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWend KWelseif KWelse KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
expr -> expr . DOT LBRACE expr RBRACE [ TIMES PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWend KWelseif KWelse KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
expr -> expr . COLON type_nt [ TIMES PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWend KWelseif KWelse KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . PLUS expr [ TIMES PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWend KWelseif KWelse KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . MINUS expr [ TIMES PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWend KWelseif KWelse KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . TIMES expr [ TIMES PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWend KWelseif KWelse KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . DIVIDE expr [ TIMES PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWend KWelseif KWelse KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . CARET expr [ TIMES PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWend KWelseif KWelse KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . KWin expr [ TIMES PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWend KWelseif KWelse KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . NOTIN expr [ TIMES PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWend KWelseif KWelse KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . EQ expr [ TIMES PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWend KWelseif KWelse KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . NEQ expr [ TIMES PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWend KWelseif KWelse KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . LT expr [ TIMES PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWend KWelseif KWelse KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . LE expr [ TIMES PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWend KWelseif KWelse KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . GT expr [ TIMES PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWend KWelseif KWelse KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . GE expr [ TIMES PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWend KWelseif KWelse KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . KWas expr [ TIMES PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWend KWelseif KWelse KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . KWand expr [ TIMES PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWend KWelseif KWelse KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . KWor expr [ TIMES PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWend KWelseif KWelse KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . DCOLON expr [ TIMES PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWend KWelseif KWelse KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . COLON expr [ TIMES PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWend KWelseif KWelse KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . BAR expr [ TIMES PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWend KWelseif KWelse KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . DBAR expr [ TIMES PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWend KWelseif KWelse KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . DARROW expr [ TIMES PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWend KWelseif KWelse KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
-- On TIMES shift to state 149
-- On PLUS shift to state 154
-- On NOTIN shift to state 159
-- On NEQ shift to state 168
-- On MINUS shift to state 161
-- On LT shift to state 183
-- On LPAREN shift to state 151
-- On LE shift to state 190
-- On LBRACKET shift to state 156
-- On KWor shift to state 192
-- On KWin shift to state 194
-- On KWas shift to state 196
-- On KWand shift to state 204
-- On GT shift to state 198
-- On GE shift to state 200
-- On EQ shift to state 202
-- On DOT shift to state 163
-- On DIVIDE shift to state 170
-- On DCOLON shift to state 172
-- On DBAR shift to state 185
-- On DARROW shift to state 206
-- On COMMA shift to state 208
-- On COLON shift to state 210
-- On CARET shift to state 174
-- On BAR shift to state 188
-- On KWend reduce production exp_then_part -> expr KWthen expr
-- On KWelseif reduce production exp_then_part -> expr KWthen expr
-- On KWelse reduce production exp_then_part -> expr KWthen expr

State 250:
exp_conditional -> KWif exp_then_part_list . exp_else_part KWend [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
-- On KWelse shift to state 251
-- On exp_else_part shift to state 253
-- On KWend reduce production exp_else_part -> 

State 251:
exp_else_part -> KWelse . expr [ KWend ]
-- On USCORE shift to state 109
-- On TIMES shift to state 110
-- On PLUS shift to state 111
-- On NUMBER shift to state 112
-- On MINUS shift to state 113
-- On LPAREN shift to state 114
-- On LIDENTIFIER shift to state 116
-- On LBRACKET shift to state 118
-- On LBRACE shift to state 119
-- On KWtrue shift to state 120
-- On KWsome shift to state 121
-- On KWold shift to state 124
-- On KWnot shift to state 125
-- On KWinspect shift to state 126
-- On KWif shift to state 127
-- On KWfalse shift to state 128
-- On KWall shift to state 129
-- On KWagent shift to state 132
-- On KWResult shift to state 144
-- On operator_expr shift to state 145
-- On expr shift to state 252
-- On exp_inspect shift to state 176
-- On exp_conditional shift to state 177
-- On dotted_id_list shift to state 178
-- On atomic_expr shift to state 187

State 252:
exp_else_part -> KWelse expr . [ KWend ]
expr -> expr . COMMA expr [ TIMES PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWend KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
expr -> expr . LPAREN expr RPAREN [ TIMES PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWend KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
expr -> expr . LBRACKET expr RBRACKET [ TIMES PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWend KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
expr -> expr . DOT LIDENTIFIER [ TIMES PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWend KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
expr -> expr . DOT LBRACE expr RBRACE [ TIMES PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWend KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
expr -> expr . COLON type_nt [ TIMES PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWend KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . PLUS expr [ TIMES PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWend KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . MINUS expr [ TIMES PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWend KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . TIMES expr [ TIMES PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWend KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . DIVIDE expr [ TIMES PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWend KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . CARET expr [ TIMES PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWend KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . KWin expr [ TIMES PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWend KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . NOTIN expr [ TIMES PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWend KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . EQ expr [ TIMES PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWend KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . NEQ expr [ TIMES PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWend KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . LT expr [ TIMES PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWend KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . LE expr [ TIMES PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWend KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . GT expr [ TIMES PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWend KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . GE expr [ TIMES PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWend KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . KWas expr [ TIMES PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWend KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . KWand expr [ TIMES PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWend KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . KWor expr [ TIMES PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWend KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . DCOLON expr [ TIMES PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWend KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . COLON expr [ TIMES PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWend KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . BAR expr [ TIMES PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWend KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . DBAR expr [ TIMES PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWend KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . DARROW expr [ TIMES PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWend KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
-- On TIMES shift to state 149
-- On PLUS shift to state 154
-- On NOTIN shift to state 159
-- On NEQ shift to state 168
-- On MINUS shift to state 161
-- On LT shift to state 183
-- On LPAREN shift to state 151
-- On LE shift to state 190
-- On LBRACKET shift to state 156
-- On KWor shift to state 192
-- On KWin shift to state 194
-- On KWas shift to state 196
-- On KWand shift to state 204
-- On GT shift to state 198
-- On GE shift to state 200
-- On EQ shift to state 202
-- On DOT shift to state 163
-- On DIVIDE shift to state 170
-- On DCOLON shift to state 172
-- On DBAR shift to state 185
-- On DARROW shift to state 206
-- On COMMA shift to state 208
-- On COLON shift to state 210
-- On CARET shift to state 174
-- On BAR shift to state 188
-- On KWend reduce production exp_else_part -> KWelse expr

State 253:
exp_conditional -> KWif exp_then_part_list exp_else_part . KWend [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
-- On KWend shift to state 254

State 254:
exp_conditional -> KWif exp_then_part_list exp_else_part KWend . [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
-- On UIDENTIFIER reduce production exp_conditional -> KWif exp_then_part_list exp_else_part KWend
-- On TIMES reduce production exp_conditional -> KWif exp_then_part_list exp_else_part KWend
-- On SEMICOL reduce production exp_conditional -> KWif exp_then_part_list exp_else_part KWend
-- On RPAREN reduce production exp_conditional -> KWif exp_then_part_list exp_else_part KWend
-- On RBRACKET reduce production exp_conditional -> KWif exp_then_part_list exp_else_part KWend
-- On RBRACE reduce production exp_conditional -> KWif exp_then_part_list exp_else_part KWend
-- On PLUS reduce production exp_conditional -> KWif exp_then_part_list exp_else_part KWend
-- On NUMBER reduce production exp_conditional -> KWif exp_then_part_list exp_else_part KWend
-- On NOTIN reduce production exp_conditional -> KWif exp_then_part_list exp_else_part KWend
-- On NEWLINE reduce production exp_conditional -> KWif exp_then_part_list exp_else_part KWend
-- On NEQ reduce production exp_conditional -> KWif exp_then_part_list exp_else_part KWend
-- On MINUS reduce production exp_conditional -> KWif exp_then_part_list exp_else_part KWend
-- On LT reduce production exp_conditional -> KWif exp_then_part_list exp_else_part KWend
-- On LPAREN reduce production exp_conditional -> KWif exp_then_part_list exp_else_part KWend
-- On LIDENTIFIER reduce production exp_conditional -> KWif exp_then_part_list exp_else_part KWend
-- On LE reduce production exp_conditional -> KWif exp_then_part_list exp_else_part KWend
-- On LBRACKET reduce production exp_conditional -> KWif exp_then_part_list exp_else_part KWend
-- On KWtrue reduce production exp_conditional -> KWif exp_then_part_list exp_else_part KWend
-- On KWthen reduce production exp_conditional -> KWif exp_then_part_list exp_else_part KWend
-- On KWproof reduce production exp_conditional -> KWif exp_then_part_list exp_else_part KWend
-- On KWor reduce production exp_conditional -> KWif exp_then_part_list exp_else_part KWend
-- On KWnote reduce production exp_conditional -> KWif exp_then_part_list exp_else_part KWend
-- On KWlocal reduce production exp_conditional -> KWif exp_then_part_list exp_else_part KWend
-- On KWin reduce production exp_conditional -> KWif exp_then_part_list exp_else_part KWend
-- On KWimmutable reduce production exp_conditional -> KWif exp_then_part_list exp_else_part KWend
-- On KWfalse reduce production exp_conditional -> KWif exp_then_part_list exp_else_part KWend
-- On KWensure reduce production exp_conditional -> KWif exp_then_part_list exp_else_part KWend
-- On KWend reduce production exp_conditional -> KWif exp_then_part_list exp_else_part KWend
-- On KWelseif reduce production exp_conditional -> KWif exp_then_part_list exp_else_part KWend
-- On KWelse reduce production exp_conditional -> KWif exp_then_part_list exp_else_part KWend
-- On KWdo reduce production exp_conditional -> KWif exp_then_part_list exp_else_part KWend
-- On KWdeferred reduce production exp_conditional -> KWif exp_then_part_list exp_else_part KWend
-- On KWclass reduce production exp_conditional -> KWif exp_then_part_list exp_else_part KWend
-- On KWcase reduce production exp_conditional -> KWif exp_then_part_list exp_else_part KWend
-- On KWas reduce production exp_conditional -> KWif exp_then_part_list exp_else_part KWend
-- On KWand reduce production exp_conditional -> KWif exp_then_part_list exp_else_part KWend
-- On KWall reduce production exp_conditional -> KWif exp_then_part_list exp_else_part KWend
-- On GT reduce production exp_conditional -> KWif exp_then_part_list exp_else_part KWend
-- On GE reduce production exp_conditional -> KWif exp_then_part_list exp_else_part KWend
-- On EQ reduce production exp_conditional -> KWif exp_then_part_list exp_else_part KWend
-- On DOT reduce production exp_conditional -> KWif exp_then_part_list exp_else_part KWend
-- On DIVIDE reduce production exp_conditional -> KWif exp_then_part_list exp_else_part KWend
-- On DCOLON reduce production exp_conditional -> KWif exp_then_part_list exp_else_part KWend
-- On DBAR reduce production exp_conditional -> KWif exp_then_part_list exp_else_part KWend
-- On DARROW reduce production exp_conditional -> KWif exp_then_part_list exp_else_part KWend
-- On COMMA reduce production exp_conditional -> KWif exp_then_part_list exp_else_part KWend
-- On COLON reduce production exp_conditional -> KWif exp_then_part_list exp_else_part KWend
-- On CARET reduce production exp_conditional -> KWif exp_then_part_list exp_else_part KWend
-- On BAR reduce production exp_conditional -> KWif exp_then_part_list exp_else_part KWend

State 255:
exp_then_part_list -> exp_then_part . [ KWend KWelse ]
exp_then_part_list -> exp_then_part . KWelseif exp_then_part_list [ KWend KWelse ]
-- On KWelseif shift to state 256
-- On KWend reduce production exp_then_part_list -> exp_then_part
-- On KWelse reduce production exp_then_part_list -> exp_then_part

State 256:
exp_then_part_list -> exp_then_part KWelseif . exp_then_part_list [ KWend KWelse ]
-- On USCORE shift to state 109
-- On TIMES shift to state 110
-- On PLUS shift to state 111
-- On NUMBER shift to state 112
-- On MINUS shift to state 113
-- On LPAREN shift to state 114
-- On LIDENTIFIER shift to state 116
-- On LBRACKET shift to state 118
-- On LBRACE shift to state 119
-- On KWtrue shift to state 120
-- On KWsome shift to state 121
-- On KWold shift to state 124
-- On KWnot shift to state 125
-- On KWinspect shift to state 126
-- On KWif shift to state 127
-- On KWfalse shift to state 128
-- On KWall shift to state 129
-- On KWagent shift to state 132
-- On KWResult shift to state 144
-- On operator_expr shift to state 145
-- On expr shift to state 247
-- On exp_then_part_list shift to state 257
-- On exp_then_part shift to state 255
-- On exp_inspect shift to state 176
-- On exp_conditional shift to state 177
-- On dotted_id_list shift to state 178
-- On atomic_expr shift to state 187

State 257:
exp_then_part_list -> exp_then_part KWelseif exp_then_part_list . [ KWend KWelse ]
-- On KWend reduce production exp_then_part_list -> exp_then_part KWelseif exp_then_part_list
-- On KWelse reduce production exp_then_part_list -> exp_then_part KWelseif exp_then_part_list

State 258:
exp_inspect -> KWinspect expr . exp_case_list KWend [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
expr -> expr . COMMA expr [ TIMES PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWcase KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
expr -> expr . LPAREN expr RPAREN [ TIMES PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWcase KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
expr -> expr . LBRACKET expr RBRACKET [ TIMES PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWcase KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
expr -> expr . DOT LIDENTIFIER [ TIMES PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWcase KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
expr -> expr . DOT LBRACE expr RBRACE [ TIMES PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWcase KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
expr -> expr . COLON type_nt [ TIMES PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWcase KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . PLUS expr [ TIMES PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWcase KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . MINUS expr [ TIMES PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWcase KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . TIMES expr [ TIMES PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWcase KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . DIVIDE expr [ TIMES PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWcase KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . CARET expr [ TIMES PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWcase KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . KWin expr [ TIMES PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWcase KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . NOTIN expr [ TIMES PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWcase KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . EQ expr [ TIMES PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWcase KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . NEQ expr [ TIMES PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWcase KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . LT expr [ TIMES PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWcase KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . LE expr [ TIMES PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWcase KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . GT expr [ TIMES PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWcase KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . GE expr [ TIMES PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWcase KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . KWas expr [ TIMES PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWcase KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . KWand expr [ TIMES PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWcase KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . KWor expr [ TIMES PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWcase KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . DCOLON expr [ TIMES PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWcase KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . COLON expr [ TIMES PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWcase KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . BAR expr [ TIMES PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWcase KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . DBAR expr [ TIMES PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWcase KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . DARROW expr [ TIMES PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWcase KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
-- On TIMES shift to state 149
-- On PLUS shift to state 154
-- On NOTIN shift to state 159
-- On NEQ shift to state 168
-- On MINUS shift to state 161
-- On LT shift to state 183
-- On LPAREN shift to state 151
-- On LE shift to state 190
-- On LBRACKET shift to state 156
-- On KWor shift to state 192
-- On KWin shift to state 194
-- On KWcase shift to state 259
-- On KWas shift to state 196
-- On KWand shift to state 204
-- On GT shift to state 198
-- On GE shift to state 200
-- On EQ shift to state 202
-- On DOT shift to state 163
-- On DIVIDE shift to state 170
-- On DCOLON shift to state 172
-- On DBAR shift to state 185
-- On DARROW shift to state 206
-- On COMMA shift to state 208
-- On COLON shift to state 210
-- On CARET shift to state 174
-- On BAR shift to state 188
-- On exp_case_list shift to state 263
-- On exp_case shift to state 265

State 259:
exp_case -> KWcase . expr KWthen expr [ KWend KWcase ]
-- On USCORE shift to state 109
-- On TIMES shift to state 110
-- On PLUS shift to state 111
-- On NUMBER shift to state 112
-- On MINUS shift to state 113
-- On LPAREN shift to state 114
-- On LIDENTIFIER shift to state 116
-- On LBRACKET shift to state 118
-- On LBRACE shift to state 119
-- On KWtrue shift to state 120
-- On KWsome shift to state 121
-- On KWold shift to state 124
-- On KWnot shift to state 125
-- On KWinspect shift to state 126
-- On KWif shift to state 127
-- On KWfalse shift to state 128
-- On KWall shift to state 129
-- On KWagent shift to state 132
-- On KWResult shift to state 144
-- On operator_expr shift to state 145
-- On expr shift to state 260
-- On exp_inspect shift to state 176
-- On exp_conditional shift to state 177
-- On dotted_id_list shift to state 178
-- On atomic_expr shift to state 187

State 260:
exp_case -> KWcase expr . KWthen expr [ KWend KWcase ]
expr -> expr . COMMA expr [ TIMES PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWthen KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
expr -> expr . LPAREN expr RPAREN [ TIMES PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWthen KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
expr -> expr . LBRACKET expr RBRACKET [ TIMES PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWthen KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
expr -> expr . DOT LIDENTIFIER [ TIMES PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWthen KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
expr -> expr . DOT LBRACE expr RBRACE [ TIMES PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWthen KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
expr -> expr . COLON type_nt [ TIMES PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWthen KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . PLUS expr [ TIMES PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWthen KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . MINUS expr [ TIMES PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWthen KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . TIMES expr [ TIMES PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWthen KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . DIVIDE expr [ TIMES PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWthen KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . CARET expr [ TIMES PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWthen KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . KWin expr [ TIMES PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWthen KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . NOTIN expr [ TIMES PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWthen KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . EQ expr [ TIMES PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWthen KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . NEQ expr [ TIMES PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWthen KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . LT expr [ TIMES PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWthen KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . LE expr [ TIMES PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWthen KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . GT expr [ TIMES PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWthen KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . GE expr [ TIMES PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWthen KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . KWas expr [ TIMES PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWthen KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . KWand expr [ TIMES PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWthen KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . KWor expr [ TIMES PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWthen KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . DCOLON expr [ TIMES PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWthen KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . COLON expr [ TIMES PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWthen KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . BAR expr [ TIMES PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWthen KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . DBAR expr [ TIMES PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWthen KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . DARROW expr [ TIMES PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWthen KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
-- On TIMES shift to state 149
-- On PLUS shift to state 154
-- On NOTIN shift to state 159
-- On NEQ shift to state 168
-- On MINUS shift to state 161
-- On LT shift to state 183
-- On LPAREN shift to state 151
-- On LE shift to state 190
-- On LBRACKET shift to state 156
-- On KWthen shift to state 261
-- On KWor shift to state 192
-- On KWin shift to state 194
-- On KWas shift to state 196
-- On KWand shift to state 204
-- On GT shift to state 198
-- On GE shift to state 200
-- On EQ shift to state 202
-- On DOT shift to state 163
-- On DIVIDE shift to state 170
-- On DCOLON shift to state 172
-- On DBAR shift to state 185
-- On DARROW shift to state 206
-- On COMMA shift to state 208
-- On COLON shift to state 210
-- On CARET shift to state 174
-- On BAR shift to state 188

State 261:
exp_case -> KWcase expr KWthen . expr [ KWend KWcase ]
-- On USCORE shift to state 109
-- On TIMES shift to state 110
-- On PLUS shift to state 111
-- On NUMBER shift to state 112
-- On MINUS shift to state 113
-- On LPAREN shift to state 114
-- On LIDENTIFIER shift to state 116
-- On LBRACKET shift to state 118
-- On LBRACE shift to state 119
-- On KWtrue shift to state 120
-- On KWsome shift to state 121
-- On KWold shift to state 124
-- On KWnot shift to state 125
-- On KWinspect shift to state 126
-- On KWif shift to state 127
-- On KWfalse shift to state 128
-- On KWall shift to state 129
-- On KWagent shift to state 132
-- On KWResult shift to state 144
-- On operator_expr shift to state 145
-- On expr shift to state 262
-- On exp_inspect shift to state 176
-- On exp_conditional shift to state 177
-- On dotted_id_list shift to state 178
-- On atomic_expr shift to state 187

State 262:
exp_case -> KWcase expr KWthen expr . [ KWend KWcase ]
expr -> expr . COMMA expr [ TIMES PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWend KWcase KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
expr -> expr . LPAREN expr RPAREN [ TIMES PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWend KWcase KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
expr -> expr . LBRACKET expr RBRACKET [ TIMES PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWend KWcase KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
expr -> expr . DOT LIDENTIFIER [ TIMES PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWend KWcase KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
expr -> expr . DOT LBRACE expr RBRACE [ TIMES PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWend KWcase KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
expr -> expr . COLON type_nt [ TIMES PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWend KWcase KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . PLUS expr [ TIMES PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWend KWcase KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . MINUS expr [ TIMES PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWend KWcase KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . TIMES expr [ TIMES PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWend KWcase KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . DIVIDE expr [ TIMES PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWend KWcase KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . CARET expr [ TIMES PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWend KWcase KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . KWin expr [ TIMES PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWend KWcase KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . NOTIN expr [ TIMES PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWend KWcase KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . EQ expr [ TIMES PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWend KWcase KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . NEQ expr [ TIMES PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWend KWcase KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . LT expr [ TIMES PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWend KWcase KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . LE expr [ TIMES PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWend KWcase KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . GT expr [ TIMES PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWend KWcase KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . GE expr [ TIMES PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWend KWcase KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . KWas expr [ TIMES PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWend KWcase KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . KWand expr [ TIMES PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWend KWcase KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . KWor expr [ TIMES PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWend KWcase KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . DCOLON expr [ TIMES PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWend KWcase KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . COLON expr [ TIMES PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWend KWcase KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . BAR expr [ TIMES PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWend KWcase KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . DBAR expr [ TIMES PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWend KWcase KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . DARROW expr [ TIMES PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWend KWcase KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
-- On TIMES shift to state 149
-- On PLUS shift to state 154
-- On NOTIN shift to state 159
-- On NEQ shift to state 168
-- On MINUS shift to state 161
-- On LT shift to state 183
-- On LPAREN shift to state 151
-- On LE shift to state 190
-- On LBRACKET shift to state 156
-- On KWor shift to state 192
-- On KWin shift to state 194
-- On KWas shift to state 196
-- On KWand shift to state 204
-- On GT shift to state 198
-- On GE shift to state 200
-- On EQ shift to state 202
-- On DOT shift to state 163
-- On DIVIDE shift to state 170
-- On DCOLON shift to state 172
-- On DBAR shift to state 185
-- On DARROW shift to state 206
-- On COMMA shift to state 208
-- On COLON shift to state 210
-- On CARET shift to state 174
-- On BAR shift to state 188
-- On KWend reduce production exp_case -> KWcase expr KWthen expr
-- On KWcase reduce production exp_case -> KWcase expr KWthen expr

State 263:
exp_inspect -> KWinspect expr exp_case_list . KWend [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
-- On KWend shift to state 264

State 264:
exp_inspect -> KWinspect expr exp_case_list KWend . [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
-- On UIDENTIFIER reduce production exp_inspect -> KWinspect expr exp_case_list KWend
-- On TIMES reduce production exp_inspect -> KWinspect expr exp_case_list KWend
-- On SEMICOL reduce production exp_inspect -> KWinspect expr exp_case_list KWend
-- On RPAREN reduce production exp_inspect -> KWinspect expr exp_case_list KWend
-- On RBRACKET reduce production exp_inspect -> KWinspect expr exp_case_list KWend
-- On RBRACE reduce production exp_inspect -> KWinspect expr exp_case_list KWend
-- On PLUS reduce production exp_inspect -> KWinspect expr exp_case_list KWend
-- On NUMBER reduce production exp_inspect -> KWinspect expr exp_case_list KWend
-- On NOTIN reduce production exp_inspect -> KWinspect expr exp_case_list KWend
-- On NEWLINE reduce production exp_inspect -> KWinspect expr exp_case_list KWend
-- On NEQ reduce production exp_inspect -> KWinspect expr exp_case_list KWend
-- On MINUS reduce production exp_inspect -> KWinspect expr exp_case_list KWend
-- On LT reduce production exp_inspect -> KWinspect expr exp_case_list KWend
-- On LPAREN reduce production exp_inspect -> KWinspect expr exp_case_list KWend
-- On LIDENTIFIER reduce production exp_inspect -> KWinspect expr exp_case_list KWend
-- On LE reduce production exp_inspect -> KWinspect expr exp_case_list KWend
-- On LBRACKET reduce production exp_inspect -> KWinspect expr exp_case_list KWend
-- On KWtrue reduce production exp_inspect -> KWinspect expr exp_case_list KWend
-- On KWthen reduce production exp_inspect -> KWinspect expr exp_case_list KWend
-- On KWproof reduce production exp_inspect -> KWinspect expr exp_case_list KWend
-- On KWor reduce production exp_inspect -> KWinspect expr exp_case_list KWend
-- On KWnote reduce production exp_inspect -> KWinspect expr exp_case_list KWend
-- On KWlocal reduce production exp_inspect -> KWinspect expr exp_case_list KWend
-- On KWin reduce production exp_inspect -> KWinspect expr exp_case_list KWend
-- On KWimmutable reduce production exp_inspect -> KWinspect expr exp_case_list KWend
-- On KWfalse reduce production exp_inspect -> KWinspect expr exp_case_list KWend
-- On KWensure reduce production exp_inspect -> KWinspect expr exp_case_list KWend
-- On KWend reduce production exp_inspect -> KWinspect expr exp_case_list KWend
-- On KWelseif reduce production exp_inspect -> KWinspect expr exp_case_list KWend
-- On KWelse reduce production exp_inspect -> KWinspect expr exp_case_list KWend
-- On KWdo reduce production exp_inspect -> KWinspect expr exp_case_list KWend
-- On KWdeferred reduce production exp_inspect -> KWinspect expr exp_case_list KWend
-- On KWclass reduce production exp_inspect -> KWinspect expr exp_case_list KWend
-- On KWcase reduce production exp_inspect -> KWinspect expr exp_case_list KWend
-- On KWas reduce production exp_inspect -> KWinspect expr exp_case_list KWend
-- On KWand reduce production exp_inspect -> KWinspect expr exp_case_list KWend
-- On KWall reduce production exp_inspect -> KWinspect expr exp_case_list KWend
-- On GT reduce production exp_inspect -> KWinspect expr exp_case_list KWend
-- On GE reduce production exp_inspect -> KWinspect expr exp_case_list KWend
-- On EQ reduce production exp_inspect -> KWinspect expr exp_case_list KWend
-- On DOT reduce production exp_inspect -> KWinspect expr exp_case_list KWend
-- On DIVIDE reduce production exp_inspect -> KWinspect expr exp_case_list KWend
-- On DCOLON reduce production exp_inspect -> KWinspect expr exp_case_list KWend
-- On DBAR reduce production exp_inspect -> KWinspect expr exp_case_list KWend
-- On DARROW reduce production exp_inspect -> KWinspect expr exp_case_list KWend
-- On COMMA reduce production exp_inspect -> KWinspect expr exp_case_list KWend
-- On COLON reduce production exp_inspect -> KWinspect expr exp_case_list KWend
-- On CARET reduce production exp_inspect -> KWinspect expr exp_case_list KWend
-- On BAR reduce production exp_inspect -> KWinspect expr exp_case_list KWend

State 265:
exp_case_list -> exp_case . [ KWend ]
exp_case_list -> exp_case . exp_case_list [ KWend ]
-- On KWcase shift to state 259
-- On exp_case_list shift to state 266
-- On exp_case shift to state 265
-- On KWend reduce production exp_case_list -> exp_case

State 266:
exp_case_list -> exp_case exp_case_list . [ KWend ]
-- On KWend reduce production exp_case_list -> exp_case exp_case_list

State 267:
expr -> expr . COMMA expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
expr -> expr . LPAREN expr RPAREN [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
expr -> expr . LBRACKET expr RBRACKET [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
expr -> expr . DOT LIDENTIFIER [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
expr -> expr . DOT LBRACE expr RBRACE [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
expr -> expr . COLON type_nt [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . PLUS expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . MINUS expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . TIMES expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . DIVIDE expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . CARET expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . KWin expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . NOTIN expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . EQ expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . NEQ expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . LT expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . LE expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . GT expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . GE expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . KWas expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . KWand expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . KWor expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> KWold expr . [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . DCOLON expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . COLON expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . BAR expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . DBAR expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . DARROW expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
-- On LPAREN shift to state 151
-- On LBRACKET shift to state 156
-- On DOT shift to state 163
-- On UIDENTIFIER reduce production operator_expr -> KWold expr
-- On TIMES reduce production operator_expr -> KWold expr
-- On SEMICOL reduce production operator_expr -> KWold expr
-- On RPAREN reduce production operator_expr -> KWold expr
-- On RBRACKET reduce production operator_expr -> KWold expr
-- On RBRACE reduce production operator_expr -> KWold expr
-- On PLUS reduce production operator_expr -> KWold expr
-- On NUMBER reduce production operator_expr -> KWold expr
-- On NOTIN reduce production operator_expr -> KWold expr
-- On NEWLINE reduce production operator_expr -> KWold expr
-- On NEQ reduce production operator_expr -> KWold expr
-- On MINUS reduce production operator_expr -> KWold expr
-- On LT reduce production operator_expr -> KWold expr
-- On LIDENTIFIER reduce production operator_expr -> KWold expr
-- On LE reduce production operator_expr -> KWold expr
-- On KWtrue reduce production operator_expr -> KWold expr
-- On KWthen reduce production operator_expr -> KWold expr
-- On KWproof reduce production operator_expr -> KWold expr
-- On KWor reduce production operator_expr -> KWold expr
-- On KWnote reduce production operator_expr -> KWold expr
-- On KWlocal reduce production operator_expr -> KWold expr
-- On KWin reduce production operator_expr -> KWold expr
-- On KWimmutable reduce production operator_expr -> KWold expr
-- On KWfalse reduce production operator_expr -> KWold expr
-- On KWensure reduce production operator_expr -> KWold expr
-- On KWend reduce production operator_expr -> KWold expr
-- On KWelseif reduce production operator_expr -> KWold expr
-- On KWelse reduce production operator_expr -> KWold expr
-- On KWdo reduce production operator_expr -> KWold expr
-- On KWdeferred reduce production operator_expr -> KWold expr
-- On KWclass reduce production operator_expr -> KWold expr
-- On KWcase reduce production operator_expr -> KWold expr
-- On KWas reduce production operator_expr -> KWold expr
-- On KWand reduce production operator_expr -> KWold expr
-- On KWall reduce production operator_expr -> KWold expr
-- On GT reduce production operator_expr -> KWold expr
-- On GE reduce production operator_expr -> KWold expr
-- On EQ reduce production operator_expr -> KWold expr
-- On DIVIDE reduce production operator_expr -> KWold expr
-- On DCOLON reduce production operator_expr -> KWold expr
-- On DBAR reduce production operator_expr -> KWold expr
-- On DARROW reduce production operator_expr -> KWold expr
-- On COMMA reduce production operator_expr -> KWold expr
-- On COLON reduce production operator_expr -> KWold expr
-- On CARET reduce production operator_expr -> KWold expr
-- On BAR reduce production operator_expr -> KWold expr

State 268:
expr -> expr . COMMA expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
expr -> expr . LPAREN expr RPAREN [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
expr -> expr . LBRACKET expr RBRACKET [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
expr -> expr . DOT LIDENTIFIER [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
expr -> expr . DOT LBRACE expr RBRACE [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
expr -> expr . COLON type_nt [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
expr -> KWsome formal_arguments opt_nl expr . [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . PLUS expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . MINUS expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . TIMES expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . DIVIDE expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . CARET expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . KWin expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . NOTIN expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . EQ expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . NEQ expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . LT expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . LE expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . GT expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . GE expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . KWas expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . KWand expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . KWor expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . DCOLON expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . COLON expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . BAR expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . DBAR expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . DARROW expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
-- On TIMES shift to state 149
-- On PLUS shift to state 154
-- On NOTIN shift to state 159
-- On NEQ shift to state 168
-- On MINUS shift to state 161
-- On LT shift to state 183
-- On LPAREN shift to state 151
-- On LE shift to state 190
-- On LBRACKET shift to state 156
-- On KWor shift to state 192
-- On KWin shift to state 194
-- On KWas shift to state 196
-- On KWand shift to state 204
-- On GT shift to state 198
-- On GE shift to state 200
-- On EQ shift to state 202
-- On DOT shift to state 163
-- On DIVIDE shift to state 170
-- On DCOLON shift to state 172
-- On DBAR shift to state 185
-- On DARROW shift to state 206
-- On COMMA shift to state 208
-- On COLON shift to state 210
-- On CARET shift to state 174
-- On BAR shift to state 188
-- On UIDENTIFIER reduce production expr -> KWsome formal_arguments opt_nl expr
-- On SEMICOL reduce production expr -> KWsome formal_arguments opt_nl expr
-- On RPAREN reduce production expr -> KWsome formal_arguments opt_nl expr
-- On RBRACKET reduce production expr -> KWsome formal_arguments opt_nl expr
-- On RBRACE reduce production expr -> KWsome formal_arguments opt_nl expr
-- On NUMBER reduce production expr -> KWsome formal_arguments opt_nl expr
-- On NEWLINE reduce production expr -> KWsome formal_arguments opt_nl expr
-- On LIDENTIFIER reduce production expr -> KWsome formal_arguments opt_nl expr
-- On KWtrue reduce production expr -> KWsome formal_arguments opt_nl expr
-- On KWthen reduce production expr -> KWsome formal_arguments opt_nl expr
-- On KWproof reduce production expr -> KWsome formal_arguments opt_nl expr
-- On KWnote reduce production expr -> KWsome formal_arguments opt_nl expr
-- On KWlocal reduce production expr -> KWsome formal_arguments opt_nl expr
-- On KWimmutable reduce production expr -> KWsome formal_arguments opt_nl expr
-- On KWfalse reduce production expr -> KWsome formal_arguments opt_nl expr
-- On KWensure reduce production expr -> KWsome formal_arguments opt_nl expr
-- On KWend reduce production expr -> KWsome formal_arguments opt_nl expr
-- On KWelseif reduce production expr -> KWsome formal_arguments opt_nl expr
-- On KWelse reduce production expr -> KWsome formal_arguments opt_nl expr
-- On KWdo reduce production expr -> KWsome formal_arguments opt_nl expr
-- On KWdeferred reduce production expr -> KWsome formal_arguments opt_nl expr
-- On KWclass reduce production expr -> KWsome formal_arguments opt_nl expr
-- On KWcase reduce production expr -> KWsome formal_arguments opt_nl expr
-- On KWall reduce production expr -> KWsome formal_arguments opt_nl expr

State 269:
expr -> expr . COMMA expr [ TIMES RBRACE PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
expr -> expr . LPAREN expr RPAREN [ TIMES RBRACE PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
expr -> expr . LBRACKET expr RBRACKET [ TIMES RBRACE PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
expr -> expr . DOT LIDENTIFIER [ TIMES RBRACE PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
expr -> expr . DOT LBRACE expr RBRACE [ TIMES RBRACE PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
expr -> expr . COLON type_nt [ TIMES RBRACE PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
expr -> LBRACE expr . RBRACE [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . PLUS expr [ TIMES RBRACE PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . MINUS expr [ TIMES RBRACE PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . TIMES expr [ TIMES RBRACE PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . DIVIDE expr [ TIMES RBRACE PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . CARET expr [ TIMES RBRACE PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . KWin expr [ TIMES RBRACE PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . NOTIN expr [ TIMES RBRACE PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . EQ expr [ TIMES RBRACE PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . NEQ expr [ TIMES RBRACE PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . LT expr [ TIMES RBRACE PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . LE expr [ TIMES RBRACE PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . GT expr [ TIMES RBRACE PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . GE expr [ TIMES RBRACE PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . KWas expr [ TIMES RBRACE PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . KWand expr [ TIMES RBRACE PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . KWor expr [ TIMES RBRACE PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . DCOLON expr [ TIMES RBRACE PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . COLON expr [ TIMES RBRACE PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . BAR expr [ TIMES RBRACE PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . DBAR expr [ TIMES RBRACE PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . DARROW expr [ TIMES RBRACE PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
-- On TIMES shift to state 149
-- On RBRACE shift to state 270
-- On PLUS shift to state 154
-- On NOTIN shift to state 159
-- On NEQ shift to state 168
-- On MINUS shift to state 161
-- On LT shift to state 183
-- On LPAREN shift to state 151
-- On LE shift to state 190
-- On LBRACKET shift to state 156
-- On KWor shift to state 192
-- On KWin shift to state 194
-- On KWas shift to state 196
-- On KWand shift to state 204
-- On GT shift to state 198
-- On GE shift to state 200
-- On EQ shift to state 202
-- On DOT shift to state 163
-- On DIVIDE shift to state 170
-- On DCOLON shift to state 172
-- On DBAR shift to state 185
-- On DARROW shift to state 206
-- On COMMA shift to state 208
-- On COLON shift to state 210
-- On CARET shift to state 174
-- On BAR shift to state 188

State 270:
expr -> LBRACE expr RBRACE . [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
-- On UIDENTIFIER reduce production expr -> LBRACE expr RBRACE
-- On TIMES reduce production expr -> LBRACE expr RBRACE
-- On SEMICOL reduce production expr -> LBRACE expr RBRACE
-- On RPAREN reduce production expr -> LBRACE expr RBRACE
-- On RBRACKET reduce production expr -> LBRACE expr RBRACE
-- On RBRACE reduce production expr -> LBRACE expr RBRACE
-- On PLUS reduce production expr -> LBRACE expr RBRACE
-- On NUMBER reduce production expr -> LBRACE expr RBRACE
-- On NOTIN reduce production expr -> LBRACE expr RBRACE
-- On NEWLINE reduce production expr -> LBRACE expr RBRACE
-- On NEQ reduce production expr -> LBRACE expr RBRACE
-- On MINUS reduce production expr -> LBRACE expr RBRACE
-- On LT reduce production expr -> LBRACE expr RBRACE
-- On LPAREN reduce production expr -> LBRACE expr RBRACE
-- On LIDENTIFIER reduce production expr -> LBRACE expr RBRACE
-- On LE reduce production expr -> LBRACE expr RBRACE
-- On LBRACKET reduce production expr -> LBRACE expr RBRACE
-- On KWtrue reduce production expr -> LBRACE expr RBRACE
-- On KWthen reduce production expr -> LBRACE expr RBRACE
-- On KWproof reduce production expr -> LBRACE expr RBRACE
-- On KWor reduce production expr -> LBRACE expr RBRACE
-- On KWnote reduce production expr -> LBRACE expr RBRACE
-- On KWlocal reduce production expr -> LBRACE expr RBRACE
-- On KWin reduce production expr -> LBRACE expr RBRACE
-- On KWimmutable reduce production expr -> LBRACE expr RBRACE
-- On KWfalse reduce production expr -> LBRACE expr RBRACE
-- On KWensure reduce production expr -> LBRACE expr RBRACE
-- On KWend reduce production expr -> LBRACE expr RBRACE
-- On KWelseif reduce production expr -> LBRACE expr RBRACE
-- On KWelse reduce production expr -> LBRACE expr RBRACE
-- On KWdo reduce production expr -> LBRACE expr RBRACE
-- On KWdeferred reduce production expr -> LBRACE expr RBRACE
-- On KWclass reduce production expr -> LBRACE expr RBRACE
-- On KWcase reduce production expr -> LBRACE expr RBRACE
-- On KWas reduce production expr -> LBRACE expr RBRACE
-- On KWand reduce production expr -> LBRACE expr RBRACE
-- On KWall reduce production expr -> LBRACE expr RBRACE
-- On GT reduce production expr -> LBRACE expr RBRACE
-- On GE reduce production expr -> LBRACE expr RBRACE
-- On EQ reduce production expr -> LBRACE expr RBRACE
-- On DOT reduce production expr -> LBRACE expr RBRACE
-- On DIVIDE reduce production expr -> LBRACE expr RBRACE
-- On DCOLON reduce production expr -> LBRACE expr RBRACE
-- On DBAR reduce production expr -> LBRACE expr RBRACE
-- On DARROW reduce production expr -> LBRACE expr RBRACE
-- On COMMA reduce production expr -> LBRACE expr RBRACE
-- On COLON reduce production expr -> LBRACE expr RBRACE
-- On CARET reduce production expr -> LBRACE expr RBRACE
-- On BAR reduce production expr -> LBRACE expr RBRACE

State 271:
expr -> expr . COMMA expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
expr -> expr . LPAREN expr RPAREN [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
expr -> expr . LBRACKET expr RBRACKET [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
expr -> expr . DOT LIDENTIFIER [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
expr -> expr . DOT LBRACE expr RBRACE [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
expr -> expr . COLON type_nt [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
expr -> LIDENTIFIER ARROW expr . [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . PLUS expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . MINUS expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . TIMES expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . DIVIDE expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . CARET expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . KWin expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . NOTIN expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . EQ expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . NEQ expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . LT expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . LE expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . GT expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . GE expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . KWas expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . KWand expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . KWor expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . DCOLON expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . COLON expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . BAR expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . DBAR expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . DARROW expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
-- On TIMES shift to state 149
-- On PLUS shift to state 154
-- On NOTIN shift to state 159
-- On NEQ shift to state 168
-- On MINUS shift to state 161
-- On LT shift to state 183
-- On LPAREN shift to state 151
-- On LE shift to state 190
-- On LBRACKET shift to state 156
-- On KWor shift to state 192
-- On KWin shift to state 194
-- On KWas shift to state 196
-- On KWand shift to state 204
-- On GT shift to state 198
-- On GE shift to state 200
-- On EQ shift to state 202
-- On DOT shift to state 163
-- On DIVIDE shift to state 170
-- On DCOLON shift to state 172
-- On DBAR shift to state 185
-- On DARROW shift to state 206
-- On COMMA shift to state 208
-- On COLON shift to state 210
-- On CARET shift to state 174
-- On BAR shift to state 188
-- On UIDENTIFIER reduce production expr -> LIDENTIFIER ARROW expr
-- On SEMICOL reduce production expr -> LIDENTIFIER ARROW expr
-- On RPAREN reduce production expr -> LIDENTIFIER ARROW expr
-- On RBRACKET reduce production expr -> LIDENTIFIER ARROW expr
-- On RBRACE reduce production expr -> LIDENTIFIER ARROW expr
-- On NUMBER reduce production expr -> LIDENTIFIER ARROW expr
-- On NEWLINE reduce production expr -> LIDENTIFIER ARROW expr
-- On LIDENTIFIER reduce production expr -> LIDENTIFIER ARROW expr
-- On KWtrue reduce production expr -> LIDENTIFIER ARROW expr
-- On KWthen reduce production expr -> LIDENTIFIER ARROW expr
-- On KWproof reduce production expr -> LIDENTIFIER ARROW expr
-- On KWnote reduce production expr -> LIDENTIFIER ARROW expr
-- On KWlocal reduce production expr -> LIDENTIFIER ARROW expr
-- On KWimmutable reduce production expr -> LIDENTIFIER ARROW expr
-- On KWfalse reduce production expr -> LIDENTIFIER ARROW expr
-- On KWensure reduce production expr -> LIDENTIFIER ARROW expr
-- On KWend reduce production expr -> LIDENTIFIER ARROW expr
-- On KWelseif reduce production expr -> LIDENTIFIER ARROW expr
-- On KWelse reduce production expr -> LIDENTIFIER ARROW expr
-- On KWdo reduce production expr -> LIDENTIFIER ARROW expr
-- On KWdeferred reduce production expr -> LIDENTIFIER ARROW expr
-- On KWclass reduce production expr -> LIDENTIFIER ARROW expr
-- On KWcase reduce production expr -> LIDENTIFIER ARROW expr
-- On KWall reduce production expr -> LIDENTIFIER ARROW expr

State 272:
expr -> expr . COMMA expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
expr -> expr . LPAREN expr RPAREN [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
expr -> expr . LBRACKET expr RBRACKET [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
expr -> expr . DOT LIDENTIFIER [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
expr -> expr . DOT LBRACE expr RBRACE [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
expr -> expr . COLON type_nt [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . PLUS expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . MINUS expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . TIMES expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> TIMES expr . [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . DIVIDE expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . CARET expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . KWin expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . NOTIN expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . EQ expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . NEQ expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . LT expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . LE expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . GT expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . GE expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . KWas expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . KWand expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . KWor expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . DCOLON expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . COLON expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . BAR expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . DBAR expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
operator_expr -> expr . DARROW expr [ UIDENTIFIER TIMES SEMICOL RPAREN RBRACKET RBRACE PLUS NUMBER NOTIN NEWLINE NEQ MINUS LT LPAREN LIDENTIFIER LE LBRACKET KWtrue KWthen KWproof KWor KWnote KWlocal KWin KWimmutable KWfalse KWensure KWend KWelseif KWelse KWdo KWdeferred KWclass KWcase KWas KWand KWall GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR # ]
-- On LPAREN shift to state 151
-- On LBRACKET shift to state 156
-- On DOT shift to state 163
-- On DCOLON shift to state 172
-- On CARET shift to state 174
-- On UIDENTIFIER reduce production operator_expr -> TIMES expr
-- On TIMES reduce production operator_expr -> TIMES expr
-- On SEMICOL reduce production operator_expr -> TIMES expr
-- On RPAREN reduce production operator_expr -> TIMES expr
-- On RBRACKET reduce production operator_expr -> TIMES expr
-- On RBRACE reduce production operator_expr -> TIMES expr
-- On PLUS reduce production operator_expr -> TIMES expr
-- On NUMBER reduce production operator_expr -> TIMES expr
-- On NOTIN reduce production operator_expr -> TIMES expr
-- On NEWLINE reduce production operator_expr -> TIMES expr
-- On NEQ reduce production operator_expr -> TIMES expr
-- On MINUS reduce production operator_expr -> TIMES expr
-- On LT reduce production operator_expr -> TIMES expr
-- On LIDENTIFIER reduce production operator_expr -> TIMES expr
-- On LE reduce production operator_expr -> TIMES expr
-- On KWtrue reduce production operator_expr -> TIMES expr
-- On KWthen reduce production operator_expr -> TIMES expr
-- On KWproof reduce production operator_expr -> TIMES expr
-- On KWor reduce production operator_expr -> TIMES expr
-- On KWnote reduce production operator_expr -> TIMES expr
-- On KWlocal reduce production operator_expr -> TIMES expr
-- On KWin reduce production operator_expr -> TIMES expr
-- On KWimmutable reduce production operator_expr -> TIMES expr
-- On KWfalse reduce production operator_expr -> TIMES expr
-- On KWensure reduce production operator_expr -> TIMES expr
-- On KWend reduce production operator_expr -> TIMES expr
-- On KWelseif reduce production operator_expr -> TIMES expr
-- On KWelse reduce production operator_expr -> TIMES expr
-- On KWdo reduce production operator_expr -> TIMES expr
-- On KWdeferred reduce production operator_expr -> TIMES expr
-- On KWclass reduce production operator_expr -> TIMES expr
-- On KWcase reduce production operator_expr -> TIMES expr
-- On KWas reduce production operator_expr -> TIMES expr
-- On KWand reduce production operator_expr -> TIMES expr
-- On KWall reduce production operator_expr -> TIMES expr
-- On GT reduce production operator_expr -> TIMES expr
-- On GE reduce production operator_expr -> TIMES expr
-- On EQ reduce production operator_expr -> TIMES expr
-- On DIVIDE reduce production operator_expr -> TIMES expr
-- On DBAR reduce production operator_expr -> TIMES expr
-- On DARROW reduce production operator_expr -> TIMES expr
-- On COMMA reduce production operator_expr -> TIMES expr
-- On COLON reduce production operator_expr -> TIMES expr
-- On BAR reduce production operator_expr -> TIMES expr

State 273:
ass_seq -> info_expr . [ SEMICOL NEWLINE KWproof KWnote KWensure KWend KWdeferred ]
-- On SEMICOL reduce production ass_seq -> info_expr
-- On NEWLINE reduce production ass_seq -> info_expr
-- On KWproof reduce production ass_seq -> info_expr
-- On KWnote reduce production ass_seq -> info_expr
-- On KWensure reduce production ass_seq -> info_expr
-- On KWend reduce production ass_seq -> info_expr
-- On KWdeferred reduce production ass_seq -> info_expr

State 274:
ass_req -> KWrequire ass_seq . [ KWproof KWnote KWensure KWdeferred ]
ass_req -> KWrequire ass_seq . separator [ KWproof KWnote KWensure KWdeferred ]
ass_seq -> ass_seq . separator info_expr [ SEMICOL NEWLINE KWproof KWnote KWensure KWdeferred ]
-- On SEMICOL shift to state 4
-- On NEWLINE shift to state 5
-- On separator shift to state 275
-- On KWproof reduce production ass_req -> KWrequire ass_seq
-- On KWnote reduce production ass_req -> KWrequire ass_seq
-- On KWensure reduce production ass_req -> KWrequire ass_seq
-- On KWdeferred reduce production ass_req -> KWrequire ass_seq

State 275:
ass_req -> KWrequire ass_seq separator . [ KWproof KWnote KWensure KWdeferred ]
ass_seq -> ass_seq separator . info_expr [ SEMICOL NEWLINE KWproof KWnote KWensure KWdeferred ]
-- On USCORE shift to state 109
-- On TIMES shift to state 110
-- On PLUS shift to state 111
-- On NUMBER shift to state 112
-- On MINUS shift to state 113
-- On LPAREN shift to state 114
-- On LIDENTIFIER shift to state 116
-- On LBRACKET shift to state 118
-- On LBRACE shift to state 119
-- On KWtrue shift to state 120
-- On KWsome shift to state 121
-- On KWold shift to state 124
-- On KWnot shift to state 125
-- On KWinspect shift to state 126
-- On KWif shift to state 127
-- On KWfalse shift to state 128
-- On KWall shift to state 129
-- On KWagent shift to state 132
-- On KWResult shift to state 144
-- On operator_expr shift to state 145
-- On info_expr shift to state 276
-- On expr shift to state 148
-- On exp_inspect shift to state 176
-- On exp_conditional shift to state 177
-- On dotted_id_list shift to state 178
-- On atomic_expr shift to state 187
-- On KWproof reduce production ass_req -> KWrequire ass_seq separator
-- On KWnote reduce production ass_req -> KWrequire ass_seq separator
-- On KWensure reduce production ass_req -> KWrequire ass_seq separator
-- On KWdeferred reduce production ass_req -> KWrequire ass_seq separator

State 276:
ass_seq -> ass_seq separator info_expr . [ SEMICOL NEWLINE KWproof KWnote KWensure KWend KWdeferred ]
-- On SEMICOL reduce production ass_seq -> ass_seq separator info_expr
-- On NEWLINE reduce production ass_seq -> ass_seq separator info_expr
-- On KWproof reduce production ass_seq -> ass_seq separator info_expr
-- On KWnote reduce production ass_seq -> ass_seq separator info_expr
-- On KWensure reduce production ass_seq -> ass_seq separator info_expr
-- On KWend reduce production ass_seq -> ass_seq separator info_expr
-- On KWdeferred reduce production ass_seq -> ass_seq separator info_expr

State 277:
proof_all_expr -> KWall formal_arguments_opt opt_nl ass_req_opt . ass_imp ass_ens KWend [ UIDENTIFIER SEMICOL NUMBER LPAREN LIDENTIFIER KWtrue KWimmutable KWfalse KWdeferred KWclass KWcase KWall # ]
-- On KWproof shift to state 278
-- On KWnote shift to state 283
-- On KWdeferred shift to state 286
-- On implementation_note shift to state 287
-- On ass_imp shift to state 312
-- On ass_check shift to state 294
-- On KWensure reduce production ass_imp -> 

State 278:
ass_check -> KWproof . proof_seq separator [ KWensure ]
-- On USCORE shift to state 109
-- On TIMES shift to state 110
-- On PLUS shift to state 111
-- On NUMBER shift to state 112
-- On MINUS shift to state 113
-- On LPAREN shift to state 114
-- On LIDENTIFIER shift to state 116
-- On LBRACKET shift to state 118
-- On LBRACE shift to state 119
-- On KWtrue shift to state 120
-- On KWsome shift to state 121
-- On KWrequire shift to state 108
-- On KWproof shift to state 278
-- On KWold shift to state 124
-- On KWnot shift to state 125
-- On KWinspect shift to state 126
-- On KWif shift to state 127
-- On KWfalse shift to state 128
-- On KWall shift to state 279
-- On KWagent shift to state 132
-- On KWResult shift to state 144
-- On proof_seq shift to state 296
-- On proof_expr_struct shift to state 298
-- On proof_expr shift to state 311
-- On proof_all_expr_inner shift to state 300
-- On operator_expr shift to state 145
-- On info_expr shift to state 301
-- On expr shift to state 148
-- On exp_inspect shift to state 176
-- On exp_conditional shift to state 177
-- On dotted_id_list shift to state 178
-- On atomic_expr shift to state 187
-- On ass_req shift to state 302
-- On ass_check shift to state 308

State 279:
expr -> KWall . formal_arguments opt_nl expr [ TIMES SEMICOL PLUS NOTIN NEWLINE NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
proof_all_expr_inner -> KWall . formal_arguments opt_nl ass_req_opt ass_imp ass_ens KWend [ SEMICOL NEWLINE ]
-- On LPAREN shift to state 92
-- On formal_arguments shift to state 280

State 280:
expr -> KWall formal_arguments . opt_nl expr [ TIMES SEMICOL PLUS NOTIN NEWLINE NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
proof_all_expr_inner -> KWall formal_arguments . opt_nl ass_req_opt ass_imp ass_ens KWend [ SEMICOL NEWLINE ]
-- On SEMICOL shift to state 105
-- On NEWLINE shift to state 106
-- On opt_nl shift to state 281
-- On USCORE reduce production opt_nl -> 
-- On TIMES reduce production opt_nl -> 
-- On PLUS reduce production opt_nl -> 
-- On NUMBER reduce production opt_nl -> 
-- On MINUS reduce production opt_nl -> 
-- On LPAREN reduce production opt_nl -> 
-- On LIDENTIFIER reduce production opt_nl -> 
-- On LBRACKET reduce production opt_nl -> 
-- On LBRACE reduce production opt_nl -> 
-- On KWtrue reduce production opt_nl -> 
-- On KWsome reduce production opt_nl -> 
-- On KWrequire reduce production opt_nl -> 
-- On KWproof reduce production opt_nl -> 
-- On KWold reduce production opt_nl -> 
-- On KWnote reduce production opt_nl -> 
-- On KWnot reduce production opt_nl -> 
-- On KWinspect reduce production opt_nl -> 
-- On KWif reduce production opt_nl -> 
-- On KWfalse reduce production opt_nl -> 
-- On KWensure reduce production opt_nl -> 
-- On KWdeferred reduce production opt_nl -> 
-- On KWall reduce production opt_nl -> 
-- On KWagent reduce production opt_nl -> 
-- On KWResult reduce production opt_nl -> 

State 281:
expr -> KWall formal_arguments opt_nl . expr [ TIMES SEMICOL PLUS NOTIN NEWLINE NEQ MINUS LT LPAREN LE LBRACKET KWor KWin KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
proof_all_expr_inner -> KWall formal_arguments opt_nl . ass_req_opt ass_imp ass_ens KWend [ SEMICOL NEWLINE ]
-- On USCORE shift to state 109
-- On TIMES shift to state 110
-- On PLUS shift to state 111
-- On NUMBER shift to state 112
-- On MINUS shift to state 113
-- On LPAREN shift to state 114
-- On LIDENTIFIER shift to state 116
-- On LBRACKET shift to state 118
-- On LBRACE shift to state 119
-- On KWtrue shift to state 120
-- On KWsome shift to state 121
-- On KWrequire shift to state 108
-- On KWold shift to state 124
-- On KWnot shift to state 125
-- On KWinspect shift to state 126
-- On KWif shift to state 127
-- On KWfalse shift to state 128
-- On KWall shift to state 129
-- On KWagent shift to state 132
-- On KWResult shift to state 144
-- On operator_expr shift to state 145
-- On expr shift to state 246
-- On exp_inspect shift to state 176
-- On exp_conditional shift to state 177
-- On dotted_id_list shift to state 178
-- On atomic_expr shift to state 187
-- On ass_req_opt shift to state 282
-- On ass_req shift to state 295
-- On KWproof reduce production ass_req_opt -> 
-- On KWnote reduce production ass_req_opt -> 
-- On KWensure reduce production ass_req_opt -> 
-- On KWdeferred reduce production ass_req_opt -> 

State 282:
proof_all_expr_inner -> KWall formal_arguments opt_nl ass_req_opt . ass_imp ass_ens KWend [ SEMICOL NEWLINE ]
-- On KWproof shift to state 278
-- On KWnote shift to state 283
-- On KWdeferred shift to state 286
-- On implementation_note shift to state 287
-- On ass_imp shift to state 288
-- On ass_check shift to state 294
-- On KWensure reduce production ass_imp -> 

State 283:
implementation_note -> KWnote . LIDENTIFIER optsemi [ KWensure KWend ]
-- On LIDENTIFIER shift to state 284

State 284:
implementation_note -> KWnote LIDENTIFIER . optsemi [ KWensure KWend ]
-- On SEMICOL shift to state 14
-- On optsemi shift to state 285
-- On KWensure reduce production optsemi -> 
-- On KWend reduce production optsemi -> 

State 285:
implementation_note -> KWnote LIDENTIFIER optsemi . [ KWensure KWend ]
-- On KWensure reduce production implementation_note -> KWnote LIDENTIFIER optsemi
-- On KWend reduce production implementation_note -> KWnote LIDENTIFIER optsemi

State 286:
ass_imp -> KWdeferred . [ KWensure ]
-- On KWensure reduce production ass_imp -> KWdeferred

State 287:
ass_imp -> implementation_note . [ KWensure ]
-- On KWensure reduce production ass_imp -> implementation_note

State 288:
proof_all_expr_inner -> KWall formal_arguments opt_nl ass_req_opt ass_imp . ass_ens KWend [ SEMICOL NEWLINE ]
-- On KWensure shift to state 289
-- On ass_ens shift to state 292

State 289:
ass_ens -> KWensure . ass_seq [ KWend ]
-- On USCORE shift to state 109
-- On TIMES shift to state 110
-- On PLUS shift to state 111
-- On NUMBER shift to state 112
-- On MINUS shift to state 113
-- On LPAREN shift to state 114
-- On LIDENTIFIER shift to state 116
-- On LBRACKET shift to state 118
-- On LBRACE shift to state 119
-- On KWtrue shift to state 120
-- On KWsome shift to state 121
-- On KWold shift to state 124
-- On KWnot shift to state 125
-- On KWinspect shift to state 126
-- On KWif shift to state 127
-- On KWfalse shift to state 128
-- On KWall shift to state 129
-- On KWagent shift to state 132
-- On KWResult shift to state 144
-- On operator_expr shift to state 145
-- On info_expr shift to state 273
-- On expr shift to state 148
-- On exp_inspect shift to state 176
-- On exp_conditional shift to state 177
-- On dotted_id_list shift to state 178
-- On atomic_expr shift to state 187
-- On ass_seq shift to state 290

State 290:
ass_ens -> KWensure ass_seq . [ KWend ]
ass_seq -> ass_seq . separator info_expr [ SEMICOL NEWLINE KWend ]
-- On SEMICOL shift to state 4
-- On NEWLINE shift to state 5
-- On separator shift to state 291
-- On KWend reduce production ass_ens -> KWensure ass_seq

State 291:
ass_seq -> ass_seq separator . info_expr [ SEMICOL NEWLINE KWend ]
-- On USCORE shift to state 109
-- On TIMES shift to state 110
-- On PLUS shift to state 111
-- On NUMBER shift to state 112
-- On MINUS shift to state 113
-- On LPAREN shift to state 114
-- On LIDENTIFIER shift to state 116
-- On LBRACKET shift to state 118
-- On LBRACE shift to state 119
-- On KWtrue shift to state 120
-- On KWsome shift to state 121
-- On KWold shift to state 124
-- On KWnot shift to state 125
-- On KWinspect shift to state 126
-- On KWif shift to state 127
-- On KWfalse shift to state 128
-- On KWall shift to state 129
-- On KWagent shift to state 132
-- On KWResult shift to state 144
-- On operator_expr shift to state 145
-- On info_expr shift to state 276
-- On expr shift to state 148
-- On exp_inspect shift to state 176
-- On exp_conditional shift to state 177
-- On dotted_id_list shift to state 178
-- On atomic_expr shift to state 187

State 292:
proof_all_expr_inner -> KWall formal_arguments opt_nl ass_req_opt ass_imp ass_ens . KWend [ SEMICOL NEWLINE ]
-- On KWend shift to state 293

State 293:
proof_all_expr_inner -> KWall formal_arguments opt_nl ass_req_opt ass_imp ass_ens KWend . [ SEMICOL NEWLINE ]
-- On SEMICOL reduce production proof_all_expr_inner -> KWall formal_arguments opt_nl ass_req_opt ass_imp ass_ens KWend
-- On NEWLINE reduce production proof_all_expr_inner -> KWall formal_arguments opt_nl ass_req_opt ass_imp ass_ens KWend

State 294:
ass_imp -> ass_check . [ KWensure ]
-- On KWensure reduce production ass_imp -> ass_check

State 295:
ass_req_opt -> ass_req . [ KWproof KWnote KWensure KWdeferred ]
-- On KWproof reduce production ass_req_opt -> ass_req
-- On KWnote reduce production ass_req_opt -> ass_req
-- On KWensure reduce production ass_req_opt -> ass_req
-- On KWdeferred reduce production ass_req_opt -> ass_req

State 296:
ass_check -> KWproof proof_seq . separator [ KWensure ]
proof_seq -> proof_seq . separator proof_expr [ SEMICOL NEWLINE ]
-- On SEMICOL shift to state 4
-- On NEWLINE shift to state 5
-- On separator shift to state 297

State 297:
ass_check -> KWproof proof_seq separator . [ KWensure ]
proof_seq -> proof_seq separator . proof_expr [ SEMICOL NEWLINE ]
-- On USCORE shift to state 109
-- On TIMES shift to state 110
-- On PLUS shift to state 111
-- On NUMBER shift to state 112
-- On MINUS shift to state 113
-- On LPAREN shift to state 114
-- On LIDENTIFIER shift to state 116
-- On LBRACKET shift to state 118
-- On LBRACE shift to state 119
-- On KWtrue shift to state 120
-- On KWsome shift to state 121
-- On KWrequire shift to state 108
-- On KWproof shift to state 278
-- On KWold shift to state 124
-- On KWnot shift to state 125
-- On KWinspect shift to state 126
-- On KWif shift to state 127
-- On KWfalse shift to state 128
-- On KWall shift to state 279
-- On KWagent shift to state 132
-- On KWResult shift to state 144
-- On proof_expr_struct shift to state 298
-- On proof_expr shift to state 299
-- On proof_all_expr_inner shift to state 300
-- On operator_expr shift to state 145
-- On info_expr shift to state 301
-- On expr shift to state 148
-- On exp_inspect shift to state 176
-- On exp_conditional shift to state 177
-- On dotted_id_list shift to state 178
-- On atomic_expr shift to state 187
-- On ass_req shift to state 302
-- On ass_check shift to state 308
-- On KWensure reduce production ass_check -> KWproof proof_seq separator

State 298:
proof_expr -> proof_expr_struct . [ SEMICOL NEWLINE ]
-- On SEMICOL reduce production proof_expr -> proof_expr_struct
-- On NEWLINE reduce production proof_expr -> proof_expr_struct

State 299:
proof_seq -> proof_seq separator proof_expr . [ SEMICOL NEWLINE ]
-- On SEMICOL reduce production proof_seq -> proof_seq separator proof_expr
-- On NEWLINE reduce production proof_seq -> proof_seq separator proof_expr

State 300:
proof_expr -> proof_all_expr_inner . [ SEMICOL NEWLINE ]
-- On SEMICOL reduce production proof_expr -> proof_all_expr_inner
-- On NEWLINE reduce production proof_expr -> proof_all_expr_inner

State 301:
proof_expr -> info_expr . [ SEMICOL NEWLINE ]
-- On SEMICOL reduce production proof_expr -> info_expr
-- On NEWLINE reduce production proof_expr -> info_expr

State 302:
proof_expr_struct -> ass_req . ass_check ass_ens KWend [ SEMICOL NEWLINE ]
proof_expr_struct -> ass_req . ass_ens KWend [ SEMICOL NEWLINE ]
-- On KWproof shift to state 278
-- On KWensure shift to state 289
-- On ass_ens shift to state 303
-- On ass_check shift to state 305

State 303:
proof_expr_struct -> ass_req ass_ens . KWend [ SEMICOL NEWLINE ]
-- On KWend shift to state 304

State 304:
proof_expr_struct -> ass_req ass_ens KWend . [ SEMICOL NEWLINE ]
-- On SEMICOL reduce production proof_expr_struct -> ass_req ass_ens KWend
-- On NEWLINE reduce production proof_expr_struct -> ass_req ass_ens KWend

State 305:
proof_expr_struct -> ass_req ass_check . ass_ens KWend [ SEMICOL NEWLINE ]
-- On KWensure shift to state 289
-- On ass_ens shift to state 306

State 306:
proof_expr_struct -> ass_req ass_check ass_ens . KWend [ SEMICOL NEWLINE ]
-- On KWend shift to state 307

State 307:
proof_expr_struct -> ass_req ass_check ass_ens KWend . [ SEMICOL NEWLINE ]
-- On SEMICOL reduce production proof_expr_struct -> ass_req ass_check ass_ens KWend
-- On NEWLINE reduce production proof_expr_struct -> ass_req ass_check ass_ens KWend

State 308:
proof_expr_struct -> ass_check . ass_ens KWend [ SEMICOL NEWLINE ]
-- On KWensure shift to state 289
-- On ass_ens shift to state 309

State 309:
proof_expr_struct -> ass_check ass_ens . KWend [ SEMICOL NEWLINE ]
-- On KWend shift to state 310

State 310:
proof_expr_struct -> ass_check ass_ens KWend . [ SEMICOL NEWLINE ]
-- On SEMICOL reduce production proof_expr_struct -> ass_check ass_ens KWend
-- On NEWLINE reduce production proof_expr_struct -> ass_check ass_ens KWend

State 311:
proof_seq -> proof_expr . [ SEMICOL NEWLINE ]
-- On SEMICOL reduce production proof_seq -> proof_expr
-- On NEWLINE reduce production proof_seq -> proof_expr

State 312:
proof_all_expr -> KWall formal_arguments_opt opt_nl ass_req_opt ass_imp . ass_ens KWend [ UIDENTIFIER SEMICOL NUMBER LPAREN LIDENTIFIER KWtrue KWimmutable KWfalse KWdeferred KWclass KWcase KWall # ]
-- On KWensure shift to state 289
-- On ass_ens shift to state 313

State 313:
proof_all_expr -> KWall formal_arguments_opt opt_nl ass_req_opt ass_imp ass_ens . KWend [ UIDENTIFIER SEMICOL NUMBER LPAREN LIDENTIFIER KWtrue KWimmutable KWfalse KWdeferred KWclass KWcase KWall # ]
-- On KWend shift to state 314

State 314:
proof_all_expr -> KWall formal_arguments_opt opt_nl ass_req_opt ass_imp ass_ens KWend . [ UIDENTIFIER SEMICOL NUMBER LPAREN LIDENTIFIER KWtrue KWimmutable KWfalse KWdeferred KWclass KWcase KWall # ]
-- On UIDENTIFIER reduce production proof_all_expr -> KWall formal_arguments_opt opt_nl ass_req_opt ass_imp ass_ens KWend
-- On SEMICOL reduce production proof_all_expr -> KWall formal_arguments_opt opt_nl ass_req_opt ass_imp ass_ens KWend
-- On NUMBER reduce production proof_all_expr -> KWall formal_arguments_opt opt_nl ass_req_opt ass_imp ass_ens KWend
-- On LPAREN reduce production proof_all_expr -> KWall formal_arguments_opt opt_nl ass_req_opt ass_imp ass_ens KWend
-- On LIDENTIFIER reduce production proof_all_expr -> KWall formal_arguments_opt opt_nl ass_req_opt ass_imp ass_ens KWend
-- On KWtrue reduce production proof_all_expr -> KWall formal_arguments_opt opt_nl ass_req_opt ass_imp ass_ens KWend
-- On KWimmutable reduce production proof_all_expr -> KWall formal_arguments_opt opt_nl ass_req_opt ass_imp ass_ens KWend
-- On KWfalse reduce production proof_all_expr -> KWall formal_arguments_opt opt_nl ass_req_opt ass_imp ass_ens KWend
-- On KWdeferred reduce production proof_all_expr -> KWall formal_arguments_opt opt_nl ass_req_opt ass_imp ass_ens KWend
-- On KWclass reduce production proof_all_expr -> KWall formal_arguments_opt opt_nl ass_req_opt ass_imp ass_ens KWend
-- On KWcase reduce production proof_all_expr -> KWall formal_arguments_opt opt_nl ass_req_opt ass_imp ass_ens KWend
-- On KWall reduce production proof_all_expr -> KWall formal_arguments_opt opt_nl ass_req_opt ass_imp ass_ens KWend

State 315:
formal_arguments_opt -> formal_arguments . [ SEMICOL NEWLINE KWrequire KWproof KWnote KWinherit KWensure KWend KWdeferred ]
-- On SEMICOL reduce production formal_arguments_opt -> formal_arguments
-- On NEWLINE reduce production formal_arguments_opt -> formal_arguments
-- On KWrequire reduce production formal_arguments_opt -> formal_arguments
-- On KWproof reduce production formal_arguments_opt -> formal_arguments
-- On KWnote reduce production formal_arguments_opt -> formal_arguments
-- On KWinherit reduce production formal_arguments_opt -> formal_arguments
-- On KWensure reduce production formal_arguments_opt -> formal_arguments
-- On KWend reduce production formal_arguments_opt -> formal_arguments
-- On KWdeferred reduce production formal_arguments_opt -> formal_arguments

State 316:
ass_feat -> proof_all_expr . [ UIDENTIFIER SEMICOL NUMBER LPAREN LIDENTIFIER KWtrue KWimmutable KWfalse KWdeferred KWclass KWcase KWall # ]
-- On UIDENTIFIER reduce production ass_feat -> proof_all_expr
-- On SEMICOL reduce production ass_feat -> proof_all_expr
-- On NUMBER reduce production ass_feat -> proof_all_expr
-- On LPAREN reduce production ass_feat -> proof_all_expr
-- On LIDENTIFIER reduce production ass_feat -> proof_all_expr
-- On KWtrue reduce production ass_feat -> proof_all_expr
-- On KWimmutable reduce production ass_feat -> proof_all_expr
-- On KWfalse reduce production ass_feat -> proof_all_expr
-- On KWdeferred reduce production ass_feat -> proof_all_expr
-- On KWclass reduce production ass_feat -> proof_all_expr
-- On KWcase reduce production ass_feat -> proof_all_expr
-- On KWall reduce production ass_feat -> proof_all_expr

State 317:
named_feature -> nameopconst_info . formal_arguments_info return_type_opt optsemi feature_body_opt [ UIDENTIFIER SEMICOL NUMBER LPAREN LIDENTIFIER KWtrue KWimmutable KWfalse KWdeferred KWclass KWcase KWall # ]
named_feature -> nameopconst_info . return_type optsemi feature_body_opt [ UIDENTIFIER SEMICOL NUMBER LPAREN LIDENTIFIER KWtrue KWimmutable KWfalse KWdeferred KWclass KWcase KWall # ]
named_feature -> nameopconst_info . formal_arguments_info return_type_opt ARROW info_expr [ UIDENTIFIER SEMICOL NUMBER LPAREN LIDENTIFIER KWtrue KWimmutable KWfalse KWdeferred KWclass KWcase KWall # ]
named_feature -> nameopconst_info . return_type EQ info_expr [ UIDENTIFIER SEMICOL NUMBER LPAREN LIDENTIFIER KWtrue KWimmutable KWfalse KWdeferred KWclass KWcase KWall # ]
-- On LPAREN shift to state 92
-- On EXCLAM shift to state 134
-- On COLON shift to state 137
-- On return_type shift to state 318
-- On formal_arguments_info shift to state 362
-- On formal_arguments shift to state 245

State 318:
named_feature -> nameopconst_info return_type . optsemi feature_body_opt [ UIDENTIFIER SEMICOL NUMBER LPAREN LIDENTIFIER KWtrue KWimmutable KWfalse KWdeferred KWclass KWcase KWall # ]
named_feature -> nameopconst_info return_type . EQ info_expr [ UIDENTIFIER SEMICOL NUMBER LPAREN LIDENTIFIER KWtrue KWimmutable KWfalse KWdeferred KWclass KWcase KWall # ]
-- On SEMICOL shift to state 14
-- On EQ shift to state 319
-- On optsemi shift to state 321
-- On UIDENTIFIER reduce production optsemi -> 
-- On NUMBER reduce production optsemi -> 
-- On LPAREN reduce production optsemi -> 
-- On LIDENTIFIER reduce production optsemi -> 
-- On KWtrue reduce production optsemi -> 
-- On KWrequire reduce production optsemi -> 
-- On KWproof reduce production optsemi -> 
-- On KWnote reduce production optsemi -> 
-- On KWlocal reduce production optsemi -> 
-- On KWimmutable reduce production optsemi -> 
-- On KWfalse reduce production optsemi -> 
-- On KWensure reduce production optsemi -> 
-- On KWdo reduce production optsemi -> 
-- On KWdeferred reduce production optsemi -> 
-- On KWclass reduce production optsemi -> 
-- On KWcase reduce production optsemi -> 
-- On KWall reduce production optsemi -> 

State 319:
named_feature -> nameopconst_info return_type EQ . info_expr [ UIDENTIFIER SEMICOL NUMBER LPAREN LIDENTIFIER KWtrue KWimmutable KWfalse KWdeferred KWclass KWcase KWall # ]
-- On USCORE shift to state 109
-- On TIMES shift to state 110
-- On PLUS shift to state 111
-- On NUMBER shift to state 112
-- On MINUS shift to state 113
-- On LPAREN shift to state 114
-- On LIDENTIFIER shift to state 116
-- On LBRACKET shift to state 118
-- On LBRACE shift to state 119
-- On KWtrue shift to state 120
-- On KWsome shift to state 121
-- On KWold shift to state 124
-- On KWnot shift to state 125
-- On KWinspect shift to state 126
-- On KWif shift to state 127
-- On KWfalse shift to state 128
-- On KWall shift to state 129
-- On KWagent shift to state 132
-- On KWResult shift to state 144
-- On operator_expr shift to state 145
-- On info_expr shift to state 320
-- On expr shift to state 148
-- On exp_inspect shift to state 176
-- On exp_conditional shift to state 177
-- On dotted_id_list shift to state 178
-- On atomic_expr shift to state 187

State 320:
named_feature -> nameopconst_info return_type EQ info_expr . [ UIDENTIFIER SEMICOL NUMBER LPAREN LIDENTIFIER KWtrue KWimmutable KWfalse KWdeferred KWclass KWcase KWall # ]
-- On UIDENTIFIER reduce production named_feature -> nameopconst_info return_type EQ info_expr
-- On SEMICOL reduce production named_feature -> nameopconst_info return_type EQ info_expr
-- On NUMBER reduce production named_feature -> nameopconst_info return_type EQ info_expr
-- On LPAREN reduce production named_feature -> nameopconst_info return_type EQ info_expr
-- On LIDENTIFIER reduce production named_feature -> nameopconst_info return_type EQ info_expr
-- On KWtrue reduce production named_feature -> nameopconst_info return_type EQ info_expr
-- On KWimmutable reduce production named_feature -> nameopconst_info return_type EQ info_expr
-- On KWfalse reduce production named_feature -> nameopconst_info return_type EQ info_expr
-- On KWdeferred reduce production named_feature -> nameopconst_info return_type EQ info_expr
-- On KWclass reduce production named_feature -> nameopconst_info return_type EQ info_expr
-- On KWcase reduce production named_feature -> nameopconst_info return_type EQ info_expr
-- On KWall reduce production named_feature -> nameopconst_info return_type EQ info_expr

State 321:
named_feature -> nameopconst_info return_type optsemi . feature_body_opt [ UIDENTIFIER SEMICOL NUMBER LPAREN LIDENTIFIER KWtrue KWimmutable KWfalse KWdeferred KWclass KWcase KWall # ]
-- On KWrequire shift to state 143
-- On KWnote shift to state 283
-- On KWlocal shift to state 322
-- On KWensure shift to state 239
-- On KWdeferred shift to state 328
-- On require_block shift to state 329
-- On local_block shift to state 331
-- On implementation_note shift to state 338
-- On implementation_block shift to state 339
-- On feature_implementation shift to state 346
-- On feature_body_opt shift to state 360
-- On feature_body shift to state 361
-- On ensure_block shift to state 351
-- On UIDENTIFIER reduce production feature_body_opt -> 
-- On SEMICOL reduce production feature_body_opt -> 
-- On NUMBER reduce production feature_body_opt -> 
-- On LPAREN reduce production feature_body_opt -> 
-- On LIDENTIFIER reduce production feature_body_opt -> 
-- On KWtrue reduce production feature_body_opt -> 
-- On KWproof reduce production local_block -> 
-- On KWimmutable reduce production feature_body_opt -> 
-- On KWfalse reduce production feature_body_opt -> 
-- On KWdo reduce production local_block -> 
-- On KWclass reduce production feature_body_opt -> 
-- On KWcase reduce production feature_body_opt -> 
-- On KWall reduce production feature_body_opt -> 

State 322:
local_block -> KWlocal . local_list [ KWproof KWdo ]
-- On LIDENTIFIER shift to state 323
-- On local_list shift to state 353
-- On local_declaration shift to state 354
-- On identifier_list shift to state 96
-- On entity_list shift to state 357
-- On entity_group shift to state 101

State 323:
identifier_list -> LIDENTIFIER . [ SEMICOL KWproof KWdo COMMA COLON ASSIGN ]
identifier_list -> LIDENTIFIER . COMMA identifier_list [ SEMICOL KWproof KWdo COMMA COLON ASSIGN ]
local_declaration -> LIDENTIFIER . LPAREN entity_list RPAREN return_type_opt feature_body [ SEMICOL KWproof KWdo ]
-- On LPAREN shift to state 324
-- On COMMA shift to state 94
-- On SEMICOL reduce production identifier_list -> LIDENTIFIER
-- On KWproof reduce production identifier_list -> LIDENTIFIER
-- On KWdo reduce production identifier_list -> LIDENTIFIER
-- On COLON reduce production identifier_list -> LIDENTIFIER
-- On ASSIGN reduce production identifier_list -> LIDENTIFIER

State 324:
local_declaration -> LIDENTIFIER LPAREN . entity_list RPAREN return_type_opt feature_body [ SEMICOL KWproof KWdo ]
-- On LIDENTIFIER shift to state 93
-- On identifier_list shift to state 96
-- On entity_list shift to state 325
-- On entity_group shift to state 101

State 325:
local_declaration -> LIDENTIFIER LPAREN entity_list . RPAREN return_type_opt feature_body [ SEMICOL KWproof KWdo ]
-- On RPAREN shift to state 326

State 326:
local_declaration -> LIDENTIFIER LPAREN entity_list RPAREN . return_type_opt feature_body [ SEMICOL KWproof KWdo ]
-- On EXCLAM shift to state 134
-- On COLON shift to state 137
-- On return_type_opt shift to state 327
-- On return_type shift to state 244
-- On KWrequire reduce production return_type_opt -> 
-- On KWproof reduce production return_type_opt -> 
-- On KWnote reduce production return_type_opt -> 
-- On KWlocal reduce production return_type_opt -> 
-- On KWensure reduce production return_type_opt -> 
-- On KWdo reduce production return_type_opt -> 
-- On KWdeferred reduce production return_type_opt -> 

State 327:
local_declaration -> LIDENTIFIER LPAREN entity_list RPAREN return_type_opt . feature_body [ SEMICOL KWproof KWdo ]
-- On KWrequire shift to state 143
-- On KWnote shift to state 283
-- On KWlocal shift to state 322
-- On KWensure shift to state 239
-- On KWdeferred shift to state 328
-- On require_block shift to state 329
-- On local_block shift to state 331
-- On implementation_note shift to state 338
-- On implementation_block shift to state 339
-- On feature_implementation shift to state 346
-- On feature_body shift to state 350
-- On ensure_block shift to state 351
-- On KWproof reduce production local_block -> 
-- On KWdo reduce production local_block -> 

State 328:
feature_implementation -> KWdeferred . [ KWensure KWend ]
-- On KWensure reduce production feature_implementation -> KWdeferred
-- On KWend reduce production feature_implementation -> KWdeferred

State 329:
feature_body -> require_block . feature_implementation ensure_block KWend [ UIDENTIFIER SEMICOL NUMBER LPAREN LIDENTIFIER KWtrue KWproof KWimmutable KWfalse KWdo KWdeferred KWclass KWcase KWall # ]
feature_body -> require_block . feature_implementation KWend [ UIDENTIFIER SEMICOL NUMBER LPAREN LIDENTIFIER KWtrue KWproof KWimmutable KWfalse KWdo KWdeferred KWclass KWcase KWall # ]
feature_body -> require_block . ensure_block KWend [ UIDENTIFIER SEMICOL NUMBER LPAREN LIDENTIFIER KWtrue KWproof KWimmutable KWfalse KWdo KWdeferred KWclass KWcase KWall # ]
feature_body -> require_block . KWend [ UIDENTIFIER SEMICOL NUMBER LPAREN LIDENTIFIER KWtrue KWproof KWimmutable KWfalse KWdo KWdeferred KWclass KWcase KWall # ]
-- On KWnote shift to state 283
-- On KWlocal shift to state 322
-- On KWensure shift to state 239
-- On KWend shift to state 330
-- On KWdeferred shift to state 328
-- On local_block shift to state 331
-- On implementation_note shift to state 338
-- On implementation_block shift to state 339
-- On feature_implementation shift to state 340
-- On ensure_block shift to state 344
-- On KWproof reduce production local_block -> 
-- On KWdo reduce production local_block -> 

State 330:
feature_body -> require_block KWend . [ UIDENTIFIER SEMICOL NUMBER LPAREN LIDENTIFIER KWtrue KWproof KWimmutable KWfalse KWdo KWdeferred KWclass KWcase KWall # ]
-- On UIDENTIFIER reduce production feature_body -> require_block KWend
-- On SEMICOL reduce production feature_body -> require_block KWend
-- On NUMBER reduce production feature_body -> require_block KWend
-- On LPAREN reduce production feature_body -> require_block KWend
-- On LIDENTIFIER reduce production feature_body -> require_block KWend
-- On KWtrue reduce production feature_body -> require_block KWend
-- On KWproof reduce production feature_body -> require_block KWend
-- On KWimmutable reduce production feature_body -> require_block KWend
-- On KWfalse reduce production feature_body -> require_block KWend
-- On KWdo reduce production feature_body -> require_block KWend
-- On KWdeferred reduce production feature_body -> require_block KWend
-- On KWclass reduce production feature_body -> require_block KWend
-- On KWcase reduce production feature_body -> require_block KWend
-- On KWall reduce production feature_body -> require_block KWend

State 331:
implementation_block -> local_block . do_block [ KWensure KWend ]
implementation_block -> local_block . proof_block [ KWensure KWend ]
-- On KWproof shift to state 332
-- On KWdo shift to state 334
-- On proof_block shift to state 336
-- On do_block shift to state 337

State 332:
proof_block -> KWproof . compound [ KWensure KWend ]
-- On USCORE shift to state 109
-- On TIMES shift to state 110
-- On PLUS shift to state 111
-- On NUMBER shift to state 112
-- On MINUS shift to state 113
-- On LPAREN shift to state 114
-- On LIDENTIFIER shift to state 116
-- On LBRACKET shift to state 118
-- On LBRACE shift to state 119
-- On KWtrue shift to state 120
-- On KWsome shift to state 121
-- On KWold shift to state 124
-- On KWnot shift to state 125
-- On KWinspect shift to state 126
-- On KWif shift to state 127
-- On KWfalse shift to state 128
-- On KWall shift to state 129
-- On KWagent shift to state 132
-- On KWResult shift to state 144
-- On operator_expr shift to state 145
-- On info_expr shift to state 146
-- On expr shift to state 148
-- On exp_inspect shift to state 176
-- On exp_conditional shift to state 177
-- On dotted_id_list shift to state 178
-- On compound_list shift to state 236
-- On compound shift to state 333
-- On atomic_expr shift to state 187

State 333:
proof_block -> KWproof compound . [ KWensure KWend ]
-- On KWensure reduce production proof_block -> KWproof compound
-- On KWend reduce production proof_block -> KWproof compound

State 334:
do_block -> KWdo . compound [ KWensure KWend ]
-- On USCORE shift to state 109
-- On TIMES shift to state 110
-- On PLUS shift to state 111
-- On NUMBER shift to state 112
-- On MINUS shift to state 113
-- On LPAREN shift to state 114
-- On LIDENTIFIER shift to state 116
-- On LBRACKET shift to state 118
-- On LBRACE shift to state 119
-- On KWtrue shift to state 120
-- On KWsome shift to state 121
-- On KWold shift to state 124
-- On KWnot shift to state 125
-- On KWinspect shift to state 126
-- On KWif shift to state 127
-- On KWfalse shift to state 128
-- On KWall shift to state 129
-- On KWagent shift to state 132
-- On KWResult shift to state 144
-- On operator_expr shift to state 145
-- On info_expr shift to state 146
-- On expr shift to state 148
-- On exp_inspect shift to state 176
-- On exp_conditional shift to state 177
-- On dotted_id_list shift to state 178
-- On compound_list shift to state 236
-- On compound shift to state 335
-- On atomic_expr shift to state 187

State 335:
do_block -> KWdo compound . [ KWensure KWend ]
-- On KWensure reduce production do_block -> KWdo compound
-- On KWend reduce production do_block -> KWdo compound

State 336:
implementation_block -> local_block proof_block . [ KWensure KWend ]
-- On KWensure reduce production implementation_block -> local_block proof_block
-- On KWend reduce production implementation_block -> local_block proof_block

State 337:
implementation_block -> local_block do_block . [ KWensure KWend ]
-- On KWensure reduce production implementation_block -> local_block do_block
-- On KWend reduce production implementation_block -> local_block do_block

State 338:
feature_implementation -> implementation_note . [ KWensure KWend ]
-- On KWensure reduce production feature_implementation -> implementation_note
-- On KWend reduce production feature_implementation -> implementation_note

State 339:
feature_implementation -> implementation_block . [ KWensure KWend ]
-- On KWensure reduce production feature_implementation -> implementation_block
-- On KWend reduce production feature_implementation -> implementation_block

State 340:
feature_body -> require_block feature_implementation . ensure_block KWend [ UIDENTIFIER SEMICOL NUMBER LPAREN LIDENTIFIER KWtrue KWproof KWimmutable KWfalse KWdo KWdeferred KWclass KWcase KWall # ]
feature_body -> require_block feature_implementation . KWend [ UIDENTIFIER SEMICOL NUMBER LPAREN LIDENTIFIER KWtrue KWproof KWimmutable KWfalse KWdo KWdeferred KWclass KWcase KWall # ]
-- On KWensure shift to state 239
-- On KWend shift to state 341
-- On ensure_block shift to state 342

State 341:
feature_body -> require_block feature_implementation KWend . [ UIDENTIFIER SEMICOL NUMBER LPAREN LIDENTIFIER KWtrue KWproof KWimmutable KWfalse KWdo KWdeferred KWclass KWcase KWall # ]
-- On UIDENTIFIER reduce production feature_body -> require_block feature_implementation KWend
-- On SEMICOL reduce production feature_body -> require_block feature_implementation KWend
-- On NUMBER reduce production feature_body -> require_block feature_implementation KWend
-- On LPAREN reduce production feature_body -> require_block feature_implementation KWend
-- On LIDENTIFIER reduce production feature_body -> require_block feature_implementation KWend
-- On KWtrue reduce production feature_body -> require_block feature_implementation KWend
-- On KWproof reduce production feature_body -> require_block feature_implementation KWend
-- On KWimmutable reduce production feature_body -> require_block feature_implementation KWend
-- On KWfalse reduce production feature_body -> require_block feature_implementation KWend
-- On KWdo reduce production feature_body -> require_block feature_implementation KWend
-- On KWdeferred reduce production feature_body -> require_block feature_implementation KWend
-- On KWclass reduce production feature_body -> require_block feature_implementation KWend
-- On KWcase reduce production feature_body -> require_block feature_implementation KWend
-- On KWall reduce production feature_body -> require_block feature_implementation KWend

State 342:
feature_body -> require_block feature_implementation ensure_block . KWend [ UIDENTIFIER SEMICOL NUMBER LPAREN LIDENTIFIER KWtrue KWproof KWimmutable KWfalse KWdo KWdeferred KWclass KWcase KWall # ]
-- On KWend shift to state 343

State 343:
feature_body -> require_block feature_implementation ensure_block KWend . [ UIDENTIFIER SEMICOL NUMBER LPAREN LIDENTIFIER KWtrue KWproof KWimmutable KWfalse KWdo KWdeferred KWclass KWcase KWall # ]
-- On UIDENTIFIER reduce production feature_body -> require_block feature_implementation ensure_block KWend
-- On SEMICOL reduce production feature_body -> require_block feature_implementation ensure_block KWend
-- On NUMBER reduce production feature_body -> require_block feature_implementation ensure_block KWend
-- On LPAREN reduce production feature_body -> require_block feature_implementation ensure_block KWend
-- On LIDENTIFIER reduce production feature_body -> require_block feature_implementation ensure_block KWend
-- On KWtrue reduce production feature_body -> require_block feature_implementation ensure_block KWend
-- On KWproof reduce production feature_body -> require_block feature_implementation ensure_block KWend
-- On KWimmutable reduce production feature_body -> require_block feature_implementation ensure_block KWend
-- On KWfalse reduce production feature_body -> require_block feature_implementation ensure_block KWend
-- On KWdo reduce production feature_body -> require_block feature_implementation ensure_block KWend
-- On KWdeferred reduce production feature_body -> require_block feature_implementation ensure_block KWend
-- On KWclass reduce production feature_body -> require_block feature_implementation ensure_block KWend
-- On KWcase reduce production feature_body -> require_block feature_implementation ensure_block KWend
-- On KWall reduce production feature_body -> require_block feature_implementation ensure_block KWend

State 344:
feature_body -> require_block ensure_block . KWend [ UIDENTIFIER SEMICOL NUMBER LPAREN LIDENTIFIER KWtrue KWproof KWimmutable KWfalse KWdo KWdeferred KWclass KWcase KWall # ]
-- On KWend shift to state 345

State 345:
feature_body -> require_block ensure_block KWend . [ UIDENTIFIER SEMICOL NUMBER LPAREN LIDENTIFIER KWtrue KWproof KWimmutable KWfalse KWdo KWdeferred KWclass KWcase KWall # ]
-- On UIDENTIFIER reduce production feature_body -> require_block ensure_block KWend
-- On SEMICOL reduce production feature_body -> require_block ensure_block KWend
-- On NUMBER reduce production feature_body -> require_block ensure_block KWend
-- On LPAREN reduce production feature_body -> require_block ensure_block KWend
-- On LIDENTIFIER reduce production feature_body -> require_block ensure_block KWend
-- On KWtrue reduce production feature_body -> require_block ensure_block KWend
-- On KWproof reduce production feature_body -> require_block ensure_block KWend
-- On KWimmutable reduce production feature_body -> require_block ensure_block KWend
-- On KWfalse reduce production feature_body -> require_block ensure_block KWend
-- On KWdo reduce production feature_body -> require_block ensure_block KWend
-- On KWdeferred reduce production feature_body -> require_block ensure_block KWend
-- On KWclass reduce production feature_body -> require_block ensure_block KWend
-- On KWcase reduce production feature_body -> require_block ensure_block KWend
-- On KWall reduce production feature_body -> require_block ensure_block KWend

State 346:
feature_body -> feature_implementation . ensure_block KWend [ UIDENTIFIER SEMICOL NUMBER LPAREN LIDENTIFIER KWtrue KWproof KWimmutable KWfalse KWdo KWdeferred KWclass KWcase KWall # ]
feature_body -> feature_implementation . KWend [ UIDENTIFIER SEMICOL NUMBER LPAREN LIDENTIFIER KWtrue KWproof KWimmutable KWfalse KWdo KWdeferred KWclass KWcase KWall # ]
-- On KWensure shift to state 239
-- On KWend shift to state 347
-- On ensure_block shift to state 348

State 347:
feature_body -> feature_implementation KWend . [ UIDENTIFIER SEMICOL NUMBER LPAREN LIDENTIFIER KWtrue KWproof KWimmutable KWfalse KWdo KWdeferred KWclass KWcase KWall # ]
-- On UIDENTIFIER reduce production feature_body -> feature_implementation KWend
-- On SEMICOL reduce production feature_body -> feature_implementation KWend
-- On NUMBER reduce production feature_body -> feature_implementation KWend
-- On LPAREN reduce production feature_body -> feature_implementation KWend
-- On LIDENTIFIER reduce production feature_body -> feature_implementation KWend
-- On KWtrue reduce production feature_body -> feature_implementation KWend
-- On KWproof reduce production feature_body -> feature_implementation KWend
-- On KWimmutable reduce production feature_body -> feature_implementation KWend
-- On KWfalse reduce production feature_body -> feature_implementation KWend
-- On KWdo reduce production feature_body -> feature_implementation KWend
-- On KWdeferred reduce production feature_body -> feature_implementation KWend
-- On KWclass reduce production feature_body -> feature_implementation KWend
-- On KWcase reduce production feature_body -> feature_implementation KWend
-- On KWall reduce production feature_body -> feature_implementation KWend

State 348:
feature_body -> feature_implementation ensure_block . KWend [ UIDENTIFIER SEMICOL NUMBER LPAREN LIDENTIFIER KWtrue KWproof KWimmutable KWfalse KWdo KWdeferred KWclass KWcase KWall # ]
-- On KWend shift to state 349

State 349:
feature_body -> feature_implementation ensure_block KWend . [ UIDENTIFIER SEMICOL NUMBER LPAREN LIDENTIFIER KWtrue KWproof KWimmutable KWfalse KWdo KWdeferred KWclass KWcase KWall # ]
-- On UIDENTIFIER reduce production feature_body -> feature_implementation ensure_block KWend
-- On SEMICOL reduce production feature_body -> feature_implementation ensure_block KWend
-- On NUMBER reduce production feature_body -> feature_implementation ensure_block KWend
-- On LPAREN reduce production feature_body -> feature_implementation ensure_block KWend
-- On LIDENTIFIER reduce production feature_body -> feature_implementation ensure_block KWend
-- On KWtrue reduce production feature_body -> feature_implementation ensure_block KWend
-- On KWproof reduce production feature_body -> feature_implementation ensure_block KWend
-- On KWimmutable reduce production feature_body -> feature_implementation ensure_block KWend
-- On KWfalse reduce production feature_body -> feature_implementation ensure_block KWend
-- On KWdo reduce production feature_body -> feature_implementation ensure_block KWend
-- On KWdeferred reduce production feature_body -> feature_implementation ensure_block KWend
-- On KWclass reduce production feature_body -> feature_implementation ensure_block KWend
-- On KWcase reduce production feature_body -> feature_implementation ensure_block KWend
-- On KWall reduce production feature_body -> feature_implementation ensure_block KWend

State 350:
local_declaration -> LIDENTIFIER LPAREN entity_list RPAREN return_type_opt feature_body . [ SEMICOL KWproof KWdo ]
-- On SEMICOL reduce production local_declaration -> LIDENTIFIER LPAREN entity_list RPAREN return_type_opt feature_body
-- On KWproof reduce production local_declaration -> LIDENTIFIER LPAREN entity_list RPAREN return_type_opt feature_body
-- On KWdo reduce production local_declaration -> LIDENTIFIER LPAREN entity_list RPAREN return_type_opt feature_body

State 351:
feature_body -> ensure_block . KWend [ UIDENTIFIER SEMICOL NUMBER LPAREN LIDENTIFIER KWtrue KWproof KWimmutable KWfalse KWdo KWdeferred KWclass KWcase KWall # ]
-- On KWend shift to state 352

State 352:
feature_body -> ensure_block KWend . [ UIDENTIFIER SEMICOL NUMBER LPAREN LIDENTIFIER KWtrue KWproof KWimmutable KWfalse KWdo KWdeferred KWclass KWcase KWall # ]
-- On UIDENTIFIER reduce production feature_body -> ensure_block KWend
-- On SEMICOL reduce production feature_body -> ensure_block KWend
-- On NUMBER reduce production feature_body -> ensure_block KWend
-- On LPAREN reduce production feature_body -> ensure_block KWend
-- On LIDENTIFIER reduce production feature_body -> ensure_block KWend
-- On KWtrue reduce production feature_body -> ensure_block KWend
-- On KWproof reduce production feature_body -> ensure_block KWend
-- On KWimmutable reduce production feature_body -> ensure_block KWend
-- On KWfalse reduce production feature_body -> ensure_block KWend
-- On KWdo reduce production feature_body -> ensure_block KWend
-- On KWdeferred reduce production feature_body -> ensure_block KWend
-- On KWclass reduce production feature_body -> ensure_block KWend
-- On KWcase reduce production feature_body -> ensure_block KWend
-- On KWall reduce production feature_body -> ensure_block KWend

State 353:
local_block -> KWlocal local_list . [ KWproof KWdo ]
-- On KWproof reduce production local_block -> KWlocal local_list
-- On KWdo reduce production local_block -> KWlocal local_list

State 354:
local_list -> local_declaration . [ KWproof KWdo ]
local_list -> local_declaration . SEMICOL local_list [ KWproof KWdo ]
-- On SEMICOL shift to state 355
-- On KWproof reduce production local_list -> local_declaration
-- On KWdo reduce production local_list -> local_declaration

State 355:
local_list -> local_declaration SEMICOL . local_list [ KWproof KWdo ]
-- On LIDENTIFIER shift to state 323
-- On local_list shift to state 356
-- On local_declaration shift to state 354
-- On identifier_list shift to state 96
-- On entity_list shift to state 357
-- On entity_group shift to state 101

State 356:
local_list -> local_declaration SEMICOL local_list . [ KWproof KWdo ]
-- On KWproof reduce production local_list -> local_declaration SEMICOL local_list
-- On KWdo reduce production local_list -> local_declaration SEMICOL local_list

State 357:
local_declaration -> entity_list . [ SEMICOL KWproof KWdo ]
local_declaration -> entity_list . ASSIGN expr [ SEMICOL KWproof KWdo ]
-- On ASSIGN shift to state 358
-- On SEMICOL reduce production local_declaration -> entity_list
-- On KWproof reduce production local_declaration -> entity_list
-- On KWdo reduce production local_declaration -> entity_list

State 358:
local_declaration -> entity_list ASSIGN . expr [ SEMICOL KWproof KWdo ]
-- On USCORE shift to state 109
-- On TIMES shift to state 110
-- On PLUS shift to state 111
-- On NUMBER shift to state 112
-- On MINUS shift to state 113
-- On LPAREN shift to state 114
-- On LIDENTIFIER shift to state 116
-- On LBRACKET shift to state 118
-- On LBRACE shift to state 119
-- On KWtrue shift to state 120
-- On KWsome shift to state 121
-- On KWold shift to state 124
-- On KWnot shift to state 125
-- On KWinspect shift to state 126
-- On KWif shift to state 127
-- On KWfalse shift to state 128
-- On KWall shift to state 129
-- On KWagent shift to state 132
-- On KWResult shift to state 144
-- On operator_expr shift to state 145
-- On expr shift to state 359
-- On exp_inspect shift to state 176
-- On exp_conditional shift to state 177
-- On dotted_id_list shift to state 178
-- On atomic_expr shift to state 187

State 359:
expr -> expr . COMMA expr [ TIMES SEMICOL PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWproof KWor KWin KWdo KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
expr -> expr . LPAREN expr RPAREN [ TIMES SEMICOL PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWproof KWor KWin KWdo KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
expr -> expr . LBRACKET expr RBRACKET [ TIMES SEMICOL PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWproof KWor KWin KWdo KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
expr -> expr . DOT LIDENTIFIER [ TIMES SEMICOL PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWproof KWor KWin KWdo KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
expr -> expr . DOT LBRACE expr RBRACE [ TIMES SEMICOL PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWproof KWor KWin KWdo KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
expr -> expr . COLON type_nt [ TIMES SEMICOL PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWproof KWor KWin KWdo KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
local_declaration -> entity_list ASSIGN expr . [ SEMICOL KWproof KWdo ]
operator_expr -> expr . PLUS expr [ TIMES SEMICOL PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWproof KWor KWin KWdo KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . MINUS expr [ TIMES SEMICOL PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWproof KWor KWin KWdo KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . TIMES expr [ TIMES SEMICOL PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWproof KWor KWin KWdo KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . DIVIDE expr [ TIMES SEMICOL PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWproof KWor KWin KWdo KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . CARET expr [ TIMES SEMICOL PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWproof KWor KWin KWdo KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . KWin expr [ TIMES SEMICOL PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWproof KWor KWin KWdo KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . NOTIN expr [ TIMES SEMICOL PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWproof KWor KWin KWdo KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . EQ expr [ TIMES SEMICOL PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWproof KWor KWin KWdo KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . NEQ expr [ TIMES SEMICOL PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWproof KWor KWin KWdo KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . LT expr [ TIMES SEMICOL PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWproof KWor KWin KWdo KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . LE expr [ TIMES SEMICOL PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWproof KWor KWin KWdo KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . GT expr [ TIMES SEMICOL PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWproof KWor KWin KWdo KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . GE expr [ TIMES SEMICOL PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWproof KWor KWin KWdo KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . KWas expr [ TIMES SEMICOL PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWproof KWor KWin KWdo KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . KWand expr [ TIMES SEMICOL PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWproof KWor KWin KWdo KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . KWor expr [ TIMES SEMICOL PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWproof KWor KWin KWdo KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . DCOLON expr [ TIMES SEMICOL PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWproof KWor KWin KWdo KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . COLON expr [ TIMES SEMICOL PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWproof KWor KWin KWdo KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . BAR expr [ TIMES SEMICOL PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWproof KWor KWin KWdo KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . DBAR expr [ TIMES SEMICOL PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWproof KWor KWin KWdo KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
operator_expr -> expr . DARROW expr [ TIMES SEMICOL PLUS NOTIN NEQ MINUS LT LPAREN LE LBRACKET KWproof KWor KWin KWdo KWas KWand GT GE EQ DOT DIVIDE DCOLON DBAR DARROW COMMA COLON CARET BAR ]
-- On TIMES shift to state 149
-- On PLUS shift to state 154
-- On NOTIN shift to state 159
-- On NEQ shift to state 168
-- On MINUS shift to state 161
-- On LT shift to state 183
-- On LPAREN shift to state 151
-- On LE shift to state 190
-- On LBRACKET shift to state 156
-- On KWor shift to state 192
-- On KWin shift to state 194
-- On KWas shift to state 196
-- On KWand shift to state 204
-- On GT shift to state 198
-- On GE shift to state 200
-- On EQ shift to state 202
-- On DOT shift to state 163
-- On DIVIDE shift to state 170
-- On DCOLON shift to state 172
-- On DBAR shift to state 185
-- On DARROW shift to state 206
-- On COMMA shift to state 208
-- On COLON shift to state 210
-- On CARET shift to state 174
-- On BAR shift to state 188
-- On SEMICOL reduce production local_declaration -> entity_list ASSIGN expr
-- On KWproof reduce production local_declaration -> entity_list ASSIGN expr
-- On KWdo reduce production local_declaration -> entity_list ASSIGN expr

State 360:
named_feature -> nameopconst_info return_type optsemi feature_body_opt . [ UIDENTIFIER SEMICOL NUMBER LPAREN LIDENTIFIER KWtrue KWimmutable KWfalse KWdeferred KWclass KWcase KWall # ]
-- On UIDENTIFIER reduce production named_feature -> nameopconst_info return_type optsemi feature_body_opt
-- On SEMICOL reduce production named_feature -> nameopconst_info return_type optsemi feature_body_opt
-- On NUMBER reduce production named_feature -> nameopconst_info return_type optsemi feature_body_opt
-- On LPAREN reduce production named_feature -> nameopconst_info return_type optsemi feature_body_opt
-- On LIDENTIFIER reduce production named_feature -> nameopconst_info return_type optsemi feature_body_opt
-- On KWtrue reduce production named_feature -> nameopconst_info return_type optsemi feature_body_opt
-- On KWimmutable reduce production named_feature -> nameopconst_info return_type optsemi feature_body_opt
-- On KWfalse reduce production named_feature -> nameopconst_info return_type optsemi feature_body_opt
-- On KWdeferred reduce production named_feature -> nameopconst_info return_type optsemi feature_body_opt
-- On KWclass reduce production named_feature -> nameopconst_info return_type optsemi feature_body_opt
-- On KWcase reduce production named_feature -> nameopconst_info return_type optsemi feature_body_opt
-- On KWall reduce production named_feature -> nameopconst_info return_type optsemi feature_body_opt

State 361:
feature_body_opt -> feature_body . [ UIDENTIFIER SEMICOL NUMBER LPAREN LIDENTIFIER KWtrue KWimmutable KWfalse KWdeferred KWclass KWcase KWall # ]
-- On UIDENTIFIER reduce production feature_body_opt -> feature_body
-- On SEMICOL reduce production feature_body_opt -> feature_body
-- On NUMBER reduce production feature_body_opt -> feature_body
-- On LPAREN reduce production feature_body_opt -> feature_body
-- On LIDENTIFIER reduce production feature_body_opt -> feature_body
-- On KWtrue reduce production feature_body_opt -> feature_body
-- On KWimmutable reduce production feature_body_opt -> feature_body
-- On KWfalse reduce production feature_body_opt -> feature_body
-- On KWdeferred reduce production feature_body_opt -> feature_body
-- On KWclass reduce production feature_body_opt -> feature_body
-- On KWcase reduce production feature_body_opt -> feature_body
-- On KWall reduce production feature_body_opt -> feature_body

State 362:
named_feature -> nameopconst_info formal_arguments_info . return_type_opt optsemi feature_body_opt [ UIDENTIFIER SEMICOL NUMBER LPAREN LIDENTIFIER KWtrue KWimmutable KWfalse KWdeferred KWclass KWcase KWall # ]
named_feature -> nameopconst_info formal_arguments_info . return_type_opt ARROW info_expr [ UIDENTIFIER SEMICOL NUMBER LPAREN LIDENTIFIER KWtrue KWimmutable KWfalse KWdeferred KWclass KWcase KWall # ]
-- On EXCLAM shift to state 134
-- On COLON shift to state 137
-- On return_type_opt shift to state 363
-- On return_type shift to state 244
-- On UIDENTIFIER reduce production return_type_opt -> 
-- On SEMICOL reduce production return_type_opt -> 
-- On NUMBER reduce production return_type_opt -> 
-- On LPAREN reduce production return_type_opt -> 
-- On LIDENTIFIER reduce production return_type_opt -> 
-- On KWtrue reduce production return_type_opt -> 
-- On KWrequire reduce production return_type_opt -> 
-- On KWproof reduce production return_type_opt -> 
-- On KWnote reduce production return_type_opt -> 
-- On KWlocal reduce production return_type_opt -> 
-- On KWimmutable reduce production return_type_opt -> 
-- On KWfalse reduce production return_type_opt -> 
-- On KWensure reduce production return_type_opt -> 
-- On KWdo reduce production return_type_opt -> 
-- On KWdeferred reduce production return_type_opt -> 
-- On KWclass reduce production return_type_opt -> 
-- On KWcase reduce production return_type_opt -> 
-- On KWall reduce production return_type_opt -> 
-- On ARROW reduce production return_type_opt -> 

State 363:
named_feature -> nameopconst_info formal_arguments_info return_type_opt . optsemi feature_body_opt [ UIDENTIFIER SEMICOL NUMBER LPAREN LIDENTIFIER KWtrue KWimmutable KWfalse KWdeferred KWclass KWcase KWall # ]
named_feature -> nameopconst_info formal_arguments_info return_type_opt . ARROW info_expr [ UIDENTIFIER SEMICOL NUMBER LPAREN LIDENTIFIER KWtrue KWimmutable KWfalse KWdeferred KWclass KWcase KWall # ]
-- On SEMICOL shift to state 14
-- On ARROW shift to state 364
-- On optsemi shift to state 366
-- On UIDENTIFIER reduce production optsemi -> 
-- On NUMBER reduce production optsemi -> 
-- On LPAREN reduce production optsemi -> 
-- On LIDENTIFIER reduce production optsemi -> 
-- On KWtrue reduce production optsemi -> 
-- On KWrequire reduce production optsemi -> 
-- On KWproof reduce production optsemi -> 
-- On KWnote reduce production optsemi -> 
-- On KWlocal reduce production optsemi -> 
-- On KWimmutable reduce production optsemi -> 
-- On KWfalse reduce production optsemi -> 
-- On KWensure reduce production optsemi -> 
-- On KWdo reduce production optsemi -> 
-- On KWdeferred reduce production optsemi -> 
-- On KWclass reduce production optsemi -> 
-- On KWcase reduce production optsemi -> 
-- On KWall reduce production optsemi -> 

State 364:
named_feature -> nameopconst_info formal_arguments_info return_type_opt ARROW . info_expr [ UIDENTIFIER SEMICOL NUMBER LPAREN LIDENTIFIER KWtrue KWimmutable KWfalse KWdeferred KWclass KWcase KWall # ]
-- On USCORE shift to state 109
-- On TIMES shift to state 110
-- On PLUS shift to state 111
-- On NUMBER shift to state 112
-- On MINUS shift to state 113
-- On LPAREN shift to state 114
-- On LIDENTIFIER shift to state 116
-- On LBRACKET shift to state 118
-- On LBRACE shift to state 119
-- On KWtrue shift to state 120
-- On KWsome shift to state 121
-- On KWold shift to state 124
-- On KWnot shift to state 125
-- On KWinspect shift to state 126
-- On KWif shift to state 127
-- On KWfalse shift to state 128
-- On KWall shift to state 129
-- On KWagent shift to state 132
-- On KWResult shift to state 144
-- On operator_expr shift to state 145
-- On info_expr shift to state 365
-- On expr shift to state 148
-- On exp_inspect shift to state 176
-- On exp_conditional shift to state 177
-- On dotted_id_list shift to state 178
-- On atomic_expr shift to state 187

State 365:
named_feature -> nameopconst_info formal_arguments_info return_type_opt ARROW info_expr . [ UIDENTIFIER SEMICOL NUMBER LPAREN LIDENTIFIER KWtrue KWimmutable KWfalse KWdeferred KWclass KWcase KWall # ]
-- On UIDENTIFIER reduce production named_feature -> nameopconst_info formal_arguments_info return_type_opt ARROW info_expr
-- On SEMICOL reduce production named_feature -> nameopconst_info formal_arguments_info return_type_opt ARROW info_expr
-- On NUMBER reduce production named_feature -> nameopconst_info formal_arguments_info return_type_opt ARROW info_expr
-- On LPAREN reduce production named_feature -> nameopconst_info formal_arguments_info return_type_opt ARROW info_expr
-- On LIDENTIFIER reduce production named_feature -> nameopconst_info formal_arguments_info return_type_opt ARROW info_expr
-- On KWtrue reduce production named_feature -> nameopconst_info formal_arguments_info return_type_opt ARROW info_expr
-- On KWimmutable reduce production named_feature -> nameopconst_info formal_arguments_info return_type_opt ARROW info_expr
-- On KWfalse reduce production named_feature -> nameopconst_info formal_arguments_info return_type_opt ARROW info_expr
-- On KWdeferred reduce production named_feature -> nameopconst_info formal_arguments_info return_type_opt ARROW info_expr
-- On KWclass reduce production named_feature -> nameopconst_info formal_arguments_info return_type_opt ARROW info_expr
-- On KWcase reduce production named_feature -> nameopconst_info formal_arguments_info return_type_opt ARROW info_expr
-- On KWall reduce production named_feature -> nameopconst_info formal_arguments_info return_type_opt ARROW info_expr

State 366:
named_feature -> nameopconst_info formal_arguments_info return_type_opt optsemi . feature_body_opt [ UIDENTIFIER SEMICOL NUMBER LPAREN LIDENTIFIER KWtrue KWimmutable KWfalse KWdeferred KWclass KWcase KWall # ]
-- On KWrequire shift to state 143
-- On KWnote shift to state 283
-- On KWlocal shift to state 322
-- On KWensure shift to state 239
-- On KWdeferred shift to state 328
-- On require_block shift to state 329
-- On local_block shift to state 331
-- On implementation_note shift to state 338
-- On implementation_block shift to state 339
-- On feature_implementation shift to state 346
-- On feature_body_opt shift to state 367
-- On feature_body shift to state 361
-- On ensure_block shift to state 351
-- On UIDENTIFIER reduce production feature_body_opt -> 
-- On SEMICOL reduce production feature_body_opt -> 
-- On NUMBER reduce production feature_body_opt -> 
-- On LPAREN reduce production feature_body_opt -> 
-- On LIDENTIFIER reduce production feature_body_opt -> 
-- On KWtrue reduce production feature_body_opt -> 
-- On KWproof reduce production local_block -> 
-- On KWimmutable reduce production feature_body_opt -> 
-- On KWfalse reduce production feature_body_opt -> 
-- On KWdo reduce production local_block -> 
-- On KWclass reduce production feature_body_opt -> 
-- On KWcase reduce production feature_body_opt -> 
-- On KWall reduce production feature_body_opt -> 

State 367:
named_feature -> nameopconst_info formal_arguments_info return_type_opt optsemi feature_body_opt . [ UIDENTIFIER SEMICOL NUMBER LPAREN LIDENTIFIER KWtrue KWimmutable KWfalse KWdeferred KWclass KWcase KWall # ]
-- On UIDENTIFIER reduce production named_feature -> nameopconst_info formal_arguments_info return_type_opt optsemi feature_body_opt
-- On SEMICOL reduce production named_feature -> nameopconst_info formal_arguments_info return_type_opt optsemi feature_body_opt
-- On NUMBER reduce production named_feature -> nameopconst_info formal_arguments_info return_type_opt optsemi feature_body_opt
-- On LPAREN reduce production named_feature -> nameopconst_info formal_arguments_info return_type_opt optsemi feature_body_opt
-- On LIDENTIFIER reduce production named_feature -> nameopconst_info formal_arguments_info return_type_opt optsemi feature_body_opt
-- On KWtrue reduce production named_feature -> nameopconst_info formal_arguments_info return_type_opt optsemi feature_body_opt
-- On KWimmutable reduce production named_feature -> nameopconst_info formal_arguments_info return_type_opt optsemi feature_body_opt
-- On KWfalse reduce production named_feature -> nameopconst_info formal_arguments_info return_type_opt optsemi feature_body_opt
-- On KWdeferred reduce production named_feature -> nameopconst_info formal_arguments_info return_type_opt optsemi feature_body_opt
-- On KWclass reduce production named_feature -> nameopconst_info formal_arguments_info return_type_opt optsemi feature_body_opt
-- On KWcase reduce production named_feature -> nameopconst_info formal_arguments_info return_type_opt optsemi feature_body_opt
-- On KWall reduce production named_feature -> nameopconst_info formal_arguments_info return_type_opt optsemi feature_body_opt

State 368:
nameopconst_info -> nameopconst . [ SEMICOL NEWLINE LPAREN KWinherit KWend EXCLAM COLON ]
-- On SEMICOL reduce production nameopconst_info -> nameopconst
-- On NEWLINE reduce production nameopconst_info -> nameopconst
-- On LPAREN reduce production nameopconst_info -> nameopconst
-- On KWinherit reduce production nameopconst_info -> nameopconst
-- On KWend reduce production nameopconst_info -> nameopconst
-- On EXCLAM reduce production nameopconst_info -> nameopconst
-- On COLON reduce production nameopconst_info -> nameopconst

State 369:
decl -> named_feature . [ UIDENTIFIER SEMICOL NUMBER LPAREN LIDENTIFIER KWtrue KWimmutable KWfalse KWdeferred KWclass KWcase KWall # ]
-- On UIDENTIFIER reduce production decl -> named_feature
-- On SEMICOL reduce production decl -> named_feature
-- On NUMBER reduce production decl -> named_feature
-- On LPAREN reduce production decl -> named_feature
-- On LIDENTIFIER reduce production decl -> named_feature
-- On KWtrue reduce production decl -> named_feature
-- On KWimmutable reduce production decl -> named_feature
-- On KWfalse reduce production decl -> named_feature
-- On KWdeferred reduce production decl -> named_feature
-- On KWclass reduce production decl -> named_feature
-- On KWcase reduce production decl -> named_feature
-- On KWall reduce production decl -> named_feature

State 370:
class_declaration -> header_mark . KWclass class_name class_generics create_clause inherit_clause KWend [ UIDENTIFIER SEMICOL NUMBER LPAREN LIDENTIFIER KWtrue KWimmutable KWfalse KWdeferred KWclass KWcase KWall # ]
-- On KWclass shift to state 371

State 371:
class_declaration -> header_mark KWclass . class_name class_generics create_clause inherit_clause KWend [ UIDENTIFIER SEMICOL NUMBER LPAREN LIDENTIFIER KWtrue KWimmutable KWfalse KWdeferred KWclass KWcase KWall # ]
-- On UIDENTIFIER shift to state 372
-- On LIDENTIFIER shift to state 2
-- On path shift to state 373
-- On dotted_id_list shift to state 36
-- On class_name shift to state 375

State 372:
class_name -> UIDENTIFIER . [ LBRACKET KWinherit KWend KWcreate ]
-- On LBRACKET reduce production class_name -> UIDENTIFIER
-- On KWinherit reduce production class_name -> UIDENTIFIER
-- On KWend reduce production class_name -> UIDENTIFIER
-- On KWcreate reduce production class_name -> UIDENTIFIER

State 373:
class_name -> path . UIDENTIFIER [ LBRACKET KWinherit KWend KWcreate ]
-- On UIDENTIFIER shift to state 374

State 374:
class_name -> path UIDENTIFIER . [ LBRACKET KWinherit KWend KWcreate ]
-- On LBRACKET reduce production class_name -> path UIDENTIFIER
-- On KWinherit reduce production class_name -> path UIDENTIFIER
-- On KWend reduce production class_name -> path UIDENTIFIER
-- On KWcreate reduce production class_name -> path UIDENTIFIER

State 375:
class_declaration -> header_mark KWclass class_name . class_generics create_clause inherit_clause KWend [ UIDENTIFIER SEMICOL NUMBER LPAREN LIDENTIFIER KWtrue KWimmutable KWfalse KWdeferred KWclass KWcase KWall # ]
-- On LBRACKET shift to state 376
-- On class_generics shift to state 382
-- On KWinherit reduce production class_generics -> 
-- On KWend reduce production class_generics -> 
-- On KWcreate reduce production class_generics -> 

State 376:
class_generics -> LBRACKET . uidentifier_list RBRACKET [ KWinherit KWend KWcreate ]
-- On UIDENTIFIER shift to state 377
-- On uidentifier_list shift to state 380

State 377:
uidentifier_list -> UIDENTIFIER . [ RBRACKET ]
uidentifier_list -> UIDENTIFIER . COMMA uidentifier_list [ RBRACKET ]
-- On COMMA shift to state 378
-- On RBRACKET reduce production uidentifier_list -> UIDENTIFIER

State 378:
uidentifier_list -> UIDENTIFIER COMMA . uidentifier_list [ RBRACKET ]
-- On UIDENTIFIER shift to state 377
-- On uidentifier_list shift to state 379

State 379:
uidentifier_list -> UIDENTIFIER COMMA uidentifier_list . [ RBRACKET ]
-- On RBRACKET reduce production uidentifier_list -> UIDENTIFIER COMMA uidentifier_list

State 380:
class_generics -> LBRACKET uidentifier_list . RBRACKET [ KWinherit KWend KWcreate ]
-- On RBRACKET shift to state 381

State 381:
class_generics -> LBRACKET uidentifier_list RBRACKET . [ KWinherit KWend KWcreate ]
-- On KWinherit reduce production class_generics -> LBRACKET uidentifier_list RBRACKET
-- On KWend reduce production class_generics -> LBRACKET uidentifier_list RBRACKET
-- On KWcreate reduce production class_generics -> LBRACKET uidentifier_list RBRACKET

State 382:
class_declaration -> header_mark KWclass class_name class_generics . create_clause inherit_clause KWend [ UIDENTIFIER SEMICOL NUMBER LPAREN LIDENTIFIER KWtrue KWimmutable KWfalse KWdeferred KWclass KWcase KWall # ]
-- On KWcreate shift to state 383
-- On create_clause shift to state 391
-- On KWinherit reduce production create_clause -> 
-- On KWend reduce production create_clause -> 

State 383:
create_clause -> KWcreate . constructor_list [ KWinherit KWend ]
-- On NUMBER shift to state 55
-- On LPAREN shift to state 56
-- On LIDENTIFIER shift to state 85
-- On KWtrue shift to state 86
-- On KWfalse shift to state 88
-- On nameopconst_info shift to state 384
-- On nameopconst shift to state 368
-- On featopconst shift to state 386
-- On constructor_list shift to state 387
-- On constructor shift to state 388

State 384:
constructor -> nameopconst_info . formal_arguments_opt [ SEMICOL NEWLINE KWinherit KWend ]
-- On LPAREN shift to state 92
-- On formal_arguments_opt shift to state 385
-- On formal_arguments shift to state 315
-- On SEMICOL reduce production formal_arguments_opt -> 
-- On NEWLINE reduce production formal_arguments_opt -> 
-- On KWinherit reduce production formal_arguments_opt -> 
-- On KWend reduce production formal_arguments_opt -> 

State 385:
constructor -> nameopconst_info formal_arguments_opt . [ SEMICOL NEWLINE KWinherit KWend ]
-- On SEMICOL reduce production constructor -> nameopconst_info formal_arguments_opt
-- On NEWLINE reduce production constructor -> nameopconst_info formal_arguments_opt
-- On KWinherit reduce production constructor -> nameopconst_info formal_arguments_opt
-- On KWend reduce production constructor -> nameopconst_info formal_arguments_opt

State 386:
nameopconst -> featopconst . [ SEMICOL NUMBER NEWLINE LPAREN LIDENTIFIER KWtrue KWinherit KWfalse KWend KWas EXCLAM COLON ]
-- On SEMICOL reduce production nameopconst -> featopconst
-- On NUMBER reduce production nameopconst -> featopconst
-- On NEWLINE reduce production nameopconst -> featopconst
-- On LPAREN reduce production nameopconst -> featopconst
-- On LIDENTIFIER reduce production nameopconst -> featopconst
-- On KWtrue reduce production nameopconst -> featopconst
-- On KWinherit reduce production nameopconst -> featopconst
-- On KWfalse reduce production nameopconst -> featopconst
-- On KWend reduce production nameopconst -> featopconst
-- On KWas reduce production nameopconst -> featopconst
-- On EXCLAM reduce production nameopconst -> featopconst
-- On COLON reduce production nameopconst -> featopconst

State 387:
create_clause -> KWcreate constructor_list . [ KWinherit KWend ]
-- On KWinherit reduce production create_clause -> KWcreate constructor_list
-- On KWend reduce production create_clause -> KWcreate constructor_list

State 388:
constructor_list -> constructor . [ KWinherit KWend ]
constructor_list -> constructor . separator constructor_list [ KWinherit KWend ]
-- On SEMICOL shift to state 4
-- On NEWLINE shift to state 5
-- On separator shift to state 389
-- On KWinherit reduce production constructor_list -> constructor
-- On KWend reduce production constructor_list -> constructor

State 389:
constructor_list -> constructor separator . constructor_list [ KWinherit KWend ]
-- On NUMBER shift to state 55
-- On LPAREN shift to state 56
-- On LIDENTIFIER shift to state 85
-- On KWtrue shift to state 86
-- On KWfalse shift to state 88
-- On nameopconst_info shift to state 384
-- On nameopconst shift to state 368
-- On featopconst shift to state 386
-- On constructor_list shift to state 390
-- On constructor shift to state 388

State 390:
constructor_list -> constructor separator constructor_list . [ KWinherit KWend ]
-- On KWinherit reduce production constructor_list -> constructor separator constructor_list
-- On KWend reduce production constructor_list -> constructor separator constructor_list

State 391:
class_declaration -> header_mark KWclass class_name class_generics create_clause . inherit_clause KWend [ UIDENTIFIER SEMICOL NUMBER LPAREN LIDENTIFIER KWtrue KWimmutable KWfalse KWdeferred KWclass KWcase KWall # ]
-- On KWinherit shift to state 392
-- On inherit_clause shift to state 416
-- On KWend reduce production inherit_clause -> 

State 392:
inherit_clause -> KWinherit . parent_list [ KWend ]
-- On KWghost shift to state 393
-- On parent_list shift to state 394
-- On parent shift to state 395
-- On optghost shift to state 398
-- On UIDENTIFIER reduce production optghost -> 
-- On LPAREN reduce production optghost -> 
-- On LIDENTIFIER reduce production optghost -> 
-- On LBRACKET reduce production optghost -> 

State 393:
optghost -> KWghost . [ UIDENTIFIER LPAREN LIDENTIFIER LBRACKET ]
-- On UIDENTIFIER reduce production optghost -> KWghost
-- On LPAREN reduce production optghost -> KWghost
-- On LIDENTIFIER reduce production optghost -> KWghost
-- On LBRACKET reduce production optghost -> KWghost

State 394:
inherit_clause -> KWinherit parent_list . [ KWend ]
-- On KWend reduce production inherit_clause -> KWinherit parent_list

State 395:
parent_list -> parent . [ KWend ]
parent_list -> parent . optsemi parent_list [ KWend ]
-- On SEMICOL shift to state 14
-- On optsemi shift to state 396
-- On UIDENTIFIER reduce production optsemi -> 
-- On LPAREN reduce production optsemi -> 
-- On LIDENTIFIER reduce production optsemi -> 
-- On LBRACKET reduce production optsemi -> 
-- On KWghost reduce production optsemi -> 
-- On KWend reduce production parent_list -> parent

State 396:
parent_list -> parent optsemi . parent_list [ KWend ]
-- On KWghost shift to state 393
-- On parent_list shift to state 397
-- On parent shift to state 395
-- On optghost shift to state 398
-- On UIDENTIFIER reduce production optghost -> 
-- On LPAREN reduce production optghost -> 
-- On LIDENTIFIER reduce production optghost -> 
-- On LBRACKET reduce production optghost -> 

State 397:
parent_list -> parent optsemi parent_list . [ KWend ]
-- On KWend reduce production parent_list -> parent optsemi parent_list

State 398:
parent -> optghost . type_nt feature_adaptation [ UIDENTIFIER SEMICOL LPAREN LIDENTIFIER LBRACKET KWghost KWend ]
-- On UIDENTIFIER shift to state 20
-- On LPAREN shift to state 22
-- On LIDENTIFIER shift to state 2
-- On LBRACKET shift to state 23
-- On type_nt shift to state 399
-- On tuple_type shift to state 24
-- On star_type shift to state 25
-- On simple_type shift to state 26
-- On qmark_type shift to state 27
-- On path shift to state 28
-- On list_type shift to state 31
-- On elem_type shift to state 43
-- On dotted_id_list shift to state 36
-- On arrow_type shift to state 46

State 399:
parent -> optghost type_nt . feature_adaptation [ UIDENTIFIER SEMICOL LPAREN LIDENTIFIER LBRACKET KWghost KWend ]
-- On KWrename shift to state 400
-- On feature_adaptation shift to state 415
-- On UIDENTIFIER reduce production feature_adaptation -> 
-- On SEMICOL reduce production feature_adaptation -> 
-- On LPAREN reduce production feature_adaptation -> 
-- On LIDENTIFIER reduce production feature_adaptation -> 
-- On LBRACKET reduce production feature_adaptation -> 
-- On KWghost reduce production feature_adaptation -> 
-- On KWend reduce production feature_adaptation -> 

State 400:
feature_adaptation -> KWrename . rename_list KWend [ UIDENTIFIER SEMICOL LPAREN LIDENTIFIER LBRACKET KWghost KWend ]
-- On NUMBER shift to state 55
-- On LPAREN shift to state 56
-- On LIDENTIFIER shift to state 85
-- On KWtrue shift to state 86
-- On KWfalse shift to state 88
-- On rename_list shift to state 401
-- On rename_item shift to state 403
-- On nameopconst shift to state 406
-- On name_sig shift to state 412
-- On featopconst shift to state 386

State 401:
feature_adaptation -> KWrename rename_list . KWend [ UIDENTIFIER SEMICOL LPAREN LIDENTIFIER LBRACKET KWghost KWend ]
-- On KWend shift to state 402

State 402:
feature_adaptation -> KWrename rename_list KWend . [ UIDENTIFIER SEMICOL LPAREN LIDENTIFIER LBRACKET KWghost KWend ]
-- On UIDENTIFIER reduce production feature_adaptation -> KWrename rename_list KWend
-- On SEMICOL reduce production feature_adaptation -> KWrename rename_list KWend
-- On LPAREN reduce production feature_adaptation -> KWrename rename_list KWend
-- On LIDENTIFIER reduce production feature_adaptation -> KWrename rename_list KWend
-- On LBRACKET reduce production feature_adaptation -> KWrename rename_list KWend
-- On KWghost reduce production feature_adaptation -> KWrename rename_list KWend
-- On KWend reduce production feature_adaptation -> KWrename rename_list KWend

State 403:
rename_list -> rename_item . [ KWend ]
rename_list -> rename_item . optsemi rename_list [ KWend ]
-- On SEMICOL shift to state 14
-- On optsemi shift to state 404
-- On NUMBER reduce production optsemi -> 
-- On LPAREN reduce production optsemi -> 
-- On LIDENTIFIER reduce production optsemi -> 
-- On KWtrue reduce production optsemi -> 
-- On KWfalse reduce production optsemi -> 
-- On KWend reduce production rename_list -> rename_item

State 404:
rename_list -> rename_item optsemi . rename_list [ KWend ]
-- On NUMBER shift to state 55
-- On LPAREN shift to state 56
-- On LIDENTIFIER shift to state 85
-- On KWtrue shift to state 86
-- On KWfalse shift to state 88
-- On rename_list shift to state 405
-- On rename_item shift to state 403
-- On nameopconst shift to state 406
-- On name_sig shift to state 412
-- On featopconst shift to state 386

State 405:
rename_list -> rename_item optsemi rename_list . [ KWend ]
-- On KWend reduce production rename_list -> rename_item optsemi rename_list

State 406:
name_sig -> nameopconst . [ KWas ]
name_sig -> nameopconst . LPAREN type_list RPAREN [ KWas ]
name_sig -> nameopconst . LPAREN type_list RPAREN COLON type_nt [ KWas ]
-- On LPAREN shift to state 407
-- On KWas reduce production name_sig -> nameopconst

State 407:
name_sig -> nameopconst LPAREN . type_list RPAREN [ KWas ]
name_sig -> nameopconst LPAREN . type_list RPAREN COLON type_nt [ KWas ]
-- On UIDENTIFIER shift to state 20
-- On LPAREN shift to state 22
-- On LIDENTIFIER shift to state 2
-- On LBRACKET shift to state 23
-- On type_nt shift to state 49
-- On type_list_min2 shift to state 50
-- On type_list shift to state 408
-- On tuple_type shift to state 24
-- On star_type shift to state 25
-- On simple_type shift to state 26
-- On qmark_type shift to state 27
-- On path shift to state 28
-- On list_type shift to state 31
-- On elem_type shift to state 43
-- On dotted_id_list shift to state 36
-- On arrow_type shift to state 46

State 408:
name_sig -> nameopconst LPAREN type_list . RPAREN [ KWas ]
name_sig -> nameopconst LPAREN type_list . RPAREN COLON type_nt [ KWas ]
-- On RPAREN shift to state 409

State 409:
name_sig -> nameopconst LPAREN type_list RPAREN . [ KWas ]
name_sig -> nameopconst LPAREN type_list RPAREN . COLON type_nt [ KWas ]
-- On COLON shift to state 410
-- On KWas reduce production name_sig -> nameopconst LPAREN type_list RPAREN

State 410:
name_sig -> nameopconst LPAREN type_list RPAREN COLON . type_nt [ KWas ]
-- On UIDENTIFIER shift to state 20
-- On LPAREN shift to state 22
-- On LIDENTIFIER shift to state 2
-- On LBRACKET shift to state 23
-- On type_nt shift to state 411
-- On tuple_type shift to state 24
-- On star_type shift to state 25
-- On simple_type shift to state 26
-- On qmark_type shift to state 27
-- On path shift to state 28
-- On list_type shift to state 31
-- On elem_type shift to state 43
-- On dotted_id_list shift to state 36
-- On arrow_type shift to state 46

State 411:
name_sig -> nameopconst LPAREN type_list RPAREN COLON type_nt . [ KWas ]
-- On KWas reduce production name_sig -> nameopconst LPAREN type_list RPAREN COLON type_nt

State 412:
rename_item -> name_sig . KWas nameopconst [ SEMICOL NUMBER LPAREN LIDENTIFIER KWtrue KWfalse KWend ]
-- On KWas shift to state 413

State 413:
rename_item -> name_sig KWas . nameopconst [ SEMICOL NUMBER LPAREN LIDENTIFIER KWtrue KWfalse KWend ]
-- On NUMBER shift to state 55
-- On LPAREN shift to state 56
-- On LIDENTIFIER shift to state 85
-- On KWtrue shift to state 86
-- On KWfalse shift to state 88
-- On nameopconst shift to state 414
-- On featopconst shift to state 386

State 414:
rename_item -> name_sig KWas nameopconst . [ SEMICOL NUMBER LPAREN LIDENTIFIER KWtrue KWfalse KWend ]
-- On SEMICOL reduce production rename_item -> name_sig KWas nameopconst
-- On NUMBER reduce production rename_item -> name_sig KWas nameopconst
-- On LPAREN reduce production rename_item -> name_sig KWas nameopconst
-- On LIDENTIFIER reduce production rename_item -> name_sig KWas nameopconst
-- On KWtrue reduce production rename_item -> name_sig KWas nameopconst
-- On KWfalse reduce production rename_item -> name_sig KWas nameopconst
-- On KWend reduce production rename_item -> name_sig KWas nameopconst

State 415:
parent -> optghost type_nt feature_adaptation . [ UIDENTIFIER SEMICOL LPAREN LIDENTIFIER LBRACKET KWghost KWend ]
-- On UIDENTIFIER reduce production parent -> optghost type_nt feature_adaptation
-- On SEMICOL reduce production parent -> optghost type_nt feature_adaptation
-- On LPAREN reduce production parent -> optghost type_nt feature_adaptation
-- On LIDENTIFIER reduce production parent -> optghost type_nt feature_adaptation
-- On LBRACKET reduce production parent -> optghost type_nt feature_adaptation
-- On KWghost reduce production parent -> optghost type_nt feature_adaptation
-- On KWend reduce production parent -> optghost type_nt feature_adaptation

State 416:
class_declaration -> header_mark KWclass class_name class_generics create_clause inherit_clause . KWend [ UIDENTIFIER SEMICOL NUMBER LPAREN LIDENTIFIER KWtrue KWimmutable KWfalse KWdeferred KWclass KWcase KWall # ]
-- On KWend shift to state 417

State 417:
class_declaration -> header_mark KWclass class_name class_generics create_clause inherit_clause KWend . [ UIDENTIFIER SEMICOL NUMBER LPAREN LIDENTIFIER KWtrue KWimmutable KWfalse KWdeferred KWclass KWcase KWall # ]
-- On UIDENTIFIER reduce production class_declaration -> header_mark KWclass class_name class_generics create_clause inherit_clause KWend
-- On SEMICOL reduce production class_declaration -> header_mark KWclass class_name class_generics create_clause inherit_clause KWend
-- On NUMBER reduce production class_declaration -> header_mark KWclass class_name class_generics create_clause inherit_clause KWend
-- On LPAREN reduce production class_declaration -> header_mark KWclass class_name class_generics create_clause inherit_clause KWend
-- On LIDENTIFIER reduce production class_declaration -> header_mark KWclass class_name class_generics create_clause inherit_clause KWend
-- On KWtrue reduce production class_declaration -> header_mark KWclass class_name class_generics create_clause inherit_clause KWend
-- On KWimmutable reduce production class_declaration -> header_mark KWclass class_name class_generics create_clause inherit_clause KWend
-- On KWfalse reduce production class_declaration -> header_mark KWclass class_name class_generics create_clause inherit_clause KWend
-- On KWdeferred reduce production class_declaration -> header_mark KWclass class_name class_generics create_clause inherit_clause KWend
-- On KWclass reduce production class_declaration -> header_mark KWclass class_name class_generics create_clause inherit_clause KWend
-- On KWcase reduce production class_declaration -> header_mark KWclass class_name class_generics create_clause inherit_clause KWend
-- On KWall reduce production class_declaration -> header_mark KWclass class_name class_generics create_clause inherit_clause KWend

State 418:
decl -> formal_generic . [ UIDENTIFIER SEMICOL NUMBER LPAREN LIDENTIFIER KWtrue KWimmutable KWfalse KWdeferred KWclass KWcase KWall # ]
-- On UIDENTIFIER reduce production decl -> formal_generic
-- On SEMICOL reduce production decl -> formal_generic
-- On NUMBER reduce production decl -> formal_generic
-- On LPAREN reduce production decl -> formal_generic
-- On LIDENTIFIER reduce production decl -> formal_generic
-- On KWtrue reduce production decl -> formal_generic
-- On KWimmutable reduce production decl -> formal_generic
-- On KWfalse reduce production decl -> formal_generic
-- On KWdeferred reduce production decl -> formal_generic
-- On KWclass reduce production decl -> formal_generic
-- On KWcase reduce production decl -> formal_generic
-- On KWall reduce production decl -> formal_generic

State 419:
decls -> decls optsemi decl . [ UIDENTIFIER SEMICOL NUMBER LPAREN LIDENTIFIER KWtrue KWimmutable KWfalse KWdeferred KWclass KWcase KWall # ]
-- On UIDENTIFIER reduce production decls -> decls optsemi decl
-- On SEMICOL reduce production decls -> decls optsemi decl
-- On NUMBER reduce production decls -> decls optsemi decl
-- On LPAREN reduce production decls -> decls optsemi decl
-- On LIDENTIFIER reduce production decls -> decls optsemi decl
-- On KWtrue reduce production decls -> decls optsemi decl
-- On KWimmutable reduce production decls -> decls optsemi decl
-- On KWfalse reduce production decls -> decls optsemi decl
-- On KWdeferred reduce production decls -> decls optsemi decl
-- On KWclass reduce production decls -> decls optsemi decl
-- On KWcase reduce production decls -> decls optsemi decl
-- On KWall reduce production decls -> decls optsemi decl

State 420:
decl -> class_declaration . [ UIDENTIFIER SEMICOL NUMBER LPAREN LIDENTIFIER KWtrue KWimmutable KWfalse KWdeferred KWclass KWcase KWall # ]
-- On UIDENTIFIER reduce production decl -> class_declaration
-- On SEMICOL reduce production decl -> class_declaration
-- On NUMBER reduce production decl -> class_declaration
-- On LPAREN reduce production decl -> class_declaration
-- On LIDENTIFIER reduce production decl -> class_declaration
-- On KWtrue reduce production decl -> class_declaration
-- On KWimmutable reduce production decl -> class_declaration
-- On KWfalse reduce production decl -> class_declaration
-- On KWdeferred reduce production decl -> class_declaration
-- On KWclass reduce production decl -> class_declaration
-- On KWcase reduce production decl -> class_declaration
-- On KWall reduce production decl -> class_declaration

State 421:
decl -> ass_feat . [ UIDENTIFIER SEMICOL NUMBER LPAREN LIDENTIFIER KWtrue KWimmutable KWfalse KWdeferred KWclass KWcase KWall # ]
-- On UIDENTIFIER reduce production decl -> ass_feat
-- On SEMICOL reduce production decl -> ass_feat
-- On NUMBER reduce production decl -> ass_feat
-- On LPAREN reduce production decl -> ass_feat
-- On LIDENTIFIER reduce production decl -> ass_feat
-- On KWtrue reduce production decl -> ass_feat
-- On KWimmutable reduce production decl -> ass_feat
-- On KWfalse reduce production decl -> ass_feat
-- On KWdeferred reduce production decl -> ass_feat
-- On KWclass reduce production decl -> ass_feat
-- On KWcase reduce production decl -> ass_feat
-- On KWall reduce production decl -> ass_feat

State 422:
file' -> file . [ # ]
-- On # accept file

State 423:
decls -> decls . optsemi decl [ UIDENTIFIER SEMICOL NUMBER LPAREN LIDENTIFIER KWtrue KWimmutable KWfalse KWdeferred KWclass KWcase KWall # ]
file -> decls . [ # ]
-- On SEMICOL shift to state 14
-- On optsemi shift to state 17
-- On UIDENTIFIER reduce production optsemi -> 
-- On NUMBER reduce production optsemi -> 
-- On LPAREN reduce production optsemi -> 
-- On LIDENTIFIER reduce production optsemi -> 
-- On KWtrue reduce production optsemi -> 
-- On KWimmutable reduce production optsemi -> 
-- On KWfalse reduce production optsemi -> 
-- On KWdeferred reduce production optsemi -> 
-- On KWclass reduce production optsemi -> 
-- On KWcase reduce production optsemi -> 
-- On KWall reduce production optsemi -> 

State 424:
use_block_opt' -> . use_block_opt [ # ]
-- On UIDENTIFIER shift to state 18
-- On NUMBER shift to state 55
-- On LPAREN shift to state 56
-- On LIDENTIFIER shift to state 85
-- On KWuse shift to state 1
-- On KWtrue shift to state 86
-- On KWimmutable shift to state 87
-- On KWfalse shift to state 88
-- On KWdeferred shift to state 89
-- On KWcase shift to state 90
-- On KWall shift to state 91
-- On use_block_opt shift to state 425
-- On use_block shift to state 426
-- On proof_all_expr shift to state 316
-- On nameopconst_info shift to state 317
-- On nameopconst shift to state 368
-- On named_feature shift to state 369
-- On header_mark shift to state 370
-- On formal_generic shift to state 418
-- On featopconst shift to state 386
-- On decl shift to state 427
-- On class_declaration shift to state 420
-- On ass_feat shift to state 421
-- On KWclass reduce production header_mark -> 

State 425:
use_block_opt' -> use_block_opt . [ # ]
-- On # accept use_block_opt

State 426:
use_block_opt -> use_block . [ # ]
-- On # reduce production use_block_opt -> use_block

State 427:
use_block_opt -> decl . [ # ]
-- On # reduce production use_block_opt -> decl

