Grammar has 2 nonterminal symbols, among which 1 start symbols.
Grammar has 6 terminal symbols.
Grammar has 5 productions.
nullable(expr) = false
nullable(declarations) = false
first(expr) = VAR FAIL CONST
first(declarations) = VAR
minimal(expr) = (* 1 *) VAR
minimal(declarations) = (* 4 *) VAR EQUAL VAR EOF
follow(expr) = PLUS EOF
follow(declarations) = #
Built an LR(0) automaton with 11 states.
The grammar is not SLR(1) -- 1 states have a conflict.
The construction mode is pager.
Built an LR(1) automaton with 11 states.
One shift/reduce conflict was silently solved.
6 out of 11 states have a default reduction.
2 out of 11 states are represented.
0 out of 11 symbols keep track of their start position.
0 out of 11 symbols keep track of their end position.
5 out of 6 productions exploit shiftreduce optimization.
0 out of 11 states can peek at an error.
35 functions before inlining, 7 functions after inlining.
