Grammar has 13 nonterminal symbols, among which 1 start symbols.
Grammar has 25 terminal symbols.
Grammar has 31 productions.
nullable(variables) = true
nullable(unary_expression) = false
nullable(toplevel) = false
nullable(summand_expression) = false
nullable(record_fields) = true
nullable(lident_pun) = false
nullable(fields) = true
nullable(expression) = false
nullable(dependencies) = true
nullable(components) = true
nullable(bindings) = false
nullable(binding) = false
nullable(atomic_expression) = false
first(variables) = LIDENT
first(unary_expression) = MIXIN LPAREN LIDENT LCURLY FAKE DELETE CLOSE
first(toplevel) = MIXIN LPAREN LIDENT LET LCURLY FAKE DELETE CLOSE
first(summand_expression) = MIXIN LPAREN LIDENT LCURLY FAKE DELETE CLOSE
first(record_fields) = VAL
first(lident_pun) = LIDENT
first(fields) = LIDENT
first(expression) = MIXIN LPAREN LIDENT LET LCURLY FAKE DELETE CLOSE
first(dependencies) = LSQUARE
first(components) = VAL
first(bindings) = LIDENT
first(binding) = LIDENT
first(atomic_expression) = MIXIN LPAREN LIDENT LCURLY
minimal(variables) = (* 0 *)
minimal(unary_expression) = (* 1 *) LIDENT
minimal(toplevel) = (* 2 *) LIDENT EOF
minimal(summand_expression) = (* 1 *) LIDENT
minimal(record_fields) = (* 0 *)
minimal(lident_pun) = (* 1 *) LIDENT
minimal(fields) = (* 0 *)
minimal(expression) = (* 1 *) LIDENT
minimal(dependencies) = (* 0 *)
minimal(components) = (* 0 *)
minimal(bindings) = (* 3 *) LIDENT EQUAL LIDENT
minimal(binding) = (* 3 *) LIDENT EQUAL LIDENT
minimal(atomic_expression) = (* 1 *) LIDENT
follow(variables) = RSQUARE LIDENT
follow(unary_expression) = VAL RPAREN RCURLY PLUS IN EOF END AND
follow(toplevel) = #
follow(summand_expression) = VAL RPAREN RCURLY PLUS IN EOF END AND
follow(record_fields) = VAL RCURLY
follow(lident_pun) = VAL LSQUARE EQUAL END
follow(fields) = LIDENT IN
follow(expression) = VAL RPAREN RCURLY IN EOF END AND
follow(dependencies) = EQUAL
follow(components) = VAL END
follow(bindings) = IN AND
follow(binding) = IN AND
follow(atomic_expression) = VAL RPAREN RCURLY PLUS IN EOF END DOT AND
Built an LR(0) automaton with 68 states.
The grammar is SLR(1).
The construction mode is pager.
Built an LR(1) automaton with 68 states.
27 out of 68 states have a default reduction.
15 out of 68 states are represented.
0 out of 41 symbols keep track of their start position.
0 out of 41 symbols keep track of their end position.
18 out of 32 productions exploit shiftreduce optimization.
0 out of 68 states can peek at an error.
186 functions before inlining, 26 functions after inlining.
