Grammar has 27 nonterminal symbols, among which 1 start symbols.
Grammar has 31 terminal symbols.
Grammar has 84 productions.
nullable(typevars) = false
nullable(typevar) = false
nullable(sorts) = false
nullable(prologue) = true
nullable(phrase) = false
nullable(patsummands) = false
nullable(patsummand) = false
nullable(patrhs) = false
nullable(patmodifier) = false
nullable(patlfactors) = false
nullable(patlfactor) = false
nullable(patfactors) = false
nullable(patfactor) = false
nullable(params_and_set_current) = true
nullable(params) = true
nullable(optional_semicolon) = true
nullable(identifier) = false
nullable(expsummands) = false
nullable(expsummand) = false
nullable(exprhs) = false
nullable(explfactors) = false
nullable(explfactor) = false
nullable(expfactors) = false
nullable(expfactor) = false
nullable(declarations) = true
nullable(declaration) = false
nullable(container) = true
first(typevars) = QUOTE
first(typevar) = QUOTE
first(sorts) = LID
first(prologue) = OCAML
first(phrase) = error TYPE SORT OCAML IDENTIFIER EOF CONTAINER
first(patsummands) = BAR
first(patsummand) = BAR
first(patrhs) = error QUOTE OUTER OCAML NEUTRAL LPAREN LID LBRACE LANGLE INNER BAR ATOM
first(patmodifier) = OUTER NEUTRAL INNER
first(patlfactors) = error LID
first(patlfactor) = error LID
first(patfactors) = error QUOTE OUTER OCAML NEUTRAL LPAREN LID LANGLE INNER ATOM
first(patfactor) = error QUOTE OUTER OCAML NEUTRAL LPAREN LID LANGLE INNER ATOM
first(params_and_set_current) = QUOTE LPAREN
first(params) = QUOTE LPAREN
first(optional_semicolon) = SEMICOLON
first(identifier) = UID LID
first(expsummands) = BAR
first(expsummand) = BAR
first(exprhs) = error QUOTE OUTER OCAML NEUTRAL LPAREN LID LBRACE LANGLE INNER BAR ATOM
first(explfactors) = error LID
first(explfactor) = error LID
first(expfactors) = error QUOTE OUTER OCAML NEUTRAL LPAREN LID LANGLE INNER ATOM
first(expfactor) = error QUOTE OUTER OCAML NEUTRAL LPAREN LID LANGLE INNER ATOM
first(declarations) = TYPE SORT IDENTIFIER CONTAINER
first(declaration) = TYPE SORT IDENTIFIER CONTAINER
first(container) = UID LID
minimal(typevars) = (* 2 *) QUOTE LID
minimal(typevar) = (* 2 *) QUOTE LID
minimal(sorts) = (* 1 *) LID
minimal(prologue) = (* 0 *)
minimal(phrase) = (* 1 *) EOF
minimal(patsummands) = (* 2 *) BAR UID
minimal(patsummand) = (* 2 *) BAR UID
minimal(patrhs) = (* 1 *) OCAML
minimal(patmodifier) = (* 1 *) INNER
minimal(patlfactors) = (* 1 *) error
minimal(patlfactor) = (* 1 *) error
minimal(patfactors) = (* 1 *) OCAML
minimal(patfactor) = (* 1 *) OCAML
minimal(params_and_set_current) = (* 0 *)
minimal(params) = (* 0 *)
minimal(optional_semicolon) = (* 0 *)
minimal(identifier) = (* 1 *) LID
minimal(expsummands) = (* 2 *) BAR UID
minimal(expsummand) = (* 2 *) BAR UID
minimal(exprhs) = (* 1 *) OCAML
minimal(explfactors) = (* 1 *) error
minimal(explfactor) = (* 1 *) error
minimal(expfactors) = (* 1 *) OCAML
minimal(expfactor) = (* 1 *) OCAML
minimal(declarations) = (* 0 *)
minimal(declaration) = (* 2 *) TYPE error
minimal(container) = (* 0 *)
maximal(typevars) = infinity
maximal(typevar) = 2
maximal(sorts) = infinity
maximal(prologue) = 1
maximal(phrase) = infinity
maximal(patsummands) = infinity
maximal(patsummand) = infinity
maximal(patrhs) = infinity
maximal(patmodifier) = 1
maximal(patlfactors) = infinity
maximal(patlfactor) = infinity
maximal(patfactors) = infinity
maximal(patfactor) = infinity
maximal(params_and_set_current) = infinity
maximal(params) = infinity
maximal(optional_semicolon) = 1
maximal(identifier) = infinity
maximal(expsummands) = infinity
maximal(expsummand) = infinity
maximal(exprhs) = infinity
maximal(explfactors) = infinity
maximal(explfactor) = infinity
maximal(expfactors) = infinity
maximal(expfactor) = infinity
maximal(declarations) = infinity
maximal(declaration) = infinity
maximal(container) = infinity
follow(typevars) = RPAREN COMMA
follow(typevar) = RPAREN LID COMMA
follow(sorts) = RPAREN EQUAL COMMA
follow(prologue) = TYPE SORT IDENTIFIER EOF CONTAINER
follow(phrase) = #
follow(patsummands) = TYPE SORT RANGLE IDENTIFIER EOF CONTAINER BAR
follow(patsummand) = TYPE SORT RANGLE IDENTIFIER EOF CONTAINER BAR
follow(patrhs) = TYPE SORT RANGLE IDENTIFIER EOF CONTAINER
follow(patmodifier) = error QUOTE LPAREN LID
follow(patlfactors) = error SEMICOLON RBRACE
follow(patlfactor) = error SEMICOLON RBRACE
follow(patfactors) = error TYPE STAR SORT RANGLE IDENTIFIER EOF CONTAINER BAR
follow(patfactor) = error TYPE STAR SORT SEMICOLON RBRACE RANGLE IDENTIFIER EOF CONTAINER BAR
follow(params_and_set_current) = LID
follow(params) = LID
follow(optional_semicolon) = RBRACE
follow(identifier) = error WITH TYPE STAR SORT SEMICOLON RBRACE RANGLE IDENTIFIER EOF CONTAINER BAR AND
follow(expsummands) = TYPE SORT IDENTIFIER EOF CONTAINER BAR
follow(expsummand) = TYPE SORT IDENTIFIER EOF CONTAINER BAR
follow(exprhs) = TYPE SORT IDENTIFIER EOF CONTAINER
follow(explfactors) = error SEMICOLON RBRACE
follow(explfactor) = error SEMICOLON RBRACE
follow(expfactors) = error TYPE STAR SORT IDENTIFIER EOF CONTAINER BAR
follow(expfactor) = error TYPE STAR SORT SEMICOLON RBRACE IDENTIFIER EOF CONTAINER BAR
follow(declarations) = TYPE SORT IDENTIFIER EOF CONTAINER
follow(declaration) = TYPE SORT IDENTIFIER EOF CONTAINER
follow(container) = error TYPE STAR SORT SEMICOLON RBRACE RANGLE IDENTIFIER EOF CONTAINER BAR
Built an LR(0) automaton with 139 states.
The grammar is SLR(1).
The construction mode is pager.
Built an LR(1) automaton with 143 states.
74 out of 143 states have a default reduction.
35 out of 143 states are represented.
0 out of 61 symbols keep track of their start position.
0 out of 61 symbols keep track of their end position.
66 out of 85 productions exploit shiftreduce optimization.
9 out of 143 states can peek at an error.
403 functions before inlining, 74 functions after inlining.
