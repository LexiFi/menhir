State 0:
commandline' -> . commandline [ # ]
-- On WITH shift to state 1
-- On VERBOSITY shift to state 536
-- On TRY shift to state 3
-- On RULE shift to state 538
-- On REQUIRE shift to state 554
-- On REF shift to state 4
-- On RAISE shift to state 12
-- On QUOTED_STRING shift to state 5
-- On QQMARK shift to state 15
-- On PREFIXOP shift to state 6
-- On OPERATION shift to state 560
-- On OPEN shift to state 569
-- On OCCURS shift to state 18
-- On NATURAL shift to state 7
-- On NAME shift to state 8
-- On MODULE shift to state 574
-- On MLTYPE shift to state 578
-- On MATCH shift to state 51
-- On LPAREN shift to state 9
-- On LET shift to state 647
-- On LBRACK shift to state 13
-- On LBRACE shift to state 156
-- On INCLUDE shift to state 651
-- On HANDLER shift to state 209
-- On FUN shift to state 330
-- On FRESH shift to state 338
-- On EXTERNAL shift to state 656
-- On EXCEPTION shift to state 662
-- On DERIVE shift to state 342
-- On CONVERT shift to state 130
-- On CONTEXT shift to state 136
-- On CONGRUENCE shift to state 138
-- On BANG shift to state 19
-- On ABSTRACT shift to state 144
-- On ty_term_ shift to state 357
-- On tt_name shift to state 20
-- On top_term_ shift to state 667
-- On top_term shift to state 690
-- On top_command_ shift to state 670
-- On top_command shift to state 694
-- On term_ shift to state 358
-- On term shift to state 674
-- On substitution_term_ shift to state 147
-- On substitution_term shift to state 148
-- On simple_term_ shift to state 21
-- On prefix_term_ shift to state 134
-- On nonempty_list(maybe_typed_binder) shift to state 167
-- On module_path shift to state 24
-- On module_name shift to state 45
-- On maybe_typed_binder shift to state 168
-- On mark_location(top_term_) shift to state 676
-- On mark_location(top_command_) shift to state 677
-- On mark_location(term_) shift to state 361
-- On mark_location(substitution_term_) shift to state 135
-- On mark_location(binop_term_) shift to state 171
-- On mark_location(app_term_) shift to state 152
-- On commandline shift to state 697
-- On binop_term_ shift to state 172
-- On binop_term shift to state 362
-- On app_term_ shift to state 481
-- On app_term shift to state 365
-- On any_name shift to state 47
-- On abstraction shift to state 205

State 1:
term_ -> WITH . term TRY term [ SEMISEMI EOF END ]
top_command_ -> WITH . top_operation_cases END [ WITH VERBOSITY SEMISEMI RULE REQUIRE OPERATION OPEN MODULE MLTYPE LET INCLUDE EXTERNAL EXCEPTION EOF END ]
-- On WITH shift to state 2
-- On TRY shift to state 3
-- On REF shift to state 4
-- On RAISE shift to state 12
-- On QUOTED_STRING shift to state 5
-- On QQMARK shift to state 15
-- On PREFIXOP shift to state 6
-- On OPERATION shift to state 514
-- On OCCURS shift to state 18
-- On NATURAL shift to state 7
-- On NAME shift to state 8
-- On MATCH shift to state 51
-- On LPAREN shift to state 9
-- On LET shift to state 52
-- On LBRACK shift to state 13
-- On LBRACE shift to state 156
-- On HANDLER shift to state 209
-- On FUN shift to state 330
-- On FRESH shift to state 338
-- On DERIVE shift to state 342
-- On CONVERT shift to state 130
-- On CONTEXT shift to state 136
-- On CONGRUENCE shift to state 138
-- On BAR shift to state 527
-- On BANG shift to state 19
-- On ABSTRACT shift to state 144
-- On ty_term_ shift to state 357
-- On tt_name shift to state 20
-- On top_operation_cases shift to state 532
-- On top_operation_case shift to state 528
-- On term_ shift to state 358
-- On term shift to state 511
-- On substitution_term_ shift to state 147
-- On substitution_term shift to state 148
-- On simple_term_ shift to state 21
-- On separated_nonempty_list(BAR,top_operation_case) shift to state 534
-- On prefix_term_ shift to state 134
-- On nonempty_list(maybe_typed_binder) shift to state 167
-- On module_path shift to state 24
-- On module_name shift to state 45
-- On maybe_typed_binder shift to state 168
-- On mark_location(term_) shift to state 361
-- On mark_location(substitution_term_) shift to state 135
-- On mark_location(binop_term_) shift to state 171
-- On mark_location(app_term_) shift to state 152
-- On loption(separated_nonempty_list(BAR,top_operation_case)) shift to state 535
-- On binop_term_ shift to state 172
-- On binop_term shift to state 362
-- On app_term_ shift to state 179
-- On app_term shift to state 365
-- On any_name shift to state 47
-- On abstraction shift to state 205
-- On END reduce production loption(separated_nonempty_list(BAR,top_operation_case)) ->

State 2:
term_ -> WITH . term TRY term [ WITH VERBOSITY TRY SEMISEMI RULE RPAREN REQUIRE RBRACE OPERATION OPEN MODULE MLTYPE LET INCLUDE IN EXTERNAL EXCEPTION EOF END COMMA COLONGT BY BAR AND ]
-- On WITH shift to state 2
-- On TRY shift to state 3
-- On REF shift to state 4
-- On RAISE shift to state 12
-- On QUOTED_STRING shift to state 5
-- On QQMARK shift to state 15
-- On PREFIXOP shift to state 6
-- On OCCURS shift to state 18
-- On NATURAL shift to state 7
-- On NAME shift to state 8
-- On MATCH shift to state 51
-- On LPAREN shift to state 9
-- On LET shift to state 52
-- On LBRACK shift to state 13
-- On LBRACE shift to state 156
-- On HANDLER shift to state 209
-- On FUN shift to state 330
-- On FRESH shift to state 338
-- On DERIVE shift to state 342
-- On CONVERT shift to state 130
-- On CONTEXT shift to state 136
-- On CONGRUENCE shift to state 138
-- On BANG shift to state 19
-- On ABSTRACT shift to state 144
-- On ty_term_ shift to state 357
-- On tt_name shift to state 20
-- On term_ shift to state 358
-- On term shift to state 511
-- On substitution_term_ shift to state 147
-- On substitution_term shift to state 148
-- On simple_term_ shift to state 21
-- On prefix_term_ shift to state 134
-- On nonempty_list(maybe_typed_binder) shift to state 167
-- On module_path shift to state 24
-- On module_name shift to state 45
-- On maybe_typed_binder shift to state 168
-- On mark_location(term_) shift to state 361
-- On mark_location(substitution_term_) shift to state 135
-- On mark_location(binop_term_) shift to state 171
-- On mark_location(app_term_) shift to state 152
-- On binop_term_ shift to state 172
-- On binop_term shift to state 362
-- On app_term_ shift to state 179
-- On app_term shift to state 365
-- On any_name shift to state 47
-- On abstraction shift to state 205

State 3:
term_ -> TRY . term WITH handler_cases END [ WITH VERBOSITY TRY SEMISEMI RULE RPAREN REQUIRE RBRACE OPERATION OPEN MODULE MLTYPE LET INCLUDE IN EXTERNAL EXCEPTION EOF END COMMA COLONGT BY BAR AND ]
-- On WITH shift to state 2
-- On TRY shift to state 3
-- On REF shift to state 4
-- On RAISE shift to state 12
-- On QUOTED_STRING shift to state 5
-- On QQMARK shift to state 15
-- On PREFIXOP shift to state 6
-- On OCCURS shift to state 18
-- On NATURAL shift to state 7
-- On NAME shift to state 8
-- On MATCH shift to state 51
-- On LPAREN shift to state 9
-- On LET shift to state 52
-- On LBRACK shift to state 13
-- On LBRACE shift to state 156
-- On HANDLER shift to state 209
-- On FUN shift to state 330
-- On FRESH shift to state 338
-- On DERIVE shift to state 342
-- On CONVERT shift to state 130
-- On CONTEXT shift to state 136
-- On CONGRUENCE shift to state 138
-- On BANG shift to state 19
-- On ABSTRACT shift to state 144
-- On ty_term_ shift to state 357
-- On tt_name shift to state 20
-- On term_ shift to state 358
-- On term shift to state 507
-- On substitution_term_ shift to state 147
-- On substitution_term shift to state 148
-- On simple_term_ shift to state 21
-- On prefix_term_ shift to state 134
-- On nonempty_list(maybe_typed_binder) shift to state 167
-- On module_path shift to state 24
-- On module_name shift to state 45
-- On maybe_typed_binder shift to state 168
-- On mark_location(term_) shift to state 361
-- On mark_location(substitution_term_) shift to state 135
-- On mark_location(binop_term_) shift to state 171
-- On mark_location(app_term_) shift to state 152
-- On binop_term_ shift to state 172
-- On binop_term shift to state 362
-- On app_term_ shift to state 481
-- On app_term shift to state 365
-- On any_name shift to state 47
-- On abstraction shift to state 205

State 4:
prefix_term_ -> REF . prefix_term [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE REF RBRACK RBRACE QUOTED_STRING PREFIXOP OPERATION OPEN NATURAL NAME MODULE MLTYPE LPAREN LET LBRACK LBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQEQ EQ EOF END COMMA COLONQT COLONGT COLONEQ COLON BY BAR BANG ARROW AND ]
-- On REF shift to state 4
-- On QUOTED_STRING shift to state 5
-- On PREFIXOP shift to state 6
-- On NATURAL shift to state 7
-- On NAME shift to state 8
-- On LPAREN shift to state 9
-- On LBRACK shift to state 13
-- On BANG shift to state 19
-- On tt_name shift to state 20
-- On simple_term_ shift to state 21
-- On prefix_term_ shift to state 22
-- On prefix_term shift to state 506
-- On module_path shift to state 24
-- On module_name shift to state 45
-- On mark_location(prefix_term_) shift to state 46
-- On any_name shift to state 47

State 5:
simple_term_ -> QUOTED_STRING . [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE REF RBRACK RBRACE QUOTED_STRING PREFIXOP OPERATION OPEN NATURAL NAME MODULE MLTYPE LPAREN LET LBRACK LBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQEQ EQ EOF END COMMA COLONQT COLONGT COLONEQ COLON BY BAR BANG ARROW AND ]
-- On WITH reduce production simple_term_ -> QUOTED_STRING
-- On VERBOSITY reduce production simple_term_ -> QUOTED_STRING
-- On TRY reduce production simple_term_ -> QUOTED_STRING
-- On STAR reduce production simple_term_ -> QUOTED_STRING
-- On SEMISEMI reduce production simple_term_ -> QUOTED_STRING
-- On SEMI reduce production simple_term_ -> QUOTED_STRING
-- On RULE reduce production simple_term_ -> QUOTED_STRING
-- On RPAREN reduce production simple_term_ -> QUOTED_STRING
-- On REQUIRE reduce production simple_term_ -> QUOTED_STRING
-- On REF reduce production simple_term_ -> QUOTED_STRING
-- On RBRACK reduce production simple_term_ -> QUOTED_STRING
-- On RBRACE reduce production simple_term_ -> QUOTED_STRING
-- On QUOTED_STRING reduce production simple_term_ -> QUOTED_STRING
-- On PREFIXOP reduce production simple_term_ -> QUOTED_STRING
-- On OPERATION reduce production simple_term_ -> QUOTED_STRING
-- On OPEN reduce production simple_term_ -> QUOTED_STRING
-- On NATURAL reduce production simple_term_ -> QUOTED_STRING
-- On NAME reduce production simple_term_ -> QUOTED_STRING
-- On MODULE reduce production simple_term_ -> QUOTED_STRING
-- On MLTYPE reduce production simple_term_ -> QUOTED_STRING
-- On LPAREN reduce production simple_term_ -> QUOTED_STRING
-- On LET reduce production simple_term_ -> QUOTED_STRING
-- On LBRACK reduce production simple_term_ -> QUOTED_STRING
-- On LBRACE reduce production simple_term_ -> QUOTED_STRING
-- On INFIXOP4 reduce production simple_term_ -> QUOTED_STRING
-- On INFIXOP3 reduce production simple_term_ -> QUOTED_STRING
-- On INFIXOP2 reduce production simple_term_ -> QUOTED_STRING
-- On INFIXOP1 reduce production simple_term_ -> QUOTED_STRING
-- On INFIXOP0 reduce production simple_term_ -> QUOTED_STRING
-- On INFIXCONS reduce production simple_term_ -> QUOTED_STRING
-- On INCLUDE reduce production simple_term_ -> QUOTED_STRING
-- On IN reduce production simple_term_ -> QUOTED_STRING
-- On EXTERNAL reduce production simple_term_ -> QUOTED_STRING
-- On EXCEPTION reduce production simple_term_ -> QUOTED_STRING
-- On EQEQ reduce production simple_term_ -> QUOTED_STRING
-- On EQ reduce production simple_term_ -> QUOTED_STRING
-- On EOF reduce production simple_term_ -> QUOTED_STRING
-- On END reduce production simple_term_ -> QUOTED_STRING
-- On COMMA reduce production simple_term_ -> QUOTED_STRING
-- On COLONQT reduce production simple_term_ -> QUOTED_STRING
-- On COLONGT reduce production simple_term_ -> QUOTED_STRING
-- On COLONEQ reduce production simple_term_ -> QUOTED_STRING
-- On COLON reduce production simple_term_ -> QUOTED_STRING
-- On BY reduce production simple_term_ -> QUOTED_STRING
-- On BAR reduce production simple_term_ -> QUOTED_STRING
-- On BANG reduce production simple_term_ -> QUOTED_STRING
-- On ARROW reduce production simple_term_ -> QUOTED_STRING
-- On AND reduce production simple_term_ -> QUOTED_STRING

State 6:
prefix_term_ -> PREFIXOP . prefix_term [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE REF RBRACK RBRACE QUOTED_STRING PREFIXOP OPERATION OPEN NATURAL NAME MODULE MLTYPE LPAREN LET LBRACK LBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQEQ EQ EOF END COMMA COLONQT COLONGT COLONEQ COLON BY BAR BANG ARROW AND ]
-- On REF shift to state 4
-- On QUOTED_STRING shift to state 5
-- On PREFIXOP shift to state 6
-- On NATURAL shift to state 7
-- On NAME shift to state 8
-- On LPAREN shift to state 9
-- On LBRACK shift to state 13
-- On BANG shift to state 19
-- On tt_name shift to state 20
-- On simple_term_ shift to state 21
-- On prefix_term_ shift to state 22
-- On prefix_term shift to state 497
-- On module_path shift to state 24
-- On module_name shift to state 45
-- On mark_location(prefix_term_) shift to state 46
-- On any_name shift to state 47

State 7:
prefix_term_ -> NATURAL . prefix_term [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE REF RBRACK RBRACE QUOTED_STRING PREFIXOP OPERATION OPEN NATURAL NAME MODULE MLTYPE LPAREN LET LBRACK LBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQEQ EQ EOF END COMMA COLONQT COLONGT COLONEQ COLON BY BAR BANG ARROW AND ]
-- On REF shift to state 4
-- On QUOTED_STRING shift to state 5
-- On PREFIXOP shift to state 6
-- On NATURAL shift to state 7
-- On NAME shift to state 8
-- On LPAREN shift to state 9
-- On LBRACK shift to state 13
-- On BANG shift to state 19
-- On tt_name shift to state 20
-- On simple_term_ shift to state 21
-- On prefix_term_ shift to state 22
-- On prefix_term shift to state 505
-- On module_path shift to state 24
-- On module_name shift to state 45
-- On mark_location(prefix_term_) shift to state 46
-- On any_name shift to state 47

State 8:
module_name -> NAME . [ PERIOD ]
tt_name -> NAME . [ WITH VERBOSITY TYPE TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE REF RBRACK RBRACE QUOTED_STRING PREFIXOP OPERATION OPEN NATURAL NAME MODULE MLTYPE LPAREN LET LBRACK LBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQEQ EQ EOF END COMMA COLONQT COLONGT COLONEQ COLON BY BAR BANG ARROW AND ]
-- On WITH reduce production tt_name -> NAME
-- On VERBOSITY reduce production tt_name -> NAME
-- On TYPE reduce production tt_name -> NAME
-- On TRY reduce production tt_name -> NAME
-- On STAR reduce production tt_name -> NAME
-- On SEMISEMI reduce production tt_name -> NAME
-- On SEMI reduce production tt_name -> NAME
-- On RULE reduce production tt_name -> NAME
-- On RPAREN reduce production tt_name -> NAME
-- On REQUIRE reduce production tt_name -> NAME
-- On REF reduce production tt_name -> NAME
-- On RBRACK reduce production tt_name -> NAME
-- On RBRACE reduce production tt_name -> NAME
-- On QUOTED_STRING reduce production tt_name -> NAME
-- On PREFIXOP reduce production tt_name -> NAME
-- On PERIOD reduce production module_name -> NAME
-- On OPERATION reduce production tt_name -> NAME
-- On OPEN reduce production tt_name -> NAME
-- On NATURAL reduce production tt_name -> NAME
-- On NAME reduce production tt_name -> NAME
-- On MODULE reduce production tt_name -> NAME
-- On MLTYPE reduce production tt_name -> NAME
-- On LPAREN reduce production tt_name -> NAME
-- On LET reduce production tt_name -> NAME
-- On LBRACK reduce production tt_name -> NAME
-- On LBRACE reduce production tt_name -> NAME
-- On INFIXOP4 reduce production tt_name -> NAME
-- On INFIXOP3 reduce production tt_name -> NAME
-- On INFIXOP2 reduce production tt_name -> NAME
-- On INFIXOP1 reduce production tt_name -> NAME
-- On INFIXOP0 reduce production tt_name -> NAME
-- On INFIXCONS reduce production tt_name -> NAME
-- On INCLUDE reduce production tt_name -> NAME
-- On IN reduce production tt_name -> NAME
-- On EXTERNAL reduce production tt_name -> NAME
-- On EXCEPTION reduce production tt_name -> NAME
-- On EQEQ reduce production tt_name -> NAME
-- On EQ reduce production tt_name -> NAME
-- On EOF reduce production tt_name -> NAME
-- On END reduce production tt_name -> NAME
-- On COMMA reduce production tt_name -> NAME
-- On COLONQT reduce production tt_name -> NAME
-- On COLONGT reduce production tt_name -> NAME
-- On COLONEQ reduce production tt_name -> NAME
-- On COLON reduce production tt_name -> NAME
-- On BY reduce production tt_name -> NAME
-- On BAR reduce production tt_name -> NAME
-- On BANG reduce production tt_name -> NAME
-- On ARROW reduce production tt_name -> NAME
-- On AND reduce production tt_name -> NAME

State 9:
simple_term_ -> LPAREN . term COLONGT ml_schema RPAREN [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE REF RBRACK RBRACE QUOTED_STRING PREFIXOP OPERATION OPEN NATURAL NAME MODULE MLTYPE LPAREN LET LBRACK LBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQEQ EQ EOF END COMMA COLONQT COLONGT COLONEQ COLON BY BAR BANG ARROW AND ]
simple_term_ -> LPAREN . loption(separated_nonempty_list(COMMA,term)) RPAREN [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE REF RBRACK RBRACE QUOTED_STRING PREFIXOP OPERATION OPEN NATURAL NAME MODULE MLTYPE LPAREN LET LBRACK LBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQEQ EQ EOF END COMMA COLONQT COLONGT COLONEQ COLON BY BAR BANG ARROW AND ]
tt_name -> LPAREN . INFIXCONS RPAREN [ WITH VERBOSITY TYPE TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE REF RBRACK RBRACE QUOTED_STRING PREFIXOP OPERATION OPEN NATURAL NAME MODULE MLTYPE LPAREN LET LBRACK LBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQEQ EQ EOF END COMMA COLONQT COLONGT COLONEQ COLON BY BAR BANG ARROW AND ]
tt_name -> LPAREN . EQ RPAREN [ WITH VERBOSITY TYPE TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE REF RBRACK RBRACE QUOTED_STRING PREFIXOP OPERATION OPEN NATURAL NAME MODULE MLTYPE LPAREN LET LBRACK LBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQEQ EQ EOF END COMMA COLONQT COLONGT COLONEQ COLON BY BAR BANG ARROW AND ]
tt_name -> LPAREN . INFIXOP0 RPAREN [ WITH VERBOSITY TYPE TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE REF RBRACK RBRACE QUOTED_STRING PREFIXOP OPERATION OPEN NATURAL NAME MODULE MLTYPE LPAREN LET LBRACK LBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQEQ EQ EOF END COMMA COLONQT COLONGT COLONEQ COLON BY BAR BANG ARROW AND ]
tt_name -> LPAREN . INFIXOP1 RPAREN [ WITH VERBOSITY TYPE TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE REF RBRACK RBRACE QUOTED_STRING PREFIXOP OPERATION OPEN NATURAL NAME MODULE MLTYPE LPAREN LET LBRACK LBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQEQ EQ EOF END COMMA COLONQT COLONGT COLONEQ COLON BY BAR BANG ARROW AND ]
tt_name -> LPAREN . INFIXOP2 RPAREN [ WITH VERBOSITY TYPE TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE REF RBRACK RBRACE QUOTED_STRING PREFIXOP OPERATION OPEN NATURAL NAME MODULE MLTYPE LPAREN LET LBRACK LBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQEQ EQ EOF END COMMA COLONQT COLONGT COLONEQ COLON BY BAR BANG ARROW AND ]
tt_name -> LPAREN . INFIXOP3 RPAREN [ WITH VERBOSITY TYPE TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE REF RBRACK RBRACE QUOTED_STRING PREFIXOP OPERATION OPEN NATURAL NAME MODULE MLTYPE LPAREN LET LBRACK LBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQEQ EQ EOF END COMMA COLONQT COLONGT COLONEQ COLON BY BAR BANG ARROW AND ]
tt_name -> LPAREN . STAR RPAREN [ WITH VERBOSITY TYPE TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE REF RBRACK RBRACE QUOTED_STRING PREFIXOP OPERATION OPEN NATURAL NAME MODULE MLTYPE LPAREN LET LBRACK LBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQEQ EQ EOF END COMMA COLONQT COLONGT COLONEQ COLON BY BAR BANG ARROW AND ]
tt_name -> LPAREN . INFIXOP4 RPAREN [ WITH VERBOSITY TYPE TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE REF RBRACK RBRACE QUOTED_STRING PREFIXOP OPERATION OPEN NATURAL NAME MODULE MLTYPE LPAREN LET LBRACK LBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQEQ EQ EOF END COMMA COLONQT COLONGT COLONEQ COLON BY BAR BANG ARROW AND ]
tt_name -> LPAREN . PREFIXOP RPAREN [ WITH VERBOSITY TYPE TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE REF RBRACK RBRACE QUOTED_STRING PREFIXOP OPERATION OPEN NATURAL NAME MODULE MLTYPE LPAREN LET LBRACK LBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQEQ EQ EOF END COMMA COLONQT COLONGT COLONEQ COLON BY BAR BANG ARROW AND ]
-- On WITH shift to state 2
-- On TRY shift to state 3
-- On STAR shift to state 10
-- On REF shift to state 4
-- On RAISE shift to state 12
-- On QUOTED_STRING shift to state 5
-- On QQMARK shift to state 15
-- On PREFIXOP shift to state 496
-- On OCCURS shift to state 18
-- On NATURAL shift to state 7
-- On NAME shift to state 8
-- On MATCH shift to state 51
-- On LPAREN shift to state 9
-- On LET shift to state 52
-- On LBRACK shift to state 13
-- On LBRACE shift to state 156
-- On INFIXOP4 shift to state 29
-- On INFIXOP3 shift to state 31
-- On INFIXOP2 shift to state 33
-- On INFIXOP1 shift to state 35
-- On INFIXOP0 shift to state 37
-- On INFIXCONS shift to state 39
-- On HANDLER shift to state 209
-- On FUN shift to state 330
-- On FRESH shift to state 338
-- On EQ shift to state 41
-- On DERIVE shift to state 342
-- On CONVERT shift to state 130
-- On CONTEXT shift to state 136
-- On CONGRUENCE shift to state 138
-- On BANG shift to state 19
-- On ABSTRACT shift to state 144
-- On ty_term_ shift to state 357
-- On tt_name shift to state 20
-- On term_ shift to state 358
-- On term shift to state 498
-- On substitution_term_ shift to state 147
-- On substitution_term shift to state 148
-- On simple_term_ shift to state 21
-- On separated_nonempty_list(COMMA,term) shift to state 502
-- On prefix_term_ shift to state 134
-- On nonempty_list(maybe_typed_binder) shift to state 167
-- On module_path shift to state 24
-- On module_name shift to state 45
-- On maybe_typed_binder shift to state 168
-- On mark_location(term_) shift to state 361
-- On mark_location(substitution_term_) shift to state 135
-- On mark_location(binop_term_) shift to state 171
-- On mark_location(app_term_) shift to state 152
-- On loption(separated_nonempty_list(COMMA,term)) shift to state 503
-- On binop_term_ shift to state 172
-- On binop_term shift to state 362
-- On app_term_ shift to state 179
-- On app_term shift to state 365
-- On any_name shift to state 47
-- On abstraction shift to state 205
-- On RPAREN reduce production loption(separated_nonempty_list(COMMA,term)) ->

State 10:
tt_name -> LPAREN STAR . RPAREN [ WITH VERBOSITY UNDERSCORE TYPE TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE REF RBRACK RBRACE QUOTED_STRING PREFIXOP OPERATION OPEN NATURAL NAME MODULE MLTYPE LPAREN LET LBRACK LBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQEQ EQ EOF END COMMA COLONQT COLONGT COLONEQ COLON BY BAR BANG ARROW AND ]
-- On RPAREN shift to state 11

State 11:
tt_name -> LPAREN STAR RPAREN . [ WITH VERBOSITY UNDERSCORE TYPE TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE REF RBRACK RBRACE QUOTED_STRING PREFIXOP OPERATION OPEN NATURAL NAME MODULE MLTYPE LPAREN LET LBRACK LBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQEQ EQ EOF END COMMA COLONQT COLONGT COLONEQ COLON BY BAR BANG ARROW AND ]
-- On WITH reduce production tt_name -> LPAREN STAR RPAREN
-- On VERBOSITY reduce production tt_name -> LPAREN STAR RPAREN
-- On UNDERSCORE reduce production tt_name -> LPAREN STAR RPAREN
-- On TYPE reduce production tt_name -> LPAREN STAR RPAREN
-- On TRY reduce production tt_name -> LPAREN STAR RPAREN
-- On STAR reduce production tt_name -> LPAREN STAR RPAREN
-- On SEMISEMI reduce production tt_name -> LPAREN STAR RPAREN
-- On SEMI reduce production tt_name -> LPAREN STAR RPAREN
-- On RULE reduce production tt_name -> LPAREN STAR RPAREN
-- On RPAREN reduce production tt_name -> LPAREN STAR RPAREN
-- On REQUIRE reduce production tt_name -> LPAREN STAR RPAREN
-- On REF reduce production tt_name -> LPAREN STAR RPAREN
-- On RBRACK reduce production tt_name -> LPAREN STAR RPAREN
-- On RBRACE reduce production tt_name -> LPAREN STAR RPAREN
-- On QUOTED_STRING reduce production tt_name -> LPAREN STAR RPAREN
-- On PREFIXOP reduce production tt_name -> LPAREN STAR RPAREN
-- On OPERATION reduce production tt_name -> LPAREN STAR RPAREN
-- On OPEN reduce production tt_name -> LPAREN STAR RPAREN
-- On NATURAL reduce production tt_name -> LPAREN STAR RPAREN
-- On NAME reduce production tt_name -> LPAREN STAR RPAREN
-- On MODULE reduce production tt_name -> LPAREN STAR RPAREN
-- On MLTYPE reduce production tt_name -> LPAREN STAR RPAREN
-- On LPAREN reduce production tt_name -> LPAREN STAR RPAREN
-- On LET reduce production tt_name -> LPAREN STAR RPAREN
-- On LBRACK reduce production tt_name -> LPAREN STAR RPAREN
-- On LBRACE reduce production tt_name -> LPAREN STAR RPAREN
-- On INFIXOP4 reduce production tt_name -> LPAREN STAR RPAREN
-- On INFIXOP3 reduce production tt_name -> LPAREN STAR RPAREN
-- On INFIXOP2 reduce production tt_name -> LPAREN STAR RPAREN
-- On INFIXOP1 reduce production tt_name -> LPAREN STAR RPAREN
-- On INFIXOP0 reduce production tt_name -> LPAREN STAR RPAREN
-- On INFIXCONS reduce production tt_name -> LPAREN STAR RPAREN
-- On INCLUDE reduce production tt_name -> LPAREN STAR RPAREN
-- On IN reduce production tt_name -> LPAREN STAR RPAREN
-- On EXTERNAL reduce production tt_name -> LPAREN STAR RPAREN
-- On EXCEPTION reduce production tt_name -> LPAREN STAR RPAREN
-- On EQEQ reduce production tt_name -> LPAREN STAR RPAREN
-- On EQ reduce production tt_name -> LPAREN STAR RPAREN
-- On EOF reduce production tt_name -> LPAREN STAR RPAREN
-- On END reduce production tt_name -> LPAREN STAR RPAREN
-- On COMMA reduce production tt_name -> LPAREN STAR RPAREN
-- On COLONQT reduce production tt_name -> LPAREN STAR RPAREN
-- On COLONGT reduce production tt_name -> LPAREN STAR RPAREN
-- On COLONEQ reduce production tt_name -> LPAREN STAR RPAREN
-- On COLON reduce production tt_name -> LPAREN STAR RPAREN
-- On BY reduce production tt_name -> LPAREN STAR RPAREN
-- On BAR reduce production tt_name -> LPAREN STAR RPAREN
-- On BANG reduce production tt_name -> LPAREN STAR RPAREN
-- On ARROW reduce production tt_name -> LPAREN STAR RPAREN
-- On AND reduce production tt_name -> LPAREN STAR RPAREN

State 12:
app_term_ -> RAISE . substitution_term [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQEQ EQ EOF END COMMA COLONQT COLONGT COLONEQ COLON BY BAR ARROW AND ]
-- On REF shift to state 4
-- On QUOTED_STRING shift to state 5
-- On PREFIXOP shift to state 6
-- On NATURAL shift to state 7
-- On NAME shift to state 8
-- On LPAREN shift to state 9
-- On LBRACK shift to state 13
-- On BANG shift to state 19
-- On tt_name shift to state 20
-- On substitution_term_ shift to state 48
-- On substitution_term shift to state 495
-- On simple_term_ shift to state 21
-- On prefix_term_ shift to state 134
-- On module_path shift to state 24
-- On module_name shift to state 45
-- On mark_location(substitution_term_) shift to state 135
-- On any_name shift to state 47

State 13:
simple_term_ -> LBRACK . list_contents RBRACK [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE REF RBRACK RBRACE QUOTED_STRING PREFIXOP OPERATION OPEN NATURAL NAME MODULE MLTYPE LPAREN LET LBRACK LBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQEQ EQ EOF END COMMA COLONQT COLONGT COLONEQ COLON BY BAR BANG ARROW AND ]
simple_term_ -> LBRACK . RBRACK [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE REF RBRACK RBRACE QUOTED_STRING PREFIXOP OPERATION OPEN NATURAL NAME MODULE MLTYPE LPAREN LET LBRACK LBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQEQ EQ EOF END COMMA COLONQT COLONGT COLONEQ COLON BY BAR BANG ARROW AND ]
-- On REF shift to state 4
-- On RBRACK shift to state 14
-- On RAISE shift to state 12
-- On QUOTED_STRING shift to state 5
-- On QQMARK shift to state 15
-- On PREFIXOP shift to state 6
-- On OCCURS shift to state 18
-- On NATURAL shift to state 7
-- On NAME shift to state 8
-- On LPAREN shift to state 9
-- On LBRACK shift to state 13
-- On CONVERT shift to state 130
-- On CONTEXT shift to state 136
-- On CONGRUENCE shift to state 138
-- On BANG shift to state 19
-- On ABSTRACT shift to state 144
-- On tt_name shift to state 20
-- On substitution_term_ shift to state 147
-- On substitution_term shift to state 148
-- On simple_term_ shift to state 21
-- On prefix_term_ shift to state 134
-- On module_path shift to state 24
-- On module_name shift to state 45
-- On mark_location(substitution_term_) shift to state 135
-- On mark_location(binop_term_) shift to state 171
-- On mark_location(app_term_) shift to state 152
-- On list_contents shift to state 489
-- On binop_term_ shift to state 175
-- On binop_term shift to state 491
-- On app_term_ shift to state 179
-- On app_term shift to state 180
-- On any_name shift to state 47

State 14:
simple_term_ -> LBRACK RBRACK . [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE REF RBRACK RBRACE QUOTED_STRING PREFIXOP OPERATION OPEN NATURAL NAME MODULE MLTYPE LPAREN LET LBRACK LBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQEQ EQ EOF END COMMA COLONQT COLONGT COLONEQ COLON BY BAR BANG ARROW AND ]
-- On WITH reduce production simple_term_ -> LBRACK RBRACK
-- On VERBOSITY reduce production simple_term_ -> LBRACK RBRACK
-- On TRY reduce production simple_term_ -> LBRACK RBRACK
-- On STAR reduce production simple_term_ -> LBRACK RBRACK
-- On SEMISEMI reduce production simple_term_ -> LBRACK RBRACK
-- On SEMI reduce production simple_term_ -> LBRACK RBRACK
-- On RULE reduce production simple_term_ -> LBRACK RBRACK
-- On RPAREN reduce production simple_term_ -> LBRACK RBRACK
-- On REQUIRE reduce production simple_term_ -> LBRACK RBRACK
-- On REF reduce production simple_term_ -> LBRACK RBRACK
-- On RBRACK reduce production simple_term_ -> LBRACK RBRACK
-- On RBRACE reduce production simple_term_ -> LBRACK RBRACK
-- On QUOTED_STRING reduce production simple_term_ -> LBRACK RBRACK
-- On PREFIXOP reduce production simple_term_ -> LBRACK RBRACK
-- On OPERATION reduce production simple_term_ -> LBRACK RBRACK
-- On OPEN reduce production simple_term_ -> LBRACK RBRACK
-- On NATURAL reduce production simple_term_ -> LBRACK RBRACK
-- On NAME reduce production simple_term_ -> LBRACK RBRACK
-- On MODULE reduce production simple_term_ -> LBRACK RBRACK
-- On MLTYPE reduce production simple_term_ -> LBRACK RBRACK
-- On LPAREN reduce production simple_term_ -> LBRACK RBRACK
-- On LET reduce production simple_term_ -> LBRACK RBRACK
-- On LBRACK reduce production simple_term_ -> LBRACK RBRACK
-- On LBRACE reduce production simple_term_ -> LBRACK RBRACK
-- On INFIXOP4 reduce production simple_term_ -> LBRACK RBRACK
-- On INFIXOP3 reduce production simple_term_ -> LBRACK RBRACK
-- On INFIXOP2 reduce production simple_term_ -> LBRACK RBRACK
-- On INFIXOP1 reduce production simple_term_ -> LBRACK RBRACK
-- On INFIXOP0 reduce production simple_term_ -> LBRACK RBRACK
-- On INFIXCONS reduce production simple_term_ -> LBRACK RBRACK
-- On INCLUDE reduce production simple_term_ -> LBRACK RBRACK
-- On IN reduce production simple_term_ -> LBRACK RBRACK
-- On EXTERNAL reduce production simple_term_ -> LBRACK RBRACK
-- On EXCEPTION reduce production simple_term_ -> LBRACK RBRACK
-- On EQEQ reduce production simple_term_ -> LBRACK RBRACK
-- On EQ reduce production simple_term_ -> LBRACK RBRACK
-- On EOF reduce production simple_term_ -> LBRACK RBRACK
-- On END reduce production simple_term_ -> LBRACK RBRACK
-- On COMMA reduce production simple_term_ -> LBRACK RBRACK
-- On COLONQT reduce production simple_term_ -> LBRACK RBRACK
-- On COLONGT reduce production simple_term_ -> LBRACK RBRACK
-- On COLONEQ reduce production simple_term_ -> LBRACK RBRACK
-- On COLON reduce production simple_term_ -> LBRACK RBRACK
-- On BY reduce production simple_term_ -> LBRACK RBRACK
-- On BAR reduce production simple_term_ -> LBRACK RBRACK
-- On BANG reduce production simple_term_ -> LBRACK RBRACK
-- On ARROW reduce production simple_term_ -> LBRACK RBRACK
-- On AND reduce production simple_term_ -> LBRACK RBRACK

State 15:
binop_term_ -> QQMARK . TYPE [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQ EOF END COMMA COLONGT BY BAR ARROW AND ]
binop_term_ -> QQMARK . COLON app_term [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQ EOF END COMMA COLONGT BY BAR ARROW AND ]
-- On TYPE shift to state 16
-- On COLON shift to state 17

State 16:
binop_term_ -> QQMARK TYPE . [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQ EOF END COMMA COLONGT BY BAR ARROW AND ]
-- On WITH reduce production binop_term_ -> QQMARK TYPE
-- On VERBOSITY reduce production binop_term_ -> QQMARK TYPE
-- On TRY reduce production binop_term_ -> QQMARK TYPE
-- On STAR reduce production binop_term_ -> QQMARK TYPE
-- On SEMISEMI reduce production binop_term_ -> QQMARK TYPE
-- On SEMI reduce production binop_term_ -> QQMARK TYPE
-- On RULE reduce production binop_term_ -> QQMARK TYPE
-- On RPAREN reduce production binop_term_ -> QQMARK TYPE
-- On REQUIRE reduce production binop_term_ -> QQMARK TYPE
-- On RBRACK reduce production binop_term_ -> QQMARK TYPE
-- On RBRACE reduce production binop_term_ -> QQMARK TYPE
-- On OPERATION reduce production binop_term_ -> QQMARK TYPE
-- On OPEN reduce production binop_term_ -> QQMARK TYPE
-- On MODULE reduce production binop_term_ -> QQMARK TYPE
-- On MLTYPE reduce production binop_term_ -> QQMARK TYPE
-- On LET reduce production binop_term_ -> QQMARK TYPE
-- On INFIXOP4 reduce production binop_term_ -> QQMARK TYPE
-- On INFIXOP3 reduce production binop_term_ -> QQMARK TYPE
-- On INFIXOP2 reduce production binop_term_ -> QQMARK TYPE
-- On INFIXOP1 reduce production binop_term_ -> QQMARK TYPE
-- On INFIXOP0 reduce production binop_term_ -> QQMARK TYPE
-- On INFIXCONS reduce production binop_term_ -> QQMARK TYPE
-- On INCLUDE reduce production binop_term_ -> QQMARK TYPE
-- On IN reduce production binop_term_ -> QQMARK TYPE
-- On EXTERNAL reduce production binop_term_ -> QQMARK TYPE
-- On EXCEPTION reduce production binop_term_ -> QQMARK TYPE
-- On EQ reduce production binop_term_ -> QQMARK TYPE
-- On EOF reduce production binop_term_ -> QQMARK TYPE
-- On END reduce production binop_term_ -> QQMARK TYPE
-- On COMMA reduce production binop_term_ -> QQMARK TYPE
-- On COLONGT reduce production binop_term_ -> QQMARK TYPE
-- On BY reduce production binop_term_ -> QQMARK TYPE
-- On BAR reduce production binop_term_ -> QQMARK TYPE
-- On ARROW reduce production binop_term_ -> QQMARK TYPE
-- On AND reduce production binop_term_ -> QQMARK TYPE

State 17:
binop_term_ -> QQMARK COLON . app_term [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQ EOF END COMMA COLONGT BY BAR ARROW AND ]
-- On REF shift to state 4
-- On RAISE shift to state 12
-- On QUOTED_STRING shift to state 5
-- On PREFIXOP shift to state 6
-- On OCCURS shift to state 18
-- On NATURAL shift to state 7
-- On NAME shift to state 8
-- On LPAREN shift to state 9
-- On LBRACK shift to state 13
-- On CONVERT shift to state 130
-- On CONTEXT shift to state 136
-- On CONGRUENCE shift to state 138
-- On BANG shift to state 19
-- On ABSTRACT shift to state 144
-- On tt_name shift to state 20
-- On substitution_term_ shift to state 147
-- On substitution_term shift to state 148
-- On simple_term_ shift to state 21
-- On prefix_term_ shift to state 134
-- On module_path shift to state 24
-- On module_name shift to state 45
-- On mark_location(substitution_term_) shift to state 135
-- On mark_location(app_term_) shift to state 152
-- On app_term_ shift to state 153
-- On app_term shift to state 488
-- On any_name shift to state 47

State 18:
app_term_ -> OCCURS . substitution_term substitution_term [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQEQ EQ EOF END COMMA COLONQT COLONGT COLONEQ COLON BY BAR ARROW AND ]
-- On REF shift to state 4
-- On QUOTED_STRING shift to state 5
-- On PREFIXOP shift to state 6
-- On NATURAL shift to state 7
-- On NAME shift to state 8
-- On LPAREN shift to state 9
-- On LBRACK shift to state 13
-- On BANG shift to state 19
-- On tt_name shift to state 20
-- On substitution_term_ shift to state 48
-- On substitution_term shift to state 49
-- On simple_term_ shift to state 21
-- On prefix_term_ shift to state 134
-- On module_path shift to state 24
-- On module_name shift to state 45
-- On mark_location(substitution_term_) shift to state 135
-- On any_name shift to state 47

State 19:
prefix_term_ -> BANG . prefix_term [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE REF RBRACK RBRACE QUOTED_STRING PREFIXOP OPERATION OPEN NATURAL NAME MODULE MLTYPE LPAREN LET LBRACK LBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQEQ EQ EOF END COMMA COLONQT COLONGT COLONEQ COLON BY BAR BANG ARROW AND ]
-- On REF shift to state 4
-- On QUOTED_STRING shift to state 5
-- On PREFIXOP shift to state 6
-- On NATURAL shift to state 7
-- On NAME shift to state 8
-- On LPAREN shift to state 9
-- On LBRACK shift to state 13
-- On BANG shift to state 19
-- On tt_name shift to state 20
-- On simple_term_ shift to state 21
-- On prefix_term_ shift to state 22
-- On prefix_term shift to state 23
-- On module_path shift to state 24
-- On module_name shift to state 45
-- On mark_location(prefix_term_) shift to state 46
-- On any_name shift to state 47

State 20:
any_name -> tt_name . [ WITH VERBOSITY UNDERSCORE UATOM TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE REF RBRACK RBRACE QUOTED_STRING QQMARK PREFIXOP OPERATION OPEN NATURAL NAME MODULE MLTYPE LPAREN LET LBRACK LBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQEQ EQ EOF END COMMA COLONQT COLONGT COLONEQ COLON BY BAR BANG ARROW AND ]
-- On WITH reduce production any_name -> tt_name
-- On VERBOSITY reduce production any_name -> tt_name
-- On UNDERSCORE reduce production any_name -> tt_name
-- On UATOM reduce production any_name -> tt_name
-- On TRY reduce production any_name -> tt_name
-- On STAR reduce production any_name -> tt_name
-- On SEMISEMI reduce production any_name -> tt_name
-- On SEMI reduce production any_name -> tt_name
-- On RULE reduce production any_name -> tt_name
-- On RPAREN reduce production any_name -> tt_name
-- On REQUIRE reduce production any_name -> tt_name
-- On REF reduce production any_name -> tt_name
-- On RBRACK reduce production any_name -> tt_name
-- On RBRACE reduce production any_name -> tt_name
-- On QUOTED_STRING reduce production any_name -> tt_name
-- On QQMARK reduce production any_name -> tt_name
-- On PREFIXOP reduce production any_name -> tt_name
-- On OPERATION reduce production any_name -> tt_name
-- On OPEN reduce production any_name -> tt_name
-- On NATURAL reduce production any_name -> tt_name
-- On NAME reduce production any_name -> tt_name
-- On MODULE reduce production any_name -> tt_name
-- On MLTYPE reduce production any_name -> tt_name
-- On LPAREN reduce production any_name -> tt_name
-- On LET reduce production any_name -> tt_name
-- On LBRACK reduce production any_name -> tt_name
-- On LBRACE reduce production any_name -> tt_name
-- On INFIXOP4 reduce production any_name -> tt_name
-- On INFIXOP3 reduce production any_name -> tt_name
-- On INFIXOP2 reduce production any_name -> tt_name
-- On INFIXOP1 reduce production any_name -> tt_name
-- On INFIXOP0 reduce production any_name -> tt_name
-- On INFIXCONS reduce production any_name -> tt_name
-- On INCLUDE reduce production any_name -> tt_name
-- On IN reduce production any_name -> tt_name
-- On EXTERNAL reduce production any_name -> tt_name
-- On EXCEPTION reduce production any_name -> tt_name
-- On EQEQ reduce production any_name -> tt_name
-- On EQ reduce production any_name -> tt_name
-- On EOF reduce production any_name -> tt_name
-- On END reduce production any_name -> tt_name
-- On COMMA reduce production any_name -> tt_name
-- On COLONQT reduce production any_name -> tt_name
-- On COLONGT reduce production any_name -> tt_name
-- On COLONEQ reduce production any_name -> tt_name
-- On COLON reduce production any_name -> tt_name
-- On BY reduce production any_name -> tt_name
-- On BAR reduce production any_name -> tt_name
-- On BANG reduce production any_name -> tt_name
-- On ARROW reduce production any_name -> tt_name
-- On AND reduce production any_name -> tt_name

State 21:
prefix_term_ -> simple_term_ . [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE REF RBRACK RBRACE QUOTED_STRING PREFIXOP OPERATION OPEN NATURAL NAME MODULE MLTYPE LPAREN LET LBRACK LBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQEQ EQ EOF END COMMA COLONQT COLONGT COLONEQ COLON BY BAR BANG ARROW AND ]
-- On WITH reduce production prefix_term_ -> simple_term_
-- On VERBOSITY reduce production prefix_term_ -> simple_term_
-- On TRY reduce production prefix_term_ -> simple_term_
-- On STAR reduce production prefix_term_ -> simple_term_
-- On SEMISEMI reduce production prefix_term_ -> simple_term_
-- On SEMI reduce production prefix_term_ -> simple_term_
-- On RULE reduce production prefix_term_ -> simple_term_
-- On RPAREN reduce production prefix_term_ -> simple_term_
-- On REQUIRE reduce production prefix_term_ -> simple_term_
-- On REF reduce production prefix_term_ -> simple_term_
-- On RBRACK reduce production prefix_term_ -> simple_term_
-- On RBRACE reduce production prefix_term_ -> simple_term_
-- On QUOTED_STRING reduce production prefix_term_ -> simple_term_
-- On PREFIXOP reduce production prefix_term_ -> simple_term_
-- On OPERATION reduce production prefix_term_ -> simple_term_
-- On OPEN reduce production prefix_term_ -> simple_term_
-- On NATURAL reduce production prefix_term_ -> simple_term_
-- On NAME reduce production prefix_term_ -> simple_term_
-- On MODULE reduce production prefix_term_ -> simple_term_
-- On MLTYPE reduce production prefix_term_ -> simple_term_
-- On LPAREN reduce production prefix_term_ -> simple_term_
-- On LET reduce production prefix_term_ -> simple_term_
-- On LBRACK reduce production prefix_term_ -> simple_term_
-- On LBRACE reduce production prefix_term_ -> simple_term_
-- On INFIXOP4 reduce production prefix_term_ -> simple_term_
-- On INFIXOP3 reduce production prefix_term_ -> simple_term_
-- On INFIXOP2 reduce production prefix_term_ -> simple_term_
-- On INFIXOP1 reduce production prefix_term_ -> simple_term_
-- On INFIXOP0 reduce production prefix_term_ -> simple_term_
-- On INFIXCONS reduce production prefix_term_ -> simple_term_
-- On INCLUDE reduce production prefix_term_ -> simple_term_
-- On IN reduce production prefix_term_ -> simple_term_
-- On EXTERNAL reduce production prefix_term_ -> simple_term_
-- On EXCEPTION reduce production prefix_term_ -> simple_term_
-- On EQEQ reduce production prefix_term_ -> simple_term_
-- On EQ reduce production prefix_term_ -> simple_term_
-- On EOF reduce production prefix_term_ -> simple_term_
-- On END reduce production prefix_term_ -> simple_term_
-- On COMMA reduce production prefix_term_ -> simple_term_
-- On COLONQT reduce production prefix_term_ -> simple_term_
-- On COLONGT reduce production prefix_term_ -> simple_term_
-- On COLONEQ reduce production prefix_term_ -> simple_term_
-- On COLON reduce production prefix_term_ -> simple_term_
-- On BY reduce production prefix_term_ -> simple_term_
-- On BAR reduce production prefix_term_ -> simple_term_
-- On BANG reduce production prefix_term_ -> simple_term_
-- On ARROW reduce production prefix_term_ -> simple_term_
-- On AND reduce production prefix_term_ -> simple_term_

State 22:
mark_location(prefix_term_) -> prefix_term_ . [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE REF RBRACK RBRACE QUOTED_STRING PREFIXOP OPERATION OPEN NATURAL NAME MODULE MLTYPE LPAREN LET LBRACK LBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQEQ EQ EOF END COMMA COLONQT COLONGT COLONEQ COLON BY BAR BANG ARROW AND ]
-- On WITH reduce production mark_location(prefix_term_) -> prefix_term_
-- On VERBOSITY reduce production mark_location(prefix_term_) -> prefix_term_
-- On TRY reduce production mark_location(prefix_term_) -> prefix_term_
-- On STAR reduce production mark_location(prefix_term_) -> prefix_term_
-- On SEMISEMI reduce production mark_location(prefix_term_) -> prefix_term_
-- On SEMI reduce production mark_location(prefix_term_) -> prefix_term_
-- On RULE reduce production mark_location(prefix_term_) -> prefix_term_
-- On RPAREN reduce production mark_location(prefix_term_) -> prefix_term_
-- On REQUIRE reduce production mark_location(prefix_term_) -> prefix_term_
-- On REF reduce production mark_location(prefix_term_) -> prefix_term_
-- On RBRACK reduce production mark_location(prefix_term_) -> prefix_term_
-- On RBRACE reduce production mark_location(prefix_term_) -> prefix_term_
-- On QUOTED_STRING reduce production mark_location(prefix_term_) -> prefix_term_
-- On PREFIXOP reduce production mark_location(prefix_term_) -> prefix_term_
-- On OPERATION reduce production mark_location(prefix_term_) -> prefix_term_
-- On OPEN reduce production mark_location(prefix_term_) -> prefix_term_
-- On NATURAL reduce production mark_location(prefix_term_) -> prefix_term_
-- On NAME reduce production mark_location(prefix_term_) -> prefix_term_
-- On MODULE reduce production mark_location(prefix_term_) -> prefix_term_
-- On MLTYPE reduce production mark_location(prefix_term_) -> prefix_term_
-- On LPAREN reduce production mark_location(prefix_term_) -> prefix_term_
-- On LET reduce production mark_location(prefix_term_) -> prefix_term_
-- On LBRACK reduce production mark_location(prefix_term_) -> prefix_term_
-- On LBRACE reduce production mark_location(prefix_term_) -> prefix_term_
-- On INFIXOP4 reduce production mark_location(prefix_term_) -> prefix_term_
-- On INFIXOP3 reduce production mark_location(prefix_term_) -> prefix_term_
-- On INFIXOP2 reduce production mark_location(prefix_term_) -> prefix_term_
-- On INFIXOP1 reduce production mark_location(prefix_term_) -> prefix_term_
-- On INFIXOP0 reduce production mark_location(prefix_term_) -> prefix_term_
-- On INFIXCONS reduce production mark_location(prefix_term_) -> prefix_term_
-- On INCLUDE reduce production mark_location(prefix_term_) -> prefix_term_
-- On IN reduce production mark_location(prefix_term_) -> prefix_term_
-- On EXTERNAL reduce production mark_location(prefix_term_) -> prefix_term_
-- On EXCEPTION reduce production mark_location(prefix_term_) -> prefix_term_
-- On EQEQ reduce production mark_location(prefix_term_) -> prefix_term_
-- On EQ reduce production mark_location(prefix_term_) -> prefix_term_
-- On EOF reduce production mark_location(prefix_term_) -> prefix_term_
-- On END reduce production mark_location(prefix_term_) -> prefix_term_
-- On COMMA reduce production mark_location(prefix_term_) -> prefix_term_
-- On COLONQT reduce production mark_location(prefix_term_) -> prefix_term_
-- On COLONGT reduce production mark_location(prefix_term_) -> prefix_term_
-- On COLONEQ reduce production mark_location(prefix_term_) -> prefix_term_
-- On COLON reduce production mark_location(prefix_term_) -> prefix_term_
-- On BY reduce production mark_location(prefix_term_) -> prefix_term_
-- On BAR reduce production mark_location(prefix_term_) -> prefix_term_
-- On BANG reduce production mark_location(prefix_term_) -> prefix_term_
-- On ARROW reduce production mark_location(prefix_term_) -> prefix_term_
-- On AND reduce production mark_location(prefix_term_) -> prefix_term_

State 23:
prefix_term_ -> BANG prefix_term . [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE REF RBRACK RBRACE QUOTED_STRING PREFIXOP OPERATION OPEN NATURAL NAME MODULE MLTYPE LPAREN LET LBRACK LBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQEQ EQ EOF END COMMA COLONQT COLONGT COLONEQ COLON BY BAR BANG ARROW AND ]
-- On WITH reduce production prefix_term_ -> BANG prefix_term
-- On VERBOSITY reduce production prefix_term_ -> BANG prefix_term
-- On TRY reduce production prefix_term_ -> BANG prefix_term
-- On STAR reduce production prefix_term_ -> BANG prefix_term
-- On SEMISEMI reduce production prefix_term_ -> BANG prefix_term
-- On SEMI reduce production prefix_term_ -> BANG prefix_term
-- On RULE reduce production prefix_term_ -> BANG prefix_term
-- On RPAREN reduce production prefix_term_ -> BANG prefix_term
-- On REQUIRE reduce production prefix_term_ -> BANG prefix_term
-- On REF reduce production prefix_term_ -> BANG prefix_term
-- On RBRACK reduce production prefix_term_ -> BANG prefix_term
-- On RBRACE reduce production prefix_term_ -> BANG prefix_term
-- On QUOTED_STRING reduce production prefix_term_ -> BANG prefix_term
-- On PREFIXOP reduce production prefix_term_ -> BANG prefix_term
-- On OPERATION reduce production prefix_term_ -> BANG prefix_term
-- On OPEN reduce production prefix_term_ -> BANG prefix_term
-- On NATURAL reduce production prefix_term_ -> BANG prefix_term
-- On NAME reduce production prefix_term_ -> BANG prefix_term
-- On MODULE reduce production prefix_term_ -> BANG prefix_term
-- On MLTYPE reduce production prefix_term_ -> BANG prefix_term
-- On LPAREN reduce production prefix_term_ -> BANG prefix_term
-- On LET reduce production prefix_term_ -> BANG prefix_term
-- On LBRACK reduce production prefix_term_ -> BANG prefix_term
-- On LBRACE reduce production prefix_term_ -> BANG prefix_term
-- On INFIXOP4 reduce production prefix_term_ -> BANG prefix_term
-- On INFIXOP3 reduce production prefix_term_ -> BANG prefix_term
-- On INFIXOP2 reduce production prefix_term_ -> BANG prefix_term
-- On INFIXOP1 reduce production prefix_term_ -> BANG prefix_term
-- On INFIXOP0 reduce production prefix_term_ -> BANG prefix_term
-- On INFIXCONS reduce production prefix_term_ -> BANG prefix_term
-- On INCLUDE reduce production prefix_term_ -> BANG prefix_term
-- On IN reduce production prefix_term_ -> BANG prefix_term
-- On EXTERNAL reduce production prefix_term_ -> BANG prefix_term
-- On EXCEPTION reduce production prefix_term_ -> BANG prefix_term
-- On EQEQ reduce production prefix_term_ -> BANG prefix_term
-- On EQ reduce production prefix_term_ -> BANG prefix_term
-- On EOF reduce production prefix_term_ -> BANG prefix_term
-- On END reduce production prefix_term_ -> BANG prefix_term
-- On COMMA reduce production prefix_term_ -> BANG prefix_term
-- On COLONQT reduce production prefix_term_ -> BANG prefix_term
-- On COLONGT reduce production prefix_term_ -> BANG prefix_term
-- On COLONEQ reduce production prefix_term_ -> BANG prefix_term
-- On COLON reduce production prefix_term_ -> BANG prefix_term
-- On BY reduce production prefix_term_ -> BANG prefix_term
-- On BAR reduce production prefix_term_ -> BANG prefix_term
-- On BANG reduce production prefix_term_ -> BANG prefix_term
-- On ARROW reduce production prefix_term_ -> BANG prefix_term
-- On AND reduce production prefix_term_ -> BANG prefix_term

State 24:
module_path -> module_path . PERIOD module_name [ PERIOD ]
simple_term_ -> module_path . PERIOD any_name [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE REF RBRACK RBRACE QUOTED_STRING PREFIXOP OPERATION OPEN NATURAL NAME MODULE MLTYPE LPAREN LET LBRACK LBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQEQ EQ EOF END COMMA COLONQT COLONGT COLONEQ COLON BY BAR BANG ARROW AND ]
-- On PERIOD shift to state 25

State 25:
module_path -> module_path PERIOD . module_name [ PERIOD ]
simple_term_ -> module_path PERIOD . any_name [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE REF RBRACK RBRACE QUOTED_STRING PREFIXOP OPERATION OPEN NATURAL NAME MODULE MLTYPE LPAREN LET LBRACK LBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQEQ EQ EOF END COMMA COLONQT COLONGT COLONEQ COLON BY BAR BANG ARROW AND ]
-- On NAME shift to state 8
-- On LPAREN shift to state 26
-- On tt_name shift to state 20
-- On module_name shift to state 43
-- On any_name shift to state 44

State 26:
tt_name -> LPAREN . INFIXCONS RPAREN [ WITH VERBOSITY UNDERSCORE TYPE TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE REF RBRACK RBRACE QUOTED_STRING PREFIXOP OPERATION OPEN NATURAL NAME MODULE MLTYPE LPAREN LET LBRACK LBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQEQ EQ EOF END COMMA COLONQT COLONGT COLONEQ COLON BY BAR BANG ARROW AND ]
tt_name -> LPAREN . EQ RPAREN [ WITH VERBOSITY UNDERSCORE TYPE TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE REF RBRACK RBRACE QUOTED_STRING PREFIXOP OPERATION OPEN NATURAL NAME MODULE MLTYPE LPAREN LET LBRACK LBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQEQ EQ EOF END COMMA COLONQT COLONGT COLONEQ COLON BY BAR BANG ARROW AND ]
tt_name -> LPAREN . INFIXOP0 RPAREN [ WITH VERBOSITY UNDERSCORE TYPE TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE REF RBRACK RBRACE QUOTED_STRING PREFIXOP OPERATION OPEN NATURAL NAME MODULE MLTYPE LPAREN LET LBRACK LBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQEQ EQ EOF END COMMA COLONQT COLONGT COLONEQ COLON BY BAR BANG ARROW AND ]
tt_name -> LPAREN . INFIXOP1 RPAREN [ WITH VERBOSITY UNDERSCORE TYPE TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE REF RBRACK RBRACE QUOTED_STRING PREFIXOP OPERATION OPEN NATURAL NAME MODULE MLTYPE LPAREN LET LBRACK LBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQEQ EQ EOF END COMMA COLONQT COLONGT COLONEQ COLON BY BAR BANG ARROW AND ]
tt_name -> LPAREN . INFIXOP2 RPAREN [ WITH VERBOSITY UNDERSCORE TYPE TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE REF RBRACK RBRACE QUOTED_STRING PREFIXOP OPERATION OPEN NATURAL NAME MODULE MLTYPE LPAREN LET LBRACK LBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQEQ EQ EOF END COMMA COLONQT COLONGT COLONEQ COLON BY BAR BANG ARROW AND ]
tt_name -> LPAREN . INFIXOP3 RPAREN [ WITH VERBOSITY UNDERSCORE TYPE TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE REF RBRACK RBRACE QUOTED_STRING PREFIXOP OPERATION OPEN NATURAL NAME MODULE MLTYPE LPAREN LET LBRACK LBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQEQ EQ EOF END COMMA COLONQT COLONGT COLONEQ COLON BY BAR BANG ARROW AND ]
tt_name -> LPAREN . STAR RPAREN [ WITH VERBOSITY UNDERSCORE TYPE TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE REF RBRACK RBRACE QUOTED_STRING PREFIXOP OPERATION OPEN NATURAL NAME MODULE MLTYPE LPAREN LET LBRACK LBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQEQ EQ EOF END COMMA COLONQT COLONGT COLONEQ COLON BY BAR BANG ARROW AND ]
tt_name -> LPAREN . INFIXOP4 RPAREN [ WITH VERBOSITY UNDERSCORE TYPE TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE REF RBRACK RBRACE QUOTED_STRING PREFIXOP OPERATION OPEN NATURAL NAME MODULE MLTYPE LPAREN LET LBRACK LBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQEQ EQ EOF END COMMA COLONQT COLONGT COLONEQ COLON BY BAR BANG ARROW AND ]
tt_name -> LPAREN . PREFIXOP RPAREN [ WITH VERBOSITY UNDERSCORE TYPE TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE REF RBRACK RBRACE QUOTED_STRING PREFIXOP OPERATION OPEN NATURAL NAME MODULE MLTYPE LPAREN LET LBRACK LBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQEQ EQ EOF END COMMA COLONQT COLONGT COLONEQ COLON BY BAR BANG ARROW AND ]
-- On STAR shift to state 10
-- On PREFIXOP shift to state 27
-- On INFIXOP4 shift to state 29
-- On INFIXOP3 shift to state 31
-- On INFIXOP2 shift to state 33
-- On INFIXOP1 shift to state 35
-- On INFIXOP0 shift to state 37
-- On INFIXCONS shift to state 39
-- On EQ shift to state 41

State 27:
tt_name -> LPAREN PREFIXOP . RPAREN [ WITH VERBOSITY UNDERSCORE TYPE TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE REF RBRACK RBRACE QUOTED_STRING PREFIXOP OPERATION OPEN NATURAL NAME MODULE MLTYPE LPAREN LET LBRACK LBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQEQ EQ EOF END COMMA COLONQT COLONGT COLONEQ COLON BY BAR BANG ARROW AND ]
-- On RPAREN shift to state 28

State 28:
tt_name -> LPAREN PREFIXOP RPAREN . [ WITH VERBOSITY UNDERSCORE TYPE TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE REF RBRACK RBRACE QUOTED_STRING PREFIXOP OPERATION OPEN NATURAL NAME MODULE MLTYPE LPAREN LET LBRACK LBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQEQ EQ EOF END COMMA COLONQT COLONGT COLONEQ COLON BY BAR BANG ARROW AND ]
-- On WITH reduce production tt_name -> LPAREN PREFIXOP RPAREN
-- On VERBOSITY reduce production tt_name -> LPAREN PREFIXOP RPAREN
-- On UNDERSCORE reduce production tt_name -> LPAREN PREFIXOP RPAREN
-- On TYPE reduce production tt_name -> LPAREN PREFIXOP RPAREN
-- On TRY reduce production tt_name -> LPAREN PREFIXOP RPAREN
-- On STAR reduce production tt_name -> LPAREN PREFIXOP RPAREN
-- On SEMISEMI reduce production tt_name -> LPAREN PREFIXOP RPAREN
-- On SEMI reduce production tt_name -> LPAREN PREFIXOP RPAREN
-- On RULE reduce production tt_name -> LPAREN PREFIXOP RPAREN
-- On RPAREN reduce production tt_name -> LPAREN PREFIXOP RPAREN
-- On REQUIRE reduce production tt_name -> LPAREN PREFIXOP RPAREN
-- On REF reduce production tt_name -> LPAREN PREFIXOP RPAREN
-- On RBRACK reduce production tt_name -> LPAREN PREFIXOP RPAREN
-- On RBRACE reduce production tt_name -> LPAREN PREFIXOP RPAREN
-- On QUOTED_STRING reduce production tt_name -> LPAREN PREFIXOP RPAREN
-- On PREFIXOP reduce production tt_name -> LPAREN PREFIXOP RPAREN
-- On OPERATION reduce production tt_name -> LPAREN PREFIXOP RPAREN
-- On OPEN reduce production tt_name -> LPAREN PREFIXOP RPAREN
-- On NATURAL reduce production tt_name -> LPAREN PREFIXOP RPAREN
-- On NAME reduce production tt_name -> LPAREN PREFIXOP RPAREN
-- On MODULE reduce production tt_name -> LPAREN PREFIXOP RPAREN
-- On MLTYPE reduce production tt_name -> LPAREN PREFIXOP RPAREN
-- On LPAREN reduce production tt_name -> LPAREN PREFIXOP RPAREN
-- On LET reduce production tt_name -> LPAREN PREFIXOP RPAREN
-- On LBRACK reduce production tt_name -> LPAREN PREFIXOP RPAREN
-- On LBRACE reduce production tt_name -> LPAREN PREFIXOP RPAREN
-- On INFIXOP4 reduce production tt_name -> LPAREN PREFIXOP RPAREN
-- On INFIXOP3 reduce production tt_name -> LPAREN PREFIXOP RPAREN
-- On INFIXOP2 reduce production tt_name -> LPAREN PREFIXOP RPAREN
-- On INFIXOP1 reduce production tt_name -> LPAREN PREFIXOP RPAREN
-- On INFIXOP0 reduce production tt_name -> LPAREN PREFIXOP RPAREN
-- On INFIXCONS reduce production tt_name -> LPAREN PREFIXOP RPAREN
-- On INCLUDE reduce production tt_name -> LPAREN PREFIXOP RPAREN
-- On IN reduce production tt_name -> LPAREN PREFIXOP RPAREN
-- On EXTERNAL reduce production tt_name -> LPAREN PREFIXOP RPAREN
-- On EXCEPTION reduce production tt_name -> LPAREN PREFIXOP RPAREN
-- On EQEQ reduce production tt_name -> LPAREN PREFIXOP RPAREN
-- On EQ reduce production tt_name -> LPAREN PREFIXOP RPAREN
-- On EOF reduce production tt_name -> LPAREN PREFIXOP RPAREN
-- On END reduce production tt_name -> LPAREN PREFIXOP RPAREN
-- On COMMA reduce production tt_name -> LPAREN PREFIXOP RPAREN
-- On COLONQT reduce production tt_name -> LPAREN PREFIXOP RPAREN
-- On COLONGT reduce production tt_name -> LPAREN PREFIXOP RPAREN
-- On COLONEQ reduce production tt_name -> LPAREN PREFIXOP RPAREN
-- On COLON reduce production tt_name -> LPAREN PREFIXOP RPAREN
-- On BY reduce production tt_name -> LPAREN PREFIXOP RPAREN
-- On BAR reduce production tt_name -> LPAREN PREFIXOP RPAREN
-- On BANG reduce production tt_name -> LPAREN PREFIXOP RPAREN
-- On ARROW reduce production tt_name -> LPAREN PREFIXOP RPAREN
-- On AND reduce production tt_name -> LPAREN PREFIXOP RPAREN

State 29:
tt_name -> LPAREN INFIXOP4 . RPAREN [ WITH VERBOSITY UNDERSCORE TYPE TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE REF RBRACK RBRACE QUOTED_STRING PREFIXOP OPERATION OPEN NATURAL NAME MODULE MLTYPE LPAREN LET LBRACK LBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQEQ EQ EOF END COMMA COLONQT COLONGT COLONEQ COLON BY BAR BANG ARROW AND ]
-- On RPAREN shift to state 30

State 30:
tt_name -> LPAREN INFIXOP4 RPAREN . [ WITH VERBOSITY UNDERSCORE TYPE TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE REF RBRACK RBRACE QUOTED_STRING PREFIXOP OPERATION OPEN NATURAL NAME MODULE MLTYPE LPAREN LET LBRACK LBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQEQ EQ EOF END COMMA COLONQT COLONGT COLONEQ COLON BY BAR BANG ARROW AND ]
-- On WITH reduce production tt_name -> LPAREN INFIXOP4 RPAREN
-- On VERBOSITY reduce production tt_name -> LPAREN INFIXOP4 RPAREN
-- On UNDERSCORE reduce production tt_name -> LPAREN INFIXOP4 RPAREN
-- On TYPE reduce production tt_name -> LPAREN INFIXOP4 RPAREN
-- On TRY reduce production tt_name -> LPAREN INFIXOP4 RPAREN
-- On STAR reduce production tt_name -> LPAREN INFIXOP4 RPAREN
-- On SEMISEMI reduce production tt_name -> LPAREN INFIXOP4 RPAREN
-- On SEMI reduce production tt_name -> LPAREN INFIXOP4 RPAREN
-- On RULE reduce production tt_name -> LPAREN INFIXOP4 RPAREN
-- On RPAREN reduce production tt_name -> LPAREN INFIXOP4 RPAREN
-- On REQUIRE reduce production tt_name -> LPAREN INFIXOP4 RPAREN
-- On REF reduce production tt_name -> LPAREN INFIXOP4 RPAREN
-- On RBRACK reduce production tt_name -> LPAREN INFIXOP4 RPAREN
-- On RBRACE reduce production tt_name -> LPAREN INFIXOP4 RPAREN
-- On QUOTED_STRING reduce production tt_name -> LPAREN INFIXOP4 RPAREN
-- On PREFIXOP reduce production tt_name -> LPAREN INFIXOP4 RPAREN
-- On OPERATION reduce production tt_name -> LPAREN INFIXOP4 RPAREN
-- On OPEN reduce production tt_name -> LPAREN INFIXOP4 RPAREN
-- On NATURAL reduce production tt_name -> LPAREN INFIXOP4 RPAREN
-- On NAME reduce production tt_name -> LPAREN INFIXOP4 RPAREN
-- On MODULE reduce production tt_name -> LPAREN INFIXOP4 RPAREN
-- On MLTYPE reduce production tt_name -> LPAREN INFIXOP4 RPAREN
-- On LPAREN reduce production tt_name -> LPAREN INFIXOP4 RPAREN
-- On LET reduce production tt_name -> LPAREN INFIXOP4 RPAREN
-- On LBRACK reduce production tt_name -> LPAREN INFIXOP4 RPAREN
-- On LBRACE reduce production tt_name -> LPAREN INFIXOP4 RPAREN
-- On INFIXOP4 reduce production tt_name -> LPAREN INFIXOP4 RPAREN
-- On INFIXOP3 reduce production tt_name -> LPAREN INFIXOP4 RPAREN
-- On INFIXOP2 reduce production tt_name -> LPAREN INFIXOP4 RPAREN
-- On INFIXOP1 reduce production tt_name -> LPAREN INFIXOP4 RPAREN
-- On INFIXOP0 reduce production tt_name -> LPAREN INFIXOP4 RPAREN
-- On INFIXCONS reduce production tt_name -> LPAREN INFIXOP4 RPAREN
-- On INCLUDE reduce production tt_name -> LPAREN INFIXOP4 RPAREN
-- On IN reduce production tt_name -> LPAREN INFIXOP4 RPAREN
-- On EXTERNAL reduce production tt_name -> LPAREN INFIXOP4 RPAREN
-- On EXCEPTION reduce production tt_name -> LPAREN INFIXOP4 RPAREN
-- On EQEQ reduce production tt_name -> LPAREN INFIXOP4 RPAREN
-- On EQ reduce production tt_name -> LPAREN INFIXOP4 RPAREN
-- On EOF reduce production tt_name -> LPAREN INFIXOP4 RPAREN
-- On END reduce production tt_name -> LPAREN INFIXOP4 RPAREN
-- On COMMA reduce production tt_name -> LPAREN INFIXOP4 RPAREN
-- On COLONQT reduce production tt_name -> LPAREN INFIXOP4 RPAREN
-- On COLONGT reduce production tt_name -> LPAREN INFIXOP4 RPAREN
-- On COLONEQ reduce production tt_name -> LPAREN INFIXOP4 RPAREN
-- On COLON reduce production tt_name -> LPAREN INFIXOP4 RPAREN
-- On BY reduce production tt_name -> LPAREN INFIXOP4 RPAREN
-- On BAR reduce production tt_name -> LPAREN INFIXOP4 RPAREN
-- On BANG reduce production tt_name -> LPAREN INFIXOP4 RPAREN
-- On ARROW reduce production tt_name -> LPAREN INFIXOP4 RPAREN
-- On AND reduce production tt_name -> LPAREN INFIXOP4 RPAREN

State 31:
tt_name -> LPAREN INFIXOP3 . RPAREN [ WITH VERBOSITY UNDERSCORE TYPE TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE REF RBRACK RBRACE QUOTED_STRING PREFIXOP OPERATION OPEN NATURAL NAME MODULE MLTYPE LPAREN LET LBRACK LBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQEQ EQ EOF END COMMA COLONQT COLONGT COLONEQ COLON BY BAR BANG ARROW AND ]
-- On RPAREN shift to state 32

State 32:
tt_name -> LPAREN INFIXOP3 RPAREN . [ WITH VERBOSITY UNDERSCORE TYPE TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE REF RBRACK RBRACE QUOTED_STRING PREFIXOP OPERATION OPEN NATURAL NAME MODULE MLTYPE LPAREN LET LBRACK LBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQEQ EQ EOF END COMMA COLONQT COLONGT COLONEQ COLON BY BAR BANG ARROW AND ]
-- On WITH reduce production tt_name -> LPAREN INFIXOP3 RPAREN
-- On VERBOSITY reduce production tt_name -> LPAREN INFIXOP3 RPAREN
-- On UNDERSCORE reduce production tt_name -> LPAREN INFIXOP3 RPAREN
-- On TYPE reduce production tt_name -> LPAREN INFIXOP3 RPAREN
-- On TRY reduce production tt_name -> LPAREN INFIXOP3 RPAREN
-- On STAR reduce production tt_name -> LPAREN INFIXOP3 RPAREN
-- On SEMISEMI reduce production tt_name -> LPAREN INFIXOP3 RPAREN
-- On SEMI reduce production tt_name -> LPAREN INFIXOP3 RPAREN
-- On RULE reduce production tt_name -> LPAREN INFIXOP3 RPAREN
-- On RPAREN reduce production tt_name -> LPAREN INFIXOP3 RPAREN
-- On REQUIRE reduce production tt_name -> LPAREN INFIXOP3 RPAREN
-- On REF reduce production tt_name -> LPAREN INFIXOP3 RPAREN
-- On RBRACK reduce production tt_name -> LPAREN INFIXOP3 RPAREN
-- On RBRACE reduce production tt_name -> LPAREN INFIXOP3 RPAREN
-- On QUOTED_STRING reduce production tt_name -> LPAREN INFIXOP3 RPAREN
-- On PREFIXOP reduce production tt_name -> LPAREN INFIXOP3 RPAREN
-- On OPERATION reduce production tt_name -> LPAREN INFIXOP3 RPAREN
-- On OPEN reduce production tt_name -> LPAREN INFIXOP3 RPAREN
-- On NATURAL reduce production tt_name -> LPAREN INFIXOP3 RPAREN
-- On NAME reduce production tt_name -> LPAREN INFIXOP3 RPAREN
-- On MODULE reduce production tt_name -> LPAREN INFIXOP3 RPAREN
-- On MLTYPE reduce production tt_name -> LPAREN INFIXOP3 RPAREN
-- On LPAREN reduce production tt_name -> LPAREN INFIXOP3 RPAREN
-- On LET reduce production tt_name -> LPAREN INFIXOP3 RPAREN
-- On LBRACK reduce production tt_name -> LPAREN INFIXOP3 RPAREN
-- On LBRACE reduce production tt_name -> LPAREN INFIXOP3 RPAREN
-- On INFIXOP4 reduce production tt_name -> LPAREN INFIXOP3 RPAREN
-- On INFIXOP3 reduce production tt_name -> LPAREN INFIXOP3 RPAREN
-- On INFIXOP2 reduce production tt_name -> LPAREN INFIXOP3 RPAREN
-- On INFIXOP1 reduce production tt_name -> LPAREN INFIXOP3 RPAREN
-- On INFIXOP0 reduce production tt_name -> LPAREN INFIXOP3 RPAREN
-- On INFIXCONS reduce production tt_name -> LPAREN INFIXOP3 RPAREN
-- On INCLUDE reduce production tt_name -> LPAREN INFIXOP3 RPAREN
-- On IN reduce production tt_name -> LPAREN INFIXOP3 RPAREN
-- On EXTERNAL reduce production tt_name -> LPAREN INFIXOP3 RPAREN
-- On EXCEPTION reduce production tt_name -> LPAREN INFIXOP3 RPAREN
-- On EQEQ reduce production tt_name -> LPAREN INFIXOP3 RPAREN
-- On EQ reduce production tt_name -> LPAREN INFIXOP3 RPAREN
-- On EOF reduce production tt_name -> LPAREN INFIXOP3 RPAREN
-- On END reduce production tt_name -> LPAREN INFIXOP3 RPAREN
-- On COMMA reduce production tt_name -> LPAREN INFIXOP3 RPAREN
-- On COLONQT reduce production tt_name -> LPAREN INFIXOP3 RPAREN
-- On COLONGT reduce production tt_name -> LPAREN INFIXOP3 RPAREN
-- On COLONEQ reduce production tt_name -> LPAREN INFIXOP3 RPAREN
-- On COLON reduce production tt_name -> LPAREN INFIXOP3 RPAREN
-- On BY reduce production tt_name -> LPAREN INFIXOP3 RPAREN
-- On BAR reduce production tt_name -> LPAREN INFIXOP3 RPAREN
-- On BANG reduce production tt_name -> LPAREN INFIXOP3 RPAREN
-- On ARROW reduce production tt_name -> LPAREN INFIXOP3 RPAREN
-- On AND reduce production tt_name -> LPAREN INFIXOP3 RPAREN

State 33:
tt_name -> LPAREN INFIXOP2 . RPAREN [ WITH VERBOSITY UNDERSCORE TYPE TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE REF RBRACK RBRACE QUOTED_STRING PREFIXOP OPERATION OPEN NATURAL NAME MODULE MLTYPE LPAREN LET LBRACK LBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQEQ EQ EOF END COMMA COLONQT COLONGT COLONEQ COLON BY BAR BANG ARROW AND ]
-- On RPAREN shift to state 34

State 34:
tt_name -> LPAREN INFIXOP2 RPAREN . [ WITH VERBOSITY UNDERSCORE TYPE TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE REF RBRACK RBRACE QUOTED_STRING PREFIXOP OPERATION OPEN NATURAL NAME MODULE MLTYPE LPAREN LET LBRACK LBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQEQ EQ EOF END COMMA COLONQT COLONGT COLONEQ COLON BY BAR BANG ARROW AND ]
-- On WITH reduce production tt_name -> LPAREN INFIXOP2 RPAREN
-- On VERBOSITY reduce production tt_name -> LPAREN INFIXOP2 RPAREN
-- On UNDERSCORE reduce production tt_name -> LPAREN INFIXOP2 RPAREN
-- On TYPE reduce production tt_name -> LPAREN INFIXOP2 RPAREN
-- On TRY reduce production tt_name -> LPAREN INFIXOP2 RPAREN
-- On STAR reduce production tt_name -> LPAREN INFIXOP2 RPAREN
-- On SEMISEMI reduce production tt_name -> LPAREN INFIXOP2 RPAREN
-- On SEMI reduce production tt_name -> LPAREN INFIXOP2 RPAREN
-- On RULE reduce production tt_name -> LPAREN INFIXOP2 RPAREN
-- On RPAREN reduce production tt_name -> LPAREN INFIXOP2 RPAREN
-- On REQUIRE reduce production tt_name -> LPAREN INFIXOP2 RPAREN
-- On REF reduce production tt_name -> LPAREN INFIXOP2 RPAREN
-- On RBRACK reduce production tt_name -> LPAREN INFIXOP2 RPAREN
-- On RBRACE reduce production tt_name -> LPAREN INFIXOP2 RPAREN
-- On QUOTED_STRING reduce production tt_name -> LPAREN INFIXOP2 RPAREN
-- On PREFIXOP reduce production tt_name -> LPAREN INFIXOP2 RPAREN
-- On OPERATION reduce production tt_name -> LPAREN INFIXOP2 RPAREN
-- On OPEN reduce production tt_name -> LPAREN INFIXOP2 RPAREN
-- On NATURAL reduce production tt_name -> LPAREN INFIXOP2 RPAREN
-- On NAME reduce production tt_name -> LPAREN INFIXOP2 RPAREN
-- On MODULE reduce production tt_name -> LPAREN INFIXOP2 RPAREN
-- On MLTYPE reduce production tt_name -> LPAREN INFIXOP2 RPAREN
-- On LPAREN reduce production tt_name -> LPAREN INFIXOP2 RPAREN
-- On LET reduce production tt_name -> LPAREN INFIXOP2 RPAREN
-- On LBRACK reduce production tt_name -> LPAREN INFIXOP2 RPAREN
-- On LBRACE reduce production tt_name -> LPAREN INFIXOP2 RPAREN
-- On INFIXOP4 reduce production tt_name -> LPAREN INFIXOP2 RPAREN
-- On INFIXOP3 reduce production tt_name -> LPAREN INFIXOP2 RPAREN
-- On INFIXOP2 reduce production tt_name -> LPAREN INFIXOP2 RPAREN
-- On INFIXOP1 reduce production tt_name -> LPAREN INFIXOP2 RPAREN
-- On INFIXOP0 reduce production tt_name -> LPAREN INFIXOP2 RPAREN
-- On INFIXCONS reduce production tt_name -> LPAREN INFIXOP2 RPAREN
-- On INCLUDE reduce production tt_name -> LPAREN INFIXOP2 RPAREN
-- On IN reduce production tt_name -> LPAREN INFIXOP2 RPAREN
-- On EXTERNAL reduce production tt_name -> LPAREN INFIXOP2 RPAREN
-- On EXCEPTION reduce production tt_name -> LPAREN INFIXOP2 RPAREN
-- On EQEQ reduce production tt_name -> LPAREN INFIXOP2 RPAREN
-- On EQ reduce production tt_name -> LPAREN INFIXOP2 RPAREN
-- On EOF reduce production tt_name -> LPAREN INFIXOP2 RPAREN
-- On END reduce production tt_name -> LPAREN INFIXOP2 RPAREN
-- On COMMA reduce production tt_name -> LPAREN INFIXOP2 RPAREN
-- On COLONQT reduce production tt_name -> LPAREN INFIXOP2 RPAREN
-- On COLONGT reduce production tt_name -> LPAREN INFIXOP2 RPAREN
-- On COLONEQ reduce production tt_name -> LPAREN INFIXOP2 RPAREN
-- On COLON reduce production tt_name -> LPAREN INFIXOP2 RPAREN
-- On BY reduce production tt_name -> LPAREN INFIXOP2 RPAREN
-- On BAR reduce production tt_name -> LPAREN INFIXOP2 RPAREN
-- On BANG reduce production tt_name -> LPAREN INFIXOP2 RPAREN
-- On ARROW reduce production tt_name -> LPAREN INFIXOP2 RPAREN
-- On AND reduce production tt_name -> LPAREN INFIXOP2 RPAREN

State 35:
tt_name -> LPAREN INFIXOP1 . RPAREN [ WITH VERBOSITY UNDERSCORE TYPE TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE REF RBRACK RBRACE QUOTED_STRING PREFIXOP OPERATION OPEN NATURAL NAME MODULE MLTYPE LPAREN LET LBRACK LBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQEQ EQ EOF END COMMA COLONQT COLONGT COLONEQ COLON BY BAR BANG ARROW AND ]
-- On RPAREN shift to state 36

State 36:
tt_name -> LPAREN INFIXOP1 RPAREN . [ WITH VERBOSITY UNDERSCORE TYPE TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE REF RBRACK RBRACE QUOTED_STRING PREFIXOP OPERATION OPEN NATURAL NAME MODULE MLTYPE LPAREN LET LBRACK LBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQEQ EQ EOF END COMMA COLONQT COLONGT COLONEQ COLON BY BAR BANG ARROW AND ]
-- On WITH reduce production tt_name -> LPAREN INFIXOP1 RPAREN
-- On VERBOSITY reduce production tt_name -> LPAREN INFIXOP1 RPAREN
-- On UNDERSCORE reduce production tt_name -> LPAREN INFIXOP1 RPAREN
-- On TYPE reduce production tt_name -> LPAREN INFIXOP1 RPAREN
-- On TRY reduce production tt_name -> LPAREN INFIXOP1 RPAREN
-- On STAR reduce production tt_name -> LPAREN INFIXOP1 RPAREN
-- On SEMISEMI reduce production tt_name -> LPAREN INFIXOP1 RPAREN
-- On SEMI reduce production tt_name -> LPAREN INFIXOP1 RPAREN
-- On RULE reduce production tt_name -> LPAREN INFIXOP1 RPAREN
-- On RPAREN reduce production tt_name -> LPAREN INFIXOP1 RPAREN
-- On REQUIRE reduce production tt_name -> LPAREN INFIXOP1 RPAREN
-- On REF reduce production tt_name -> LPAREN INFIXOP1 RPAREN
-- On RBRACK reduce production tt_name -> LPAREN INFIXOP1 RPAREN
-- On RBRACE reduce production tt_name -> LPAREN INFIXOP1 RPAREN
-- On QUOTED_STRING reduce production tt_name -> LPAREN INFIXOP1 RPAREN
-- On PREFIXOP reduce production tt_name -> LPAREN INFIXOP1 RPAREN
-- On OPERATION reduce production tt_name -> LPAREN INFIXOP1 RPAREN
-- On OPEN reduce production tt_name -> LPAREN INFIXOP1 RPAREN
-- On NATURAL reduce production tt_name -> LPAREN INFIXOP1 RPAREN
-- On NAME reduce production tt_name -> LPAREN INFIXOP1 RPAREN
-- On MODULE reduce production tt_name -> LPAREN INFIXOP1 RPAREN
-- On MLTYPE reduce production tt_name -> LPAREN INFIXOP1 RPAREN
-- On LPAREN reduce production tt_name -> LPAREN INFIXOP1 RPAREN
-- On LET reduce production tt_name -> LPAREN INFIXOP1 RPAREN
-- On LBRACK reduce production tt_name -> LPAREN INFIXOP1 RPAREN
-- On LBRACE reduce production tt_name -> LPAREN INFIXOP1 RPAREN
-- On INFIXOP4 reduce production tt_name -> LPAREN INFIXOP1 RPAREN
-- On INFIXOP3 reduce production tt_name -> LPAREN INFIXOP1 RPAREN
-- On INFIXOP2 reduce production tt_name -> LPAREN INFIXOP1 RPAREN
-- On INFIXOP1 reduce production tt_name -> LPAREN INFIXOP1 RPAREN
-- On INFIXOP0 reduce production tt_name -> LPAREN INFIXOP1 RPAREN
-- On INFIXCONS reduce production tt_name -> LPAREN INFIXOP1 RPAREN
-- On INCLUDE reduce production tt_name -> LPAREN INFIXOP1 RPAREN
-- On IN reduce production tt_name -> LPAREN INFIXOP1 RPAREN
-- On EXTERNAL reduce production tt_name -> LPAREN INFIXOP1 RPAREN
-- On EXCEPTION reduce production tt_name -> LPAREN INFIXOP1 RPAREN
-- On EQEQ reduce production tt_name -> LPAREN INFIXOP1 RPAREN
-- On EQ reduce production tt_name -> LPAREN INFIXOP1 RPAREN
-- On EOF reduce production tt_name -> LPAREN INFIXOP1 RPAREN
-- On END reduce production tt_name -> LPAREN INFIXOP1 RPAREN
-- On COMMA reduce production tt_name -> LPAREN INFIXOP1 RPAREN
-- On COLONQT reduce production tt_name -> LPAREN INFIXOP1 RPAREN
-- On COLONGT reduce production tt_name -> LPAREN INFIXOP1 RPAREN
-- On COLONEQ reduce production tt_name -> LPAREN INFIXOP1 RPAREN
-- On COLON reduce production tt_name -> LPAREN INFIXOP1 RPAREN
-- On BY reduce production tt_name -> LPAREN INFIXOP1 RPAREN
-- On BAR reduce production tt_name -> LPAREN INFIXOP1 RPAREN
-- On BANG reduce production tt_name -> LPAREN INFIXOP1 RPAREN
-- On ARROW reduce production tt_name -> LPAREN INFIXOP1 RPAREN
-- On AND reduce production tt_name -> LPAREN INFIXOP1 RPAREN

State 37:
tt_name -> LPAREN INFIXOP0 . RPAREN [ WITH VERBOSITY UNDERSCORE TYPE TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE REF RBRACK RBRACE QUOTED_STRING PREFIXOP OPERATION OPEN NATURAL NAME MODULE MLTYPE LPAREN LET LBRACK LBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQEQ EQ EOF END COMMA COLONQT COLONGT COLONEQ COLON BY BAR BANG ARROW AND ]
-- On RPAREN shift to state 38

State 38:
tt_name -> LPAREN INFIXOP0 RPAREN . [ WITH VERBOSITY UNDERSCORE TYPE TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE REF RBRACK RBRACE QUOTED_STRING PREFIXOP OPERATION OPEN NATURAL NAME MODULE MLTYPE LPAREN LET LBRACK LBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQEQ EQ EOF END COMMA COLONQT COLONGT COLONEQ COLON BY BAR BANG ARROW AND ]
-- On WITH reduce production tt_name -> LPAREN INFIXOP0 RPAREN
-- On VERBOSITY reduce production tt_name -> LPAREN INFIXOP0 RPAREN
-- On UNDERSCORE reduce production tt_name -> LPAREN INFIXOP0 RPAREN
-- On TYPE reduce production tt_name -> LPAREN INFIXOP0 RPAREN
-- On TRY reduce production tt_name -> LPAREN INFIXOP0 RPAREN
-- On STAR reduce production tt_name -> LPAREN INFIXOP0 RPAREN
-- On SEMISEMI reduce production tt_name -> LPAREN INFIXOP0 RPAREN
-- On SEMI reduce production tt_name -> LPAREN INFIXOP0 RPAREN
-- On RULE reduce production tt_name -> LPAREN INFIXOP0 RPAREN
-- On RPAREN reduce production tt_name -> LPAREN INFIXOP0 RPAREN
-- On REQUIRE reduce production tt_name -> LPAREN INFIXOP0 RPAREN
-- On REF reduce production tt_name -> LPAREN INFIXOP0 RPAREN
-- On RBRACK reduce production tt_name -> LPAREN INFIXOP0 RPAREN
-- On RBRACE reduce production tt_name -> LPAREN INFIXOP0 RPAREN
-- On QUOTED_STRING reduce production tt_name -> LPAREN INFIXOP0 RPAREN
-- On PREFIXOP reduce production tt_name -> LPAREN INFIXOP0 RPAREN
-- On OPERATION reduce production tt_name -> LPAREN INFIXOP0 RPAREN
-- On OPEN reduce production tt_name -> LPAREN INFIXOP0 RPAREN
-- On NATURAL reduce production tt_name -> LPAREN INFIXOP0 RPAREN
-- On NAME reduce production tt_name -> LPAREN INFIXOP0 RPAREN
-- On MODULE reduce production tt_name -> LPAREN INFIXOP0 RPAREN
-- On MLTYPE reduce production tt_name -> LPAREN INFIXOP0 RPAREN
-- On LPAREN reduce production tt_name -> LPAREN INFIXOP0 RPAREN
-- On LET reduce production tt_name -> LPAREN INFIXOP0 RPAREN
-- On LBRACK reduce production tt_name -> LPAREN INFIXOP0 RPAREN
-- On LBRACE reduce production tt_name -> LPAREN INFIXOP0 RPAREN
-- On INFIXOP4 reduce production tt_name -> LPAREN INFIXOP0 RPAREN
-- On INFIXOP3 reduce production tt_name -> LPAREN INFIXOP0 RPAREN
-- On INFIXOP2 reduce production tt_name -> LPAREN INFIXOP0 RPAREN
-- On INFIXOP1 reduce production tt_name -> LPAREN INFIXOP0 RPAREN
-- On INFIXOP0 reduce production tt_name -> LPAREN INFIXOP0 RPAREN
-- On INFIXCONS reduce production tt_name -> LPAREN INFIXOP0 RPAREN
-- On INCLUDE reduce production tt_name -> LPAREN INFIXOP0 RPAREN
-- On IN reduce production tt_name -> LPAREN INFIXOP0 RPAREN
-- On EXTERNAL reduce production tt_name -> LPAREN INFIXOP0 RPAREN
-- On EXCEPTION reduce production tt_name -> LPAREN INFIXOP0 RPAREN
-- On EQEQ reduce production tt_name -> LPAREN INFIXOP0 RPAREN
-- On EQ reduce production tt_name -> LPAREN INFIXOP0 RPAREN
-- On EOF reduce production tt_name -> LPAREN INFIXOP0 RPAREN
-- On END reduce production tt_name -> LPAREN INFIXOP0 RPAREN
-- On COMMA reduce production tt_name -> LPAREN INFIXOP0 RPAREN
-- On COLONQT reduce production tt_name -> LPAREN INFIXOP0 RPAREN
-- On COLONGT reduce production tt_name -> LPAREN INFIXOP0 RPAREN
-- On COLONEQ reduce production tt_name -> LPAREN INFIXOP0 RPAREN
-- On COLON reduce production tt_name -> LPAREN INFIXOP0 RPAREN
-- On BY reduce production tt_name -> LPAREN INFIXOP0 RPAREN
-- On BAR reduce production tt_name -> LPAREN INFIXOP0 RPAREN
-- On BANG reduce production tt_name -> LPAREN INFIXOP0 RPAREN
-- On ARROW reduce production tt_name -> LPAREN INFIXOP0 RPAREN
-- On AND reduce production tt_name -> LPAREN INFIXOP0 RPAREN

State 39:
tt_name -> LPAREN INFIXCONS . RPAREN [ WITH VERBOSITY UNDERSCORE TYPE TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE REF RBRACK RBRACE QUOTED_STRING PREFIXOP OPERATION OPEN NATURAL NAME MODULE MLTYPE LPAREN LET LBRACK LBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQEQ EQ EOF END COMMA COLONQT COLONGT COLONEQ COLON BY BAR BANG ARROW AND ]
-- On RPAREN shift to state 40

State 40:
tt_name -> LPAREN INFIXCONS RPAREN . [ WITH VERBOSITY UNDERSCORE TYPE TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE REF RBRACK RBRACE QUOTED_STRING PREFIXOP OPERATION OPEN NATURAL NAME MODULE MLTYPE LPAREN LET LBRACK LBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQEQ EQ EOF END COMMA COLONQT COLONGT COLONEQ COLON BY BAR BANG ARROW AND ]
-- On WITH reduce production tt_name -> LPAREN INFIXCONS RPAREN
-- On VERBOSITY reduce production tt_name -> LPAREN INFIXCONS RPAREN
-- On UNDERSCORE reduce production tt_name -> LPAREN INFIXCONS RPAREN
-- On TYPE reduce production tt_name -> LPAREN INFIXCONS RPAREN
-- On TRY reduce production tt_name -> LPAREN INFIXCONS RPAREN
-- On STAR reduce production tt_name -> LPAREN INFIXCONS RPAREN
-- On SEMISEMI reduce production tt_name -> LPAREN INFIXCONS RPAREN
-- On SEMI reduce production tt_name -> LPAREN INFIXCONS RPAREN
-- On RULE reduce production tt_name -> LPAREN INFIXCONS RPAREN
-- On RPAREN reduce production tt_name -> LPAREN INFIXCONS RPAREN
-- On REQUIRE reduce production tt_name -> LPAREN INFIXCONS RPAREN
-- On REF reduce production tt_name -> LPAREN INFIXCONS RPAREN
-- On RBRACK reduce production tt_name -> LPAREN INFIXCONS RPAREN
-- On RBRACE reduce production tt_name -> LPAREN INFIXCONS RPAREN
-- On QUOTED_STRING reduce production tt_name -> LPAREN INFIXCONS RPAREN
-- On PREFIXOP reduce production tt_name -> LPAREN INFIXCONS RPAREN
-- On OPERATION reduce production tt_name -> LPAREN INFIXCONS RPAREN
-- On OPEN reduce production tt_name -> LPAREN INFIXCONS RPAREN
-- On NATURAL reduce production tt_name -> LPAREN INFIXCONS RPAREN
-- On NAME reduce production tt_name -> LPAREN INFIXCONS RPAREN
-- On MODULE reduce production tt_name -> LPAREN INFIXCONS RPAREN
-- On MLTYPE reduce production tt_name -> LPAREN INFIXCONS RPAREN
-- On LPAREN reduce production tt_name -> LPAREN INFIXCONS RPAREN
-- On LET reduce production tt_name -> LPAREN INFIXCONS RPAREN
-- On LBRACK reduce production tt_name -> LPAREN INFIXCONS RPAREN
-- On LBRACE reduce production tt_name -> LPAREN INFIXCONS RPAREN
-- On INFIXOP4 reduce production tt_name -> LPAREN INFIXCONS RPAREN
-- On INFIXOP3 reduce production tt_name -> LPAREN INFIXCONS RPAREN
-- On INFIXOP2 reduce production tt_name -> LPAREN INFIXCONS RPAREN
-- On INFIXOP1 reduce production tt_name -> LPAREN INFIXCONS RPAREN
-- On INFIXOP0 reduce production tt_name -> LPAREN INFIXCONS RPAREN
-- On INFIXCONS reduce production tt_name -> LPAREN INFIXCONS RPAREN
-- On INCLUDE reduce production tt_name -> LPAREN INFIXCONS RPAREN
-- On IN reduce production tt_name -> LPAREN INFIXCONS RPAREN
-- On EXTERNAL reduce production tt_name -> LPAREN INFIXCONS RPAREN
-- On EXCEPTION reduce production tt_name -> LPAREN INFIXCONS RPAREN
-- On EQEQ reduce production tt_name -> LPAREN INFIXCONS RPAREN
-- On EQ reduce production tt_name -> LPAREN INFIXCONS RPAREN
-- On EOF reduce production tt_name -> LPAREN INFIXCONS RPAREN
-- On END reduce production tt_name -> LPAREN INFIXCONS RPAREN
-- On COMMA reduce production tt_name -> LPAREN INFIXCONS RPAREN
-- On COLONQT reduce production tt_name -> LPAREN INFIXCONS RPAREN
-- On COLONGT reduce production tt_name -> LPAREN INFIXCONS RPAREN
-- On COLONEQ reduce production tt_name -> LPAREN INFIXCONS RPAREN
-- On COLON reduce production tt_name -> LPAREN INFIXCONS RPAREN
-- On BY reduce production tt_name -> LPAREN INFIXCONS RPAREN
-- On BAR reduce production tt_name -> LPAREN INFIXCONS RPAREN
-- On BANG reduce production tt_name -> LPAREN INFIXCONS RPAREN
-- On ARROW reduce production tt_name -> LPAREN INFIXCONS RPAREN
-- On AND reduce production tt_name -> LPAREN INFIXCONS RPAREN

State 41:
tt_name -> LPAREN EQ . RPAREN [ WITH VERBOSITY UNDERSCORE TYPE TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE REF RBRACK RBRACE QUOTED_STRING PREFIXOP OPERATION OPEN NATURAL NAME MODULE MLTYPE LPAREN LET LBRACK LBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQEQ EQ EOF END COMMA COLONQT COLONGT COLONEQ COLON BY BAR BANG ARROW AND ]
-- On RPAREN shift to state 42

State 42:
tt_name -> LPAREN EQ RPAREN . [ WITH VERBOSITY UNDERSCORE TYPE TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE REF RBRACK RBRACE QUOTED_STRING PREFIXOP OPERATION OPEN NATURAL NAME MODULE MLTYPE LPAREN LET LBRACK LBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQEQ EQ EOF END COMMA COLONQT COLONGT COLONEQ COLON BY BAR BANG ARROW AND ]
-- On WITH reduce production tt_name -> LPAREN EQ RPAREN
-- On VERBOSITY reduce production tt_name -> LPAREN EQ RPAREN
-- On UNDERSCORE reduce production tt_name -> LPAREN EQ RPAREN
-- On TYPE reduce production tt_name -> LPAREN EQ RPAREN
-- On TRY reduce production tt_name -> LPAREN EQ RPAREN
-- On STAR reduce production tt_name -> LPAREN EQ RPAREN
-- On SEMISEMI reduce production tt_name -> LPAREN EQ RPAREN
-- On SEMI reduce production tt_name -> LPAREN EQ RPAREN
-- On RULE reduce production tt_name -> LPAREN EQ RPAREN
-- On RPAREN reduce production tt_name -> LPAREN EQ RPAREN
-- On REQUIRE reduce production tt_name -> LPAREN EQ RPAREN
-- On REF reduce production tt_name -> LPAREN EQ RPAREN
-- On RBRACK reduce production tt_name -> LPAREN EQ RPAREN
-- On RBRACE reduce production tt_name -> LPAREN EQ RPAREN
-- On QUOTED_STRING reduce production tt_name -> LPAREN EQ RPAREN
-- On PREFIXOP reduce production tt_name -> LPAREN EQ RPAREN
-- On OPERATION reduce production tt_name -> LPAREN EQ RPAREN
-- On OPEN reduce production tt_name -> LPAREN EQ RPAREN
-- On NATURAL reduce production tt_name -> LPAREN EQ RPAREN
-- On NAME reduce production tt_name -> LPAREN EQ RPAREN
-- On MODULE reduce production tt_name -> LPAREN EQ RPAREN
-- On MLTYPE reduce production tt_name -> LPAREN EQ RPAREN
-- On LPAREN reduce production tt_name -> LPAREN EQ RPAREN
-- On LET reduce production tt_name -> LPAREN EQ RPAREN
-- On LBRACK reduce production tt_name -> LPAREN EQ RPAREN
-- On LBRACE reduce production tt_name -> LPAREN EQ RPAREN
-- On INFIXOP4 reduce production tt_name -> LPAREN EQ RPAREN
-- On INFIXOP3 reduce production tt_name -> LPAREN EQ RPAREN
-- On INFIXOP2 reduce production tt_name -> LPAREN EQ RPAREN
-- On INFIXOP1 reduce production tt_name -> LPAREN EQ RPAREN
-- On INFIXOP0 reduce production tt_name -> LPAREN EQ RPAREN
-- On INFIXCONS reduce production tt_name -> LPAREN EQ RPAREN
-- On INCLUDE reduce production tt_name -> LPAREN EQ RPAREN
-- On IN reduce production tt_name -> LPAREN EQ RPAREN
-- On EXTERNAL reduce production tt_name -> LPAREN EQ RPAREN
-- On EXCEPTION reduce production tt_name -> LPAREN EQ RPAREN
-- On EQEQ reduce production tt_name -> LPAREN EQ RPAREN
-- On EQ reduce production tt_name -> LPAREN EQ RPAREN
-- On EOF reduce production tt_name -> LPAREN EQ RPAREN
-- On END reduce production tt_name -> LPAREN EQ RPAREN
-- On COMMA reduce production tt_name -> LPAREN EQ RPAREN
-- On COLONQT reduce production tt_name -> LPAREN EQ RPAREN
-- On COLONGT reduce production tt_name -> LPAREN EQ RPAREN
-- On COLONEQ reduce production tt_name -> LPAREN EQ RPAREN
-- On COLON reduce production tt_name -> LPAREN EQ RPAREN
-- On BY reduce production tt_name -> LPAREN EQ RPAREN
-- On BAR reduce production tt_name -> LPAREN EQ RPAREN
-- On BANG reduce production tt_name -> LPAREN EQ RPAREN
-- On ARROW reduce production tt_name -> LPAREN EQ RPAREN
-- On AND reduce production tt_name -> LPAREN EQ RPAREN

State 43:
module_path -> module_path PERIOD module_name . [ PERIOD ]
-- On PERIOD reduce production module_path -> module_path PERIOD module_name

State 44:
simple_term_ -> module_path PERIOD any_name . [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE REF RBRACK RBRACE QUOTED_STRING PREFIXOP OPERATION OPEN NATURAL NAME MODULE MLTYPE LPAREN LET LBRACK LBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQEQ EQ EOF END COMMA COLONQT COLONGT COLONEQ COLON BY BAR BANG ARROW AND ]
-- On WITH reduce production simple_term_ -> module_path PERIOD any_name
-- On VERBOSITY reduce production simple_term_ -> module_path PERIOD any_name
-- On TRY reduce production simple_term_ -> module_path PERIOD any_name
-- On STAR reduce production simple_term_ -> module_path PERIOD any_name
-- On SEMISEMI reduce production simple_term_ -> module_path PERIOD any_name
-- On SEMI reduce production simple_term_ -> module_path PERIOD any_name
-- On RULE reduce production simple_term_ -> module_path PERIOD any_name
-- On RPAREN reduce production simple_term_ -> module_path PERIOD any_name
-- On REQUIRE reduce production simple_term_ -> module_path PERIOD any_name
-- On REF reduce production simple_term_ -> module_path PERIOD any_name
-- On RBRACK reduce production simple_term_ -> module_path PERIOD any_name
-- On RBRACE reduce production simple_term_ -> module_path PERIOD any_name
-- On QUOTED_STRING reduce production simple_term_ -> module_path PERIOD any_name
-- On PREFIXOP reduce production simple_term_ -> module_path PERIOD any_name
-- On OPERATION reduce production simple_term_ -> module_path PERIOD any_name
-- On OPEN reduce production simple_term_ -> module_path PERIOD any_name
-- On NATURAL reduce production simple_term_ -> module_path PERIOD any_name
-- On NAME reduce production simple_term_ -> module_path PERIOD any_name
-- On MODULE reduce production simple_term_ -> module_path PERIOD any_name
-- On MLTYPE reduce production simple_term_ -> module_path PERIOD any_name
-- On LPAREN reduce production simple_term_ -> module_path PERIOD any_name
-- On LET reduce production simple_term_ -> module_path PERIOD any_name
-- On LBRACK reduce production simple_term_ -> module_path PERIOD any_name
-- On LBRACE reduce production simple_term_ -> module_path PERIOD any_name
-- On INFIXOP4 reduce production simple_term_ -> module_path PERIOD any_name
-- On INFIXOP3 reduce production simple_term_ -> module_path PERIOD any_name
-- On INFIXOP2 reduce production simple_term_ -> module_path PERIOD any_name
-- On INFIXOP1 reduce production simple_term_ -> module_path PERIOD any_name
-- On INFIXOP0 reduce production simple_term_ -> module_path PERIOD any_name
-- On INFIXCONS reduce production simple_term_ -> module_path PERIOD any_name
-- On INCLUDE reduce production simple_term_ -> module_path PERIOD any_name
-- On IN reduce production simple_term_ -> module_path PERIOD any_name
-- On EXTERNAL reduce production simple_term_ -> module_path PERIOD any_name
-- On EXCEPTION reduce production simple_term_ -> module_path PERIOD any_name
-- On EQEQ reduce production simple_term_ -> module_path PERIOD any_name
-- On EQ reduce production simple_term_ -> module_path PERIOD any_name
-- On EOF reduce production simple_term_ -> module_path PERIOD any_name
-- On END reduce production simple_term_ -> module_path PERIOD any_name
-- On COMMA reduce production simple_term_ -> module_path PERIOD any_name
-- On COLONQT reduce production simple_term_ -> module_path PERIOD any_name
-- On COLONGT reduce production simple_term_ -> module_path PERIOD any_name
-- On COLONEQ reduce production simple_term_ -> module_path PERIOD any_name
-- On COLON reduce production simple_term_ -> module_path PERIOD any_name
-- On BY reduce production simple_term_ -> module_path PERIOD any_name
-- On BAR reduce production simple_term_ -> module_path PERIOD any_name
-- On BANG reduce production simple_term_ -> module_path PERIOD any_name
-- On ARROW reduce production simple_term_ -> module_path PERIOD any_name
-- On AND reduce production simple_term_ -> module_path PERIOD any_name

State 45:
module_path -> module_name . [ PERIOD ]
-- On PERIOD reduce production module_path -> module_name

State 46:
prefix_term -> mark_location(prefix_term_) . [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE REF RBRACK RBRACE QUOTED_STRING PREFIXOP OPERATION OPEN NATURAL NAME MODULE MLTYPE LPAREN LET LBRACK LBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQEQ EQ EOF END COMMA COLONQT COLONGT COLONEQ COLON BY BAR BANG ARROW AND ]
-- On WITH reduce production prefix_term -> mark_location(prefix_term_)
-- On VERBOSITY reduce production prefix_term -> mark_location(prefix_term_)
-- On TRY reduce production prefix_term -> mark_location(prefix_term_)
-- On STAR reduce production prefix_term -> mark_location(prefix_term_)
-- On SEMISEMI reduce production prefix_term -> mark_location(prefix_term_)
-- On SEMI reduce production prefix_term -> mark_location(prefix_term_)
-- On RULE reduce production prefix_term -> mark_location(prefix_term_)
-- On RPAREN reduce production prefix_term -> mark_location(prefix_term_)
-- On REQUIRE reduce production prefix_term -> mark_location(prefix_term_)
-- On REF reduce production prefix_term -> mark_location(prefix_term_)
-- On RBRACK reduce production prefix_term -> mark_location(prefix_term_)
-- On RBRACE reduce production prefix_term -> mark_location(prefix_term_)
-- On QUOTED_STRING reduce production prefix_term -> mark_location(prefix_term_)
-- On PREFIXOP reduce production prefix_term -> mark_location(prefix_term_)
-- On OPERATION reduce production prefix_term -> mark_location(prefix_term_)
-- On OPEN reduce production prefix_term -> mark_location(prefix_term_)
-- On NATURAL reduce production prefix_term -> mark_location(prefix_term_)
-- On NAME reduce production prefix_term -> mark_location(prefix_term_)
-- On MODULE reduce production prefix_term -> mark_location(prefix_term_)
-- On MLTYPE reduce production prefix_term -> mark_location(prefix_term_)
-- On LPAREN reduce production prefix_term -> mark_location(prefix_term_)
-- On LET reduce production prefix_term -> mark_location(prefix_term_)
-- On LBRACK reduce production prefix_term -> mark_location(prefix_term_)
-- On LBRACE reduce production prefix_term -> mark_location(prefix_term_)
-- On INFIXOP4 reduce production prefix_term -> mark_location(prefix_term_)
-- On INFIXOP3 reduce production prefix_term -> mark_location(prefix_term_)
-- On INFIXOP2 reduce production prefix_term -> mark_location(prefix_term_)
-- On INFIXOP1 reduce production prefix_term -> mark_location(prefix_term_)
-- On INFIXOP0 reduce production prefix_term -> mark_location(prefix_term_)
-- On INFIXCONS reduce production prefix_term -> mark_location(prefix_term_)
-- On INCLUDE reduce production prefix_term -> mark_location(prefix_term_)
-- On IN reduce production prefix_term -> mark_location(prefix_term_)
-- On EXTERNAL reduce production prefix_term -> mark_location(prefix_term_)
-- On EXCEPTION reduce production prefix_term -> mark_location(prefix_term_)
-- On EQEQ reduce production prefix_term -> mark_location(prefix_term_)
-- On EQ reduce production prefix_term -> mark_location(prefix_term_)
-- On EOF reduce production prefix_term -> mark_location(prefix_term_)
-- On END reduce production prefix_term -> mark_location(prefix_term_)
-- On COMMA reduce production prefix_term -> mark_location(prefix_term_)
-- On COLONQT reduce production prefix_term -> mark_location(prefix_term_)
-- On COLONGT reduce production prefix_term -> mark_location(prefix_term_)
-- On COLONEQ reduce production prefix_term -> mark_location(prefix_term_)
-- On COLON reduce production prefix_term -> mark_location(prefix_term_)
-- On BY reduce production prefix_term -> mark_location(prefix_term_)
-- On BAR reduce production prefix_term -> mark_location(prefix_term_)
-- On BANG reduce production prefix_term -> mark_location(prefix_term_)
-- On ARROW reduce production prefix_term -> mark_location(prefix_term_)
-- On AND reduce production prefix_term -> mark_location(prefix_term_)

State 47:
simple_term_ -> any_name . [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE REF RBRACK RBRACE QUOTED_STRING PREFIXOP OPERATION OPEN NATURAL NAME MODULE MLTYPE LPAREN LET LBRACK LBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQEQ EQ EOF END COMMA COLONQT COLONGT COLONEQ COLON BY BAR BANG ARROW AND ]
-- On WITH reduce production simple_term_ -> any_name
-- On VERBOSITY reduce production simple_term_ -> any_name
-- On TRY reduce production simple_term_ -> any_name
-- On STAR reduce production simple_term_ -> any_name
-- On SEMISEMI reduce production simple_term_ -> any_name
-- On SEMI reduce production simple_term_ -> any_name
-- On RULE reduce production simple_term_ -> any_name
-- On RPAREN reduce production simple_term_ -> any_name
-- On REQUIRE reduce production simple_term_ -> any_name
-- On REF reduce production simple_term_ -> any_name
-- On RBRACK reduce production simple_term_ -> any_name
-- On RBRACE reduce production simple_term_ -> any_name
-- On QUOTED_STRING reduce production simple_term_ -> any_name
-- On PREFIXOP reduce production simple_term_ -> any_name
-- On OPERATION reduce production simple_term_ -> any_name
-- On OPEN reduce production simple_term_ -> any_name
-- On NATURAL reduce production simple_term_ -> any_name
-- On NAME reduce production simple_term_ -> any_name
-- On MODULE reduce production simple_term_ -> any_name
-- On MLTYPE reduce production simple_term_ -> any_name
-- On LPAREN reduce production simple_term_ -> any_name
-- On LET reduce production simple_term_ -> any_name
-- On LBRACK reduce production simple_term_ -> any_name
-- On LBRACE reduce production simple_term_ -> any_name
-- On INFIXOP4 reduce production simple_term_ -> any_name
-- On INFIXOP3 reduce production simple_term_ -> any_name
-- On INFIXOP2 reduce production simple_term_ -> any_name
-- On INFIXOP1 reduce production simple_term_ -> any_name
-- On INFIXOP0 reduce production simple_term_ -> any_name
-- On INFIXCONS reduce production simple_term_ -> any_name
-- On INCLUDE reduce production simple_term_ -> any_name
-- On IN reduce production simple_term_ -> any_name
-- On EXTERNAL reduce production simple_term_ -> any_name
-- On EXCEPTION reduce production simple_term_ -> any_name
-- On EQEQ reduce production simple_term_ -> any_name
-- On EQ reduce production simple_term_ -> any_name
-- On EOF reduce production simple_term_ -> any_name
-- On END reduce production simple_term_ -> any_name
-- On COMMA reduce production simple_term_ -> any_name
-- On COLONQT reduce production simple_term_ -> any_name
-- On COLONGT reduce production simple_term_ -> any_name
-- On COLONEQ reduce production simple_term_ -> any_name
-- On COLON reduce production simple_term_ -> any_name
-- On BY reduce production simple_term_ -> any_name
-- On BAR reduce production simple_term_ -> any_name
-- On BANG reduce production simple_term_ -> any_name
-- On ARROW reduce production simple_term_ -> any_name
-- On AND reduce production simple_term_ -> any_name

State 48:
mark_location(substitution_term_) -> substitution_term_ . [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE REF RBRACK RBRACE QUOTED_STRING PREFIXOP OPERATION OPEN NATURAL NAME MODULE MLTYPE LPAREN LET LBRACK LBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQEQ EQ EOF END COMMA COLONQT COLONGT COLONEQ COLON BY BAR BANG ARROW AND ]
-- On WITH reduce production mark_location(substitution_term_) -> substitution_term_
-- On VERBOSITY reduce production mark_location(substitution_term_) -> substitution_term_
-- On TRY reduce production mark_location(substitution_term_) -> substitution_term_
-- On STAR reduce production mark_location(substitution_term_) -> substitution_term_
-- On SEMISEMI reduce production mark_location(substitution_term_) -> substitution_term_
-- On SEMI reduce production mark_location(substitution_term_) -> substitution_term_
-- On RULE reduce production mark_location(substitution_term_) -> substitution_term_
-- On RPAREN reduce production mark_location(substitution_term_) -> substitution_term_
-- On REQUIRE reduce production mark_location(substitution_term_) -> substitution_term_
-- On REF reduce production mark_location(substitution_term_) -> substitution_term_
-- On RBRACK reduce production mark_location(substitution_term_) -> substitution_term_
-- On RBRACE reduce production mark_location(substitution_term_) -> substitution_term_
-- On QUOTED_STRING reduce production mark_location(substitution_term_) -> substitution_term_
-- On PREFIXOP reduce production mark_location(substitution_term_) -> substitution_term_
-- On OPERATION reduce production mark_location(substitution_term_) -> substitution_term_
-- On OPEN reduce production mark_location(substitution_term_) -> substitution_term_
-- On NATURAL reduce production mark_location(substitution_term_) -> substitution_term_
-- On NAME reduce production mark_location(substitution_term_) -> substitution_term_
-- On MODULE reduce production mark_location(substitution_term_) -> substitution_term_
-- On MLTYPE reduce production mark_location(substitution_term_) -> substitution_term_
-- On LPAREN reduce production mark_location(substitution_term_) -> substitution_term_
-- On LET reduce production mark_location(substitution_term_) -> substitution_term_
-- On LBRACK reduce production mark_location(substitution_term_) -> substitution_term_
-- On LBRACE reduce production mark_location(substitution_term_) -> substitution_term_
-- On INFIXOP4 reduce production mark_location(substitution_term_) -> substitution_term_
-- On INFIXOP3 reduce production mark_location(substitution_term_) -> substitution_term_
-- On INFIXOP2 reduce production mark_location(substitution_term_) -> substitution_term_
-- On INFIXOP1 reduce production mark_location(substitution_term_) -> substitution_term_
-- On INFIXOP0 reduce production mark_location(substitution_term_) -> substitution_term_
-- On INFIXCONS reduce production mark_location(substitution_term_) -> substitution_term_
-- On INCLUDE reduce production mark_location(substitution_term_) -> substitution_term_
-- On IN reduce production mark_location(substitution_term_) -> substitution_term_
-- On EXTERNAL reduce production mark_location(substitution_term_) -> substitution_term_
-- On EXCEPTION reduce production mark_location(substitution_term_) -> substitution_term_
-- On EQEQ reduce production mark_location(substitution_term_) -> substitution_term_
-- On EQ reduce production mark_location(substitution_term_) -> substitution_term_
-- On EOF reduce production mark_location(substitution_term_) -> substitution_term_
-- On END reduce production mark_location(substitution_term_) -> substitution_term_
-- On COMMA reduce production mark_location(substitution_term_) -> substitution_term_
-- On COLONQT reduce production mark_location(substitution_term_) -> substitution_term_
-- On COLONGT reduce production mark_location(substitution_term_) -> substitution_term_
-- On COLONEQ reduce production mark_location(substitution_term_) -> substitution_term_
-- On COLON reduce production mark_location(substitution_term_) -> substitution_term_
-- On BY reduce production mark_location(substitution_term_) -> substitution_term_
-- On BAR reduce production mark_location(substitution_term_) -> substitution_term_
-- On BANG reduce production mark_location(substitution_term_) -> substitution_term_
-- On ARROW reduce production mark_location(substitution_term_) -> substitution_term_
-- On AND reduce production mark_location(substitution_term_) -> substitution_term_

State 49:
app_term_ -> OCCURS substitution_term . substitution_term [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQEQ EQ EOF END COMMA COLONQT COLONGT COLONEQ COLON BY BAR ARROW AND ]
substitution_term_ -> substitution_term . substitution [ REF QUOTED_STRING PREFIXOP NATURAL NAME LPAREN LBRACK LBRACE BANG ]
-- On REF shift to state 4
-- On QUOTED_STRING shift to state 5
-- On PREFIXOP shift to state 6
-- On NATURAL shift to state 7
-- On NAME shift to state 8
-- On LPAREN shift to state 9
-- On LBRACK shift to state 13
-- On LBRACE shift to state 50
-- On BANG shift to state 19
-- On tt_name shift to state 20
-- On substitution_term_ shift to state 48
-- On substitution_term shift to state 487
-- On substitution shift to state 133
-- On simple_term_ shift to state 21
-- On prefix_term_ shift to state 134
-- On module_path shift to state 24
-- On module_name shift to state 45
-- On mark_location(substitution_term_) shift to state 135
-- On any_name shift to state 47

State 50:
substitution -> LBRACE . separated_nonempty_list(COMMA,term) RBRACE [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE REF RBRACK RBRACE QUOTED_STRING PREFIXOP OPERATION OPEN NATURAL NAME MODULE MLTYPE LPAREN LET LBRACK LBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQEQ EQ EOF END COMMA COLONQT COLONGT COLONEQ COLON BY BAR BANG ARROW AND ]
-- On WITH shift to state 2
-- On TRY shift to state 3
-- On REF shift to state 4
-- On RAISE shift to state 12
-- On QUOTED_STRING shift to state 5
-- On QQMARK shift to state 15
-- On PREFIXOP shift to state 6
-- On OCCURS shift to state 18
-- On NATURAL shift to state 7
-- On NAME shift to state 8
-- On MATCH shift to state 51
-- On LPAREN shift to state 9
-- On LET shift to state 52
-- On LBRACK shift to state 13
-- On LBRACE shift to state 156
-- On HANDLER shift to state 209
-- On FUN shift to state 330
-- On FRESH shift to state 338
-- On DERIVE shift to state 342
-- On CONVERT shift to state 130
-- On CONTEXT shift to state 136
-- On CONGRUENCE shift to state 138
-- On BANG shift to state 19
-- On ABSTRACT shift to state 144
-- On ty_term_ shift to state 357
-- On tt_name shift to state 20
-- On term_ shift to state 358
-- On term shift to state 482
-- On substitution_term_ shift to state 147
-- On substitution_term shift to state 148
-- On simple_term_ shift to state 21
-- On separated_nonempty_list(COMMA,term) shift to state 485
-- On prefix_term_ shift to state 134
-- On nonempty_list(maybe_typed_binder) shift to state 167
-- On module_path shift to state 24
-- On module_name shift to state 45
-- On maybe_typed_binder shift to state 168
-- On mark_location(term_) shift to state 361
-- On mark_location(substitution_term_) shift to state 135
-- On mark_location(binop_term_) shift to state 171
-- On mark_location(app_term_) shift to state 152
-- On binop_term_ shift to state 172
-- On binop_term shift to state 362
-- On app_term_ shift to state 179
-- On app_term shift to state 365
-- On any_name shift to state 47
-- On abstraction shift to state 205

State 51:
term_ -> MATCH . term WITH match_cases END [ WITH VERBOSITY TRY SEMISEMI RULE RPAREN REQUIRE RBRACE OPERATION OPEN MODULE MLTYPE LET INCLUDE IN EXTERNAL EXCEPTION EOF END COMMA COLONGT BY BAR AND ]
-- On WITH shift to state 2
-- On TRY shift to state 3
-- On REF shift to state 4
-- On RAISE shift to state 12
-- On QUOTED_STRING shift to state 5
-- On QQMARK shift to state 15
-- On PREFIXOP shift to state 6
-- On OCCURS shift to state 18
-- On NATURAL shift to state 7
-- On NAME shift to state 8
-- On MATCH shift to state 51
-- On LPAREN shift to state 9
-- On LET shift to state 52
-- On LBRACK shift to state 13
-- On LBRACE shift to state 156
-- On HANDLER shift to state 209
-- On FUN shift to state 330
-- On FRESH shift to state 338
-- On DERIVE shift to state 342
-- On CONVERT shift to state 130
-- On CONTEXT shift to state 136
-- On CONGRUENCE shift to state 138
-- On BANG shift to state 19
-- On ABSTRACT shift to state 144
-- On ty_term_ shift to state 357
-- On tt_name shift to state 20
-- On term_ shift to state 358
-- On term shift to state 470
-- On substitution_term_ shift to state 147
-- On substitution_term shift to state 148
-- On simple_term_ shift to state 21
-- On prefix_term_ shift to state 134
-- On nonempty_list(maybe_typed_binder) shift to state 167
-- On module_path shift to state 24
-- On module_name shift to state 45
-- On maybe_typed_binder shift to state 168
-- On mark_location(term_) shift to state 361
-- On mark_location(substitution_term_) shift to state 135
-- On mark_location(binop_term_) shift to state 171
-- On mark_location(app_term_) shift to state 152
-- On binop_term_ shift to state 172
-- On binop_term shift to state 362
-- On app_term_ shift to state 481
-- On app_term shift to state 365
-- On any_name shift to state 47
-- On abstraction shift to state 205

State 52:
term_ -> LET . separated_nonempty_list(AND,let_clause) IN term [ WITH VERBOSITY TRY SEMISEMI RULE RPAREN REQUIRE RBRACE OPERATION OPEN MODULE MLTYPE LET INCLUDE IN EXTERNAL EXCEPTION EOF END COMMA COLONGT BY BAR AND ]
term_ -> LET . REC separated_nonempty_list(AND,recursive_clause) IN term [ WITH VERBOSITY TRY SEMISEMI RULE RPAREN REQUIRE RBRACE OPERATION OPEN MODULE MLTYPE LET INCLUDE IN EXTERNAL EXCEPTION EOF END COMMA COLONGT BY BAR AND ]
-- On UNDERSCORE shift to state 53
-- On REC shift to state 428
-- On NAME shift to state 118
-- On LPAREN shift to state 443
-- On LBRACK shift to state 446
-- On separated_nonempty_list(AND,let_clause) shift to state 449
-- On ml_name shift to state 452
-- On mark_location(let_pattern_) shift to state 461
-- On let_pattern_ shift to state 462
-- On let_pattern shift to state 463
-- On let_clause shift to state 467

State 53:
let_clause -> UNDERSCORE . let_annotation EQ term [ WITH VERBOSITY SEMISEMI RULE REQUIRE OPERATION OPEN MODULE MLTYPE LET INCLUDE IN EXTERNAL EXCEPTION EOF END AND ]
let_clause -> UNDERSCORE . COLON app_term EQ term [ WITH VERBOSITY SEMISEMI RULE REQUIRE OPERATION OPEN MODULE MLTYPE LET INCLUDE IN EXTERNAL EXCEPTION EOF END AND ]
-- On COLONGT shift to state 54
-- On COLON shift to state 129
-- On let_annotation shift to state 425
-- On EQ reduce production let_annotation ->

State 54:
let_annotation -> COLONGT . ml_schema [ EQ ]
-- On UNDERSCORE shift to state 55
-- On REF shift to state 56
-- On NAME shift to state 57
-- On MLUNIT shift to state 58
-- On MLSTRING shift to state 59
-- On MLJUDGEMENT shift to state 60
-- On MLFORALL shift to state 116
-- On MLDERIVATION shift to state 61
-- On MLBOUNDARY shift to state 62
-- On LPAREN shift to state 63
-- On simple_mlty_ shift to state 82
-- On separated_nonempty_list(STAR,app_mlty) shift to state 83
-- On prod_mlty_ shift to state 84
-- On prod_mlty shift to state 85
-- On module_path shift to state 87
-- On module_name shift to state 45
-- On mlty_ shift to state 100
-- On mlty shift to state 125
-- On ml_schema_ shift to state 126
-- On ml_schema shift to state 127
-- On ml_name shift to state 102
-- On mark_location(prod_mlty_) shift to state 104
-- On mark_location(mlty_) shift to state 105
-- On mark_location(ml_schema_) shift to state 128
-- On mark_location(app_mlty_) shift to state 106
-- On app_mlty_ shift to state 107
-- On app_mlty shift to state 108

State 55:
simple_mlty_ -> UNDERSCORE . [ WITH WHEN VERBOSITY UNDERSCORE STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN NAME MODULE MLUNIT MLTYPE MLSTRING MLJUDGEMENT MLDERIVATION MLBOUNDARY LPAREN LET INCLUDE EXTERNAL EXCEPTION EQ EOF END DARROW COMMA BAR ARROW AND ]
-- On WITH reduce production simple_mlty_ -> UNDERSCORE
-- On WHEN reduce production simple_mlty_ -> UNDERSCORE
-- On VERBOSITY reduce production simple_mlty_ -> UNDERSCORE
-- On UNDERSCORE reduce production simple_mlty_ -> UNDERSCORE
-- On STAR reduce production simple_mlty_ -> UNDERSCORE
-- On SEMISEMI reduce production simple_mlty_ -> UNDERSCORE
-- On SEMI reduce production simple_mlty_ -> UNDERSCORE
-- On RULE reduce production simple_mlty_ -> UNDERSCORE
-- On RPAREN reduce production simple_mlty_ -> UNDERSCORE
-- On REQUIRE reduce production simple_mlty_ -> UNDERSCORE
-- On RBRACK reduce production simple_mlty_ -> UNDERSCORE
-- On RBRACE reduce production simple_mlty_ -> UNDERSCORE
-- On OPERATION reduce production simple_mlty_ -> UNDERSCORE
-- On OPEN reduce production simple_mlty_ -> UNDERSCORE
-- On NAME reduce production simple_mlty_ -> UNDERSCORE
-- On MODULE reduce production simple_mlty_ -> UNDERSCORE
-- On MLUNIT reduce production simple_mlty_ -> UNDERSCORE
-- On MLTYPE reduce production simple_mlty_ -> UNDERSCORE
-- On MLSTRING reduce production simple_mlty_ -> UNDERSCORE
-- On MLJUDGEMENT reduce production simple_mlty_ -> UNDERSCORE
-- On MLDERIVATION reduce production simple_mlty_ -> UNDERSCORE
-- On MLBOUNDARY reduce production simple_mlty_ -> UNDERSCORE
-- On LPAREN reduce production simple_mlty_ -> UNDERSCORE
-- On LET reduce production simple_mlty_ -> UNDERSCORE
-- On INCLUDE reduce production simple_mlty_ -> UNDERSCORE
-- On EXTERNAL reduce production simple_mlty_ -> UNDERSCORE
-- On EXCEPTION reduce production simple_mlty_ -> UNDERSCORE
-- On EQ reduce production simple_mlty_ -> UNDERSCORE
-- On EOF reduce production simple_mlty_ -> UNDERSCORE
-- On END reduce production simple_mlty_ -> UNDERSCORE
-- On DARROW reduce production simple_mlty_ -> UNDERSCORE
-- On COMMA reduce production simple_mlty_ -> UNDERSCORE
-- On BAR reduce production simple_mlty_ -> UNDERSCORE
-- On ARROW reduce production simple_mlty_ -> UNDERSCORE
-- On AND reduce production simple_mlty_ -> UNDERSCORE

State 56:
app_mlty_ -> REF . simple_mlty [ WITH WHEN VERBOSITY STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN MODULE MLTYPE LET INCLUDE EXTERNAL EXCEPTION EQ EOF END DARROW COMMA BAR ARROW AND ]
-- On UNDERSCORE shift to state 55
-- On NAME shift to state 57
-- On MLUNIT shift to state 58
-- On MLSTRING shift to state 59
-- On MLJUDGEMENT shift to state 60
-- On MLDERIVATION shift to state 61
-- On MLBOUNDARY shift to state 62
-- On LPAREN shift to state 63
-- On simple_mlty_ shift to state 91
-- On simple_mlty shift to state 115
-- On module_path shift to state 94
-- On module_name shift to state 45
-- On ml_name shift to state 97
-- On mark_location(simple_mlty_) shift to state 98

State 57:
ml_name -> NAME . [ WITH WHEN VERBOSITY UNDERSCORE UATOM TYPE STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE QUOTED_STRING QQMARK PREFIXOP OPERATION OPEN NAME MODULE MLUNIT MLTYPE MLSTRING MLJUDGEMENT MLDERIVATION MLBOUNDARY LPAREN LET LBRACK INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE EXTERNAL EXCEPTION EQEQ EQ EOF END DARROW COMMA COLONGT COLON BY BAR AS ARROW AND ]
module_name -> NAME . [ PERIOD ]
-- On WITH reduce production ml_name -> NAME
-- On WHEN reduce production ml_name -> NAME
-- On VERBOSITY reduce production ml_name -> NAME
-- On UNDERSCORE reduce production ml_name -> NAME
-- On UATOM reduce production ml_name -> NAME
-- On TYPE reduce production ml_name -> NAME
-- On STAR reduce production ml_name -> NAME
-- On SEMISEMI reduce production ml_name -> NAME
-- On SEMI reduce production ml_name -> NAME
-- On RULE reduce production ml_name -> NAME
-- On RPAREN reduce production ml_name -> NAME
-- On REQUIRE reduce production ml_name -> NAME
-- On RBRACK reduce production ml_name -> NAME
-- On RBRACE reduce production ml_name -> NAME
-- On QUOTED_STRING reduce production ml_name -> NAME
-- On QQMARK reduce production ml_name -> NAME
-- On PREFIXOP reduce production ml_name -> NAME
-- On PERIOD reduce production module_name -> NAME
-- On OPERATION reduce production ml_name -> NAME
-- On OPEN reduce production ml_name -> NAME
-- On NAME reduce production ml_name -> NAME
-- On MODULE reduce production ml_name -> NAME
-- On MLUNIT reduce production ml_name -> NAME
-- On MLTYPE reduce production ml_name -> NAME
-- On MLSTRING reduce production ml_name -> NAME
-- On MLJUDGEMENT reduce production ml_name -> NAME
-- On MLDERIVATION reduce production ml_name -> NAME
-- On MLBOUNDARY reduce production ml_name -> NAME
-- On LPAREN reduce production ml_name -> NAME
-- On LET reduce production ml_name -> NAME
-- On LBRACK reduce production ml_name -> NAME
-- On INFIXOP4 reduce production ml_name -> NAME
-- On INFIXOP3 reduce production ml_name -> NAME
-- On INFIXOP2 reduce production ml_name -> NAME
-- On INFIXOP1 reduce production ml_name -> NAME
-- On INFIXOP0 reduce production ml_name -> NAME
-- On INFIXCONS reduce production ml_name -> NAME
-- On INCLUDE reduce production ml_name -> NAME
-- On EXTERNAL reduce production ml_name -> NAME
-- On EXCEPTION reduce production ml_name -> NAME
-- On EQEQ reduce production ml_name -> NAME
-- On EQ reduce production ml_name -> NAME
-- On EOF reduce production ml_name -> NAME
-- On END reduce production ml_name -> NAME
-- On DARROW reduce production ml_name -> NAME
-- On COMMA reduce production ml_name -> NAME
-- On COLONGT reduce production ml_name -> NAME
-- On COLON reduce production ml_name -> NAME
-- On BY reduce production ml_name -> NAME
-- On BAR reduce production ml_name -> NAME
-- On AS reduce production ml_name -> NAME
-- On ARROW reduce production ml_name -> NAME
-- On AND reduce production ml_name -> NAME

State 58:
simple_mlty_ -> MLUNIT . [ WITH WHEN VERBOSITY UNDERSCORE STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN NAME MODULE MLUNIT MLTYPE MLSTRING MLJUDGEMENT MLDERIVATION MLBOUNDARY LPAREN LET INCLUDE EXTERNAL EXCEPTION EQ EOF END DARROW COMMA BAR ARROW AND ]
-- On WITH reduce production simple_mlty_ -> MLUNIT
-- On WHEN reduce production simple_mlty_ -> MLUNIT
-- On VERBOSITY reduce production simple_mlty_ -> MLUNIT
-- On UNDERSCORE reduce production simple_mlty_ -> MLUNIT
-- On STAR reduce production simple_mlty_ -> MLUNIT
-- On SEMISEMI reduce production simple_mlty_ -> MLUNIT
-- On SEMI reduce production simple_mlty_ -> MLUNIT
-- On RULE reduce production simple_mlty_ -> MLUNIT
-- On RPAREN reduce production simple_mlty_ -> MLUNIT
-- On REQUIRE reduce production simple_mlty_ -> MLUNIT
-- On RBRACK reduce production simple_mlty_ -> MLUNIT
-- On RBRACE reduce production simple_mlty_ -> MLUNIT
-- On OPERATION reduce production simple_mlty_ -> MLUNIT
-- On OPEN reduce production simple_mlty_ -> MLUNIT
-- On NAME reduce production simple_mlty_ -> MLUNIT
-- On MODULE reduce production simple_mlty_ -> MLUNIT
-- On MLUNIT reduce production simple_mlty_ -> MLUNIT
-- On MLTYPE reduce production simple_mlty_ -> MLUNIT
-- On MLSTRING reduce production simple_mlty_ -> MLUNIT
-- On MLJUDGEMENT reduce production simple_mlty_ -> MLUNIT
-- On MLDERIVATION reduce production simple_mlty_ -> MLUNIT
-- On MLBOUNDARY reduce production simple_mlty_ -> MLUNIT
-- On LPAREN reduce production simple_mlty_ -> MLUNIT
-- On LET reduce production simple_mlty_ -> MLUNIT
-- On INCLUDE reduce production simple_mlty_ -> MLUNIT
-- On EXTERNAL reduce production simple_mlty_ -> MLUNIT
-- On EXCEPTION reduce production simple_mlty_ -> MLUNIT
-- On EQ reduce production simple_mlty_ -> MLUNIT
-- On EOF reduce production simple_mlty_ -> MLUNIT
-- On END reduce production simple_mlty_ -> MLUNIT
-- On DARROW reduce production simple_mlty_ -> MLUNIT
-- On COMMA reduce production simple_mlty_ -> MLUNIT
-- On BAR reduce production simple_mlty_ -> MLUNIT
-- On ARROW reduce production simple_mlty_ -> MLUNIT
-- On AND reduce production simple_mlty_ -> MLUNIT

State 59:
simple_mlty_ -> MLSTRING . [ WITH WHEN VERBOSITY UNDERSCORE STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN NAME MODULE MLUNIT MLTYPE MLSTRING MLJUDGEMENT MLDERIVATION MLBOUNDARY LPAREN LET INCLUDE EXTERNAL EXCEPTION EQ EOF END DARROW COMMA BAR ARROW AND ]
-- On WITH reduce production simple_mlty_ -> MLSTRING
-- On WHEN reduce production simple_mlty_ -> MLSTRING
-- On VERBOSITY reduce production simple_mlty_ -> MLSTRING
-- On UNDERSCORE reduce production simple_mlty_ -> MLSTRING
-- On STAR reduce production simple_mlty_ -> MLSTRING
-- On SEMISEMI reduce production simple_mlty_ -> MLSTRING
-- On SEMI reduce production simple_mlty_ -> MLSTRING
-- On RULE reduce production simple_mlty_ -> MLSTRING
-- On RPAREN reduce production simple_mlty_ -> MLSTRING
-- On REQUIRE reduce production simple_mlty_ -> MLSTRING
-- On RBRACK reduce production simple_mlty_ -> MLSTRING
-- On RBRACE reduce production simple_mlty_ -> MLSTRING
-- On OPERATION reduce production simple_mlty_ -> MLSTRING
-- On OPEN reduce production simple_mlty_ -> MLSTRING
-- On NAME reduce production simple_mlty_ -> MLSTRING
-- On MODULE reduce production simple_mlty_ -> MLSTRING
-- On MLUNIT reduce production simple_mlty_ -> MLSTRING
-- On MLTYPE reduce production simple_mlty_ -> MLSTRING
-- On MLSTRING reduce production simple_mlty_ -> MLSTRING
-- On MLJUDGEMENT reduce production simple_mlty_ -> MLSTRING
-- On MLDERIVATION reduce production simple_mlty_ -> MLSTRING
-- On MLBOUNDARY reduce production simple_mlty_ -> MLSTRING
-- On LPAREN reduce production simple_mlty_ -> MLSTRING
-- On LET reduce production simple_mlty_ -> MLSTRING
-- On INCLUDE reduce production simple_mlty_ -> MLSTRING
-- On EXTERNAL reduce production simple_mlty_ -> MLSTRING
-- On EXCEPTION reduce production simple_mlty_ -> MLSTRING
-- On EQ reduce production simple_mlty_ -> MLSTRING
-- On EOF reduce production simple_mlty_ -> MLSTRING
-- On END reduce production simple_mlty_ -> MLSTRING
-- On DARROW reduce production simple_mlty_ -> MLSTRING
-- On COMMA reduce production simple_mlty_ -> MLSTRING
-- On BAR reduce production simple_mlty_ -> MLSTRING
-- On ARROW reduce production simple_mlty_ -> MLSTRING
-- On AND reduce production simple_mlty_ -> MLSTRING

State 60:
simple_mlty_ -> MLJUDGEMENT . [ WITH WHEN VERBOSITY UNDERSCORE STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN NAME MODULE MLUNIT MLTYPE MLSTRING MLJUDGEMENT MLDERIVATION MLBOUNDARY LPAREN LET INCLUDE EXTERNAL EXCEPTION EQ EOF END DARROW COMMA BAR ARROW AND ]
-- On WITH reduce production simple_mlty_ -> MLJUDGEMENT
-- On WHEN reduce production simple_mlty_ -> MLJUDGEMENT
-- On VERBOSITY reduce production simple_mlty_ -> MLJUDGEMENT
-- On UNDERSCORE reduce production simple_mlty_ -> MLJUDGEMENT
-- On STAR reduce production simple_mlty_ -> MLJUDGEMENT
-- On SEMISEMI reduce production simple_mlty_ -> MLJUDGEMENT
-- On SEMI reduce production simple_mlty_ -> MLJUDGEMENT
-- On RULE reduce production simple_mlty_ -> MLJUDGEMENT
-- On RPAREN reduce production simple_mlty_ -> MLJUDGEMENT
-- On REQUIRE reduce production simple_mlty_ -> MLJUDGEMENT
-- On RBRACK reduce production simple_mlty_ -> MLJUDGEMENT
-- On RBRACE reduce production simple_mlty_ -> MLJUDGEMENT
-- On OPERATION reduce production simple_mlty_ -> MLJUDGEMENT
-- On OPEN reduce production simple_mlty_ -> MLJUDGEMENT
-- On NAME reduce production simple_mlty_ -> MLJUDGEMENT
-- On MODULE reduce production simple_mlty_ -> MLJUDGEMENT
-- On MLUNIT reduce production simple_mlty_ -> MLJUDGEMENT
-- On MLTYPE reduce production simple_mlty_ -> MLJUDGEMENT
-- On MLSTRING reduce production simple_mlty_ -> MLJUDGEMENT
-- On MLJUDGEMENT reduce production simple_mlty_ -> MLJUDGEMENT
-- On MLDERIVATION reduce production simple_mlty_ -> MLJUDGEMENT
-- On MLBOUNDARY reduce production simple_mlty_ -> MLJUDGEMENT
-- On LPAREN reduce production simple_mlty_ -> MLJUDGEMENT
-- On LET reduce production simple_mlty_ -> MLJUDGEMENT
-- On INCLUDE reduce production simple_mlty_ -> MLJUDGEMENT
-- On EXTERNAL reduce production simple_mlty_ -> MLJUDGEMENT
-- On EXCEPTION reduce production simple_mlty_ -> MLJUDGEMENT
-- On EQ reduce production simple_mlty_ -> MLJUDGEMENT
-- On EOF reduce production simple_mlty_ -> MLJUDGEMENT
-- On END reduce production simple_mlty_ -> MLJUDGEMENT
-- On DARROW reduce production simple_mlty_ -> MLJUDGEMENT
-- On COMMA reduce production simple_mlty_ -> MLJUDGEMENT
-- On BAR reduce production simple_mlty_ -> MLJUDGEMENT
-- On ARROW reduce production simple_mlty_ -> MLJUDGEMENT
-- On AND reduce production simple_mlty_ -> MLJUDGEMENT

State 61:
simple_mlty_ -> MLDERIVATION . [ WITH WHEN VERBOSITY UNDERSCORE STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN NAME MODULE MLUNIT MLTYPE MLSTRING MLJUDGEMENT MLDERIVATION MLBOUNDARY LPAREN LET INCLUDE EXTERNAL EXCEPTION EQ EOF END DARROW COMMA BAR ARROW AND ]
-- On WITH reduce production simple_mlty_ -> MLDERIVATION
-- On WHEN reduce production simple_mlty_ -> MLDERIVATION
-- On VERBOSITY reduce production simple_mlty_ -> MLDERIVATION
-- On UNDERSCORE reduce production simple_mlty_ -> MLDERIVATION
-- On STAR reduce production simple_mlty_ -> MLDERIVATION
-- On SEMISEMI reduce production simple_mlty_ -> MLDERIVATION
-- On SEMI reduce production simple_mlty_ -> MLDERIVATION
-- On RULE reduce production simple_mlty_ -> MLDERIVATION
-- On RPAREN reduce production simple_mlty_ -> MLDERIVATION
-- On REQUIRE reduce production simple_mlty_ -> MLDERIVATION
-- On RBRACK reduce production simple_mlty_ -> MLDERIVATION
-- On RBRACE reduce production simple_mlty_ -> MLDERIVATION
-- On OPERATION reduce production simple_mlty_ -> MLDERIVATION
-- On OPEN reduce production simple_mlty_ -> MLDERIVATION
-- On NAME reduce production simple_mlty_ -> MLDERIVATION
-- On MODULE reduce production simple_mlty_ -> MLDERIVATION
-- On MLUNIT reduce production simple_mlty_ -> MLDERIVATION
-- On MLTYPE reduce production simple_mlty_ -> MLDERIVATION
-- On MLSTRING reduce production simple_mlty_ -> MLDERIVATION
-- On MLJUDGEMENT reduce production simple_mlty_ -> MLDERIVATION
-- On MLDERIVATION reduce production simple_mlty_ -> MLDERIVATION
-- On MLBOUNDARY reduce production simple_mlty_ -> MLDERIVATION
-- On LPAREN reduce production simple_mlty_ -> MLDERIVATION
-- On LET reduce production simple_mlty_ -> MLDERIVATION
-- On INCLUDE reduce production simple_mlty_ -> MLDERIVATION
-- On EXTERNAL reduce production simple_mlty_ -> MLDERIVATION
-- On EXCEPTION reduce production simple_mlty_ -> MLDERIVATION
-- On EQ reduce production simple_mlty_ -> MLDERIVATION
-- On EOF reduce production simple_mlty_ -> MLDERIVATION
-- On END reduce production simple_mlty_ -> MLDERIVATION
-- On DARROW reduce production simple_mlty_ -> MLDERIVATION
-- On COMMA reduce production simple_mlty_ -> MLDERIVATION
-- On BAR reduce production simple_mlty_ -> MLDERIVATION
-- On ARROW reduce production simple_mlty_ -> MLDERIVATION
-- On AND reduce production simple_mlty_ -> MLDERIVATION

State 62:
simple_mlty_ -> MLBOUNDARY . [ WITH WHEN VERBOSITY UNDERSCORE STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN NAME MODULE MLUNIT MLTYPE MLSTRING MLJUDGEMENT MLDERIVATION MLBOUNDARY LPAREN LET INCLUDE EXTERNAL EXCEPTION EQ EOF END DARROW COMMA BAR ARROW AND ]
-- On WITH reduce production simple_mlty_ -> MLBOUNDARY
-- On WHEN reduce production simple_mlty_ -> MLBOUNDARY
-- On VERBOSITY reduce production simple_mlty_ -> MLBOUNDARY
-- On UNDERSCORE reduce production simple_mlty_ -> MLBOUNDARY
-- On STAR reduce production simple_mlty_ -> MLBOUNDARY
-- On SEMISEMI reduce production simple_mlty_ -> MLBOUNDARY
-- On SEMI reduce production simple_mlty_ -> MLBOUNDARY
-- On RULE reduce production simple_mlty_ -> MLBOUNDARY
-- On RPAREN reduce production simple_mlty_ -> MLBOUNDARY
-- On REQUIRE reduce production simple_mlty_ -> MLBOUNDARY
-- On RBRACK reduce production simple_mlty_ -> MLBOUNDARY
-- On RBRACE reduce production simple_mlty_ -> MLBOUNDARY
-- On OPERATION reduce production simple_mlty_ -> MLBOUNDARY
-- On OPEN reduce production simple_mlty_ -> MLBOUNDARY
-- On NAME reduce production simple_mlty_ -> MLBOUNDARY
-- On MODULE reduce production simple_mlty_ -> MLBOUNDARY
-- On MLUNIT reduce production simple_mlty_ -> MLBOUNDARY
-- On MLTYPE reduce production simple_mlty_ -> MLBOUNDARY
-- On MLSTRING reduce production simple_mlty_ -> MLBOUNDARY
-- On MLJUDGEMENT reduce production simple_mlty_ -> MLBOUNDARY
-- On MLDERIVATION reduce production simple_mlty_ -> MLBOUNDARY
-- On MLBOUNDARY reduce production simple_mlty_ -> MLBOUNDARY
-- On LPAREN reduce production simple_mlty_ -> MLBOUNDARY
-- On LET reduce production simple_mlty_ -> MLBOUNDARY
-- On INCLUDE reduce production simple_mlty_ -> MLBOUNDARY
-- On EXTERNAL reduce production simple_mlty_ -> MLBOUNDARY
-- On EXCEPTION reduce production simple_mlty_ -> MLBOUNDARY
-- On EQ reduce production simple_mlty_ -> MLBOUNDARY
-- On EOF reduce production simple_mlty_ -> MLBOUNDARY
-- On END reduce production simple_mlty_ -> MLBOUNDARY
-- On DARROW reduce production simple_mlty_ -> MLBOUNDARY
-- On COMMA reduce production simple_mlty_ -> MLBOUNDARY
-- On BAR reduce production simple_mlty_ -> MLBOUNDARY
-- On ARROW reduce production simple_mlty_ -> MLBOUNDARY
-- On AND reduce production simple_mlty_ -> MLBOUNDARY

State 63:
ml_name -> LPAREN . INFIXCONS RPAREN [ WITH WHEN VERBOSITY UNDERSCORE STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN NAME MODULE MLUNIT MLTYPE MLSTRING MLJUDGEMENT MLDERIVATION MLBOUNDARY LPAREN LET INCLUDE EXTERNAL EXCEPTION EQ EOF END DARROW COMMA BAR ARROW AND ]
ml_name -> LPAREN . EQ RPAREN [ WITH WHEN VERBOSITY UNDERSCORE STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN NAME MODULE MLUNIT MLTYPE MLSTRING MLJUDGEMENT MLDERIVATION MLBOUNDARY LPAREN LET INCLUDE EXTERNAL EXCEPTION EQ EOF END DARROW COMMA BAR ARROW AND ]
ml_name -> LPAREN . INFIXOP0 RPAREN [ WITH WHEN VERBOSITY UNDERSCORE STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN NAME MODULE MLUNIT MLTYPE MLSTRING MLJUDGEMENT MLDERIVATION MLBOUNDARY LPAREN LET INCLUDE EXTERNAL EXCEPTION EQ EOF END DARROW COMMA BAR ARROW AND ]
ml_name -> LPAREN . INFIXOP1 RPAREN [ WITH WHEN VERBOSITY UNDERSCORE STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN NAME MODULE MLUNIT MLTYPE MLSTRING MLJUDGEMENT MLDERIVATION MLBOUNDARY LPAREN LET INCLUDE EXTERNAL EXCEPTION EQ EOF END DARROW COMMA BAR ARROW AND ]
ml_name -> LPAREN . INFIXOP2 RPAREN [ WITH WHEN VERBOSITY UNDERSCORE STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN NAME MODULE MLUNIT MLTYPE MLSTRING MLJUDGEMENT MLDERIVATION MLBOUNDARY LPAREN LET INCLUDE EXTERNAL EXCEPTION EQ EOF END DARROW COMMA BAR ARROW AND ]
ml_name -> LPAREN . INFIXOP3 RPAREN [ WITH WHEN VERBOSITY UNDERSCORE STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN NAME MODULE MLUNIT MLTYPE MLSTRING MLJUDGEMENT MLDERIVATION MLBOUNDARY LPAREN LET INCLUDE EXTERNAL EXCEPTION EQ EOF END DARROW COMMA BAR ARROW AND ]
ml_name -> LPAREN . STAR RPAREN [ WITH WHEN VERBOSITY UNDERSCORE STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN NAME MODULE MLUNIT MLTYPE MLSTRING MLJUDGEMENT MLDERIVATION MLBOUNDARY LPAREN LET INCLUDE EXTERNAL EXCEPTION EQ EOF END DARROW COMMA BAR ARROW AND ]
ml_name -> LPAREN . INFIXOP4 RPAREN [ WITH WHEN VERBOSITY UNDERSCORE STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN NAME MODULE MLUNIT MLTYPE MLSTRING MLJUDGEMENT MLDERIVATION MLBOUNDARY LPAREN LET INCLUDE EXTERNAL EXCEPTION EQ EOF END DARROW COMMA BAR ARROW AND ]
ml_name -> LPAREN . PREFIXOP RPAREN [ WITH WHEN VERBOSITY UNDERSCORE STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN NAME MODULE MLUNIT MLTYPE MLSTRING MLJUDGEMENT MLDERIVATION MLBOUNDARY LPAREN LET INCLUDE EXTERNAL EXCEPTION EQ EOF END DARROW COMMA BAR ARROW AND ]
simple_mlty_ -> LPAREN . mlty_ RPAREN [ WITH WHEN VERBOSITY UNDERSCORE STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN NAME MODULE MLUNIT MLTYPE MLSTRING MLJUDGEMENT MLDERIVATION MLBOUNDARY LPAREN LET INCLUDE EXTERNAL EXCEPTION EQ EOF END DARROW COMMA BAR ARROW AND ]
-- On UNDERSCORE shift to state 55
-- On STAR shift to state 64
-- On REF shift to state 56
-- On PREFIXOP shift to state 66
-- On NAME shift to state 57
-- On MLUNIT shift to state 58
-- On MLSTRING shift to state 59
-- On MLJUDGEMENT shift to state 60
-- On MLDERIVATION shift to state 61
-- On MLBOUNDARY shift to state 62
-- On LPAREN shift to state 63
-- On INFIXOP4 shift to state 68
-- On INFIXOP3 shift to state 70
-- On INFIXOP2 shift to state 72
-- On INFIXOP1 shift to state 74
-- On INFIXOP0 shift to state 76
-- On INFIXCONS shift to state 78
-- On EQ shift to state 80
-- On simple_mlty_ shift to state 82
-- On separated_nonempty_list(STAR,app_mlty) shift to state 83
-- On prod_mlty_ shift to state 84
-- On prod_mlty shift to state 85
-- On module_path shift to state 87
-- On module_name shift to state 45
-- On mlty_ shift to state 113
-- On ml_name shift to state 102
-- On mark_location(prod_mlty_) shift to state 104
-- On mark_location(app_mlty_) shift to state 106
-- On app_mlty_ shift to state 107
-- On app_mlty shift to state 108

State 64:
ml_name -> LPAREN STAR . RPAREN [ WITH WHEN VERBOSITY UNDERSCORE UATOM TYPE STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE QUOTED_STRING QQMARK PREFIXOP OPERATION OPEN NAME MODULE MLUNIT MLTYPE MLSTRING MLJUDGEMENT MLDERIVATION MLBOUNDARY LPAREN LET LBRACK INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE EXTERNAL EXCEPTION EQEQ EQ EOF END DARROW COMMA COLONGT COLON BY BAR AS ARROW AND ]
-- On RPAREN shift to state 65

State 65:
ml_name -> LPAREN STAR RPAREN . [ WITH WHEN VERBOSITY UNDERSCORE UATOM TYPE STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE QUOTED_STRING QQMARK PREFIXOP OPERATION OPEN NAME MODULE MLUNIT MLTYPE MLSTRING MLJUDGEMENT MLDERIVATION MLBOUNDARY LPAREN LET LBRACK INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE EXTERNAL EXCEPTION EQEQ EQ EOF END DARROW COMMA COLONGT COLON BY BAR AS ARROW AND ]
-- On WITH reduce production ml_name -> LPAREN STAR RPAREN
-- On WHEN reduce production ml_name -> LPAREN STAR RPAREN
-- On VERBOSITY reduce production ml_name -> LPAREN STAR RPAREN
-- On UNDERSCORE reduce production ml_name -> LPAREN STAR RPAREN
-- On UATOM reduce production ml_name -> LPAREN STAR RPAREN
-- On TYPE reduce production ml_name -> LPAREN STAR RPAREN
-- On STAR reduce production ml_name -> LPAREN STAR RPAREN
-- On SEMISEMI reduce production ml_name -> LPAREN STAR RPAREN
-- On SEMI reduce production ml_name -> LPAREN STAR RPAREN
-- On RULE reduce production ml_name -> LPAREN STAR RPAREN
-- On RPAREN reduce production ml_name -> LPAREN STAR RPAREN
-- On REQUIRE reduce production ml_name -> LPAREN STAR RPAREN
-- On RBRACK reduce production ml_name -> LPAREN STAR RPAREN
-- On RBRACE reduce production ml_name -> LPAREN STAR RPAREN
-- On QUOTED_STRING reduce production ml_name -> LPAREN STAR RPAREN
-- On QQMARK reduce production ml_name -> LPAREN STAR RPAREN
-- On PREFIXOP reduce production ml_name -> LPAREN STAR RPAREN
-- On OPERATION reduce production ml_name -> LPAREN STAR RPAREN
-- On OPEN reduce production ml_name -> LPAREN STAR RPAREN
-- On NAME reduce production ml_name -> LPAREN STAR RPAREN
-- On MODULE reduce production ml_name -> LPAREN STAR RPAREN
-- On MLUNIT reduce production ml_name -> LPAREN STAR RPAREN
-- On MLTYPE reduce production ml_name -> LPAREN STAR RPAREN
-- On MLSTRING reduce production ml_name -> LPAREN STAR RPAREN
-- On MLJUDGEMENT reduce production ml_name -> LPAREN STAR RPAREN
-- On MLDERIVATION reduce production ml_name -> LPAREN STAR RPAREN
-- On MLBOUNDARY reduce production ml_name -> LPAREN STAR RPAREN
-- On LPAREN reduce production ml_name -> LPAREN STAR RPAREN
-- On LET reduce production ml_name -> LPAREN STAR RPAREN
-- On LBRACK reduce production ml_name -> LPAREN STAR RPAREN
-- On INFIXOP4 reduce production ml_name -> LPAREN STAR RPAREN
-- On INFIXOP3 reduce production ml_name -> LPAREN STAR RPAREN
-- On INFIXOP2 reduce production ml_name -> LPAREN STAR RPAREN
-- On INFIXOP1 reduce production ml_name -> LPAREN STAR RPAREN
-- On INFIXOP0 reduce production ml_name -> LPAREN STAR RPAREN
-- On INFIXCONS reduce production ml_name -> LPAREN STAR RPAREN
-- On INCLUDE reduce production ml_name -> LPAREN STAR RPAREN
-- On EXTERNAL reduce production ml_name -> LPAREN STAR RPAREN
-- On EXCEPTION reduce production ml_name -> LPAREN STAR RPAREN
-- On EQEQ reduce production ml_name -> LPAREN STAR RPAREN
-- On EQ reduce production ml_name -> LPAREN STAR RPAREN
-- On EOF reduce production ml_name -> LPAREN STAR RPAREN
-- On END reduce production ml_name -> LPAREN STAR RPAREN
-- On DARROW reduce production ml_name -> LPAREN STAR RPAREN
-- On COMMA reduce production ml_name -> LPAREN STAR RPAREN
-- On COLONGT reduce production ml_name -> LPAREN STAR RPAREN
-- On COLON reduce production ml_name -> LPAREN STAR RPAREN
-- On BY reduce production ml_name -> LPAREN STAR RPAREN
-- On BAR reduce production ml_name -> LPAREN STAR RPAREN
-- On AS reduce production ml_name -> LPAREN STAR RPAREN
-- On ARROW reduce production ml_name -> LPAREN STAR RPAREN
-- On AND reduce production ml_name -> LPAREN STAR RPAREN

State 66:
ml_name -> LPAREN PREFIXOP . RPAREN [ WITH WHEN VERBOSITY UNDERSCORE UATOM TYPE STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE QUOTED_STRING QQMARK PREFIXOP OPERATION OPEN NAME MODULE MLUNIT MLTYPE MLSTRING MLJUDGEMENT MLDERIVATION MLBOUNDARY LPAREN LET LBRACK INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE EXTERNAL EXCEPTION EQEQ EQ EOF END DARROW COMMA COLONGT COLON BY BAR AS ARROW AND ]
-- On RPAREN shift to state 67

State 67:
ml_name -> LPAREN PREFIXOP RPAREN . [ WITH WHEN VERBOSITY UNDERSCORE UATOM TYPE STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE QUOTED_STRING QQMARK PREFIXOP OPERATION OPEN NAME MODULE MLUNIT MLTYPE MLSTRING MLJUDGEMENT MLDERIVATION MLBOUNDARY LPAREN LET LBRACK INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE EXTERNAL EXCEPTION EQEQ EQ EOF END DARROW COMMA COLONGT COLON BY BAR AS ARROW AND ]
-- On WITH reduce production ml_name -> LPAREN PREFIXOP RPAREN
-- On WHEN reduce production ml_name -> LPAREN PREFIXOP RPAREN
-- On VERBOSITY reduce production ml_name -> LPAREN PREFIXOP RPAREN
-- On UNDERSCORE reduce production ml_name -> LPAREN PREFIXOP RPAREN
-- On UATOM reduce production ml_name -> LPAREN PREFIXOP RPAREN
-- On TYPE reduce production ml_name -> LPAREN PREFIXOP RPAREN
-- On STAR reduce production ml_name -> LPAREN PREFIXOP RPAREN
-- On SEMISEMI reduce production ml_name -> LPAREN PREFIXOP RPAREN
-- On SEMI reduce production ml_name -> LPAREN PREFIXOP RPAREN
-- On RULE reduce production ml_name -> LPAREN PREFIXOP RPAREN
-- On RPAREN reduce production ml_name -> LPAREN PREFIXOP RPAREN
-- On REQUIRE reduce production ml_name -> LPAREN PREFIXOP RPAREN
-- On RBRACK reduce production ml_name -> LPAREN PREFIXOP RPAREN
-- On RBRACE reduce production ml_name -> LPAREN PREFIXOP RPAREN
-- On QUOTED_STRING reduce production ml_name -> LPAREN PREFIXOP RPAREN
-- On QQMARK reduce production ml_name -> LPAREN PREFIXOP RPAREN
-- On PREFIXOP reduce production ml_name -> LPAREN PREFIXOP RPAREN
-- On OPERATION reduce production ml_name -> LPAREN PREFIXOP RPAREN
-- On OPEN reduce production ml_name -> LPAREN PREFIXOP RPAREN
-- On NAME reduce production ml_name -> LPAREN PREFIXOP RPAREN
-- On MODULE reduce production ml_name -> LPAREN PREFIXOP RPAREN
-- On MLUNIT reduce production ml_name -> LPAREN PREFIXOP RPAREN
-- On MLTYPE reduce production ml_name -> LPAREN PREFIXOP RPAREN
-- On MLSTRING reduce production ml_name -> LPAREN PREFIXOP RPAREN
-- On MLJUDGEMENT reduce production ml_name -> LPAREN PREFIXOP RPAREN
-- On MLDERIVATION reduce production ml_name -> LPAREN PREFIXOP RPAREN
-- On MLBOUNDARY reduce production ml_name -> LPAREN PREFIXOP RPAREN
-- On LPAREN reduce production ml_name -> LPAREN PREFIXOP RPAREN
-- On LET reduce production ml_name -> LPAREN PREFIXOP RPAREN
-- On LBRACK reduce production ml_name -> LPAREN PREFIXOP RPAREN
-- On INFIXOP4 reduce production ml_name -> LPAREN PREFIXOP RPAREN
-- On INFIXOP3 reduce production ml_name -> LPAREN PREFIXOP RPAREN
-- On INFIXOP2 reduce production ml_name -> LPAREN PREFIXOP RPAREN
-- On INFIXOP1 reduce production ml_name -> LPAREN PREFIXOP RPAREN
-- On INFIXOP0 reduce production ml_name -> LPAREN PREFIXOP RPAREN
-- On INFIXCONS reduce production ml_name -> LPAREN PREFIXOP RPAREN
-- On INCLUDE reduce production ml_name -> LPAREN PREFIXOP RPAREN
-- On EXTERNAL reduce production ml_name -> LPAREN PREFIXOP RPAREN
-- On EXCEPTION reduce production ml_name -> LPAREN PREFIXOP RPAREN
-- On EQEQ reduce production ml_name -> LPAREN PREFIXOP RPAREN
-- On EQ reduce production ml_name -> LPAREN PREFIXOP RPAREN
-- On EOF reduce production ml_name -> LPAREN PREFIXOP RPAREN
-- On END reduce production ml_name -> LPAREN PREFIXOP RPAREN
-- On DARROW reduce production ml_name -> LPAREN PREFIXOP RPAREN
-- On COMMA reduce production ml_name -> LPAREN PREFIXOP RPAREN
-- On COLONGT reduce production ml_name -> LPAREN PREFIXOP RPAREN
-- On COLON reduce production ml_name -> LPAREN PREFIXOP RPAREN
-- On BY reduce production ml_name -> LPAREN PREFIXOP RPAREN
-- On BAR reduce production ml_name -> LPAREN PREFIXOP RPAREN
-- On AS reduce production ml_name -> LPAREN PREFIXOP RPAREN
-- On ARROW reduce production ml_name -> LPAREN PREFIXOP RPAREN
-- On AND reduce production ml_name -> LPAREN PREFIXOP RPAREN

State 68:
ml_name -> LPAREN INFIXOP4 . RPAREN [ WITH WHEN VERBOSITY UNDERSCORE UATOM TYPE STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE QUOTED_STRING QQMARK PREFIXOP OPERATION OPEN NAME MODULE MLUNIT MLTYPE MLSTRING MLJUDGEMENT MLDERIVATION MLBOUNDARY LPAREN LET LBRACK INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE EXTERNAL EXCEPTION EQEQ EQ EOF END DARROW COMMA COLONGT COLON BY BAR AS ARROW AND ]
-- On RPAREN shift to state 69

State 69:
ml_name -> LPAREN INFIXOP4 RPAREN . [ WITH WHEN VERBOSITY UNDERSCORE UATOM TYPE STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE QUOTED_STRING QQMARK PREFIXOP OPERATION OPEN NAME MODULE MLUNIT MLTYPE MLSTRING MLJUDGEMENT MLDERIVATION MLBOUNDARY LPAREN LET LBRACK INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE EXTERNAL EXCEPTION EQEQ EQ EOF END DARROW COMMA COLONGT COLON BY BAR AS ARROW AND ]
-- On WITH reduce production ml_name -> LPAREN INFIXOP4 RPAREN
-- On WHEN reduce production ml_name -> LPAREN INFIXOP4 RPAREN
-- On VERBOSITY reduce production ml_name -> LPAREN INFIXOP4 RPAREN
-- On UNDERSCORE reduce production ml_name -> LPAREN INFIXOP4 RPAREN
-- On UATOM reduce production ml_name -> LPAREN INFIXOP4 RPAREN
-- On TYPE reduce production ml_name -> LPAREN INFIXOP4 RPAREN
-- On STAR reduce production ml_name -> LPAREN INFIXOP4 RPAREN
-- On SEMISEMI reduce production ml_name -> LPAREN INFIXOP4 RPAREN
-- On SEMI reduce production ml_name -> LPAREN INFIXOP4 RPAREN
-- On RULE reduce production ml_name -> LPAREN INFIXOP4 RPAREN
-- On RPAREN reduce production ml_name -> LPAREN INFIXOP4 RPAREN
-- On REQUIRE reduce production ml_name -> LPAREN INFIXOP4 RPAREN
-- On RBRACK reduce production ml_name -> LPAREN INFIXOP4 RPAREN
-- On RBRACE reduce production ml_name -> LPAREN INFIXOP4 RPAREN
-- On QUOTED_STRING reduce production ml_name -> LPAREN INFIXOP4 RPAREN
-- On QQMARK reduce production ml_name -> LPAREN INFIXOP4 RPAREN
-- On PREFIXOP reduce production ml_name -> LPAREN INFIXOP4 RPAREN
-- On OPERATION reduce production ml_name -> LPAREN INFIXOP4 RPAREN
-- On OPEN reduce production ml_name -> LPAREN INFIXOP4 RPAREN
-- On NAME reduce production ml_name -> LPAREN INFIXOP4 RPAREN
-- On MODULE reduce production ml_name -> LPAREN INFIXOP4 RPAREN
-- On MLUNIT reduce production ml_name -> LPAREN INFIXOP4 RPAREN
-- On MLTYPE reduce production ml_name -> LPAREN INFIXOP4 RPAREN
-- On MLSTRING reduce production ml_name -> LPAREN INFIXOP4 RPAREN
-- On MLJUDGEMENT reduce production ml_name -> LPAREN INFIXOP4 RPAREN
-- On MLDERIVATION reduce production ml_name -> LPAREN INFIXOP4 RPAREN
-- On MLBOUNDARY reduce production ml_name -> LPAREN INFIXOP4 RPAREN
-- On LPAREN reduce production ml_name -> LPAREN INFIXOP4 RPAREN
-- On LET reduce production ml_name -> LPAREN INFIXOP4 RPAREN
-- On LBRACK reduce production ml_name -> LPAREN INFIXOP4 RPAREN
-- On INFIXOP4 reduce production ml_name -> LPAREN INFIXOP4 RPAREN
-- On INFIXOP3 reduce production ml_name -> LPAREN INFIXOP4 RPAREN
-- On INFIXOP2 reduce production ml_name -> LPAREN INFIXOP4 RPAREN
-- On INFIXOP1 reduce production ml_name -> LPAREN INFIXOP4 RPAREN
-- On INFIXOP0 reduce production ml_name -> LPAREN INFIXOP4 RPAREN
-- On INFIXCONS reduce production ml_name -> LPAREN INFIXOP4 RPAREN
-- On INCLUDE reduce production ml_name -> LPAREN INFIXOP4 RPAREN
-- On EXTERNAL reduce production ml_name -> LPAREN INFIXOP4 RPAREN
-- On EXCEPTION reduce production ml_name -> LPAREN INFIXOP4 RPAREN
-- On EQEQ reduce production ml_name -> LPAREN INFIXOP4 RPAREN
-- On EQ reduce production ml_name -> LPAREN INFIXOP4 RPAREN
-- On EOF reduce production ml_name -> LPAREN INFIXOP4 RPAREN
-- On END reduce production ml_name -> LPAREN INFIXOP4 RPAREN
-- On DARROW reduce production ml_name -> LPAREN INFIXOP4 RPAREN
-- On COMMA reduce production ml_name -> LPAREN INFIXOP4 RPAREN
-- On COLONGT reduce production ml_name -> LPAREN INFIXOP4 RPAREN
-- On COLON reduce production ml_name -> LPAREN INFIXOP4 RPAREN
-- On BY reduce production ml_name -> LPAREN INFIXOP4 RPAREN
-- On BAR reduce production ml_name -> LPAREN INFIXOP4 RPAREN
-- On AS reduce production ml_name -> LPAREN INFIXOP4 RPAREN
-- On ARROW reduce production ml_name -> LPAREN INFIXOP4 RPAREN
-- On AND reduce production ml_name -> LPAREN INFIXOP4 RPAREN

State 70:
ml_name -> LPAREN INFIXOP3 . RPAREN [ WITH WHEN VERBOSITY UNDERSCORE UATOM TYPE STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE QUOTED_STRING QQMARK PREFIXOP OPERATION OPEN NAME MODULE MLUNIT MLTYPE MLSTRING MLJUDGEMENT MLDERIVATION MLBOUNDARY LPAREN LET LBRACK INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE EXTERNAL EXCEPTION EQEQ EQ EOF END DARROW COMMA COLONGT COLON BY BAR AS ARROW AND ]
-- On RPAREN shift to state 71

State 71:
ml_name -> LPAREN INFIXOP3 RPAREN . [ WITH WHEN VERBOSITY UNDERSCORE UATOM TYPE STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE QUOTED_STRING QQMARK PREFIXOP OPERATION OPEN NAME MODULE MLUNIT MLTYPE MLSTRING MLJUDGEMENT MLDERIVATION MLBOUNDARY LPAREN LET LBRACK INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE EXTERNAL EXCEPTION EQEQ EQ EOF END DARROW COMMA COLONGT COLON BY BAR AS ARROW AND ]
-- On WITH reduce production ml_name -> LPAREN INFIXOP3 RPAREN
-- On WHEN reduce production ml_name -> LPAREN INFIXOP3 RPAREN
-- On VERBOSITY reduce production ml_name -> LPAREN INFIXOP3 RPAREN
-- On UNDERSCORE reduce production ml_name -> LPAREN INFIXOP3 RPAREN
-- On UATOM reduce production ml_name -> LPAREN INFIXOP3 RPAREN
-- On TYPE reduce production ml_name -> LPAREN INFIXOP3 RPAREN
-- On STAR reduce production ml_name -> LPAREN INFIXOP3 RPAREN
-- On SEMISEMI reduce production ml_name -> LPAREN INFIXOP3 RPAREN
-- On SEMI reduce production ml_name -> LPAREN INFIXOP3 RPAREN
-- On RULE reduce production ml_name -> LPAREN INFIXOP3 RPAREN
-- On RPAREN reduce production ml_name -> LPAREN INFIXOP3 RPAREN
-- On REQUIRE reduce production ml_name -> LPAREN INFIXOP3 RPAREN
-- On RBRACK reduce production ml_name -> LPAREN INFIXOP3 RPAREN
-- On RBRACE reduce production ml_name -> LPAREN INFIXOP3 RPAREN
-- On QUOTED_STRING reduce production ml_name -> LPAREN INFIXOP3 RPAREN
-- On QQMARK reduce production ml_name -> LPAREN INFIXOP3 RPAREN
-- On PREFIXOP reduce production ml_name -> LPAREN INFIXOP3 RPAREN
-- On OPERATION reduce production ml_name -> LPAREN INFIXOP3 RPAREN
-- On OPEN reduce production ml_name -> LPAREN INFIXOP3 RPAREN
-- On NAME reduce production ml_name -> LPAREN INFIXOP3 RPAREN
-- On MODULE reduce production ml_name -> LPAREN INFIXOP3 RPAREN
-- On MLUNIT reduce production ml_name -> LPAREN INFIXOP3 RPAREN
-- On MLTYPE reduce production ml_name -> LPAREN INFIXOP3 RPAREN
-- On MLSTRING reduce production ml_name -> LPAREN INFIXOP3 RPAREN
-- On MLJUDGEMENT reduce production ml_name -> LPAREN INFIXOP3 RPAREN
-- On MLDERIVATION reduce production ml_name -> LPAREN INFIXOP3 RPAREN
-- On MLBOUNDARY reduce production ml_name -> LPAREN INFIXOP3 RPAREN
-- On LPAREN reduce production ml_name -> LPAREN INFIXOP3 RPAREN
-- On LET reduce production ml_name -> LPAREN INFIXOP3 RPAREN
-- On LBRACK reduce production ml_name -> LPAREN INFIXOP3 RPAREN
-- On INFIXOP4 reduce production ml_name -> LPAREN INFIXOP3 RPAREN
-- On INFIXOP3 reduce production ml_name -> LPAREN INFIXOP3 RPAREN
-- On INFIXOP2 reduce production ml_name -> LPAREN INFIXOP3 RPAREN
-- On INFIXOP1 reduce production ml_name -> LPAREN INFIXOP3 RPAREN
-- On INFIXOP0 reduce production ml_name -> LPAREN INFIXOP3 RPAREN
-- On INFIXCONS reduce production ml_name -> LPAREN INFIXOP3 RPAREN
-- On INCLUDE reduce production ml_name -> LPAREN INFIXOP3 RPAREN
-- On EXTERNAL reduce production ml_name -> LPAREN INFIXOP3 RPAREN
-- On EXCEPTION reduce production ml_name -> LPAREN INFIXOP3 RPAREN
-- On EQEQ reduce production ml_name -> LPAREN INFIXOP3 RPAREN
-- On EQ reduce production ml_name -> LPAREN INFIXOP3 RPAREN
-- On EOF reduce production ml_name -> LPAREN INFIXOP3 RPAREN
-- On END reduce production ml_name -> LPAREN INFIXOP3 RPAREN
-- On DARROW reduce production ml_name -> LPAREN INFIXOP3 RPAREN
-- On COMMA reduce production ml_name -> LPAREN INFIXOP3 RPAREN
-- On COLONGT reduce production ml_name -> LPAREN INFIXOP3 RPAREN
-- On COLON reduce production ml_name -> LPAREN INFIXOP3 RPAREN
-- On BY reduce production ml_name -> LPAREN INFIXOP3 RPAREN
-- On BAR reduce production ml_name -> LPAREN INFIXOP3 RPAREN
-- On AS reduce production ml_name -> LPAREN INFIXOP3 RPAREN
-- On ARROW reduce production ml_name -> LPAREN INFIXOP3 RPAREN
-- On AND reduce production ml_name -> LPAREN INFIXOP3 RPAREN

State 72:
ml_name -> LPAREN INFIXOP2 . RPAREN [ WITH WHEN VERBOSITY UNDERSCORE UATOM TYPE STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE QUOTED_STRING QQMARK PREFIXOP OPERATION OPEN NAME MODULE MLUNIT MLTYPE MLSTRING MLJUDGEMENT MLDERIVATION MLBOUNDARY LPAREN LET LBRACK INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE EXTERNAL EXCEPTION EQEQ EQ EOF END DARROW COMMA COLONGT COLON BY BAR AS ARROW AND ]
-- On RPAREN shift to state 73

State 73:
ml_name -> LPAREN INFIXOP2 RPAREN . [ WITH WHEN VERBOSITY UNDERSCORE UATOM TYPE STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE QUOTED_STRING QQMARK PREFIXOP OPERATION OPEN NAME MODULE MLUNIT MLTYPE MLSTRING MLJUDGEMENT MLDERIVATION MLBOUNDARY LPAREN LET LBRACK INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE EXTERNAL EXCEPTION EQEQ EQ EOF END DARROW COMMA COLONGT COLON BY BAR AS ARROW AND ]
-- On WITH reduce production ml_name -> LPAREN INFIXOP2 RPAREN
-- On WHEN reduce production ml_name -> LPAREN INFIXOP2 RPAREN
-- On VERBOSITY reduce production ml_name -> LPAREN INFIXOP2 RPAREN
-- On UNDERSCORE reduce production ml_name -> LPAREN INFIXOP2 RPAREN
-- On UATOM reduce production ml_name -> LPAREN INFIXOP2 RPAREN
-- On TYPE reduce production ml_name -> LPAREN INFIXOP2 RPAREN
-- On STAR reduce production ml_name -> LPAREN INFIXOP2 RPAREN
-- On SEMISEMI reduce production ml_name -> LPAREN INFIXOP2 RPAREN
-- On SEMI reduce production ml_name -> LPAREN INFIXOP2 RPAREN
-- On RULE reduce production ml_name -> LPAREN INFIXOP2 RPAREN
-- On RPAREN reduce production ml_name -> LPAREN INFIXOP2 RPAREN
-- On REQUIRE reduce production ml_name -> LPAREN INFIXOP2 RPAREN
-- On RBRACK reduce production ml_name -> LPAREN INFIXOP2 RPAREN
-- On RBRACE reduce production ml_name -> LPAREN INFIXOP2 RPAREN
-- On QUOTED_STRING reduce production ml_name -> LPAREN INFIXOP2 RPAREN
-- On QQMARK reduce production ml_name -> LPAREN INFIXOP2 RPAREN
-- On PREFIXOP reduce production ml_name -> LPAREN INFIXOP2 RPAREN
-- On OPERATION reduce production ml_name -> LPAREN INFIXOP2 RPAREN
-- On OPEN reduce production ml_name -> LPAREN INFIXOP2 RPAREN
-- On NAME reduce production ml_name -> LPAREN INFIXOP2 RPAREN
-- On MODULE reduce production ml_name -> LPAREN INFIXOP2 RPAREN
-- On MLUNIT reduce production ml_name -> LPAREN INFIXOP2 RPAREN
-- On MLTYPE reduce production ml_name -> LPAREN INFIXOP2 RPAREN
-- On MLSTRING reduce production ml_name -> LPAREN INFIXOP2 RPAREN
-- On MLJUDGEMENT reduce production ml_name -> LPAREN INFIXOP2 RPAREN
-- On MLDERIVATION reduce production ml_name -> LPAREN INFIXOP2 RPAREN
-- On MLBOUNDARY reduce production ml_name -> LPAREN INFIXOP2 RPAREN
-- On LPAREN reduce production ml_name -> LPAREN INFIXOP2 RPAREN
-- On LET reduce production ml_name -> LPAREN INFIXOP2 RPAREN
-- On LBRACK reduce production ml_name -> LPAREN INFIXOP2 RPAREN
-- On INFIXOP4 reduce production ml_name -> LPAREN INFIXOP2 RPAREN
-- On INFIXOP3 reduce production ml_name -> LPAREN INFIXOP2 RPAREN
-- On INFIXOP2 reduce production ml_name -> LPAREN INFIXOP2 RPAREN
-- On INFIXOP1 reduce production ml_name -> LPAREN INFIXOP2 RPAREN
-- On INFIXOP0 reduce production ml_name -> LPAREN INFIXOP2 RPAREN
-- On INFIXCONS reduce production ml_name -> LPAREN INFIXOP2 RPAREN
-- On INCLUDE reduce production ml_name -> LPAREN INFIXOP2 RPAREN
-- On EXTERNAL reduce production ml_name -> LPAREN INFIXOP2 RPAREN
-- On EXCEPTION reduce production ml_name -> LPAREN INFIXOP2 RPAREN
-- On EQEQ reduce production ml_name -> LPAREN INFIXOP2 RPAREN
-- On EQ reduce production ml_name -> LPAREN INFIXOP2 RPAREN
-- On EOF reduce production ml_name -> LPAREN INFIXOP2 RPAREN
-- On END reduce production ml_name -> LPAREN INFIXOP2 RPAREN
-- On DARROW reduce production ml_name -> LPAREN INFIXOP2 RPAREN
-- On COMMA reduce production ml_name -> LPAREN INFIXOP2 RPAREN
-- On COLONGT reduce production ml_name -> LPAREN INFIXOP2 RPAREN
-- On COLON reduce production ml_name -> LPAREN INFIXOP2 RPAREN
-- On BY reduce production ml_name -> LPAREN INFIXOP2 RPAREN
-- On BAR reduce production ml_name -> LPAREN INFIXOP2 RPAREN
-- On AS reduce production ml_name -> LPAREN INFIXOP2 RPAREN
-- On ARROW reduce production ml_name -> LPAREN INFIXOP2 RPAREN
-- On AND reduce production ml_name -> LPAREN INFIXOP2 RPAREN

State 74:
ml_name -> LPAREN INFIXOP1 . RPAREN [ WITH WHEN VERBOSITY UNDERSCORE UATOM TYPE STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE QUOTED_STRING QQMARK PREFIXOP OPERATION OPEN NAME MODULE MLUNIT MLTYPE MLSTRING MLJUDGEMENT MLDERIVATION MLBOUNDARY LPAREN LET LBRACK INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE EXTERNAL EXCEPTION EQEQ EQ EOF END DARROW COMMA COLONGT COLON BY BAR AS ARROW AND ]
-- On RPAREN shift to state 75

State 75:
ml_name -> LPAREN INFIXOP1 RPAREN . [ WITH WHEN VERBOSITY UNDERSCORE UATOM TYPE STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE QUOTED_STRING QQMARK PREFIXOP OPERATION OPEN NAME MODULE MLUNIT MLTYPE MLSTRING MLJUDGEMENT MLDERIVATION MLBOUNDARY LPAREN LET LBRACK INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE EXTERNAL EXCEPTION EQEQ EQ EOF END DARROW COMMA COLONGT COLON BY BAR AS ARROW AND ]
-- On WITH reduce production ml_name -> LPAREN INFIXOP1 RPAREN
-- On WHEN reduce production ml_name -> LPAREN INFIXOP1 RPAREN
-- On VERBOSITY reduce production ml_name -> LPAREN INFIXOP1 RPAREN
-- On UNDERSCORE reduce production ml_name -> LPAREN INFIXOP1 RPAREN
-- On UATOM reduce production ml_name -> LPAREN INFIXOP1 RPAREN
-- On TYPE reduce production ml_name -> LPAREN INFIXOP1 RPAREN
-- On STAR reduce production ml_name -> LPAREN INFIXOP1 RPAREN
-- On SEMISEMI reduce production ml_name -> LPAREN INFIXOP1 RPAREN
-- On SEMI reduce production ml_name -> LPAREN INFIXOP1 RPAREN
-- On RULE reduce production ml_name -> LPAREN INFIXOP1 RPAREN
-- On RPAREN reduce production ml_name -> LPAREN INFIXOP1 RPAREN
-- On REQUIRE reduce production ml_name -> LPAREN INFIXOP1 RPAREN
-- On RBRACK reduce production ml_name -> LPAREN INFIXOP1 RPAREN
-- On RBRACE reduce production ml_name -> LPAREN INFIXOP1 RPAREN
-- On QUOTED_STRING reduce production ml_name -> LPAREN INFIXOP1 RPAREN
-- On QQMARK reduce production ml_name -> LPAREN INFIXOP1 RPAREN
-- On PREFIXOP reduce production ml_name -> LPAREN INFIXOP1 RPAREN
-- On OPERATION reduce production ml_name -> LPAREN INFIXOP1 RPAREN
-- On OPEN reduce production ml_name -> LPAREN INFIXOP1 RPAREN
-- On NAME reduce production ml_name -> LPAREN INFIXOP1 RPAREN
-- On MODULE reduce production ml_name -> LPAREN INFIXOP1 RPAREN
-- On MLUNIT reduce production ml_name -> LPAREN INFIXOP1 RPAREN
-- On MLTYPE reduce production ml_name -> LPAREN INFIXOP1 RPAREN
-- On MLSTRING reduce production ml_name -> LPAREN INFIXOP1 RPAREN
-- On MLJUDGEMENT reduce production ml_name -> LPAREN INFIXOP1 RPAREN
-- On MLDERIVATION reduce production ml_name -> LPAREN INFIXOP1 RPAREN
-- On MLBOUNDARY reduce production ml_name -> LPAREN INFIXOP1 RPAREN
-- On LPAREN reduce production ml_name -> LPAREN INFIXOP1 RPAREN
-- On LET reduce production ml_name -> LPAREN INFIXOP1 RPAREN
-- On LBRACK reduce production ml_name -> LPAREN INFIXOP1 RPAREN
-- On INFIXOP4 reduce production ml_name -> LPAREN INFIXOP1 RPAREN
-- On INFIXOP3 reduce production ml_name -> LPAREN INFIXOP1 RPAREN
-- On INFIXOP2 reduce production ml_name -> LPAREN INFIXOP1 RPAREN
-- On INFIXOP1 reduce production ml_name -> LPAREN INFIXOP1 RPAREN
-- On INFIXOP0 reduce production ml_name -> LPAREN INFIXOP1 RPAREN
-- On INFIXCONS reduce production ml_name -> LPAREN INFIXOP1 RPAREN
-- On INCLUDE reduce production ml_name -> LPAREN INFIXOP1 RPAREN
-- On EXTERNAL reduce production ml_name -> LPAREN INFIXOP1 RPAREN
-- On EXCEPTION reduce production ml_name -> LPAREN INFIXOP1 RPAREN
-- On EQEQ reduce production ml_name -> LPAREN INFIXOP1 RPAREN
-- On EQ reduce production ml_name -> LPAREN INFIXOP1 RPAREN
-- On EOF reduce production ml_name -> LPAREN INFIXOP1 RPAREN
-- On END reduce production ml_name -> LPAREN INFIXOP1 RPAREN
-- On DARROW reduce production ml_name -> LPAREN INFIXOP1 RPAREN
-- On COMMA reduce production ml_name -> LPAREN INFIXOP1 RPAREN
-- On COLONGT reduce production ml_name -> LPAREN INFIXOP1 RPAREN
-- On COLON reduce production ml_name -> LPAREN INFIXOP1 RPAREN
-- On BY reduce production ml_name -> LPAREN INFIXOP1 RPAREN
-- On BAR reduce production ml_name -> LPAREN INFIXOP1 RPAREN
-- On AS reduce production ml_name -> LPAREN INFIXOP1 RPAREN
-- On ARROW reduce production ml_name -> LPAREN INFIXOP1 RPAREN
-- On AND reduce production ml_name -> LPAREN INFIXOP1 RPAREN

State 76:
ml_name -> LPAREN INFIXOP0 . RPAREN [ WITH WHEN VERBOSITY UNDERSCORE UATOM TYPE STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE QUOTED_STRING QQMARK PREFIXOP OPERATION OPEN NAME MODULE MLUNIT MLTYPE MLSTRING MLJUDGEMENT MLDERIVATION MLBOUNDARY LPAREN LET LBRACK INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE EXTERNAL EXCEPTION EQEQ EQ EOF END DARROW COMMA COLONGT COLON BY BAR AS ARROW AND ]
-- On RPAREN shift to state 77

State 77:
ml_name -> LPAREN INFIXOP0 RPAREN . [ WITH WHEN VERBOSITY UNDERSCORE UATOM TYPE STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE QUOTED_STRING QQMARK PREFIXOP OPERATION OPEN NAME MODULE MLUNIT MLTYPE MLSTRING MLJUDGEMENT MLDERIVATION MLBOUNDARY LPAREN LET LBRACK INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE EXTERNAL EXCEPTION EQEQ EQ EOF END DARROW COMMA COLONGT COLON BY BAR AS ARROW AND ]
-- On WITH reduce production ml_name -> LPAREN INFIXOP0 RPAREN
-- On WHEN reduce production ml_name -> LPAREN INFIXOP0 RPAREN
-- On VERBOSITY reduce production ml_name -> LPAREN INFIXOP0 RPAREN
-- On UNDERSCORE reduce production ml_name -> LPAREN INFIXOP0 RPAREN
-- On UATOM reduce production ml_name -> LPAREN INFIXOP0 RPAREN
-- On TYPE reduce production ml_name -> LPAREN INFIXOP0 RPAREN
-- On STAR reduce production ml_name -> LPAREN INFIXOP0 RPAREN
-- On SEMISEMI reduce production ml_name -> LPAREN INFIXOP0 RPAREN
-- On SEMI reduce production ml_name -> LPAREN INFIXOP0 RPAREN
-- On RULE reduce production ml_name -> LPAREN INFIXOP0 RPAREN
-- On RPAREN reduce production ml_name -> LPAREN INFIXOP0 RPAREN
-- On REQUIRE reduce production ml_name -> LPAREN INFIXOP0 RPAREN
-- On RBRACK reduce production ml_name -> LPAREN INFIXOP0 RPAREN
-- On RBRACE reduce production ml_name -> LPAREN INFIXOP0 RPAREN
-- On QUOTED_STRING reduce production ml_name -> LPAREN INFIXOP0 RPAREN
-- On QQMARK reduce production ml_name -> LPAREN INFIXOP0 RPAREN
-- On PREFIXOP reduce production ml_name -> LPAREN INFIXOP0 RPAREN
-- On OPERATION reduce production ml_name -> LPAREN INFIXOP0 RPAREN
-- On OPEN reduce production ml_name -> LPAREN INFIXOP0 RPAREN
-- On NAME reduce production ml_name -> LPAREN INFIXOP0 RPAREN
-- On MODULE reduce production ml_name -> LPAREN INFIXOP0 RPAREN
-- On MLUNIT reduce production ml_name -> LPAREN INFIXOP0 RPAREN
-- On MLTYPE reduce production ml_name -> LPAREN INFIXOP0 RPAREN
-- On MLSTRING reduce production ml_name -> LPAREN INFIXOP0 RPAREN
-- On MLJUDGEMENT reduce production ml_name -> LPAREN INFIXOP0 RPAREN
-- On MLDERIVATION reduce production ml_name -> LPAREN INFIXOP0 RPAREN
-- On MLBOUNDARY reduce production ml_name -> LPAREN INFIXOP0 RPAREN
-- On LPAREN reduce production ml_name -> LPAREN INFIXOP0 RPAREN
-- On LET reduce production ml_name -> LPAREN INFIXOP0 RPAREN
-- On LBRACK reduce production ml_name -> LPAREN INFIXOP0 RPAREN
-- On INFIXOP4 reduce production ml_name -> LPAREN INFIXOP0 RPAREN
-- On INFIXOP3 reduce production ml_name -> LPAREN INFIXOP0 RPAREN
-- On INFIXOP2 reduce production ml_name -> LPAREN INFIXOP0 RPAREN
-- On INFIXOP1 reduce production ml_name -> LPAREN INFIXOP0 RPAREN
-- On INFIXOP0 reduce production ml_name -> LPAREN INFIXOP0 RPAREN
-- On INFIXCONS reduce production ml_name -> LPAREN INFIXOP0 RPAREN
-- On INCLUDE reduce production ml_name -> LPAREN INFIXOP0 RPAREN
-- On EXTERNAL reduce production ml_name -> LPAREN INFIXOP0 RPAREN
-- On EXCEPTION reduce production ml_name -> LPAREN INFIXOP0 RPAREN
-- On EQEQ reduce production ml_name -> LPAREN INFIXOP0 RPAREN
-- On EQ reduce production ml_name -> LPAREN INFIXOP0 RPAREN
-- On EOF reduce production ml_name -> LPAREN INFIXOP0 RPAREN
-- On END reduce production ml_name -> LPAREN INFIXOP0 RPAREN
-- On DARROW reduce production ml_name -> LPAREN INFIXOP0 RPAREN
-- On COMMA reduce production ml_name -> LPAREN INFIXOP0 RPAREN
-- On COLONGT reduce production ml_name -> LPAREN INFIXOP0 RPAREN
-- On COLON reduce production ml_name -> LPAREN INFIXOP0 RPAREN
-- On BY reduce production ml_name -> LPAREN INFIXOP0 RPAREN
-- On BAR reduce production ml_name -> LPAREN INFIXOP0 RPAREN
-- On AS reduce production ml_name -> LPAREN INFIXOP0 RPAREN
-- On ARROW reduce production ml_name -> LPAREN INFIXOP0 RPAREN
-- On AND reduce production ml_name -> LPAREN INFIXOP0 RPAREN

State 78:
ml_name -> LPAREN INFIXCONS . RPAREN [ WITH WHEN VERBOSITY UNDERSCORE UATOM TYPE STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE QUOTED_STRING QQMARK PREFIXOP OPERATION OPEN NAME MODULE MLUNIT MLTYPE MLSTRING MLJUDGEMENT MLDERIVATION MLBOUNDARY LPAREN LET LBRACK INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE EXTERNAL EXCEPTION EQEQ EQ EOF END DARROW COMMA COLONGT COLON BY BAR AS ARROW AND ]
-- On RPAREN shift to state 79

State 79:
ml_name -> LPAREN INFIXCONS RPAREN . [ WITH WHEN VERBOSITY UNDERSCORE UATOM TYPE STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE QUOTED_STRING QQMARK PREFIXOP OPERATION OPEN NAME MODULE MLUNIT MLTYPE MLSTRING MLJUDGEMENT MLDERIVATION MLBOUNDARY LPAREN LET LBRACK INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE EXTERNAL EXCEPTION EQEQ EQ EOF END DARROW COMMA COLONGT COLON BY BAR AS ARROW AND ]
-- On WITH reduce production ml_name -> LPAREN INFIXCONS RPAREN
-- On WHEN reduce production ml_name -> LPAREN INFIXCONS RPAREN
-- On VERBOSITY reduce production ml_name -> LPAREN INFIXCONS RPAREN
-- On UNDERSCORE reduce production ml_name -> LPAREN INFIXCONS RPAREN
-- On UATOM reduce production ml_name -> LPAREN INFIXCONS RPAREN
-- On TYPE reduce production ml_name -> LPAREN INFIXCONS RPAREN
-- On STAR reduce production ml_name -> LPAREN INFIXCONS RPAREN
-- On SEMISEMI reduce production ml_name -> LPAREN INFIXCONS RPAREN
-- On SEMI reduce production ml_name -> LPAREN INFIXCONS RPAREN
-- On RULE reduce production ml_name -> LPAREN INFIXCONS RPAREN
-- On RPAREN reduce production ml_name -> LPAREN INFIXCONS RPAREN
-- On REQUIRE reduce production ml_name -> LPAREN INFIXCONS RPAREN
-- On RBRACK reduce production ml_name -> LPAREN INFIXCONS RPAREN
-- On RBRACE reduce production ml_name -> LPAREN INFIXCONS RPAREN
-- On QUOTED_STRING reduce production ml_name -> LPAREN INFIXCONS RPAREN
-- On QQMARK reduce production ml_name -> LPAREN INFIXCONS RPAREN
-- On PREFIXOP reduce production ml_name -> LPAREN INFIXCONS RPAREN
-- On OPERATION reduce production ml_name -> LPAREN INFIXCONS RPAREN
-- On OPEN reduce production ml_name -> LPAREN INFIXCONS RPAREN
-- On NAME reduce production ml_name -> LPAREN INFIXCONS RPAREN
-- On MODULE reduce production ml_name -> LPAREN INFIXCONS RPAREN
-- On MLUNIT reduce production ml_name -> LPAREN INFIXCONS RPAREN
-- On MLTYPE reduce production ml_name -> LPAREN INFIXCONS RPAREN
-- On MLSTRING reduce production ml_name -> LPAREN INFIXCONS RPAREN
-- On MLJUDGEMENT reduce production ml_name -> LPAREN INFIXCONS RPAREN
-- On MLDERIVATION reduce production ml_name -> LPAREN INFIXCONS RPAREN
-- On MLBOUNDARY reduce production ml_name -> LPAREN INFIXCONS RPAREN
-- On LPAREN reduce production ml_name -> LPAREN INFIXCONS RPAREN
-- On LET reduce production ml_name -> LPAREN INFIXCONS RPAREN
-- On LBRACK reduce production ml_name -> LPAREN INFIXCONS RPAREN
-- On INFIXOP4 reduce production ml_name -> LPAREN INFIXCONS RPAREN
-- On INFIXOP3 reduce production ml_name -> LPAREN INFIXCONS RPAREN
-- On INFIXOP2 reduce production ml_name -> LPAREN INFIXCONS RPAREN
-- On INFIXOP1 reduce production ml_name -> LPAREN INFIXCONS RPAREN
-- On INFIXOP0 reduce production ml_name -> LPAREN INFIXCONS RPAREN
-- On INFIXCONS reduce production ml_name -> LPAREN INFIXCONS RPAREN
-- On INCLUDE reduce production ml_name -> LPAREN INFIXCONS RPAREN
-- On EXTERNAL reduce production ml_name -> LPAREN INFIXCONS RPAREN
-- On EXCEPTION reduce production ml_name -> LPAREN INFIXCONS RPAREN
-- On EQEQ reduce production ml_name -> LPAREN INFIXCONS RPAREN
-- On EQ reduce production ml_name -> LPAREN INFIXCONS RPAREN
-- On EOF reduce production ml_name -> LPAREN INFIXCONS RPAREN
-- On END reduce production ml_name -> LPAREN INFIXCONS RPAREN
-- On DARROW reduce production ml_name -> LPAREN INFIXCONS RPAREN
-- On COMMA reduce production ml_name -> LPAREN INFIXCONS RPAREN
-- On COLONGT reduce production ml_name -> LPAREN INFIXCONS RPAREN
-- On COLON reduce production ml_name -> LPAREN INFIXCONS RPAREN
-- On BY reduce production ml_name -> LPAREN INFIXCONS RPAREN
-- On BAR reduce production ml_name -> LPAREN INFIXCONS RPAREN
-- On AS reduce production ml_name -> LPAREN INFIXCONS RPAREN
-- On ARROW reduce production ml_name -> LPAREN INFIXCONS RPAREN
-- On AND reduce production ml_name -> LPAREN INFIXCONS RPAREN

State 80:
ml_name -> LPAREN EQ . RPAREN [ WITH WHEN VERBOSITY UNDERSCORE UATOM TYPE STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE QUOTED_STRING QQMARK PREFIXOP OPERATION OPEN NAME MODULE MLUNIT MLTYPE MLSTRING MLJUDGEMENT MLDERIVATION MLBOUNDARY LPAREN LET LBRACK INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE EXTERNAL EXCEPTION EQEQ EQ EOF END DARROW COMMA COLONGT COLON BY BAR AS ARROW AND ]
-- On RPAREN shift to state 81

State 81:
ml_name -> LPAREN EQ RPAREN . [ WITH WHEN VERBOSITY UNDERSCORE UATOM TYPE STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE QUOTED_STRING QQMARK PREFIXOP OPERATION OPEN NAME MODULE MLUNIT MLTYPE MLSTRING MLJUDGEMENT MLDERIVATION MLBOUNDARY LPAREN LET LBRACK INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE EXTERNAL EXCEPTION EQEQ EQ EOF END DARROW COMMA COLONGT COLON BY BAR AS ARROW AND ]
-- On WITH reduce production ml_name -> LPAREN EQ RPAREN
-- On WHEN reduce production ml_name -> LPAREN EQ RPAREN
-- On VERBOSITY reduce production ml_name -> LPAREN EQ RPAREN
-- On UNDERSCORE reduce production ml_name -> LPAREN EQ RPAREN
-- On UATOM reduce production ml_name -> LPAREN EQ RPAREN
-- On TYPE reduce production ml_name -> LPAREN EQ RPAREN
-- On STAR reduce production ml_name -> LPAREN EQ RPAREN
-- On SEMISEMI reduce production ml_name -> LPAREN EQ RPAREN
-- On SEMI reduce production ml_name -> LPAREN EQ RPAREN
-- On RULE reduce production ml_name -> LPAREN EQ RPAREN
-- On RPAREN reduce production ml_name -> LPAREN EQ RPAREN
-- On REQUIRE reduce production ml_name -> LPAREN EQ RPAREN
-- On RBRACK reduce production ml_name -> LPAREN EQ RPAREN
-- On RBRACE reduce production ml_name -> LPAREN EQ RPAREN
-- On QUOTED_STRING reduce production ml_name -> LPAREN EQ RPAREN
-- On QQMARK reduce production ml_name -> LPAREN EQ RPAREN
-- On PREFIXOP reduce production ml_name -> LPAREN EQ RPAREN
-- On OPERATION reduce production ml_name -> LPAREN EQ RPAREN
-- On OPEN reduce production ml_name -> LPAREN EQ RPAREN
-- On NAME reduce production ml_name -> LPAREN EQ RPAREN
-- On MODULE reduce production ml_name -> LPAREN EQ RPAREN
-- On MLUNIT reduce production ml_name -> LPAREN EQ RPAREN
-- On MLTYPE reduce production ml_name -> LPAREN EQ RPAREN
-- On MLSTRING reduce production ml_name -> LPAREN EQ RPAREN
-- On MLJUDGEMENT reduce production ml_name -> LPAREN EQ RPAREN
-- On MLDERIVATION reduce production ml_name -> LPAREN EQ RPAREN
-- On MLBOUNDARY reduce production ml_name -> LPAREN EQ RPAREN
-- On LPAREN reduce production ml_name -> LPAREN EQ RPAREN
-- On LET reduce production ml_name -> LPAREN EQ RPAREN
-- On LBRACK reduce production ml_name -> LPAREN EQ RPAREN
-- On INFIXOP4 reduce production ml_name -> LPAREN EQ RPAREN
-- On INFIXOP3 reduce production ml_name -> LPAREN EQ RPAREN
-- On INFIXOP2 reduce production ml_name -> LPAREN EQ RPAREN
-- On INFIXOP1 reduce production ml_name -> LPAREN EQ RPAREN
-- On INFIXOP0 reduce production ml_name -> LPAREN EQ RPAREN
-- On INFIXCONS reduce production ml_name -> LPAREN EQ RPAREN
-- On INCLUDE reduce production ml_name -> LPAREN EQ RPAREN
-- On EXTERNAL reduce production ml_name -> LPAREN EQ RPAREN
-- On EXCEPTION reduce production ml_name -> LPAREN EQ RPAREN
-- On EQEQ reduce production ml_name -> LPAREN EQ RPAREN
-- On EQ reduce production ml_name -> LPAREN EQ RPAREN
-- On EOF reduce production ml_name -> LPAREN EQ RPAREN
-- On END reduce production ml_name -> LPAREN EQ RPAREN
-- On DARROW reduce production ml_name -> LPAREN EQ RPAREN
-- On COMMA reduce production ml_name -> LPAREN EQ RPAREN
-- On COLONGT reduce production ml_name -> LPAREN EQ RPAREN
-- On COLON reduce production ml_name -> LPAREN EQ RPAREN
-- On BY reduce production ml_name -> LPAREN EQ RPAREN
-- On BAR reduce production ml_name -> LPAREN EQ RPAREN
-- On AS reduce production ml_name -> LPAREN EQ RPAREN
-- On ARROW reduce production ml_name -> LPAREN EQ RPAREN
-- On AND reduce production ml_name -> LPAREN EQ RPAREN

State 82:
app_mlty_ -> simple_mlty_ . [ WITH WHEN VERBOSITY STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN MODULE MLTYPE LET INCLUDE EXTERNAL EXCEPTION EQ EOF END DARROW COMMA BAR ARROW AND ]
-- On WITH reduce production app_mlty_ -> simple_mlty_
-- On WHEN reduce production app_mlty_ -> simple_mlty_
-- On VERBOSITY reduce production app_mlty_ -> simple_mlty_
-- On STAR reduce production app_mlty_ -> simple_mlty_
-- On SEMISEMI reduce production app_mlty_ -> simple_mlty_
-- On SEMI reduce production app_mlty_ -> simple_mlty_
-- On RULE reduce production app_mlty_ -> simple_mlty_
-- On RPAREN reduce production app_mlty_ -> simple_mlty_
-- On REQUIRE reduce production app_mlty_ -> simple_mlty_
-- On RBRACK reduce production app_mlty_ -> simple_mlty_
-- On RBRACE reduce production app_mlty_ -> simple_mlty_
-- On OPERATION reduce production app_mlty_ -> simple_mlty_
-- On OPEN reduce production app_mlty_ -> simple_mlty_
-- On MODULE reduce production app_mlty_ -> simple_mlty_
-- On MLTYPE reduce production app_mlty_ -> simple_mlty_
-- On LET reduce production app_mlty_ -> simple_mlty_
-- On INCLUDE reduce production app_mlty_ -> simple_mlty_
-- On EXTERNAL reduce production app_mlty_ -> simple_mlty_
-- On EXCEPTION reduce production app_mlty_ -> simple_mlty_
-- On EQ reduce production app_mlty_ -> simple_mlty_
-- On EOF reduce production app_mlty_ -> simple_mlty_
-- On END reduce production app_mlty_ -> simple_mlty_
-- On DARROW reduce production app_mlty_ -> simple_mlty_
-- On COMMA reduce production app_mlty_ -> simple_mlty_
-- On BAR reduce production app_mlty_ -> simple_mlty_
-- On ARROW reduce production app_mlty_ -> simple_mlty_
-- On AND reduce production app_mlty_ -> simple_mlty_

State 83:
prod_mlty_ -> separated_nonempty_list(STAR,app_mlty) . [ WITH WHEN VERBOSITY SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN MODULE MLTYPE LET INCLUDE EXTERNAL EXCEPTION EQ EOF END DARROW COMMA BAR ARROW AND ]
-- On WITH reduce production prod_mlty_ -> separated_nonempty_list(STAR,app_mlty)
-- On WHEN reduce production prod_mlty_ -> separated_nonempty_list(STAR,app_mlty)
-- On VERBOSITY reduce production prod_mlty_ -> separated_nonempty_list(STAR,app_mlty)
-- On SEMISEMI reduce production prod_mlty_ -> separated_nonempty_list(STAR,app_mlty)
-- On SEMI reduce production prod_mlty_ -> separated_nonempty_list(STAR,app_mlty)
-- On RULE reduce production prod_mlty_ -> separated_nonempty_list(STAR,app_mlty)
-- On RPAREN reduce production prod_mlty_ -> separated_nonempty_list(STAR,app_mlty)
-- On REQUIRE reduce production prod_mlty_ -> separated_nonempty_list(STAR,app_mlty)
-- On RBRACK reduce production prod_mlty_ -> separated_nonempty_list(STAR,app_mlty)
-- On RBRACE reduce production prod_mlty_ -> separated_nonempty_list(STAR,app_mlty)
-- On OPERATION reduce production prod_mlty_ -> separated_nonempty_list(STAR,app_mlty)
-- On OPEN reduce production prod_mlty_ -> separated_nonempty_list(STAR,app_mlty)
-- On MODULE reduce production prod_mlty_ -> separated_nonempty_list(STAR,app_mlty)
-- On MLTYPE reduce production prod_mlty_ -> separated_nonempty_list(STAR,app_mlty)
-- On LET reduce production prod_mlty_ -> separated_nonempty_list(STAR,app_mlty)
-- On INCLUDE reduce production prod_mlty_ -> separated_nonempty_list(STAR,app_mlty)
-- On EXTERNAL reduce production prod_mlty_ -> separated_nonempty_list(STAR,app_mlty)
-- On EXCEPTION reduce production prod_mlty_ -> separated_nonempty_list(STAR,app_mlty)
-- On EQ reduce production prod_mlty_ -> separated_nonempty_list(STAR,app_mlty)
-- On EOF reduce production prod_mlty_ -> separated_nonempty_list(STAR,app_mlty)
-- On END reduce production prod_mlty_ -> separated_nonempty_list(STAR,app_mlty)
-- On DARROW reduce production prod_mlty_ -> separated_nonempty_list(STAR,app_mlty)
-- On COMMA reduce production prod_mlty_ -> separated_nonempty_list(STAR,app_mlty)
-- On BAR reduce production prod_mlty_ -> separated_nonempty_list(STAR,app_mlty)
-- On ARROW reduce production prod_mlty_ -> separated_nonempty_list(STAR,app_mlty)
-- On AND reduce production prod_mlty_ -> separated_nonempty_list(STAR,app_mlty)

State 84:
mark_location(prod_mlty_) -> prod_mlty_ . [ DARROW ARROW ]
mlty_ -> prod_mlty_ . [ WITH VERBOSITY SEMISEMI RULE RPAREN REQUIRE OPERATION OPEN MODULE MLTYPE LET INCLUDE EXTERNAL EXCEPTION EQ EOF END BAR AND ]
-- On WITH reduce production mlty_ -> prod_mlty_
-- On VERBOSITY reduce production mlty_ -> prod_mlty_
-- On SEMISEMI reduce production mlty_ -> prod_mlty_
-- On RULE reduce production mlty_ -> prod_mlty_
-- On RPAREN reduce production mlty_ -> prod_mlty_
-- On REQUIRE reduce production mlty_ -> prod_mlty_
-- On OPERATION reduce production mlty_ -> prod_mlty_
-- On OPEN reduce production mlty_ -> prod_mlty_
-- On MODULE reduce production mlty_ -> prod_mlty_
-- On MLTYPE reduce production mlty_ -> prod_mlty_
-- On LET reduce production mlty_ -> prod_mlty_
-- On INCLUDE reduce production mlty_ -> prod_mlty_
-- On EXTERNAL reduce production mlty_ -> prod_mlty_
-- On EXCEPTION reduce production mlty_ -> prod_mlty_
-- On EQ reduce production mlty_ -> prod_mlty_
-- On EOF reduce production mlty_ -> prod_mlty_
-- On END reduce production mlty_ -> prod_mlty_
-- On DARROW reduce production mark_location(prod_mlty_) -> prod_mlty_
-- On BAR reduce production mlty_ -> prod_mlty_
-- On ARROW reduce production mark_location(prod_mlty_) -> prod_mlty_
-- On AND reduce production mlty_ -> prod_mlty_

State 85:
mlty_ -> prod_mlty . ARROW mlty [ WITH VERBOSITY SEMISEMI RULE RPAREN REQUIRE OPERATION OPEN MODULE MLTYPE LET INCLUDE EXTERNAL EXCEPTION EQ EOF END BAR AND ]
mlty_ -> prod_mlty . DARROW mlty [ WITH VERBOSITY SEMISEMI RULE RPAREN REQUIRE OPERATION OPEN MODULE MLTYPE LET INCLUDE EXTERNAL EXCEPTION EQ EOF END BAR AND ]
-- On DARROW shift to state 86
-- On ARROW shift to state 111

State 86:
mlty_ -> prod_mlty DARROW . mlty [ WITH VERBOSITY SEMISEMI RULE RPAREN REQUIRE OPERATION OPEN MODULE MLTYPE LET INCLUDE EXTERNAL EXCEPTION EQ EOF END BAR AND ]
-- On UNDERSCORE shift to state 55
-- On REF shift to state 56
-- On NAME shift to state 57
-- On MLUNIT shift to state 58
-- On MLSTRING shift to state 59
-- On MLJUDGEMENT shift to state 60
-- On MLDERIVATION shift to state 61
-- On MLBOUNDARY shift to state 62
-- On LPAREN shift to state 63
-- On simple_mlty_ shift to state 82
-- On separated_nonempty_list(STAR,app_mlty) shift to state 83
-- On prod_mlty_ shift to state 84
-- On prod_mlty shift to state 85
-- On module_path shift to state 87
-- On module_name shift to state 45
-- On mlty_ shift to state 100
-- On mlty shift to state 101
-- On ml_name shift to state 102
-- On mark_location(prod_mlty_) shift to state 104
-- On mark_location(mlty_) shift to state 105
-- On mark_location(app_mlty_) shift to state 106
-- On app_mlty_ shift to state 107
-- On app_mlty shift to state 108

State 87:
app_mlty_ -> module_path . PERIOD ml_name nonempty_list(simple_mlty) [ WITH WHEN VERBOSITY STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN MODULE MLTYPE LET INCLUDE EXTERNAL EXCEPTION EQ EOF END DARROW COMMA BAR ARROW AND ]
module_path -> module_path . PERIOD module_name [ PERIOD ]
simple_mlty_ -> module_path . PERIOD ml_name [ WITH WHEN VERBOSITY STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN MODULE MLTYPE LET INCLUDE EXTERNAL EXCEPTION EQ EOF END DARROW COMMA BAR ARROW AND ]
-- On PERIOD shift to state 88

State 88:
app_mlty_ -> module_path PERIOD . ml_name nonempty_list(simple_mlty) [ WITH WHEN VERBOSITY STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN MODULE MLTYPE LET INCLUDE EXTERNAL EXCEPTION EQ EOF END DARROW COMMA BAR ARROW AND ]
module_path -> module_path PERIOD . module_name [ PERIOD ]
simple_mlty_ -> module_path PERIOD . ml_name [ WITH WHEN VERBOSITY STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN MODULE MLTYPE LET INCLUDE EXTERNAL EXCEPTION EQ EOF END DARROW COMMA BAR ARROW AND ]
-- On NAME shift to state 57
-- On LPAREN shift to state 89
-- On module_name shift to state 43
-- On ml_name shift to state 90

State 89:
ml_name -> LPAREN . INFIXCONS RPAREN [ WITH WHEN VERBOSITY UNDERSCORE UATOM TYPE STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE QUOTED_STRING QQMARK PREFIXOP OPERATION OPEN NAME MODULE MLUNIT MLTYPE MLSTRING MLJUDGEMENT MLDERIVATION MLBOUNDARY LPAREN LET LBRACK INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE EXTERNAL EXCEPTION EQEQ EQ EOF END DARROW COMMA COLONGT COLON BY BAR AS ARROW AND ]
ml_name -> LPAREN . EQ RPAREN [ WITH WHEN VERBOSITY UNDERSCORE UATOM TYPE STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE QUOTED_STRING QQMARK PREFIXOP OPERATION OPEN NAME MODULE MLUNIT MLTYPE MLSTRING MLJUDGEMENT MLDERIVATION MLBOUNDARY LPAREN LET LBRACK INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE EXTERNAL EXCEPTION EQEQ EQ EOF END DARROW COMMA COLONGT COLON BY BAR AS ARROW AND ]
ml_name -> LPAREN . INFIXOP0 RPAREN [ WITH WHEN VERBOSITY UNDERSCORE UATOM TYPE STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE QUOTED_STRING QQMARK PREFIXOP OPERATION OPEN NAME MODULE MLUNIT MLTYPE MLSTRING MLJUDGEMENT MLDERIVATION MLBOUNDARY LPAREN LET LBRACK INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE EXTERNAL EXCEPTION EQEQ EQ EOF END DARROW COMMA COLONGT COLON BY BAR AS ARROW AND ]
ml_name -> LPAREN . INFIXOP1 RPAREN [ WITH WHEN VERBOSITY UNDERSCORE UATOM TYPE STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE QUOTED_STRING QQMARK PREFIXOP OPERATION OPEN NAME MODULE MLUNIT MLTYPE MLSTRING MLJUDGEMENT MLDERIVATION MLBOUNDARY LPAREN LET LBRACK INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE EXTERNAL EXCEPTION EQEQ EQ EOF END DARROW COMMA COLONGT COLON BY BAR AS ARROW AND ]
ml_name -> LPAREN . INFIXOP2 RPAREN [ WITH WHEN VERBOSITY UNDERSCORE UATOM TYPE STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE QUOTED_STRING QQMARK PREFIXOP OPERATION OPEN NAME MODULE MLUNIT MLTYPE MLSTRING MLJUDGEMENT MLDERIVATION MLBOUNDARY LPAREN LET LBRACK INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE EXTERNAL EXCEPTION EQEQ EQ EOF END DARROW COMMA COLONGT COLON BY BAR AS ARROW AND ]
ml_name -> LPAREN . INFIXOP3 RPAREN [ WITH WHEN VERBOSITY UNDERSCORE UATOM TYPE STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE QUOTED_STRING QQMARK PREFIXOP OPERATION OPEN NAME MODULE MLUNIT MLTYPE MLSTRING MLJUDGEMENT MLDERIVATION MLBOUNDARY LPAREN LET LBRACK INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE EXTERNAL EXCEPTION EQEQ EQ EOF END DARROW COMMA COLONGT COLON BY BAR AS ARROW AND ]
ml_name -> LPAREN . STAR RPAREN [ WITH WHEN VERBOSITY UNDERSCORE UATOM TYPE STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE QUOTED_STRING QQMARK PREFIXOP OPERATION OPEN NAME MODULE MLUNIT MLTYPE MLSTRING MLJUDGEMENT MLDERIVATION MLBOUNDARY LPAREN LET LBRACK INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE EXTERNAL EXCEPTION EQEQ EQ EOF END DARROW COMMA COLONGT COLON BY BAR AS ARROW AND ]
ml_name -> LPAREN . INFIXOP4 RPAREN [ WITH WHEN VERBOSITY UNDERSCORE UATOM TYPE STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE QUOTED_STRING QQMARK PREFIXOP OPERATION OPEN NAME MODULE MLUNIT MLTYPE MLSTRING MLJUDGEMENT MLDERIVATION MLBOUNDARY LPAREN LET LBRACK INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE EXTERNAL EXCEPTION EQEQ EQ EOF END DARROW COMMA COLONGT COLON BY BAR AS ARROW AND ]
ml_name -> LPAREN . PREFIXOP RPAREN [ WITH WHEN VERBOSITY UNDERSCORE UATOM TYPE STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE QUOTED_STRING QQMARK PREFIXOP OPERATION OPEN NAME MODULE MLUNIT MLTYPE MLSTRING MLJUDGEMENT MLDERIVATION MLBOUNDARY LPAREN LET LBRACK INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE EXTERNAL EXCEPTION EQEQ EQ EOF END DARROW COMMA COLONGT COLON BY BAR AS ARROW AND ]
-- On STAR shift to state 64
-- On PREFIXOP shift to state 66
-- On INFIXOP4 shift to state 68
-- On INFIXOP3 shift to state 70
-- On INFIXOP2 shift to state 72
-- On INFIXOP1 shift to state 74
-- On INFIXOP0 shift to state 76
-- On INFIXCONS shift to state 78
-- On EQ shift to state 80

State 90:
app_mlty_ -> module_path PERIOD ml_name . nonempty_list(simple_mlty) [ WITH WHEN VERBOSITY STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN MODULE MLTYPE LET INCLUDE EXTERNAL EXCEPTION EQ EOF END DARROW COMMA BAR ARROW AND ]
simple_mlty_ -> module_path PERIOD ml_name . [ WITH WHEN VERBOSITY STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN MODULE MLTYPE LET INCLUDE EXTERNAL EXCEPTION EQ EOF END DARROW COMMA BAR ARROW AND ]
-- On UNDERSCORE shift to state 55
-- On NAME shift to state 57
-- On MLUNIT shift to state 58
-- On MLSTRING shift to state 59
-- On MLJUDGEMENT shift to state 60
-- On MLDERIVATION shift to state 61
-- On MLBOUNDARY shift to state 62
-- On LPAREN shift to state 63
-- On simple_mlty_ shift to state 91
-- On simple_mlty shift to state 92
-- On nonempty_list(simple_mlty) shift to state 99
-- On module_path shift to state 94
-- On module_name shift to state 45
-- On ml_name shift to state 97
-- On mark_location(simple_mlty_) shift to state 98
-- On WITH reduce production simple_mlty_ -> module_path PERIOD ml_name
-- On WHEN reduce production simple_mlty_ -> module_path PERIOD ml_name
-- On VERBOSITY reduce production simple_mlty_ -> module_path PERIOD ml_name
-- On STAR reduce production simple_mlty_ -> module_path PERIOD ml_name
-- On SEMISEMI reduce production simple_mlty_ -> module_path PERIOD ml_name
-- On SEMI reduce production simple_mlty_ -> module_path PERIOD ml_name
-- On RULE reduce production simple_mlty_ -> module_path PERIOD ml_name
-- On RPAREN reduce production simple_mlty_ -> module_path PERIOD ml_name
-- On REQUIRE reduce production simple_mlty_ -> module_path PERIOD ml_name
-- On RBRACK reduce production simple_mlty_ -> module_path PERIOD ml_name
-- On RBRACE reduce production simple_mlty_ -> module_path PERIOD ml_name
-- On OPERATION reduce production simple_mlty_ -> module_path PERIOD ml_name
-- On OPEN reduce production simple_mlty_ -> module_path PERIOD ml_name
-- On MODULE reduce production simple_mlty_ -> module_path PERIOD ml_name
-- On MLTYPE reduce production simple_mlty_ -> module_path PERIOD ml_name
-- On LET reduce production simple_mlty_ -> module_path PERIOD ml_name
-- On INCLUDE reduce production simple_mlty_ -> module_path PERIOD ml_name
-- On EXTERNAL reduce production simple_mlty_ -> module_path PERIOD ml_name
-- On EXCEPTION reduce production simple_mlty_ -> module_path PERIOD ml_name
-- On EQ reduce production simple_mlty_ -> module_path PERIOD ml_name
-- On EOF reduce production simple_mlty_ -> module_path PERIOD ml_name
-- On END reduce production simple_mlty_ -> module_path PERIOD ml_name
-- On DARROW reduce production simple_mlty_ -> module_path PERIOD ml_name
-- On COMMA reduce production simple_mlty_ -> module_path PERIOD ml_name
-- On BAR reduce production simple_mlty_ -> module_path PERIOD ml_name
-- On ARROW reduce production simple_mlty_ -> module_path PERIOD ml_name
-- On AND reduce production simple_mlty_ -> module_path PERIOD ml_name

State 91:
mark_location(simple_mlty_) -> simple_mlty_ . [ WITH WHEN VERBOSITY UNDERSCORE STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN NAME MODULE MLUNIT MLTYPE MLSTRING MLJUDGEMENT MLDERIVATION MLBOUNDARY LPAREN LET INCLUDE EXTERNAL EXCEPTION EQ EOF END DARROW COMMA BAR ARROW AND ]
-- On WITH reduce production mark_location(simple_mlty_) -> simple_mlty_
-- On WHEN reduce production mark_location(simple_mlty_) -> simple_mlty_
-- On VERBOSITY reduce production mark_location(simple_mlty_) -> simple_mlty_
-- On UNDERSCORE reduce production mark_location(simple_mlty_) -> simple_mlty_
-- On STAR reduce production mark_location(simple_mlty_) -> simple_mlty_
-- On SEMISEMI reduce production mark_location(simple_mlty_) -> simple_mlty_
-- On SEMI reduce production mark_location(simple_mlty_) -> simple_mlty_
-- On RULE reduce production mark_location(simple_mlty_) -> simple_mlty_
-- On RPAREN reduce production mark_location(simple_mlty_) -> simple_mlty_
-- On REQUIRE reduce production mark_location(simple_mlty_) -> simple_mlty_
-- On RBRACK reduce production mark_location(simple_mlty_) -> simple_mlty_
-- On RBRACE reduce production mark_location(simple_mlty_) -> simple_mlty_
-- On OPERATION reduce production mark_location(simple_mlty_) -> simple_mlty_
-- On OPEN reduce production mark_location(simple_mlty_) -> simple_mlty_
-- On NAME reduce production mark_location(simple_mlty_) -> simple_mlty_
-- On MODULE reduce production mark_location(simple_mlty_) -> simple_mlty_
-- On MLUNIT reduce production mark_location(simple_mlty_) -> simple_mlty_
-- On MLTYPE reduce production mark_location(simple_mlty_) -> simple_mlty_
-- On MLSTRING reduce production mark_location(simple_mlty_) -> simple_mlty_
-- On MLJUDGEMENT reduce production mark_location(simple_mlty_) -> simple_mlty_
-- On MLDERIVATION reduce production mark_location(simple_mlty_) -> simple_mlty_
-- On MLBOUNDARY reduce production mark_location(simple_mlty_) -> simple_mlty_
-- On LPAREN reduce production mark_location(simple_mlty_) -> simple_mlty_
-- On LET reduce production mark_location(simple_mlty_) -> simple_mlty_
-- On INCLUDE reduce production mark_location(simple_mlty_) -> simple_mlty_
-- On EXTERNAL reduce production mark_location(simple_mlty_) -> simple_mlty_
-- On EXCEPTION reduce production mark_location(simple_mlty_) -> simple_mlty_
-- On EQ reduce production mark_location(simple_mlty_) -> simple_mlty_
-- On EOF reduce production mark_location(simple_mlty_) -> simple_mlty_
-- On END reduce production mark_location(simple_mlty_) -> simple_mlty_
-- On DARROW reduce production mark_location(simple_mlty_) -> simple_mlty_
-- On COMMA reduce production mark_location(simple_mlty_) -> simple_mlty_
-- On BAR reduce production mark_location(simple_mlty_) -> simple_mlty_
-- On ARROW reduce production mark_location(simple_mlty_) -> simple_mlty_
-- On AND reduce production mark_location(simple_mlty_) -> simple_mlty_

State 92:
nonempty_list(simple_mlty) -> simple_mlty . [ WITH WHEN VERBOSITY STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN MODULE MLTYPE LET INCLUDE EXTERNAL EXCEPTION EQ EOF END DARROW COMMA BAR ARROW AND ]
nonempty_list(simple_mlty) -> simple_mlty . nonempty_list(simple_mlty) [ WITH WHEN VERBOSITY STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN MODULE MLTYPE LET INCLUDE EXTERNAL EXCEPTION EQ EOF END DARROW COMMA BAR ARROW AND ]
-- On UNDERSCORE shift to state 55
-- On NAME shift to state 57
-- On MLUNIT shift to state 58
-- On MLSTRING shift to state 59
-- On MLJUDGEMENT shift to state 60
-- On MLDERIVATION shift to state 61
-- On MLBOUNDARY shift to state 62
-- On LPAREN shift to state 63
-- On simple_mlty_ shift to state 91
-- On simple_mlty shift to state 92
-- On nonempty_list(simple_mlty) shift to state 93
-- On module_path shift to state 94
-- On module_name shift to state 45
-- On ml_name shift to state 97
-- On mark_location(simple_mlty_) shift to state 98
-- On WITH reduce production nonempty_list(simple_mlty) -> simple_mlty
-- On WHEN reduce production nonempty_list(simple_mlty) -> simple_mlty
-- On VERBOSITY reduce production nonempty_list(simple_mlty) -> simple_mlty
-- On STAR reduce production nonempty_list(simple_mlty) -> simple_mlty
-- On SEMISEMI reduce production nonempty_list(simple_mlty) -> simple_mlty
-- On SEMI reduce production nonempty_list(simple_mlty) -> simple_mlty
-- On RULE reduce production nonempty_list(simple_mlty) -> simple_mlty
-- On RPAREN reduce production nonempty_list(simple_mlty) -> simple_mlty
-- On REQUIRE reduce production nonempty_list(simple_mlty) -> simple_mlty
-- On RBRACK reduce production nonempty_list(simple_mlty) -> simple_mlty
-- On RBRACE reduce production nonempty_list(simple_mlty) -> simple_mlty
-- On OPERATION reduce production nonempty_list(simple_mlty) -> simple_mlty
-- On OPEN reduce production nonempty_list(simple_mlty) -> simple_mlty
-- On MODULE reduce production nonempty_list(simple_mlty) -> simple_mlty
-- On MLTYPE reduce production nonempty_list(simple_mlty) -> simple_mlty
-- On LET reduce production nonempty_list(simple_mlty) -> simple_mlty
-- On INCLUDE reduce production nonempty_list(simple_mlty) -> simple_mlty
-- On EXTERNAL reduce production nonempty_list(simple_mlty) -> simple_mlty
-- On EXCEPTION reduce production nonempty_list(simple_mlty) -> simple_mlty
-- On EQ reduce production nonempty_list(simple_mlty) -> simple_mlty
-- On EOF reduce production nonempty_list(simple_mlty) -> simple_mlty
-- On END reduce production nonempty_list(simple_mlty) -> simple_mlty
-- On DARROW reduce production nonempty_list(simple_mlty) -> simple_mlty
-- On COMMA reduce production nonempty_list(simple_mlty) -> simple_mlty
-- On BAR reduce production nonempty_list(simple_mlty) -> simple_mlty
-- On ARROW reduce production nonempty_list(simple_mlty) -> simple_mlty
-- On AND reduce production nonempty_list(simple_mlty) -> simple_mlty

State 93:
nonempty_list(simple_mlty) -> simple_mlty nonempty_list(simple_mlty) . [ WITH WHEN VERBOSITY STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN MODULE MLTYPE LET INCLUDE EXTERNAL EXCEPTION EQ EOF END DARROW COMMA BAR ARROW AND ]
-- On WITH reduce production nonempty_list(simple_mlty) -> simple_mlty nonempty_list(simple_mlty)
-- On WHEN reduce production nonempty_list(simple_mlty) -> simple_mlty nonempty_list(simple_mlty)
-- On VERBOSITY reduce production nonempty_list(simple_mlty) -> simple_mlty nonempty_list(simple_mlty)
-- On STAR reduce production nonempty_list(simple_mlty) -> simple_mlty nonempty_list(simple_mlty)
-- On SEMISEMI reduce production nonempty_list(simple_mlty) -> simple_mlty nonempty_list(simple_mlty)
-- On SEMI reduce production nonempty_list(simple_mlty) -> simple_mlty nonempty_list(simple_mlty)
-- On RULE reduce production nonempty_list(simple_mlty) -> simple_mlty nonempty_list(simple_mlty)
-- On RPAREN reduce production nonempty_list(simple_mlty) -> simple_mlty nonempty_list(simple_mlty)
-- On REQUIRE reduce production nonempty_list(simple_mlty) -> simple_mlty nonempty_list(simple_mlty)
-- On RBRACK reduce production nonempty_list(simple_mlty) -> simple_mlty nonempty_list(simple_mlty)
-- On RBRACE reduce production nonempty_list(simple_mlty) -> simple_mlty nonempty_list(simple_mlty)
-- On OPERATION reduce production nonempty_list(simple_mlty) -> simple_mlty nonempty_list(simple_mlty)
-- On OPEN reduce production nonempty_list(simple_mlty) -> simple_mlty nonempty_list(simple_mlty)
-- On MODULE reduce production nonempty_list(simple_mlty) -> simple_mlty nonempty_list(simple_mlty)
-- On MLTYPE reduce production nonempty_list(simple_mlty) -> simple_mlty nonempty_list(simple_mlty)
-- On LET reduce production nonempty_list(simple_mlty) -> simple_mlty nonempty_list(simple_mlty)
-- On INCLUDE reduce production nonempty_list(simple_mlty) -> simple_mlty nonempty_list(simple_mlty)
-- On EXTERNAL reduce production nonempty_list(simple_mlty) -> simple_mlty nonempty_list(simple_mlty)
-- On EXCEPTION reduce production nonempty_list(simple_mlty) -> simple_mlty nonempty_list(simple_mlty)
-- On EQ reduce production nonempty_list(simple_mlty) -> simple_mlty nonempty_list(simple_mlty)
-- On EOF reduce production nonempty_list(simple_mlty) -> simple_mlty nonempty_list(simple_mlty)
-- On END reduce production nonempty_list(simple_mlty) -> simple_mlty nonempty_list(simple_mlty)
-- On DARROW reduce production nonempty_list(simple_mlty) -> simple_mlty nonempty_list(simple_mlty)
-- On COMMA reduce production nonempty_list(simple_mlty) -> simple_mlty nonempty_list(simple_mlty)
-- On BAR reduce production nonempty_list(simple_mlty) -> simple_mlty nonempty_list(simple_mlty)
-- On ARROW reduce production nonempty_list(simple_mlty) -> simple_mlty nonempty_list(simple_mlty)
-- On AND reduce production nonempty_list(simple_mlty) -> simple_mlty nonempty_list(simple_mlty)

State 94:
module_path -> module_path . PERIOD module_name [ PERIOD ]
simple_mlty_ -> module_path . PERIOD ml_name [ WITH WHEN VERBOSITY UNDERSCORE STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN NAME MODULE MLUNIT MLTYPE MLSTRING MLJUDGEMENT MLDERIVATION MLBOUNDARY LPAREN LET INCLUDE EXTERNAL EXCEPTION EQ EOF END DARROW COMMA BAR ARROW AND ]
-- On PERIOD shift to state 95

State 95:
module_path -> module_path PERIOD . module_name [ PERIOD ]
simple_mlty_ -> module_path PERIOD . ml_name [ WITH WHEN VERBOSITY UNDERSCORE STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN NAME MODULE MLUNIT MLTYPE MLSTRING MLJUDGEMENT MLDERIVATION MLBOUNDARY LPAREN LET INCLUDE EXTERNAL EXCEPTION EQ EOF END DARROW COMMA BAR ARROW AND ]
-- On NAME shift to state 57
-- On LPAREN shift to state 89
-- On module_name shift to state 43
-- On ml_name shift to state 96

State 96:
simple_mlty_ -> module_path PERIOD ml_name . [ WITH WHEN VERBOSITY UNDERSCORE STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN NAME MODULE MLUNIT MLTYPE MLSTRING MLJUDGEMENT MLDERIVATION MLBOUNDARY LPAREN LET INCLUDE EXTERNAL EXCEPTION EQ EOF END DARROW COMMA BAR ARROW AND ]
-- On WITH reduce production simple_mlty_ -> module_path PERIOD ml_name
-- On WHEN reduce production simple_mlty_ -> module_path PERIOD ml_name
-- On VERBOSITY reduce production simple_mlty_ -> module_path PERIOD ml_name
-- On UNDERSCORE reduce production simple_mlty_ -> module_path PERIOD ml_name
-- On STAR reduce production simple_mlty_ -> module_path PERIOD ml_name
-- On SEMISEMI reduce production simple_mlty_ -> module_path PERIOD ml_name
-- On SEMI reduce production simple_mlty_ -> module_path PERIOD ml_name
-- On RULE reduce production simple_mlty_ -> module_path PERIOD ml_name
-- On RPAREN reduce production simple_mlty_ -> module_path PERIOD ml_name
-- On REQUIRE reduce production simple_mlty_ -> module_path PERIOD ml_name
-- On RBRACK reduce production simple_mlty_ -> module_path PERIOD ml_name
-- On RBRACE reduce production simple_mlty_ -> module_path PERIOD ml_name
-- On OPERATION reduce production simple_mlty_ -> module_path PERIOD ml_name
-- On OPEN reduce production simple_mlty_ -> module_path PERIOD ml_name
-- On NAME reduce production simple_mlty_ -> module_path PERIOD ml_name
-- On MODULE reduce production simple_mlty_ -> module_path PERIOD ml_name
-- On MLUNIT reduce production simple_mlty_ -> module_path PERIOD ml_name
-- On MLTYPE reduce production simple_mlty_ -> module_path PERIOD ml_name
-- On MLSTRING reduce production simple_mlty_ -> module_path PERIOD ml_name
-- On MLJUDGEMENT reduce production simple_mlty_ -> module_path PERIOD ml_name
-- On MLDERIVATION reduce production simple_mlty_ -> module_path PERIOD ml_name
-- On MLBOUNDARY reduce production simple_mlty_ -> module_path PERIOD ml_name
-- On LPAREN reduce production simple_mlty_ -> module_path PERIOD ml_name
-- On LET reduce production simple_mlty_ -> module_path PERIOD ml_name
-- On INCLUDE reduce production simple_mlty_ -> module_path PERIOD ml_name
-- On EXTERNAL reduce production simple_mlty_ -> module_path PERIOD ml_name
-- On EXCEPTION reduce production simple_mlty_ -> module_path PERIOD ml_name
-- On EQ reduce production simple_mlty_ -> module_path PERIOD ml_name
-- On EOF reduce production simple_mlty_ -> module_path PERIOD ml_name
-- On END reduce production simple_mlty_ -> module_path PERIOD ml_name
-- On DARROW reduce production simple_mlty_ -> module_path PERIOD ml_name
-- On COMMA reduce production simple_mlty_ -> module_path PERIOD ml_name
-- On BAR reduce production simple_mlty_ -> module_path PERIOD ml_name
-- On ARROW reduce production simple_mlty_ -> module_path PERIOD ml_name
-- On AND reduce production simple_mlty_ -> module_path PERIOD ml_name

State 97:
simple_mlty_ -> ml_name . [ WITH WHEN VERBOSITY UNDERSCORE STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN NAME MODULE MLUNIT MLTYPE MLSTRING MLJUDGEMENT MLDERIVATION MLBOUNDARY LPAREN LET INCLUDE EXTERNAL EXCEPTION EQ EOF END DARROW COMMA BAR ARROW AND ]
-- On WITH reduce production simple_mlty_ -> ml_name
-- On WHEN reduce production simple_mlty_ -> ml_name
-- On VERBOSITY reduce production simple_mlty_ -> ml_name
-- On UNDERSCORE reduce production simple_mlty_ -> ml_name
-- On STAR reduce production simple_mlty_ -> ml_name
-- On SEMISEMI reduce production simple_mlty_ -> ml_name
-- On SEMI reduce production simple_mlty_ -> ml_name
-- On RULE reduce production simple_mlty_ -> ml_name
-- On RPAREN reduce production simple_mlty_ -> ml_name
-- On REQUIRE reduce production simple_mlty_ -> ml_name
-- On RBRACK reduce production simple_mlty_ -> ml_name
-- On RBRACE reduce production simple_mlty_ -> ml_name
-- On OPERATION reduce production simple_mlty_ -> ml_name
-- On OPEN reduce production simple_mlty_ -> ml_name
-- On NAME reduce production simple_mlty_ -> ml_name
-- On MODULE reduce production simple_mlty_ -> ml_name
-- On MLUNIT reduce production simple_mlty_ -> ml_name
-- On MLTYPE reduce production simple_mlty_ -> ml_name
-- On MLSTRING reduce production simple_mlty_ -> ml_name
-- On MLJUDGEMENT reduce production simple_mlty_ -> ml_name
-- On MLDERIVATION reduce production simple_mlty_ -> ml_name
-- On MLBOUNDARY reduce production simple_mlty_ -> ml_name
-- On LPAREN reduce production simple_mlty_ -> ml_name
-- On LET reduce production simple_mlty_ -> ml_name
-- On INCLUDE reduce production simple_mlty_ -> ml_name
-- On EXTERNAL reduce production simple_mlty_ -> ml_name
-- On EXCEPTION reduce production simple_mlty_ -> ml_name
-- On EQ reduce production simple_mlty_ -> ml_name
-- On EOF reduce production simple_mlty_ -> ml_name
-- On END reduce production simple_mlty_ -> ml_name
-- On DARROW reduce production simple_mlty_ -> ml_name
-- On COMMA reduce production simple_mlty_ -> ml_name
-- On BAR reduce production simple_mlty_ -> ml_name
-- On ARROW reduce production simple_mlty_ -> ml_name
-- On AND reduce production simple_mlty_ -> ml_name

State 98:
simple_mlty -> mark_location(simple_mlty_) . [ WITH WHEN VERBOSITY UNDERSCORE STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN NAME MODULE MLUNIT MLTYPE MLSTRING MLJUDGEMENT MLDERIVATION MLBOUNDARY LPAREN LET INCLUDE EXTERNAL EXCEPTION EQ EOF END DARROW COMMA BAR ARROW AND ]
-- On WITH reduce production simple_mlty -> mark_location(simple_mlty_)
-- On WHEN reduce production simple_mlty -> mark_location(simple_mlty_)
-- On VERBOSITY reduce production simple_mlty -> mark_location(simple_mlty_)
-- On UNDERSCORE reduce production simple_mlty -> mark_location(simple_mlty_)
-- On STAR reduce production simple_mlty -> mark_location(simple_mlty_)
-- On SEMISEMI reduce production simple_mlty -> mark_location(simple_mlty_)
-- On SEMI reduce production simple_mlty -> mark_location(simple_mlty_)
-- On RULE reduce production simple_mlty -> mark_location(simple_mlty_)
-- On RPAREN reduce production simple_mlty -> mark_location(simple_mlty_)
-- On REQUIRE reduce production simple_mlty -> mark_location(simple_mlty_)
-- On RBRACK reduce production simple_mlty -> mark_location(simple_mlty_)
-- On RBRACE reduce production simple_mlty -> mark_location(simple_mlty_)
-- On OPERATION reduce production simple_mlty -> mark_location(simple_mlty_)
-- On OPEN reduce production simple_mlty -> mark_location(simple_mlty_)
-- On NAME reduce production simple_mlty -> mark_location(simple_mlty_)
-- On MODULE reduce production simple_mlty -> mark_location(simple_mlty_)
-- On MLUNIT reduce production simple_mlty -> mark_location(simple_mlty_)
-- On MLTYPE reduce production simple_mlty -> mark_location(simple_mlty_)
-- On MLSTRING reduce production simple_mlty -> mark_location(simple_mlty_)
-- On MLJUDGEMENT reduce production simple_mlty -> mark_location(simple_mlty_)
-- On MLDERIVATION reduce production simple_mlty -> mark_location(simple_mlty_)
-- On MLBOUNDARY reduce production simple_mlty -> mark_location(simple_mlty_)
-- On LPAREN reduce production simple_mlty -> mark_location(simple_mlty_)
-- On LET reduce production simple_mlty -> mark_location(simple_mlty_)
-- On INCLUDE reduce production simple_mlty -> mark_location(simple_mlty_)
-- On EXTERNAL reduce production simple_mlty -> mark_location(simple_mlty_)
-- On EXCEPTION reduce production simple_mlty -> mark_location(simple_mlty_)
-- On EQ reduce production simple_mlty -> mark_location(simple_mlty_)
-- On EOF reduce production simple_mlty -> mark_location(simple_mlty_)
-- On END reduce production simple_mlty -> mark_location(simple_mlty_)
-- On DARROW reduce production simple_mlty -> mark_location(simple_mlty_)
-- On COMMA reduce production simple_mlty -> mark_location(simple_mlty_)
-- On BAR reduce production simple_mlty -> mark_location(simple_mlty_)
-- On ARROW reduce production simple_mlty -> mark_location(simple_mlty_)
-- On AND reduce production simple_mlty -> mark_location(simple_mlty_)

State 99:
app_mlty_ -> module_path PERIOD ml_name nonempty_list(simple_mlty) . [ WITH WHEN VERBOSITY STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN MODULE MLTYPE LET INCLUDE EXTERNAL EXCEPTION EQ EOF END DARROW COMMA BAR ARROW AND ]
-- On WITH reduce production app_mlty_ -> module_path PERIOD ml_name nonempty_list(simple_mlty)
-- On WHEN reduce production app_mlty_ -> module_path PERIOD ml_name nonempty_list(simple_mlty)
-- On VERBOSITY reduce production app_mlty_ -> module_path PERIOD ml_name nonempty_list(simple_mlty)
-- On STAR reduce production app_mlty_ -> module_path PERIOD ml_name nonempty_list(simple_mlty)
-- On SEMISEMI reduce production app_mlty_ -> module_path PERIOD ml_name nonempty_list(simple_mlty)
-- On SEMI reduce production app_mlty_ -> module_path PERIOD ml_name nonempty_list(simple_mlty)
-- On RULE reduce production app_mlty_ -> module_path PERIOD ml_name nonempty_list(simple_mlty)
-- On RPAREN reduce production app_mlty_ -> module_path PERIOD ml_name nonempty_list(simple_mlty)
-- On REQUIRE reduce production app_mlty_ -> module_path PERIOD ml_name nonempty_list(simple_mlty)
-- On RBRACK reduce production app_mlty_ -> module_path PERIOD ml_name nonempty_list(simple_mlty)
-- On RBRACE reduce production app_mlty_ -> module_path PERIOD ml_name nonempty_list(simple_mlty)
-- On OPERATION reduce production app_mlty_ -> module_path PERIOD ml_name nonempty_list(simple_mlty)
-- On OPEN reduce production app_mlty_ -> module_path PERIOD ml_name nonempty_list(simple_mlty)
-- On MODULE reduce production app_mlty_ -> module_path PERIOD ml_name nonempty_list(simple_mlty)
-- On MLTYPE reduce production app_mlty_ -> module_path PERIOD ml_name nonempty_list(simple_mlty)
-- On LET reduce production app_mlty_ -> module_path PERIOD ml_name nonempty_list(simple_mlty)
-- On INCLUDE reduce production app_mlty_ -> module_path PERIOD ml_name nonempty_list(simple_mlty)
-- On EXTERNAL reduce production app_mlty_ -> module_path PERIOD ml_name nonempty_list(simple_mlty)
-- On EXCEPTION reduce production app_mlty_ -> module_path PERIOD ml_name nonempty_list(simple_mlty)
-- On EQ reduce production app_mlty_ -> module_path PERIOD ml_name nonempty_list(simple_mlty)
-- On EOF reduce production app_mlty_ -> module_path PERIOD ml_name nonempty_list(simple_mlty)
-- On END reduce production app_mlty_ -> module_path PERIOD ml_name nonempty_list(simple_mlty)
-- On DARROW reduce production app_mlty_ -> module_path PERIOD ml_name nonempty_list(simple_mlty)
-- On COMMA reduce production app_mlty_ -> module_path PERIOD ml_name nonempty_list(simple_mlty)
-- On BAR reduce production app_mlty_ -> module_path PERIOD ml_name nonempty_list(simple_mlty)
-- On ARROW reduce production app_mlty_ -> module_path PERIOD ml_name nonempty_list(simple_mlty)
-- On AND reduce production app_mlty_ -> module_path PERIOD ml_name nonempty_list(simple_mlty)

State 100:
mark_location(mlty_) -> mlty_ . [ WITH VERBOSITY SEMISEMI RULE RPAREN REQUIRE OPERATION OPEN MODULE MLTYPE LET INCLUDE EXTERNAL EXCEPTION EQ EOF END BAR AND ]
-- On WITH reduce production mark_location(mlty_) -> mlty_
-- On VERBOSITY reduce production mark_location(mlty_) -> mlty_
-- On SEMISEMI reduce production mark_location(mlty_) -> mlty_
-- On RULE reduce production mark_location(mlty_) -> mlty_
-- On RPAREN reduce production mark_location(mlty_) -> mlty_
-- On REQUIRE reduce production mark_location(mlty_) -> mlty_
-- On OPERATION reduce production mark_location(mlty_) -> mlty_
-- On OPEN reduce production mark_location(mlty_) -> mlty_
-- On MODULE reduce production mark_location(mlty_) -> mlty_
-- On MLTYPE reduce production mark_location(mlty_) -> mlty_
-- On LET reduce production mark_location(mlty_) -> mlty_
-- On INCLUDE reduce production mark_location(mlty_) -> mlty_
-- On EXTERNAL reduce production mark_location(mlty_) -> mlty_
-- On EXCEPTION reduce production mark_location(mlty_) -> mlty_
-- On EQ reduce production mark_location(mlty_) -> mlty_
-- On EOF reduce production mark_location(mlty_) -> mlty_
-- On END reduce production mark_location(mlty_) -> mlty_
-- On BAR reduce production mark_location(mlty_) -> mlty_
-- On AND reduce production mark_location(mlty_) -> mlty_

State 101:
mlty_ -> prod_mlty DARROW mlty . [ WITH VERBOSITY SEMISEMI RULE RPAREN REQUIRE OPERATION OPEN MODULE MLTYPE LET INCLUDE EXTERNAL EXCEPTION EQ EOF END BAR AND ]
-- On WITH reduce production mlty_ -> prod_mlty DARROW mlty
-- On VERBOSITY reduce production mlty_ -> prod_mlty DARROW mlty
-- On SEMISEMI reduce production mlty_ -> prod_mlty DARROW mlty
-- On RULE reduce production mlty_ -> prod_mlty DARROW mlty
-- On RPAREN reduce production mlty_ -> prod_mlty DARROW mlty
-- On REQUIRE reduce production mlty_ -> prod_mlty DARROW mlty
-- On OPERATION reduce production mlty_ -> prod_mlty DARROW mlty
-- On OPEN reduce production mlty_ -> prod_mlty DARROW mlty
-- On MODULE reduce production mlty_ -> prod_mlty DARROW mlty
-- On MLTYPE reduce production mlty_ -> prod_mlty DARROW mlty
-- On LET reduce production mlty_ -> prod_mlty DARROW mlty
-- On INCLUDE reduce production mlty_ -> prod_mlty DARROW mlty
-- On EXTERNAL reduce production mlty_ -> prod_mlty DARROW mlty
-- On EXCEPTION reduce production mlty_ -> prod_mlty DARROW mlty
-- On EQ reduce production mlty_ -> prod_mlty DARROW mlty
-- On EOF reduce production mlty_ -> prod_mlty DARROW mlty
-- On END reduce production mlty_ -> prod_mlty DARROW mlty
-- On BAR reduce production mlty_ -> prod_mlty DARROW mlty
-- On AND reduce production mlty_ -> prod_mlty DARROW mlty

State 102:
app_mlty_ -> ml_name . nonempty_list(simple_mlty) [ WITH WHEN VERBOSITY STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN MODULE MLTYPE LET INCLUDE EXTERNAL EXCEPTION EQ EOF END DARROW COMMA BAR ARROW AND ]
simple_mlty_ -> ml_name . [ WITH WHEN VERBOSITY STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN MODULE MLTYPE LET INCLUDE EXTERNAL EXCEPTION EQ EOF END DARROW COMMA BAR ARROW AND ]
-- On UNDERSCORE shift to state 55
-- On NAME shift to state 57
-- On MLUNIT shift to state 58
-- On MLSTRING shift to state 59
-- On MLJUDGEMENT shift to state 60
-- On MLDERIVATION shift to state 61
-- On MLBOUNDARY shift to state 62
-- On LPAREN shift to state 63
-- On simple_mlty_ shift to state 91
-- On simple_mlty shift to state 92
-- On nonempty_list(simple_mlty) shift to state 103
-- On module_path shift to state 94
-- On module_name shift to state 45
-- On ml_name shift to state 97
-- On mark_location(simple_mlty_) shift to state 98
-- On WITH reduce production simple_mlty_ -> ml_name
-- On WHEN reduce production simple_mlty_ -> ml_name
-- On VERBOSITY reduce production simple_mlty_ -> ml_name
-- On STAR reduce production simple_mlty_ -> ml_name
-- On SEMISEMI reduce production simple_mlty_ -> ml_name
-- On SEMI reduce production simple_mlty_ -> ml_name
-- On RULE reduce production simple_mlty_ -> ml_name
-- On RPAREN reduce production simple_mlty_ -> ml_name
-- On REQUIRE reduce production simple_mlty_ -> ml_name
-- On RBRACK reduce production simple_mlty_ -> ml_name
-- On RBRACE reduce production simple_mlty_ -> ml_name
-- On OPERATION reduce production simple_mlty_ -> ml_name
-- On OPEN reduce production simple_mlty_ -> ml_name
-- On MODULE reduce production simple_mlty_ -> ml_name
-- On MLTYPE reduce production simple_mlty_ -> ml_name
-- On LET reduce production simple_mlty_ -> ml_name
-- On INCLUDE reduce production simple_mlty_ -> ml_name
-- On EXTERNAL reduce production simple_mlty_ -> ml_name
-- On EXCEPTION reduce production simple_mlty_ -> ml_name
-- On EQ reduce production simple_mlty_ -> ml_name
-- On EOF reduce production simple_mlty_ -> ml_name
-- On END reduce production simple_mlty_ -> ml_name
-- On DARROW reduce production simple_mlty_ -> ml_name
-- On COMMA reduce production simple_mlty_ -> ml_name
-- On BAR reduce production simple_mlty_ -> ml_name
-- On ARROW reduce production simple_mlty_ -> ml_name
-- On AND reduce production simple_mlty_ -> ml_name

State 103:
app_mlty_ -> ml_name nonempty_list(simple_mlty) . [ WITH WHEN VERBOSITY STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN MODULE MLTYPE LET INCLUDE EXTERNAL EXCEPTION EQ EOF END DARROW COMMA BAR ARROW AND ]
-- On WITH reduce production app_mlty_ -> ml_name nonempty_list(simple_mlty)
-- On WHEN reduce production app_mlty_ -> ml_name nonempty_list(simple_mlty)
-- On VERBOSITY reduce production app_mlty_ -> ml_name nonempty_list(simple_mlty)
-- On STAR reduce production app_mlty_ -> ml_name nonempty_list(simple_mlty)
-- On SEMISEMI reduce production app_mlty_ -> ml_name nonempty_list(simple_mlty)
-- On SEMI reduce production app_mlty_ -> ml_name nonempty_list(simple_mlty)
-- On RULE reduce production app_mlty_ -> ml_name nonempty_list(simple_mlty)
-- On RPAREN reduce production app_mlty_ -> ml_name nonempty_list(simple_mlty)
-- On REQUIRE reduce production app_mlty_ -> ml_name nonempty_list(simple_mlty)
-- On RBRACK reduce production app_mlty_ -> ml_name nonempty_list(simple_mlty)
-- On RBRACE reduce production app_mlty_ -> ml_name nonempty_list(simple_mlty)
-- On OPERATION reduce production app_mlty_ -> ml_name nonempty_list(simple_mlty)
-- On OPEN reduce production app_mlty_ -> ml_name nonempty_list(simple_mlty)
-- On MODULE reduce production app_mlty_ -> ml_name nonempty_list(simple_mlty)
-- On MLTYPE reduce production app_mlty_ -> ml_name nonempty_list(simple_mlty)
-- On LET reduce production app_mlty_ -> ml_name nonempty_list(simple_mlty)
-- On INCLUDE reduce production app_mlty_ -> ml_name nonempty_list(simple_mlty)
-- On EXTERNAL reduce production app_mlty_ -> ml_name nonempty_list(simple_mlty)
-- On EXCEPTION reduce production app_mlty_ -> ml_name nonempty_list(simple_mlty)
-- On EQ reduce production app_mlty_ -> ml_name nonempty_list(simple_mlty)
-- On EOF reduce production app_mlty_ -> ml_name nonempty_list(simple_mlty)
-- On END reduce production app_mlty_ -> ml_name nonempty_list(simple_mlty)
-- On DARROW reduce production app_mlty_ -> ml_name nonempty_list(simple_mlty)
-- On COMMA reduce production app_mlty_ -> ml_name nonempty_list(simple_mlty)
-- On BAR reduce production app_mlty_ -> ml_name nonempty_list(simple_mlty)
-- On ARROW reduce production app_mlty_ -> ml_name nonempty_list(simple_mlty)
-- On AND reduce production app_mlty_ -> ml_name nonempty_list(simple_mlty)

State 104:
prod_mlty -> mark_location(prod_mlty_) . [ WITH WHEN VERBOSITY SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN MODULE MLTYPE LET INCLUDE EXTERNAL EXCEPTION EOF END DARROW COMMA ARROW ]
-- On WITH reduce production prod_mlty -> mark_location(prod_mlty_)
-- On WHEN reduce production prod_mlty -> mark_location(prod_mlty_)
-- On VERBOSITY reduce production prod_mlty -> mark_location(prod_mlty_)
-- On SEMISEMI reduce production prod_mlty -> mark_location(prod_mlty_)
-- On SEMI reduce production prod_mlty -> mark_location(prod_mlty_)
-- On RULE reduce production prod_mlty -> mark_location(prod_mlty_)
-- On RPAREN reduce production prod_mlty -> mark_location(prod_mlty_)
-- On REQUIRE reduce production prod_mlty -> mark_location(prod_mlty_)
-- On RBRACK reduce production prod_mlty -> mark_location(prod_mlty_)
-- On RBRACE reduce production prod_mlty -> mark_location(prod_mlty_)
-- On OPERATION reduce production prod_mlty -> mark_location(prod_mlty_)
-- On OPEN reduce production prod_mlty -> mark_location(prod_mlty_)
-- On MODULE reduce production prod_mlty -> mark_location(prod_mlty_)
-- On MLTYPE reduce production prod_mlty -> mark_location(prod_mlty_)
-- On LET reduce production prod_mlty -> mark_location(prod_mlty_)
-- On INCLUDE reduce production prod_mlty -> mark_location(prod_mlty_)
-- On EXTERNAL reduce production prod_mlty -> mark_location(prod_mlty_)
-- On EXCEPTION reduce production prod_mlty -> mark_location(prod_mlty_)
-- On EOF reduce production prod_mlty -> mark_location(prod_mlty_)
-- On END reduce production prod_mlty -> mark_location(prod_mlty_)
-- On DARROW reduce production prod_mlty -> mark_location(prod_mlty_)
-- On COMMA reduce production prod_mlty -> mark_location(prod_mlty_)
-- On ARROW reduce production prod_mlty -> mark_location(prod_mlty_)

State 105:
mlty -> mark_location(mlty_) . [ WITH VERBOSITY SEMISEMI RULE RPAREN REQUIRE OPERATION OPEN MODULE MLTYPE LET INCLUDE EXTERNAL EXCEPTION EQ EOF END BAR AND ]
-- On WITH reduce production mlty -> mark_location(mlty_)
-- On VERBOSITY reduce production mlty -> mark_location(mlty_)
-- On SEMISEMI reduce production mlty -> mark_location(mlty_)
-- On RULE reduce production mlty -> mark_location(mlty_)
-- On RPAREN reduce production mlty -> mark_location(mlty_)
-- On REQUIRE reduce production mlty -> mark_location(mlty_)
-- On OPERATION reduce production mlty -> mark_location(mlty_)
-- On OPEN reduce production mlty -> mark_location(mlty_)
-- On MODULE reduce production mlty -> mark_location(mlty_)
-- On MLTYPE reduce production mlty -> mark_location(mlty_)
-- On LET reduce production mlty -> mark_location(mlty_)
-- On INCLUDE reduce production mlty -> mark_location(mlty_)
-- On EXTERNAL reduce production mlty -> mark_location(mlty_)
-- On EXCEPTION reduce production mlty -> mark_location(mlty_)
-- On EQ reduce production mlty -> mark_location(mlty_)
-- On EOF reduce production mlty -> mark_location(mlty_)
-- On END reduce production mlty -> mark_location(mlty_)
-- On BAR reduce production mlty -> mark_location(mlty_)
-- On AND reduce production mlty -> mark_location(mlty_)

State 106:
app_mlty -> mark_location(app_mlty_) . [ WITH WHEN VERBOSITY STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN MODULE MLTYPE LET INCLUDE EXTERNAL EXCEPTION EQ EOF END DARROW COMMA BAR ARROW AND ]
-- On WITH reduce production app_mlty -> mark_location(app_mlty_)
-- On WHEN reduce production app_mlty -> mark_location(app_mlty_)
-- On VERBOSITY reduce production app_mlty -> mark_location(app_mlty_)
-- On STAR reduce production app_mlty -> mark_location(app_mlty_)
-- On SEMISEMI reduce production app_mlty -> mark_location(app_mlty_)
-- On SEMI reduce production app_mlty -> mark_location(app_mlty_)
-- On RULE reduce production app_mlty -> mark_location(app_mlty_)
-- On RPAREN reduce production app_mlty -> mark_location(app_mlty_)
-- On REQUIRE reduce production app_mlty -> mark_location(app_mlty_)
-- On RBRACK reduce production app_mlty -> mark_location(app_mlty_)
-- On RBRACE reduce production app_mlty -> mark_location(app_mlty_)
-- On OPERATION reduce production app_mlty -> mark_location(app_mlty_)
-- On OPEN reduce production app_mlty -> mark_location(app_mlty_)
-- On MODULE reduce production app_mlty -> mark_location(app_mlty_)
-- On MLTYPE reduce production app_mlty -> mark_location(app_mlty_)
-- On LET reduce production app_mlty -> mark_location(app_mlty_)
-- On INCLUDE reduce production app_mlty -> mark_location(app_mlty_)
-- On EXTERNAL reduce production app_mlty -> mark_location(app_mlty_)
-- On EXCEPTION reduce production app_mlty -> mark_location(app_mlty_)
-- On EQ reduce production app_mlty -> mark_location(app_mlty_)
-- On EOF reduce production app_mlty -> mark_location(app_mlty_)
-- On END reduce production app_mlty -> mark_location(app_mlty_)
-- On DARROW reduce production app_mlty -> mark_location(app_mlty_)
-- On COMMA reduce production app_mlty -> mark_location(app_mlty_)
-- On BAR reduce production app_mlty -> mark_location(app_mlty_)
-- On ARROW reduce production app_mlty -> mark_location(app_mlty_)
-- On AND reduce production app_mlty -> mark_location(app_mlty_)

State 107:
mark_location(app_mlty_) -> app_mlty_ . [ WITH WHEN VERBOSITY STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN MODULE MLTYPE LET INCLUDE EXTERNAL EXCEPTION EQ EOF END DARROW COMMA BAR ARROW AND ]
-- On WITH reduce production mark_location(app_mlty_) -> app_mlty_
-- On WHEN reduce production mark_location(app_mlty_) -> app_mlty_
-- On VERBOSITY reduce production mark_location(app_mlty_) -> app_mlty_
-- On STAR reduce production mark_location(app_mlty_) -> app_mlty_
-- On SEMISEMI reduce production mark_location(app_mlty_) -> app_mlty_
-- On SEMI reduce production mark_location(app_mlty_) -> app_mlty_
-- On RULE reduce production mark_location(app_mlty_) -> app_mlty_
-- On RPAREN reduce production mark_location(app_mlty_) -> app_mlty_
-- On REQUIRE reduce production mark_location(app_mlty_) -> app_mlty_
-- On RBRACK reduce production mark_location(app_mlty_) -> app_mlty_
-- On RBRACE reduce production mark_location(app_mlty_) -> app_mlty_
-- On OPERATION reduce production mark_location(app_mlty_) -> app_mlty_
-- On OPEN reduce production mark_location(app_mlty_) -> app_mlty_
-- On MODULE reduce production mark_location(app_mlty_) -> app_mlty_
-- On MLTYPE reduce production mark_location(app_mlty_) -> app_mlty_
-- On LET reduce production mark_location(app_mlty_) -> app_mlty_
-- On INCLUDE reduce production mark_location(app_mlty_) -> app_mlty_
-- On EXTERNAL reduce production mark_location(app_mlty_) -> app_mlty_
-- On EXCEPTION reduce production mark_location(app_mlty_) -> app_mlty_
-- On EQ reduce production mark_location(app_mlty_) -> app_mlty_
-- On EOF reduce production mark_location(app_mlty_) -> app_mlty_
-- On END reduce production mark_location(app_mlty_) -> app_mlty_
-- On DARROW reduce production mark_location(app_mlty_) -> app_mlty_
-- On COMMA reduce production mark_location(app_mlty_) -> app_mlty_
-- On BAR reduce production mark_location(app_mlty_) -> app_mlty_
-- On ARROW reduce production mark_location(app_mlty_) -> app_mlty_
-- On AND reduce production mark_location(app_mlty_) -> app_mlty_

State 108:
separated_nonempty_list(STAR,app_mlty) -> app_mlty . [ WITH WHEN VERBOSITY SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN MODULE MLTYPE LET INCLUDE EXTERNAL EXCEPTION EQ EOF END DARROW COMMA BAR ARROW AND ]
separated_nonempty_list(STAR,app_mlty) -> app_mlty . STAR separated_nonempty_list(STAR,app_mlty) [ WITH WHEN VERBOSITY SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN MODULE MLTYPE LET INCLUDE EXTERNAL EXCEPTION EQ EOF END DARROW COMMA BAR ARROW AND ]
-- On STAR shift to state 109
-- On WITH reduce production separated_nonempty_list(STAR,app_mlty) -> app_mlty
-- On WHEN reduce production separated_nonempty_list(STAR,app_mlty) -> app_mlty
-- On VERBOSITY reduce production separated_nonempty_list(STAR,app_mlty) -> app_mlty
-- On SEMISEMI reduce production separated_nonempty_list(STAR,app_mlty) -> app_mlty
-- On SEMI reduce production separated_nonempty_list(STAR,app_mlty) -> app_mlty
-- On RULE reduce production separated_nonempty_list(STAR,app_mlty) -> app_mlty
-- On RPAREN reduce production separated_nonempty_list(STAR,app_mlty) -> app_mlty
-- On REQUIRE reduce production separated_nonempty_list(STAR,app_mlty) -> app_mlty
-- On RBRACK reduce production separated_nonempty_list(STAR,app_mlty) -> app_mlty
-- On RBRACE reduce production separated_nonempty_list(STAR,app_mlty) -> app_mlty
-- On OPERATION reduce production separated_nonempty_list(STAR,app_mlty) -> app_mlty
-- On OPEN reduce production separated_nonempty_list(STAR,app_mlty) -> app_mlty
-- On MODULE reduce production separated_nonempty_list(STAR,app_mlty) -> app_mlty
-- On MLTYPE reduce production separated_nonempty_list(STAR,app_mlty) -> app_mlty
-- On LET reduce production separated_nonempty_list(STAR,app_mlty) -> app_mlty
-- On INCLUDE reduce production separated_nonempty_list(STAR,app_mlty) -> app_mlty
-- On EXTERNAL reduce production separated_nonempty_list(STAR,app_mlty) -> app_mlty
-- On EXCEPTION reduce production separated_nonempty_list(STAR,app_mlty) -> app_mlty
-- On EQ reduce production separated_nonempty_list(STAR,app_mlty) -> app_mlty
-- On EOF reduce production separated_nonempty_list(STAR,app_mlty) -> app_mlty
-- On END reduce production separated_nonempty_list(STAR,app_mlty) -> app_mlty
-- On DARROW reduce production separated_nonempty_list(STAR,app_mlty) -> app_mlty
-- On COMMA reduce production separated_nonempty_list(STAR,app_mlty) -> app_mlty
-- On BAR reduce production separated_nonempty_list(STAR,app_mlty) -> app_mlty
-- On ARROW reduce production separated_nonempty_list(STAR,app_mlty) -> app_mlty
-- On AND reduce production separated_nonempty_list(STAR,app_mlty) -> app_mlty

State 109:
separated_nonempty_list(STAR,app_mlty) -> app_mlty STAR . separated_nonempty_list(STAR,app_mlty) [ WITH WHEN VERBOSITY SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN MODULE MLTYPE LET INCLUDE EXTERNAL EXCEPTION EQ EOF END DARROW COMMA BAR ARROW AND ]
-- On UNDERSCORE shift to state 55
-- On REF shift to state 56
-- On NAME shift to state 57
-- On MLUNIT shift to state 58
-- On MLSTRING shift to state 59
-- On MLJUDGEMENT shift to state 60
-- On MLDERIVATION shift to state 61
-- On MLBOUNDARY shift to state 62
-- On LPAREN shift to state 63
-- On simple_mlty_ shift to state 82
-- On separated_nonempty_list(STAR,app_mlty) shift to state 110
-- On module_path shift to state 87
-- On module_name shift to state 45
-- On ml_name shift to state 102
-- On mark_location(app_mlty_) shift to state 106
-- On app_mlty_ shift to state 107
-- On app_mlty shift to state 108

State 110:
separated_nonempty_list(STAR,app_mlty) -> app_mlty STAR separated_nonempty_list(STAR,app_mlty) . [ WITH WHEN VERBOSITY SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN MODULE MLTYPE LET INCLUDE EXTERNAL EXCEPTION EQ EOF END DARROW COMMA BAR ARROW AND ]
-- On WITH reduce production separated_nonempty_list(STAR,app_mlty) -> app_mlty STAR separated_nonempty_list(STAR,app_mlty)
-- On WHEN reduce production separated_nonempty_list(STAR,app_mlty) -> app_mlty STAR separated_nonempty_list(STAR,app_mlty)
-- On VERBOSITY reduce production separated_nonempty_list(STAR,app_mlty) -> app_mlty STAR separated_nonempty_list(STAR,app_mlty)
-- On SEMISEMI reduce production separated_nonempty_list(STAR,app_mlty) -> app_mlty STAR separated_nonempty_list(STAR,app_mlty)
-- On SEMI reduce production separated_nonempty_list(STAR,app_mlty) -> app_mlty STAR separated_nonempty_list(STAR,app_mlty)
-- On RULE reduce production separated_nonempty_list(STAR,app_mlty) -> app_mlty STAR separated_nonempty_list(STAR,app_mlty)
-- On RPAREN reduce production separated_nonempty_list(STAR,app_mlty) -> app_mlty STAR separated_nonempty_list(STAR,app_mlty)
-- On REQUIRE reduce production separated_nonempty_list(STAR,app_mlty) -> app_mlty STAR separated_nonempty_list(STAR,app_mlty)
-- On RBRACK reduce production separated_nonempty_list(STAR,app_mlty) -> app_mlty STAR separated_nonempty_list(STAR,app_mlty)
-- On RBRACE reduce production separated_nonempty_list(STAR,app_mlty) -> app_mlty STAR separated_nonempty_list(STAR,app_mlty)
-- On OPERATION reduce production separated_nonempty_list(STAR,app_mlty) -> app_mlty STAR separated_nonempty_list(STAR,app_mlty)
-- On OPEN reduce production separated_nonempty_list(STAR,app_mlty) -> app_mlty STAR separated_nonempty_list(STAR,app_mlty)
-- On MODULE reduce production separated_nonempty_list(STAR,app_mlty) -> app_mlty STAR separated_nonempty_list(STAR,app_mlty)
-- On MLTYPE reduce production separated_nonempty_list(STAR,app_mlty) -> app_mlty STAR separated_nonempty_list(STAR,app_mlty)
-- On LET reduce production separated_nonempty_list(STAR,app_mlty) -> app_mlty STAR separated_nonempty_list(STAR,app_mlty)
-- On INCLUDE reduce production separated_nonempty_list(STAR,app_mlty) -> app_mlty STAR separated_nonempty_list(STAR,app_mlty)
-- On EXTERNAL reduce production separated_nonempty_list(STAR,app_mlty) -> app_mlty STAR separated_nonempty_list(STAR,app_mlty)
-- On EXCEPTION reduce production separated_nonempty_list(STAR,app_mlty) -> app_mlty STAR separated_nonempty_list(STAR,app_mlty)
-- On EQ reduce production separated_nonempty_list(STAR,app_mlty) -> app_mlty STAR separated_nonempty_list(STAR,app_mlty)
-- On EOF reduce production separated_nonempty_list(STAR,app_mlty) -> app_mlty STAR separated_nonempty_list(STAR,app_mlty)
-- On END reduce production separated_nonempty_list(STAR,app_mlty) -> app_mlty STAR separated_nonempty_list(STAR,app_mlty)
-- On DARROW reduce production separated_nonempty_list(STAR,app_mlty) -> app_mlty STAR separated_nonempty_list(STAR,app_mlty)
-- On COMMA reduce production separated_nonempty_list(STAR,app_mlty) -> app_mlty STAR separated_nonempty_list(STAR,app_mlty)
-- On BAR reduce production separated_nonempty_list(STAR,app_mlty) -> app_mlty STAR separated_nonempty_list(STAR,app_mlty)
-- On ARROW reduce production separated_nonempty_list(STAR,app_mlty) -> app_mlty STAR separated_nonempty_list(STAR,app_mlty)
-- On AND reduce production separated_nonempty_list(STAR,app_mlty) -> app_mlty STAR separated_nonempty_list(STAR,app_mlty)

State 111:
mlty_ -> prod_mlty ARROW . mlty [ WITH VERBOSITY SEMISEMI RULE RPAREN REQUIRE OPERATION OPEN MODULE MLTYPE LET INCLUDE EXTERNAL EXCEPTION EQ EOF END BAR AND ]
-- On UNDERSCORE shift to state 55
-- On REF shift to state 56
-- On NAME shift to state 57
-- On MLUNIT shift to state 58
-- On MLSTRING shift to state 59
-- On MLJUDGEMENT shift to state 60
-- On MLDERIVATION shift to state 61
-- On MLBOUNDARY shift to state 62
-- On LPAREN shift to state 63
-- On simple_mlty_ shift to state 82
-- On separated_nonempty_list(STAR,app_mlty) shift to state 83
-- On prod_mlty_ shift to state 84
-- On prod_mlty shift to state 85
-- On module_path shift to state 87
-- On module_name shift to state 45
-- On mlty_ shift to state 100
-- On mlty shift to state 112
-- On ml_name shift to state 102
-- On mark_location(prod_mlty_) shift to state 104
-- On mark_location(mlty_) shift to state 105
-- On mark_location(app_mlty_) shift to state 106
-- On app_mlty_ shift to state 107
-- On app_mlty shift to state 108

State 112:
mlty_ -> prod_mlty ARROW mlty . [ WITH VERBOSITY SEMISEMI RULE RPAREN REQUIRE OPERATION OPEN MODULE MLTYPE LET INCLUDE EXTERNAL EXCEPTION EQ EOF END BAR AND ]
-- On WITH reduce production mlty_ -> prod_mlty ARROW mlty
-- On VERBOSITY reduce production mlty_ -> prod_mlty ARROW mlty
-- On SEMISEMI reduce production mlty_ -> prod_mlty ARROW mlty
-- On RULE reduce production mlty_ -> prod_mlty ARROW mlty
-- On RPAREN reduce production mlty_ -> prod_mlty ARROW mlty
-- On REQUIRE reduce production mlty_ -> prod_mlty ARROW mlty
-- On OPERATION reduce production mlty_ -> prod_mlty ARROW mlty
-- On OPEN reduce production mlty_ -> prod_mlty ARROW mlty
-- On MODULE reduce production mlty_ -> prod_mlty ARROW mlty
-- On MLTYPE reduce production mlty_ -> prod_mlty ARROW mlty
-- On LET reduce production mlty_ -> prod_mlty ARROW mlty
-- On INCLUDE reduce production mlty_ -> prod_mlty ARROW mlty
-- On EXTERNAL reduce production mlty_ -> prod_mlty ARROW mlty
-- On EXCEPTION reduce production mlty_ -> prod_mlty ARROW mlty
-- On EQ reduce production mlty_ -> prod_mlty ARROW mlty
-- On EOF reduce production mlty_ -> prod_mlty ARROW mlty
-- On END reduce production mlty_ -> prod_mlty ARROW mlty
-- On BAR reduce production mlty_ -> prod_mlty ARROW mlty
-- On AND reduce production mlty_ -> prod_mlty ARROW mlty

State 113:
simple_mlty_ -> LPAREN mlty_ . RPAREN [ WITH WHEN VERBOSITY UNDERSCORE STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN NAME MODULE MLUNIT MLTYPE MLSTRING MLJUDGEMENT MLDERIVATION MLBOUNDARY LPAREN LET INCLUDE EXTERNAL EXCEPTION EQ EOF END DARROW COMMA BAR ARROW AND ]
-- On RPAREN shift to state 114

State 114:
simple_mlty_ -> LPAREN mlty_ RPAREN . [ WITH WHEN VERBOSITY UNDERSCORE STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN NAME MODULE MLUNIT MLTYPE MLSTRING MLJUDGEMENT MLDERIVATION MLBOUNDARY LPAREN LET INCLUDE EXTERNAL EXCEPTION EQ EOF END DARROW COMMA BAR ARROW AND ]
-- On WITH reduce production simple_mlty_ -> LPAREN mlty_ RPAREN
-- On WHEN reduce production simple_mlty_ -> LPAREN mlty_ RPAREN
-- On VERBOSITY reduce production simple_mlty_ -> LPAREN mlty_ RPAREN
-- On UNDERSCORE reduce production simple_mlty_ -> LPAREN mlty_ RPAREN
-- On STAR reduce production simple_mlty_ -> LPAREN mlty_ RPAREN
-- On SEMISEMI reduce production simple_mlty_ -> LPAREN mlty_ RPAREN
-- On SEMI reduce production simple_mlty_ -> LPAREN mlty_ RPAREN
-- On RULE reduce production simple_mlty_ -> LPAREN mlty_ RPAREN
-- On RPAREN reduce production simple_mlty_ -> LPAREN mlty_ RPAREN
-- On REQUIRE reduce production simple_mlty_ -> LPAREN mlty_ RPAREN
-- On RBRACK reduce production simple_mlty_ -> LPAREN mlty_ RPAREN
-- On RBRACE reduce production simple_mlty_ -> LPAREN mlty_ RPAREN
-- On OPERATION reduce production simple_mlty_ -> LPAREN mlty_ RPAREN
-- On OPEN reduce production simple_mlty_ -> LPAREN mlty_ RPAREN
-- On NAME reduce production simple_mlty_ -> LPAREN mlty_ RPAREN
-- On MODULE reduce production simple_mlty_ -> LPAREN mlty_ RPAREN
-- On MLUNIT reduce production simple_mlty_ -> LPAREN mlty_ RPAREN
-- On MLTYPE reduce production simple_mlty_ -> LPAREN mlty_ RPAREN
-- On MLSTRING reduce production simple_mlty_ -> LPAREN mlty_ RPAREN
-- On MLJUDGEMENT reduce production simple_mlty_ -> LPAREN mlty_ RPAREN
-- On MLDERIVATION reduce production simple_mlty_ -> LPAREN mlty_ RPAREN
-- On MLBOUNDARY reduce production simple_mlty_ -> LPAREN mlty_ RPAREN
-- On LPAREN reduce production simple_mlty_ -> LPAREN mlty_ RPAREN
-- On LET reduce production simple_mlty_ -> LPAREN mlty_ RPAREN
-- On INCLUDE reduce production simple_mlty_ -> LPAREN mlty_ RPAREN
-- On EXTERNAL reduce production simple_mlty_ -> LPAREN mlty_ RPAREN
-- On EXCEPTION reduce production simple_mlty_ -> LPAREN mlty_ RPAREN
-- On EQ reduce production simple_mlty_ -> LPAREN mlty_ RPAREN
-- On EOF reduce production simple_mlty_ -> LPAREN mlty_ RPAREN
-- On END reduce production simple_mlty_ -> LPAREN mlty_ RPAREN
-- On DARROW reduce production simple_mlty_ -> LPAREN mlty_ RPAREN
-- On COMMA reduce production simple_mlty_ -> LPAREN mlty_ RPAREN
-- On BAR reduce production simple_mlty_ -> LPAREN mlty_ RPAREN
-- On ARROW reduce production simple_mlty_ -> LPAREN mlty_ RPAREN
-- On AND reduce production simple_mlty_ -> LPAREN mlty_ RPAREN

State 115:
app_mlty_ -> REF simple_mlty . [ WITH WHEN VERBOSITY STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN MODULE MLTYPE LET INCLUDE EXTERNAL EXCEPTION EQ EOF END DARROW COMMA BAR ARROW AND ]
-- On WITH reduce production app_mlty_ -> REF simple_mlty
-- On WHEN reduce production app_mlty_ -> REF simple_mlty
-- On VERBOSITY reduce production app_mlty_ -> REF simple_mlty
-- On STAR reduce production app_mlty_ -> REF simple_mlty
-- On SEMISEMI reduce production app_mlty_ -> REF simple_mlty
-- On SEMI reduce production app_mlty_ -> REF simple_mlty
-- On RULE reduce production app_mlty_ -> REF simple_mlty
-- On RPAREN reduce production app_mlty_ -> REF simple_mlty
-- On REQUIRE reduce production app_mlty_ -> REF simple_mlty
-- On RBRACK reduce production app_mlty_ -> REF simple_mlty
-- On RBRACE reduce production app_mlty_ -> REF simple_mlty
-- On OPERATION reduce production app_mlty_ -> REF simple_mlty
-- On OPEN reduce production app_mlty_ -> REF simple_mlty
-- On MODULE reduce production app_mlty_ -> REF simple_mlty
-- On MLTYPE reduce production app_mlty_ -> REF simple_mlty
-- On LET reduce production app_mlty_ -> REF simple_mlty
-- On INCLUDE reduce production app_mlty_ -> REF simple_mlty
-- On EXTERNAL reduce production app_mlty_ -> REF simple_mlty
-- On EXCEPTION reduce production app_mlty_ -> REF simple_mlty
-- On EQ reduce production app_mlty_ -> REF simple_mlty
-- On EOF reduce production app_mlty_ -> REF simple_mlty
-- On END reduce production app_mlty_ -> REF simple_mlty
-- On DARROW reduce production app_mlty_ -> REF simple_mlty
-- On COMMA reduce production app_mlty_ -> REF simple_mlty
-- On BAR reduce production app_mlty_ -> REF simple_mlty
-- On ARROW reduce production app_mlty_ -> REF simple_mlty
-- On AND reduce production app_mlty_ -> REF simple_mlty

State 116:
ml_schema_ -> MLFORALL . nonempty_list(opt_name(ml_name)) COMMA mlty [ RPAREN EQ ]
-- On UNDERSCORE shift to state 117
-- On NAME shift to state 118
-- On LPAREN shift to state 89
-- On opt_name(ml_name) shift to state 119
-- On nonempty_list(opt_name(ml_name)) shift to state 122
-- On ml_name shift to state 121

State 117:
opt_name(ml_name) -> UNDERSCORE . [ WITH VERBOSITY UNDERSCORE SEMISEMI RULE REQUIRE OPERATION OPEN NAME MODULE MLTYPE LPAREN LET INCLUDE EXTERNAL EXCEPTION EQ EOF END COMMA COLON ]
-- On WITH reduce production opt_name(ml_name) -> UNDERSCORE
-- On VERBOSITY reduce production opt_name(ml_name) -> UNDERSCORE
-- On UNDERSCORE reduce production opt_name(ml_name) -> UNDERSCORE
-- On SEMISEMI reduce production opt_name(ml_name) -> UNDERSCORE
-- On RULE reduce production opt_name(ml_name) -> UNDERSCORE
-- On REQUIRE reduce production opt_name(ml_name) -> UNDERSCORE
-- On OPERATION reduce production opt_name(ml_name) -> UNDERSCORE
-- On OPEN reduce production opt_name(ml_name) -> UNDERSCORE
-- On NAME reduce production opt_name(ml_name) -> UNDERSCORE
-- On MODULE reduce production opt_name(ml_name) -> UNDERSCORE
-- On MLTYPE reduce production opt_name(ml_name) -> UNDERSCORE
-- On LPAREN reduce production opt_name(ml_name) -> UNDERSCORE
-- On LET reduce production opt_name(ml_name) -> UNDERSCORE
-- On INCLUDE reduce production opt_name(ml_name) -> UNDERSCORE
-- On EXTERNAL reduce production opt_name(ml_name) -> UNDERSCORE
-- On EXCEPTION reduce production opt_name(ml_name) -> UNDERSCORE
-- On EQ reduce production opt_name(ml_name) -> UNDERSCORE
-- On EOF reduce production opt_name(ml_name) -> UNDERSCORE
-- On END reduce production opt_name(ml_name) -> UNDERSCORE
-- On COMMA reduce production opt_name(ml_name) -> UNDERSCORE
-- On COLON reduce production opt_name(ml_name) -> UNDERSCORE

State 118:
ml_name -> NAME . [ WITH VERBOSITY UNDERSCORE SEMISEMI RULE REQUIRE OPERATION OPEN NAME MODULE MLTYPE LPAREN LET INCLUDE EXTERNAL EXCEPTION EQ EOF END COMMA COLONGT COLON ARROW ]
-- On WITH reduce production ml_name -> NAME
-- On VERBOSITY reduce production ml_name -> NAME
-- On UNDERSCORE reduce production ml_name -> NAME
-- On SEMISEMI reduce production ml_name -> NAME
-- On RULE reduce production ml_name -> NAME
-- On REQUIRE reduce production ml_name -> NAME
-- On OPERATION reduce production ml_name -> NAME
-- On OPEN reduce production ml_name -> NAME
-- On NAME reduce production ml_name -> NAME
-- On MODULE reduce production ml_name -> NAME
-- On MLTYPE reduce production ml_name -> NAME
-- On LPAREN reduce production ml_name -> NAME
-- On LET reduce production ml_name -> NAME
-- On INCLUDE reduce production ml_name -> NAME
-- On EXTERNAL reduce production ml_name -> NAME
-- On EXCEPTION reduce production ml_name -> NAME
-- On EQ reduce production ml_name -> NAME
-- On EOF reduce production ml_name -> NAME
-- On END reduce production ml_name -> NAME
-- On COMMA reduce production ml_name -> NAME
-- On COLONGT reduce production ml_name -> NAME
-- On COLON reduce production ml_name -> NAME
-- On ARROW reduce production ml_name -> NAME

State 119:
nonempty_list(opt_name(ml_name)) -> opt_name(ml_name) . [ COMMA ]
nonempty_list(opt_name(ml_name)) -> opt_name(ml_name) . nonempty_list(opt_name(ml_name)) [ COMMA ]
-- On UNDERSCORE shift to state 117
-- On NAME shift to state 118
-- On LPAREN shift to state 89
-- On opt_name(ml_name) shift to state 119
-- On nonempty_list(opt_name(ml_name)) shift to state 120
-- On ml_name shift to state 121
-- On COMMA reduce production nonempty_list(opt_name(ml_name)) -> opt_name(ml_name)

State 120:
nonempty_list(opt_name(ml_name)) -> opt_name(ml_name) nonempty_list(opt_name(ml_name)) . [ COMMA ]
-- On COMMA reduce production nonempty_list(opt_name(ml_name)) -> opt_name(ml_name) nonempty_list(opt_name(ml_name))

State 121:
opt_name(ml_name) -> ml_name . [ WITH VERBOSITY UNDERSCORE SEMISEMI RULE REQUIRE OPERATION OPEN NAME MODULE MLTYPE LPAREN LET INCLUDE EXTERNAL EXCEPTION EQ EOF END COMMA COLON ]
-- On WITH reduce production opt_name(ml_name) -> ml_name
-- On VERBOSITY reduce production opt_name(ml_name) -> ml_name
-- On UNDERSCORE reduce production opt_name(ml_name) -> ml_name
-- On SEMISEMI reduce production opt_name(ml_name) -> ml_name
-- On RULE reduce production opt_name(ml_name) -> ml_name
-- On REQUIRE reduce production opt_name(ml_name) -> ml_name
-- On OPERATION reduce production opt_name(ml_name) -> ml_name
-- On OPEN reduce production opt_name(ml_name) -> ml_name
-- On NAME reduce production opt_name(ml_name) -> ml_name
-- On MODULE reduce production opt_name(ml_name) -> ml_name
-- On MLTYPE reduce production opt_name(ml_name) -> ml_name
-- On LPAREN reduce production opt_name(ml_name) -> ml_name
-- On LET reduce production opt_name(ml_name) -> ml_name
-- On INCLUDE reduce production opt_name(ml_name) -> ml_name
-- On EXTERNAL reduce production opt_name(ml_name) -> ml_name
-- On EXCEPTION reduce production opt_name(ml_name) -> ml_name
-- On EQ reduce production opt_name(ml_name) -> ml_name
-- On EOF reduce production opt_name(ml_name) -> ml_name
-- On END reduce production opt_name(ml_name) -> ml_name
-- On COMMA reduce production opt_name(ml_name) -> ml_name
-- On COLON reduce production opt_name(ml_name) -> ml_name

State 122:
ml_schema_ -> MLFORALL nonempty_list(opt_name(ml_name)) . COMMA mlty [ RPAREN EQ ]
-- On COMMA shift to state 123

State 123:
ml_schema_ -> MLFORALL nonempty_list(opt_name(ml_name)) COMMA . mlty [ RPAREN EQ ]
-- On UNDERSCORE shift to state 55
-- On REF shift to state 56
-- On NAME shift to state 57
-- On MLUNIT shift to state 58
-- On MLSTRING shift to state 59
-- On MLJUDGEMENT shift to state 60
-- On MLDERIVATION shift to state 61
-- On MLBOUNDARY shift to state 62
-- On LPAREN shift to state 63
-- On simple_mlty_ shift to state 82
-- On separated_nonempty_list(STAR,app_mlty) shift to state 83
-- On prod_mlty_ shift to state 84
-- On prod_mlty shift to state 85
-- On module_path shift to state 87
-- On module_name shift to state 45
-- On mlty_ shift to state 100
-- On mlty shift to state 124
-- On ml_name shift to state 102
-- On mark_location(prod_mlty_) shift to state 104
-- On mark_location(mlty_) shift to state 105
-- On mark_location(app_mlty_) shift to state 106
-- On app_mlty_ shift to state 107
-- On app_mlty shift to state 108

State 124:
ml_schema_ -> MLFORALL nonempty_list(opt_name(ml_name)) COMMA mlty . [ RPAREN EQ ]
-- On RPAREN reduce production ml_schema_ -> MLFORALL nonempty_list(opt_name(ml_name)) COMMA mlty
-- On EQ reduce production ml_schema_ -> MLFORALL nonempty_list(opt_name(ml_name)) COMMA mlty

State 125:
ml_schema_ -> mlty . [ RPAREN EQ ]
-- On RPAREN reduce production ml_schema_ -> mlty
-- On EQ reduce production ml_schema_ -> mlty

State 126:
mark_location(ml_schema_) -> ml_schema_ . [ RPAREN EQ ]
-- On RPAREN reduce production mark_location(ml_schema_) -> ml_schema_
-- On EQ reduce production mark_location(ml_schema_) -> ml_schema_

State 127:
let_annotation -> COLONGT ml_schema . [ EQ ]
-- On EQ reduce production let_annotation -> COLONGT ml_schema

State 128:
ml_schema -> mark_location(ml_schema_) . [ RPAREN EQ ]
-- On RPAREN reduce production ml_schema -> mark_location(ml_schema_)
-- On EQ reduce production ml_schema -> mark_location(ml_schema_)

State 129:
let_clause -> UNDERSCORE COLON . app_term EQ term [ WITH VERBOSITY SEMISEMI RULE REQUIRE OPERATION OPEN MODULE MLTYPE LET INCLUDE IN EXTERNAL EXCEPTION EOF END AND ]
-- On REF shift to state 4
-- On RAISE shift to state 12
-- On QUOTED_STRING shift to state 5
-- On PREFIXOP shift to state 6
-- On OCCURS shift to state 18
-- On NATURAL shift to state 7
-- On NAME shift to state 8
-- On LPAREN shift to state 9
-- On LBRACK shift to state 13
-- On CONVERT shift to state 130
-- On CONTEXT shift to state 136
-- On CONGRUENCE shift to state 138
-- On BANG shift to state 19
-- On ABSTRACT shift to state 144
-- On tt_name shift to state 20
-- On substitution_term_ shift to state 147
-- On substitution_term shift to state 148
-- On simple_term_ shift to state 21
-- On prefix_term_ shift to state 134
-- On module_path shift to state 24
-- On module_name shift to state 45
-- On mark_location(substitution_term_) shift to state 135
-- On mark_location(app_term_) shift to state 152
-- On app_term_ shift to state 153
-- On app_term shift to state 154
-- On any_name shift to state 47

State 130:
app_term_ -> CONVERT . substitution_term substitution_term [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQEQ EQ EOF END COMMA COLONQT COLONGT COLONEQ COLON BY BAR ARROW AND ]
-- On REF shift to state 4
-- On QUOTED_STRING shift to state 5
-- On PREFIXOP shift to state 6
-- On NATURAL shift to state 7
-- On NAME shift to state 8
-- On LPAREN shift to state 9
-- On LBRACK shift to state 13
-- On BANG shift to state 19
-- On tt_name shift to state 20
-- On substitution_term_ shift to state 48
-- On substitution_term shift to state 131
-- On simple_term_ shift to state 21
-- On prefix_term_ shift to state 134
-- On module_path shift to state 24
-- On module_name shift to state 45
-- On mark_location(substitution_term_) shift to state 135
-- On any_name shift to state 47

State 131:
app_term_ -> CONVERT substitution_term . substitution_term [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQEQ EQ EOF END COMMA COLONQT COLONGT COLONEQ COLON BY BAR ARROW AND ]
substitution_term_ -> substitution_term . substitution [ REF QUOTED_STRING PREFIXOP NATURAL NAME LPAREN LBRACK LBRACE BANG ]
-- On REF shift to state 4
-- On QUOTED_STRING shift to state 5
-- On PREFIXOP shift to state 6
-- On NATURAL shift to state 7
-- On NAME shift to state 8
-- On LPAREN shift to state 9
-- On LBRACK shift to state 13
-- On LBRACE shift to state 50
-- On BANG shift to state 19
-- On tt_name shift to state 20
-- On substitution_term_ shift to state 48
-- On substitution_term shift to state 132
-- On substitution shift to state 133
-- On simple_term_ shift to state 21
-- On prefix_term_ shift to state 134
-- On module_path shift to state 24
-- On module_name shift to state 45
-- On mark_location(substitution_term_) shift to state 135
-- On any_name shift to state 47

State 132:
app_term_ -> CONVERT substitution_term substitution_term . [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQEQ EQ EOF END COMMA COLONQT COLONGT COLONEQ COLON BY BAR ARROW AND ]
substitution_term_ -> substitution_term . substitution [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN MODULE MLTYPE LET LBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQEQ EQ EOF END COMMA COLONQT COLONGT COLONEQ COLON BY BAR ARROW AND ]
-- On LBRACE shift to state 50
-- On substitution shift to state 133
-- On WITH reduce production app_term_ -> CONVERT substitution_term substitution_term
-- On VERBOSITY reduce production app_term_ -> CONVERT substitution_term substitution_term
-- On TRY reduce production app_term_ -> CONVERT substitution_term substitution_term
-- On STAR reduce production app_term_ -> CONVERT substitution_term substitution_term
-- On SEMISEMI reduce production app_term_ -> CONVERT substitution_term substitution_term
-- On SEMI reduce production app_term_ -> CONVERT substitution_term substitution_term
-- On RULE reduce production app_term_ -> CONVERT substitution_term substitution_term
-- On RPAREN reduce production app_term_ -> CONVERT substitution_term substitution_term
-- On REQUIRE reduce production app_term_ -> CONVERT substitution_term substitution_term
-- On RBRACK reduce production app_term_ -> CONVERT substitution_term substitution_term
-- On RBRACE reduce production app_term_ -> CONVERT substitution_term substitution_term
-- On OPERATION reduce production app_term_ -> CONVERT substitution_term substitution_term
-- On OPEN reduce production app_term_ -> CONVERT substitution_term substitution_term
-- On MODULE reduce production app_term_ -> CONVERT substitution_term substitution_term
-- On MLTYPE reduce production app_term_ -> CONVERT substitution_term substitution_term
-- On LET reduce production app_term_ -> CONVERT substitution_term substitution_term
-- On INFIXOP4 reduce production app_term_ -> CONVERT substitution_term substitution_term
-- On INFIXOP3 reduce production app_term_ -> CONVERT substitution_term substitution_term
-- On INFIXOP2 reduce production app_term_ -> CONVERT substitution_term substitution_term
-- On INFIXOP1 reduce production app_term_ -> CONVERT substitution_term substitution_term
-- On INFIXOP0 reduce production app_term_ -> CONVERT substitution_term substitution_term
-- On INFIXCONS reduce production app_term_ -> CONVERT substitution_term substitution_term
-- On INCLUDE reduce production app_term_ -> CONVERT substitution_term substitution_term
-- On IN reduce production app_term_ -> CONVERT substitution_term substitution_term
-- On EXTERNAL reduce production app_term_ -> CONVERT substitution_term substitution_term
-- On EXCEPTION reduce production app_term_ -> CONVERT substitution_term substitution_term
-- On EQEQ reduce production app_term_ -> CONVERT substitution_term substitution_term
-- On EQ reduce production app_term_ -> CONVERT substitution_term substitution_term
-- On EOF reduce production app_term_ -> CONVERT substitution_term substitution_term
-- On END reduce production app_term_ -> CONVERT substitution_term substitution_term
-- On COMMA reduce production app_term_ -> CONVERT substitution_term substitution_term
-- On COLONQT reduce production app_term_ -> CONVERT substitution_term substitution_term
-- On COLONGT reduce production app_term_ -> CONVERT substitution_term substitution_term
-- On COLONEQ reduce production app_term_ -> CONVERT substitution_term substitution_term
-- On COLON reduce production app_term_ -> CONVERT substitution_term substitution_term
-- On BY reduce production app_term_ -> CONVERT substitution_term substitution_term
-- On BAR reduce production app_term_ -> CONVERT substitution_term substitution_term
-- On ARROW reduce production app_term_ -> CONVERT substitution_term substitution_term
-- On AND reduce production app_term_ -> CONVERT substitution_term substitution_term

State 133:
substitution_term_ -> substitution_term substitution . [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE REF RBRACK RBRACE QUOTED_STRING PREFIXOP OPERATION OPEN NATURAL NAME MODULE MLTYPE LPAREN LET LBRACK LBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQEQ EQ EOF END COMMA COLONQT COLONGT COLONEQ COLON BY BAR BANG ARROW AND ]
-- On WITH reduce production substitution_term_ -> substitution_term substitution
-- On VERBOSITY reduce production substitution_term_ -> substitution_term substitution
-- On TRY reduce production substitution_term_ -> substitution_term substitution
-- On STAR reduce production substitution_term_ -> substitution_term substitution
-- On SEMISEMI reduce production substitution_term_ -> substitution_term substitution
-- On SEMI reduce production substitution_term_ -> substitution_term substitution
-- On RULE reduce production substitution_term_ -> substitution_term substitution
-- On RPAREN reduce production substitution_term_ -> substitution_term substitution
-- On REQUIRE reduce production substitution_term_ -> substitution_term substitution
-- On REF reduce production substitution_term_ -> substitution_term substitution
-- On RBRACK reduce production substitution_term_ -> substitution_term substitution
-- On RBRACE reduce production substitution_term_ -> substitution_term substitution
-- On QUOTED_STRING reduce production substitution_term_ -> substitution_term substitution
-- On PREFIXOP reduce production substitution_term_ -> substitution_term substitution
-- On OPERATION reduce production substitution_term_ -> substitution_term substitution
-- On OPEN reduce production substitution_term_ -> substitution_term substitution
-- On NATURAL reduce production substitution_term_ -> substitution_term substitution
-- On NAME reduce production substitution_term_ -> substitution_term substitution
-- On MODULE reduce production substitution_term_ -> substitution_term substitution
-- On MLTYPE reduce production substitution_term_ -> substitution_term substitution
-- On LPAREN reduce production substitution_term_ -> substitution_term substitution
-- On LET reduce production substitution_term_ -> substitution_term substitution
-- On LBRACK reduce production substitution_term_ -> substitution_term substitution
-- On LBRACE reduce production substitution_term_ -> substitution_term substitution
-- On INFIXOP4 reduce production substitution_term_ -> substitution_term substitution
-- On INFIXOP3 reduce production substitution_term_ -> substitution_term substitution
-- On INFIXOP2 reduce production substitution_term_ -> substitution_term substitution
-- On INFIXOP1 reduce production substitution_term_ -> substitution_term substitution
-- On INFIXOP0 reduce production substitution_term_ -> substitution_term substitution
-- On INFIXCONS reduce production substitution_term_ -> substitution_term substitution
-- On INCLUDE reduce production substitution_term_ -> substitution_term substitution
-- On IN reduce production substitution_term_ -> substitution_term substitution
-- On EXTERNAL reduce production substitution_term_ -> substitution_term substitution
-- On EXCEPTION reduce production substitution_term_ -> substitution_term substitution
-- On EQEQ reduce production substitution_term_ -> substitution_term substitution
-- On EQ reduce production substitution_term_ -> substitution_term substitution
-- On EOF reduce production substitution_term_ -> substitution_term substitution
-- On END reduce production substitution_term_ -> substitution_term substitution
-- On COMMA reduce production substitution_term_ -> substitution_term substitution
-- On COLONQT reduce production substitution_term_ -> substitution_term substitution
-- On COLONGT reduce production substitution_term_ -> substitution_term substitution
-- On COLONEQ reduce production substitution_term_ -> substitution_term substitution
-- On COLON reduce production substitution_term_ -> substitution_term substitution
-- On BY reduce production substitution_term_ -> substitution_term substitution
-- On BAR reduce production substitution_term_ -> substitution_term substitution
-- On BANG reduce production substitution_term_ -> substitution_term substitution
-- On ARROW reduce production substitution_term_ -> substitution_term substitution
-- On AND reduce production substitution_term_ -> substitution_term substitution

State 134:
substitution_term_ -> prefix_term_ . [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE REF RBRACK RBRACE QUOTED_STRING PREFIXOP OPERATION OPEN NATURAL NAME MODULE MLTYPE LPAREN LET LBRACK LBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQEQ EQ EOF END COMMA COLONQT COLONGT COLONEQ COLON BY BAR BANG ARROW AND ]
-- On WITH reduce production substitution_term_ -> prefix_term_
-- On VERBOSITY reduce production substitution_term_ -> prefix_term_
-- On TRY reduce production substitution_term_ -> prefix_term_
-- On STAR reduce production substitution_term_ -> prefix_term_
-- On SEMISEMI reduce production substitution_term_ -> prefix_term_
-- On SEMI reduce production substitution_term_ -> prefix_term_
-- On RULE reduce production substitution_term_ -> prefix_term_
-- On RPAREN reduce production substitution_term_ -> prefix_term_
-- On REQUIRE reduce production substitution_term_ -> prefix_term_
-- On REF reduce production substitution_term_ -> prefix_term_
-- On RBRACK reduce production substitution_term_ -> prefix_term_
-- On RBRACE reduce production substitution_term_ -> prefix_term_
-- On QUOTED_STRING reduce production substitution_term_ -> prefix_term_
-- On PREFIXOP reduce production substitution_term_ -> prefix_term_
-- On OPERATION reduce production substitution_term_ -> prefix_term_
-- On OPEN reduce production substitution_term_ -> prefix_term_
-- On NATURAL reduce production substitution_term_ -> prefix_term_
-- On NAME reduce production substitution_term_ -> prefix_term_
-- On MODULE reduce production substitution_term_ -> prefix_term_
-- On MLTYPE reduce production substitution_term_ -> prefix_term_
-- On LPAREN reduce production substitution_term_ -> prefix_term_
-- On LET reduce production substitution_term_ -> prefix_term_
-- On LBRACK reduce production substitution_term_ -> prefix_term_
-- On LBRACE reduce production substitution_term_ -> prefix_term_
-- On INFIXOP4 reduce production substitution_term_ -> prefix_term_
-- On INFIXOP3 reduce production substitution_term_ -> prefix_term_
-- On INFIXOP2 reduce production substitution_term_ -> prefix_term_
-- On INFIXOP1 reduce production substitution_term_ -> prefix_term_
-- On INFIXOP0 reduce production substitution_term_ -> prefix_term_
-- On INFIXCONS reduce production substitution_term_ -> prefix_term_
-- On INCLUDE reduce production substitution_term_ -> prefix_term_
-- On IN reduce production substitution_term_ -> prefix_term_
-- On EXTERNAL reduce production substitution_term_ -> prefix_term_
-- On EXCEPTION reduce production substitution_term_ -> prefix_term_
-- On EQEQ reduce production substitution_term_ -> prefix_term_
-- On EQ reduce production substitution_term_ -> prefix_term_
-- On EOF reduce production substitution_term_ -> prefix_term_
-- On END reduce production substitution_term_ -> prefix_term_
-- On COMMA reduce production substitution_term_ -> prefix_term_
-- On COLONQT reduce production substitution_term_ -> prefix_term_
-- On COLONGT reduce production substitution_term_ -> prefix_term_
-- On COLONEQ reduce production substitution_term_ -> prefix_term_
-- On COLON reduce production substitution_term_ -> prefix_term_
-- On BY reduce production substitution_term_ -> prefix_term_
-- On BAR reduce production substitution_term_ -> prefix_term_
-- On BANG reduce production substitution_term_ -> prefix_term_
-- On ARROW reduce production substitution_term_ -> prefix_term_
-- On AND reduce production substitution_term_ -> prefix_term_

State 135:
substitution_term -> mark_location(substitution_term_) . [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE REF RBRACK RBRACE QUOTED_STRING PREFIXOP OPERATION OPEN NATURAL NAME MODULE MLTYPE LPAREN LET LBRACK LBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQEQ EQ EOF END COMMA COLONQT COLONGT COLONEQ COLON BY BAR BANG ARROW AND ]
-- On WITH reduce production substitution_term -> mark_location(substitution_term_)
-- On VERBOSITY reduce production substitution_term -> mark_location(substitution_term_)
-- On TRY reduce production substitution_term -> mark_location(substitution_term_)
-- On STAR reduce production substitution_term -> mark_location(substitution_term_)
-- On SEMISEMI reduce production substitution_term -> mark_location(substitution_term_)
-- On SEMI reduce production substitution_term -> mark_location(substitution_term_)
-- On RULE reduce production substitution_term -> mark_location(substitution_term_)
-- On RPAREN reduce production substitution_term -> mark_location(substitution_term_)
-- On REQUIRE reduce production substitution_term -> mark_location(substitution_term_)
-- On REF reduce production substitution_term -> mark_location(substitution_term_)
-- On RBRACK reduce production substitution_term -> mark_location(substitution_term_)
-- On RBRACE reduce production substitution_term -> mark_location(substitution_term_)
-- On QUOTED_STRING reduce production substitution_term -> mark_location(substitution_term_)
-- On PREFIXOP reduce production substitution_term -> mark_location(substitution_term_)
-- On OPERATION reduce production substitution_term -> mark_location(substitution_term_)
-- On OPEN reduce production substitution_term -> mark_location(substitution_term_)
-- On NATURAL reduce production substitution_term -> mark_location(substitution_term_)
-- On NAME reduce production substitution_term -> mark_location(substitution_term_)
-- On MODULE reduce production substitution_term -> mark_location(substitution_term_)
-- On MLTYPE reduce production substitution_term -> mark_location(substitution_term_)
-- On LPAREN reduce production substitution_term -> mark_location(substitution_term_)
-- On LET reduce production substitution_term -> mark_location(substitution_term_)
-- On LBRACK reduce production substitution_term -> mark_location(substitution_term_)
-- On LBRACE reduce production substitution_term -> mark_location(substitution_term_)
-- On INFIXOP4 reduce production substitution_term -> mark_location(substitution_term_)
-- On INFIXOP3 reduce production substitution_term -> mark_location(substitution_term_)
-- On INFIXOP2 reduce production substitution_term -> mark_location(substitution_term_)
-- On INFIXOP1 reduce production substitution_term -> mark_location(substitution_term_)
-- On INFIXOP0 reduce production substitution_term -> mark_location(substitution_term_)
-- On INFIXCONS reduce production substitution_term -> mark_location(substitution_term_)
-- On INCLUDE reduce production substitution_term -> mark_location(substitution_term_)
-- On IN reduce production substitution_term -> mark_location(substitution_term_)
-- On EXTERNAL reduce production substitution_term -> mark_location(substitution_term_)
-- On EXCEPTION reduce production substitution_term -> mark_location(substitution_term_)
-- On EQEQ reduce production substitution_term -> mark_location(substitution_term_)
-- On EQ reduce production substitution_term -> mark_location(substitution_term_)
-- On EOF reduce production substitution_term -> mark_location(substitution_term_)
-- On END reduce production substitution_term -> mark_location(substitution_term_)
-- On COMMA reduce production substitution_term -> mark_location(substitution_term_)
-- On COLONQT reduce production substitution_term -> mark_location(substitution_term_)
-- On COLONGT reduce production substitution_term -> mark_location(substitution_term_)
-- On COLONEQ reduce production substitution_term -> mark_location(substitution_term_)
-- On COLON reduce production substitution_term -> mark_location(substitution_term_)
-- On BY reduce production substitution_term -> mark_location(substitution_term_)
-- On BAR reduce production substitution_term -> mark_location(substitution_term_)
-- On BANG reduce production substitution_term -> mark_location(substitution_term_)
-- On ARROW reduce production substitution_term -> mark_location(substitution_term_)
-- On AND reduce production substitution_term -> mark_location(substitution_term_)

State 136:
app_term_ -> CONTEXT . substitution_term [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQEQ EQ EOF END COMMA COLONQT COLONGT COLONEQ COLON BY BAR ARROW AND ]
-- On REF shift to state 4
-- On QUOTED_STRING shift to state 5
-- On PREFIXOP shift to state 6
-- On NATURAL shift to state 7
-- On NAME shift to state 8
-- On LPAREN shift to state 9
-- On LBRACK shift to state 13
-- On BANG shift to state 19
-- On tt_name shift to state 20
-- On substitution_term_ shift to state 48
-- On substitution_term shift to state 137
-- On simple_term_ shift to state 21
-- On prefix_term_ shift to state 134
-- On module_path shift to state 24
-- On module_name shift to state 45
-- On mark_location(substitution_term_) shift to state 135
-- On any_name shift to state 47

State 137:
app_term_ -> CONTEXT substitution_term . [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQEQ EQ EOF END COMMA COLONQT COLONGT COLONEQ COLON BY BAR ARROW AND ]
substitution_term_ -> substitution_term . substitution [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN MODULE MLTYPE LET LBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQEQ EQ EOF END COMMA COLONQT COLONGT COLONEQ COLON BY BAR ARROW AND ]
-- On LBRACE shift to state 50
-- On substitution shift to state 133
-- On WITH reduce production app_term_ -> CONTEXT substitution_term
-- On VERBOSITY reduce production app_term_ -> CONTEXT substitution_term
-- On TRY reduce production app_term_ -> CONTEXT substitution_term
-- On STAR reduce production app_term_ -> CONTEXT substitution_term
-- On SEMISEMI reduce production app_term_ -> CONTEXT substitution_term
-- On SEMI reduce production app_term_ -> CONTEXT substitution_term
-- On RULE reduce production app_term_ -> CONTEXT substitution_term
-- On RPAREN reduce production app_term_ -> CONTEXT substitution_term
-- On REQUIRE reduce production app_term_ -> CONTEXT substitution_term
-- On RBRACK reduce production app_term_ -> CONTEXT substitution_term
-- On RBRACE reduce production app_term_ -> CONTEXT substitution_term
-- On OPERATION reduce production app_term_ -> CONTEXT substitution_term
-- On OPEN reduce production app_term_ -> CONTEXT substitution_term
-- On MODULE reduce production app_term_ -> CONTEXT substitution_term
-- On MLTYPE reduce production app_term_ -> CONTEXT substitution_term
-- On LET reduce production app_term_ -> CONTEXT substitution_term
-- On INFIXOP4 reduce production app_term_ -> CONTEXT substitution_term
-- On INFIXOP3 reduce production app_term_ -> CONTEXT substitution_term
-- On INFIXOP2 reduce production app_term_ -> CONTEXT substitution_term
-- On INFIXOP1 reduce production app_term_ -> CONTEXT substitution_term
-- On INFIXOP0 reduce production app_term_ -> CONTEXT substitution_term
-- On INFIXCONS reduce production app_term_ -> CONTEXT substitution_term
-- On INCLUDE reduce production app_term_ -> CONTEXT substitution_term
-- On IN reduce production app_term_ -> CONTEXT substitution_term
-- On EXTERNAL reduce production app_term_ -> CONTEXT substitution_term
-- On EXCEPTION reduce production app_term_ -> CONTEXT substitution_term
-- On EQEQ reduce production app_term_ -> CONTEXT substitution_term
-- On EQ reduce production app_term_ -> CONTEXT substitution_term
-- On EOF reduce production app_term_ -> CONTEXT substitution_term
-- On END reduce production app_term_ -> CONTEXT substitution_term
-- On COMMA reduce production app_term_ -> CONTEXT substitution_term
-- On COLONQT reduce production app_term_ -> CONTEXT substitution_term
-- On COLONGT reduce production app_term_ -> CONTEXT substitution_term
-- On COLONEQ reduce production app_term_ -> CONTEXT substitution_term
-- On COLON reduce production app_term_ -> CONTEXT substitution_term
-- On BY reduce production app_term_ -> CONTEXT substitution_term
-- On BAR reduce production app_term_ -> CONTEXT substitution_term
-- On ARROW reduce production app_term_ -> CONTEXT substitution_term
-- On AND reduce production app_term_ -> CONTEXT substitution_term

State 138:
app_term_ -> CONGRUENCE . substitution_term substitution_term list(substitution_term) [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQEQ EQ EOF END COMMA COLONQT COLONGT COLONEQ COLON BY BAR ARROW AND ]
-- On REF shift to state 4
-- On QUOTED_STRING shift to state 5
-- On PREFIXOP shift to state 6
-- On NATURAL shift to state 7
-- On NAME shift to state 8
-- On LPAREN shift to state 9
-- On LBRACK shift to state 13
-- On BANG shift to state 19
-- On tt_name shift to state 20
-- On substitution_term_ shift to state 48
-- On substitution_term shift to state 139
-- On simple_term_ shift to state 21
-- On prefix_term_ shift to state 134
-- On module_path shift to state 24
-- On module_name shift to state 45
-- On mark_location(substitution_term_) shift to state 135
-- On any_name shift to state 47

State 139:
app_term_ -> CONGRUENCE substitution_term . substitution_term list(substitution_term) [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQEQ EQ EOF END COMMA COLONQT COLONGT COLONEQ COLON BY BAR ARROW AND ]
substitution_term_ -> substitution_term . substitution [ REF QUOTED_STRING PREFIXOP NATURAL NAME LPAREN LBRACK LBRACE BANG ]
-- On REF shift to state 4
-- On QUOTED_STRING shift to state 5
-- On PREFIXOP shift to state 6
-- On NATURAL shift to state 7
-- On NAME shift to state 8
-- On LPAREN shift to state 9
-- On LBRACK shift to state 13
-- On LBRACE shift to state 50
-- On BANG shift to state 19
-- On tt_name shift to state 20
-- On substitution_term_ shift to state 48
-- On substitution_term shift to state 140
-- On substitution shift to state 133
-- On simple_term_ shift to state 21
-- On prefix_term_ shift to state 134
-- On module_path shift to state 24
-- On module_name shift to state 45
-- On mark_location(substitution_term_) shift to state 135
-- On any_name shift to state 47

State 140:
app_term_ -> CONGRUENCE substitution_term substitution_term . list(substitution_term) [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQEQ EQ EOF END COMMA COLONQT COLONGT COLONEQ COLON BY BAR ARROW AND ]
substitution_term_ -> substitution_term . substitution [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE REF RBRACK RBRACE QUOTED_STRING PREFIXOP OPERATION OPEN NATURAL NAME MODULE MLTYPE LPAREN LET LBRACK LBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQEQ EQ EOF END COMMA COLONQT COLONGT COLONEQ COLON BY BAR BANG ARROW AND ]
-- On REF shift to state 4
-- On QUOTED_STRING shift to state 5
-- On PREFIXOP shift to state 6
-- On NATURAL shift to state 7
-- On NAME shift to state 8
-- On LPAREN shift to state 9
-- On LBRACK shift to state 13
-- On LBRACE shift to state 50
-- On BANG shift to state 19
-- On tt_name shift to state 20
-- On substitution_term_ shift to state 48
-- On substitution_term shift to state 141
-- On substitution shift to state 133
-- On simple_term_ shift to state 21
-- On prefix_term_ shift to state 134
-- On module_path shift to state 24
-- On module_name shift to state 45
-- On mark_location(substitution_term_) shift to state 135
-- On list(substitution_term) shift to state 143
-- On any_name shift to state 47
-- On WITH reduce production list(substitution_term) ->
-- On VERBOSITY reduce production list(substitution_term) ->
-- On TRY reduce production list(substitution_term) ->
-- On STAR reduce production list(substitution_term) ->
-- On SEMISEMI reduce production list(substitution_term) ->
-- On SEMI reduce production list(substitution_term) ->
-- On RULE reduce production list(substitution_term) ->
-- On RPAREN reduce production list(substitution_term) ->
-- On REQUIRE reduce production list(substitution_term) ->
-- On RBRACK reduce production list(substitution_term) ->
-- On RBRACE reduce production list(substitution_term) ->
-- On OPERATION reduce production list(substitution_term) ->
-- On OPEN reduce production list(substitution_term) ->
-- On MODULE reduce production list(substitution_term) ->
-- On MLTYPE reduce production list(substitution_term) ->
-- On LET reduce production list(substitution_term) ->
-- On INFIXOP4 reduce production list(substitution_term) ->
-- On INFIXOP3 reduce production list(substitution_term) ->
-- On INFIXOP2 reduce production list(substitution_term) ->
-- On INFIXOP1 reduce production list(substitution_term) ->
-- On INFIXOP0 reduce production list(substitution_term) ->
-- On INFIXCONS reduce production list(substitution_term) ->
-- On INCLUDE reduce production list(substitution_term) ->
-- On IN reduce production list(substitution_term) ->
-- On EXTERNAL reduce production list(substitution_term) ->
-- On EXCEPTION reduce production list(substitution_term) ->
-- On EQEQ reduce production list(substitution_term) ->
-- On EQ reduce production list(substitution_term) ->
-- On EOF reduce production list(substitution_term) ->
-- On END reduce production list(substitution_term) ->
-- On COMMA reduce production list(substitution_term) ->
-- On COLONQT reduce production list(substitution_term) ->
-- On COLONGT reduce production list(substitution_term) ->
-- On COLONEQ reduce production list(substitution_term) ->
-- On COLON reduce production list(substitution_term) ->
-- On BY reduce production list(substitution_term) ->
-- On BAR reduce production list(substitution_term) ->
-- On ARROW reduce production list(substitution_term) ->
-- On AND reduce production list(substitution_term) ->

State 141:
list(substitution_term) -> substitution_term . list(substitution_term) [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQEQ EQ EOF END COMMA COLONQT COLONGT COLONEQ COLON BY BAR ARROW AND ]
substitution_term_ -> substitution_term . substitution [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE REF RBRACK RBRACE QUOTED_STRING PREFIXOP OPERATION OPEN NATURAL NAME MODULE MLTYPE LPAREN LET LBRACK LBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQEQ EQ EOF END COMMA COLONQT COLONGT COLONEQ COLON BY BAR BANG ARROW AND ]
-- On REF shift to state 4
-- On QUOTED_STRING shift to state 5
-- On PREFIXOP shift to state 6
-- On NATURAL shift to state 7
-- On NAME shift to state 8
-- On LPAREN shift to state 9
-- On LBRACK shift to state 13
-- On LBRACE shift to state 50
-- On BANG shift to state 19
-- On tt_name shift to state 20
-- On substitution_term_ shift to state 48
-- On substitution_term shift to state 141
-- On substitution shift to state 133
-- On simple_term_ shift to state 21
-- On prefix_term_ shift to state 134
-- On module_path shift to state 24
-- On module_name shift to state 45
-- On mark_location(substitution_term_) shift to state 135
-- On list(substitution_term) shift to state 142
-- On any_name shift to state 47
-- On WITH reduce production list(substitution_term) ->
-- On VERBOSITY reduce production list(substitution_term) ->
-- On TRY reduce production list(substitution_term) ->
-- On STAR reduce production list(substitution_term) ->
-- On SEMISEMI reduce production list(substitution_term) ->
-- On SEMI reduce production list(substitution_term) ->
-- On RULE reduce production list(substitution_term) ->
-- On RPAREN reduce production list(substitution_term) ->
-- On REQUIRE reduce production list(substitution_term) ->
-- On RBRACK reduce production list(substitution_term) ->
-- On RBRACE reduce production list(substitution_term) ->
-- On OPERATION reduce production list(substitution_term) ->
-- On OPEN reduce production list(substitution_term) ->
-- On MODULE reduce production list(substitution_term) ->
-- On MLTYPE reduce production list(substitution_term) ->
-- On LET reduce production list(substitution_term) ->
-- On INFIXOP4 reduce production list(substitution_term) ->
-- On INFIXOP3 reduce production list(substitution_term) ->
-- On INFIXOP2 reduce production list(substitution_term) ->
-- On INFIXOP1 reduce production list(substitution_term) ->
-- On INFIXOP0 reduce production list(substitution_term) ->
-- On INFIXCONS reduce production list(substitution_term) ->
-- On INCLUDE reduce production list(substitution_term) ->
-- On IN reduce production list(substitution_term) ->
-- On EXTERNAL reduce production list(substitution_term) ->
-- On EXCEPTION reduce production list(substitution_term) ->
-- On EQEQ reduce production list(substitution_term) ->
-- On EQ reduce production list(substitution_term) ->
-- On EOF reduce production list(substitution_term) ->
-- On END reduce production list(substitution_term) ->
-- On COMMA reduce production list(substitution_term) ->
-- On COLONQT reduce production list(substitution_term) ->
-- On COLONGT reduce production list(substitution_term) ->
-- On COLONEQ reduce production list(substitution_term) ->
-- On COLON reduce production list(substitution_term) ->
-- On BY reduce production list(substitution_term) ->
-- On BAR reduce production list(substitution_term) ->
-- On ARROW reduce production list(substitution_term) ->
-- On AND reduce production list(substitution_term) ->

State 142:
list(substitution_term) -> substitution_term list(substitution_term) . [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQEQ EQ EOF END COMMA COLONQT COLONGT COLONEQ COLON BY BAR ARROW AND ]
-- On WITH reduce production list(substitution_term) -> substitution_term list(substitution_term)
-- On VERBOSITY reduce production list(substitution_term) -> substitution_term list(substitution_term)
-- On TRY reduce production list(substitution_term) -> substitution_term list(substitution_term)
-- On STAR reduce production list(substitution_term) -> substitution_term list(substitution_term)
-- On SEMISEMI reduce production list(substitution_term) -> substitution_term list(substitution_term)
-- On SEMI reduce production list(substitution_term) -> substitution_term list(substitution_term)
-- On RULE reduce production list(substitution_term) -> substitution_term list(substitution_term)
-- On RPAREN reduce production list(substitution_term) -> substitution_term list(substitution_term)
-- On REQUIRE reduce production list(substitution_term) -> substitution_term list(substitution_term)
-- On RBRACK reduce production list(substitution_term) -> substitution_term list(substitution_term)
-- On RBRACE reduce production list(substitution_term) -> substitution_term list(substitution_term)
-- On OPERATION reduce production list(substitution_term) -> substitution_term list(substitution_term)
-- On OPEN reduce production list(substitution_term) -> substitution_term list(substitution_term)
-- On MODULE reduce production list(substitution_term) -> substitution_term list(substitution_term)
-- On MLTYPE reduce production list(substitution_term) -> substitution_term list(substitution_term)
-- On LET reduce production list(substitution_term) -> substitution_term list(substitution_term)
-- On INFIXOP4 reduce production list(substitution_term) -> substitution_term list(substitution_term)
-- On INFIXOP3 reduce production list(substitution_term) -> substitution_term list(substitution_term)
-- On INFIXOP2 reduce production list(substitution_term) -> substitution_term list(substitution_term)
-- On INFIXOP1 reduce production list(substitution_term) -> substitution_term list(substitution_term)
-- On INFIXOP0 reduce production list(substitution_term) -> substitution_term list(substitution_term)
-- On INFIXCONS reduce production list(substitution_term) -> substitution_term list(substitution_term)
-- On INCLUDE reduce production list(substitution_term) -> substitution_term list(substitution_term)
-- On IN reduce production list(substitution_term) -> substitution_term list(substitution_term)
-- On EXTERNAL reduce production list(substitution_term) -> substitution_term list(substitution_term)
-- On EXCEPTION reduce production list(substitution_term) -> substitution_term list(substitution_term)
-- On EQEQ reduce production list(substitution_term) -> substitution_term list(substitution_term)
-- On EQ reduce production list(substitution_term) -> substitution_term list(substitution_term)
-- On EOF reduce production list(substitution_term) -> substitution_term list(substitution_term)
-- On END reduce production list(substitution_term) -> substitution_term list(substitution_term)
-- On COMMA reduce production list(substitution_term) -> substitution_term list(substitution_term)
-- On COLONQT reduce production list(substitution_term) -> substitution_term list(substitution_term)
-- On COLONGT reduce production list(substitution_term) -> substitution_term list(substitution_term)
-- On COLONEQ reduce production list(substitution_term) -> substitution_term list(substitution_term)
-- On COLON reduce production list(substitution_term) -> substitution_term list(substitution_term)
-- On BY reduce production list(substitution_term) -> substitution_term list(substitution_term)
-- On BAR reduce production list(substitution_term) -> substitution_term list(substitution_term)
-- On ARROW reduce production list(substitution_term) -> substitution_term list(substitution_term)
-- On AND reduce production list(substitution_term) -> substitution_term list(substitution_term)

State 143:
app_term_ -> CONGRUENCE substitution_term substitution_term list(substitution_term) . [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQEQ EQ EOF END COMMA COLONQT COLONGT COLONEQ COLON BY BAR ARROW AND ]
-- On WITH reduce production app_term_ -> CONGRUENCE substitution_term substitution_term list(substitution_term)
-- On VERBOSITY reduce production app_term_ -> CONGRUENCE substitution_term substitution_term list(substitution_term)
-- On TRY reduce production app_term_ -> CONGRUENCE substitution_term substitution_term list(substitution_term)
-- On STAR reduce production app_term_ -> CONGRUENCE substitution_term substitution_term list(substitution_term)
-- On SEMISEMI reduce production app_term_ -> CONGRUENCE substitution_term substitution_term list(substitution_term)
-- On SEMI reduce production app_term_ -> CONGRUENCE substitution_term substitution_term list(substitution_term)
-- On RULE reduce production app_term_ -> CONGRUENCE substitution_term substitution_term list(substitution_term)
-- On RPAREN reduce production app_term_ -> CONGRUENCE substitution_term substitution_term list(substitution_term)
-- On REQUIRE reduce production app_term_ -> CONGRUENCE substitution_term substitution_term list(substitution_term)
-- On RBRACK reduce production app_term_ -> CONGRUENCE substitution_term substitution_term list(substitution_term)
-- On RBRACE reduce production app_term_ -> CONGRUENCE substitution_term substitution_term list(substitution_term)
-- On OPERATION reduce production app_term_ -> CONGRUENCE substitution_term substitution_term list(substitution_term)
-- On OPEN reduce production app_term_ -> CONGRUENCE substitution_term substitution_term list(substitution_term)
-- On MODULE reduce production app_term_ -> CONGRUENCE substitution_term substitution_term list(substitution_term)
-- On MLTYPE reduce production app_term_ -> CONGRUENCE substitution_term substitution_term list(substitution_term)
-- On LET reduce production app_term_ -> CONGRUENCE substitution_term substitution_term list(substitution_term)
-- On INFIXOP4 reduce production app_term_ -> CONGRUENCE substitution_term substitution_term list(substitution_term)
-- On INFIXOP3 reduce production app_term_ -> CONGRUENCE substitution_term substitution_term list(substitution_term)
-- On INFIXOP2 reduce production app_term_ -> CONGRUENCE substitution_term substitution_term list(substitution_term)
-- On INFIXOP1 reduce production app_term_ -> CONGRUENCE substitution_term substitution_term list(substitution_term)
-- On INFIXOP0 reduce production app_term_ -> CONGRUENCE substitution_term substitution_term list(substitution_term)
-- On INFIXCONS reduce production app_term_ -> CONGRUENCE substitution_term substitution_term list(substitution_term)
-- On INCLUDE reduce production app_term_ -> CONGRUENCE substitution_term substitution_term list(substitution_term)
-- On IN reduce production app_term_ -> CONGRUENCE substitution_term substitution_term list(substitution_term)
-- On EXTERNAL reduce production app_term_ -> CONGRUENCE substitution_term substitution_term list(substitution_term)
-- On EXCEPTION reduce production app_term_ -> CONGRUENCE substitution_term substitution_term list(substitution_term)
-- On EQEQ reduce production app_term_ -> CONGRUENCE substitution_term substitution_term list(substitution_term)
-- On EQ reduce production app_term_ -> CONGRUENCE substitution_term substitution_term list(substitution_term)
-- On EOF reduce production app_term_ -> CONGRUENCE substitution_term substitution_term list(substitution_term)
-- On END reduce production app_term_ -> CONGRUENCE substitution_term substitution_term list(substitution_term)
-- On COMMA reduce production app_term_ -> CONGRUENCE substitution_term substitution_term list(substitution_term)
-- On COLONQT reduce production app_term_ -> CONGRUENCE substitution_term substitution_term list(substitution_term)
-- On COLONGT reduce production app_term_ -> CONGRUENCE substitution_term substitution_term list(substitution_term)
-- On COLONEQ reduce production app_term_ -> CONGRUENCE substitution_term substitution_term list(substitution_term)
-- On COLON reduce production app_term_ -> CONGRUENCE substitution_term substitution_term list(substitution_term)
-- On BY reduce production app_term_ -> CONGRUENCE substitution_term substitution_term list(substitution_term)
-- On BAR reduce production app_term_ -> CONGRUENCE substitution_term substitution_term list(substitution_term)
-- On ARROW reduce production app_term_ -> CONGRUENCE substitution_term substitution_term list(substitution_term)
-- On AND reduce production app_term_ -> CONGRUENCE substitution_term substitution_term list(substitution_term)

State 144:
app_term_ -> ABSTRACT . prefix_term prefix_term [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQEQ EQ EOF END COMMA COLONQT COLONGT COLONEQ COLON BY BAR ARROW AND ]
-- On REF shift to state 4
-- On QUOTED_STRING shift to state 5
-- On PREFIXOP shift to state 6
-- On NATURAL shift to state 7
-- On NAME shift to state 8
-- On LPAREN shift to state 9
-- On LBRACK shift to state 13
-- On BANG shift to state 19
-- On tt_name shift to state 20
-- On simple_term_ shift to state 21
-- On prefix_term_ shift to state 22
-- On prefix_term shift to state 145
-- On module_path shift to state 24
-- On module_name shift to state 45
-- On mark_location(prefix_term_) shift to state 46
-- On any_name shift to state 47

State 145:
app_term_ -> ABSTRACT prefix_term . prefix_term [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQEQ EQ EOF END COMMA COLONQT COLONGT COLONEQ COLON BY BAR ARROW AND ]
-- On REF shift to state 4
-- On QUOTED_STRING shift to state 5
-- On PREFIXOP shift to state 6
-- On NATURAL shift to state 7
-- On NAME shift to state 8
-- On LPAREN shift to state 9
-- On LBRACK shift to state 13
-- On BANG shift to state 19
-- On tt_name shift to state 20
-- On simple_term_ shift to state 21
-- On prefix_term_ shift to state 22
-- On prefix_term shift to state 146
-- On module_path shift to state 24
-- On module_name shift to state 45
-- On mark_location(prefix_term_) shift to state 46
-- On any_name shift to state 47

State 146:
app_term_ -> ABSTRACT prefix_term prefix_term . [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQEQ EQ EOF END COMMA COLONQT COLONGT COLONEQ COLON BY BAR ARROW AND ]
-- On WITH reduce production app_term_ -> ABSTRACT prefix_term prefix_term
-- On VERBOSITY reduce production app_term_ -> ABSTRACT prefix_term prefix_term
-- On TRY reduce production app_term_ -> ABSTRACT prefix_term prefix_term
-- On STAR reduce production app_term_ -> ABSTRACT prefix_term prefix_term
-- On SEMISEMI reduce production app_term_ -> ABSTRACT prefix_term prefix_term
-- On SEMI reduce production app_term_ -> ABSTRACT prefix_term prefix_term
-- On RULE reduce production app_term_ -> ABSTRACT prefix_term prefix_term
-- On RPAREN reduce production app_term_ -> ABSTRACT prefix_term prefix_term
-- On REQUIRE reduce production app_term_ -> ABSTRACT prefix_term prefix_term
-- On RBRACK reduce production app_term_ -> ABSTRACT prefix_term prefix_term
-- On RBRACE reduce production app_term_ -> ABSTRACT prefix_term prefix_term
-- On OPERATION reduce production app_term_ -> ABSTRACT prefix_term prefix_term
-- On OPEN reduce production app_term_ -> ABSTRACT prefix_term prefix_term
-- On MODULE reduce production app_term_ -> ABSTRACT prefix_term prefix_term
-- On MLTYPE reduce production app_term_ -> ABSTRACT prefix_term prefix_term
-- On LET reduce production app_term_ -> ABSTRACT prefix_term prefix_term
-- On INFIXOP4 reduce production app_term_ -> ABSTRACT prefix_term prefix_term
-- On INFIXOP3 reduce production app_term_ -> ABSTRACT prefix_term prefix_term
-- On INFIXOP2 reduce production app_term_ -> ABSTRACT prefix_term prefix_term
-- On INFIXOP1 reduce production app_term_ -> ABSTRACT prefix_term prefix_term
-- On INFIXOP0 reduce production app_term_ -> ABSTRACT prefix_term prefix_term
-- On INFIXCONS reduce production app_term_ -> ABSTRACT prefix_term prefix_term
-- On INCLUDE reduce production app_term_ -> ABSTRACT prefix_term prefix_term
-- On IN reduce production app_term_ -> ABSTRACT prefix_term prefix_term
-- On EXTERNAL reduce production app_term_ -> ABSTRACT prefix_term prefix_term
-- On EXCEPTION reduce production app_term_ -> ABSTRACT prefix_term prefix_term
-- On EQEQ reduce production app_term_ -> ABSTRACT prefix_term prefix_term
-- On EQ reduce production app_term_ -> ABSTRACT prefix_term prefix_term
-- On EOF reduce production app_term_ -> ABSTRACT prefix_term prefix_term
-- On END reduce production app_term_ -> ABSTRACT prefix_term prefix_term
-- On COMMA reduce production app_term_ -> ABSTRACT prefix_term prefix_term
-- On COLONQT reduce production app_term_ -> ABSTRACT prefix_term prefix_term
-- On COLONGT reduce production app_term_ -> ABSTRACT prefix_term prefix_term
-- On COLONEQ reduce production app_term_ -> ABSTRACT prefix_term prefix_term
-- On COLON reduce production app_term_ -> ABSTRACT prefix_term prefix_term
-- On BY reduce production app_term_ -> ABSTRACT prefix_term prefix_term
-- On BAR reduce production app_term_ -> ABSTRACT prefix_term prefix_term
-- On ARROW reduce production app_term_ -> ABSTRACT prefix_term prefix_term
-- On AND reduce production app_term_ -> ABSTRACT prefix_term prefix_term

State 147:
app_term_ -> substitution_term_ . [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQEQ EQ EOF END COMMA COLONQT COLONGT COLONEQ COLON BY BAR ARROW AND ]
mark_location(substitution_term_) -> substitution_term_ . [ REF QUOTED_STRING PREFIXOP NATURAL NAME LPAREN LBRACK LBRACE BANG ]
-- On WITH reduce production app_term_ -> substitution_term_
-- On VERBOSITY reduce production app_term_ -> substitution_term_
-- On TRY reduce production app_term_ -> substitution_term_
-- On STAR reduce production app_term_ -> substitution_term_
-- On SEMISEMI reduce production app_term_ -> substitution_term_
-- On SEMI reduce production app_term_ -> substitution_term_
-- On RULE reduce production app_term_ -> substitution_term_
-- On RPAREN reduce production app_term_ -> substitution_term_
-- On REQUIRE reduce production app_term_ -> substitution_term_
-- On REF reduce production mark_location(substitution_term_) -> substitution_term_
-- On RBRACK reduce production app_term_ -> substitution_term_
-- On RBRACE reduce production app_term_ -> substitution_term_
-- On QUOTED_STRING reduce production mark_location(substitution_term_) -> substitution_term_
-- On PREFIXOP reduce production mark_location(substitution_term_) -> substitution_term_
-- On OPERATION reduce production app_term_ -> substitution_term_
-- On OPEN reduce production app_term_ -> substitution_term_
-- On NATURAL reduce production mark_location(substitution_term_) -> substitution_term_
-- On NAME reduce production mark_location(substitution_term_) -> substitution_term_
-- On MODULE reduce production app_term_ -> substitution_term_
-- On MLTYPE reduce production app_term_ -> substitution_term_
-- On LPAREN reduce production mark_location(substitution_term_) -> substitution_term_
-- On LET reduce production app_term_ -> substitution_term_
-- On LBRACK reduce production mark_location(substitution_term_) -> substitution_term_
-- On LBRACE reduce production mark_location(substitution_term_) -> substitution_term_
-- On INFIXOP4 reduce production app_term_ -> substitution_term_
-- On INFIXOP3 reduce production app_term_ -> substitution_term_
-- On INFIXOP2 reduce production app_term_ -> substitution_term_
-- On INFIXOP1 reduce production app_term_ -> substitution_term_
-- On INFIXOP0 reduce production app_term_ -> substitution_term_
-- On INFIXCONS reduce production app_term_ -> substitution_term_
-- On INCLUDE reduce production app_term_ -> substitution_term_
-- On IN reduce production app_term_ -> substitution_term_
-- On EXTERNAL reduce production app_term_ -> substitution_term_
-- On EXCEPTION reduce production app_term_ -> substitution_term_
-- On EQEQ reduce production app_term_ -> substitution_term_
-- On EQ reduce production app_term_ -> substitution_term_
-- On EOF reduce production app_term_ -> substitution_term_
-- On END reduce production app_term_ -> substitution_term_
-- On COMMA reduce production app_term_ -> substitution_term_
-- On COLONQT reduce production app_term_ -> substitution_term_
-- On COLONGT reduce production app_term_ -> substitution_term_
-- On COLONEQ reduce production app_term_ -> substitution_term_
-- On COLON reduce production app_term_ -> substitution_term_
-- On BY reduce production app_term_ -> substitution_term_
-- On BAR reduce production app_term_ -> substitution_term_
-- On BANG reduce production mark_location(substitution_term_) -> substitution_term_
-- On ARROW reduce production app_term_ -> substitution_term_
-- On AND reduce production app_term_ -> substitution_term_

State 148:
app_term_ -> substitution_term . nonempty_list(substitution_term) [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQEQ EQ EOF END COMMA COLONQT COLONGT COLONEQ COLON BY BAR ARROW AND ]
substitution_term_ -> substitution_term . substitution [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE REF RBRACK RBRACE QUOTED_STRING PREFIXOP OPERATION OPEN NATURAL NAME MODULE MLTYPE LPAREN LET LBRACK LBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQEQ EQ EOF END COMMA COLONQT COLONGT COLONEQ COLON BY BAR BANG ARROW AND ]
-- On REF shift to state 4
-- On QUOTED_STRING shift to state 5
-- On PREFIXOP shift to state 6
-- On NATURAL shift to state 7
-- On NAME shift to state 8
-- On LPAREN shift to state 9
-- On LBRACK shift to state 13
-- On LBRACE shift to state 50
-- On BANG shift to state 19
-- On tt_name shift to state 20
-- On substitution_term_ shift to state 48
-- On substitution_term shift to state 149
-- On substitution shift to state 133
-- On simple_term_ shift to state 21
-- On prefix_term_ shift to state 134
-- On nonempty_list(substitution_term) shift to state 151
-- On module_path shift to state 24
-- On module_name shift to state 45
-- On mark_location(substitution_term_) shift to state 135
-- On any_name shift to state 47

State 149:
nonempty_list(substitution_term) -> substitution_term . [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQEQ EQ EOF END COMMA COLONQT COLONGT COLONEQ COLON BY BAR ARROW AND ]
nonempty_list(substitution_term) -> substitution_term . nonempty_list(substitution_term) [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQEQ EQ EOF END COMMA COLONQT COLONGT COLONEQ COLON BY BAR ARROW AND ]
substitution_term_ -> substitution_term . substitution [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE REF RBRACK RBRACE QUOTED_STRING PREFIXOP OPERATION OPEN NATURAL NAME MODULE MLTYPE LPAREN LET LBRACK LBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQEQ EQ EOF END COMMA COLONQT COLONGT COLONEQ COLON BY BAR BANG ARROW AND ]
-- On REF shift to state 4
-- On QUOTED_STRING shift to state 5
-- On PREFIXOP shift to state 6
-- On NATURAL shift to state 7
-- On NAME shift to state 8
-- On LPAREN shift to state 9
-- On LBRACK shift to state 13
-- On LBRACE shift to state 50
-- On BANG shift to state 19
-- On tt_name shift to state 20
-- On substitution_term_ shift to state 48
-- On substitution_term shift to state 149
-- On substitution shift to state 133
-- On simple_term_ shift to state 21
-- On prefix_term_ shift to state 134
-- On nonempty_list(substitution_term) shift to state 150
-- On module_path shift to state 24
-- On module_name shift to state 45
-- On mark_location(substitution_term_) shift to state 135
-- On any_name shift to state 47
-- On WITH reduce production nonempty_list(substitution_term) -> substitution_term
-- On VERBOSITY reduce production nonempty_list(substitution_term) -> substitution_term
-- On TRY reduce production nonempty_list(substitution_term) -> substitution_term
-- On STAR reduce production nonempty_list(substitution_term) -> substitution_term
-- On SEMISEMI reduce production nonempty_list(substitution_term) -> substitution_term
-- On SEMI reduce production nonempty_list(substitution_term) -> substitution_term
-- On RULE reduce production nonempty_list(substitution_term) -> substitution_term
-- On RPAREN reduce production nonempty_list(substitution_term) -> substitution_term
-- On REQUIRE reduce production nonempty_list(substitution_term) -> substitution_term
-- On RBRACK reduce production nonempty_list(substitution_term) -> substitution_term
-- On RBRACE reduce production nonempty_list(substitution_term) -> substitution_term
-- On OPERATION reduce production nonempty_list(substitution_term) -> substitution_term
-- On OPEN reduce production nonempty_list(substitution_term) -> substitution_term
-- On MODULE reduce production nonempty_list(substitution_term) -> substitution_term
-- On MLTYPE reduce production nonempty_list(substitution_term) -> substitution_term
-- On LET reduce production nonempty_list(substitution_term) -> substitution_term
-- On INFIXOP4 reduce production nonempty_list(substitution_term) -> substitution_term
-- On INFIXOP3 reduce production nonempty_list(substitution_term) -> substitution_term
-- On INFIXOP2 reduce production nonempty_list(substitution_term) -> substitution_term
-- On INFIXOP1 reduce production nonempty_list(substitution_term) -> substitution_term
-- On INFIXOP0 reduce production nonempty_list(substitution_term) -> substitution_term
-- On INFIXCONS reduce production nonempty_list(substitution_term) -> substitution_term
-- On INCLUDE reduce production nonempty_list(substitution_term) -> substitution_term
-- On IN reduce production nonempty_list(substitution_term) -> substitution_term
-- On EXTERNAL reduce production nonempty_list(substitution_term) -> substitution_term
-- On EXCEPTION reduce production nonempty_list(substitution_term) -> substitution_term
-- On EQEQ reduce production nonempty_list(substitution_term) -> substitution_term
-- On EQ reduce production nonempty_list(substitution_term) -> substitution_term
-- On EOF reduce production nonempty_list(substitution_term) -> substitution_term
-- On END reduce production nonempty_list(substitution_term) -> substitution_term
-- On COMMA reduce production nonempty_list(substitution_term) -> substitution_term
-- On COLONQT reduce production nonempty_list(substitution_term) -> substitution_term
-- On COLONGT reduce production nonempty_list(substitution_term) -> substitution_term
-- On COLONEQ reduce production nonempty_list(substitution_term) -> substitution_term
-- On COLON reduce production nonempty_list(substitution_term) -> substitution_term
-- On BY reduce production nonempty_list(substitution_term) -> substitution_term
-- On BAR reduce production nonempty_list(substitution_term) -> substitution_term
-- On ARROW reduce production nonempty_list(substitution_term) -> substitution_term
-- On AND reduce production nonempty_list(substitution_term) -> substitution_term

State 150:
nonempty_list(substitution_term) -> substitution_term nonempty_list(substitution_term) . [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQEQ EQ EOF END COMMA COLONQT COLONGT COLONEQ COLON BY BAR ARROW AND ]
-- On WITH reduce production nonempty_list(substitution_term) -> substitution_term nonempty_list(substitution_term)
-- On VERBOSITY reduce production nonempty_list(substitution_term) -> substitution_term nonempty_list(substitution_term)
-- On TRY reduce production nonempty_list(substitution_term) -> substitution_term nonempty_list(substitution_term)
-- On STAR reduce production nonempty_list(substitution_term) -> substitution_term nonempty_list(substitution_term)
-- On SEMISEMI reduce production nonempty_list(substitution_term) -> substitution_term nonempty_list(substitution_term)
-- On SEMI reduce production nonempty_list(substitution_term) -> substitution_term nonempty_list(substitution_term)
-- On RULE reduce production nonempty_list(substitution_term) -> substitution_term nonempty_list(substitution_term)
-- On RPAREN reduce production nonempty_list(substitution_term) -> substitution_term nonempty_list(substitution_term)
-- On REQUIRE reduce production nonempty_list(substitution_term) -> substitution_term nonempty_list(substitution_term)
-- On RBRACK reduce production nonempty_list(substitution_term) -> substitution_term nonempty_list(substitution_term)
-- On RBRACE reduce production nonempty_list(substitution_term) -> substitution_term nonempty_list(substitution_term)
-- On OPERATION reduce production nonempty_list(substitution_term) -> substitution_term nonempty_list(substitution_term)
-- On OPEN reduce production nonempty_list(substitution_term) -> substitution_term nonempty_list(substitution_term)
-- On MODULE reduce production nonempty_list(substitution_term) -> substitution_term nonempty_list(substitution_term)
-- On MLTYPE reduce production nonempty_list(substitution_term) -> substitution_term nonempty_list(substitution_term)
-- On LET reduce production nonempty_list(substitution_term) -> substitution_term nonempty_list(substitution_term)
-- On INFIXOP4 reduce production nonempty_list(substitution_term) -> substitution_term nonempty_list(substitution_term)
-- On INFIXOP3 reduce production nonempty_list(substitution_term) -> substitution_term nonempty_list(substitution_term)
-- On INFIXOP2 reduce production nonempty_list(substitution_term) -> substitution_term nonempty_list(substitution_term)
-- On INFIXOP1 reduce production nonempty_list(substitution_term) -> substitution_term nonempty_list(substitution_term)
-- On INFIXOP0 reduce production nonempty_list(substitution_term) -> substitution_term nonempty_list(substitution_term)
-- On INFIXCONS reduce production nonempty_list(substitution_term) -> substitution_term nonempty_list(substitution_term)
-- On INCLUDE reduce production nonempty_list(substitution_term) -> substitution_term nonempty_list(substitution_term)
-- On IN reduce production nonempty_list(substitution_term) -> substitution_term nonempty_list(substitution_term)
-- On EXTERNAL reduce production nonempty_list(substitution_term) -> substitution_term nonempty_list(substitution_term)
-- On EXCEPTION reduce production nonempty_list(substitution_term) -> substitution_term nonempty_list(substitution_term)
-- On EQEQ reduce production nonempty_list(substitution_term) -> substitution_term nonempty_list(substitution_term)
-- On EQ reduce production nonempty_list(substitution_term) -> substitution_term nonempty_list(substitution_term)
-- On EOF reduce production nonempty_list(substitution_term) -> substitution_term nonempty_list(substitution_term)
-- On END reduce production nonempty_list(substitution_term) -> substitution_term nonempty_list(substitution_term)
-- On COMMA reduce production nonempty_list(substitution_term) -> substitution_term nonempty_list(substitution_term)
-- On COLONQT reduce production nonempty_list(substitution_term) -> substitution_term nonempty_list(substitution_term)
-- On COLONGT reduce production nonempty_list(substitution_term) -> substitution_term nonempty_list(substitution_term)
-- On COLONEQ reduce production nonempty_list(substitution_term) -> substitution_term nonempty_list(substitution_term)
-- On COLON reduce production nonempty_list(substitution_term) -> substitution_term nonempty_list(substitution_term)
-- On BY reduce production nonempty_list(substitution_term) -> substitution_term nonempty_list(substitution_term)
-- On BAR reduce production nonempty_list(substitution_term) -> substitution_term nonempty_list(substitution_term)
-- On ARROW reduce production nonempty_list(substitution_term) -> substitution_term nonempty_list(substitution_term)
-- On AND reduce production nonempty_list(substitution_term) -> substitution_term nonempty_list(substitution_term)

State 151:
app_term_ -> substitution_term nonempty_list(substitution_term) . [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQEQ EQ EOF END COMMA COLONQT COLONGT COLONEQ COLON BY BAR ARROW AND ]
-- On WITH reduce production app_term_ -> substitution_term nonempty_list(substitution_term)
-- On VERBOSITY reduce production app_term_ -> substitution_term nonempty_list(substitution_term)
-- On TRY reduce production app_term_ -> substitution_term nonempty_list(substitution_term)
-- On STAR reduce production app_term_ -> substitution_term nonempty_list(substitution_term)
-- On SEMISEMI reduce production app_term_ -> substitution_term nonempty_list(substitution_term)
-- On SEMI reduce production app_term_ -> substitution_term nonempty_list(substitution_term)
-- On RULE reduce production app_term_ -> substitution_term nonempty_list(substitution_term)
-- On RPAREN reduce production app_term_ -> substitution_term nonempty_list(substitution_term)
-- On REQUIRE reduce production app_term_ -> substitution_term nonempty_list(substitution_term)
-- On RBRACK reduce production app_term_ -> substitution_term nonempty_list(substitution_term)
-- On RBRACE reduce production app_term_ -> substitution_term nonempty_list(substitution_term)
-- On OPERATION reduce production app_term_ -> substitution_term nonempty_list(substitution_term)
-- On OPEN reduce production app_term_ -> substitution_term nonempty_list(substitution_term)
-- On MODULE reduce production app_term_ -> substitution_term nonempty_list(substitution_term)
-- On MLTYPE reduce production app_term_ -> substitution_term nonempty_list(substitution_term)
-- On LET reduce production app_term_ -> substitution_term nonempty_list(substitution_term)
-- On INFIXOP4 reduce production app_term_ -> substitution_term nonempty_list(substitution_term)
-- On INFIXOP3 reduce production app_term_ -> substitution_term nonempty_list(substitution_term)
-- On INFIXOP2 reduce production app_term_ -> substitution_term nonempty_list(substitution_term)
-- On INFIXOP1 reduce production app_term_ -> substitution_term nonempty_list(substitution_term)
-- On INFIXOP0 reduce production app_term_ -> substitution_term nonempty_list(substitution_term)
-- On INFIXCONS reduce production app_term_ -> substitution_term nonempty_list(substitution_term)
-- On INCLUDE reduce production app_term_ -> substitution_term nonempty_list(substitution_term)
-- On IN reduce production app_term_ -> substitution_term nonempty_list(substitution_term)
-- On EXTERNAL reduce production app_term_ -> substitution_term nonempty_list(substitution_term)
-- On EXCEPTION reduce production app_term_ -> substitution_term nonempty_list(substitution_term)
-- On EQEQ reduce production app_term_ -> substitution_term nonempty_list(substitution_term)
-- On EQ reduce production app_term_ -> substitution_term nonempty_list(substitution_term)
-- On EOF reduce production app_term_ -> substitution_term nonempty_list(substitution_term)
-- On END reduce production app_term_ -> substitution_term nonempty_list(substitution_term)
-- On COMMA reduce production app_term_ -> substitution_term nonempty_list(substitution_term)
-- On COLONQT reduce production app_term_ -> substitution_term nonempty_list(substitution_term)
-- On COLONGT reduce production app_term_ -> substitution_term nonempty_list(substitution_term)
-- On COLONEQ reduce production app_term_ -> substitution_term nonempty_list(substitution_term)
-- On COLON reduce production app_term_ -> substitution_term nonempty_list(substitution_term)
-- On BY reduce production app_term_ -> substitution_term nonempty_list(substitution_term)
-- On BAR reduce production app_term_ -> substitution_term nonempty_list(substitution_term)
-- On ARROW reduce production app_term_ -> substitution_term nonempty_list(substitution_term)
-- On AND reduce production app_term_ -> substitution_term nonempty_list(substitution_term)

State 152:
app_term -> mark_location(app_term_) . [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQEQ EQ EOF END COMMA COLONQT COLONGT COLONEQ COLON BY BAR ARROW AND ]
-- On WITH reduce production app_term -> mark_location(app_term_)
-- On VERBOSITY reduce production app_term -> mark_location(app_term_)
-- On TRY reduce production app_term -> mark_location(app_term_)
-- On STAR reduce production app_term -> mark_location(app_term_)
-- On SEMISEMI reduce production app_term -> mark_location(app_term_)
-- On SEMI reduce production app_term -> mark_location(app_term_)
-- On RULE reduce production app_term -> mark_location(app_term_)
-- On RPAREN reduce production app_term -> mark_location(app_term_)
-- On REQUIRE reduce production app_term -> mark_location(app_term_)
-- On RBRACK reduce production app_term -> mark_location(app_term_)
-- On RBRACE reduce production app_term -> mark_location(app_term_)
-- On OPERATION reduce production app_term -> mark_location(app_term_)
-- On OPEN reduce production app_term -> mark_location(app_term_)
-- On MODULE reduce production app_term -> mark_location(app_term_)
-- On MLTYPE reduce production app_term -> mark_location(app_term_)
-- On LET reduce production app_term -> mark_location(app_term_)
-- On INFIXOP4 reduce production app_term -> mark_location(app_term_)
-- On INFIXOP3 reduce production app_term -> mark_location(app_term_)
-- On INFIXOP2 reduce production app_term -> mark_location(app_term_)
-- On INFIXOP1 reduce production app_term -> mark_location(app_term_)
-- On INFIXOP0 reduce production app_term -> mark_location(app_term_)
-- On INFIXCONS reduce production app_term -> mark_location(app_term_)
-- On INCLUDE reduce production app_term -> mark_location(app_term_)
-- On IN reduce production app_term -> mark_location(app_term_)
-- On EXTERNAL reduce production app_term -> mark_location(app_term_)
-- On EXCEPTION reduce production app_term -> mark_location(app_term_)
-- On EQEQ reduce production app_term -> mark_location(app_term_)
-- On EQ reduce production app_term -> mark_location(app_term_)
-- On EOF reduce production app_term -> mark_location(app_term_)
-- On END reduce production app_term -> mark_location(app_term_)
-- On COMMA reduce production app_term -> mark_location(app_term_)
-- On COLONQT reduce production app_term -> mark_location(app_term_)
-- On COLONGT reduce production app_term -> mark_location(app_term_)
-- On COLONEQ reduce production app_term -> mark_location(app_term_)
-- On COLON reduce production app_term -> mark_location(app_term_)
-- On BY reduce production app_term -> mark_location(app_term_)
-- On BAR reduce production app_term -> mark_location(app_term_)
-- On ARROW reduce production app_term -> mark_location(app_term_)
-- On AND reduce production app_term -> mark_location(app_term_)

State 153:
mark_location(app_term_) -> app_term_ . [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQEQ EQ EOF END COMMA COLONGT COLON BY BAR ARROW AND ]
-- On WITH reduce production mark_location(app_term_) -> app_term_
-- On VERBOSITY reduce production mark_location(app_term_) -> app_term_
-- On TRY reduce production mark_location(app_term_) -> app_term_
-- On STAR reduce production mark_location(app_term_) -> app_term_
-- On SEMISEMI reduce production mark_location(app_term_) -> app_term_
-- On SEMI reduce production mark_location(app_term_) -> app_term_
-- On RULE reduce production mark_location(app_term_) -> app_term_
-- On RPAREN reduce production mark_location(app_term_) -> app_term_
-- On REQUIRE reduce production mark_location(app_term_) -> app_term_
-- On RBRACK reduce production mark_location(app_term_) -> app_term_
-- On RBRACE reduce production mark_location(app_term_) -> app_term_
-- On OPERATION reduce production mark_location(app_term_) -> app_term_
-- On OPEN reduce production mark_location(app_term_) -> app_term_
-- On MODULE reduce production mark_location(app_term_) -> app_term_
-- On MLTYPE reduce production mark_location(app_term_) -> app_term_
-- On LET reduce production mark_location(app_term_) -> app_term_
-- On INFIXOP4 reduce production mark_location(app_term_) -> app_term_
-- On INFIXOP3 reduce production mark_location(app_term_) -> app_term_
-- On INFIXOP2 reduce production mark_location(app_term_) -> app_term_
-- On INFIXOP1 reduce production mark_location(app_term_) -> app_term_
-- On INFIXOP0 reduce production mark_location(app_term_) -> app_term_
-- On INFIXCONS reduce production mark_location(app_term_) -> app_term_
-- On INCLUDE reduce production mark_location(app_term_) -> app_term_
-- On IN reduce production mark_location(app_term_) -> app_term_
-- On EXTERNAL reduce production mark_location(app_term_) -> app_term_
-- On EXCEPTION reduce production mark_location(app_term_) -> app_term_
-- On EQEQ reduce production mark_location(app_term_) -> app_term_
-- On EQ reduce production mark_location(app_term_) -> app_term_
-- On EOF reduce production mark_location(app_term_) -> app_term_
-- On END reduce production mark_location(app_term_) -> app_term_
-- On COMMA reduce production mark_location(app_term_) -> app_term_
-- On COLONGT reduce production mark_location(app_term_) -> app_term_
-- On COLON reduce production mark_location(app_term_) -> app_term_
-- On BY reduce production mark_location(app_term_) -> app_term_
-- On BAR reduce production mark_location(app_term_) -> app_term_
-- On ARROW reduce production mark_location(app_term_) -> app_term_
-- On AND reduce production mark_location(app_term_) -> app_term_

State 154:
let_clause -> UNDERSCORE COLON app_term . EQ term [ WITH VERBOSITY SEMISEMI RULE REQUIRE OPERATION OPEN MODULE MLTYPE LET INCLUDE IN EXTERNAL EXCEPTION EOF END AND ]
-- On EQ shift to state 155

State 155:
let_clause -> UNDERSCORE COLON app_term EQ . term [ WITH VERBOSITY SEMISEMI RULE REQUIRE OPERATION OPEN MODULE MLTYPE LET INCLUDE IN EXTERNAL EXCEPTION EOF END AND ]
-- On WITH shift to state 2
-- On TRY shift to state 3
-- On REF shift to state 4
-- On RAISE shift to state 12
-- On QUOTED_STRING shift to state 5
-- On QQMARK shift to state 15
-- On PREFIXOP shift to state 6
-- On OCCURS shift to state 18
-- On NATURAL shift to state 7
-- On NAME shift to state 8
-- On MATCH shift to state 51
-- On LPAREN shift to state 9
-- On LET shift to state 52
-- On LBRACK shift to state 13
-- On LBRACE shift to state 156
-- On HANDLER shift to state 209
-- On FUN shift to state 330
-- On FRESH shift to state 338
-- On DERIVE shift to state 342
-- On CONVERT shift to state 130
-- On CONTEXT shift to state 136
-- On CONGRUENCE shift to state 138
-- On BANG shift to state 19
-- On ABSTRACT shift to state 144
-- On ty_term_ shift to state 357
-- On tt_name shift to state 20
-- On term_ shift to state 358
-- On term shift to state 424
-- On substitution_term_ shift to state 147
-- On substitution_term shift to state 148
-- On simple_term_ shift to state 21
-- On prefix_term_ shift to state 134
-- On nonempty_list(maybe_typed_binder) shift to state 167
-- On module_path shift to state 24
-- On module_name shift to state 45
-- On maybe_typed_binder shift to state 168
-- On mark_location(term_) shift to state 361
-- On mark_location(substitution_term_) shift to state 135
-- On mark_location(binop_term_) shift to state 171
-- On mark_location(app_term_) shift to state 152
-- On binop_term_ shift to state 172
-- On binop_term shift to state 362
-- On app_term_ shift to state 179
-- On app_term shift to state 365
-- On any_name shift to state 47
-- On abstraction shift to state 205

State 156:
maybe_typed_binder -> LBRACE . nonempty_list(anon_name(tt_name)) RBRACE [ REF RAISE QUOTED_STRING QQMARK PREFIXOP OCCURS NATURAL NAME LPAREN LBRACK LBRACE CONVERT CONTEXT CONGRUENCE BANG ABSTRACT ]
maybe_typed_binder -> LBRACE . nonempty_list(anon_name(tt_name)) COLON ty_term RBRACE [ REF RAISE QUOTED_STRING QQMARK PREFIXOP OCCURS NATURAL NAME LPAREN LBRACK LBRACE CONVERT CONTEXT CONGRUENCE BANG ABSTRACT ]
-- On UNDERSCORE shift to state 157
-- On NAME shift to state 158
-- On LPAREN shift to state 26
-- On tt_name shift to state 159
-- On opt_name(tt_name) shift to state 160
-- On nonempty_list(anon_name(tt_name)) shift to state 161
-- On anon_name(tt_name) shift to state 207

State 157:
opt_name(tt_name) -> UNDERSCORE . [ UNDERSCORE TYPE RPAREN RBRACE NAME LPAREN COLON ]
-- On UNDERSCORE reduce production opt_name(tt_name) -> UNDERSCORE
-- On TYPE reduce production opt_name(tt_name) -> UNDERSCORE
-- On RPAREN reduce production opt_name(tt_name) -> UNDERSCORE
-- On RBRACE reduce production opt_name(tt_name) -> UNDERSCORE
-- On NAME reduce production opt_name(tt_name) -> UNDERSCORE
-- On LPAREN reduce production opt_name(tt_name) -> UNDERSCORE
-- On COLON reduce production opt_name(tt_name) -> UNDERSCORE

State 158:
tt_name -> NAME . [ UNDERSCORE TYPE RPAREN RBRACE NAME LPAREN COLON ]
-- On UNDERSCORE reduce production tt_name -> NAME
-- On TYPE reduce production tt_name -> NAME
-- On RPAREN reduce production tt_name -> NAME
-- On RBRACE reduce production tt_name -> NAME
-- On NAME reduce production tt_name -> NAME
-- On LPAREN reduce production tt_name -> NAME
-- On COLON reduce production tt_name -> NAME

State 159:
opt_name(tt_name) -> tt_name . [ UNDERSCORE RPAREN RBRACE NAME LPAREN COLON ]
-- On UNDERSCORE reduce production opt_name(tt_name) -> tt_name
-- On RPAREN reduce production opt_name(tt_name) -> tt_name
-- On RBRACE reduce production opt_name(tt_name) -> tt_name
-- On NAME reduce production opt_name(tt_name) -> tt_name
-- On LPAREN reduce production opt_name(tt_name) -> tt_name
-- On COLON reduce production opt_name(tt_name) -> tt_name

State 160:
anon_name(tt_name) -> opt_name(tt_name) . [ UNDERSCORE RBRACE NAME LPAREN COLON ]
-- On UNDERSCORE reduce production anon_name(tt_name) -> opt_name(tt_name)
-- On RBRACE reduce production anon_name(tt_name) -> opt_name(tt_name)
-- On NAME reduce production anon_name(tt_name) -> opt_name(tt_name)
-- On LPAREN reduce production anon_name(tt_name) -> opt_name(tt_name)
-- On COLON reduce production anon_name(tt_name) -> opt_name(tt_name)

State 161:
maybe_typed_binder -> LBRACE nonempty_list(anon_name(tt_name)) . RBRACE [ REF RAISE QUOTED_STRING QQMARK PREFIXOP OCCURS NATURAL NAME LPAREN LBRACK LBRACE CONVERT CONTEXT CONGRUENCE BANG ABSTRACT ]
maybe_typed_binder -> LBRACE nonempty_list(anon_name(tt_name)) . COLON ty_term RBRACE [ REF RAISE QUOTED_STRING QQMARK PREFIXOP OCCURS NATURAL NAME LPAREN LBRACK LBRACE CONVERT CONTEXT CONGRUENCE BANG ABSTRACT ]
-- On RBRACE shift to state 162
-- On COLON shift to state 163

State 162:
maybe_typed_binder -> LBRACE nonempty_list(anon_name(tt_name)) RBRACE . [ REF RAISE QUOTED_STRING QQMARK PREFIXOP OCCURS NATURAL NAME LPAREN LBRACK LBRACE CONVERT CONTEXT CONGRUENCE BANG ABSTRACT ]
-- On REF reduce production maybe_typed_binder -> LBRACE nonempty_list(anon_name(tt_name)) RBRACE
-- On RAISE reduce production maybe_typed_binder -> LBRACE nonempty_list(anon_name(tt_name)) RBRACE
-- On QUOTED_STRING reduce production maybe_typed_binder -> LBRACE nonempty_list(anon_name(tt_name)) RBRACE
-- On QQMARK reduce production maybe_typed_binder -> LBRACE nonempty_list(anon_name(tt_name)) RBRACE
-- On PREFIXOP reduce production maybe_typed_binder -> LBRACE nonempty_list(anon_name(tt_name)) RBRACE
-- On OCCURS reduce production maybe_typed_binder -> LBRACE nonempty_list(anon_name(tt_name)) RBRACE
-- On NATURAL reduce production maybe_typed_binder -> LBRACE nonempty_list(anon_name(tt_name)) RBRACE
-- On NAME reduce production maybe_typed_binder -> LBRACE nonempty_list(anon_name(tt_name)) RBRACE
-- On LPAREN reduce production maybe_typed_binder -> LBRACE nonempty_list(anon_name(tt_name)) RBRACE
-- On LBRACK reduce production maybe_typed_binder -> LBRACE nonempty_list(anon_name(tt_name)) RBRACE
-- On LBRACE reduce production maybe_typed_binder -> LBRACE nonempty_list(anon_name(tt_name)) RBRACE
-- On CONVERT reduce production maybe_typed_binder -> LBRACE nonempty_list(anon_name(tt_name)) RBRACE
-- On CONTEXT reduce production maybe_typed_binder -> LBRACE nonempty_list(anon_name(tt_name)) RBRACE
-- On CONGRUENCE reduce production maybe_typed_binder -> LBRACE nonempty_list(anon_name(tt_name)) RBRACE
-- On BANG reduce production maybe_typed_binder -> LBRACE nonempty_list(anon_name(tt_name)) RBRACE
-- On ABSTRACT reduce production maybe_typed_binder -> LBRACE nonempty_list(anon_name(tt_name)) RBRACE

State 163:
maybe_typed_binder -> LBRACE nonempty_list(anon_name(tt_name)) COLON . ty_term RBRACE [ REF RAISE QUOTED_STRING QQMARK PREFIXOP OCCURS NATURAL NAME LPAREN LBRACK LBRACE CONVERT CONTEXT CONGRUENCE BANG ABSTRACT ]
-- On REF shift to state 4
-- On RAISE shift to state 12
-- On QUOTED_STRING shift to state 5
-- On QQMARK shift to state 15
-- On PREFIXOP shift to state 6
-- On OCCURS shift to state 18
-- On NATURAL shift to state 7
-- On NAME shift to state 8
-- On LPAREN shift to state 9
-- On LBRACK shift to state 13
-- On LBRACE shift to state 156
-- On CONVERT shift to state 130
-- On CONTEXT shift to state 136
-- On CONGRUENCE shift to state 138
-- On BANG shift to state 19
-- On ABSTRACT shift to state 144
-- On ty_term_ shift to state 164
-- On ty_term shift to state 165
-- On tt_name shift to state 20
-- On substitution_term_ shift to state 147
-- On substitution_term shift to state 148
-- On simple_term_ shift to state 21
-- On prefix_term_ shift to state 134
-- On nonempty_list(maybe_typed_binder) shift to state 167
-- On module_path shift to state 24
-- On module_name shift to state 45
-- On maybe_typed_binder shift to state 168
-- On mark_location(ty_term_) shift to state 170
-- On mark_location(substitution_term_) shift to state 135
-- On mark_location(binop_term_) shift to state 171
-- On mark_location(app_term_) shift to state 152
-- On binop_term_ shift to state 172
-- On binop_term shift to state 173
-- On app_term_ shift to state 179
-- On app_term shift to state 180
-- On any_name shift to state 47
-- On abstraction shift to state 205

State 164:
mark_location(ty_term_) -> ty_term_ . [ WITH VERBOSITY TRY SEMISEMI RULE RPAREN REQUIRE RBRACE OPERATION OPEN MODULE MLTYPE LET INCLUDE IN EXTERNAL EXCEPTION EOF END COMMA COLONGT BY BAR AND ]
-- On WITH reduce production mark_location(ty_term_) -> ty_term_
-- On VERBOSITY reduce production mark_location(ty_term_) -> ty_term_
-- On TRY reduce production mark_location(ty_term_) -> ty_term_
-- On SEMISEMI reduce production mark_location(ty_term_) -> ty_term_
-- On RULE reduce production mark_location(ty_term_) -> ty_term_
-- On RPAREN reduce production mark_location(ty_term_) -> ty_term_
-- On REQUIRE reduce production mark_location(ty_term_) -> ty_term_
-- On RBRACE reduce production mark_location(ty_term_) -> ty_term_
-- On OPERATION reduce production mark_location(ty_term_) -> ty_term_
-- On OPEN reduce production mark_location(ty_term_) -> ty_term_
-- On MODULE reduce production mark_location(ty_term_) -> ty_term_
-- On MLTYPE reduce production mark_location(ty_term_) -> ty_term_
-- On LET reduce production mark_location(ty_term_) -> ty_term_
-- On INCLUDE reduce production mark_location(ty_term_) -> ty_term_
-- On IN reduce production mark_location(ty_term_) -> ty_term_
-- On EXTERNAL reduce production mark_location(ty_term_) -> ty_term_
-- On EXCEPTION reduce production mark_location(ty_term_) -> ty_term_
-- On EOF reduce production mark_location(ty_term_) -> ty_term_
-- On END reduce production mark_location(ty_term_) -> ty_term_
-- On COMMA reduce production mark_location(ty_term_) -> ty_term_
-- On COLONGT reduce production mark_location(ty_term_) -> ty_term_
-- On BY reduce production mark_location(ty_term_) -> ty_term_
-- On BAR reduce production mark_location(ty_term_) -> ty_term_
-- On AND reduce production mark_location(ty_term_) -> ty_term_

State 165:
maybe_typed_binder -> LBRACE nonempty_list(anon_name(tt_name)) COLON ty_term . RBRACE [ REF RAISE QUOTED_STRING QQMARK PREFIXOP OCCURS NATURAL NAME LPAREN LBRACK LBRACE CONVERT CONTEXT CONGRUENCE BANG ABSTRACT ]
-- On RBRACE shift to state 166

State 166:
maybe_typed_binder -> LBRACE nonempty_list(anon_name(tt_name)) COLON ty_term RBRACE . [ REF RAISE QUOTED_STRING QQMARK PREFIXOP OCCURS NATURAL NAME LPAREN LBRACK LBRACE CONVERT CONTEXT CONGRUENCE BANG ABSTRACT ]
-- On REF reduce production maybe_typed_binder -> LBRACE nonempty_list(anon_name(tt_name)) COLON ty_term RBRACE
-- On RAISE reduce production maybe_typed_binder -> LBRACE nonempty_list(anon_name(tt_name)) COLON ty_term RBRACE
-- On QUOTED_STRING reduce production maybe_typed_binder -> LBRACE nonempty_list(anon_name(tt_name)) COLON ty_term RBRACE
-- On QQMARK reduce production maybe_typed_binder -> LBRACE nonempty_list(anon_name(tt_name)) COLON ty_term RBRACE
-- On PREFIXOP reduce production maybe_typed_binder -> LBRACE nonempty_list(anon_name(tt_name)) COLON ty_term RBRACE
-- On OCCURS reduce production maybe_typed_binder -> LBRACE nonempty_list(anon_name(tt_name)) COLON ty_term RBRACE
-- On NATURAL reduce production maybe_typed_binder -> LBRACE nonempty_list(anon_name(tt_name)) COLON ty_term RBRACE
-- On NAME reduce production maybe_typed_binder -> LBRACE nonempty_list(anon_name(tt_name)) COLON ty_term RBRACE
-- On LPAREN reduce production maybe_typed_binder -> LBRACE nonempty_list(anon_name(tt_name)) COLON ty_term RBRACE
-- On LBRACK reduce production maybe_typed_binder -> LBRACE nonempty_list(anon_name(tt_name)) COLON ty_term RBRACE
-- On LBRACE reduce production maybe_typed_binder -> LBRACE nonempty_list(anon_name(tt_name)) COLON ty_term RBRACE
-- On CONVERT reduce production maybe_typed_binder -> LBRACE nonempty_list(anon_name(tt_name)) COLON ty_term RBRACE
-- On CONTEXT reduce production maybe_typed_binder -> LBRACE nonempty_list(anon_name(tt_name)) COLON ty_term RBRACE
-- On CONGRUENCE reduce production maybe_typed_binder -> LBRACE nonempty_list(anon_name(tt_name)) COLON ty_term RBRACE
-- On BANG reduce production maybe_typed_binder -> LBRACE nonempty_list(anon_name(tt_name)) COLON ty_term RBRACE
-- On ABSTRACT reduce production maybe_typed_binder -> LBRACE nonempty_list(anon_name(tt_name)) COLON ty_term RBRACE

State 167:
abstraction -> nonempty_list(maybe_typed_binder) . [ REF RAISE QUOTED_STRING QQMARK PREFIXOP OCCURS NATURAL NAME LPAREN LBRACK CONVERT CONTEXT CONGRUENCE BANG ABSTRACT ]
-- On REF reduce production abstraction -> nonempty_list(maybe_typed_binder)
-- On RAISE reduce production abstraction -> nonempty_list(maybe_typed_binder)
-- On QUOTED_STRING reduce production abstraction -> nonempty_list(maybe_typed_binder)
-- On QQMARK reduce production abstraction -> nonempty_list(maybe_typed_binder)
-- On PREFIXOP reduce production abstraction -> nonempty_list(maybe_typed_binder)
-- On OCCURS reduce production abstraction -> nonempty_list(maybe_typed_binder)
-- On NATURAL reduce production abstraction -> nonempty_list(maybe_typed_binder)
-- On NAME reduce production abstraction -> nonempty_list(maybe_typed_binder)
-- On LPAREN reduce production abstraction -> nonempty_list(maybe_typed_binder)
-- On LBRACK reduce production abstraction -> nonempty_list(maybe_typed_binder)
-- On CONVERT reduce production abstraction -> nonempty_list(maybe_typed_binder)
-- On CONTEXT reduce production abstraction -> nonempty_list(maybe_typed_binder)
-- On CONGRUENCE reduce production abstraction -> nonempty_list(maybe_typed_binder)
-- On BANG reduce production abstraction -> nonempty_list(maybe_typed_binder)
-- On ABSTRACT reduce production abstraction -> nonempty_list(maybe_typed_binder)

State 168:
nonempty_list(maybe_typed_binder) -> maybe_typed_binder . [ REF RAISE QUOTED_STRING QQMARK PREFIXOP OCCURS NATURAL NAME LPAREN LBRACK CONVERT CONTEXT CONGRUENCE BANG ABSTRACT ]
nonempty_list(maybe_typed_binder) -> maybe_typed_binder . nonempty_list(maybe_typed_binder) [ REF RAISE QUOTED_STRING QQMARK PREFIXOP OCCURS NATURAL NAME LPAREN LBRACK CONVERT CONTEXT CONGRUENCE BANG ABSTRACT ]
-- On LBRACE shift to state 156
-- On nonempty_list(maybe_typed_binder) shift to state 169
-- On maybe_typed_binder shift to state 168
-- On REF reduce production nonempty_list(maybe_typed_binder) -> maybe_typed_binder
-- On RAISE reduce production nonempty_list(maybe_typed_binder) -> maybe_typed_binder
-- On QUOTED_STRING reduce production nonempty_list(maybe_typed_binder) -> maybe_typed_binder
-- On QQMARK reduce production nonempty_list(maybe_typed_binder) -> maybe_typed_binder
-- On PREFIXOP reduce production nonempty_list(maybe_typed_binder) -> maybe_typed_binder
-- On OCCURS reduce production nonempty_list(maybe_typed_binder) -> maybe_typed_binder
-- On NATURAL reduce production nonempty_list(maybe_typed_binder) -> maybe_typed_binder
-- On NAME reduce production nonempty_list(maybe_typed_binder) -> maybe_typed_binder
-- On LPAREN reduce production nonempty_list(maybe_typed_binder) -> maybe_typed_binder
-- On LBRACK reduce production nonempty_list(maybe_typed_binder) -> maybe_typed_binder
-- On CONVERT reduce production nonempty_list(maybe_typed_binder) -> maybe_typed_binder
-- On CONTEXT reduce production nonempty_list(maybe_typed_binder) -> maybe_typed_binder
-- On CONGRUENCE reduce production nonempty_list(maybe_typed_binder) -> maybe_typed_binder
-- On BANG reduce production nonempty_list(maybe_typed_binder) -> maybe_typed_binder
-- On ABSTRACT reduce production nonempty_list(maybe_typed_binder) -> maybe_typed_binder

State 169:
nonempty_list(maybe_typed_binder) -> maybe_typed_binder nonempty_list(maybe_typed_binder) . [ REF RAISE QUOTED_STRING QQMARK PREFIXOP OCCURS NATURAL NAME LPAREN LBRACK CONVERT CONTEXT CONGRUENCE BANG ABSTRACT ]
-- On REF reduce production nonempty_list(maybe_typed_binder) -> maybe_typed_binder nonempty_list(maybe_typed_binder)
-- On RAISE reduce production nonempty_list(maybe_typed_binder) -> maybe_typed_binder nonempty_list(maybe_typed_binder)
-- On QUOTED_STRING reduce production nonempty_list(maybe_typed_binder) -> maybe_typed_binder nonempty_list(maybe_typed_binder)
-- On QQMARK reduce production nonempty_list(maybe_typed_binder) -> maybe_typed_binder nonempty_list(maybe_typed_binder)
-- On PREFIXOP reduce production nonempty_list(maybe_typed_binder) -> maybe_typed_binder nonempty_list(maybe_typed_binder)
-- On OCCURS reduce production nonempty_list(maybe_typed_binder) -> maybe_typed_binder nonempty_list(maybe_typed_binder)
-- On NATURAL reduce production nonempty_list(maybe_typed_binder) -> maybe_typed_binder nonempty_list(maybe_typed_binder)
-- On NAME reduce production nonempty_list(maybe_typed_binder) -> maybe_typed_binder nonempty_list(maybe_typed_binder)
-- On LPAREN reduce production nonempty_list(maybe_typed_binder) -> maybe_typed_binder nonempty_list(maybe_typed_binder)
-- On LBRACK reduce production nonempty_list(maybe_typed_binder) -> maybe_typed_binder nonempty_list(maybe_typed_binder)
-- On CONVERT reduce production nonempty_list(maybe_typed_binder) -> maybe_typed_binder nonempty_list(maybe_typed_binder)
-- On CONTEXT reduce production nonempty_list(maybe_typed_binder) -> maybe_typed_binder nonempty_list(maybe_typed_binder)
-- On CONGRUENCE reduce production nonempty_list(maybe_typed_binder) -> maybe_typed_binder nonempty_list(maybe_typed_binder)
-- On BANG reduce production nonempty_list(maybe_typed_binder) -> maybe_typed_binder nonempty_list(maybe_typed_binder)
-- On ABSTRACT reduce production nonempty_list(maybe_typed_binder) -> maybe_typed_binder nonempty_list(maybe_typed_binder)

State 170:
ty_term -> mark_location(ty_term_) . [ WITH VERBOSITY TRY SEMISEMI RULE RPAREN REQUIRE RBRACE OPERATION OPEN MODULE MLTYPE LET INCLUDE IN EXTERNAL EXCEPTION EOF END COMMA COLONGT BY BAR AND ]
-- On WITH reduce production ty_term -> mark_location(ty_term_)
-- On VERBOSITY reduce production ty_term -> mark_location(ty_term_)
-- On TRY reduce production ty_term -> mark_location(ty_term_)
-- On SEMISEMI reduce production ty_term -> mark_location(ty_term_)
-- On RULE reduce production ty_term -> mark_location(ty_term_)
-- On RPAREN reduce production ty_term -> mark_location(ty_term_)
-- On REQUIRE reduce production ty_term -> mark_location(ty_term_)
-- On RBRACE reduce production ty_term -> mark_location(ty_term_)
-- On OPERATION reduce production ty_term -> mark_location(ty_term_)
-- On OPEN reduce production ty_term -> mark_location(ty_term_)
-- On MODULE reduce production ty_term -> mark_location(ty_term_)
-- On MLTYPE reduce production ty_term -> mark_location(ty_term_)
-- On LET reduce production ty_term -> mark_location(ty_term_)
-- On INCLUDE reduce production ty_term -> mark_location(ty_term_)
-- On IN reduce production ty_term -> mark_location(ty_term_)
-- On EXTERNAL reduce production ty_term -> mark_location(ty_term_)
-- On EXCEPTION reduce production ty_term -> mark_location(ty_term_)
-- On EOF reduce production ty_term -> mark_location(ty_term_)
-- On END reduce production ty_term -> mark_location(ty_term_)
-- On COMMA reduce production ty_term -> mark_location(ty_term_)
-- On COLONGT reduce production ty_term -> mark_location(ty_term_)
-- On BY reduce production ty_term -> mark_location(ty_term_)
-- On BAR reduce production ty_term -> mark_location(ty_term_)
-- On AND reduce production ty_term -> mark_location(ty_term_)

State 171:
binop_term -> mark_location(binop_term_) . [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQ EOF END COMMA COLONGT BY BAR ARROW AND ]
-- On WITH reduce production binop_term -> mark_location(binop_term_)
-- On VERBOSITY reduce production binop_term -> mark_location(binop_term_)
-- On TRY reduce production binop_term -> mark_location(binop_term_)
-- On STAR reduce production binop_term -> mark_location(binop_term_)
-- On SEMISEMI reduce production binop_term -> mark_location(binop_term_)
-- On SEMI reduce production binop_term -> mark_location(binop_term_)
-- On RULE reduce production binop_term -> mark_location(binop_term_)
-- On RPAREN reduce production binop_term -> mark_location(binop_term_)
-- On REQUIRE reduce production binop_term -> mark_location(binop_term_)
-- On RBRACK reduce production binop_term -> mark_location(binop_term_)
-- On RBRACE reduce production binop_term -> mark_location(binop_term_)
-- On OPERATION reduce production binop_term -> mark_location(binop_term_)
-- On OPEN reduce production binop_term -> mark_location(binop_term_)
-- On MODULE reduce production binop_term -> mark_location(binop_term_)
-- On MLTYPE reduce production binop_term -> mark_location(binop_term_)
-- On LET reduce production binop_term -> mark_location(binop_term_)
-- On INFIXOP4 reduce production binop_term -> mark_location(binop_term_)
-- On INFIXOP3 reduce production binop_term -> mark_location(binop_term_)
-- On INFIXOP2 reduce production binop_term -> mark_location(binop_term_)
-- On INFIXOP1 reduce production binop_term -> mark_location(binop_term_)
-- On INFIXOP0 reduce production binop_term -> mark_location(binop_term_)
-- On INFIXCONS reduce production binop_term -> mark_location(binop_term_)
-- On INCLUDE reduce production binop_term -> mark_location(binop_term_)
-- On IN reduce production binop_term -> mark_location(binop_term_)
-- On EXTERNAL reduce production binop_term -> mark_location(binop_term_)
-- On EXCEPTION reduce production binop_term -> mark_location(binop_term_)
-- On EQ reduce production binop_term -> mark_location(binop_term_)
-- On EOF reduce production binop_term -> mark_location(binop_term_)
-- On END reduce production binop_term -> mark_location(binop_term_)
-- On COMMA reduce production binop_term -> mark_location(binop_term_)
-- On COLONGT reduce production binop_term -> mark_location(binop_term_)
-- On BY reduce production binop_term -> mark_location(binop_term_)
-- On BAR reduce production binop_term -> mark_location(binop_term_)
-- On ARROW reduce production binop_term -> mark_location(binop_term_)
-- On AND reduce production binop_term -> mark_location(binop_term_)

State 172:
mark_location(binop_term_) -> binop_term_ . [ STAR SEMI INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQ ]
ty_term_ -> binop_term_ . [ WITH VERBOSITY TRY SEMISEMI RULE RPAREN REQUIRE RBRACE OPERATION OPEN MODULE MLTYPE LET INCLUDE IN EXTERNAL EXCEPTION EOF END COMMA COLONGT BY BAR AND ]
-- On WITH reduce production ty_term_ -> binop_term_
-- On VERBOSITY reduce production ty_term_ -> binop_term_
-- On TRY reduce production ty_term_ -> binop_term_
-- On STAR reduce production mark_location(binop_term_) -> binop_term_
-- On SEMISEMI reduce production ty_term_ -> binop_term_
-- On SEMI reduce production mark_location(binop_term_) -> binop_term_
-- On RULE reduce production ty_term_ -> binop_term_
-- On RPAREN reduce production ty_term_ -> binop_term_
-- On REQUIRE reduce production ty_term_ -> binop_term_
-- On RBRACE reduce production ty_term_ -> binop_term_
-- On OPERATION reduce production ty_term_ -> binop_term_
-- On OPEN reduce production ty_term_ -> binop_term_
-- On MODULE reduce production ty_term_ -> binop_term_
-- On MLTYPE reduce production ty_term_ -> binop_term_
-- On LET reduce production ty_term_ -> binop_term_
-- On INFIXOP4 reduce production mark_location(binop_term_) -> binop_term_
-- On INFIXOP3 reduce production mark_location(binop_term_) -> binop_term_
-- On INFIXOP2 reduce production mark_location(binop_term_) -> binop_term_
-- On INFIXOP1 reduce production mark_location(binop_term_) -> binop_term_
-- On INFIXOP0 reduce production mark_location(binop_term_) -> binop_term_
-- On INFIXCONS reduce production mark_location(binop_term_) -> binop_term_
-- On INCLUDE reduce production ty_term_ -> binop_term_
-- On IN reduce production ty_term_ -> binop_term_
-- On EXTERNAL reduce production ty_term_ -> binop_term_
-- On EXCEPTION reduce production ty_term_ -> binop_term_
-- On EQ reduce production mark_location(binop_term_) -> binop_term_
-- On EOF reduce production ty_term_ -> binop_term_
-- On END reduce production ty_term_ -> binop_term_
-- On COMMA reduce production ty_term_ -> binop_term_
-- On COLONGT reduce production ty_term_ -> binop_term_
-- On BY reduce production ty_term_ -> binop_term_
-- On BAR reduce production ty_term_ -> binop_term_
-- On AND reduce production ty_term_ -> binop_term_

State 173:
binop_term_ -> binop_term . INFIXCONS binop_term [ WITH VERBOSITY TRY STAR SEMISEMI RULE RPAREN REQUIRE RBRACE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQ EOF END COMMA COLONGT BY BAR AND ]
binop_term_ -> binop_term . EQ binop_term [ WITH VERBOSITY TRY STAR SEMISEMI RULE RPAREN REQUIRE RBRACE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQ EOF END COMMA COLONGT BY BAR AND ]
binop_term_ -> binop_term . INFIXOP0 binop_term [ WITH VERBOSITY TRY STAR SEMISEMI RULE RPAREN REQUIRE RBRACE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQ EOF END COMMA COLONGT BY BAR AND ]
binop_term_ -> binop_term . INFIXOP1 binop_term [ WITH VERBOSITY TRY STAR SEMISEMI RULE RPAREN REQUIRE RBRACE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQ EOF END COMMA COLONGT BY BAR AND ]
binop_term_ -> binop_term . INFIXOP2 binop_term [ WITH VERBOSITY TRY STAR SEMISEMI RULE RPAREN REQUIRE RBRACE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQ EOF END COMMA COLONGT BY BAR AND ]
binop_term_ -> binop_term . INFIXOP3 binop_term [ WITH VERBOSITY TRY STAR SEMISEMI RULE RPAREN REQUIRE RBRACE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQ EOF END COMMA COLONGT BY BAR AND ]
binop_term_ -> binop_term . STAR binop_term [ WITH VERBOSITY TRY STAR SEMISEMI RULE RPAREN REQUIRE RBRACE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQ EOF END COMMA COLONGT BY BAR AND ]
binop_term_ -> binop_term . INFIXOP4 binop_term [ WITH VERBOSITY TRY STAR SEMISEMI RULE RPAREN REQUIRE RBRACE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQ EOF END COMMA COLONGT BY BAR AND ]
-- On STAR shift to state 174
-- On INFIXOP4 shift to state 177
-- On INFIXOP3 shift to state 193
-- On INFIXOP2 shift to state 195
-- On INFIXOP1 shift to state 197
-- On INFIXOP0 shift to state 201
-- On INFIXCONS shift to state 199
-- On EQ shift to state 203

State 174:
binop_term_ -> binop_term STAR . binop_term [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQ EOF END COMMA COLONGT BY BAR ARROW AND ]
-- On REF shift to state 4
-- On RAISE shift to state 12
-- On QUOTED_STRING shift to state 5
-- On QQMARK shift to state 15
-- On PREFIXOP shift to state 6
-- On OCCURS shift to state 18
-- On NATURAL shift to state 7
-- On NAME shift to state 8
-- On LPAREN shift to state 9
-- On LBRACK shift to state 13
-- On CONVERT shift to state 130
-- On CONTEXT shift to state 136
-- On CONGRUENCE shift to state 138
-- On BANG shift to state 19
-- On ABSTRACT shift to state 144
-- On tt_name shift to state 20
-- On substitution_term_ shift to state 147
-- On substitution_term shift to state 148
-- On simple_term_ shift to state 21
-- On prefix_term_ shift to state 134
-- On module_path shift to state 24
-- On module_name shift to state 45
-- On mark_location(substitution_term_) shift to state 135
-- On mark_location(binop_term_) shift to state 171
-- On mark_location(app_term_) shift to state 152
-- On binop_term_ shift to state 175
-- On binop_term shift to state 176
-- On app_term_ shift to state 179
-- On app_term shift to state 180
-- On any_name shift to state 47

State 175:
mark_location(binop_term_) -> binop_term_ . [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQ EOF END COMMA COLONGT BY BAR ARROW AND ]
-- On WITH reduce production mark_location(binop_term_) -> binop_term_
-- On VERBOSITY reduce production mark_location(binop_term_) -> binop_term_
-- On TRY reduce production mark_location(binop_term_) -> binop_term_
-- On STAR reduce production mark_location(binop_term_) -> binop_term_
-- On SEMISEMI reduce production mark_location(binop_term_) -> binop_term_
-- On SEMI reduce production mark_location(binop_term_) -> binop_term_
-- On RULE reduce production mark_location(binop_term_) -> binop_term_
-- On RPAREN reduce production mark_location(binop_term_) -> binop_term_
-- On REQUIRE reduce production mark_location(binop_term_) -> binop_term_
-- On RBRACK reduce production mark_location(binop_term_) -> binop_term_
-- On RBRACE reduce production mark_location(binop_term_) -> binop_term_
-- On OPERATION reduce production mark_location(binop_term_) -> binop_term_
-- On OPEN reduce production mark_location(binop_term_) -> binop_term_
-- On MODULE reduce production mark_location(binop_term_) -> binop_term_
-- On MLTYPE reduce production mark_location(binop_term_) -> binop_term_
-- On LET reduce production mark_location(binop_term_) -> binop_term_
-- On INFIXOP4 reduce production mark_location(binop_term_) -> binop_term_
-- On INFIXOP3 reduce production mark_location(binop_term_) -> binop_term_
-- On INFIXOP2 reduce production mark_location(binop_term_) -> binop_term_
-- On INFIXOP1 reduce production mark_location(binop_term_) -> binop_term_
-- On INFIXOP0 reduce production mark_location(binop_term_) -> binop_term_
-- On INFIXCONS reduce production mark_location(binop_term_) -> binop_term_
-- On INCLUDE reduce production mark_location(binop_term_) -> binop_term_
-- On IN reduce production mark_location(binop_term_) -> binop_term_
-- On EXTERNAL reduce production mark_location(binop_term_) -> binop_term_
-- On EXCEPTION reduce production mark_location(binop_term_) -> binop_term_
-- On EQ reduce production mark_location(binop_term_) -> binop_term_
-- On EOF reduce production mark_location(binop_term_) -> binop_term_
-- On END reduce production mark_location(binop_term_) -> binop_term_
-- On COMMA reduce production mark_location(binop_term_) -> binop_term_
-- On COLONGT reduce production mark_location(binop_term_) -> binop_term_
-- On BY reduce production mark_location(binop_term_) -> binop_term_
-- On BAR reduce production mark_location(binop_term_) -> binop_term_
-- On ARROW reduce production mark_location(binop_term_) -> binop_term_
-- On AND reduce production mark_location(binop_term_) -> binop_term_

State 176:
binop_term_ -> binop_term . INFIXCONS binop_term [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQ EOF END COMMA COLONGT BY BAR ARROW AND ]
binop_term_ -> binop_term . EQ binop_term [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQ EOF END COMMA COLONGT BY BAR ARROW AND ]
binop_term_ -> binop_term . INFIXOP0 binop_term [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQ EOF END COMMA COLONGT BY BAR ARROW AND ]
binop_term_ -> binop_term . INFIXOP1 binop_term [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQ EOF END COMMA COLONGT BY BAR ARROW AND ]
binop_term_ -> binop_term . INFIXOP2 binop_term [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQ EOF END COMMA COLONGT BY BAR ARROW AND ]
binop_term_ -> binop_term . INFIXOP3 binop_term [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQ EOF END COMMA COLONGT BY BAR ARROW AND ]
binop_term_ -> binop_term . STAR binop_term [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQ EOF END COMMA COLONGT BY BAR ARROW AND ]
binop_term_ -> binop_term STAR binop_term . [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQ EOF END COMMA COLONGT BY BAR ARROW AND ]
binop_term_ -> binop_term . INFIXOP4 binop_term [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQ EOF END COMMA COLONGT BY BAR ARROW AND ]
-- On INFIXOP4 shift to state 177
-- On WITH reduce production binop_term_ -> binop_term STAR binop_term
-- On VERBOSITY reduce production binop_term_ -> binop_term STAR binop_term
-- On TRY reduce production binop_term_ -> binop_term STAR binop_term
-- On STAR reduce production binop_term_ -> binop_term STAR binop_term
-- On SEMISEMI reduce production binop_term_ -> binop_term STAR binop_term
-- On SEMI reduce production binop_term_ -> binop_term STAR binop_term
-- On RULE reduce production binop_term_ -> binop_term STAR binop_term
-- On RPAREN reduce production binop_term_ -> binop_term STAR binop_term
-- On REQUIRE reduce production binop_term_ -> binop_term STAR binop_term
-- On RBRACK reduce production binop_term_ -> binop_term STAR binop_term
-- On RBRACE reduce production binop_term_ -> binop_term STAR binop_term
-- On OPERATION reduce production binop_term_ -> binop_term STAR binop_term
-- On OPEN reduce production binop_term_ -> binop_term STAR binop_term
-- On MODULE reduce production binop_term_ -> binop_term STAR binop_term
-- On MLTYPE reduce production binop_term_ -> binop_term STAR binop_term
-- On LET reduce production binop_term_ -> binop_term STAR binop_term
-- On INFIXOP3 reduce production binop_term_ -> binop_term STAR binop_term
-- On INFIXOP2 reduce production binop_term_ -> binop_term STAR binop_term
-- On INFIXOP1 reduce production binop_term_ -> binop_term STAR binop_term
-- On INFIXOP0 reduce production binop_term_ -> binop_term STAR binop_term
-- On INFIXCONS reduce production binop_term_ -> binop_term STAR binop_term
-- On INCLUDE reduce production binop_term_ -> binop_term STAR binop_term
-- On IN reduce production binop_term_ -> binop_term STAR binop_term
-- On EXTERNAL reduce production binop_term_ -> binop_term STAR binop_term
-- On EXCEPTION reduce production binop_term_ -> binop_term STAR binop_term
-- On EQ reduce production binop_term_ -> binop_term STAR binop_term
-- On EOF reduce production binop_term_ -> binop_term STAR binop_term
-- On END reduce production binop_term_ -> binop_term STAR binop_term
-- On COMMA reduce production binop_term_ -> binop_term STAR binop_term
-- On COLONGT reduce production binop_term_ -> binop_term STAR binop_term
-- On BY reduce production binop_term_ -> binop_term STAR binop_term
-- On BAR reduce production binop_term_ -> binop_term STAR binop_term
-- On ARROW reduce production binop_term_ -> binop_term STAR binop_term
-- On AND reduce production binop_term_ -> binop_term STAR binop_term

State 177:
binop_term_ -> binop_term INFIXOP4 . binop_term [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQ EOF END COMMA COLONGT BY BAR ARROW AND ]
-- On REF shift to state 4
-- On RAISE shift to state 12
-- On QUOTED_STRING shift to state 5
-- On QQMARK shift to state 15
-- On PREFIXOP shift to state 6
-- On OCCURS shift to state 18
-- On NATURAL shift to state 7
-- On NAME shift to state 8
-- On LPAREN shift to state 9
-- On LBRACK shift to state 13
-- On CONVERT shift to state 130
-- On CONTEXT shift to state 136
-- On CONGRUENCE shift to state 138
-- On BANG shift to state 19
-- On ABSTRACT shift to state 144
-- On tt_name shift to state 20
-- On substitution_term_ shift to state 147
-- On substitution_term shift to state 148
-- On simple_term_ shift to state 21
-- On prefix_term_ shift to state 134
-- On module_path shift to state 24
-- On module_name shift to state 45
-- On mark_location(substitution_term_) shift to state 135
-- On mark_location(binop_term_) shift to state 171
-- On mark_location(app_term_) shift to state 152
-- On binop_term_ shift to state 175
-- On binop_term shift to state 178
-- On app_term_ shift to state 179
-- On app_term shift to state 180
-- On any_name shift to state 47

State 178:
binop_term_ -> binop_term . INFIXCONS binop_term [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQ EOF END COMMA COLONGT BY BAR ARROW AND ]
binop_term_ -> binop_term . EQ binop_term [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQ EOF END COMMA COLONGT BY BAR ARROW AND ]
binop_term_ -> binop_term . INFIXOP0 binop_term [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQ EOF END COMMA COLONGT BY BAR ARROW AND ]
binop_term_ -> binop_term . INFIXOP1 binop_term [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQ EOF END COMMA COLONGT BY BAR ARROW AND ]
binop_term_ -> binop_term . INFIXOP2 binop_term [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQ EOF END COMMA COLONGT BY BAR ARROW AND ]
binop_term_ -> binop_term . INFIXOP3 binop_term [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQ EOF END COMMA COLONGT BY BAR ARROW AND ]
binop_term_ -> binop_term . STAR binop_term [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQ EOF END COMMA COLONGT BY BAR ARROW AND ]
binop_term_ -> binop_term . INFIXOP4 binop_term [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQ EOF END COMMA COLONGT BY BAR ARROW AND ]
binop_term_ -> binop_term INFIXOP4 binop_term . [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQ EOF END COMMA COLONGT BY BAR ARROW AND ]
-- On INFIXOP4 shift to state 177
-- On WITH reduce production binop_term_ -> binop_term INFIXOP4 binop_term
-- On VERBOSITY reduce production binop_term_ -> binop_term INFIXOP4 binop_term
-- On TRY reduce production binop_term_ -> binop_term INFIXOP4 binop_term
-- On STAR reduce production binop_term_ -> binop_term INFIXOP4 binop_term
-- On SEMISEMI reduce production binop_term_ -> binop_term INFIXOP4 binop_term
-- On SEMI reduce production binop_term_ -> binop_term INFIXOP4 binop_term
-- On RULE reduce production binop_term_ -> binop_term INFIXOP4 binop_term
-- On RPAREN reduce production binop_term_ -> binop_term INFIXOP4 binop_term
-- On REQUIRE reduce production binop_term_ -> binop_term INFIXOP4 binop_term
-- On RBRACK reduce production binop_term_ -> binop_term INFIXOP4 binop_term
-- On RBRACE reduce production binop_term_ -> binop_term INFIXOP4 binop_term
-- On OPERATION reduce production binop_term_ -> binop_term INFIXOP4 binop_term
-- On OPEN reduce production binop_term_ -> binop_term INFIXOP4 binop_term
-- On MODULE reduce production binop_term_ -> binop_term INFIXOP4 binop_term
-- On MLTYPE reduce production binop_term_ -> binop_term INFIXOP4 binop_term
-- On LET reduce production binop_term_ -> binop_term INFIXOP4 binop_term
-- On INFIXOP3 reduce production binop_term_ -> binop_term INFIXOP4 binop_term
-- On INFIXOP2 reduce production binop_term_ -> binop_term INFIXOP4 binop_term
-- On INFIXOP1 reduce production binop_term_ -> binop_term INFIXOP4 binop_term
-- On INFIXOP0 reduce production binop_term_ -> binop_term INFIXOP4 binop_term
-- On INFIXCONS reduce production binop_term_ -> binop_term INFIXOP4 binop_term
-- On INCLUDE reduce production binop_term_ -> binop_term INFIXOP4 binop_term
-- On IN reduce production binop_term_ -> binop_term INFIXOP4 binop_term
-- On EXTERNAL reduce production binop_term_ -> binop_term INFIXOP4 binop_term
-- On EXCEPTION reduce production binop_term_ -> binop_term INFIXOP4 binop_term
-- On EQ reduce production binop_term_ -> binop_term INFIXOP4 binop_term
-- On EOF reduce production binop_term_ -> binop_term INFIXOP4 binop_term
-- On END reduce production binop_term_ -> binop_term INFIXOP4 binop_term
-- On COMMA reduce production binop_term_ -> binop_term INFIXOP4 binop_term
-- On COLONGT reduce production binop_term_ -> binop_term INFIXOP4 binop_term
-- On BY reduce production binop_term_ -> binop_term INFIXOP4 binop_term
-- On BAR reduce production binop_term_ -> binop_term INFIXOP4 binop_term
-- On ARROW reduce production binop_term_ -> binop_term INFIXOP4 binop_term
-- On AND reduce production binop_term_ -> binop_term INFIXOP4 binop_term

State 179:
binop_term_ -> app_term_ . [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQ EOF END COMMA COLONGT BY BAR ARROW AND ]
mark_location(app_term_) -> app_term_ . [ EQEQ COLONQT COLONEQ COLON ]
-- On WITH reduce production binop_term_ -> app_term_
-- On VERBOSITY reduce production binop_term_ -> app_term_
-- On TRY reduce production binop_term_ -> app_term_
-- On STAR reduce production binop_term_ -> app_term_
-- On SEMISEMI reduce production binop_term_ -> app_term_
-- On SEMI reduce production binop_term_ -> app_term_
-- On RULE reduce production binop_term_ -> app_term_
-- On RPAREN reduce production binop_term_ -> app_term_
-- On REQUIRE reduce production binop_term_ -> app_term_
-- On RBRACK reduce production binop_term_ -> app_term_
-- On RBRACE reduce production binop_term_ -> app_term_
-- On OPERATION reduce production binop_term_ -> app_term_
-- On OPEN reduce production binop_term_ -> app_term_
-- On MODULE reduce production binop_term_ -> app_term_
-- On MLTYPE reduce production binop_term_ -> app_term_
-- On LET reduce production binop_term_ -> app_term_
-- On INFIXOP4 reduce production binop_term_ -> app_term_
-- On INFIXOP3 reduce production binop_term_ -> app_term_
-- On INFIXOP2 reduce production binop_term_ -> app_term_
-- On INFIXOP1 reduce production binop_term_ -> app_term_
-- On INFIXOP0 reduce production binop_term_ -> app_term_
-- On INFIXCONS reduce production binop_term_ -> app_term_
-- On INCLUDE reduce production binop_term_ -> app_term_
-- On IN reduce production binop_term_ -> app_term_
-- On EXTERNAL reduce production binop_term_ -> app_term_
-- On EXCEPTION reduce production binop_term_ -> app_term_
-- On EQEQ reduce production mark_location(app_term_) -> app_term_
-- On EQ reduce production binop_term_ -> app_term_
-- On EOF reduce production binop_term_ -> app_term_
-- On END reduce production binop_term_ -> app_term_
-- On COMMA reduce production binop_term_ -> app_term_
-- On COLONQT reduce production mark_location(app_term_) -> app_term_
-- On COLONGT reduce production binop_term_ -> app_term_
-- On COLONEQ reduce production mark_location(app_term_) -> app_term_
-- On COLON reduce production mark_location(app_term_) -> app_term_
-- On BY reduce production binop_term_ -> app_term_
-- On BAR reduce production binop_term_ -> app_term_
-- On ARROW reduce production binop_term_ -> app_term_
-- On AND reduce production binop_term_ -> app_term_

State 180:
binop_term_ -> app_term . COLONEQ binop_term [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQ EOF END COMMA COLONGT BY BAR ARROW AND ]
binop_term_ -> app_term . EQEQ app_term BY app_term [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQ EOF END COMMA COLONGT BY BAR ARROW AND ]
binop_term_ -> app_term . EQEQ app_term COLON app_term BY app_term [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQ EOF END COMMA COLONGT BY BAR ARROW AND ]
binop_term_ -> app_term . EQEQ app_term BY QQMARK [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQ EOF END COMMA COLONGT BY BAR ARROW AND ]
binop_term_ -> app_term . EQEQ app_term COLON app_term BY QQMARK [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQ EOF END COMMA COLONGT BY BAR ARROW AND ]
-- On EQEQ shift to state 181
-- On COLONEQ shift to state 191

State 181:
binop_term_ -> app_term EQEQ . app_term BY app_term [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQ EOF END COMMA COLONGT BY BAR ARROW AND ]
binop_term_ -> app_term EQEQ . app_term COLON app_term BY app_term [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQ EOF END COMMA COLONGT BY BAR ARROW AND ]
binop_term_ -> app_term EQEQ . app_term BY QQMARK [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQ EOF END COMMA COLONGT BY BAR ARROW AND ]
binop_term_ -> app_term EQEQ . app_term COLON app_term BY QQMARK [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQ EOF END COMMA COLONGT BY BAR ARROW AND ]
-- On REF shift to state 4
-- On RAISE shift to state 12
-- On QUOTED_STRING shift to state 5
-- On PREFIXOP shift to state 6
-- On OCCURS shift to state 18
-- On NATURAL shift to state 7
-- On NAME shift to state 8
-- On LPAREN shift to state 9
-- On LBRACK shift to state 13
-- On CONVERT shift to state 130
-- On CONTEXT shift to state 136
-- On CONGRUENCE shift to state 138
-- On BANG shift to state 19
-- On ABSTRACT shift to state 144
-- On tt_name shift to state 20
-- On substitution_term_ shift to state 147
-- On substitution_term shift to state 148
-- On simple_term_ shift to state 21
-- On prefix_term_ shift to state 134
-- On module_path shift to state 24
-- On module_name shift to state 45
-- On mark_location(substitution_term_) shift to state 135
-- On mark_location(app_term_) shift to state 152
-- On app_term_ shift to state 153
-- On app_term shift to state 182
-- On any_name shift to state 47

State 182:
binop_term_ -> app_term EQEQ app_term . BY app_term [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQ EOF END COMMA COLONGT BY BAR ARROW AND ]
binop_term_ -> app_term EQEQ app_term . COLON app_term BY app_term [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQ EOF END COMMA COLONGT BY BAR ARROW AND ]
binop_term_ -> app_term EQEQ app_term . BY QQMARK [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQ EOF END COMMA COLONGT BY BAR ARROW AND ]
binop_term_ -> app_term EQEQ app_term . COLON app_term BY QQMARK [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQ EOF END COMMA COLONGT BY BAR ARROW AND ]
-- On COLON shift to state 183
-- On BY shift to state 188

State 183:
binop_term_ -> app_term EQEQ app_term COLON . app_term BY app_term [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQ EOF END COMMA COLONGT BY BAR ARROW AND ]
binop_term_ -> app_term EQEQ app_term COLON . app_term BY QQMARK [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQ EOF END COMMA COLONGT BY BAR ARROW AND ]
-- On REF shift to state 4
-- On RAISE shift to state 12
-- On QUOTED_STRING shift to state 5
-- On PREFIXOP shift to state 6
-- On OCCURS shift to state 18
-- On NATURAL shift to state 7
-- On NAME shift to state 8
-- On LPAREN shift to state 9
-- On LBRACK shift to state 13
-- On CONVERT shift to state 130
-- On CONTEXT shift to state 136
-- On CONGRUENCE shift to state 138
-- On BANG shift to state 19
-- On ABSTRACT shift to state 144
-- On tt_name shift to state 20
-- On substitution_term_ shift to state 147
-- On substitution_term shift to state 148
-- On simple_term_ shift to state 21
-- On prefix_term_ shift to state 134
-- On module_path shift to state 24
-- On module_name shift to state 45
-- On mark_location(substitution_term_) shift to state 135
-- On mark_location(app_term_) shift to state 152
-- On app_term_ shift to state 153
-- On app_term shift to state 184
-- On any_name shift to state 47

State 184:
binop_term_ -> app_term EQEQ app_term COLON app_term . BY app_term [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQ EOF END COMMA COLONGT BY BAR ARROW AND ]
binop_term_ -> app_term EQEQ app_term COLON app_term . BY QQMARK [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQ EOF END COMMA COLONGT BY BAR ARROW AND ]
-- On BY shift to state 185

State 185:
binop_term_ -> app_term EQEQ app_term COLON app_term BY . app_term [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQ EOF END COMMA COLONGT BY BAR ARROW AND ]
binop_term_ -> app_term EQEQ app_term COLON app_term BY . QQMARK [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQ EOF END COMMA COLONGT BY BAR ARROW AND ]
-- On REF shift to state 4
-- On RAISE shift to state 12
-- On QUOTED_STRING shift to state 5
-- On QQMARK shift to state 186
-- On PREFIXOP shift to state 6
-- On OCCURS shift to state 18
-- On NATURAL shift to state 7
-- On NAME shift to state 8
-- On LPAREN shift to state 9
-- On LBRACK shift to state 13
-- On CONVERT shift to state 130
-- On CONTEXT shift to state 136
-- On CONGRUENCE shift to state 138
-- On BANG shift to state 19
-- On ABSTRACT shift to state 144
-- On tt_name shift to state 20
-- On substitution_term_ shift to state 147
-- On substitution_term shift to state 148
-- On simple_term_ shift to state 21
-- On prefix_term_ shift to state 134
-- On module_path shift to state 24
-- On module_name shift to state 45
-- On mark_location(substitution_term_) shift to state 135
-- On mark_location(app_term_) shift to state 152
-- On app_term_ shift to state 153
-- On app_term shift to state 187
-- On any_name shift to state 47

State 186:
binop_term_ -> app_term EQEQ app_term COLON app_term BY QQMARK . [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQ EOF END COMMA COLONGT BY BAR ARROW AND ]
-- On WITH reduce production binop_term_ -> app_term EQEQ app_term COLON app_term BY QQMARK
-- On VERBOSITY reduce production binop_term_ -> app_term EQEQ app_term COLON app_term BY QQMARK
-- On TRY reduce production binop_term_ -> app_term EQEQ app_term COLON app_term BY QQMARK
-- On STAR reduce production binop_term_ -> app_term EQEQ app_term COLON app_term BY QQMARK
-- On SEMISEMI reduce production binop_term_ -> app_term EQEQ app_term COLON app_term BY QQMARK
-- On SEMI reduce production binop_term_ -> app_term EQEQ app_term COLON app_term BY QQMARK
-- On RULE reduce production binop_term_ -> app_term EQEQ app_term COLON app_term BY QQMARK
-- On RPAREN reduce production binop_term_ -> app_term EQEQ app_term COLON app_term BY QQMARK
-- On REQUIRE reduce production binop_term_ -> app_term EQEQ app_term COLON app_term BY QQMARK
-- On RBRACK reduce production binop_term_ -> app_term EQEQ app_term COLON app_term BY QQMARK
-- On RBRACE reduce production binop_term_ -> app_term EQEQ app_term COLON app_term BY QQMARK
-- On OPERATION reduce production binop_term_ -> app_term EQEQ app_term COLON app_term BY QQMARK
-- On OPEN reduce production binop_term_ -> app_term EQEQ app_term COLON app_term BY QQMARK
-- On MODULE reduce production binop_term_ -> app_term EQEQ app_term COLON app_term BY QQMARK
-- On MLTYPE reduce production binop_term_ -> app_term EQEQ app_term COLON app_term BY QQMARK
-- On LET reduce production binop_term_ -> app_term EQEQ app_term COLON app_term BY QQMARK
-- On INFIXOP4 reduce production binop_term_ -> app_term EQEQ app_term COLON app_term BY QQMARK
-- On INFIXOP3 reduce production binop_term_ -> app_term EQEQ app_term COLON app_term BY QQMARK
-- On INFIXOP2 reduce production binop_term_ -> app_term EQEQ app_term COLON app_term BY QQMARK
-- On INFIXOP1 reduce production binop_term_ -> app_term EQEQ app_term COLON app_term BY QQMARK
-- On INFIXOP0 reduce production binop_term_ -> app_term EQEQ app_term COLON app_term BY QQMARK
-- On INFIXCONS reduce production binop_term_ -> app_term EQEQ app_term COLON app_term BY QQMARK
-- On INCLUDE reduce production binop_term_ -> app_term EQEQ app_term COLON app_term BY QQMARK
-- On IN reduce production binop_term_ -> app_term EQEQ app_term COLON app_term BY QQMARK
-- On EXTERNAL reduce production binop_term_ -> app_term EQEQ app_term COLON app_term BY QQMARK
-- On EXCEPTION reduce production binop_term_ -> app_term EQEQ app_term COLON app_term BY QQMARK
-- On EQ reduce production binop_term_ -> app_term EQEQ app_term COLON app_term BY QQMARK
-- On EOF reduce production binop_term_ -> app_term EQEQ app_term COLON app_term BY QQMARK
-- On END reduce production binop_term_ -> app_term EQEQ app_term COLON app_term BY QQMARK
-- On COMMA reduce production binop_term_ -> app_term EQEQ app_term COLON app_term BY QQMARK
-- On COLONGT reduce production binop_term_ -> app_term EQEQ app_term COLON app_term BY QQMARK
-- On BY reduce production binop_term_ -> app_term EQEQ app_term COLON app_term BY QQMARK
-- On BAR reduce production binop_term_ -> app_term EQEQ app_term COLON app_term BY QQMARK
-- On ARROW reduce production binop_term_ -> app_term EQEQ app_term COLON app_term BY QQMARK
-- On AND reduce production binop_term_ -> app_term EQEQ app_term COLON app_term BY QQMARK

State 187:
binop_term_ -> app_term EQEQ app_term COLON app_term BY app_term . [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQ EOF END COMMA COLONGT BY BAR ARROW AND ]
-- On WITH reduce production binop_term_ -> app_term EQEQ app_term COLON app_term BY app_term
-- On VERBOSITY reduce production binop_term_ -> app_term EQEQ app_term COLON app_term BY app_term
-- On TRY reduce production binop_term_ -> app_term EQEQ app_term COLON app_term BY app_term
-- On STAR reduce production binop_term_ -> app_term EQEQ app_term COLON app_term BY app_term
-- On SEMISEMI reduce production binop_term_ -> app_term EQEQ app_term COLON app_term BY app_term
-- On SEMI reduce production binop_term_ -> app_term EQEQ app_term COLON app_term BY app_term
-- On RULE reduce production binop_term_ -> app_term EQEQ app_term COLON app_term BY app_term
-- On RPAREN reduce production binop_term_ -> app_term EQEQ app_term COLON app_term BY app_term
-- On REQUIRE reduce production binop_term_ -> app_term EQEQ app_term COLON app_term BY app_term
-- On RBRACK reduce production binop_term_ -> app_term EQEQ app_term COLON app_term BY app_term
-- On RBRACE reduce production binop_term_ -> app_term EQEQ app_term COLON app_term BY app_term
-- On OPERATION reduce production binop_term_ -> app_term EQEQ app_term COLON app_term BY app_term
-- On OPEN reduce production binop_term_ -> app_term EQEQ app_term COLON app_term BY app_term
-- On MODULE reduce production binop_term_ -> app_term EQEQ app_term COLON app_term BY app_term
-- On MLTYPE reduce production binop_term_ -> app_term EQEQ app_term COLON app_term BY app_term
-- On LET reduce production binop_term_ -> app_term EQEQ app_term COLON app_term BY app_term
-- On INFIXOP4 reduce production binop_term_ -> app_term EQEQ app_term COLON app_term BY app_term
-- On INFIXOP3 reduce production binop_term_ -> app_term EQEQ app_term COLON app_term BY app_term
-- On INFIXOP2 reduce production binop_term_ -> app_term EQEQ app_term COLON app_term BY app_term
-- On INFIXOP1 reduce production binop_term_ -> app_term EQEQ app_term COLON app_term BY app_term
-- On INFIXOP0 reduce production binop_term_ -> app_term EQEQ app_term COLON app_term BY app_term
-- On INFIXCONS reduce production binop_term_ -> app_term EQEQ app_term COLON app_term BY app_term
-- On INCLUDE reduce production binop_term_ -> app_term EQEQ app_term COLON app_term BY app_term
-- On IN reduce production binop_term_ -> app_term EQEQ app_term COLON app_term BY app_term
-- On EXTERNAL reduce production binop_term_ -> app_term EQEQ app_term COLON app_term BY app_term
-- On EXCEPTION reduce production binop_term_ -> app_term EQEQ app_term COLON app_term BY app_term
-- On EQ reduce production binop_term_ -> app_term EQEQ app_term COLON app_term BY app_term
-- On EOF reduce production binop_term_ -> app_term EQEQ app_term COLON app_term BY app_term
-- On END reduce production binop_term_ -> app_term EQEQ app_term COLON app_term BY app_term
-- On COMMA reduce production binop_term_ -> app_term EQEQ app_term COLON app_term BY app_term
-- On COLONGT reduce production binop_term_ -> app_term EQEQ app_term COLON app_term BY app_term
-- On BY reduce production binop_term_ -> app_term EQEQ app_term COLON app_term BY app_term
-- On BAR reduce production binop_term_ -> app_term EQEQ app_term COLON app_term BY app_term
-- On ARROW reduce production binop_term_ -> app_term EQEQ app_term COLON app_term BY app_term
-- On AND reduce production binop_term_ -> app_term EQEQ app_term COLON app_term BY app_term

State 188:
binop_term_ -> app_term EQEQ app_term BY . app_term [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQ EOF END COMMA COLONGT BY BAR ARROW AND ]
binop_term_ -> app_term EQEQ app_term BY . QQMARK [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQ EOF END COMMA COLONGT BY BAR ARROW AND ]
-- On REF shift to state 4
-- On RAISE shift to state 12
-- On QUOTED_STRING shift to state 5
-- On QQMARK shift to state 189
-- On PREFIXOP shift to state 6
-- On OCCURS shift to state 18
-- On NATURAL shift to state 7
-- On NAME shift to state 8
-- On LPAREN shift to state 9
-- On LBRACK shift to state 13
-- On CONVERT shift to state 130
-- On CONTEXT shift to state 136
-- On CONGRUENCE shift to state 138
-- On BANG shift to state 19
-- On ABSTRACT shift to state 144
-- On tt_name shift to state 20
-- On substitution_term_ shift to state 147
-- On substitution_term shift to state 148
-- On simple_term_ shift to state 21
-- On prefix_term_ shift to state 134
-- On module_path shift to state 24
-- On module_name shift to state 45
-- On mark_location(substitution_term_) shift to state 135
-- On mark_location(app_term_) shift to state 152
-- On app_term_ shift to state 153
-- On app_term shift to state 190
-- On any_name shift to state 47

State 189:
binop_term_ -> app_term EQEQ app_term BY QQMARK . [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQ EOF END COMMA COLONGT BY BAR ARROW AND ]
-- On WITH reduce production binop_term_ -> app_term EQEQ app_term BY QQMARK
-- On VERBOSITY reduce production binop_term_ -> app_term EQEQ app_term BY QQMARK
-- On TRY reduce production binop_term_ -> app_term EQEQ app_term BY QQMARK
-- On STAR reduce production binop_term_ -> app_term EQEQ app_term BY QQMARK
-- On SEMISEMI reduce production binop_term_ -> app_term EQEQ app_term BY QQMARK
-- On SEMI reduce production binop_term_ -> app_term EQEQ app_term BY QQMARK
-- On RULE reduce production binop_term_ -> app_term EQEQ app_term BY QQMARK
-- On RPAREN reduce production binop_term_ -> app_term EQEQ app_term BY QQMARK
-- On REQUIRE reduce production binop_term_ -> app_term EQEQ app_term BY QQMARK
-- On RBRACK reduce production binop_term_ -> app_term EQEQ app_term BY QQMARK
-- On RBRACE reduce production binop_term_ -> app_term EQEQ app_term BY QQMARK
-- On OPERATION reduce production binop_term_ -> app_term EQEQ app_term BY QQMARK
-- On OPEN reduce production binop_term_ -> app_term EQEQ app_term BY QQMARK
-- On MODULE reduce production binop_term_ -> app_term EQEQ app_term BY QQMARK
-- On MLTYPE reduce production binop_term_ -> app_term EQEQ app_term BY QQMARK
-- On LET reduce production binop_term_ -> app_term EQEQ app_term BY QQMARK
-- On INFIXOP4 reduce production binop_term_ -> app_term EQEQ app_term BY QQMARK
-- On INFIXOP3 reduce production binop_term_ -> app_term EQEQ app_term BY QQMARK
-- On INFIXOP2 reduce production binop_term_ -> app_term EQEQ app_term BY QQMARK
-- On INFIXOP1 reduce production binop_term_ -> app_term EQEQ app_term BY QQMARK
-- On INFIXOP0 reduce production binop_term_ -> app_term EQEQ app_term BY QQMARK
-- On INFIXCONS reduce production binop_term_ -> app_term EQEQ app_term BY QQMARK
-- On INCLUDE reduce production binop_term_ -> app_term EQEQ app_term BY QQMARK
-- On IN reduce production binop_term_ -> app_term EQEQ app_term BY QQMARK
-- On EXTERNAL reduce production binop_term_ -> app_term EQEQ app_term BY QQMARK
-- On EXCEPTION reduce production binop_term_ -> app_term EQEQ app_term BY QQMARK
-- On EQ reduce production binop_term_ -> app_term EQEQ app_term BY QQMARK
-- On EOF reduce production binop_term_ -> app_term EQEQ app_term BY QQMARK
-- On END reduce production binop_term_ -> app_term EQEQ app_term BY QQMARK
-- On COMMA reduce production binop_term_ -> app_term EQEQ app_term BY QQMARK
-- On COLONGT reduce production binop_term_ -> app_term EQEQ app_term BY QQMARK
-- On BY reduce production binop_term_ -> app_term EQEQ app_term BY QQMARK
-- On BAR reduce production binop_term_ -> app_term EQEQ app_term BY QQMARK
-- On ARROW reduce production binop_term_ -> app_term EQEQ app_term BY QQMARK
-- On AND reduce production binop_term_ -> app_term EQEQ app_term BY QQMARK

State 190:
binop_term_ -> app_term EQEQ app_term BY app_term . [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQ EOF END COMMA COLONGT BY BAR ARROW AND ]
-- On WITH reduce production binop_term_ -> app_term EQEQ app_term BY app_term
-- On VERBOSITY reduce production binop_term_ -> app_term EQEQ app_term BY app_term
-- On TRY reduce production binop_term_ -> app_term EQEQ app_term BY app_term
-- On STAR reduce production binop_term_ -> app_term EQEQ app_term BY app_term
-- On SEMISEMI reduce production binop_term_ -> app_term EQEQ app_term BY app_term
-- On SEMI reduce production binop_term_ -> app_term EQEQ app_term BY app_term
-- On RULE reduce production binop_term_ -> app_term EQEQ app_term BY app_term
-- On RPAREN reduce production binop_term_ -> app_term EQEQ app_term BY app_term
-- On REQUIRE reduce production binop_term_ -> app_term EQEQ app_term BY app_term
-- On RBRACK reduce production binop_term_ -> app_term EQEQ app_term BY app_term
-- On RBRACE reduce production binop_term_ -> app_term EQEQ app_term BY app_term
-- On OPERATION reduce production binop_term_ -> app_term EQEQ app_term BY app_term
-- On OPEN reduce production binop_term_ -> app_term EQEQ app_term BY app_term
-- On MODULE reduce production binop_term_ -> app_term EQEQ app_term BY app_term
-- On MLTYPE reduce production binop_term_ -> app_term EQEQ app_term BY app_term
-- On LET reduce production binop_term_ -> app_term EQEQ app_term BY app_term
-- On INFIXOP4 reduce production binop_term_ -> app_term EQEQ app_term BY app_term
-- On INFIXOP3 reduce production binop_term_ -> app_term EQEQ app_term BY app_term
-- On INFIXOP2 reduce production binop_term_ -> app_term EQEQ app_term BY app_term
-- On INFIXOP1 reduce production binop_term_ -> app_term EQEQ app_term BY app_term
-- On INFIXOP0 reduce production binop_term_ -> app_term EQEQ app_term BY app_term
-- On INFIXCONS reduce production binop_term_ -> app_term EQEQ app_term BY app_term
-- On INCLUDE reduce production binop_term_ -> app_term EQEQ app_term BY app_term
-- On IN reduce production binop_term_ -> app_term EQEQ app_term BY app_term
-- On EXTERNAL reduce production binop_term_ -> app_term EQEQ app_term BY app_term
-- On EXCEPTION reduce production binop_term_ -> app_term EQEQ app_term BY app_term
-- On EQ reduce production binop_term_ -> app_term EQEQ app_term BY app_term
-- On EOF reduce production binop_term_ -> app_term EQEQ app_term BY app_term
-- On END reduce production binop_term_ -> app_term EQEQ app_term BY app_term
-- On COMMA reduce production binop_term_ -> app_term EQEQ app_term BY app_term
-- On COLONGT reduce production binop_term_ -> app_term EQEQ app_term BY app_term
-- On BY reduce production binop_term_ -> app_term EQEQ app_term BY app_term
-- On BAR reduce production binop_term_ -> app_term EQEQ app_term BY app_term
-- On ARROW reduce production binop_term_ -> app_term EQEQ app_term BY app_term
-- On AND reduce production binop_term_ -> app_term EQEQ app_term BY app_term

State 191:
binop_term_ -> app_term COLONEQ . binop_term [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQ EOF END COMMA COLONGT BY BAR ARROW AND ]
-- On REF shift to state 4
-- On RAISE shift to state 12
-- On QUOTED_STRING shift to state 5
-- On QQMARK shift to state 15
-- On PREFIXOP shift to state 6
-- On OCCURS shift to state 18
-- On NATURAL shift to state 7
-- On NAME shift to state 8
-- On LPAREN shift to state 9
-- On LBRACK shift to state 13
-- On CONVERT shift to state 130
-- On CONTEXT shift to state 136
-- On CONGRUENCE shift to state 138
-- On BANG shift to state 19
-- On ABSTRACT shift to state 144
-- On tt_name shift to state 20
-- On substitution_term_ shift to state 147
-- On substitution_term shift to state 148
-- On simple_term_ shift to state 21
-- On prefix_term_ shift to state 134
-- On module_path shift to state 24
-- On module_name shift to state 45
-- On mark_location(substitution_term_) shift to state 135
-- On mark_location(binop_term_) shift to state 171
-- On mark_location(app_term_) shift to state 152
-- On binop_term_ shift to state 175
-- On binop_term shift to state 192
-- On app_term_ shift to state 179
-- On app_term shift to state 180
-- On any_name shift to state 47

State 192:
binop_term_ -> app_term COLONEQ binop_term . [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQ EOF END COMMA COLONGT BY BAR ARROW AND ]
binop_term_ -> binop_term . INFIXCONS binop_term [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQ EOF END COMMA COLONGT BY BAR ARROW AND ]
binop_term_ -> binop_term . EQ binop_term [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQ EOF END COMMA COLONGT BY BAR ARROW AND ]
binop_term_ -> binop_term . INFIXOP0 binop_term [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQ EOF END COMMA COLONGT BY BAR ARROW AND ]
binop_term_ -> binop_term . INFIXOP1 binop_term [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQ EOF END COMMA COLONGT BY BAR ARROW AND ]
binop_term_ -> binop_term . INFIXOP2 binop_term [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQ EOF END COMMA COLONGT BY BAR ARROW AND ]
binop_term_ -> binop_term . INFIXOP3 binop_term [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQ EOF END COMMA COLONGT BY BAR ARROW AND ]
binop_term_ -> binop_term . STAR binop_term [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQ EOF END COMMA COLONGT BY BAR ARROW AND ]
binop_term_ -> binop_term . INFIXOP4 binop_term [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQ EOF END COMMA COLONGT BY BAR ARROW AND ]
-- On STAR shift to state 174
-- On INFIXOP4 shift to state 177
-- On INFIXOP3 shift to state 193
-- On INFIXOP2 shift to state 195
-- On INFIXOP1 shift to state 197
-- On INFIXOP0 shift to state 201
-- On INFIXCONS shift to state 199
-- On EQ shift to state 203
-- On WITH reduce production binop_term_ -> app_term COLONEQ binop_term
-- On VERBOSITY reduce production binop_term_ -> app_term COLONEQ binop_term
-- On TRY reduce production binop_term_ -> app_term COLONEQ binop_term
-- On SEMISEMI reduce production binop_term_ -> app_term COLONEQ binop_term
-- On SEMI reduce production binop_term_ -> app_term COLONEQ binop_term
-- On RULE reduce production binop_term_ -> app_term COLONEQ binop_term
-- On RPAREN reduce production binop_term_ -> app_term COLONEQ binop_term
-- On REQUIRE reduce production binop_term_ -> app_term COLONEQ binop_term
-- On RBRACK reduce production binop_term_ -> app_term COLONEQ binop_term
-- On RBRACE reduce production binop_term_ -> app_term COLONEQ binop_term
-- On OPERATION reduce production binop_term_ -> app_term COLONEQ binop_term
-- On OPEN reduce production binop_term_ -> app_term COLONEQ binop_term
-- On MODULE reduce production binop_term_ -> app_term COLONEQ binop_term
-- On MLTYPE reduce production binop_term_ -> app_term COLONEQ binop_term
-- On LET reduce production binop_term_ -> app_term COLONEQ binop_term
-- On INCLUDE reduce production binop_term_ -> app_term COLONEQ binop_term
-- On IN reduce production binop_term_ -> app_term COLONEQ binop_term
-- On EXTERNAL reduce production binop_term_ -> app_term COLONEQ binop_term
-- On EXCEPTION reduce production binop_term_ -> app_term COLONEQ binop_term
-- On EOF reduce production binop_term_ -> app_term COLONEQ binop_term
-- On END reduce production binop_term_ -> app_term COLONEQ binop_term
-- On COMMA reduce production binop_term_ -> app_term COLONEQ binop_term
-- On COLONGT reduce production binop_term_ -> app_term COLONEQ binop_term
-- On BY reduce production binop_term_ -> app_term COLONEQ binop_term
-- On BAR reduce production binop_term_ -> app_term COLONEQ binop_term
-- On ARROW reduce production binop_term_ -> app_term COLONEQ binop_term
-- On AND reduce production binop_term_ -> app_term COLONEQ binop_term

State 193:
binop_term_ -> binop_term INFIXOP3 . binop_term [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQ EOF END COMMA COLONGT BY BAR ARROW AND ]
-- On REF shift to state 4
-- On RAISE shift to state 12
-- On QUOTED_STRING shift to state 5
-- On QQMARK shift to state 15
-- On PREFIXOP shift to state 6
-- On OCCURS shift to state 18
-- On NATURAL shift to state 7
-- On NAME shift to state 8
-- On LPAREN shift to state 9
-- On LBRACK shift to state 13
-- On CONVERT shift to state 130
-- On CONTEXT shift to state 136
-- On CONGRUENCE shift to state 138
-- On BANG shift to state 19
-- On ABSTRACT shift to state 144
-- On tt_name shift to state 20
-- On substitution_term_ shift to state 147
-- On substitution_term shift to state 148
-- On simple_term_ shift to state 21
-- On prefix_term_ shift to state 134
-- On module_path shift to state 24
-- On module_name shift to state 45
-- On mark_location(substitution_term_) shift to state 135
-- On mark_location(binop_term_) shift to state 171
-- On mark_location(app_term_) shift to state 152
-- On binop_term_ shift to state 175
-- On binop_term shift to state 194
-- On app_term_ shift to state 179
-- On app_term shift to state 180
-- On any_name shift to state 47

State 194:
binop_term_ -> binop_term . INFIXCONS binop_term [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQ EOF END COMMA COLONGT BY BAR ARROW AND ]
binop_term_ -> binop_term . EQ binop_term [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQ EOF END COMMA COLONGT BY BAR ARROW AND ]
binop_term_ -> binop_term . INFIXOP0 binop_term [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQ EOF END COMMA COLONGT BY BAR ARROW AND ]
binop_term_ -> binop_term . INFIXOP1 binop_term [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQ EOF END COMMA COLONGT BY BAR ARROW AND ]
binop_term_ -> binop_term . INFIXOP2 binop_term [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQ EOF END COMMA COLONGT BY BAR ARROW AND ]
binop_term_ -> binop_term . INFIXOP3 binop_term [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQ EOF END COMMA COLONGT BY BAR ARROW AND ]
binop_term_ -> binop_term INFIXOP3 binop_term . [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQ EOF END COMMA COLONGT BY BAR ARROW AND ]
binop_term_ -> binop_term . STAR binop_term [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQ EOF END COMMA COLONGT BY BAR ARROW AND ]
binop_term_ -> binop_term . INFIXOP4 binop_term [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQ EOF END COMMA COLONGT BY BAR ARROW AND ]
-- On INFIXOP4 shift to state 177
-- On WITH reduce production binop_term_ -> binop_term INFIXOP3 binop_term
-- On VERBOSITY reduce production binop_term_ -> binop_term INFIXOP3 binop_term
-- On TRY reduce production binop_term_ -> binop_term INFIXOP3 binop_term
-- On STAR reduce production binop_term_ -> binop_term INFIXOP3 binop_term
-- On SEMISEMI reduce production binop_term_ -> binop_term INFIXOP3 binop_term
-- On SEMI reduce production binop_term_ -> binop_term INFIXOP3 binop_term
-- On RULE reduce production binop_term_ -> binop_term INFIXOP3 binop_term
-- On RPAREN reduce production binop_term_ -> binop_term INFIXOP3 binop_term
-- On REQUIRE reduce production binop_term_ -> binop_term INFIXOP3 binop_term
-- On RBRACK reduce production binop_term_ -> binop_term INFIXOP3 binop_term
-- On RBRACE reduce production binop_term_ -> binop_term INFIXOP3 binop_term
-- On OPERATION reduce production binop_term_ -> binop_term INFIXOP3 binop_term
-- On OPEN reduce production binop_term_ -> binop_term INFIXOP3 binop_term
-- On MODULE reduce production binop_term_ -> binop_term INFIXOP3 binop_term
-- On MLTYPE reduce production binop_term_ -> binop_term INFIXOP3 binop_term
-- On LET reduce production binop_term_ -> binop_term INFIXOP3 binop_term
-- On INFIXOP3 reduce production binop_term_ -> binop_term INFIXOP3 binop_term
-- On INFIXOP2 reduce production binop_term_ -> binop_term INFIXOP3 binop_term
-- On INFIXOP1 reduce production binop_term_ -> binop_term INFIXOP3 binop_term
-- On INFIXOP0 reduce production binop_term_ -> binop_term INFIXOP3 binop_term
-- On INFIXCONS reduce production binop_term_ -> binop_term INFIXOP3 binop_term
-- On INCLUDE reduce production binop_term_ -> binop_term INFIXOP3 binop_term
-- On IN reduce production binop_term_ -> binop_term INFIXOP3 binop_term
-- On EXTERNAL reduce production binop_term_ -> binop_term INFIXOP3 binop_term
-- On EXCEPTION reduce production binop_term_ -> binop_term INFIXOP3 binop_term
-- On EQ reduce production binop_term_ -> binop_term INFIXOP3 binop_term
-- On EOF reduce production binop_term_ -> binop_term INFIXOP3 binop_term
-- On END reduce production binop_term_ -> binop_term INFIXOP3 binop_term
-- On COMMA reduce production binop_term_ -> binop_term INFIXOP3 binop_term
-- On COLONGT reduce production binop_term_ -> binop_term INFIXOP3 binop_term
-- On BY reduce production binop_term_ -> binop_term INFIXOP3 binop_term
-- On BAR reduce production binop_term_ -> binop_term INFIXOP3 binop_term
-- On ARROW reduce production binop_term_ -> binop_term INFIXOP3 binop_term
-- On AND reduce production binop_term_ -> binop_term INFIXOP3 binop_term

State 195:
binop_term_ -> binop_term INFIXOP2 . binop_term [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQ EOF END COMMA COLONGT BY BAR ARROW AND ]
-- On REF shift to state 4
-- On RAISE shift to state 12
-- On QUOTED_STRING shift to state 5
-- On QQMARK shift to state 15
-- On PREFIXOP shift to state 6
-- On OCCURS shift to state 18
-- On NATURAL shift to state 7
-- On NAME shift to state 8
-- On LPAREN shift to state 9
-- On LBRACK shift to state 13
-- On CONVERT shift to state 130
-- On CONTEXT shift to state 136
-- On CONGRUENCE shift to state 138
-- On BANG shift to state 19
-- On ABSTRACT shift to state 144
-- On tt_name shift to state 20
-- On substitution_term_ shift to state 147
-- On substitution_term shift to state 148
-- On simple_term_ shift to state 21
-- On prefix_term_ shift to state 134
-- On module_path shift to state 24
-- On module_name shift to state 45
-- On mark_location(substitution_term_) shift to state 135
-- On mark_location(binop_term_) shift to state 171
-- On mark_location(app_term_) shift to state 152
-- On binop_term_ shift to state 175
-- On binop_term shift to state 196
-- On app_term_ shift to state 179
-- On app_term shift to state 180
-- On any_name shift to state 47

State 196:
binop_term_ -> binop_term . INFIXCONS binop_term [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQ EOF END COMMA COLONGT BY BAR ARROW AND ]
binop_term_ -> binop_term . EQ binop_term [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQ EOF END COMMA COLONGT BY BAR ARROW AND ]
binop_term_ -> binop_term . INFIXOP0 binop_term [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQ EOF END COMMA COLONGT BY BAR ARROW AND ]
binop_term_ -> binop_term . INFIXOP1 binop_term [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQ EOF END COMMA COLONGT BY BAR ARROW AND ]
binop_term_ -> binop_term . INFIXOP2 binop_term [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQ EOF END COMMA COLONGT BY BAR ARROW AND ]
binop_term_ -> binop_term INFIXOP2 binop_term . [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQ EOF END COMMA COLONGT BY BAR ARROW AND ]
binop_term_ -> binop_term . INFIXOP3 binop_term [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQ EOF END COMMA COLONGT BY BAR ARROW AND ]
binop_term_ -> binop_term . STAR binop_term [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQ EOF END COMMA COLONGT BY BAR ARROW AND ]
binop_term_ -> binop_term . INFIXOP4 binop_term [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQ EOF END COMMA COLONGT BY BAR ARROW AND ]
-- On STAR shift to state 174
-- On INFIXOP4 shift to state 177
-- On INFIXOP3 shift to state 193
-- On WITH reduce production binop_term_ -> binop_term INFIXOP2 binop_term
-- On VERBOSITY reduce production binop_term_ -> binop_term INFIXOP2 binop_term
-- On TRY reduce production binop_term_ -> binop_term INFIXOP2 binop_term
-- On SEMISEMI reduce production binop_term_ -> binop_term INFIXOP2 binop_term
-- On SEMI reduce production binop_term_ -> binop_term INFIXOP2 binop_term
-- On RULE reduce production binop_term_ -> binop_term INFIXOP2 binop_term
-- On RPAREN reduce production binop_term_ -> binop_term INFIXOP2 binop_term
-- On REQUIRE reduce production binop_term_ -> binop_term INFIXOP2 binop_term
-- On RBRACK reduce production binop_term_ -> binop_term INFIXOP2 binop_term
-- On RBRACE reduce production binop_term_ -> binop_term INFIXOP2 binop_term
-- On OPERATION reduce production binop_term_ -> binop_term INFIXOP2 binop_term
-- On OPEN reduce production binop_term_ -> binop_term INFIXOP2 binop_term
-- On MODULE reduce production binop_term_ -> binop_term INFIXOP2 binop_term
-- On MLTYPE reduce production binop_term_ -> binop_term INFIXOP2 binop_term
-- On LET reduce production binop_term_ -> binop_term INFIXOP2 binop_term
-- On INFIXOP2 reduce production binop_term_ -> binop_term INFIXOP2 binop_term
-- On INFIXOP1 reduce production binop_term_ -> binop_term INFIXOP2 binop_term
-- On INFIXOP0 reduce production binop_term_ -> binop_term INFIXOP2 binop_term
-- On INFIXCONS reduce production binop_term_ -> binop_term INFIXOP2 binop_term
-- On INCLUDE reduce production binop_term_ -> binop_term INFIXOP2 binop_term
-- On IN reduce production binop_term_ -> binop_term INFIXOP2 binop_term
-- On EXTERNAL reduce production binop_term_ -> binop_term INFIXOP2 binop_term
-- On EXCEPTION reduce production binop_term_ -> binop_term INFIXOP2 binop_term
-- On EQ reduce production binop_term_ -> binop_term INFIXOP2 binop_term
-- On EOF reduce production binop_term_ -> binop_term INFIXOP2 binop_term
-- On END reduce production binop_term_ -> binop_term INFIXOP2 binop_term
-- On COMMA reduce production binop_term_ -> binop_term INFIXOP2 binop_term
-- On COLONGT reduce production binop_term_ -> binop_term INFIXOP2 binop_term
-- On BY reduce production binop_term_ -> binop_term INFIXOP2 binop_term
-- On BAR reduce production binop_term_ -> binop_term INFIXOP2 binop_term
-- On ARROW reduce production binop_term_ -> binop_term INFIXOP2 binop_term
-- On AND reduce production binop_term_ -> binop_term INFIXOP2 binop_term

State 197:
binop_term_ -> binop_term INFIXOP1 . binop_term [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQ EOF END COMMA COLONGT BY BAR ARROW AND ]
-- On REF shift to state 4
-- On RAISE shift to state 12
-- On QUOTED_STRING shift to state 5
-- On QQMARK shift to state 15
-- On PREFIXOP shift to state 6
-- On OCCURS shift to state 18
-- On NATURAL shift to state 7
-- On NAME shift to state 8
-- On LPAREN shift to state 9
-- On LBRACK shift to state 13
-- On CONVERT shift to state 130
-- On CONTEXT shift to state 136
-- On CONGRUENCE shift to state 138
-- On BANG shift to state 19
-- On ABSTRACT shift to state 144
-- On tt_name shift to state 20
-- On substitution_term_ shift to state 147
-- On substitution_term shift to state 148
-- On simple_term_ shift to state 21
-- On prefix_term_ shift to state 134
-- On module_path shift to state 24
-- On module_name shift to state 45
-- On mark_location(substitution_term_) shift to state 135
-- On mark_location(binop_term_) shift to state 171
-- On mark_location(app_term_) shift to state 152
-- On binop_term_ shift to state 175
-- On binop_term shift to state 198
-- On app_term_ shift to state 179
-- On app_term shift to state 180
-- On any_name shift to state 47

State 198:
binop_term_ -> binop_term . INFIXCONS binop_term [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQ EOF END COMMA COLONGT BY BAR ARROW AND ]
binop_term_ -> binop_term . EQ binop_term [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQ EOF END COMMA COLONGT BY BAR ARROW AND ]
binop_term_ -> binop_term . INFIXOP0 binop_term [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQ EOF END COMMA COLONGT BY BAR ARROW AND ]
binop_term_ -> binop_term . INFIXOP1 binop_term [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQ EOF END COMMA COLONGT BY BAR ARROW AND ]
binop_term_ -> binop_term INFIXOP1 binop_term . [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQ EOF END COMMA COLONGT BY BAR ARROW AND ]
binop_term_ -> binop_term . INFIXOP2 binop_term [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQ EOF END COMMA COLONGT BY BAR ARROW AND ]
binop_term_ -> binop_term . INFIXOP3 binop_term [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQ EOF END COMMA COLONGT BY BAR ARROW AND ]
binop_term_ -> binop_term . STAR binop_term [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQ EOF END COMMA COLONGT BY BAR ARROW AND ]
binop_term_ -> binop_term . INFIXOP4 binop_term [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQ EOF END COMMA COLONGT BY BAR ARROW AND ]
-- On STAR shift to state 174
-- On INFIXOP4 shift to state 177
-- On INFIXOP3 shift to state 193
-- On INFIXOP2 shift to state 195
-- On INFIXOP1 shift to state 197
-- On INFIXCONS shift to state 199
-- On WITH reduce production binop_term_ -> binop_term INFIXOP1 binop_term
-- On VERBOSITY reduce production binop_term_ -> binop_term INFIXOP1 binop_term
-- On TRY reduce production binop_term_ -> binop_term INFIXOP1 binop_term
-- On SEMISEMI reduce production binop_term_ -> binop_term INFIXOP1 binop_term
-- On SEMI reduce production binop_term_ -> binop_term INFIXOP1 binop_term
-- On RULE reduce production binop_term_ -> binop_term INFIXOP1 binop_term
-- On RPAREN reduce production binop_term_ -> binop_term INFIXOP1 binop_term
-- On REQUIRE reduce production binop_term_ -> binop_term INFIXOP1 binop_term
-- On RBRACK reduce production binop_term_ -> binop_term INFIXOP1 binop_term
-- On RBRACE reduce production binop_term_ -> binop_term INFIXOP1 binop_term
-- On OPERATION reduce production binop_term_ -> binop_term INFIXOP1 binop_term
-- On OPEN reduce production binop_term_ -> binop_term INFIXOP1 binop_term
-- On MODULE reduce production binop_term_ -> binop_term INFIXOP1 binop_term
-- On MLTYPE reduce production binop_term_ -> binop_term INFIXOP1 binop_term
-- On LET reduce production binop_term_ -> binop_term INFIXOP1 binop_term
-- On INFIXOP0 reduce production binop_term_ -> binop_term INFIXOP1 binop_term
-- On INCLUDE reduce production binop_term_ -> binop_term INFIXOP1 binop_term
-- On IN reduce production binop_term_ -> binop_term INFIXOP1 binop_term
-- On EXTERNAL reduce production binop_term_ -> binop_term INFIXOP1 binop_term
-- On EXCEPTION reduce production binop_term_ -> binop_term INFIXOP1 binop_term
-- On EQ reduce production binop_term_ -> binop_term INFIXOP1 binop_term
-- On EOF reduce production binop_term_ -> binop_term INFIXOP1 binop_term
-- On END reduce production binop_term_ -> binop_term INFIXOP1 binop_term
-- On COMMA reduce production binop_term_ -> binop_term INFIXOP1 binop_term
-- On COLONGT reduce production binop_term_ -> binop_term INFIXOP1 binop_term
-- On BY reduce production binop_term_ -> binop_term INFIXOP1 binop_term
-- On BAR reduce production binop_term_ -> binop_term INFIXOP1 binop_term
-- On ARROW reduce production binop_term_ -> binop_term INFIXOP1 binop_term
-- On AND reduce production binop_term_ -> binop_term INFIXOP1 binop_term

State 199:
binop_term_ -> binop_term INFIXCONS . binop_term [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQ EOF END COMMA COLONGT BY BAR ARROW AND ]
-- On REF shift to state 4
-- On RAISE shift to state 12
-- On QUOTED_STRING shift to state 5
-- On QQMARK shift to state 15
-- On PREFIXOP shift to state 6
-- On OCCURS shift to state 18
-- On NATURAL shift to state 7
-- On NAME shift to state 8
-- On LPAREN shift to state 9
-- On LBRACK shift to state 13
-- On CONVERT shift to state 130
-- On CONTEXT shift to state 136
-- On CONGRUENCE shift to state 138
-- On BANG shift to state 19
-- On ABSTRACT shift to state 144
-- On tt_name shift to state 20
-- On substitution_term_ shift to state 147
-- On substitution_term shift to state 148
-- On simple_term_ shift to state 21
-- On prefix_term_ shift to state 134
-- On module_path shift to state 24
-- On module_name shift to state 45
-- On mark_location(substitution_term_) shift to state 135
-- On mark_location(binop_term_) shift to state 171
-- On mark_location(app_term_) shift to state 152
-- On binop_term_ shift to state 175
-- On binop_term shift to state 200
-- On app_term_ shift to state 179
-- On app_term shift to state 180
-- On any_name shift to state 47

State 200:
binop_term_ -> binop_term . INFIXCONS binop_term [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQ EOF END COMMA COLONGT BY BAR ARROW AND ]
binop_term_ -> binop_term INFIXCONS binop_term . [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQ EOF END COMMA COLONGT BY BAR ARROW AND ]
binop_term_ -> binop_term . EQ binop_term [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQ EOF END COMMA COLONGT BY BAR ARROW AND ]
binop_term_ -> binop_term . INFIXOP0 binop_term [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQ EOF END COMMA COLONGT BY BAR ARROW AND ]
binop_term_ -> binop_term . INFIXOP1 binop_term [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQ EOF END COMMA COLONGT BY BAR ARROW AND ]
binop_term_ -> binop_term . INFIXOP2 binop_term [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQ EOF END COMMA COLONGT BY BAR ARROW AND ]
binop_term_ -> binop_term . INFIXOP3 binop_term [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQ EOF END COMMA COLONGT BY BAR ARROW AND ]
binop_term_ -> binop_term . STAR binop_term [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQ EOF END COMMA COLONGT BY BAR ARROW AND ]
binop_term_ -> binop_term . INFIXOP4 binop_term [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQ EOF END COMMA COLONGT BY BAR ARROW AND ]
-- On STAR shift to state 174
-- On INFIXOP4 shift to state 177
-- On INFIXOP3 shift to state 193
-- On INFIXOP2 shift to state 195
-- On INFIXCONS shift to state 199
-- On WITH reduce production binop_term_ -> binop_term INFIXCONS binop_term
-- On VERBOSITY reduce production binop_term_ -> binop_term INFIXCONS binop_term
-- On TRY reduce production binop_term_ -> binop_term INFIXCONS binop_term
-- On SEMISEMI reduce production binop_term_ -> binop_term INFIXCONS binop_term
-- On SEMI reduce production binop_term_ -> binop_term INFIXCONS binop_term
-- On RULE reduce production binop_term_ -> binop_term INFIXCONS binop_term
-- On RPAREN reduce production binop_term_ -> binop_term INFIXCONS binop_term
-- On REQUIRE reduce production binop_term_ -> binop_term INFIXCONS binop_term
-- On RBRACK reduce production binop_term_ -> binop_term INFIXCONS binop_term
-- On RBRACE reduce production binop_term_ -> binop_term INFIXCONS binop_term
-- On OPERATION reduce production binop_term_ -> binop_term INFIXCONS binop_term
-- On OPEN reduce production binop_term_ -> binop_term INFIXCONS binop_term
-- On MODULE reduce production binop_term_ -> binop_term INFIXCONS binop_term
-- On MLTYPE reduce production binop_term_ -> binop_term INFIXCONS binop_term
-- On LET reduce production binop_term_ -> binop_term INFIXCONS binop_term
-- On INFIXOP1 reduce production binop_term_ -> binop_term INFIXCONS binop_term
-- On INFIXOP0 reduce production binop_term_ -> binop_term INFIXCONS binop_term
-- On INCLUDE reduce production binop_term_ -> binop_term INFIXCONS binop_term
-- On IN reduce production binop_term_ -> binop_term INFIXCONS binop_term
-- On EXTERNAL reduce production binop_term_ -> binop_term INFIXCONS binop_term
-- On EXCEPTION reduce production binop_term_ -> binop_term INFIXCONS binop_term
-- On EQ reduce production binop_term_ -> binop_term INFIXCONS binop_term
-- On EOF reduce production binop_term_ -> binop_term INFIXCONS binop_term
-- On END reduce production binop_term_ -> binop_term INFIXCONS binop_term
-- On COMMA reduce production binop_term_ -> binop_term INFIXCONS binop_term
-- On COLONGT reduce production binop_term_ -> binop_term INFIXCONS binop_term
-- On BY reduce production binop_term_ -> binop_term INFIXCONS binop_term
-- On BAR reduce production binop_term_ -> binop_term INFIXCONS binop_term
-- On ARROW reduce production binop_term_ -> binop_term INFIXCONS binop_term
-- On AND reduce production binop_term_ -> binop_term INFIXCONS binop_term

State 201:
binop_term_ -> binop_term INFIXOP0 . binop_term [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQ EOF END COMMA COLONGT BY BAR ARROW AND ]
-- On REF shift to state 4
-- On RAISE shift to state 12
-- On QUOTED_STRING shift to state 5
-- On QQMARK shift to state 15
-- On PREFIXOP shift to state 6
-- On OCCURS shift to state 18
-- On NATURAL shift to state 7
-- On NAME shift to state 8
-- On LPAREN shift to state 9
-- On LBRACK shift to state 13
-- On CONVERT shift to state 130
-- On CONTEXT shift to state 136
-- On CONGRUENCE shift to state 138
-- On BANG shift to state 19
-- On ABSTRACT shift to state 144
-- On tt_name shift to state 20
-- On substitution_term_ shift to state 147
-- On substitution_term shift to state 148
-- On simple_term_ shift to state 21
-- On prefix_term_ shift to state 134
-- On module_path shift to state 24
-- On module_name shift to state 45
-- On mark_location(substitution_term_) shift to state 135
-- On mark_location(binop_term_) shift to state 171
-- On mark_location(app_term_) shift to state 152
-- On binop_term_ shift to state 175
-- On binop_term shift to state 202
-- On app_term_ shift to state 179
-- On app_term shift to state 180
-- On any_name shift to state 47

State 202:
binop_term_ -> binop_term . INFIXCONS binop_term [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQ EOF END COMMA COLONGT BY BAR ARROW AND ]
binop_term_ -> binop_term . EQ binop_term [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQ EOF END COMMA COLONGT BY BAR ARROW AND ]
binop_term_ -> binop_term . INFIXOP0 binop_term [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQ EOF END COMMA COLONGT BY BAR ARROW AND ]
binop_term_ -> binop_term INFIXOP0 binop_term . [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQ EOF END COMMA COLONGT BY BAR ARROW AND ]
binop_term_ -> binop_term . INFIXOP1 binop_term [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQ EOF END COMMA COLONGT BY BAR ARROW AND ]
binop_term_ -> binop_term . INFIXOP2 binop_term [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQ EOF END COMMA COLONGT BY BAR ARROW AND ]
binop_term_ -> binop_term . INFIXOP3 binop_term [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQ EOF END COMMA COLONGT BY BAR ARROW AND ]
binop_term_ -> binop_term . STAR binop_term [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQ EOF END COMMA COLONGT BY BAR ARROW AND ]
binop_term_ -> binop_term . INFIXOP4 binop_term [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQ EOF END COMMA COLONGT BY BAR ARROW AND ]
-- On STAR shift to state 174
-- On INFIXOP4 shift to state 177
-- On INFIXOP3 shift to state 193
-- On INFIXOP2 shift to state 195
-- On INFIXOP1 shift to state 197
-- On INFIXCONS shift to state 199
-- On WITH reduce production binop_term_ -> binop_term INFIXOP0 binop_term
-- On VERBOSITY reduce production binop_term_ -> binop_term INFIXOP0 binop_term
-- On TRY reduce production binop_term_ -> binop_term INFIXOP0 binop_term
-- On SEMISEMI reduce production binop_term_ -> binop_term INFIXOP0 binop_term
-- On SEMI reduce production binop_term_ -> binop_term INFIXOP0 binop_term
-- On RULE reduce production binop_term_ -> binop_term INFIXOP0 binop_term
-- On RPAREN reduce production binop_term_ -> binop_term INFIXOP0 binop_term
-- On REQUIRE reduce production binop_term_ -> binop_term INFIXOP0 binop_term
-- On RBRACK reduce production binop_term_ -> binop_term INFIXOP0 binop_term
-- On RBRACE reduce production binop_term_ -> binop_term INFIXOP0 binop_term
-- On OPERATION reduce production binop_term_ -> binop_term INFIXOP0 binop_term
-- On OPEN reduce production binop_term_ -> binop_term INFIXOP0 binop_term
-- On MODULE reduce production binop_term_ -> binop_term INFIXOP0 binop_term
-- On MLTYPE reduce production binop_term_ -> binop_term INFIXOP0 binop_term
-- On LET reduce production binop_term_ -> binop_term INFIXOP0 binop_term
-- On INFIXOP0 reduce production binop_term_ -> binop_term INFIXOP0 binop_term
-- On INCLUDE reduce production binop_term_ -> binop_term INFIXOP0 binop_term
-- On IN reduce production binop_term_ -> binop_term INFIXOP0 binop_term
-- On EXTERNAL reduce production binop_term_ -> binop_term INFIXOP0 binop_term
-- On EXCEPTION reduce production binop_term_ -> binop_term INFIXOP0 binop_term
-- On EQ reduce production binop_term_ -> binop_term INFIXOP0 binop_term
-- On EOF reduce production binop_term_ -> binop_term INFIXOP0 binop_term
-- On END reduce production binop_term_ -> binop_term INFIXOP0 binop_term
-- On COMMA reduce production binop_term_ -> binop_term INFIXOP0 binop_term
-- On COLONGT reduce production binop_term_ -> binop_term INFIXOP0 binop_term
-- On BY reduce production binop_term_ -> binop_term INFIXOP0 binop_term
-- On BAR reduce production binop_term_ -> binop_term INFIXOP0 binop_term
-- On ARROW reduce production binop_term_ -> binop_term INFIXOP0 binop_term
-- On AND reduce production binop_term_ -> binop_term INFIXOP0 binop_term

State 203:
binop_term_ -> binop_term EQ . binop_term [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQ EOF END COMMA COLONGT BY BAR ARROW AND ]
-- On REF shift to state 4
-- On RAISE shift to state 12
-- On QUOTED_STRING shift to state 5
-- On QQMARK shift to state 15
-- On PREFIXOP shift to state 6
-- On OCCURS shift to state 18
-- On NATURAL shift to state 7
-- On NAME shift to state 8
-- On LPAREN shift to state 9
-- On LBRACK shift to state 13
-- On CONVERT shift to state 130
-- On CONTEXT shift to state 136
-- On CONGRUENCE shift to state 138
-- On BANG shift to state 19
-- On ABSTRACT shift to state 144
-- On tt_name shift to state 20
-- On substitution_term_ shift to state 147
-- On substitution_term shift to state 148
-- On simple_term_ shift to state 21
-- On prefix_term_ shift to state 134
-- On module_path shift to state 24
-- On module_name shift to state 45
-- On mark_location(substitution_term_) shift to state 135
-- On mark_location(binop_term_) shift to state 171
-- On mark_location(app_term_) shift to state 152
-- On binop_term_ shift to state 175
-- On binop_term shift to state 204
-- On app_term_ shift to state 179
-- On app_term shift to state 180
-- On any_name shift to state 47

State 204:
binop_term_ -> binop_term . INFIXCONS binop_term [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQ EOF END COMMA COLONGT BY BAR ARROW AND ]
binop_term_ -> binop_term . EQ binop_term [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQ EOF END COMMA COLONGT BY BAR ARROW AND ]
binop_term_ -> binop_term EQ binop_term . [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQ EOF END COMMA COLONGT BY BAR ARROW AND ]
binop_term_ -> binop_term . INFIXOP0 binop_term [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQ EOF END COMMA COLONGT BY BAR ARROW AND ]
binop_term_ -> binop_term . INFIXOP1 binop_term [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQ EOF END COMMA COLONGT BY BAR ARROW AND ]
binop_term_ -> binop_term . INFIXOP2 binop_term [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQ EOF END COMMA COLONGT BY BAR ARROW AND ]
binop_term_ -> binop_term . INFIXOP3 binop_term [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQ EOF END COMMA COLONGT BY BAR ARROW AND ]
binop_term_ -> binop_term . STAR binop_term [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQ EOF END COMMA COLONGT BY BAR ARROW AND ]
binop_term_ -> binop_term . INFIXOP4 binop_term [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQ EOF END COMMA COLONGT BY BAR ARROW AND ]
-- On STAR shift to state 174
-- On INFIXOP4 shift to state 177
-- On INFIXOP3 shift to state 193
-- On INFIXOP2 shift to state 195
-- On INFIXOP1 shift to state 197
-- On INFIXCONS shift to state 199
-- On WITH reduce production binop_term_ -> binop_term EQ binop_term
-- On VERBOSITY reduce production binop_term_ -> binop_term EQ binop_term
-- On TRY reduce production binop_term_ -> binop_term EQ binop_term
-- On SEMISEMI reduce production binop_term_ -> binop_term EQ binop_term
-- On SEMI reduce production binop_term_ -> binop_term EQ binop_term
-- On RULE reduce production binop_term_ -> binop_term EQ binop_term
-- On RPAREN reduce production binop_term_ -> binop_term EQ binop_term
-- On REQUIRE reduce production binop_term_ -> binop_term EQ binop_term
-- On RBRACK reduce production binop_term_ -> binop_term EQ binop_term
-- On RBRACE reduce production binop_term_ -> binop_term EQ binop_term
-- On OPERATION reduce production binop_term_ -> binop_term EQ binop_term
-- On OPEN reduce production binop_term_ -> binop_term EQ binop_term
-- On MODULE reduce production binop_term_ -> binop_term EQ binop_term
-- On MLTYPE reduce production binop_term_ -> binop_term EQ binop_term
-- On LET reduce production binop_term_ -> binop_term EQ binop_term
-- On INFIXOP0 reduce production binop_term_ -> binop_term EQ binop_term
-- On INCLUDE reduce production binop_term_ -> binop_term EQ binop_term
-- On IN reduce production binop_term_ -> binop_term EQ binop_term
-- On EXTERNAL reduce production binop_term_ -> binop_term EQ binop_term
-- On EXCEPTION reduce production binop_term_ -> binop_term EQ binop_term
-- On EQ reduce production binop_term_ -> binop_term EQ binop_term
-- On EOF reduce production binop_term_ -> binop_term EQ binop_term
-- On END reduce production binop_term_ -> binop_term EQ binop_term
-- On COMMA reduce production binop_term_ -> binop_term EQ binop_term
-- On COLONGT reduce production binop_term_ -> binop_term EQ binop_term
-- On BY reduce production binop_term_ -> binop_term EQ binop_term
-- On BAR reduce production binop_term_ -> binop_term EQ binop_term
-- On ARROW reduce production binop_term_ -> binop_term EQ binop_term
-- On AND reduce production binop_term_ -> binop_term EQ binop_term

State 205:
ty_term_ -> abstraction . binop_term [ WITH VERBOSITY TRY SEMISEMI RULE RPAREN REQUIRE RBRACE OPERATION OPEN MODULE MLTYPE LET INCLUDE IN EXTERNAL EXCEPTION EOF END COMMA COLONGT BY BAR AND ]
-- On REF shift to state 4
-- On RAISE shift to state 12
-- On QUOTED_STRING shift to state 5
-- On QQMARK shift to state 15
-- On PREFIXOP shift to state 6
-- On OCCURS shift to state 18
-- On NATURAL shift to state 7
-- On NAME shift to state 8
-- On LPAREN shift to state 9
-- On LBRACK shift to state 13
-- On CONVERT shift to state 130
-- On CONTEXT shift to state 136
-- On CONGRUENCE shift to state 138
-- On BANG shift to state 19
-- On ABSTRACT shift to state 144
-- On tt_name shift to state 20
-- On substitution_term_ shift to state 147
-- On substitution_term shift to state 148
-- On simple_term_ shift to state 21
-- On prefix_term_ shift to state 134
-- On module_path shift to state 24
-- On module_name shift to state 45
-- On mark_location(substitution_term_) shift to state 135
-- On mark_location(binop_term_) shift to state 171
-- On mark_location(app_term_) shift to state 152
-- On binop_term_ shift to state 175
-- On binop_term shift to state 206
-- On app_term_ shift to state 179
-- On app_term shift to state 180
-- On any_name shift to state 47

State 206:
binop_term_ -> binop_term . INFIXCONS binop_term [ WITH VERBOSITY TRY STAR SEMISEMI RULE RPAREN REQUIRE RBRACE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQ EOF END COMMA COLONGT BY BAR AND ]
binop_term_ -> binop_term . EQ binop_term [ WITH VERBOSITY TRY STAR SEMISEMI RULE RPAREN REQUIRE RBRACE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQ EOF END COMMA COLONGT BY BAR AND ]
binop_term_ -> binop_term . INFIXOP0 binop_term [ WITH VERBOSITY TRY STAR SEMISEMI RULE RPAREN REQUIRE RBRACE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQ EOF END COMMA COLONGT BY BAR AND ]
binop_term_ -> binop_term . INFIXOP1 binop_term [ WITH VERBOSITY TRY STAR SEMISEMI RULE RPAREN REQUIRE RBRACE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQ EOF END COMMA COLONGT BY BAR AND ]
binop_term_ -> binop_term . INFIXOP2 binop_term [ WITH VERBOSITY TRY STAR SEMISEMI RULE RPAREN REQUIRE RBRACE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQ EOF END COMMA COLONGT BY BAR AND ]
binop_term_ -> binop_term . INFIXOP3 binop_term [ WITH VERBOSITY TRY STAR SEMISEMI RULE RPAREN REQUIRE RBRACE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQ EOF END COMMA COLONGT BY BAR AND ]
binop_term_ -> binop_term . STAR binop_term [ WITH VERBOSITY TRY STAR SEMISEMI RULE RPAREN REQUIRE RBRACE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQ EOF END COMMA COLONGT BY BAR AND ]
binop_term_ -> binop_term . INFIXOP4 binop_term [ WITH VERBOSITY TRY STAR SEMISEMI RULE RPAREN REQUIRE RBRACE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQ EOF END COMMA COLONGT BY BAR AND ]
ty_term_ -> abstraction binop_term . [ WITH VERBOSITY TRY SEMISEMI RULE RPAREN REQUIRE RBRACE OPERATION OPEN MODULE MLTYPE LET INCLUDE IN EXTERNAL EXCEPTION EOF END COMMA COLONGT BY BAR AND ]
-- On STAR shift to state 174
-- On INFIXOP4 shift to state 177
-- On INFIXOP3 shift to state 193
-- On INFIXOP2 shift to state 195
-- On INFIXOP1 shift to state 197
-- On INFIXOP0 shift to state 201
-- On INFIXCONS shift to state 199
-- On EQ shift to state 203
-- On WITH reduce production ty_term_ -> abstraction binop_term
-- On VERBOSITY reduce production ty_term_ -> abstraction binop_term
-- On TRY reduce production ty_term_ -> abstraction binop_term
-- On SEMISEMI reduce production ty_term_ -> abstraction binop_term
-- On RULE reduce production ty_term_ -> abstraction binop_term
-- On RPAREN reduce production ty_term_ -> abstraction binop_term
-- On REQUIRE reduce production ty_term_ -> abstraction binop_term
-- On RBRACE reduce production ty_term_ -> abstraction binop_term
-- On OPERATION reduce production ty_term_ -> abstraction binop_term
-- On OPEN reduce production ty_term_ -> abstraction binop_term
-- On MODULE reduce production ty_term_ -> abstraction binop_term
-- On MLTYPE reduce production ty_term_ -> abstraction binop_term
-- On LET reduce production ty_term_ -> abstraction binop_term
-- On INCLUDE reduce production ty_term_ -> abstraction binop_term
-- On IN reduce production ty_term_ -> abstraction binop_term
-- On EXTERNAL reduce production ty_term_ -> abstraction binop_term
-- On EXCEPTION reduce production ty_term_ -> abstraction binop_term
-- On EOF reduce production ty_term_ -> abstraction binop_term
-- On END reduce production ty_term_ -> abstraction binop_term
-- On COMMA reduce production ty_term_ -> abstraction binop_term
-- On COLONGT reduce production ty_term_ -> abstraction binop_term
-- On BY reduce production ty_term_ -> abstraction binop_term
-- On BAR reduce production ty_term_ -> abstraction binop_term
-- On AND reduce production ty_term_ -> abstraction binop_term

State 207:
nonempty_list(anon_name(tt_name)) -> anon_name(tt_name) . [ RBRACE COLON ]
nonempty_list(anon_name(tt_name)) -> anon_name(tt_name) . nonempty_list(anon_name(tt_name)) [ RBRACE COLON ]
-- On UNDERSCORE shift to state 157
-- On NAME shift to state 158
-- On LPAREN shift to state 26
-- On tt_name shift to state 159
-- On opt_name(tt_name) shift to state 160
-- On nonempty_list(anon_name(tt_name)) shift to state 208
-- On anon_name(tt_name) shift to state 207
-- On RBRACE reduce production nonempty_list(anon_name(tt_name)) -> anon_name(tt_name)
-- On COLON reduce production nonempty_list(anon_name(tt_name)) -> anon_name(tt_name)

State 208:
nonempty_list(anon_name(tt_name)) -> anon_name(tt_name) nonempty_list(anon_name(tt_name)) . [ RBRACE COLON ]
-- On RBRACE reduce production nonempty_list(anon_name(tt_name)) -> anon_name(tt_name) nonempty_list(anon_name(tt_name))
-- On COLON reduce production nonempty_list(anon_name(tt_name)) -> anon_name(tt_name) nonempty_list(anon_name(tt_name))

State 209:
term_ -> HANDLER . handler_cases END [ WITH VERBOSITY TRY SEMISEMI RULE RPAREN REQUIRE RBRACE OPERATION OPEN MODULE MLTYPE LET INCLUDE IN EXTERNAL EXCEPTION EOF END COMMA COLONGT BY BAR AND ]
-- On VAL shift to state 210
-- On RAISE shift to state 396
-- On NAME shift to state 398
-- On BAR shift to state 399
-- On separated_nonempty_list(BAR,handler_case) shift to state 420
-- On op_name shift to state 401
-- On module_path shift to state 410
-- On module_name shift to state 45
-- On loption(separated_nonempty_list(BAR,handler_case)) shift to state 421
-- On handler_cases shift to state 422
-- On handler_case shift to state 417
-- On END reduce production loption(separated_nonempty_list(BAR,handler_case)) ->

State 210:
handler_case -> VAL . match_case [ END BAR ]
-- On UNDERSCORE shift to state 211
-- On UATOM shift to state 212
-- On QUOTED_STRING shift to state 213
-- On QQMARK shift to state 218
-- On PREFIXOP shift to state 216
-- On NAME shift to state 220
-- On LPAREN shift to state 221
-- On LBRACK shift to state 226
-- On LBRACE shift to state 227
-- On tt_name shift to state 20
-- On tt_maybe_typed_binder shift to state 233
-- On simple_pattern_ shift to state 234
-- On prefix_pattern_ shift to state 235
-- On pattern_ shift to state 236
-- On pattern shift to state 325
-- On module_path shift to state 238
-- On module_name shift to state 45
-- On ml_name shift to state 263
-- On match_case shift to state 395
-- On mark_location(pattern_) shift to state 266
-- On mark_location(binop_pattern_) shift to state 267
-- On binop_pattern_ shift to state 268
-- On binop_pattern shift to state 269
-- On app_pattern_ shift to state 276
-- On any_name shift to state 277

State 211:
simple_pattern_ -> UNDERSCORE . [ WHEN UNDERSCORE UATOM TYPE STAR SEMI RPAREN RBRACK RBRACE QUOTED_STRING QQMARK PREFIXOP NAME LPAREN LBRACK INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQEQ EQ COMMA COLONGT COLON BY AS ARROW ]
-- On WHEN reduce production simple_pattern_ -> UNDERSCORE
-- On UNDERSCORE reduce production simple_pattern_ -> UNDERSCORE
-- On UATOM reduce production simple_pattern_ -> UNDERSCORE
-- On TYPE reduce production simple_pattern_ -> UNDERSCORE
-- On STAR reduce production simple_pattern_ -> UNDERSCORE
-- On SEMI reduce production simple_pattern_ -> UNDERSCORE
-- On RPAREN reduce production simple_pattern_ -> UNDERSCORE
-- On RBRACK reduce production simple_pattern_ -> UNDERSCORE
-- On RBRACE reduce production simple_pattern_ -> UNDERSCORE
-- On QUOTED_STRING reduce production simple_pattern_ -> UNDERSCORE
-- On QQMARK reduce production simple_pattern_ -> UNDERSCORE
-- On PREFIXOP reduce production simple_pattern_ -> UNDERSCORE
-- On NAME reduce production simple_pattern_ -> UNDERSCORE
-- On LPAREN reduce production simple_pattern_ -> UNDERSCORE
-- On LBRACK reduce production simple_pattern_ -> UNDERSCORE
-- On INFIXOP4 reduce production simple_pattern_ -> UNDERSCORE
-- On INFIXOP3 reduce production simple_pattern_ -> UNDERSCORE
-- On INFIXOP2 reduce production simple_pattern_ -> UNDERSCORE
-- On INFIXOP1 reduce production simple_pattern_ -> UNDERSCORE
-- On INFIXOP0 reduce production simple_pattern_ -> UNDERSCORE
-- On INFIXCONS reduce production simple_pattern_ -> UNDERSCORE
-- On EQEQ reduce production simple_pattern_ -> UNDERSCORE
-- On EQ reduce production simple_pattern_ -> UNDERSCORE
-- On COMMA reduce production simple_pattern_ -> UNDERSCORE
-- On COLONGT reduce production simple_pattern_ -> UNDERSCORE
-- On COLON reduce production simple_pattern_ -> UNDERSCORE
-- On BY reduce production simple_pattern_ -> UNDERSCORE
-- On AS reduce production simple_pattern_ -> UNDERSCORE
-- On ARROW reduce production simple_pattern_ -> UNDERSCORE

State 212:
prefix_pattern_ -> UATOM . prefix_pattern [ WHEN UNDERSCORE UATOM TYPE STAR SEMI RPAREN RBRACK RBRACE QUOTED_STRING QQMARK PREFIXOP NAME LPAREN LBRACK INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQEQ EQ COMMA COLONGT COLON BY AS ARROW ]
-- On UNDERSCORE shift to state 211
-- On UATOM shift to state 212
-- On QUOTED_STRING shift to state 213
-- On QQMARK shift to state 214
-- On PREFIXOP shift to state 216
-- On NAME shift to state 57
-- On LPAREN shift to state 217
-- On LBRACK shift to state 226
-- On simple_pattern_ shift to state 234
-- On prefix_pattern_ shift to state 258
-- On prefix_pattern shift to state 324
-- On module_path shift to state 261
-- On module_name shift to state 45
-- On ml_name shift to state 263
-- On mark_location(prefix_pattern_) shift to state 264

State 213:
simple_pattern_ -> QUOTED_STRING . [ WHEN UNDERSCORE UATOM TYPE STAR SEMI RPAREN RBRACK RBRACE QUOTED_STRING QQMARK PREFIXOP NAME LPAREN LBRACK INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQEQ EQ COMMA COLONGT COLON BY AS ARROW ]
-- On WHEN reduce production simple_pattern_ -> QUOTED_STRING
-- On UNDERSCORE reduce production simple_pattern_ -> QUOTED_STRING
-- On UATOM reduce production simple_pattern_ -> QUOTED_STRING
-- On TYPE reduce production simple_pattern_ -> QUOTED_STRING
-- On STAR reduce production simple_pattern_ -> QUOTED_STRING
-- On SEMI reduce production simple_pattern_ -> QUOTED_STRING
-- On RPAREN reduce production simple_pattern_ -> QUOTED_STRING
-- On RBRACK reduce production simple_pattern_ -> QUOTED_STRING
-- On RBRACE reduce production simple_pattern_ -> QUOTED_STRING
-- On QUOTED_STRING reduce production simple_pattern_ -> QUOTED_STRING
-- On QQMARK reduce production simple_pattern_ -> QUOTED_STRING
-- On PREFIXOP reduce production simple_pattern_ -> QUOTED_STRING
-- On NAME reduce production simple_pattern_ -> QUOTED_STRING
-- On LPAREN reduce production simple_pattern_ -> QUOTED_STRING
-- On LBRACK reduce production simple_pattern_ -> QUOTED_STRING
-- On INFIXOP4 reduce production simple_pattern_ -> QUOTED_STRING
-- On INFIXOP3 reduce production simple_pattern_ -> QUOTED_STRING
-- On INFIXOP2 reduce production simple_pattern_ -> QUOTED_STRING
-- On INFIXOP1 reduce production simple_pattern_ -> QUOTED_STRING
-- On INFIXOP0 reduce production simple_pattern_ -> QUOTED_STRING
-- On INFIXCONS reduce production simple_pattern_ -> QUOTED_STRING
-- On EQEQ reduce production simple_pattern_ -> QUOTED_STRING
-- On EQ reduce production simple_pattern_ -> QUOTED_STRING
-- On COMMA reduce production simple_pattern_ -> QUOTED_STRING
-- On COLONGT reduce production simple_pattern_ -> QUOTED_STRING
-- On COLON reduce production simple_pattern_ -> QUOTED_STRING
-- On BY reduce production simple_pattern_ -> QUOTED_STRING
-- On AS reduce production simple_pattern_ -> QUOTED_STRING
-- On ARROW reduce production simple_pattern_ -> QUOTED_STRING

State 214:
simple_pattern_ -> QQMARK . TYPE [ WHEN UNDERSCORE UATOM TYPE STAR SEMI RPAREN RBRACK RBRACE QUOTED_STRING QQMARK PREFIXOP NAME LPAREN LBRACK INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQEQ EQ COMMA COLONGT COLON BY AS ARROW ]
-- On TYPE shift to state 215

State 215:
simple_pattern_ -> QQMARK TYPE . [ WHEN UNDERSCORE UATOM TYPE STAR SEMI RPAREN RBRACK RBRACE QUOTED_STRING QQMARK PREFIXOP NAME LPAREN LBRACK INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQEQ EQ COMMA COLONGT COLON BY AS ARROW ]
-- On WHEN reduce production simple_pattern_ -> QQMARK TYPE
-- On UNDERSCORE reduce production simple_pattern_ -> QQMARK TYPE
-- On UATOM reduce production simple_pattern_ -> QQMARK TYPE
-- On TYPE reduce production simple_pattern_ -> QQMARK TYPE
-- On STAR reduce production simple_pattern_ -> QQMARK TYPE
-- On SEMI reduce production simple_pattern_ -> QQMARK TYPE
-- On RPAREN reduce production simple_pattern_ -> QQMARK TYPE
-- On RBRACK reduce production simple_pattern_ -> QQMARK TYPE
-- On RBRACE reduce production simple_pattern_ -> QQMARK TYPE
-- On QUOTED_STRING reduce production simple_pattern_ -> QQMARK TYPE
-- On QQMARK reduce production simple_pattern_ -> QQMARK TYPE
-- On PREFIXOP reduce production simple_pattern_ -> QQMARK TYPE
-- On NAME reduce production simple_pattern_ -> QQMARK TYPE
-- On LPAREN reduce production simple_pattern_ -> QQMARK TYPE
-- On LBRACK reduce production simple_pattern_ -> QQMARK TYPE
-- On INFIXOP4 reduce production simple_pattern_ -> QQMARK TYPE
-- On INFIXOP3 reduce production simple_pattern_ -> QQMARK TYPE
-- On INFIXOP2 reduce production simple_pattern_ -> QQMARK TYPE
-- On INFIXOP1 reduce production simple_pattern_ -> QQMARK TYPE
-- On INFIXOP0 reduce production simple_pattern_ -> QQMARK TYPE
-- On INFIXCONS reduce production simple_pattern_ -> QQMARK TYPE
-- On EQEQ reduce production simple_pattern_ -> QQMARK TYPE
-- On EQ reduce production simple_pattern_ -> QQMARK TYPE
-- On COMMA reduce production simple_pattern_ -> QQMARK TYPE
-- On COLONGT reduce production simple_pattern_ -> QQMARK TYPE
-- On COLON reduce production simple_pattern_ -> QQMARK TYPE
-- On BY reduce production simple_pattern_ -> QQMARK TYPE
-- On AS reduce production simple_pattern_ -> QQMARK TYPE
-- On ARROW reduce production simple_pattern_ -> QQMARK TYPE

State 216:
prefix_pattern_ -> PREFIXOP . prefix_pattern [ WHEN UNDERSCORE UATOM TYPE STAR SEMI RPAREN RBRACK RBRACE QUOTED_STRING QQMARK PREFIXOP NAME LPAREN LBRACK INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQEQ EQ COMMA COLONGT COLON BY AS ARROW ]
-- On UNDERSCORE shift to state 211
-- On UATOM shift to state 212
-- On QUOTED_STRING shift to state 213
-- On QQMARK shift to state 214
-- On PREFIXOP shift to state 216
-- On NAME shift to state 57
-- On LPAREN shift to state 217
-- On LBRACK shift to state 226
-- On simple_pattern_ shift to state 234
-- On prefix_pattern_ shift to state 258
-- On prefix_pattern shift to state 315
-- On module_path shift to state 261
-- On module_name shift to state 45
-- On ml_name shift to state 263
-- On mark_location(prefix_pattern_) shift to state 264

State 217:
ml_name -> LPAREN . INFIXCONS RPAREN [ WHEN UNDERSCORE UATOM TYPE STAR SEMI RPAREN RBRACK RBRACE QUOTED_STRING QQMARK PREFIXOP NAME LPAREN LBRACK INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQEQ EQ COMMA COLONGT COLON BY AS ARROW ]
ml_name -> LPAREN . EQ RPAREN [ WHEN UNDERSCORE UATOM TYPE STAR SEMI RPAREN RBRACK RBRACE QUOTED_STRING QQMARK PREFIXOP NAME LPAREN LBRACK INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQEQ EQ COMMA COLONGT COLON BY AS ARROW ]
ml_name -> LPAREN . INFIXOP0 RPAREN [ WHEN UNDERSCORE UATOM TYPE STAR SEMI RPAREN RBRACK RBRACE QUOTED_STRING QQMARK PREFIXOP NAME LPAREN LBRACK INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQEQ EQ COMMA COLONGT COLON BY AS ARROW ]
ml_name -> LPAREN . INFIXOP1 RPAREN [ WHEN UNDERSCORE UATOM TYPE STAR SEMI RPAREN RBRACK RBRACE QUOTED_STRING QQMARK PREFIXOP NAME LPAREN LBRACK INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQEQ EQ COMMA COLONGT COLON BY AS ARROW ]
ml_name -> LPAREN . INFIXOP2 RPAREN [ WHEN UNDERSCORE UATOM TYPE STAR SEMI RPAREN RBRACK RBRACE QUOTED_STRING QQMARK PREFIXOP NAME LPAREN LBRACK INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQEQ EQ COMMA COLONGT COLON BY AS ARROW ]
ml_name -> LPAREN . INFIXOP3 RPAREN [ WHEN UNDERSCORE UATOM TYPE STAR SEMI RPAREN RBRACK RBRACE QUOTED_STRING QQMARK PREFIXOP NAME LPAREN LBRACK INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQEQ EQ COMMA COLONGT COLON BY AS ARROW ]
ml_name -> LPAREN . STAR RPAREN [ WHEN UNDERSCORE UATOM TYPE STAR SEMI RPAREN RBRACK RBRACE QUOTED_STRING QQMARK PREFIXOP NAME LPAREN LBRACK INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQEQ EQ COMMA COLONGT COLON BY AS ARROW ]
ml_name -> LPAREN . INFIXOP4 RPAREN [ WHEN UNDERSCORE UATOM TYPE STAR SEMI RPAREN RBRACK RBRACE QUOTED_STRING QQMARK PREFIXOP NAME LPAREN LBRACK INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQEQ EQ COMMA COLONGT COLON BY AS ARROW ]
ml_name -> LPAREN . PREFIXOP RPAREN [ WHEN UNDERSCORE UATOM TYPE STAR SEMI RPAREN RBRACK RBRACE QUOTED_STRING QQMARK PREFIXOP NAME LPAREN LBRACK INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQEQ EQ COMMA COLONGT COLON BY AS ARROW ]
simple_pattern_ -> LPAREN . loption(separated_nonempty_list(COMMA,pattern)) RPAREN [ WHEN UNDERSCORE UATOM TYPE STAR SEMI RPAREN RBRACK RBRACE QUOTED_STRING QQMARK PREFIXOP NAME LPAREN LBRACK INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQEQ EQ COMMA COLONGT COLON BY AS ARROW ]
-- On UNDERSCORE shift to state 211
-- On UATOM shift to state 212
-- On STAR shift to state 64
-- On QUOTED_STRING shift to state 213
-- On QQMARK shift to state 218
-- On PREFIXOP shift to state 323
-- On NAME shift to state 220
-- On LPAREN shift to state 221
-- On LBRACK shift to state 226
-- On LBRACE shift to state 227
-- On INFIXOP4 shift to state 68
-- On INFIXOP3 shift to state 70
-- On INFIXOP2 shift to state 72
-- On INFIXOP1 shift to state 74
-- On INFIXOP0 shift to state 76
-- On INFIXCONS shift to state 78
-- On EQ shift to state 80
-- On tt_name shift to state 20
-- On tt_maybe_typed_binder shift to state 233
-- On simple_pattern_ shift to state 234
-- On separated_nonempty_list(COMMA,pattern) shift to state 316
-- On prefix_pattern_ shift to state 235
-- On pattern_ shift to state 236
-- On pattern shift to state 317
-- On module_path shift to state 238
-- On module_name shift to state 45
-- On ml_name shift to state 263
-- On mark_location(pattern_) shift to state 266
-- On mark_location(binop_pattern_) shift to state 267
-- On loption(separated_nonempty_list(COMMA,pattern)) shift to state 320
-- On binop_pattern_ shift to state 268
-- On binop_pattern shift to state 269
-- On app_pattern_ shift to state 276
-- On any_name shift to state 277
-- On RPAREN reduce production loption(separated_nonempty_list(COMMA,pattern)) ->

State 218:
pattern_ -> QQMARK . COLON binop_pattern [ WHEN SEMI RPAREN RBRACK RBRACE COMMA ARROW ]
simple_pattern_ -> QQMARK . TYPE [ WHEN TYPE STAR SEMI RPAREN RBRACK RBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQEQ EQ COMMA COLONGT COLON BY AS ARROW ]
-- On TYPE shift to state 215
-- On COLON shift to state 219

State 219:
pattern_ -> QQMARK COLON . binop_pattern [ WHEN SEMI RPAREN RBRACK RBRACE COMMA ARROW ]
-- On UNDERSCORE shift to state 211
-- On UATOM shift to state 212
-- On QUOTED_STRING shift to state 213
-- On QQMARK shift to state 214
-- On PREFIXOP shift to state 216
-- On NAME shift to state 220
-- On LPAREN shift to state 221
-- On LBRACK shift to state 226
-- On tt_name shift to state 20
-- On simple_pattern_ shift to state 234
-- On prefix_pattern_ shift to state 235
-- On module_path shift to state 238
-- On module_name shift to state 45
-- On ml_name shift to state 263
-- On mark_location(binop_pattern_) shift to state 267
-- On binop_pattern_ shift to state 272
-- On binop_pattern shift to state 322
-- On app_pattern_ shift to state 276
-- On any_name shift to state 277

State 220:
ml_name -> NAME . [ WHEN TYPE STAR SEMI RPAREN RBRACK RBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQEQ EQ COMMA COLONGT COLON BY AS ARROW ]
module_name -> NAME . [ PERIOD ]
tt_name -> NAME . [ UNDERSCORE UATOM QUOTED_STRING QQMARK PREFIXOP NAME LPAREN LBRACK ]
-- On WHEN reduce production ml_name -> NAME
-- On UNDERSCORE reduce production tt_name -> NAME
-- On UATOM reduce production tt_name -> NAME
-- On TYPE reduce production ml_name -> NAME
-- On STAR reduce production ml_name -> NAME
-- On SEMI reduce production ml_name -> NAME
-- On RPAREN reduce production ml_name -> NAME
-- On RBRACK reduce production ml_name -> NAME
-- On RBRACE reduce production ml_name -> NAME
-- On QUOTED_STRING reduce production tt_name -> NAME
-- On QQMARK reduce production tt_name -> NAME
-- On PREFIXOP reduce production tt_name -> NAME
-- On PERIOD reduce production module_name -> NAME
-- On NAME reduce production tt_name -> NAME
-- On LPAREN reduce production tt_name -> NAME
-- On LBRACK reduce production tt_name -> NAME
-- On INFIXOP4 reduce production ml_name -> NAME
-- On INFIXOP3 reduce production ml_name -> NAME
-- On INFIXOP2 reduce production ml_name -> NAME
-- On INFIXOP1 reduce production ml_name -> NAME
-- On INFIXOP0 reduce production ml_name -> NAME
-- On INFIXCONS reduce production ml_name -> NAME
-- On EQEQ reduce production ml_name -> NAME
-- On EQ reduce production ml_name -> NAME
-- On COMMA reduce production ml_name -> NAME
-- On COLONGT reduce production ml_name -> NAME
-- On COLON reduce production ml_name -> NAME
-- On BY reduce production ml_name -> NAME
-- On AS reduce production ml_name -> NAME
-- On ARROW reduce production ml_name -> NAME

State 221:
ml_name -> LPAREN . INFIXCONS RPAREN [ WHEN TYPE STAR SEMI RPAREN RBRACK RBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQEQ EQ COMMA COLONGT COLON BY AS ARROW ]
ml_name -> LPAREN . EQ RPAREN [ WHEN TYPE STAR SEMI RPAREN RBRACK RBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQEQ EQ COMMA COLONGT COLON BY AS ARROW ]
ml_name -> LPAREN . INFIXOP0 RPAREN [ WHEN TYPE STAR SEMI RPAREN RBRACK RBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQEQ EQ COMMA COLONGT COLON BY AS ARROW ]
ml_name -> LPAREN . INFIXOP1 RPAREN [ WHEN TYPE STAR SEMI RPAREN RBRACK RBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQEQ EQ COMMA COLONGT COLON BY AS ARROW ]
ml_name -> LPAREN . INFIXOP2 RPAREN [ WHEN TYPE STAR SEMI RPAREN RBRACK RBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQEQ EQ COMMA COLONGT COLON BY AS ARROW ]
ml_name -> LPAREN . INFIXOP3 RPAREN [ WHEN TYPE STAR SEMI RPAREN RBRACK RBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQEQ EQ COMMA COLONGT COLON BY AS ARROW ]
ml_name -> LPAREN . STAR RPAREN [ WHEN TYPE STAR SEMI RPAREN RBRACK RBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQEQ EQ COMMA COLONGT COLON BY AS ARROW ]
ml_name -> LPAREN . INFIXOP4 RPAREN [ WHEN TYPE STAR SEMI RPAREN RBRACK RBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQEQ EQ COMMA COLONGT COLON BY AS ARROW ]
ml_name -> LPAREN . PREFIXOP RPAREN [ WHEN TYPE STAR SEMI RPAREN RBRACK RBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQEQ EQ COMMA COLONGT COLON BY AS ARROW ]
simple_pattern_ -> LPAREN . loption(separated_nonempty_list(COMMA,pattern)) RPAREN [ WHEN TYPE STAR SEMI RPAREN RBRACK RBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQEQ EQ COMMA COLONGT COLON BY AS ARROW ]
tt_name -> LPAREN . INFIXCONS RPAREN [ UNDERSCORE UATOM QUOTED_STRING QQMARK PREFIXOP NAME LPAREN LBRACK ]
tt_name -> LPAREN . EQ RPAREN [ UNDERSCORE UATOM QUOTED_STRING QQMARK PREFIXOP NAME LPAREN LBRACK ]
tt_name -> LPAREN . INFIXOP0 RPAREN [ UNDERSCORE UATOM QUOTED_STRING QQMARK PREFIXOP NAME LPAREN LBRACK ]
tt_name -> LPAREN . INFIXOP1 RPAREN [ UNDERSCORE UATOM QUOTED_STRING QQMARK PREFIXOP NAME LPAREN LBRACK ]
tt_name -> LPAREN . INFIXOP2 RPAREN [ UNDERSCORE UATOM QUOTED_STRING QQMARK PREFIXOP NAME LPAREN LBRACK ]
tt_name -> LPAREN . INFIXOP3 RPAREN [ UNDERSCORE UATOM QUOTED_STRING QQMARK PREFIXOP NAME LPAREN LBRACK ]
tt_name -> LPAREN . STAR RPAREN [ UNDERSCORE UATOM QUOTED_STRING QQMARK PREFIXOP NAME LPAREN LBRACK ]
tt_name -> LPAREN . INFIXOP4 RPAREN [ UNDERSCORE UATOM QUOTED_STRING QQMARK PREFIXOP NAME LPAREN LBRACK ]
tt_name -> LPAREN . PREFIXOP RPAREN [ UNDERSCORE UATOM QUOTED_STRING QQMARK PREFIXOP NAME LPAREN LBRACK ]
-- On UNDERSCORE shift to state 211
-- On UATOM shift to state 212
-- On STAR shift to state 222
-- On QUOTED_STRING shift to state 213
-- On QQMARK shift to state 218
-- On PREFIXOP shift to state 224
-- On NAME shift to state 220
-- On LPAREN shift to state 221
-- On LBRACK shift to state 226
-- On LBRACE shift to state 227
-- On INFIXOP4 shift to state 242
-- On INFIXOP3 shift to state 244
-- On INFIXOP2 shift to state 246
-- On INFIXOP1 shift to state 248
-- On INFIXOP0 shift to state 250
-- On INFIXCONS shift to state 252
-- On EQ shift to state 254
-- On tt_name shift to state 20
-- On tt_maybe_typed_binder shift to state 233
-- On simple_pattern_ shift to state 234
-- On separated_nonempty_list(COMMA,pattern) shift to state 316
-- On prefix_pattern_ shift to state 235
-- On pattern_ shift to state 236
-- On pattern shift to state 317
-- On module_path shift to state 238
-- On module_name shift to state 45
-- On ml_name shift to state 263
-- On mark_location(pattern_) shift to state 266
-- On mark_location(binop_pattern_) shift to state 267
-- On loption(separated_nonempty_list(COMMA,pattern)) shift to state 320
-- On binop_pattern_ shift to state 268
-- On binop_pattern shift to state 269
-- On app_pattern_ shift to state 276
-- On any_name shift to state 277
-- On RPAREN reduce production loption(separated_nonempty_list(COMMA,pattern)) ->

State 222:
ml_name -> LPAREN STAR . RPAREN [ WHEN TYPE STAR SEMI RPAREN RBRACK RBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQEQ EQ COMMA COLONGT COLON BY AS ARROW ]
tt_name -> LPAREN STAR . RPAREN [ UNDERSCORE UATOM QUOTED_STRING QQMARK PREFIXOP NAME LPAREN LBRACK ]
-- On RPAREN shift to state 223

State 223:
ml_name -> LPAREN STAR RPAREN . [ WHEN TYPE STAR SEMI RPAREN RBRACK RBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQEQ EQ COMMA COLONGT COLON BY AS ARROW ]
tt_name -> LPAREN STAR RPAREN . [ UNDERSCORE UATOM QUOTED_STRING QQMARK PREFIXOP NAME LPAREN LBRACK ]
-- On WHEN reduce production ml_name -> LPAREN STAR RPAREN
-- On UNDERSCORE reduce production tt_name -> LPAREN STAR RPAREN
-- On UATOM reduce production tt_name -> LPAREN STAR RPAREN
-- On TYPE reduce production ml_name -> LPAREN STAR RPAREN
-- On STAR reduce production ml_name -> LPAREN STAR RPAREN
-- On SEMI reduce production ml_name -> LPAREN STAR RPAREN
-- On RPAREN reduce production ml_name -> LPAREN STAR RPAREN
-- On RBRACK reduce production ml_name -> LPAREN STAR RPAREN
-- On RBRACE reduce production ml_name -> LPAREN STAR RPAREN
-- On QUOTED_STRING reduce production tt_name -> LPAREN STAR RPAREN
-- On QQMARK reduce production tt_name -> LPAREN STAR RPAREN
-- On PREFIXOP reduce production tt_name -> LPAREN STAR RPAREN
-- On NAME reduce production tt_name -> LPAREN STAR RPAREN
-- On LPAREN reduce production tt_name -> LPAREN STAR RPAREN
-- On LBRACK reduce production tt_name -> LPAREN STAR RPAREN
-- On INFIXOP4 reduce production ml_name -> LPAREN STAR RPAREN
-- On INFIXOP3 reduce production ml_name -> LPAREN STAR RPAREN
-- On INFIXOP2 reduce production ml_name -> LPAREN STAR RPAREN
-- On INFIXOP1 reduce production ml_name -> LPAREN STAR RPAREN
-- On INFIXOP0 reduce production ml_name -> LPAREN STAR RPAREN
-- On INFIXCONS reduce production ml_name -> LPAREN STAR RPAREN
-- On EQEQ reduce production ml_name -> LPAREN STAR RPAREN
-- On EQ reduce production ml_name -> LPAREN STAR RPAREN
-- On COMMA reduce production ml_name -> LPAREN STAR RPAREN
-- On COLONGT reduce production ml_name -> LPAREN STAR RPAREN
-- On COLON reduce production ml_name -> LPAREN STAR RPAREN
-- On BY reduce production ml_name -> LPAREN STAR RPAREN
-- On AS reduce production ml_name -> LPAREN STAR RPAREN
-- On ARROW reduce production ml_name -> LPAREN STAR RPAREN

State 224:
ml_name -> LPAREN PREFIXOP . RPAREN [ WHEN TYPE STAR SEMI RPAREN RBRACK RBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQEQ EQ COMMA COLONGT COLON BY AS ARROW ]
prefix_pattern_ -> PREFIXOP . prefix_pattern [ TYPE STAR RPAREN INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQEQ EQ COMMA COLONGT COLON AS ]
tt_name -> LPAREN PREFIXOP . RPAREN [ UNDERSCORE UATOM QUOTED_STRING QQMARK PREFIXOP NAME LPAREN LBRACK ]
-- On UNDERSCORE shift to state 211
-- On UATOM shift to state 212
-- On RPAREN shift to state 225
-- On QUOTED_STRING shift to state 213
-- On QQMARK shift to state 214
-- On PREFIXOP shift to state 216
-- On NAME shift to state 57
-- On LPAREN shift to state 217
-- On LBRACK shift to state 226
-- On simple_pattern_ shift to state 234
-- On prefix_pattern_ shift to state 258
-- On prefix_pattern shift to state 315
-- On module_path shift to state 261
-- On module_name shift to state 45
-- On ml_name shift to state 263
-- On mark_location(prefix_pattern_) shift to state 264

State 225:
ml_name -> LPAREN PREFIXOP RPAREN . [ WHEN TYPE STAR SEMI RPAREN RBRACK RBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQEQ EQ COMMA COLONGT COLON BY AS ARROW ]
tt_name -> LPAREN PREFIXOP RPAREN . [ UNDERSCORE UATOM QUOTED_STRING QQMARK PREFIXOP NAME LPAREN LBRACK ]
-- On WHEN reduce production ml_name -> LPAREN PREFIXOP RPAREN
-- On UNDERSCORE reduce production tt_name -> LPAREN PREFIXOP RPAREN
-- On UATOM reduce production tt_name -> LPAREN PREFIXOP RPAREN
-- On TYPE reduce production ml_name -> LPAREN PREFIXOP RPAREN
-- On STAR reduce production ml_name -> LPAREN PREFIXOP RPAREN
-- On SEMI reduce production ml_name -> LPAREN PREFIXOP RPAREN
-- On RPAREN reduce production ml_name -> LPAREN PREFIXOP RPAREN
-- On RBRACK reduce production ml_name -> LPAREN PREFIXOP RPAREN
-- On RBRACE reduce production ml_name -> LPAREN PREFIXOP RPAREN
-- On QUOTED_STRING reduce production tt_name -> LPAREN PREFIXOP RPAREN
-- On QQMARK reduce production tt_name -> LPAREN PREFIXOP RPAREN
-- On PREFIXOP reduce production tt_name -> LPAREN PREFIXOP RPAREN
-- On NAME reduce production tt_name -> LPAREN PREFIXOP RPAREN
-- On LPAREN reduce production tt_name -> LPAREN PREFIXOP RPAREN
-- On LBRACK reduce production tt_name -> LPAREN PREFIXOP RPAREN
-- On INFIXOP4 reduce production ml_name -> LPAREN PREFIXOP RPAREN
-- On INFIXOP3 reduce production ml_name -> LPAREN PREFIXOP RPAREN
-- On INFIXOP2 reduce production ml_name -> LPAREN PREFIXOP RPAREN
-- On INFIXOP1 reduce production ml_name -> LPAREN PREFIXOP RPAREN
-- On INFIXOP0 reduce production ml_name -> LPAREN PREFIXOP RPAREN
-- On INFIXCONS reduce production ml_name -> LPAREN PREFIXOP RPAREN
-- On EQEQ reduce production ml_name -> LPAREN PREFIXOP RPAREN
-- On EQ reduce production ml_name -> LPAREN PREFIXOP RPAREN
-- On COMMA reduce production ml_name -> LPAREN PREFIXOP RPAREN
-- On COLONGT reduce production ml_name -> LPAREN PREFIXOP RPAREN
-- On COLON reduce production ml_name -> LPAREN PREFIXOP RPAREN
-- On BY reduce production ml_name -> LPAREN PREFIXOP RPAREN
-- On AS reduce production ml_name -> LPAREN PREFIXOP RPAREN
-- On ARROW reduce production ml_name -> LPAREN PREFIXOP RPAREN

State 226:
simple_pattern_ -> LBRACK . loption(separated_nonempty_list(SEMI,pattern)) RBRACK [ WHEN UNDERSCORE UATOM TYPE STAR SEMI RPAREN RBRACK RBRACE QUOTED_STRING QQMARK PREFIXOP NAME LPAREN LBRACK INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQEQ EQ COMMA COLONGT COLON BY AS ARROW ]
-- On UNDERSCORE shift to state 211
-- On UATOM shift to state 212
-- On QUOTED_STRING shift to state 213
-- On QQMARK shift to state 218
-- On PREFIXOP shift to state 216
-- On NAME shift to state 220
-- On LPAREN shift to state 221
-- On LBRACK shift to state 226
-- On LBRACE shift to state 227
-- On tt_name shift to state 20
-- On tt_maybe_typed_binder shift to state 233
-- On simple_pattern_ shift to state 234
-- On separated_nonempty_list(SEMI,pattern) shift to state 309
-- On prefix_pattern_ shift to state 235
-- On pattern_ shift to state 236
-- On pattern shift to state 310
-- On module_path shift to state 238
-- On module_name shift to state 45
-- On ml_name shift to state 263
-- On mark_location(pattern_) shift to state 266
-- On mark_location(binop_pattern_) shift to state 267
-- On loption(separated_nonempty_list(SEMI,pattern)) shift to state 313
-- On binop_pattern_ shift to state 268
-- On binop_pattern shift to state 269
-- On app_pattern_ shift to state 276
-- On any_name shift to state 277
-- On RBRACK reduce production loption(separated_nonempty_list(SEMI,pattern)) ->

State 227:
tt_maybe_typed_binder -> LBRACE . nonempty_list(opt_name(tt_name)) RBRACE [ UNDERSCORE UATOM QUOTED_STRING QQMARK PREFIXOP NAME LPAREN LBRACK LBRACE ]
tt_maybe_typed_binder -> LBRACE . nonempty_list(opt_name(tt_name)) COLON pattern RBRACE [ UNDERSCORE UATOM QUOTED_STRING QQMARK PREFIXOP NAME LPAREN LBRACK LBRACE ]
-- On UNDERSCORE shift to state 157
-- On NAME shift to state 158
-- On LPAREN shift to state 26
-- On tt_name shift to state 159
-- On opt_name(tt_name) shift to state 228
-- On nonempty_list(opt_name(tt_name)) shift to state 230

State 228:
nonempty_list(opt_name(tt_name)) -> opt_name(tt_name) . [ RBRACE COLON ]
nonempty_list(opt_name(tt_name)) -> opt_name(tt_name) . nonempty_list(opt_name(tt_name)) [ RBRACE COLON ]
-- On UNDERSCORE shift to state 157
-- On NAME shift to state 158
-- On LPAREN shift to state 26
-- On tt_name shift to state 159
-- On opt_name(tt_name) shift to state 228
-- On nonempty_list(opt_name(tt_name)) shift to state 229
-- On RBRACE reduce production nonempty_list(opt_name(tt_name)) -> opt_name(tt_name)
-- On COLON reduce production nonempty_list(opt_name(tt_name)) -> opt_name(tt_name)

State 229:
nonempty_list(opt_name(tt_name)) -> opt_name(tt_name) nonempty_list(opt_name(tt_name)) . [ RBRACE COLON ]
-- On RBRACE reduce production nonempty_list(opt_name(tt_name)) -> opt_name(tt_name) nonempty_list(opt_name(tt_name))
-- On COLON reduce production nonempty_list(opt_name(tt_name)) -> opt_name(tt_name) nonempty_list(opt_name(tt_name))

State 230:
tt_maybe_typed_binder -> LBRACE nonempty_list(opt_name(tt_name)) . RBRACE [ UNDERSCORE UATOM QUOTED_STRING QQMARK PREFIXOP NAME LPAREN LBRACK LBRACE ]
tt_maybe_typed_binder -> LBRACE nonempty_list(opt_name(tt_name)) . COLON pattern RBRACE [ UNDERSCORE UATOM QUOTED_STRING QQMARK PREFIXOP NAME LPAREN LBRACK LBRACE ]
-- On RBRACE shift to state 231
-- On COLON shift to state 232

State 231:
tt_maybe_typed_binder -> LBRACE nonempty_list(opt_name(tt_name)) RBRACE . [ UNDERSCORE UATOM QUOTED_STRING QQMARK PREFIXOP NAME LPAREN LBRACK LBRACE ]
-- On UNDERSCORE reduce production tt_maybe_typed_binder -> LBRACE nonempty_list(opt_name(tt_name)) RBRACE
-- On UATOM reduce production tt_maybe_typed_binder -> LBRACE nonempty_list(opt_name(tt_name)) RBRACE
-- On QUOTED_STRING reduce production tt_maybe_typed_binder -> LBRACE nonempty_list(opt_name(tt_name)) RBRACE
-- On QQMARK reduce production tt_maybe_typed_binder -> LBRACE nonempty_list(opt_name(tt_name)) RBRACE
-- On PREFIXOP reduce production tt_maybe_typed_binder -> LBRACE nonempty_list(opt_name(tt_name)) RBRACE
-- On NAME reduce production tt_maybe_typed_binder -> LBRACE nonempty_list(opt_name(tt_name)) RBRACE
-- On LPAREN reduce production tt_maybe_typed_binder -> LBRACE nonempty_list(opt_name(tt_name)) RBRACE
-- On LBRACK reduce production tt_maybe_typed_binder -> LBRACE nonempty_list(opt_name(tt_name)) RBRACE
-- On LBRACE reduce production tt_maybe_typed_binder -> LBRACE nonempty_list(opt_name(tt_name)) RBRACE

State 232:
tt_maybe_typed_binder -> LBRACE nonempty_list(opt_name(tt_name)) COLON . pattern RBRACE [ UNDERSCORE UATOM QUOTED_STRING QQMARK PREFIXOP NAME LPAREN LBRACK LBRACE ]
-- On UNDERSCORE shift to state 211
-- On UATOM shift to state 212
-- On QUOTED_STRING shift to state 213
-- On QQMARK shift to state 218
-- On PREFIXOP shift to state 216
-- On NAME shift to state 220
-- On LPAREN shift to state 221
-- On LBRACK shift to state 226
-- On LBRACE shift to state 227
-- On tt_name shift to state 20
-- On tt_maybe_typed_binder shift to state 233
-- On simple_pattern_ shift to state 234
-- On prefix_pattern_ shift to state 235
-- On pattern_ shift to state 236
-- On pattern shift to state 307
-- On module_path shift to state 238
-- On module_name shift to state 45
-- On ml_name shift to state 263
-- On mark_location(pattern_) shift to state 266
-- On mark_location(binop_pattern_) shift to state 267
-- On binop_pattern_ shift to state 268
-- On binop_pattern shift to state 269
-- On app_pattern_ shift to state 276
-- On any_name shift to state 277

State 233:
pattern_ -> tt_maybe_typed_binder . pattern [ WHEN SEMI RPAREN RBRACK RBRACE COMMA ARROW ]
-- On UNDERSCORE shift to state 211
-- On UATOM shift to state 212
-- On QUOTED_STRING shift to state 213
-- On QQMARK shift to state 218
-- On PREFIXOP shift to state 216
-- On NAME shift to state 220
-- On LPAREN shift to state 221
-- On LBRACK shift to state 226
-- On LBRACE shift to state 227
-- On tt_name shift to state 20
-- On tt_maybe_typed_binder shift to state 233
-- On simple_pattern_ shift to state 234
-- On prefix_pattern_ shift to state 235
-- On pattern_ shift to state 236
-- On pattern shift to state 237
-- On module_path shift to state 238
-- On module_name shift to state 45
-- On ml_name shift to state 263
-- On mark_location(pattern_) shift to state 266
-- On mark_location(binop_pattern_) shift to state 267
-- On binop_pattern_ shift to state 268
-- On binop_pattern shift to state 269
-- On app_pattern_ shift to state 276
-- On any_name shift to state 277

State 234:
prefix_pattern_ -> simple_pattern_ . [ WHEN UNDERSCORE UATOM TYPE STAR SEMI RPAREN RBRACK RBRACE QUOTED_STRING QQMARK PREFIXOP NAME LPAREN LBRACK INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQEQ EQ COMMA COLONGT COLON BY AS ARROW ]
-- On WHEN reduce production prefix_pattern_ -> simple_pattern_
-- On UNDERSCORE reduce production prefix_pattern_ -> simple_pattern_
-- On UATOM reduce production prefix_pattern_ -> simple_pattern_
-- On TYPE reduce production prefix_pattern_ -> simple_pattern_
-- On STAR reduce production prefix_pattern_ -> simple_pattern_
-- On SEMI reduce production prefix_pattern_ -> simple_pattern_
-- On RPAREN reduce production prefix_pattern_ -> simple_pattern_
-- On RBRACK reduce production prefix_pattern_ -> simple_pattern_
-- On RBRACE reduce production prefix_pattern_ -> simple_pattern_
-- On QUOTED_STRING reduce production prefix_pattern_ -> simple_pattern_
-- On QQMARK reduce production prefix_pattern_ -> simple_pattern_
-- On PREFIXOP reduce production prefix_pattern_ -> simple_pattern_
-- On NAME reduce production prefix_pattern_ -> simple_pattern_
-- On LPAREN reduce production prefix_pattern_ -> simple_pattern_
-- On LBRACK reduce production prefix_pattern_ -> simple_pattern_
-- On INFIXOP4 reduce production prefix_pattern_ -> simple_pattern_
-- On INFIXOP3 reduce production prefix_pattern_ -> simple_pattern_
-- On INFIXOP2 reduce production prefix_pattern_ -> simple_pattern_
-- On INFIXOP1 reduce production prefix_pattern_ -> simple_pattern_
-- On INFIXOP0 reduce production prefix_pattern_ -> simple_pattern_
-- On INFIXCONS reduce production prefix_pattern_ -> simple_pattern_
-- On EQEQ reduce production prefix_pattern_ -> simple_pattern_
-- On EQ reduce production prefix_pattern_ -> simple_pattern_
-- On COMMA reduce production prefix_pattern_ -> simple_pattern_
-- On COLONGT reduce production prefix_pattern_ -> simple_pattern_
-- On COLON reduce production prefix_pattern_ -> simple_pattern_
-- On BY reduce production prefix_pattern_ -> simple_pattern_
-- On AS reduce production prefix_pattern_ -> simple_pattern_
-- On ARROW reduce production prefix_pattern_ -> simple_pattern_

State 235:
app_pattern_ -> prefix_pattern_ . [ WHEN TYPE STAR SEMI RPAREN RBRACK RBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQEQ EQ COMMA COLONGT COLON BY AS ARROW ]
-- On WHEN reduce production app_pattern_ -> prefix_pattern_
-- On TYPE reduce production app_pattern_ -> prefix_pattern_
-- On STAR reduce production app_pattern_ -> prefix_pattern_
-- On SEMI reduce production app_pattern_ -> prefix_pattern_
-- On RPAREN reduce production app_pattern_ -> prefix_pattern_
-- On RBRACK reduce production app_pattern_ -> prefix_pattern_
-- On RBRACE reduce production app_pattern_ -> prefix_pattern_
-- On INFIXOP4 reduce production app_pattern_ -> prefix_pattern_
-- On INFIXOP3 reduce production app_pattern_ -> prefix_pattern_
-- On INFIXOP2 reduce production app_pattern_ -> prefix_pattern_
-- On INFIXOP1 reduce production app_pattern_ -> prefix_pattern_
-- On INFIXOP0 reduce production app_pattern_ -> prefix_pattern_
-- On INFIXCONS reduce production app_pattern_ -> prefix_pattern_
-- On EQEQ reduce production app_pattern_ -> prefix_pattern_
-- On EQ reduce production app_pattern_ -> prefix_pattern_
-- On COMMA reduce production app_pattern_ -> prefix_pattern_
-- On COLONGT reduce production app_pattern_ -> prefix_pattern_
-- On COLON reduce production app_pattern_ -> prefix_pattern_
-- On BY reduce production app_pattern_ -> prefix_pattern_
-- On AS reduce production app_pattern_ -> prefix_pattern_
-- On ARROW reduce production app_pattern_ -> prefix_pattern_

State 236:
mark_location(pattern_) -> pattern_ . [ WHEN SEMI RPAREN RBRACK RBRACE COMMA ARROW ]
-- On WHEN reduce production mark_location(pattern_) -> pattern_
-- On SEMI reduce production mark_location(pattern_) -> pattern_
-- On RPAREN reduce production mark_location(pattern_) -> pattern_
-- On RBRACK reduce production mark_location(pattern_) -> pattern_
-- On RBRACE reduce production mark_location(pattern_) -> pattern_
-- On COMMA reduce production mark_location(pattern_) -> pattern_
-- On ARROW reduce production mark_location(pattern_) -> pattern_

State 237:
pattern_ -> tt_maybe_typed_binder pattern . [ WHEN SEMI RPAREN RBRACK RBRACE COMMA ARROW ]
-- On WHEN reduce production pattern_ -> tt_maybe_typed_binder pattern
-- On SEMI reduce production pattern_ -> tt_maybe_typed_binder pattern
-- On RPAREN reduce production pattern_ -> tt_maybe_typed_binder pattern
-- On RBRACK reduce production pattern_ -> tt_maybe_typed_binder pattern
-- On RBRACE reduce production pattern_ -> tt_maybe_typed_binder pattern
-- On COMMA reduce production pattern_ -> tt_maybe_typed_binder pattern
-- On ARROW reduce production pattern_ -> tt_maybe_typed_binder pattern

State 238:
app_pattern_ -> module_path . PERIOD any_name nonempty_list(prefix_pattern) [ WHEN TYPE STAR SEMI RPAREN RBRACK RBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQEQ EQ COMMA COLONGT COLON BY AS ARROW ]
module_path -> module_path . PERIOD module_name [ PERIOD ]
simple_pattern_ -> module_path . PERIOD ml_name [ WHEN TYPE STAR SEMI RPAREN RBRACK RBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQEQ EQ COMMA COLONGT COLON BY AS ARROW ]
-- On PERIOD shift to state 239

State 239:
app_pattern_ -> module_path PERIOD . any_name nonempty_list(prefix_pattern) [ WHEN TYPE STAR SEMI RPAREN RBRACK RBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQEQ EQ COMMA COLONGT COLON BY AS ARROW ]
module_path -> module_path PERIOD . module_name [ PERIOD ]
simple_pattern_ -> module_path PERIOD . ml_name [ WHEN TYPE STAR SEMI RPAREN RBRACK RBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQEQ EQ COMMA COLONGT COLON BY AS ARROW ]
-- On NAME shift to state 220
-- On LPAREN shift to state 240
-- On tt_name shift to state 20
-- On module_name shift to state 43
-- On ml_name shift to state 256
-- On any_name shift to state 257

State 240:
ml_name -> LPAREN . INFIXCONS RPAREN [ WHEN TYPE STAR SEMI RPAREN RBRACK RBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQEQ EQ COMMA COLONGT COLON BY AS ARROW ]
ml_name -> LPAREN . EQ RPAREN [ WHEN TYPE STAR SEMI RPAREN RBRACK RBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQEQ EQ COMMA COLONGT COLON BY AS ARROW ]
ml_name -> LPAREN . INFIXOP0 RPAREN [ WHEN TYPE STAR SEMI RPAREN RBRACK RBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQEQ EQ COMMA COLONGT COLON BY AS ARROW ]
ml_name -> LPAREN . INFIXOP1 RPAREN [ WHEN TYPE STAR SEMI RPAREN RBRACK RBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQEQ EQ COMMA COLONGT COLON BY AS ARROW ]
ml_name -> LPAREN . INFIXOP2 RPAREN [ WHEN TYPE STAR SEMI RPAREN RBRACK RBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQEQ EQ COMMA COLONGT COLON BY AS ARROW ]
ml_name -> LPAREN . INFIXOP3 RPAREN [ WHEN TYPE STAR SEMI RPAREN RBRACK RBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQEQ EQ COMMA COLONGT COLON BY AS ARROW ]
ml_name -> LPAREN . STAR RPAREN [ WHEN TYPE STAR SEMI RPAREN RBRACK RBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQEQ EQ COMMA COLONGT COLON BY AS ARROW ]
ml_name -> LPAREN . INFIXOP4 RPAREN [ WHEN TYPE STAR SEMI RPAREN RBRACK RBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQEQ EQ COMMA COLONGT COLON BY AS ARROW ]
ml_name -> LPAREN . PREFIXOP RPAREN [ WHEN TYPE STAR SEMI RPAREN RBRACK RBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQEQ EQ COMMA COLONGT COLON BY AS ARROW ]
tt_name -> LPAREN . INFIXCONS RPAREN [ UNDERSCORE UATOM QUOTED_STRING QQMARK PREFIXOP NAME LPAREN LBRACK ]
tt_name -> LPAREN . EQ RPAREN [ UNDERSCORE UATOM QUOTED_STRING QQMARK PREFIXOP NAME LPAREN LBRACK ]
tt_name -> LPAREN . INFIXOP0 RPAREN [ UNDERSCORE UATOM QUOTED_STRING QQMARK PREFIXOP NAME LPAREN LBRACK ]
tt_name -> LPAREN . INFIXOP1 RPAREN [ UNDERSCORE UATOM QUOTED_STRING QQMARK PREFIXOP NAME LPAREN LBRACK ]
tt_name -> LPAREN . INFIXOP2 RPAREN [ UNDERSCORE UATOM QUOTED_STRING QQMARK PREFIXOP NAME LPAREN LBRACK ]
tt_name -> LPAREN . INFIXOP3 RPAREN [ UNDERSCORE UATOM QUOTED_STRING QQMARK PREFIXOP NAME LPAREN LBRACK ]
tt_name -> LPAREN . STAR RPAREN [ UNDERSCORE UATOM QUOTED_STRING QQMARK PREFIXOP NAME LPAREN LBRACK ]
tt_name -> LPAREN . INFIXOP4 RPAREN [ UNDERSCORE UATOM QUOTED_STRING QQMARK PREFIXOP NAME LPAREN LBRACK ]
tt_name -> LPAREN . PREFIXOP RPAREN [ UNDERSCORE UATOM QUOTED_STRING QQMARK PREFIXOP NAME LPAREN LBRACK ]
-- On STAR shift to state 222
-- On PREFIXOP shift to state 241
-- On INFIXOP4 shift to state 242
-- On INFIXOP3 shift to state 244
-- On INFIXOP2 shift to state 246
-- On INFIXOP1 shift to state 248
-- On INFIXOP0 shift to state 250
-- On INFIXCONS shift to state 252
-- On EQ shift to state 254

State 241:
ml_name -> LPAREN PREFIXOP . RPAREN [ WHEN TYPE STAR SEMI RPAREN RBRACK RBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQEQ EQ COMMA COLONGT COLON BY AS ARROW ]
tt_name -> LPAREN PREFIXOP . RPAREN [ UNDERSCORE UATOM QUOTED_STRING QQMARK PREFIXOP NAME LPAREN LBRACK ]
-- On RPAREN shift to state 225

State 242:
ml_name -> LPAREN INFIXOP4 . RPAREN [ WHEN TYPE STAR SEMI RPAREN RBRACK RBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQEQ EQ COMMA COLONGT COLON BY AS ARROW ]
tt_name -> LPAREN INFIXOP4 . RPAREN [ UNDERSCORE UATOM QUOTED_STRING QQMARK PREFIXOP NAME LPAREN LBRACK ]
-- On RPAREN shift to state 243

State 243:
ml_name -> LPAREN INFIXOP4 RPAREN . [ WHEN TYPE STAR SEMI RPAREN RBRACK RBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQEQ EQ COMMA COLONGT COLON BY AS ARROW ]
tt_name -> LPAREN INFIXOP4 RPAREN . [ UNDERSCORE UATOM QUOTED_STRING QQMARK PREFIXOP NAME LPAREN LBRACK ]
-- On WHEN reduce production ml_name -> LPAREN INFIXOP4 RPAREN
-- On UNDERSCORE reduce production tt_name -> LPAREN INFIXOP4 RPAREN
-- On UATOM reduce production tt_name -> LPAREN INFIXOP4 RPAREN
-- On TYPE reduce production ml_name -> LPAREN INFIXOP4 RPAREN
-- On STAR reduce production ml_name -> LPAREN INFIXOP4 RPAREN
-- On SEMI reduce production ml_name -> LPAREN INFIXOP4 RPAREN
-- On RPAREN reduce production ml_name -> LPAREN INFIXOP4 RPAREN
-- On RBRACK reduce production ml_name -> LPAREN INFIXOP4 RPAREN
-- On RBRACE reduce production ml_name -> LPAREN INFIXOP4 RPAREN
-- On QUOTED_STRING reduce production tt_name -> LPAREN INFIXOP4 RPAREN
-- On QQMARK reduce production tt_name -> LPAREN INFIXOP4 RPAREN
-- On PREFIXOP reduce production tt_name -> LPAREN INFIXOP4 RPAREN
-- On NAME reduce production tt_name -> LPAREN INFIXOP4 RPAREN
-- On LPAREN reduce production tt_name -> LPAREN INFIXOP4 RPAREN
-- On LBRACK reduce production tt_name -> LPAREN INFIXOP4 RPAREN
-- On INFIXOP4 reduce production ml_name -> LPAREN INFIXOP4 RPAREN
-- On INFIXOP3 reduce production ml_name -> LPAREN INFIXOP4 RPAREN
-- On INFIXOP2 reduce production ml_name -> LPAREN INFIXOP4 RPAREN
-- On INFIXOP1 reduce production ml_name -> LPAREN INFIXOP4 RPAREN
-- On INFIXOP0 reduce production ml_name -> LPAREN INFIXOP4 RPAREN
-- On INFIXCONS reduce production ml_name -> LPAREN INFIXOP4 RPAREN
-- On EQEQ reduce production ml_name -> LPAREN INFIXOP4 RPAREN
-- On EQ reduce production ml_name -> LPAREN INFIXOP4 RPAREN
-- On COMMA reduce production ml_name -> LPAREN INFIXOP4 RPAREN
-- On COLONGT reduce production ml_name -> LPAREN INFIXOP4 RPAREN
-- On COLON reduce production ml_name -> LPAREN INFIXOP4 RPAREN
-- On BY reduce production ml_name -> LPAREN INFIXOP4 RPAREN
-- On AS reduce production ml_name -> LPAREN INFIXOP4 RPAREN
-- On ARROW reduce production ml_name -> LPAREN INFIXOP4 RPAREN

State 244:
ml_name -> LPAREN INFIXOP3 . RPAREN [ WHEN TYPE STAR SEMI RPAREN RBRACK RBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQEQ EQ COMMA COLONGT COLON BY AS ARROW ]
tt_name -> LPAREN INFIXOP3 . RPAREN [ UNDERSCORE UATOM QUOTED_STRING QQMARK PREFIXOP NAME LPAREN LBRACK ]
-- On RPAREN shift to state 245

State 245:
ml_name -> LPAREN INFIXOP3 RPAREN . [ WHEN TYPE STAR SEMI RPAREN RBRACK RBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQEQ EQ COMMA COLONGT COLON BY AS ARROW ]
tt_name -> LPAREN INFIXOP3 RPAREN . [ UNDERSCORE UATOM QUOTED_STRING QQMARK PREFIXOP NAME LPAREN LBRACK ]
-- On WHEN reduce production ml_name -> LPAREN INFIXOP3 RPAREN
-- On UNDERSCORE reduce production tt_name -> LPAREN INFIXOP3 RPAREN
-- On UATOM reduce production tt_name -> LPAREN INFIXOP3 RPAREN
-- On TYPE reduce production ml_name -> LPAREN INFIXOP3 RPAREN
-- On STAR reduce production ml_name -> LPAREN INFIXOP3 RPAREN
-- On SEMI reduce production ml_name -> LPAREN INFIXOP3 RPAREN
-- On RPAREN reduce production ml_name -> LPAREN INFIXOP3 RPAREN
-- On RBRACK reduce production ml_name -> LPAREN INFIXOP3 RPAREN
-- On RBRACE reduce production ml_name -> LPAREN INFIXOP3 RPAREN
-- On QUOTED_STRING reduce production tt_name -> LPAREN INFIXOP3 RPAREN
-- On QQMARK reduce production tt_name -> LPAREN INFIXOP3 RPAREN
-- On PREFIXOP reduce production tt_name -> LPAREN INFIXOP3 RPAREN
-- On NAME reduce production tt_name -> LPAREN INFIXOP3 RPAREN
-- On LPAREN reduce production tt_name -> LPAREN INFIXOP3 RPAREN
-- On LBRACK reduce production tt_name -> LPAREN INFIXOP3 RPAREN
-- On INFIXOP4 reduce production ml_name -> LPAREN INFIXOP3 RPAREN
-- On INFIXOP3 reduce production ml_name -> LPAREN INFIXOP3 RPAREN
-- On INFIXOP2 reduce production ml_name -> LPAREN INFIXOP3 RPAREN
-- On INFIXOP1 reduce production ml_name -> LPAREN INFIXOP3 RPAREN
-- On INFIXOP0 reduce production ml_name -> LPAREN INFIXOP3 RPAREN
-- On INFIXCONS reduce production ml_name -> LPAREN INFIXOP3 RPAREN
-- On EQEQ reduce production ml_name -> LPAREN INFIXOP3 RPAREN
-- On EQ reduce production ml_name -> LPAREN INFIXOP3 RPAREN
-- On COMMA reduce production ml_name -> LPAREN INFIXOP3 RPAREN
-- On COLONGT reduce production ml_name -> LPAREN INFIXOP3 RPAREN
-- On COLON reduce production ml_name -> LPAREN INFIXOP3 RPAREN
-- On BY reduce production ml_name -> LPAREN INFIXOP3 RPAREN
-- On AS reduce production ml_name -> LPAREN INFIXOP3 RPAREN
-- On ARROW reduce production ml_name -> LPAREN INFIXOP3 RPAREN

State 246:
ml_name -> LPAREN INFIXOP2 . RPAREN [ WHEN TYPE STAR SEMI RPAREN RBRACK RBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQEQ EQ COMMA COLONGT COLON BY AS ARROW ]
tt_name -> LPAREN INFIXOP2 . RPAREN [ UNDERSCORE UATOM QUOTED_STRING QQMARK PREFIXOP NAME LPAREN LBRACK ]
-- On RPAREN shift to state 247

State 247:
ml_name -> LPAREN INFIXOP2 RPAREN . [ WHEN TYPE STAR SEMI RPAREN RBRACK RBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQEQ EQ COMMA COLONGT COLON BY AS ARROW ]
tt_name -> LPAREN INFIXOP2 RPAREN . [ UNDERSCORE UATOM QUOTED_STRING QQMARK PREFIXOP NAME LPAREN LBRACK ]
-- On WHEN reduce production ml_name -> LPAREN INFIXOP2 RPAREN
-- On UNDERSCORE reduce production tt_name -> LPAREN INFIXOP2 RPAREN
-- On UATOM reduce production tt_name -> LPAREN INFIXOP2 RPAREN
-- On TYPE reduce production ml_name -> LPAREN INFIXOP2 RPAREN
-- On STAR reduce production ml_name -> LPAREN INFIXOP2 RPAREN
-- On SEMI reduce production ml_name -> LPAREN INFIXOP2 RPAREN
-- On RPAREN reduce production ml_name -> LPAREN INFIXOP2 RPAREN
-- On RBRACK reduce production ml_name -> LPAREN INFIXOP2 RPAREN
-- On RBRACE reduce production ml_name -> LPAREN INFIXOP2 RPAREN
-- On QUOTED_STRING reduce production tt_name -> LPAREN INFIXOP2 RPAREN
-- On QQMARK reduce production tt_name -> LPAREN INFIXOP2 RPAREN
-- On PREFIXOP reduce production tt_name -> LPAREN INFIXOP2 RPAREN
-- On NAME reduce production tt_name -> LPAREN INFIXOP2 RPAREN
-- On LPAREN reduce production tt_name -> LPAREN INFIXOP2 RPAREN
-- On LBRACK reduce production tt_name -> LPAREN INFIXOP2 RPAREN
-- On INFIXOP4 reduce production ml_name -> LPAREN INFIXOP2 RPAREN
-- On INFIXOP3 reduce production ml_name -> LPAREN INFIXOP2 RPAREN
-- On INFIXOP2 reduce production ml_name -> LPAREN INFIXOP2 RPAREN
-- On INFIXOP1 reduce production ml_name -> LPAREN INFIXOP2 RPAREN
-- On INFIXOP0 reduce production ml_name -> LPAREN INFIXOP2 RPAREN
-- On INFIXCONS reduce production ml_name -> LPAREN INFIXOP2 RPAREN
-- On EQEQ reduce production ml_name -> LPAREN INFIXOP2 RPAREN
-- On EQ reduce production ml_name -> LPAREN INFIXOP2 RPAREN
-- On COMMA reduce production ml_name -> LPAREN INFIXOP2 RPAREN
-- On COLONGT reduce production ml_name -> LPAREN INFIXOP2 RPAREN
-- On COLON reduce production ml_name -> LPAREN INFIXOP2 RPAREN
-- On BY reduce production ml_name -> LPAREN INFIXOP2 RPAREN
-- On AS reduce production ml_name -> LPAREN INFIXOP2 RPAREN
-- On ARROW reduce production ml_name -> LPAREN INFIXOP2 RPAREN

State 248:
ml_name -> LPAREN INFIXOP1 . RPAREN [ WHEN TYPE STAR SEMI RPAREN RBRACK RBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQEQ EQ COMMA COLONGT COLON BY AS ARROW ]
tt_name -> LPAREN INFIXOP1 . RPAREN [ UNDERSCORE UATOM QUOTED_STRING QQMARK PREFIXOP NAME LPAREN LBRACK ]
-- On RPAREN shift to state 249

State 249:
ml_name -> LPAREN INFIXOP1 RPAREN . [ WHEN TYPE STAR SEMI RPAREN RBRACK RBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQEQ EQ COMMA COLONGT COLON BY AS ARROW ]
tt_name -> LPAREN INFIXOP1 RPAREN . [ UNDERSCORE UATOM QUOTED_STRING QQMARK PREFIXOP NAME LPAREN LBRACK ]
-- On WHEN reduce production ml_name -> LPAREN INFIXOP1 RPAREN
-- On UNDERSCORE reduce production tt_name -> LPAREN INFIXOP1 RPAREN
-- On UATOM reduce production tt_name -> LPAREN INFIXOP1 RPAREN
-- On TYPE reduce production ml_name -> LPAREN INFIXOP1 RPAREN
-- On STAR reduce production ml_name -> LPAREN INFIXOP1 RPAREN
-- On SEMI reduce production ml_name -> LPAREN INFIXOP1 RPAREN
-- On RPAREN reduce production ml_name -> LPAREN INFIXOP1 RPAREN
-- On RBRACK reduce production ml_name -> LPAREN INFIXOP1 RPAREN
-- On RBRACE reduce production ml_name -> LPAREN INFIXOP1 RPAREN
-- On QUOTED_STRING reduce production tt_name -> LPAREN INFIXOP1 RPAREN
-- On QQMARK reduce production tt_name -> LPAREN INFIXOP1 RPAREN
-- On PREFIXOP reduce production tt_name -> LPAREN INFIXOP1 RPAREN
-- On NAME reduce production tt_name -> LPAREN INFIXOP1 RPAREN
-- On LPAREN reduce production tt_name -> LPAREN INFIXOP1 RPAREN
-- On LBRACK reduce production tt_name -> LPAREN INFIXOP1 RPAREN
-- On INFIXOP4 reduce production ml_name -> LPAREN INFIXOP1 RPAREN
-- On INFIXOP3 reduce production ml_name -> LPAREN INFIXOP1 RPAREN
-- On INFIXOP2 reduce production ml_name -> LPAREN INFIXOP1 RPAREN
-- On INFIXOP1 reduce production ml_name -> LPAREN INFIXOP1 RPAREN
-- On INFIXOP0 reduce production ml_name -> LPAREN INFIXOP1 RPAREN
-- On INFIXCONS reduce production ml_name -> LPAREN INFIXOP1 RPAREN
-- On EQEQ reduce production ml_name -> LPAREN INFIXOP1 RPAREN
-- On EQ reduce production ml_name -> LPAREN INFIXOP1 RPAREN
-- On COMMA reduce production ml_name -> LPAREN INFIXOP1 RPAREN
-- On COLONGT reduce production ml_name -> LPAREN INFIXOP1 RPAREN
-- On COLON reduce production ml_name -> LPAREN INFIXOP1 RPAREN
-- On BY reduce production ml_name -> LPAREN INFIXOP1 RPAREN
-- On AS reduce production ml_name -> LPAREN INFIXOP1 RPAREN
-- On ARROW reduce production ml_name -> LPAREN INFIXOP1 RPAREN

State 250:
ml_name -> LPAREN INFIXOP0 . RPAREN [ WHEN TYPE STAR SEMI RPAREN RBRACK RBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQEQ EQ COMMA COLONGT COLON BY AS ARROW ]
tt_name -> LPAREN INFIXOP0 . RPAREN [ UNDERSCORE UATOM QUOTED_STRING QQMARK PREFIXOP NAME LPAREN LBRACK ]
-- On RPAREN shift to state 251

State 251:
ml_name -> LPAREN INFIXOP0 RPAREN . [ WHEN TYPE STAR SEMI RPAREN RBRACK RBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQEQ EQ COMMA COLONGT COLON BY AS ARROW ]
tt_name -> LPAREN INFIXOP0 RPAREN . [ UNDERSCORE UATOM QUOTED_STRING QQMARK PREFIXOP NAME LPAREN LBRACK ]
-- On WHEN reduce production ml_name -> LPAREN INFIXOP0 RPAREN
-- On UNDERSCORE reduce production tt_name -> LPAREN INFIXOP0 RPAREN
-- On UATOM reduce production tt_name -> LPAREN INFIXOP0 RPAREN
-- On TYPE reduce production ml_name -> LPAREN INFIXOP0 RPAREN
-- On STAR reduce production ml_name -> LPAREN INFIXOP0 RPAREN
-- On SEMI reduce production ml_name -> LPAREN INFIXOP0 RPAREN
-- On RPAREN reduce production ml_name -> LPAREN INFIXOP0 RPAREN
-- On RBRACK reduce production ml_name -> LPAREN INFIXOP0 RPAREN
-- On RBRACE reduce production ml_name -> LPAREN INFIXOP0 RPAREN
-- On QUOTED_STRING reduce production tt_name -> LPAREN INFIXOP0 RPAREN
-- On QQMARK reduce production tt_name -> LPAREN INFIXOP0 RPAREN
-- On PREFIXOP reduce production tt_name -> LPAREN INFIXOP0 RPAREN
-- On NAME reduce production tt_name -> LPAREN INFIXOP0 RPAREN
-- On LPAREN reduce production tt_name -> LPAREN INFIXOP0 RPAREN
-- On LBRACK reduce production tt_name -> LPAREN INFIXOP0 RPAREN
-- On INFIXOP4 reduce production ml_name -> LPAREN INFIXOP0 RPAREN
-- On INFIXOP3 reduce production ml_name -> LPAREN INFIXOP0 RPAREN
-- On INFIXOP2 reduce production ml_name -> LPAREN INFIXOP0 RPAREN
-- On INFIXOP1 reduce production ml_name -> LPAREN INFIXOP0 RPAREN
-- On INFIXOP0 reduce production ml_name -> LPAREN INFIXOP0 RPAREN
-- On INFIXCONS reduce production ml_name -> LPAREN INFIXOP0 RPAREN
-- On EQEQ reduce production ml_name -> LPAREN INFIXOP0 RPAREN
-- On EQ reduce production ml_name -> LPAREN INFIXOP0 RPAREN
-- On COMMA reduce production ml_name -> LPAREN INFIXOP0 RPAREN
-- On COLONGT reduce production ml_name -> LPAREN INFIXOP0 RPAREN
-- On COLON reduce production ml_name -> LPAREN INFIXOP0 RPAREN
-- On BY reduce production ml_name -> LPAREN INFIXOP0 RPAREN
-- On AS reduce production ml_name -> LPAREN INFIXOP0 RPAREN
-- On ARROW reduce production ml_name -> LPAREN INFIXOP0 RPAREN

State 252:
ml_name -> LPAREN INFIXCONS . RPAREN [ WHEN TYPE STAR SEMI RPAREN RBRACK RBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQEQ EQ COMMA COLONGT COLON BY AS ARROW ]
tt_name -> LPAREN INFIXCONS . RPAREN [ UNDERSCORE UATOM QUOTED_STRING QQMARK PREFIXOP NAME LPAREN LBRACK ]
-- On RPAREN shift to state 253

State 253:
ml_name -> LPAREN INFIXCONS RPAREN . [ WHEN TYPE STAR SEMI RPAREN RBRACK RBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQEQ EQ COMMA COLONGT COLON BY AS ARROW ]
tt_name -> LPAREN INFIXCONS RPAREN . [ UNDERSCORE UATOM QUOTED_STRING QQMARK PREFIXOP NAME LPAREN LBRACK ]
-- On WHEN reduce production ml_name -> LPAREN INFIXCONS RPAREN
-- On UNDERSCORE reduce production tt_name -> LPAREN INFIXCONS RPAREN
-- On UATOM reduce production tt_name -> LPAREN INFIXCONS RPAREN
-- On TYPE reduce production ml_name -> LPAREN INFIXCONS RPAREN
-- On STAR reduce production ml_name -> LPAREN INFIXCONS RPAREN
-- On SEMI reduce production ml_name -> LPAREN INFIXCONS RPAREN
-- On RPAREN reduce production ml_name -> LPAREN INFIXCONS RPAREN
-- On RBRACK reduce production ml_name -> LPAREN INFIXCONS RPAREN
-- On RBRACE reduce production ml_name -> LPAREN INFIXCONS RPAREN
-- On QUOTED_STRING reduce production tt_name -> LPAREN INFIXCONS RPAREN
-- On QQMARK reduce production tt_name -> LPAREN INFIXCONS RPAREN
-- On PREFIXOP reduce production tt_name -> LPAREN INFIXCONS RPAREN
-- On NAME reduce production tt_name -> LPAREN INFIXCONS RPAREN
-- On LPAREN reduce production tt_name -> LPAREN INFIXCONS RPAREN
-- On LBRACK reduce production tt_name -> LPAREN INFIXCONS RPAREN
-- On INFIXOP4 reduce production ml_name -> LPAREN INFIXCONS RPAREN
-- On INFIXOP3 reduce production ml_name -> LPAREN INFIXCONS RPAREN
-- On INFIXOP2 reduce production ml_name -> LPAREN INFIXCONS RPAREN
-- On INFIXOP1 reduce production ml_name -> LPAREN INFIXCONS RPAREN
-- On INFIXOP0 reduce production ml_name -> LPAREN INFIXCONS RPAREN
-- On INFIXCONS reduce production ml_name -> LPAREN INFIXCONS RPAREN
-- On EQEQ reduce production ml_name -> LPAREN INFIXCONS RPAREN
-- On EQ reduce production ml_name -> LPAREN INFIXCONS RPAREN
-- On COMMA reduce production ml_name -> LPAREN INFIXCONS RPAREN
-- On COLONGT reduce production ml_name -> LPAREN INFIXCONS RPAREN
-- On COLON reduce production ml_name -> LPAREN INFIXCONS RPAREN
-- On BY reduce production ml_name -> LPAREN INFIXCONS RPAREN
-- On AS reduce production ml_name -> LPAREN INFIXCONS RPAREN
-- On ARROW reduce production ml_name -> LPAREN INFIXCONS RPAREN

State 254:
ml_name -> LPAREN EQ . RPAREN [ WHEN TYPE STAR SEMI RPAREN RBRACK RBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQEQ EQ COMMA COLONGT COLON BY AS ARROW ]
tt_name -> LPAREN EQ . RPAREN [ UNDERSCORE UATOM QUOTED_STRING QQMARK PREFIXOP NAME LPAREN LBRACK ]
-- On RPAREN shift to state 255

State 255:
ml_name -> LPAREN EQ RPAREN . [ WHEN TYPE STAR SEMI RPAREN RBRACK RBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQEQ EQ COMMA COLONGT COLON BY AS ARROW ]
tt_name -> LPAREN EQ RPAREN . [ UNDERSCORE UATOM QUOTED_STRING QQMARK PREFIXOP NAME LPAREN LBRACK ]
-- On WHEN reduce production ml_name -> LPAREN EQ RPAREN
-- On UNDERSCORE reduce production tt_name -> LPAREN EQ RPAREN
-- On UATOM reduce production tt_name -> LPAREN EQ RPAREN
-- On TYPE reduce production ml_name -> LPAREN EQ RPAREN
-- On STAR reduce production ml_name -> LPAREN EQ RPAREN
-- On SEMI reduce production ml_name -> LPAREN EQ RPAREN
-- On RPAREN reduce production ml_name -> LPAREN EQ RPAREN
-- On RBRACK reduce production ml_name -> LPAREN EQ RPAREN
-- On RBRACE reduce production ml_name -> LPAREN EQ RPAREN
-- On QUOTED_STRING reduce production tt_name -> LPAREN EQ RPAREN
-- On QQMARK reduce production tt_name -> LPAREN EQ RPAREN
-- On PREFIXOP reduce production tt_name -> LPAREN EQ RPAREN
-- On NAME reduce production tt_name -> LPAREN EQ RPAREN
-- On LPAREN reduce production tt_name -> LPAREN EQ RPAREN
-- On LBRACK reduce production tt_name -> LPAREN EQ RPAREN
-- On INFIXOP4 reduce production ml_name -> LPAREN EQ RPAREN
-- On INFIXOP3 reduce production ml_name -> LPAREN EQ RPAREN
-- On INFIXOP2 reduce production ml_name -> LPAREN EQ RPAREN
-- On INFIXOP1 reduce production ml_name -> LPAREN EQ RPAREN
-- On INFIXOP0 reduce production ml_name -> LPAREN EQ RPAREN
-- On INFIXCONS reduce production ml_name -> LPAREN EQ RPAREN
-- On EQEQ reduce production ml_name -> LPAREN EQ RPAREN
-- On EQ reduce production ml_name -> LPAREN EQ RPAREN
-- On COMMA reduce production ml_name -> LPAREN EQ RPAREN
-- On COLONGT reduce production ml_name -> LPAREN EQ RPAREN
-- On COLON reduce production ml_name -> LPAREN EQ RPAREN
-- On BY reduce production ml_name -> LPAREN EQ RPAREN
-- On AS reduce production ml_name -> LPAREN EQ RPAREN
-- On ARROW reduce production ml_name -> LPAREN EQ RPAREN

State 256:
simple_pattern_ -> module_path PERIOD ml_name . [ WHEN UNDERSCORE UATOM TYPE STAR SEMI RPAREN RBRACK RBRACE QUOTED_STRING QQMARK PREFIXOP NAME LPAREN LBRACK INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQEQ EQ COMMA COLONGT COLON BY AS ARROW ]
-- On WHEN reduce production simple_pattern_ -> module_path PERIOD ml_name
-- On UNDERSCORE reduce production simple_pattern_ -> module_path PERIOD ml_name
-- On UATOM reduce production simple_pattern_ -> module_path PERIOD ml_name
-- On TYPE reduce production simple_pattern_ -> module_path PERIOD ml_name
-- On STAR reduce production simple_pattern_ -> module_path PERIOD ml_name
-- On SEMI reduce production simple_pattern_ -> module_path PERIOD ml_name
-- On RPAREN reduce production simple_pattern_ -> module_path PERIOD ml_name
-- On RBRACK reduce production simple_pattern_ -> module_path PERIOD ml_name
-- On RBRACE reduce production simple_pattern_ -> module_path PERIOD ml_name
-- On QUOTED_STRING reduce production simple_pattern_ -> module_path PERIOD ml_name
-- On QQMARK reduce production simple_pattern_ -> module_path PERIOD ml_name
-- On PREFIXOP reduce production simple_pattern_ -> module_path PERIOD ml_name
-- On NAME reduce production simple_pattern_ -> module_path PERIOD ml_name
-- On LPAREN reduce production simple_pattern_ -> module_path PERIOD ml_name
-- On LBRACK reduce production simple_pattern_ -> module_path PERIOD ml_name
-- On INFIXOP4 reduce production simple_pattern_ -> module_path PERIOD ml_name
-- On INFIXOP3 reduce production simple_pattern_ -> module_path PERIOD ml_name
-- On INFIXOP2 reduce production simple_pattern_ -> module_path PERIOD ml_name
-- On INFIXOP1 reduce production simple_pattern_ -> module_path PERIOD ml_name
-- On INFIXOP0 reduce production simple_pattern_ -> module_path PERIOD ml_name
-- On INFIXCONS reduce production simple_pattern_ -> module_path PERIOD ml_name
-- On EQEQ reduce production simple_pattern_ -> module_path PERIOD ml_name
-- On EQ reduce production simple_pattern_ -> module_path PERIOD ml_name
-- On COMMA reduce production simple_pattern_ -> module_path PERIOD ml_name
-- On COLONGT reduce production simple_pattern_ -> module_path PERIOD ml_name
-- On COLON reduce production simple_pattern_ -> module_path PERIOD ml_name
-- On BY reduce production simple_pattern_ -> module_path PERIOD ml_name
-- On AS reduce production simple_pattern_ -> module_path PERIOD ml_name
-- On ARROW reduce production simple_pattern_ -> module_path PERIOD ml_name

State 257:
app_pattern_ -> module_path PERIOD any_name . nonempty_list(prefix_pattern) [ WHEN TYPE STAR SEMI RPAREN RBRACK RBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQEQ EQ COMMA COLONGT COLON BY AS ARROW ]
-- On UNDERSCORE shift to state 211
-- On UATOM shift to state 212
-- On QUOTED_STRING shift to state 213
-- On QQMARK shift to state 214
-- On PREFIXOP shift to state 216
-- On NAME shift to state 57
-- On LPAREN shift to state 217
-- On LBRACK shift to state 226
-- On simple_pattern_ shift to state 234
-- On prefix_pattern_ shift to state 258
-- On prefix_pattern shift to state 259
-- On nonempty_list(prefix_pattern) shift to state 265
-- On module_path shift to state 261
-- On module_name shift to state 45
-- On ml_name shift to state 263
-- On mark_location(prefix_pattern_) shift to state 264

State 258:
mark_location(prefix_pattern_) -> prefix_pattern_ . [ WHEN UNDERSCORE UATOM TYPE STAR SEMI RPAREN RBRACK RBRACE QUOTED_STRING QQMARK PREFIXOP NAME LPAREN LBRACK INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQEQ EQ COMMA COLONGT COLON BY AS ARROW ]
-- On WHEN reduce production mark_location(prefix_pattern_) -> prefix_pattern_
-- On UNDERSCORE reduce production mark_location(prefix_pattern_) -> prefix_pattern_
-- On UATOM reduce production mark_location(prefix_pattern_) -> prefix_pattern_
-- On TYPE reduce production mark_location(prefix_pattern_) -> prefix_pattern_
-- On STAR reduce production mark_location(prefix_pattern_) -> prefix_pattern_
-- On SEMI reduce production mark_location(prefix_pattern_) -> prefix_pattern_
-- On RPAREN reduce production mark_location(prefix_pattern_) -> prefix_pattern_
-- On RBRACK reduce production mark_location(prefix_pattern_) -> prefix_pattern_
-- On RBRACE reduce production mark_location(prefix_pattern_) -> prefix_pattern_
-- On QUOTED_STRING reduce production mark_location(prefix_pattern_) -> prefix_pattern_
-- On QQMARK reduce production mark_location(prefix_pattern_) -> prefix_pattern_
-- On PREFIXOP reduce production mark_location(prefix_pattern_) -> prefix_pattern_
-- On NAME reduce production mark_location(prefix_pattern_) -> prefix_pattern_
-- On LPAREN reduce production mark_location(prefix_pattern_) -> prefix_pattern_
-- On LBRACK reduce production mark_location(prefix_pattern_) -> prefix_pattern_
-- On INFIXOP4 reduce production mark_location(prefix_pattern_) -> prefix_pattern_
-- On INFIXOP3 reduce production mark_location(prefix_pattern_) -> prefix_pattern_
-- On INFIXOP2 reduce production mark_location(prefix_pattern_) -> prefix_pattern_
-- On INFIXOP1 reduce production mark_location(prefix_pattern_) -> prefix_pattern_
-- On INFIXOP0 reduce production mark_location(prefix_pattern_) -> prefix_pattern_
-- On INFIXCONS reduce production mark_location(prefix_pattern_) -> prefix_pattern_
-- On EQEQ reduce production mark_location(prefix_pattern_) -> prefix_pattern_
-- On EQ reduce production mark_location(prefix_pattern_) -> prefix_pattern_
-- On COMMA reduce production mark_location(prefix_pattern_) -> prefix_pattern_
-- On COLONGT reduce production mark_location(prefix_pattern_) -> prefix_pattern_
-- On COLON reduce production mark_location(prefix_pattern_) -> prefix_pattern_
-- On BY reduce production mark_location(prefix_pattern_) -> prefix_pattern_
-- On AS reduce production mark_location(prefix_pattern_) -> prefix_pattern_
-- On ARROW reduce production mark_location(prefix_pattern_) -> prefix_pattern_

State 259:
nonempty_list(prefix_pattern) -> prefix_pattern . [ WHEN TYPE STAR SEMI RPAREN RBRACK RBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQEQ EQ COMMA COLONGT COLON BY AS ARROW ]
nonempty_list(prefix_pattern) -> prefix_pattern . nonempty_list(prefix_pattern) [ WHEN TYPE STAR SEMI RPAREN RBRACK RBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQEQ EQ COMMA COLONGT COLON BY AS ARROW ]
-- On UNDERSCORE shift to state 211
-- On UATOM shift to state 212
-- On QUOTED_STRING shift to state 213
-- On QQMARK shift to state 214
-- On PREFIXOP shift to state 216
-- On NAME shift to state 57
-- On LPAREN shift to state 217
-- On LBRACK shift to state 226
-- On simple_pattern_ shift to state 234
-- On prefix_pattern_ shift to state 258
-- On prefix_pattern shift to state 259
-- On nonempty_list(prefix_pattern) shift to state 260
-- On module_path shift to state 261
-- On module_name shift to state 45
-- On ml_name shift to state 263
-- On mark_location(prefix_pattern_) shift to state 264
-- On WHEN reduce production nonempty_list(prefix_pattern) -> prefix_pattern
-- On TYPE reduce production nonempty_list(prefix_pattern) -> prefix_pattern
-- On STAR reduce production nonempty_list(prefix_pattern) -> prefix_pattern
-- On SEMI reduce production nonempty_list(prefix_pattern) -> prefix_pattern
-- On RPAREN reduce production nonempty_list(prefix_pattern) -> prefix_pattern
-- On RBRACK reduce production nonempty_list(prefix_pattern) -> prefix_pattern
-- On RBRACE reduce production nonempty_list(prefix_pattern) -> prefix_pattern
-- On INFIXOP4 reduce production nonempty_list(prefix_pattern) -> prefix_pattern
-- On INFIXOP3 reduce production nonempty_list(prefix_pattern) -> prefix_pattern
-- On INFIXOP2 reduce production nonempty_list(prefix_pattern) -> prefix_pattern
-- On INFIXOP1 reduce production nonempty_list(prefix_pattern) -> prefix_pattern
-- On INFIXOP0 reduce production nonempty_list(prefix_pattern) -> prefix_pattern
-- On INFIXCONS reduce production nonempty_list(prefix_pattern) -> prefix_pattern
-- On EQEQ reduce production nonempty_list(prefix_pattern) -> prefix_pattern
-- On EQ reduce production nonempty_list(prefix_pattern) -> prefix_pattern
-- On COMMA reduce production nonempty_list(prefix_pattern) -> prefix_pattern
-- On COLONGT reduce production nonempty_list(prefix_pattern) -> prefix_pattern
-- On COLON reduce production nonempty_list(prefix_pattern) -> prefix_pattern
-- On BY reduce production nonempty_list(prefix_pattern) -> prefix_pattern
-- On AS reduce production nonempty_list(prefix_pattern) -> prefix_pattern
-- On ARROW reduce production nonempty_list(prefix_pattern) -> prefix_pattern

State 260:
nonempty_list(prefix_pattern) -> prefix_pattern nonempty_list(prefix_pattern) . [ WHEN TYPE STAR SEMI RPAREN RBRACK RBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQEQ EQ COMMA COLONGT COLON BY AS ARROW ]
-- On WHEN reduce production nonempty_list(prefix_pattern) -> prefix_pattern nonempty_list(prefix_pattern)
-- On TYPE reduce production nonempty_list(prefix_pattern) -> prefix_pattern nonempty_list(prefix_pattern)
-- On STAR reduce production nonempty_list(prefix_pattern) -> prefix_pattern nonempty_list(prefix_pattern)
-- On SEMI reduce production nonempty_list(prefix_pattern) -> prefix_pattern nonempty_list(prefix_pattern)
-- On RPAREN reduce production nonempty_list(prefix_pattern) -> prefix_pattern nonempty_list(prefix_pattern)
-- On RBRACK reduce production nonempty_list(prefix_pattern) -> prefix_pattern nonempty_list(prefix_pattern)
-- On RBRACE reduce production nonempty_list(prefix_pattern) -> prefix_pattern nonempty_list(prefix_pattern)
-- On INFIXOP4 reduce production nonempty_list(prefix_pattern) -> prefix_pattern nonempty_list(prefix_pattern)
-- On INFIXOP3 reduce production nonempty_list(prefix_pattern) -> prefix_pattern nonempty_list(prefix_pattern)
-- On INFIXOP2 reduce production nonempty_list(prefix_pattern) -> prefix_pattern nonempty_list(prefix_pattern)
-- On INFIXOP1 reduce production nonempty_list(prefix_pattern) -> prefix_pattern nonempty_list(prefix_pattern)
-- On INFIXOP0 reduce production nonempty_list(prefix_pattern) -> prefix_pattern nonempty_list(prefix_pattern)
-- On INFIXCONS reduce production nonempty_list(prefix_pattern) -> prefix_pattern nonempty_list(prefix_pattern)
-- On EQEQ reduce production nonempty_list(prefix_pattern) -> prefix_pattern nonempty_list(prefix_pattern)
-- On EQ reduce production nonempty_list(prefix_pattern) -> prefix_pattern nonempty_list(prefix_pattern)
-- On COMMA reduce production nonempty_list(prefix_pattern) -> prefix_pattern nonempty_list(prefix_pattern)
-- On COLONGT reduce production nonempty_list(prefix_pattern) -> prefix_pattern nonempty_list(prefix_pattern)
-- On COLON reduce production nonempty_list(prefix_pattern) -> prefix_pattern nonempty_list(prefix_pattern)
-- On BY reduce production nonempty_list(prefix_pattern) -> prefix_pattern nonempty_list(prefix_pattern)
-- On AS reduce production nonempty_list(prefix_pattern) -> prefix_pattern nonempty_list(prefix_pattern)
-- On ARROW reduce production nonempty_list(prefix_pattern) -> prefix_pattern nonempty_list(prefix_pattern)

State 261:
module_path -> module_path . PERIOD module_name [ PERIOD ]
simple_pattern_ -> module_path . PERIOD ml_name [ WHEN UNDERSCORE UATOM TYPE STAR SEMI RPAREN RBRACK RBRACE QUOTED_STRING QQMARK PREFIXOP NAME LPAREN LBRACK INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQEQ EQ COMMA COLONGT COLON BY AS ARROW ]
-- On PERIOD shift to state 262

State 262:
module_path -> module_path PERIOD . module_name [ PERIOD ]
simple_pattern_ -> module_path PERIOD . ml_name [ WHEN UNDERSCORE UATOM TYPE STAR SEMI RPAREN RBRACK RBRACE QUOTED_STRING QQMARK PREFIXOP NAME LPAREN LBRACK INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQEQ EQ COMMA COLONGT COLON BY AS ARROW ]
-- On NAME shift to state 57
-- On LPAREN shift to state 89
-- On module_name shift to state 43
-- On ml_name shift to state 256

State 263:
simple_pattern_ -> ml_name . [ WHEN UNDERSCORE UATOM TYPE STAR SEMI RPAREN RBRACK RBRACE QUOTED_STRING QQMARK PREFIXOP NAME LPAREN LBRACK INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQEQ EQ COMMA COLONGT COLON BY AS ARROW ]
-- On WHEN reduce production simple_pattern_ -> ml_name
-- On UNDERSCORE reduce production simple_pattern_ -> ml_name
-- On UATOM reduce production simple_pattern_ -> ml_name
-- On TYPE reduce production simple_pattern_ -> ml_name
-- On STAR reduce production simple_pattern_ -> ml_name
-- On SEMI reduce production simple_pattern_ -> ml_name
-- On RPAREN reduce production simple_pattern_ -> ml_name
-- On RBRACK reduce production simple_pattern_ -> ml_name
-- On RBRACE reduce production simple_pattern_ -> ml_name
-- On QUOTED_STRING reduce production simple_pattern_ -> ml_name
-- On QQMARK reduce production simple_pattern_ -> ml_name
-- On PREFIXOP reduce production simple_pattern_ -> ml_name
-- On NAME reduce production simple_pattern_ -> ml_name
-- On LPAREN reduce production simple_pattern_ -> ml_name
-- On LBRACK reduce production simple_pattern_ -> ml_name
-- On INFIXOP4 reduce production simple_pattern_ -> ml_name
-- On INFIXOP3 reduce production simple_pattern_ -> ml_name
-- On INFIXOP2 reduce production simple_pattern_ -> ml_name
-- On INFIXOP1 reduce production simple_pattern_ -> ml_name
-- On INFIXOP0 reduce production simple_pattern_ -> ml_name
-- On INFIXCONS reduce production simple_pattern_ -> ml_name
-- On EQEQ reduce production simple_pattern_ -> ml_name
-- On EQ reduce production simple_pattern_ -> ml_name
-- On COMMA reduce production simple_pattern_ -> ml_name
-- On COLONGT reduce production simple_pattern_ -> ml_name
-- On COLON reduce production simple_pattern_ -> ml_name
-- On BY reduce production simple_pattern_ -> ml_name
-- On AS reduce production simple_pattern_ -> ml_name
-- On ARROW reduce production simple_pattern_ -> ml_name

State 264:
prefix_pattern -> mark_location(prefix_pattern_) . [ WHEN UNDERSCORE UATOM TYPE STAR SEMI RPAREN RBRACK RBRACE QUOTED_STRING QQMARK PREFIXOP NAME LPAREN LBRACK INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQEQ EQ COMMA COLONGT COLON BY AS ARROW ]
-- On WHEN reduce production prefix_pattern -> mark_location(prefix_pattern_)
-- On UNDERSCORE reduce production prefix_pattern -> mark_location(prefix_pattern_)
-- On UATOM reduce production prefix_pattern -> mark_location(prefix_pattern_)
-- On TYPE reduce production prefix_pattern -> mark_location(prefix_pattern_)
-- On STAR reduce production prefix_pattern -> mark_location(prefix_pattern_)
-- On SEMI reduce production prefix_pattern -> mark_location(prefix_pattern_)
-- On RPAREN reduce production prefix_pattern -> mark_location(prefix_pattern_)
-- On RBRACK reduce production prefix_pattern -> mark_location(prefix_pattern_)
-- On RBRACE reduce production prefix_pattern -> mark_location(prefix_pattern_)
-- On QUOTED_STRING reduce production prefix_pattern -> mark_location(prefix_pattern_)
-- On QQMARK reduce production prefix_pattern -> mark_location(prefix_pattern_)
-- On PREFIXOP reduce production prefix_pattern -> mark_location(prefix_pattern_)
-- On NAME reduce production prefix_pattern -> mark_location(prefix_pattern_)
-- On LPAREN reduce production prefix_pattern -> mark_location(prefix_pattern_)
-- On LBRACK reduce production prefix_pattern -> mark_location(prefix_pattern_)
-- On INFIXOP4 reduce production prefix_pattern -> mark_location(prefix_pattern_)
-- On INFIXOP3 reduce production prefix_pattern -> mark_location(prefix_pattern_)
-- On INFIXOP2 reduce production prefix_pattern -> mark_location(prefix_pattern_)
-- On INFIXOP1 reduce production prefix_pattern -> mark_location(prefix_pattern_)
-- On INFIXOP0 reduce production prefix_pattern -> mark_location(prefix_pattern_)
-- On INFIXCONS reduce production prefix_pattern -> mark_location(prefix_pattern_)
-- On EQEQ reduce production prefix_pattern -> mark_location(prefix_pattern_)
-- On EQ reduce production prefix_pattern -> mark_location(prefix_pattern_)
-- On COMMA reduce production prefix_pattern -> mark_location(prefix_pattern_)
-- On COLONGT reduce production prefix_pattern -> mark_location(prefix_pattern_)
-- On COLON reduce production prefix_pattern -> mark_location(prefix_pattern_)
-- On BY reduce production prefix_pattern -> mark_location(prefix_pattern_)
-- On AS reduce production prefix_pattern -> mark_location(prefix_pattern_)
-- On ARROW reduce production prefix_pattern -> mark_location(prefix_pattern_)

State 265:
app_pattern_ -> module_path PERIOD any_name nonempty_list(prefix_pattern) . [ WHEN TYPE STAR SEMI RPAREN RBRACK RBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQEQ EQ COMMA COLONGT COLON BY AS ARROW ]
-- On WHEN reduce production app_pattern_ -> module_path PERIOD any_name nonempty_list(prefix_pattern)
-- On TYPE reduce production app_pattern_ -> module_path PERIOD any_name nonempty_list(prefix_pattern)
-- On STAR reduce production app_pattern_ -> module_path PERIOD any_name nonempty_list(prefix_pattern)
-- On SEMI reduce production app_pattern_ -> module_path PERIOD any_name nonempty_list(prefix_pattern)
-- On RPAREN reduce production app_pattern_ -> module_path PERIOD any_name nonempty_list(prefix_pattern)
-- On RBRACK reduce production app_pattern_ -> module_path PERIOD any_name nonempty_list(prefix_pattern)
-- On RBRACE reduce production app_pattern_ -> module_path PERIOD any_name nonempty_list(prefix_pattern)
-- On INFIXOP4 reduce production app_pattern_ -> module_path PERIOD any_name nonempty_list(prefix_pattern)
-- On INFIXOP3 reduce production app_pattern_ -> module_path PERIOD any_name nonempty_list(prefix_pattern)
-- On INFIXOP2 reduce production app_pattern_ -> module_path PERIOD any_name nonempty_list(prefix_pattern)
-- On INFIXOP1 reduce production app_pattern_ -> module_path PERIOD any_name nonempty_list(prefix_pattern)
-- On INFIXOP0 reduce production app_pattern_ -> module_path PERIOD any_name nonempty_list(prefix_pattern)
-- On INFIXCONS reduce production app_pattern_ -> module_path PERIOD any_name nonempty_list(prefix_pattern)
-- On EQEQ reduce production app_pattern_ -> module_path PERIOD any_name nonempty_list(prefix_pattern)
-- On EQ reduce production app_pattern_ -> module_path PERIOD any_name nonempty_list(prefix_pattern)
-- On COMMA reduce production app_pattern_ -> module_path PERIOD any_name nonempty_list(prefix_pattern)
-- On COLONGT reduce production app_pattern_ -> module_path PERIOD any_name nonempty_list(prefix_pattern)
-- On COLON reduce production app_pattern_ -> module_path PERIOD any_name nonempty_list(prefix_pattern)
-- On BY reduce production app_pattern_ -> module_path PERIOD any_name nonempty_list(prefix_pattern)
-- On AS reduce production app_pattern_ -> module_path PERIOD any_name nonempty_list(prefix_pattern)
-- On ARROW reduce production app_pattern_ -> module_path PERIOD any_name nonempty_list(prefix_pattern)

State 266:
pattern -> mark_location(pattern_) . [ WHEN SEMI RPAREN RBRACK RBRACE COMMA ARROW ]
-- On WHEN reduce production pattern -> mark_location(pattern_)
-- On SEMI reduce production pattern -> mark_location(pattern_)
-- On RPAREN reduce production pattern -> mark_location(pattern_)
-- On RBRACK reduce production pattern -> mark_location(pattern_)
-- On RBRACE reduce production pattern -> mark_location(pattern_)
-- On COMMA reduce production pattern -> mark_location(pattern_)
-- On ARROW reduce production pattern -> mark_location(pattern_)

State 267:
binop_pattern -> mark_location(binop_pattern_) . [ WHEN TYPE STAR SEMI RPAREN RBRACK RBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQEQ EQ COMMA COLONGT COLON BY AS ARROW ]
-- On WHEN reduce production binop_pattern -> mark_location(binop_pattern_)
-- On TYPE reduce production binop_pattern -> mark_location(binop_pattern_)
-- On STAR reduce production binop_pattern -> mark_location(binop_pattern_)
-- On SEMI reduce production binop_pattern -> mark_location(binop_pattern_)
-- On RPAREN reduce production binop_pattern -> mark_location(binop_pattern_)
-- On RBRACK reduce production binop_pattern -> mark_location(binop_pattern_)
-- On RBRACE reduce production binop_pattern -> mark_location(binop_pattern_)
-- On INFIXOP4 reduce production binop_pattern -> mark_location(binop_pattern_)
-- On INFIXOP3 reduce production binop_pattern -> mark_location(binop_pattern_)
-- On INFIXOP2 reduce production binop_pattern -> mark_location(binop_pattern_)
-- On INFIXOP1 reduce production binop_pattern -> mark_location(binop_pattern_)
-- On INFIXOP0 reduce production binop_pattern -> mark_location(binop_pattern_)
-- On INFIXCONS reduce production binop_pattern -> mark_location(binop_pattern_)
-- On EQEQ reduce production binop_pattern -> mark_location(binop_pattern_)
-- On EQ reduce production binop_pattern -> mark_location(binop_pattern_)
-- On COMMA reduce production binop_pattern -> mark_location(binop_pattern_)
-- On COLONGT reduce production binop_pattern -> mark_location(binop_pattern_)
-- On COLON reduce production binop_pattern -> mark_location(binop_pattern_)
-- On BY reduce production binop_pattern -> mark_location(binop_pattern_)
-- On AS reduce production binop_pattern -> mark_location(binop_pattern_)
-- On ARROW reduce production binop_pattern -> mark_location(binop_pattern_)

State 268:
mark_location(binop_pattern_) -> binop_pattern_ . [ TYPE STAR INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQEQ EQ COLONGT COLON BY AS ]
pattern_ -> binop_pattern_ . [ WHEN SEMI RPAREN RBRACK RBRACE COMMA ARROW ]
-- On WHEN reduce production pattern_ -> binop_pattern_
-- On TYPE reduce production mark_location(binop_pattern_) -> binop_pattern_
-- On STAR reduce production mark_location(binop_pattern_) -> binop_pattern_
-- On SEMI reduce production pattern_ -> binop_pattern_
-- On RPAREN reduce production pattern_ -> binop_pattern_
-- On RBRACK reduce production pattern_ -> binop_pattern_
-- On RBRACE reduce production pattern_ -> binop_pattern_
-- On INFIXOP4 reduce production mark_location(binop_pattern_) -> binop_pattern_
-- On INFIXOP3 reduce production mark_location(binop_pattern_) -> binop_pattern_
-- On INFIXOP2 reduce production mark_location(binop_pattern_) -> binop_pattern_
-- On INFIXOP1 reduce production mark_location(binop_pattern_) -> binop_pattern_
-- On INFIXOP0 reduce production mark_location(binop_pattern_) -> binop_pattern_
-- On INFIXCONS reduce production mark_location(binop_pattern_) -> binop_pattern_
-- On EQEQ reduce production mark_location(binop_pattern_) -> binop_pattern_
-- On EQ reduce production mark_location(binop_pattern_) -> binop_pattern_
-- On COMMA reduce production pattern_ -> binop_pattern_
-- On COLONGT reduce production mark_location(binop_pattern_) -> binop_pattern_
-- On COLON reduce production mark_location(binop_pattern_) -> binop_pattern_
-- On BY reduce production mark_location(binop_pattern_) -> binop_pattern_
-- On AS reduce production mark_location(binop_pattern_) -> binop_pattern_
-- On ARROW reduce production pattern_ -> binop_pattern_

State 269:
binop_pattern_ -> binop_pattern . INFIXCONS binop_pattern [ WHEN TYPE STAR SEMI RPAREN RBRACK RBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQEQ EQ COMMA COLONGT COLON AS ARROW ]
binop_pattern_ -> binop_pattern . EQ binop_pattern [ WHEN TYPE STAR SEMI RPAREN RBRACK RBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQEQ EQ COMMA COLONGT COLON AS ARROW ]
binop_pattern_ -> binop_pattern . INFIXOP0 binop_pattern [ WHEN TYPE STAR SEMI RPAREN RBRACK RBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQEQ EQ COMMA COLONGT COLON AS ARROW ]
binop_pattern_ -> binop_pattern . INFIXOP1 binop_pattern [ WHEN TYPE STAR SEMI RPAREN RBRACK RBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQEQ EQ COMMA COLONGT COLON AS ARROW ]
binop_pattern_ -> binop_pattern . INFIXOP2 binop_pattern [ WHEN TYPE STAR SEMI RPAREN RBRACK RBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQEQ EQ COMMA COLONGT COLON AS ARROW ]
binop_pattern_ -> binop_pattern . INFIXOP3 binop_pattern [ WHEN TYPE STAR SEMI RPAREN RBRACK RBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQEQ EQ COMMA COLONGT COLON AS ARROW ]
binop_pattern_ -> binop_pattern . STAR binop_pattern [ WHEN TYPE STAR SEMI RPAREN RBRACK RBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQEQ EQ COMMA COLONGT COLON AS ARROW ]
binop_pattern_ -> binop_pattern . INFIXOP4 binop_pattern [ WHEN TYPE STAR SEMI RPAREN RBRACK RBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQEQ EQ COMMA COLONGT COLON AS ARROW ]
pattern_ -> binop_pattern . AS binop_pattern [ WHEN SEMI RPAREN RBRACK RBRACE COMMA ARROW ]
pattern_ -> binop_pattern . TYPE [ WHEN SEMI RPAREN RBRACK RBRACE COMMA ARROW ]
pattern_ -> binop_pattern . COLON binop_pattern [ WHEN SEMI RPAREN RBRACK RBRACE COMMA ARROW ]
pattern_ -> binop_pattern . COLONGT prod_mlty [ WHEN SEMI RPAREN RBRACK RBRACE COMMA ARROW ]
pattern_ -> binop_pattern . EQEQ binop_pattern [ WHEN SEMI RPAREN RBRACK RBRACE COMMA ARROW ]
pattern_ -> binop_pattern . EQEQ binop_pattern COLON pattern [ WHEN SEMI RPAREN RBRACK RBRACE COMMA ARROW ]
pattern_ -> binop_pattern . EQEQ binop_pattern BY QQMARK [ WHEN SEMI RPAREN RBRACK RBRACE COMMA ARROW ]
pattern_ -> binop_pattern . EQEQ binop_pattern COLON binop_pattern BY QQMARK [ WHEN SEMI RPAREN RBRACK RBRACE COMMA ARROW ]
-- On TYPE shift to state 270
-- On STAR shift to state 271
-- On INFIXOP4 shift to state 274
-- On INFIXOP3 shift to state 279
-- On INFIXOP2 shift to state 281
-- On INFIXOP1 shift to state 283
-- On INFIXOP0 shift to state 287
-- On INFIXCONS shift to state 285
-- On EQEQ shift to state 289
-- On EQ shift to state 291
-- On COLONGT shift to state 296
-- On COLON shift to state 299
-- On AS shift to state 303

State 270:
pattern_ -> binop_pattern TYPE . [ WHEN SEMI RPAREN RBRACK RBRACE COMMA ARROW ]
-- On WHEN reduce production pattern_ -> binop_pattern TYPE
-- On SEMI reduce production pattern_ -> binop_pattern TYPE
-- On RPAREN reduce production pattern_ -> binop_pattern TYPE
-- On RBRACK reduce production pattern_ -> binop_pattern TYPE
-- On RBRACE reduce production pattern_ -> binop_pattern TYPE
-- On COMMA reduce production pattern_ -> binop_pattern TYPE
-- On ARROW reduce production pattern_ -> binop_pattern TYPE

State 271:
binop_pattern_ -> binop_pattern STAR . binop_pattern [ WHEN TYPE STAR SEMI RPAREN RBRACK RBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQEQ EQ COMMA COLONGT COLON BY AS ARROW ]
-- On UNDERSCORE shift to state 211
-- On UATOM shift to state 212
-- On QUOTED_STRING shift to state 213
-- On QQMARK shift to state 214
-- On PREFIXOP shift to state 216
-- On NAME shift to state 220
-- On LPAREN shift to state 221
-- On LBRACK shift to state 226
-- On tt_name shift to state 20
-- On simple_pattern_ shift to state 234
-- On prefix_pattern_ shift to state 235
-- On module_path shift to state 238
-- On module_name shift to state 45
-- On ml_name shift to state 263
-- On mark_location(binop_pattern_) shift to state 267
-- On binop_pattern_ shift to state 272
-- On binop_pattern shift to state 273
-- On app_pattern_ shift to state 276
-- On any_name shift to state 277

State 272:
mark_location(binop_pattern_) -> binop_pattern_ . [ WHEN TYPE STAR SEMI RPAREN RBRACK RBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQEQ EQ COMMA COLONGT COLON BY AS ARROW ]
-- On WHEN reduce production mark_location(binop_pattern_) -> binop_pattern_
-- On TYPE reduce production mark_location(binop_pattern_) -> binop_pattern_
-- On STAR reduce production mark_location(binop_pattern_) -> binop_pattern_
-- On SEMI reduce production mark_location(binop_pattern_) -> binop_pattern_
-- On RPAREN reduce production mark_location(binop_pattern_) -> binop_pattern_
-- On RBRACK reduce production mark_location(binop_pattern_) -> binop_pattern_
-- On RBRACE reduce production mark_location(binop_pattern_) -> binop_pattern_
-- On INFIXOP4 reduce production mark_location(binop_pattern_) -> binop_pattern_
-- On INFIXOP3 reduce production mark_location(binop_pattern_) -> binop_pattern_
-- On INFIXOP2 reduce production mark_location(binop_pattern_) -> binop_pattern_
-- On INFIXOP1 reduce production mark_location(binop_pattern_) -> binop_pattern_
-- On INFIXOP0 reduce production mark_location(binop_pattern_) -> binop_pattern_
-- On INFIXCONS reduce production mark_location(binop_pattern_) -> binop_pattern_
-- On EQEQ reduce production mark_location(binop_pattern_) -> binop_pattern_
-- On EQ reduce production mark_location(binop_pattern_) -> binop_pattern_
-- On COMMA reduce production mark_location(binop_pattern_) -> binop_pattern_
-- On COLONGT reduce production mark_location(binop_pattern_) -> binop_pattern_
-- On COLON reduce production mark_location(binop_pattern_) -> binop_pattern_
-- On BY reduce production mark_location(binop_pattern_) -> binop_pattern_
-- On AS reduce production mark_location(binop_pattern_) -> binop_pattern_
-- On ARROW reduce production mark_location(binop_pattern_) -> binop_pattern_

State 273:
binop_pattern_ -> binop_pattern . INFIXCONS binop_pattern [ WHEN TYPE STAR SEMI RPAREN RBRACK RBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQEQ EQ COMMA COLONGT COLON BY AS ARROW ]
binop_pattern_ -> binop_pattern . EQ binop_pattern [ WHEN TYPE STAR SEMI RPAREN RBRACK RBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQEQ EQ COMMA COLONGT COLON BY AS ARROW ]
binop_pattern_ -> binop_pattern . INFIXOP0 binop_pattern [ WHEN TYPE STAR SEMI RPAREN RBRACK RBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQEQ EQ COMMA COLONGT COLON BY AS ARROW ]
binop_pattern_ -> binop_pattern . INFIXOP1 binop_pattern [ WHEN TYPE STAR SEMI RPAREN RBRACK RBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQEQ EQ COMMA COLONGT COLON BY AS ARROW ]
binop_pattern_ -> binop_pattern . INFIXOP2 binop_pattern [ WHEN TYPE STAR SEMI RPAREN RBRACK RBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQEQ EQ COMMA COLONGT COLON BY AS ARROW ]
binop_pattern_ -> binop_pattern . INFIXOP3 binop_pattern [ WHEN TYPE STAR SEMI RPAREN RBRACK RBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQEQ EQ COMMA COLONGT COLON BY AS ARROW ]
binop_pattern_ -> binop_pattern . STAR binop_pattern [ WHEN TYPE STAR SEMI RPAREN RBRACK RBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQEQ EQ COMMA COLONGT COLON BY AS ARROW ]
binop_pattern_ -> binop_pattern STAR binop_pattern . [ WHEN TYPE STAR SEMI RPAREN RBRACK RBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQEQ EQ COMMA COLONGT COLON BY AS ARROW ]
binop_pattern_ -> binop_pattern . INFIXOP4 binop_pattern [ WHEN TYPE STAR SEMI RPAREN RBRACK RBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQEQ EQ COMMA COLONGT COLON BY AS ARROW ]
-- On INFIXOP4 shift to state 274
-- On WHEN reduce production binop_pattern_ -> binop_pattern STAR binop_pattern
-- On TYPE reduce production binop_pattern_ -> binop_pattern STAR binop_pattern
-- On STAR reduce production binop_pattern_ -> binop_pattern STAR binop_pattern
-- On SEMI reduce production binop_pattern_ -> binop_pattern STAR binop_pattern
-- On RPAREN reduce production binop_pattern_ -> binop_pattern STAR binop_pattern
-- On RBRACK reduce production binop_pattern_ -> binop_pattern STAR binop_pattern
-- On RBRACE reduce production binop_pattern_ -> binop_pattern STAR binop_pattern
-- On INFIXOP3 reduce production binop_pattern_ -> binop_pattern STAR binop_pattern
-- On INFIXOP2 reduce production binop_pattern_ -> binop_pattern STAR binop_pattern
-- On INFIXOP1 reduce production binop_pattern_ -> binop_pattern STAR binop_pattern
-- On INFIXOP0 reduce production binop_pattern_ -> binop_pattern STAR binop_pattern
-- On INFIXCONS reduce production binop_pattern_ -> binop_pattern STAR binop_pattern
-- On EQEQ reduce production binop_pattern_ -> binop_pattern STAR binop_pattern
-- On EQ reduce production binop_pattern_ -> binop_pattern STAR binop_pattern
-- On COMMA reduce production binop_pattern_ -> binop_pattern STAR binop_pattern
-- On COLONGT reduce production binop_pattern_ -> binop_pattern STAR binop_pattern
-- On COLON reduce production binop_pattern_ -> binop_pattern STAR binop_pattern
-- On BY reduce production binop_pattern_ -> binop_pattern STAR binop_pattern
-- On AS reduce production binop_pattern_ -> binop_pattern STAR binop_pattern
-- On ARROW reduce production binop_pattern_ -> binop_pattern STAR binop_pattern

State 274:
binop_pattern_ -> binop_pattern INFIXOP4 . binop_pattern [ WHEN TYPE STAR SEMI RPAREN RBRACK RBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQEQ EQ COMMA COLONGT COLON BY AS ARROW ]
-- On UNDERSCORE shift to state 211
-- On UATOM shift to state 212
-- On QUOTED_STRING shift to state 213
-- On QQMARK shift to state 214
-- On PREFIXOP shift to state 216
-- On NAME shift to state 220
-- On LPAREN shift to state 221
-- On LBRACK shift to state 226
-- On tt_name shift to state 20
-- On simple_pattern_ shift to state 234
-- On prefix_pattern_ shift to state 235
-- On module_path shift to state 238
-- On module_name shift to state 45
-- On ml_name shift to state 263
-- On mark_location(binop_pattern_) shift to state 267
-- On binop_pattern_ shift to state 272
-- On binop_pattern shift to state 275
-- On app_pattern_ shift to state 276
-- On any_name shift to state 277

State 275:
binop_pattern_ -> binop_pattern . INFIXCONS binop_pattern [ WHEN TYPE STAR SEMI RPAREN RBRACK RBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQEQ EQ COMMA COLONGT COLON BY AS ARROW ]
binop_pattern_ -> binop_pattern . EQ binop_pattern [ WHEN TYPE STAR SEMI RPAREN RBRACK RBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQEQ EQ COMMA COLONGT COLON BY AS ARROW ]
binop_pattern_ -> binop_pattern . INFIXOP0 binop_pattern [ WHEN TYPE STAR SEMI RPAREN RBRACK RBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQEQ EQ COMMA COLONGT COLON BY AS ARROW ]
binop_pattern_ -> binop_pattern . INFIXOP1 binop_pattern [ WHEN TYPE STAR SEMI RPAREN RBRACK RBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQEQ EQ COMMA COLONGT COLON BY AS ARROW ]
binop_pattern_ -> binop_pattern . INFIXOP2 binop_pattern [ WHEN TYPE STAR SEMI RPAREN RBRACK RBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQEQ EQ COMMA COLONGT COLON BY AS ARROW ]
binop_pattern_ -> binop_pattern . INFIXOP3 binop_pattern [ WHEN TYPE STAR SEMI RPAREN RBRACK RBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQEQ EQ COMMA COLONGT COLON BY AS ARROW ]
binop_pattern_ -> binop_pattern . STAR binop_pattern [ WHEN TYPE STAR SEMI RPAREN RBRACK RBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQEQ EQ COMMA COLONGT COLON BY AS ARROW ]
binop_pattern_ -> binop_pattern . INFIXOP4 binop_pattern [ WHEN TYPE STAR SEMI RPAREN RBRACK RBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQEQ EQ COMMA COLONGT COLON BY AS ARROW ]
binop_pattern_ -> binop_pattern INFIXOP4 binop_pattern . [ WHEN TYPE STAR SEMI RPAREN RBRACK RBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQEQ EQ COMMA COLONGT COLON BY AS ARROW ]
-- On INFIXOP4 shift to state 274
-- On WHEN reduce production binop_pattern_ -> binop_pattern INFIXOP4 binop_pattern
-- On TYPE reduce production binop_pattern_ -> binop_pattern INFIXOP4 binop_pattern
-- On STAR reduce production binop_pattern_ -> binop_pattern INFIXOP4 binop_pattern
-- On SEMI reduce production binop_pattern_ -> binop_pattern INFIXOP4 binop_pattern
-- On RPAREN reduce production binop_pattern_ -> binop_pattern INFIXOP4 binop_pattern
-- On RBRACK reduce production binop_pattern_ -> binop_pattern INFIXOP4 binop_pattern
-- On RBRACE reduce production binop_pattern_ -> binop_pattern INFIXOP4 binop_pattern
-- On INFIXOP3 reduce production binop_pattern_ -> binop_pattern INFIXOP4 binop_pattern
-- On INFIXOP2 reduce production binop_pattern_ -> binop_pattern INFIXOP4 binop_pattern
-- On INFIXOP1 reduce production binop_pattern_ -> binop_pattern INFIXOP4 binop_pattern
-- On INFIXOP0 reduce production binop_pattern_ -> binop_pattern INFIXOP4 binop_pattern
-- On INFIXCONS reduce production binop_pattern_ -> binop_pattern INFIXOP4 binop_pattern
-- On EQEQ reduce production binop_pattern_ -> binop_pattern INFIXOP4 binop_pattern
-- On EQ reduce production binop_pattern_ -> binop_pattern INFIXOP4 binop_pattern
-- On COMMA reduce production binop_pattern_ -> binop_pattern INFIXOP4 binop_pattern
-- On COLONGT reduce production binop_pattern_ -> binop_pattern INFIXOP4 binop_pattern
-- On COLON reduce production binop_pattern_ -> binop_pattern INFIXOP4 binop_pattern
-- On BY reduce production binop_pattern_ -> binop_pattern INFIXOP4 binop_pattern
-- On AS reduce production binop_pattern_ -> binop_pattern INFIXOP4 binop_pattern
-- On ARROW reduce production binop_pattern_ -> binop_pattern INFIXOP4 binop_pattern

State 276:
binop_pattern_ -> app_pattern_ . [ WHEN TYPE STAR SEMI RPAREN RBRACK RBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQEQ EQ COMMA COLONGT COLON BY AS ARROW ]
-- On WHEN reduce production binop_pattern_ -> app_pattern_
-- On TYPE reduce production binop_pattern_ -> app_pattern_
-- On STAR reduce production binop_pattern_ -> app_pattern_
-- On SEMI reduce production binop_pattern_ -> app_pattern_
-- On RPAREN reduce production binop_pattern_ -> app_pattern_
-- On RBRACK reduce production binop_pattern_ -> app_pattern_
-- On RBRACE reduce production binop_pattern_ -> app_pattern_
-- On INFIXOP4 reduce production binop_pattern_ -> app_pattern_
-- On INFIXOP3 reduce production binop_pattern_ -> app_pattern_
-- On INFIXOP2 reduce production binop_pattern_ -> app_pattern_
-- On INFIXOP1 reduce production binop_pattern_ -> app_pattern_
-- On INFIXOP0 reduce production binop_pattern_ -> app_pattern_
-- On INFIXCONS reduce production binop_pattern_ -> app_pattern_
-- On EQEQ reduce production binop_pattern_ -> app_pattern_
-- On EQ reduce production binop_pattern_ -> app_pattern_
-- On COMMA reduce production binop_pattern_ -> app_pattern_
-- On COLONGT reduce production binop_pattern_ -> app_pattern_
-- On COLON reduce production binop_pattern_ -> app_pattern_
-- On BY reduce production binop_pattern_ -> app_pattern_
-- On AS reduce production binop_pattern_ -> app_pattern_
-- On ARROW reduce production binop_pattern_ -> app_pattern_

State 277:
app_pattern_ -> any_name . nonempty_list(prefix_pattern) [ WHEN TYPE STAR SEMI RPAREN RBRACK RBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQEQ EQ COMMA COLONGT COLON BY AS ARROW ]
-- On UNDERSCORE shift to state 211
-- On UATOM shift to state 212
-- On QUOTED_STRING shift to state 213
-- On QQMARK shift to state 214
-- On PREFIXOP shift to state 216
-- On NAME shift to state 57
-- On LPAREN shift to state 217
-- On LBRACK shift to state 226
-- On simple_pattern_ shift to state 234
-- On prefix_pattern_ shift to state 258
-- On prefix_pattern shift to state 259
-- On nonempty_list(prefix_pattern) shift to state 278
-- On module_path shift to state 261
-- On module_name shift to state 45
-- On ml_name shift to state 263
-- On mark_location(prefix_pattern_) shift to state 264

State 278:
app_pattern_ -> any_name nonempty_list(prefix_pattern) . [ WHEN TYPE STAR SEMI RPAREN RBRACK RBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQEQ EQ COMMA COLONGT COLON BY AS ARROW ]
-- On WHEN reduce production app_pattern_ -> any_name nonempty_list(prefix_pattern)
-- On TYPE reduce production app_pattern_ -> any_name nonempty_list(prefix_pattern)
-- On STAR reduce production app_pattern_ -> any_name nonempty_list(prefix_pattern)
-- On SEMI reduce production app_pattern_ -> any_name nonempty_list(prefix_pattern)
-- On RPAREN reduce production app_pattern_ -> any_name nonempty_list(prefix_pattern)
-- On RBRACK reduce production app_pattern_ -> any_name nonempty_list(prefix_pattern)
-- On RBRACE reduce production app_pattern_ -> any_name nonempty_list(prefix_pattern)
-- On INFIXOP4 reduce production app_pattern_ -> any_name nonempty_list(prefix_pattern)
-- On INFIXOP3 reduce production app_pattern_ -> any_name nonempty_list(prefix_pattern)
-- On INFIXOP2 reduce production app_pattern_ -> any_name nonempty_list(prefix_pattern)
-- On INFIXOP1 reduce production app_pattern_ -> any_name nonempty_list(prefix_pattern)
-- On INFIXOP0 reduce production app_pattern_ -> any_name nonempty_list(prefix_pattern)
-- On INFIXCONS reduce production app_pattern_ -> any_name nonempty_list(prefix_pattern)
-- On EQEQ reduce production app_pattern_ -> any_name nonempty_list(prefix_pattern)
-- On EQ reduce production app_pattern_ -> any_name nonempty_list(prefix_pattern)
-- On COMMA reduce production app_pattern_ -> any_name nonempty_list(prefix_pattern)
-- On COLONGT reduce production app_pattern_ -> any_name nonempty_list(prefix_pattern)
-- On COLON reduce production app_pattern_ -> any_name nonempty_list(prefix_pattern)
-- On BY reduce production app_pattern_ -> any_name nonempty_list(prefix_pattern)
-- On AS reduce production app_pattern_ -> any_name nonempty_list(prefix_pattern)
-- On ARROW reduce production app_pattern_ -> any_name nonempty_list(prefix_pattern)

State 279:
binop_pattern_ -> binop_pattern INFIXOP3 . binop_pattern [ WHEN TYPE STAR SEMI RPAREN RBRACK RBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQEQ EQ COMMA COLONGT COLON BY AS ARROW ]
-- On UNDERSCORE shift to state 211
-- On UATOM shift to state 212
-- On QUOTED_STRING shift to state 213
-- On QQMARK shift to state 214
-- On PREFIXOP shift to state 216
-- On NAME shift to state 220
-- On LPAREN shift to state 221
-- On LBRACK shift to state 226
-- On tt_name shift to state 20
-- On simple_pattern_ shift to state 234
-- On prefix_pattern_ shift to state 235
-- On module_path shift to state 238
-- On module_name shift to state 45
-- On ml_name shift to state 263
-- On mark_location(binop_pattern_) shift to state 267
-- On binop_pattern_ shift to state 272
-- On binop_pattern shift to state 280
-- On app_pattern_ shift to state 276
-- On any_name shift to state 277

State 280:
binop_pattern_ -> binop_pattern . INFIXCONS binop_pattern [ WHEN TYPE STAR SEMI RPAREN RBRACK RBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQEQ EQ COMMA COLONGT COLON BY AS ARROW ]
binop_pattern_ -> binop_pattern . EQ binop_pattern [ WHEN TYPE STAR SEMI RPAREN RBRACK RBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQEQ EQ COMMA COLONGT COLON BY AS ARROW ]
binop_pattern_ -> binop_pattern . INFIXOP0 binop_pattern [ WHEN TYPE STAR SEMI RPAREN RBRACK RBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQEQ EQ COMMA COLONGT COLON BY AS ARROW ]
binop_pattern_ -> binop_pattern . INFIXOP1 binop_pattern [ WHEN TYPE STAR SEMI RPAREN RBRACK RBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQEQ EQ COMMA COLONGT COLON BY AS ARROW ]
binop_pattern_ -> binop_pattern . INFIXOP2 binop_pattern [ WHEN TYPE STAR SEMI RPAREN RBRACK RBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQEQ EQ COMMA COLONGT COLON BY AS ARROW ]
binop_pattern_ -> binop_pattern . INFIXOP3 binop_pattern [ WHEN TYPE STAR SEMI RPAREN RBRACK RBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQEQ EQ COMMA COLONGT COLON BY AS ARROW ]
binop_pattern_ -> binop_pattern INFIXOP3 binop_pattern . [ WHEN TYPE STAR SEMI RPAREN RBRACK RBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQEQ EQ COMMA COLONGT COLON BY AS ARROW ]
binop_pattern_ -> binop_pattern . STAR binop_pattern [ WHEN TYPE STAR SEMI RPAREN RBRACK RBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQEQ EQ COMMA COLONGT COLON BY AS ARROW ]
binop_pattern_ -> binop_pattern . INFIXOP4 binop_pattern [ WHEN TYPE STAR SEMI RPAREN RBRACK RBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQEQ EQ COMMA COLONGT COLON BY AS ARROW ]
-- On INFIXOP4 shift to state 274
-- On WHEN reduce production binop_pattern_ -> binop_pattern INFIXOP3 binop_pattern
-- On TYPE reduce production binop_pattern_ -> binop_pattern INFIXOP3 binop_pattern
-- On STAR reduce production binop_pattern_ -> binop_pattern INFIXOP3 binop_pattern
-- On SEMI reduce production binop_pattern_ -> binop_pattern INFIXOP3 binop_pattern
-- On RPAREN reduce production binop_pattern_ -> binop_pattern INFIXOP3 binop_pattern
-- On RBRACK reduce production binop_pattern_ -> binop_pattern INFIXOP3 binop_pattern
-- On RBRACE reduce production binop_pattern_ -> binop_pattern INFIXOP3 binop_pattern
-- On INFIXOP3 reduce production binop_pattern_ -> binop_pattern INFIXOP3 binop_pattern
-- On INFIXOP2 reduce production binop_pattern_ -> binop_pattern INFIXOP3 binop_pattern
-- On INFIXOP1 reduce production binop_pattern_ -> binop_pattern INFIXOP3 binop_pattern
-- On INFIXOP0 reduce production binop_pattern_ -> binop_pattern INFIXOP3 binop_pattern
-- On INFIXCONS reduce production binop_pattern_ -> binop_pattern INFIXOP3 binop_pattern
-- On EQEQ reduce production binop_pattern_ -> binop_pattern INFIXOP3 binop_pattern
-- On EQ reduce production binop_pattern_ -> binop_pattern INFIXOP3 binop_pattern
-- On COMMA reduce production binop_pattern_ -> binop_pattern INFIXOP3 binop_pattern
-- On COLONGT reduce production binop_pattern_ -> binop_pattern INFIXOP3 binop_pattern
-- On COLON reduce production binop_pattern_ -> binop_pattern INFIXOP3 binop_pattern
-- On BY reduce production binop_pattern_ -> binop_pattern INFIXOP3 binop_pattern
-- On AS reduce production binop_pattern_ -> binop_pattern INFIXOP3 binop_pattern
-- On ARROW reduce production binop_pattern_ -> binop_pattern INFIXOP3 binop_pattern

State 281:
binop_pattern_ -> binop_pattern INFIXOP2 . binop_pattern [ WHEN TYPE STAR SEMI RPAREN RBRACK RBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQEQ EQ COMMA COLONGT COLON BY AS ARROW ]
-- On UNDERSCORE shift to state 211
-- On UATOM shift to state 212
-- On QUOTED_STRING shift to state 213
-- On QQMARK shift to state 214
-- On PREFIXOP shift to state 216
-- On NAME shift to state 220
-- On LPAREN shift to state 221
-- On LBRACK shift to state 226
-- On tt_name shift to state 20
-- On simple_pattern_ shift to state 234
-- On prefix_pattern_ shift to state 235
-- On module_path shift to state 238
-- On module_name shift to state 45
-- On ml_name shift to state 263
-- On mark_location(binop_pattern_) shift to state 267
-- On binop_pattern_ shift to state 272
-- On binop_pattern shift to state 282
-- On app_pattern_ shift to state 276
-- On any_name shift to state 277

State 282:
binop_pattern_ -> binop_pattern . INFIXCONS binop_pattern [ WHEN TYPE STAR SEMI RPAREN RBRACK RBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQEQ EQ COMMA COLONGT COLON BY AS ARROW ]
binop_pattern_ -> binop_pattern . EQ binop_pattern [ WHEN TYPE STAR SEMI RPAREN RBRACK RBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQEQ EQ COMMA COLONGT COLON BY AS ARROW ]
binop_pattern_ -> binop_pattern . INFIXOP0 binop_pattern [ WHEN TYPE STAR SEMI RPAREN RBRACK RBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQEQ EQ COMMA COLONGT COLON BY AS ARROW ]
binop_pattern_ -> binop_pattern . INFIXOP1 binop_pattern [ WHEN TYPE STAR SEMI RPAREN RBRACK RBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQEQ EQ COMMA COLONGT COLON BY AS ARROW ]
binop_pattern_ -> binop_pattern . INFIXOP2 binop_pattern [ WHEN TYPE STAR SEMI RPAREN RBRACK RBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQEQ EQ COMMA COLONGT COLON BY AS ARROW ]
binop_pattern_ -> binop_pattern INFIXOP2 binop_pattern . [ WHEN TYPE STAR SEMI RPAREN RBRACK RBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQEQ EQ COMMA COLONGT COLON BY AS ARROW ]
binop_pattern_ -> binop_pattern . INFIXOP3 binop_pattern [ WHEN TYPE STAR SEMI RPAREN RBRACK RBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQEQ EQ COMMA COLONGT COLON BY AS ARROW ]
binop_pattern_ -> binop_pattern . STAR binop_pattern [ WHEN TYPE STAR SEMI RPAREN RBRACK RBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQEQ EQ COMMA COLONGT COLON BY AS ARROW ]
binop_pattern_ -> binop_pattern . INFIXOP4 binop_pattern [ WHEN TYPE STAR SEMI RPAREN RBRACK RBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQEQ EQ COMMA COLONGT COLON BY AS ARROW ]
-- On STAR shift to state 271
-- On INFIXOP4 shift to state 274
-- On INFIXOP3 shift to state 279
-- On WHEN reduce production binop_pattern_ -> binop_pattern INFIXOP2 binop_pattern
-- On TYPE reduce production binop_pattern_ -> binop_pattern INFIXOP2 binop_pattern
-- On SEMI reduce production binop_pattern_ -> binop_pattern INFIXOP2 binop_pattern
-- On RPAREN reduce production binop_pattern_ -> binop_pattern INFIXOP2 binop_pattern
-- On RBRACK reduce production binop_pattern_ -> binop_pattern INFIXOP2 binop_pattern
-- On RBRACE reduce production binop_pattern_ -> binop_pattern INFIXOP2 binop_pattern
-- On INFIXOP2 reduce production binop_pattern_ -> binop_pattern INFIXOP2 binop_pattern
-- On INFIXOP1 reduce production binop_pattern_ -> binop_pattern INFIXOP2 binop_pattern
-- On INFIXOP0 reduce production binop_pattern_ -> binop_pattern INFIXOP2 binop_pattern
-- On INFIXCONS reduce production binop_pattern_ -> binop_pattern INFIXOP2 binop_pattern
-- On EQEQ reduce production binop_pattern_ -> binop_pattern INFIXOP2 binop_pattern
-- On EQ reduce production binop_pattern_ -> binop_pattern INFIXOP2 binop_pattern
-- On COMMA reduce production binop_pattern_ -> binop_pattern INFIXOP2 binop_pattern
-- On COLONGT reduce production binop_pattern_ -> binop_pattern INFIXOP2 binop_pattern
-- On COLON reduce production binop_pattern_ -> binop_pattern INFIXOP2 binop_pattern
-- On BY reduce production binop_pattern_ -> binop_pattern INFIXOP2 binop_pattern
-- On AS reduce production binop_pattern_ -> binop_pattern INFIXOP2 binop_pattern
-- On ARROW reduce production binop_pattern_ -> binop_pattern INFIXOP2 binop_pattern

State 283:
binop_pattern_ -> binop_pattern INFIXOP1 . binop_pattern [ WHEN TYPE STAR SEMI RPAREN RBRACK RBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQEQ EQ COMMA COLONGT COLON BY AS ARROW ]
-- On UNDERSCORE shift to state 211
-- On UATOM shift to state 212
-- On QUOTED_STRING shift to state 213
-- On QQMARK shift to state 214
-- On PREFIXOP shift to state 216
-- On NAME shift to state 220
-- On LPAREN shift to state 221
-- On LBRACK shift to state 226
-- On tt_name shift to state 20
-- On simple_pattern_ shift to state 234
-- On prefix_pattern_ shift to state 235
-- On module_path shift to state 238
-- On module_name shift to state 45
-- On ml_name shift to state 263
-- On mark_location(binop_pattern_) shift to state 267
-- On binop_pattern_ shift to state 272
-- On binop_pattern shift to state 284
-- On app_pattern_ shift to state 276
-- On any_name shift to state 277

State 284:
binop_pattern_ -> binop_pattern . INFIXCONS binop_pattern [ WHEN TYPE STAR SEMI RPAREN RBRACK RBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQEQ EQ COMMA COLONGT COLON BY AS ARROW ]
binop_pattern_ -> binop_pattern . EQ binop_pattern [ WHEN TYPE STAR SEMI RPAREN RBRACK RBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQEQ EQ COMMA COLONGT COLON BY AS ARROW ]
binop_pattern_ -> binop_pattern . INFIXOP0 binop_pattern [ WHEN TYPE STAR SEMI RPAREN RBRACK RBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQEQ EQ COMMA COLONGT COLON BY AS ARROW ]
binop_pattern_ -> binop_pattern . INFIXOP1 binop_pattern [ WHEN TYPE STAR SEMI RPAREN RBRACK RBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQEQ EQ COMMA COLONGT COLON BY AS ARROW ]
binop_pattern_ -> binop_pattern INFIXOP1 binop_pattern . [ WHEN TYPE STAR SEMI RPAREN RBRACK RBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQEQ EQ COMMA COLONGT COLON BY AS ARROW ]
binop_pattern_ -> binop_pattern . INFIXOP2 binop_pattern [ WHEN TYPE STAR SEMI RPAREN RBRACK RBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQEQ EQ COMMA COLONGT COLON BY AS ARROW ]
binop_pattern_ -> binop_pattern . INFIXOP3 binop_pattern [ WHEN TYPE STAR SEMI RPAREN RBRACK RBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQEQ EQ COMMA COLONGT COLON BY AS ARROW ]
binop_pattern_ -> binop_pattern . STAR binop_pattern [ WHEN TYPE STAR SEMI RPAREN RBRACK RBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQEQ EQ COMMA COLONGT COLON BY AS ARROW ]
binop_pattern_ -> binop_pattern . INFIXOP4 binop_pattern [ WHEN TYPE STAR SEMI RPAREN RBRACK RBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQEQ EQ COMMA COLONGT COLON BY AS ARROW ]
-- On STAR shift to state 271
-- On INFIXOP4 shift to state 274
-- On INFIXOP3 shift to state 279
-- On INFIXOP2 shift to state 281
-- On INFIXOP1 shift to state 283
-- On INFIXCONS shift to state 285
-- On WHEN reduce production binop_pattern_ -> binop_pattern INFIXOP1 binop_pattern
-- On TYPE reduce production binop_pattern_ -> binop_pattern INFIXOP1 binop_pattern
-- On SEMI reduce production binop_pattern_ -> binop_pattern INFIXOP1 binop_pattern
-- On RPAREN reduce production binop_pattern_ -> binop_pattern INFIXOP1 binop_pattern
-- On RBRACK reduce production binop_pattern_ -> binop_pattern INFIXOP1 binop_pattern
-- On RBRACE reduce production binop_pattern_ -> binop_pattern INFIXOP1 binop_pattern
-- On INFIXOP0 reduce production binop_pattern_ -> binop_pattern INFIXOP1 binop_pattern
-- On EQEQ reduce production binop_pattern_ -> binop_pattern INFIXOP1 binop_pattern
-- On EQ reduce production binop_pattern_ -> binop_pattern INFIXOP1 binop_pattern
-- On COMMA reduce production binop_pattern_ -> binop_pattern INFIXOP1 binop_pattern
-- On COLONGT reduce production binop_pattern_ -> binop_pattern INFIXOP1 binop_pattern
-- On COLON reduce production binop_pattern_ -> binop_pattern INFIXOP1 binop_pattern
-- On BY reduce production binop_pattern_ -> binop_pattern INFIXOP1 binop_pattern
-- On AS reduce production binop_pattern_ -> binop_pattern INFIXOP1 binop_pattern
-- On ARROW reduce production binop_pattern_ -> binop_pattern INFIXOP1 binop_pattern

State 285:
binop_pattern_ -> binop_pattern INFIXCONS . binop_pattern [ WHEN TYPE STAR SEMI RPAREN RBRACK RBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQEQ EQ COMMA COLONGT COLON BY AS ARROW ]
-- On UNDERSCORE shift to state 211
-- On UATOM shift to state 212
-- On QUOTED_STRING shift to state 213
-- On QQMARK shift to state 214
-- On PREFIXOP shift to state 216
-- On NAME shift to state 220
-- On LPAREN shift to state 221
-- On LBRACK shift to state 226
-- On tt_name shift to state 20
-- On simple_pattern_ shift to state 234
-- On prefix_pattern_ shift to state 235
-- On module_path shift to state 238
-- On module_name shift to state 45
-- On ml_name shift to state 263
-- On mark_location(binop_pattern_) shift to state 267
-- On binop_pattern_ shift to state 272
-- On binop_pattern shift to state 286
-- On app_pattern_ shift to state 276
-- On any_name shift to state 277

State 286:
binop_pattern_ -> binop_pattern . INFIXCONS binop_pattern [ WHEN TYPE STAR SEMI RPAREN RBRACK RBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQEQ EQ COMMA COLONGT COLON BY AS ARROW ]
binop_pattern_ -> binop_pattern INFIXCONS binop_pattern . [ WHEN TYPE STAR SEMI RPAREN RBRACK RBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQEQ EQ COMMA COLONGT COLON BY AS ARROW ]
binop_pattern_ -> binop_pattern . EQ binop_pattern [ WHEN TYPE STAR SEMI RPAREN RBRACK RBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQEQ EQ COMMA COLONGT COLON BY AS ARROW ]
binop_pattern_ -> binop_pattern . INFIXOP0 binop_pattern [ WHEN TYPE STAR SEMI RPAREN RBRACK RBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQEQ EQ COMMA COLONGT COLON BY AS ARROW ]
binop_pattern_ -> binop_pattern . INFIXOP1 binop_pattern [ WHEN TYPE STAR SEMI RPAREN RBRACK RBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQEQ EQ COMMA COLONGT COLON BY AS ARROW ]
binop_pattern_ -> binop_pattern . INFIXOP2 binop_pattern [ WHEN TYPE STAR SEMI RPAREN RBRACK RBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQEQ EQ COMMA COLONGT COLON BY AS ARROW ]
binop_pattern_ -> binop_pattern . INFIXOP3 binop_pattern [ WHEN TYPE STAR SEMI RPAREN RBRACK RBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQEQ EQ COMMA COLONGT COLON BY AS ARROW ]
binop_pattern_ -> binop_pattern . STAR binop_pattern [ WHEN TYPE STAR SEMI RPAREN RBRACK RBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQEQ EQ COMMA COLONGT COLON BY AS ARROW ]
binop_pattern_ -> binop_pattern . INFIXOP4 binop_pattern [ WHEN TYPE STAR SEMI RPAREN RBRACK RBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQEQ EQ COMMA COLONGT COLON BY AS ARROW ]
-- On STAR shift to state 271
-- On INFIXOP4 shift to state 274
-- On INFIXOP3 shift to state 279
-- On INFIXOP2 shift to state 281
-- On INFIXCONS shift to state 285
-- On WHEN reduce production binop_pattern_ -> binop_pattern INFIXCONS binop_pattern
-- On TYPE reduce production binop_pattern_ -> binop_pattern INFIXCONS binop_pattern
-- On SEMI reduce production binop_pattern_ -> binop_pattern INFIXCONS binop_pattern
-- On RPAREN reduce production binop_pattern_ -> binop_pattern INFIXCONS binop_pattern
-- On RBRACK reduce production binop_pattern_ -> binop_pattern INFIXCONS binop_pattern
-- On RBRACE reduce production binop_pattern_ -> binop_pattern INFIXCONS binop_pattern
-- On INFIXOP1 reduce production binop_pattern_ -> binop_pattern INFIXCONS binop_pattern
-- On INFIXOP0 reduce production binop_pattern_ -> binop_pattern INFIXCONS binop_pattern
-- On EQEQ reduce production binop_pattern_ -> binop_pattern INFIXCONS binop_pattern
-- On EQ reduce production binop_pattern_ -> binop_pattern INFIXCONS binop_pattern
-- On COMMA reduce production binop_pattern_ -> binop_pattern INFIXCONS binop_pattern
-- On COLONGT reduce production binop_pattern_ -> binop_pattern INFIXCONS binop_pattern
-- On COLON reduce production binop_pattern_ -> binop_pattern INFIXCONS binop_pattern
-- On BY reduce production binop_pattern_ -> binop_pattern INFIXCONS binop_pattern
-- On AS reduce production binop_pattern_ -> binop_pattern INFIXCONS binop_pattern
-- On ARROW reduce production binop_pattern_ -> binop_pattern INFIXCONS binop_pattern

State 287:
binop_pattern_ -> binop_pattern INFIXOP0 . binop_pattern [ WHEN TYPE STAR SEMI RPAREN RBRACK RBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQEQ EQ COMMA COLONGT COLON BY AS ARROW ]
-- On UNDERSCORE shift to state 211
-- On UATOM shift to state 212
-- On QUOTED_STRING shift to state 213
-- On QQMARK shift to state 214
-- On PREFIXOP shift to state 216
-- On NAME shift to state 220
-- On LPAREN shift to state 221
-- On LBRACK shift to state 226
-- On tt_name shift to state 20
-- On simple_pattern_ shift to state 234
-- On prefix_pattern_ shift to state 235
-- On module_path shift to state 238
-- On module_name shift to state 45
-- On ml_name shift to state 263
-- On mark_location(binop_pattern_) shift to state 267
-- On binop_pattern_ shift to state 272
-- On binop_pattern shift to state 288
-- On app_pattern_ shift to state 276
-- On any_name shift to state 277

State 288:
binop_pattern_ -> binop_pattern . INFIXCONS binop_pattern [ WHEN TYPE STAR SEMI RPAREN RBRACK RBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQEQ EQ COMMA COLONGT COLON BY AS ARROW ]
binop_pattern_ -> binop_pattern . EQ binop_pattern [ WHEN TYPE STAR SEMI RPAREN RBRACK RBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQEQ EQ COMMA COLONGT COLON BY AS ARROW ]
binop_pattern_ -> binop_pattern . INFIXOP0 binop_pattern [ WHEN TYPE STAR SEMI RPAREN RBRACK RBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQEQ EQ COMMA COLONGT COLON BY AS ARROW ]
binop_pattern_ -> binop_pattern INFIXOP0 binop_pattern . [ WHEN TYPE STAR SEMI RPAREN RBRACK RBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQEQ EQ COMMA COLONGT COLON BY AS ARROW ]
binop_pattern_ -> binop_pattern . INFIXOP1 binop_pattern [ WHEN TYPE STAR SEMI RPAREN RBRACK RBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQEQ EQ COMMA COLONGT COLON BY AS ARROW ]
binop_pattern_ -> binop_pattern . INFIXOP2 binop_pattern [ WHEN TYPE STAR SEMI RPAREN RBRACK RBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQEQ EQ COMMA COLONGT COLON BY AS ARROW ]
binop_pattern_ -> binop_pattern . INFIXOP3 binop_pattern [ WHEN TYPE STAR SEMI RPAREN RBRACK RBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQEQ EQ COMMA COLONGT COLON BY AS ARROW ]
binop_pattern_ -> binop_pattern . STAR binop_pattern [ WHEN TYPE STAR SEMI RPAREN RBRACK RBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQEQ EQ COMMA COLONGT COLON BY AS ARROW ]
binop_pattern_ -> binop_pattern . INFIXOP4 binop_pattern [ WHEN TYPE STAR SEMI RPAREN RBRACK RBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQEQ EQ COMMA COLONGT COLON BY AS ARROW ]
-- On STAR shift to state 271
-- On INFIXOP4 shift to state 274
-- On INFIXOP3 shift to state 279
-- On INFIXOP2 shift to state 281
-- On INFIXOP1 shift to state 283
-- On INFIXCONS shift to state 285
-- On WHEN reduce production binop_pattern_ -> binop_pattern INFIXOP0 binop_pattern
-- On TYPE reduce production binop_pattern_ -> binop_pattern INFIXOP0 binop_pattern
-- On SEMI reduce production binop_pattern_ -> binop_pattern INFIXOP0 binop_pattern
-- On RPAREN reduce production binop_pattern_ -> binop_pattern INFIXOP0 binop_pattern
-- On RBRACK reduce production binop_pattern_ -> binop_pattern INFIXOP0 binop_pattern
-- On RBRACE reduce production binop_pattern_ -> binop_pattern INFIXOP0 binop_pattern
-- On INFIXOP0 reduce production binop_pattern_ -> binop_pattern INFIXOP0 binop_pattern
-- On EQEQ reduce production binop_pattern_ -> binop_pattern INFIXOP0 binop_pattern
-- On EQ reduce production binop_pattern_ -> binop_pattern INFIXOP0 binop_pattern
-- On COMMA reduce production binop_pattern_ -> binop_pattern INFIXOP0 binop_pattern
-- On COLONGT reduce production binop_pattern_ -> binop_pattern INFIXOP0 binop_pattern
-- On COLON reduce production binop_pattern_ -> binop_pattern INFIXOP0 binop_pattern
-- On BY reduce production binop_pattern_ -> binop_pattern INFIXOP0 binop_pattern
-- On AS reduce production binop_pattern_ -> binop_pattern INFIXOP0 binop_pattern
-- On ARROW reduce production binop_pattern_ -> binop_pattern INFIXOP0 binop_pattern

State 289:
pattern_ -> binop_pattern EQEQ . binop_pattern [ WHEN SEMI RPAREN RBRACK RBRACE COMMA ARROW ]
pattern_ -> binop_pattern EQEQ . binop_pattern COLON pattern [ WHEN SEMI RPAREN RBRACK RBRACE COMMA ARROW ]
pattern_ -> binop_pattern EQEQ . binop_pattern BY QQMARK [ WHEN SEMI RPAREN RBRACK RBRACE COMMA ARROW ]
pattern_ -> binop_pattern EQEQ . binop_pattern COLON binop_pattern BY QQMARK [ WHEN SEMI RPAREN RBRACK RBRACE COMMA ARROW ]
-- On UNDERSCORE shift to state 211
-- On UATOM shift to state 212
-- On QUOTED_STRING shift to state 213
-- On QQMARK shift to state 214
-- On PREFIXOP shift to state 216
-- On NAME shift to state 220
-- On LPAREN shift to state 221
-- On LBRACK shift to state 226
-- On tt_name shift to state 20
-- On simple_pattern_ shift to state 234
-- On prefix_pattern_ shift to state 235
-- On module_path shift to state 238
-- On module_name shift to state 45
-- On ml_name shift to state 263
-- On mark_location(binop_pattern_) shift to state 267
-- On binop_pattern_ shift to state 272
-- On binop_pattern shift to state 290
-- On app_pattern_ shift to state 276
-- On any_name shift to state 277

State 290:
binop_pattern_ -> binop_pattern . INFIXCONS binop_pattern [ WHEN STAR SEMI RPAREN RBRACK RBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQ COMMA COLON BY ARROW ]
binop_pattern_ -> binop_pattern . EQ binop_pattern [ WHEN STAR SEMI RPAREN RBRACK RBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQ COMMA COLON BY ARROW ]
binop_pattern_ -> binop_pattern . INFIXOP0 binop_pattern [ WHEN STAR SEMI RPAREN RBRACK RBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQ COMMA COLON BY ARROW ]
binop_pattern_ -> binop_pattern . INFIXOP1 binop_pattern [ WHEN STAR SEMI RPAREN RBRACK RBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQ COMMA COLON BY ARROW ]
binop_pattern_ -> binop_pattern . INFIXOP2 binop_pattern [ WHEN STAR SEMI RPAREN RBRACK RBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQ COMMA COLON BY ARROW ]
binop_pattern_ -> binop_pattern . INFIXOP3 binop_pattern [ WHEN STAR SEMI RPAREN RBRACK RBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQ COMMA COLON BY ARROW ]
binop_pattern_ -> binop_pattern . STAR binop_pattern [ WHEN STAR SEMI RPAREN RBRACK RBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQ COMMA COLON BY ARROW ]
binop_pattern_ -> binop_pattern . INFIXOP4 binop_pattern [ WHEN STAR SEMI RPAREN RBRACK RBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQ COMMA COLON BY ARROW ]
pattern_ -> binop_pattern EQEQ binop_pattern . [ WHEN SEMI RPAREN RBRACK RBRACE COMMA ARROW ]
pattern_ -> binop_pattern EQEQ binop_pattern . COLON pattern [ WHEN SEMI RPAREN RBRACK RBRACE COMMA ARROW ]
pattern_ -> binop_pattern EQEQ binop_pattern . BY QQMARK [ WHEN SEMI RPAREN RBRACK RBRACE COMMA ARROW ]
pattern_ -> binop_pattern EQEQ binop_pattern . COLON binop_pattern BY QQMARK [ WHEN SEMI RPAREN RBRACK RBRACE COMMA ARROW ]
-- On STAR shift to state 271
-- On INFIXOP4 shift to state 274
-- On INFIXOP3 shift to state 279
-- On INFIXOP2 shift to state 281
-- On INFIXOP1 shift to state 283
-- On INFIXOP0 shift to state 287
-- On INFIXCONS shift to state 285
-- On EQ shift to state 291
-- On COLON shift to state 293
-- On BY shift to state 305
-- On WHEN reduce production pattern_ -> binop_pattern EQEQ binop_pattern
-- On SEMI reduce production pattern_ -> binop_pattern EQEQ binop_pattern
-- On RPAREN reduce production pattern_ -> binop_pattern EQEQ binop_pattern
-- On RBRACK reduce production pattern_ -> binop_pattern EQEQ binop_pattern
-- On RBRACE reduce production pattern_ -> binop_pattern EQEQ binop_pattern
-- On COMMA reduce production pattern_ -> binop_pattern EQEQ binop_pattern
-- On ARROW reduce production pattern_ -> binop_pattern EQEQ binop_pattern

State 291:
binop_pattern_ -> binop_pattern EQ . binop_pattern [ WHEN TYPE STAR SEMI RPAREN RBRACK RBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQEQ EQ COMMA COLONGT COLON BY AS ARROW ]
-- On UNDERSCORE shift to state 211
-- On UATOM shift to state 212
-- On QUOTED_STRING shift to state 213
-- On QQMARK shift to state 214
-- On PREFIXOP shift to state 216
-- On NAME shift to state 220
-- On LPAREN shift to state 221
-- On LBRACK shift to state 226
-- On tt_name shift to state 20
-- On simple_pattern_ shift to state 234
-- On prefix_pattern_ shift to state 235
-- On module_path shift to state 238
-- On module_name shift to state 45
-- On ml_name shift to state 263
-- On mark_location(binop_pattern_) shift to state 267
-- On binop_pattern_ shift to state 272
-- On binop_pattern shift to state 292
-- On app_pattern_ shift to state 276
-- On any_name shift to state 277

State 292:
binop_pattern_ -> binop_pattern . INFIXCONS binop_pattern [ WHEN TYPE STAR SEMI RPAREN RBRACK RBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQEQ EQ COMMA COLONGT COLON BY AS ARROW ]
binop_pattern_ -> binop_pattern . EQ binop_pattern [ WHEN TYPE STAR SEMI RPAREN RBRACK RBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQEQ EQ COMMA COLONGT COLON BY AS ARROW ]
binop_pattern_ -> binop_pattern EQ binop_pattern . [ WHEN TYPE STAR SEMI RPAREN RBRACK RBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQEQ EQ COMMA COLONGT COLON BY AS ARROW ]
binop_pattern_ -> binop_pattern . INFIXOP0 binop_pattern [ WHEN TYPE STAR SEMI RPAREN RBRACK RBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQEQ EQ COMMA COLONGT COLON BY AS ARROW ]
binop_pattern_ -> binop_pattern . INFIXOP1 binop_pattern [ WHEN TYPE STAR SEMI RPAREN RBRACK RBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQEQ EQ COMMA COLONGT COLON BY AS ARROW ]
binop_pattern_ -> binop_pattern . INFIXOP2 binop_pattern [ WHEN TYPE STAR SEMI RPAREN RBRACK RBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQEQ EQ COMMA COLONGT COLON BY AS ARROW ]
binop_pattern_ -> binop_pattern . INFIXOP3 binop_pattern [ WHEN TYPE STAR SEMI RPAREN RBRACK RBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQEQ EQ COMMA COLONGT COLON BY AS ARROW ]
binop_pattern_ -> binop_pattern . STAR binop_pattern [ WHEN TYPE STAR SEMI RPAREN RBRACK RBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQEQ EQ COMMA COLONGT COLON BY AS ARROW ]
binop_pattern_ -> binop_pattern . INFIXOP4 binop_pattern [ WHEN TYPE STAR SEMI RPAREN RBRACK RBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQEQ EQ COMMA COLONGT COLON BY AS ARROW ]
-- On STAR shift to state 271
-- On INFIXOP4 shift to state 274
-- On INFIXOP3 shift to state 279
-- On INFIXOP2 shift to state 281
-- On INFIXOP1 shift to state 283
-- On INFIXCONS shift to state 285
-- On WHEN reduce production binop_pattern_ -> binop_pattern EQ binop_pattern
-- On TYPE reduce production binop_pattern_ -> binop_pattern EQ binop_pattern
-- On SEMI reduce production binop_pattern_ -> binop_pattern EQ binop_pattern
-- On RPAREN reduce production binop_pattern_ -> binop_pattern EQ binop_pattern
-- On RBRACK reduce production binop_pattern_ -> binop_pattern EQ binop_pattern
-- On RBRACE reduce production binop_pattern_ -> binop_pattern EQ binop_pattern
-- On INFIXOP0 reduce production binop_pattern_ -> binop_pattern EQ binop_pattern
-- On EQEQ reduce production binop_pattern_ -> binop_pattern EQ binop_pattern
-- On EQ reduce production binop_pattern_ -> binop_pattern EQ binop_pattern
-- On COMMA reduce production binop_pattern_ -> binop_pattern EQ binop_pattern
-- On COLONGT reduce production binop_pattern_ -> binop_pattern EQ binop_pattern
-- On COLON reduce production binop_pattern_ -> binop_pattern EQ binop_pattern
-- On BY reduce production binop_pattern_ -> binop_pattern EQ binop_pattern
-- On AS reduce production binop_pattern_ -> binop_pattern EQ binop_pattern
-- On ARROW reduce production binop_pattern_ -> binop_pattern EQ binop_pattern

State 293:
pattern_ -> binop_pattern EQEQ binop_pattern COLON . pattern [ WHEN SEMI RPAREN RBRACK RBRACE COMMA ARROW ]
pattern_ -> binop_pattern EQEQ binop_pattern COLON . binop_pattern BY QQMARK [ WHEN SEMI RPAREN RBRACK RBRACE COMMA ARROW ]
-- On UNDERSCORE shift to state 211
-- On UATOM shift to state 212
-- On QUOTED_STRING shift to state 213
-- On QQMARK shift to state 218
-- On PREFIXOP shift to state 216
-- On NAME shift to state 220
-- On LPAREN shift to state 221
-- On LBRACK shift to state 226
-- On LBRACE shift to state 227
-- On tt_name shift to state 20
-- On tt_maybe_typed_binder shift to state 233
-- On simple_pattern_ shift to state 234
-- On prefix_pattern_ shift to state 235
-- On pattern_ shift to state 236
-- On pattern shift to state 294
-- On module_path shift to state 238
-- On module_name shift to state 45
-- On ml_name shift to state 263
-- On mark_location(pattern_) shift to state 266
-- On mark_location(binop_pattern_) shift to state 267
-- On binop_pattern_ shift to state 268
-- On binop_pattern shift to state 295
-- On app_pattern_ shift to state 276
-- On any_name shift to state 277

State 294:
pattern_ -> binop_pattern EQEQ binop_pattern COLON pattern . [ WHEN SEMI RPAREN RBRACK RBRACE COMMA ARROW ]
-- On WHEN reduce production pattern_ -> binop_pattern EQEQ binop_pattern COLON pattern
-- On SEMI reduce production pattern_ -> binop_pattern EQEQ binop_pattern COLON pattern
-- On RPAREN reduce production pattern_ -> binop_pattern EQEQ binop_pattern COLON pattern
-- On RBRACK reduce production pattern_ -> binop_pattern EQEQ binop_pattern COLON pattern
-- On RBRACE reduce production pattern_ -> binop_pattern EQEQ binop_pattern COLON pattern
-- On COMMA reduce production pattern_ -> binop_pattern EQEQ binop_pattern COLON pattern
-- On ARROW reduce production pattern_ -> binop_pattern EQEQ binop_pattern COLON pattern

State 295:
binop_pattern_ -> binop_pattern . INFIXCONS binop_pattern [ WHEN TYPE STAR SEMI RPAREN RBRACK RBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQEQ EQ COMMA COLONGT COLON BY AS ARROW ]
binop_pattern_ -> binop_pattern . EQ binop_pattern [ WHEN TYPE STAR SEMI RPAREN RBRACK RBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQEQ EQ COMMA COLONGT COLON BY AS ARROW ]
binop_pattern_ -> binop_pattern . INFIXOP0 binop_pattern [ WHEN TYPE STAR SEMI RPAREN RBRACK RBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQEQ EQ COMMA COLONGT COLON BY AS ARROW ]
binop_pattern_ -> binop_pattern . INFIXOP1 binop_pattern [ WHEN TYPE STAR SEMI RPAREN RBRACK RBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQEQ EQ COMMA COLONGT COLON BY AS ARROW ]
binop_pattern_ -> binop_pattern . INFIXOP2 binop_pattern [ WHEN TYPE STAR SEMI RPAREN RBRACK RBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQEQ EQ COMMA COLONGT COLON BY AS ARROW ]
binop_pattern_ -> binop_pattern . INFIXOP3 binop_pattern [ WHEN TYPE STAR SEMI RPAREN RBRACK RBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQEQ EQ COMMA COLONGT COLON BY AS ARROW ]
binop_pattern_ -> binop_pattern . STAR binop_pattern [ WHEN TYPE STAR SEMI RPAREN RBRACK RBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQEQ EQ COMMA COLONGT COLON BY AS ARROW ]
binop_pattern_ -> binop_pattern . INFIXOP4 binop_pattern [ WHEN TYPE STAR SEMI RPAREN RBRACK RBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQEQ EQ COMMA COLONGT COLON BY AS ARROW ]
pattern_ -> binop_pattern . AS binop_pattern [ WHEN SEMI RPAREN RBRACK RBRACE COMMA ARROW ]
pattern_ -> binop_pattern . TYPE [ WHEN SEMI RPAREN RBRACK RBRACE COMMA ARROW ]
pattern_ -> binop_pattern . COLON binop_pattern [ WHEN SEMI RPAREN RBRACK RBRACE COMMA ARROW ]
pattern_ -> binop_pattern . COLONGT prod_mlty [ WHEN SEMI RPAREN RBRACK RBRACE COMMA ARROW ]
pattern_ -> binop_pattern . EQEQ binop_pattern [ WHEN SEMI RPAREN RBRACK RBRACE COMMA ARROW ]
pattern_ -> binop_pattern . EQEQ binop_pattern COLON pattern [ WHEN SEMI RPAREN RBRACK RBRACE COMMA ARROW ]
pattern_ -> binop_pattern . EQEQ binop_pattern BY QQMARK [ WHEN SEMI RPAREN RBRACK RBRACE COMMA ARROW ]
pattern_ -> binop_pattern . EQEQ binop_pattern COLON binop_pattern BY QQMARK [ WHEN SEMI RPAREN RBRACK RBRACE COMMA ARROW ]
pattern_ -> binop_pattern EQEQ binop_pattern COLON binop_pattern . BY QQMARK [ WHEN SEMI RPAREN RBRACK RBRACE COMMA ARROW ]
-- On TYPE shift to state 270
-- On STAR shift to state 271
-- On INFIXOP4 shift to state 274
-- On INFIXOP3 shift to state 279
-- On INFIXOP2 shift to state 281
-- On INFIXOP1 shift to state 283
-- On INFIXOP0 shift to state 287
-- On INFIXCONS shift to state 285
-- On EQEQ shift to state 289
-- On EQ shift to state 291
-- On COLONGT shift to state 296
-- On COLON shift to state 299
-- On BY shift to state 301
-- On AS shift to state 303

State 296:
pattern_ -> binop_pattern COLONGT . prod_mlty [ WHEN SEMI RPAREN RBRACK RBRACE COMMA ARROW ]
-- On UNDERSCORE shift to state 55
-- On REF shift to state 56
-- On NAME shift to state 57
-- On MLUNIT shift to state 58
-- On MLSTRING shift to state 59
-- On MLJUDGEMENT shift to state 60
-- On MLDERIVATION shift to state 61
-- On MLBOUNDARY shift to state 62
-- On LPAREN shift to state 63
-- On simple_mlty_ shift to state 82
-- On separated_nonempty_list(STAR,app_mlty) shift to state 83
-- On prod_mlty_ shift to state 297
-- On prod_mlty shift to state 298
-- On module_path shift to state 87
-- On module_name shift to state 45
-- On ml_name shift to state 102
-- On mark_location(prod_mlty_) shift to state 104
-- On mark_location(app_mlty_) shift to state 106
-- On app_mlty_ shift to state 107
-- On app_mlty shift to state 108

State 297:
mark_location(prod_mlty_) -> prod_mlty_ . [ WITH WHEN VERBOSITY SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN MODULE MLTYPE LET INCLUDE EXTERNAL EXCEPTION EOF END COMMA ARROW ]
-- On WITH reduce production mark_location(prod_mlty_) -> prod_mlty_
-- On WHEN reduce production mark_location(prod_mlty_) -> prod_mlty_
-- On VERBOSITY reduce production mark_location(prod_mlty_) -> prod_mlty_
-- On SEMISEMI reduce production mark_location(prod_mlty_) -> prod_mlty_
-- On SEMI reduce production mark_location(prod_mlty_) -> prod_mlty_
-- On RULE reduce production mark_location(prod_mlty_) -> prod_mlty_
-- On RPAREN reduce production mark_location(prod_mlty_) -> prod_mlty_
-- On REQUIRE reduce production mark_location(prod_mlty_) -> prod_mlty_
-- On RBRACK reduce production mark_location(prod_mlty_) -> prod_mlty_
-- On RBRACE reduce production mark_location(prod_mlty_) -> prod_mlty_
-- On OPERATION reduce production mark_location(prod_mlty_) -> prod_mlty_
-- On OPEN reduce production mark_location(prod_mlty_) -> prod_mlty_
-- On MODULE reduce production mark_location(prod_mlty_) -> prod_mlty_
-- On MLTYPE reduce production mark_location(prod_mlty_) -> prod_mlty_
-- On LET reduce production mark_location(prod_mlty_) -> prod_mlty_
-- On INCLUDE reduce production mark_location(prod_mlty_) -> prod_mlty_
-- On EXTERNAL reduce production mark_location(prod_mlty_) -> prod_mlty_
-- On EXCEPTION reduce production mark_location(prod_mlty_) -> prod_mlty_
-- On EOF reduce production mark_location(prod_mlty_) -> prod_mlty_
-- On END reduce production mark_location(prod_mlty_) -> prod_mlty_
-- On COMMA reduce production mark_location(prod_mlty_) -> prod_mlty_
-- On ARROW reduce production mark_location(prod_mlty_) -> prod_mlty_

State 298:
pattern_ -> binop_pattern COLONGT prod_mlty . [ WHEN SEMI RPAREN RBRACK RBRACE COMMA ARROW ]
-- On WHEN reduce production pattern_ -> binop_pattern COLONGT prod_mlty
-- On SEMI reduce production pattern_ -> binop_pattern COLONGT prod_mlty
-- On RPAREN reduce production pattern_ -> binop_pattern COLONGT prod_mlty
-- On RBRACK reduce production pattern_ -> binop_pattern COLONGT prod_mlty
-- On RBRACE reduce production pattern_ -> binop_pattern COLONGT prod_mlty
-- On COMMA reduce production pattern_ -> binop_pattern COLONGT prod_mlty
-- On ARROW reduce production pattern_ -> binop_pattern COLONGT prod_mlty

State 299:
pattern_ -> binop_pattern COLON . binop_pattern [ WHEN SEMI RPAREN RBRACK RBRACE COMMA ARROW ]
-- On UNDERSCORE shift to state 211
-- On UATOM shift to state 212
-- On QUOTED_STRING shift to state 213
-- On QQMARK shift to state 214
-- On PREFIXOP shift to state 216
-- On NAME shift to state 220
-- On LPAREN shift to state 221
-- On LBRACK shift to state 226
-- On tt_name shift to state 20
-- On simple_pattern_ shift to state 234
-- On prefix_pattern_ shift to state 235
-- On module_path shift to state 238
-- On module_name shift to state 45
-- On ml_name shift to state 263
-- On mark_location(binop_pattern_) shift to state 267
-- On binop_pattern_ shift to state 272
-- On binop_pattern shift to state 300
-- On app_pattern_ shift to state 276
-- On any_name shift to state 277

State 300:
binop_pattern_ -> binop_pattern . INFIXCONS binop_pattern [ WHEN STAR SEMI RPAREN RBRACK RBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQ COMMA ARROW ]
binop_pattern_ -> binop_pattern . EQ binop_pattern [ WHEN STAR SEMI RPAREN RBRACK RBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQ COMMA ARROW ]
binop_pattern_ -> binop_pattern . INFIXOP0 binop_pattern [ WHEN STAR SEMI RPAREN RBRACK RBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQ COMMA ARROW ]
binop_pattern_ -> binop_pattern . INFIXOP1 binop_pattern [ WHEN STAR SEMI RPAREN RBRACK RBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQ COMMA ARROW ]
binop_pattern_ -> binop_pattern . INFIXOP2 binop_pattern [ WHEN STAR SEMI RPAREN RBRACK RBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQ COMMA ARROW ]
binop_pattern_ -> binop_pattern . INFIXOP3 binop_pattern [ WHEN STAR SEMI RPAREN RBRACK RBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQ COMMA ARROW ]
binop_pattern_ -> binop_pattern . STAR binop_pattern [ WHEN STAR SEMI RPAREN RBRACK RBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQ COMMA ARROW ]
binop_pattern_ -> binop_pattern . INFIXOP4 binop_pattern [ WHEN STAR SEMI RPAREN RBRACK RBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQ COMMA ARROW ]
pattern_ -> binop_pattern COLON binop_pattern . [ WHEN SEMI RPAREN RBRACK RBRACE COMMA ARROW ]
-- On STAR shift to state 271
-- On INFIXOP4 shift to state 274
-- On INFIXOP3 shift to state 279
-- On INFIXOP2 shift to state 281
-- On INFIXOP1 shift to state 283
-- On INFIXOP0 shift to state 287
-- On INFIXCONS shift to state 285
-- On EQ shift to state 291
-- On WHEN reduce production pattern_ -> binop_pattern COLON binop_pattern
-- On SEMI reduce production pattern_ -> binop_pattern COLON binop_pattern
-- On RPAREN reduce production pattern_ -> binop_pattern COLON binop_pattern
-- On RBRACK reduce production pattern_ -> binop_pattern COLON binop_pattern
-- On RBRACE reduce production pattern_ -> binop_pattern COLON binop_pattern
-- On COMMA reduce production pattern_ -> binop_pattern COLON binop_pattern
-- On ARROW reduce production pattern_ -> binop_pattern COLON binop_pattern

State 301:
pattern_ -> binop_pattern EQEQ binop_pattern COLON binop_pattern BY . QQMARK [ WHEN SEMI RPAREN RBRACK RBRACE COMMA ARROW ]
-- On QQMARK shift to state 302

State 302:
pattern_ -> binop_pattern EQEQ binop_pattern COLON binop_pattern BY QQMARK . [ WHEN SEMI RPAREN RBRACK RBRACE COMMA ARROW ]
-- On WHEN reduce production pattern_ -> binop_pattern EQEQ binop_pattern COLON binop_pattern BY QQMARK
-- On SEMI reduce production pattern_ -> binop_pattern EQEQ binop_pattern COLON binop_pattern BY QQMARK
-- On RPAREN reduce production pattern_ -> binop_pattern EQEQ binop_pattern COLON binop_pattern BY QQMARK
-- On RBRACK reduce production pattern_ -> binop_pattern EQEQ binop_pattern COLON binop_pattern BY QQMARK
-- On RBRACE reduce production pattern_ -> binop_pattern EQEQ binop_pattern COLON binop_pattern BY QQMARK
-- On COMMA reduce production pattern_ -> binop_pattern EQEQ binop_pattern COLON binop_pattern BY QQMARK
-- On ARROW reduce production pattern_ -> binop_pattern EQEQ binop_pattern COLON binop_pattern BY QQMARK

State 303:
pattern_ -> binop_pattern AS . binop_pattern [ WHEN SEMI RPAREN RBRACK RBRACE COMMA ARROW ]
-- On UNDERSCORE shift to state 211
-- On UATOM shift to state 212
-- On QUOTED_STRING shift to state 213
-- On QQMARK shift to state 214
-- On PREFIXOP shift to state 216
-- On NAME shift to state 220
-- On LPAREN shift to state 221
-- On LBRACK shift to state 226
-- On tt_name shift to state 20
-- On simple_pattern_ shift to state 234
-- On prefix_pattern_ shift to state 235
-- On module_path shift to state 238
-- On module_name shift to state 45
-- On ml_name shift to state 263
-- On mark_location(binop_pattern_) shift to state 267
-- On binop_pattern_ shift to state 272
-- On binop_pattern shift to state 304
-- On app_pattern_ shift to state 276
-- On any_name shift to state 277

State 304:
binop_pattern_ -> binop_pattern . INFIXCONS binop_pattern [ WHEN STAR SEMI RPAREN RBRACK RBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQ COMMA ARROW ]
binop_pattern_ -> binop_pattern . EQ binop_pattern [ WHEN STAR SEMI RPAREN RBRACK RBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQ COMMA ARROW ]
binop_pattern_ -> binop_pattern . INFIXOP0 binop_pattern [ WHEN STAR SEMI RPAREN RBRACK RBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQ COMMA ARROW ]
binop_pattern_ -> binop_pattern . INFIXOP1 binop_pattern [ WHEN STAR SEMI RPAREN RBRACK RBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQ COMMA ARROW ]
binop_pattern_ -> binop_pattern . INFIXOP2 binop_pattern [ WHEN STAR SEMI RPAREN RBRACK RBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQ COMMA ARROW ]
binop_pattern_ -> binop_pattern . INFIXOP3 binop_pattern [ WHEN STAR SEMI RPAREN RBRACK RBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQ COMMA ARROW ]
binop_pattern_ -> binop_pattern . STAR binop_pattern [ WHEN STAR SEMI RPAREN RBRACK RBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQ COMMA ARROW ]
binop_pattern_ -> binop_pattern . INFIXOP4 binop_pattern [ WHEN STAR SEMI RPAREN RBRACK RBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQ COMMA ARROW ]
pattern_ -> binop_pattern AS binop_pattern . [ WHEN SEMI RPAREN RBRACK RBRACE COMMA ARROW ]
-- On STAR shift to state 271
-- On INFIXOP4 shift to state 274
-- On INFIXOP3 shift to state 279
-- On INFIXOP2 shift to state 281
-- On INFIXOP1 shift to state 283
-- On INFIXOP0 shift to state 287
-- On INFIXCONS shift to state 285
-- On EQ shift to state 291
-- On WHEN reduce production pattern_ -> binop_pattern AS binop_pattern
-- On SEMI reduce production pattern_ -> binop_pattern AS binop_pattern
-- On RPAREN reduce production pattern_ -> binop_pattern AS binop_pattern
-- On RBRACK reduce production pattern_ -> binop_pattern AS binop_pattern
-- On RBRACE reduce production pattern_ -> binop_pattern AS binop_pattern
-- On COMMA reduce production pattern_ -> binop_pattern AS binop_pattern
-- On ARROW reduce production pattern_ -> binop_pattern AS binop_pattern

State 305:
pattern_ -> binop_pattern EQEQ binop_pattern BY . QQMARK [ WHEN SEMI RPAREN RBRACK RBRACE COMMA ARROW ]
-- On QQMARK shift to state 306

State 306:
pattern_ -> binop_pattern EQEQ binop_pattern BY QQMARK . [ WHEN SEMI RPAREN RBRACK RBRACE COMMA ARROW ]
-- On WHEN reduce production pattern_ -> binop_pattern EQEQ binop_pattern BY QQMARK
-- On SEMI reduce production pattern_ -> binop_pattern EQEQ binop_pattern BY QQMARK
-- On RPAREN reduce production pattern_ -> binop_pattern EQEQ binop_pattern BY QQMARK
-- On RBRACK reduce production pattern_ -> binop_pattern EQEQ binop_pattern BY QQMARK
-- On RBRACE reduce production pattern_ -> binop_pattern EQEQ binop_pattern BY QQMARK
-- On COMMA reduce production pattern_ -> binop_pattern EQEQ binop_pattern BY QQMARK
-- On ARROW reduce production pattern_ -> binop_pattern EQEQ binop_pattern BY QQMARK

State 307:
tt_maybe_typed_binder -> LBRACE nonempty_list(opt_name(tt_name)) COLON pattern . RBRACE [ UNDERSCORE UATOM QUOTED_STRING QQMARK PREFIXOP NAME LPAREN LBRACK LBRACE ]
-- On RBRACE shift to state 308

State 308:
tt_maybe_typed_binder -> LBRACE nonempty_list(opt_name(tt_name)) COLON pattern RBRACE . [ UNDERSCORE UATOM QUOTED_STRING QQMARK PREFIXOP NAME LPAREN LBRACK LBRACE ]
-- On UNDERSCORE reduce production tt_maybe_typed_binder -> LBRACE nonempty_list(opt_name(tt_name)) COLON pattern RBRACE
-- On UATOM reduce production tt_maybe_typed_binder -> LBRACE nonempty_list(opt_name(tt_name)) COLON pattern RBRACE
-- On QUOTED_STRING reduce production tt_maybe_typed_binder -> LBRACE nonempty_list(opt_name(tt_name)) COLON pattern RBRACE
-- On QQMARK reduce production tt_maybe_typed_binder -> LBRACE nonempty_list(opt_name(tt_name)) COLON pattern RBRACE
-- On PREFIXOP reduce production tt_maybe_typed_binder -> LBRACE nonempty_list(opt_name(tt_name)) COLON pattern RBRACE
-- On NAME reduce production tt_maybe_typed_binder -> LBRACE nonempty_list(opt_name(tt_name)) COLON pattern RBRACE
-- On LPAREN reduce production tt_maybe_typed_binder -> LBRACE nonempty_list(opt_name(tt_name)) COLON pattern RBRACE
-- On LBRACK reduce production tt_maybe_typed_binder -> LBRACE nonempty_list(opt_name(tt_name)) COLON pattern RBRACE
-- On LBRACE reduce production tt_maybe_typed_binder -> LBRACE nonempty_list(opt_name(tt_name)) COLON pattern RBRACE

State 309:
loption(separated_nonempty_list(SEMI,pattern)) -> separated_nonempty_list(SEMI,pattern) . [ RBRACK ]
-- On RBRACK reduce production loption(separated_nonempty_list(SEMI,pattern)) -> separated_nonempty_list(SEMI,pattern)

State 310:
separated_nonempty_list(SEMI,pattern) -> pattern . [ RBRACK ]
separated_nonempty_list(SEMI,pattern) -> pattern . SEMI separated_nonempty_list(SEMI,pattern) [ RBRACK ]
-- On SEMI shift to state 311
-- On RBRACK reduce production separated_nonempty_list(SEMI,pattern) -> pattern

State 311:
separated_nonempty_list(SEMI,pattern) -> pattern SEMI . separated_nonempty_list(SEMI,pattern) [ RBRACK ]
-- On UNDERSCORE shift to state 211
-- On UATOM shift to state 212
-- On QUOTED_STRING shift to state 213
-- On QQMARK shift to state 218
-- On PREFIXOP shift to state 216
-- On NAME shift to state 220
-- On LPAREN shift to state 221
-- On LBRACK shift to state 226
-- On LBRACE shift to state 227
-- On tt_name shift to state 20
-- On tt_maybe_typed_binder shift to state 233
-- On simple_pattern_ shift to state 234
-- On separated_nonempty_list(SEMI,pattern) shift to state 312
-- On prefix_pattern_ shift to state 235
-- On pattern_ shift to state 236
-- On pattern shift to state 310
-- On module_path shift to state 238
-- On module_name shift to state 45
-- On ml_name shift to state 263
-- On mark_location(pattern_) shift to state 266
-- On mark_location(binop_pattern_) shift to state 267
-- On binop_pattern_ shift to state 268
-- On binop_pattern shift to state 269
-- On app_pattern_ shift to state 276
-- On any_name shift to state 277

State 312:
separated_nonempty_list(SEMI,pattern) -> pattern SEMI separated_nonempty_list(SEMI,pattern) . [ RBRACK ]
-- On RBRACK reduce production separated_nonempty_list(SEMI,pattern) -> pattern SEMI separated_nonempty_list(SEMI,pattern)

State 313:
simple_pattern_ -> LBRACK loption(separated_nonempty_list(SEMI,pattern)) . RBRACK [ WHEN UNDERSCORE UATOM TYPE STAR SEMI RPAREN RBRACK RBRACE QUOTED_STRING QQMARK PREFIXOP NAME LPAREN LBRACK INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQEQ EQ COMMA COLONGT COLON BY AS ARROW ]
-- On RBRACK shift to state 314

State 314:
simple_pattern_ -> LBRACK loption(separated_nonempty_list(SEMI,pattern)) RBRACK . [ WHEN UNDERSCORE UATOM TYPE STAR SEMI RPAREN RBRACK RBRACE QUOTED_STRING QQMARK PREFIXOP NAME LPAREN LBRACK INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQEQ EQ COMMA COLONGT COLON BY AS ARROW ]
-- On WHEN reduce production simple_pattern_ -> LBRACK loption(separated_nonempty_list(SEMI,pattern)) RBRACK
-- On UNDERSCORE reduce production simple_pattern_ -> LBRACK loption(separated_nonempty_list(SEMI,pattern)) RBRACK
-- On UATOM reduce production simple_pattern_ -> LBRACK loption(separated_nonempty_list(SEMI,pattern)) RBRACK
-- On TYPE reduce production simple_pattern_ -> LBRACK loption(separated_nonempty_list(SEMI,pattern)) RBRACK
-- On STAR reduce production simple_pattern_ -> LBRACK loption(separated_nonempty_list(SEMI,pattern)) RBRACK
-- On SEMI reduce production simple_pattern_ -> LBRACK loption(separated_nonempty_list(SEMI,pattern)) RBRACK
-- On RPAREN reduce production simple_pattern_ -> LBRACK loption(separated_nonempty_list(SEMI,pattern)) RBRACK
-- On RBRACK reduce production simple_pattern_ -> LBRACK loption(separated_nonempty_list(SEMI,pattern)) RBRACK
-- On RBRACE reduce production simple_pattern_ -> LBRACK loption(separated_nonempty_list(SEMI,pattern)) RBRACK
-- On QUOTED_STRING reduce production simple_pattern_ -> LBRACK loption(separated_nonempty_list(SEMI,pattern)) RBRACK
-- On QQMARK reduce production simple_pattern_ -> LBRACK loption(separated_nonempty_list(SEMI,pattern)) RBRACK
-- On PREFIXOP reduce production simple_pattern_ -> LBRACK loption(separated_nonempty_list(SEMI,pattern)) RBRACK
-- On NAME reduce production simple_pattern_ -> LBRACK loption(separated_nonempty_list(SEMI,pattern)) RBRACK
-- On LPAREN reduce production simple_pattern_ -> LBRACK loption(separated_nonempty_list(SEMI,pattern)) RBRACK
-- On LBRACK reduce production simple_pattern_ -> LBRACK loption(separated_nonempty_list(SEMI,pattern)) RBRACK
-- On INFIXOP4 reduce production simple_pattern_ -> LBRACK loption(separated_nonempty_list(SEMI,pattern)) RBRACK
-- On INFIXOP3 reduce production simple_pattern_ -> LBRACK loption(separated_nonempty_list(SEMI,pattern)) RBRACK
-- On INFIXOP2 reduce production simple_pattern_ -> LBRACK loption(separated_nonempty_list(SEMI,pattern)) RBRACK
-- On INFIXOP1 reduce production simple_pattern_ -> LBRACK loption(separated_nonempty_list(SEMI,pattern)) RBRACK
-- On INFIXOP0 reduce production simple_pattern_ -> LBRACK loption(separated_nonempty_list(SEMI,pattern)) RBRACK
-- On INFIXCONS reduce production simple_pattern_ -> LBRACK loption(separated_nonempty_list(SEMI,pattern)) RBRACK
-- On EQEQ reduce production simple_pattern_ -> LBRACK loption(separated_nonempty_list(SEMI,pattern)) RBRACK
-- On EQ reduce production simple_pattern_ -> LBRACK loption(separated_nonempty_list(SEMI,pattern)) RBRACK
-- On COMMA reduce production simple_pattern_ -> LBRACK loption(separated_nonempty_list(SEMI,pattern)) RBRACK
-- On COLONGT reduce production simple_pattern_ -> LBRACK loption(separated_nonempty_list(SEMI,pattern)) RBRACK
-- On COLON reduce production simple_pattern_ -> LBRACK loption(separated_nonempty_list(SEMI,pattern)) RBRACK
-- On BY reduce production simple_pattern_ -> LBRACK loption(separated_nonempty_list(SEMI,pattern)) RBRACK
-- On AS reduce production simple_pattern_ -> LBRACK loption(separated_nonempty_list(SEMI,pattern)) RBRACK
-- On ARROW reduce production simple_pattern_ -> LBRACK loption(separated_nonempty_list(SEMI,pattern)) RBRACK

State 315:
prefix_pattern_ -> PREFIXOP prefix_pattern . [ WHEN UNDERSCORE UATOM TYPE STAR SEMI RPAREN RBRACK RBRACE QUOTED_STRING QQMARK PREFIXOP NAME LPAREN LBRACK INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQEQ EQ COMMA COLONGT COLON BY AS ARROW ]
-- On WHEN reduce production prefix_pattern_ -> PREFIXOP prefix_pattern
-- On UNDERSCORE reduce production prefix_pattern_ -> PREFIXOP prefix_pattern
-- On UATOM reduce production prefix_pattern_ -> PREFIXOP prefix_pattern
-- On TYPE reduce production prefix_pattern_ -> PREFIXOP prefix_pattern
-- On STAR reduce production prefix_pattern_ -> PREFIXOP prefix_pattern
-- On SEMI reduce production prefix_pattern_ -> PREFIXOP prefix_pattern
-- On RPAREN reduce production prefix_pattern_ -> PREFIXOP prefix_pattern
-- On RBRACK reduce production prefix_pattern_ -> PREFIXOP prefix_pattern
-- On RBRACE reduce production prefix_pattern_ -> PREFIXOP prefix_pattern
-- On QUOTED_STRING reduce production prefix_pattern_ -> PREFIXOP prefix_pattern
-- On QQMARK reduce production prefix_pattern_ -> PREFIXOP prefix_pattern
-- On PREFIXOP reduce production prefix_pattern_ -> PREFIXOP prefix_pattern
-- On NAME reduce production prefix_pattern_ -> PREFIXOP prefix_pattern
-- On LPAREN reduce production prefix_pattern_ -> PREFIXOP prefix_pattern
-- On LBRACK reduce production prefix_pattern_ -> PREFIXOP prefix_pattern
-- On INFIXOP4 reduce production prefix_pattern_ -> PREFIXOP prefix_pattern
-- On INFIXOP3 reduce production prefix_pattern_ -> PREFIXOP prefix_pattern
-- On INFIXOP2 reduce production prefix_pattern_ -> PREFIXOP prefix_pattern
-- On INFIXOP1 reduce production prefix_pattern_ -> PREFIXOP prefix_pattern
-- On INFIXOP0 reduce production prefix_pattern_ -> PREFIXOP prefix_pattern
-- On INFIXCONS reduce production prefix_pattern_ -> PREFIXOP prefix_pattern
-- On EQEQ reduce production prefix_pattern_ -> PREFIXOP prefix_pattern
-- On EQ reduce production prefix_pattern_ -> PREFIXOP prefix_pattern
-- On COMMA reduce production prefix_pattern_ -> PREFIXOP prefix_pattern
-- On COLONGT reduce production prefix_pattern_ -> PREFIXOP prefix_pattern
-- On COLON reduce production prefix_pattern_ -> PREFIXOP prefix_pattern
-- On BY reduce production prefix_pattern_ -> PREFIXOP prefix_pattern
-- On AS reduce production prefix_pattern_ -> PREFIXOP prefix_pattern
-- On ARROW reduce production prefix_pattern_ -> PREFIXOP prefix_pattern

State 316:
loption(separated_nonempty_list(COMMA,pattern)) -> separated_nonempty_list(COMMA,pattern) . [ RPAREN ]
-- On RPAREN reduce production loption(separated_nonempty_list(COMMA,pattern)) -> separated_nonempty_list(COMMA,pattern)

State 317:
separated_nonempty_list(COMMA,pattern) -> pattern . [ RPAREN ]
separated_nonempty_list(COMMA,pattern) -> pattern . COMMA separated_nonempty_list(COMMA,pattern) [ RPAREN ]
-- On COMMA shift to state 318
-- On RPAREN reduce production separated_nonempty_list(COMMA,pattern) -> pattern

State 318:
separated_nonempty_list(COMMA,pattern) -> pattern COMMA . separated_nonempty_list(COMMA,pattern) [ RPAREN ]
-- On UNDERSCORE shift to state 211
-- On UATOM shift to state 212
-- On QUOTED_STRING shift to state 213
-- On QQMARK shift to state 218
-- On PREFIXOP shift to state 216
-- On NAME shift to state 220
-- On LPAREN shift to state 221
-- On LBRACK shift to state 226
-- On LBRACE shift to state 227
-- On tt_name shift to state 20
-- On tt_maybe_typed_binder shift to state 233
-- On simple_pattern_ shift to state 234
-- On separated_nonempty_list(COMMA,pattern) shift to state 319
-- On prefix_pattern_ shift to state 235
-- On pattern_ shift to state 236
-- On pattern shift to state 317
-- On module_path shift to state 238
-- On module_name shift to state 45
-- On ml_name shift to state 263
-- On mark_location(pattern_) shift to state 266
-- On mark_location(binop_pattern_) shift to state 267
-- On binop_pattern_ shift to state 268
-- On binop_pattern shift to state 269
-- On app_pattern_ shift to state 276
-- On any_name shift to state 277

State 319:
separated_nonempty_list(COMMA,pattern) -> pattern COMMA separated_nonempty_list(COMMA,pattern) . [ RPAREN ]
-- On RPAREN reduce production separated_nonempty_list(COMMA,pattern) -> pattern COMMA separated_nonempty_list(COMMA,pattern)

State 320:
simple_pattern_ -> LPAREN loption(separated_nonempty_list(COMMA,pattern)) . RPAREN [ WHEN UNDERSCORE UATOM TYPE STAR SEMI RPAREN RBRACK RBRACE QUOTED_STRING QQMARK PREFIXOP NAME LPAREN LBRACK INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQEQ EQ COMMA COLONGT COLON BY AS ARROW ]
-- On RPAREN shift to state 321

State 321:
simple_pattern_ -> LPAREN loption(separated_nonempty_list(COMMA,pattern)) RPAREN . [ WHEN UNDERSCORE UATOM TYPE STAR SEMI RPAREN RBRACK RBRACE QUOTED_STRING QQMARK PREFIXOP NAME LPAREN LBRACK INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQEQ EQ COMMA COLONGT COLON BY AS ARROW ]
-- On WHEN reduce production simple_pattern_ -> LPAREN loption(separated_nonempty_list(COMMA,pattern)) RPAREN
-- On UNDERSCORE reduce production simple_pattern_ -> LPAREN loption(separated_nonempty_list(COMMA,pattern)) RPAREN
-- On UATOM reduce production simple_pattern_ -> LPAREN loption(separated_nonempty_list(COMMA,pattern)) RPAREN
-- On TYPE reduce production simple_pattern_ -> LPAREN loption(separated_nonempty_list(COMMA,pattern)) RPAREN
-- On STAR reduce production simple_pattern_ -> LPAREN loption(separated_nonempty_list(COMMA,pattern)) RPAREN
-- On SEMI reduce production simple_pattern_ -> LPAREN loption(separated_nonempty_list(COMMA,pattern)) RPAREN
-- On RPAREN reduce production simple_pattern_ -> LPAREN loption(separated_nonempty_list(COMMA,pattern)) RPAREN
-- On RBRACK reduce production simple_pattern_ -> LPAREN loption(separated_nonempty_list(COMMA,pattern)) RPAREN
-- On RBRACE reduce production simple_pattern_ -> LPAREN loption(separated_nonempty_list(COMMA,pattern)) RPAREN
-- On QUOTED_STRING reduce production simple_pattern_ -> LPAREN loption(separated_nonempty_list(COMMA,pattern)) RPAREN
-- On QQMARK reduce production simple_pattern_ -> LPAREN loption(separated_nonempty_list(COMMA,pattern)) RPAREN
-- On PREFIXOP reduce production simple_pattern_ -> LPAREN loption(separated_nonempty_list(COMMA,pattern)) RPAREN
-- On NAME reduce production simple_pattern_ -> LPAREN loption(separated_nonempty_list(COMMA,pattern)) RPAREN
-- On LPAREN reduce production simple_pattern_ -> LPAREN loption(separated_nonempty_list(COMMA,pattern)) RPAREN
-- On LBRACK reduce production simple_pattern_ -> LPAREN loption(separated_nonempty_list(COMMA,pattern)) RPAREN
-- On INFIXOP4 reduce production simple_pattern_ -> LPAREN loption(separated_nonempty_list(COMMA,pattern)) RPAREN
-- On INFIXOP3 reduce production simple_pattern_ -> LPAREN loption(separated_nonempty_list(COMMA,pattern)) RPAREN
-- On INFIXOP2 reduce production simple_pattern_ -> LPAREN loption(separated_nonempty_list(COMMA,pattern)) RPAREN
-- On INFIXOP1 reduce production simple_pattern_ -> LPAREN loption(separated_nonempty_list(COMMA,pattern)) RPAREN
-- On INFIXOP0 reduce production simple_pattern_ -> LPAREN loption(separated_nonempty_list(COMMA,pattern)) RPAREN
-- On INFIXCONS reduce production simple_pattern_ -> LPAREN loption(separated_nonempty_list(COMMA,pattern)) RPAREN
-- On EQEQ reduce production simple_pattern_ -> LPAREN loption(separated_nonempty_list(COMMA,pattern)) RPAREN
-- On EQ reduce production simple_pattern_ -> LPAREN loption(separated_nonempty_list(COMMA,pattern)) RPAREN
-- On COMMA reduce production simple_pattern_ -> LPAREN loption(separated_nonempty_list(COMMA,pattern)) RPAREN
-- On COLONGT reduce production simple_pattern_ -> LPAREN loption(separated_nonempty_list(COMMA,pattern)) RPAREN
-- On COLON reduce production simple_pattern_ -> LPAREN loption(separated_nonempty_list(COMMA,pattern)) RPAREN
-- On BY reduce production simple_pattern_ -> LPAREN loption(separated_nonempty_list(COMMA,pattern)) RPAREN
-- On AS reduce production simple_pattern_ -> LPAREN loption(separated_nonempty_list(COMMA,pattern)) RPAREN
-- On ARROW reduce production simple_pattern_ -> LPAREN loption(separated_nonempty_list(COMMA,pattern)) RPAREN

State 322:
binop_pattern_ -> binop_pattern . INFIXCONS binop_pattern [ WHEN STAR SEMI RPAREN RBRACK RBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQ COMMA ARROW ]
binop_pattern_ -> binop_pattern . EQ binop_pattern [ WHEN STAR SEMI RPAREN RBRACK RBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQ COMMA ARROW ]
binop_pattern_ -> binop_pattern . INFIXOP0 binop_pattern [ WHEN STAR SEMI RPAREN RBRACK RBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQ COMMA ARROW ]
binop_pattern_ -> binop_pattern . INFIXOP1 binop_pattern [ WHEN STAR SEMI RPAREN RBRACK RBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQ COMMA ARROW ]
binop_pattern_ -> binop_pattern . INFIXOP2 binop_pattern [ WHEN STAR SEMI RPAREN RBRACK RBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQ COMMA ARROW ]
binop_pattern_ -> binop_pattern . INFIXOP3 binop_pattern [ WHEN STAR SEMI RPAREN RBRACK RBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQ COMMA ARROW ]
binop_pattern_ -> binop_pattern . STAR binop_pattern [ WHEN STAR SEMI RPAREN RBRACK RBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQ COMMA ARROW ]
binop_pattern_ -> binop_pattern . INFIXOP4 binop_pattern [ WHEN STAR SEMI RPAREN RBRACK RBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQ COMMA ARROW ]
pattern_ -> QQMARK COLON binop_pattern . [ WHEN SEMI RPAREN RBRACK RBRACE COMMA ARROW ]
-- On STAR shift to state 271
-- On INFIXOP4 shift to state 274
-- On INFIXOP3 shift to state 279
-- On INFIXOP2 shift to state 281
-- On INFIXOP1 shift to state 283
-- On INFIXOP0 shift to state 287
-- On INFIXCONS shift to state 285
-- On EQ shift to state 291
-- On WHEN reduce production pattern_ -> QQMARK COLON binop_pattern
-- On SEMI reduce production pattern_ -> QQMARK COLON binop_pattern
-- On RPAREN reduce production pattern_ -> QQMARK COLON binop_pattern
-- On RBRACK reduce production pattern_ -> QQMARK COLON binop_pattern
-- On RBRACE reduce production pattern_ -> QQMARK COLON binop_pattern
-- On COMMA reduce production pattern_ -> QQMARK COLON binop_pattern
-- On ARROW reduce production pattern_ -> QQMARK COLON binop_pattern

State 323:
ml_name -> LPAREN PREFIXOP . RPAREN [ WHEN UNDERSCORE UATOM TYPE STAR SEMI RPAREN RBRACK RBRACE QUOTED_STRING QQMARK PREFIXOP NAME LPAREN LBRACK INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQEQ EQ COMMA COLONGT COLON BY AS ARROW ]
prefix_pattern_ -> PREFIXOP . prefix_pattern [ TYPE STAR RPAREN INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQEQ EQ COMMA COLONGT COLON AS ]
-- On UNDERSCORE shift to state 211
-- On UATOM shift to state 212
-- On RPAREN shift to state 67
-- On QUOTED_STRING shift to state 213
-- On QQMARK shift to state 214
-- On PREFIXOP shift to state 216
-- On NAME shift to state 57
-- On LPAREN shift to state 217
-- On LBRACK shift to state 226
-- On simple_pattern_ shift to state 234
-- On prefix_pattern_ shift to state 258
-- On prefix_pattern shift to state 315
-- On module_path shift to state 261
-- On module_name shift to state 45
-- On ml_name shift to state 263
-- On mark_location(prefix_pattern_) shift to state 264

State 324:
prefix_pattern_ -> UATOM prefix_pattern . [ WHEN UNDERSCORE UATOM TYPE STAR SEMI RPAREN RBRACK RBRACE QUOTED_STRING QQMARK PREFIXOP NAME LPAREN LBRACK INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQEQ EQ COMMA COLONGT COLON BY AS ARROW ]
-- On WHEN reduce production prefix_pattern_ -> UATOM prefix_pattern
-- On UNDERSCORE reduce production prefix_pattern_ -> UATOM prefix_pattern
-- On UATOM reduce production prefix_pattern_ -> UATOM prefix_pattern
-- On TYPE reduce production prefix_pattern_ -> UATOM prefix_pattern
-- On STAR reduce production prefix_pattern_ -> UATOM prefix_pattern
-- On SEMI reduce production prefix_pattern_ -> UATOM prefix_pattern
-- On RPAREN reduce production prefix_pattern_ -> UATOM prefix_pattern
-- On RBRACK reduce production prefix_pattern_ -> UATOM prefix_pattern
-- On RBRACE reduce production prefix_pattern_ -> UATOM prefix_pattern
-- On QUOTED_STRING reduce production prefix_pattern_ -> UATOM prefix_pattern
-- On QQMARK reduce production prefix_pattern_ -> UATOM prefix_pattern
-- On PREFIXOP reduce production prefix_pattern_ -> UATOM prefix_pattern
-- On NAME reduce production prefix_pattern_ -> UATOM prefix_pattern
-- On LPAREN reduce production prefix_pattern_ -> UATOM prefix_pattern
-- On LBRACK reduce production prefix_pattern_ -> UATOM prefix_pattern
-- On INFIXOP4 reduce production prefix_pattern_ -> UATOM prefix_pattern
-- On INFIXOP3 reduce production prefix_pattern_ -> UATOM prefix_pattern
-- On INFIXOP2 reduce production prefix_pattern_ -> UATOM prefix_pattern
-- On INFIXOP1 reduce production prefix_pattern_ -> UATOM prefix_pattern
-- On INFIXOP0 reduce production prefix_pattern_ -> UATOM prefix_pattern
-- On INFIXCONS reduce production prefix_pattern_ -> UATOM prefix_pattern
-- On EQEQ reduce production prefix_pattern_ -> UATOM prefix_pattern
-- On EQ reduce production prefix_pattern_ -> UATOM prefix_pattern
-- On COMMA reduce production prefix_pattern_ -> UATOM prefix_pattern
-- On COLONGT reduce production prefix_pattern_ -> UATOM prefix_pattern
-- On COLON reduce production prefix_pattern_ -> UATOM prefix_pattern
-- On BY reduce production prefix_pattern_ -> UATOM prefix_pattern
-- On AS reduce production prefix_pattern_ -> UATOM prefix_pattern
-- On ARROW reduce production prefix_pattern_ -> UATOM prefix_pattern

State 325:
match_case -> pattern . when_guard ARROW term [ END BAR ]
-- On WHEN shift to state 326
-- On when_guard shift to state 328
-- On ARROW reduce production when_guard ->

State 326:
when_guard -> WHEN . binop_term [ ARROW ]
-- On REF shift to state 4
-- On RAISE shift to state 12
-- On QUOTED_STRING shift to state 5
-- On QQMARK shift to state 15
-- On PREFIXOP shift to state 6
-- On OCCURS shift to state 18
-- On NATURAL shift to state 7
-- On NAME shift to state 8
-- On LPAREN shift to state 9
-- On LBRACK shift to state 13
-- On CONVERT shift to state 130
-- On CONTEXT shift to state 136
-- On CONGRUENCE shift to state 138
-- On BANG shift to state 19
-- On ABSTRACT shift to state 144
-- On tt_name shift to state 20
-- On substitution_term_ shift to state 147
-- On substitution_term shift to state 148
-- On simple_term_ shift to state 21
-- On prefix_term_ shift to state 134
-- On module_path shift to state 24
-- On module_name shift to state 45
-- On mark_location(substitution_term_) shift to state 135
-- On mark_location(binop_term_) shift to state 171
-- On mark_location(app_term_) shift to state 152
-- On binop_term_ shift to state 175
-- On binop_term shift to state 327
-- On app_term_ shift to state 179
-- On app_term shift to state 180
-- On any_name shift to state 47

State 327:
binop_term_ -> binop_term . INFIXCONS binop_term [ STAR INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQ ARROW ]
binop_term_ -> binop_term . EQ binop_term [ STAR INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQ ARROW ]
binop_term_ -> binop_term . INFIXOP0 binop_term [ STAR INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQ ARROW ]
binop_term_ -> binop_term . INFIXOP1 binop_term [ STAR INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQ ARROW ]
binop_term_ -> binop_term . INFIXOP2 binop_term [ STAR INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQ ARROW ]
binop_term_ -> binop_term . INFIXOP3 binop_term [ STAR INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQ ARROW ]
binop_term_ -> binop_term . STAR binop_term [ STAR INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQ ARROW ]
binop_term_ -> binop_term . INFIXOP4 binop_term [ STAR INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQ ARROW ]
when_guard -> WHEN binop_term . [ ARROW ]
-- On STAR shift to state 174
-- On INFIXOP4 shift to state 177
-- On INFIXOP3 shift to state 193
-- On INFIXOP2 shift to state 195
-- On INFIXOP1 shift to state 197
-- On INFIXOP0 shift to state 201
-- On INFIXCONS shift to state 199
-- On EQ shift to state 203
-- On ARROW reduce production when_guard -> WHEN binop_term

State 328:
match_case -> pattern when_guard . ARROW term [ END BAR ]
-- On ARROW shift to state 329

State 329:
match_case -> pattern when_guard ARROW . term [ END BAR ]
-- On WITH shift to state 2
-- On TRY shift to state 3
-- On REF shift to state 4
-- On RAISE shift to state 12
-- On QUOTED_STRING shift to state 5
-- On QQMARK shift to state 15
-- On PREFIXOP shift to state 6
-- On OCCURS shift to state 18
-- On NATURAL shift to state 7
-- On NAME shift to state 8
-- On MATCH shift to state 51
-- On LPAREN shift to state 9
-- On LET shift to state 52
-- On LBRACK shift to state 13
-- On LBRACE shift to state 156
-- On HANDLER shift to state 209
-- On FUN shift to state 330
-- On FRESH shift to state 338
-- On DERIVE shift to state 342
-- On CONVERT shift to state 130
-- On CONTEXT shift to state 136
-- On CONGRUENCE shift to state 138
-- On BANG shift to state 19
-- On ABSTRACT shift to state 144
-- On ty_term_ shift to state 357
-- On tt_name shift to state 20
-- On term_ shift to state 358
-- On term shift to state 394
-- On substitution_term_ shift to state 147
-- On substitution_term shift to state 148
-- On simple_term_ shift to state 21
-- On prefix_term_ shift to state 134
-- On nonempty_list(maybe_typed_binder) shift to state 167
-- On module_path shift to state 24
-- On module_name shift to state 45
-- On maybe_typed_binder shift to state 168
-- On mark_location(term_) shift to state 361
-- On mark_location(substitution_term_) shift to state 135
-- On mark_location(binop_term_) shift to state 171
-- On mark_location(app_term_) shift to state 152
-- On binop_term_ shift to state 172
-- On binop_term shift to state 362
-- On app_term_ shift to state 179
-- On app_term shift to state 365
-- On any_name shift to state 47
-- On abstraction shift to state 205

State 330:
term_ -> FUN . nonempty_list(ml_arg) ARROW term [ WITH VERBOSITY TRY SEMISEMI RULE RPAREN REQUIRE RBRACE OPERATION OPEN MODULE MLTYPE LET INCLUDE IN EXTERNAL EXCEPTION EOF END COMMA COLONGT BY BAR AND ]
-- On NAME shift to state 118
-- On LPAREN shift to state 331
-- On nonempty_list(ml_arg) shift to state 336
-- On ml_name shift to state 391
-- On ml_arg shift to state 392

State 331:
ml_arg -> LPAREN . ml_name COLONGT mlty RPAREN [ NAME LPAREN EQ COLONGT ARROW ]
ml_name -> LPAREN . INFIXCONS RPAREN [ NAME LPAREN EQ COLONGT ARROW ]
ml_name -> LPAREN . EQ RPAREN [ NAME LPAREN EQ COLONGT ARROW ]
ml_name -> LPAREN . INFIXOP0 RPAREN [ NAME LPAREN EQ COLONGT ARROW ]
ml_name -> LPAREN . INFIXOP1 RPAREN [ NAME LPAREN EQ COLONGT ARROW ]
ml_name -> LPAREN . INFIXOP2 RPAREN [ NAME LPAREN EQ COLONGT ARROW ]
ml_name -> LPAREN . INFIXOP3 RPAREN [ NAME LPAREN EQ COLONGT ARROW ]
ml_name -> LPAREN . STAR RPAREN [ NAME LPAREN EQ COLONGT ARROW ]
ml_name -> LPAREN . INFIXOP4 RPAREN [ NAME LPAREN EQ COLONGT ARROW ]
ml_name -> LPAREN . PREFIXOP RPAREN [ NAME LPAREN EQ COLONGT ARROW ]
-- On STAR shift to state 64
-- On PREFIXOP shift to state 66
-- On NAME shift to state 118
-- On LPAREN shift to state 89
-- On INFIXOP4 shift to state 68
-- On INFIXOP3 shift to state 70
-- On INFIXOP2 shift to state 72
-- On INFIXOP1 shift to state 74
-- On INFIXOP0 shift to state 76
-- On INFIXCONS shift to state 78
-- On EQ shift to state 80
-- On ml_name shift to state 332

State 332:
ml_arg -> LPAREN ml_name . COLONGT mlty RPAREN [ NAME LPAREN EQ COLONGT ARROW ]
-- On COLONGT shift to state 333

State 333:
ml_arg -> LPAREN ml_name COLONGT . mlty RPAREN [ NAME LPAREN EQ COLONGT ARROW ]
-- On UNDERSCORE shift to state 55
-- On REF shift to state 56
-- On NAME shift to state 57
-- On MLUNIT shift to state 58
-- On MLSTRING shift to state 59
-- On MLJUDGEMENT shift to state 60
-- On MLDERIVATION shift to state 61
-- On MLBOUNDARY shift to state 62
-- On LPAREN shift to state 63
-- On simple_mlty_ shift to state 82
-- On separated_nonempty_list(STAR,app_mlty) shift to state 83
-- On prod_mlty_ shift to state 84
-- On prod_mlty shift to state 85
-- On module_path shift to state 87
-- On module_name shift to state 45
-- On mlty_ shift to state 100
-- On mlty shift to state 334
-- On ml_name shift to state 102
-- On mark_location(prod_mlty_) shift to state 104
-- On mark_location(mlty_) shift to state 105
-- On mark_location(app_mlty_) shift to state 106
-- On app_mlty_ shift to state 107
-- On app_mlty shift to state 108

State 334:
ml_arg -> LPAREN ml_name COLONGT mlty . RPAREN [ NAME LPAREN EQ COLONGT ARROW ]
-- On RPAREN shift to state 335

State 335:
ml_arg -> LPAREN ml_name COLONGT mlty RPAREN . [ NAME LPAREN EQ COLONGT ARROW ]
-- On NAME reduce production ml_arg -> LPAREN ml_name COLONGT mlty RPAREN
-- On LPAREN reduce production ml_arg -> LPAREN ml_name COLONGT mlty RPAREN
-- On EQ reduce production ml_arg -> LPAREN ml_name COLONGT mlty RPAREN
-- On COLONGT reduce production ml_arg -> LPAREN ml_name COLONGT mlty RPAREN
-- On ARROW reduce production ml_arg -> LPAREN ml_name COLONGT mlty RPAREN

State 336:
term_ -> FUN nonempty_list(ml_arg) . ARROW term [ WITH VERBOSITY TRY SEMISEMI RULE RPAREN REQUIRE RBRACE OPERATION OPEN MODULE MLTYPE LET INCLUDE IN EXTERNAL EXCEPTION EOF END COMMA COLONGT BY BAR AND ]
-- On ARROW shift to state 337

State 337:
term_ -> FUN nonempty_list(ml_arg) ARROW . term [ WITH VERBOSITY TRY SEMISEMI RULE RPAREN REQUIRE RBRACE OPERATION OPEN MODULE MLTYPE LET INCLUDE IN EXTERNAL EXCEPTION EOF END COMMA COLONGT BY BAR AND ]
-- On WITH shift to state 2
-- On TRY shift to state 3
-- On REF shift to state 4
-- On RAISE shift to state 12
-- On QUOTED_STRING shift to state 5
-- On QQMARK shift to state 15
-- On PREFIXOP shift to state 6
-- On OCCURS shift to state 18
-- On NATURAL shift to state 7
-- On NAME shift to state 8
-- On MATCH shift to state 51
-- On LPAREN shift to state 9
-- On LET shift to state 52
-- On LBRACK shift to state 13
-- On LBRACE shift to state 156
-- On HANDLER shift to state 209
-- On FUN shift to state 330
-- On FRESH shift to state 338
-- On DERIVE shift to state 342
-- On CONVERT shift to state 130
-- On CONTEXT shift to state 136
-- On CONGRUENCE shift to state 138
-- On BANG shift to state 19
-- On ABSTRACT shift to state 144
-- On ty_term_ shift to state 357
-- On tt_name shift to state 20
-- On term_ shift to state 358
-- On term shift to state 390
-- On substitution_term_ shift to state 147
-- On substitution_term shift to state 148
-- On simple_term_ shift to state 21
-- On prefix_term_ shift to state 134
-- On nonempty_list(maybe_typed_binder) shift to state 167
-- On module_path shift to state 24
-- On module_name shift to state 45
-- On maybe_typed_binder shift to state 168
-- On mark_location(term_) shift to state 361
-- On mark_location(substitution_term_) shift to state 135
-- On mark_location(binop_term_) shift to state 171
-- On mark_location(app_term_) shift to state 152
-- On binop_term_ shift to state 172
-- On binop_term shift to state 362
-- On app_term_ shift to state 179
-- On app_term shift to state 365
-- On any_name shift to state 47
-- On abstraction shift to state 205

State 338:
term_ -> FRESH . opt_name(ml_name) COLON ty_term [ WITH VERBOSITY TRY SEMISEMI RULE RPAREN REQUIRE RBRACE OPERATION OPEN MODULE MLTYPE LET INCLUDE IN EXTERNAL EXCEPTION EOF END COMMA COLONGT BY BAR AND ]
-- On UNDERSCORE shift to state 117
-- On NAME shift to state 118
-- On LPAREN shift to state 89
-- On opt_name(ml_name) shift to state 339
-- On ml_name shift to state 121

State 339:
term_ -> FRESH opt_name(ml_name) . COLON ty_term [ WITH VERBOSITY TRY SEMISEMI RULE RPAREN REQUIRE RBRACE OPERATION OPEN MODULE MLTYPE LET INCLUDE IN EXTERNAL EXCEPTION EOF END COMMA COLONGT BY BAR AND ]
-- On COLON shift to state 340

State 340:
term_ -> FRESH opt_name(ml_name) COLON . ty_term [ WITH VERBOSITY TRY SEMISEMI RULE RPAREN REQUIRE RBRACE OPERATION OPEN MODULE MLTYPE LET INCLUDE IN EXTERNAL EXCEPTION EOF END COMMA COLONGT BY BAR AND ]
-- On REF shift to state 4
-- On RAISE shift to state 12
-- On QUOTED_STRING shift to state 5
-- On QQMARK shift to state 15
-- On PREFIXOP shift to state 6
-- On OCCURS shift to state 18
-- On NATURAL shift to state 7
-- On NAME shift to state 8
-- On LPAREN shift to state 9
-- On LBRACK shift to state 13
-- On LBRACE shift to state 156
-- On CONVERT shift to state 130
-- On CONTEXT shift to state 136
-- On CONGRUENCE shift to state 138
-- On BANG shift to state 19
-- On ABSTRACT shift to state 144
-- On ty_term_ shift to state 164
-- On ty_term shift to state 341
-- On tt_name shift to state 20
-- On substitution_term_ shift to state 147
-- On substitution_term shift to state 148
-- On simple_term_ shift to state 21
-- On prefix_term_ shift to state 134
-- On nonempty_list(maybe_typed_binder) shift to state 167
-- On module_path shift to state 24
-- On module_name shift to state 45
-- On maybe_typed_binder shift to state 168
-- On mark_location(ty_term_) shift to state 170
-- On mark_location(substitution_term_) shift to state 135
-- On mark_location(binop_term_) shift to state 171
-- On mark_location(app_term_) shift to state 152
-- On binop_term_ shift to state 172
-- On binop_term shift to state 173
-- On app_term_ shift to state 179
-- On app_term shift to state 180
-- On any_name shift to state 47
-- On abstraction shift to state 205

State 341:
term_ -> FRESH opt_name(ml_name) COLON ty_term . [ WITH VERBOSITY TRY SEMISEMI RULE RPAREN REQUIRE RBRACE OPERATION OPEN MODULE MLTYPE LET INCLUDE IN EXTERNAL EXCEPTION EOF END COMMA COLONGT BY BAR AND ]
-- On WITH reduce production term_ -> FRESH opt_name(ml_name) COLON ty_term
-- On VERBOSITY reduce production term_ -> FRESH opt_name(ml_name) COLON ty_term
-- On TRY reduce production term_ -> FRESH opt_name(ml_name) COLON ty_term
-- On SEMISEMI reduce production term_ -> FRESH opt_name(ml_name) COLON ty_term
-- On RULE reduce production term_ -> FRESH opt_name(ml_name) COLON ty_term
-- On RPAREN reduce production term_ -> FRESH opt_name(ml_name) COLON ty_term
-- On REQUIRE reduce production term_ -> FRESH opt_name(ml_name) COLON ty_term
-- On RBRACE reduce production term_ -> FRESH opt_name(ml_name) COLON ty_term
-- On OPERATION reduce production term_ -> FRESH opt_name(ml_name) COLON ty_term
-- On OPEN reduce production term_ -> FRESH opt_name(ml_name) COLON ty_term
-- On MODULE reduce production term_ -> FRESH opt_name(ml_name) COLON ty_term
-- On MLTYPE reduce production term_ -> FRESH opt_name(ml_name) COLON ty_term
-- On LET reduce production term_ -> FRESH opt_name(ml_name) COLON ty_term
-- On INCLUDE reduce production term_ -> FRESH opt_name(ml_name) COLON ty_term
-- On IN reduce production term_ -> FRESH opt_name(ml_name) COLON ty_term
-- On EXTERNAL reduce production term_ -> FRESH opt_name(ml_name) COLON ty_term
-- On EXCEPTION reduce production term_ -> FRESH opt_name(ml_name) COLON ty_term
-- On EOF reduce production term_ -> FRESH opt_name(ml_name) COLON ty_term
-- On END reduce production term_ -> FRESH opt_name(ml_name) COLON ty_term
-- On COMMA reduce production term_ -> FRESH opt_name(ml_name) COLON ty_term
-- On COLONGT reduce production term_ -> FRESH opt_name(ml_name) COLON ty_term
-- On BY reduce production term_ -> FRESH opt_name(ml_name) COLON ty_term
-- On BAR reduce production term_ -> FRESH opt_name(ml_name) COLON ty_term
-- On AND reduce production term_ -> FRESH opt_name(ml_name) COLON ty_term

State 342:
term_ -> DERIVE . nonempty_list(premise) ARROW term [ WITH VERBOSITY TRY SEMISEMI RULE RPAREN REQUIRE RBRACE OPERATION OPEN MODULE MLTYPE LET INCLUDE IN EXTERNAL EXCEPTION EOF END COMMA COLONGT BY BAR AND ]
-- On LPAREN shift to state 343
-- On premise_ shift to state 383
-- On premise shift to state 384
-- On nonempty_list(premise) shift to state 387
-- On mark_location(premise_) shift to state 386

State 343:
premise_ -> LPAREN . local_context opt_name(tt_name) TYPE RPAREN [ TYPE LPAREN COLON ARROW ]
premise_ -> LPAREN . local_context opt_name(tt_name) COLON term RPAREN [ TYPE LPAREN COLON ARROW ]
premise_ -> LPAREN . local_context app_term EQEQ ty_term equality_premise_name RPAREN [ TYPE LPAREN COLON ARROW ]
premise_ -> LPAREN . local_context app_term EQEQ app_term COLON term equality_premise_name RPAREN [ TYPE LPAREN COLON ARROW ]
-- On LBRACE shift to state 344
-- On typed_binder shift to state 349
-- On local_context shift to state 351
-- On list(typed_binder) shift to state 382
-- On UNDERSCORE reduce production list(typed_binder) ->
-- On REF reduce production list(typed_binder) ->
-- On RAISE reduce production list(typed_binder) ->
-- On QUOTED_STRING reduce production list(typed_binder) ->
-- On PREFIXOP reduce production list(typed_binder) ->
-- On OCCURS reduce production list(typed_binder) ->
-- On NATURAL reduce production list(typed_binder) ->
-- On NAME reduce production list(typed_binder) ->
-- On LPAREN reduce production list(typed_binder) ->
-- On LBRACK reduce production list(typed_binder) ->
-- On CONVERT reduce production list(typed_binder) ->
-- On CONTEXT reduce production list(typed_binder) ->
-- On CONGRUENCE reduce production list(typed_binder) ->
-- On BANG reduce production list(typed_binder) ->
-- On ABSTRACT reduce production list(typed_binder) ->

State 344:
typed_binder -> LBRACE . nonempty_list(anon_name(tt_name)) COLON ty_term RBRACE [ UNDERSCORE REF RAISE QUOTED_STRING PREFIXOP OCCURS NATURAL NAME LPAREN LBRACK LBRACE CONVERT CONTEXT CONGRUENCE BANG ABSTRACT ]
-- On UNDERSCORE shift to state 157
-- On NAME shift to state 158
-- On LPAREN shift to state 26
-- On tt_name shift to state 159
-- On opt_name(tt_name) shift to state 160
-- On nonempty_list(anon_name(tt_name)) shift to state 345
-- On anon_name(tt_name) shift to state 207

State 345:
typed_binder -> LBRACE nonempty_list(anon_name(tt_name)) . COLON ty_term RBRACE [ UNDERSCORE REF RAISE QUOTED_STRING PREFIXOP OCCURS NATURAL NAME LPAREN LBRACK LBRACE CONVERT CONTEXT CONGRUENCE BANG ABSTRACT ]
-- On COLON shift to state 346

State 346:
typed_binder -> LBRACE nonempty_list(anon_name(tt_name)) COLON . ty_term RBRACE [ UNDERSCORE REF RAISE QUOTED_STRING PREFIXOP OCCURS NATURAL NAME LPAREN LBRACK LBRACE CONVERT CONTEXT CONGRUENCE BANG ABSTRACT ]
-- On REF shift to state 4
-- On RAISE shift to state 12
-- On QUOTED_STRING shift to state 5
-- On QQMARK shift to state 15
-- On PREFIXOP shift to state 6
-- On OCCURS shift to state 18
-- On NATURAL shift to state 7
-- On NAME shift to state 8
-- On LPAREN shift to state 9
-- On LBRACK shift to state 13
-- On LBRACE shift to state 156
-- On CONVERT shift to state 130
-- On CONTEXT shift to state 136
-- On CONGRUENCE shift to state 138
-- On BANG shift to state 19
-- On ABSTRACT shift to state 144
-- On ty_term_ shift to state 164
-- On ty_term shift to state 347
-- On tt_name shift to state 20
-- On substitution_term_ shift to state 147
-- On substitution_term shift to state 148
-- On simple_term_ shift to state 21
-- On prefix_term_ shift to state 134
-- On nonempty_list(maybe_typed_binder) shift to state 167
-- On module_path shift to state 24
-- On module_name shift to state 45
-- On maybe_typed_binder shift to state 168
-- On mark_location(ty_term_) shift to state 170
-- On mark_location(substitution_term_) shift to state 135
-- On mark_location(binop_term_) shift to state 171
-- On mark_location(app_term_) shift to state 152
-- On binop_term_ shift to state 172
-- On binop_term shift to state 173
-- On app_term_ shift to state 179
-- On app_term shift to state 180
-- On any_name shift to state 47
-- On abstraction shift to state 205

State 347:
typed_binder -> LBRACE nonempty_list(anon_name(tt_name)) COLON ty_term . RBRACE [ UNDERSCORE REF RAISE QUOTED_STRING PREFIXOP OCCURS NATURAL NAME LPAREN LBRACK LBRACE CONVERT CONTEXT CONGRUENCE BANG ABSTRACT ]
-- On RBRACE shift to state 348

State 348:
typed_binder -> LBRACE nonempty_list(anon_name(tt_name)) COLON ty_term RBRACE . [ UNDERSCORE REF RAISE QUOTED_STRING PREFIXOP OCCURS NATURAL NAME LPAREN LBRACK LBRACE CONVERT CONTEXT CONGRUENCE BANG ABSTRACT ]
-- On UNDERSCORE reduce production typed_binder -> LBRACE nonempty_list(anon_name(tt_name)) COLON ty_term RBRACE
-- On REF reduce production typed_binder -> LBRACE nonempty_list(anon_name(tt_name)) COLON ty_term RBRACE
-- On RAISE reduce production typed_binder -> LBRACE nonempty_list(anon_name(tt_name)) COLON ty_term RBRACE
-- On QUOTED_STRING reduce production typed_binder -> LBRACE nonempty_list(anon_name(tt_name)) COLON ty_term RBRACE
-- On PREFIXOP reduce production typed_binder -> LBRACE nonempty_list(anon_name(tt_name)) COLON ty_term RBRACE
-- On OCCURS reduce production typed_binder -> LBRACE nonempty_list(anon_name(tt_name)) COLON ty_term RBRACE
-- On NATURAL reduce production typed_binder -> LBRACE nonempty_list(anon_name(tt_name)) COLON ty_term RBRACE
-- On NAME reduce production typed_binder -> LBRACE nonempty_list(anon_name(tt_name)) COLON ty_term RBRACE
-- On LPAREN reduce production typed_binder -> LBRACE nonempty_list(anon_name(tt_name)) COLON ty_term RBRACE
-- On LBRACK reduce production typed_binder -> LBRACE nonempty_list(anon_name(tt_name)) COLON ty_term RBRACE
-- On LBRACE reduce production typed_binder -> LBRACE nonempty_list(anon_name(tt_name)) COLON ty_term RBRACE
-- On CONVERT reduce production typed_binder -> LBRACE nonempty_list(anon_name(tt_name)) COLON ty_term RBRACE
-- On CONTEXT reduce production typed_binder -> LBRACE nonempty_list(anon_name(tt_name)) COLON ty_term RBRACE
-- On CONGRUENCE reduce production typed_binder -> LBRACE nonempty_list(anon_name(tt_name)) COLON ty_term RBRACE
-- On BANG reduce production typed_binder -> LBRACE nonempty_list(anon_name(tt_name)) COLON ty_term RBRACE
-- On ABSTRACT reduce production typed_binder -> LBRACE nonempty_list(anon_name(tt_name)) COLON ty_term RBRACE

State 349:
list(typed_binder) -> typed_binder . list(typed_binder) [ UNDERSCORE REF RAISE QUOTED_STRING PREFIXOP OCCURS NATURAL NAME LPAREN LBRACK CONVERT CONTEXT CONGRUENCE BANG ABSTRACT ]
-- On LBRACE shift to state 344
-- On typed_binder shift to state 349
-- On list(typed_binder) shift to state 350
-- On UNDERSCORE reduce production list(typed_binder) ->
-- On REF reduce production list(typed_binder) ->
-- On RAISE reduce production list(typed_binder) ->
-- On QUOTED_STRING reduce production list(typed_binder) ->
-- On PREFIXOP reduce production list(typed_binder) ->
-- On OCCURS reduce production list(typed_binder) ->
-- On NATURAL reduce production list(typed_binder) ->
-- On NAME reduce production list(typed_binder) ->
-- On LPAREN reduce production list(typed_binder) ->
-- On LBRACK reduce production list(typed_binder) ->
-- On CONVERT reduce production list(typed_binder) ->
-- On CONTEXT reduce production list(typed_binder) ->
-- On CONGRUENCE reduce production list(typed_binder) ->
-- On BANG reduce production list(typed_binder) ->
-- On ABSTRACT reduce production list(typed_binder) ->

State 350:
list(typed_binder) -> typed_binder list(typed_binder) . [ UNDERSCORE REF RAISE QUOTED_STRING PREFIXOP OCCURS NATURAL NAME LPAREN LBRACK CONVERT CONTEXT CONGRUENCE BANG ABSTRACT ]
-- On UNDERSCORE reduce production list(typed_binder) -> typed_binder list(typed_binder)
-- On REF reduce production list(typed_binder) -> typed_binder list(typed_binder)
-- On RAISE reduce production list(typed_binder) -> typed_binder list(typed_binder)
-- On QUOTED_STRING reduce production list(typed_binder) -> typed_binder list(typed_binder)
-- On PREFIXOP reduce production list(typed_binder) -> typed_binder list(typed_binder)
-- On OCCURS reduce production list(typed_binder) -> typed_binder list(typed_binder)
-- On NATURAL reduce production list(typed_binder) -> typed_binder list(typed_binder)
-- On NAME reduce production list(typed_binder) -> typed_binder list(typed_binder)
-- On LPAREN reduce production list(typed_binder) -> typed_binder list(typed_binder)
-- On LBRACK reduce production list(typed_binder) -> typed_binder list(typed_binder)
-- On CONVERT reduce production list(typed_binder) -> typed_binder list(typed_binder)
-- On CONTEXT reduce production list(typed_binder) -> typed_binder list(typed_binder)
-- On CONGRUENCE reduce production list(typed_binder) -> typed_binder list(typed_binder)
-- On BANG reduce production list(typed_binder) -> typed_binder list(typed_binder)
-- On ABSTRACT reduce production list(typed_binder) -> typed_binder list(typed_binder)

State 351:
premise_ -> LPAREN local_context . opt_name(tt_name) TYPE RPAREN [ TYPE LPAREN COLON ARROW ]
premise_ -> LPAREN local_context . opt_name(tt_name) COLON term RPAREN [ TYPE LPAREN COLON ARROW ]
premise_ -> LPAREN local_context . app_term EQEQ ty_term equality_premise_name RPAREN [ TYPE LPAREN COLON ARROW ]
premise_ -> LPAREN local_context . app_term EQEQ app_term COLON term equality_premise_name RPAREN [ TYPE LPAREN COLON ARROW ]
-- On UNDERSCORE shift to state 157
-- On REF shift to state 4
-- On RAISE shift to state 12
-- On QUOTED_STRING shift to state 5
-- On PREFIXOP shift to state 6
-- On OCCURS shift to state 18
-- On NATURAL shift to state 7
-- On NAME shift to state 8
-- On LPAREN shift to state 9
-- On LBRACK shift to state 13
-- On CONVERT shift to state 130
-- On CONTEXT shift to state 136
-- On CONGRUENCE shift to state 138
-- On BANG shift to state 19
-- On ABSTRACT shift to state 144
-- On tt_name shift to state 352
-- On substitution_term_ shift to state 147
-- On substitution_term shift to state 148
-- On simple_term_ shift to state 21
-- On prefix_term_ shift to state 134
-- On opt_name(tt_name) shift to state 353
-- On module_path shift to state 24
-- On module_name shift to state 45
-- On mark_location(substitution_term_) shift to state 135
-- On mark_location(app_term_) shift to state 152
-- On app_term_ shift to state 153
-- On app_term shift to state 370
-- On any_name shift to state 47

State 352:
any_name -> tt_name . [ REF QUOTED_STRING PREFIXOP NATURAL NAME LPAREN LBRACK LBRACE EQEQ BANG ]
opt_name(tt_name) -> tt_name . [ TYPE COLON ]
-- On TYPE reduce production opt_name(tt_name) -> tt_name
-- On REF reduce production any_name -> tt_name
-- On QUOTED_STRING reduce production any_name -> tt_name
-- On PREFIXOP reduce production any_name -> tt_name
-- On NATURAL reduce production any_name -> tt_name
-- On NAME reduce production any_name -> tt_name
-- On LPAREN reduce production any_name -> tt_name
-- On LBRACK reduce production any_name -> tt_name
-- On LBRACE reduce production any_name -> tt_name
-- On EQEQ reduce production any_name -> tt_name
-- On COLON reduce production opt_name(tt_name) -> tt_name
-- On BANG reduce production any_name -> tt_name

State 353:
premise_ -> LPAREN local_context opt_name(tt_name) . TYPE RPAREN [ TYPE LPAREN COLON ARROW ]
premise_ -> LPAREN local_context opt_name(tt_name) . COLON term RPAREN [ TYPE LPAREN COLON ARROW ]
-- On TYPE shift to state 354
-- On COLON shift to state 356

State 354:
premise_ -> LPAREN local_context opt_name(tt_name) TYPE . RPAREN [ TYPE LPAREN COLON ARROW ]
-- On RPAREN shift to state 355

State 355:
premise_ -> LPAREN local_context opt_name(tt_name) TYPE RPAREN . [ TYPE LPAREN COLON ARROW ]
-- On TYPE reduce production premise_ -> LPAREN local_context opt_name(tt_name) TYPE RPAREN
-- On LPAREN reduce production premise_ -> LPAREN local_context opt_name(tt_name) TYPE RPAREN
-- On COLON reduce production premise_ -> LPAREN local_context opt_name(tt_name) TYPE RPAREN
-- On ARROW reduce production premise_ -> LPAREN local_context opt_name(tt_name) TYPE RPAREN

State 356:
premise_ -> LPAREN local_context opt_name(tt_name) COLON . term RPAREN [ TYPE LPAREN COLON ARROW ]
-- On WITH shift to state 2
-- On TRY shift to state 3
-- On REF shift to state 4
-- On RAISE shift to state 12
-- On QUOTED_STRING shift to state 5
-- On QQMARK shift to state 15
-- On PREFIXOP shift to state 6
-- On OCCURS shift to state 18
-- On NATURAL shift to state 7
-- On NAME shift to state 8
-- On MATCH shift to state 51
-- On LPAREN shift to state 9
-- On LET shift to state 52
-- On LBRACK shift to state 13
-- On LBRACE shift to state 156
-- On HANDLER shift to state 209
-- On FUN shift to state 330
-- On FRESH shift to state 338
-- On DERIVE shift to state 342
-- On CONVERT shift to state 130
-- On CONTEXT shift to state 136
-- On CONGRUENCE shift to state 138
-- On BANG shift to state 19
-- On ABSTRACT shift to state 144
-- On ty_term_ shift to state 357
-- On tt_name shift to state 20
-- On term_ shift to state 358
-- On term shift to state 359
-- On substitution_term_ shift to state 147
-- On substitution_term shift to state 148
-- On simple_term_ shift to state 21
-- On prefix_term_ shift to state 134
-- On nonempty_list(maybe_typed_binder) shift to state 167
-- On module_path shift to state 24
-- On module_name shift to state 45
-- On maybe_typed_binder shift to state 168
-- On mark_location(term_) shift to state 361
-- On mark_location(substitution_term_) shift to state 135
-- On mark_location(binop_term_) shift to state 171
-- On mark_location(app_term_) shift to state 152
-- On binop_term_ shift to state 172
-- On binop_term shift to state 362
-- On app_term_ shift to state 179
-- On app_term shift to state 365
-- On any_name shift to state 47
-- On abstraction shift to state 205

State 357:
term_ -> ty_term_ . [ WITH VERBOSITY TRY SEMISEMI RULE RPAREN REQUIRE RBRACE OPERATION OPEN MODULE MLTYPE LET INCLUDE IN EXTERNAL EXCEPTION EOF END COMMA COLONGT BY BAR AND ]
-- On WITH reduce production term_ -> ty_term_
-- On VERBOSITY reduce production term_ -> ty_term_
-- On TRY reduce production term_ -> ty_term_
-- On SEMISEMI reduce production term_ -> ty_term_
-- On RULE reduce production term_ -> ty_term_
-- On RPAREN reduce production term_ -> ty_term_
-- On REQUIRE reduce production term_ -> ty_term_
-- On RBRACE reduce production term_ -> ty_term_
-- On OPERATION reduce production term_ -> ty_term_
-- On OPEN reduce production term_ -> ty_term_
-- On MODULE reduce production term_ -> ty_term_
-- On MLTYPE reduce production term_ -> ty_term_
-- On LET reduce production term_ -> ty_term_
-- On INCLUDE reduce production term_ -> ty_term_
-- On IN reduce production term_ -> ty_term_
-- On EXTERNAL reduce production term_ -> ty_term_
-- On EXCEPTION reduce production term_ -> ty_term_
-- On EOF reduce production term_ -> ty_term_
-- On END reduce production term_ -> ty_term_
-- On COMMA reduce production term_ -> ty_term_
-- On COLONGT reduce production term_ -> ty_term_
-- On BY reduce production term_ -> ty_term_
-- On BAR reduce production term_ -> ty_term_
-- On AND reduce production term_ -> ty_term_

State 358:
mark_location(term_) -> term_ . [ WITH VERBOSITY TRY SEMISEMI RULE RPAREN REQUIRE RBRACE OPERATION OPEN MODULE MLTYPE LET INCLUDE IN EXTERNAL EXCEPTION EOF END COMMA COLONGT BY BAR AND ]
-- On WITH reduce production mark_location(term_) -> term_
-- On VERBOSITY reduce production mark_location(term_) -> term_
-- On TRY reduce production mark_location(term_) -> term_
-- On SEMISEMI reduce production mark_location(term_) -> term_
-- On RULE reduce production mark_location(term_) -> term_
-- On RPAREN reduce production mark_location(term_) -> term_
-- On REQUIRE reduce production mark_location(term_) -> term_
-- On RBRACE reduce production mark_location(term_) -> term_
-- On OPERATION reduce production mark_location(term_) -> term_
-- On OPEN reduce production mark_location(term_) -> term_
-- On MODULE reduce production mark_location(term_) -> term_
-- On MLTYPE reduce production mark_location(term_) -> term_
-- On LET reduce production mark_location(term_) -> term_
-- On INCLUDE reduce production mark_location(term_) -> term_
-- On IN reduce production mark_location(term_) -> term_
-- On EXTERNAL reduce production mark_location(term_) -> term_
-- On EXCEPTION reduce production mark_location(term_) -> term_
-- On EOF reduce production mark_location(term_) -> term_
-- On END reduce production mark_location(term_) -> term_
-- On COMMA reduce production mark_location(term_) -> term_
-- On COLONGT reduce production mark_location(term_) -> term_
-- On BY reduce production mark_location(term_) -> term_
-- On BAR reduce production mark_location(term_) -> term_
-- On AND reduce production mark_location(term_) -> term_

State 359:
premise_ -> LPAREN local_context opt_name(tt_name) COLON term . RPAREN [ TYPE LPAREN COLON ARROW ]
-- On RPAREN shift to state 360

State 360:
premise_ -> LPAREN local_context opt_name(tt_name) COLON term RPAREN . [ TYPE LPAREN COLON ARROW ]
-- On TYPE reduce production premise_ -> LPAREN local_context opt_name(tt_name) COLON term RPAREN
-- On LPAREN reduce production premise_ -> LPAREN local_context opt_name(tt_name) COLON term RPAREN
-- On COLON reduce production premise_ -> LPAREN local_context opt_name(tt_name) COLON term RPAREN
-- On ARROW reduce production premise_ -> LPAREN local_context opt_name(tt_name) COLON term RPAREN

State 361:
term -> mark_location(term_) . [ WITH VERBOSITY TRY SEMISEMI RULE RPAREN REQUIRE RBRACE OPERATION OPEN MODULE MLTYPE LET INCLUDE IN EXTERNAL EXCEPTION EOF END COMMA COLONGT BY BAR AND ]
-- On WITH reduce production term -> mark_location(term_)
-- On VERBOSITY reduce production term -> mark_location(term_)
-- On TRY reduce production term -> mark_location(term_)
-- On SEMISEMI reduce production term -> mark_location(term_)
-- On RULE reduce production term -> mark_location(term_)
-- On RPAREN reduce production term -> mark_location(term_)
-- On REQUIRE reduce production term -> mark_location(term_)
-- On RBRACE reduce production term -> mark_location(term_)
-- On OPERATION reduce production term -> mark_location(term_)
-- On OPEN reduce production term -> mark_location(term_)
-- On MODULE reduce production term -> mark_location(term_)
-- On MLTYPE reduce production term -> mark_location(term_)
-- On LET reduce production term -> mark_location(term_)
-- On INCLUDE reduce production term -> mark_location(term_)
-- On IN reduce production term -> mark_location(term_)
-- On EXTERNAL reduce production term -> mark_location(term_)
-- On EXCEPTION reduce production term -> mark_location(term_)
-- On EOF reduce production term -> mark_location(term_)
-- On END reduce production term -> mark_location(term_)
-- On COMMA reduce production term -> mark_location(term_)
-- On COLONGT reduce production term -> mark_location(term_)
-- On BY reduce production term -> mark_location(term_)
-- On BAR reduce production term -> mark_location(term_)
-- On AND reduce production term -> mark_location(term_)

State 362:
binop_term_ -> binop_term . INFIXCONS binop_term [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQ EOF END COMMA COLONGT BY BAR AND ]
binop_term_ -> binop_term . EQ binop_term [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQ EOF END COMMA COLONGT BY BAR AND ]
binop_term_ -> binop_term . INFIXOP0 binop_term [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQ EOF END COMMA COLONGT BY BAR AND ]
binop_term_ -> binop_term . INFIXOP1 binop_term [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQ EOF END COMMA COLONGT BY BAR AND ]
binop_term_ -> binop_term . INFIXOP2 binop_term [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQ EOF END COMMA COLONGT BY BAR AND ]
binop_term_ -> binop_term . INFIXOP3 binop_term [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQ EOF END COMMA COLONGT BY BAR AND ]
binop_term_ -> binop_term . STAR binop_term [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQ EOF END COMMA COLONGT BY BAR AND ]
binop_term_ -> binop_term . INFIXOP4 binop_term [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQ EOF END COMMA COLONGT BY BAR AND ]
term_ -> binop_term . SEMI term [ WITH VERBOSITY TRY SEMISEMI RULE RPAREN REQUIRE RBRACE OPERATION OPEN MODULE MLTYPE LET INCLUDE IN EXTERNAL EXCEPTION EOF END COMMA COLONGT BY BAR AND ]
-- On STAR shift to state 174
-- On SEMI shift to state 363
-- On INFIXOP4 shift to state 177
-- On INFIXOP3 shift to state 193
-- On INFIXOP2 shift to state 195
-- On INFIXOP1 shift to state 197
-- On INFIXOP0 shift to state 201
-- On INFIXCONS shift to state 199
-- On EQ shift to state 203

State 363:
term_ -> binop_term SEMI . term [ WITH VERBOSITY TRY SEMISEMI RULE RPAREN REQUIRE RBRACE OPERATION OPEN MODULE MLTYPE LET INCLUDE IN EXTERNAL EXCEPTION EOF END COMMA COLONGT BY BAR AND ]
-- On WITH shift to state 2
-- On TRY shift to state 3
-- On REF shift to state 4
-- On RAISE shift to state 12
-- On QUOTED_STRING shift to state 5
-- On QQMARK shift to state 15
-- On PREFIXOP shift to state 6
-- On OCCURS shift to state 18
-- On NATURAL shift to state 7
-- On NAME shift to state 8
-- On MATCH shift to state 51
-- On LPAREN shift to state 9
-- On LET shift to state 52
-- On LBRACK shift to state 13
-- On LBRACE shift to state 156
-- On HANDLER shift to state 209
-- On FUN shift to state 330
-- On FRESH shift to state 338
-- On DERIVE shift to state 342
-- On CONVERT shift to state 130
-- On CONTEXT shift to state 136
-- On CONGRUENCE shift to state 138
-- On BANG shift to state 19
-- On ABSTRACT shift to state 144
-- On ty_term_ shift to state 357
-- On tt_name shift to state 20
-- On term_ shift to state 358
-- On term shift to state 364
-- On substitution_term_ shift to state 147
-- On substitution_term shift to state 148
-- On simple_term_ shift to state 21
-- On prefix_term_ shift to state 134
-- On nonempty_list(maybe_typed_binder) shift to state 167
-- On module_path shift to state 24
-- On module_name shift to state 45
-- On maybe_typed_binder shift to state 168
-- On mark_location(term_) shift to state 361
-- On mark_location(substitution_term_) shift to state 135
-- On mark_location(binop_term_) shift to state 171
-- On mark_location(app_term_) shift to state 152
-- On binop_term_ shift to state 172
-- On binop_term shift to state 362
-- On app_term_ shift to state 179
-- On app_term shift to state 365
-- On any_name shift to state 47
-- On abstraction shift to state 205

State 364:
term_ -> binop_term SEMI term . [ WITH VERBOSITY TRY SEMISEMI RULE RPAREN REQUIRE RBRACE OPERATION OPEN MODULE MLTYPE LET INCLUDE IN EXTERNAL EXCEPTION EOF END COMMA COLONGT BY BAR AND ]
-- On WITH reduce production term_ -> binop_term SEMI term
-- On VERBOSITY reduce production term_ -> binop_term SEMI term
-- On TRY reduce production term_ -> binop_term SEMI term
-- On SEMISEMI reduce production term_ -> binop_term SEMI term
-- On RULE reduce production term_ -> binop_term SEMI term
-- On RPAREN reduce production term_ -> binop_term SEMI term
-- On REQUIRE reduce production term_ -> binop_term SEMI term
-- On RBRACE reduce production term_ -> binop_term SEMI term
-- On OPERATION reduce production term_ -> binop_term SEMI term
-- On OPEN reduce production term_ -> binop_term SEMI term
-- On MODULE reduce production term_ -> binop_term SEMI term
-- On MLTYPE reduce production term_ -> binop_term SEMI term
-- On LET reduce production term_ -> binop_term SEMI term
-- On INCLUDE reduce production term_ -> binop_term SEMI term
-- On IN reduce production term_ -> binop_term SEMI term
-- On EXTERNAL reduce production term_ -> binop_term SEMI term
-- On EXCEPTION reduce production term_ -> binop_term SEMI term
-- On EOF reduce production term_ -> binop_term SEMI term
-- On END reduce production term_ -> binop_term SEMI term
-- On COMMA reduce production term_ -> binop_term SEMI term
-- On COLONGT reduce production term_ -> binop_term SEMI term
-- On BY reduce production term_ -> binop_term SEMI term
-- On BAR reduce production term_ -> binop_term SEMI term
-- On AND reduce production term_ -> binop_term SEMI term

State 365:
binop_term_ -> app_term . COLONEQ binop_term [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQ EOF END COMMA COLONGT BY BAR AND ]
binop_term_ -> app_term . EQEQ app_term BY app_term [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQ EOF END COMMA COLONGT BY BAR AND ]
binop_term_ -> app_term . EQEQ app_term COLON app_term BY app_term [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQ EOF END COMMA COLONGT BY BAR AND ]
binop_term_ -> app_term . EQEQ app_term BY QQMARK [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQ EOF END COMMA COLONGT BY BAR AND ]
binop_term_ -> app_term . EQEQ app_term COLON app_term BY QQMARK [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQ EOF END COMMA COLONGT BY BAR AND ]
term_ -> app_term . COLONQT ty_term [ WITH VERBOSITY TRY SEMISEMI RULE RPAREN REQUIRE RBRACE OPERATION OPEN MODULE MLTYPE LET INCLUDE IN EXTERNAL EXCEPTION EOF END COMMA COLONGT BY BAR AND ]
term_ -> app_term . COLON ty_term [ WITH VERBOSITY TRY SEMISEMI RULE RPAREN REQUIRE RBRACE OPERATION OPEN MODULE MLTYPE LET INCLUDE IN EXTERNAL EXCEPTION EOF END COMMA COLONGT BY BAR AND ]
-- On EQEQ shift to state 181
-- On COLONQT shift to state 366
-- On COLONEQ shift to state 191
-- On COLON shift to state 368

State 366:
term_ -> app_term COLONQT . ty_term [ WITH VERBOSITY TRY SEMISEMI RULE RPAREN REQUIRE RBRACE OPERATION OPEN MODULE MLTYPE LET INCLUDE IN EXTERNAL EXCEPTION EOF END COMMA COLONGT BY BAR AND ]
-- On REF shift to state 4
-- On RAISE shift to state 12
-- On QUOTED_STRING shift to state 5
-- On QQMARK shift to state 15
-- On PREFIXOP shift to state 6
-- On OCCURS shift to state 18
-- On NATURAL shift to state 7
-- On NAME shift to state 8
-- On LPAREN shift to state 9
-- On LBRACK shift to state 13
-- On LBRACE shift to state 156
-- On CONVERT shift to state 130
-- On CONTEXT shift to state 136
-- On CONGRUENCE shift to state 138
-- On BANG shift to state 19
-- On ABSTRACT shift to state 144
-- On ty_term_ shift to state 164
-- On ty_term shift to state 367
-- On tt_name shift to state 20
-- On substitution_term_ shift to state 147
-- On substitution_term shift to state 148
-- On simple_term_ shift to state 21
-- On prefix_term_ shift to state 134
-- On nonempty_list(maybe_typed_binder) shift to state 167
-- On module_path shift to state 24
-- On module_name shift to state 45
-- On maybe_typed_binder shift to state 168
-- On mark_location(ty_term_) shift to state 170
-- On mark_location(substitution_term_) shift to state 135
-- On mark_location(binop_term_) shift to state 171
-- On mark_location(app_term_) shift to state 152
-- On binop_term_ shift to state 172
-- On binop_term shift to state 173
-- On app_term_ shift to state 179
-- On app_term shift to state 180
-- On any_name shift to state 47
-- On abstraction shift to state 205

State 367:
term_ -> app_term COLONQT ty_term . [ WITH VERBOSITY TRY SEMISEMI RULE RPAREN REQUIRE RBRACE OPERATION OPEN MODULE MLTYPE LET INCLUDE IN EXTERNAL EXCEPTION EOF END COMMA COLONGT BY BAR AND ]
-- On WITH reduce production term_ -> app_term COLONQT ty_term
-- On VERBOSITY reduce production term_ -> app_term COLONQT ty_term
-- On TRY reduce production term_ -> app_term COLONQT ty_term
-- On SEMISEMI reduce production term_ -> app_term COLONQT ty_term
-- On RULE reduce production term_ -> app_term COLONQT ty_term
-- On RPAREN reduce production term_ -> app_term COLONQT ty_term
-- On REQUIRE reduce production term_ -> app_term COLONQT ty_term
-- On RBRACE reduce production term_ -> app_term COLONQT ty_term
-- On OPERATION reduce production term_ -> app_term COLONQT ty_term
-- On OPEN reduce production term_ -> app_term COLONQT ty_term
-- On MODULE reduce production term_ -> app_term COLONQT ty_term
-- On MLTYPE reduce production term_ -> app_term COLONQT ty_term
-- On LET reduce production term_ -> app_term COLONQT ty_term
-- On INCLUDE reduce production term_ -> app_term COLONQT ty_term
-- On IN reduce production term_ -> app_term COLONQT ty_term
-- On EXTERNAL reduce production term_ -> app_term COLONQT ty_term
-- On EXCEPTION reduce production term_ -> app_term COLONQT ty_term
-- On EOF reduce production term_ -> app_term COLONQT ty_term
-- On END reduce production term_ -> app_term COLONQT ty_term
-- On COMMA reduce production term_ -> app_term COLONQT ty_term
-- On COLONGT reduce production term_ -> app_term COLONQT ty_term
-- On BY reduce production term_ -> app_term COLONQT ty_term
-- On BAR reduce production term_ -> app_term COLONQT ty_term
-- On AND reduce production term_ -> app_term COLONQT ty_term

State 368:
term_ -> app_term COLON . ty_term [ WITH VERBOSITY TRY SEMISEMI RULE RPAREN REQUIRE RBRACE OPERATION OPEN MODULE MLTYPE LET INCLUDE IN EXTERNAL EXCEPTION EOF END COMMA COLONGT BY BAR AND ]
-- On REF shift to state 4
-- On RAISE shift to state 12
-- On QUOTED_STRING shift to state 5
-- On QQMARK shift to state 15
-- On PREFIXOP shift to state 6
-- On OCCURS shift to state 18
-- On NATURAL shift to state 7
-- On NAME shift to state 8
-- On LPAREN shift to state 9
-- On LBRACK shift to state 13
-- On LBRACE shift to state 156
-- On CONVERT shift to state 130
-- On CONTEXT shift to state 136
-- On CONGRUENCE shift to state 138
-- On BANG shift to state 19
-- On ABSTRACT shift to state 144
-- On ty_term_ shift to state 164
-- On ty_term shift to state 369
-- On tt_name shift to state 20
-- On substitution_term_ shift to state 147
-- On substitution_term shift to state 148
-- On simple_term_ shift to state 21
-- On prefix_term_ shift to state 134
-- On nonempty_list(maybe_typed_binder) shift to state 167
-- On module_path shift to state 24
-- On module_name shift to state 45
-- On maybe_typed_binder shift to state 168
-- On mark_location(ty_term_) shift to state 170
-- On mark_location(substitution_term_) shift to state 135
-- On mark_location(binop_term_) shift to state 171
-- On mark_location(app_term_) shift to state 152
-- On binop_term_ shift to state 172
-- On binop_term shift to state 173
-- On app_term_ shift to state 179
-- On app_term shift to state 180
-- On any_name shift to state 47
-- On abstraction shift to state 205

State 369:
term_ -> app_term COLON ty_term . [ WITH VERBOSITY TRY SEMISEMI RULE RPAREN REQUIRE RBRACE OPERATION OPEN MODULE MLTYPE LET INCLUDE IN EXTERNAL EXCEPTION EOF END COMMA COLONGT BY BAR AND ]
-- On WITH reduce production term_ -> app_term COLON ty_term
-- On VERBOSITY reduce production term_ -> app_term COLON ty_term
-- On TRY reduce production term_ -> app_term COLON ty_term
-- On SEMISEMI reduce production term_ -> app_term COLON ty_term
-- On RULE reduce production term_ -> app_term COLON ty_term
-- On RPAREN reduce production term_ -> app_term COLON ty_term
-- On REQUIRE reduce production term_ -> app_term COLON ty_term
-- On RBRACE reduce production term_ -> app_term COLON ty_term
-- On OPERATION reduce production term_ -> app_term COLON ty_term
-- On OPEN reduce production term_ -> app_term COLON ty_term
-- On MODULE reduce production term_ -> app_term COLON ty_term
-- On MLTYPE reduce production term_ -> app_term COLON ty_term
-- On LET reduce production term_ -> app_term COLON ty_term
-- On INCLUDE reduce production term_ -> app_term COLON ty_term
-- On IN reduce production term_ -> app_term COLON ty_term
-- On EXTERNAL reduce production term_ -> app_term COLON ty_term
-- On EXCEPTION reduce production term_ -> app_term COLON ty_term
-- On EOF reduce production term_ -> app_term COLON ty_term
-- On END reduce production term_ -> app_term COLON ty_term
-- On COMMA reduce production term_ -> app_term COLON ty_term
-- On COLONGT reduce production term_ -> app_term COLON ty_term
-- On BY reduce production term_ -> app_term COLON ty_term
-- On BAR reduce production term_ -> app_term COLON ty_term
-- On AND reduce production term_ -> app_term COLON ty_term

State 370:
premise_ -> LPAREN local_context app_term . EQEQ ty_term equality_premise_name RPAREN [ TYPE LPAREN COLON ARROW ]
premise_ -> LPAREN local_context app_term . EQEQ app_term COLON term equality_premise_name RPAREN [ TYPE LPAREN COLON ARROW ]
-- On EQEQ shift to state 371

State 371:
premise_ -> LPAREN local_context app_term EQEQ . ty_term equality_premise_name RPAREN [ TYPE LPAREN COLON ARROW ]
premise_ -> LPAREN local_context app_term EQEQ . app_term COLON term equality_premise_name RPAREN [ TYPE LPAREN COLON ARROW ]
-- On REF shift to state 4
-- On RAISE shift to state 12
-- On QUOTED_STRING shift to state 5
-- On QQMARK shift to state 15
-- On PREFIXOP shift to state 6
-- On OCCURS shift to state 18
-- On NATURAL shift to state 7
-- On NAME shift to state 8
-- On LPAREN shift to state 9
-- On LBRACK shift to state 13
-- On LBRACE shift to state 156
-- On CONVERT shift to state 130
-- On CONTEXT shift to state 136
-- On CONGRUENCE shift to state 138
-- On BANG shift to state 19
-- On ABSTRACT shift to state 144
-- On ty_term_ shift to state 164
-- On ty_term shift to state 372
-- On tt_name shift to state 20
-- On substitution_term_ shift to state 147
-- On substitution_term shift to state 148
-- On simple_term_ shift to state 21
-- On prefix_term_ shift to state 134
-- On nonempty_list(maybe_typed_binder) shift to state 167
-- On module_path shift to state 24
-- On module_name shift to state 45
-- On maybe_typed_binder shift to state 168
-- On mark_location(ty_term_) shift to state 170
-- On mark_location(substitution_term_) shift to state 135
-- On mark_location(binop_term_) shift to state 171
-- On mark_location(app_term_) shift to state 152
-- On binop_term_ shift to state 172
-- On binop_term shift to state 173
-- On app_term_ shift to state 179
-- On app_term shift to state 377
-- On any_name shift to state 47
-- On abstraction shift to state 205

State 372:
premise_ -> LPAREN local_context app_term EQEQ ty_term . equality_premise_name RPAREN [ TYPE LPAREN COLON ARROW ]
-- On BY shift to state 373
-- On equality_premise_name shift to state 375
-- On RPAREN reduce production equality_premise_name ->

State 373:
equality_premise_name -> BY . opt_name(tt_name) [ RPAREN ]
-- On UNDERSCORE shift to state 157
-- On NAME shift to state 158
-- On LPAREN shift to state 26
-- On tt_name shift to state 159
-- On opt_name(tt_name) shift to state 374

State 374:
equality_premise_name -> BY opt_name(tt_name) . [ RPAREN ]
-- On RPAREN reduce production equality_premise_name -> BY opt_name(tt_name)

State 375:
premise_ -> LPAREN local_context app_term EQEQ ty_term equality_premise_name . RPAREN [ TYPE LPAREN COLON ARROW ]
-- On RPAREN shift to state 376

State 376:
premise_ -> LPAREN local_context app_term EQEQ ty_term equality_premise_name RPAREN . [ TYPE LPAREN COLON ARROW ]
-- On TYPE reduce production premise_ -> LPAREN local_context app_term EQEQ ty_term equality_premise_name RPAREN
-- On LPAREN reduce production premise_ -> LPAREN local_context app_term EQEQ ty_term equality_premise_name RPAREN
-- On COLON reduce production premise_ -> LPAREN local_context app_term EQEQ ty_term equality_premise_name RPAREN
-- On ARROW reduce production premise_ -> LPAREN local_context app_term EQEQ ty_term equality_premise_name RPAREN

State 377:
binop_term_ -> app_term . COLONEQ binop_term [ STAR RPAREN INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQ BY ]
binop_term_ -> app_term . EQEQ app_term BY app_term [ STAR RPAREN INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQ BY ]
binop_term_ -> app_term . EQEQ app_term COLON app_term BY app_term [ STAR RPAREN INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQ BY ]
binop_term_ -> app_term . EQEQ app_term BY QQMARK [ STAR RPAREN INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQ BY ]
binop_term_ -> app_term . EQEQ app_term COLON app_term BY QQMARK [ STAR RPAREN INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQ BY ]
premise_ -> LPAREN local_context app_term EQEQ app_term . COLON term equality_premise_name RPAREN [ TYPE LPAREN COLON ARROW ]
-- On EQEQ shift to state 181
-- On COLONEQ shift to state 191
-- On COLON shift to state 378

State 378:
premise_ -> LPAREN local_context app_term EQEQ app_term COLON . term equality_premise_name RPAREN [ TYPE LPAREN COLON ARROW ]
-- On WITH shift to state 2
-- On TRY shift to state 3
-- On REF shift to state 4
-- On RAISE shift to state 12
-- On QUOTED_STRING shift to state 5
-- On QQMARK shift to state 15
-- On PREFIXOP shift to state 6
-- On OCCURS shift to state 18
-- On NATURAL shift to state 7
-- On NAME shift to state 8
-- On MATCH shift to state 51
-- On LPAREN shift to state 9
-- On LET shift to state 52
-- On LBRACK shift to state 13
-- On LBRACE shift to state 156
-- On HANDLER shift to state 209
-- On FUN shift to state 330
-- On FRESH shift to state 338
-- On DERIVE shift to state 342
-- On CONVERT shift to state 130
-- On CONTEXT shift to state 136
-- On CONGRUENCE shift to state 138
-- On BANG shift to state 19
-- On ABSTRACT shift to state 144
-- On ty_term_ shift to state 357
-- On tt_name shift to state 20
-- On term_ shift to state 358
-- On term shift to state 379
-- On substitution_term_ shift to state 147
-- On substitution_term shift to state 148
-- On simple_term_ shift to state 21
-- On prefix_term_ shift to state 134
-- On nonempty_list(maybe_typed_binder) shift to state 167
-- On module_path shift to state 24
-- On module_name shift to state 45
-- On maybe_typed_binder shift to state 168
-- On mark_location(term_) shift to state 361
-- On mark_location(substitution_term_) shift to state 135
-- On mark_location(binop_term_) shift to state 171
-- On mark_location(app_term_) shift to state 152
-- On binop_term_ shift to state 172
-- On binop_term shift to state 362
-- On app_term_ shift to state 179
-- On app_term shift to state 365
-- On any_name shift to state 47
-- On abstraction shift to state 205

State 379:
premise_ -> LPAREN local_context app_term EQEQ app_term COLON term . equality_premise_name RPAREN [ TYPE LPAREN COLON ARROW ]
-- On BY shift to state 373
-- On equality_premise_name shift to state 380
-- On RPAREN reduce production equality_premise_name ->

State 380:
premise_ -> LPAREN local_context app_term EQEQ app_term COLON term equality_premise_name . RPAREN [ TYPE LPAREN COLON ARROW ]
-- On RPAREN shift to state 381

State 381:
premise_ -> LPAREN local_context app_term EQEQ app_term COLON term equality_premise_name RPAREN . [ TYPE LPAREN COLON ARROW ]
-- On TYPE reduce production premise_ -> LPAREN local_context app_term EQEQ app_term COLON term equality_premise_name RPAREN
-- On LPAREN reduce production premise_ -> LPAREN local_context app_term EQEQ app_term COLON term equality_premise_name RPAREN
-- On COLON reduce production premise_ -> LPAREN local_context app_term EQEQ app_term COLON term equality_premise_name RPAREN
-- On ARROW reduce production premise_ -> LPAREN local_context app_term EQEQ app_term COLON term equality_premise_name RPAREN

State 382:
local_context -> list(typed_binder) . [ UNDERSCORE REF RAISE QUOTED_STRING PREFIXOP OCCURS NATURAL NAME LPAREN LBRACK CONVERT CONTEXT CONGRUENCE BANG ABSTRACT ]
-- On UNDERSCORE reduce production local_context -> list(typed_binder)
-- On REF reduce production local_context -> list(typed_binder)
-- On RAISE reduce production local_context -> list(typed_binder)
-- On QUOTED_STRING reduce production local_context -> list(typed_binder)
-- On PREFIXOP reduce production local_context -> list(typed_binder)
-- On OCCURS reduce production local_context -> list(typed_binder)
-- On NATURAL reduce production local_context -> list(typed_binder)
-- On NAME reduce production local_context -> list(typed_binder)
-- On LPAREN reduce production local_context -> list(typed_binder)
-- On LBRACK reduce production local_context -> list(typed_binder)
-- On CONVERT reduce production local_context -> list(typed_binder)
-- On CONTEXT reduce production local_context -> list(typed_binder)
-- On CONGRUENCE reduce production local_context -> list(typed_binder)
-- On BANG reduce production local_context -> list(typed_binder)
-- On ABSTRACT reduce production local_context -> list(typed_binder)

State 383:
mark_location(premise_) -> premise_ . [ TYPE LPAREN COLON ARROW ]
-- On TYPE reduce production mark_location(premise_) -> premise_
-- On LPAREN reduce production mark_location(premise_) -> premise_
-- On COLON reduce production mark_location(premise_) -> premise_
-- On ARROW reduce production mark_location(premise_) -> premise_

State 384:
nonempty_list(premise) -> premise . [ ARROW ]
nonempty_list(premise) -> premise . nonempty_list(premise) [ ARROW ]
-- On LPAREN shift to state 343
-- On premise_ shift to state 383
-- On premise shift to state 384
-- On nonempty_list(premise) shift to state 385
-- On mark_location(premise_) shift to state 386
-- On ARROW reduce production nonempty_list(premise) -> premise

State 385:
nonempty_list(premise) -> premise nonempty_list(premise) . [ ARROW ]
-- On ARROW reduce production nonempty_list(premise) -> premise nonempty_list(premise)

State 386:
premise -> mark_location(premise_) . [ TYPE LPAREN COLON ARROW ]
-- On TYPE reduce production premise -> mark_location(premise_)
-- On LPAREN reduce production premise -> mark_location(premise_)
-- On COLON reduce production premise -> mark_location(premise_)
-- On ARROW reduce production premise -> mark_location(premise_)

State 387:
term_ -> DERIVE nonempty_list(premise) . ARROW term [ WITH VERBOSITY TRY SEMISEMI RULE RPAREN REQUIRE RBRACE OPERATION OPEN MODULE MLTYPE LET INCLUDE IN EXTERNAL EXCEPTION EOF END COMMA COLONGT BY BAR AND ]
-- On ARROW shift to state 388

State 388:
term_ -> DERIVE nonempty_list(premise) ARROW . term [ WITH VERBOSITY TRY SEMISEMI RULE RPAREN REQUIRE RBRACE OPERATION OPEN MODULE MLTYPE LET INCLUDE IN EXTERNAL EXCEPTION EOF END COMMA COLONGT BY BAR AND ]
-- On WITH shift to state 2
-- On TRY shift to state 3
-- On REF shift to state 4
-- On RAISE shift to state 12
-- On QUOTED_STRING shift to state 5
-- On QQMARK shift to state 15
-- On PREFIXOP shift to state 6
-- On OCCURS shift to state 18
-- On NATURAL shift to state 7
-- On NAME shift to state 8
-- On MATCH shift to state 51
-- On LPAREN shift to state 9
-- On LET shift to state 52
-- On LBRACK shift to state 13
-- On LBRACE shift to state 156
-- On HANDLER shift to state 209
-- On FUN shift to state 330
-- On FRESH shift to state 338
-- On DERIVE shift to state 342
-- On CONVERT shift to state 130
-- On CONTEXT shift to state 136
-- On CONGRUENCE shift to state 138
-- On BANG shift to state 19
-- On ABSTRACT shift to state 144
-- On ty_term_ shift to state 357
-- On tt_name shift to state 20
-- On term_ shift to state 358
-- On term shift to state 389
-- On substitution_term_ shift to state 147
-- On substitution_term shift to state 148
-- On simple_term_ shift to state 21
-- On prefix_term_ shift to state 134
-- On nonempty_list(maybe_typed_binder) shift to state 167
-- On module_path shift to state 24
-- On module_name shift to state 45
-- On maybe_typed_binder shift to state 168
-- On mark_location(term_) shift to state 361
-- On mark_location(substitution_term_) shift to state 135
-- On mark_location(binop_term_) shift to state 171
-- On mark_location(app_term_) shift to state 152
-- On binop_term_ shift to state 172
-- On binop_term shift to state 362
-- On app_term_ shift to state 179
-- On app_term shift to state 365
-- On any_name shift to state 47
-- On abstraction shift to state 205

State 389:
term_ -> DERIVE nonempty_list(premise) ARROW term . [ WITH VERBOSITY TRY SEMISEMI RULE RPAREN REQUIRE RBRACE OPERATION OPEN MODULE MLTYPE LET INCLUDE IN EXTERNAL EXCEPTION EOF END COMMA COLONGT BY BAR AND ]
-- On WITH reduce production term_ -> DERIVE nonempty_list(premise) ARROW term
-- On VERBOSITY reduce production term_ -> DERIVE nonempty_list(premise) ARROW term
-- On TRY reduce production term_ -> DERIVE nonempty_list(premise) ARROW term
-- On SEMISEMI reduce production term_ -> DERIVE nonempty_list(premise) ARROW term
-- On RULE reduce production term_ -> DERIVE nonempty_list(premise) ARROW term
-- On RPAREN reduce production term_ -> DERIVE nonempty_list(premise) ARROW term
-- On REQUIRE reduce production term_ -> DERIVE nonempty_list(premise) ARROW term
-- On RBRACE reduce production term_ -> DERIVE nonempty_list(premise) ARROW term
-- On OPERATION reduce production term_ -> DERIVE nonempty_list(premise) ARROW term
-- On OPEN reduce production term_ -> DERIVE nonempty_list(premise) ARROW term
-- On MODULE reduce production term_ -> DERIVE nonempty_list(premise) ARROW term
-- On MLTYPE reduce production term_ -> DERIVE nonempty_list(premise) ARROW term
-- On LET reduce production term_ -> DERIVE nonempty_list(premise) ARROW term
-- On INCLUDE reduce production term_ -> DERIVE nonempty_list(premise) ARROW term
-- On IN reduce production term_ -> DERIVE nonempty_list(premise) ARROW term
-- On EXTERNAL reduce production term_ -> DERIVE nonempty_list(premise) ARROW term
-- On EXCEPTION reduce production term_ -> DERIVE nonempty_list(premise) ARROW term
-- On EOF reduce production term_ -> DERIVE nonempty_list(premise) ARROW term
-- On END reduce production term_ -> DERIVE nonempty_list(premise) ARROW term
-- On COMMA reduce production term_ -> DERIVE nonempty_list(premise) ARROW term
-- On COLONGT reduce production term_ -> DERIVE nonempty_list(premise) ARROW term
-- On BY reduce production term_ -> DERIVE nonempty_list(premise) ARROW term
-- On BAR reduce production term_ -> DERIVE nonempty_list(premise) ARROW term
-- On AND reduce production term_ -> DERIVE nonempty_list(premise) ARROW term

State 390:
term_ -> FUN nonempty_list(ml_arg) ARROW term . [ WITH VERBOSITY TRY SEMISEMI RULE RPAREN REQUIRE RBRACE OPERATION OPEN MODULE MLTYPE LET INCLUDE IN EXTERNAL EXCEPTION EOF END COMMA COLONGT BY BAR AND ]
-- On WITH reduce production term_ -> FUN nonempty_list(ml_arg) ARROW term
-- On VERBOSITY reduce production term_ -> FUN nonempty_list(ml_arg) ARROW term
-- On TRY reduce production term_ -> FUN nonempty_list(ml_arg) ARROW term
-- On SEMISEMI reduce production term_ -> FUN nonempty_list(ml_arg) ARROW term
-- On RULE reduce production term_ -> FUN nonempty_list(ml_arg) ARROW term
-- On RPAREN reduce production term_ -> FUN nonempty_list(ml_arg) ARROW term
-- On REQUIRE reduce production term_ -> FUN nonempty_list(ml_arg) ARROW term
-- On RBRACE reduce production term_ -> FUN nonempty_list(ml_arg) ARROW term
-- On OPERATION reduce production term_ -> FUN nonempty_list(ml_arg) ARROW term
-- On OPEN reduce production term_ -> FUN nonempty_list(ml_arg) ARROW term
-- On MODULE reduce production term_ -> FUN nonempty_list(ml_arg) ARROW term
-- On MLTYPE reduce production term_ -> FUN nonempty_list(ml_arg) ARROW term
-- On LET reduce production term_ -> FUN nonempty_list(ml_arg) ARROW term
-- On INCLUDE reduce production term_ -> FUN nonempty_list(ml_arg) ARROW term
-- On IN reduce production term_ -> FUN nonempty_list(ml_arg) ARROW term
-- On EXTERNAL reduce production term_ -> FUN nonempty_list(ml_arg) ARROW term
-- On EXCEPTION reduce production term_ -> FUN nonempty_list(ml_arg) ARROW term
-- On EOF reduce production term_ -> FUN nonempty_list(ml_arg) ARROW term
-- On END reduce production term_ -> FUN nonempty_list(ml_arg) ARROW term
-- On COMMA reduce production term_ -> FUN nonempty_list(ml_arg) ARROW term
-- On COLONGT reduce production term_ -> FUN nonempty_list(ml_arg) ARROW term
-- On BY reduce production term_ -> FUN nonempty_list(ml_arg) ARROW term
-- On BAR reduce production term_ -> FUN nonempty_list(ml_arg) ARROW term
-- On AND reduce production term_ -> FUN nonempty_list(ml_arg) ARROW term

State 391:
ml_arg -> ml_name . [ NAME LPAREN EQ COLONGT ARROW ]
-- On NAME reduce production ml_arg -> ml_name
-- On LPAREN reduce production ml_arg -> ml_name
-- On EQ reduce production ml_arg -> ml_name
-- On COLONGT reduce production ml_arg -> ml_name
-- On ARROW reduce production ml_arg -> ml_name

State 392:
nonempty_list(ml_arg) -> ml_arg . [ ARROW ]
nonempty_list(ml_arg) -> ml_arg . nonempty_list(ml_arg) [ ARROW ]
-- On NAME shift to state 118
-- On LPAREN shift to state 331
-- On nonempty_list(ml_arg) shift to state 393
-- On ml_name shift to state 391
-- On ml_arg shift to state 392
-- On ARROW reduce production nonempty_list(ml_arg) -> ml_arg

State 393:
nonempty_list(ml_arg) -> ml_arg nonempty_list(ml_arg) . [ ARROW ]
-- On ARROW reduce production nonempty_list(ml_arg) -> ml_arg nonempty_list(ml_arg)

State 394:
match_case -> pattern when_guard ARROW term . [ END BAR ]
-- On END reduce production match_case -> pattern when_guard ARROW term
-- On BAR reduce production match_case -> pattern when_guard ARROW term

State 395:
handler_case -> VAL match_case . [ END BAR ]
-- On END reduce production handler_case -> VAL match_case
-- On BAR reduce production handler_case -> VAL match_case

State 396:
handler_case -> RAISE . match_case [ END BAR ]
-- On UNDERSCORE shift to state 211
-- On UATOM shift to state 212
-- On QUOTED_STRING shift to state 213
-- On QQMARK shift to state 218
-- On PREFIXOP shift to state 216
-- On NAME shift to state 220
-- On LPAREN shift to state 221
-- On LBRACK shift to state 226
-- On LBRACE shift to state 227
-- On tt_name shift to state 20
-- On tt_maybe_typed_binder shift to state 233
-- On simple_pattern_ shift to state 234
-- On prefix_pattern_ shift to state 235
-- On pattern_ shift to state 236
-- On pattern shift to state 325
-- On module_path shift to state 238
-- On module_name shift to state 45
-- On ml_name shift to state 263
-- On match_case shift to state 397
-- On mark_location(pattern_) shift to state 266
-- On mark_location(binop_pattern_) shift to state 267
-- On binop_pattern_ shift to state 268
-- On binop_pattern shift to state 269
-- On app_pattern_ shift to state 276
-- On any_name shift to state 277

State 397:
handler_case -> RAISE match_case . [ END BAR ]
-- On END reduce production handler_case -> RAISE match_case
-- On BAR reduce production handler_case -> RAISE match_case

State 398:
module_name -> NAME . [ PERIOD ]
op_name -> NAME . [ UNDERSCORE UATOM QUOTED_STRING QQMARK PREFIXOP NAME LPAREN LBRACK COLON ARROW ]
-- On UNDERSCORE reduce production op_name -> NAME
-- On UATOM reduce production op_name -> NAME
-- On QUOTED_STRING reduce production op_name -> NAME
-- On QQMARK reduce production op_name -> NAME
-- On PREFIXOP reduce production op_name -> NAME
-- On PERIOD reduce production module_name -> NAME
-- On NAME reduce production op_name -> NAME
-- On LPAREN reduce production op_name -> NAME
-- On LBRACK reduce production op_name -> NAME
-- On COLON reduce production op_name -> NAME
-- On ARROW reduce production op_name -> NAME

State 399:
handler_cases -> BAR . separated_nonempty_list(BAR,handler_case) [ END ]
-- On VAL shift to state 210
-- On RAISE shift to state 396
-- On NAME shift to state 398
-- On separated_nonempty_list(BAR,handler_case) shift to state 400
-- On op_name shift to state 401
-- On module_path shift to state 410
-- On module_name shift to state 45
-- On handler_case shift to state 417

State 400:
handler_cases -> BAR separated_nonempty_list(BAR,handler_case) . [ END ]
-- On END reduce production handler_cases -> BAR separated_nonempty_list(BAR,handler_case)

State 401:
handler_case -> op_name . list(prefix_pattern) handler_checking ARROW term [ END BAR ]
-- On UNDERSCORE shift to state 211
-- On UATOM shift to state 212
-- On QUOTED_STRING shift to state 213
-- On QQMARK shift to state 214
-- On PREFIXOP shift to state 216
-- On NAME shift to state 57
-- On LPAREN shift to state 217
-- On LBRACK shift to state 226
-- On simple_pattern_ shift to state 234
-- On prefix_pattern_ shift to state 258
-- On prefix_pattern shift to state 402
-- On module_path shift to state 261
-- On module_name shift to state 45
-- On ml_name shift to state 263
-- On mark_location(prefix_pattern_) shift to state 264
-- On list(prefix_pattern) shift to state 404
-- On COLON reduce production list(prefix_pattern) ->
-- On ARROW reduce production list(prefix_pattern) ->

State 402:
list(prefix_pattern) -> prefix_pattern . list(prefix_pattern) [ COLON ARROW ]
-- On UNDERSCORE shift to state 211
-- On UATOM shift to state 212
-- On QUOTED_STRING shift to state 213
-- On QQMARK shift to state 214
-- On PREFIXOP shift to state 216
-- On NAME shift to state 57
-- On LPAREN shift to state 217
-- On LBRACK shift to state 226
-- On simple_pattern_ shift to state 234
-- On prefix_pattern_ shift to state 258
-- On prefix_pattern shift to state 402
-- On module_path shift to state 261
-- On module_name shift to state 45
-- On ml_name shift to state 263
-- On mark_location(prefix_pattern_) shift to state 264
-- On list(prefix_pattern) shift to state 403
-- On COLON reduce production list(prefix_pattern) ->
-- On ARROW reduce production list(prefix_pattern) ->

State 403:
list(prefix_pattern) -> prefix_pattern list(prefix_pattern) . [ COLON ARROW ]
-- On COLON reduce production list(prefix_pattern) -> prefix_pattern list(prefix_pattern)
-- On ARROW reduce production list(prefix_pattern) -> prefix_pattern list(prefix_pattern)

State 404:
handler_case -> op_name list(prefix_pattern) . handler_checking ARROW term [ END BAR ]
-- On COLON shift to state 405
-- On handler_checking shift to state 407
-- On ARROW reduce production handler_checking ->

State 405:
handler_checking -> COLON . pattern [ ARROW ]
-- On UNDERSCORE shift to state 211
-- On UATOM shift to state 212
-- On QUOTED_STRING shift to state 213
-- On QQMARK shift to state 218
-- On PREFIXOP shift to state 216
-- On NAME shift to state 220
-- On LPAREN shift to state 221
-- On LBRACK shift to state 226
-- On LBRACE shift to state 227
-- On tt_name shift to state 20
-- On tt_maybe_typed_binder shift to state 233
-- On simple_pattern_ shift to state 234
-- On prefix_pattern_ shift to state 235
-- On pattern_ shift to state 236
-- On pattern shift to state 406
-- On module_path shift to state 238
-- On module_name shift to state 45
-- On ml_name shift to state 263
-- On mark_location(pattern_) shift to state 266
-- On mark_location(binop_pattern_) shift to state 267
-- On binop_pattern_ shift to state 268
-- On binop_pattern shift to state 269
-- On app_pattern_ shift to state 276
-- On any_name shift to state 277

State 406:
handler_checking -> COLON pattern . [ ARROW ]
-- On ARROW reduce production handler_checking -> COLON pattern

State 407:
handler_case -> op_name list(prefix_pattern) handler_checking . ARROW term [ END BAR ]
-- On ARROW shift to state 408

State 408:
handler_case -> op_name list(prefix_pattern) handler_checking ARROW . term [ END BAR ]
-- On WITH shift to state 2
-- On TRY shift to state 3
-- On REF shift to state 4
-- On RAISE shift to state 12
-- On QUOTED_STRING shift to state 5
-- On QQMARK shift to state 15
-- On PREFIXOP shift to state 6
-- On OCCURS shift to state 18
-- On NATURAL shift to state 7
-- On NAME shift to state 8
-- On MATCH shift to state 51
-- On LPAREN shift to state 9
-- On LET shift to state 52
-- On LBRACK shift to state 13
-- On LBRACE shift to state 156
-- On HANDLER shift to state 209
-- On FUN shift to state 330
-- On FRESH shift to state 338
-- On DERIVE shift to state 342
-- On CONVERT shift to state 130
-- On CONTEXT shift to state 136
-- On CONGRUENCE shift to state 138
-- On BANG shift to state 19
-- On ABSTRACT shift to state 144
-- On ty_term_ shift to state 357
-- On tt_name shift to state 20
-- On term_ shift to state 358
-- On term shift to state 409
-- On substitution_term_ shift to state 147
-- On substitution_term shift to state 148
-- On simple_term_ shift to state 21
-- On prefix_term_ shift to state 134
-- On nonempty_list(maybe_typed_binder) shift to state 167
-- On module_path shift to state 24
-- On module_name shift to state 45
-- On maybe_typed_binder shift to state 168
-- On mark_location(term_) shift to state 361
-- On mark_location(substitution_term_) shift to state 135
-- On mark_location(binop_term_) shift to state 171
-- On mark_location(app_term_) shift to state 152
-- On binop_term_ shift to state 172
-- On binop_term shift to state 362
-- On app_term_ shift to state 179
-- On app_term shift to state 365
-- On any_name shift to state 47
-- On abstraction shift to state 205

State 409:
handler_case -> op_name list(prefix_pattern) handler_checking ARROW term . [ END BAR ]
-- On END reduce production handler_case -> op_name list(prefix_pattern) handler_checking ARROW term
-- On BAR reduce production handler_case -> op_name list(prefix_pattern) handler_checking ARROW term

State 410:
handler_case -> module_path . PERIOD op_name list(prefix_pattern) handler_checking ARROW term [ END BAR ]
module_path -> module_path . PERIOD module_name [ PERIOD ]
-- On PERIOD shift to state 411

State 411:
handler_case -> module_path PERIOD . op_name list(prefix_pattern) handler_checking ARROW term [ END BAR ]
module_path -> module_path PERIOD . module_name [ PERIOD ]
-- On NAME shift to state 398
-- On op_name shift to state 412
-- On module_name shift to state 43

State 412:
handler_case -> module_path PERIOD op_name . list(prefix_pattern) handler_checking ARROW term [ END BAR ]
-- On UNDERSCORE shift to state 211
-- On UATOM shift to state 212
-- On QUOTED_STRING shift to state 213
-- On QQMARK shift to state 214
-- On PREFIXOP shift to state 216
-- On NAME shift to state 57
-- On LPAREN shift to state 217
-- On LBRACK shift to state 226
-- On simple_pattern_ shift to state 234
-- On prefix_pattern_ shift to state 258
-- On prefix_pattern shift to state 402
-- On module_path shift to state 261
-- On module_name shift to state 45
-- On ml_name shift to state 263
-- On mark_location(prefix_pattern_) shift to state 264
-- On list(prefix_pattern) shift to state 413
-- On COLON reduce production list(prefix_pattern) ->
-- On ARROW reduce production list(prefix_pattern) ->

State 413:
handler_case -> module_path PERIOD op_name list(prefix_pattern) . handler_checking ARROW term [ END BAR ]
-- On COLON shift to state 405
-- On handler_checking shift to state 414
-- On ARROW reduce production handler_checking ->

State 414:
handler_case -> module_path PERIOD op_name list(prefix_pattern) handler_checking . ARROW term [ END BAR ]
-- On ARROW shift to state 415

State 415:
handler_case -> module_path PERIOD op_name list(prefix_pattern) handler_checking ARROW . term [ END BAR ]
-- On WITH shift to state 2
-- On TRY shift to state 3
-- On REF shift to state 4
-- On RAISE shift to state 12
-- On QUOTED_STRING shift to state 5
-- On QQMARK shift to state 15
-- On PREFIXOP shift to state 6
-- On OCCURS shift to state 18
-- On NATURAL shift to state 7
-- On NAME shift to state 8
-- On MATCH shift to state 51
-- On LPAREN shift to state 9
-- On LET shift to state 52
-- On LBRACK shift to state 13
-- On LBRACE shift to state 156
-- On HANDLER shift to state 209
-- On FUN shift to state 330
-- On FRESH shift to state 338
-- On DERIVE shift to state 342
-- On CONVERT shift to state 130
-- On CONTEXT shift to state 136
-- On CONGRUENCE shift to state 138
-- On BANG shift to state 19
-- On ABSTRACT shift to state 144
-- On ty_term_ shift to state 357
-- On tt_name shift to state 20
-- On term_ shift to state 358
-- On term shift to state 416
-- On substitution_term_ shift to state 147
-- On substitution_term shift to state 148
-- On simple_term_ shift to state 21
-- On prefix_term_ shift to state 134
-- On nonempty_list(maybe_typed_binder) shift to state 167
-- On module_path shift to state 24
-- On module_name shift to state 45
-- On maybe_typed_binder shift to state 168
-- On mark_location(term_) shift to state 361
-- On mark_location(substitution_term_) shift to state 135
-- On mark_location(binop_term_) shift to state 171
-- On mark_location(app_term_) shift to state 152
-- On binop_term_ shift to state 172
-- On binop_term shift to state 362
-- On app_term_ shift to state 179
-- On app_term shift to state 365
-- On any_name shift to state 47
-- On abstraction shift to state 205

State 416:
handler_case -> module_path PERIOD op_name list(prefix_pattern) handler_checking ARROW term . [ END BAR ]
-- On END reduce production handler_case -> module_path PERIOD op_name list(prefix_pattern) handler_checking ARROW term
-- On BAR reduce production handler_case -> module_path PERIOD op_name list(prefix_pattern) handler_checking ARROW term

State 417:
separated_nonempty_list(BAR,handler_case) -> handler_case . [ END ]
separated_nonempty_list(BAR,handler_case) -> handler_case . BAR separated_nonempty_list(BAR,handler_case) [ END ]
-- On BAR shift to state 418
-- On END reduce production separated_nonempty_list(BAR,handler_case) -> handler_case

State 418:
separated_nonempty_list(BAR,handler_case) -> handler_case BAR . separated_nonempty_list(BAR,handler_case) [ END ]
-- On VAL shift to state 210
-- On RAISE shift to state 396
-- On NAME shift to state 398
-- On separated_nonempty_list(BAR,handler_case) shift to state 419
-- On op_name shift to state 401
-- On module_path shift to state 410
-- On module_name shift to state 45
-- On handler_case shift to state 417

State 419:
separated_nonempty_list(BAR,handler_case) -> handler_case BAR separated_nonempty_list(BAR,handler_case) . [ END ]
-- On END reduce production separated_nonempty_list(BAR,handler_case) -> handler_case BAR separated_nonempty_list(BAR,handler_case)

State 420:
loption(separated_nonempty_list(BAR,handler_case)) -> separated_nonempty_list(BAR,handler_case) . [ END ]
-- On END reduce production loption(separated_nonempty_list(BAR,handler_case)) -> separated_nonempty_list(BAR,handler_case)

State 421:
handler_cases -> loption(separated_nonempty_list(BAR,handler_case)) . [ END ]
-- On END reduce production handler_cases -> loption(separated_nonempty_list(BAR,handler_case))

State 422:
term_ -> HANDLER handler_cases . END [ WITH VERBOSITY TRY SEMISEMI RULE RPAREN REQUIRE RBRACE OPERATION OPEN MODULE MLTYPE LET INCLUDE IN EXTERNAL EXCEPTION EOF END COMMA COLONGT BY BAR AND ]
-- On END shift to state 423

State 423:
term_ -> HANDLER handler_cases END . [ WITH VERBOSITY TRY SEMISEMI RULE RPAREN REQUIRE RBRACE OPERATION OPEN MODULE MLTYPE LET INCLUDE IN EXTERNAL EXCEPTION EOF END COMMA COLONGT BY BAR AND ]
-- On WITH reduce production term_ -> HANDLER handler_cases END
-- On VERBOSITY reduce production term_ -> HANDLER handler_cases END
-- On TRY reduce production term_ -> HANDLER handler_cases END
-- On SEMISEMI reduce production term_ -> HANDLER handler_cases END
-- On RULE reduce production term_ -> HANDLER handler_cases END
-- On RPAREN reduce production term_ -> HANDLER handler_cases END
-- On REQUIRE reduce production term_ -> HANDLER handler_cases END
-- On RBRACE reduce production term_ -> HANDLER handler_cases END
-- On OPERATION reduce production term_ -> HANDLER handler_cases END
-- On OPEN reduce production term_ -> HANDLER handler_cases END
-- On MODULE reduce production term_ -> HANDLER handler_cases END
-- On MLTYPE reduce production term_ -> HANDLER handler_cases END
-- On LET reduce production term_ -> HANDLER handler_cases END
-- On INCLUDE reduce production term_ -> HANDLER handler_cases END
-- On IN reduce production term_ -> HANDLER handler_cases END
-- On EXTERNAL reduce production term_ -> HANDLER handler_cases END
-- On EXCEPTION reduce production term_ -> HANDLER handler_cases END
-- On EOF reduce production term_ -> HANDLER handler_cases END
-- On END reduce production term_ -> HANDLER handler_cases END
-- On COMMA reduce production term_ -> HANDLER handler_cases END
-- On COLONGT reduce production term_ -> HANDLER handler_cases END
-- On BY reduce production term_ -> HANDLER handler_cases END
-- On BAR reduce production term_ -> HANDLER handler_cases END
-- On AND reduce production term_ -> HANDLER handler_cases END

State 424:
let_clause -> UNDERSCORE COLON app_term EQ term . [ WITH VERBOSITY SEMISEMI RULE REQUIRE OPERATION OPEN MODULE MLTYPE LET INCLUDE IN EXTERNAL EXCEPTION EOF END AND ]
-- On WITH reduce production let_clause -> UNDERSCORE COLON app_term EQ term
-- On VERBOSITY reduce production let_clause -> UNDERSCORE COLON app_term EQ term
-- On SEMISEMI reduce production let_clause -> UNDERSCORE COLON app_term EQ term
-- On RULE reduce production let_clause -> UNDERSCORE COLON app_term EQ term
-- On REQUIRE reduce production let_clause -> UNDERSCORE COLON app_term EQ term
-- On OPERATION reduce production let_clause -> UNDERSCORE COLON app_term EQ term
-- On OPEN reduce production let_clause -> UNDERSCORE COLON app_term EQ term
-- On MODULE reduce production let_clause -> UNDERSCORE COLON app_term EQ term
-- On MLTYPE reduce production let_clause -> UNDERSCORE COLON app_term EQ term
-- On LET reduce production let_clause -> UNDERSCORE COLON app_term EQ term
-- On INCLUDE reduce production let_clause -> UNDERSCORE COLON app_term EQ term
-- On IN reduce production let_clause -> UNDERSCORE COLON app_term EQ term
-- On EXTERNAL reduce production let_clause -> UNDERSCORE COLON app_term EQ term
-- On EXCEPTION reduce production let_clause -> UNDERSCORE COLON app_term EQ term
-- On EOF reduce production let_clause -> UNDERSCORE COLON app_term EQ term
-- On END reduce production let_clause -> UNDERSCORE COLON app_term EQ term
-- On AND reduce production let_clause -> UNDERSCORE COLON app_term EQ term

State 425:
let_clause -> UNDERSCORE let_annotation . EQ term [ WITH VERBOSITY SEMISEMI RULE REQUIRE OPERATION OPEN MODULE MLTYPE LET INCLUDE IN EXTERNAL EXCEPTION EOF END AND ]
-- On EQ shift to state 426

State 426:
let_clause -> UNDERSCORE let_annotation EQ . term [ WITH VERBOSITY SEMISEMI RULE REQUIRE OPERATION OPEN MODULE MLTYPE LET INCLUDE IN EXTERNAL EXCEPTION EOF END AND ]
-- On WITH shift to state 2
-- On TRY shift to state 3
-- On REF shift to state 4
-- On RAISE shift to state 12
-- On QUOTED_STRING shift to state 5
-- On QQMARK shift to state 15
-- On PREFIXOP shift to state 6
-- On OCCURS shift to state 18
-- On NATURAL shift to state 7
-- On NAME shift to state 8
-- On MATCH shift to state 51
-- On LPAREN shift to state 9
-- On LET shift to state 52
-- On LBRACK shift to state 13
-- On LBRACE shift to state 156
-- On HANDLER shift to state 209
-- On FUN shift to state 330
-- On FRESH shift to state 338
-- On DERIVE shift to state 342
-- On CONVERT shift to state 130
-- On CONTEXT shift to state 136
-- On CONGRUENCE shift to state 138
-- On BANG shift to state 19
-- On ABSTRACT shift to state 144
-- On ty_term_ shift to state 357
-- On tt_name shift to state 20
-- On term_ shift to state 358
-- On term shift to state 427
-- On substitution_term_ shift to state 147
-- On substitution_term shift to state 148
-- On simple_term_ shift to state 21
-- On prefix_term_ shift to state 134
-- On nonempty_list(maybe_typed_binder) shift to state 167
-- On module_path shift to state 24
-- On module_name shift to state 45
-- On maybe_typed_binder shift to state 168
-- On mark_location(term_) shift to state 361
-- On mark_location(substitution_term_) shift to state 135
-- On mark_location(binop_term_) shift to state 171
-- On mark_location(app_term_) shift to state 152
-- On binop_term_ shift to state 172
-- On binop_term shift to state 362
-- On app_term_ shift to state 179
-- On app_term shift to state 365
-- On any_name shift to state 47
-- On abstraction shift to state 205

State 427:
let_clause -> UNDERSCORE let_annotation EQ term . [ WITH VERBOSITY SEMISEMI RULE REQUIRE OPERATION OPEN MODULE MLTYPE LET INCLUDE IN EXTERNAL EXCEPTION EOF END AND ]
-- On WITH reduce production let_clause -> UNDERSCORE let_annotation EQ term
-- On VERBOSITY reduce production let_clause -> UNDERSCORE let_annotation EQ term
-- On SEMISEMI reduce production let_clause -> UNDERSCORE let_annotation EQ term
-- On RULE reduce production let_clause -> UNDERSCORE let_annotation EQ term
-- On REQUIRE reduce production let_clause -> UNDERSCORE let_annotation EQ term
-- On OPERATION reduce production let_clause -> UNDERSCORE let_annotation EQ term
-- On OPEN reduce production let_clause -> UNDERSCORE let_annotation EQ term
-- On MODULE reduce production let_clause -> UNDERSCORE let_annotation EQ term
-- On MLTYPE reduce production let_clause -> UNDERSCORE let_annotation EQ term
-- On LET reduce production let_clause -> UNDERSCORE let_annotation EQ term
-- On INCLUDE reduce production let_clause -> UNDERSCORE let_annotation EQ term
-- On IN reduce production let_clause -> UNDERSCORE let_annotation EQ term
-- On EXTERNAL reduce production let_clause -> UNDERSCORE let_annotation EQ term
-- On EXCEPTION reduce production let_clause -> UNDERSCORE let_annotation EQ term
-- On EOF reduce production let_clause -> UNDERSCORE let_annotation EQ term
-- On END reduce production let_clause -> UNDERSCORE let_annotation EQ term
-- On AND reduce production let_clause -> UNDERSCORE let_annotation EQ term

State 428:
term_ -> LET REC . separated_nonempty_list(AND,recursive_clause) IN term [ WITH VERBOSITY TRY SEMISEMI RULE RPAREN REQUIRE RBRACE OPERATION OPEN MODULE MLTYPE LET INCLUDE IN EXTERNAL EXCEPTION EOF END COMMA COLONGT BY BAR AND ]
-- On NAME shift to state 118
-- On LPAREN shift to state 89
-- On separated_nonempty_list(AND,recursive_clause) shift to state 429
-- On recursive_clause shift to state 432
-- On ml_name shift to state 435

State 429:
term_ -> LET REC separated_nonempty_list(AND,recursive_clause) . IN term [ WITH VERBOSITY TRY SEMISEMI RULE RPAREN REQUIRE RBRACE OPERATION OPEN MODULE MLTYPE LET INCLUDE IN EXTERNAL EXCEPTION EOF END COMMA COLONGT BY BAR AND ]
-- On IN shift to state 430

State 430:
term_ -> LET REC separated_nonempty_list(AND,recursive_clause) IN . term [ WITH VERBOSITY TRY SEMISEMI RULE RPAREN REQUIRE RBRACE OPERATION OPEN MODULE MLTYPE LET INCLUDE IN EXTERNAL EXCEPTION EOF END COMMA COLONGT BY BAR AND ]
-- On WITH shift to state 2
-- On TRY shift to state 3
-- On REF shift to state 4
-- On RAISE shift to state 12
-- On QUOTED_STRING shift to state 5
-- On QQMARK shift to state 15
-- On PREFIXOP shift to state 6
-- On OCCURS shift to state 18
-- On NATURAL shift to state 7
-- On NAME shift to state 8
-- On MATCH shift to state 51
-- On LPAREN shift to state 9
-- On LET shift to state 52
-- On LBRACK shift to state 13
-- On LBRACE shift to state 156
-- On HANDLER shift to state 209
-- On FUN shift to state 330
-- On FRESH shift to state 338
-- On DERIVE shift to state 342
-- On CONVERT shift to state 130
-- On CONTEXT shift to state 136
-- On CONGRUENCE shift to state 138
-- On BANG shift to state 19
-- On ABSTRACT shift to state 144
-- On ty_term_ shift to state 357
-- On tt_name shift to state 20
-- On term_ shift to state 358
-- On term shift to state 431
-- On substitution_term_ shift to state 147
-- On substitution_term shift to state 148
-- On simple_term_ shift to state 21
-- On prefix_term_ shift to state 134
-- On nonempty_list(maybe_typed_binder) shift to state 167
-- On module_path shift to state 24
-- On module_name shift to state 45
-- On maybe_typed_binder shift to state 168
-- On mark_location(term_) shift to state 361
-- On mark_location(substitution_term_) shift to state 135
-- On mark_location(binop_term_) shift to state 171
-- On mark_location(app_term_) shift to state 152
-- On binop_term_ shift to state 172
-- On binop_term shift to state 362
-- On app_term_ shift to state 179
-- On app_term shift to state 365
-- On any_name shift to state 47
-- On abstraction shift to state 205

State 431:
term_ -> LET REC separated_nonempty_list(AND,recursive_clause) IN term . [ WITH VERBOSITY TRY SEMISEMI RULE RPAREN REQUIRE RBRACE OPERATION OPEN MODULE MLTYPE LET INCLUDE IN EXTERNAL EXCEPTION EOF END COMMA COLONGT BY BAR AND ]
-- On WITH reduce production term_ -> LET REC separated_nonempty_list(AND,recursive_clause) IN term
-- On VERBOSITY reduce production term_ -> LET REC separated_nonempty_list(AND,recursive_clause) IN term
-- On TRY reduce production term_ -> LET REC separated_nonempty_list(AND,recursive_clause) IN term
-- On SEMISEMI reduce production term_ -> LET REC separated_nonempty_list(AND,recursive_clause) IN term
-- On RULE reduce production term_ -> LET REC separated_nonempty_list(AND,recursive_clause) IN term
-- On RPAREN reduce production term_ -> LET REC separated_nonempty_list(AND,recursive_clause) IN term
-- On REQUIRE reduce production term_ -> LET REC separated_nonempty_list(AND,recursive_clause) IN term
-- On RBRACE reduce production term_ -> LET REC separated_nonempty_list(AND,recursive_clause) IN term
-- On OPERATION reduce production term_ -> LET REC separated_nonempty_list(AND,recursive_clause) IN term
-- On OPEN reduce production term_ -> LET REC separated_nonempty_list(AND,recursive_clause) IN term
-- On MODULE reduce production term_ -> LET REC separated_nonempty_list(AND,recursive_clause) IN term
-- On MLTYPE reduce production term_ -> LET REC separated_nonempty_list(AND,recursive_clause) IN term
-- On LET reduce production term_ -> LET REC separated_nonempty_list(AND,recursive_clause) IN term
-- On INCLUDE reduce production term_ -> LET REC separated_nonempty_list(AND,recursive_clause) IN term
-- On IN reduce production term_ -> LET REC separated_nonempty_list(AND,recursive_clause) IN term
-- On EXTERNAL reduce production term_ -> LET REC separated_nonempty_list(AND,recursive_clause) IN term
-- On EXCEPTION reduce production term_ -> LET REC separated_nonempty_list(AND,recursive_clause) IN term
-- On EOF reduce production term_ -> LET REC separated_nonempty_list(AND,recursive_clause) IN term
-- On END reduce production term_ -> LET REC separated_nonempty_list(AND,recursive_clause) IN term
-- On COMMA reduce production term_ -> LET REC separated_nonempty_list(AND,recursive_clause) IN term
-- On COLONGT reduce production term_ -> LET REC separated_nonempty_list(AND,recursive_clause) IN term
-- On BY reduce production term_ -> LET REC separated_nonempty_list(AND,recursive_clause) IN term
-- On BAR reduce production term_ -> LET REC separated_nonempty_list(AND,recursive_clause) IN term
-- On AND reduce production term_ -> LET REC separated_nonempty_list(AND,recursive_clause) IN term

State 432:
separated_nonempty_list(AND,recursive_clause) -> recursive_clause . [ WITH VERBOSITY SEMISEMI RULE REQUIRE OPERATION OPEN MODULE MLTYPE LET INCLUDE IN EXTERNAL EXCEPTION EOF END ]
separated_nonempty_list(AND,recursive_clause) -> recursive_clause . AND separated_nonempty_list(AND,recursive_clause) [ WITH VERBOSITY SEMISEMI RULE REQUIRE OPERATION OPEN MODULE MLTYPE LET INCLUDE IN EXTERNAL EXCEPTION EOF END ]
-- On AND shift to state 433
-- On WITH reduce production separated_nonempty_list(AND,recursive_clause) -> recursive_clause
-- On VERBOSITY reduce production separated_nonempty_list(AND,recursive_clause) -> recursive_clause
-- On SEMISEMI reduce production separated_nonempty_list(AND,recursive_clause) -> recursive_clause
-- On RULE reduce production separated_nonempty_list(AND,recursive_clause) -> recursive_clause
-- On REQUIRE reduce production separated_nonempty_list(AND,recursive_clause) -> recursive_clause
-- On OPERATION reduce production separated_nonempty_list(AND,recursive_clause) -> recursive_clause
-- On OPEN reduce production separated_nonempty_list(AND,recursive_clause) -> recursive_clause
-- On MODULE reduce production separated_nonempty_list(AND,recursive_clause) -> recursive_clause
-- On MLTYPE reduce production separated_nonempty_list(AND,recursive_clause) -> recursive_clause
-- On LET reduce production separated_nonempty_list(AND,recursive_clause) -> recursive_clause
-- On INCLUDE reduce production separated_nonempty_list(AND,recursive_clause) -> recursive_clause
-- On IN reduce production separated_nonempty_list(AND,recursive_clause) -> recursive_clause
-- On EXTERNAL reduce production separated_nonempty_list(AND,recursive_clause) -> recursive_clause
-- On EXCEPTION reduce production separated_nonempty_list(AND,recursive_clause) -> recursive_clause
-- On EOF reduce production separated_nonempty_list(AND,recursive_clause) -> recursive_clause
-- On END reduce production separated_nonempty_list(AND,recursive_clause) -> recursive_clause

State 433:
separated_nonempty_list(AND,recursive_clause) -> recursive_clause AND . separated_nonempty_list(AND,recursive_clause) [ WITH VERBOSITY SEMISEMI RULE REQUIRE OPERATION OPEN MODULE MLTYPE LET INCLUDE IN EXTERNAL EXCEPTION EOF END ]
-- On NAME shift to state 118
-- On LPAREN shift to state 89
-- On separated_nonempty_list(AND,recursive_clause) shift to state 434
-- On recursive_clause shift to state 432
-- On ml_name shift to state 435

State 434:
separated_nonempty_list(AND,recursive_clause) -> recursive_clause AND separated_nonempty_list(AND,recursive_clause) . [ WITH VERBOSITY SEMISEMI RULE REQUIRE OPERATION OPEN MODULE MLTYPE LET INCLUDE IN EXTERNAL EXCEPTION EOF END ]
-- On WITH reduce production separated_nonempty_list(AND,recursive_clause) -> recursive_clause AND separated_nonempty_list(AND,recursive_clause)
-- On VERBOSITY reduce production separated_nonempty_list(AND,recursive_clause) -> recursive_clause AND separated_nonempty_list(AND,recursive_clause)
-- On SEMISEMI reduce production separated_nonempty_list(AND,recursive_clause) -> recursive_clause AND separated_nonempty_list(AND,recursive_clause)
-- On RULE reduce production separated_nonempty_list(AND,recursive_clause) -> recursive_clause AND separated_nonempty_list(AND,recursive_clause)
-- On REQUIRE reduce production separated_nonempty_list(AND,recursive_clause) -> recursive_clause AND separated_nonempty_list(AND,recursive_clause)
-- On OPERATION reduce production separated_nonempty_list(AND,recursive_clause) -> recursive_clause AND separated_nonempty_list(AND,recursive_clause)
-- On OPEN reduce production separated_nonempty_list(AND,recursive_clause) -> recursive_clause AND separated_nonempty_list(AND,recursive_clause)
-- On MODULE reduce production separated_nonempty_list(AND,recursive_clause) -> recursive_clause AND separated_nonempty_list(AND,recursive_clause)
-- On MLTYPE reduce production separated_nonempty_list(AND,recursive_clause) -> recursive_clause AND separated_nonempty_list(AND,recursive_clause)
-- On LET reduce production separated_nonempty_list(AND,recursive_clause) -> recursive_clause AND separated_nonempty_list(AND,recursive_clause)
-- On INCLUDE reduce production separated_nonempty_list(AND,recursive_clause) -> recursive_clause AND separated_nonempty_list(AND,recursive_clause)
-- On IN reduce production separated_nonempty_list(AND,recursive_clause) -> recursive_clause AND separated_nonempty_list(AND,recursive_clause)
-- On EXTERNAL reduce production separated_nonempty_list(AND,recursive_clause) -> recursive_clause AND separated_nonempty_list(AND,recursive_clause)
-- On EXCEPTION reduce production separated_nonempty_list(AND,recursive_clause) -> recursive_clause AND separated_nonempty_list(AND,recursive_clause)
-- On EOF reduce production separated_nonempty_list(AND,recursive_clause) -> recursive_clause AND separated_nonempty_list(AND,recursive_clause)
-- On END reduce production separated_nonempty_list(AND,recursive_clause) -> recursive_clause AND separated_nonempty_list(AND,recursive_clause)

State 435:
recursive_clause -> ml_name . ml_arg list(ml_arg) let_annotation EQ term [ WITH VERBOSITY SEMISEMI RULE REQUIRE OPERATION OPEN MODULE MLTYPE LET INCLUDE IN EXTERNAL EXCEPTION EOF END AND ]
-- On NAME shift to state 118
-- On LPAREN shift to state 331
-- On ml_name shift to state 391
-- On ml_arg shift to state 436

State 436:
recursive_clause -> ml_name ml_arg . list(ml_arg) let_annotation EQ term [ WITH VERBOSITY SEMISEMI RULE REQUIRE OPERATION OPEN MODULE MLTYPE LET INCLUDE IN EXTERNAL EXCEPTION EOF END AND ]
-- On NAME shift to state 118
-- On LPAREN shift to state 331
-- On ml_name shift to state 391
-- On ml_arg shift to state 437
-- On list(ml_arg) shift to state 439
-- On EQ reduce production list(ml_arg) ->
-- On COLONGT reduce production list(ml_arg) ->

State 437:
list(ml_arg) -> ml_arg . list(ml_arg) [ EQ COLONGT ]
-- On NAME shift to state 118
-- On LPAREN shift to state 331
-- On ml_name shift to state 391
-- On ml_arg shift to state 437
-- On list(ml_arg) shift to state 438
-- On EQ reduce production list(ml_arg) ->
-- On COLONGT reduce production list(ml_arg) ->

State 438:
list(ml_arg) -> ml_arg list(ml_arg) . [ EQ COLONGT ]
-- On EQ reduce production list(ml_arg) -> ml_arg list(ml_arg)
-- On COLONGT reduce production list(ml_arg) -> ml_arg list(ml_arg)

State 439:
recursive_clause -> ml_name ml_arg list(ml_arg) . let_annotation EQ term [ WITH VERBOSITY SEMISEMI RULE REQUIRE OPERATION OPEN MODULE MLTYPE LET INCLUDE IN EXTERNAL EXCEPTION EOF END AND ]
-- On COLONGT shift to state 54
-- On let_annotation shift to state 440
-- On EQ reduce production let_annotation ->

State 440:
recursive_clause -> ml_name ml_arg list(ml_arg) let_annotation . EQ term [ WITH VERBOSITY SEMISEMI RULE REQUIRE OPERATION OPEN MODULE MLTYPE LET INCLUDE IN EXTERNAL EXCEPTION EOF END AND ]
-- On EQ shift to state 441

State 441:
recursive_clause -> ml_name ml_arg list(ml_arg) let_annotation EQ . term [ WITH VERBOSITY SEMISEMI RULE REQUIRE OPERATION OPEN MODULE MLTYPE LET INCLUDE IN EXTERNAL EXCEPTION EOF END AND ]
-- On WITH shift to state 2
-- On TRY shift to state 3
-- On REF shift to state 4
-- On RAISE shift to state 12
-- On QUOTED_STRING shift to state 5
-- On QQMARK shift to state 15
-- On PREFIXOP shift to state 6
-- On OCCURS shift to state 18
-- On NATURAL shift to state 7
-- On NAME shift to state 8
-- On MATCH shift to state 51
-- On LPAREN shift to state 9
-- On LET shift to state 52
-- On LBRACK shift to state 13
-- On LBRACE shift to state 156
-- On HANDLER shift to state 209
-- On FUN shift to state 330
-- On FRESH shift to state 338
-- On DERIVE shift to state 342
-- On CONVERT shift to state 130
-- On CONTEXT shift to state 136
-- On CONGRUENCE shift to state 138
-- On BANG shift to state 19
-- On ABSTRACT shift to state 144
-- On ty_term_ shift to state 357
-- On tt_name shift to state 20
-- On term_ shift to state 358
-- On term shift to state 442
-- On substitution_term_ shift to state 147
-- On substitution_term shift to state 148
-- On simple_term_ shift to state 21
-- On prefix_term_ shift to state 134
-- On nonempty_list(maybe_typed_binder) shift to state 167
-- On module_path shift to state 24
-- On module_name shift to state 45
-- On maybe_typed_binder shift to state 168
-- On mark_location(term_) shift to state 361
-- On mark_location(substitution_term_) shift to state 135
-- On mark_location(binop_term_) shift to state 171
-- On mark_location(app_term_) shift to state 152
-- On binop_term_ shift to state 172
-- On binop_term shift to state 362
-- On app_term_ shift to state 179
-- On app_term shift to state 365
-- On any_name shift to state 47
-- On abstraction shift to state 205

State 442:
recursive_clause -> ml_name ml_arg list(ml_arg) let_annotation EQ term . [ WITH VERBOSITY SEMISEMI RULE REQUIRE OPERATION OPEN MODULE MLTYPE LET INCLUDE IN EXTERNAL EXCEPTION EOF END AND ]
-- On WITH reduce production recursive_clause -> ml_name ml_arg list(ml_arg) let_annotation EQ term
-- On VERBOSITY reduce production recursive_clause -> ml_name ml_arg list(ml_arg) let_annotation EQ term
-- On SEMISEMI reduce production recursive_clause -> ml_name ml_arg list(ml_arg) let_annotation EQ term
-- On RULE reduce production recursive_clause -> ml_name ml_arg list(ml_arg) let_annotation EQ term
-- On REQUIRE reduce production recursive_clause -> ml_name ml_arg list(ml_arg) let_annotation EQ term
-- On OPERATION reduce production recursive_clause -> ml_name ml_arg list(ml_arg) let_annotation EQ term
-- On OPEN reduce production recursive_clause -> ml_name ml_arg list(ml_arg) let_annotation EQ term
-- On MODULE reduce production recursive_clause -> ml_name ml_arg list(ml_arg) let_annotation EQ term
-- On MLTYPE reduce production recursive_clause -> ml_name ml_arg list(ml_arg) let_annotation EQ term
-- On LET reduce production recursive_clause -> ml_name ml_arg list(ml_arg) let_annotation EQ term
-- On INCLUDE reduce production recursive_clause -> ml_name ml_arg list(ml_arg) let_annotation EQ term
-- On IN reduce production recursive_clause -> ml_name ml_arg list(ml_arg) let_annotation EQ term
-- On EXTERNAL reduce production recursive_clause -> ml_name ml_arg list(ml_arg) let_annotation EQ term
-- On EXCEPTION reduce production recursive_clause -> ml_name ml_arg list(ml_arg) let_annotation EQ term
-- On EOF reduce production recursive_clause -> ml_name ml_arg list(ml_arg) let_annotation EQ term
-- On END reduce production recursive_clause -> ml_name ml_arg list(ml_arg) let_annotation EQ term
-- On AND reduce production recursive_clause -> ml_name ml_arg list(ml_arg) let_annotation EQ term

State 443:
let_pattern_ -> LPAREN . loption(separated_nonempty_list(COMMA,pattern)) RPAREN [ EQ COLONGT ]
ml_name -> LPAREN . INFIXCONS RPAREN [ NAME LPAREN EQ COLONGT COLON ]
ml_name -> LPAREN . EQ RPAREN [ NAME LPAREN EQ COLONGT COLON ]
ml_name -> LPAREN . INFIXOP0 RPAREN [ NAME LPAREN EQ COLONGT COLON ]
ml_name -> LPAREN . INFIXOP1 RPAREN [ NAME LPAREN EQ COLONGT COLON ]
ml_name -> LPAREN . INFIXOP2 RPAREN [ NAME LPAREN EQ COLONGT COLON ]
ml_name -> LPAREN . INFIXOP3 RPAREN [ NAME LPAREN EQ COLONGT COLON ]
ml_name -> LPAREN . STAR RPAREN [ NAME LPAREN EQ COLONGT COLON ]
ml_name -> LPAREN . INFIXOP4 RPAREN [ NAME LPAREN EQ COLONGT COLON ]
ml_name -> LPAREN . PREFIXOP RPAREN [ NAME LPAREN EQ COLONGT COLON ]
-- On UNDERSCORE shift to state 211
-- On UATOM shift to state 212
-- On STAR shift to state 64
-- On QUOTED_STRING shift to state 213
-- On QQMARK shift to state 218
-- On PREFIXOP shift to state 323
-- On NAME shift to state 220
-- On LPAREN shift to state 221
-- On LBRACK shift to state 226
-- On LBRACE shift to state 227
-- On INFIXOP4 shift to state 68
-- On INFIXOP3 shift to state 70
-- On INFIXOP2 shift to state 72
-- On INFIXOP1 shift to state 74
-- On INFIXOP0 shift to state 76
-- On INFIXCONS shift to state 78
-- On EQ shift to state 80
-- On tt_name shift to state 20
-- On tt_maybe_typed_binder shift to state 233
-- On simple_pattern_ shift to state 234
-- On separated_nonempty_list(COMMA,pattern) shift to state 316
-- On prefix_pattern_ shift to state 235
-- On pattern_ shift to state 236
-- On pattern shift to state 317
-- On module_path shift to state 238
-- On module_name shift to state 45
-- On ml_name shift to state 263
-- On mark_location(pattern_) shift to state 266
-- On mark_location(binop_pattern_) shift to state 267
-- On loption(separated_nonempty_list(COMMA,pattern)) shift to state 444
-- On binop_pattern_ shift to state 268
-- On binop_pattern shift to state 269
-- On app_pattern_ shift to state 276
-- On any_name shift to state 277
-- On RPAREN reduce production loption(separated_nonempty_list(COMMA,pattern)) ->

State 444:
let_pattern_ -> LPAREN loption(separated_nonempty_list(COMMA,pattern)) . RPAREN [ EQ COLONGT ]
-- On RPAREN shift to state 445

State 445:
let_pattern_ -> LPAREN loption(separated_nonempty_list(COMMA,pattern)) RPAREN . [ EQ COLONGT ]
-- On EQ reduce production let_pattern_ -> LPAREN loption(separated_nonempty_list(COMMA,pattern)) RPAREN
-- On COLONGT reduce production let_pattern_ -> LPAREN loption(separated_nonempty_list(COMMA,pattern)) RPAREN

State 446:
let_pattern_ -> LBRACK . loption(separated_nonempty_list(SEMI,pattern)) RBRACK [ EQ COLONGT ]
-- On UNDERSCORE shift to state 211
-- On UATOM shift to state 212
-- On QUOTED_STRING shift to state 213
-- On QQMARK shift to state 218
-- On PREFIXOP shift to state 216
-- On NAME shift to state 220
-- On LPAREN shift to state 221
-- On LBRACK shift to state 226
-- On LBRACE shift to state 227
-- On tt_name shift to state 20
-- On tt_maybe_typed_binder shift to state 233
-- On simple_pattern_ shift to state 234
-- On separated_nonempty_list(SEMI,pattern) shift to state 309
-- On prefix_pattern_ shift to state 235
-- On pattern_ shift to state 236
-- On pattern shift to state 310
-- On module_path shift to state 238
-- On module_name shift to state 45
-- On ml_name shift to state 263
-- On mark_location(pattern_) shift to state 266
-- On mark_location(binop_pattern_) shift to state 267
-- On loption(separated_nonempty_list(SEMI,pattern)) shift to state 447
-- On binop_pattern_ shift to state 268
-- On binop_pattern shift to state 269
-- On app_pattern_ shift to state 276
-- On any_name shift to state 277
-- On RBRACK reduce production loption(separated_nonempty_list(SEMI,pattern)) ->

State 447:
let_pattern_ -> LBRACK loption(separated_nonempty_list(SEMI,pattern)) . RBRACK [ EQ COLONGT ]
-- On RBRACK shift to state 448

State 448:
let_pattern_ -> LBRACK loption(separated_nonempty_list(SEMI,pattern)) RBRACK . [ EQ COLONGT ]
-- On EQ reduce production let_pattern_ -> LBRACK loption(separated_nonempty_list(SEMI,pattern)) RBRACK
-- On COLONGT reduce production let_pattern_ -> LBRACK loption(separated_nonempty_list(SEMI,pattern)) RBRACK

State 449:
term_ -> LET separated_nonempty_list(AND,let_clause) . IN term [ WITH VERBOSITY TRY SEMISEMI RULE RPAREN REQUIRE RBRACE OPERATION OPEN MODULE MLTYPE LET INCLUDE IN EXTERNAL EXCEPTION EOF END COMMA COLONGT BY BAR AND ]
-- On IN shift to state 450

State 450:
term_ -> LET separated_nonempty_list(AND,let_clause) IN . term [ WITH VERBOSITY TRY SEMISEMI RULE RPAREN REQUIRE RBRACE OPERATION OPEN MODULE MLTYPE LET INCLUDE IN EXTERNAL EXCEPTION EOF END COMMA COLONGT BY BAR AND ]
-- On WITH shift to state 2
-- On TRY shift to state 3
-- On REF shift to state 4
-- On RAISE shift to state 12
-- On QUOTED_STRING shift to state 5
-- On QQMARK shift to state 15
-- On PREFIXOP shift to state 6
-- On OCCURS shift to state 18
-- On NATURAL shift to state 7
-- On NAME shift to state 8
-- On MATCH shift to state 51
-- On LPAREN shift to state 9
-- On LET shift to state 52
-- On LBRACK shift to state 13
-- On LBRACE shift to state 156
-- On HANDLER shift to state 209
-- On FUN shift to state 330
-- On FRESH shift to state 338
-- On DERIVE shift to state 342
-- On CONVERT shift to state 130
-- On CONTEXT shift to state 136
-- On CONGRUENCE shift to state 138
-- On BANG shift to state 19
-- On ABSTRACT shift to state 144
-- On ty_term_ shift to state 357
-- On tt_name shift to state 20
-- On term_ shift to state 358
-- On term shift to state 451
-- On substitution_term_ shift to state 147
-- On substitution_term shift to state 148
-- On simple_term_ shift to state 21
-- On prefix_term_ shift to state 134
-- On nonempty_list(maybe_typed_binder) shift to state 167
-- On module_path shift to state 24
-- On module_name shift to state 45
-- On maybe_typed_binder shift to state 168
-- On mark_location(term_) shift to state 361
-- On mark_location(substitution_term_) shift to state 135
-- On mark_location(binop_term_) shift to state 171
-- On mark_location(app_term_) shift to state 152
-- On binop_term_ shift to state 172
-- On binop_term shift to state 362
-- On app_term_ shift to state 179
-- On app_term shift to state 365
-- On any_name shift to state 47
-- On abstraction shift to state 205

State 451:
term_ -> LET separated_nonempty_list(AND,let_clause) IN term . [ WITH VERBOSITY TRY SEMISEMI RULE RPAREN REQUIRE RBRACE OPERATION OPEN MODULE MLTYPE LET INCLUDE IN EXTERNAL EXCEPTION EOF END COMMA COLONGT BY BAR AND ]
-- On WITH reduce production term_ -> LET separated_nonempty_list(AND,let_clause) IN term
-- On VERBOSITY reduce production term_ -> LET separated_nonempty_list(AND,let_clause) IN term
-- On TRY reduce production term_ -> LET separated_nonempty_list(AND,let_clause) IN term
-- On SEMISEMI reduce production term_ -> LET separated_nonempty_list(AND,let_clause) IN term
-- On RULE reduce production term_ -> LET separated_nonempty_list(AND,let_clause) IN term
-- On RPAREN reduce production term_ -> LET separated_nonempty_list(AND,let_clause) IN term
-- On REQUIRE reduce production term_ -> LET separated_nonempty_list(AND,let_clause) IN term
-- On RBRACE reduce production term_ -> LET separated_nonempty_list(AND,let_clause) IN term
-- On OPERATION reduce production term_ -> LET separated_nonempty_list(AND,let_clause) IN term
-- On OPEN reduce production term_ -> LET separated_nonempty_list(AND,let_clause) IN term
-- On MODULE reduce production term_ -> LET separated_nonempty_list(AND,let_clause) IN term
-- On MLTYPE reduce production term_ -> LET separated_nonempty_list(AND,let_clause) IN term
-- On LET reduce production term_ -> LET separated_nonempty_list(AND,let_clause) IN term
-- On INCLUDE reduce production term_ -> LET separated_nonempty_list(AND,let_clause) IN term
-- On IN reduce production term_ -> LET separated_nonempty_list(AND,let_clause) IN term
-- On EXTERNAL reduce production term_ -> LET separated_nonempty_list(AND,let_clause) IN term
-- On EXCEPTION reduce production term_ -> LET separated_nonempty_list(AND,let_clause) IN term
-- On EOF reduce production term_ -> LET separated_nonempty_list(AND,let_clause) IN term
-- On END reduce production term_ -> LET separated_nonempty_list(AND,let_clause) IN term
-- On COMMA reduce production term_ -> LET separated_nonempty_list(AND,let_clause) IN term
-- On COLONGT reduce production term_ -> LET separated_nonempty_list(AND,let_clause) IN term
-- On BY reduce production term_ -> LET separated_nonempty_list(AND,let_clause) IN term
-- On BAR reduce production term_ -> LET separated_nonempty_list(AND,let_clause) IN term
-- On AND reduce production term_ -> LET separated_nonempty_list(AND,let_clause) IN term

State 452:
let_clause -> ml_name . list(ml_arg) let_annotation EQ term [ WITH VERBOSITY SEMISEMI RULE REQUIRE OPERATION OPEN MODULE MLTYPE LET INCLUDE IN EXTERNAL EXCEPTION EOF END AND ]
let_clause -> ml_name . COLON app_term EQ term [ WITH VERBOSITY SEMISEMI RULE REQUIRE OPERATION OPEN MODULE MLTYPE LET INCLUDE IN EXTERNAL EXCEPTION EOF END AND ]
-- On NAME shift to state 118
-- On LPAREN shift to state 331
-- On COLON shift to state 453
-- On ml_name shift to state 391
-- On ml_arg shift to state 437
-- On list(ml_arg) shift to state 457
-- On EQ reduce production list(ml_arg) ->
-- On COLONGT reduce production list(ml_arg) ->

State 453:
let_clause -> ml_name COLON . app_term EQ term [ WITH VERBOSITY SEMISEMI RULE REQUIRE OPERATION OPEN MODULE MLTYPE LET INCLUDE IN EXTERNAL EXCEPTION EOF END AND ]
-- On REF shift to state 4
-- On RAISE shift to state 12
-- On QUOTED_STRING shift to state 5
-- On PREFIXOP shift to state 6
-- On OCCURS shift to state 18
-- On NATURAL shift to state 7
-- On NAME shift to state 8
-- On LPAREN shift to state 9
-- On LBRACK shift to state 13
-- On CONVERT shift to state 130
-- On CONTEXT shift to state 136
-- On CONGRUENCE shift to state 138
-- On BANG shift to state 19
-- On ABSTRACT shift to state 144
-- On tt_name shift to state 20
-- On substitution_term_ shift to state 147
-- On substitution_term shift to state 148
-- On simple_term_ shift to state 21
-- On prefix_term_ shift to state 134
-- On module_path shift to state 24
-- On module_name shift to state 45
-- On mark_location(substitution_term_) shift to state 135
-- On mark_location(app_term_) shift to state 152
-- On app_term_ shift to state 153
-- On app_term shift to state 454
-- On any_name shift to state 47

State 454:
let_clause -> ml_name COLON app_term . EQ term [ WITH VERBOSITY SEMISEMI RULE REQUIRE OPERATION OPEN MODULE MLTYPE LET INCLUDE IN EXTERNAL EXCEPTION EOF END AND ]
-- On EQ shift to state 455

State 455:
let_clause -> ml_name COLON app_term EQ . term [ WITH VERBOSITY SEMISEMI RULE REQUIRE OPERATION OPEN MODULE MLTYPE LET INCLUDE IN EXTERNAL EXCEPTION EOF END AND ]
-- On WITH shift to state 2
-- On TRY shift to state 3
-- On REF shift to state 4
-- On RAISE shift to state 12
-- On QUOTED_STRING shift to state 5
-- On QQMARK shift to state 15
-- On PREFIXOP shift to state 6
-- On OCCURS shift to state 18
-- On NATURAL shift to state 7
-- On NAME shift to state 8
-- On MATCH shift to state 51
-- On LPAREN shift to state 9
-- On LET shift to state 52
-- On LBRACK shift to state 13
-- On LBRACE shift to state 156
-- On HANDLER shift to state 209
-- On FUN shift to state 330
-- On FRESH shift to state 338
-- On DERIVE shift to state 342
-- On CONVERT shift to state 130
-- On CONTEXT shift to state 136
-- On CONGRUENCE shift to state 138
-- On BANG shift to state 19
-- On ABSTRACT shift to state 144
-- On ty_term_ shift to state 357
-- On tt_name shift to state 20
-- On term_ shift to state 358
-- On term shift to state 456
-- On substitution_term_ shift to state 147
-- On substitution_term shift to state 148
-- On simple_term_ shift to state 21
-- On prefix_term_ shift to state 134
-- On nonempty_list(maybe_typed_binder) shift to state 167
-- On module_path shift to state 24
-- On module_name shift to state 45
-- On maybe_typed_binder shift to state 168
-- On mark_location(term_) shift to state 361
-- On mark_location(substitution_term_) shift to state 135
-- On mark_location(binop_term_) shift to state 171
-- On mark_location(app_term_) shift to state 152
-- On binop_term_ shift to state 172
-- On binop_term shift to state 362
-- On app_term_ shift to state 179
-- On app_term shift to state 365
-- On any_name shift to state 47
-- On abstraction shift to state 205

State 456:
let_clause -> ml_name COLON app_term EQ term . [ WITH VERBOSITY SEMISEMI RULE REQUIRE OPERATION OPEN MODULE MLTYPE LET INCLUDE IN EXTERNAL EXCEPTION EOF END AND ]
-- On WITH reduce production let_clause -> ml_name COLON app_term EQ term
-- On VERBOSITY reduce production let_clause -> ml_name COLON app_term EQ term
-- On SEMISEMI reduce production let_clause -> ml_name COLON app_term EQ term
-- On RULE reduce production let_clause -> ml_name COLON app_term EQ term
-- On REQUIRE reduce production let_clause -> ml_name COLON app_term EQ term
-- On OPERATION reduce production let_clause -> ml_name COLON app_term EQ term
-- On OPEN reduce production let_clause -> ml_name COLON app_term EQ term
-- On MODULE reduce production let_clause -> ml_name COLON app_term EQ term
-- On MLTYPE reduce production let_clause -> ml_name COLON app_term EQ term
-- On LET reduce production let_clause -> ml_name COLON app_term EQ term
-- On INCLUDE reduce production let_clause -> ml_name COLON app_term EQ term
-- On IN reduce production let_clause -> ml_name COLON app_term EQ term
-- On EXTERNAL reduce production let_clause -> ml_name COLON app_term EQ term
-- On EXCEPTION reduce production let_clause -> ml_name COLON app_term EQ term
-- On EOF reduce production let_clause -> ml_name COLON app_term EQ term
-- On END reduce production let_clause -> ml_name COLON app_term EQ term
-- On AND reduce production let_clause -> ml_name COLON app_term EQ term

State 457:
let_clause -> ml_name list(ml_arg) . let_annotation EQ term [ WITH VERBOSITY SEMISEMI RULE REQUIRE OPERATION OPEN MODULE MLTYPE LET INCLUDE IN EXTERNAL EXCEPTION EOF END AND ]
-- On COLONGT shift to state 54
-- On let_annotation shift to state 458
-- On EQ reduce production let_annotation ->

State 458:
let_clause -> ml_name list(ml_arg) let_annotation . EQ term [ WITH VERBOSITY SEMISEMI RULE REQUIRE OPERATION OPEN MODULE MLTYPE LET INCLUDE IN EXTERNAL EXCEPTION EOF END AND ]
-- On EQ shift to state 459

State 459:
let_clause -> ml_name list(ml_arg) let_annotation EQ . term [ WITH VERBOSITY SEMISEMI RULE REQUIRE OPERATION OPEN MODULE MLTYPE LET INCLUDE IN EXTERNAL EXCEPTION EOF END AND ]
-- On WITH shift to state 2
-- On TRY shift to state 3
-- On REF shift to state 4
-- On RAISE shift to state 12
-- On QUOTED_STRING shift to state 5
-- On QQMARK shift to state 15
-- On PREFIXOP shift to state 6
-- On OCCURS shift to state 18
-- On NATURAL shift to state 7
-- On NAME shift to state 8
-- On MATCH shift to state 51
-- On LPAREN shift to state 9
-- On LET shift to state 52
-- On LBRACK shift to state 13
-- On LBRACE shift to state 156
-- On HANDLER shift to state 209
-- On FUN shift to state 330
-- On FRESH shift to state 338
-- On DERIVE shift to state 342
-- On CONVERT shift to state 130
-- On CONTEXT shift to state 136
-- On CONGRUENCE shift to state 138
-- On BANG shift to state 19
-- On ABSTRACT shift to state 144
-- On ty_term_ shift to state 357
-- On tt_name shift to state 20
-- On term_ shift to state 358
-- On term shift to state 460
-- On substitution_term_ shift to state 147
-- On substitution_term shift to state 148
-- On simple_term_ shift to state 21
-- On prefix_term_ shift to state 134
-- On nonempty_list(maybe_typed_binder) shift to state 167
-- On module_path shift to state 24
-- On module_name shift to state 45
-- On maybe_typed_binder shift to state 168
-- On mark_location(term_) shift to state 361
-- On mark_location(substitution_term_) shift to state 135
-- On mark_location(binop_term_) shift to state 171
-- On mark_location(app_term_) shift to state 152
-- On binop_term_ shift to state 172
-- On binop_term shift to state 362
-- On app_term_ shift to state 179
-- On app_term shift to state 365
-- On any_name shift to state 47
-- On abstraction shift to state 205

State 460:
let_clause -> ml_name list(ml_arg) let_annotation EQ term . [ WITH VERBOSITY SEMISEMI RULE REQUIRE OPERATION OPEN MODULE MLTYPE LET INCLUDE IN EXTERNAL EXCEPTION EOF END AND ]
-- On WITH reduce production let_clause -> ml_name list(ml_arg) let_annotation EQ term
-- On VERBOSITY reduce production let_clause -> ml_name list(ml_arg) let_annotation EQ term
-- On SEMISEMI reduce production let_clause -> ml_name list(ml_arg) let_annotation EQ term
-- On RULE reduce production let_clause -> ml_name list(ml_arg) let_annotation EQ term
-- On REQUIRE reduce production let_clause -> ml_name list(ml_arg) let_annotation EQ term
-- On OPERATION reduce production let_clause -> ml_name list(ml_arg) let_annotation EQ term
-- On OPEN reduce production let_clause -> ml_name list(ml_arg) let_annotation EQ term
-- On MODULE reduce production let_clause -> ml_name list(ml_arg) let_annotation EQ term
-- On MLTYPE reduce production let_clause -> ml_name list(ml_arg) let_annotation EQ term
-- On LET reduce production let_clause -> ml_name list(ml_arg) let_annotation EQ term
-- On INCLUDE reduce production let_clause -> ml_name list(ml_arg) let_annotation EQ term
-- On IN reduce production let_clause -> ml_name list(ml_arg) let_annotation EQ term
-- On EXTERNAL reduce production let_clause -> ml_name list(ml_arg) let_annotation EQ term
-- On EXCEPTION reduce production let_clause -> ml_name list(ml_arg) let_annotation EQ term
-- On EOF reduce production let_clause -> ml_name list(ml_arg) let_annotation EQ term
-- On END reduce production let_clause -> ml_name list(ml_arg) let_annotation EQ term
-- On AND reduce production let_clause -> ml_name list(ml_arg) let_annotation EQ term

State 461:
let_pattern -> mark_location(let_pattern_) . [ EQ COLONGT ]
-- On EQ reduce production let_pattern -> mark_location(let_pattern_)
-- On COLONGT reduce production let_pattern -> mark_location(let_pattern_)

State 462:
mark_location(let_pattern_) -> let_pattern_ . [ EQ COLONGT ]
-- On EQ reduce production mark_location(let_pattern_) -> let_pattern_
-- On COLONGT reduce production mark_location(let_pattern_) -> let_pattern_

State 463:
let_clause -> let_pattern . let_annotation EQ term [ WITH VERBOSITY SEMISEMI RULE REQUIRE OPERATION OPEN MODULE MLTYPE LET INCLUDE IN EXTERNAL EXCEPTION EOF END AND ]
-- On COLONGT shift to state 54
-- On let_annotation shift to state 464
-- On EQ reduce production let_annotation ->

State 464:
let_clause -> let_pattern let_annotation . EQ term [ WITH VERBOSITY SEMISEMI RULE REQUIRE OPERATION OPEN MODULE MLTYPE LET INCLUDE IN EXTERNAL EXCEPTION EOF END AND ]
-- On EQ shift to state 465

State 465:
let_clause -> let_pattern let_annotation EQ . term [ WITH VERBOSITY SEMISEMI RULE REQUIRE OPERATION OPEN MODULE MLTYPE LET INCLUDE IN EXTERNAL EXCEPTION EOF END AND ]
-- On WITH shift to state 2
-- On TRY shift to state 3
-- On REF shift to state 4
-- On RAISE shift to state 12
-- On QUOTED_STRING shift to state 5
-- On QQMARK shift to state 15
-- On PREFIXOP shift to state 6
-- On OCCURS shift to state 18
-- On NATURAL shift to state 7
-- On NAME shift to state 8
-- On MATCH shift to state 51
-- On LPAREN shift to state 9
-- On LET shift to state 52
-- On LBRACK shift to state 13
-- On LBRACE shift to state 156
-- On HANDLER shift to state 209
-- On FUN shift to state 330
-- On FRESH shift to state 338
-- On DERIVE shift to state 342
-- On CONVERT shift to state 130
-- On CONTEXT shift to state 136
-- On CONGRUENCE shift to state 138
-- On BANG shift to state 19
-- On ABSTRACT shift to state 144
-- On ty_term_ shift to state 357
-- On tt_name shift to state 20
-- On term_ shift to state 358
-- On term shift to state 466
-- On substitution_term_ shift to state 147
-- On substitution_term shift to state 148
-- On simple_term_ shift to state 21
-- On prefix_term_ shift to state 134
-- On nonempty_list(maybe_typed_binder) shift to state 167
-- On module_path shift to state 24
-- On module_name shift to state 45
-- On maybe_typed_binder shift to state 168
-- On mark_location(term_) shift to state 361
-- On mark_location(substitution_term_) shift to state 135
-- On mark_location(binop_term_) shift to state 171
-- On mark_location(app_term_) shift to state 152
-- On binop_term_ shift to state 172
-- On binop_term shift to state 362
-- On app_term_ shift to state 179
-- On app_term shift to state 365
-- On any_name shift to state 47
-- On abstraction shift to state 205

State 466:
let_clause -> let_pattern let_annotation EQ term . [ WITH VERBOSITY SEMISEMI RULE REQUIRE OPERATION OPEN MODULE MLTYPE LET INCLUDE IN EXTERNAL EXCEPTION EOF END AND ]
-- On WITH reduce production let_clause -> let_pattern let_annotation EQ term
-- On VERBOSITY reduce production let_clause -> let_pattern let_annotation EQ term
-- On SEMISEMI reduce production let_clause -> let_pattern let_annotation EQ term
-- On RULE reduce production let_clause -> let_pattern let_annotation EQ term
-- On REQUIRE reduce production let_clause -> let_pattern let_annotation EQ term
-- On OPERATION reduce production let_clause -> let_pattern let_annotation EQ term
-- On OPEN reduce production let_clause -> let_pattern let_annotation EQ term
-- On MODULE reduce production let_clause -> let_pattern let_annotation EQ term
-- On MLTYPE reduce production let_clause -> let_pattern let_annotation EQ term
-- On LET reduce production let_clause -> let_pattern let_annotation EQ term
-- On INCLUDE reduce production let_clause -> let_pattern let_annotation EQ term
-- On IN reduce production let_clause -> let_pattern let_annotation EQ term
-- On EXTERNAL reduce production let_clause -> let_pattern let_annotation EQ term
-- On EXCEPTION reduce production let_clause -> let_pattern let_annotation EQ term
-- On EOF reduce production let_clause -> let_pattern let_annotation EQ term
-- On END reduce production let_clause -> let_pattern let_annotation EQ term
-- On AND reduce production let_clause -> let_pattern let_annotation EQ term

State 467:
separated_nonempty_list(AND,let_clause) -> let_clause . [ WITH VERBOSITY SEMISEMI RULE REQUIRE OPERATION OPEN MODULE MLTYPE LET INCLUDE IN EXTERNAL EXCEPTION EOF END ]
separated_nonempty_list(AND,let_clause) -> let_clause . AND separated_nonempty_list(AND,let_clause) [ WITH VERBOSITY SEMISEMI RULE REQUIRE OPERATION OPEN MODULE MLTYPE LET INCLUDE IN EXTERNAL EXCEPTION EOF END ]
-- On AND shift to state 468
-- On WITH reduce production separated_nonempty_list(AND,let_clause) -> let_clause
-- On VERBOSITY reduce production separated_nonempty_list(AND,let_clause) -> let_clause
-- On SEMISEMI reduce production separated_nonempty_list(AND,let_clause) -> let_clause
-- On RULE reduce production separated_nonempty_list(AND,let_clause) -> let_clause
-- On REQUIRE reduce production separated_nonempty_list(AND,let_clause) -> let_clause
-- On OPERATION reduce production separated_nonempty_list(AND,let_clause) -> let_clause
-- On OPEN reduce production separated_nonempty_list(AND,let_clause) -> let_clause
-- On MODULE reduce production separated_nonempty_list(AND,let_clause) -> let_clause
-- On MLTYPE reduce production separated_nonempty_list(AND,let_clause) -> let_clause
-- On LET reduce production separated_nonempty_list(AND,let_clause) -> let_clause
-- On INCLUDE reduce production separated_nonempty_list(AND,let_clause) -> let_clause
-- On IN reduce production separated_nonempty_list(AND,let_clause) -> let_clause
-- On EXTERNAL reduce production separated_nonempty_list(AND,let_clause) -> let_clause
-- On EXCEPTION reduce production separated_nonempty_list(AND,let_clause) -> let_clause
-- On EOF reduce production separated_nonempty_list(AND,let_clause) -> let_clause
-- On END reduce production separated_nonempty_list(AND,let_clause) -> let_clause

State 468:
separated_nonempty_list(AND,let_clause) -> let_clause AND . separated_nonempty_list(AND,let_clause) [ WITH VERBOSITY SEMISEMI RULE REQUIRE OPERATION OPEN MODULE MLTYPE LET INCLUDE IN EXTERNAL EXCEPTION EOF END ]
-- On UNDERSCORE shift to state 53
-- On NAME shift to state 118
-- On LPAREN shift to state 443
-- On LBRACK shift to state 446
-- On separated_nonempty_list(AND,let_clause) shift to state 469
-- On ml_name shift to state 452
-- On mark_location(let_pattern_) shift to state 461
-- On let_pattern_ shift to state 462
-- On let_pattern shift to state 463
-- On let_clause shift to state 467

State 469:
separated_nonempty_list(AND,let_clause) -> let_clause AND separated_nonempty_list(AND,let_clause) . [ WITH VERBOSITY SEMISEMI RULE REQUIRE OPERATION OPEN MODULE MLTYPE LET INCLUDE IN EXTERNAL EXCEPTION EOF END ]
-- On WITH reduce production separated_nonempty_list(AND,let_clause) -> let_clause AND separated_nonempty_list(AND,let_clause)
-- On VERBOSITY reduce production separated_nonempty_list(AND,let_clause) -> let_clause AND separated_nonempty_list(AND,let_clause)
-- On SEMISEMI reduce production separated_nonempty_list(AND,let_clause) -> let_clause AND separated_nonempty_list(AND,let_clause)
-- On RULE reduce production separated_nonempty_list(AND,let_clause) -> let_clause AND separated_nonempty_list(AND,let_clause)
-- On REQUIRE reduce production separated_nonempty_list(AND,let_clause) -> let_clause AND separated_nonempty_list(AND,let_clause)
-- On OPERATION reduce production separated_nonempty_list(AND,let_clause) -> let_clause AND separated_nonempty_list(AND,let_clause)
-- On OPEN reduce production separated_nonempty_list(AND,let_clause) -> let_clause AND separated_nonempty_list(AND,let_clause)
-- On MODULE reduce production separated_nonempty_list(AND,let_clause) -> let_clause AND separated_nonempty_list(AND,let_clause)
-- On MLTYPE reduce production separated_nonempty_list(AND,let_clause) -> let_clause AND separated_nonempty_list(AND,let_clause)
-- On LET reduce production separated_nonempty_list(AND,let_clause) -> let_clause AND separated_nonempty_list(AND,let_clause)
-- On INCLUDE reduce production separated_nonempty_list(AND,let_clause) -> let_clause AND separated_nonempty_list(AND,let_clause)
-- On IN reduce production separated_nonempty_list(AND,let_clause) -> let_clause AND separated_nonempty_list(AND,let_clause)
-- On EXTERNAL reduce production separated_nonempty_list(AND,let_clause) -> let_clause AND separated_nonempty_list(AND,let_clause)
-- On EXCEPTION reduce production separated_nonempty_list(AND,let_clause) -> let_clause AND separated_nonempty_list(AND,let_clause)
-- On EOF reduce production separated_nonempty_list(AND,let_clause) -> let_clause AND separated_nonempty_list(AND,let_clause)
-- On END reduce production separated_nonempty_list(AND,let_clause) -> let_clause AND separated_nonempty_list(AND,let_clause)

State 470:
term_ -> MATCH term . WITH match_cases END [ WITH VERBOSITY TRY SEMISEMI RULE RPAREN REQUIRE RBRACE OPERATION OPEN MODULE MLTYPE LET INCLUDE IN EXTERNAL EXCEPTION EOF END COMMA COLONGT BY BAR AND ]
-- On WITH shift to state 471

State 471:
term_ -> MATCH term WITH . match_cases END [ WITH VERBOSITY TRY SEMISEMI RULE RPAREN REQUIRE RBRACE OPERATION OPEN MODULE MLTYPE LET INCLUDE IN EXTERNAL EXCEPTION EOF END COMMA COLONGT BY BAR AND ]
-- On UNDERSCORE shift to state 211
-- On UATOM shift to state 212
-- On QUOTED_STRING shift to state 213
-- On QQMARK shift to state 218
-- On PREFIXOP shift to state 216
-- On NAME shift to state 220
-- On LPAREN shift to state 221
-- On LBRACK shift to state 226
-- On LBRACE shift to state 227
-- On BAR shift to state 472
-- On tt_name shift to state 20
-- On tt_maybe_typed_binder shift to state 233
-- On simple_pattern_ shift to state 234
-- On separated_nonempty_list(BAR,match_case) shift to state 477
-- On prefix_pattern_ shift to state 235
-- On pattern_ shift to state 236
-- On pattern shift to state 325
-- On module_path shift to state 238
-- On module_name shift to state 45
-- On ml_name shift to state 263
-- On match_cases shift to state 478
-- On match_case shift to state 474
-- On mark_location(pattern_) shift to state 266
-- On mark_location(binop_pattern_) shift to state 267
-- On loption(separated_nonempty_list(BAR,match_case)) shift to state 480
-- On binop_pattern_ shift to state 268
-- On binop_pattern shift to state 269
-- On app_pattern_ shift to state 276
-- On any_name shift to state 277
-- On END reduce production loption(separated_nonempty_list(BAR,match_case)) ->

State 472:
match_cases -> BAR . separated_nonempty_list(BAR,match_case) [ END ]
-- On UNDERSCORE shift to state 211
-- On UATOM shift to state 212
-- On QUOTED_STRING shift to state 213
-- On QQMARK shift to state 218
-- On PREFIXOP shift to state 216
-- On NAME shift to state 220
-- On LPAREN shift to state 221
-- On LBRACK shift to state 226
-- On LBRACE shift to state 227
-- On tt_name shift to state 20
-- On tt_maybe_typed_binder shift to state 233
-- On simple_pattern_ shift to state 234
-- On separated_nonempty_list(BAR,match_case) shift to state 473
-- On prefix_pattern_ shift to state 235
-- On pattern_ shift to state 236
-- On pattern shift to state 325
-- On module_path shift to state 238
-- On module_name shift to state 45
-- On ml_name shift to state 263
-- On match_case shift to state 474
-- On mark_location(pattern_) shift to state 266
-- On mark_location(binop_pattern_) shift to state 267
-- On binop_pattern_ shift to state 268
-- On binop_pattern shift to state 269
-- On app_pattern_ shift to state 276
-- On any_name shift to state 277

State 473:
match_cases -> BAR separated_nonempty_list(BAR,match_case) . [ END ]
-- On END reduce production match_cases -> BAR separated_nonempty_list(BAR,match_case)

State 474:
separated_nonempty_list(BAR,match_case) -> match_case . [ END ]
separated_nonempty_list(BAR,match_case) -> match_case . BAR separated_nonempty_list(BAR,match_case) [ END ]
-- On BAR shift to state 475
-- On END reduce production separated_nonempty_list(BAR,match_case) -> match_case

State 475:
separated_nonempty_list(BAR,match_case) -> match_case BAR . separated_nonempty_list(BAR,match_case) [ END ]
-- On UNDERSCORE shift to state 211
-- On UATOM shift to state 212
-- On QUOTED_STRING shift to state 213
-- On QQMARK shift to state 218
-- On PREFIXOP shift to state 216
-- On NAME shift to state 220
-- On LPAREN shift to state 221
-- On LBRACK shift to state 226
-- On LBRACE shift to state 227
-- On tt_name shift to state 20
-- On tt_maybe_typed_binder shift to state 233
-- On simple_pattern_ shift to state 234
-- On separated_nonempty_list(BAR,match_case) shift to state 476
-- On prefix_pattern_ shift to state 235
-- On pattern_ shift to state 236
-- On pattern shift to state 325
-- On module_path shift to state 238
-- On module_name shift to state 45
-- On ml_name shift to state 263
-- On match_case shift to state 474
-- On mark_location(pattern_) shift to state 266
-- On mark_location(binop_pattern_) shift to state 267
-- On binop_pattern_ shift to state 268
-- On binop_pattern shift to state 269
-- On app_pattern_ shift to state 276
-- On any_name shift to state 277

State 476:
separated_nonempty_list(BAR,match_case) -> match_case BAR separated_nonempty_list(BAR,match_case) . [ END ]
-- On END reduce production separated_nonempty_list(BAR,match_case) -> match_case BAR separated_nonempty_list(BAR,match_case)

State 477:
loption(separated_nonempty_list(BAR,match_case)) -> separated_nonempty_list(BAR,match_case) . [ END ]
-- On END reduce production loption(separated_nonempty_list(BAR,match_case)) -> separated_nonempty_list(BAR,match_case)

State 478:
term_ -> MATCH term WITH match_cases . END [ WITH VERBOSITY TRY SEMISEMI RULE RPAREN REQUIRE RBRACE OPERATION OPEN MODULE MLTYPE LET INCLUDE IN EXTERNAL EXCEPTION EOF END COMMA COLONGT BY BAR AND ]
-- On END shift to state 479

State 479:
term_ -> MATCH term WITH match_cases END . [ WITH VERBOSITY TRY SEMISEMI RULE RPAREN REQUIRE RBRACE OPERATION OPEN MODULE MLTYPE LET INCLUDE IN EXTERNAL EXCEPTION EOF END COMMA COLONGT BY BAR AND ]
-- On WITH reduce production term_ -> MATCH term WITH match_cases END
-- On VERBOSITY reduce production term_ -> MATCH term WITH match_cases END
-- On TRY reduce production term_ -> MATCH term WITH match_cases END
-- On SEMISEMI reduce production term_ -> MATCH term WITH match_cases END
-- On RULE reduce production term_ -> MATCH term WITH match_cases END
-- On RPAREN reduce production term_ -> MATCH term WITH match_cases END
-- On REQUIRE reduce production term_ -> MATCH term WITH match_cases END
-- On RBRACE reduce production term_ -> MATCH term WITH match_cases END
-- On OPERATION reduce production term_ -> MATCH term WITH match_cases END
-- On OPEN reduce production term_ -> MATCH term WITH match_cases END
-- On MODULE reduce production term_ -> MATCH term WITH match_cases END
-- On MLTYPE reduce production term_ -> MATCH term WITH match_cases END
-- On LET reduce production term_ -> MATCH term WITH match_cases END
-- On INCLUDE reduce production term_ -> MATCH term WITH match_cases END
-- On IN reduce production term_ -> MATCH term WITH match_cases END
-- On EXTERNAL reduce production term_ -> MATCH term WITH match_cases END
-- On EXCEPTION reduce production term_ -> MATCH term WITH match_cases END
-- On EOF reduce production term_ -> MATCH term WITH match_cases END
-- On END reduce production term_ -> MATCH term WITH match_cases END
-- On COMMA reduce production term_ -> MATCH term WITH match_cases END
-- On COLONGT reduce production term_ -> MATCH term WITH match_cases END
-- On BY reduce production term_ -> MATCH term WITH match_cases END
-- On BAR reduce production term_ -> MATCH term WITH match_cases END
-- On AND reduce production term_ -> MATCH term WITH match_cases END

State 480:
match_cases -> loption(separated_nonempty_list(BAR,match_case)) . [ END ]
-- On END reduce production match_cases -> loption(separated_nonempty_list(BAR,match_case))

State 481:
binop_term_ -> app_term_ . [ WITH VERBOSITY STAR SEMISEMI SEMI RULE REQUIRE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE EXTERNAL EXCEPTION EQ EOF END ]
mark_location(app_term_) -> app_term_ . [ EQEQ COLONQT COLONEQ COLON BY ]
-- On WITH reduce production binop_term_ -> app_term_
-- On VERBOSITY reduce production binop_term_ -> app_term_
-- On STAR reduce production binop_term_ -> app_term_
-- On SEMISEMI reduce production binop_term_ -> app_term_
-- On SEMI reduce production binop_term_ -> app_term_
-- On RULE reduce production binop_term_ -> app_term_
-- On REQUIRE reduce production binop_term_ -> app_term_
-- On OPERATION reduce production binop_term_ -> app_term_
-- On OPEN reduce production binop_term_ -> app_term_
-- On MODULE reduce production binop_term_ -> app_term_
-- On MLTYPE reduce production binop_term_ -> app_term_
-- On LET reduce production binop_term_ -> app_term_
-- On INFIXOP4 reduce production binop_term_ -> app_term_
-- On INFIXOP3 reduce production binop_term_ -> app_term_
-- On INFIXOP2 reduce production binop_term_ -> app_term_
-- On INFIXOP1 reduce production binop_term_ -> app_term_
-- On INFIXOP0 reduce production binop_term_ -> app_term_
-- On INFIXCONS reduce production binop_term_ -> app_term_
-- On INCLUDE reduce production binop_term_ -> app_term_
-- On EXTERNAL reduce production binop_term_ -> app_term_
-- On EXCEPTION reduce production binop_term_ -> app_term_
-- On EQEQ reduce production mark_location(app_term_) -> app_term_
-- On EQ reduce production binop_term_ -> app_term_
-- On EOF reduce production binop_term_ -> app_term_
-- On END reduce production binop_term_ -> app_term_
-- On COLONQT reduce production mark_location(app_term_) -> app_term_
-- On COLONEQ reduce production mark_location(app_term_) -> app_term_
-- On COLON reduce production mark_location(app_term_) -> app_term_
-- On BY reduce production mark_location(app_term_) -> app_term_

State 482:
separated_nonempty_list(COMMA,term) -> term . [ RPAREN RBRACE ]
separated_nonempty_list(COMMA,term) -> term . COMMA separated_nonempty_list(COMMA,term) [ RPAREN RBRACE ]
-- On COMMA shift to state 483
-- On RPAREN reduce production separated_nonempty_list(COMMA,term) -> term
-- On RBRACE reduce production separated_nonempty_list(COMMA,term) -> term

State 483:
separated_nonempty_list(COMMA,term) -> term COMMA . separated_nonempty_list(COMMA,term) [ RPAREN RBRACE ]
-- On WITH shift to state 2
-- On TRY shift to state 3
-- On REF shift to state 4
-- On RAISE shift to state 12
-- On QUOTED_STRING shift to state 5
-- On QQMARK shift to state 15
-- On PREFIXOP shift to state 6
-- On OCCURS shift to state 18
-- On NATURAL shift to state 7
-- On NAME shift to state 8
-- On MATCH shift to state 51
-- On LPAREN shift to state 9
-- On LET shift to state 52
-- On LBRACK shift to state 13
-- On LBRACE shift to state 156
-- On HANDLER shift to state 209
-- On FUN shift to state 330
-- On FRESH shift to state 338
-- On DERIVE shift to state 342
-- On CONVERT shift to state 130
-- On CONTEXT shift to state 136
-- On CONGRUENCE shift to state 138
-- On BANG shift to state 19
-- On ABSTRACT shift to state 144
-- On ty_term_ shift to state 357
-- On tt_name shift to state 20
-- On term_ shift to state 358
-- On term shift to state 482
-- On substitution_term_ shift to state 147
-- On substitution_term shift to state 148
-- On simple_term_ shift to state 21
-- On separated_nonempty_list(COMMA,term) shift to state 484
-- On prefix_term_ shift to state 134
-- On nonempty_list(maybe_typed_binder) shift to state 167
-- On module_path shift to state 24
-- On module_name shift to state 45
-- On maybe_typed_binder shift to state 168
-- On mark_location(term_) shift to state 361
-- On mark_location(substitution_term_) shift to state 135
-- On mark_location(binop_term_) shift to state 171
-- On mark_location(app_term_) shift to state 152
-- On binop_term_ shift to state 172
-- On binop_term shift to state 362
-- On app_term_ shift to state 179
-- On app_term shift to state 365
-- On any_name shift to state 47
-- On abstraction shift to state 205

State 484:
separated_nonempty_list(COMMA,term) -> term COMMA separated_nonempty_list(COMMA,term) . [ RPAREN RBRACE ]
-- On RPAREN reduce production separated_nonempty_list(COMMA,term) -> term COMMA separated_nonempty_list(COMMA,term)
-- On RBRACE reduce production separated_nonempty_list(COMMA,term) -> term COMMA separated_nonempty_list(COMMA,term)

State 485:
substitution -> LBRACE separated_nonempty_list(COMMA,term) . RBRACE [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE REF RBRACK RBRACE QUOTED_STRING PREFIXOP OPERATION OPEN NATURAL NAME MODULE MLTYPE LPAREN LET LBRACK LBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQEQ EQ EOF END COMMA COLONQT COLONGT COLONEQ COLON BY BAR BANG ARROW AND ]
-- On RBRACE shift to state 486

State 486:
substitution -> LBRACE separated_nonempty_list(COMMA,term) RBRACE . [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE REF RBRACK RBRACE QUOTED_STRING PREFIXOP OPERATION OPEN NATURAL NAME MODULE MLTYPE LPAREN LET LBRACK LBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQEQ EQ EOF END COMMA COLONQT COLONGT COLONEQ COLON BY BAR BANG ARROW AND ]
-- On WITH reduce production substitution -> LBRACE separated_nonempty_list(COMMA,term) RBRACE
-- On VERBOSITY reduce production substitution -> LBRACE separated_nonempty_list(COMMA,term) RBRACE
-- On TRY reduce production substitution -> LBRACE separated_nonempty_list(COMMA,term) RBRACE
-- On STAR reduce production substitution -> LBRACE separated_nonempty_list(COMMA,term) RBRACE
-- On SEMISEMI reduce production substitution -> LBRACE separated_nonempty_list(COMMA,term) RBRACE
-- On SEMI reduce production substitution -> LBRACE separated_nonempty_list(COMMA,term) RBRACE
-- On RULE reduce production substitution -> LBRACE separated_nonempty_list(COMMA,term) RBRACE
-- On RPAREN reduce production substitution -> LBRACE separated_nonempty_list(COMMA,term) RBRACE
-- On REQUIRE reduce production substitution -> LBRACE separated_nonempty_list(COMMA,term) RBRACE
-- On REF reduce production substitution -> LBRACE separated_nonempty_list(COMMA,term) RBRACE
-- On RBRACK reduce production substitution -> LBRACE separated_nonempty_list(COMMA,term) RBRACE
-- On RBRACE reduce production substitution -> LBRACE separated_nonempty_list(COMMA,term) RBRACE
-- On QUOTED_STRING reduce production substitution -> LBRACE separated_nonempty_list(COMMA,term) RBRACE
-- On PREFIXOP reduce production substitution -> LBRACE separated_nonempty_list(COMMA,term) RBRACE
-- On OPERATION reduce production substitution -> LBRACE separated_nonempty_list(COMMA,term) RBRACE
-- On OPEN reduce production substitution -> LBRACE separated_nonempty_list(COMMA,term) RBRACE
-- On NATURAL reduce production substitution -> LBRACE separated_nonempty_list(COMMA,term) RBRACE
-- On NAME reduce production substitution -> LBRACE separated_nonempty_list(COMMA,term) RBRACE
-- On MODULE reduce production substitution -> LBRACE separated_nonempty_list(COMMA,term) RBRACE
-- On MLTYPE reduce production substitution -> LBRACE separated_nonempty_list(COMMA,term) RBRACE
-- On LPAREN reduce production substitution -> LBRACE separated_nonempty_list(COMMA,term) RBRACE
-- On LET reduce production substitution -> LBRACE separated_nonempty_list(COMMA,term) RBRACE
-- On LBRACK reduce production substitution -> LBRACE separated_nonempty_list(COMMA,term) RBRACE
-- On LBRACE reduce production substitution -> LBRACE separated_nonempty_list(COMMA,term) RBRACE
-- On INFIXOP4 reduce production substitution -> LBRACE separated_nonempty_list(COMMA,term) RBRACE
-- On INFIXOP3 reduce production substitution -> LBRACE separated_nonempty_list(COMMA,term) RBRACE
-- On INFIXOP2 reduce production substitution -> LBRACE separated_nonempty_list(COMMA,term) RBRACE
-- On INFIXOP1 reduce production substitution -> LBRACE separated_nonempty_list(COMMA,term) RBRACE
-- On INFIXOP0 reduce production substitution -> LBRACE separated_nonempty_list(COMMA,term) RBRACE
-- On INFIXCONS reduce production substitution -> LBRACE separated_nonempty_list(COMMA,term) RBRACE
-- On INCLUDE reduce production substitution -> LBRACE separated_nonempty_list(COMMA,term) RBRACE
-- On IN reduce production substitution -> LBRACE separated_nonempty_list(COMMA,term) RBRACE
-- On EXTERNAL reduce production substitution -> LBRACE separated_nonempty_list(COMMA,term) RBRACE
-- On EXCEPTION reduce production substitution -> LBRACE separated_nonempty_list(COMMA,term) RBRACE
-- On EQEQ reduce production substitution -> LBRACE separated_nonempty_list(COMMA,term) RBRACE
-- On EQ reduce production substitution -> LBRACE separated_nonempty_list(COMMA,term) RBRACE
-- On EOF reduce production substitution -> LBRACE separated_nonempty_list(COMMA,term) RBRACE
-- On END reduce production substitution -> LBRACE separated_nonempty_list(COMMA,term) RBRACE
-- On COMMA reduce production substitution -> LBRACE separated_nonempty_list(COMMA,term) RBRACE
-- On COLONQT reduce production substitution -> LBRACE separated_nonempty_list(COMMA,term) RBRACE
-- On COLONGT reduce production substitution -> LBRACE separated_nonempty_list(COMMA,term) RBRACE
-- On COLONEQ reduce production substitution -> LBRACE separated_nonempty_list(COMMA,term) RBRACE
-- On COLON reduce production substitution -> LBRACE separated_nonempty_list(COMMA,term) RBRACE
-- On BY reduce production substitution -> LBRACE separated_nonempty_list(COMMA,term) RBRACE
-- On BAR reduce production substitution -> LBRACE separated_nonempty_list(COMMA,term) RBRACE
-- On BANG reduce production substitution -> LBRACE separated_nonempty_list(COMMA,term) RBRACE
-- On ARROW reduce production substitution -> LBRACE separated_nonempty_list(COMMA,term) RBRACE
-- On AND reduce production substitution -> LBRACE separated_nonempty_list(COMMA,term) RBRACE

State 487:
app_term_ -> OCCURS substitution_term substitution_term . [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQEQ EQ EOF END COMMA COLONQT COLONGT COLONEQ COLON BY BAR ARROW AND ]
substitution_term_ -> substitution_term . substitution [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN MODULE MLTYPE LET LBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQEQ EQ EOF END COMMA COLONQT COLONGT COLONEQ COLON BY BAR ARROW AND ]
-- On LBRACE shift to state 50
-- On substitution shift to state 133
-- On WITH reduce production app_term_ -> OCCURS substitution_term substitution_term
-- On VERBOSITY reduce production app_term_ -> OCCURS substitution_term substitution_term
-- On TRY reduce production app_term_ -> OCCURS substitution_term substitution_term
-- On STAR reduce production app_term_ -> OCCURS substitution_term substitution_term
-- On SEMISEMI reduce production app_term_ -> OCCURS substitution_term substitution_term
-- On SEMI reduce production app_term_ -> OCCURS substitution_term substitution_term
-- On RULE reduce production app_term_ -> OCCURS substitution_term substitution_term
-- On RPAREN reduce production app_term_ -> OCCURS substitution_term substitution_term
-- On REQUIRE reduce production app_term_ -> OCCURS substitution_term substitution_term
-- On RBRACK reduce production app_term_ -> OCCURS substitution_term substitution_term
-- On RBRACE reduce production app_term_ -> OCCURS substitution_term substitution_term
-- On OPERATION reduce production app_term_ -> OCCURS substitution_term substitution_term
-- On OPEN reduce production app_term_ -> OCCURS substitution_term substitution_term
-- On MODULE reduce production app_term_ -> OCCURS substitution_term substitution_term
-- On MLTYPE reduce production app_term_ -> OCCURS substitution_term substitution_term
-- On LET reduce production app_term_ -> OCCURS substitution_term substitution_term
-- On INFIXOP4 reduce production app_term_ -> OCCURS substitution_term substitution_term
-- On INFIXOP3 reduce production app_term_ -> OCCURS substitution_term substitution_term
-- On INFIXOP2 reduce production app_term_ -> OCCURS substitution_term substitution_term
-- On INFIXOP1 reduce production app_term_ -> OCCURS substitution_term substitution_term
-- On INFIXOP0 reduce production app_term_ -> OCCURS substitution_term substitution_term
-- On INFIXCONS reduce production app_term_ -> OCCURS substitution_term substitution_term
-- On INCLUDE reduce production app_term_ -> OCCURS substitution_term substitution_term
-- On IN reduce production app_term_ -> OCCURS substitution_term substitution_term
-- On EXTERNAL reduce production app_term_ -> OCCURS substitution_term substitution_term
-- On EXCEPTION reduce production app_term_ -> OCCURS substitution_term substitution_term
-- On EQEQ reduce production app_term_ -> OCCURS substitution_term substitution_term
-- On EQ reduce production app_term_ -> OCCURS substitution_term substitution_term
-- On EOF reduce production app_term_ -> OCCURS substitution_term substitution_term
-- On END reduce production app_term_ -> OCCURS substitution_term substitution_term
-- On COMMA reduce production app_term_ -> OCCURS substitution_term substitution_term
-- On COLONQT reduce production app_term_ -> OCCURS substitution_term substitution_term
-- On COLONGT reduce production app_term_ -> OCCURS substitution_term substitution_term
-- On COLONEQ reduce production app_term_ -> OCCURS substitution_term substitution_term
-- On COLON reduce production app_term_ -> OCCURS substitution_term substitution_term
-- On BY reduce production app_term_ -> OCCURS substitution_term substitution_term
-- On BAR reduce production app_term_ -> OCCURS substitution_term substitution_term
-- On ARROW reduce production app_term_ -> OCCURS substitution_term substitution_term
-- On AND reduce production app_term_ -> OCCURS substitution_term substitution_term

State 488:
binop_term_ -> QQMARK COLON app_term . [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQ EOF END COMMA COLONGT BY BAR ARROW AND ]
-- On WITH reduce production binop_term_ -> QQMARK COLON app_term
-- On VERBOSITY reduce production binop_term_ -> QQMARK COLON app_term
-- On TRY reduce production binop_term_ -> QQMARK COLON app_term
-- On STAR reduce production binop_term_ -> QQMARK COLON app_term
-- On SEMISEMI reduce production binop_term_ -> QQMARK COLON app_term
-- On SEMI reduce production binop_term_ -> QQMARK COLON app_term
-- On RULE reduce production binop_term_ -> QQMARK COLON app_term
-- On RPAREN reduce production binop_term_ -> QQMARK COLON app_term
-- On REQUIRE reduce production binop_term_ -> QQMARK COLON app_term
-- On RBRACK reduce production binop_term_ -> QQMARK COLON app_term
-- On RBRACE reduce production binop_term_ -> QQMARK COLON app_term
-- On OPERATION reduce production binop_term_ -> QQMARK COLON app_term
-- On OPEN reduce production binop_term_ -> QQMARK COLON app_term
-- On MODULE reduce production binop_term_ -> QQMARK COLON app_term
-- On MLTYPE reduce production binop_term_ -> QQMARK COLON app_term
-- On LET reduce production binop_term_ -> QQMARK COLON app_term
-- On INFIXOP4 reduce production binop_term_ -> QQMARK COLON app_term
-- On INFIXOP3 reduce production binop_term_ -> QQMARK COLON app_term
-- On INFIXOP2 reduce production binop_term_ -> QQMARK COLON app_term
-- On INFIXOP1 reduce production binop_term_ -> QQMARK COLON app_term
-- On INFIXOP0 reduce production binop_term_ -> QQMARK COLON app_term
-- On INFIXCONS reduce production binop_term_ -> QQMARK COLON app_term
-- On INCLUDE reduce production binop_term_ -> QQMARK COLON app_term
-- On IN reduce production binop_term_ -> QQMARK COLON app_term
-- On EXTERNAL reduce production binop_term_ -> QQMARK COLON app_term
-- On EXCEPTION reduce production binop_term_ -> QQMARK COLON app_term
-- On EQ reduce production binop_term_ -> QQMARK COLON app_term
-- On EOF reduce production binop_term_ -> QQMARK COLON app_term
-- On END reduce production binop_term_ -> QQMARK COLON app_term
-- On COMMA reduce production binop_term_ -> QQMARK COLON app_term
-- On COLONGT reduce production binop_term_ -> QQMARK COLON app_term
-- On BY reduce production binop_term_ -> QQMARK COLON app_term
-- On BAR reduce production binop_term_ -> QQMARK COLON app_term
-- On ARROW reduce production binop_term_ -> QQMARK COLON app_term
-- On AND reduce production binop_term_ -> QQMARK COLON app_term

State 489:
simple_term_ -> LBRACK list_contents . RBRACK [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE REF RBRACK RBRACE QUOTED_STRING PREFIXOP OPERATION OPEN NATURAL NAME MODULE MLTYPE LPAREN LET LBRACK LBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQEQ EQ EOF END COMMA COLONQT COLONGT COLONEQ COLON BY BAR BANG ARROW AND ]
-- On RBRACK shift to state 490

State 490:
simple_term_ -> LBRACK list_contents RBRACK . [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE REF RBRACK RBRACE QUOTED_STRING PREFIXOP OPERATION OPEN NATURAL NAME MODULE MLTYPE LPAREN LET LBRACK LBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQEQ EQ EOF END COMMA COLONQT COLONGT COLONEQ COLON BY BAR BANG ARROW AND ]
-- On WITH reduce production simple_term_ -> LBRACK list_contents RBRACK
-- On VERBOSITY reduce production simple_term_ -> LBRACK list_contents RBRACK
-- On TRY reduce production simple_term_ -> LBRACK list_contents RBRACK
-- On STAR reduce production simple_term_ -> LBRACK list_contents RBRACK
-- On SEMISEMI reduce production simple_term_ -> LBRACK list_contents RBRACK
-- On SEMI reduce production simple_term_ -> LBRACK list_contents RBRACK
-- On RULE reduce production simple_term_ -> LBRACK list_contents RBRACK
-- On RPAREN reduce production simple_term_ -> LBRACK list_contents RBRACK
-- On REQUIRE reduce production simple_term_ -> LBRACK list_contents RBRACK
-- On REF reduce production simple_term_ -> LBRACK list_contents RBRACK
-- On RBRACK reduce production simple_term_ -> LBRACK list_contents RBRACK
-- On RBRACE reduce production simple_term_ -> LBRACK list_contents RBRACK
-- On QUOTED_STRING reduce production simple_term_ -> LBRACK list_contents RBRACK
-- On PREFIXOP reduce production simple_term_ -> LBRACK list_contents RBRACK
-- On OPERATION reduce production simple_term_ -> LBRACK list_contents RBRACK
-- On OPEN reduce production simple_term_ -> LBRACK list_contents RBRACK
-- On NATURAL reduce production simple_term_ -> LBRACK list_contents RBRACK
-- On NAME reduce production simple_term_ -> LBRACK list_contents RBRACK
-- On MODULE reduce production simple_term_ -> LBRACK list_contents RBRACK
-- On MLTYPE reduce production simple_term_ -> LBRACK list_contents RBRACK
-- On LPAREN reduce production simple_term_ -> LBRACK list_contents RBRACK
-- On LET reduce production simple_term_ -> LBRACK list_contents RBRACK
-- On LBRACK reduce production simple_term_ -> LBRACK list_contents RBRACK
-- On LBRACE reduce production simple_term_ -> LBRACK list_contents RBRACK
-- On INFIXOP4 reduce production simple_term_ -> LBRACK list_contents RBRACK
-- On INFIXOP3 reduce production simple_term_ -> LBRACK list_contents RBRACK
-- On INFIXOP2 reduce production simple_term_ -> LBRACK list_contents RBRACK
-- On INFIXOP1 reduce production simple_term_ -> LBRACK list_contents RBRACK
-- On INFIXOP0 reduce production simple_term_ -> LBRACK list_contents RBRACK
-- On INFIXCONS reduce production simple_term_ -> LBRACK list_contents RBRACK
-- On INCLUDE reduce production simple_term_ -> LBRACK list_contents RBRACK
-- On IN reduce production simple_term_ -> LBRACK list_contents RBRACK
-- On EXTERNAL reduce production simple_term_ -> LBRACK list_contents RBRACK
-- On EXCEPTION reduce production simple_term_ -> LBRACK list_contents RBRACK
-- On EQEQ reduce production simple_term_ -> LBRACK list_contents RBRACK
-- On EQ reduce production simple_term_ -> LBRACK list_contents RBRACK
-- On EOF reduce production simple_term_ -> LBRACK list_contents RBRACK
-- On END reduce production simple_term_ -> LBRACK list_contents RBRACK
-- On COMMA reduce production simple_term_ -> LBRACK list_contents RBRACK
-- On COLONQT reduce production simple_term_ -> LBRACK list_contents RBRACK
-- On COLONGT reduce production simple_term_ -> LBRACK list_contents RBRACK
-- On COLONEQ reduce production simple_term_ -> LBRACK list_contents RBRACK
-- On COLON reduce production simple_term_ -> LBRACK list_contents RBRACK
-- On BY reduce production simple_term_ -> LBRACK list_contents RBRACK
-- On BAR reduce production simple_term_ -> LBRACK list_contents RBRACK
-- On BANG reduce production simple_term_ -> LBRACK list_contents RBRACK
-- On ARROW reduce production simple_term_ -> LBRACK list_contents RBRACK
-- On AND reduce production simple_term_ -> LBRACK list_contents RBRACK

State 491:
binop_term_ -> binop_term . INFIXCONS binop_term [ STAR SEMI RBRACK INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQ ]
binop_term_ -> binop_term . EQ binop_term [ STAR SEMI RBRACK INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQ ]
binop_term_ -> binop_term . INFIXOP0 binop_term [ STAR SEMI RBRACK INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQ ]
binop_term_ -> binop_term . INFIXOP1 binop_term [ STAR SEMI RBRACK INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQ ]
binop_term_ -> binop_term . INFIXOP2 binop_term [ STAR SEMI RBRACK INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQ ]
binop_term_ -> binop_term . INFIXOP3 binop_term [ STAR SEMI RBRACK INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQ ]
binop_term_ -> binop_term . STAR binop_term [ STAR SEMI RBRACK INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQ ]
binop_term_ -> binop_term . INFIXOP4 binop_term [ STAR SEMI RBRACK INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQ ]
list_contents -> binop_term . option(SEMI) [ RBRACK ]
list_contents -> binop_term . SEMI list_contents [ RBRACK ]
-- On STAR shift to state 174
-- On SEMI shift to state 492
-- On INFIXOP4 shift to state 177
-- On INFIXOP3 shift to state 193
-- On INFIXOP2 shift to state 195
-- On INFIXOP1 shift to state 197
-- On INFIXOP0 shift to state 201
-- On INFIXCONS shift to state 199
-- On EQ shift to state 203
-- On option(SEMI) shift to state 494
-- On RBRACK reduce production option(SEMI) ->

State 492:
list_contents -> binop_term SEMI . list_contents [ RBRACK ]
option(SEMI) -> SEMI . [ RBRACK ]
-- On REF shift to state 4
-- On RAISE shift to state 12
-- On QUOTED_STRING shift to state 5
-- On QQMARK shift to state 15
-- On PREFIXOP shift to state 6
-- On OCCURS shift to state 18
-- On NATURAL shift to state 7
-- On NAME shift to state 8
-- On LPAREN shift to state 9
-- On LBRACK shift to state 13
-- On CONVERT shift to state 130
-- On CONTEXT shift to state 136
-- On CONGRUENCE shift to state 138
-- On BANG shift to state 19
-- On ABSTRACT shift to state 144
-- On tt_name shift to state 20
-- On substitution_term_ shift to state 147
-- On substitution_term shift to state 148
-- On simple_term_ shift to state 21
-- On prefix_term_ shift to state 134
-- On module_path shift to state 24
-- On module_name shift to state 45
-- On mark_location(substitution_term_) shift to state 135
-- On mark_location(binop_term_) shift to state 171
-- On mark_location(app_term_) shift to state 152
-- On list_contents shift to state 493
-- On binop_term_ shift to state 175
-- On binop_term shift to state 491
-- On app_term_ shift to state 179
-- On app_term shift to state 180
-- On any_name shift to state 47
-- On RBRACK reduce production option(SEMI) -> SEMI

State 493:
list_contents -> binop_term SEMI list_contents . [ RBRACK ]
-- On RBRACK reduce production list_contents -> binop_term SEMI list_contents

State 494:
list_contents -> binop_term option(SEMI) . [ RBRACK ]
-- On RBRACK reduce production list_contents -> binop_term option(SEMI)

State 495:
app_term_ -> RAISE substitution_term . [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQEQ EQ EOF END COMMA COLONQT COLONGT COLONEQ COLON BY BAR ARROW AND ]
substitution_term_ -> substitution_term . substitution [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE RBRACK RBRACE OPERATION OPEN MODULE MLTYPE LET LBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQEQ EQ EOF END COMMA COLONQT COLONGT COLONEQ COLON BY BAR ARROW AND ]
-- On LBRACE shift to state 50
-- On substitution shift to state 133
-- On WITH reduce production app_term_ -> RAISE substitution_term
-- On VERBOSITY reduce production app_term_ -> RAISE substitution_term
-- On TRY reduce production app_term_ -> RAISE substitution_term
-- On STAR reduce production app_term_ -> RAISE substitution_term
-- On SEMISEMI reduce production app_term_ -> RAISE substitution_term
-- On SEMI reduce production app_term_ -> RAISE substitution_term
-- On RULE reduce production app_term_ -> RAISE substitution_term
-- On RPAREN reduce production app_term_ -> RAISE substitution_term
-- On REQUIRE reduce production app_term_ -> RAISE substitution_term
-- On RBRACK reduce production app_term_ -> RAISE substitution_term
-- On RBRACE reduce production app_term_ -> RAISE substitution_term
-- On OPERATION reduce production app_term_ -> RAISE substitution_term
-- On OPEN reduce production app_term_ -> RAISE substitution_term
-- On MODULE reduce production app_term_ -> RAISE substitution_term
-- On MLTYPE reduce production app_term_ -> RAISE substitution_term
-- On LET reduce production app_term_ -> RAISE substitution_term
-- On INFIXOP4 reduce production app_term_ -> RAISE substitution_term
-- On INFIXOP3 reduce production app_term_ -> RAISE substitution_term
-- On INFIXOP2 reduce production app_term_ -> RAISE substitution_term
-- On INFIXOP1 reduce production app_term_ -> RAISE substitution_term
-- On INFIXOP0 reduce production app_term_ -> RAISE substitution_term
-- On INFIXCONS reduce production app_term_ -> RAISE substitution_term
-- On INCLUDE reduce production app_term_ -> RAISE substitution_term
-- On IN reduce production app_term_ -> RAISE substitution_term
-- On EXTERNAL reduce production app_term_ -> RAISE substitution_term
-- On EXCEPTION reduce production app_term_ -> RAISE substitution_term
-- On EQEQ reduce production app_term_ -> RAISE substitution_term
-- On EQ reduce production app_term_ -> RAISE substitution_term
-- On EOF reduce production app_term_ -> RAISE substitution_term
-- On END reduce production app_term_ -> RAISE substitution_term
-- On COMMA reduce production app_term_ -> RAISE substitution_term
-- On COLONQT reduce production app_term_ -> RAISE substitution_term
-- On COLONGT reduce production app_term_ -> RAISE substitution_term
-- On COLONEQ reduce production app_term_ -> RAISE substitution_term
-- On COLON reduce production app_term_ -> RAISE substitution_term
-- On BY reduce production app_term_ -> RAISE substitution_term
-- On BAR reduce production app_term_ -> RAISE substitution_term
-- On ARROW reduce production app_term_ -> RAISE substitution_term
-- On AND reduce production app_term_ -> RAISE substitution_term

State 496:
prefix_term_ -> PREFIXOP . prefix_term [ STAR SEMI RPAREN REF QUOTED_STRING PREFIXOP NATURAL NAME LPAREN LBRACK LBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS EQEQ EQ COMMA COLONQT COLONGT COLONEQ COLON BANG ]
tt_name -> LPAREN PREFIXOP . RPAREN [ WITH VERBOSITY TYPE TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE REF RBRACK RBRACE QUOTED_STRING PREFIXOP OPERATION OPEN NATURAL NAME MODULE MLTYPE LPAREN LET LBRACK LBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQEQ EQ EOF END COMMA COLONQT COLONGT COLONEQ COLON BY BAR BANG ARROW AND ]
-- On RPAREN shift to state 28
-- On REF shift to state 4
-- On QUOTED_STRING shift to state 5
-- On PREFIXOP shift to state 6
-- On NATURAL shift to state 7
-- On NAME shift to state 8
-- On LPAREN shift to state 9
-- On LBRACK shift to state 13
-- On BANG shift to state 19
-- On tt_name shift to state 20
-- On simple_term_ shift to state 21
-- On prefix_term_ shift to state 22
-- On prefix_term shift to state 497
-- On module_path shift to state 24
-- On module_name shift to state 45
-- On mark_location(prefix_term_) shift to state 46
-- On any_name shift to state 47

State 497:
prefix_term_ -> PREFIXOP prefix_term . [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE REF RBRACK RBRACE QUOTED_STRING PREFIXOP OPERATION OPEN NATURAL NAME MODULE MLTYPE LPAREN LET LBRACK LBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQEQ EQ EOF END COMMA COLONQT COLONGT COLONEQ COLON BY BAR BANG ARROW AND ]
-- On WITH reduce production prefix_term_ -> PREFIXOP prefix_term
-- On VERBOSITY reduce production prefix_term_ -> PREFIXOP prefix_term
-- On TRY reduce production prefix_term_ -> PREFIXOP prefix_term
-- On STAR reduce production prefix_term_ -> PREFIXOP prefix_term
-- On SEMISEMI reduce production prefix_term_ -> PREFIXOP prefix_term
-- On SEMI reduce production prefix_term_ -> PREFIXOP prefix_term
-- On RULE reduce production prefix_term_ -> PREFIXOP prefix_term
-- On RPAREN reduce production prefix_term_ -> PREFIXOP prefix_term
-- On REQUIRE reduce production prefix_term_ -> PREFIXOP prefix_term
-- On REF reduce production prefix_term_ -> PREFIXOP prefix_term
-- On RBRACK reduce production prefix_term_ -> PREFIXOP prefix_term
-- On RBRACE reduce production prefix_term_ -> PREFIXOP prefix_term
-- On QUOTED_STRING reduce production prefix_term_ -> PREFIXOP prefix_term
-- On PREFIXOP reduce production prefix_term_ -> PREFIXOP prefix_term
-- On OPERATION reduce production prefix_term_ -> PREFIXOP prefix_term
-- On OPEN reduce production prefix_term_ -> PREFIXOP prefix_term
-- On NATURAL reduce production prefix_term_ -> PREFIXOP prefix_term
-- On NAME reduce production prefix_term_ -> PREFIXOP prefix_term
-- On MODULE reduce production prefix_term_ -> PREFIXOP prefix_term
-- On MLTYPE reduce production prefix_term_ -> PREFIXOP prefix_term
-- On LPAREN reduce production prefix_term_ -> PREFIXOP prefix_term
-- On LET reduce production prefix_term_ -> PREFIXOP prefix_term
-- On LBRACK reduce production prefix_term_ -> PREFIXOP prefix_term
-- On LBRACE reduce production prefix_term_ -> PREFIXOP prefix_term
-- On INFIXOP4 reduce production prefix_term_ -> PREFIXOP prefix_term
-- On INFIXOP3 reduce production prefix_term_ -> PREFIXOP prefix_term
-- On INFIXOP2 reduce production prefix_term_ -> PREFIXOP prefix_term
-- On INFIXOP1 reduce production prefix_term_ -> PREFIXOP prefix_term
-- On INFIXOP0 reduce production prefix_term_ -> PREFIXOP prefix_term
-- On INFIXCONS reduce production prefix_term_ -> PREFIXOP prefix_term
-- On INCLUDE reduce production prefix_term_ -> PREFIXOP prefix_term
-- On IN reduce production prefix_term_ -> PREFIXOP prefix_term
-- On EXTERNAL reduce production prefix_term_ -> PREFIXOP prefix_term
-- On EXCEPTION reduce production prefix_term_ -> PREFIXOP prefix_term
-- On EQEQ reduce production prefix_term_ -> PREFIXOP prefix_term
-- On EQ reduce production prefix_term_ -> PREFIXOP prefix_term
-- On EOF reduce production prefix_term_ -> PREFIXOP prefix_term
-- On END reduce production prefix_term_ -> PREFIXOP prefix_term
-- On COMMA reduce production prefix_term_ -> PREFIXOP prefix_term
-- On COLONQT reduce production prefix_term_ -> PREFIXOP prefix_term
-- On COLONGT reduce production prefix_term_ -> PREFIXOP prefix_term
-- On COLONEQ reduce production prefix_term_ -> PREFIXOP prefix_term
-- On COLON reduce production prefix_term_ -> PREFIXOP prefix_term
-- On BY reduce production prefix_term_ -> PREFIXOP prefix_term
-- On BAR reduce production prefix_term_ -> PREFIXOP prefix_term
-- On BANG reduce production prefix_term_ -> PREFIXOP prefix_term
-- On ARROW reduce production prefix_term_ -> PREFIXOP prefix_term
-- On AND reduce production prefix_term_ -> PREFIXOP prefix_term

State 498:
separated_nonempty_list(COMMA,term) -> term . [ RPAREN ]
separated_nonempty_list(COMMA,term) -> term . COMMA separated_nonempty_list(COMMA,term) [ RPAREN ]
simple_term_ -> LPAREN term . COLONGT ml_schema RPAREN [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE REF RBRACK RBRACE QUOTED_STRING PREFIXOP OPERATION OPEN NATURAL NAME MODULE MLTYPE LPAREN LET LBRACK LBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQEQ EQ EOF END COMMA COLONQT COLONGT COLONEQ COLON BY BAR BANG ARROW AND ]
-- On COMMA shift to state 483
-- On COLONGT shift to state 499
-- On RPAREN reduce production separated_nonempty_list(COMMA,term) -> term

State 499:
simple_term_ -> LPAREN term COLONGT . ml_schema RPAREN [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE REF RBRACK RBRACE QUOTED_STRING PREFIXOP OPERATION OPEN NATURAL NAME MODULE MLTYPE LPAREN LET LBRACK LBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQEQ EQ EOF END COMMA COLONQT COLONGT COLONEQ COLON BY BAR BANG ARROW AND ]
-- On UNDERSCORE shift to state 55
-- On REF shift to state 56
-- On NAME shift to state 57
-- On MLUNIT shift to state 58
-- On MLSTRING shift to state 59
-- On MLJUDGEMENT shift to state 60
-- On MLFORALL shift to state 116
-- On MLDERIVATION shift to state 61
-- On MLBOUNDARY shift to state 62
-- On LPAREN shift to state 63
-- On simple_mlty_ shift to state 82
-- On separated_nonempty_list(STAR,app_mlty) shift to state 83
-- On prod_mlty_ shift to state 84
-- On prod_mlty shift to state 85
-- On module_path shift to state 87
-- On module_name shift to state 45
-- On mlty_ shift to state 100
-- On mlty shift to state 125
-- On ml_schema_ shift to state 126
-- On ml_schema shift to state 500
-- On ml_name shift to state 102
-- On mark_location(prod_mlty_) shift to state 104
-- On mark_location(mlty_) shift to state 105
-- On mark_location(ml_schema_) shift to state 128
-- On mark_location(app_mlty_) shift to state 106
-- On app_mlty_ shift to state 107
-- On app_mlty shift to state 108

State 500:
simple_term_ -> LPAREN term COLONGT ml_schema . RPAREN [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE REF RBRACK RBRACE QUOTED_STRING PREFIXOP OPERATION OPEN NATURAL NAME MODULE MLTYPE LPAREN LET LBRACK LBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQEQ EQ EOF END COMMA COLONQT COLONGT COLONEQ COLON BY BAR BANG ARROW AND ]
-- On RPAREN shift to state 501

State 501:
simple_term_ -> LPAREN term COLONGT ml_schema RPAREN . [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE REF RBRACK RBRACE QUOTED_STRING PREFIXOP OPERATION OPEN NATURAL NAME MODULE MLTYPE LPAREN LET LBRACK LBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQEQ EQ EOF END COMMA COLONQT COLONGT COLONEQ COLON BY BAR BANG ARROW AND ]
-- On WITH reduce production simple_term_ -> LPAREN term COLONGT ml_schema RPAREN
-- On VERBOSITY reduce production simple_term_ -> LPAREN term COLONGT ml_schema RPAREN
-- On TRY reduce production simple_term_ -> LPAREN term COLONGT ml_schema RPAREN
-- On STAR reduce production simple_term_ -> LPAREN term COLONGT ml_schema RPAREN
-- On SEMISEMI reduce production simple_term_ -> LPAREN term COLONGT ml_schema RPAREN
-- On SEMI reduce production simple_term_ -> LPAREN term COLONGT ml_schema RPAREN
-- On RULE reduce production simple_term_ -> LPAREN term COLONGT ml_schema RPAREN
-- On RPAREN reduce production simple_term_ -> LPAREN term COLONGT ml_schema RPAREN
-- On REQUIRE reduce production simple_term_ -> LPAREN term COLONGT ml_schema RPAREN
-- On REF reduce production simple_term_ -> LPAREN term COLONGT ml_schema RPAREN
-- On RBRACK reduce production simple_term_ -> LPAREN term COLONGT ml_schema RPAREN
-- On RBRACE reduce production simple_term_ -> LPAREN term COLONGT ml_schema RPAREN
-- On QUOTED_STRING reduce production simple_term_ -> LPAREN term COLONGT ml_schema RPAREN
-- On PREFIXOP reduce production simple_term_ -> LPAREN term COLONGT ml_schema RPAREN
-- On OPERATION reduce production simple_term_ -> LPAREN term COLONGT ml_schema RPAREN
-- On OPEN reduce production simple_term_ -> LPAREN term COLONGT ml_schema RPAREN
-- On NATURAL reduce production simple_term_ -> LPAREN term COLONGT ml_schema RPAREN
-- On NAME reduce production simple_term_ -> LPAREN term COLONGT ml_schema RPAREN
-- On MODULE reduce production simple_term_ -> LPAREN term COLONGT ml_schema RPAREN
-- On MLTYPE reduce production simple_term_ -> LPAREN term COLONGT ml_schema RPAREN
-- On LPAREN reduce production simple_term_ -> LPAREN term COLONGT ml_schema RPAREN
-- On LET reduce production simple_term_ -> LPAREN term COLONGT ml_schema RPAREN
-- On LBRACK reduce production simple_term_ -> LPAREN term COLONGT ml_schema RPAREN
-- On LBRACE reduce production simple_term_ -> LPAREN term COLONGT ml_schema RPAREN
-- On INFIXOP4 reduce production simple_term_ -> LPAREN term COLONGT ml_schema RPAREN
-- On INFIXOP3 reduce production simple_term_ -> LPAREN term COLONGT ml_schema RPAREN
-- On INFIXOP2 reduce production simple_term_ -> LPAREN term COLONGT ml_schema RPAREN
-- On INFIXOP1 reduce production simple_term_ -> LPAREN term COLONGT ml_schema RPAREN
-- On INFIXOP0 reduce production simple_term_ -> LPAREN term COLONGT ml_schema RPAREN
-- On INFIXCONS reduce production simple_term_ -> LPAREN term COLONGT ml_schema RPAREN
-- On INCLUDE reduce production simple_term_ -> LPAREN term COLONGT ml_schema RPAREN
-- On IN reduce production simple_term_ -> LPAREN term COLONGT ml_schema RPAREN
-- On EXTERNAL reduce production simple_term_ -> LPAREN term COLONGT ml_schema RPAREN
-- On EXCEPTION reduce production simple_term_ -> LPAREN term COLONGT ml_schema RPAREN
-- On EQEQ reduce production simple_term_ -> LPAREN term COLONGT ml_schema RPAREN
-- On EQ reduce production simple_term_ -> LPAREN term COLONGT ml_schema RPAREN
-- On EOF reduce production simple_term_ -> LPAREN term COLONGT ml_schema RPAREN
-- On END reduce production simple_term_ -> LPAREN term COLONGT ml_schema RPAREN
-- On COMMA reduce production simple_term_ -> LPAREN term COLONGT ml_schema RPAREN
-- On COLONQT reduce production simple_term_ -> LPAREN term COLONGT ml_schema RPAREN
-- On COLONGT reduce production simple_term_ -> LPAREN term COLONGT ml_schema RPAREN
-- On COLONEQ reduce production simple_term_ -> LPAREN term COLONGT ml_schema RPAREN
-- On COLON reduce production simple_term_ -> LPAREN term COLONGT ml_schema RPAREN
-- On BY reduce production simple_term_ -> LPAREN term COLONGT ml_schema RPAREN
-- On BAR reduce production simple_term_ -> LPAREN term COLONGT ml_schema RPAREN
-- On BANG reduce production simple_term_ -> LPAREN term COLONGT ml_schema RPAREN
-- On ARROW reduce production simple_term_ -> LPAREN term COLONGT ml_schema RPAREN
-- On AND reduce production simple_term_ -> LPAREN term COLONGT ml_schema RPAREN

State 502:
loption(separated_nonempty_list(COMMA,term)) -> separated_nonempty_list(COMMA,term) . [ RPAREN ]
-- On RPAREN reduce production loption(separated_nonempty_list(COMMA,term)) -> separated_nonempty_list(COMMA,term)

State 503:
simple_term_ -> LPAREN loption(separated_nonempty_list(COMMA,term)) . RPAREN [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE REF RBRACK RBRACE QUOTED_STRING PREFIXOP OPERATION OPEN NATURAL NAME MODULE MLTYPE LPAREN LET LBRACK LBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQEQ EQ EOF END COMMA COLONQT COLONGT COLONEQ COLON BY BAR BANG ARROW AND ]
-- On RPAREN shift to state 504

State 504:
simple_term_ -> LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN . [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE REF RBRACK RBRACE QUOTED_STRING PREFIXOP OPERATION OPEN NATURAL NAME MODULE MLTYPE LPAREN LET LBRACK LBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQEQ EQ EOF END COMMA COLONQT COLONGT COLONEQ COLON BY BAR BANG ARROW AND ]
-- On WITH reduce production simple_term_ -> LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN
-- On VERBOSITY reduce production simple_term_ -> LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN
-- On TRY reduce production simple_term_ -> LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN
-- On STAR reduce production simple_term_ -> LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN
-- On SEMISEMI reduce production simple_term_ -> LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN
-- On SEMI reduce production simple_term_ -> LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN
-- On RULE reduce production simple_term_ -> LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN
-- On RPAREN reduce production simple_term_ -> LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN
-- On REQUIRE reduce production simple_term_ -> LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN
-- On REF reduce production simple_term_ -> LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN
-- On RBRACK reduce production simple_term_ -> LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN
-- On RBRACE reduce production simple_term_ -> LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN
-- On QUOTED_STRING reduce production simple_term_ -> LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN
-- On PREFIXOP reduce production simple_term_ -> LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN
-- On OPERATION reduce production simple_term_ -> LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN
-- On OPEN reduce production simple_term_ -> LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN
-- On NATURAL reduce production simple_term_ -> LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN
-- On NAME reduce production simple_term_ -> LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN
-- On MODULE reduce production simple_term_ -> LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN
-- On MLTYPE reduce production simple_term_ -> LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN
-- On LPAREN reduce production simple_term_ -> LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN
-- On LET reduce production simple_term_ -> LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN
-- On LBRACK reduce production simple_term_ -> LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN
-- On LBRACE reduce production simple_term_ -> LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN
-- On INFIXOP4 reduce production simple_term_ -> LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN
-- On INFIXOP3 reduce production simple_term_ -> LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN
-- On INFIXOP2 reduce production simple_term_ -> LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN
-- On INFIXOP1 reduce production simple_term_ -> LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN
-- On INFIXOP0 reduce production simple_term_ -> LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN
-- On INFIXCONS reduce production simple_term_ -> LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN
-- On INCLUDE reduce production simple_term_ -> LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN
-- On IN reduce production simple_term_ -> LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN
-- On EXTERNAL reduce production simple_term_ -> LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN
-- On EXCEPTION reduce production simple_term_ -> LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN
-- On EQEQ reduce production simple_term_ -> LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN
-- On EQ reduce production simple_term_ -> LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN
-- On EOF reduce production simple_term_ -> LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN
-- On END reduce production simple_term_ -> LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN
-- On COMMA reduce production simple_term_ -> LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN
-- On COLONQT reduce production simple_term_ -> LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN
-- On COLONGT reduce production simple_term_ -> LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN
-- On COLONEQ reduce production simple_term_ -> LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN
-- On COLON reduce production simple_term_ -> LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN
-- On BY reduce production simple_term_ -> LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN
-- On BAR reduce production simple_term_ -> LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN
-- On BANG reduce production simple_term_ -> LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN
-- On ARROW reduce production simple_term_ -> LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN
-- On AND reduce production simple_term_ -> LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN

State 505:
prefix_term_ -> NATURAL prefix_term . [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE REF RBRACK RBRACE QUOTED_STRING PREFIXOP OPERATION OPEN NATURAL NAME MODULE MLTYPE LPAREN LET LBRACK LBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQEQ EQ EOF END COMMA COLONQT COLONGT COLONEQ COLON BY BAR BANG ARROW AND ]
-- On WITH reduce production prefix_term_ -> NATURAL prefix_term
-- On VERBOSITY reduce production prefix_term_ -> NATURAL prefix_term
-- On TRY reduce production prefix_term_ -> NATURAL prefix_term
-- On STAR reduce production prefix_term_ -> NATURAL prefix_term
-- On SEMISEMI reduce production prefix_term_ -> NATURAL prefix_term
-- On SEMI reduce production prefix_term_ -> NATURAL prefix_term
-- On RULE reduce production prefix_term_ -> NATURAL prefix_term
-- On RPAREN reduce production prefix_term_ -> NATURAL prefix_term
-- On REQUIRE reduce production prefix_term_ -> NATURAL prefix_term
-- On REF reduce production prefix_term_ -> NATURAL prefix_term
-- On RBRACK reduce production prefix_term_ -> NATURAL prefix_term
-- On RBRACE reduce production prefix_term_ -> NATURAL prefix_term
-- On QUOTED_STRING reduce production prefix_term_ -> NATURAL prefix_term
-- On PREFIXOP reduce production prefix_term_ -> NATURAL prefix_term
-- On OPERATION reduce production prefix_term_ -> NATURAL prefix_term
-- On OPEN reduce production prefix_term_ -> NATURAL prefix_term
-- On NATURAL reduce production prefix_term_ -> NATURAL prefix_term
-- On NAME reduce production prefix_term_ -> NATURAL prefix_term
-- On MODULE reduce production prefix_term_ -> NATURAL prefix_term
-- On MLTYPE reduce production prefix_term_ -> NATURAL prefix_term
-- On LPAREN reduce production prefix_term_ -> NATURAL prefix_term
-- On LET reduce production prefix_term_ -> NATURAL prefix_term
-- On LBRACK reduce production prefix_term_ -> NATURAL prefix_term
-- On LBRACE reduce production prefix_term_ -> NATURAL prefix_term
-- On INFIXOP4 reduce production prefix_term_ -> NATURAL prefix_term
-- On INFIXOP3 reduce production prefix_term_ -> NATURAL prefix_term
-- On INFIXOP2 reduce production prefix_term_ -> NATURAL prefix_term
-- On INFIXOP1 reduce production prefix_term_ -> NATURAL prefix_term
-- On INFIXOP0 reduce production prefix_term_ -> NATURAL prefix_term
-- On INFIXCONS reduce production prefix_term_ -> NATURAL prefix_term
-- On INCLUDE reduce production prefix_term_ -> NATURAL prefix_term
-- On IN reduce production prefix_term_ -> NATURAL prefix_term
-- On EXTERNAL reduce production prefix_term_ -> NATURAL prefix_term
-- On EXCEPTION reduce production prefix_term_ -> NATURAL prefix_term
-- On EQEQ reduce production prefix_term_ -> NATURAL prefix_term
-- On EQ reduce production prefix_term_ -> NATURAL prefix_term
-- On EOF reduce production prefix_term_ -> NATURAL prefix_term
-- On END reduce production prefix_term_ -> NATURAL prefix_term
-- On COMMA reduce production prefix_term_ -> NATURAL prefix_term
-- On COLONQT reduce production prefix_term_ -> NATURAL prefix_term
-- On COLONGT reduce production prefix_term_ -> NATURAL prefix_term
-- On COLONEQ reduce production prefix_term_ -> NATURAL prefix_term
-- On COLON reduce production prefix_term_ -> NATURAL prefix_term
-- On BY reduce production prefix_term_ -> NATURAL prefix_term
-- On BAR reduce production prefix_term_ -> NATURAL prefix_term
-- On BANG reduce production prefix_term_ -> NATURAL prefix_term
-- On ARROW reduce production prefix_term_ -> NATURAL prefix_term
-- On AND reduce production prefix_term_ -> NATURAL prefix_term

State 506:
prefix_term_ -> REF prefix_term . [ WITH VERBOSITY TRY STAR SEMISEMI SEMI RULE RPAREN REQUIRE REF RBRACK RBRACE QUOTED_STRING PREFIXOP OPERATION OPEN NATURAL NAME MODULE MLTYPE LPAREN LET LBRACK LBRACE INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE IN EXTERNAL EXCEPTION EQEQ EQ EOF END COMMA COLONQT COLONGT COLONEQ COLON BY BAR BANG ARROW AND ]
-- On WITH reduce production prefix_term_ -> REF prefix_term
-- On VERBOSITY reduce production prefix_term_ -> REF prefix_term
-- On TRY reduce production prefix_term_ -> REF prefix_term
-- On STAR reduce production prefix_term_ -> REF prefix_term
-- On SEMISEMI reduce production prefix_term_ -> REF prefix_term
-- On SEMI reduce production prefix_term_ -> REF prefix_term
-- On RULE reduce production prefix_term_ -> REF prefix_term
-- On RPAREN reduce production prefix_term_ -> REF prefix_term
-- On REQUIRE reduce production prefix_term_ -> REF prefix_term
-- On REF reduce production prefix_term_ -> REF prefix_term
-- On RBRACK reduce production prefix_term_ -> REF prefix_term
-- On RBRACE reduce production prefix_term_ -> REF prefix_term
-- On QUOTED_STRING reduce production prefix_term_ -> REF prefix_term
-- On PREFIXOP reduce production prefix_term_ -> REF prefix_term
-- On OPERATION reduce production prefix_term_ -> REF prefix_term
-- On OPEN reduce production prefix_term_ -> REF prefix_term
-- On NATURAL reduce production prefix_term_ -> REF prefix_term
-- On NAME reduce production prefix_term_ -> REF prefix_term
-- On MODULE reduce production prefix_term_ -> REF prefix_term
-- On MLTYPE reduce production prefix_term_ -> REF prefix_term
-- On LPAREN reduce production prefix_term_ -> REF prefix_term
-- On LET reduce production prefix_term_ -> REF prefix_term
-- On LBRACK reduce production prefix_term_ -> REF prefix_term
-- On LBRACE reduce production prefix_term_ -> REF prefix_term
-- On INFIXOP4 reduce production prefix_term_ -> REF prefix_term
-- On INFIXOP3 reduce production prefix_term_ -> REF prefix_term
-- On INFIXOP2 reduce production prefix_term_ -> REF prefix_term
-- On INFIXOP1 reduce production prefix_term_ -> REF prefix_term
-- On INFIXOP0 reduce production prefix_term_ -> REF prefix_term
-- On INFIXCONS reduce production prefix_term_ -> REF prefix_term
-- On INCLUDE reduce production prefix_term_ -> REF prefix_term
-- On IN reduce production prefix_term_ -> REF prefix_term
-- On EXTERNAL reduce production prefix_term_ -> REF prefix_term
-- On EXCEPTION reduce production prefix_term_ -> REF prefix_term
-- On EQEQ reduce production prefix_term_ -> REF prefix_term
-- On EQ reduce production prefix_term_ -> REF prefix_term
-- On EOF reduce production prefix_term_ -> REF prefix_term
-- On END reduce production prefix_term_ -> REF prefix_term
-- On COMMA reduce production prefix_term_ -> REF prefix_term
-- On COLONQT reduce production prefix_term_ -> REF prefix_term
-- On COLONGT reduce production prefix_term_ -> REF prefix_term
-- On COLONEQ reduce production prefix_term_ -> REF prefix_term
-- On COLON reduce production prefix_term_ -> REF prefix_term
-- On BY reduce production prefix_term_ -> REF prefix_term
-- On BAR reduce production prefix_term_ -> REF prefix_term
-- On BANG reduce production prefix_term_ -> REF prefix_term
-- On ARROW reduce production prefix_term_ -> REF prefix_term
-- On AND reduce production prefix_term_ -> REF prefix_term

State 507:
term_ -> TRY term . WITH handler_cases END [ WITH VERBOSITY TRY SEMISEMI RULE RPAREN REQUIRE RBRACE OPERATION OPEN MODULE MLTYPE LET INCLUDE IN EXTERNAL EXCEPTION EOF END COMMA COLONGT BY BAR AND ]
-- On WITH shift to state 508

State 508:
term_ -> TRY term WITH . handler_cases END [ WITH VERBOSITY TRY SEMISEMI RULE RPAREN REQUIRE RBRACE OPERATION OPEN MODULE MLTYPE LET INCLUDE IN EXTERNAL EXCEPTION EOF END COMMA COLONGT BY BAR AND ]
-- On VAL shift to state 210
-- On RAISE shift to state 396
-- On NAME shift to state 398
-- On BAR shift to state 399
-- On separated_nonempty_list(BAR,handler_case) shift to state 420
-- On op_name shift to state 401
-- On module_path shift to state 410
-- On module_name shift to state 45
-- On loption(separated_nonempty_list(BAR,handler_case)) shift to state 421
-- On handler_cases shift to state 509
-- On handler_case shift to state 417
-- On END reduce production loption(separated_nonempty_list(BAR,handler_case)) ->

State 509:
term_ -> TRY term WITH handler_cases . END [ WITH VERBOSITY TRY SEMISEMI RULE RPAREN REQUIRE RBRACE OPERATION OPEN MODULE MLTYPE LET INCLUDE IN EXTERNAL EXCEPTION EOF END COMMA COLONGT BY BAR AND ]
-- On END shift to state 510

State 510:
term_ -> TRY term WITH handler_cases END . [ WITH VERBOSITY TRY SEMISEMI RULE RPAREN REQUIRE RBRACE OPERATION OPEN MODULE MLTYPE LET INCLUDE IN EXTERNAL EXCEPTION EOF END COMMA COLONGT BY BAR AND ]
-- On WITH reduce production term_ -> TRY term WITH handler_cases END
-- On VERBOSITY reduce production term_ -> TRY term WITH handler_cases END
-- On TRY reduce production term_ -> TRY term WITH handler_cases END
-- On SEMISEMI reduce production term_ -> TRY term WITH handler_cases END
-- On RULE reduce production term_ -> TRY term WITH handler_cases END
-- On RPAREN reduce production term_ -> TRY term WITH handler_cases END
-- On REQUIRE reduce production term_ -> TRY term WITH handler_cases END
-- On RBRACE reduce production term_ -> TRY term WITH handler_cases END
-- On OPERATION reduce production term_ -> TRY term WITH handler_cases END
-- On OPEN reduce production term_ -> TRY term WITH handler_cases END
-- On MODULE reduce production term_ -> TRY term WITH handler_cases END
-- On MLTYPE reduce production term_ -> TRY term WITH handler_cases END
-- On LET reduce production term_ -> TRY term WITH handler_cases END
-- On INCLUDE reduce production term_ -> TRY term WITH handler_cases END
-- On IN reduce production term_ -> TRY term WITH handler_cases END
-- On EXTERNAL reduce production term_ -> TRY term WITH handler_cases END
-- On EXCEPTION reduce production term_ -> TRY term WITH handler_cases END
-- On EOF reduce production term_ -> TRY term WITH handler_cases END
-- On END reduce production term_ -> TRY term WITH handler_cases END
-- On COMMA reduce production term_ -> TRY term WITH handler_cases END
-- On COLONGT reduce production term_ -> TRY term WITH handler_cases END
-- On BY reduce production term_ -> TRY term WITH handler_cases END
-- On BAR reduce production term_ -> TRY term WITH handler_cases END
-- On AND reduce production term_ -> TRY term WITH handler_cases END

State 511:
term_ -> WITH term . TRY term [ WITH VERBOSITY TRY SEMISEMI RULE RPAREN REQUIRE RBRACE OPERATION OPEN MODULE MLTYPE LET INCLUDE IN EXTERNAL EXCEPTION EOF END COMMA COLONGT BY BAR AND ]
-- On TRY shift to state 512

State 512:
term_ -> WITH term TRY . term [ WITH VERBOSITY TRY SEMISEMI RULE RPAREN REQUIRE RBRACE OPERATION OPEN MODULE MLTYPE LET INCLUDE IN EXTERNAL EXCEPTION EOF END COMMA COLONGT BY BAR AND ]
-- On WITH shift to state 2
-- On TRY shift to state 3
-- On REF shift to state 4
-- On RAISE shift to state 12
-- On QUOTED_STRING shift to state 5
-- On QQMARK shift to state 15
-- On PREFIXOP shift to state 6
-- On OCCURS shift to state 18
-- On NATURAL shift to state 7
-- On NAME shift to state 8
-- On MATCH shift to state 51
-- On LPAREN shift to state 9
-- On LET shift to state 52
-- On LBRACK shift to state 13
-- On LBRACE shift to state 156
-- On HANDLER shift to state 209
-- On FUN shift to state 330
-- On FRESH shift to state 338
-- On DERIVE shift to state 342
-- On CONVERT shift to state 130
-- On CONTEXT shift to state 136
-- On CONGRUENCE shift to state 138
-- On BANG shift to state 19
-- On ABSTRACT shift to state 144
-- On ty_term_ shift to state 357
-- On tt_name shift to state 20
-- On term_ shift to state 358
-- On term shift to state 513
-- On substitution_term_ shift to state 147
-- On substitution_term shift to state 148
-- On simple_term_ shift to state 21
-- On prefix_term_ shift to state 134
-- On nonempty_list(maybe_typed_binder) shift to state 167
-- On module_path shift to state 24
-- On module_name shift to state 45
-- On maybe_typed_binder shift to state 168
-- On mark_location(term_) shift to state 361
-- On mark_location(substitution_term_) shift to state 135
-- On mark_location(binop_term_) shift to state 171
-- On mark_location(app_term_) shift to state 152
-- On binop_term_ shift to state 172
-- On binop_term shift to state 362
-- On app_term_ shift to state 179
-- On app_term shift to state 365
-- On any_name shift to state 47
-- On abstraction shift to state 205

State 513:
term_ -> WITH term TRY term . [ WITH VERBOSITY TRY SEMISEMI RULE RPAREN REQUIRE RBRACE OPERATION OPEN MODULE MLTYPE LET INCLUDE IN EXTERNAL EXCEPTION EOF END COMMA COLONGT BY BAR AND ]
-- On WITH reduce production term_ -> WITH term TRY term
-- On VERBOSITY reduce production term_ -> WITH term TRY term
-- On TRY reduce production term_ -> WITH term TRY term
-- On SEMISEMI reduce production term_ -> WITH term TRY term
-- On RULE reduce production term_ -> WITH term TRY term
-- On RPAREN reduce production term_ -> WITH term TRY term
-- On REQUIRE reduce production term_ -> WITH term TRY term
-- On RBRACE reduce production term_ -> WITH term TRY term
-- On OPERATION reduce production term_ -> WITH term TRY term
-- On OPEN reduce production term_ -> WITH term TRY term
-- On MODULE reduce production term_ -> WITH term TRY term
-- On MLTYPE reduce production term_ -> WITH term TRY term
-- On LET reduce production term_ -> WITH term TRY term
-- On INCLUDE reduce production term_ -> WITH term TRY term
-- On IN reduce production term_ -> WITH term TRY term
-- On EXTERNAL reduce production term_ -> WITH term TRY term
-- On EXCEPTION reduce production term_ -> WITH term TRY term
-- On EOF reduce production term_ -> WITH term TRY term
-- On END reduce production term_ -> WITH term TRY term
-- On COMMA reduce production term_ -> WITH term TRY term
-- On COLONGT reduce production term_ -> WITH term TRY term
-- On BY reduce production term_ -> WITH term TRY term
-- On BAR reduce production term_ -> WITH term TRY term
-- On AND reduce production term_ -> WITH term TRY term

State 514:
top_operation_case -> OPERATION . op_name list(prefix_pattern) handler_checking ARROW term [ END BAR ]
top_operation_case -> OPERATION . module_path PERIOD op_name list(prefix_pattern) handler_checking ARROW term [ END BAR ]
-- On NAME shift to state 398
-- On op_name shift to state 515
-- On module_path shift to state 520
-- On module_name shift to state 45

State 515:
top_operation_case -> OPERATION op_name . list(prefix_pattern) handler_checking ARROW term [ END BAR ]
-- On UNDERSCORE shift to state 211
-- On UATOM shift to state 212
-- On QUOTED_STRING shift to state 213
-- On QQMARK shift to state 214
-- On PREFIXOP shift to state 216
-- On NAME shift to state 57
-- On LPAREN shift to state 217
-- On LBRACK shift to state 226
-- On simple_pattern_ shift to state 234
-- On prefix_pattern_ shift to state 258
-- On prefix_pattern shift to state 402
-- On module_path shift to state 261
-- On module_name shift to state 45
-- On ml_name shift to state 263
-- On mark_location(prefix_pattern_) shift to state 264
-- On list(prefix_pattern) shift to state 516
-- On COLON reduce production list(prefix_pattern) ->
-- On ARROW reduce production list(prefix_pattern) ->

State 516:
top_operation_case -> OPERATION op_name list(prefix_pattern) . handler_checking ARROW term [ END BAR ]
-- On COLON shift to state 405
-- On handler_checking shift to state 517
-- On ARROW reduce production handler_checking ->

State 517:
top_operation_case -> OPERATION op_name list(prefix_pattern) handler_checking . ARROW term [ END BAR ]
-- On ARROW shift to state 518

State 518:
top_operation_case -> OPERATION op_name list(prefix_pattern) handler_checking ARROW . term [ END BAR ]
-- On WITH shift to state 2
-- On TRY shift to state 3
-- On REF shift to state 4
-- On RAISE shift to state 12
-- On QUOTED_STRING shift to state 5
-- On QQMARK shift to state 15
-- On PREFIXOP shift to state 6
-- On OCCURS shift to state 18
-- On NATURAL shift to state 7
-- On NAME shift to state 8
-- On MATCH shift to state 51
-- On LPAREN shift to state 9
-- On LET shift to state 52
-- On LBRACK shift to state 13
-- On LBRACE shift to state 156
-- On HANDLER shift to state 209
-- On FUN shift to state 330
-- On FRESH shift to state 338
-- On DERIVE shift to state 342
-- On CONVERT shift to state 130
-- On CONTEXT shift to state 136
-- On CONGRUENCE shift to state 138
-- On BANG shift to state 19
-- On ABSTRACT shift to state 144
-- On ty_term_ shift to state 357
-- On tt_name shift to state 20
-- On term_ shift to state 358
-- On term shift to state 519
-- On substitution_term_ shift to state 147
-- On substitution_term shift to state 148
-- On simple_term_ shift to state 21
-- On prefix_term_ shift to state 134
-- On nonempty_list(maybe_typed_binder) shift to state 167
-- On module_path shift to state 24
-- On module_name shift to state 45
-- On maybe_typed_binder shift to state 168
-- On mark_location(term_) shift to state 361
-- On mark_location(substitution_term_) shift to state 135
-- On mark_location(binop_term_) shift to state 171
-- On mark_location(app_term_) shift to state 152
-- On binop_term_ shift to state 172
-- On binop_term shift to state 362
-- On app_term_ shift to state 179
-- On app_term shift to state 365
-- On any_name shift to state 47
-- On abstraction shift to state 205

State 519:
top_operation_case -> OPERATION op_name list(prefix_pattern) handler_checking ARROW term . [ END BAR ]
-- On END reduce production top_operation_case -> OPERATION op_name list(prefix_pattern) handler_checking ARROW term
-- On BAR reduce production top_operation_case -> OPERATION op_name list(prefix_pattern) handler_checking ARROW term

State 520:
module_path -> module_path . PERIOD module_name [ PERIOD ]
top_operation_case -> OPERATION module_path . PERIOD op_name list(prefix_pattern) handler_checking ARROW term [ END BAR ]
-- On PERIOD shift to state 521

State 521:
module_path -> module_path PERIOD . module_name [ PERIOD ]
top_operation_case -> OPERATION module_path PERIOD . op_name list(prefix_pattern) handler_checking ARROW term [ END BAR ]
-- On NAME shift to state 398
-- On op_name shift to state 522
-- On module_name shift to state 43

State 522:
top_operation_case -> OPERATION module_path PERIOD op_name . list(prefix_pattern) handler_checking ARROW term [ END BAR ]
-- On UNDERSCORE shift to state 211
-- On UATOM shift to state 212
-- On QUOTED_STRING shift to state 213
-- On QQMARK shift to state 214
-- On PREFIXOP shift to state 216
-- On NAME shift to state 57
-- On LPAREN shift to state 217
-- On LBRACK shift to state 226
-- On simple_pattern_ shift to state 234
-- On prefix_pattern_ shift to state 258
-- On prefix_pattern shift to state 402
-- On module_path shift to state 261
-- On module_name shift to state 45
-- On ml_name shift to state 263
-- On mark_location(prefix_pattern_) shift to state 264
-- On list(prefix_pattern) shift to state 523
-- On COLON reduce production list(prefix_pattern) ->
-- On ARROW reduce production list(prefix_pattern) ->

State 523:
top_operation_case -> OPERATION module_path PERIOD op_name list(prefix_pattern) . handler_checking ARROW term [ END BAR ]
-- On COLON shift to state 405
-- On handler_checking shift to state 524
-- On ARROW reduce production handler_checking ->

State 524:
top_operation_case -> OPERATION module_path PERIOD op_name list(prefix_pattern) handler_checking . ARROW term [ END BAR ]
-- On ARROW shift to state 525

State 525:
top_operation_case -> OPERATION module_path PERIOD op_name list(prefix_pattern) handler_checking ARROW . term [ END BAR ]
-- On WITH shift to state 2
-- On TRY shift to state 3
-- On REF shift to state 4
-- On RAISE shift to state 12
-- On QUOTED_STRING shift to state 5
-- On QQMARK shift to state 15
-- On PREFIXOP shift to state 6
-- On OCCURS shift to state 18
-- On NATURAL shift to state 7
-- On NAME shift to state 8
-- On MATCH shift to state 51
-- On LPAREN shift to state 9
-- On LET shift to state 52
-- On LBRACK shift to state 13
-- On LBRACE shift to state 156
-- On HANDLER shift to state 209
-- On FUN shift to state 330
-- On FRESH shift to state 338
-- On DERIVE shift to state 342
-- On CONVERT shift to state 130
-- On CONTEXT shift to state 136
-- On CONGRUENCE shift to state 138
-- On BANG shift to state 19
-- On ABSTRACT shift to state 144
-- On ty_term_ shift to state 357
-- On tt_name shift to state 20
-- On term_ shift to state 358
-- On term shift to state 526
-- On substitution_term_ shift to state 147
-- On substitution_term shift to state 148
-- On simple_term_ shift to state 21
-- On prefix_term_ shift to state 134
-- On nonempty_list(maybe_typed_binder) shift to state 167
-- On module_path shift to state 24
-- On module_name shift to state 45
-- On maybe_typed_binder shift to state 168
-- On mark_location(term_) shift to state 361
-- On mark_location(substitution_term_) shift to state 135
-- On mark_location(binop_term_) shift to state 171
-- On mark_location(app_term_) shift to state 152
-- On binop_term_ shift to state 172
-- On binop_term shift to state 362
-- On app_term_ shift to state 179
-- On app_term shift to state 365
-- On any_name shift to state 47
-- On abstraction shift to state 205

State 526:
top_operation_case -> OPERATION module_path PERIOD op_name list(prefix_pattern) handler_checking ARROW term . [ END BAR ]
-- On END reduce production top_operation_case -> OPERATION module_path PERIOD op_name list(prefix_pattern) handler_checking ARROW term
-- On BAR reduce production top_operation_case -> OPERATION module_path PERIOD op_name list(prefix_pattern) handler_checking ARROW term

State 527:
top_operation_cases -> BAR . separated_nonempty_list(BAR,top_operation_case) [ END ]
-- On OPERATION shift to state 514
-- On top_operation_case shift to state 528
-- On separated_nonempty_list(BAR,top_operation_case) shift to state 531

State 528:
separated_nonempty_list(BAR,top_operation_case) -> top_operation_case . [ END ]
separated_nonempty_list(BAR,top_operation_case) -> top_operation_case . BAR separated_nonempty_list(BAR,top_operation_case) [ END ]
-- On BAR shift to state 529
-- On END reduce production separated_nonempty_list(BAR,top_operation_case) -> top_operation_case

State 529:
separated_nonempty_list(BAR,top_operation_case) -> top_operation_case BAR . separated_nonempty_list(BAR,top_operation_case) [ END ]
-- On OPERATION shift to state 514
-- On top_operation_case shift to state 528
-- On separated_nonempty_list(BAR,top_operation_case) shift to state 530

State 530:
separated_nonempty_list(BAR,top_operation_case) -> top_operation_case BAR separated_nonempty_list(BAR,top_operation_case) . [ END ]
-- On END reduce production separated_nonempty_list(BAR,top_operation_case) -> top_operation_case BAR separated_nonempty_list(BAR,top_operation_case)

State 531:
top_operation_cases -> BAR separated_nonempty_list(BAR,top_operation_case) . [ END ]
-- On END reduce production top_operation_cases -> BAR separated_nonempty_list(BAR,top_operation_case)

State 532:
top_command_ -> WITH top_operation_cases . END [ WITH VERBOSITY SEMISEMI RULE REQUIRE OPERATION OPEN MODULE MLTYPE LET INCLUDE EXTERNAL EXCEPTION EOF END ]
-- On END shift to state 533

State 533:
top_command_ -> WITH top_operation_cases END . [ WITH VERBOSITY SEMISEMI RULE REQUIRE OPERATION OPEN MODULE MLTYPE LET INCLUDE EXTERNAL EXCEPTION EOF END ]
-- On WITH reduce production top_command_ -> WITH top_operation_cases END
-- On VERBOSITY reduce production top_command_ -> WITH top_operation_cases END
-- On SEMISEMI reduce production top_command_ -> WITH top_operation_cases END
-- On RULE reduce production top_command_ -> WITH top_operation_cases END
-- On REQUIRE reduce production top_command_ -> WITH top_operation_cases END
-- On OPERATION reduce production top_command_ -> WITH top_operation_cases END
-- On OPEN reduce production top_command_ -> WITH top_operation_cases END
-- On MODULE reduce production top_command_ -> WITH top_operation_cases END
-- On MLTYPE reduce production top_command_ -> WITH top_operation_cases END
-- On LET reduce production top_command_ -> WITH top_operation_cases END
-- On INCLUDE reduce production top_command_ -> WITH top_operation_cases END
-- On EXTERNAL reduce production top_command_ -> WITH top_operation_cases END
-- On EXCEPTION reduce production top_command_ -> WITH top_operation_cases END
-- On EOF reduce production top_command_ -> WITH top_operation_cases END
-- On END reduce production top_command_ -> WITH top_operation_cases END

State 534:
loption(separated_nonempty_list(BAR,top_operation_case)) -> separated_nonempty_list(BAR,top_operation_case) . [ END ]
-- On END reduce production loption(separated_nonempty_list(BAR,top_operation_case)) -> separated_nonempty_list(BAR,top_operation_case)

State 535:
top_operation_cases -> loption(separated_nonempty_list(BAR,top_operation_case)) . [ END ]
-- On END reduce production top_operation_cases -> loption(separated_nonempty_list(BAR,top_operation_case))

State 536:
top_command_ -> VERBOSITY . NUMERAL [ WITH VERBOSITY SEMISEMI RULE REQUIRE OPERATION OPEN MODULE MLTYPE LET INCLUDE EXTERNAL EXCEPTION EOF END ]
-- On NUMERAL shift to state 537

State 537:
top_command_ -> VERBOSITY NUMERAL . [ WITH VERBOSITY SEMISEMI RULE REQUIRE OPERATION OPEN MODULE MLTYPE LET INCLUDE EXTERNAL EXCEPTION EOF END ]
-- On WITH reduce production top_command_ -> VERBOSITY NUMERAL
-- On VERBOSITY reduce production top_command_ -> VERBOSITY NUMERAL
-- On SEMISEMI reduce production top_command_ -> VERBOSITY NUMERAL
-- On RULE reduce production top_command_ -> VERBOSITY NUMERAL
-- On REQUIRE reduce production top_command_ -> VERBOSITY NUMERAL
-- On OPERATION reduce production top_command_ -> VERBOSITY NUMERAL
-- On OPEN reduce production top_command_ -> VERBOSITY NUMERAL
-- On MODULE reduce production top_command_ -> VERBOSITY NUMERAL
-- On MLTYPE reduce production top_command_ -> VERBOSITY NUMERAL
-- On LET reduce production top_command_ -> VERBOSITY NUMERAL
-- On INCLUDE reduce production top_command_ -> VERBOSITY NUMERAL
-- On EXTERNAL reduce production top_command_ -> VERBOSITY NUMERAL
-- On EXCEPTION reduce production top_command_ -> VERBOSITY NUMERAL
-- On EOF reduce production top_command_ -> VERBOSITY NUMERAL
-- On END reduce production top_command_ -> VERBOSITY NUMERAL

State 538:
top_command_ -> RULE . rule_ [ WITH VERBOSITY SEMISEMI RULE REQUIRE OPERATION OPEN MODULE MLTYPE LET INCLUDE EXTERNAL EXCEPTION EOF END ]
-- On NAME shift to state 158
-- On LPAREN shift to state 26
-- On tt_name shift to state 539
-- On rule_ shift to state 553

State 539:
rule_ -> tt_name . list(premise) TYPE [ WITH VERBOSITY SEMISEMI RULE REQUIRE OPERATION OPEN MODULE MLTYPE LET INCLUDE EXTERNAL EXCEPTION EOF END ]
rule_ -> tt_name . list(premise) COLON term [ WITH VERBOSITY SEMISEMI RULE REQUIRE OPERATION OPEN MODULE MLTYPE LET INCLUDE EXTERNAL EXCEPTION EOF END ]
rule_ -> tt_name . list(premise) COLON app_term EQEQ ty_term [ WITH VERBOSITY SEMISEMI RULE REQUIRE OPERATION OPEN MODULE MLTYPE LET INCLUDE EXTERNAL EXCEPTION EOF END ]
rule_ -> tt_name . list(premise) COLON app_term EQEQ app_term COLON term [ WITH VERBOSITY SEMISEMI RULE REQUIRE OPERATION OPEN MODULE MLTYPE LET INCLUDE EXTERNAL EXCEPTION EOF END ]
-- On LPAREN shift to state 343
-- On premise_ shift to state 383
-- On premise shift to state 540
-- On mark_location(premise_) shift to state 386
-- On list(premise) shift to state 542
-- On TYPE reduce production list(premise) ->
-- On COLON reduce production list(premise) ->

State 540:
list(premise) -> premise . list(premise) [ TYPE COLON ]
-- On LPAREN shift to state 343
-- On premise_ shift to state 383
-- On premise shift to state 540
-- On mark_location(premise_) shift to state 386
-- On list(premise) shift to state 541
-- On TYPE reduce production list(premise) ->
-- On COLON reduce production list(premise) ->

State 541:
list(premise) -> premise list(premise) . [ TYPE COLON ]
-- On TYPE reduce production list(premise) -> premise list(premise)
-- On COLON reduce production list(premise) -> premise list(premise)

State 542:
rule_ -> tt_name list(premise) . TYPE [ WITH VERBOSITY SEMISEMI RULE REQUIRE OPERATION OPEN MODULE MLTYPE LET INCLUDE EXTERNAL EXCEPTION EOF END ]
rule_ -> tt_name list(premise) . COLON term [ WITH VERBOSITY SEMISEMI RULE REQUIRE OPERATION OPEN MODULE MLTYPE LET INCLUDE EXTERNAL EXCEPTION EOF END ]
rule_ -> tt_name list(premise) . COLON app_term EQEQ ty_term [ WITH VERBOSITY SEMISEMI RULE REQUIRE OPERATION OPEN MODULE MLTYPE LET INCLUDE EXTERNAL EXCEPTION EOF END ]
rule_ -> tt_name list(premise) . COLON app_term EQEQ app_term COLON term [ WITH VERBOSITY SEMISEMI RULE REQUIRE OPERATION OPEN MODULE MLTYPE LET INCLUDE EXTERNAL EXCEPTION EOF END ]
-- On TYPE shift to state 543
-- On COLON shift to state 544

State 543:
rule_ -> tt_name list(premise) TYPE . [ WITH VERBOSITY SEMISEMI RULE REQUIRE OPERATION OPEN MODULE MLTYPE LET INCLUDE EXTERNAL EXCEPTION EOF END ]
-- On WITH reduce production rule_ -> tt_name list(premise) TYPE
-- On VERBOSITY reduce production rule_ -> tt_name list(premise) TYPE
-- On SEMISEMI reduce production rule_ -> tt_name list(premise) TYPE
-- On RULE reduce production rule_ -> tt_name list(premise) TYPE
-- On REQUIRE reduce production rule_ -> tt_name list(premise) TYPE
-- On OPERATION reduce production rule_ -> tt_name list(premise) TYPE
-- On OPEN reduce production rule_ -> tt_name list(premise) TYPE
-- On MODULE reduce production rule_ -> tt_name list(premise) TYPE
-- On MLTYPE reduce production rule_ -> tt_name list(premise) TYPE
-- On LET reduce production rule_ -> tt_name list(premise) TYPE
-- On INCLUDE reduce production rule_ -> tt_name list(premise) TYPE
-- On EXTERNAL reduce production rule_ -> tt_name list(premise) TYPE
-- On EXCEPTION reduce production rule_ -> tt_name list(premise) TYPE
-- On EOF reduce production rule_ -> tt_name list(premise) TYPE
-- On END reduce production rule_ -> tt_name list(premise) TYPE

State 544:
rule_ -> tt_name list(premise) COLON . term [ WITH VERBOSITY SEMISEMI RULE REQUIRE OPERATION OPEN MODULE MLTYPE LET INCLUDE EXTERNAL EXCEPTION EOF END ]
rule_ -> tt_name list(premise) COLON . app_term EQEQ ty_term [ WITH VERBOSITY SEMISEMI RULE REQUIRE OPERATION OPEN MODULE MLTYPE LET INCLUDE EXTERNAL EXCEPTION EOF END ]
rule_ -> tt_name list(premise) COLON . app_term EQEQ app_term COLON term [ WITH VERBOSITY SEMISEMI RULE REQUIRE OPERATION OPEN MODULE MLTYPE LET INCLUDE EXTERNAL EXCEPTION EOF END ]
-- On WITH shift to state 2
-- On TRY shift to state 3
-- On REF shift to state 4
-- On RAISE shift to state 12
-- On QUOTED_STRING shift to state 5
-- On QQMARK shift to state 15
-- On PREFIXOP shift to state 6
-- On OCCURS shift to state 18
-- On NATURAL shift to state 7
-- On NAME shift to state 8
-- On MATCH shift to state 51
-- On LPAREN shift to state 9
-- On LET shift to state 52
-- On LBRACK shift to state 13
-- On LBRACE shift to state 156
-- On HANDLER shift to state 209
-- On FUN shift to state 330
-- On FRESH shift to state 338
-- On DERIVE shift to state 342
-- On CONVERT shift to state 130
-- On CONTEXT shift to state 136
-- On CONGRUENCE shift to state 138
-- On BANG shift to state 19
-- On ABSTRACT shift to state 144
-- On ty_term_ shift to state 357
-- On tt_name shift to state 20
-- On term_ shift to state 358
-- On term shift to state 545
-- On substitution_term_ shift to state 147
-- On substitution_term shift to state 148
-- On simple_term_ shift to state 21
-- On prefix_term_ shift to state 134
-- On nonempty_list(maybe_typed_binder) shift to state 167
-- On module_path shift to state 24
-- On module_name shift to state 45
-- On maybe_typed_binder shift to state 168
-- On mark_location(term_) shift to state 361
-- On mark_location(substitution_term_) shift to state 135
-- On mark_location(binop_term_) shift to state 171
-- On mark_location(app_term_) shift to state 152
-- On binop_term_ shift to state 172
-- On binop_term shift to state 362
-- On app_term_ shift to state 481
-- On app_term shift to state 546
-- On any_name shift to state 47
-- On abstraction shift to state 205

State 545:
rule_ -> tt_name list(premise) COLON term . [ WITH VERBOSITY SEMISEMI RULE REQUIRE OPERATION OPEN MODULE MLTYPE LET INCLUDE EXTERNAL EXCEPTION EOF END ]
-- On WITH reduce production rule_ -> tt_name list(premise) COLON term
-- On VERBOSITY reduce production rule_ -> tt_name list(premise) COLON term
-- On SEMISEMI reduce production rule_ -> tt_name list(premise) COLON term
-- On RULE reduce production rule_ -> tt_name list(premise) COLON term
-- On REQUIRE reduce production rule_ -> tt_name list(premise) COLON term
-- On OPERATION reduce production rule_ -> tt_name list(premise) COLON term
-- On OPEN reduce production rule_ -> tt_name list(premise) COLON term
-- On MODULE reduce production rule_ -> tt_name list(premise) COLON term
-- On MLTYPE reduce production rule_ -> tt_name list(premise) COLON term
-- On LET reduce production rule_ -> tt_name list(premise) COLON term
-- On INCLUDE reduce production rule_ -> tt_name list(premise) COLON term
-- On EXTERNAL reduce production rule_ -> tt_name list(premise) COLON term
-- On EXCEPTION reduce production rule_ -> tt_name list(premise) COLON term
-- On EOF reduce production rule_ -> tt_name list(premise) COLON term
-- On END reduce production rule_ -> tt_name list(premise) COLON term

State 546:
binop_term_ -> app_term . COLONEQ binop_term [ WITH VERBOSITY STAR SEMISEMI SEMI RULE REQUIRE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE EXTERNAL EXCEPTION EQ EOF END ]
binop_term_ -> app_term . EQEQ app_term BY app_term [ WITH VERBOSITY STAR SEMISEMI SEMI RULE REQUIRE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE EXTERNAL EXCEPTION EQ EOF END ]
binop_term_ -> app_term . EQEQ app_term COLON app_term BY app_term [ WITH VERBOSITY STAR SEMISEMI SEMI RULE REQUIRE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE EXTERNAL EXCEPTION EQ EOF END ]
binop_term_ -> app_term . EQEQ app_term BY QQMARK [ WITH VERBOSITY STAR SEMISEMI SEMI RULE REQUIRE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE EXTERNAL EXCEPTION EQ EOF END ]
binop_term_ -> app_term . EQEQ app_term COLON app_term BY QQMARK [ WITH VERBOSITY STAR SEMISEMI SEMI RULE REQUIRE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE EXTERNAL EXCEPTION EQ EOF END ]
rule_ -> tt_name list(premise) COLON app_term . EQEQ ty_term [ WITH VERBOSITY SEMISEMI RULE REQUIRE OPERATION OPEN MODULE MLTYPE LET INCLUDE EXTERNAL EXCEPTION EOF END ]
rule_ -> tt_name list(premise) COLON app_term . EQEQ app_term COLON term [ WITH VERBOSITY SEMISEMI RULE REQUIRE OPERATION OPEN MODULE MLTYPE LET INCLUDE EXTERNAL EXCEPTION EOF END ]
term_ -> app_term . COLONQT ty_term [ WITH VERBOSITY SEMISEMI RULE REQUIRE OPERATION OPEN MODULE MLTYPE LET INCLUDE EXTERNAL EXCEPTION EOF END ]
term_ -> app_term . COLON ty_term [ WITH VERBOSITY SEMISEMI RULE REQUIRE OPERATION OPEN MODULE MLTYPE LET INCLUDE EXTERNAL EXCEPTION EOF END ]
-- On EQEQ shift to state 547
-- On COLONQT shift to state 366
-- On COLONEQ shift to state 191
-- On COLON shift to state 368

State 547:
binop_term_ -> app_term EQEQ . app_term BY app_term [ WITH VERBOSITY STAR SEMISEMI SEMI RULE REQUIRE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE EXTERNAL EXCEPTION EQ EOF END ]
binop_term_ -> app_term EQEQ . app_term COLON app_term BY app_term [ WITH VERBOSITY STAR SEMISEMI SEMI RULE REQUIRE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE EXTERNAL EXCEPTION EQ EOF END ]
binop_term_ -> app_term EQEQ . app_term BY QQMARK [ WITH VERBOSITY STAR SEMISEMI SEMI RULE REQUIRE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE EXTERNAL EXCEPTION EQ EOF END ]
binop_term_ -> app_term EQEQ . app_term COLON app_term BY QQMARK [ WITH VERBOSITY STAR SEMISEMI SEMI RULE REQUIRE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE EXTERNAL EXCEPTION EQ EOF END ]
rule_ -> tt_name list(premise) COLON app_term EQEQ . ty_term [ WITH VERBOSITY SEMISEMI RULE REQUIRE OPERATION OPEN MODULE MLTYPE LET INCLUDE EXTERNAL EXCEPTION EOF END ]
rule_ -> tt_name list(premise) COLON app_term EQEQ . app_term COLON term [ WITH VERBOSITY SEMISEMI RULE REQUIRE OPERATION OPEN MODULE MLTYPE LET INCLUDE EXTERNAL EXCEPTION EOF END ]
-- On REF shift to state 4
-- On RAISE shift to state 12
-- On QUOTED_STRING shift to state 5
-- On QQMARK shift to state 15
-- On PREFIXOP shift to state 6
-- On OCCURS shift to state 18
-- On NATURAL shift to state 7
-- On NAME shift to state 8
-- On LPAREN shift to state 9
-- On LBRACK shift to state 13
-- On LBRACE shift to state 156
-- On CONVERT shift to state 130
-- On CONTEXT shift to state 136
-- On CONGRUENCE shift to state 138
-- On BANG shift to state 19
-- On ABSTRACT shift to state 144
-- On ty_term_ shift to state 164
-- On ty_term shift to state 548
-- On tt_name shift to state 20
-- On substitution_term_ shift to state 147
-- On substitution_term shift to state 148
-- On simple_term_ shift to state 21
-- On prefix_term_ shift to state 134
-- On nonempty_list(maybe_typed_binder) shift to state 167
-- On module_path shift to state 24
-- On module_name shift to state 45
-- On maybe_typed_binder shift to state 168
-- On mark_location(ty_term_) shift to state 170
-- On mark_location(substitution_term_) shift to state 135
-- On mark_location(binop_term_) shift to state 171
-- On mark_location(app_term_) shift to state 152
-- On binop_term_ shift to state 172
-- On binop_term shift to state 173
-- On app_term_ shift to state 481
-- On app_term shift to state 549
-- On any_name shift to state 47
-- On abstraction shift to state 205

State 548:
rule_ -> tt_name list(premise) COLON app_term EQEQ ty_term . [ WITH VERBOSITY SEMISEMI RULE REQUIRE OPERATION OPEN MODULE MLTYPE LET INCLUDE EXTERNAL EXCEPTION EOF END ]
-- On WITH reduce production rule_ -> tt_name list(premise) COLON app_term EQEQ ty_term
-- On VERBOSITY reduce production rule_ -> tt_name list(premise) COLON app_term EQEQ ty_term
-- On SEMISEMI reduce production rule_ -> tt_name list(premise) COLON app_term EQEQ ty_term
-- On RULE reduce production rule_ -> tt_name list(premise) COLON app_term EQEQ ty_term
-- On REQUIRE reduce production rule_ -> tt_name list(premise) COLON app_term EQEQ ty_term
-- On OPERATION reduce production rule_ -> tt_name list(premise) COLON app_term EQEQ ty_term
-- On OPEN reduce production rule_ -> tt_name list(premise) COLON app_term EQEQ ty_term
-- On MODULE reduce production rule_ -> tt_name list(premise) COLON app_term EQEQ ty_term
-- On MLTYPE reduce production rule_ -> tt_name list(premise) COLON app_term EQEQ ty_term
-- On LET reduce production rule_ -> tt_name list(premise) COLON app_term EQEQ ty_term
-- On INCLUDE reduce production rule_ -> tt_name list(premise) COLON app_term EQEQ ty_term
-- On EXTERNAL reduce production rule_ -> tt_name list(premise) COLON app_term EQEQ ty_term
-- On EXCEPTION reduce production rule_ -> tt_name list(premise) COLON app_term EQEQ ty_term
-- On EOF reduce production rule_ -> tt_name list(premise) COLON app_term EQEQ ty_term
-- On END reduce production rule_ -> tt_name list(premise) COLON app_term EQEQ ty_term

State 549:
binop_term_ -> app_term . COLONEQ binop_term [ WITH VERBOSITY STAR SEMISEMI RULE REQUIRE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE EXTERNAL EXCEPTION EQ EOF END ]
binop_term_ -> app_term . EQEQ app_term BY app_term [ WITH VERBOSITY STAR SEMISEMI RULE REQUIRE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE EXTERNAL EXCEPTION EQ EOF END ]
binop_term_ -> app_term EQEQ app_term . BY app_term [ WITH VERBOSITY STAR SEMISEMI SEMI RULE REQUIRE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE EXTERNAL EXCEPTION EQ EOF END ]
binop_term_ -> app_term . EQEQ app_term COLON app_term BY app_term [ WITH VERBOSITY STAR SEMISEMI RULE REQUIRE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE EXTERNAL EXCEPTION EQ EOF END ]
binop_term_ -> app_term EQEQ app_term . COLON app_term BY app_term [ WITH VERBOSITY STAR SEMISEMI SEMI RULE REQUIRE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE EXTERNAL EXCEPTION EQ EOF END ]
binop_term_ -> app_term . EQEQ app_term BY QQMARK [ WITH VERBOSITY STAR SEMISEMI RULE REQUIRE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE EXTERNAL EXCEPTION EQ EOF END ]
binop_term_ -> app_term EQEQ app_term . BY QQMARK [ WITH VERBOSITY STAR SEMISEMI SEMI RULE REQUIRE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE EXTERNAL EXCEPTION EQ EOF END ]
binop_term_ -> app_term . EQEQ app_term COLON app_term BY QQMARK [ WITH VERBOSITY STAR SEMISEMI RULE REQUIRE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE EXTERNAL EXCEPTION EQ EOF END ]
binop_term_ -> app_term EQEQ app_term . COLON app_term BY QQMARK [ WITH VERBOSITY STAR SEMISEMI SEMI RULE REQUIRE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE EXTERNAL EXCEPTION EQ EOF END ]
rule_ -> tt_name list(premise) COLON app_term EQEQ app_term . COLON term [ WITH VERBOSITY SEMISEMI RULE REQUIRE OPERATION OPEN MODULE MLTYPE LET INCLUDE EXTERNAL EXCEPTION EOF END ]
-- On EQEQ shift to state 181
-- On COLONEQ shift to state 191
-- On COLON shift to state 550
-- On BY shift to state 188

State 550:
binop_term_ -> app_term EQEQ app_term COLON . app_term BY app_term [ WITH VERBOSITY STAR SEMISEMI SEMI RULE REQUIRE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE EXTERNAL EXCEPTION EQ EOF END ]
binop_term_ -> app_term EQEQ app_term COLON . app_term BY QQMARK [ WITH VERBOSITY STAR SEMISEMI SEMI RULE REQUIRE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE EXTERNAL EXCEPTION EQ EOF END ]
rule_ -> tt_name list(premise) COLON app_term EQEQ app_term COLON . term [ WITH VERBOSITY SEMISEMI RULE REQUIRE OPERATION OPEN MODULE MLTYPE LET INCLUDE EXTERNAL EXCEPTION EOF END ]
-- On WITH shift to state 2
-- On TRY shift to state 3
-- On REF shift to state 4
-- On RAISE shift to state 12
-- On QUOTED_STRING shift to state 5
-- On QQMARK shift to state 15
-- On PREFIXOP shift to state 6
-- On OCCURS shift to state 18
-- On NATURAL shift to state 7
-- On NAME shift to state 8
-- On MATCH shift to state 51
-- On LPAREN shift to state 9
-- On LET shift to state 52
-- On LBRACK shift to state 13
-- On LBRACE shift to state 156
-- On HANDLER shift to state 209
-- On FUN shift to state 330
-- On FRESH shift to state 338
-- On DERIVE shift to state 342
-- On CONVERT shift to state 130
-- On CONTEXT shift to state 136
-- On CONGRUENCE shift to state 138
-- On BANG shift to state 19
-- On ABSTRACT shift to state 144
-- On ty_term_ shift to state 357
-- On tt_name shift to state 20
-- On term_ shift to state 358
-- On term shift to state 551
-- On substitution_term_ shift to state 147
-- On substitution_term shift to state 148
-- On simple_term_ shift to state 21
-- On prefix_term_ shift to state 134
-- On nonempty_list(maybe_typed_binder) shift to state 167
-- On module_path shift to state 24
-- On module_name shift to state 45
-- On maybe_typed_binder shift to state 168
-- On mark_location(term_) shift to state 361
-- On mark_location(substitution_term_) shift to state 135
-- On mark_location(binop_term_) shift to state 171
-- On mark_location(app_term_) shift to state 152
-- On binop_term_ shift to state 172
-- On binop_term shift to state 362
-- On app_term_ shift to state 481
-- On app_term shift to state 552
-- On any_name shift to state 47
-- On abstraction shift to state 205

State 551:
rule_ -> tt_name list(premise) COLON app_term EQEQ app_term COLON term . [ WITH VERBOSITY SEMISEMI RULE REQUIRE OPERATION OPEN MODULE MLTYPE LET INCLUDE EXTERNAL EXCEPTION EOF END ]
-- On WITH reduce production rule_ -> tt_name list(premise) COLON app_term EQEQ app_term COLON term
-- On VERBOSITY reduce production rule_ -> tt_name list(premise) COLON app_term EQEQ app_term COLON term
-- On SEMISEMI reduce production rule_ -> tt_name list(premise) COLON app_term EQEQ app_term COLON term
-- On RULE reduce production rule_ -> tt_name list(premise) COLON app_term EQEQ app_term COLON term
-- On REQUIRE reduce production rule_ -> tt_name list(premise) COLON app_term EQEQ app_term COLON term
-- On OPERATION reduce production rule_ -> tt_name list(premise) COLON app_term EQEQ app_term COLON term
-- On OPEN reduce production rule_ -> tt_name list(premise) COLON app_term EQEQ app_term COLON term
-- On MODULE reduce production rule_ -> tt_name list(premise) COLON app_term EQEQ app_term COLON term
-- On MLTYPE reduce production rule_ -> tt_name list(premise) COLON app_term EQEQ app_term COLON term
-- On LET reduce production rule_ -> tt_name list(premise) COLON app_term EQEQ app_term COLON term
-- On INCLUDE reduce production rule_ -> tt_name list(premise) COLON app_term EQEQ app_term COLON term
-- On EXTERNAL reduce production rule_ -> tt_name list(premise) COLON app_term EQEQ app_term COLON term
-- On EXCEPTION reduce production rule_ -> tt_name list(premise) COLON app_term EQEQ app_term COLON term
-- On EOF reduce production rule_ -> tt_name list(premise) COLON app_term EQEQ app_term COLON term
-- On END reduce production rule_ -> tt_name list(premise) COLON app_term EQEQ app_term COLON term

State 552:
binop_term_ -> app_term . COLONEQ binop_term [ WITH VERBOSITY STAR SEMISEMI SEMI RULE REQUIRE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE EXTERNAL EXCEPTION EQ EOF END ]
binop_term_ -> app_term . EQEQ app_term BY app_term [ WITH VERBOSITY STAR SEMISEMI SEMI RULE REQUIRE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE EXTERNAL EXCEPTION EQ EOF END ]
binop_term_ -> app_term . EQEQ app_term COLON app_term BY app_term [ WITH VERBOSITY STAR SEMISEMI SEMI RULE REQUIRE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE EXTERNAL EXCEPTION EQ EOF END ]
binop_term_ -> app_term EQEQ app_term COLON app_term . BY app_term [ WITH VERBOSITY STAR SEMISEMI SEMI RULE REQUIRE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE EXTERNAL EXCEPTION EQ EOF END ]
binop_term_ -> app_term . EQEQ app_term BY QQMARK [ WITH VERBOSITY STAR SEMISEMI SEMI RULE REQUIRE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE EXTERNAL EXCEPTION EQ EOF END ]
binop_term_ -> app_term . EQEQ app_term COLON app_term BY QQMARK [ WITH VERBOSITY STAR SEMISEMI SEMI RULE REQUIRE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE EXTERNAL EXCEPTION EQ EOF END ]
binop_term_ -> app_term EQEQ app_term COLON app_term . BY QQMARK [ WITH VERBOSITY STAR SEMISEMI SEMI RULE REQUIRE OPERATION OPEN MODULE MLTYPE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INFIXCONS INCLUDE EXTERNAL EXCEPTION EQ EOF END ]
term_ -> app_term . COLONQT ty_term [ WITH VERBOSITY SEMISEMI RULE REQUIRE OPERATION OPEN MODULE MLTYPE LET INCLUDE EXTERNAL EXCEPTION EOF END ]
term_ -> app_term . COLON ty_term [ WITH VERBOSITY SEMISEMI RULE REQUIRE OPERATION OPEN MODULE MLTYPE LET INCLUDE EXTERNAL EXCEPTION EOF END ]
-- On EQEQ shift to state 181
-- On COLONQT shift to state 366
-- On COLONEQ shift to state 191
-- On COLON shift to state 368
-- On BY shift to state 185

State 553:
top_command_ -> RULE rule_ . [ WITH VERBOSITY SEMISEMI RULE REQUIRE OPERATION OPEN MODULE MLTYPE LET INCLUDE EXTERNAL EXCEPTION EOF END ]
-- On WITH reduce production top_command_ -> RULE rule_
-- On VERBOSITY reduce production top_command_ -> RULE rule_
-- On SEMISEMI reduce production top_command_ -> RULE rule_
-- On RULE reduce production top_command_ -> RULE rule_
-- On REQUIRE reduce production top_command_ -> RULE rule_
-- On OPERATION reduce production top_command_ -> RULE rule_
-- On OPEN reduce production top_command_ -> RULE rule_
-- On MODULE reduce production top_command_ -> RULE rule_
-- On MLTYPE reduce production top_command_ -> RULE rule_
-- On LET reduce production top_command_ -> RULE rule_
-- On INCLUDE reduce production top_command_ -> RULE rule_
-- On EXTERNAL reduce production top_command_ -> RULE rule_
-- On EXCEPTION reduce production top_command_ -> RULE rule_
-- On EOF reduce production top_command_ -> RULE rule_
-- On END reduce production top_command_ -> RULE rule_

State 554:
top_command_ -> REQUIRE . separated_nonempty_list(COMMA,module_name) [ WITH VERBOSITY SEMISEMI RULE REQUIRE OPERATION OPEN MODULE MLTYPE LET INCLUDE EXTERNAL EXCEPTION EOF END ]
-- On NAME shift to state 555
-- On separated_nonempty_list(COMMA,module_name) shift to state 556
-- On module_name shift to state 557

State 555:
module_name -> NAME . [ WITH VERBOSITY SEMISEMI RULE REQUIRE PERIOD OPERATION OPEN MODULE MLTYPE LET INCLUDE EXTERNAL EXCEPTION EQ EOF END COMMA ]
-- On WITH reduce production module_name -> NAME
-- On VERBOSITY reduce production module_name -> NAME
-- On SEMISEMI reduce production module_name -> NAME
-- On RULE reduce production module_name -> NAME
-- On REQUIRE reduce production module_name -> NAME
-- On PERIOD reduce production module_name -> NAME
-- On OPERATION reduce production module_name -> NAME
-- On OPEN reduce production module_name -> NAME
-- On MODULE reduce production module_name -> NAME
-- On MLTYPE reduce production module_name -> NAME
-- On LET reduce production module_name -> NAME
-- On INCLUDE reduce production module_name -> NAME
-- On EXTERNAL reduce production module_name -> NAME
-- On EXCEPTION reduce production module_name -> NAME
-- On EQ reduce production module_name -> NAME
-- On EOF reduce production module_name -> NAME
-- On END reduce production module_name -> NAME
-- On COMMA reduce production module_name -> NAME

State 556:
top_command_ -> REQUIRE separated_nonempty_list(COMMA,module_name) . [ WITH VERBOSITY SEMISEMI RULE REQUIRE OPERATION OPEN MODULE MLTYPE LET INCLUDE EXTERNAL EXCEPTION EOF END ]
-- On WITH reduce production top_command_ -> REQUIRE separated_nonempty_list(COMMA,module_name)
-- On VERBOSITY reduce production top_command_ -> REQUIRE separated_nonempty_list(COMMA,module_name)
-- On SEMISEMI reduce production top_command_ -> REQUIRE separated_nonempty_list(COMMA,module_name)
-- On RULE reduce production top_command_ -> REQUIRE separated_nonempty_list(COMMA,module_name)
-- On REQUIRE reduce production top_command_ -> REQUIRE separated_nonempty_list(COMMA,module_name)
-- On OPERATION reduce production top_command_ -> REQUIRE separated_nonempty_list(COMMA,module_name)
-- On OPEN reduce production top_command_ -> REQUIRE separated_nonempty_list(COMMA,module_name)
-- On MODULE reduce production top_command_ -> REQUIRE separated_nonempty_list(COMMA,module_name)
-- On MLTYPE reduce production top_command_ -> REQUIRE separated_nonempty_list(COMMA,module_name)
-- On LET reduce production top_command_ -> REQUIRE separated_nonempty_list(COMMA,module_name)
-- On INCLUDE reduce production top_command_ -> REQUIRE separated_nonempty_list(COMMA,module_name)
-- On EXTERNAL reduce production top_command_ -> REQUIRE separated_nonempty_list(COMMA,module_name)
-- On EXCEPTION reduce production top_command_ -> REQUIRE separated_nonempty_list(COMMA,module_name)
-- On EOF reduce production top_command_ -> REQUIRE separated_nonempty_list(COMMA,module_name)
-- On END reduce production top_command_ -> REQUIRE separated_nonempty_list(COMMA,module_name)

State 557:
separated_nonempty_list(COMMA,module_name) -> module_name . [ WITH VERBOSITY SEMISEMI RULE REQUIRE OPERATION OPEN MODULE MLTYPE LET INCLUDE EXTERNAL EXCEPTION EOF END ]
separated_nonempty_list(COMMA,module_name) -> module_name . COMMA separated_nonempty_list(COMMA,module_name) [ WITH VERBOSITY SEMISEMI RULE REQUIRE OPERATION OPEN MODULE MLTYPE LET INCLUDE EXTERNAL EXCEPTION EOF END ]
-- On COMMA shift to state 558
-- On WITH reduce production separated_nonempty_list(COMMA,module_name) -> module_name
-- On VERBOSITY reduce production separated_nonempty_list(COMMA,module_name) -> module_name
-- On SEMISEMI reduce production separated_nonempty_list(COMMA,module_name) -> module_name
-- On RULE reduce production separated_nonempty_list(COMMA,module_name) -> module_name
-- On REQUIRE reduce production separated_nonempty_list(COMMA,module_name) -> module_name
-- On OPERATION reduce production separated_nonempty_list(COMMA,module_name) -> module_name
-- On OPEN reduce production separated_nonempty_list(COMMA,module_name) -> module_name
-- On MODULE reduce production separated_nonempty_list(COMMA,module_name) -> module_name
-- On MLTYPE reduce production separated_nonempty_list(COMMA,module_name) -> module_name
-- On LET reduce production separated_nonempty_list(COMMA,module_name) -> module_name
-- On INCLUDE reduce production separated_nonempty_list(COMMA,module_name) -> module_name
-- On EXTERNAL reduce production separated_nonempty_list(COMMA,module_name) -> module_name
-- On EXCEPTION reduce production separated_nonempty_list(COMMA,module_name) -> module_name
-- On EOF reduce production separated_nonempty_list(COMMA,module_name) -> module_name
-- On END reduce production separated_nonempty_list(COMMA,module_name) -> module_name

State 558:
separated_nonempty_list(COMMA,module_name) -> module_name COMMA . separated_nonempty_list(COMMA,module_name) [ WITH VERBOSITY SEMISEMI RULE REQUIRE OPERATION OPEN MODULE MLTYPE LET INCLUDE EXTERNAL EXCEPTION EOF END ]
-- On NAME shift to state 555
-- On separated_nonempty_list(COMMA,module_name) shift to state 559
-- On module_name shift to state 557

State 559:
separated_nonempty_list(COMMA,module_name) -> module_name COMMA separated_nonempty_list(COMMA,module_name) . [ WITH VERBOSITY SEMISEMI RULE REQUIRE OPERATION OPEN MODULE MLTYPE LET INCLUDE EXTERNAL EXCEPTION EOF END ]
-- On WITH reduce production separated_nonempty_list(COMMA,module_name) -> module_name COMMA separated_nonempty_list(COMMA,module_name)
-- On VERBOSITY reduce production separated_nonempty_list(COMMA,module_name) -> module_name COMMA separated_nonempty_list(COMMA,module_name)
-- On SEMISEMI reduce production separated_nonempty_list(COMMA,module_name) -> module_name COMMA separated_nonempty_list(COMMA,module_name)
-- On RULE reduce production separated_nonempty_list(COMMA,module_name) -> module_name COMMA separated_nonempty_list(COMMA,module_name)
-- On REQUIRE reduce production separated_nonempty_list(COMMA,module_name) -> module_name COMMA separated_nonempty_list(COMMA,module_name)
-- On OPERATION reduce production separated_nonempty_list(COMMA,module_name) -> module_name COMMA separated_nonempty_list(COMMA,module_name)
-- On OPEN reduce production separated_nonempty_list(COMMA,module_name) -> module_name COMMA separated_nonempty_list(COMMA,module_name)
-- On MODULE reduce production separated_nonempty_list(COMMA,module_name) -> module_name COMMA separated_nonempty_list(COMMA,module_name)
-- On MLTYPE reduce production separated_nonempty_list(COMMA,module_name) -> module_name COMMA separated_nonempty_list(COMMA,module_name)
-- On LET reduce production separated_nonempty_list(COMMA,module_name) -> module_name COMMA separated_nonempty_list(COMMA,module_name)
-- On INCLUDE reduce production separated_nonempty_list(COMMA,module_name) -> module_name COMMA separated_nonempty_list(COMMA,module_name)
-- On EXTERNAL reduce production separated_nonempty_list(COMMA,module_name) -> module_name COMMA separated_nonempty_list(COMMA,module_name)
-- On EXCEPTION reduce production separated_nonempty_list(COMMA,module_name) -> module_name COMMA separated_nonempty_list(COMMA,module_name)
-- On EOF reduce production separated_nonempty_list(COMMA,module_name) -> module_name COMMA separated_nonempty_list(COMMA,module_name)
-- On END reduce production separated_nonempty_list(COMMA,module_name) -> module_name COMMA separated_nonempty_list(COMMA,module_name)

State 560:
top_command_ -> OPERATION . op_name COLON op_mlsig [ WITH VERBOSITY SEMISEMI RULE REQUIRE OPERATION OPEN MODULE MLTYPE LET INCLUDE EXTERNAL EXCEPTION EOF END ]
-- On NAME shift to state 561
-- On op_name shift to state 562

State 561:
op_name -> NAME . [ COLON ]
-- On COLON reduce production op_name -> NAME

State 562:
top_command_ -> OPERATION op_name . COLON op_mlsig [ WITH VERBOSITY SEMISEMI RULE REQUIRE OPERATION OPEN MODULE MLTYPE LET INCLUDE EXTERNAL EXCEPTION EOF END ]
-- On COLON shift to state 563

State 563:
top_command_ -> OPERATION op_name COLON . op_mlsig [ WITH VERBOSITY SEMISEMI RULE REQUIRE OPERATION OPEN MODULE MLTYPE LET INCLUDE EXTERNAL EXCEPTION EOF END ]
-- On UNDERSCORE shift to state 55
-- On REF shift to state 56
-- On NAME shift to state 57
-- On MLUNIT shift to state 58
-- On MLSTRING shift to state 59
-- On MLJUDGEMENT shift to state 60
-- On MLDERIVATION shift to state 61
-- On MLBOUNDARY shift to state 62
-- On LPAREN shift to state 63
-- On simple_mlty_ shift to state 82
-- On separated_nonempty_list(STAR,app_mlty) shift to state 83
-- On separated_nonempty_list(ARROW,prod_mlty) shift to state 564
-- On prod_mlty_ shift to state 297
-- On prod_mlty shift to state 565
-- On op_mlsig shift to state 568
-- On module_path shift to state 87
-- On module_name shift to state 45
-- On ml_name shift to state 102
-- On mark_location(prod_mlty_) shift to state 104
-- On mark_location(app_mlty_) shift to state 106
-- On app_mlty_ shift to state 107
-- On app_mlty shift to state 108

State 564:
op_mlsig -> separated_nonempty_list(ARROW,prod_mlty) . [ WITH VERBOSITY SEMISEMI RULE REQUIRE OPERATION OPEN MODULE MLTYPE LET INCLUDE EXTERNAL EXCEPTION EOF END ]
-- On WITH reduce production op_mlsig -> separated_nonempty_list(ARROW,prod_mlty)
-- On VERBOSITY reduce production op_mlsig -> separated_nonempty_list(ARROW,prod_mlty)
-- On SEMISEMI reduce production op_mlsig -> separated_nonempty_list(ARROW,prod_mlty)
-- On RULE reduce production op_mlsig -> separated_nonempty_list(ARROW,prod_mlty)
-- On REQUIRE reduce production op_mlsig -> separated_nonempty_list(ARROW,prod_mlty)
-- On OPERATION reduce production op_mlsig -> separated_nonempty_list(ARROW,prod_mlty)
-- On OPEN reduce production op_mlsig -> separated_nonempty_list(ARROW,prod_mlty)
-- On MODULE reduce production op_mlsig -> separated_nonempty_list(ARROW,prod_mlty)
-- On MLTYPE reduce production op_mlsig -> separated_nonempty_list(ARROW,prod_mlty)
-- On LET reduce production op_mlsig -> separated_nonempty_list(ARROW,prod_mlty)
-- On INCLUDE reduce production op_mlsig -> separated_nonempty_list(ARROW,prod_mlty)
-- On EXTERNAL reduce production op_mlsig -> separated_nonempty_list(ARROW,prod_mlty)
-- On EXCEPTION reduce production op_mlsig -> separated_nonempty_list(ARROW,prod_mlty)
-- On EOF reduce production op_mlsig -> separated_nonempty_list(ARROW,prod_mlty)
-- On END reduce production op_mlsig -> separated_nonempty_list(ARROW,prod_mlty)

State 565:
separated_nonempty_list(ARROW,prod_mlty) -> prod_mlty . [ WITH VERBOSITY SEMISEMI RULE REQUIRE OPERATION OPEN MODULE MLTYPE LET INCLUDE EXTERNAL EXCEPTION EOF END ]
separated_nonempty_list(ARROW,prod_mlty) -> prod_mlty . ARROW separated_nonempty_list(ARROW,prod_mlty) [ WITH VERBOSITY SEMISEMI RULE REQUIRE OPERATION OPEN MODULE MLTYPE LET INCLUDE EXTERNAL EXCEPTION EOF END ]
-- On ARROW shift to state 566
-- On WITH reduce production separated_nonempty_list(ARROW,prod_mlty) -> prod_mlty
-- On VERBOSITY reduce production separated_nonempty_list(ARROW,prod_mlty) -> prod_mlty
-- On SEMISEMI reduce production separated_nonempty_list(ARROW,prod_mlty) -> prod_mlty
-- On RULE reduce production separated_nonempty_list(ARROW,prod_mlty) -> prod_mlty
-- On REQUIRE reduce production separated_nonempty_list(ARROW,prod_mlty) -> prod_mlty
-- On OPERATION reduce production separated_nonempty_list(ARROW,prod_mlty) -> prod_mlty
-- On OPEN reduce production separated_nonempty_list(ARROW,prod_mlty) -> prod_mlty
-- On MODULE reduce production separated_nonempty_list(ARROW,prod_mlty) -> prod_mlty
-- On MLTYPE reduce production separated_nonempty_list(ARROW,prod_mlty) -> prod_mlty
-- On LET reduce production separated_nonempty_list(ARROW,prod_mlty) -> prod_mlty
-- On INCLUDE reduce production separated_nonempty_list(ARROW,prod_mlty) -> prod_mlty
-- On EXTERNAL reduce production separated_nonempty_list(ARROW,prod_mlty) -> prod_mlty
-- On EXCEPTION reduce production separated_nonempty_list(ARROW,prod_mlty) -> prod_mlty
-- On EOF reduce production separated_nonempty_list(ARROW,prod_mlty) -> prod_mlty
-- On END reduce production separated_nonempty_list(ARROW,prod_mlty) -> prod_mlty

State 566:
separated_nonempty_list(ARROW,prod_mlty) -> prod_mlty ARROW . separated_nonempty_list(ARROW,prod_mlty) [ WITH VERBOSITY SEMISEMI RULE REQUIRE OPERATION OPEN MODULE MLTYPE LET INCLUDE EXTERNAL EXCEPTION EOF END ]
-- On UNDERSCORE shift to state 55
-- On REF shift to state 56
-- On NAME shift to state 57
-- On MLUNIT shift to state 58
-- On MLSTRING shift to state 59
-- On MLJUDGEMENT shift to state 60
-- On MLDERIVATION shift to state 61
-- On MLBOUNDARY shift to state 62
-- On LPAREN shift to state 63
-- On simple_mlty_ shift to state 82
-- On separated_nonempty_list(STAR,app_mlty) shift to state 83
-- On separated_nonempty_list(ARROW,prod_mlty) shift to state 567
-- On prod_mlty_ shift to state 297
-- On prod_mlty shift to state 565
-- On module_path shift to state 87
-- On module_name shift to state 45
-- On ml_name shift to state 102
-- On mark_location(prod_mlty_) shift to state 104
-- On mark_location(app_mlty_) shift to state 106
-- On app_mlty_ shift to state 107
-- On app_mlty shift to state 108

State 567:
separated_nonempty_list(ARROW,prod_mlty) -> prod_mlty ARROW separated_nonempty_list(ARROW,prod_mlty) . [ WITH VERBOSITY SEMISEMI RULE REQUIRE OPERATION OPEN MODULE MLTYPE LET INCLUDE EXTERNAL EXCEPTION EOF END ]
-- On WITH reduce production separated_nonempty_list(ARROW,prod_mlty) -> prod_mlty ARROW separated_nonempty_list(ARROW,prod_mlty)
-- On VERBOSITY reduce production separated_nonempty_list(ARROW,prod_mlty) -> prod_mlty ARROW separated_nonempty_list(ARROW,prod_mlty)
-- On SEMISEMI reduce production separated_nonempty_list(ARROW,prod_mlty) -> prod_mlty ARROW separated_nonempty_list(ARROW,prod_mlty)
-- On RULE reduce production separated_nonempty_list(ARROW,prod_mlty) -> prod_mlty ARROW separated_nonempty_list(ARROW,prod_mlty)
-- On REQUIRE reduce production separated_nonempty_list(ARROW,prod_mlty) -> prod_mlty ARROW separated_nonempty_list(ARROW,prod_mlty)
-- On OPERATION reduce production separated_nonempty_list(ARROW,prod_mlty) -> prod_mlty ARROW separated_nonempty_list(ARROW,prod_mlty)
-- On OPEN reduce production separated_nonempty_list(ARROW,prod_mlty) -> prod_mlty ARROW separated_nonempty_list(ARROW,prod_mlty)
-- On MODULE reduce production separated_nonempty_list(ARROW,prod_mlty) -> prod_mlty ARROW separated_nonempty_list(ARROW,prod_mlty)
-- On MLTYPE reduce production separated_nonempty_list(ARROW,prod_mlty) -> prod_mlty ARROW separated_nonempty_list(ARROW,prod_mlty)
-- On LET reduce production separated_nonempty_list(ARROW,prod_mlty) -> prod_mlty ARROW separated_nonempty_list(ARROW,prod_mlty)
-- On INCLUDE reduce production separated_nonempty_list(ARROW,prod_mlty) -> prod_mlty ARROW separated_nonempty_list(ARROW,prod_mlty)
-- On EXTERNAL reduce production separated_nonempty_list(ARROW,prod_mlty) -> prod_mlty ARROW separated_nonempty_list(ARROW,prod_mlty)
-- On EXCEPTION reduce production separated_nonempty_list(ARROW,prod_mlty) -> prod_mlty ARROW separated_nonempty_list(ARROW,prod_mlty)
-- On EOF reduce production separated_nonempty_list(ARROW,prod_mlty) -> prod_mlty ARROW separated_nonempty_list(ARROW,prod_mlty)
-- On END reduce production separated_nonempty_list(ARROW,prod_mlty) -> prod_mlty ARROW separated_nonempty_list(ARROW,prod_mlty)

State 568:
top_command_ -> OPERATION op_name COLON op_mlsig . [ WITH VERBOSITY SEMISEMI RULE REQUIRE OPERATION OPEN MODULE MLTYPE LET INCLUDE EXTERNAL EXCEPTION EOF END ]
-- On WITH reduce production top_command_ -> OPERATION op_name COLON op_mlsig
-- On VERBOSITY reduce production top_command_ -> OPERATION op_name COLON op_mlsig
-- On SEMISEMI reduce production top_command_ -> OPERATION op_name COLON op_mlsig
-- On RULE reduce production top_command_ -> OPERATION op_name COLON op_mlsig
-- On REQUIRE reduce production top_command_ -> OPERATION op_name COLON op_mlsig
-- On OPERATION reduce production top_command_ -> OPERATION op_name COLON op_mlsig
-- On OPEN reduce production top_command_ -> OPERATION op_name COLON op_mlsig
-- On MODULE reduce production top_command_ -> OPERATION op_name COLON op_mlsig
-- On MLTYPE reduce production top_command_ -> OPERATION op_name COLON op_mlsig
-- On LET reduce production top_command_ -> OPERATION op_name COLON op_mlsig
-- On INCLUDE reduce production top_command_ -> OPERATION op_name COLON op_mlsig
-- On EXTERNAL reduce production top_command_ -> OPERATION op_name COLON op_mlsig
-- On EXCEPTION reduce production top_command_ -> OPERATION op_name COLON op_mlsig
-- On EOF reduce production top_command_ -> OPERATION op_name COLON op_mlsig
-- On END reduce production top_command_ -> OPERATION op_name COLON op_mlsig

State 569:
top_command_ -> OPEN . module_name [ WITH VERBOSITY SEMISEMI RULE REQUIRE OPERATION OPEN MODULE MLTYPE LET INCLUDE EXTERNAL EXCEPTION EOF END ]
top_command_ -> OPEN . module_path PERIOD module_name [ WITH VERBOSITY SEMISEMI RULE REQUIRE OPERATION OPEN MODULE MLTYPE LET INCLUDE EXTERNAL EXCEPTION EOF END ]
-- On NAME shift to state 555
-- On module_path shift to state 570
-- On module_name shift to state 573

State 570:
module_path -> module_path . PERIOD module_name [ PERIOD ]
top_command_ -> OPEN module_path . PERIOD module_name [ WITH VERBOSITY SEMISEMI RULE REQUIRE OPERATION OPEN MODULE MLTYPE LET INCLUDE EXTERNAL EXCEPTION EOF END ]
-- On PERIOD shift to state 571

State 571:
module_path -> module_path PERIOD . module_name [ PERIOD ]
top_command_ -> OPEN module_path PERIOD . module_name [ WITH VERBOSITY SEMISEMI RULE REQUIRE OPERATION OPEN MODULE MLTYPE LET INCLUDE EXTERNAL EXCEPTION EOF END ]
-- On NAME shift to state 555
-- On module_name shift to state 572

State 572:
module_path -> module_path PERIOD module_name . [ PERIOD ]
top_command_ -> OPEN module_path PERIOD module_name . [ WITH VERBOSITY SEMISEMI RULE REQUIRE OPERATION OPEN MODULE MLTYPE LET INCLUDE EXTERNAL EXCEPTION EOF END ]
-- On WITH reduce production top_command_ -> OPEN module_path PERIOD module_name
-- On VERBOSITY reduce production top_command_ -> OPEN module_path PERIOD module_name
-- On SEMISEMI reduce production top_command_ -> OPEN module_path PERIOD module_name
-- On RULE reduce production top_command_ -> OPEN module_path PERIOD module_name
-- On REQUIRE reduce production top_command_ -> OPEN module_path PERIOD module_name
-- On PERIOD reduce production module_path -> module_path PERIOD module_name
-- On OPERATION reduce production top_command_ -> OPEN module_path PERIOD module_name
-- On OPEN reduce production top_command_ -> OPEN module_path PERIOD module_name
-- On MODULE reduce production top_command_ -> OPEN module_path PERIOD module_name
-- On MLTYPE reduce production top_command_ -> OPEN module_path PERIOD module_name
-- On LET reduce production top_command_ -> OPEN module_path PERIOD module_name
-- On INCLUDE reduce production top_command_ -> OPEN module_path PERIOD module_name
-- On EXTERNAL reduce production top_command_ -> OPEN module_path PERIOD module_name
-- On EXCEPTION reduce production top_command_ -> OPEN module_path PERIOD module_name
-- On EOF reduce production top_command_ -> OPEN module_path PERIOD module_name
-- On END reduce production top_command_ -> OPEN module_path PERIOD module_name

State 573:
module_path -> module_name . [ PERIOD ]
top_command_ -> OPEN module_name . [ WITH VERBOSITY SEMISEMI RULE REQUIRE OPERATION OPEN MODULE MLTYPE LET INCLUDE EXTERNAL EXCEPTION EOF END ]
-- On WITH reduce production top_command_ -> OPEN module_name
-- On VERBOSITY reduce production top_command_ -> OPEN module_name
-- On SEMISEMI reduce production top_command_ -> OPEN module_name
-- On RULE reduce production top_command_ -> OPEN module_name
-- On REQUIRE reduce production top_command_ -> OPEN module_name
-- On PERIOD reduce production module_path -> module_name
-- On OPERATION reduce production top_command_ -> OPEN module_name
-- On OPEN reduce production top_command_ -> OPEN module_name
-- On MODULE reduce production top_command_ -> OPEN module_name
-- On MLTYPE reduce production top_command_ -> OPEN module_name
-- On LET reduce production top_command_ -> OPEN module_name
-- On INCLUDE reduce production top_command_ -> OPEN module_name
-- On EXTERNAL reduce production top_command_ -> OPEN module_name
-- On EXCEPTION reduce production top_command_ -> OPEN module_name
-- On EOF reduce production top_command_ -> OPEN module_name
-- On END reduce production top_command_ -> OPEN module_name

State 574:
top_command_ -> MODULE . module_name EQ STRUCT ml_module END [ WITH VERBOSITY SEMISEMI RULE REQUIRE OPERATION OPEN MODULE MLTYPE LET INCLUDE EXTERNAL EXCEPTION EOF END ]
-- On NAME shift to state 555
-- On module_name shift to state 575

State 575:
top_command_ -> MODULE module_name . EQ STRUCT ml_module END [ WITH VERBOSITY SEMISEMI RULE REQUIRE OPERATION OPEN MODULE MLTYPE LET INCLUDE EXTERNAL EXCEPTION EOF END ]
-- On EQ shift to state 576

State 576:
top_command_ -> MODULE module_name EQ . STRUCT ml_module END [ WITH VERBOSITY SEMISEMI RULE REQUIRE OPERATION OPEN MODULE MLTYPE LET INCLUDE EXTERNAL EXCEPTION EOF END ]
-- On STRUCT shift to state 577

State 577:
top_command_ -> MODULE module_name EQ STRUCT . ml_module END [ WITH VERBOSITY SEMISEMI RULE REQUIRE OPERATION OPEN MODULE MLTYPE LET INCLUDE EXTERNAL EXCEPTION EOF END ]
-- On WITH shift to state 1
-- On VERBOSITY shift to state 536
-- On TRY shift to state 3
-- On RULE shift to state 538
-- On REQUIRE shift to state 554
-- On REF shift to state 4
-- On RAISE shift to state 12
-- On QUOTED_STRING shift to state 5
-- On QQMARK shift to state 15
-- On PREFIXOP shift to state 6
-- On OPERATION shift to state 560
-- On OPEN shift to state 569
-- On OCCURS shift to state 18
-- On NATURAL shift to state 7
-- On NAME shift to state 8
-- On MODULE shift to state 574
-- On MLTYPE shift to state 578
-- On MATCH shift to state 51
-- On LPAREN shift to state 9
-- On LET shift to state 647
-- On LBRACK shift to state 13
-- On LBRACE shift to state 156
-- On INCLUDE shift to state 651
-- On HANDLER shift to state 209
-- On FUN shift to state 330
-- On FRESH shift to state 338
-- On EXTERNAL shift to state 656
-- On EXCEPTION shift to state 662
-- On DERIVE shift to state 342
-- On CONVERT shift to state 130
-- On CONTEXT shift to state 136
-- On CONGRUENCE shift to state 138
-- On BANG shift to state 19
-- On ABSTRACT shift to state 144
-- On ty_term_ shift to state 357
-- On tt_name shift to state 20
-- On top_term_ shift to state 667
-- On top_term shift to state 668
-- On top_command_ shift to state 670
-- On top_command shift to state 671
-- On term_ shift to state 358
-- On term shift to state 674
-- On substitution_term_ shift to state 147
-- On substitution_term shift to state 148
-- On simple_term_ shift to state 21
-- On prefix_term_ shift to state 134
-- On nonempty_list(maybe_typed_binder) shift to state 167
-- On module_path shift to state 24
-- On module_name shift to state 45
-- On ml_module shift to state 688
-- On maybe_typed_binder shift to state 168
-- On mark_location(top_term_) shift to state 676
-- On mark_location(top_command_) shift to state 677
-- On mark_location(term_) shift to state 361
-- On mark_location(substitution_term_) shift to state 135
-- On mark_location(binop_term_) shift to state 171
-- On mark_location(app_term_) shift to state 152
-- On binop_term_ shift to state 172
-- On binop_term shift to state 362
-- On app_term_ shift to state 481
-- On app_term shift to state 365
-- On any_name shift to state 47
-- On abstraction shift to state 205
-- On END reduce production ml_module ->

State 578:
top_command_ -> MLTYPE . ml_name list(opt_name(ml_name)) [ WITH VERBOSITY SEMISEMI RULE REQUIRE OPERATION OPEN MODULE MLTYPE LET INCLUDE EXTERNAL EXCEPTION EOF END ]
top_command_ -> MLTYPE . mlty_defs [ WITH VERBOSITY SEMISEMI RULE REQUIRE OPERATION OPEN MODULE MLTYPE LET INCLUDE EXTERNAL EXCEPTION EOF END ]
top_command_ -> MLTYPE . REC mlty_defs [ WITH VERBOSITY SEMISEMI RULE REQUIRE OPERATION OPEN MODULE MLTYPE LET INCLUDE EXTERNAL EXCEPTION EOF END ]
-- On REC shift to state 579
-- On NAME shift to state 118
-- On LPAREN shift to state 89
-- On separated_nonempty_list(AND,mlty_def) shift to state 580
-- On mlty_defs shift to state 644
-- On mlty_def shift to state 582
-- On ml_name shift to state 645

State 579:
top_command_ -> MLTYPE REC . mlty_defs [ WITH VERBOSITY SEMISEMI RULE REQUIRE OPERATION OPEN MODULE MLTYPE LET INCLUDE EXTERNAL EXCEPTION EOF END ]
-- On NAME shift to state 118
-- On LPAREN shift to state 89
-- On separated_nonempty_list(AND,mlty_def) shift to state 580
-- On mlty_defs shift to state 581
-- On mlty_def shift to state 582
-- On ml_name shift to state 585

State 580:
mlty_defs -> separated_nonempty_list(AND,mlty_def) . [ WITH VERBOSITY SEMISEMI RULE REQUIRE OPERATION OPEN MODULE MLTYPE LET INCLUDE EXTERNAL EXCEPTION EOF END ]
-- On WITH reduce production mlty_defs -> separated_nonempty_list(AND,mlty_def)
-- On VERBOSITY reduce production mlty_defs -> separated_nonempty_list(AND,mlty_def)
-- On SEMISEMI reduce production mlty_defs -> separated_nonempty_list(AND,mlty_def)
-- On RULE reduce production mlty_defs -> separated_nonempty_list(AND,mlty_def)
-- On REQUIRE reduce production mlty_defs -> separated_nonempty_list(AND,mlty_def)
-- On OPERATION reduce production mlty_defs -> separated_nonempty_list(AND,mlty_def)
-- On OPEN reduce production mlty_defs -> separated_nonempty_list(AND,mlty_def)
-- On MODULE reduce production mlty_defs -> separated_nonempty_list(AND,mlty_def)
-- On MLTYPE reduce production mlty_defs -> separated_nonempty_list(AND,mlty_def)
-- On LET reduce production mlty_defs -> separated_nonempty_list(AND,mlty_def)
-- On INCLUDE reduce production mlty_defs -> separated_nonempty_list(AND,mlty_def)
-- On EXTERNAL reduce production mlty_defs -> separated_nonempty_list(AND,mlty_def)
-- On EXCEPTION reduce production mlty_defs -> separated_nonempty_list(AND,mlty_def)
-- On EOF reduce production mlty_defs -> separated_nonempty_list(AND,mlty_def)
-- On END reduce production mlty_defs -> separated_nonempty_list(AND,mlty_def)

State 581:
top_command_ -> MLTYPE REC mlty_defs . [ WITH VERBOSITY SEMISEMI RULE REQUIRE OPERATION OPEN MODULE MLTYPE LET INCLUDE EXTERNAL EXCEPTION EOF END ]
-- On WITH reduce production top_command_ -> MLTYPE REC mlty_defs
-- On VERBOSITY reduce production top_command_ -> MLTYPE REC mlty_defs
-- On SEMISEMI reduce production top_command_ -> MLTYPE REC mlty_defs
-- On RULE reduce production top_command_ -> MLTYPE REC mlty_defs
-- On REQUIRE reduce production top_command_ -> MLTYPE REC mlty_defs
-- On OPERATION reduce production top_command_ -> MLTYPE REC mlty_defs
-- On OPEN reduce production top_command_ -> MLTYPE REC mlty_defs
-- On MODULE reduce production top_command_ -> MLTYPE REC mlty_defs
-- On MLTYPE reduce production top_command_ -> MLTYPE REC mlty_defs
-- On LET reduce production top_command_ -> MLTYPE REC mlty_defs
-- On INCLUDE reduce production top_command_ -> MLTYPE REC mlty_defs
-- On EXTERNAL reduce production top_command_ -> MLTYPE REC mlty_defs
-- On EXCEPTION reduce production top_command_ -> MLTYPE REC mlty_defs
-- On EOF reduce production top_command_ -> MLTYPE REC mlty_defs
-- On END reduce production top_command_ -> MLTYPE REC mlty_defs

State 582:
separated_nonempty_list(AND,mlty_def) -> mlty_def . [ WITH VERBOSITY SEMISEMI RULE REQUIRE OPERATION OPEN MODULE MLTYPE LET INCLUDE EXTERNAL EXCEPTION EOF END ]
separated_nonempty_list(AND,mlty_def) -> mlty_def . AND separated_nonempty_list(AND,mlty_def) [ WITH VERBOSITY SEMISEMI RULE REQUIRE OPERATION OPEN MODULE MLTYPE LET INCLUDE EXTERNAL EXCEPTION EOF END ]
-- On AND shift to state 583
-- On WITH reduce production separated_nonempty_list(AND,mlty_def) -> mlty_def
-- On VERBOSITY reduce production separated_nonempty_list(AND,mlty_def) -> mlty_def
-- On SEMISEMI reduce production separated_nonempty_list(AND,mlty_def) -> mlty_def
-- On RULE reduce production separated_nonempty_list(AND,mlty_def) -> mlty_def
-- On REQUIRE reduce production separated_nonempty_list(AND,mlty_def) -> mlty_def
-- On OPERATION reduce production separated_nonempty_list(AND,mlty_def) -> mlty_def
-- On OPEN reduce production separated_nonempty_list(AND,mlty_def) -> mlty_def
-- On MODULE reduce production separated_nonempty_list(AND,mlty_def) -> mlty_def
-- On MLTYPE reduce production separated_nonempty_list(AND,mlty_def) -> mlty_def
-- On LET reduce production separated_nonempty_list(AND,mlty_def) -> mlty_def
-- On INCLUDE reduce production separated_nonempty_list(AND,mlty_def) -> mlty_def
-- On EXTERNAL reduce production separated_nonempty_list(AND,mlty_def) -> mlty_def
-- On EXCEPTION reduce production separated_nonempty_list(AND,mlty_def) -> mlty_def
-- On EOF reduce production separated_nonempty_list(AND,mlty_def) -> mlty_def
-- On END reduce production separated_nonempty_list(AND,mlty_def) -> mlty_def

State 583:
separated_nonempty_list(AND,mlty_def) -> mlty_def AND . separated_nonempty_list(AND,mlty_def) [ WITH VERBOSITY SEMISEMI RULE REQUIRE OPERATION OPEN MODULE MLTYPE LET INCLUDE EXTERNAL EXCEPTION EOF END ]
-- On NAME shift to state 118
-- On LPAREN shift to state 89
-- On separated_nonempty_list(AND,mlty_def) shift to state 584
-- On mlty_def shift to state 582
-- On ml_name shift to state 585

State 584:
separated_nonempty_list(AND,mlty_def) -> mlty_def AND separated_nonempty_list(AND,mlty_def) . [ WITH VERBOSITY SEMISEMI RULE REQUIRE OPERATION OPEN MODULE MLTYPE LET INCLUDE EXTERNAL EXCEPTION EOF END ]
-- On WITH reduce production separated_nonempty_list(AND,mlty_def) -> mlty_def AND separated_nonempty_list(AND,mlty_def)
-- On VERBOSITY reduce production separated_nonempty_list(AND,mlty_def) -> mlty_def AND separated_nonempty_list(AND,mlty_def)
-- On SEMISEMI reduce production separated_nonempty_list(AND,mlty_def) -> mlty_def AND separated_nonempty_list(AND,mlty_def)
-- On RULE reduce production separated_nonempty_list(AND,mlty_def) -> mlty_def AND separated_nonempty_list(AND,mlty_def)
-- On REQUIRE reduce production separated_nonempty_list(AND,mlty_def) -> mlty_def AND separated_nonempty_list(AND,mlty_def)
-- On OPERATION reduce production separated_nonempty_list(AND,mlty_def) -> mlty_def AND separated_nonempty_list(AND,mlty_def)
-- On OPEN reduce production separated_nonempty_list(AND,mlty_def) -> mlty_def AND separated_nonempty_list(AND,mlty_def)
-- On MODULE reduce production separated_nonempty_list(AND,mlty_def) -> mlty_def AND separated_nonempty_list(AND,mlty_def)
-- On MLTYPE reduce production separated_nonempty_list(AND,mlty_def) -> mlty_def AND separated_nonempty_list(AND,mlty_def)
-- On LET reduce production separated_nonempty_list(AND,mlty_def) -> mlty_def AND separated_nonempty_list(AND,mlty_def)
-- On INCLUDE reduce production separated_nonempty_list(AND,mlty_def) -> mlty_def AND separated_nonempty_list(AND,mlty_def)
-- On EXTERNAL reduce production separated_nonempty_list(AND,mlty_def) -> mlty_def AND separated_nonempty_list(AND,mlty_def)
-- On EXCEPTION reduce production separated_nonempty_list(AND,mlty_def) -> mlty_def AND separated_nonempty_list(AND,mlty_def)
-- On EOF reduce production separated_nonempty_list(AND,mlty_def) -> mlty_def AND separated_nonempty_list(AND,mlty_def)
-- On END reduce production separated_nonempty_list(AND,mlty_def) -> mlty_def AND separated_nonempty_list(AND,mlty_def)

State 585:
mlty_def -> ml_name . list(opt_name(ml_name)) EQ mlty_def_body [ WITH VERBOSITY SEMISEMI RULE REQUIRE OPERATION OPEN MODULE MLTYPE LET INCLUDE EXTERNAL EXCEPTION EOF END AND ]
-- On UNDERSCORE shift to state 117
-- On NAME shift to state 118
-- On LPAREN shift to state 89
-- On opt_name(ml_name) shift to state 586
-- On ml_name shift to state 121
-- On list(opt_name(ml_name)) shift to state 588
-- On EQ reduce production list(opt_name(ml_name)) ->

State 586:
list(opt_name(ml_name)) -> opt_name(ml_name) . list(opt_name(ml_name)) [ WITH VERBOSITY SEMISEMI RULE REQUIRE OPERATION OPEN MODULE MLTYPE LET INCLUDE EXTERNAL EXCEPTION EQ EOF END ]
-- On UNDERSCORE shift to state 117
-- On NAME shift to state 118
-- On LPAREN shift to state 89
-- On opt_name(ml_name) shift to state 586
-- On ml_name shift to state 121
-- On list(opt_name(ml_name)) shift to state 587
-- On WITH reduce production list(opt_name(ml_name)) ->
-- On VERBOSITY reduce production list(opt_name(ml_name)) ->
-- On SEMISEMI reduce production list(opt_name(ml_name)) ->
-- On RULE reduce production list(opt_name(ml_name)) ->
-- On REQUIRE reduce production list(opt_name(ml_name)) ->
-- On OPERATION reduce production list(opt_name(ml_name)) ->
-- On OPEN reduce production list(opt_name(ml_name)) ->
-- On MODULE reduce production list(opt_name(ml_name)) ->
-- On MLTYPE reduce production list(opt_name(ml_name)) ->
-- On LET reduce production list(opt_name(ml_name)) ->
-- On INCLUDE reduce production list(opt_name(ml_name)) ->
-- On EXTERNAL reduce production list(opt_name(ml_name)) ->
-- On EXCEPTION reduce production list(opt_name(ml_name)) ->
-- On EQ reduce production list(opt_name(ml_name)) ->
-- On EOF reduce production list(opt_name(ml_name)) ->
-- On END reduce production list(opt_name(ml_name)) ->

State 587:
list(opt_name(ml_name)) -> opt_name(ml_name) list(opt_name(ml_name)) . [ WITH VERBOSITY SEMISEMI RULE REQUIRE OPERATION OPEN MODULE MLTYPE LET INCLUDE EXTERNAL EXCEPTION EQ EOF END ]
-- On WITH reduce production list(opt_name(ml_name)) -> opt_name(ml_name) list(opt_name(ml_name))
-- On VERBOSITY reduce production list(opt_name(ml_name)) -> opt_name(ml_name) list(opt_name(ml_name))
-- On SEMISEMI reduce production list(opt_name(ml_name)) -> opt_name(ml_name) list(opt_name(ml_name))
-- On RULE reduce production list(opt_name(ml_name)) -> opt_name(ml_name) list(opt_name(ml_name))
-- On REQUIRE reduce production list(opt_name(ml_name)) -> opt_name(ml_name) list(opt_name(ml_name))
-- On OPERATION reduce production list(opt_name(ml_name)) -> opt_name(ml_name) list(opt_name(ml_name))
-- On OPEN reduce production list(opt_name(ml_name)) -> opt_name(ml_name) list(opt_name(ml_name))
-- On MODULE reduce production list(opt_name(ml_name)) -> opt_name(ml_name) list(opt_name(ml_name))
-- On MLTYPE reduce production list(opt_name(ml_name)) -> opt_name(ml_name) list(opt_name(ml_name))
-- On LET reduce production list(opt_name(ml_name)) -> opt_name(ml_name) list(opt_name(ml_name))
-- On INCLUDE reduce production list(opt_name(ml_name)) -> opt_name(ml_name) list(opt_name(ml_name))
-- On EXTERNAL reduce production list(opt_name(ml_name)) -> opt_name(ml_name) list(opt_name(ml_name))
-- On EXCEPTION reduce production list(opt_name(ml_name)) -> opt_name(ml_name) list(opt_name(ml_name))
-- On EQ reduce production list(opt_name(ml_name)) -> opt_name(ml_name) list(opt_name(ml_name))
-- On EOF reduce production list(opt_name(ml_name)) -> opt_name(ml_name) list(opt_name(ml_name))
-- On END reduce production list(opt_name(ml_name)) -> opt_name(ml_name) list(opt_name(ml_name))

State 588:
mlty_def -> ml_name list(opt_name(ml_name)) . EQ mlty_def_body [ WITH VERBOSITY SEMISEMI RULE REQUIRE OPERATION OPEN MODULE MLTYPE LET INCLUDE EXTERNAL EXCEPTION EOF END AND ]
-- On EQ shift to state 589

State 589:
mlty_def -> ml_name list(opt_name(ml_name)) EQ . mlty_def_body [ WITH VERBOSITY SEMISEMI RULE REQUIRE OPERATION OPEN MODULE MLTYPE LET INCLUDE EXTERNAL EXCEPTION EOF END AND ]
-- On UNDERSCORE shift to state 55
-- On REF shift to state 56
-- On NAME shift to state 590
-- On MLUNIT shift to state 58
-- On MLSTRING shift to state 59
-- On MLJUDGEMENT shift to state 60
-- On MLDERIVATION shift to state 61
-- On MLBOUNDARY shift to state 62
-- On LPAREN shift to state 591
-- On BAR shift to state 610
-- On simple_mlty_ shift to state 82
-- On separated_nonempty_list(STAR,app_mlty) shift to state 83
-- On prod_mlty_ shift to state 84
-- On prod_mlty shift to state 85
-- On module_path shift to state 87
-- On module_name shift to state 45
-- On mlty_def_body shift to state 639
-- On mlty_constructor shift to state 640
-- On mlty_ shift to state 100
-- On mlty shift to state 643
-- On ml_name shift to state 102
-- On mark_location(prod_mlty_) shift to state 104
-- On mark_location(mlty_) shift to state 105
-- On mark_location(app_mlty_) shift to state 106
-- On constr_name shift to state 635
-- On app_mlty_ shift to state 107
-- On app_mlty shift to state 108

State 590:
constr_name -> NAME . [ OF BAR ]
ml_name -> NAME . [ WITH VERBOSITY UNDERSCORE STAR SEMISEMI RULE REQUIRE OPERATION OPEN NAME MODULE MLUNIT MLTYPE MLSTRING MLJUDGEMENT MLDERIVATION MLBOUNDARY LPAREN LET INCLUDE EXTERNAL EXCEPTION EOF END DARROW ARROW AND ]
module_name -> NAME . [ PERIOD ]
-- On WITH reduce production ml_name -> NAME
-- On VERBOSITY reduce production ml_name -> NAME
-- On UNDERSCORE reduce production ml_name -> NAME
-- On STAR reduce production ml_name -> NAME
-- On SEMISEMI reduce production ml_name -> NAME
-- On RULE reduce production ml_name -> NAME
-- On REQUIRE reduce production ml_name -> NAME
-- On PERIOD reduce production module_name -> NAME
-- On OPERATION reduce production ml_name -> NAME
-- On OPEN reduce production ml_name -> NAME
-- On OF reduce production constr_name -> NAME
-- On NAME reduce production ml_name -> NAME
-- On MODULE reduce production ml_name -> NAME
-- On MLUNIT reduce production ml_name -> NAME
-- On MLTYPE reduce production ml_name -> NAME
-- On MLSTRING reduce production ml_name -> NAME
-- On MLJUDGEMENT reduce production ml_name -> NAME
-- On MLDERIVATION reduce production ml_name -> NAME
-- On MLBOUNDARY reduce production ml_name -> NAME
-- On LPAREN reduce production ml_name -> NAME
-- On LET reduce production ml_name -> NAME
-- On INCLUDE reduce production ml_name -> NAME
-- On EXTERNAL reduce production ml_name -> NAME
-- On EXCEPTION reduce production ml_name -> NAME
-- On EOF reduce production ml_name -> NAME
-- On END reduce production ml_name -> NAME
-- On DARROW reduce production ml_name -> NAME
-- On BAR reduce production constr_name -> NAME
-- On ARROW reduce production ml_name -> NAME
-- On AND reduce production ml_name -> NAME

State 591:
constr_name -> LPAREN . INFIXCONS RPAREN [ OF BAR ]
constr_name -> LPAREN . EQ RPAREN [ OF BAR ]
constr_name -> LPAREN . INFIXOP0 RPAREN [ OF BAR ]
constr_name -> LPAREN . INFIXOP1 RPAREN [ OF BAR ]
constr_name -> LPAREN . INFIXOP2 RPAREN [ OF BAR ]
constr_name -> LPAREN . INFIXOP3 RPAREN [ OF BAR ]
constr_name -> LPAREN . STAR RPAREN [ OF BAR ]
constr_name -> LPAREN . INFIXOP4 RPAREN [ OF BAR ]
constr_name -> LPAREN . PREFIXOP RPAREN [ OF BAR ]
ml_name -> LPAREN . INFIXCONS RPAREN [ WITH VERBOSITY UNDERSCORE STAR SEMISEMI RULE REQUIRE OPERATION OPEN NAME MODULE MLUNIT MLTYPE MLSTRING MLJUDGEMENT MLDERIVATION MLBOUNDARY LPAREN LET INCLUDE EXTERNAL EXCEPTION EOF END DARROW ARROW AND ]
ml_name -> LPAREN . EQ RPAREN [ WITH VERBOSITY UNDERSCORE STAR SEMISEMI RULE REQUIRE OPERATION OPEN NAME MODULE MLUNIT MLTYPE MLSTRING MLJUDGEMENT MLDERIVATION MLBOUNDARY LPAREN LET INCLUDE EXTERNAL EXCEPTION EOF END DARROW ARROW AND ]
ml_name -> LPAREN . INFIXOP0 RPAREN [ WITH VERBOSITY UNDERSCORE STAR SEMISEMI RULE REQUIRE OPERATION OPEN NAME MODULE MLUNIT MLTYPE MLSTRING MLJUDGEMENT MLDERIVATION MLBOUNDARY LPAREN LET INCLUDE EXTERNAL EXCEPTION EOF END DARROW ARROW AND ]
ml_name -> LPAREN . INFIXOP1 RPAREN [ WITH VERBOSITY UNDERSCORE STAR SEMISEMI RULE REQUIRE OPERATION OPEN NAME MODULE MLUNIT MLTYPE MLSTRING MLJUDGEMENT MLDERIVATION MLBOUNDARY LPAREN LET INCLUDE EXTERNAL EXCEPTION EOF END DARROW ARROW AND ]
ml_name -> LPAREN . INFIXOP2 RPAREN [ WITH VERBOSITY UNDERSCORE STAR SEMISEMI RULE REQUIRE OPERATION OPEN NAME MODULE MLUNIT MLTYPE MLSTRING MLJUDGEMENT MLDERIVATION MLBOUNDARY LPAREN LET INCLUDE EXTERNAL EXCEPTION EOF END DARROW ARROW AND ]
ml_name -> LPAREN . INFIXOP3 RPAREN [ WITH VERBOSITY UNDERSCORE STAR SEMISEMI RULE REQUIRE OPERATION OPEN NAME MODULE MLUNIT MLTYPE MLSTRING MLJUDGEMENT MLDERIVATION MLBOUNDARY LPAREN LET INCLUDE EXTERNAL EXCEPTION EOF END DARROW ARROW AND ]
ml_name -> LPAREN . STAR RPAREN [ WITH VERBOSITY UNDERSCORE STAR SEMISEMI RULE REQUIRE OPERATION OPEN NAME MODULE MLUNIT MLTYPE MLSTRING MLJUDGEMENT MLDERIVATION MLBOUNDARY LPAREN LET INCLUDE EXTERNAL EXCEPTION EOF END DARROW ARROW AND ]
ml_name -> LPAREN . INFIXOP4 RPAREN [ WITH VERBOSITY UNDERSCORE STAR SEMISEMI RULE REQUIRE OPERATION OPEN NAME MODULE MLUNIT MLTYPE MLSTRING MLJUDGEMENT MLDERIVATION MLBOUNDARY LPAREN LET INCLUDE EXTERNAL EXCEPTION EOF END DARROW ARROW AND ]
ml_name -> LPAREN . PREFIXOP RPAREN [ WITH VERBOSITY UNDERSCORE STAR SEMISEMI RULE REQUIRE OPERATION OPEN NAME MODULE MLUNIT MLTYPE MLSTRING MLJUDGEMENT MLDERIVATION MLBOUNDARY LPAREN LET INCLUDE EXTERNAL EXCEPTION EOF END DARROW ARROW AND ]
simple_mlty_ -> LPAREN . mlty_ RPAREN [ WITH VERBOSITY STAR SEMISEMI RULE REQUIRE OPERATION OPEN MODULE MLTYPE LET INCLUDE EXTERNAL EXCEPTION EOF END DARROW ARROW AND ]
-- On UNDERSCORE shift to state 55
-- On STAR shift to state 592
-- On REF shift to state 56
-- On PREFIXOP shift to state 594
-- On NAME shift to state 57
-- On MLUNIT shift to state 58
-- On MLSTRING shift to state 59
-- On MLJUDGEMENT shift to state 60
-- On MLDERIVATION shift to state 61
-- On MLBOUNDARY shift to state 62
-- On LPAREN shift to state 63
-- On INFIXOP4 shift to state 596
-- On INFIXOP3 shift to state 598
-- On INFIXOP2 shift to state 600
-- On INFIXOP1 shift to state 602
-- On INFIXOP0 shift to state 604
-- On INFIXCONS shift to state 606
-- On EQ shift to state 608
-- On simple_mlty_ shift to state 82
-- On separated_nonempty_list(STAR,app_mlty) shift to state 83
-- On prod_mlty_ shift to state 84
-- On prod_mlty shift to state 85
-- On module_path shift to state 87
-- On module_name shift to state 45
-- On mlty_ shift to state 113
-- On ml_name shift to state 102
-- On mark_location(prod_mlty_) shift to state 104
-- On mark_location(app_mlty_) shift to state 106
-- On app_mlty_ shift to state 107
-- On app_mlty shift to state 108

State 592:
constr_name -> LPAREN STAR . RPAREN [ OF BAR ]
ml_name -> LPAREN STAR . RPAREN [ WITH VERBOSITY UNDERSCORE STAR SEMISEMI RULE REQUIRE OPERATION OPEN NAME MODULE MLUNIT MLTYPE MLSTRING MLJUDGEMENT MLDERIVATION MLBOUNDARY LPAREN LET INCLUDE EXTERNAL EXCEPTION EOF END DARROW ARROW AND ]
-- On RPAREN shift to state 593

State 593:
constr_name -> LPAREN STAR RPAREN . [ OF BAR ]
ml_name -> LPAREN STAR RPAREN . [ WITH VERBOSITY UNDERSCORE STAR SEMISEMI RULE REQUIRE OPERATION OPEN NAME MODULE MLUNIT MLTYPE MLSTRING MLJUDGEMENT MLDERIVATION MLBOUNDARY LPAREN LET INCLUDE EXTERNAL EXCEPTION EOF END DARROW ARROW AND ]
-- On WITH reduce production ml_name -> LPAREN STAR RPAREN
-- On VERBOSITY reduce production ml_name -> LPAREN STAR RPAREN
-- On UNDERSCORE reduce production ml_name -> LPAREN STAR RPAREN
-- On STAR reduce production ml_name -> LPAREN STAR RPAREN
-- On SEMISEMI reduce production ml_name -> LPAREN STAR RPAREN
-- On RULE reduce production ml_name -> LPAREN STAR RPAREN
-- On REQUIRE reduce production ml_name -> LPAREN STAR RPAREN
-- On OPERATION reduce production ml_name -> LPAREN STAR RPAREN
-- On OPEN reduce production ml_name -> LPAREN STAR RPAREN
-- On OF reduce production constr_name -> LPAREN STAR RPAREN
-- On NAME reduce production ml_name -> LPAREN STAR RPAREN
-- On MODULE reduce production ml_name -> LPAREN STAR RPAREN
-- On MLUNIT reduce production ml_name -> LPAREN STAR RPAREN
-- On MLTYPE reduce production ml_name -> LPAREN STAR RPAREN
-- On MLSTRING reduce production ml_name -> LPAREN STAR RPAREN
-- On MLJUDGEMENT reduce production ml_name -> LPAREN STAR RPAREN
-- On MLDERIVATION reduce production ml_name -> LPAREN STAR RPAREN
-- On MLBOUNDARY reduce production ml_name -> LPAREN STAR RPAREN
-- On LPAREN reduce production ml_name -> LPAREN STAR RPAREN
-- On LET reduce production ml_name -> LPAREN STAR RPAREN
-- On INCLUDE reduce production ml_name -> LPAREN STAR RPAREN
-- On EXTERNAL reduce production ml_name -> LPAREN STAR RPAREN
-- On EXCEPTION reduce production ml_name -> LPAREN STAR RPAREN
-- On EOF reduce production ml_name -> LPAREN STAR RPAREN
-- On END reduce production ml_name -> LPAREN STAR RPAREN
-- On DARROW reduce production ml_name -> LPAREN STAR RPAREN
-- On BAR reduce production constr_name -> LPAREN STAR RPAREN
-- On ARROW reduce production ml_name -> LPAREN STAR RPAREN
-- On AND reduce production ml_name -> LPAREN STAR RPAREN

State 594:
constr_name -> LPAREN PREFIXOP . RPAREN [ OF BAR ]
ml_name -> LPAREN PREFIXOP . RPAREN [ WITH VERBOSITY UNDERSCORE STAR SEMISEMI RULE REQUIRE OPERATION OPEN NAME MODULE MLUNIT MLTYPE MLSTRING MLJUDGEMENT MLDERIVATION MLBOUNDARY LPAREN LET INCLUDE EXTERNAL EXCEPTION EOF END DARROW ARROW AND ]
-- On RPAREN shift to state 595

State 595:
constr_name -> LPAREN PREFIXOP RPAREN . [ OF BAR ]
ml_name -> LPAREN PREFIXOP RPAREN . [ WITH VERBOSITY UNDERSCORE STAR SEMISEMI RULE REQUIRE OPERATION OPEN NAME MODULE MLUNIT MLTYPE MLSTRING MLJUDGEMENT MLDERIVATION MLBOUNDARY LPAREN LET INCLUDE EXTERNAL EXCEPTION EOF END DARROW ARROW AND ]
-- On WITH reduce production ml_name -> LPAREN PREFIXOP RPAREN
-- On VERBOSITY reduce production ml_name -> LPAREN PREFIXOP RPAREN
-- On UNDERSCORE reduce production ml_name -> LPAREN PREFIXOP RPAREN
-- On STAR reduce production ml_name -> LPAREN PREFIXOP RPAREN
-- On SEMISEMI reduce production ml_name -> LPAREN PREFIXOP RPAREN
-- On RULE reduce production ml_name -> LPAREN PREFIXOP RPAREN
-- On REQUIRE reduce production ml_name -> LPAREN PREFIXOP RPAREN
-- On OPERATION reduce production ml_name -> LPAREN PREFIXOP RPAREN
-- On OPEN reduce production ml_name -> LPAREN PREFIXOP RPAREN
-- On OF reduce production constr_name -> LPAREN PREFIXOP RPAREN
-- On NAME reduce production ml_name -> LPAREN PREFIXOP RPAREN
-- On MODULE reduce production ml_name -> LPAREN PREFIXOP RPAREN
-- On MLUNIT reduce production ml_name -> LPAREN PREFIXOP RPAREN
-- On MLTYPE reduce production ml_name -> LPAREN PREFIXOP RPAREN
-- On MLSTRING reduce production ml_name -> LPAREN PREFIXOP RPAREN
-- On MLJUDGEMENT reduce production ml_name -> LPAREN PREFIXOP RPAREN
-- On MLDERIVATION reduce production ml_name -> LPAREN PREFIXOP RPAREN
-- On MLBOUNDARY reduce production ml_name -> LPAREN PREFIXOP RPAREN
-- On LPAREN reduce production ml_name -> LPAREN PREFIXOP RPAREN
-- On LET reduce production ml_name -> LPAREN PREFIXOP RPAREN
-- On INCLUDE reduce production ml_name -> LPAREN PREFIXOP RPAREN
-- On EXTERNAL reduce production ml_name -> LPAREN PREFIXOP RPAREN
-- On EXCEPTION reduce production ml_name -> LPAREN PREFIXOP RPAREN
-- On EOF reduce production ml_name -> LPAREN PREFIXOP RPAREN
-- On END reduce production ml_name -> LPAREN PREFIXOP RPAREN
-- On DARROW reduce production ml_name -> LPAREN PREFIXOP RPAREN
-- On BAR reduce production constr_name -> LPAREN PREFIXOP RPAREN
-- On ARROW reduce production ml_name -> LPAREN PREFIXOP RPAREN
-- On AND reduce production ml_name -> LPAREN PREFIXOP RPAREN

State 596:
constr_name -> LPAREN INFIXOP4 . RPAREN [ OF BAR ]
ml_name -> LPAREN INFIXOP4 . RPAREN [ WITH VERBOSITY UNDERSCORE STAR SEMISEMI RULE REQUIRE OPERATION OPEN NAME MODULE MLUNIT MLTYPE MLSTRING MLJUDGEMENT MLDERIVATION MLBOUNDARY LPAREN LET INCLUDE EXTERNAL EXCEPTION EOF END DARROW ARROW AND ]
-- On RPAREN shift to state 597

State 597:
constr_name -> LPAREN INFIXOP4 RPAREN . [ OF BAR ]
ml_name -> LPAREN INFIXOP4 RPAREN . [ WITH VERBOSITY UNDERSCORE STAR SEMISEMI RULE REQUIRE OPERATION OPEN NAME MODULE MLUNIT MLTYPE MLSTRING MLJUDGEMENT MLDERIVATION MLBOUNDARY LPAREN LET INCLUDE EXTERNAL EXCEPTION EOF END DARROW ARROW AND ]
-- On WITH reduce production ml_name -> LPAREN INFIXOP4 RPAREN
-- On VERBOSITY reduce production ml_name -> LPAREN INFIXOP4 RPAREN
-- On UNDERSCORE reduce production ml_name -> LPAREN INFIXOP4 RPAREN
-- On STAR reduce production ml_name -> LPAREN INFIXOP4 RPAREN
-- On SEMISEMI reduce production ml_name -> LPAREN INFIXOP4 RPAREN
-- On RULE reduce production ml_name -> LPAREN INFIXOP4 RPAREN
-- On REQUIRE reduce production ml_name -> LPAREN INFIXOP4 RPAREN
-- On OPERATION reduce production ml_name -> LPAREN INFIXOP4 RPAREN
-- On OPEN reduce production ml_name -> LPAREN INFIXOP4 RPAREN
-- On OF reduce production constr_name -> LPAREN INFIXOP4 RPAREN
-- On NAME reduce production ml_name -> LPAREN INFIXOP4 RPAREN
-- On MODULE reduce production ml_name -> LPAREN INFIXOP4 RPAREN
-- On MLUNIT reduce production ml_name -> LPAREN INFIXOP4 RPAREN
-- On MLTYPE reduce production ml_name -> LPAREN INFIXOP4 RPAREN
-- On MLSTRING reduce production ml_name -> LPAREN INFIXOP4 RPAREN
-- On MLJUDGEMENT reduce production ml_name -> LPAREN INFIXOP4 RPAREN
-- On MLDERIVATION reduce production ml_name -> LPAREN INFIXOP4 RPAREN
-- On MLBOUNDARY reduce production ml_name -> LPAREN INFIXOP4 RPAREN
-- On LPAREN reduce production ml_name -> LPAREN INFIXOP4 RPAREN
-- On LET reduce production ml_name -> LPAREN INFIXOP4 RPAREN
-- On INCLUDE reduce production ml_name -> LPAREN INFIXOP4 RPAREN
-- On EXTERNAL reduce production ml_name -> LPAREN INFIXOP4 RPAREN
-- On EXCEPTION reduce production ml_name -> LPAREN INFIXOP4 RPAREN
-- On EOF reduce production ml_name -> LPAREN INFIXOP4 RPAREN
-- On END reduce production ml_name -> LPAREN INFIXOP4 RPAREN
-- On DARROW reduce production ml_name -> LPAREN INFIXOP4 RPAREN
-- On BAR reduce production constr_name -> LPAREN INFIXOP4 RPAREN
-- On ARROW reduce production ml_name -> LPAREN INFIXOP4 RPAREN
-- On AND reduce production ml_name -> LPAREN INFIXOP4 RPAREN

State 598:
constr_name -> LPAREN INFIXOP3 . RPAREN [ OF BAR ]
ml_name -> LPAREN INFIXOP3 . RPAREN [ WITH VERBOSITY UNDERSCORE STAR SEMISEMI RULE REQUIRE OPERATION OPEN NAME MODULE MLUNIT MLTYPE MLSTRING MLJUDGEMENT MLDERIVATION MLBOUNDARY LPAREN LET INCLUDE EXTERNAL EXCEPTION EOF END DARROW ARROW AND ]
-- On RPAREN shift to state 599

State 599:
constr_name -> LPAREN INFIXOP3 RPAREN . [ OF BAR ]
ml_name -> LPAREN INFIXOP3 RPAREN . [ WITH VERBOSITY UNDERSCORE STAR SEMISEMI RULE REQUIRE OPERATION OPEN NAME MODULE MLUNIT MLTYPE MLSTRING MLJUDGEMENT MLDERIVATION MLBOUNDARY LPAREN LET INCLUDE EXTERNAL EXCEPTION EOF END DARROW ARROW AND ]
-- On WITH reduce production ml_name -> LPAREN INFIXOP3 RPAREN
-- On VERBOSITY reduce production ml_name -> LPAREN INFIXOP3 RPAREN
-- On UNDERSCORE reduce production ml_name -> LPAREN INFIXOP3 RPAREN
-- On STAR reduce production ml_name -> LPAREN INFIXOP3 RPAREN
-- On SEMISEMI reduce production ml_name -> LPAREN INFIXOP3 RPAREN
-- On RULE reduce production ml_name -> LPAREN INFIXOP3 RPAREN
-- On REQUIRE reduce production ml_name -> LPAREN INFIXOP3 RPAREN
-- On OPERATION reduce production ml_name -> LPAREN INFIXOP3 RPAREN
-- On OPEN reduce production ml_name -> LPAREN INFIXOP3 RPAREN
-- On OF reduce production constr_name -> LPAREN INFIXOP3 RPAREN
-- On NAME reduce production ml_name -> LPAREN INFIXOP3 RPAREN
-- On MODULE reduce production ml_name -> LPAREN INFIXOP3 RPAREN
-- On MLUNIT reduce production ml_name -> LPAREN INFIXOP3 RPAREN
-- On MLTYPE reduce production ml_name -> LPAREN INFIXOP3 RPAREN
-- On MLSTRING reduce production ml_name -> LPAREN INFIXOP3 RPAREN
-- On MLJUDGEMENT reduce production ml_name -> LPAREN INFIXOP3 RPAREN
-- On MLDERIVATION reduce production ml_name -> LPAREN INFIXOP3 RPAREN
-- On MLBOUNDARY reduce production ml_name -> LPAREN INFIXOP3 RPAREN
-- On LPAREN reduce production ml_name -> LPAREN INFIXOP3 RPAREN
-- On LET reduce production ml_name -> LPAREN INFIXOP3 RPAREN
-- On INCLUDE reduce production ml_name -> LPAREN INFIXOP3 RPAREN
-- On EXTERNAL reduce production ml_name -> LPAREN INFIXOP3 RPAREN
-- On EXCEPTION reduce production ml_name -> LPAREN INFIXOP3 RPAREN
-- On EOF reduce production ml_name -> LPAREN INFIXOP3 RPAREN
-- On END reduce production ml_name -> LPAREN INFIXOP3 RPAREN
-- On DARROW reduce production ml_name -> LPAREN INFIXOP3 RPAREN
-- On BAR reduce production constr_name -> LPAREN INFIXOP3 RPAREN
-- On ARROW reduce production ml_name -> LPAREN INFIXOP3 RPAREN
-- On AND reduce production ml_name -> LPAREN INFIXOP3 RPAREN

State 600:
constr_name -> LPAREN INFIXOP2 . RPAREN [ OF BAR ]
ml_name -> LPAREN INFIXOP2 . RPAREN [ WITH VERBOSITY UNDERSCORE STAR SEMISEMI RULE REQUIRE OPERATION OPEN NAME MODULE MLUNIT MLTYPE MLSTRING MLJUDGEMENT MLDERIVATION MLBOUNDARY LPAREN LET INCLUDE EXTERNAL EXCEPTION EOF END DARROW ARROW AND ]
-- On RPAREN shift to state 601

State 601:
constr_name -> LPAREN INFIXOP2 RPAREN . [ OF BAR ]
ml_name -> LPAREN INFIXOP2 RPAREN . [ WITH VERBOSITY UNDERSCORE STAR SEMISEMI RULE REQUIRE OPERATION OPEN NAME MODULE MLUNIT MLTYPE MLSTRING MLJUDGEMENT MLDERIVATION MLBOUNDARY LPAREN LET INCLUDE EXTERNAL EXCEPTION EOF END DARROW ARROW AND ]
-- On WITH reduce production ml_name -> LPAREN INFIXOP2 RPAREN
-- On VERBOSITY reduce production ml_name -> LPAREN INFIXOP2 RPAREN
-- On UNDERSCORE reduce production ml_name -> LPAREN INFIXOP2 RPAREN
-- On STAR reduce production ml_name -> LPAREN INFIXOP2 RPAREN
-- On SEMISEMI reduce production ml_name -> LPAREN INFIXOP2 RPAREN
-- On RULE reduce production ml_name -> LPAREN INFIXOP2 RPAREN
-- On REQUIRE reduce production ml_name -> LPAREN INFIXOP2 RPAREN
-- On OPERATION reduce production ml_name -> LPAREN INFIXOP2 RPAREN
-- On OPEN reduce production ml_name -> LPAREN INFIXOP2 RPAREN
-- On OF reduce production constr_name -> LPAREN INFIXOP2 RPAREN
-- On NAME reduce production ml_name -> LPAREN INFIXOP2 RPAREN
-- On MODULE reduce production ml_name -> LPAREN INFIXOP2 RPAREN
-- On MLUNIT reduce production ml_name -> LPAREN INFIXOP2 RPAREN
-- On MLTYPE reduce production ml_name -> LPAREN INFIXOP2 RPAREN
-- On MLSTRING reduce production ml_name -> LPAREN INFIXOP2 RPAREN
-- On MLJUDGEMENT reduce production ml_name -> LPAREN INFIXOP2 RPAREN
-- On MLDERIVATION reduce production ml_name -> LPAREN INFIXOP2 RPAREN
-- On MLBOUNDARY reduce production ml_name -> LPAREN INFIXOP2 RPAREN
-- On LPAREN reduce production ml_name -> LPAREN INFIXOP2 RPAREN
-- On LET reduce production ml_name -> LPAREN INFIXOP2 RPAREN
-- On INCLUDE reduce production ml_name -> LPAREN INFIXOP2 RPAREN
-- On EXTERNAL reduce production ml_name -> LPAREN INFIXOP2 RPAREN
-- On EXCEPTION reduce production ml_name -> LPAREN INFIXOP2 RPAREN
-- On EOF reduce production ml_name -> LPAREN INFIXOP2 RPAREN
-- On END reduce production ml_name -> LPAREN INFIXOP2 RPAREN
-- On DARROW reduce production ml_name -> LPAREN INFIXOP2 RPAREN
-- On BAR reduce production constr_name -> LPAREN INFIXOP2 RPAREN
-- On ARROW reduce production ml_name -> LPAREN INFIXOP2 RPAREN
-- On AND reduce production ml_name -> LPAREN INFIXOP2 RPAREN

State 602:
constr_name -> LPAREN INFIXOP1 . RPAREN [ OF BAR ]
ml_name -> LPAREN INFIXOP1 . RPAREN [ WITH VERBOSITY UNDERSCORE STAR SEMISEMI RULE REQUIRE OPERATION OPEN NAME MODULE MLUNIT MLTYPE MLSTRING MLJUDGEMENT MLDERIVATION MLBOUNDARY LPAREN LET INCLUDE EXTERNAL EXCEPTION EOF END DARROW ARROW AND ]
-- On RPAREN shift to state 603

State 603:
constr_name -> LPAREN INFIXOP1 RPAREN . [ OF BAR ]
ml_name -> LPAREN INFIXOP1 RPAREN . [ WITH VERBOSITY UNDERSCORE STAR SEMISEMI RULE REQUIRE OPERATION OPEN NAME MODULE MLUNIT MLTYPE MLSTRING MLJUDGEMENT MLDERIVATION MLBOUNDARY LPAREN LET INCLUDE EXTERNAL EXCEPTION EOF END DARROW ARROW AND ]
-- On WITH reduce production ml_name -> LPAREN INFIXOP1 RPAREN
-- On VERBOSITY reduce production ml_name -> LPAREN INFIXOP1 RPAREN
-- On UNDERSCORE reduce production ml_name -> LPAREN INFIXOP1 RPAREN
-- On STAR reduce production ml_name -> LPAREN INFIXOP1 RPAREN
-- On SEMISEMI reduce production ml_name -> LPAREN INFIXOP1 RPAREN
-- On RULE reduce production ml_name -> LPAREN INFIXOP1 RPAREN
-- On REQUIRE reduce production ml_name -> LPAREN INFIXOP1 RPAREN
-- On OPERATION reduce production ml_name -> LPAREN INFIXOP1 RPAREN
-- On OPEN reduce production ml_name -> LPAREN INFIXOP1 RPAREN
-- On OF reduce production constr_name -> LPAREN INFIXOP1 RPAREN
-- On NAME reduce production ml_name -> LPAREN INFIXOP1 RPAREN
-- On MODULE reduce production ml_name -> LPAREN INFIXOP1 RPAREN
-- On MLUNIT reduce production ml_name -> LPAREN INFIXOP1 RPAREN
-- On MLTYPE reduce production ml_name -> LPAREN INFIXOP1 RPAREN
-- On MLSTRING reduce production ml_name -> LPAREN INFIXOP1 RPAREN
-- On MLJUDGEMENT reduce production ml_name -> LPAREN INFIXOP1 RPAREN
-- On MLDERIVATION reduce production ml_name -> LPAREN INFIXOP1 RPAREN
-- On MLBOUNDARY reduce production ml_name -> LPAREN INFIXOP1 RPAREN
-- On LPAREN reduce production ml_name -> LPAREN INFIXOP1 RPAREN
-- On LET reduce production ml_name -> LPAREN INFIXOP1 RPAREN
-- On INCLUDE reduce production ml_name -> LPAREN INFIXOP1 RPAREN
-- On EXTERNAL reduce production ml_name -> LPAREN INFIXOP1 RPAREN
-- On EXCEPTION reduce production ml_name -> LPAREN INFIXOP1 RPAREN
-- On EOF reduce production ml_name -> LPAREN INFIXOP1 RPAREN
-- On END reduce production ml_name -> LPAREN INFIXOP1 RPAREN
-- On DARROW reduce production ml_name -> LPAREN INFIXOP1 RPAREN
-- On BAR reduce production constr_name -> LPAREN INFIXOP1 RPAREN
-- On ARROW reduce production ml_name -> LPAREN INFIXOP1 RPAREN
-- On AND reduce production ml_name -> LPAREN INFIXOP1 RPAREN

State 604:
constr_name -> LPAREN INFIXOP0 . RPAREN [ OF BAR ]
ml_name -> LPAREN INFIXOP0 . RPAREN [ WITH VERBOSITY UNDERSCORE STAR SEMISEMI RULE REQUIRE OPERATION OPEN NAME MODULE MLUNIT MLTYPE MLSTRING MLJUDGEMENT MLDERIVATION MLBOUNDARY LPAREN LET INCLUDE EXTERNAL EXCEPTION EOF END DARROW ARROW AND ]
-- On RPAREN shift to state 605

State 605:
constr_name -> LPAREN INFIXOP0 RPAREN . [ OF BAR ]
ml_name -> LPAREN INFIXOP0 RPAREN . [ WITH VERBOSITY UNDERSCORE STAR SEMISEMI RULE REQUIRE OPERATION OPEN NAME MODULE MLUNIT MLTYPE MLSTRING MLJUDGEMENT MLDERIVATION MLBOUNDARY LPAREN LET INCLUDE EXTERNAL EXCEPTION EOF END DARROW ARROW AND ]
-- On WITH reduce production ml_name -> LPAREN INFIXOP0 RPAREN
-- On VERBOSITY reduce production ml_name -> LPAREN INFIXOP0 RPAREN
-- On UNDERSCORE reduce production ml_name -> LPAREN INFIXOP0 RPAREN
-- On STAR reduce production ml_name -> LPAREN INFIXOP0 RPAREN
-- On SEMISEMI reduce production ml_name -> LPAREN INFIXOP0 RPAREN
-- On RULE reduce production ml_name -> LPAREN INFIXOP0 RPAREN
-- On REQUIRE reduce production ml_name -> LPAREN INFIXOP0 RPAREN
-- On OPERATION reduce production ml_name -> LPAREN INFIXOP0 RPAREN
-- On OPEN reduce production ml_name -> LPAREN INFIXOP0 RPAREN
-- On OF reduce production constr_name -> LPAREN INFIXOP0 RPAREN
-- On NAME reduce production ml_name -> LPAREN INFIXOP0 RPAREN
-- On MODULE reduce production ml_name -> LPAREN INFIXOP0 RPAREN
-- On MLUNIT reduce production ml_name -> LPAREN INFIXOP0 RPAREN
-- On MLTYPE reduce production ml_name -> LPAREN INFIXOP0 RPAREN
-- On MLSTRING reduce production ml_name -> LPAREN INFIXOP0 RPAREN
-- On MLJUDGEMENT reduce production ml_name -> LPAREN INFIXOP0 RPAREN
-- On MLDERIVATION reduce production ml_name -> LPAREN INFIXOP0 RPAREN
-- On MLBOUNDARY reduce production ml_name -> LPAREN INFIXOP0 RPAREN
-- On LPAREN reduce production ml_name -> LPAREN INFIXOP0 RPAREN
-- On LET reduce production ml_name -> LPAREN INFIXOP0 RPAREN
-- On INCLUDE reduce production ml_name -> LPAREN INFIXOP0 RPAREN
-- On EXTERNAL reduce production ml_name -> LPAREN INFIXOP0 RPAREN
-- On EXCEPTION reduce production ml_name -> LPAREN INFIXOP0 RPAREN
-- On EOF reduce production ml_name -> LPAREN INFIXOP0 RPAREN
-- On END reduce production ml_name -> LPAREN INFIXOP0 RPAREN
-- On DARROW reduce production ml_name -> LPAREN INFIXOP0 RPAREN
-- On BAR reduce production constr_name -> LPAREN INFIXOP0 RPAREN
-- On ARROW reduce production ml_name -> LPAREN INFIXOP0 RPAREN
-- On AND reduce production ml_name -> LPAREN INFIXOP0 RPAREN

State 606:
constr_name -> LPAREN INFIXCONS . RPAREN [ OF BAR ]
ml_name -> LPAREN INFIXCONS . RPAREN [ WITH VERBOSITY UNDERSCORE STAR SEMISEMI RULE REQUIRE OPERATION OPEN NAME MODULE MLUNIT MLTYPE MLSTRING MLJUDGEMENT MLDERIVATION MLBOUNDARY LPAREN LET INCLUDE EXTERNAL EXCEPTION EOF END DARROW ARROW AND ]
-- On RPAREN shift to state 607

State 607:
constr_name -> LPAREN INFIXCONS RPAREN . [ OF BAR ]
ml_name -> LPAREN INFIXCONS RPAREN . [ WITH VERBOSITY UNDERSCORE STAR SEMISEMI RULE REQUIRE OPERATION OPEN NAME MODULE MLUNIT MLTYPE MLSTRING MLJUDGEMENT MLDERIVATION MLBOUNDARY LPAREN LET INCLUDE EXTERNAL EXCEPTION EOF END DARROW ARROW AND ]
-- On WITH reduce production ml_name -> LPAREN INFIXCONS RPAREN
-- On VERBOSITY reduce production ml_name -> LPAREN INFIXCONS RPAREN
-- On UNDERSCORE reduce production ml_name -> LPAREN INFIXCONS RPAREN
-- On STAR reduce production ml_name -> LPAREN INFIXCONS RPAREN
-- On SEMISEMI reduce production ml_name -> LPAREN INFIXCONS RPAREN
-- On RULE reduce production ml_name -> LPAREN INFIXCONS RPAREN
-- On REQUIRE reduce production ml_name -> LPAREN INFIXCONS RPAREN
-- On OPERATION reduce production ml_name -> LPAREN INFIXCONS RPAREN
-- On OPEN reduce production ml_name -> LPAREN INFIXCONS RPAREN
-- On OF reduce production constr_name -> LPAREN INFIXCONS RPAREN
-- On NAME reduce production ml_name -> LPAREN INFIXCONS RPAREN
-- On MODULE reduce production ml_name -> LPAREN INFIXCONS RPAREN
-- On MLUNIT reduce production ml_name -> LPAREN INFIXCONS RPAREN
-- On MLTYPE reduce production ml_name -> LPAREN INFIXCONS RPAREN
-- On MLSTRING reduce production ml_name -> LPAREN INFIXCONS RPAREN
-- On MLJUDGEMENT reduce production ml_name -> LPAREN INFIXCONS RPAREN
-- On MLDERIVATION reduce production ml_name -> LPAREN INFIXCONS RPAREN
-- On MLBOUNDARY reduce production ml_name -> LPAREN INFIXCONS RPAREN
-- On LPAREN reduce production ml_name -> LPAREN INFIXCONS RPAREN
-- On LET reduce production ml_name -> LPAREN INFIXCONS RPAREN
-- On INCLUDE reduce production ml_name -> LPAREN INFIXCONS RPAREN
-- On EXTERNAL reduce production ml_name -> LPAREN INFIXCONS RPAREN
-- On EXCEPTION reduce production ml_name -> LPAREN INFIXCONS RPAREN
-- On EOF reduce production ml_name -> LPAREN INFIXCONS RPAREN
-- On END reduce production ml_name -> LPAREN INFIXCONS RPAREN
-- On DARROW reduce production ml_name -> LPAREN INFIXCONS RPAREN
-- On BAR reduce production constr_name -> LPAREN INFIXCONS RPAREN
-- On ARROW reduce production ml_name -> LPAREN INFIXCONS RPAREN
-- On AND reduce production ml_name -> LPAREN INFIXCONS RPAREN

State 608:
constr_name -> LPAREN EQ . RPAREN [ OF BAR ]
ml_name -> LPAREN EQ . RPAREN [ WITH VERBOSITY UNDERSCORE STAR SEMISEMI RULE REQUIRE OPERATION OPEN NAME MODULE MLUNIT MLTYPE MLSTRING MLJUDGEMENT MLDERIVATION MLBOUNDARY LPAREN LET INCLUDE EXTERNAL EXCEPTION EOF END DARROW ARROW AND ]
-- On RPAREN shift to state 609

State 609:
constr_name -> LPAREN EQ RPAREN . [ OF BAR ]
ml_name -> LPAREN EQ RPAREN . [ WITH VERBOSITY UNDERSCORE STAR SEMISEMI RULE REQUIRE OPERATION OPEN NAME MODULE MLUNIT MLTYPE MLSTRING MLJUDGEMENT MLDERIVATION MLBOUNDARY LPAREN LET INCLUDE EXTERNAL EXCEPTION EOF END DARROW ARROW AND ]
-- On WITH reduce production ml_name -> LPAREN EQ RPAREN
-- On VERBOSITY reduce production ml_name -> LPAREN EQ RPAREN
-- On UNDERSCORE reduce production ml_name -> LPAREN EQ RPAREN
-- On STAR reduce production ml_name -> LPAREN EQ RPAREN
-- On SEMISEMI reduce production ml_name -> LPAREN EQ RPAREN
-- On RULE reduce production ml_name -> LPAREN EQ RPAREN
-- On REQUIRE reduce production ml_name -> LPAREN EQ RPAREN
-- On OPERATION reduce production ml_name -> LPAREN EQ RPAREN
-- On OPEN reduce production ml_name -> LPAREN EQ RPAREN
-- On OF reduce production constr_name -> LPAREN EQ RPAREN
-- On NAME reduce production ml_name -> LPAREN EQ RPAREN
-- On MODULE reduce production ml_name -> LPAREN EQ RPAREN
-- On MLUNIT reduce production ml_name -> LPAREN EQ RPAREN
-- On MLTYPE reduce production ml_name -> LPAREN EQ RPAREN
-- On MLSTRING reduce production ml_name -> LPAREN EQ RPAREN
-- On MLJUDGEMENT reduce production ml_name -> LPAREN EQ RPAREN
-- On MLDERIVATION reduce production ml_name -> LPAREN EQ RPAREN
-- On MLBOUNDARY reduce production ml_name -> LPAREN EQ RPAREN
-- On LPAREN reduce production ml_name -> LPAREN EQ RPAREN
-- On LET reduce production ml_name -> LPAREN EQ RPAREN
-- On INCLUDE reduce production ml_name -> LPAREN EQ RPAREN
-- On EXTERNAL reduce production ml_name -> LPAREN EQ RPAREN
-- On EXCEPTION reduce production ml_name -> LPAREN EQ RPAREN
-- On EOF reduce production ml_name -> LPAREN EQ RPAREN
-- On END reduce production ml_name -> LPAREN EQ RPAREN
-- On DARROW reduce production ml_name -> LPAREN EQ RPAREN
-- On BAR reduce production constr_name -> LPAREN EQ RPAREN
-- On ARROW reduce production ml_name -> LPAREN EQ RPAREN
-- On AND reduce production ml_name -> LPAREN EQ RPAREN

State 610:
mlty_def_body -> BAR . loption(separated_nonempty_list(BAR,mlty_constructor)) [ WITH VERBOSITY SEMISEMI RULE REQUIRE OPERATION OPEN MODULE MLTYPE LET INCLUDE EXTERNAL EXCEPTION EOF END AND ]
-- On NAME shift to state 611
-- On LPAREN shift to state 612
-- On separated_nonempty_list(BAR,mlty_constructor) shift to state 631
-- On mlty_constructor shift to state 632
-- On loption(separated_nonempty_list(BAR,mlty_constructor)) shift to state 638
-- On constr_name shift to state 635
-- On WITH reduce production loption(separated_nonempty_list(BAR,mlty_constructor)) ->
-- On VERBOSITY reduce production loption(separated_nonempty_list(BAR,mlty_constructor)) ->
-- On SEMISEMI reduce production loption(separated_nonempty_list(BAR,mlty_constructor)) ->
-- On RULE reduce production loption(separated_nonempty_list(BAR,mlty_constructor)) ->
-- On REQUIRE reduce production loption(separated_nonempty_list(BAR,mlty_constructor)) ->
-- On OPERATION reduce production loption(separated_nonempty_list(BAR,mlty_constructor)) ->
-- On OPEN reduce production loption(separated_nonempty_list(BAR,mlty_constructor)) ->
-- On MODULE reduce production loption(separated_nonempty_list(BAR,mlty_constructor)) ->
-- On MLTYPE reduce production loption(separated_nonempty_list(BAR,mlty_constructor)) ->
-- On LET reduce production loption(separated_nonempty_list(BAR,mlty_constructor)) ->
-- On INCLUDE reduce production loption(separated_nonempty_list(BAR,mlty_constructor)) ->
-- On EXTERNAL reduce production loption(separated_nonempty_list(BAR,mlty_constructor)) ->
-- On EXCEPTION reduce production loption(separated_nonempty_list(BAR,mlty_constructor)) ->
-- On EOF reduce production loption(separated_nonempty_list(BAR,mlty_constructor)) ->
-- On END reduce production loption(separated_nonempty_list(BAR,mlty_constructor)) ->
-- On AND reduce production loption(separated_nonempty_list(BAR,mlty_constructor)) ->

State 611:
constr_name -> NAME . [ WITH VERBOSITY SEMISEMI RULE REQUIRE OPERATION OPEN OF MODULE MLTYPE LET INCLUDE EXTERNAL EXCEPTION EOF END BAR AND ]
-- On WITH reduce production constr_name -> NAME
-- On VERBOSITY reduce production constr_name -> NAME
-- On SEMISEMI reduce production constr_name -> NAME
-- On RULE reduce production constr_name -> NAME
-- On REQUIRE reduce production constr_name -> NAME
-- On OPERATION reduce production constr_name -> NAME
-- On OPEN reduce production constr_name -> NAME
-- On OF reduce production constr_name -> NAME
-- On MODULE reduce production constr_name -> NAME
-- On MLTYPE reduce production constr_name -> NAME
-- On LET reduce production constr_name -> NAME
-- On INCLUDE reduce production constr_name -> NAME
-- On EXTERNAL reduce production constr_name -> NAME
-- On EXCEPTION reduce production constr_name -> NAME
-- On EOF reduce production constr_name -> NAME
-- On END reduce production constr_name -> NAME
-- On BAR reduce production constr_name -> NAME
-- On AND reduce production constr_name -> NAME

State 612:
constr_name -> LPAREN . INFIXCONS RPAREN [ WITH VERBOSITY SEMISEMI RULE REQUIRE OPERATION OPEN OF MODULE MLTYPE LET INCLUDE EXTERNAL EXCEPTION EOF END BAR AND ]
constr_name -> LPAREN . EQ RPAREN [ WITH VERBOSITY SEMISEMI RULE REQUIRE OPERATION OPEN OF MODULE MLTYPE LET INCLUDE EXTERNAL EXCEPTION EOF END BAR AND ]
constr_name -> LPAREN . INFIXOP0 RPAREN [ WITH VERBOSITY SEMISEMI RULE REQUIRE OPERATION OPEN OF MODULE MLTYPE LET INCLUDE EXTERNAL EXCEPTION EOF END BAR AND ]
constr_name -> LPAREN . INFIXOP1 RPAREN [ WITH VERBOSITY SEMISEMI RULE REQUIRE OPERATION OPEN OF MODULE MLTYPE LET INCLUDE EXTERNAL EXCEPTION EOF END BAR AND ]
constr_name -> LPAREN . INFIXOP2 RPAREN [ WITH VERBOSITY SEMISEMI RULE REQUIRE OPERATION OPEN OF MODULE MLTYPE LET INCLUDE EXTERNAL EXCEPTION EOF END BAR AND ]
constr_name -> LPAREN . INFIXOP3 RPAREN [ WITH VERBOSITY SEMISEMI RULE REQUIRE OPERATION OPEN OF MODULE MLTYPE LET INCLUDE EXTERNAL EXCEPTION EOF END BAR AND ]
constr_name -> LPAREN . STAR RPAREN [ WITH VERBOSITY SEMISEMI RULE REQUIRE OPERATION OPEN OF MODULE MLTYPE LET INCLUDE EXTERNAL EXCEPTION EOF END BAR AND ]
constr_name -> LPAREN . INFIXOP4 RPAREN [ WITH VERBOSITY SEMISEMI RULE REQUIRE OPERATION OPEN OF MODULE MLTYPE LET INCLUDE EXTERNAL EXCEPTION EOF END BAR AND ]
constr_name -> LPAREN . PREFIXOP RPAREN [ WITH VERBOSITY SEMISEMI RULE REQUIRE OPERATION OPEN OF MODULE MLTYPE LET INCLUDE EXTERNAL EXCEPTION EOF END BAR AND ]
-- On STAR shift to state 613
-- On PREFIXOP shift to state 615
-- On INFIXOP4 shift to state 617
-- On INFIXOP3 shift to state 619
-- On INFIXOP2 shift to state 621
-- On INFIXOP1 shift to state 623
-- On INFIXOP0 shift to state 625
-- On INFIXCONS shift to state 627
-- On EQ shift to state 629

State 613:
constr_name -> LPAREN STAR . RPAREN [ WITH VERBOSITY SEMISEMI RULE REQUIRE OPERATION OPEN OF MODULE MLTYPE LET INCLUDE EXTERNAL EXCEPTION EOF END BAR AND ]
-- On RPAREN shift to state 614

State 614:
constr_name -> LPAREN STAR RPAREN . [ WITH VERBOSITY SEMISEMI RULE REQUIRE OPERATION OPEN OF MODULE MLTYPE LET INCLUDE EXTERNAL EXCEPTION EOF END BAR AND ]
-- On WITH reduce production constr_name -> LPAREN STAR RPAREN
-- On VERBOSITY reduce production constr_name -> LPAREN STAR RPAREN
-- On SEMISEMI reduce production constr_name -> LPAREN STAR RPAREN
-- On RULE reduce production constr_name -> LPAREN STAR RPAREN
-- On REQUIRE reduce production constr_name -> LPAREN STAR RPAREN
-- On OPERATION reduce production constr_name -> LPAREN STAR RPAREN
-- On OPEN reduce production constr_name -> LPAREN STAR RPAREN
-- On OF reduce production constr_name -> LPAREN STAR RPAREN
-- On MODULE reduce production constr_name -> LPAREN STAR RPAREN
-- On MLTYPE reduce production constr_name -> LPAREN STAR RPAREN
-- On LET reduce production constr_name -> LPAREN STAR RPAREN
-- On INCLUDE reduce production constr_name -> LPAREN STAR RPAREN
-- On EXTERNAL reduce production constr_name -> LPAREN STAR RPAREN
-- On EXCEPTION reduce production constr_name -> LPAREN STAR RPAREN
-- On EOF reduce production constr_name -> LPAREN STAR RPAREN
-- On END reduce production constr_name -> LPAREN STAR RPAREN
-- On BAR reduce production constr_name -> LPAREN STAR RPAREN
-- On AND reduce production constr_name -> LPAREN STAR RPAREN

State 615:
constr_name -> LPAREN PREFIXOP . RPAREN [ WITH VERBOSITY SEMISEMI RULE REQUIRE OPERATION OPEN OF MODULE MLTYPE LET INCLUDE EXTERNAL EXCEPTION EOF END BAR AND ]
-- On RPAREN shift to state 616

State 616:
constr_name -> LPAREN PREFIXOP RPAREN . [ WITH VERBOSITY SEMISEMI RULE REQUIRE OPERATION OPEN OF MODULE MLTYPE LET INCLUDE EXTERNAL EXCEPTION EOF END BAR AND ]
-- On WITH reduce production constr_name -> LPAREN PREFIXOP RPAREN
-- On VERBOSITY reduce production constr_name -> LPAREN PREFIXOP RPAREN
-- On SEMISEMI reduce production constr_name -> LPAREN PREFIXOP RPAREN
-- On RULE reduce production constr_name -> LPAREN PREFIXOP RPAREN
-- On REQUIRE reduce production constr_name -> LPAREN PREFIXOP RPAREN
-- On OPERATION reduce production constr_name -> LPAREN PREFIXOP RPAREN
-- On OPEN reduce production constr_name -> LPAREN PREFIXOP RPAREN
-- On OF reduce production constr_name -> LPAREN PREFIXOP RPAREN
-- On MODULE reduce production constr_name -> LPAREN PREFIXOP RPAREN
-- On MLTYPE reduce production constr_name -> LPAREN PREFIXOP RPAREN
-- On LET reduce production constr_name -> LPAREN PREFIXOP RPAREN
-- On INCLUDE reduce production constr_name -> LPAREN PREFIXOP RPAREN
-- On EXTERNAL reduce production constr_name -> LPAREN PREFIXOP RPAREN
-- On EXCEPTION reduce production constr_name -> LPAREN PREFIXOP RPAREN
-- On EOF reduce production constr_name -> LPAREN PREFIXOP RPAREN
-- On END reduce production constr_name -> LPAREN PREFIXOP RPAREN
-- On BAR reduce production constr_name -> LPAREN PREFIXOP RPAREN
-- On AND reduce production constr_name -> LPAREN PREFIXOP RPAREN

State 617:
constr_name -> LPAREN INFIXOP4 . RPAREN [ WITH VERBOSITY SEMISEMI RULE REQUIRE OPERATION OPEN OF MODULE MLTYPE LET INCLUDE EXTERNAL EXCEPTION EOF END BAR AND ]
-- On RPAREN shift to state 618

State 618:
constr_name -> LPAREN INFIXOP4 RPAREN . [ WITH VERBOSITY SEMISEMI RULE REQUIRE OPERATION OPEN OF MODULE MLTYPE LET INCLUDE EXTERNAL EXCEPTION EOF END BAR AND ]
-- On WITH reduce production constr_name -> LPAREN INFIXOP4 RPAREN
-- On VERBOSITY reduce production constr_name -> LPAREN INFIXOP4 RPAREN
-- On SEMISEMI reduce production constr_name -> LPAREN INFIXOP4 RPAREN
-- On RULE reduce production constr_name -> LPAREN INFIXOP4 RPAREN
-- On REQUIRE reduce production constr_name -> LPAREN INFIXOP4 RPAREN
-- On OPERATION reduce production constr_name -> LPAREN INFIXOP4 RPAREN
-- On OPEN reduce production constr_name -> LPAREN INFIXOP4 RPAREN
-- On OF reduce production constr_name -> LPAREN INFIXOP4 RPAREN
-- On MODULE reduce production constr_name -> LPAREN INFIXOP4 RPAREN
-- On MLTYPE reduce production constr_name -> LPAREN INFIXOP4 RPAREN
-- On LET reduce production constr_name -> LPAREN INFIXOP4 RPAREN
-- On INCLUDE reduce production constr_name -> LPAREN INFIXOP4 RPAREN
-- On EXTERNAL reduce production constr_name -> LPAREN INFIXOP4 RPAREN
-- On EXCEPTION reduce production constr_name -> LPAREN INFIXOP4 RPAREN
-- On EOF reduce production constr_name -> LPAREN INFIXOP4 RPAREN
-- On END reduce production constr_name -> LPAREN INFIXOP4 RPAREN
-- On BAR reduce production constr_name -> LPAREN INFIXOP4 RPAREN
-- On AND reduce production constr_name -> LPAREN INFIXOP4 RPAREN

State 619:
constr_name -> LPAREN INFIXOP3 . RPAREN [ WITH VERBOSITY SEMISEMI RULE REQUIRE OPERATION OPEN OF MODULE MLTYPE LET INCLUDE EXTERNAL EXCEPTION EOF END BAR AND ]
-- On RPAREN shift to state 620

State 620:
constr_name -> LPAREN INFIXOP3 RPAREN . [ WITH VERBOSITY SEMISEMI RULE REQUIRE OPERATION OPEN OF MODULE MLTYPE LET INCLUDE EXTERNAL EXCEPTION EOF END BAR AND ]
-- On WITH reduce production constr_name -> LPAREN INFIXOP3 RPAREN
-- On VERBOSITY reduce production constr_name -> LPAREN INFIXOP3 RPAREN
-- On SEMISEMI reduce production constr_name -> LPAREN INFIXOP3 RPAREN
-- On RULE reduce production constr_name -> LPAREN INFIXOP3 RPAREN
-- On REQUIRE reduce production constr_name -> LPAREN INFIXOP3 RPAREN
-- On OPERATION reduce production constr_name -> LPAREN INFIXOP3 RPAREN
-- On OPEN reduce production constr_name -> LPAREN INFIXOP3 RPAREN
-- On OF reduce production constr_name -> LPAREN INFIXOP3 RPAREN
-- On MODULE reduce production constr_name -> LPAREN INFIXOP3 RPAREN
-- On MLTYPE reduce production constr_name -> LPAREN INFIXOP3 RPAREN
-- On LET reduce production constr_name -> LPAREN INFIXOP3 RPAREN
-- On INCLUDE reduce production constr_name -> LPAREN INFIXOP3 RPAREN
-- On EXTERNAL reduce production constr_name -> LPAREN INFIXOP3 RPAREN
-- On EXCEPTION reduce production constr_name -> LPAREN INFIXOP3 RPAREN
-- On EOF reduce production constr_name -> LPAREN INFIXOP3 RPAREN
-- On END reduce production constr_name -> LPAREN INFIXOP3 RPAREN
-- On BAR reduce production constr_name -> LPAREN INFIXOP3 RPAREN
-- On AND reduce production constr_name -> LPAREN INFIXOP3 RPAREN

State 621:
constr_name -> LPAREN INFIXOP2 . RPAREN [ WITH VERBOSITY SEMISEMI RULE REQUIRE OPERATION OPEN OF MODULE MLTYPE LET INCLUDE EXTERNAL EXCEPTION EOF END BAR AND ]
-- On RPAREN shift to state 622

State 622:
constr_name -> LPAREN INFIXOP2 RPAREN . [ WITH VERBOSITY SEMISEMI RULE REQUIRE OPERATION OPEN OF MODULE MLTYPE LET INCLUDE EXTERNAL EXCEPTION EOF END BAR AND ]
-- On WITH reduce production constr_name -> LPAREN INFIXOP2 RPAREN
-- On VERBOSITY reduce production constr_name -> LPAREN INFIXOP2 RPAREN
-- On SEMISEMI reduce production constr_name -> LPAREN INFIXOP2 RPAREN
-- On RULE reduce production constr_name -> LPAREN INFIXOP2 RPAREN
-- On REQUIRE reduce production constr_name -> LPAREN INFIXOP2 RPAREN
-- On OPERATION reduce production constr_name -> LPAREN INFIXOP2 RPAREN
-- On OPEN reduce production constr_name -> LPAREN INFIXOP2 RPAREN
-- On OF reduce production constr_name -> LPAREN INFIXOP2 RPAREN
-- On MODULE reduce production constr_name -> LPAREN INFIXOP2 RPAREN
-- On MLTYPE reduce production constr_name -> LPAREN INFIXOP2 RPAREN
-- On LET reduce production constr_name -> LPAREN INFIXOP2 RPAREN
-- On INCLUDE reduce production constr_name -> LPAREN INFIXOP2 RPAREN
-- On EXTERNAL reduce production constr_name -> LPAREN INFIXOP2 RPAREN
-- On EXCEPTION reduce production constr_name -> LPAREN INFIXOP2 RPAREN
-- On EOF reduce production constr_name -> LPAREN INFIXOP2 RPAREN
-- On END reduce production constr_name -> LPAREN INFIXOP2 RPAREN
-- On BAR reduce production constr_name -> LPAREN INFIXOP2 RPAREN
-- On AND reduce production constr_name -> LPAREN INFIXOP2 RPAREN

State 623:
constr_name -> LPAREN INFIXOP1 . RPAREN [ WITH VERBOSITY SEMISEMI RULE REQUIRE OPERATION OPEN OF MODULE MLTYPE LET INCLUDE EXTERNAL EXCEPTION EOF END BAR AND ]
-- On RPAREN shift to state 624

State 624:
constr_name -> LPAREN INFIXOP1 RPAREN . [ WITH VERBOSITY SEMISEMI RULE REQUIRE OPERATION OPEN OF MODULE MLTYPE LET INCLUDE EXTERNAL EXCEPTION EOF END BAR AND ]
-- On WITH reduce production constr_name -> LPAREN INFIXOP1 RPAREN
-- On VERBOSITY reduce production constr_name -> LPAREN INFIXOP1 RPAREN
-- On SEMISEMI reduce production constr_name -> LPAREN INFIXOP1 RPAREN
-- On RULE reduce production constr_name -> LPAREN INFIXOP1 RPAREN
-- On REQUIRE reduce production constr_name -> LPAREN INFIXOP1 RPAREN
-- On OPERATION reduce production constr_name -> LPAREN INFIXOP1 RPAREN
-- On OPEN reduce production constr_name -> LPAREN INFIXOP1 RPAREN
-- On OF reduce production constr_name -> LPAREN INFIXOP1 RPAREN
-- On MODULE reduce production constr_name -> LPAREN INFIXOP1 RPAREN
-- On MLTYPE reduce production constr_name -> LPAREN INFIXOP1 RPAREN
-- On LET reduce production constr_name -> LPAREN INFIXOP1 RPAREN
-- On INCLUDE reduce production constr_name -> LPAREN INFIXOP1 RPAREN
-- On EXTERNAL reduce production constr_name -> LPAREN INFIXOP1 RPAREN
-- On EXCEPTION reduce production constr_name -> LPAREN INFIXOP1 RPAREN
-- On EOF reduce production constr_name -> LPAREN INFIXOP1 RPAREN
-- On END reduce production constr_name -> LPAREN INFIXOP1 RPAREN
-- On BAR reduce production constr_name -> LPAREN INFIXOP1 RPAREN
-- On AND reduce production constr_name -> LPAREN INFIXOP1 RPAREN

State 625:
constr_name -> LPAREN INFIXOP0 . RPAREN [ WITH VERBOSITY SEMISEMI RULE REQUIRE OPERATION OPEN OF MODULE MLTYPE LET INCLUDE EXTERNAL EXCEPTION EOF END BAR AND ]
-- On RPAREN shift to state 626

State 626:
constr_name -> LPAREN INFIXOP0 RPAREN . [ WITH VERBOSITY SEMISEMI RULE REQUIRE OPERATION OPEN OF MODULE MLTYPE LET INCLUDE EXTERNAL EXCEPTION EOF END BAR AND ]
-- On WITH reduce production constr_name -> LPAREN INFIXOP0 RPAREN
-- On VERBOSITY reduce production constr_name -> LPAREN INFIXOP0 RPAREN
-- On SEMISEMI reduce production constr_name -> LPAREN INFIXOP0 RPAREN
-- On RULE reduce production constr_name -> LPAREN INFIXOP0 RPAREN
-- On REQUIRE reduce production constr_name -> LPAREN INFIXOP0 RPAREN
-- On OPERATION reduce production constr_name -> LPAREN INFIXOP0 RPAREN
-- On OPEN reduce production constr_name -> LPAREN INFIXOP0 RPAREN
-- On OF reduce production constr_name -> LPAREN INFIXOP0 RPAREN
-- On MODULE reduce production constr_name -> LPAREN INFIXOP0 RPAREN
-- On MLTYPE reduce production constr_name -> LPAREN INFIXOP0 RPAREN
-- On LET reduce production constr_name -> LPAREN INFIXOP0 RPAREN
-- On INCLUDE reduce production constr_name -> LPAREN INFIXOP0 RPAREN
-- On EXTERNAL reduce production constr_name -> LPAREN INFIXOP0 RPAREN
-- On EXCEPTION reduce production constr_name -> LPAREN INFIXOP0 RPAREN
-- On EOF reduce production constr_name -> LPAREN INFIXOP0 RPAREN
-- On END reduce production constr_name -> LPAREN INFIXOP0 RPAREN
-- On BAR reduce production constr_name -> LPAREN INFIXOP0 RPAREN
-- On AND reduce production constr_name -> LPAREN INFIXOP0 RPAREN

State 627:
constr_name -> LPAREN INFIXCONS . RPAREN [ WITH VERBOSITY SEMISEMI RULE REQUIRE OPERATION OPEN OF MODULE MLTYPE LET INCLUDE EXTERNAL EXCEPTION EOF END BAR AND ]
-- On RPAREN shift to state 628

State 628:
constr_name -> LPAREN INFIXCONS RPAREN . [ WITH VERBOSITY SEMISEMI RULE REQUIRE OPERATION OPEN OF MODULE MLTYPE LET INCLUDE EXTERNAL EXCEPTION EOF END BAR AND ]
-- On WITH reduce production constr_name -> LPAREN INFIXCONS RPAREN
-- On VERBOSITY reduce production constr_name -> LPAREN INFIXCONS RPAREN
-- On SEMISEMI reduce production constr_name -> LPAREN INFIXCONS RPAREN
-- On RULE reduce production constr_name -> LPAREN INFIXCONS RPAREN
-- On REQUIRE reduce production constr_name -> LPAREN INFIXCONS RPAREN
-- On OPERATION reduce production constr_name -> LPAREN INFIXCONS RPAREN
-- On OPEN reduce production constr_name -> LPAREN INFIXCONS RPAREN
-- On OF reduce production constr_name -> LPAREN INFIXCONS RPAREN
-- On MODULE reduce production constr_name -> LPAREN INFIXCONS RPAREN
-- On MLTYPE reduce production constr_name -> LPAREN INFIXCONS RPAREN
-- On LET reduce production constr_name -> LPAREN INFIXCONS RPAREN
-- On INCLUDE reduce production constr_name -> LPAREN INFIXCONS RPAREN
-- On EXTERNAL reduce production constr_name -> LPAREN INFIXCONS RPAREN
-- On EXCEPTION reduce production constr_name -> LPAREN INFIXCONS RPAREN
-- On EOF reduce production constr_name -> LPAREN INFIXCONS RPAREN
-- On END reduce production constr_name -> LPAREN INFIXCONS RPAREN
-- On BAR reduce production constr_name -> LPAREN INFIXCONS RPAREN
-- On AND reduce production constr_name -> LPAREN INFIXCONS RPAREN

State 629:
constr_name -> LPAREN EQ . RPAREN [ WITH VERBOSITY SEMISEMI RULE REQUIRE OPERATION OPEN OF MODULE MLTYPE LET INCLUDE EXTERNAL EXCEPTION EOF END BAR AND ]
-- On RPAREN shift to state 630

State 630:
constr_name -> LPAREN EQ RPAREN . [ WITH VERBOSITY SEMISEMI RULE REQUIRE OPERATION OPEN OF MODULE MLTYPE LET INCLUDE EXTERNAL EXCEPTION EOF END BAR AND ]
-- On WITH reduce production constr_name -> LPAREN EQ RPAREN
-- On VERBOSITY reduce production constr_name -> LPAREN EQ RPAREN
-- On SEMISEMI reduce production constr_name -> LPAREN EQ RPAREN
-- On RULE reduce production constr_name -> LPAREN EQ RPAREN
-- On REQUIRE reduce production constr_name -> LPAREN EQ RPAREN
-- On OPERATION reduce production constr_name -> LPAREN EQ RPAREN
-- On OPEN reduce production constr_name -> LPAREN EQ RPAREN
-- On OF reduce production constr_name -> LPAREN EQ RPAREN
-- On MODULE reduce production constr_name -> LPAREN EQ RPAREN
-- On MLTYPE reduce production constr_name -> LPAREN EQ RPAREN
-- On LET reduce production constr_name -> LPAREN EQ RPAREN
-- On INCLUDE reduce production constr_name -> LPAREN EQ RPAREN
-- On EXTERNAL reduce production constr_name -> LPAREN EQ RPAREN
-- On EXCEPTION reduce production constr_name -> LPAREN EQ RPAREN
-- On EOF reduce production constr_name -> LPAREN EQ RPAREN
-- On END reduce production constr_name -> LPAREN EQ RPAREN
-- On BAR reduce production constr_name -> LPAREN EQ RPAREN
-- On AND reduce production constr_name -> LPAREN EQ RPAREN

State 631:
loption(separated_nonempty_list(BAR,mlty_constructor)) -> separated_nonempty_list(BAR,mlty_constructor) . [ WITH VERBOSITY SEMISEMI RULE REQUIRE OPERATION OPEN MODULE MLTYPE LET INCLUDE EXTERNAL EXCEPTION EOF END AND ]
-- On WITH reduce production loption(separated_nonempty_list(BAR,mlty_constructor)) -> separated_nonempty_list(BAR,mlty_constructor)
-- On VERBOSITY reduce production loption(separated_nonempty_list(BAR,mlty_constructor)) -> separated_nonempty_list(BAR,mlty_constructor)
-- On SEMISEMI reduce production loption(separated_nonempty_list(BAR,mlty_constructor)) -> separated_nonempty_list(BAR,mlty_constructor)
-- On RULE reduce production loption(separated_nonempty_list(BAR,mlty_constructor)) -> separated_nonempty_list(BAR,mlty_constructor)
-- On REQUIRE reduce production loption(separated_nonempty_list(BAR,mlty_constructor)) -> separated_nonempty_list(BAR,mlty_constructor)
-- On OPERATION reduce production loption(separated_nonempty_list(BAR,mlty_constructor)) -> separated_nonempty_list(BAR,mlty_constructor)
-- On OPEN reduce production loption(separated_nonempty_list(BAR,mlty_constructor)) -> separated_nonempty_list(BAR,mlty_constructor)
-- On MODULE reduce production loption(separated_nonempty_list(BAR,mlty_constructor)) -> separated_nonempty_list(BAR,mlty_constructor)
-- On MLTYPE reduce production loption(separated_nonempty_list(BAR,mlty_constructor)) -> separated_nonempty_list(BAR,mlty_constructor)
-- On LET reduce production loption(separated_nonempty_list(BAR,mlty_constructor)) -> separated_nonempty_list(BAR,mlty_constructor)
-- On INCLUDE reduce production loption(separated_nonempty_list(BAR,mlty_constructor)) -> separated_nonempty_list(BAR,mlty_constructor)
-- On EXTERNAL reduce production loption(separated_nonempty_list(BAR,mlty_constructor)) -> separated_nonempty_list(BAR,mlty_constructor)
-- On EXCEPTION reduce production loption(separated_nonempty_list(BAR,mlty_constructor)) -> separated_nonempty_list(BAR,mlty_constructor)
-- On EOF reduce production loption(separated_nonempty_list(BAR,mlty_constructor)) -> separated_nonempty_list(BAR,mlty_constructor)
-- On END reduce production loption(separated_nonempty_list(BAR,mlty_constructor)) -> separated_nonempty_list(BAR,mlty_constructor)
-- On AND reduce production loption(separated_nonempty_list(BAR,mlty_constructor)) -> separated_nonempty_list(BAR,mlty_constructor)

State 632:
separated_nonempty_list(BAR,mlty_constructor) -> mlty_constructor . [ WITH VERBOSITY SEMISEMI RULE REQUIRE OPERATION OPEN MODULE MLTYPE LET INCLUDE EXTERNAL EXCEPTION EOF END AND ]
separated_nonempty_list(BAR,mlty_constructor) -> mlty_constructor . BAR separated_nonempty_list(BAR,mlty_constructor) [ WITH VERBOSITY SEMISEMI RULE REQUIRE OPERATION OPEN MODULE MLTYPE LET INCLUDE EXTERNAL EXCEPTION EOF END AND ]
-- On BAR shift to state 633
-- On WITH reduce production separated_nonempty_list(BAR,mlty_constructor) -> mlty_constructor
-- On VERBOSITY reduce production separated_nonempty_list(BAR,mlty_constructor) -> mlty_constructor
-- On SEMISEMI reduce production separated_nonempty_list(BAR,mlty_constructor) -> mlty_constructor
-- On RULE reduce production separated_nonempty_list(BAR,mlty_constructor) -> mlty_constructor
-- On REQUIRE reduce production separated_nonempty_list(BAR,mlty_constructor) -> mlty_constructor
-- On OPERATION reduce production separated_nonempty_list(BAR,mlty_constructor) -> mlty_constructor
-- On OPEN reduce production separated_nonempty_list(BAR,mlty_constructor) -> mlty_constructor
-- On MODULE reduce production separated_nonempty_list(BAR,mlty_constructor) -> mlty_constructor
-- On MLTYPE reduce production separated_nonempty_list(BAR,mlty_constructor) -> mlty_constructor
-- On LET reduce production separated_nonempty_list(BAR,mlty_constructor) -> mlty_constructor
-- On INCLUDE reduce production separated_nonempty_list(BAR,mlty_constructor) -> mlty_constructor
-- On EXTERNAL reduce production separated_nonempty_list(BAR,mlty_constructor) -> mlty_constructor
-- On EXCEPTION reduce production separated_nonempty_list(BAR,mlty_constructor) -> mlty_constructor
-- On EOF reduce production separated_nonempty_list(BAR,mlty_constructor) -> mlty_constructor
-- On END reduce production separated_nonempty_list(BAR,mlty_constructor) -> mlty_constructor
-- On AND reduce production separated_nonempty_list(BAR,mlty_constructor) -> mlty_constructor

State 633:
separated_nonempty_list(BAR,mlty_constructor) -> mlty_constructor BAR . separated_nonempty_list(BAR,mlty_constructor) [ WITH VERBOSITY SEMISEMI RULE REQUIRE OPERATION OPEN MODULE MLTYPE LET INCLUDE EXTERNAL EXCEPTION EOF END AND ]
-- On NAME shift to state 611
-- On LPAREN shift to state 612
-- On separated_nonempty_list(BAR,mlty_constructor) shift to state 634
-- On mlty_constructor shift to state 632
-- On constr_name shift to state 635

State 634:
separated_nonempty_list(BAR,mlty_constructor) -> mlty_constructor BAR separated_nonempty_list(BAR,mlty_constructor) . [ WITH VERBOSITY SEMISEMI RULE REQUIRE OPERATION OPEN MODULE MLTYPE LET INCLUDE EXTERNAL EXCEPTION EOF END AND ]
-- On WITH reduce production separated_nonempty_list(BAR,mlty_constructor) -> mlty_constructor BAR separated_nonempty_list(BAR,mlty_constructor)
-- On VERBOSITY reduce production separated_nonempty_list(BAR,mlty_constructor) -> mlty_constructor BAR separated_nonempty_list(BAR,mlty_constructor)
-- On SEMISEMI reduce production separated_nonempty_list(BAR,mlty_constructor) -> mlty_constructor BAR separated_nonempty_list(BAR,mlty_constructor)
-- On RULE reduce production separated_nonempty_list(BAR,mlty_constructor) -> mlty_constructor BAR separated_nonempty_list(BAR,mlty_constructor)
-- On REQUIRE reduce production separated_nonempty_list(BAR,mlty_constructor) -> mlty_constructor BAR separated_nonempty_list(BAR,mlty_constructor)
-- On OPERATION reduce production separated_nonempty_list(BAR,mlty_constructor) -> mlty_constructor BAR separated_nonempty_list(BAR,mlty_constructor)
-- On OPEN reduce production separated_nonempty_list(BAR,mlty_constructor) -> mlty_constructor BAR separated_nonempty_list(BAR,mlty_constructor)
-- On MODULE reduce production separated_nonempty_list(BAR,mlty_constructor) -> mlty_constructor BAR separated_nonempty_list(BAR,mlty_constructor)
-- On MLTYPE reduce production separated_nonempty_list(BAR,mlty_constructor) -> mlty_constructor BAR separated_nonempty_list(BAR,mlty_constructor)
-- On LET reduce production separated_nonempty_list(BAR,mlty_constructor) -> mlty_constructor BAR separated_nonempty_list(BAR,mlty_constructor)
-- On INCLUDE reduce production separated_nonempty_list(BAR,mlty_constructor) -> mlty_constructor BAR separated_nonempty_list(BAR,mlty_constructor)
-- On EXTERNAL reduce production separated_nonempty_list(BAR,mlty_constructor) -> mlty_constructor BAR separated_nonempty_list(BAR,mlty_constructor)
-- On EXCEPTION reduce production separated_nonempty_list(BAR,mlty_constructor) -> mlty_constructor BAR separated_nonempty_list(BAR,mlty_constructor)
-- On EOF reduce production separated_nonempty_list(BAR,mlty_constructor) -> mlty_constructor BAR separated_nonempty_list(BAR,mlty_constructor)
-- On END reduce production separated_nonempty_list(BAR,mlty_constructor) -> mlty_constructor BAR separated_nonempty_list(BAR,mlty_constructor)
-- On AND reduce production separated_nonempty_list(BAR,mlty_constructor) -> mlty_constructor BAR separated_nonempty_list(BAR,mlty_constructor)

State 635:
mlty_constructor -> constr_name . OF mlty [ WITH VERBOSITY SEMISEMI RULE REQUIRE OPERATION OPEN MODULE MLTYPE LET INCLUDE EXTERNAL EXCEPTION EOF END BAR AND ]
mlty_constructor -> constr_name . [ WITH VERBOSITY SEMISEMI RULE REQUIRE OPERATION OPEN MODULE MLTYPE LET INCLUDE EXTERNAL EXCEPTION EOF END BAR AND ]
-- On OF shift to state 636
-- On WITH reduce production mlty_constructor -> constr_name
-- On VERBOSITY reduce production mlty_constructor -> constr_name
-- On SEMISEMI reduce production mlty_constructor -> constr_name
-- On RULE reduce production mlty_constructor -> constr_name
-- On REQUIRE reduce production mlty_constructor -> constr_name
-- On OPERATION reduce production mlty_constructor -> constr_name
-- On OPEN reduce production mlty_constructor -> constr_name
-- On MODULE reduce production mlty_constructor -> constr_name
-- On MLTYPE reduce production mlty_constructor -> constr_name
-- On LET reduce production mlty_constructor -> constr_name
-- On INCLUDE reduce production mlty_constructor -> constr_name
-- On EXTERNAL reduce production mlty_constructor -> constr_name
-- On EXCEPTION reduce production mlty_constructor -> constr_name
-- On EOF reduce production mlty_constructor -> constr_name
-- On END reduce production mlty_constructor -> constr_name
-- On BAR reduce production mlty_constructor -> constr_name
-- On AND reduce production mlty_constructor -> constr_name

State 636:
mlty_constructor -> constr_name OF . mlty [ WITH VERBOSITY SEMISEMI RULE REQUIRE OPERATION OPEN MODULE MLTYPE LET INCLUDE EXTERNAL EXCEPTION EOF END BAR AND ]
-- On UNDERSCORE shift to state 55
-- On REF shift to state 56
-- On NAME shift to state 57
-- On MLUNIT shift to state 58
-- On MLSTRING shift to state 59
-- On MLJUDGEMENT shift to state 60
-- On MLDERIVATION shift to state 61
-- On MLBOUNDARY shift to state 62
-- On LPAREN shift to state 63
-- On simple_mlty_ shift to state 82
-- On separated_nonempty_list(STAR,app_mlty) shift to state 83
-- On prod_mlty_ shift to state 84
-- On prod_mlty shift to state 85
-- On module_path shift to state 87
-- On module_name shift to state 45
-- On mlty_ shift to state 100
-- On mlty shift to state 637
-- On ml_name shift to state 102
-- On mark_location(prod_mlty_) shift to state 104
-- On mark_location(mlty_) shift to state 105
-- On mark_location(app_mlty_) shift to state 106
-- On app_mlty_ shift to state 107
-- On app_mlty shift to state 108

State 637:
mlty_constructor -> constr_name OF mlty . [ WITH VERBOSITY SEMISEMI RULE REQUIRE OPERATION OPEN MODULE MLTYPE LET INCLUDE EXTERNAL EXCEPTION EOF END BAR AND ]
-- On WITH reduce production mlty_constructor -> constr_name OF mlty
-- On VERBOSITY reduce production mlty_constructor -> constr_name OF mlty
-- On SEMISEMI reduce production mlty_constructor -> constr_name OF mlty
-- On RULE reduce production mlty_constructor -> constr_name OF mlty
-- On REQUIRE reduce production mlty_constructor -> constr_name OF mlty
-- On OPERATION reduce production mlty_constructor -> constr_name OF mlty
-- On OPEN reduce production mlty_constructor -> constr_name OF mlty
-- On MODULE reduce production mlty_constructor -> constr_name OF mlty
-- On MLTYPE reduce production mlty_constructor -> constr_name OF mlty
-- On LET reduce production mlty_constructor -> constr_name OF mlty
-- On INCLUDE reduce production mlty_constructor -> constr_name OF mlty
-- On EXTERNAL reduce production mlty_constructor -> constr_name OF mlty
-- On EXCEPTION reduce production mlty_constructor -> constr_name OF mlty
-- On EOF reduce production mlty_constructor -> constr_name OF mlty
-- On END reduce production mlty_constructor -> constr_name OF mlty
-- On BAR reduce production mlty_constructor -> constr_name OF mlty
-- On AND reduce production mlty_constructor -> constr_name OF mlty

State 638:
mlty_def_body -> BAR loption(separated_nonempty_list(BAR,mlty_constructor)) . [ WITH VERBOSITY SEMISEMI RULE REQUIRE OPERATION OPEN MODULE MLTYPE LET INCLUDE EXTERNAL EXCEPTION EOF END AND ]
-- On WITH reduce production mlty_def_body -> BAR loption(separated_nonempty_list(BAR,mlty_constructor))
-- On VERBOSITY reduce production mlty_def_body -> BAR loption(separated_nonempty_list(BAR,mlty_constructor))
-- On SEMISEMI reduce production mlty_def_body -> BAR loption(separated_nonempty_list(BAR,mlty_constructor))
-- On RULE reduce production mlty_def_body -> BAR loption(separated_nonempty_list(BAR,mlty_constructor))
-- On REQUIRE reduce production mlty_def_body -> BAR loption(separated_nonempty_list(BAR,mlty_constructor))
-- On OPERATION reduce production mlty_def_body -> BAR loption(separated_nonempty_list(BAR,mlty_constructor))
-- On OPEN reduce production mlty_def_body -> BAR loption(separated_nonempty_list(BAR,mlty_constructor))
-- On MODULE reduce production mlty_def_body -> BAR loption(separated_nonempty_list(BAR,mlty_constructor))
-- On MLTYPE reduce production mlty_def_body -> BAR loption(separated_nonempty_list(BAR,mlty_constructor))
-- On LET reduce production mlty_def_body -> BAR loption(separated_nonempty_list(BAR,mlty_constructor))
-- On INCLUDE reduce production mlty_def_body -> BAR loption(separated_nonempty_list(BAR,mlty_constructor))
-- On EXTERNAL reduce production mlty_def_body -> BAR loption(separated_nonempty_list(BAR,mlty_constructor))
-- On EXCEPTION reduce production mlty_def_body -> BAR loption(separated_nonempty_list(BAR,mlty_constructor))
-- On EOF reduce production mlty_def_body -> BAR loption(separated_nonempty_list(BAR,mlty_constructor))
-- On END reduce production mlty_def_body -> BAR loption(separated_nonempty_list(BAR,mlty_constructor))
-- On AND reduce production mlty_def_body -> BAR loption(separated_nonempty_list(BAR,mlty_constructor))

State 639:
mlty_def -> ml_name list(opt_name(ml_name)) EQ mlty_def_body . [ WITH VERBOSITY SEMISEMI RULE REQUIRE OPERATION OPEN MODULE MLTYPE LET INCLUDE EXTERNAL EXCEPTION EOF END AND ]
-- On WITH reduce production mlty_def -> ml_name list(opt_name(ml_name)) EQ mlty_def_body
-- On VERBOSITY reduce production mlty_def -> ml_name list(opt_name(ml_name)) EQ mlty_def_body
-- On SEMISEMI reduce production mlty_def -> ml_name list(opt_name(ml_name)) EQ mlty_def_body
-- On RULE reduce production mlty_def -> ml_name list(opt_name(ml_name)) EQ mlty_def_body
-- On REQUIRE reduce production mlty_def -> ml_name list(opt_name(ml_name)) EQ mlty_def_body
-- On OPERATION reduce production mlty_def -> ml_name list(opt_name(ml_name)) EQ mlty_def_body
-- On OPEN reduce production mlty_def -> ml_name list(opt_name(ml_name)) EQ mlty_def_body
-- On MODULE reduce production mlty_def -> ml_name list(opt_name(ml_name)) EQ mlty_def_body
-- On MLTYPE reduce production mlty_def -> ml_name list(opt_name(ml_name)) EQ mlty_def_body
-- On LET reduce production mlty_def -> ml_name list(opt_name(ml_name)) EQ mlty_def_body
-- On INCLUDE reduce production mlty_def -> ml_name list(opt_name(ml_name)) EQ mlty_def_body
-- On EXTERNAL reduce production mlty_def -> ml_name list(opt_name(ml_name)) EQ mlty_def_body
-- On EXCEPTION reduce production mlty_def -> ml_name list(opt_name(ml_name)) EQ mlty_def_body
-- On EOF reduce production mlty_def -> ml_name list(opt_name(ml_name)) EQ mlty_def_body
-- On END reduce production mlty_def -> ml_name list(opt_name(ml_name)) EQ mlty_def_body
-- On AND reduce production mlty_def -> ml_name list(opt_name(ml_name)) EQ mlty_def_body

State 640:
mlty_def_body -> mlty_constructor . BAR loption(separated_nonempty_list(BAR,mlty_constructor)) [ WITH VERBOSITY SEMISEMI RULE REQUIRE OPERATION OPEN MODULE MLTYPE LET INCLUDE EXTERNAL EXCEPTION EOF END AND ]
-- On BAR shift to state 641

State 641:
mlty_def_body -> mlty_constructor BAR . loption(separated_nonempty_list(BAR,mlty_constructor)) [ WITH VERBOSITY SEMISEMI RULE REQUIRE OPERATION OPEN MODULE MLTYPE LET INCLUDE EXTERNAL EXCEPTION EOF END AND ]
-- On NAME shift to state 611
-- On LPAREN shift to state 612
-- On separated_nonempty_list(BAR,mlty_constructor) shift to state 631
-- On mlty_constructor shift to state 632
-- On loption(separated_nonempty_list(BAR,mlty_constructor)) shift to state 642
-- On constr_name shift to state 635
-- On WITH reduce production loption(separated_nonempty_list(BAR,mlty_constructor)) ->
-- On VERBOSITY reduce production loption(separated_nonempty_list(BAR,mlty_constructor)) ->
-- On SEMISEMI reduce production loption(separated_nonempty_list(BAR,mlty_constructor)) ->
-- On RULE reduce production loption(separated_nonempty_list(BAR,mlty_constructor)) ->
-- On REQUIRE reduce production loption(separated_nonempty_list(BAR,mlty_constructor)) ->
-- On OPERATION reduce production loption(separated_nonempty_list(BAR,mlty_constructor)) ->
-- On OPEN reduce production loption(separated_nonempty_list(BAR,mlty_constructor)) ->
-- On MODULE reduce production loption(separated_nonempty_list(BAR,mlty_constructor)) ->
-- On MLTYPE reduce production loption(separated_nonempty_list(BAR,mlty_constructor)) ->
-- On LET reduce production loption(separated_nonempty_list(BAR,mlty_constructor)) ->
-- On INCLUDE reduce production loption(separated_nonempty_list(BAR,mlty_constructor)) ->
-- On EXTERNAL reduce production loption(separated_nonempty_list(BAR,mlty_constructor)) ->
-- On EXCEPTION reduce production loption(separated_nonempty_list(BAR,mlty_constructor)) ->
-- On EOF reduce production loption(separated_nonempty_list(BAR,mlty_constructor)) ->
-- On END reduce production loption(separated_nonempty_list(BAR,mlty_constructor)) ->
-- On AND reduce production loption(separated_nonempty_list(BAR,mlty_constructor)) ->

State 642:
mlty_def_body -> mlty_constructor BAR loption(separated_nonempty_list(BAR,mlty_constructor)) . [ WITH VERBOSITY SEMISEMI RULE REQUIRE OPERATION OPEN MODULE MLTYPE LET INCLUDE EXTERNAL EXCEPTION EOF END AND ]
-- On WITH reduce production mlty_def_body -> mlty_constructor BAR loption(separated_nonempty_list(BAR,mlty_constructor))
-- On VERBOSITY reduce production mlty_def_body -> mlty_constructor BAR loption(separated_nonempty_list(BAR,mlty_constructor))
-- On SEMISEMI reduce production mlty_def_body -> mlty_constructor BAR loption(separated_nonempty_list(BAR,mlty_constructor))
-- On RULE reduce production mlty_def_body -> mlty_constructor BAR loption(separated_nonempty_list(BAR,mlty_constructor))
-- On REQUIRE reduce production mlty_def_body -> mlty_constructor BAR loption(separated_nonempty_list(BAR,mlty_constructor))
-- On OPERATION reduce production mlty_def_body -> mlty_constructor BAR loption(separated_nonempty_list(BAR,mlty_constructor))
-- On OPEN reduce production mlty_def_body -> mlty_constructor BAR loption(separated_nonempty_list(BAR,mlty_constructor))
-- On MODULE reduce production mlty_def_body -> mlty_constructor BAR loption(separated_nonempty_list(BAR,mlty_constructor))
-- On MLTYPE reduce production mlty_def_body -> mlty_constructor BAR loption(separated_nonempty_list(BAR,mlty_constructor))
-- On LET reduce production mlty_def_body -> mlty_constructor BAR loption(separated_nonempty_list(BAR,mlty_constructor))
-- On INCLUDE reduce production mlty_def_body -> mlty_constructor BAR loption(separated_nonempty_list(BAR,mlty_constructor))
-- On EXTERNAL reduce production mlty_def_body -> mlty_constructor BAR loption(separated_nonempty_list(BAR,mlty_constructor))
-- On EXCEPTION reduce production mlty_def_body -> mlty_constructor BAR loption(separated_nonempty_list(BAR,mlty_constructor))
-- On EOF reduce production mlty_def_body -> mlty_constructor BAR loption(separated_nonempty_list(BAR,mlty_constructor))
-- On END reduce production mlty_def_body -> mlty_constructor BAR loption(separated_nonempty_list(BAR,mlty_constructor))
-- On AND reduce production mlty_def_body -> mlty_constructor BAR loption(separated_nonempty_list(BAR,mlty_constructor))

State 643:
mlty_def_body -> mlty . [ WITH VERBOSITY SEMISEMI RULE REQUIRE OPERATION OPEN MODULE MLTYPE LET INCLUDE EXTERNAL EXCEPTION EOF END AND ]
-- On WITH reduce production mlty_def_body -> mlty
-- On VERBOSITY reduce production mlty_def_body -> mlty
-- On SEMISEMI reduce production mlty_def_body -> mlty
-- On RULE reduce production mlty_def_body -> mlty
-- On REQUIRE reduce production mlty_def_body -> mlty
-- On OPERATION reduce production mlty_def_body -> mlty
-- On OPEN reduce production mlty_def_body -> mlty
-- On MODULE reduce production mlty_def_body -> mlty
-- On MLTYPE reduce production mlty_def_body -> mlty
-- On LET reduce production mlty_def_body -> mlty
-- On INCLUDE reduce production mlty_def_body -> mlty
-- On EXTERNAL reduce production mlty_def_body -> mlty
-- On EXCEPTION reduce production mlty_def_body -> mlty
-- On EOF reduce production mlty_def_body -> mlty
-- On END reduce production mlty_def_body -> mlty
-- On AND reduce production mlty_def_body -> mlty

State 644:
top_command_ -> MLTYPE mlty_defs . [ WITH VERBOSITY SEMISEMI RULE REQUIRE OPERATION OPEN MODULE MLTYPE LET INCLUDE EXTERNAL EXCEPTION EOF END ]
-- On WITH reduce production top_command_ -> MLTYPE mlty_defs
-- On VERBOSITY reduce production top_command_ -> MLTYPE mlty_defs
-- On SEMISEMI reduce production top_command_ -> MLTYPE mlty_defs
-- On RULE reduce production top_command_ -> MLTYPE mlty_defs
-- On REQUIRE reduce production top_command_ -> MLTYPE mlty_defs
-- On OPERATION reduce production top_command_ -> MLTYPE mlty_defs
-- On OPEN reduce production top_command_ -> MLTYPE mlty_defs
-- On MODULE reduce production top_command_ -> MLTYPE mlty_defs
-- On MLTYPE reduce production top_command_ -> MLTYPE mlty_defs
-- On LET reduce production top_command_ -> MLTYPE mlty_defs
-- On INCLUDE reduce production top_command_ -> MLTYPE mlty_defs
-- On EXTERNAL reduce production top_command_ -> MLTYPE mlty_defs
-- On EXCEPTION reduce production top_command_ -> MLTYPE mlty_defs
-- On EOF reduce production top_command_ -> MLTYPE mlty_defs
-- On END reduce production top_command_ -> MLTYPE mlty_defs

State 645:
mlty_def -> ml_name . list(opt_name(ml_name)) EQ mlty_def_body [ WITH VERBOSITY SEMISEMI RULE REQUIRE OPERATION OPEN MODULE MLTYPE LET INCLUDE EXTERNAL EXCEPTION EOF END AND ]
top_command_ -> MLTYPE ml_name . list(opt_name(ml_name)) [ WITH VERBOSITY SEMISEMI RULE REQUIRE OPERATION OPEN MODULE MLTYPE LET INCLUDE EXTERNAL EXCEPTION EOF END ]
-- On UNDERSCORE shift to state 117
-- On NAME shift to state 118
-- On LPAREN shift to state 89
-- On opt_name(ml_name) shift to state 586
-- On ml_name shift to state 121
-- On list(opt_name(ml_name)) shift to state 646
-- On WITH reduce production list(opt_name(ml_name)) ->
-- On VERBOSITY reduce production list(opt_name(ml_name)) ->
-- On SEMISEMI reduce production list(opt_name(ml_name)) ->
-- On RULE reduce production list(opt_name(ml_name)) ->
-- On REQUIRE reduce production list(opt_name(ml_name)) ->
-- On OPERATION reduce production list(opt_name(ml_name)) ->
-- On OPEN reduce production list(opt_name(ml_name)) ->
-- On MODULE reduce production list(opt_name(ml_name)) ->
-- On MLTYPE reduce production list(opt_name(ml_name)) ->
-- On LET reduce production list(opt_name(ml_name)) ->
-- On INCLUDE reduce production list(opt_name(ml_name)) ->
-- On EXTERNAL reduce production list(opt_name(ml_name)) ->
-- On EXCEPTION reduce production list(opt_name(ml_name)) ->
-- On EQ reduce production list(opt_name(ml_name)) ->
-- On EOF reduce production list(opt_name(ml_name)) ->
-- On END reduce production list(opt_name(ml_name)) ->

State 646:
mlty_def -> ml_name list(opt_name(ml_name)) . EQ mlty_def_body [ WITH VERBOSITY SEMISEMI RULE REQUIRE OPERATION OPEN MODULE MLTYPE LET INCLUDE EXTERNAL EXCEPTION EOF END AND ]
top_command_ -> MLTYPE ml_name list(opt_name(ml_name)) . [ WITH VERBOSITY SEMISEMI RULE REQUIRE OPERATION OPEN MODULE MLTYPE LET INCLUDE EXTERNAL EXCEPTION EOF END ]
-- On EQ shift to state 589
-- On WITH reduce production top_command_ -> MLTYPE ml_name list(opt_name(ml_name))
-- On VERBOSITY reduce production top_command_ -> MLTYPE ml_name list(opt_name(ml_name))
-- On SEMISEMI reduce production top_command_ -> MLTYPE ml_name list(opt_name(ml_name))
-- On RULE reduce production top_command_ -> MLTYPE ml_name list(opt_name(ml_name))
-- On REQUIRE reduce production top_command_ -> MLTYPE ml_name list(opt_name(ml_name))
-- On OPERATION reduce production top_command_ -> MLTYPE ml_name list(opt_name(ml_name))
-- On OPEN reduce production top_command_ -> MLTYPE ml_name list(opt_name(ml_name))
-- On MODULE reduce production top_command_ -> MLTYPE ml_name list(opt_name(ml_name))
-- On MLTYPE reduce production top_command_ -> MLTYPE ml_name list(opt_name(ml_name))
-- On LET reduce production top_command_ -> MLTYPE ml_name list(opt_name(ml_name))
-- On INCLUDE reduce production top_command_ -> MLTYPE ml_name list(opt_name(ml_name))
-- On EXTERNAL reduce production top_command_ -> MLTYPE ml_name list(opt_name(ml_name))
-- On EXCEPTION reduce production top_command_ -> MLTYPE ml_name list(opt_name(ml_name))
-- On EOF reduce production top_command_ -> MLTYPE ml_name list(opt_name(ml_name))
-- On END reduce production top_command_ -> MLTYPE ml_name list(opt_name(ml_name))

State 647:
term_ -> LET . separated_nonempty_list(AND,let_clause) IN term [ SEMISEMI EOF END ]
term_ -> LET . REC separated_nonempty_list(AND,recursive_clause) IN term [ SEMISEMI EOF END ]
top_command_ -> LET . separated_nonempty_list(AND,let_clause) [ WITH VERBOSITY SEMISEMI RULE REQUIRE OPERATION OPEN MODULE MLTYPE LET INCLUDE EXTERNAL EXCEPTION EOF END ]
top_command_ -> LET . REC separated_nonempty_list(AND,recursive_clause) [ WITH VERBOSITY SEMISEMI RULE REQUIRE OPERATION OPEN MODULE MLTYPE LET INCLUDE EXTERNAL EXCEPTION EOF END ]
-- On UNDERSCORE shift to state 53
-- On REC shift to state 648
-- On NAME shift to state 118
-- On LPAREN shift to state 443
-- On LBRACK shift to state 446
-- On separated_nonempty_list(AND,let_clause) shift to state 650
-- On ml_name shift to state 452
-- On mark_location(let_pattern_) shift to state 461
-- On let_pattern_ shift to state 462
-- On let_pattern shift to state 463
-- On let_clause shift to state 467

State 648:
term_ -> LET REC . separated_nonempty_list(AND,recursive_clause) IN term [ SEMISEMI EOF END ]
top_command_ -> LET REC . separated_nonempty_list(AND,recursive_clause) [ WITH VERBOSITY SEMISEMI RULE REQUIRE OPERATION OPEN MODULE MLTYPE LET INCLUDE EXTERNAL EXCEPTION EOF END ]
-- On NAME shift to state 118
-- On LPAREN shift to state 89
-- On separated_nonempty_list(AND,recursive_clause) shift to state 649
-- On recursive_clause shift to state 432
-- On ml_name shift to state 435

State 649:
term_ -> LET REC separated_nonempty_list(AND,recursive_clause) . IN term [ SEMISEMI EOF END ]
top_command_ -> LET REC separated_nonempty_list(AND,recursive_clause) . [ WITH VERBOSITY SEMISEMI RULE REQUIRE OPERATION OPEN MODULE MLTYPE LET INCLUDE EXTERNAL EXCEPTION EOF END ]
-- On IN shift to state 430
-- On WITH reduce production top_command_ -> LET REC separated_nonempty_list(AND,recursive_clause)
-- On VERBOSITY reduce production top_command_ -> LET REC separated_nonempty_list(AND,recursive_clause)
-- On SEMISEMI reduce production top_command_ -> LET REC separated_nonempty_list(AND,recursive_clause)
-- On RULE reduce production top_command_ -> LET REC separated_nonempty_list(AND,recursive_clause)
-- On REQUIRE reduce production top_command_ -> LET REC separated_nonempty_list(AND,recursive_clause)
-- On OPERATION reduce production top_command_ -> LET REC separated_nonempty_list(AND,recursive_clause)
-- On OPEN reduce production top_command_ -> LET REC separated_nonempty_list(AND,recursive_clause)
-- On MODULE reduce production top_command_ -> LET REC separated_nonempty_list(AND,recursive_clause)
-- On MLTYPE reduce production top_command_ -> LET REC separated_nonempty_list(AND,recursive_clause)
-- On LET reduce production top_command_ -> LET REC separated_nonempty_list(AND,recursive_clause)
-- On INCLUDE reduce production top_command_ -> LET REC separated_nonempty_list(AND,recursive_clause)
-- On EXTERNAL reduce production top_command_ -> LET REC separated_nonempty_list(AND,recursive_clause)
-- On EXCEPTION reduce production top_command_ -> LET REC separated_nonempty_list(AND,recursive_clause)
-- On EOF reduce production top_command_ -> LET REC separated_nonempty_list(AND,recursive_clause)
-- On END reduce production top_command_ -> LET REC separated_nonempty_list(AND,recursive_clause)

State 650:
term_ -> LET separated_nonempty_list(AND,let_clause) . IN term [ SEMISEMI EOF END ]
top_command_ -> LET separated_nonempty_list(AND,let_clause) . [ WITH VERBOSITY SEMISEMI RULE REQUIRE OPERATION OPEN MODULE MLTYPE LET INCLUDE EXTERNAL EXCEPTION EOF END ]
-- On IN shift to state 450
-- On WITH reduce production top_command_ -> LET separated_nonempty_list(AND,let_clause)
-- On VERBOSITY reduce production top_command_ -> LET separated_nonempty_list(AND,let_clause)
-- On SEMISEMI reduce production top_command_ -> LET separated_nonempty_list(AND,let_clause)
-- On RULE reduce production top_command_ -> LET separated_nonempty_list(AND,let_clause)
-- On REQUIRE reduce production top_command_ -> LET separated_nonempty_list(AND,let_clause)
-- On OPERATION reduce production top_command_ -> LET separated_nonempty_list(AND,let_clause)
-- On OPEN reduce production top_command_ -> LET separated_nonempty_list(AND,let_clause)
-- On MODULE reduce production top_command_ -> LET separated_nonempty_list(AND,let_clause)
-- On MLTYPE reduce production top_command_ -> LET separated_nonempty_list(AND,let_clause)
-- On LET reduce production top_command_ -> LET separated_nonempty_list(AND,let_clause)
-- On INCLUDE reduce production top_command_ -> LET separated_nonempty_list(AND,let_clause)
-- On EXTERNAL reduce production top_command_ -> LET separated_nonempty_list(AND,let_clause)
-- On EXCEPTION reduce production top_command_ -> LET separated_nonempty_list(AND,let_clause)
-- On EOF reduce production top_command_ -> LET separated_nonempty_list(AND,let_clause)
-- On END reduce production top_command_ -> LET separated_nonempty_list(AND,let_clause)

State 651:
top_command_ -> INCLUDE . module_name [ WITH VERBOSITY SEMISEMI RULE REQUIRE OPERATION OPEN MODULE MLTYPE LET INCLUDE EXTERNAL EXCEPTION EOF END ]
top_command_ -> INCLUDE . module_path PERIOD module_name [ WITH VERBOSITY SEMISEMI RULE REQUIRE OPERATION OPEN MODULE MLTYPE LET INCLUDE EXTERNAL EXCEPTION EOF END ]
-- On NAME shift to state 555
-- On module_path shift to state 652
-- On module_name shift to state 655

State 652:
module_path -> module_path . PERIOD module_name [ PERIOD ]
top_command_ -> INCLUDE module_path . PERIOD module_name [ WITH VERBOSITY SEMISEMI RULE REQUIRE OPERATION OPEN MODULE MLTYPE LET INCLUDE EXTERNAL EXCEPTION EOF END ]
-- On PERIOD shift to state 653

State 653:
module_path -> module_path PERIOD . module_name [ PERIOD ]
top_command_ -> INCLUDE module_path PERIOD . module_name [ WITH VERBOSITY SEMISEMI RULE REQUIRE OPERATION OPEN MODULE MLTYPE LET INCLUDE EXTERNAL EXCEPTION EOF END ]
-- On NAME shift to state 555
-- On module_name shift to state 654

State 654:
module_path -> module_path PERIOD module_name . [ PERIOD ]
top_command_ -> INCLUDE module_path PERIOD module_name . [ WITH VERBOSITY SEMISEMI RULE REQUIRE OPERATION OPEN MODULE MLTYPE LET INCLUDE EXTERNAL EXCEPTION EOF END ]
-- On WITH reduce production top_command_ -> INCLUDE module_path PERIOD module_name
-- On VERBOSITY reduce production top_command_ -> INCLUDE module_path PERIOD module_name
-- On SEMISEMI reduce production top_command_ -> INCLUDE module_path PERIOD module_name
-- On RULE reduce production top_command_ -> INCLUDE module_path PERIOD module_name
-- On REQUIRE reduce production top_command_ -> INCLUDE module_path PERIOD module_name
-- On PERIOD reduce production module_path -> module_path PERIOD module_name
-- On OPERATION reduce production top_command_ -> INCLUDE module_path PERIOD module_name
-- On OPEN reduce production top_command_ -> INCLUDE module_path PERIOD module_name
-- On MODULE reduce production top_command_ -> INCLUDE module_path PERIOD module_name
-- On MLTYPE reduce production top_command_ -> INCLUDE module_path PERIOD module_name
-- On LET reduce production top_command_ -> INCLUDE module_path PERIOD module_name
-- On INCLUDE reduce production top_command_ -> INCLUDE module_path PERIOD module_name
-- On EXTERNAL reduce production top_command_ -> INCLUDE module_path PERIOD module_name
-- On EXCEPTION reduce production top_command_ -> INCLUDE module_path PERIOD module_name
-- On EOF reduce production top_command_ -> INCLUDE module_path PERIOD module_name
-- On END reduce production top_command_ -> INCLUDE module_path PERIOD module_name

State 655:
module_path -> module_name . [ PERIOD ]
top_command_ -> INCLUDE module_name . [ WITH VERBOSITY SEMISEMI RULE REQUIRE OPERATION OPEN MODULE MLTYPE LET INCLUDE EXTERNAL EXCEPTION EOF END ]
-- On WITH reduce production top_command_ -> INCLUDE module_name
-- On VERBOSITY reduce production top_command_ -> INCLUDE module_name
-- On SEMISEMI reduce production top_command_ -> INCLUDE module_name
-- On RULE reduce production top_command_ -> INCLUDE module_name
-- On REQUIRE reduce production top_command_ -> INCLUDE module_name
-- On PERIOD reduce production module_path -> module_name
-- On OPERATION reduce production top_command_ -> INCLUDE module_name
-- On OPEN reduce production top_command_ -> INCLUDE module_name
-- On MODULE reduce production top_command_ -> INCLUDE module_name
-- On MLTYPE reduce production top_command_ -> INCLUDE module_name
-- On LET reduce production top_command_ -> INCLUDE module_name
-- On INCLUDE reduce production top_command_ -> INCLUDE module_name
-- On EXTERNAL reduce production top_command_ -> INCLUDE module_name
-- On EXCEPTION reduce production top_command_ -> INCLUDE module_name
-- On EOF reduce production top_command_ -> INCLUDE module_name
-- On END reduce production top_command_ -> INCLUDE module_name

State 656:
top_command_ -> EXTERNAL . ml_name COLON ml_schema EQ QUOTED_STRING [ WITH VERBOSITY SEMISEMI RULE REQUIRE OPERATION OPEN MODULE MLTYPE LET INCLUDE EXTERNAL EXCEPTION EOF END ]
-- On NAME shift to state 118
-- On LPAREN shift to state 89
-- On ml_name shift to state 657

State 657:
top_command_ -> EXTERNAL ml_name . COLON ml_schema EQ QUOTED_STRING [ WITH VERBOSITY SEMISEMI RULE REQUIRE OPERATION OPEN MODULE MLTYPE LET INCLUDE EXTERNAL EXCEPTION EOF END ]
-- On COLON shift to state 658

State 658:
top_command_ -> EXTERNAL ml_name COLON . ml_schema EQ QUOTED_STRING [ WITH VERBOSITY SEMISEMI RULE REQUIRE OPERATION OPEN MODULE MLTYPE LET INCLUDE EXTERNAL EXCEPTION EOF END ]
-- On UNDERSCORE shift to state 55
-- On REF shift to state 56
-- On NAME shift to state 57
-- On MLUNIT shift to state 58
-- On MLSTRING shift to state 59
-- On MLJUDGEMENT shift to state 60
-- On MLFORALL shift to state 116
-- On MLDERIVATION shift to state 61
-- On MLBOUNDARY shift to state 62
-- On LPAREN shift to state 63
-- On simple_mlty_ shift to state 82
-- On separated_nonempty_list(STAR,app_mlty) shift to state 83
-- On prod_mlty_ shift to state 84
-- On prod_mlty shift to state 85
-- On module_path shift to state 87
-- On module_name shift to state 45
-- On mlty_ shift to state 100
-- On mlty shift to state 125
-- On ml_schema_ shift to state 126
-- On ml_schema shift to state 659
-- On ml_name shift to state 102
-- On mark_location(prod_mlty_) shift to state 104
-- On mark_location(mlty_) shift to state 105
-- On mark_location(ml_schema_) shift to state 128
-- On mark_location(app_mlty_) shift to state 106
-- On app_mlty_ shift to state 107
-- On app_mlty shift to state 108

State 659:
top_command_ -> EXTERNAL ml_name COLON ml_schema . EQ QUOTED_STRING [ WITH VERBOSITY SEMISEMI RULE REQUIRE OPERATION OPEN MODULE MLTYPE LET INCLUDE EXTERNAL EXCEPTION EOF END ]
-- On EQ shift to state 660

State 660:
top_command_ -> EXTERNAL ml_name COLON ml_schema EQ . QUOTED_STRING [ WITH VERBOSITY SEMISEMI RULE REQUIRE OPERATION OPEN MODULE MLTYPE LET INCLUDE EXTERNAL EXCEPTION EOF END ]
-- On QUOTED_STRING shift to state 661

State 661:
top_command_ -> EXTERNAL ml_name COLON ml_schema EQ QUOTED_STRING . [ WITH VERBOSITY SEMISEMI RULE REQUIRE OPERATION OPEN MODULE MLTYPE LET INCLUDE EXTERNAL EXCEPTION EOF END ]
-- On WITH reduce production top_command_ -> EXTERNAL ml_name COLON ml_schema EQ QUOTED_STRING
-- On VERBOSITY reduce production top_command_ -> EXTERNAL ml_name COLON ml_schema EQ QUOTED_STRING
-- On SEMISEMI reduce production top_command_ -> EXTERNAL ml_name COLON ml_schema EQ QUOTED_STRING
-- On RULE reduce production top_command_ -> EXTERNAL ml_name COLON ml_schema EQ QUOTED_STRING
-- On REQUIRE reduce production top_command_ -> EXTERNAL ml_name COLON ml_schema EQ QUOTED_STRING
-- On OPERATION reduce production top_command_ -> EXTERNAL ml_name COLON ml_schema EQ QUOTED_STRING
-- On OPEN reduce production top_command_ -> EXTERNAL ml_name COLON ml_schema EQ QUOTED_STRING
-- On MODULE reduce production top_command_ -> EXTERNAL ml_name COLON ml_schema EQ QUOTED_STRING
-- On MLTYPE reduce production top_command_ -> EXTERNAL ml_name COLON ml_schema EQ QUOTED_STRING
-- On LET reduce production top_command_ -> EXTERNAL ml_name COLON ml_schema EQ QUOTED_STRING
-- On INCLUDE reduce production top_command_ -> EXTERNAL ml_name COLON ml_schema EQ QUOTED_STRING
-- On EXTERNAL reduce production top_command_ -> EXTERNAL ml_name COLON ml_schema EQ QUOTED_STRING
-- On EXCEPTION reduce production top_command_ -> EXTERNAL ml_name COLON ml_schema EQ QUOTED_STRING
-- On EOF reduce production top_command_ -> EXTERNAL ml_name COLON ml_schema EQ QUOTED_STRING
-- On END reduce production top_command_ -> EXTERNAL ml_name COLON ml_schema EQ QUOTED_STRING

State 662:
top_command_ -> EXCEPTION . exc_name [ WITH VERBOSITY SEMISEMI RULE REQUIRE OPERATION OPEN MODULE MLTYPE LET INCLUDE EXTERNAL EXCEPTION EOF END ]
top_command_ -> EXCEPTION . exc_name OF mlty [ WITH VERBOSITY SEMISEMI RULE REQUIRE OPERATION OPEN MODULE MLTYPE LET INCLUDE EXTERNAL EXCEPTION EOF END ]
-- On NAME shift to state 663
-- On exc_name shift to state 664

State 663:
exc_name -> NAME . [ WITH VERBOSITY SEMISEMI RULE REQUIRE OPERATION OPEN OF MODULE MLTYPE LET INCLUDE EXTERNAL EXCEPTION EOF END ]
-- On WITH reduce production exc_name -> NAME
-- On VERBOSITY reduce production exc_name -> NAME
-- On SEMISEMI reduce production exc_name -> NAME
-- On RULE reduce production exc_name -> NAME
-- On REQUIRE reduce production exc_name -> NAME
-- On OPERATION reduce production exc_name -> NAME
-- On OPEN reduce production exc_name -> NAME
-- On OF reduce production exc_name -> NAME
-- On MODULE reduce production exc_name -> NAME
-- On MLTYPE reduce production exc_name -> NAME
-- On LET reduce production exc_name -> NAME
-- On INCLUDE reduce production exc_name -> NAME
-- On EXTERNAL reduce production exc_name -> NAME
-- On EXCEPTION reduce production exc_name -> NAME
-- On EOF reduce production exc_name -> NAME
-- On END reduce production exc_name -> NAME

State 664:
top_command_ -> EXCEPTION exc_name . [ WITH VERBOSITY SEMISEMI RULE REQUIRE OPERATION OPEN MODULE MLTYPE LET INCLUDE EXTERNAL EXCEPTION EOF END ]
top_command_ -> EXCEPTION exc_name . OF mlty [ WITH VERBOSITY SEMISEMI RULE REQUIRE OPERATION OPEN MODULE MLTYPE LET INCLUDE EXTERNAL EXCEPTION EOF END ]
-- On OF shift to state 665
-- On WITH reduce production top_command_ -> EXCEPTION exc_name
-- On VERBOSITY reduce production top_command_ -> EXCEPTION exc_name
-- On SEMISEMI reduce production top_command_ -> EXCEPTION exc_name
-- On RULE reduce production top_command_ -> EXCEPTION exc_name
-- On REQUIRE reduce production top_command_ -> EXCEPTION exc_name
-- On OPERATION reduce production top_command_ -> EXCEPTION exc_name
-- On OPEN reduce production top_command_ -> EXCEPTION exc_name
-- On MODULE reduce production top_command_ -> EXCEPTION exc_name
-- On MLTYPE reduce production top_command_ -> EXCEPTION exc_name
-- On LET reduce production top_command_ -> EXCEPTION exc_name
-- On INCLUDE reduce production top_command_ -> EXCEPTION exc_name
-- On EXTERNAL reduce production top_command_ -> EXCEPTION exc_name
-- On EXCEPTION reduce production top_command_ -> EXCEPTION exc_name
-- On EOF reduce production top_command_ -> EXCEPTION exc_name
-- On END reduce production top_command_ -> EXCEPTION exc_name

State 665:
top_command_ -> EXCEPTION exc_name OF . mlty [ WITH VERBOSITY SEMISEMI RULE REQUIRE OPERATION OPEN MODULE MLTYPE LET INCLUDE EXTERNAL EXCEPTION EOF END ]
-- On UNDERSCORE shift to state 55
-- On REF shift to state 56
-- On NAME shift to state 57
-- On MLUNIT shift to state 58
-- On MLSTRING shift to state 59
-- On MLJUDGEMENT shift to state 60
-- On MLDERIVATION shift to state 61
-- On MLBOUNDARY shift to state 62
-- On LPAREN shift to state 63
-- On simple_mlty_ shift to state 82
-- On separated_nonempty_list(STAR,app_mlty) shift to state 83
-- On prod_mlty_ shift to state 84
-- On prod_mlty shift to state 85
-- On module_path shift to state 87
-- On module_name shift to state 45
-- On mlty_ shift to state 100
-- On mlty shift to state 666
-- On ml_name shift to state 102
-- On mark_location(prod_mlty_) shift to state 104
-- On mark_location(mlty_) shift to state 105
-- On mark_location(app_mlty_) shift to state 106
-- On app_mlty_ shift to state 107
-- On app_mlty shift to state 108

State 666:
top_command_ -> EXCEPTION exc_name OF mlty . [ WITH VERBOSITY SEMISEMI RULE REQUIRE OPERATION OPEN MODULE MLTYPE LET INCLUDE EXTERNAL EXCEPTION EOF END ]
-- On WITH reduce production top_command_ -> EXCEPTION exc_name OF mlty
-- On VERBOSITY reduce production top_command_ -> EXCEPTION exc_name OF mlty
-- On SEMISEMI reduce production top_command_ -> EXCEPTION exc_name OF mlty
-- On RULE reduce production top_command_ -> EXCEPTION exc_name OF mlty
-- On REQUIRE reduce production top_command_ -> EXCEPTION exc_name OF mlty
-- On OPERATION reduce production top_command_ -> EXCEPTION exc_name OF mlty
-- On OPEN reduce production top_command_ -> EXCEPTION exc_name OF mlty
-- On MODULE reduce production top_command_ -> EXCEPTION exc_name OF mlty
-- On MLTYPE reduce production top_command_ -> EXCEPTION exc_name OF mlty
-- On LET reduce production top_command_ -> EXCEPTION exc_name OF mlty
-- On INCLUDE reduce production top_command_ -> EXCEPTION exc_name OF mlty
-- On EXTERNAL reduce production top_command_ -> EXCEPTION exc_name OF mlty
-- On EXCEPTION reduce production top_command_ -> EXCEPTION exc_name OF mlty
-- On EOF reduce production top_command_ -> EXCEPTION exc_name OF mlty
-- On END reduce production top_command_ -> EXCEPTION exc_name OF mlty

State 667:
mark_location(top_term_) -> top_term_ . [ SEMISEMI EOF END ]
-- On SEMISEMI reduce production mark_location(top_term_) -> top_term_
-- On EOF reduce production mark_location(top_term_) -> top_term_
-- On END reduce production mark_location(top_term_) -> top_term_

State 668:
ml_module -> top_term . [ EOF END ]
ml_module -> top_term . SEMISEMI ml_module [ EOF END ]
-- On SEMISEMI shift to state 669
-- On EOF reduce production ml_module -> top_term
-- On END reduce production ml_module -> top_term

State 669:
ml_module -> top_term SEMISEMI . ml_module [ EOF END ]
-- On WITH shift to state 1
-- On VERBOSITY shift to state 536
-- On TRY shift to state 3
-- On RULE shift to state 538
-- On REQUIRE shift to state 554
-- On REF shift to state 4
-- On RAISE shift to state 12
-- On QUOTED_STRING shift to state 5
-- On QQMARK shift to state 15
-- On PREFIXOP shift to state 6
-- On OPERATION shift to state 560
-- On OPEN shift to state 569
-- On OCCURS shift to state 18
-- On NATURAL shift to state 7
-- On NAME shift to state 8
-- On MODULE shift to state 574
-- On MLTYPE shift to state 578
-- On MATCH shift to state 51
-- On LPAREN shift to state 9
-- On LET shift to state 647
-- On LBRACK shift to state 13
-- On LBRACE shift to state 156
-- On INCLUDE shift to state 651
-- On HANDLER shift to state 209
-- On FUN shift to state 330
-- On FRESH shift to state 338
-- On EXTERNAL shift to state 656
-- On EXCEPTION shift to state 662
-- On DERIVE shift to state 342
-- On CONVERT shift to state 130
-- On CONTEXT shift to state 136
-- On CONGRUENCE shift to state 138
-- On BANG shift to state 19
-- On ABSTRACT shift to state 144
-- On ty_term_ shift to state 357
-- On tt_name shift to state 20
-- On top_term_ shift to state 667
-- On top_term shift to state 668
-- On top_command_ shift to state 670
-- On top_command shift to state 671
-- On term_ shift to state 358
-- On term shift to state 674
-- On substitution_term_ shift to state 147
-- On substitution_term shift to state 148
-- On simple_term_ shift to state 21
-- On prefix_term_ shift to state 134
-- On nonempty_list(maybe_typed_binder) shift to state 167
-- On module_path shift to state 24
-- On module_name shift to state 45
-- On ml_module shift to state 687
-- On maybe_typed_binder shift to state 168
-- On mark_location(top_term_) shift to state 676
-- On mark_location(top_command_) shift to state 677
-- On mark_location(term_) shift to state 361
-- On mark_location(substitution_term_) shift to state 135
-- On mark_location(binop_term_) shift to state 171
-- On mark_location(app_term_) shift to state 152
-- On binop_term_ shift to state 172
-- On binop_term shift to state 362
-- On app_term_ shift to state 481
-- On app_term shift to state 365
-- On any_name shift to state 47
-- On abstraction shift to state 205
-- On EOF reduce production ml_module ->
-- On END reduce production ml_module ->

State 670:
mark_location(top_command_) -> top_command_ . [ WITH VERBOSITY SEMISEMI RULE REQUIRE OPERATION OPEN MODULE MLTYPE LET INCLUDE EXTERNAL EXCEPTION EOF END ]
-- On WITH reduce production mark_location(top_command_) -> top_command_
-- On VERBOSITY reduce production mark_location(top_command_) -> top_command_
-- On SEMISEMI reduce production mark_location(top_command_) -> top_command_
-- On RULE reduce production mark_location(top_command_) -> top_command_
-- On REQUIRE reduce production mark_location(top_command_) -> top_command_
-- On OPERATION reduce production mark_location(top_command_) -> top_command_
-- On OPEN reduce production mark_location(top_command_) -> top_command_
-- On MODULE reduce production mark_location(top_command_) -> top_command_
-- On MLTYPE reduce production mark_location(top_command_) -> top_command_
-- On LET reduce production mark_location(top_command_) -> top_command_
-- On INCLUDE reduce production mark_location(top_command_) -> top_command_
-- On EXTERNAL reduce production mark_location(top_command_) -> top_command_
-- On EXCEPTION reduce production mark_location(top_command_) -> top_command_
-- On EOF reduce production mark_location(top_command_) -> top_command_
-- On END reduce production mark_location(top_command_) -> top_command_

State 671:
ml_module -> top_command . SEMISEMI ml_module [ EOF END ]
ml_module -> top_command . ml_module_top [ EOF END ]
-- On WITH shift to state 672
-- On VERBOSITY shift to state 536
-- On SEMISEMI shift to state 673
-- On RULE shift to state 538
-- On REQUIRE shift to state 554
-- On OPERATION shift to state 560
-- On OPEN shift to state 569
-- On MODULE shift to state 574
-- On MLTYPE shift to state 578
-- On LET shift to state 678
-- On INCLUDE shift to state 651
-- On EXTERNAL shift to state 656
-- On EXCEPTION shift to state 662
-- On top_command_ shift to state 670
-- On top_command shift to state 682
-- On ml_module_top shift to state 686
-- On mark_location(top_command_) shift to state 677
-- On EOF reduce production ml_module_top ->
-- On END reduce production ml_module_top ->

State 672:
top_command_ -> WITH . top_operation_cases END [ WITH VERBOSITY SEMISEMI RULE REQUIRE OPERATION OPEN MODULE MLTYPE LET INCLUDE EXTERNAL EXCEPTION EOF END ]
-- On OPERATION shift to state 514
-- On BAR shift to state 527
-- On top_operation_cases shift to state 532
-- On top_operation_case shift to state 528
-- On separated_nonempty_list(BAR,top_operation_case) shift to state 534
-- On loption(separated_nonempty_list(BAR,top_operation_case)) shift to state 535
-- On END reduce production loption(separated_nonempty_list(BAR,top_operation_case)) ->

State 673:
ml_module -> top_command SEMISEMI . ml_module [ EOF END ]
-- On WITH shift to state 1
-- On VERBOSITY shift to state 536
-- On TRY shift to state 3
-- On RULE shift to state 538
-- On REQUIRE shift to state 554
-- On REF shift to state 4
-- On RAISE shift to state 12
-- On QUOTED_STRING shift to state 5
-- On QQMARK shift to state 15
-- On PREFIXOP shift to state 6
-- On OPERATION shift to state 560
-- On OPEN shift to state 569
-- On OCCURS shift to state 18
-- On NATURAL shift to state 7
-- On NAME shift to state 8
-- On MODULE shift to state 574
-- On MLTYPE shift to state 578
-- On MATCH shift to state 51
-- On LPAREN shift to state 9
-- On LET shift to state 647
-- On LBRACK shift to state 13
-- On LBRACE shift to state 156
-- On INCLUDE shift to state 651
-- On HANDLER shift to state 209
-- On FUN shift to state 330
-- On FRESH shift to state 338
-- On EXTERNAL shift to state 656
-- On EXCEPTION shift to state 662
-- On DERIVE shift to state 342
-- On CONVERT shift to state 130
-- On CONTEXT shift to state 136
-- On CONGRUENCE shift to state 138
-- On BANG shift to state 19
-- On ABSTRACT shift to state 144
-- On ty_term_ shift to state 357
-- On tt_name shift to state 20
-- On top_term_ shift to state 667
-- On top_term shift to state 668
-- On top_command_ shift to state 670
-- On top_command shift to state 671
-- On term_ shift to state 358
-- On term shift to state 674
-- On substitution_term_ shift to state 147
-- On substitution_term shift to state 148
-- On simple_term_ shift to state 21
-- On prefix_term_ shift to state 134
-- On nonempty_list(maybe_typed_binder) shift to state 167
-- On module_path shift to state 24
-- On module_name shift to state 45
-- On ml_module shift to state 675
-- On maybe_typed_binder shift to state 168
-- On mark_location(top_term_) shift to state 676
-- On mark_location(top_command_) shift to state 677
-- On mark_location(term_) shift to state 361
-- On mark_location(substitution_term_) shift to state 135
-- On mark_location(binop_term_) shift to state 171
-- On mark_location(app_term_) shift to state 152
-- On binop_term_ shift to state 172
-- On binop_term shift to state 362
-- On app_term_ shift to state 481
-- On app_term shift to state 365
-- On any_name shift to state 47
-- On abstraction shift to state 205
-- On EOF reduce production ml_module ->
-- On END reduce production ml_module ->

State 674:
top_term_ -> term . [ SEMISEMI EOF END ]
-- On SEMISEMI reduce production top_term_ -> term
-- On EOF reduce production top_term_ -> term
-- On END reduce production top_term_ -> term

State 675:
ml_module -> top_command SEMISEMI ml_module . [ EOF END ]
-- On EOF reduce production ml_module -> top_command SEMISEMI ml_module
-- On END reduce production ml_module -> top_command SEMISEMI ml_module

State 676:
top_term -> mark_location(top_term_) . [ SEMISEMI EOF END ]
-- On SEMISEMI reduce production top_term -> mark_location(top_term_)
-- On EOF reduce production top_term -> mark_location(top_term_)
-- On END reduce production top_term -> mark_location(top_term_)

State 677:
top_command -> mark_location(top_command_) . [ WITH VERBOSITY SEMISEMI RULE REQUIRE OPERATION OPEN MODULE MLTYPE LET INCLUDE EXTERNAL EXCEPTION EOF END ]
-- On WITH reduce production top_command -> mark_location(top_command_)
-- On VERBOSITY reduce production top_command -> mark_location(top_command_)
-- On SEMISEMI reduce production top_command -> mark_location(top_command_)
-- On RULE reduce production top_command -> mark_location(top_command_)
-- On REQUIRE reduce production top_command -> mark_location(top_command_)
-- On OPERATION reduce production top_command -> mark_location(top_command_)
-- On OPEN reduce production top_command -> mark_location(top_command_)
-- On MODULE reduce production top_command -> mark_location(top_command_)
-- On MLTYPE reduce production top_command -> mark_location(top_command_)
-- On LET reduce production top_command -> mark_location(top_command_)
-- On INCLUDE reduce production top_command -> mark_location(top_command_)
-- On EXTERNAL reduce production top_command -> mark_location(top_command_)
-- On EXCEPTION reduce production top_command -> mark_location(top_command_)
-- On EOF reduce production top_command -> mark_location(top_command_)
-- On END reduce production top_command -> mark_location(top_command_)

State 678:
top_command_ -> LET . separated_nonempty_list(AND,let_clause) [ WITH VERBOSITY SEMISEMI RULE REQUIRE OPERATION OPEN MODULE MLTYPE LET INCLUDE EXTERNAL EXCEPTION EOF END ]
top_command_ -> LET . REC separated_nonempty_list(AND,recursive_clause) [ WITH VERBOSITY SEMISEMI RULE REQUIRE OPERATION OPEN MODULE MLTYPE LET INCLUDE EXTERNAL EXCEPTION EOF END ]
-- On UNDERSCORE shift to state 53
-- On REC shift to state 679
-- On NAME shift to state 118
-- On LPAREN shift to state 443
-- On LBRACK shift to state 446
-- On separated_nonempty_list(AND,let_clause) shift to state 681
-- On ml_name shift to state 452
-- On mark_location(let_pattern_) shift to state 461
-- On let_pattern_ shift to state 462
-- On let_pattern shift to state 463
-- On let_clause shift to state 467

State 679:
top_command_ -> LET REC . separated_nonempty_list(AND,recursive_clause) [ WITH VERBOSITY SEMISEMI RULE REQUIRE OPERATION OPEN MODULE MLTYPE LET INCLUDE EXTERNAL EXCEPTION EOF END ]
-- On NAME shift to state 118
-- On LPAREN shift to state 89
-- On separated_nonempty_list(AND,recursive_clause) shift to state 680
-- On recursive_clause shift to state 432
-- On ml_name shift to state 435

State 680:
top_command_ -> LET REC separated_nonempty_list(AND,recursive_clause) . [ WITH VERBOSITY SEMISEMI RULE REQUIRE OPERATION OPEN MODULE MLTYPE LET INCLUDE EXTERNAL EXCEPTION EOF END ]
-- On WITH reduce production top_command_ -> LET REC separated_nonempty_list(AND,recursive_clause)
-- On VERBOSITY reduce production top_command_ -> LET REC separated_nonempty_list(AND,recursive_clause)
-- On SEMISEMI reduce production top_command_ -> LET REC separated_nonempty_list(AND,recursive_clause)
-- On RULE reduce production top_command_ -> LET REC separated_nonempty_list(AND,recursive_clause)
-- On REQUIRE reduce production top_command_ -> LET REC separated_nonempty_list(AND,recursive_clause)
-- On OPERATION reduce production top_command_ -> LET REC separated_nonempty_list(AND,recursive_clause)
-- On OPEN reduce production top_command_ -> LET REC separated_nonempty_list(AND,recursive_clause)
-- On MODULE reduce production top_command_ -> LET REC separated_nonempty_list(AND,recursive_clause)
-- On MLTYPE reduce production top_command_ -> LET REC separated_nonempty_list(AND,recursive_clause)
-- On LET reduce production top_command_ -> LET REC separated_nonempty_list(AND,recursive_clause)
-- On INCLUDE reduce production top_command_ -> LET REC separated_nonempty_list(AND,recursive_clause)
-- On EXTERNAL reduce production top_command_ -> LET REC separated_nonempty_list(AND,recursive_clause)
-- On EXCEPTION reduce production top_command_ -> LET REC separated_nonempty_list(AND,recursive_clause)
-- On EOF reduce production top_command_ -> LET REC separated_nonempty_list(AND,recursive_clause)
-- On END reduce production top_command_ -> LET REC separated_nonempty_list(AND,recursive_clause)

State 681:
top_command_ -> LET separated_nonempty_list(AND,let_clause) . [ WITH VERBOSITY SEMISEMI RULE REQUIRE OPERATION OPEN MODULE MLTYPE LET INCLUDE EXTERNAL EXCEPTION EOF END ]
-- On WITH reduce production top_command_ -> LET separated_nonempty_list(AND,let_clause)
-- On VERBOSITY reduce production top_command_ -> LET separated_nonempty_list(AND,let_clause)
-- On SEMISEMI reduce production top_command_ -> LET separated_nonempty_list(AND,let_clause)
-- On RULE reduce production top_command_ -> LET separated_nonempty_list(AND,let_clause)
-- On REQUIRE reduce production top_command_ -> LET separated_nonempty_list(AND,let_clause)
-- On OPERATION reduce production top_command_ -> LET separated_nonempty_list(AND,let_clause)
-- On OPEN reduce production top_command_ -> LET separated_nonempty_list(AND,let_clause)
-- On MODULE reduce production top_command_ -> LET separated_nonempty_list(AND,let_clause)
-- On MLTYPE reduce production top_command_ -> LET separated_nonempty_list(AND,let_clause)
-- On LET reduce production top_command_ -> LET separated_nonempty_list(AND,let_clause)
-- On INCLUDE reduce production top_command_ -> LET separated_nonempty_list(AND,let_clause)
-- On EXTERNAL reduce production top_command_ -> LET separated_nonempty_list(AND,let_clause)
-- On EXCEPTION reduce production top_command_ -> LET separated_nonempty_list(AND,let_clause)
-- On EOF reduce production top_command_ -> LET separated_nonempty_list(AND,let_clause)
-- On END reduce production top_command_ -> LET separated_nonempty_list(AND,let_clause)

State 682:
ml_module_top -> top_command . SEMISEMI ml_module [ EOF END ]
ml_module_top -> top_command . ml_module_top [ EOF END ]
-- On WITH shift to state 672
-- On VERBOSITY shift to state 536
-- On SEMISEMI shift to state 683
-- On RULE shift to state 538
-- On REQUIRE shift to state 554
-- On OPERATION shift to state 560
-- On OPEN shift to state 569
-- On MODULE shift to state 574
-- On MLTYPE shift to state 578
-- On LET shift to state 678
-- On INCLUDE shift to state 651
-- On EXTERNAL shift to state 656
-- On EXCEPTION shift to state 662
-- On top_command_ shift to state 670
-- On top_command shift to state 682
-- On ml_module_top shift to state 685
-- On mark_location(top_command_) shift to state 677
-- On EOF reduce production ml_module_top ->
-- On END reduce production ml_module_top ->

State 683:
ml_module_top -> top_command SEMISEMI . ml_module [ EOF END ]
-- On WITH shift to state 1
-- On VERBOSITY shift to state 536
-- On TRY shift to state 3
-- On RULE shift to state 538
-- On REQUIRE shift to state 554
-- On REF shift to state 4
-- On RAISE shift to state 12
-- On QUOTED_STRING shift to state 5
-- On QQMARK shift to state 15
-- On PREFIXOP shift to state 6
-- On OPERATION shift to state 560
-- On OPEN shift to state 569
-- On OCCURS shift to state 18
-- On NATURAL shift to state 7
-- On NAME shift to state 8
-- On MODULE shift to state 574
-- On MLTYPE shift to state 578
-- On MATCH shift to state 51
-- On LPAREN shift to state 9
-- On LET shift to state 647
-- On LBRACK shift to state 13
-- On LBRACE shift to state 156
-- On INCLUDE shift to state 651
-- On HANDLER shift to state 209
-- On FUN shift to state 330
-- On FRESH shift to state 338
-- On EXTERNAL shift to state 656
-- On EXCEPTION shift to state 662
-- On DERIVE shift to state 342
-- On CONVERT shift to state 130
-- On CONTEXT shift to state 136
-- On CONGRUENCE shift to state 138
-- On BANG shift to state 19
-- On ABSTRACT shift to state 144
-- On ty_term_ shift to state 357
-- On tt_name shift to state 20
-- On top_term_ shift to state 667
-- On top_term shift to state 668
-- On top_command_ shift to state 670
-- On top_command shift to state 671
-- On term_ shift to state 358
-- On term shift to state 674
-- On substitution_term_ shift to state 147
-- On substitution_term shift to state 148
-- On simple_term_ shift to state 21
-- On prefix_term_ shift to state 134
-- On nonempty_list(maybe_typed_binder) shift to state 167
-- On module_path shift to state 24
-- On module_name shift to state 45
-- On ml_module shift to state 684
-- On maybe_typed_binder shift to state 168
-- On mark_location(top_term_) shift to state 676
-- On mark_location(top_command_) shift to state 677
-- On mark_location(term_) shift to state 361
-- On mark_location(substitution_term_) shift to state 135
-- On mark_location(binop_term_) shift to state 171
-- On mark_location(app_term_) shift to state 152
-- On binop_term_ shift to state 172
-- On binop_term shift to state 362
-- On app_term_ shift to state 481
-- On app_term shift to state 365
-- On any_name shift to state 47
-- On abstraction shift to state 205
-- On EOF reduce production ml_module ->
-- On END reduce production ml_module ->

State 684:
ml_module_top -> top_command SEMISEMI ml_module . [ EOF END ]
-- On EOF reduce production ml_module_top -> top_command SEMISEMI ml_module
-- On END reduce production ml_module_top -> top_command SEMISEMI ml_module

State 685:
ml_module_top -> top_command ml_module_top . [ EOF END ]
-- On EOF reduce production ml_module_top -> top_command ml_module_top
-- On END reduce production ml_module_top -> top_command ml_module_top

State 686:
ml_module -> top_command ml_module_top . [ EOF END ]
-- On EOF reduce production ml_module -> top_command ml_module_top
-- On END reduce production ml_module -> top_command ml_module_top

State 687:
ml_module -> top_term SEMISEMI ml_module . [ EOF END ]
-- On EOF reduce production ml_module -> top_term SEMISEMI ml_module
-- On END reduce production ml_module -> top_term SEMISEMI ml_module

State 688:
top_command_ -> MODULE module_name EQ STRUCT ml_module . END [ WITH VERBOSITY SEMISEMI RULE REQUIRE OPERATION OPEN MODULE MLTYPE LET INCLUDE EXTERNAL EXCEPTION EOF END ]
-- On END shift to state 689

State 689:
top_command_ -> MODULE module_name EQ STRUCT ml_module END . [ WITH VERBOSITY SEMISEMI RULE REQUIRE OPERATION OPEN MODULE MLTYPE LET INCLUDE EXTERNAL EXCEPTION EOF END ]
-- On WITH reduce production top_command_ -> MODULE module_name EQ STRUCT ml_module END
-- On VERBOSITY reduce production top_command_ -> MODULE module_name EQ STRUCT ml_module END
-- On SEMISEMI reduce production top_command_ -> MODULE module_name EQ STRUCT ml_module END
-- On RULE reduce production top_command_ -> MODULE module_name EQ STRUCT ml_module END
-- On REQUIRE reduce production top_command_ -> MODULE module_name EQ STRUCT ml_module END
-- On OPERATION reduce production top_command_ -> MODULE module_name EQ STRUCT ml_module END
-- On OPEN reduce production top_command_ -> MODULE module_name EQ STRUCT ml_module END
-- On MODULE reduce production top_command_ -> MODULE module_name EQ STRUCT ml_module END
-- On MLTYPE reduce production top_command_ -> MODULE module_name EQ STRUCT ml_module END
-- On LET reduce production top_command_ -> MODULE module_name EQ STRUCT ml_module END
-- On INCLUDE reduce production top_command_ -> MODULE module_name EQ STRUCT ml_module END
-- On EXTERNAL reduce production top_command_ -> MODULE module_name EQ STRUCT ml_module END
-- On EXCEPTION reduce production top_command_ -> MODULE module_name EQ STRUCT ml_module END
-- On EOF reduce production top_command_ -> MODULE module_name EQ STRUCT ml_module END
-- On END reduce production top_command_ -> MODULE module_name EQ STRUCT ml_module END

State 690:
commandline -> top_term . option(SEMISEMI) EOF [ # ]
-- On SEMISEMI shift to state 691
-- On option(SEMISEMI) shift to state 692
-- On EOF reduce production option(SEMISEMI) ->

State 691:
option(SEMISEMI) -> SEMISEMI . [ EOF ]
-- On EOF reduce production option(SEMISEMI) -> SEMISEMI

State 692:
commandline -> top_term option(SEMISEMI) . EOF [ # ]
-- On EOF shift to state 693

State 693:
commandline -> top_term option(SEMISEMI) EOF . [ # ]
-- On # reduce production commandline -> top_term option(SEMISEMI) EOF

State 694:
commandline -> top_command . option(SEMISEMI) EOF [ # ]
-- On SEMISEMI shift to state 691
-- On option(SEMISEMI) shift to state 695
-- On EOF reduce production option(SEMISEMI) ->

State 695:
commandline -> top_command option(SEMISEMI) . EOF [ # ]
-- On EOF shift to state 696

State 696:
commandline -> top_command option(SEMISEMI) EOF . [ # ]
-- On # reduce production commandline -> top_command option(SEMISEMI) EOF

State 697:
commandline' -> commandline . [ # ]
-- On # accept commandline

State 698:
file' -> . file [ # ]
-- On WITH shift to state 1
-- On VERBOSITY shift to state 536
-- On TRY shift to state 3
-- On RULE shift to state 538
-- On REQUIRE shift to state 554
-- On REF shift to state 4
-- On RAISE shift to state 12
-- On QUOTED_STRING shift to state 5
-- On QQMARK shift to state 15
-- On PREFIXOP shift to state 6
-- On OPERATION shift to state 560
-- On OPEN shift to state 569
-- On OCCURS shift to state 18
-- On NATURAL shift to state 7
-- On NAME shift to state 8
-- On MODULE shift to state 574
-- On MLTYPE shift to state 578
-- On MATCH shift to state 51
-- On LPAREN shift to state 9
-- On LET shift to state 647
-- On LBRACK shift to state 13
-- On LBRACE shift to state 156
-- On INCLUDE shift to state 651
-- On HANDLER shift to state 209
-- On FUN shift to state 330
-- On FRESH shift to state 338
-- On EXTERNAL shift to state 656
-- On EXCEPTION shift to state 662
-- On DERIVE shift to state 342
-- On CONVERT shift to state 130
-- On CONTEXT shift to state 136
-- On CONGRUENCE shift to state 138
-- On BANG shift to state 19
-- On ABSTRACT shift to state 144
-- On ty_term_ shift to state 357
-- On tt_name shift to state 20
-- On top_term_ shift to state 667
-- On top_term shift to state 668
-- On top_command_ shift to state 670
-- On top_command shift to state 671
-- On term_ shift to state 358
-- On term shift to state 674
-- On substitution_term_ shift to state 147
-- On substitution_term shift to state 148
-- On simple_term_ shift to state 21
-- On prefix_term_ shift to state 134
-- On nonempty_list(maybe_typed_binder) shift to state 167
-- On module_path shift to state 24
-- On module_name shift to state 45
-- On ml_module shift to state 699
-- On maybe_typed_binder shift to state 168
-- On mark_location(top_term_) shift to state 676
-- On mark_location(top_command_) shift to state 677
-- On mark_location(term_) shift to state 361
-- On mark_location(substitution_term_) shift to state 135
-- On mark_location(binop_term_) shift to state 171
-- On mark_location(app_term_) shift to state 152
-- On file shift to state 701
-- On binop_term_ shift to state 172
-- On binop_term shift to state 362
-- On app_term_ shift to state 481
-- On app_term shift to state 365
-- On any_name shift to state 47
-- On abstraction shift to state 205
-- On EOF reduce production ml_module ->

State 699:
file -> ml_module . EOF [ # ]
-- On EOF shift to state 700

State 700:
file -> ml_module EOF . [ # ]
-- On # reduce production file -> ml_module EOF

State 701:
file' -> file . [ # ]
-- On # accept file

