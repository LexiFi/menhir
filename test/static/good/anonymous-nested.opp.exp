%start phrase
%token <int> A
%token <int> B
%token <int> C
%token <int> D
%token <int> EOF
%type <int> phrase
%%

foo:
  _1 = A _2 = B
    {      ( 1 )}

bar:
  _1 = C _2 = D
    {      ( 2 )}

phrase:
  x = foo x_inlined1 = foo _3 = EOF
    {let t =
  let x = x_inlined1 in
  let x =                  ( x ) in
          ( x )
in
let y =
  let x =
    let x =                     ( x ) in
            ( x )
  in
          ( x )
in
    ( y + t )}
| x = foo z = bar _3 = EOF
    {let t =
  let x =
    let _1 =
      let x =                                     ( z ) in
              ( x )
    in
                                               ( 2 )
  in
          ( x )
in
let y =
  let x =
    let x =                     ( x ) in
            ( x )
  in
          ( x )
in
    ( y + t )}
| z = bar x = foo _3 = EOF
    {let t =
  let x =                  ( x ) in
          ( x )
in
let y =
  let x =
    let x =                                     ( z ) in
            ( x )
  in
          ( x )
in
    ( y + t )}
| z = bar z_inlined1 = bar _3 = EOF
    {let t =
  let z = z_inlined1 in
  let x =
    let _1 =
      let x =                                     ( z ) in
              ( x )
    in
                                               ( 2 )
  in
          ( x )
in
let y =
  let x =
    let x =                                     ( z ) in
            ( x )
  in
          ( x )
in
    ( y + t )}

%%
