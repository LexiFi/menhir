State 0:
## Known stack suffix:
##
## LR(1) items:
phrase' -> . phrase [ # ]
## Transitions:
-- On B shift to state 1
-- On A shift to state 2
-- On phrase shift to state 5
-- On mixed_list(A,B) shift to state 6
-- On list(__anonymous_0(A,B)) shift to state 14
## Reductions:
-- On EOF reduce production list(__anonymous_0(A,B)) ->
-- On D reduce production list(__anonymous_0(A,B)) ->
-- On C reduce production list(__anonymous_0(A,B)) ->

State 1:
## Known stack suffix:
## B
## LR(1) items:
list(__anonymous_0(A,B)) -> B . list(__anonymous_0(A,B)) [ EOF D C ]
## Transitions:
-- On B shift to state 1
-- On A shift to state 2
-- On list(__anonymous_0(A,B)) shift to state 4
## Reductions:
-- On EOF reduce production list(__anonymous_0(A,B)) ->
-- On D reduce production list(__anonymous_0(A,B)) ->
-- On C reduce production list(__anonymous_0(A,B)) ->

State 2:
## Known stack suffix:
## A
## LR(1) items:
list(__anonymous_0(A,B)) -> A . list(__anonymous_0(A,B)) [ EOF D C ]
## Transitions:
-- On B shift to state 1
-- On A shift to state 2
-- On list(__anonymous_0(A,B)) shift to state 3
## Reductions:
-- On EOF reduce production list(__anonymous_0(A,B)) ->
-- On D reduce production list(__anonymous_0(A,B)) ->
-- On C reduce production list(__anonymous_0(A,B)) ->

State 3:
## Known stack suffix:
## A list(__anonymous_0(A,B))
## LR(1) items:
list(__anonymous_0(A,B)) -> A list(__anonymous_0(A,B)) . [ EOF D C ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production list(__anonymous_0(A,B)) -> A list(__anonymous_0(A,B))

State 4:
## Known stack suffix:
## B list(__anonymous_0(A,B))
## LR(1) items:
list(__anonymous_0(A,B)) -> B list(__anonymous_0(A,B)) . [ EOF D C ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production list(__anonymous_0(A,B)) -> B list(__anonymous_0(A,B))

State 5:
## Known stack suffix:
## phrase
## LR(1) items:
phrase' -> phrase . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, accept phrase

State 6:
## Known stack suffix:
## mixed_list(A,B)
## LR(1) items:
phrase -> mixed_list(A,B) . mixed_list(C,D) EOF [ # ]
## Transitions:
-- On D shift to state 7
-- On C shift to state 8
-- On mixed_list(C,D) shift to state 11
-- On list(__anonymous_0(C,D)) shift to state 13
## Reductions:
-- On EOF reduce production list(__anonymous_0(C,D)) ->

State 7:
## Known stack suffix:
## D
## LR(1) items:
list(__anonymous_0(C,D)) -> D . list(__anonymous_0(C,D)) [ EOF ]
## Transitions:
-- On D shift to state 7
-- On C shift to state 8
-- On list(__anonymous_0(C,D)) shift to state 10
## Reductions:
-- On EOF reduce production list(__anonymous_0(C,D)) ->

State 8:
## Known stack suffix:
## C
## LR(1) items:
list(__anonymous_0(C,D)) -> C . list(__anonymous_0(C,D)) [ EOF ]
## Transitions:
-- On D shift to state 7
-- On C shift to state 8
-- On list(__anonymous_0(C,D)) shift to state 9
## Reductions:
-- On EOF reduce production list(__anonymous_0(C,D)) ->

State 9:
## Known stack suffix:
## C list(__anonymous_0(C,D))
## LR(1) items:
list(__anonymous_0(C,D)) -> C list(__anonymous_0(C,D)) . [ EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production list(__anonymous_0(C,D)) -> C list(__anonymous_0(C,D))

State 10:
## Known stack suffix:
## D list(__anonymous_0(C,D))
## LR(1) items:
list(__anonymous_0(C,D)) -> D list(__anonymous_0(C,D)) . [ EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production list(__anonymous_0(C,D)) -> D list(__anonymous_0(C,D))

State 11:
## Known stack suffix:
## mixed_list(A,B) mixed_list(C,D)
## LR(1) items:
phrase -> mixed_list(A,B) mixed_list(C,D) . EOF [ # ]
## Transitions:
-- On EOF shift to state 12
## Reductions:

State 12:
## Known stack suffix:
## mixed_list(A,B) mixed_list(C,D) EOF
## LR(1) items:
phrase -> mixed_list(A,B) mixed_list(C,D) EOF . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production phrase -> mixed_list(A,B) mixed_list(C,D) EOF

State 13:
## Known stack suffix:
## list(__anonymous_0(C,D))
## LR(1) items:
mixed_list(C,D) -> list(__anonymous_0(C,D)) . [ EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production mixed_list(C,D) -> list(__anonymous_0(C,D))

State 14:
## Known stack suffix:
## list(__anonymous_0(A,B))
## LR(1) items:
mixed_list(A,B) -> list(__anonymous_0(A,B)) . [ EOF D C ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production mixed_list(A,B) -> list(__anonymous_0(A,B))

