%start phrase
%token <int> A
%token <int> B
%token <int> C
%token <int> D
%token <int> EOF
%type <int list> phrase
%%

list___anonymous_0_:
  
    {    ( [] )} [@name nil___anonymous_0]
| x = A xs = list___anonymous_0_
    {let x =                                   ( x ) in
    ( x :: xs )} [@name cons___anonymous_0]
| x = B xs = list___anonymous_0_
    {let x =                                   ( x ) in
    ( x :: xs )} [@name cons___anonymous_0]
| x = C xs = list___anonymous_0_
    {let x =                                   ( x ) in
    ( x :: xs )} [@name cons___anonymous_0]

list___anonymous_1_:
  
    {    ( [] )} [@name nil___anonymous_1]
| x = D y = D xs = list___anonymous_1_
    {let x =                         ( x + y ) in
    ( x :: xs )} [@name cons___anonymous_1]

phrase:
  xs = list___anonymous_0_ ys = list___anonymous_1_ _3 = EOF
    {    ( xs @ ys )}

%%
