State 0:
## Known stack suffix:
##
## LR(1) items:
declaration_list' -> . declaration_list [ # ]
## Transitions:
-- On NESTED_AT_RULE shift to state 1
-- On IDENT shift to state 63
-- On AT_RULE_WITHOUT_BODY shift to state 50
-- On AT_RULE shift to state 60
-- On declarations_without_ending_semi_colon shift to state 69
-- On declarations_with_loc shift to state 90
-- On declarations shift to state 76
-- On declaration_or_at_rule shift to state 77
-- On declaration_list shift to state 92
-- On declaration shift to state 72
-- On at_rule shift to state 73
## Reductions:

State 1:
## Known stack suffix:
## NESTED_AT_RULE
## LR(1) items:
at_rule -> NESTED_AT_RULE . prelude_with_loc LEFT_BRACE stylesheet_without_eof RIGHT_BRACE [ WHITESPACE URI UNICODE_RANGE STRING SEMI_COLON RIGHT_BRACE OPERATOR NUMBER NESTED_AT_RULE LEFT_PAREN LEFT_BRACKET LEFT_BRACE IDENT HASH FUNCTION FLOAT_DIMENSION EOF DOT DIMENSION DELIM COLON AT_RULE_WITHOUT_BODY AT_RULE ]
## Transitions:
-- On WHITESPACE shift to state 2
-- On URI shift to state 3
-- On UNICODE_RANGE shift to state 4
-- On STRING shift to state 5
-- On OPERATOR shift to state 6
-- On NUMBER shift to state 7
-- On LEFT_PAREN shift to state 9
-- On LEFT_BRACKET shift to state 17
-- On IDENT shift to state 38
-- On HASH shift to state 39
-- On FUNCTION shift to state 40
-- On FLOAT_DIMENSION shift to state 43
-- On DOT shift to state 44
-- On DIMENSION shift to state 45
-- On DELIM shift to state 46
-- On COLON shift to state 47
-- On prelude_with_loc shift to state 48
-- On prelude shift to state 53
-- On paren_block shift to state 54
-- On list(component_value_with_loc_in_prelude) shift to state 55
-- On component_value_with_loc_in_prelude shift to state 56
-- On component_value_in_prelude shift to state 58
-- On bracket_block shift to state 59
## Reductions:
-- On LEFT_BRACE
--   reduce production list(component_value_with_loc_in_prelude) ->

State 2:
## Known stack suffix:
## WHITESPACE
## LR(1) items:
component_value_in_prelude -> WHITESPACE . [ WHITESPACE URI UNICODE_RANGE STRING SEMI_COLON OPERATOR NUMBER LEFT_PAREN LEFT_BRACKET LEFT_BRACE IDENT HASH FUNCTION FLOAT_DIMENSION DOT DIMENSION DELIM COLON ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production component_value_in_prelude -> WHITESPACE

State 3:
## Known stack suffix:
## URI
## LR(1) items:
component_value_in_prelude -> URI . [ WHITESPACE URI UNICODE_RANGE STRING SEMI_COLON OPERATOR NUMBER LEFT_PAREN LEFT_BRACKET LEFT_BRACE IDENT HASH FUNCTION FLOAT_DIMENSION DOT DIMENSION DELIM COLON ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production component_value_in_prelude -> URI

State 4:
## Known stack suffix:
## UNICODE_RANGE
## LR(1) items:
component_value_in_prelude -> UNICODE_RANGE . [ WHITESPACE URI UNICODE_RANGE STRING SEMI_COLON OPERATOR NUMBER LEFT_PAREN LEFT_BRACKET LEFT_BRACE IDENT HASH FUNCTION FLOAT_DIMENSION DOT DIMENSION DELIM COLON ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production component_value_in_prelude -> UNICODE_RANGE

State 5:
## Known stack suffix:
## STRING
## LR(1) items:
component_value_in_prelude -> STRING . [ WHITESPACE URI UNICODE_RANGE STRING SEMI_COLON OPERATOR NUMBER LEFT_PAREN LEFT_BRACKET LEFT_BRACE IDENT HASH FUNCTION FLOAT_DIMENSION DOT DIMENSION DELIM COLON ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production component_value_in_prelude -> STRING

State 6:
## Known stack suffix:
## OPERATOR
## LR(1) items:
component_value_in_prelude -> OPERATOR . [ WHITESPACE URI UNICODE_RANGE STRING SEMI_COLON OPERATOR NUMBER LEFT_PAREN LEFT_BRACKET LEFT_BRACE IDENT HASH FUNCTION FLOAT_DIMENSION DOT DIMENSION DELIM COLON ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production component_value_in_prelude -> OPERATOR

State 7:
## Known stack suffix:
## NUMBER
## LR(1) items:
component_value_in_prelude -> NUMBER . PERCENTAGE [ WHITESPACE URI UNICODE_RANGE STRING SEMI_COLON OPERATOR NUMBER LEFT_PAREN LEFT_BRACKET LEFT_BRACE IDENT HASH FUNCTION FLOAT_DIMENSION DOT DIMENSION DELIM COLON ]
component_value_in_prelude -> NUMBER . [ WHITESPACE URI UNICODE_RANGE STRING SEMI_COLON OPERATOR NUMBER LEFT_PAREN LEFT_BRACKET LEFT_BRACE IDENT HASH FUNCTION FLOAT_DIMENSION DOT DIMENSION DELIM COLON ]
## Transitions:
-- On PERCENTAGE shift to state 8
## Reductions:
-- On WHITESPACE URI UNICODE_RANGE STRING SEMI_COLON OPERATOR NUMBER LEFT_PAREN LEFT_BRACKET LEFT_BRACE IDENT HASH FUNCTION FLOAT_DIMENSION DOT DIMENSION DELIM COLON
--   reduce production component_value_in_prelude -> NUMBER

State 8:
## Known stack suffix:
## NUMBER PERCENTAGE
## LR(1) items:
component_value_in_prelude -> NUMBER PERCENTAGE . [ WHITESPACE URI UNICODE_RANGE STRING SEMI_COLON OPERATOR NUMBER LEFT_PAREN LEFT_BRACKET LEFT_BRACE IDENT HASH FUNCTION FLOAT_DIMENSION DOT DIMENSION DELIM COLON ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production component_value_in_prelude -> NUMBER PERCENTAGE

State 9:
## Known stack suffix:
## LEFT_PAREN
## LR(1) items:
paren_block -> LEFT_PAREN . list(component_value_with_loc) RIGHT_PAREN [ WHITESPACE URI UNICODE_RANGE STRING SEMI_COLON RIGHT_PAREN RIGHT_BRACKET RIGHT_BRACE OPERATOR NUMBER LEFT_PAREN LEFT_BRACKET LEFT_BRACE IMPORTANT IDENT HASH FUNCTION FLOAT_DIMENSION EOF DOT DIMENSION DELIM COLON ]
## Transitions:
-- On WHITESPACE shift to state 10
-- On URI shift to state 11
-- On UNICODE_RANGE shift to state 12
-- On STRING shift to state 13
-- On OPERATOR shift to state 14
-- On NUMBER shift to state 15
-- On LEFT_PAREN shift to state 9
-- On LEFT_BRACKET shift to state 17
-- On IDENT shift to state 18
-- On FUNCTION shift to state 19
-- On FLOAT_DIMENSION shift to state 20
-- On DIMENSION shift to state 21
-- On DELIM shift to state 22
-- On paren_block shift to state 23
-- On option(WHITESPACE) shift to state 24
-- On list(component_value_with_loc) shift to state 36
-- On component_value_with_loc shift to state 30
-- On component_value shift to state 32
-- On bracket_block shift to state 33
## Reductions:
-- On RIGHT_PAREN
--   reduce production list(component_value_with_loc) ->
-- On HASH DOT COLON
--   reduce production option(WHITESPACE) ->

State 10:
## Known stack suffix:
## WHITESPACE
## LR(1) items:
option(WHITESPACE) -> WHITESPACE . [ HASH DOT COLON ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production option(WHITESPACE) -> WHITESPACE

State 11:
## Known stack suffix:
## URI
## LR(1) items:
component_value -> URI . [ WHITESPACE URI UNICODE_RANGE STRING SEMI_COLON RIGHT_PAREN RIGHT_BRACKET RIGHT_BRACE OPERATOR NUMBER LEFT_PAREN LEFT_BRACKET IMPORTANT IDENT HASH FUNCTION FLOAT_DIMENSION EOF DOT DIMENSION DELIM COLON ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production component_value -> URI

State 12:
## Known stack suffix:
## UNICODE_RANGE
## LR(1) items:
component_value -> UNICODE_RANGE . [ WHITESPACE URI UNICODE_RANGE STRING SEMI_COLON RIGHT_PAREN RIGHT_BRACKET RIGHT_BRACE OPERATOR NUMBER LEFT_PAREN LEFT_BRACKET IMPORTANT IDENT HASH FUNCTION FLOAT_DIMENSION EOF DOT DIMENSION DELIM COLON ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production component_value -> UNICODE_RANGE

State 13:
## Known stack suffix:
## STRING
## LR(1) items:
component_value -> STRING . [ WHITESPACE URI UNICODE_RANGE STRING SEMI_COLON RIGHT_PAREN RIGHT_BRACKET RIGHT_BRACE OPERATOR NUMBER LEFT_PAREN LEFT_BRACKET IMPORTANT IDENT HASH FUNCTION FLOAT_DIMENSION EOF DOT DIMENSION DELIM COLON ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production component_value -> STRING

State 14:
## Known stack suffix:
## OPERATOR
## LR(1) items:
component_value -> OPERATOR . [ WHITESPACE URI UNICODE_RANGE STRING SEMI_COLON RIGHT_PAREN RIGHT_BRACKET RIGHT_BRACE OPERATOR NUMBER LEFT_PAREN LEFT_BRACKET IMPORTANT IDENT HASH FUNCTION FLOAT_DIMENSION EOF DOT DIMENSION DELIM COLON ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production component_value -> OPERATOR

State 15:
## Known stack suffix:
## NUMBER
## LR(1) items:
component_value -> NUMBER . PERCENTAGE [ WHITESPACE URI UNICODE_RANGE STRING SEMI_COLON RIGHT_PAREN RIGHT_BRACKET RIGHT_BRACE OPERATOR NUMBER LEFT_PAREN LEFT_BRACKET IMPORTANT IDENT HASH FUNCTION FLOAT_DIMENSION EOF DOT DIMENSION DELIM COLON ]
component_value -> NUMBER . [ WHITESPACE URI UNICODE_RANGE STRING SEMI_COLON RIGHT_PAREN RIGHT_BRACKET RIGHT_BRACE OPERATOR NUMBER LEFT_PAREN LEFT_BRACKET IMPORTANT IDENT HASH FUNCTION FLOAT_DIMENSION EOF DOT DIMENSION DELIM COLON ]
## Transitions:
-- On PERCENTAGE shift to state 16
## Reductions:
-- On WHITESPACE URI UNICODE_RANGE STRING SEMI_COLON RIGHT_PAREN RIGHT_BRACKET RIGHT_BRACE OPERATOR NUMBER LEFT_PAREN LEFT_BRACKET IMPORTANT IDENT HASH FUNCTION FLOAT_DIMENSION EOF DOT DIMENSION DELIM COLON
--   reduce production component_value -> NUMBER

State 16:
## Known stack suffix:
## NUMBER PERCENTAGE
## LR(1) items:
component_value -> NUMBER PERCENTAGE . [ WHITESPACE URI UNICODE_RANGE STRING SEMI_COLON RIGHT_PAREN RIGHT_BRACKET RIGHT_BRACE OPERATOR NUMBER LEFT_PAREN LEFT_BRACKET IMPORTANT IDENT HASH FUNCTION FLOAT_DIMENSION EOF DOT DIMENSION DELIM COLON ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production component_value -> NUMBER PERCENTAGE

State 17:
## Known stack suffix:
## LEFT_BRACKET
## LR(1) items:
bracket_block -> LEFT_BRACKET . list(component_value_with_loc) RIGHT_BRACKET [ WHITESPACE URI UNICODE_RANGE STRING SEMI_COLON RIGHT_PAREN RIGHT_BRACKET RIGHT_BRACE OPERATOR NUMBER LEFT_PAREN LEFT_BRACKET LEFT_BRACE IMPORTANT IDENT HASH FUNCTION FLOAT_DIMENSION EOF DOT DIMENSION DELIM COLON ]
## Transitions:
-- On WHITESPACE shift to state 10
-- On URI shift to state 11
-- On UNICODE_RANGE shift to state 12
-- On STRING shift to state 13
-- On OPERATOR shift to state 14
-- On NUMBER shift to state 15
-- On LEFT_PAREN shift to state 9
-- On LEFT_BRACKET shift to state 17
-- On IDENT shift to state 18
-- On FUNCTION shift to state 19
-- On FLOAT_DIMENSION shift to state 20
-- On DIMENSION shift to state 21
-- On DELIM shift to state 22
-- On paren_block shift to state 23
-- On option(WHITESPACE) shift to state 24
-- On list(component_value_with_loc) shift to state 34
-- On component_value_with_loc shift to state 30
-- On component_value shift to state 32
-- On bracket_block shift to state 33
## Reductions:
-- On RIGHT_BRACKET
--   reduce production list(component_value_with_loc) ->
-- On HASH DOT COLON
--   reduce production option(WHITESPACE) ->

State 18:
## Known stack suffix:
## IDENT
## LR(1) items:
component_value -> IDENT . [ WHITESPACE URI UNICODE_RANGE STRING SEMI_COLON RIGHT_PAREN RIGHT_BRACKET RIGHT_BRACE OPERATOR NUMBER LEFT_PAREN LEFT_BRACKET IMPORTANT IDENT HASH FUNCTION FLOAT_DIMENSION EOF DOT DIMENSION DELIM COLON ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production component_value -> IDENT

State 19:
## Known stack suffix:
## FUNCTION
## LR(1) items:
component_value -> FUNCTION . list(component_value_with_loc) RIGHT_PAREN [ WHITESPACE URI UNICODE_RANGE STRING SEMI_COLON RIGHT_PAREN RIGHT_BRACKET RIGHT_BRACE OPERATOR NUMBER LEFT_PAREN LEFT_BRACKET IMPORTANT IDENT HASH FUNCTION FLOAT_DIMENSION EOF DOT DIMENSION DELIM COLON ]
## Transitions:
-- On WHITESPACE shift to state 10
-- On URI shift to state 11
-- On UNICODE_RANGE shift to state 12
-- On STRING shift to state 13
-- On OPERATOR shift to state 14
-- On NUMBER shift to state 15
-- On LEFT_PAREN shift to state 9
-- On LEFT_BRACKET shift to state 17
-- On IDENT shift to state 18
-- On FUNCTION shift to state 19
-- On FLOAT_DIMENSION shift to state 20
-- On DIMENSION shift to state 21
-- On DELIM shift to state 22
-- On paren_block shift to state 23
-- On option(WHITESPACE) shift to state 24
-- On list(component_value_with_loc) shift to state 28
-- On component_value_with_loc shift to state 30
-- On component_value shift to state 32
-- On bracket_block shift to state 33
## Reductions:
-- On RIGHT_PAREN
--   reduce production list(component_value_with_loc) ->
-- On HASH DOT COLON
--   reduce production option(WHITESPACE) ->

State 20:
## Known stack suffix:
## FLOAT_DIMENSION
## LR(1) items:
component_value -> FLOAT_DIMENSION . [ WHITESPACE URI UNICODE_RANGE STRING SEMI_COLON RIGHT_PAREN RIGHT_BRACKET RIGHT_BRACE OPERATOR NUMBER LEFT_PAREN LEFT_BRACKET IMPORTANT IDENT HASH FUNCTION FLOAT_DIMENSION EOF DOT DIMENSION DELIM COLON ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production component_value -> FLOAT_DIMENSION

State 21:
## Known stack suffix:
## DIMENSION
## LR(1) items:
component_value -> DIMENSION . [ WHITESPACE URI UNICODE_RANGE STRING SEMI_COLON RIGHT_PAREN RIGHT_BRACKET RIGHT_BRACE OPERATOR NUMBER LEFT_PAREN LEFT_BRACKET IMPORTANT IDENT HASH FUNCTION FLOAT_DIMENSION EOF DOT DIMENSION DELIM COLON ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production component_value -> DIMENSION

State 22:
## Known stack suffix:
## DELIM
## LR(1) items:
component_value -> DELIM . [ WHITESPACE URI UNICODE_RANGE STRING SEMI_COLON RIGHT_PAREN RIGHT_BRACKET RIGHT_BRACE OPERATOR NUMBER LEFT_PAREN LEFT_BRACKET IMPORTANT IDENT HASH FUNCTION FLOAT_DIMENSION EOF DOT DIMENSION DELIM COLON ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production component_value -> DELIM

State 23:
## Known stack suffix:
## paren_block
## LR(1) items:
component_value -> paren_block . [ WHITESPACE URI UNICODE_RANGE STRING SEMI_COLON RIGHT_PAREN RIGHT_BRACKET RIGHT_BRACE OPERATOR NUMBER LEFT_PAREN LEFT_BRACKET IMPORTANT IDENT HASH FUNCTION FLOAT_DIMENSION EOF DOT DIMENSION DELIM COLON ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production component_value -> paren_block

State 24:
## Known stack suffix:
## option(WHITESPACE)
## LR(1) items:
component_value -> option(WHITESPACE) . COLON [ WHITESPACE URI UNICODE_RANGE STRING SEMI_COLON RIGHT_PAREN RIGHT_BRACKET RIGHT_BRACE OPERATOR NUMBER LEFT_PAREN LEFT_BRACKET IMPORTANT IDENT HASH FUNCTION FLOAT_DIMENSION EOF DOT DIMENSION DELIM COLON ]
component_value -> option(WHITESPACE) . DOT [ WHITESPACE URI UNICODE_RANGE STRING SEMI_COLON RIGHT_PAREN RIGHT_BRACKET RIGHT_BRACE OPERATOR NUMBER LEFT_PAREN LEFT_BRACKET IMPORTANT IDENT HASH FUNCTION FLOAT_DIMENSION EOF DOT DIMENSION DELIM COLON ]
component_value -> option(WHITESPACE) . HASH [ WHITESPACE URI UNICODE_RANGE STRING SEMI_COLON RIGHT_PAREN RIGHT_BRACKET RIGHT_BRACE OPERATOR NUMBER LEFT_PAREN LEFT_BRACKET IMPORTANT IDENT HASH FUNCTION FLOAT_DIMENSION EOF DOT DIMENSION DELIM COLON ]
## Transitions:
-- On HASH shift to state 25
-- On DOT shift to state 26
-- On COLON shift to state 27
## Reductions:

State 25:
## Known stack suffix:
## option(WHITESPACE) HASH
## LR(1) items:
component_value -> option(WHITESPACE) HASH . [ WHITESPACE URI UNICODE_RANGE STRING SEMI_COLON RIGHT_PAREN RIGHT_BRACKET RIGHT_BRACE OPERATOR NUMBER LEFT_PAREN LEFT_BRACKET IMPORTANT IDENT HASH FUNCTION FLOAT_DIMENSION EOF DOT DIMENSION DELIM COLON ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production component_value -> option(WHITESPACE) HASH

State 26:
## Known stack suffix:
## option(WHITESPACE) DOT
## LR(1) items:
component_value -> option(WHITESPACE) DOT . [ WHITESPACE URI UNICODE_RANGE STRING SEMI_COLON RIGHT_PAREN RIGHT_BRACKET RIGHT_BRACE OPERATOR NUMBER LEFT_PAREN LEFT_BRACKET IMPORTANT IDENT HASH FUNCTION FLOAT_DIMENSION EOF DOT DIMENSION DELIM COLON ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production component_value -> option(WHITESPACE) DOT

State 27:
## Known stack suffix:
## option(WHITESPACE) COLON
## LR(1) items:
component_value -> option(WHITESPACE) COLON . [ WHITESPACE URI UNICODE_RANGE STRING SEMI_COLON RIGHT_PAREN RIGHT_BRACKET RIGHT_BRACE OPERATOR NUMBER LEFT_PAREN LEFT_BRACKET IMPORTANT IDENT HASH FUNCTION FLOAT_DIMENSION EOF DOT DIMENSION DELIM COLON ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production component_value -> option(WHITESPACE) COLON

State 28:
## Known stack suffix:
## FUNCTION list(component_value_with_loc)
## LR(1) items:
component_value -> FUNCTION list(component_value_with_loc) . RIGHT_PAREN [ WHITESPACE URI UNICODE_RANGE STRING SEMI_COLON RIGHT_PAREN RIGHT_BRACKET RIGHT_BRACE OPERATOR NUMBER LEFT_PAREN LEFT_BRACKET IMPORTANT IDENT HASH FUNCTION FLOAT_DIMENSION EOF DOT DIMENSION DELIM COLON ]
## Transitions:
-- On RIGHT_PAREN shift to state 29
## Reductions:

State 29:
## Known stack suffix:
## FUNCTION list(component_value_with_loc) RIGHT_PAREN
## LR(1) items:
component_value -> FUNCTION list(component_value_with_loc) RIGHT_PAREN . [ WHITESPACE URI UNICODE_RANGE STRING SEMI_COLON RIGHT_PAREN RIGHT_BRACKET RIGHT_BRACE OPERATOR NUMBER LEFT_PAREN LEFT_BRACKET IMPORTANT IDENT HASH FUNCTION FLOAT_DIMENSION EOF DOT DIMENSION DELIM COLON ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production component_value -> FUNCTION list(component_value_with_loc) RIGHT_PAREN

State 30:
## Known stack suffix:
## component_value_with_loc
## LR(1) items:
list(component_value_with_loc) -> component_value_with_loc . list(component_value_with_loc) [ SEMI_COLON RIGHT_PAREN RIGHT_BRACKET RIGHT_BRACE IMPORTANT EOF ]
## Transitions:
-- On WHITESPACE shift to state 10
-- On URI shift to state 11
-- On UNICODE_RANGE shift to state 12
-- On STRING shift to state 13
-- On OPERATOR shift to state 14
-- On NUMBER shift to state 15
-- On LEFT_PAREN shift to state 9
-- On LEFT_BRACKET shift to state 17
-- On IDENT shift to state 18
-- On FUNCTION shift to state 19
-- On FLOAT_DIMENSION shift to state 20
-- On DIMENSION shift to state 21
-- On DELIM shift to state 22
-- On paren_block shift to state 23
-- On option(WHITESPACE) shift to state 24
-- On list(component_value_with_loc) shift to state 31
-- On component_value_with_loc shift to state 30
-- On component_value shift to state 32
-- On bracket_block shift to state 33
## Reductions:
-- On SEMI_COLON RIGHT_PAREN RIGHT_BRACKET RIGHT_BRACE IMPORTANT EOF
--   reduce production list(component_value_with_loc) ->
-- On HASH DOT COLON
--   reduce production option(WHITESPACE) ->

State 31:
## Known stack suffix:
## component_value_with_loc list(component_value_with_loc)
## LR(1) items:
list(component_value_with_loc) -> component_value_with_loc list(component_value_with_loc) . [ SEMI_COLON RIGHT_PAREN RIGHT_BRACKET RIGHT_BRACE IMPORTANT EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production list(component_value_with_loc) -> component_value_with_loc list(component_value_with_loc)

State 32:
## Known stack suffix:
## component_value
## LR(1) items:
component_value_with_loc -> component_value . [ WHITESPACE URI UNICODE_RANGE STRING SEMI_COLON RIGHT_PAREN RIGHT_BRACKET RIGHT_BRACE OPERATOR NUMBER LEFT_PAREN LEFT_BRACKET IMPORTANT IDENT HASH FUNCTION FLOAT_DIMENSION EOF DOT DIMENSION DELIM COLON ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production component_value_with_loc -> component_value

State 33:
## Known stack suffix:
## bracket_block
## LR(1) items:
component_value -> bracket_block . [ WHITESPACE URI UNICODE_RANGE STRING SEMI_COLON RIGHT_PAREN RIGHT_BRACKET RIGHT_BRACE OPERATOR NUMBER LEFT_PAREN LEFT_BRACKET IMPORTANT IDENT HASH FUNCTION FLOAT_DIMENSION EOF DOT DIMENSION DELIM COLON ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production component_value -> bracket_block

State 34:
## Known stack suffix:
## LEFT_BRACKET list(component_value_with_loc)
## LR(1) items:
bracket_block -> LEFT_BRACKET list(component_value_with_loc) . RIGHT_BRACKET [ WHITESPACE URI UNICODE_RANGE STRING SEMI_COLON RIGHT_PAREN RIGHT_BRACKET RIGHT_BRACE OPERATOR NUMBER LEFT_PAREN LEFT_BRACKET LEFT_BRACE IMPORTANT IDENT HASH FUNCTION FLOAT_DIMENSION EOF DOT DIMENSION DELIM COLON ]
## Transitions:
-- On RIGHT_BRACKET shift to state 35
## Reductions:

State 35:
## Known stack suffix:
## LEFT_BRACKET list(component_value_with_loc) RIGHT_BRACKET
## LR(1) items:
bracket_block -> LEFT_BRACKET list(component_value_with_loc) RIGHT_BRACKET . [ WHITESPACE URI UNICODE_RANGE STRING SEMI_COLON RIGHT_PAREN RIGHT_BRACKET RIGHT_BRACE OPERATOR NUMBER LEFT_PAREN LEFT_BRACKET LEFT_BRACE IMPORTANT IDENT HASH FUNCTION FLOAT_DIMENSION EOF DOT DIMENSION DELIM COLON ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production bracket_block -> LEFT_BRACKET list(component_value_with_loc) RIGHT_BRACKET

State 36:
## Known stack suffix:
## LEFT_PAREN list(component_value_with_loc)
## LR(1) items:
paren_block -> LEFT_PAREN list(component_value_with_loc) . RIGHT_PAREN [ WHITESPACE URI UNICODE_RANGE STRING SEMI_COLON RIGHT_PAREN RIGHT_BRACKET RIGHT_BRACE OPERATOR NUMBER LEFT_PAREN LEFT_BRACKET LEFT_BRACE IMPORTANT IDENT HASH FUNCTION FLOAT_DIMENSION EOF DOT DIMENSION DELIM COLON ]
## Transitions:
-- On RIGHT_PAREN shift to state 37
## Reductions:

State 37:
## Known stack suffix:
## LEFT_PAREN list(component_value_with_loc) RIGHT_PAREN
## LR(1) items:
paren_block -> LEFT_PAREN list(component_value_with_loc) RIGHT_PAREN . [ WHITESPACE URI UNICODE_RANGE STRING SEMI_COLON RIGHT_PAREN RIGHT_BRACKET RIGHT_BRACE OPERATOR NUMBER LEFT_PAREN LEFT_BRACKET LEFT_BRACE IMPORTANT IDENT HASH FUNCTION FLOAT_DIMENSION EOF DOT DIMENSION DELIM COLON ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production paren_block -> LEFT_PAREN list(component_value_with_loc) RIGHT_PAREN

State 38:
## Known stack suffix:
## IDENT
## LR(1) items:
component_value_in_prelude -> IDENT . [ WHITESPACE URI UNICODE_RANGE STRING SEMI_COLON OPERATOR NUMBER LEFT_PAREN LEFT_BRACKET LEFT_BRACE IDENT HASH FUNCTION FLOAT_DIMENSION DOT DIMENSION DELIM COLON ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production component_value_in_prelude -> IDENT

State 39:
## Known stack suffix:
## HASH
## LR(1) items:
component_value_in_prelude -> HASH . [ WHITESPACE URI UNICODE_RANGE STRING SEMI_COLON OPERATOR NUMBER LEFT_PAREN LEFT_BRACKET LEFT_BRACE IDENT HASH FUNCTION FLOAT_DIMENSION DOT DIMENSION DELIM COLON ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production component_value_in_prelude -> HASH

State 40:
## Known stack suffix:
## FUNCTION
## LR(1) items:
component_value_in_prelude -> FUNCTION . list(component_value_with_loc) RIGHT_PAREN [ WHITESPACE URI UNICODE_RANGE STRING SEMI_COLON OPERATOR NUMBER LEFT_PAREN LEFT_BRACKET LEFT_BRACE IDENT HASH FUNCTION FLOAT_DIMENSION DOT DIMENSION DELIM COLON ]
## Transitions:
-- On WHITESPACE shift to state 10
-- On URI shift to state 11
-- On UNICODE_RANGE shift to state 12
-- On STRING shift to state 13
-- On OPERATOR shift to state 14
-- On NUMBER shift to state 15
-- On LEFT_PAREN shift to state 9
-- On LEFT_BRACKET shift to state 17
-- On IDENT shift to state 18
-- On FUNCTION shift to state 19
-- On FLOAT_DIMENSION shift to state 20
-- On DIMENSION shift to state 21
-- On DELIM shift to state 22
-- On paren_block shift to state 23
-- On option(WHITESPACE) shift to state 24
-- On list(component_value_with_loc) shift to state 41
-- On component_value_with_loc shift to state 30
-- On component_value shift to state 32
-- On bracket_block shift to state 33
## Reductions:
-- On RIGHT_PAREN
--   reduce production list(component_value_with_loc) ->
-- On HASH DOT COLON
--   reduce production option(WHITESPACE) ->

State 41:
## Known stack suffix:
## FUNCTION list(component_value_with_loc)
## LR(1) items:
component_value_in_prelude -> FUNCTION list(component_value_with_loc) . RIGHT_PAREN [ WHITESPACE URI UNICODE_RANGE STRING SEMI_COLON OPERATOR NUMBER LEFT_PAREN LEFT_BRACKET LEFT_BRACE IDENT HASH FUNCTION FLOAT_DIMENSION DOT DIMENSION DELIM COLON ]
## Transitions:
-- On RIGHT_PAREN shift to state 42
## Reductions:

State 42:
## Known stack suffix:
## FUNCTION list(component_value_with_loc) RIGHT_PAREN
## LR(1) items:
component_value_in_prelude -> FUNCTION list(component_value_with_loc) RIGHT_PAREN . [ WHITESPACE URI UNICODE_RANGE STRING SEMI_COLON OPERATOR NUMBER LEFT_PAREN LEFT_BRACKET LEFT_BRACE IDENT HASH FUNCTION FLOAT_DIMENSION DOT DIMENSION DELIM COLON ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production component_value_in_prelude -> FUNCTION list(component_value_with_loc) RIGHT_PAREN

State 43:
## Known stack suffix:
## FLOAT_DIMENSION
## LR(1) items:
component_value_in_prelude -> FLOAT_DIMENSION . [ WHITESPACE URI UNICODE_RANGE STRING SEMI_COLON OPERATOR NUMBER LEFT_PAREN LEFT_BRACKET LEFT_BRACE IDENT HASH FUNCTION FLOAT_DIMENSION DOT DIMENSION DELIM COLON ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production component_value_in_prelude -> FLOAT_DIMENSION

State 44:
## Known stack suffix:
## DOT
## LR(1) items:
component_value_in_prelude -> DOT . [ WHITESPACE URI UNICODE_RANGE STRING SEMI_COLON OPERATOR NUMBER LEFT_PAREN LEFT_BRACKET LEFT_BRACE IDENT HASH FUNCTION FLOAT_DIMENSION DOT DIMENSION DELIM COLON ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production component_value_in_prelude -> DOT

State 45:
## Known stack suffix:
## DIMENSION
## LR(1) items:
component_value_in_prelude -> DIMENSION . [ WHITESPACE URI UNICODE_RANGE STRING SEMI_COLON OPERATOR NUMBER LEFT_PAREN LEFT_BRACKET LEFT_BRACE IDENT HASH FUNCTION FLOAT_DIMENSION DOT DIMENSION DELIM COLON ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production component_value_in_prelude -> DIMENSION

State 46:
## Known stack suffix:
## DELIM
## LR(1) items:
component_value_in_prelude -> DELIM . [ WHITESPACE URI UNICODE_RANGE STRING SEMI_COLON OPERATOR NUMBER LEFT_PAREN LEFT_BRACKET LEFT_BRACE IDENT HASH FUNCTION FLOAT_DIMENSION DOT DIMENSION DELIM COLON ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production component_value_in_prelude -> DELIM

State 47:
## Known stack suffix:
## COLON
## LR(1) items:
component_value_in_prelude -> COLON . [ WHITESPACE URI UNICODE_RANGE STRING SEMI_COLON OPERATOR NUMBER LEFT_PAREN LEFT_BRACKET LEFT_BRACE IDENT HASH FUNCTION FLOAT_DIMENSION DOT DIMENSION DELIM COLON ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production component_value_in_prelude -> COLON

State 48:
## Known stack suffix:
## NESTED_AT_RULE prelude_with_loc
## LR(1) items:
at_rule -> NESTED_AT_RULE prelude_with_loc . LEFT_BRACE stylesheet_without_eof RIGHT_BRACE [ WHITESPACE URI UNICODE_RANGE STRING SEMI_COLON RIGHT_BRACE OPERATOR NUMBER NESTED_AT_RULE LEFT_PAREN LEFT_BRACKET LEFT_BRACE IDENT HASH FUNCTION FLOAT_DIMENSION EOF DOT DIMENSION DELIM COLON AT_RULE_WITHOUT_BODY AT_RULE ]
## Transitions:
-- On LEFT_BRACE shift to state 49
## Reductions:

State 49:
## Known stack suffix:
## NESTED_AT_RULE prelude_with_loc LEFT_BRACE
## LR(1) items:
at_rule -> NESTED_AT_RULE prelude_with_loc LEFT_BRACE . stylesheet_without_eof RIGHT_BRACE [ WHITESPACE URI UNICODE_RANGE STRING SEMI_COLON RIGHT_BRACE OPERATOR NUMBER NESTED_AT_RULE LEFT_PAREN LEFT_BRACKET LEFT_BRACE IDENT HASH FUNCTION FLOAT_DIMENSION EOF DOT DIMENSION DELIM COLON AT_RULE_WITHOUT_BODY AT_RULE ]
## Transitions:
-- On WHITESPACE shift to state 2
-- On URI shift to state 3
-- On UNICODE_RANGE shift to state 4
-- On STRING shift to state 5
-- On OPERATOR shift to state 6
-- On NUMBER shift to state 7
-- On NESTED_AT_RULE shift to state 1
-- On LEFT_PAREN shift to state 9
-- On LEFT_BRACKET shift to state 17
-- On IDENT shift to state 38
-- On HASH shift to state 39
-- On FUNCTION shift to state 40
-- On FLOAT_DIMENSION shift to state 43
-- On DOT shift to state 44
-- On DIMENSION shift to state 45
-- On DELIM shift to state 46
-- On COLON shift to state 47
-- On AT_RULE_WITHOUT_BODY shift to state 50
-- On AT_RULE shift to state 60
-- On stylesheet_without_eof shift to state 78
-- On style_rule shift to state 80
-- On rule shift to state 81
-- On prelude_with_loc shift to state 82
-- On prelude shift to state 53
-- On paren_block shift to state 54
-- On list(rule) shift to state 89
-- On list(component_value_with_loc_in_prelude) shift to state 55
-- On component_value_with_loc_in_prelude shift to state 56
-- On component_value_in_prelude shift to state 58
-- On bracket_block shift to state 59
-- On at_rule shift to state 88
## Reductions:
-- On LEFT_BRACE
--   reduce production list(component_value_with_loc_in_prelude) ->
-- On RIGHT_BRACE
--   reduce production list(rule) ->

State 50:
## Known stack suffix:
## AT_RULE_WITHOUT_BODY
## LR(1) items:
at_rule -> AT_RULE_WITHOUT_BODY . prelude_with_loc SEMI_COLON [ WHITESPACE URI UNICODE_RANGE STRING SEMI_COLON RIGHT_BRACE OPERATOR NUMBER NESTED_AT_RULE LEFT_PAREN LEFT_BRACKET LEFT_BRACE IDENT HASH FUNCTION FLOAT_DIMENSION EOF DOT DIMENSION DELIM COLON AT_RULE_WITHOUT_BODY AT_RULE ]
## Transitions:
-- On WHITESPACE shift to state 2
-- On URI shift to state 3
-- On UNICODE_RANGE shift to state 4
-- On STRING shift to state 5
-- On OPERATOR shift to state 6
-- On NUMBER shift to state 7
-- On LEFT_PAREN shift to state 9
-- On LEFT_BRACKET shift to state 17
-- On IDENT shift to state 38
-- On HASH shift to state 39
-- On FUNCTION shift to state 40
-- On FLOAT_DIMENSION shift to state 43
-- On DOT shift to state 44
-- On DIMENSION shift to state 45
-- On DELIM shift to state 46
-- On COLON shift to state 47
-- On prelude_with_loc shift to state 51
-- On prelude shift to state 53
-- On paren_block shift to state 54
-- On list(component_value_with_loc_in_prelude) shift to state 55
-- On component_value_with_loc_in_prelude shift to state 56
-- On component_value_in_prelude shift to state 58
-- On bracket_block shift to state 59
## Reductions:
-- On SEMI_COLON
--   reduce production list(component_value_with_loc_in_prelude) ->

State 51:
## Known stack suffix:
## AT_RULE_WITHOUT_BODY prelude_with_loc
## LR(1) items:
at_rule -> AT_RULE_WITHOUT_BODY prelude_with_loc . SEMI_COLON [ WHITESPACE URI UNICODE_RANGE STRING SEMI_COLON RIGHT_BRACE OPERATOR NUMBER NESTED_AT_RULE LEFT_PAREN LEFT_BRACKET LEFT_BRACE IDENT HASH FUNCTION FLOAT_DIMENSION EOF DOT DIMENSION DELIM COLON AT_RULE_WITHOUT_BODY AT_RULE ]
## Transitions:
-- On SEMI_COLON shift to state 52
## Reductions:

State 52:
## Known stack suffix:
## AT_RULE_WITHOUT_BODY prelude_with_loc SEMI_COLON
## LR(1) items:
at_rule -> AT_RULE_WITHOUT_BODY prelude_with_loc SEMI_COLON . [ WHITESPACE URI UNICODE_RANGE STRING SEMI_COLON RIGHT_BRACE OPERATOR NUMBER NESTED_AT_RULE LEFT_PAREN LEFT_BRACKET LEFT_BRACE IDENT HASH FUNCTION FLOAT_DIMENSION EOF DOT DIMENSION DELIM COLON AT_RULE_WITHOUT_BODY AT_RULE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production at_rule -> AT_RULE_WITHOUT_BODY prelude_with_loc SEMI_COLON

State 53:
## Known stack suffix:
## prelude
## LR(1) items:
prelude_with_loc -> prelude . [ SEMI_COLON LEFT_BRACE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production prelude_with_loc -> prelude

State 54:
## Known stack suffix:
## paren_block
## LR(1) items:
component_value_in_prelude -> paren_block . [ WHITESPACE URI UNICODE_RANGE STRING SEMI_COLON OPERATOR NUMBER LEFT_PAREN LEFT_BRACKET LEFT_BRACE IDENT HASH FUNCTION FLOAT_DIMENSION DOT DIMENSION DELIM COLON ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production component_value_in_prelude -> paren_block

State 55:
## Known stack suffix:
## list(component_value_with_loc_in_prelude)
## LR(1) items:
prelude -> list(component_value_with_loc_in_prelude) . [ SEMI_COLON LEFT_BRACE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production prelude -> list(component_value_with_loc_in_prelude)

State 56:
## Known stack suffix:
## component_value_with_loc_in_prelude
## LR(1) items:
list(component_value_with_loc_in_prelude) -> component_value_with_loc_in_prelude . list(component_value_with_loc_in_prelude) [ SEMI_COLON LEFT_BRACE ]
## Transitions:
-- On WHITESPACE shift to state 2
-- On URI shift to state 3
-- On UNICODE_RANGE shift to state 4
-- On STRING shift to state 5
-- On OPERATOR shift to state 6
-- On NUMBER shift to state 7
-- On LEFT_PAREN shift to state 9
-- On LEFT_BRACKET shift to state 17
-- On IDENT shift to state 38
-- On HASH shift to state 39
-- On FUNCTION shift to state 40
-- On FLOAT_DIMENSION shift to state 43
-- On DOT shift to state 44
-- On DIMENSION shift to state 45
-- On DELIM shift to state 46
-- On COLON shift to state 47
-- On paren_block shift to state 54
-- On list(component_value_with_loc_in_prelude) shift to state 57
-- On component_value_with_loc_in_prelude shift to state 56
-- On component_value_in_prelude shift to state 58
-- On bracket_block shift to state 59
## Reductions:
-- On SEMI_COLON LEFT_BRACE
--   reduce production list(component_value_with_loc_in_prelude) ->

State 57:
## Known stack suffix:
## component_value_with_loc_in_prelude list(component_value_with_loc_in_prelude)
## LR(1) items:
list(component_value_with_loc_in_prelude) -> component_value_with_loc_in_prelude list(component_value_with_loc_in_prelude) . [ SEMI_COLON LEFT_BRACE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production list(component_value_with_loc_in_prelude) -> component_value_with_loc_in_prelude list(component_value_with_loc_in_prelude)

State 58:
## Known stack suffix:
## component_value_in_prelude
## LR(1) items:
component_value_with_loc_in_prelude -> component_value_in_prelude . [ WHITESPACE URI UNICODE_RANGE STRING SEMI_COLON OPERATOR NUMBER LEFT_PAREN LEFT_BRACKET LEFT_BRACE IDENT HASH FUNCTION FLOAT_DIMENSION DOT DIMENSION DELIM COLON ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production component_value_with_loc_in_prelude -> component_value_in_prelude

State 59:
## Known stack suffix:
## bracket_block
## LR(1) items:
component_value_in_prelude -> bracket_block . [ WHITESPACE URI UNICODE_RANGE STRING SEMI_COLON OPERATOR NUMBER LEFT_PAREN LEFT_BRACKET LEFT_BRACE IDENT HASH FUNCTION FLOAT_DIMENSION DOT DIMENSION DELIM COLON ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production component_value_in_prelude -> bracket_block

State 60:
## Known stack suffix:
## AT_RULE
## LR(1) items:
at_rule -> AT_RULE . prelude_with_loc LEFT_BRACE declarations_with_loc RIGHT_BRACE [ WHITESPACE URI UNICODE_RANGE STRING SEMI_COLON RIGHT_BRACE OPERATOR NUMBER NESTED_AT_RULE LEFT_PAREN LEFT_BRACKET LEFT_BRACE IDENT HASH FUNCTION FLOAT_DIMENSION EOF DOT DIMENSION DELIM COLON AT_RULE_WITHOUT_BODY AT_RULE ]
## Transitions:
-- On WHITESPACE shift to state 2
-- On URI shift to state 3
-- On UNICODE_RANGE shift to state 4
-- On STRING shift to state 5
-- On OPERATOR shift to state 6
-- On NUMBER shift to state 7
-- On LEFT_PAREN shift to state 9
-- On LEFT_BRACKET shift to state 17
-- On IDENT shift to state 38
-- On HASH shift to state 39
-- On FUNCTION shift to state 40
-- On FLOAT_DIMENSION shift to state 43
-- On DOT shift to state 44
-- On DIMENSION shift to state 45
-- On DELIM shift to state 46
-- On COLON shift to state 47
-- On prelude_with_loc shift to state 61
-- On prelude shift to state 53
-- On paren_block shift to state 54
-- On list(component_value_with_loc_in_prelude) shift to state 55
-- On component_value_with_loc_in_prelude shift to state 56
-- On component_value_in_prelude shift to state 58
-- On bracket_block shift to state 59
## Reductions:
-- On LEFT_BRACE
--   reduce production list(component_value_with_loc_in_prelude) ->

State 61:
## Known stack suffix:
## AT_RULE prelude_with_loc
## LR(1) items:
at_rule -> AT_RULE prelude_with_loc . LEFT_BRACE declarations_with_loc RIGHT_BRACE [ WHITESPACE URI UNICODE_RANGE STRING SEMI_COLON RIGHT_BRACE OPERATOR NUMBER NESTED_AT_RULE LEFT_PAREN LEFT_BRACKET LEFT_BRACE IDENT HASH FUNCTION FLOAT_DIMENSION EOF DOT DIMENSION DELIM COLON AT_RULE_WITHOUT_BODY AT_RULE ]
## Transitions:
-- On LEFT_BRACE shift to state 62
## Reductions:

State 62:
## Known stack suffix:
## AT_RULE prelude_with_loc LEFT_BRACE
## LR(1) items:
at_rule -> AT_RULE prelude_with_loc LEFT_BRACE . declarations_with_loc RIGHT_BRACE [ WHITESPACE URI UNICODE_RANGE STRING SEMI_COLON RIGHT_BRACE OPERATOR NUMBER NESTED_AT_RULE LEFT_PAREN LEFT_BRACKET LEFT_BRACE IDENT HASH FUNCTION FLOAT_DIMENSION EOF DOT DIMENSION DELIM COLON AT_RULE_WITHOUT_BODY AT_RULE ]
## Transitions:
-- On NESTED_AT_RULE shift to state 1
-- On IDENT shift to state 63
-- On AT_RULE_WITHOUT_BODY shift to state 50
-- On AT_RULE shift to state 60
-- On declarations_without_ending_semi_colon shift to state 69
-- On declarations_with_loc shift to state 74
-- On declarations shift to state 76
-- On declaration_or_at_rule shift to state 77
-- On declaration shift to state 72
-- On at_rule shift to state 73
## Reductions:

State 63:
## Known stack suffix:
## IDENT
## LR(1) items:
declaration -> IDENT . option(WHITESPACE) COLON list(component_value_with_loc) boption(IMPORTANT) [ SEMI_COLON RIGHT_BRACE EOF ]
## Transitions:
-- On WHITESPACE shift to state 10
-- On option(WHITESPACE) shift to state 64
## Reductions:
-- On COLON
--   reduce production option(WHITESPACE) ->

State 64:
## Known stack suffix:
## IDENT option(WHITESPACE)
## LR(1) items:
declaration -> IDENT option(WHITESPACE) . COLON list(component_value_with_loc) boption(IMPORTANT) [ SEMI_COLON RIGHT_BRACE EOF ]
## Transitions:
-- On COLON shift to state 65
## Reductions:

State 65:
## Known stack suffix:
## IDENT option(WHITESPACE) COLON
## LR(1) items:
declaration -> IDENT option(WHITESPACE) COLON . list(component_value_with_loc) boption(IMPORTANT) [ SEMI_COLON RIGHT_BRACE EOF ]
## Transitions:
-- On WHITESPACE shift to state 10
-- On URI shift to state 11
-- On UNICODE_RANGE shift to state 12
-- On STRING shift to state 13
-- On OPERATOR shift to state 14
-- On NUMBER shift to state 15
-- On LEFT_PAREN shift to state 9
-- On LEFT_BRACKET shift to state 17
-- On IDENT shift to state 18
-- On FUNCTION shift to state 19
-- On FLOAT_DIMENSION shift to state 20
-- On DIMENSION shift to state 21
-- On DELIM shift to state 22
-- On paren_block shift to state 23
-- On option(WHITESPACE) shift to state 24
-- On list(component_value_with_loc) shift to state 66
-- On component_value_with_loc shift to state 30
-- On component_value shift to state 32
-- On bracket_block shift to state 33
## Reductions:
-- On SEMI_COLON RIGHT_BRACE IMPORTANT EOF
--   reduce production list(component_value_with_loc) ->
-- On HASH DOT COLON
--   reduce production option(WHITESPACE) ->

State 66:
## Known stack suffix:
## IDENT option(WHITESPACE) COLON list(component_value_with_loc)
## LR(1) items:
declaration -> IDENT option(WHITESPACE) COLON list(component_value_with_loc) . boption(IMPORTANT) [ SEMI_COLON RIGHT_BRACE EOF ]
## Transitions:
-- On IMPORTANT shift to state 67
-- On boption(IMPORTANT) shift to state 68
## Reductions:
-- On SEMI_COLON RIGHT_BRACE EOF
--   reduce production boption(IMPORTANT) ->

State 67:
## Known stack suffix:
## IMPORTANT
## LR(1) items:
boption(IMPORTANT) -> IMPORTANT . [ SEMI_COLON RIGHT_BRACE EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production boption(IMPORTANT) -> IMPORTANT

State 68:
## Known stack suffix:
## IDENT option(WHITESPACE) COLON list(component_value_with_loc) boption(IMPORTANT)
## LR(1) items:
declaration -> IDENT option(WHITESPACE) COLON list(component_value_with_loc) boption(IMPORTANT) . [ SEMI_COLON RIGHT_BRACE EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production declaration -> IDENT option(WHITESPACE) COLON list(component_value_with_loc) boption(IMPORTANT)

State 69:
## Known stack suffix:
## declarations_without_ending_semi_colon
## LR(1) items:
declarations -> declarations_without_ending_semi_colon . [ RIGHT_BRACE EOF ]
declarations -> declarations_without_ending_semi_colon . SEMI_COLON [ RIGHT_BRACE EOF ]
declarations_without_ending_semi_colon -> declarations_without_ending_semi_colon . SEMI_COLON declaration_or_at_rule [ SEMI_COLON RIGHT_BRACE EOF ]
## Transitions:
-- On SEMI_COLON shift to state 70
## Reductions:
-- On RIGHT_BRACE EOF
--   reduce production declarations -> declarations_without_ending_semi_colon

State 70:
## Known stack suffix:
## declarations_without_ending_semi_colon SEMI_COLON
## LR(1) items:
declarations -> declarations_without_ending_semi_colon SEMI_COLON . [ RIGHT_BRACE EOF ]
declarations_without_ending_semi_colon -> declarations_without_ending_semi_colon SEMI_COLON . declaration_or_at_rule [ SEMI_COLON RIGHT_BRACE EOF ]
## Transitions:
-- On NESTED_AT_RULE shift to state 1
-- On IDENT shift to state 63
-- On AT_RULE_WITHOUT_BODY shift to state 50
-- On AT_RULE shift to state 60
-- On declaration_or_at_rule shift to state 71
-- On declaration shift to state 72
-- On at_rule shift to state 73
## Reductions:
-- On RIGHT_BRACE EOF
--   reduce production declarations -> declarations_without_ending_semi_colon SEMI_COLON

State 71:
## Known stack suffix:
## declarations_without_ending_semi_colon SEMI_COLON declaration_or_at_rule
## LR(1) items:
declarations_without_ending_semi_colon -> declarations_without_ending_semi_colon SEMI_COLON declaration_or_at_rule . [ SEMI_COLON RIGHT_BRACE EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production declarations_without_ending_semi_colon -> declarations_without_ending_semi_colon SEMI_COLON declaration_or_at_rule

State 72:
## Known stack suffix:
## declaration
## LR(1) items:
declaration_or_at_rule -> declaration . [ SEMI_COLON RIGHT_BRACE EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production declaration_or_at_rule -> declaration

State 73:
## Known stack suffix:
## at_rule
## LR(1) items:
declaration_or_at_rule -> at_rule . [ SEMI_COLON RIGHT_BRACE EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production declaration_or_at_rule -> at_rule

State 74:
## Known stack suffix:
## AT_RULE prelude_with_loc LEFT_BRACE declarations_with_loc
## LR(1) items:
at_rule -> AT_RULE prelude_with_loc LEFT_BRACE declarations_with_loc . RIGHT_BRACE [ WHITESPACE URI UNICODE_RANGE STRING SEMI_COLON RIGHT_BRACE OPERATOR NUMBER NESTED_AT_RULE LEFT_PAREN LEFT_BRACKET LEFT_BRACE IDENT HASH FUNCTION FLOAT_DIMENSION EOF DOT DIMENSION DELIM COLON AT_RULE_WITHOUT_BODY AT_RULE ]
## Transitions:
-- On RIGHT_BRACE shift to state 75
## Reductions:

State 75:
## Known stack suffix:
## AT_RULE prelude_with_loc LEFT_BRACE declarations_with_loc RIGHT_BRACE
## LR(1) items:
at_rule -> AT_RULE prelude_with_loc LEFT_BRACE declarations_with_loc RIGHT_BRACE . [ WHITESPACE URI UNICODE_RANGE STRING SEMI_COLON RIGHT_BRACE OPERATOR NUMBER NESTED_AT_RULE LEFT_PAREN LEFT_BRACKET LEFT_BRACE IDENT HASH FUNCTION FLOAT_DIMENSION EOF DOT DIMENSION DELIM COLON AT_RULE_WITHOUT_BODY AT_RULE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production at_rule -> AT_RULE prelude_with_loc LEFT_BRACE declarations_with_loc RIGHT_BRACE

State 76:
## Known stack suffix:
## declarations
## LR(1) items:
declarations_with_loc -> declarations . [ RIGHT_BRACE EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production declarations_with_loc -> declarations

State 77:
## Known stack suffix:
## declaration_or_at_rule
## LR(1) items:
declarations_without_ending_semi_colon -> declaration_or_at_rule . [ SEMI_COLON RIGHT_BRACE EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production declarations_without_ending_semi_colon -> declaration_or_at_rule

State 78:
## Known stack suffix:
## NESTED_AT_RULE prelude_with_loc LEFT_BRACE stylesheet_without_eof
## LR(1) items:
at_rule -> NESTED_AT_RULE prelude_with_loc LEFT_BRACE stylesheet_without_eof . RIGHT_BRACE [ WHITESPACE URI UNICODE_RANGE STRING SEMI_COLON RIGHT_BRACE OPERATOR NUMBER NESTED_AT_RULE LEFT_PAREN LEFT_BRACKET LEFT_BRACE IDENT HASH FUNCTION FLOAT_DIMENSION EOF DOT DIMENSION DELIM COLON AT_RULE_WITHOUT_BODY AT_RULE ]
## Transitions:
-- On RIGHT_BRACE shift to state 79
## Reductions:

State 79:
## Known stack suffix:
## NESTED_AT_RULE prelude_with_loc LEFT_BRACE stylesheet_without_eof RIGHT_BRACE
## LR(1) items:
at_rule -> NESTED_AT_RULE prelude_with_loc LEFT_BRACE stylesheet_without_eof RIGHT_BRACE . [ WHITESPACE URI UNICODE_RANGE STRING SEMI_COLON RIGHT_BRACE OPERATOR NUMBER NESTED_AT_RULE LEFT_PAREN LEFT_BRACKET LEFT_BRACE IDENT HASH FUNCTION FLOAT_DIMENSION EOF DOT DIMENSION DELIM COLON AT_RULE_WITHOUT_BODY AT_RULE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production at_rule -> NESTED_AT_RULE prelude_with_loc LEFT_BRACE stylesheet_without_eof RIGHT_BRACE

State 80:
## Known stack suffix:
## style_rule
## LR(1) items:
rule -> style_rule . [ WHITESPACE URI UNICODE_RANGE STRING RIGHT_BRACE OPERATOR NUMBER NESTED_AT_RULE LEFT_PAREN LEFT_BRACKET LEFT_BRACE IDENT HASH FUNCTION FLOAT_DIMENSION EOF DOT DIMENSION DELIM COLON AT_RULE_WITHOUT_BODY AT_RULE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production rule -> style_rule

State 81:
## Known stack suffix:
## rule
## LR(1) items:
list(rule) -> rule . list(rule) [ RIGHT_BRACE EOF ]
## Transitions:
-- On WHITESPACE shift to state 2
-- On URI shift to state 3
-- On UNICODE_RANGE shift to state 4
-- On STRING shift to state 5
-- On OPERATOR shift to state 6
-- On NUMBER shift to state 7
-- On NESTED_AT_RULE shift to state 1
-- On LEFT_PAREN shift to state 9
-- On LEFT_BRACKET shift to state 17
-- On IDENT shift to state 38
-- On HASH shift to state 39
-- On FUNCTION shift to state 40
-- On FLOAT_DIMENSION shift to state 43
-- On DOT shift to state 44
-- On DIMENSION shift to state 45
-- On DELIM shift to state 46
-- On COLON shift to state 47
-- On AT_RULE_WITHOUT_BODY shift to state 50
-- On AT_RULE shift to state 60
-- On style_rule shift to state 80
-- On rule shift to state 81
-- On prelude_with_loc shift to state 82
-- On prelude shift to state 53
-- On paren_block shift to state 54
-- On list(rule) shift to state 87
-- On list(component_value_with_loc_in_prelude) shift to state 55
-- On component_value_with_loc_in_prelude shift to state 56
-- On component_value_in_prelude shift to state 58
-- On bracket_block shift to state 59
-- On at_rule shift to state 88
## Reductions:
-- On LEFT_BRACE
--   reduce production list(component_value_with_loc_in_prelude) ->
-- On RIGHT_BRACE EOF
--   reduce production list(rule) ->

State 82:
## Known stack suffix:
## prelude_with_loc
## LR(1) items:
style_rule -> prelude_with_loc . LEFT_BRACE RIGHT_BRACE [ WHITESPACE URI UNICODE_RANGE STRING RIGHT_BRACE OPERATOR NUMBER NESTED_AT_RULE LEFT_PAREN LEFT_BRACKET LEFT_BRACE IDENT HASH FUNCTION FLOAT_DIMENSION EOF DOT DIMENSION DELIM COLON AT_RULE_WITHOUT_BODY AT_RULE ]
style_rule -> prelude_with_loc . LEFT_BRACE declarations_with_loc RIGHT_BRACE [ WHITESPACE URI UNICODE_RANGE STRING RIGHT_BRACE OPERATOR NUMBER NESTED_AT_RULE LEFT_PAREN LEFT_BRACKET LEFT_BRACE IDENT HASH FUNCTION FLOAT_DIMENSION EOF DOT DIMENSION DELIM COLON AT_RULE_WITHOUT_BODY AT_RULE ]
## Transitions:
-- On LEFT_BRACE shift to state 83
## Reductions:

State 83:
## Known stack suffix:
## prelude_with_loc LEFT_BRACE
## LR(1) items:
style_rule -> prelude_with_loc LEFT_BRACE . RIGHT_BRACE [ WHITESPACE URI UNICODE_RANGE STRING RIGHT_BRACE OPERATOR NUMBER NESTED_AT_RULE LEFT_PAREN LEFT_BRACKET LEFT_BRACE IDENT HASH FUNCTION FLOAT_DIMENSION EOF DOT DIMENSION DELIM COLON AT_RULE_WITHOUT_BODY AT_RULE ]
style_rule -> prelude_with_loc LEFT_BRACE . declarations_with_loc RIGHT_BRACE [ WHITESPACE URI UNICODE_RANGE STRING RIGHT_BRACE OPERATOR NUMBER NESTED_AT_RULE LEFT_PAREN LEFT_BRACKET LEFT_BRACE IDENT HASH FUNCTION FLOAT_DIMENSION EOF DOT DIMENSION DELIM COLON AT_RULE_WITHOUT_BODY AT_RULE ]
## Transitions:
-- On RIGHT_BRACE shift to state 84
-- On NESTED_AT_RULE shift to state 1
-- On IDENT shift to state 63
-- On AT_RULE_WITHOUT_BODY shift to state 50
-- On AT_RULE shift to state 60
-- On declarations_without_ending_semi_colon shift to state 69
-- On declarations_with_loc shift to state 85
-- On declarations shift to state 76
-- On declaration_or_at_rule shift to state 77
-- On declaration shift to state 72
-- On at_rule shift to state 73
## Reductions:

State 84:
## Known stack suffix:
## prelude_with_loc LEFT_BRACE RIGHT_BRACE
## LR(1) items:
style_rule -> prelude_with_loc LEFT_BRACE RIGHT_BRACE . [ WHITESPACE URI UNICODE_RANGE STRING RIGHT_BRACE OPERATOR NUMBER NESTED_AT_RULE LEFT_PAREN LEFT_BRACKET LEFT_BRACE IDENT HASH FUNCTION FLOAT_DIMENSION EOF DOT DIMENSION DELIM COLON AT_RULE_WITHOUT_BODY AT_RULE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production style_rule -> prelude_with_loc LEFT_BRACE RIGHT_BRACE

State 85:
## Known stack suffix:
## prelude_with_loc LEFT_BRACE declarations_with_loc
## LR(1) items:
style_rule -> prelude_with_loc LEFT_BRACE declarations_with_loc . RIGHT_BRACE [ WHITESPACE URI UNICODE_RANGE STRING RIGHT_BRACE OPERATOR NUMBER NESTED_AT_RULE LEFT_PAREN LEFT_BRACKET LEFT_BRACE IDENT HASH FUNCTION FLOAT_DIMENSION EOF DOT DIMENSION DELIM COLON AT_RULE_WITHOUT_BODY AT_RULE ]
## Transitions:
-- On RIGHT_BRACE shift to state 86
## Reductions:

State 86:
## Known stack suffix:
## prelude_with_loc LEFT_BRACE declarations_with_loc RIGHT_BRACE
## LR(1) items:
style_rule -> prelude_with_loc LEFT_BRACE declarations_with_loc RIGHT_BRACE . [ WHITESPACE URI UNICODE_RANGE STRING RIGHT_BRACE OPERATOR NUMBER NESTED_AT_RULE LEFT_PAREN LEFT_BRACKET LEFT_BRACE IDENT HASH FUNCTION FLOAT_DIMENSION EOF DOT DIMENSION DELIM COLON AT_RULE_WITHOUT_BODY AT_RULE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production style_rule -> prelude_with_loc LEFT_BRACE declarations_with_loc RIGHT_BRACE

State 87:
## Known stack suffix:
## rule list(rule)
## LR(1) items:
list(rule) -> rule list(rule) . [ RIGHT_BRACE EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production list(rule) -> rule list(rule)

State 88:
## Known stack suffix:
## at_rule
## LR(1) items:
rule -> at_rule . [ WHITESPACE URI UNICODE_RANGE STRING RIGHT_BRACE OPERATOR NUMBER NESTED_AT_RULE LEFT_PAREN LEFT_BRACKET LEFT_BRACE IDENT HASH FUNCTION FLOAT_DIMENSION EOF DOT DIMENSION DELIM COLON AT_RULE_WITHOUT_BODY AT_RULE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production rule -> at_rule

State 89:
## Known stack suffix:
## list(rule)
## LR(1) items:
stylesheet_without_eof -> list(rule) . [ RIGHT_BRACE EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production stylesheet_without_eof -> list(rule)

State 90:
## Known stack suffix:
## declarations_with_loc
## LR(1) items:
declaration_list -> declarations_with_loc . EOF [ # ]
## Transitions:
-- On EOF shift to state 91
## Reductions:

State 91:
## Known stack suffix:
## declarations_with_loc EOF
## LR(1) items:
declaration_list -> declarations_with_loc EOF . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production declaration_list -> declarations_with_loc EOF

State 92:
## Known stack suffix:
## declaration_list
## LR(1) items:
declaration_list' -> declaration_list . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, accept declaration_list

State 93:
## Known stack suffix:
##
## LR(1) items:
stylesheet' -> . stylesheet [ # ]
## Transitions:
-- On WHITESPACE shift to state 2
-- On URI shift to state 3
-- On UNICODE_RANGE shift to state 4
-- On STRING shift to state 5
-- On OPERATOR shift to state 6
-- On NUMBER shift to state 7
-- On NESTED_AT_RULE shift to state 1
-- On LEFT_PAREN shift to state 9
-- On LEFT_BRACKET shift to state 17
-- On IDENT shift to state 38
-- On HASH shift to state 39
-- On FUNCTION shift to state 40
-- On FLOAT_DIMENSION shift to state 43
-- On DOT shift to state 44
-- On DIMENSION shift to state 45
-- On DELIM shift to state 46
-- On COLON shift to state 47
-- On AT_RULE_WITHOUT_BODY shift to state 50
-- On AT_RULE shift to state 60
-- On stylesheet_without_eof shift to state 94
-- On stylesheet shift to state 96
-- On style_rule shift to state 80
-- On rule shift to state 81
-- On prelude_with_loc shift to state 82
-- On prelude shift to state 53
-- On paren_block shift to state 54
-- On list(rule) shift to state 89
-- On list(component_value_with_loc_in_prelude) shift to state 55
-- On component_value_with_loc_in_prelude shift to state 56
-- On component_value_in_prelude shift to state 58
-- On bracket_block shift to state 59
-- On at_rule shift to state 88
## Reductions:
-- On LEFT_BRACE
--   reduce production list(component_value_with_loc_in_prelude) ->
-- On EOF
--   reduce production list(rule) ->

State 94:
## Known stack suffix:
## stylesheet_without_eof
## LR(1) items:
stylesheet -> stylesheet_without_eof . EOF [ # ]
## Transitions:
-- On EOF shift to state 95
## Reductions:

State 95:
## Known stack suffix:
## stylesheet_without_eof EOF
## LR(1) items:
stylesheet -> stylesheet_without_eof EOF . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production stylesheet -> stylesheet_without_eof EOF

State 96:
## Known stack suffix:
## stylesheet
## LR(1) items:
stylesheet' -> stylesheet . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, accept stylesheet

