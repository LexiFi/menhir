State 0:
## Known stack suffix:
##
## LR(1) items:
full_module' -> . full_module [ # ]
## Transitions:
-- On LT shift to state 1
-- On full_module shift to state 12
-- On asection shift to state 13
-- On annot shift to state 15
## Reductions:
-- On error reduce production annot ->
-- On TYPE reduce production annot ->
-- On EOF reduce production annot ->

State 1:
## Known stack suffix:
## LT
## LR(1) items:
asection -> LT . LIDENT afield_list GT [ error TYPE STAR SEMICOLON OF LT LIDENT EQ EOF COMMA COLON CL_PAREN CL_CURL CL_BRACK BAR ]
asection -> LT . LIDENT afield_list error [ error TYPE STAR SEMICOLON OF LT LIDENT EQ EOF COMMA COLON CL_PAREN CL_CURL CL_BRACK BAR ]
asection -> LT . error [ error TYPE STAR SEMICOLON OF LT LIDENT EQ EOF COMMA COLON CL_PAREN CL_CURL CL_BRACK BAR ]
## Transitions:
-- On error shift to state 2
-- On LIDENT shift to state 3
## Reductions:

State 2:
## Known stack suffix:
## LT error
## LR(1) items:
asection -> LT error . [ error TYPE STAR SEMICOLON OF LT LIDENT EQ EOF COMMA COLON CL_PAREN CL_CURL CL_BRACK BAR ]
## Transitions:
## Reductions:
-- On error reduce production asection -> LT error
-- On TYPE reduce production asection -> LT error
-- On STAR reduce production asection -> LT error
-- On SEMICOLON reduce production asection -> LT error
-- On OF reduce production asection -> LT error
-- On LT reduce production asection -> LT error
-- On LIDENT reduce production asection -> LT error
-- On EQ reduce production asection -> LT error
-- On EOF reduce production asection -> LT error
-- On COMMA reduce production asection -> LT error
-- On COLON reduce production asection -> LT error
-- On CL_PAREN reduce production asection -> LT error
-- On CL_CURL reduce production asection -> LT error
-- On CL_BRACK reduce production asection -> LT error
-- On BAR reduce production asection -> LT error

State 3:
## Known stack suffix:
## LT LIDENT
## LR(1) items:
asection -> LT LIDENT . afield_list GT [ error TYPE STAR SEMICOLON OF LT LIDENT EQ EOF COMMA COLON CL_PAREN CL_CURL CL_BRACK BAR ]
asection -> LT LIDENT . afield_list error [ error TYPE STAR SEMICOLON OF LT LIDENT EQ EOF COMMA COLON CL_PAREN CL_CURL CL_BRACK BAR ]
## Transitions:
-- On LIDENT shift to state 4
-- On afield_list shift to state 7
-- On afield shift to state 10
## Reductions:
-- On error reduce production afield_list ->
-- On GT reduce production afield_list ->

State 4:
## Known stack suffix:
## LIDENT
## LR(1) items:
afield -> LIDENT . EQ STRING [ error LIDENT GT ]
afield -> LIDENT . [ error LIDENT GT ]
## Transitions:
-- On EQ shift to state 5
## Reductions:
-- On error reduce production afield -> LIDENT
-- On LIDENT reduce production afield -> LIDENT
-- On GT reduce production afield -> LIDENT

State 5:
## Known stack suffix:
## LIDENT EQ
## LR(1) items:
afield -> LIDENT EQ . STRING [ error LIDENT GT ]
## Transitions:
-- On STRING shift to state 6
## Reductions:

State 6:
## Known stack suffix:
## LIDENT EQ STRING
## LR(1) items:
afield -> LIDENT EQ STRING . [ error LIDENT GT ]
## Transitions:
## Reductions:
-- On error reduce production afield -> LIDENT EQ STRING
-- On LIDENT reduce production afield -> LIDENT EQ STRING
-- On GT reduce production afield -> LIDENT EQ STRING

State 7:
## Known stack suffix:
## LT LIDENT afield_list
## LR(1) items:
asection -> LT LIDENT afield_list . GT [ error TYPE STAR SEMICOLON OF LT LIDENT EQ EOF COMMA COLON CL_PAREN CL_CURL CL_BRACK BAR ]
asection -> LT LIDENT afield_list . error [ error TYPE STAR SEMICOLON OF LT LIDENT EQ EOF COMMA COLON CL_PAREN CL_CURL CL_BRACK BAR ]
## Transitions:
-- On error shift to state 8
-- On GT shift to state 9
## Reductions:

State 8:
## Known stack suffix:
## LT LIDENT afield_list error
## LR(1) items:
asection -> LT LIDENT afield_list error . [ error TYPE STAR SEMICOLON OF LT LIDENT EQ EOF COMMA COLON CL_PAREN CL_CURL CL_BRACK BAR ]
## Transitions:
## Reductions:
-- On error reduce production asection -> LT LIDENT afield_list error
-- On TYPE reduce production asection -> LT LIDENT afield_list error
-- On STAR reduce production asection -> LT LIDENT afield_list error
-- On SEMICOLON reduce production asection -> LT LIDENT afield_list error
-- On OF reduce production asection -> LT LIDENT afield_list error
-- On LT reduce production asection -> LT LIDENT afield_list error
-- On LIDENT reduce production asection -> LT LIDENT afield_list error
-- On EQ reduce production asection -> LT LIDENT afield_list error
-- On EOF reduce production asection -> LT LIDENT afield_list error
-- On COMMA reduce production asection -> LT LIDENT afield_list error
-- On COLON reduce production asection -> LT LIDENT afield_list error
-- On CL_PAREN reduce production asection -> LT LIDENT afield_list error
-- On CL_CURL reduce production asection -> LT LIDENT afield_list error
-- On CL_BRACK reduce production asection -> LT LIDENT afield_list error
-- On BAR reduce production asection -> LT LIDENT afield_list error

State 9:
## Known stack suffix:
## LT LIDENT afield_list GT
## LR(1) items:
asection -> LT LIDENT afield_list GT . [ error TYPE STAR SEMICOLON OF LT LIDENT EQ EOF COMMA COLON CL_PAREN CL_CURL CL_BRACK BAR ]
## Transitions:
## Reductions:
-- On error reduce production asection -> LT LIDENT afield_list GT
-- On TYPE reduce production asection -> LT LIDENT afield_list GT
-- On STAR reduce production asection -> LT LIDENT afield_list GT
-- On SEMICOLON reduce production asection -> LT LIDENT afield_list GT
-- On OF reduce production asection -> LT LIDENT afield_list GT
-- On LT reduce production asection -> LT LIDENT afield_list GT
-- On LIDENT reduce production asection -> LT LIDENT afield_list GT
-- On EQ reduce production asection -> LT LIDENT afield_list GT
-- On EOF reduce production asection -> LT LIDENT afield_list GT
-- On COMMA reduce production asection -> LT LIDENT afield_list GT
-- On COLON reduce production asection -> LT LIDENT afield_list GT
-- On CL_PAREN reduce production asection -> LT LIDENT afield_list GT
-- On CL_CURL reduce production asection -> LT LIDENT afield_list GT
-- On CL_BRACK reduce production asection -> LT LIDENT afield_list GT
-- On BAR reduce production asection -> LT LIDENT afield_list GT

State 10:
## Known stack suffix:
## afield
## LR(1) items:
afield_list -> afield . afield_list [ error GT ]
## Transitions:
-- On LIDENT shift to state 4
-- On afield_list shift to state 11
-- On afield shift to state 10
## Reductions:
-- On error reduce production afield_list ->
-- On GT reduce production afield_list ->

State 11:
## Known stack suffix:
## afield afield_list
## LR(1) items:
afield_list -> afield afield_list . [ error GT ]
## Transitions:
## Reductions:
-- On error reduce production afield_list -> afield afield_list
-- On GT reduce production afield_list -> afield afield_list

State 12:
## Known stack suffix:
## full_module
## LR(1) items:
full_module' -> full_module . [ # ]
## Transitions:
## Reductions:
-- On # accept full_module

State 13:
## Known stack suffix:
## asection
## LR(1) items:
annot -> asection . annot [ error TYPE STAR SEMICOLON OF LIDENT EQ EOF COMMA COLON CL_PAREN CL_CURL CL_BRACK BAR ]
## Transitions:
-- On LT shift to state 1
-- On asection shift to state 13
-- On annot shift to state 14
## Reductions:
-- On error reduce production annot ->
-- On TYPE reduce production annot ->
-- On STAR reduce production annot ->
-- On SEMICOLON reduce production annot ->
-- On OF reduce production annot ->
-- On LIDENT reduce production annot ->
-- On EQ reduce production annot ->
-- On EOF reduce production annot ->
-- On COMMA reduce production annot ->
-- On COLON reduce production annot ->
-- On CL_PAREN reduce production annot ->
-- On CL_CURL reduce production annot ->
-- On CL_BRACK reduce production annot ->
-- On BAR reduce production annot ->

State 14:
## Known stack suffix:
## asection annot
## LR(1) items:
annot -> asection annot . [ error TYPE STAR SEMICOLON OF LIDENT EQ EOF COMMA COLON CL_PAREN CL_CURL CL_BRACK BAR ]
## Transitions:
## Reductions:
-- On error reduce production annot -> asection annot
-- On TYPE reduce production annot -> asection annot
-- On STAR reduce production annot -> asection annot
-- On SEMICOLON reduce production annot -> asection annot
-- On OF reduce production annot -> asection annot
-- On LIDENT reduce production annot -> asection annot
-- On EQ reduce production annot -> asection annot
-- On EOF reduce production annot -> asection annot
-- On COMMA reduce production annot -> asection annot
-- On COLON reduce production annot -> asection annot
-- On CL_PAREN reduce production annot -> asection annot
-- On CL_CURL reduce production annot -> asection annot
-- On CL_BRACK reduce production annot -> asection annot
-- On BAR reduce production annot -> asection annot

State 15:
## Known stack suffix:
## annot
## LR(1) items:
full_module -> annot . module_body [ # ]
## Transitions:
-- On error shift to state 16
-- On TYPE shift to state 17
-- On EOF shift to state 142
-- On module_item shift to state 143
-- On module_body shift to state 145
## Reductions:

State 16:
## Known stack suffix:
## error
## LR(1) items:
module_body -> error . [ # ]
## Transitions:
## Reductions:
-- On # reduce production module_body -> error

State 17:
## Known stack suffix:
## TYPE
## LR(1) items:
module_item -> TYPE . type_param LIDENT annot EQ type_expr [ error TYPE EOF ]
module_item -> TYPE . type_param LIDENT annot EQ error [ error TYPE EOF ]
module_item -> TYPE . type_param LIDENT annot error [ error TYPE EOF ]
module_item -> TYPE . error [ error TYPE EOF ]
## Transitions:
-- On error shift to state 18
-- On TIDENT shift to state 19
-- On OP_PAREN shift to state 20
-- On type_param shift to state 27
## Reductions:
-- On LIDENT reduce production type_param ->

State 18:
## Known stack suffix:
## TYPE error
## LR(1) items:
module_item -> TYPE error . [ error TYPE EOF ]
## Transitions:
## Reductions:
-- On error reduce production module_item -> TYPE error
-- On TYPE reduce production module_item -> TYPE error
-- On EOF reduce production module_item -> TYPE error

State 19:
## Known stack suffix:
## TIDENT
## LR(1) items:
type_param -> TIDENT . [ LIDENT ]
## Transitions:
## Reductions:
-- On LIDENT reduce production type_param -> TIDENT

State 20:
## Known stack suffix:
## OP_PAREN
## LR(1) items:
type_param -> OP_PAREN . type_var_list CL_PAREN [ LIDENT ]
type_param -> OP_PAREN . type_var_list error [ LIDENT ]
## Transitions:
-- On TIDENT shift to state 21
-- On type_var_list shift to state 24
## Reductions:

State 21:
## Known stack suffix:
## TIDENT
## LR(1) items:
type_var_list -> TIDENT . COMMA type_var_list [ error CL_PAREN ]
type_var_list -> TIDENT . [ error CL_PAREN ]
## Transitions:
-- On COMMA shift to state 22
## Reductions:
-- On error reduce production type_var_list -> TIDENT
-- On CL_PAREN reduce production type_var_list -> TIDENT

State 22:
## Known stack suffix:
## TIDENT COMMA
## LR(1) items:
type_var_list -> TIDENT COMMA . type_var_list [ error CL_PAREN ]
## Transitions:
-- On TIDENT shift to state 21
-- On type_var_list shift to state 23
## Reductions:

State 23:
## Known stack suffix:
## TIDENT COMMA type_var_list
## LR(1) items:
type_var_list -> TIDENT COMMA type_var_list . [ error CL_PAREN ]
## Transitions:
## Reductions:
-- On error reduce production type_var_list -> TIDENT COMMA type_var_list
-- On CL_PAREN reduce production type_var_list -> TIDENT COMMA type_var_list

State 24:
## Known stack suffix:
## OP_PAREN type_var_list
## LR(1) items:
type_param -> OP_PAREN type_var_list . CL_PAREN [ LIDENT ]
type_param -> OP_PAREN type_var_list . error [ LIDENT ]
## Transitions:
-- On error shift to state 25
-- On CL_PAREN shift to state 26
## Reductions:

State 25:
## Known stack suffix:
## OP_PAREN type_var_list error
## LR(1) items:
type_param -> OP_PAREN type_var_list error . [ LIDENT ]
## Transitions:
## Reductions:
-- On LIDENT reduce production type_param -> OP_PAREN type_var_list error

State 26:
## Known stack suffix:
## OP_PAREN type_var_list CL_PAREN
## LR(1) items:
type_param -> OP_PAREN type_var_list CL_PAREN . [ LIDENT ]
## Transitions:
## Reductions:
-- On LIDENT reduce production type_param -> OP_PAREN type_var_list CL_PAREN

State 27:
## Known stack suffix:
## TYPE type_param
## LR(1) items:
module_item -> TYPE type_param . LIDENT annot EQ type_expr [ error TYPE EOF ]
module_item -> TYPE type_param . LIDENT annot EQ error [ error TYPE EOF ]
module_item -> TYPE type_param . LIDENT annot error [ error TYPE EOF ]
## Transitions:
-- On LIDENT shift to state 28
## Reductions:

State 28:
## Known stack suffix:
## TYPE type_param LIDENT
## LR(1) items:
module_item -> TYPE type_param LIDENT . annot EQ type_expr [ error TYPE EOF ]
module_item -> TYPE type_param LIDENT . annot EQ error [ error TYPE EOF ]
module_item -> TYPE type_param LIDENT . annot error [ error TYPE EOF ]
## Transitions:
-- On LT shift to state 1
-- On asection shift to state 13
-- On annot shift to state 29
## Reductions:
-- On error reduce production annot ->
-- On EQ reduce production annot ->

State 29:
## Known stack suffix:
## TYPE type_param LIDENT annot
## LR(1) items:
module_item -> TYPE type_param LIDENT annot . EQ type_expr [ error TYPE EOF ]
module_item -> TYPE type_param LIDENT annot . EQ error [ error TYPE EOF ]
module_item -> TYPE type_param LIDENT annot . error [ error TYPE EOF ]
## Transitions:
-- On error shift to state 30
-- On EQ shift to state 31
## Reductions:

State 30:
## Known stack suffix:
## TYPE type_param LIDENT annot error
## LR(1) items:
module_item -> TYPE type_param LIDENT annot error . [ error TYPE EOF ]
## Transitions:
## Reductions:
-- On error reduce production module_item -> TYPE type_param LIDENT annot error
-- On TYPE reduce production module_item -> TYPE type_param LIDENT annot error
-- On EOF reduce production module_item -> TYPE type_param LIDENT annot error

State 31:
## Known stack suffix:
## TYPE type_param LIDENT annot EQ
## LR(1) items:
module_item -> TYPE type_param LIDENT annot EQ . type_expr [ error TYPE EOF ]
module_item -> TYPE type_param LIDENT annot EQ . error [ error TYPE EOF ]
## Transitions:
-- On error shift to state 32
-- On TIDENT shift to state 33
-- On OP_PAREN shift to state 34
-- On OP_CURL shift to state 44
-- On OP_BRACK shift to state 52
-- On type_inst shift to state 57
-- On type_expr shift to state 141
-- On type_args shift to state 60
## Reductions:
-- On LIDENT reduce production type_args ->

State 32:
## Known stack suffix:
## TYPE type_param LIDENT annot EQ error
## LR(1) items:
module_item -> TYPE type_param LIDENT annot EQ error . [ error TYPE EOF ]
## Transitions:
## Reductions:
-- On error reduce production module_item -> TYPE type_param LIDENT annot EQ error
-- On TYPE reduce production module_item -> TYPE type_param LIDENT annot EQ error
-- On EOF reduce production module_item -> TYPE type_param LIDENT annot EQ error

State 33:
## Known stack suffix:
## TIDENT
## LR(1) items:
type_expr -> TIDENT . [ error TYPE STAR SEMICOLON LIDENT EOF COMMA CL_PAREN CL_CURL CL_BRACK BAR ]
## Transitions:
## Reductions:
-- On error reduce production type_expr -> TIDENT
-- On TYPE reduce production type_expr -> TIDENT
-- On STAR reduce production type_expr -> TIDENT
-- On SEMICOLON reduce production type_expr -> TIDENT
-- On LIDENT reduce production type_expr -> TIDENT
-- On EOF reduce production type_expr -> TIDENT
-- On COMMA reduce production type_expr -> TIDENT
-- On CL_PAREN reduce production type_expr -> TIDENT
-- On CL_CURL reduce production type_expr -> TIDENT
-- On CL_BRACK reduce production type_expr -> TIDENT
-- On BAR reduce production type_expr -> TIDENT

State 34:
## Known stack suffix:
## OP_PAREN
## LR(1) items:
type_args -> OP_PAREN . type_arg_list CL_PAREN [ LIDENT ]
type_args -> OP_PAREN . type_arg_list error [ LIDENT ]
type_expr -> OP_PAREN . annot_expr CL_PAREN annot [ error TYPE STAR SEMICOLON LIDENT EOF COMMA CL_PAREN CL_CURL CL_BRACK BAR ]
type_expr -> OP_PAREN . cartesian_product CL_PAREN annot [ error TYPE STAR SEMICOLON LIDENT EOF COMMA CL_PAREN CL_CURL CL_BRACK BAR ]
type_expr -> OP_PAREN . cartesian_product error [ error TYPE STAR SEMICOLON LIDENT EOF COMMA CL_PAREN CL_CURL CL_BRACK BAR ]
## Transitions:
-- On TIDENT shift to state 35
-- On OP_PAREN shift to state 36
-- On OP_CURL shift to state 37
-- On OP_BRACK shift to state 99
-- On LT shift to state 86
-- On type_inst shift to state 106
-- On type_expr shift to state 108
-- On type_args shift to state 112
-- On type_arg_list shift to state 114
-- On cartesian_product shift to state 134
-- On asection shift to state 92
-- On annot_expr shift to state 138
-- On annot shift to state 131
## Reductions:
-- On error reduce production cartesian_product ->
-- On LIDENT reduce production type_args ->
-- On COLON reduce production annot ->
-- On CL_PAREN reduce production cartesian_product ->

State 35:
## Known stack suffix:
## TIDENT
## LR(1) items:
type_expr -> TIDENT . [ STAR LIDENT COMMA CL_PAREN ]
## Transitions:
## Reductions:
-- On STAR reduce production type_expr -> TIDENT
-- On LIDENT reduce production type_expr -> TIDENT
-- On COMMA reduce production type_expr -> TIDENT
-- On CL_PAREN reduce production type_expr -> TIDENT

State 36:
## Known stack suffix:
## OP_PAREN
## LR(1) items:
type_args -> OP_PAREN . type_arg_list CL_PAREN [ LIDENT ]
type_args -> OP_PAREN . type_arg_list error [ LIDENT ]
type_expr -> OP_PAREN . annot_expr CL_PAREN annot [ STAR LIDENT COMMA CL_PAREN ]
type_expr -> OP_PAREN . cartesian_product CL_PAREN annot [ STAR LIDENT COMMA CL_PAREN ]
type_expr -> OP_PAREN . cartesian_product error [ STAR LIDENT COMMA CL_PAREN ]
## Transitions:
-- On TIDENT shift to state 35
-- On OP_PAREN shift to state 36
-- On OP_CURL shift to state 37
-- On OP_BRACK shift to state 99
-- On LT shift to state 86
-- On type_inst shift to state 106
-- On type_expr shift to state 108
-- On type_args shift to state 112
-- On type_arg_list shift to state 114
-- On cartesian_product shift to state 117
-- On asection shift to state 92
-- On annot_expr shift to state 121
-- On annot shift to state 131
## Reductions:
-- On error reduce production cartesian_product ->
-- On LIDENT reduce production type_args ->
-- On COLON reduce production annot ->
-- On CL_PAREN reduce production cartesian_product ->

State 37:
## Known stack suffix:
## OP_CURL
## LR(1) items:
type_expr -> OP_CURL . field_list CL_CURL annot [ STAR LIDENT COMMA CL_PAREN ]
type_expr -> OP_CURL . CL_CURL annot [ STAR LIDENT COMMA CL_PAREN ]
type_expr -> OP_CURL . field_list error [ STAR LIDENT COMMA CL_PAREN ]
## Transitions:
-- On TILDE shift to state 38
-- On QUESTION shift to state 40
-- On LIDENT shift to state 42
-- On INHERIT shift to state 43
-- On CL_CURL shift to state 85
-- On field_name shift to state 47
-- On field_list shift to state 95
-- On field shift to state 81
## Reductions:

State 38:
## Known stack suffix:
## TILDE
## LR(1) items:
field_name -> TILDE . LIDENT [ error LT COLON ]
## Transitions:
-- On LIDENT shift to state 39
## Reductions:

State 39:
## Known stack suffix:
## TILDE LIDENT
## LR(1) items:
field_name -> TILDE LIDENT . [ error LT COLON ]
## Transitions:
## Reductions:
-- On error reduce production field_name -> TILDE LIDENT
-- On LT reduce production field_name -> TILDE LIDENT
-- On COLON reduce production field_name -> TILDE LIDENT

State 40:
## Known stack suffix:
## QUESTION
## LR(1) items:
field_name -> QUESTION . LIDENT [ error LT COLON ]
## Transitions:
-- On LIDENT shift to state 41
## Reductions:

State 41:
## Known stack suffix:
## QUESTION LIDENT
## LR(1) items:
field_name -> QUESTION LIDENT . [ error LT COLON ]
## Transitions:
## Reductions:
-- On error reduce production field_name -> QUESTION LIDENT
-- On LT reduce production field_name -> QUESTION LIDENT
-- On COLON reduce production field_name -> QUESTION LIDENT

State 42:
## Known stack suffix:
## LIDENT
## LR(1) items:
field_name -> LIDENT . [ error LT COLON ]
## Transitions:
## Reductions:
-- On error reduce production field_name -> LIDENT
-- On LT reduce production field_name -> LIDENT
-- On COLON reduce production field_name -> LIDENT

State 43:
## Known stack suffix:
## INHERIT
## LR(1) items:
field -> INHERIT . type_expr [ error SEMICOLON CL_CURL ]
## Transitions:
-- On TIDENT shift to state 33
-- On OP_PAREN shift to state 34
-- On OP_CURL shift to state 44
-- On OP_BRACK shift to state 52
-- On type_inst shift to state 57
-- On type_expr shift to state 84
-- On type_args shift to state 60
## Reductions:
-- On LIDENT reduce production type_args ->

State 44:
## Known stack suffix:
## OP_CURL
## LR(1) items:
type_expr -> OP_CURL . field_list CL_CURL annot [ error TYPE STAR SEMICOLON LIDENT EOF COMMA CL_PAREN CL_CURL CL_BRACK BAR ]
type_expr -> OP_CURL . CL_CURL annot [ error TYPE STAR SEMICOLON LIDENT EOF COMMA CL_PAREN CL_CURL CL_BRACK BAR ]
type_expr -> OP_CURL . field_list error [ error TYPE STAR SEMICOLON LIDENT EOF COMMA CL_PAREN CL_CURL CL_BRACK BAR ]
## Transitions:
-- On TILDE shift to state 38
-- On QUESTION shift to state 40
-- On LIDENT shift to state 42
-- On INHERIT shift to state 43
-- On CL_CURL shift to state 45
-- On field_name shift to state 47
-- On field_list shift to state 77
-- On field shift to state 81
## Reductions:

State 45:
## Known stack suffix:
## OP_CURL CL_CURL
## LR(1) items:
type_expr -> OP_CURL CL_CURL . annot [ error TYPE STAR SEMICOLON LIDENT EOF COMMA CL_PAREN CL_CURL CL_BRACK BAR ]
## Transitions:
-- On LT shift to state 1
-- On asection shift to state 13
-- On annot shift to state 46
## Reductions:
-- On error reduce production annot ->
-- On TYPE reduce production annot ->
-- On STAR reduce production annot ->
-- On SEMICOLON reduce production annot ->
-- On LIDENT reduce production annot ->
-- On EOF reduce production annot ->
-- On COMMA reduce production annot ->
-- On CL_PAREN reduce production annot ->
-- On CL_CURL reduce production annot ->
-- On CL_BRACK reduce production annot ->
-- On BAR reduce production annot ->

State 46:
## Known stack suffix:
## OP_CURL CL_CURL annot
## LR(1) items:
type_expr -> OP_CURL CL_CURL annot . [ error TYPE STAR SEMICOLON LIDENT EOF COMMA CL_PAREN CL_CURL CL_BRACK BAR ]
## Transitions:
## Reductions:
-- On error reduce production type_expr -> OP_CURL CL_CURL annot
-- On TYPE reduce production type_expr -> OP_CURL CL_CURL annot
-- On STAR reduce production type_expr -> OP_CURL CL_CURL annot
-- On SEMICOLON reduce production type_expr -> OP_CURL CL_CURL annot
-- On LIDENT reduce production type_expr -> OP_CURL CL_CURL annot
-- On EOF reduce production type_expr -> OP_CURL CL_CURL annot
-- On COMMA reduce production type_expr -> OP_CURL CL_CURL annot
-- On CL_PAREN reduce production type_expr -> OP_CURL CL_CURL annot
-- On CL_CURL reduce production type_expr -> OP_CURL CL_CURL annot
-- On CL_BRACK reduce production type_expr -> OP_CURL CL_CURL annot
-- On BAR reduce production type_expr -> OP_CURL CL_CURL annot

State 47:
## Known stack suffix:
## field_name
## LR(1) items:
field -> field_name . annot COLON type_expr [ error SEMICOLON CL_CURL ]
field -> field_name . annot COLON error [ error SEMICOLON CL_CURL ]
field -> field_name . annot error [ error SEMICOLON CL_CURL ]
## Transitions:
-- On LT shift to state 1
-- On asection shift to state 13
-- On annot shift to state 48
## Reductions:
-- On error reduce production annot ->
-- On COLON reduce production annot ->

State 48:
## Known stack suffix:
## field_name annot
## LR(1) items:
field -> field_name annot . COLON type_expr [ error SEMICOLON CL_CURL ]
field -> field_name annot . COLON error [ error SEMICOLON CL_CURL ]
field -> field_name annot . error [ error SEMICOLON CL_CURL ]
## Transitions:
-- On error shift to state 49
-- On COLON shift to state 50
## Reductions:

State 49:
## Known stack suffix:
## field_name annot error
## LR(1) items:
field -> field_name annot error . [ error SEMICOLON CL_CURL ]
## Transitions:
## Reductions:
-- On error reduce production field -> field_name annot error
-- On SEMICOLON reduce production field -> field_name annot error
-- On CL_CURL reduce production field -> field_name annot error

State 50:
## Known stack suffix:
## field_name annot COLON
## LR(1) items:
field -> field_name annot COLON . type_expr [ error SEMICOLON CL_CURL ]
field -> field_name annot COLON . error [ error SEMICOLON CL_CURL ]
## Transitions:
-- On error shift to state 51
-- On TIDENT shift to state 33
-- On OP_PAREN shift to state 34
-- On OP_CURL shift to state 44
-- On OP_BRACK shift to state 52
-- On type_inst shift to state 57
-- On type_expr shift to state 76
-- On type_args shift to state 60
## Reductions:
-- On LIDENT reduce production type_args ->

State 51:
## Known stack suffix:
## field_name annot COLON error
## LR(1) items:
field -> field_name annot COLON error . [ error SEMICOLON CL_CURL ]
## Transitions:
## Reductions:
-- On error reduce production field -> field_name annot COLON error
-- On SEMICOLON reduce production field -> field_name annot COLON error
-- On CL_CURL reduce production field -> field_name annot COLON error

State 52:
## Known stack suffix:
## OP_BRACK
## LR(1) items:
type_expr -> OP_BRACK . variant_list CL_BRACK annot [ error TYPE STAR SEMICOLON LIDENT EOF COMMA CL_PAREN CL_CURL CL_BRACK BAR ]
type_expr -> OP_BRACK . CL_BRACK annot [ error TYPE STAR SEMICOLON LIDENT EOF COMMA CL_PAREN CL_CURL CL_BRACK BAR ]
type_expr -> OP_BRACK . variant_list error [ error TYPE STAR SEMICOLON LIDENT EOF COMMA CL_PAREN CL_CURL CL_BRACK BAR ]
## Transitions:
-- On UIDENT shift to state 53
-- On INHERIT shift to state 62
-- On CL_BRACK shift to state 64
-- On BAR shift to state 66
-- On variant_list0 shift to state 71
-- On variant_list shift to state 72
-- On variant shift to state 68
## Reductions:

State 53:
## Known stack suffix:
## UIDENT
## LR(1) items:
variant -> UIDENT . annot OF type_expr [ error CL_BRACK BAR ]
variant -> UIDENT . annot [ error CL_BRACK BAR ]
variant -> UIDENT . annot OF error [ error CL_BRACK BAR ]
## Transitions:
-- On LT shift to state 1
-- On asection shift to state 13
-- On annot shift to state 54
## Reductions:
-- On error reduce production annot ->
-- On OF reduce production annot ->
-- On CL_BRACK reduce production annot ->
-- On BAR reduce production annot ->

State 54:
## Known stack suffix:
## UIDENT annot
## LR(1) items:
variant -> UIDENT annot . OF type_expr [ error CL_BRACK BAR ]
variant -> UIDENT annot . [ error CL_BRACK BAR ]
variant -> UIDENT annot . OF error [ error CL_BRACK BAR ]
## Transitions:
-- On OF shift to state 55
## Reductions:
-- On error reduce production variant -> UIDENT annot
-- On CL_BRACK reduce production variant -> UIDENT annot
-- On BAR reduce production variant -> UIDENT annot

State 55:
## Known stack suffix:
## UIDENT annot OF
## LR(1) items:
variant -> UIDENT annot OF . type_expr [ error CL_BRACK BAR ]
variant -> UIDENT annot OF . error [ error CL_BRACK BAR ]
## Transitions:
-- On error shift to state 56
-- On TIDENT shift to state 33
-- On OP_PAREN shift to state 34
-- On OP_CURL shift to state 44
-- On OP_BRACK shift to state 52
-- On type_inst shift to state 57
-- On type_expr shift to state 59
-- On type_args shift to state 60
## Reductions:
-- On LIDENT reduce production type_args ->

State 56:
## Known stack suffix:
## UIDENT annot OF error
## LR(1) items:
variant -> UIDENT annot OF error . [ error CL_BRACK BAR ]
## Transitions:
## Reductions:
-- On error reduce production variant -> UIDENT annot OF error
-- On CL_BRACK reduce production variant -> UIDENT annot OF error
-- On BAR reduce production variant -> UIDENT annot OF error

State 57:
## Known stack suffix:
## type_inst
## LR(1) items:
type_expr -> type_inst . annot [ error TYPE STAR SEMICOLON LIDENT EOF COMMA CL_PAREN CL_CURL CL_BRACK BAR ]
## Transitions:
-- On LT shift to state 1
-- On asection shift to state 13
-- On annot shift to state 58
## Reductions:
-- On error reduce production annot ->
-- On TYPE reduce production annot ->
-- On STAR reduce production annot ->
-- On SEMICOLON reduce production annot ->
-- On LIDENT reduce production annot ->
-- On EOF reduce production annot ->
-- On COMMA reduce production annot ->
-- On CL_PAREN reduce production annot ->
-- On CL_CURL reduce production annot ->
-- On CL_BRACK reduce production annot ->
-- On BAR reduce production annot ->

State 58:
## Known stack suffix:
## type_inst annot
## LR(1) items:
type_expr -> type_inst annot . [ error TYPE STAR SEMICOLON LIDENT EOF COMMA CL_PAREN CL_CURL CL_BRACK BAR ]
## Transitions:
## Reductions:
-- On error reduce production type_expr -> type_inst annot
-- On TYPE reduce production type_expr -> type_inst annot
-- On STAR reduce production type_expr -> type_inst annot
-- On SEMICOLON reduce production type_expr -> type_inst annot
-- On LIDENT reduce production type_expr -> type_inst annot
-- On EOF reduce production type_expr -> type_inst annot
-- On COMMA reduce production type_expr -> type_inst annot
-- On CL_PAREN reduce production type_expr -> type_inst annot
-- On CL_CURL reduce production type_expr -> type_inst annot
-- On CL_BRACK reduce production type_expr -> type_inst annot
-- On BAR reduce production type_expr -> type_inst annot

State 59:
## Known stack suffix:
## UIDENT annot OF type_expr
## LR(1) items:
type_args -> type_expr . [ LIDENT ]
variant -> UIDENT annot OF type_expr . [ error CL_BRACK BAR ]
## Transitions:
## Reductions:
-- On error reduce production variant -> UIDENT annot OF type_expr
-- On LIDENT reduce production type_args -> type_expr
-- On CL_BRACK reduce production variant -> UIDENT annot OF type_expr
-- On BAR reduce production variant -> UIDENT annot OF type_expr

State 60:
## Known stack suffix:
## type_args
## LR(1) items:
type_inst -> type_args . LIDENT [ error TYPE STAR SEMICOLON LT LIDENT EOF COMMA CL_PAREN CL_CURL CL_BRACK BAR ]
## Transitions:
-- On LIDENT shift to state 61
## Reductions:

State 61:
## Known stack suffix:
## type_args LIDENT
## LR(1) items:
type_inst -> type_args LIDENT . [ error TYPE STAR SEMICOLON LT LIDENT EOF COMMA CL_PAREN CL_CURL CL_BRACK BAR ]
## Transitions:
## Reductions:
-- On error reduce production type_inst -> type_args LIDENT
-- On TYPE reduce production type_inst -> type_args LIDENT
-- On STAR reduce production type_inst -> type_args LIDENT
-- On SEMICOLON reduce production type_inst -> type_args LIDENT
-- On LT reduce production type_inst -> type_args LIDENT
-- On LIDENT reduce production type_inst -> type_args LIDENT
-- On EOF reduce production type_inst -> type_args LIDENT
-- On COMMA reduce production type_inst -> type_args LIDENT
-- On CL_PAREN reduce production type_inst -> type_args LIDENT
-- On CL_CURL reduce production type_inst -> type_args LIDENT
-- On CL_BRACK reduce production type_inst -> type_args LIDENT
-- On BAR reduce production type_inst -> type_args LIDENT

State 62:
## Known stack suffix:
## INHERIT
## LR(1) items:
variant -> INHERIT . type_expr [ error CL_BRACK BAR ]
## Transitions:
-- On TIDENT shift to state 33
-- On OP_PAREN shift to state 34
-- On OP_CURL shift to state 44
-- On OP_BRACK shift to state 52
-- On type_inst shift to state 57
-- On type_expr shift to state 63
-- On type_args shift to state 60
## Reductions:
-- On LIDENT reduce production type_args ->

State 63:
## Known stack suffix:
## INHERIT type_expr
## LR(1) items:
type_args -> type_expr . [ LIDENT ]
variant -> INHERIT type_expr . [ error CL_BRACK BAR ]
## Transitions:
## Reductions:
-- On error reduce production variant -> INHERIT type_expr
-- On LIDENT reduce production type_args -> type_expr
-- On CL_BRACK reduce production variant -> INHERIT type_expr
-- On BAR reduce production variant -> INHERIT type_expr

State 64:
## Known stack suffix:
## OP_BRACK CL_BRACK
## LR(1) items:
type_expr -> OP_BRACK CL_BRACK . annot [ error TYPE STAR SEMICOLON LIDENT EOF COMMA CL_PAREN CL_CURL CL_BRACK BAR ]
## Transitions:
-- On LT shift to state 1
-- On asection shift to state 13
-- On annot shift to state 65
## Reductions:
-- On error reduce production annot ->
-- On TYPE reduce production annot ->
-- On STAR reduce production annot ->
-- On SEMICOLON reduce production annot ->
-- On LIDENT reduce production annot ->
-- On EOF reduce production annot ->
-- On COMMA reduce production annot ->
-- On CL_PAREN reduce production annot ->
-- On CL_CURL reduce production annot ->
-- On CL_BRACK reduce production annot ->
-- On BAR reduce production annot ->

State 65:
## Known stack suffix:
## OP_BRACK CL_BRACK annot
## LR(1) items:
type_expr -> OP_BRACK CL_BRACK annot . [ error TYPE STAR SEMICOLON LIDENT EOF COMMA CL_PAREN CL_CURL CL_BRACK BAR ]
## Transitions:
## Reductions:
-- On error reduce production type_expr -> OP_BRACK CL_BRACK annot
-- On TYPE reduce production type_expr -> OP_BRACK CL_BRACK annot
-- On STAR reduce production type_expr -> OP_BRACK CL_BRACK annot
-- On SEMICOLON reduce production type_expr -> OP_BRACK CL_BRACK annot
-- On LIDENT reduce production type_expr -> OP_BRACK CL_BRACK annot
-- On EOF reduce production type_expr -> OP_BRACK CL_BRACK annot
-- On COMMA reduce production type_expr -> OP_BRACK CL_BRACK annot
-- On CL_PAREN reduce production type_expr -> OP_BRACK CL_BRACK annot
-- On CL_CURL reduce production type_expr -> OP_BRACK CL_BRACK annot
-- On CL_BRACK reduce production type_expr -> OP_BRACK CL_BRACK annot
-- On BAR reduce production type_expr -> OP_BRACK CL_BRACK annot

State 66:
## Known stack suffix:
## BAR
## LR(1) items:
variant_list -> BAR . variant_list0 [ error CL_BRACK ]
## Transitions:
-- On UIDENT shift to state 53
-- On INHERIT shift to state 62
-- On variant_list0 shift to state 67
-- On variant shift to state 68
## Reductions:

State 67:
## Known stack suffix:
## BAR variant_list0
## LR(1) items:
variant_list -> BAR variant_list0 . [ error CL_BRACK ]
## Transitions:
## Reductions:
-- On error reduce production variant_list -> BAR variant_list0
-- On CL_BRACK reduce production variant_list -> BAR variant_list0

State 68:
## Known stack suffix:
## variant
## LR(1) items:
variant_list0 -> variant . BAR variant_list0 [ error CL_BRACK ]
variant_list0 -> variant . [ error CL_BRACK ]
## Transitions:
-- On BAR shift to state 69
## Reductions:
-- On error reduce production variant_list0 -> variant
-- On CL_BRACK reduce production variant_list0 -> variant

State 69:
## Known stack suffix:
## variant BAR
## LR(1) items:
variant_list0 -> variant BAR . variant_list0 [ error CL_BRACK ]
## Transitions:
-- On UIDENT shift to state 53
-- On INHERIT shift to state 62
-- On variant_list0 shift to state 70
-- On variant shift to state 68
## Reductions:

State 70:
## Known stack suffix:
## variant BAR variant_list0
## LR(1) items:
variant_list0 -> variant BAR variant_list0 . [ error CL_BRACK ]
## Transitions:
## Reductions:
-- On error reduce production variant_list0 -> variant BAR variant_list0
-- On CL_BRACK reduce production variant_list0 -> variant BAR variant_list0

State 71:
## Known stack suffix:
## variant_list0
## LR(1) items:
variant_list -> variant_list0 . [ error CL_BRACK ]
## Transitions:
## Reductions:
-- On error reduce production variant_list -> variant_list0
-- On CL_BRACK reduce production variant_list -> variant_list0

State 72:
## Known stack suffix:
## OP_BRACK variant_list
## LR(1) items:
type_expr -> OP_BRACK variant_list . CL_BRACK annot [ error TYPE STAR SEMICOLON LIDENT EOF COMMA CL_PAREN CL_CURL CL_BRACK BAR ]
type_expr -> OP_BRACK variant_list . error [ error TYPE STAR SEMICOLON LIDENT EOF COMMA CL_PAREN CL_CURL CL_BRACK BAR ]
## Transitions:
-- On error shift to state 73
-- On CL_BRACK shift to state 74
## Reductions:

State 73:
## Known stack suffix:
## OP_BRACK variant_list error
## LR(1) items:
type_expr -> OP_BRACK variant_list error . [ error TYPE STAR SEMICOLON LIDENT EOF COMMA CL_PAREN CL_CURL CL_BRACK BAR ]
## Transitions:
## Reductions:
-- On error reduce production type_expr -> OP_BRACK variant_list error
-- On TYPE reduce production type_expr -> OP_BRACK variant_list error
-- On STAR reduce production type_expr -> OP_BRACK variant_list error
-- On SEMICOLON reduce production type_expr -> OP_BRACK variant_list error
-- On LIDENT reduce production type_expr -> OP_BRACK variant_list error
-- On EOF reduce production type_expr -> OP_BRACK variant_list error
-- On COMMA reduce production type_expr -> OP_BRACK variant_list error
-- On CL_PAREN reduce production type_expr -> OP_BRACK variant_list error
-- On CL_CURL reduce production type_expr -> OP_BRACK variant_list error
-- On CL_BRACK reduce production type_expr -> OP_BRACK variant_list error
-- On BAR reduce production type_expr -> OP_BRACK variant_list error

State 74:
## Known stack suffix:
## OP_BRACK variant_list CL_BRACK
## LR(1) items:
type_expr -> OP_BRACK variant_list CL_BRACK . annot [ error TYPE STAR SEMICOLON LIDENT EOF COMMA CL_PAREN CL_CURL CL_BRACK BAR ]
## Transitions:
-- On LT shift to state 1
-- On asection shift to state 13
-- On annot shift to state 75
## Reductions:
-- On error reduce production annot ->
-- On TYPE reduce production annot ->
-- On STAR reduce production annot ->
-- On SEMICOLON reduce production annot ->
-- On LIDENT reduce production annot ->
-- On EOF reduce production annot ->
-- On COMMA reduce production annot ->
-- On CL_PAREN reduce production annot ->
-- On CL_CURL reduce production annot ->
-- On CL_BRACK reduce production annot ->
-- On BAR reduce production annot ->

State 75:
## Known stack suffix:
## OP_BRACK variant_list CL_BRACK annot
## LR(1) items:
type_expr -> OP_BRACK variant_list CL_BRACK annot . [ error TYPE STAR SEMICOLON LIDENT EOF COMMA CL_PAREN CL_CURL CL_BRACK BAR ]
## Transitions:
## Reductions:
-- On error reduce production type_expr -> OP_BRACK variant_list CL_BRACK annot
-- On TYPE reduce production type_expr -> OP_BRACK variant_list CL_BRACK annot
-- On STAR reduce production type_expr -> OP_BRACK variant_list CL_BRACK annot
-- On SEMICOLON reduce production type_expr -> OP_BRACK variant_list CL_BRACK annot
-- On LIDENT reduce production type_expr -> OP_BRACK variant_list CL_BRACK annot
-- On EOF reduce production type_expr -> OP_BRACK variant_list CL_BRACK annot
-- On COMMA reduce production type_expr -> OP_BRACK variant_list CL_BRACK annot
-- On CL_PAREN reduce production type_expr -> OP_BRACK variant_list CL_BRACK annot
-- On CL_CURL reduce production type_expr -> OP_BRACK variant_list CL_BRACK annot
-- On CL_BRACK reduce production type_expr -> OP_BRACK variant_list CL_BRACK annot
-- On BAR reduce production type_expr -> OP_BRACK variant_list CL_BRACK annot

State 76:
## Known stack suffix:
## field_name annot COLON type_expr
## LR(1) items:
field -> field_name annot COLON type_expr . [ error SEMICOLON CL_CURL ]
type_args -> type_expr . [ LIDENT ]
## Transitions:
## Reductions:
-- On error reduce production field -> field_name annot COLON type_expr
-- On SEMICOLON reduce production field -> field_name annot COLON type_expr
-- On LIDENT reduce production type_args -> type_expr
-- On CL_CURL reduce production field -> field_name annot COLON type_expr

State 77:
## Known stack suffix:
## OP_CURL field_list
## LR(1) items:
type_expr -> OP_CURL field_list . CL_CURL annot [ error TYPE STAR SEMICOLON LIDENT EOF COMMA CL_PAREN CL_CURL CL_BRACK BAR ]
type_expr -> OP_CURL field_list . error [ error TYPE STAR SEMICOLON LIDENT EOF COMMA CL_PAREN CL_CURL CL_BRACK BAR ]
## Transitions:
-- On error shift to state 78
-- On CL_CURL shift to state 79
## Reductions:

State 78:
## Known stack suffix:
## OP_CURL field_list error
## LR(1) items:
type_expr -> OP_CURL field_list error . [ error TYPE STAR SEMICOLON LIDENT EOF COMMA CL_PAREN CL_CURL CL_BRACK BAR ]
## Transitions:
## Reductions:
-- On error reduce production type_expr -> OP_CURL field_list error
-- On TYPE reduce production type_expr -> OP_CURL field_list error
-- On STAR reduce production type_expr -> OP_CURL field_list error
-- On SEMICOLON reduce production type_expr -> OP_CURL field_list error
-- On LIDENT reduce production type_expr -> OP_CURL field_list error
-- On EOF reduce production type_expr -> OP_CURL field_list error
-- On COMMA reduce production type_expr -> OP_CURL field_list error
-- On CL_PAREN reduce production type_expr -> OP_CURL field_list error
-- On CL_CURL reduce production type_expr -> OP_CURL field_list error
-- On CL_BRACK reduce production type_expr -> OP_CURL field_list error
-- On BAR reduce production type_expr -> OP_CURL field_list error

State 79:
## Known stack suffix:
## OP_CURL field_list CL_CURL
## LR(1) items:
type_expr -> OP_CURL field_list CL_CURL . annot [ error TYPE STAR SEMICOLON LIDENT EOF COMMA CL_PAREN CL_CURL CL_BRACK BAR ]
## Transitions:
-- On LT shift to state 1
-- On asection shift to state 13
-- On annot shift to state 80
## Reductions:
-- On error reduce production annot ->
-- On TYPE reduce production annot ->
-- On STAR reduce production annot ->
-- On SEMICOLON reduce production annot ->
-- On LIDENT reduce production annot ->
-- On EOF reduce production annot ->
-- On COMMA reduce production annot ->
-- On CL_PAREN reduce production annot ->
-- On CL_CURL reduce production annot ->
-- On CL_BRACK reduce production annot ->
-- On BAR reduce production annot ->

State 80:
## Known stack suffix:
## OP_CURL field_list CL_CURL annot
## LR(1) items:
type_expr -> OP_CURL field_list CL_CURL annot . [ error TYPE STAR SEMICOLON LIDENT EOF COMMA CL_PAREN CL_CURL CL_BRACK BAR ]
## Transitions:
## Reductions:
-- On error reduce production type_expr -> OP_CURL field_list CL_CURL annot
-- On TYPE reduce production type_expr -> OP_CURL field_list CL_CURL annot
-- On STAR reduce production type_expr -> OP_CURL field_list CL_CURL annot
-- On SEMICOLON reduce production type_expr -> OP_CURL field_list CL_CURL annot
-- On LIDENT reduce production type_expr -> OP_CURL field_list CL_CURL annot
-- On EOF reduce production type_expr -> OP_CURL field_list CL_CURL annot
-- On COMMA reduce production type_expr -> OP_CURL field_list CL_CURL annot
-- On CL_PAREN reduce production type_expr -> OP_CURL field_list CL_CURL annot
-- On CL_CURL reduce production type_expr -> OP_CURL field_list CL_CURL annot
-- On CL_BRACK reduce production type_expr -> OP_CURL field_list CL_CURL annot
-- On BAR reduce production type_expr -> OP_CURL field_list CL_CURL annot

State 81:
## Known stack suffix:
## field
## LR(1) items:
field_list -> field . SEMICOLON field_list [ error CL_CURL ]
field_list -> field . SEMICOLON [ error CL_CURL ]
field_list -> field . [ error CL_CURL ]
## Transitions:
-- On SEMICOLON shift to state 82
## Reductions:
-- On error reduce production field_list -> field
-- On CL_CURL reduce production field_list -> field

State 82:
## Known stack suffix:
## field SEMICOLON
## LR(1) items:
field_list -> field SEMICOLON . field_list [ error CL_CURL ]
field_list -> field SEMICOLON . [ error CL_CURL ]
## Transitions:
-- On TILDE shift to state 38
-- On QUESTION shift to state 40
-- On LIDENT shift to state 42
-- On INHERIT shift to state 43
-- On field_name shift to state 47
-- On field_list shift to state 83
-- On field shift to state 81
## Reductions:
-- On error reduce production field_list -> field SEMICOLON
-- On CL_CURL reduce production field_list -> field SEMICOLON

State 83:
## Known stack suffix:
## field SEMICOLON field_list
## LR(1) items:
field_list -> field SEMICOLON field_list . [ error CL_CURL ]
## Transitions:
## Reductions:
-- On error reduce production field_list -> field SEMICOLON field_list
-- On CL_CURL reduce production field_list -> field SEMICOLON field_list

State 84:
## Known stack suffix:
## INHERIT type_expr
## LR(1) items:
field -> INHERIT type_expr . [ error SEMICOLON CL_CURL ]
type_args -> type_expr . [ LIDENT ]
## Transitions:
## Reductions:
-- On error reduce production field -> INHERIT type_expr
-- On SEMICOLON reduce production field -> INHERIT type_expr
-- On LIDENT reduce production type_args -> type_expr
-- On CL_CURL reduce production field -> INHERIT type_expr

State 85:
## Known stack suffix:
## OP_CURL CL_CURL
## LR(1) items:
type_expr -> OP_CURL CL_CURL . annot [ STAR LIDENT COMMA CL_PAREN ]
## Transitions:
-- On LT shift to state 86
-- On asection shift to state 92
-- On annot shift to state 94
## Reductions:
-- On STAR reduce production annot ->
-- On LIDENT reduce production annot ->
-- On COMMA reduce production annot ->
-- On CL_PAREN reduce production annot ->

State 86:
## Known stack suffix:
## LT
## LR(1) items:
asection -> LT . LIDENT afield_list GT [ STAR LT LIDENT COMMA COLON CL_PAREN ]
asection -> LT . LIDENT afield_list error [ STAR LT LIDENT COMMA COLON CL_PAREN ]
asection -> LT . error [ STAR LT LIDENT COMMA COLON CL_PAREN ]
## Transitions:
-- On error shift to state 87
-- On LIDENT shift to state 88
## Reductions:

State 87:
## Known stack suffix:
## LT error
## LR(1) items:
asection -> LT error . [ STAR LT LIDENT COMMA COLON CL_PAREN ]
## Transitions:
## Reductions:
-- On STAR reduce production asection -> LT error
-- On LT reduce production asection -> LT error
-- On LIDENT reduce production asection -> LT error
-- On COMMA reduce production asection -> LT error
-- On COLON reduce production asection -> LT error
-- On CL_PAREN reduce production asection -> LT error

State 88:
## Known stack suffix:
## LT LIDENT
## LR(1) items:
asection -> LT LIDENT . afield_list GT [ STAR LT LIDENT COMMA COLON CL_PAREN ]
asection -> LT LIDENT . afield_list error [ STAR LT LIDENT COMMA COLON CL_PAREN ]
## Transitions:
-- On LIDENT shift to state 4
-- On afield_list shift to state 89
-- On afield shift to state 10
## Reductions:
-- On error reduce production afield_list ->
-- On GT reduce production afield_list ->

State 89:
## Known stack suffix:
## LT LIDENT afield_list
## LR(1) items:
asection -> LT LIDENT afield_list . GT [ STAR LT LIDENT COMMA COLON CL_PAREN ]
asection -> LT LIDENT afield_list . error [ STAR LT LIDENT COMMA COLON CL_PAREN ]
## Transitions:
-- On error shift to state 90
-- On GT shift to state 91
## Reductions:

State 90:
## Known stack suffix:
## LT LIDENT afield_list error
## LR(1) items:
asection -> LT LIDENT afield_list error . [ STAR LT LIDENT COMMA COLON CL_PAREN ]
## Transitions:
## Reductions:
-- On STAR reduce production asection -> LT LIDENT afield_list error
-- On LT reduce production asection -> LT LIDENT afield_list error
-- On LIDENT reduce production asection -> LT LIDENT afield_list error
-- On COMMA reduce production asection -> LT LIDENT afield_list error
-- On COLON reduce production asection -> LT LIDENT afield_list error
-- On CL_PAREN reduce production asection -> LT LIDENT afield_list error

State 91:
## Known stack suffix:
## LT LIDENT afield_list GT
## LR(1) items:
asection -> LT LIDENT afield_list GT . [ STAR LT LIDENT COMMA COLON CL_PAREN ]
## Transitions:
## Reductions:
-- On STAR reduce production asection -> LT LIDENT afield_list GT
-- On LT reduce production asection -> LT LIDENT afield_list GT
-- On LIDENT reduce production asection -> LT LIDENT afield_list GT
-- On COMMA reduce production asection -> LT LIDENT afield_list GT
-- On COLON reduce production asection -> LT LIDENT afield_list GT
-- On CL_PAREN reduce production asection -> LT LIDENT afield_list GT

State 92:
## Known stack suffix:
## asection
## LR(1) items:
annot -> asection . annot [ STAR LIDENT COMMA COLON CL_PAREN ]
## Transitions:
-- On LT shift to state 86
-- On asection shift to state 92
-- On annot shift to state 93
## Reductions:
-- On STAR reduce production annot ->
-- On LIDENT reduce production annot ->
-- On COMMA reduce production annot ->
-- On COLON reduce production annot ->
-- On CL_PAREN reduce production annot ->

State 93:
## Known stack suffix:
## asection annot
## LR(1) items:
annot -> asection annot . [ STAR LIDENT COMMA COLON CL_PAREN ]
## Transitions:
## Reductions:
-- On STAR reduce production annot -> asection annot
-- On LIDENT reduce production annot -> asection annot
-- On COMMA reduce production annot -> asection annot
-- On COLON reduce production annot -> asection annot
-- On CL_PAREN reduce production annot -> asection annot

State 94:
## Known stack suffix:
## OP_CURL CL_CURL annot
## LR(1) items:
type_expr -> OP_CURL CL_CURL annot . [ STAR LIDENT COMMA CL_PAREN ]
## Transitions:
## Reductions:
-- On STAR reduce production type_expr -> OP_CURL CL_CURL annot
-- On LIDENT reduce production type_expr -> OP_CURL CL_CURL annot
-- On COMMA reduce production type_expr -> OP_CURL CL_CURL annot
-- On CL_PAREN reduce production type_expr -> OP_CURL CL_CURL annot

State 95:
## Known stack suffix:
## OP_CURL field_list
## LR(1) items:
type_expr -> OP_CURL field_list . CL_CURL annot [ STAR LIDENT COMMA CL_PAREN ]
type_expr -> OP_CURL field_list . error [ STAR LIDENT COMMA CL_PAREN ]
## Transitions:
-- On error shift to state 96
-- On CL_CURL shift to state 97
## Reductions:

State 96:
## Known stack suffix:
## OP_CURL field_list error
## LR(1) items:
type_expr -> OP_CURL field_list error . [ STAR LIDENT COMMA CL_PAREN ]
## Transitions:
## Reductions:
-- On STAR reduce production type_expr -> OP_CURL field_list error
-- On LIDENT reduce production type_expr -> OP_CURL field_list error
-- On COMMA reduce production type_expr -> OP_CURL field_list error
-- On CL_PAREN reduce production type_expr -> OP_CURL field_list error

State 97:
## Known stack suffix:
## OP_CURL field_list CL_CURL
## LR(1) items:
type_expr -> OP_CURL field_list CL_CURL . annot [ STAR LIDENT COMMA CL_PAREN ]
## Transitions:
-- On LT shift to state 86
-- On asection shift to state 92
-- On annot shift to state 98
## Reductions:
-- On STAR reduce production annot ->
-- On LIDENT reduce production annot ->
-- On COMMA reduce production annot ->
-- On CL_PAREN reduce production annot ->

State 98:
## Known stack suffix:
## OP_CURL field_list CL_CURL annot
## LR(1) items:
type_expr -> OP_CURL field_list CL_CURL annot . [ STAR LIDENT COMMA CL_PAREN ]
## Transitions:
## Reductions:
-- On STAR reduce production type_expr -> OP_CURL field_list CL_CURL annot
-- On LIDENT reduce production type_expr -> OP_CURL field_list CL_CURL annot
-- On COMMA reduce production type_expr -> OP_CURL field_list CL_CURL annot
-- On CL_PAREN reduce production type_expr -> OP_CURL field_list CL_CURL annot

State 99:
## Known stack suffix:
## OP_BRACK
## LR(1) items:
type_expr -> OP_BRACK . variant_list CL_BRACK annot [ STAR LIDENT COMMA CL_PAREN ]
type_expr -> OP_BRACK . CL_BRACK annot [ STAR LIDENT COMMA CL_PAREN ]
type_expr -> OP_BRACK . variant_list error [ STAR LIDENT COMMA CL_PAREN ]
## Transitions:
-- On UIDENT shift to state 53
-- On INHERIT shift to state 62
-- On CL_BRACK shift to state 100
-- On BAR shift to state 66
-- On variant_list0 shift to state 71
-- On variant_list shift to state 102
-- On variant shift to state 68
## Reductions:

State 100:
## Known stack suffix:
## OP_BRACK CL_BRACK
## LR(1) items:
type_expr -> OP_BRACK CL_BRACK . annot [ STAR LIDENT COMMA CL_PAREN ]
## Transitions:
-- On LT shift to state 86
-- On asection shift to state 92
-- On annot shift to state 101
## Reductions:
-- On STAR reduce production annot ->
-- On LIDENT reduce production annot ->
-- On COMMA reduce production annot ->
-- On CL_PAREN reduce production annot ->

State 101:
## Known stack suffix:
## OP_BRACK CL_BRACK annot
## LR(1) items:
type_expr -> OP_BRACK CL_BRACK annot . [ STAR LIDENT COMMA CL_PAREN ]
## Transitions:
## Reductions:
-- On STAR reduce production type_expr -> OP_BRACK CL_BRACK annot
-- On LIDENT reduce production type_expr -> OP_BRACK CL_BRACK annot
-- On COMMA reduce production type_expr -> OP_BRACK CL_BRACK annot
-- On CL_PAREN reduce production type_expr -> OP_BRACK CL_BRACK annot

State 102:
## Known stack suffix:
## OP_BRACK variant_list
## LR(1) items:
type_expr -> OP_BRACK variant_list . CL_BRACK annot [ STAR LIDENT COMMA CL_PAREN ]
type_expr -> OP_BRACK variant_list . error [ STAR LIDENT COMMA CL_PAREN ]
## Transitions:
-- On error shift to state 103
-- On CL_BRACK shift to state 104
## Reductions:

State 103:
## Known stack suffix:
## OP_BRACK variant_list error
## LR(1) items:
type_expr -> OP_BRACK variant_list error . [ STAR LIDENT COMMA CL_PAREN ]
## Transitions:
## Reductions:
-- On STAR reduce production type_expr -> OP_BRACK variant_list error
-- On LIDENT reduce production type_expr -> OP_BRACK variant_list error
-- On COMMA reduce production type_expr -> OP_BRACK variant_list error
-- On CL_PAREN reduce production type_expr -> OP_BRACK variant_list error

State 104:
## Known stack suffix:
## OP_BRACK variant_list CL_BRACK
## LR(1) items:
type_expr -> OP_BRACK variant_list CL_BRACK . annot [ STAR LIDENT COMMA CL_PAREN ]
## Transitions:
-- On LT shift to state 86
-- On asection shift to state 92
-- On annot shift to state 105
## Reductions:
-- On STAR reduce production annot ->
-- On LIDENT reduce production annot ->
-- On COMMA reduce production annot ->
-- On CL_PAREN reduce production annot ->

State 105:
## Known stack suffix:
## OP_BRACK variant_list CL_BRACK annot
## LR(1) items:
type_expr -> OP_BRACK variant_list CL_BRACK annot . [ STAR LIDENT COMMA CL_PAREN ]
## Transitions:
## Reductions:
-- On STAR reduce production type_expr -> OP_BRACK variant_list CL_BRACK annot
-- On LIDENT reduce production type_expr -> OP_BRACK variant_list CL_BRACK annot
-- On COMMA reduce production type_expr -> OP_BRACK variant_list CL_BRACK annot
-- On CL_PAREN reduce production type_expr -> OP_BRACK variant_list CL_BRACK annot

State 106:
## Known stack suffix:
## type_inst
## LR(1) items:
type_expr -> type_inst . annot [ STAR LIDENT COMMA CL_PAREN ]
## Transitions:
-- On LT shift to state 86
-- On asection shift to state 92
-- On annot shift to state 107
## Reductions:
-- On STAR reduce production annot ->
-- On LIDENT reduce production annot ->
-- On COMMA reduce production annot ->
-- On CL_PAREN reduce production annot ->

State 107:
## Known stack suffix:
## type_inst annot
## LR(1) items:
type_expr -> type_inst annot . [ STAR LIDENT COMMA CL_PAREN ]
## Transitions:
## Reductions:
-- On STAR reduce production type_expr -> type_inst annot
-- On LIDENT reduce production type_expr -> type_inst annot
-- On COMMA reduce production type_expr -> type_inst annot
-- On CL_PAREN reduce production type_expr -> type_inst annot

State 108:
## Known stack suffix:
## type_expr
## LR(1) items:
annot_expr -> type_expr . [ STAR CL_PAREN ]
type_arg_list -> type_expr . COMMA type_arg_list [ error CL_PAREN ]
type_arg_list -> type_expr . COMMA type_expr [ error CL_PAREN ]
type_args -> type_expr . [ LIDENT ]
## Transitions:
-- On COMMA shift to state 109
## Reductions:
-- On STAR reduce production annot_expr -> type_expr
-- On LIDENT reduce production type_args -> type_expr
-- On CL_PAREN reduce production annot_expr -> type_expr

State 109:
## Known stack suffix:
## type_expr COMMA
## LR(1) items:
type_arg_list -> type_expr COMMA . type_arg_list [ error CL_PAREN ]
type_arg_list -> type_expr COMMA . type_expr [ error CL_PAREN ]
## Transitions:
-- On TIDENT shift to state 33
-- On OP_PAREN shift to state 34
-- On OP_CURL shift to state 44
-- On OP_BRACK shift to state 52
-- On type_inst shift to state 57
-- On type_expr shift to state 110
-- On type_args shift to state 60
-- On type_arg_list shift to state 111
## Reductions:
-- On LIDENT reduce production type_args ->

State 110:
## Known stack suffix:
## type_expr COMMA type_expr
## LR(1) items:
type_arg_list -> type_expr . COMMA type_arg_list [ error CL_PAREN ]
type_arg_list -> type_expr . COMMA type_expr [ error CL_PAREN ]
type_arg_list -> type_expr COMMA type_expr . [ error CL_PAREN ]
type_args -> type_expr . [ LIDENT ]
## Transitions:
-- On COMMA shift to state 109
## Reductions:
-- On error reduce production type_arg_list -> type_expr COMMA type_expr
-- On LIDENT reduce production type_args -> type_expr
-- On CL_PAREN reduce production type_arg_list -> type_expr COMMA type_expr

State 111:
## Known stack suffix:
## type_expr COMMA type_arg_list
## LR(1) items:
type_arg_list -> type_expr COMMA type_arg_list . [ error CL_PAREN ]
## Transitions:
## Reductions:
-- On error reduce production type_arg_list -> type_expr COMMA type_arg_list
-- On CL_PAREN reduce production type_arg_list -> type_expr COMMA type_arg_list

State 112:
## Known stack suffix:
## type_args
## LR(1) items:
type_inst -> type_args . LIDENT [ STAR LT LIDENT COMMA CL_PAREN ]
## Transitions:
-- On LIDENT shift to state 113
## Reductions:

State 113:
## Known stack suffix:
## type_args LIDENT
## LR(1) items:
type_inst -> type_args LIDENT . [ STAR LT LIDENT COMMA CL_PAREN ]
## Transitions:
## Reductions:
-- On STAR reduce production type_inst -> type_args LIDENT
-- On LT reduce production type_inst -> type_args LIDENT
-- On LIDENT reduce production type_inst -> type_args LIDENT
-- On COMMA reduce production type_inst -> type_args LIDENT
-- On CL_PAREN reduce production type_inst -> type_args LIDENT

State 114:
## Known stack suffix:
## OP_PAREN type_arg_list
## LR(1) items:
type_args -> OP_PAREN type_arg_list . CL_PAREN [ LIDENT ]
type_args -> OP_PAREN type_arg_list . error [ LIDENT ]
## Transitions:
-- On error shift to state 115
-- On CL_PAREN shift to state 116
## Reductions:

State 115:
## Known stack suffix:
## OP_PAREN type_arg_list error
## LR(1) items:
type_args -> OP_PAREN type_arg_list error . [ LIDENT ]
## Transitions:
## Reductions:
-- On LIDENT reduce production type_args -> OP_PAREN type_arg_list error

State 116:
## Known stack suffix:
## OP_PAREN type_arg_list CL_PAREN
## LR(1) items:
type_args -> OP_PAREN type_arg_list CL_PAREN . [ LIDENT ]
## Transitions:
## Reductions:
-- On LIDENT reduce production type_args -> OP_PAREN type_arg_list CL_PAREN

State 117:
## Known stack suffix:
## OP_PAREN cartesian_product
## LR(1) items:
type_expr -> OP_PAREN cartesian_product . CL_PAREN annot [ STAR LIDENT COMMA CL_PAREN ]
type_expr -> OP_PAREN cartesian_product . error [ STAR LIDENT COMMA CL_PAREN ]
## Transitions:
-- On error shift to state 118
-- On CL_PAREN shift to state 119
## Reductions:

State 118:
## Known stack suffix:
## OP_PAREN cartesian_product error
## LR(1) items:
type_expr -> OP_PAREN cartesian_product error . [ STAR LIDENT COMMA CL_PAREN ]
## Transitions:
## Reductions:
-- On STAR reduce production type_expr -> OP_PAREN cartesian_product error
-- On LIDENT reduce production type_expr -> OP_PAREN cartesian_product error
-- On COMMA reduce production type_expr -> OP_PAREN cartesian_product error
-- On CL_PAREN reduce production type_expr -> OP_PAREN cartesian_product error

State 119:
## Known stack suffix:
## OP_PAREN cartesian_product CL_PAREN
## LR(1) items:
type_expr -> OP_PAREN cartesian_product CL_PAREN . annot [ STAR LIDENT COMMA CL_PAREN ]
## Transitions:
-- On LT shift to state 86
-- On asection shift to state 92
-- On annot shift to state 120
## Reductions:
-- On STAR reduce production annot ->
-- On LIDENT reduce production annot ->
-- On COMMA reduce production annot ->
-- On CL_PAREN reduce production annot ->

State 120:
## Known stack suffix:
## OP_PAREN cartesian_product CL_PAREN annot
## LR(1) items:
type_expr -> OP_PAREN cartesian_product CL_PAREN annot . [ STAR LIDENT COMMA CL_PAREN ]
## Transitions:
## Reductions:
-- On STAR reduce production type_expr -> OP_PAREN cartesian_product CL_PAREN annot
-- On LIDENT reduce production type_expr -> OP_PAREN cartesian_product CL_PAREN annot
-- On COMMA reduce production type_expr -> OP_PAREN cartesian_product CL_PAREN annot
-- On CL_PAREN reduce production type_expr -> OP_PAREN cartesian_product CL_PAREN annot

State 121:
## Known stack suffix:
## OP_PAREN annot_expr
## LR(1) items:
cartesian_product -> annot_expr . STAR cartesian_product [ error CL_PAREN ]
cartesian_product -> annot_expr . STAR annot_expr [ error CL_PAREN ]
type_expr -> OP_PAREN annot_expr . CL_PAREN annot [ STAR LIDENT COMMA CL_PAREN ]
## Transitions:
-- On STAR shift to state 122
-- On CL_PAREN shift to state 129
## Reductions:

State 122:
## Known stack suffix:
## annot_expr STAR
## LR(1) items:
cartesian_product -> annot_expr STAR . cartesian_product [ error CL_PAREN ]
cartesian_product -> annot_expr STAR . annot_expr [ error CL_PAREN ]
## Transitions:
-- On TIDENT shift to state 33
-- On OP_PAREN shift to state 34
-- On OP_CURL shift to state 44
-- On OP_BRACK shift to state 52
-- On LT shift to state 86
-- On type_inst shift to state 57
-- On type_expr shift to state 123
-- On type_args shift to state 60
-- On cartesian_product shift to state 124
-- On asection shift to state 92
-- On annot_expr shift to state 125
-- On annot shift to state 126
## Reductions:
-- On error reduce production cartesian_product ->
-- On LIDENT reduce production type_args ->
-- On COLON reduce production annot ->
-- On CL_PAREN reduce production cartesian_product ->

State 123:
## Known stack suffix:
## type_expr
## LR(1) items:
annot_expr -> type_expr . [ error STAR CL_PAREN ]
type_args -> type_expr . [ LIDENT ]
## Transitions:
## Reductions:
-- On error reduce production annot_expr -> type_expr
-- On STAR reduce production annot_expr -> type_expr
-- On LIDENT reduce production type_args -> type_expr
-- On CL_PAREN reduce production annot_expr -> type_expr

State 124:
## Known stack suffix:
## annot_expr STAR cartesian_product
## LR(1) items:
cartesian_product -> annot_expr STAR cartesian_product . [ error CL_PAREN ]
## Transitions:
## Reductions:
-- On error reduce production cartesian_product -> annot_expr STAR cartesian_product
-- On CL_PAREN reduce production cartesian_product -> annot_expr STAR cartesian_product

State 125:
## Known stack suffix:
## annot_expr STAR annot_expr
## LR(1) items:
cartesian_product -> annot_expr . STAR cartesian_product [ error CL_PAREN ]
cartesian_product -> annot_expr . STAR annot_expr [ error CL_PAREN ]
cartesian_product -> annot_expr STAR annot_expr . [ error CL_PAREN ]
## Transitions:
-- On STAR shift to state 122
## Reductions:
-- On error reduce production cartesian_product -> annot_expr STAR annot_expr
-- On CL_PAREN reduce production cartesian_product -> annot_expr STAR annot_expr

State 126:
## Known stack suffix:
## annot
## LR(1) items:
annot_expr -> annot . COLON type_expr [ error STAR CL_PAREN ]
## Transitions:
-- On COLON shift to state 127
## Reductions:

State 127:
## Known stack suffix:
## annot COLON
## LR(1) items:
annot_expr -> annot COLON . type_expr [ error STAR CL_PAREN ]
## Transitions:
-- On TIDENT shift to state 33
-- On OP_PAREN shift to state 34
-- On OP_CURL shift to state 44
-- On OP_BRACK shift to state 52
-- On type_inst shift to state 57
-- On type_expr shift to state 128
-- On type_args shift to state 60
## Reductions:
-- On LIDENT reduce production type_args ->

State 128:
## Known stack suffix:
## annot COLON type_expr
## LR(1) items:
annot_expr -> annot COLON type_expr . [ error STAR CL_PAREN ]
type_args -> type_expr . [ LIDENT ]
## Transitions:
## Reductions:
-- On error reduce production annot_expr -> annot COLON type_expr
-- On STAR reduce production annot_expr -> annot COLON type_expr
-- On LIDENT reduce production type_args -> type_expr
-- On CL_PAREN reduce production annot_expr -> annot COLON type_expr

State 129:
## Known stack suffix:
## OP_PAREN annot_expr CL_PAREN
## LR(1) items:
type_expr -> OP_PAREN annot_expr CL_PAREN . annot [ STAR LIDENT COMMA CL_PAREN ]
## Transitions:
-- On LT shift to state 86
-- On asection shift to state 92
-- On annot shift to state 130
## Reductions:
-- On STAR reduce production annot ->
-- On LIDENT reduce production annot ->
-- On COMMA reduce production annot ->
-- On CL_PAREN reduce production annot ->

State 130:
## Known stack suffix:
## OP_PAREN annot_expr CL_PAREN annot
## LR(1) items:
type_expr -> OP_PAREN annot_expr CL_PAREN annot . [ STAR LIDENT COMMA CL_PAREN ]
## Transitions:
## Reductions:
-- On STAR reduce production type_expr -> OP_PAREN annot_expr CL_PAREN annot
-- On LIDENT reduce production type_expr -> OP_PAREN annot_expr CL_PAREN annot
-- On COMMA reduce production type_expr -> OP_PAREN annot_expr CL_PAREN annot
-- On CL_PAREN reduce production type_expr -> OP_PAREN annot_expr CL_PAREN annot

State 131:
## Known stack suffix:
## annot
## LR(1) items:
annot_expr -> annot . COLON type_expr [ STAR CL_PAREN ]
## Transitions:
-- On COLON shift to state 132
## Reductions:

State 132:
## Known stack suffix:
## annot COLON
## LR(1) items:
annot_expr -> annot COLON . type_expr [ STAR CL_PAREN ]
## Transitions:
-- On TIDENT shift to state 35
-- On OP_PAREN shift to state 36
-- On OP_CURL shift to state 37
-- On OP_BRACK shift to state 99
-- On type_inst shift to state 106
-- On type_expr shift to state 133
-- On type_args shift to state 112
## Reductions:
-- On LIDENT reduce production type_args ->

State 133:
## Known stack suffix:
## annot COLON type_expr
## LR(1) items:
annot_expr -> annot COLON type_expr . [ STAR CL_PAREN ]
type_args -> type_expr . [ LIDENT ]
## Transitions:
## Reductions:
-- On STAR reduce production annot_expr -> annot COLON type_expr
-- On LIDENT reduce production type_args -> type_expr
-- On CL_PAREN reduce production annot_expr -> annot COLON type_expr

State 134:
## Known stack suffix:
## OP_PAREN cartesian_product
## LR(1) items:
type_expr -> OP_PAREN cartesian_product . CL_PAREN annot [ error TYPE STAR SEMICOLON LIDENT EOF COMMA CL_PAREN CL_CURL CL_BRACK BAR ]
type_expr -> OP_PAREN cartesian_product . error [ error TYPE STAR SEMICOLON LIDENT EOF COMMA CL_PAREN CL_CURL CL_BRACK BAR ]
## Transitions:
-- On error shift to state 135
-- On CL_PAREN shift to state 136
## Reductions:

State 135:
## Known stack suffix:
## OP_PAREN cartesian_product error
## LR(1) items:
type_expr -> OP_PAREN cartesian_product error . [ error TYPE STAR SEMICOLON LIDENT EOF COMMA CL_PAREN CL_CURL CL_BRACK BAR ]
## Transitions:
## Reductions:
-- On error reduce production type_expr -> OP_PAREN cartesian_product error
-- On TYPE reduce production type_expr -> OP_PAREN cartesian_product error
-- On STAR reduce production type_expr -> OP_PAREN cartesian_product error
-- On SEMICOLON reduce production type_expr -> OP_PAREN cartesian_product error
-- On LIDENT reduce production type_expr -> OP_PAREN cartesian_product error
-- On EOF reduce production type_expr -> OP_PAREN cartesian_product error
-- On COMMA reduce production type_expr -> OP_PAREN cartesian_product error
-- On CL_PAREN reduce production type_expr -> OP_PAREN cartesian_product error
-- On CL_CURL reduce production type_expr -> OP_PAREN cartesian_product error
-- On CL_BRACK reduce production type_expr -> OP_PAREN cartesian_product error
-- On BAR reduce production type_expr -> OP_PAREN cartesian_product error

State 136:
## Known stack suffix:
## OP_PAREN cartesian_product CL_PAREN
## LR(1) items:
type_expr -> OP_PAREN cartesian_product CL_PAREN . annot [ error TYPE STAR SEMICOLON LIDENT EOF COMMA CL_PAREN CL_CURL CL_BRACK BAR ]
## Transitions:
-- On LT shift to state 1
-- On asection shift to state 13
-- On annot shift to state 137
## Reductions:
-- On error reduce production annot ->
-- On TYPE reduce production annot ->
-- On STAR reduce production annot ->
-- On SEMICOLON reduce production annot ->
-- On LIDENT reduce production annot ->
-- On EOF reduce production annot ->
-- On COMMA reduce production annot ->
-- On CL_PAREN reduce production annot ->
-- On CL_CURL reduce production annot ->
-- On CL_BRACK reduce production annot ->
-- On BAR reduce production annot ->

State 137:
## Known stack suffix:
## OP_PAREN cartesian_product CL_PAREN annot
## LR(1) items:
type_expr -> OP_PAREN cartesian_product CL_PAREN annot . [ error TYPE STAR SEMICOLON LIDENT EOF COMMA CL_PAREN CL_CURL CL_BRACK BAR ]
## Transitions:
## Reductions:
-- On error reduce production type_expr -> OP_PAREN cartesian_product CL_PAREN annot
-- On TYPE reduce production type_expr -> OP_PAREN cartesian_product CL_PAREN annot
-- On STAR reduce production type_expr -> OP_PAREN cartesian_product CL_PAREN annot
-- On SEMICOLON reduce production type_expr -> OP_PAREN cartesian_product CL_PAREN annot
-- On LIDENT reduce production type_expr -> OP_PAREN cartesian_product CL_PAREN annot
-- On EOF reduce production type_expr -> OP_PAREN cartesian_product CL_PAREN annot
-- On COMMA reduce production type_expr -> OP_PAREN cartesian_product CL_PAREN annot
-- On CL_PAREN reduce production type_expr -> OP_PAREN cartesian_product CL_PAREN annot
-- On CL_CURL reduce production type_expr -> OP_PAREN cartesian_product CL_PAREN annot
-- On CL_BRACK reduce production type_expr -> OP_PAREN cartesian_product CL_PAREN annot
-- On BAR reduce production type_expr -> OP_PAREN cartesian_product CL_PAREN annot

State 138:
## Known stack suffix:
## OP_PAREN annot_expr
## LR(1) items:
cartesian_product -> annot_expr . STAR cartesian_product [ error CL_PAREN ]
cartesian_product -> annot_expr . STAR annot_expr [ error CL_PAREN ]
type_expr -> OP_PAREN annot_expr . CL_PAREN annot [ error TYPE STAR SEMICOLON LIDENT EOF COMMA CL_PAREN CL_CURL CL_BRACK BAR ]
## Transitions:
-- On STAR shift to state 122
-- On CL_PAREN shift to state 139
## Reductions:

State 139:
## Known stack suffix:
## OP_PAREN annot_expr CL_PAREN
## LR(1) items:
type_expr -> OP_PAREN annot_expr CL_PAREN . annot [ error TYPE STAR SEMICOLON LIDENT EOF COMMA CL_PAREN CL_CURL CL_BRACK BAR ]
## Transitions:
-- On LT shift to state 1
-- On asection shift to state 13
-- On annot shift to state 140
## Reductions:
-- On error reduce production annot ->
-- On TYPE reduce production annot ->
-- On STAR reduce production annot ->
-- On SEMICOLON reduce production annot ->
-- On LIDENT reduce production annot ->
-- On EOF reduce production annot ->
-- On COMMA reduce production annot ->
-- On CL_PAREN reduce production annot ->
-- On CL_CURL reduce production annot ->
-- On CL_BRACK reduce production annot ->
-- On BAR reduce production annot ->

State 140:
## Known stack suffix:
## OP_PAREN annot_expr CL_PAREN annot
## LR(1) items:
type_expr -> OP_PAREN annot_expr CL_PAREN annot . [ error TYPE STAR SEMICOLON LIDENT EOF COMMA CL_PAREN CL_CURL CL_BRACK BAR ]
## Transitions:
## Reductions:
-- On error reduce production type_expr -> OP_PAREN annot_expr CL_PAREN annot
-- On TYPE reduce production type_expr -> OP_PAREN annot_expr CL_PAREN annot
-- On STAR reduce production type_expr -> OP_PAREN annot_expr CL_PAREN annot
-- On SEMICOLON reduce production type_expr -> OP_PAREN annot_expr CL_PAREN annot
-- On LIDENT reduce production type_expr -> OP_PAREN annot_expr CL_PAREN annot
-- On EOF reduce production type_expr -> OP_PAREN annot_expr CL_PAREN annot
-- On COMMA reduce production type_expr -> OP_PAREN annot_expr CL_PAREN annot
-- On CL_PAREN reduce production type_expr -> OP_PAREN annot_expr CL_PAREN annot
-- On CL_CURL reduce production type_expr -> OP_PAREN annot_expr CL_PAREN annot
-- On CL_BRACK reduce production type_expr -> OP_PAREN annot_expr CL_PAREN annot
-- On BAR reduce production type_expr -> OP_PAREN annot_expr CL_PAREN annot

State 141:
## Known stack suffix:
## TYPE type_param LIDENT annot EQ type_expr
## LR(1) items:
module_item -> TYPE type_param LIDENT annot EQ type_expr . [ error TYPE EOF ]
type_args -> type_expr . [ LIDENT ]
## Transitions:
## Reductions:
-- On error reduce production module_item -> TYPE type_param LIDENT annot EQ type_expr
-- On TYPE reduce production module_item -> TYPE type_param LIDENT annot EQ type_expr
-- On LIDENT reduce production type_args -> type_expr
-- On EOF reduce production module_item -> TYPE type_param LIDENT annot EQ type_expr

State 142:
## Known stack suffix:
## EOF
## LR(1) items:
module_body -> EOF . [ # ]
## Transitions:
## Reductions:
-- On # reduce production module_body -> EOF

State 143:
## Known stack suffix:
## module_item
## LR(1) items:
module_body -> module_item . module_body [ # ]
## Transitions:
-- On error shift to state 16
-- On TYPE shift to state 17
-- On EOF shift to state 142
-- On module_item shift to state 143
-- On module_body shift to state 144
## Reductions:

State 144:
## Known stack suffix:
## module_item module_body
## LR(1) items:
module_body -> module_item module_body . [ # ]
## Transitions:
## Reductions:
-- On # reduce production module_body -> module_item module_body

State 145:
## Known stack suffix:
## annot module_body
## LR(1) items:
full_module -> annot module_body . [ # ]
## Transitions:
## Reductions:
-- On # reduce production full_module -> annot module_body

