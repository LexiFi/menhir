Grammar has 21 nonterminal symbols, among which 1 start symbols.
Grammar has 24 terminal symbols.
Grammar has 64 productions.
nullable(variant_list0) = false
nullable(variant_list) = false
nullable(variant) = false
nullable(type_var_list) = false
nullable(type_param) = true
nullable(type_inst) = false
nullable(type_expr) = false
nullable(type_args) = true
nullable(type_arg_list) = false
nullable(module_item) = false
nullable(module_body) = false
nullable(full_module) = false
nullable(field_name) = false
nullable(field_list) = false
nullable(field) = false
nullable(cartesian_product) = true
nullable(asection) = false
nullable(annot_expr) = false
nullable(annot) = true
nullable(afield_list) = true
nullable(afield) = false
first(variant_list0) = UIDENT INHERIT
first(variant_list) = UIDENT INHERIT BAR
first(variant) = UIDENT INHERIT
first(type_var_list) = TIDENT
first(type_param) = TIDENT OP_PAREN
first(type_inst) = TIDENT OP_PAREN OP_CURL OP_BRACK LIDENT
first(type_expr) = TIDENT OP_PAREN OP_CURL OP_BRACK LIDENT
first(type_args) = TIDENT OP_PAREN OP_CURL OP_BRACK LIDENT
first(type_arg_list) = TIDENT OP_PAREN OP_CURL OP_BRACK LIDENT
first(module_item) = TYPE
first(module_body) = error TYPE EOF
first(full_module) = error TYPE LT EOF
first(field_name) = TILDE QUESTION LIDENT
first(field_list) = TILDE QUESTION LIDENT INHERIT
first(field) = TILDE QUESTION LIDENT INHERIT
first(cartesian_product) = TIDENT OP_PAREN OP_CURL OP_BRACK LT LIDENT COLON
first(asection) = LT
first(annot_expr) = TIDENT OP_PAREN OP_CURL OP_BRACK LT LIDENT COLON
first(annot) = LT
first(afield_list) = LIDENT
first(afield) = LIDENT
minimal(variant_list0) = (* 1 *) UIDENT
minimal(variant_list) = (* 1 *) UIDENT
minimal(variant) = (* 1 *) UIDENT
minimal(type_var_list) = (* 1 *) TIDENT
minimal(type_param) = (* 0 *)
minimal(type_inst) = (* 1 *) LIDENT
minimal(type_expr) = (* 1 *) LIDENT
minimal(type_args) = (* 0 *)
minimal(type_arg_list) = (* 3 *) LIDENT COMMA LIDENT
minimal(module_item) = (* 4 *) TYPE LIDENT EQ LIDENT
minimal(module_body) = (* 1 *) EOF
minimal(full_module) = (* 1 *) EOF
minimal(field_name) = (* 1 *) LIDENT
minimal(field_list) = (* 2 *) INHERIT LIDENT
minimal(field) = (* 2 *) INHERIT LIDENT
minimal(cartesian_product) = (* 0 *)
minimal(asection) = (* 3 *) LT LIDENT GT
minimal(annot_expr) = (* 1 *) LIDENT
minimal(annot) = (* 0 *)
minimal(afield_list) = (* 0 *)
minimal(afield) = (* 1 *) LIDENT
maximal(variant_list0) = infinity
maximal(variant_list) = infinity
maximal(variant) = infinity
maximal(type_var_list) = infinity
maximal(type_param) = infinity
maximal(type_inst) = infinity
maximal(type_expr) = infinity
maximal(type_args) = infinity
maximal(type_arg_list) = infinity
maximal(module_item) = infinity
maximal(module_body) = infinity
maximal(full_module) = infinity
maximal(field_name) = 2
maximal(field_list) = infinity
maximal(field) = infinity
maximal(cartesian_product) = infinity
maximal(asection) = infinity
maximal(annot_expr) = infinity
maximal(annot) = infinity
maximal(afield_list) = infinity
maximal(afield) = 3
follow(variant_list0) = error CL_BRACK
follow(variant_list) = error CL_BRACK
follow(variant) = error CL_BRACK BAR
follow(type_var_list) = error CL_PAREN
follow(type_param) = LIDENT
follow(type_inst) = error TYPE STAR SEMICOLON LT LIDENT EOF COMMA CL_PAREN CL_CURL CL_BRACK BAR
follow(type_expr) = error TYPE STAR SEMICOLON LIDENT EOF COMMA CL_PAREN CL_CURL CL_BRACK BAR
follow(type_args) = LIDENT
follow(type_arg_list) = error CL_PAREN
follow(module_item) = error TYPE EOF
follow(module_body) = #
follow(full_module) = #
follow(field_name) = error LT COLON
follow(field_list) = error CL_CURL
follow(field) = error SEMICOLON CL_CURL
follow(cartesian_product) = error CL_PAREN
follow(asection) = error TYPE STAR SEMICOLON OF LT LIDENT EQ EOF COMMA COLON CL_PAREN CL_CURL CL_BRACK BAR
follow(annot_expr) = error STAR CL_PAREN
follow(annot) = error TYPE STAR SEMICOLON OF LIDENT EQ EOF COMMA COLON CL_PAREN CL_CURL CL_BRACK BAR
follow(afield_list) = error GT
follow(afield) = error LIDENT GT
Built an LR(0) automaton with 108 states.
The grammar is not SLR(1) -- 2 states have a conflict.
The construction mode is pager.
Built an LR(1) automaton with 146 states.
60 out of 146 states have a default reduction.
50 out of 146 states are represented.
18 out of 48 symbols keep track of their start position.
21 out of 48 symbols keep track of their end position.
31 out of 65 productions exploit shiftreduce optimization.
38 out of 146 states can peek at an error.
The generated parser cannot raise Error.
383 functions before inlining, 111 functions after inlining.
