State 0:
program' -> . program [ # ]
-- On program shift to state 1
-- On bindings shift to state 2
-- On LET reduce production bindings -> 
-- On EOF reduce production bindings -> 

State 1:
program' -> program . [ # ]
-- On # accept program

State 2:
bindings -> bindings . binding [ LET EOF ]
program -> bindings . EOF [ # ]
-- On LET shift to state 3
-- On EOF shift to state 127
-- On binding shift to state 66

State 3:
binding -> LET . value_definitions [ RBRACE LET IN EOF ]
binding -> LET . REC value_definitions [ RBRACE LET IN EOF ]
-- On REC shift to state 4
-- On FORALL shift to state 5
-- On value_definitions shift to state 126
-- On value_definition shift to state 125
-- On forall shift to state 14
-- On WILD reduce production forall -> 
-- On LPAREN reduce production forall -> 
-- On LID reduce production forall -> 
-- On INTEGER reduce production forall -> 

State 4:
binding -> LET REC . value_definitions [ RBRACE LET IN EOF ]
-- On FORALL shift to state 5
-- On value_definitions shift to state 11
-- On value_definition shift to state 125
-- On forall shift to state 14
-- On WILD reduce production forall -> 
-- On LPAREN reduce production forall -> 
-- On LID reduce production forall -> 
-- On INTEGER reduce production forall -> 

State 5:
forall -> FORALL . quantifiers DOT [ WILD LPAREN LID INTEGER ]
-- On LID shift to state 6
-- On quantifiers shift to state 7
-- On quantifier shift to state 10

State 6:
quantifier -> LID . [ LID DOT ]
-- On LID reduce production quantifier -> LID
-- On DOT reduce production quantifier -> LID

State 7:
forall -> FORALL quantifiers . DOT [ WILD LPAREN LID INTEGER ]
quantifiers -> quantifiers . quantifier [ LID DOT ]
-- On LID shift to state 6
-- On DOT shift to state 8
-- On quantifier shift to state 9

State 8:
forall -> FORALL quantifiers DOT . [ WILD LPAREN LID INTEGER ]
-- On WILD reduce production forall -> FORALL quantifiers DOT
-- On LPAREN reduce production forall -> FORALL quantifiers DOT
-- On LID reduce production forall -> FORALL quantifiers DOT
-- On INTEGER reduce production forall -> FORALL quantifiers DOT

State 9:
quantifiers -> quantifiers quantifier . [ LID DOT ]
-- On LID reduce production quantifiers -> quantifiers quantifier
-- On DOT reduce production quantifiers -> quantifiers quantifier

State 10:
quantifiers -> quantifier . [ LID DOT ]
-- On LID reduce production quantifiers -> quantifier
-- On DOT reduce production quantifiers -> quantifier

State 11:
binding -> LET REC value_definitions . [ RBRACE LET IN EOF ]
value_definitions -> value_definitions . AND value_definition [ RBRACE LET IN EOF AND ]
-- On AND shift to state 12
-- On RBRACE reduce production binding -> LET REC value_definitions
-- On LET reduce production binding -> LET REC value_definitions
-- On IN reduce production binding -> LET REC value_definitions
-- On EOF reduce production binding -> LET REC value_definitions

State 12:
value_definitions -> value_definitions AND . value_definition [ RBRACE LET IN EOF AND ]
-- On FORALL shift to state 5
-- On value_definition shift to state 13
-- On forall shift to state 14
-- On WILD reduce production forall -> 
-- On LPAREN reduce production forall -> 
-- On LID reduce production forall -> 
-- On INTEGER reduce production forall -> 

State 13:
value_definitions -> value_definitions AND value_definition . [ RBRACE LET IN EOF AND ]
-- On RBRACE reduce production value_definitions -> value_definitions AND value_definition
-- On LET reduce production value_definitions -> value_definitions AND value_definition
-- On IN reduce production value_definitions -> value_definitions AND value_definition
-- On EOF reduce production value_definitions -> value_definitions AND value_definition
-- On AND reduce production value_definitions -> value_definitions AND value_definition

State 14:
value_definition -> forall . pattern0 equal_expression [ RBRACE LET IN EOF AND ]
-- On WILD shift to state 15
-- On LPAREN shift to state 16
-- On LID shift to state 19
-- On INTEGER shift to state 20
-- On pattern0 shift to state 58

State 15:
pattern0 -> WILD . [ WILD RPAREN LPAREN LID INTEGER EQUAL DOT COMMA COLON ]
-- On WILD reduce production pattern0 -> WILD
-- On RPAREN reduce production pattern0 -> WILD
-- On LPAREN reduce production pattern0 -> WILD
-- On LID reduce production pattern0 -> WILD
-- On INTEGER reduce production pattern0 -> WILD
-- On EQUAL reduce production pattern0 -> WILD
-- On DOT reduce production pattern0 -> WILD
-- On COMMA reduce production pattern0 -> WILD
-- On COLON reduce production pattern0 -> WILD

State 16:
pattern0 -> LPAREN . RPAREN [ WILD RPAREN LPAREN LID INTEGER EQUAL DOT COMMA COLON ]
pattern0 -> LPAREN . pattern RPAREN [ WILD RPAREN LPAREN LID INTEGER EQUAL DOT COMMA COLON ]
pattern0 -> LPAREN . pattern COMMA patterns RPAREN [ WILD RPAREN LPAREN LID INTEGER EQUAL DOT COMMA COLON ]
-- On WILD shift to state 15
-- On UID shift to state 17
-- On RPAREN shift to state 22
-- On LPAREN shift to state 16
-- On LID shift to state 23
-- On INTEGER shift to state 20
-- On pattern3 shift to state 28
-- On pattern2 shift to state 49
-- On pattern1 shift to state 26
-- On pattern0 shift to state 27
-- On pattern shift to state 50

State 17:
pattern1 -> UID . pattern0s [ RPAREN DOT COMMA COLON ]
-- On pattern0s shift to state 18
-- On WILD reduce production pattern0s -> 
-- On RPAREN reduce production pattern0s -> 
-- On LPAREN reduce production pattern0s -> 
-- On LID reduce production pattern0s -> 
-- On INTEGER reduce production pattern0s -> 
-- On DOT reduce production pattern0s -> 
-- On COMMA reduce production pattern0s -> 
-- On COLON reduce production pattern0s -> 

State 18:
pattern0s -> pattern0s . pattern0 [ WILD RPAREN LPAREN LID INTEGER DOT COMMA COLON ]
pattern1 -> UID pattern0s . [ RPAREN DOT COMMA COLON ]
-- On WILD shift to state 15
-- On LPAREN shift to state 16
-- On LID shift to state 19
-- On INTEGER shift to state 20
-- On pattern0 shift to state 21
-- On RPAREN reduce production pattern1 -> UID pattern0s
-- On DOT reduce production pattern1 -> UID pattern0s
-- On COMMA reduce production pattern1 -> UID pattern0s
-- On COLON reduce production pattern1 -> UID pattern0s

State 19:
pattern0 -> LID . [ WILD RPAREN LPAREN LID INTEGER EQUAL DOT COMMA COLON ]
-- On WILD reduce production pattern0 -> LID
-- On RPAREN reduce production pattern0 -> LID
-- On LPAREN reduce production pattern0 -> LID
-- On LID reduce production pattern0 -> LID
-- On INTEGER reduce production pattern0 -> LID
-- On EQUAL reduce production pattern0 -> LID
-- On DOT reduce production pattern0 -> LID
-- On COMMA reduce production pattern0 -> LID
-- On COLON reduce production pattern0 -> LID

State 20:
pattern0 -> INTEGER . [ WILD RPAREN LPAREN LID INTEGER EQUAL DOT COMMA COLON ]
-- On WILD reduce production pattern0 -> INTEGER
-- On RPAREN reduce production pattern0 -> INTEGER
-- On LPAREN reduce production pattern0 -> INTEGER
-- On LID reduce production pattern0 -> INTEGER
-- On INTEGER reduce production pattern0 -> INTEGER
-- On EQUAL reduce production pattern0 -> INTEGER
-- On DOT reduce production pattern0 -> INTEGER
-- On COMMA reduce production pattern0 -> INTEGER
-- On COLON reduce production pattern0 -> INTEGER

State 21:
pattern0s -> pattern0s pattern0 . [ WILD RPAREN LPAREN LID INTEGER DOT COMMA COLON ]
-- On WILD reduce production pattern0s -> pattern0s pattern0
-- On RPAREN reduce production pattern0s -> pattern0s pattern0
-- On LPAREN reduce production pattern0s -> pattern0s pattern0
-- On LID reduce production pattern0s -> pattern0s pattern0
-- On INTEGER reduce production pattern0s -> pattern0s pattern0
-- On DOT reduce production pattern0s -> pattern0s pattern0
-- On COMMA reduce production pattern0s -> pattern0s pattern0
-- On COLON reduce production pattern0s -> pattern0s pattern0

State 22:
pattern0 -> LPAREN RPAREN . [ WILD RPAREN LPAREN LID INTEGER EQUAL DOT COMMA COLON ]
-- On WILD reduce production pattern0 -> LPAREN RPAREN
-- On RPAREN reduce production pattern0 -> LPAREN RPAREN
-- On LPAREN reduce production pattern0 -> LPAREN RPAREN
-- On LID reduce production pattern0 -> LPAREN RPAREN
-- On INTEGER reduce production pattern0 -> LPAREN RPAREN
-- On EQUAL reduce production pattern0 -> LPAREN RPAREN
-- On DOT reduce production pattern0 -> LPAREN RPAREN
-- On COMMA reduce production pattern0 -> LPAREN RPAREN
-- On COLON reduce production pattern0 -> LPAREN RPAREN

State 23:
pattern0 -> LID . [ RPAREN DOT COMMA COLON ]
pattern2 -> LID . AS pattern2 [ RPAREN DOT COMMA COLON ]
-- On AS shift to state 24
-- On RPAREN reduce production pattern0 -> LID
-- On DOT reduce production pattern0 -> LID
-- On COMMA reduce production pattern0 -> LID
-- On COLON reduce production pattern0 -> LID

State 24:
pattern2 -> LID AS . pattern2 [ RPAREN DOT COMMA COLON ]
-- On WILD shift to state 15
-- On UID shift to state 17
-- On LPAREN shift to state 16
-- On LID shift to state 23
-- On INTEGER shift to state 20
-- On pattern2 shift to state 25
-- On pattern1 shift to state 26
-- On pattern0 shift to state 27

State 25:
pattern2 -> LID AS pattern2 . [ RPAREN DOT COMMA COLON ]
-- On RPAREN reduce production pattern2 -> LID AS pattern2
-- On DOT reduce production pattern2 -> LID AS pattern2
-- On COMMA reduce production pattern2 -> LID AS pattern2
-- On COLON reduce production pattern2 -> LID AS pattern2

State 26:
pattern2 -> pattern1 . [ RPAREN DOT COMMA COLON ]
-- On RPAREN reduce production pattern2 -> pattern1
-- On DOT reduce production pattern2 -> pattern1
-- On COMMA reduce production pattern2 -> pattern1
-- On COLON reduce production pattern2 -> pattern1

State 27:
pattern1 -> pattern0 . [ RPAREN DOT COMMA COLON ]
-- On RPAREN reduce production pattern1 -> pattern0
-- On DOT reduce production pattern1 -> pattern0
-- On COMMA reduce production pattern1 -> pattern0
-- On COLON reduce production pattern1 -> pattern0

State 28:
pattern -> pattern3 . [ RPAREN DOT COMMA ]
pattern3 -> pattern3 . COLON typ [ RPAREN DOT COMMA COLON ]
-- On COLON shift to state 29
-- On RPAREN reduce production pattern -> pattern3
-- On DOT reduce production pattern -> pattern3
-- On COMMA reduce production pattern -> pattern3

State 29:
pattern3 -> pattern3 COLON . typ [ RPAREN DOT COMMA COLON ]
-- On UNIT shift to state 30
-- On LPAREN shift to state 31
-- On LID shift to state 32
-- On type2 shift to state 33
-- On type1 shift to state 34
-- On type0 shift to state 37
-- On typ shift to state 48

State 30:
type0 -> UNIT . [ STAR RPAREN EQUAL DOT COMMA COLON ARROW ]
-- On STAR reduce production type0 -> UNIT
-- On RPAREN reduce production type0 -> UNIT
-- On EQUAL reduce production type0 -> UNIT
-- On DOT reduce production type0 -> UNIT
-- On COMMA reduce production type0 -> UNIT
-- On COLON reduce production type0 -> UNIT
-- On ARROW reduce production type0 -> UNIT

State 31:
type0 -> LPAREN . typ RPAREN [ STAR RPAREN EQUAL DOT COMMA COLON ARROW ]
type0 -> LPAREN . typ COMMA types RPAREN [ STAR RPAREN EQUAL DOT COMMA COLON ARROW ]
-- On UNIT shift to state 30
-- On LPAREN shift to state 31
-- On LID shift to state 32
-- On type2 shift to state 33
-- On type1 shift to state 34
-- On type0 shift to state 37
-- On typ shift to state 40

State 32:
type0 -> LID . [ STAR RPAREN EQUAL DOT COMMA COLON ARROW ]
-- On STAR reduce production type0 -> LID
-- On RPAREN reduce production type0 -> LID
-- On EQUAL reduce production type0 -> LID
-- On DOT reduce production type0 -> LID
-- On COMMA reduce production type0 -> LID
-- On COLON reduce production type0 -> LID
-- On ARROW reduce production type0 -> LID

State 33:
typ -> type2 . [ RPAREN EQUAL DOT COMMA COLON ]
-- On RPAREN reduce production typ -> type2
-- On EQUAL reduce production typ -> type2
-- On DOT reduce production typ -> type2
-- On COMMA reduce production typ -> type2
-- On COLON reduce production typ -> type2

State 34:
type2 -> type1 . ARROW type2 [ RPAREN EQUAL DOT COMMA COLON ]
type2 -> type1 . [ RPAREN EQUAL DOT COMMA COLON ]
-- On ARROW shift to state 35
-- On RPAREN reduce production type2 -> type1
-- On EQUAL reduce production type2 -> type1
-- On DOT reduce production type2 -> type1
-- On COMMA reduce production type2 -> type1
-- On COLON reduce production type2 -> type1

State 35:
type2 -> type1 ARROW . type2 [ RPAREN EQUAL DOT COMMA COLON ]
-- On UNIT shift to state 30
-- On LPAREN shift to state 31
-- On LID shift to state 32
-- On type2 shift to state 36
-- On type1 shift to state 34
-- On type0 shift to state 37

State 36:
type2 -> type1 ARROW type2 . [ RPAREN EQUAL DOT COMMA COLON ]
-- On RPAREN reduce production type2 -> type1 ARROW type2
-- On EQUAL reduce production type2 -> type1 ARROW type2
-- On DOT reduce production type2 -> type1 ARROW type2
-- On COMMA reduce production type2 -> type1 ARROW type2
-- On COLON reduce production type2 -> type1 ARROW type2

State 37:
type1 -> type0 . STAR type1 [ RPAREN EQUAL DOT COMMA COLON ARROW ]
type1 -> type0 . [ RPAREN EQUAL DOT COMMA COLON ARROW ]
-- On STAR shift to state 38
-- On RPAREN reduce production type1 -> type0
-- On EQUAL reduce production type1 -> type0
-- On DOT reduce production type1 -> type0
-- On COMMA reduce production type1 -> type0
-- On COLON reduce production type1 -> type0
-- On ARROW reduce production type1 -> type0

State 38:
type1 -> type0 STAR . type1 [ RPAREN EQUAL DOT COMMA COLON ARROW ]
-- On UNIT shift to state 30
-- On LPAREN shift to state 31
-- On LID shift to state 32
-- On type1 shift to state 39
-- On type0 shift to state 37

State 39:
type1 -> type0 STAR type1 . [ RPAREN EQUAL DOT COMMA COLON ARROW ]
-- On RPAREN reduce production type1 -> type0 STAR type1
-- On EQUAL reduce production type1 -> type0 STAR type1
-- On DOT reduce production type1 -> type0 STAR type1
-- On COMMA reduce production type1 -> type0 STAR type1
-- On COLON reduce production type1 -> type0 STAR type1
-- On ARROW reduce production type1 -> type0 STAR type1

State 40:
type0 -> LPAREN typ . RPAREN [ STAR RPAREN EQUAL DOT COMMA COLON ARROW ]
type0 -> LPAREN typ . COMMA types RPAREN [ STAR RPAREN EQUAL DOT COMMA COLON ARROW ]
-- On RPAREN shift to state 41
-- On COMMA shift to state 42

State 41:
type0 -> LPAREN typ RPAREN . [ STAR RPAREN EQUAL DOT COMMA COLON ARROW ]
-- On STAR reduce production type0 -> LPAREN typ RPAREN
-- On RPAREN reduce production type0 -> LPAREN typ RPAREN
-- On EQUAL reduce production type0 -> LPAREN typ RPAREN
-- On DOT reduce production type0 -> LPAREN typ RPAREN
-- On COMMA reduce production type0 -> LPAREN typ RPAREN
-- On COLON reduce production type0 -> LPAREN typ RPAREN
-- On ARROW reduce production type0 -> LPAREN typ RPAREN

State 42:
type0 -> LPAREN typ COMMA . types RPAREN [ STAR RPAREN EQUAL DOT COMMA COLON ARROW ]
-- On UNIT shift to state 30
-- On LPAREN shift to state 31
-- On LID shift to state 32
-- On types shift to state 43
-- On type2 shift to state 33
-- On type1 shift to state 34
-- On type0 shift to state 37
-- On typ shift to state 45

State 43:
type0 -> LPAREN typ COMMA types . RPAREN [ STAR RPAREN EQUAL DOT COMMA COLON ARROW ]
-- On RPAREN shift to state 44

State 44:
type0 -> LPAREN typ COMMA types RPAREN . [ STAR RPAREN EQUAL DOT COMMA COLON ARROW ]
-- On STAR reduce production type0 -> LPAREN typ COMMA types RPAREN
-- On RPAREN reduce production type0 -> LPAREN typ COMMA types RPAREN
-- On EQUAL reduce production type0 -> LPAREN typ COMMA types RPAREN
-- On DOT reduce production type0 -> LPAREN typ COMMA types RPAREN
-- On COMMA reduce production type0 -> LPAREN typ COMMA types RPAREN
-- On COLON reduce production type0 -> LPAREN typ COMMA types RPAREN
-- On ARROW reduce production type0 -> LPAREN typ COMMA types RPAREN

State 45:
types -> typ . [ RPAREN ]
types -> typ . COMMA types [ RPAREN ]
-- On COMMA shift to state 46
-- On RPAREN reduce production types -> typ

State 46:
types -> typ COMMA . types [ RPAREN ]
-- On UNIT shift to state 30
-- On LPAREN shift to state 31
-- On LID shift to state 32
-- On types shift to state 47
-- On type2 shift to state 33
-- On type1 shift to state 34
-- On type0 shift to state 37
-- On typ shift to state 45

State 47:
types -> typ COMMA types . [ RPAREN ]
-- On RPAREN reduce production types -> typ COMMA types

State 48:
pattern3 -> pattern3 COLON typ . [ RPAREN DOT COMMA COLON ]
-- On RPAREN reduce production pattern3 -> pattern3 COLON typ
-- On DOT reduce production pattern3 -> pattern3 COLON typ
-- On COMMA reduce production pattern3 -> pattern3 COLON typ
-- On COLON reduce production pattern3 -> pattern3 COLON typ

State 49:
pattern3 -> pattern2 . [ RPAREN DOT COMMA COLON ]
-- On RPAREN reduce production pattern3 -> pattern2
-- On DOT reduce production pattern3 -> pattern2
-- On COMMA reduce production pattern3 -> pattern2
-- On COLON reduce production pattern3 -> pattern2

State 50:
pattern0 -> LPAREN pattern . RPAREN [ WILD RPAREN LPAREN LID INTEGER EQUAL DOT COMMA COLON ]
pattern0 -> LPAREN pattern . COMMA patterns RPAREN [ WILD RPAREN LPAREN LID INTEGER EQUAL DOT COMMA COLON ]
-- On RPAREN shift to state 51
-- On COMMA shift to state 52

State 51:
pattern0 -> LPAREN pattern RPAREN . [ WILD RPAREN LPAREN LID INTEGER EQUAL DOT COMMA COLON ]
-- On WILD reduce production pattern0 -> LPAREN pattern RPAREN
-- On RPAREN reduce production pattern0 -> LPAREN pattern RPAREN
-- On LPAREN reduce production pattern0 -> LPAREN pattern RPAREN
-- On LID reduce production pattern0 -> LPAREN pattern RPAREN
-- On INTEGER reduce production pattern0 -> LPAREN pattern RPAREN
-- On EQUAL reduce production pattern0 -> LPAREN pattern RPAREN
-- On DOT reduce production pattern0 -> LPAREN pattern RPAREN
-- On COMMA reduce production pattern0 -> LPAREN pattern RPAREN
-- On COLON reduce production pattern0 -> LPAREN pattern RPAREN

State 52:
pattern0 -> LPAREN pattern COMMA . patterns RPAREN [ WILD RPAREN LPAREN LID INTEGER EQUAL DOT COMMA COLON ]
-- On WILD shift to state 15
-- On UID shift to state 17
-- On LPAREN shift to state 16
-- On LID shift to state 23
-- On INTEGER shift to state 20
-- On patterns shift to state 53
-- On pattern3 shift to state 28
-- On pattern2 shift to state 49
-- On pattern1 shift to state 26
-- On pattern0 shift to state 27
-- On pattern shift to state 55

State 53:
pattern0 -> LPAREN pattern COMMA patterns . RPAREN [ WILD RPAREN LPAREN LID INTEGER EQUAL DOT COMMA COLON ]
-- On RPAREN shift to state 54

State 54:
pattern0 -> LPAREN pattern COMMA patterns RPAREN . [ WILD RPAREN LPAREN LID INTEGER EQUAL DOT COMMA COLON ]
-- On WILD reduce production pattern0 -> LPAREN pattern COMMA patterns RPAREN
-- On RPAREN reduce production pattern0 -> LPAREN pattern COMMA patterns RPAREN
-- On LPAREN reduce production pattern0 -> LPAREN pattern COMMA patterns RPAREN
-- On LID reduce production pattern0 -> LPAREN pattern COMMA patterns RPAREN
-- On INTEGER reduce production pattern0 -> LPAREN pattern COMMA patterns RPAREN
-- On EQUAL reduce production pattern0 -> LPAREN pattern COMMA patterns RPAREN
-- On DOT reduce production pattern0 -> LPAREN pattern COMMA patterns RPAREN
-- On COMMA reduce production pattern0 -> LPAREN pattern COMMA patterns RPAREN
-- On COLON reduce production pattern0 -> LPAREN pattern COMMA patterns RPAREN

State 55:
patterns -> pattern . [ RPAREN ]
patterns -> pattern . COMMA patterns [ RPAREN ]
-- On COMMA shift to state 56
-- On RPAREN reduce production patterns -> pattern

State 56:
patterns -> pattern COMMA . patterns [ RPAREN ]
-- On WILD shift to state 15
-- On UID shift to state 17
-- On LPAREN shift to state 16
-- On LID shift to state 23
-- On INTEGER shift to state 20
-- On patterns shift to state 57
-- On pattern3 shift to state 28
-- On pattern2 shift to state 49
-- On pattern1 shift to state 26
-- On pattern0 shift to state 27
-- On pattern shift to state 55

State 57:
patterns -> pattern COMMA patterns . [ RPAREN ]
-- On RPAREN reduce production patterns -> pattern COMMA patterns

State 58:
value_definition -> forall pattern0 . equal_expression [ RBRACE LET IN EOF AND ]
-- On WILD shift to state 15
-- On LPAREN shift to state 16
-- On LID shift to state 19
-- On INTEGER shift to state 20
-- On EQUAL shift to state 59
-- On COLON shift to state 118
-- On pattern0 shift to state 122
-- On equal_expression shift to state 124

State 59:
equal_expression -> EQUAL . expression [ RBRACE LET IN EOF AND ]
-- On LPAREN shift to state 60
-- On LID shift to state 62
-- On LET shift to state 3
-- On LBRACE shift to state 63
-- On INTEGER shift to state 67
-- On EXISTS shift to state 68
-- On BACKSLASH shift to state 71
-- On expression400 shift to state 105
-- On expression300 shift to state 75
-- On expression200 shift to state 78
-- On expression100 shift to state 81
-- On expression0 shift to state 96
-- On expression shift to state 117
-- On binding shift to state 101

State 60:
expression0 -> LPAREN . RPAREN [ SEMI RPAREN RBRACE LPAREN LID LET LBRACE INTEGER INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN EQUAL EOF DOT COMMA COLON AND ]
expression0 -> LPAREN . expression RPAREN [ SEMI RPAREN RBRACE LPAREN LID LET LBRACE INTEGER INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN EQUAL EOF DOT COMMA COLON AND ]
expression0 -> LPAREN . expression COLON typ RPAREN [ SEMI RPAREN RBRACE LPAREN LID LET LBRACE INTEGER INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN EQUAL EOF DOT COMMA COLON AND ]
expression0 -> LPAREN . expression COMMA expressions RPAREN [ SEMI RPAREN RBRACE LPAREN LID LET LBRACE INTEGER INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN EQUAL EOF DOT COMMA COLON AND ]
-- On RPAREN shift to state 61
-- On LPAREN shift to state 60
-- On LID shift to state 62
-- On LET shift to state 3
-- On LBRACE shift to state 63
-- On INTEGER shift to state 67
-- On EXISTS shift to state 68
-- On BACKSLASH shift to state 71
-- On expression400 shift to state 105
-- On expression300 shift to state 75
-- On expression200 shift to state 78
-- On expression100 shift to state 81
-- On expression0 shift to state 96
-- On expression shift to state 106
-- On binding shift to state 101

State 61:
expression0 -> LPAREN RPAREN . [ SEMI RPAREN RBRACE LPAREN LID LET LBRACE INTEGER INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN EQUAL EOF DOT COMMA COLON AND ]
-- On SEMI reduce production expression0 -> LPAREN RPAREN
-- On RPAREN reduce production expression0 -> LPAREN RPAREN
-- On RBRACE reduce production expression0 -> LPAREN RPAREN
-- On LPAREN reduce production expression0 -> LPAREN RPAREN
-- On LID reduce production expression0 -> LPAREN RPAREN
-- On LET reduce production expression0 -> LPAREN RPAREN
-- On LBRACE reduce production expression0 -> LPAREN RPAREN
-- On INTEGER reduce production expression0 -> LPAREN RPAREN
-- On INFIXOP4 reduce production expression0 -> LPAREN RPAREN
-- On INFIXOP3 reduce production expression0 -> LPAREN RPAREN
-- On INFIXOP2 reduce production expression0 -> LPAREN RPAREN
-- On INFIXOP1 reduce production expression0 -> LPAREN RPAREN
-- On INFIXOP0 reduce production expression0 -> LPAREN RPAREN
-- On IN reduce production expression0 -> LPAREN RPAREN
-- On EQUAL reduce production expression0 -> LPAREN RPAREN
-- On EOF reduce production expression0 -> LPAREN RPAREN
-- On DOT reduce production expression0 -> LPAREN RPAREN
-- On COMMA reduce production expression0 -> LPAREN RPAREN
-- On COLON reduce production expression0 -> LPAREN RPAREN
-- On AND reduce production expression0 -> LPAREN RPAREN

State 62:
expression0 -> LID . [ SEMI RPAREN RBRACE LPAREN LID LET LBRACE INTEGER INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN EQUAL EOF DOT COMMA COLON AND ]
-- On SEMI reduce production expression0 -> LID
-- On RPAREN reduce production expression0 -> LID
-- On RBRACE reduce production expression0 -> LID
-- On LPAREN reduce production expression0 -> LID
-- On LID reduce production expression0 -> LID
-- On LET reduce production expression0 -> LID
-- On LBRACE reduce production expression0 -> LID
-- On INTEGER reduce production expression0 -> LID
-- On INFIXOP4 reduce production expression0 -> LID
-- On INFIXOP3 reduce production expression0 -> LID
-- On INFIXOP2 reduce production expression0 -> LID
-- On INFIXOP1 reduce production expression0 -> LID
-- On INFIXOP0 reduce production expression0 -> LID
-- On IN reduce production expression0 -> LID
-- On EQUAL reduce production expression0 -> LID
-- On EOF reduce production expression0 -> LID
-- On DOT reduce production expression0 -> LID
-- On COMMA reduce production expression0 -> LID
-- On COLON reduce production expression0 -> LID
-- On AND reduce production expression0 -> LID

State 63:
expression0 -> LBRACE . bindings RBRACE [ SEMI RPAREN RBRACE LPAREN LID LET LBRACE INTEGER INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN EQUAL EOF DOT COMMA COLON AND ]
-- On bindings shift to state 64
-- On RBRACE reduce production bindings -> 
-- On LET reduce production bindings -> 

State 64:
bindings -> bindings . binding [ RBRACE LET ]
expression0 -> LBRACE bindings . RBRACE [ SEMI RPAREN RBRACE LPAREN LID LET LBRACE INTEGER INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN EQUAL EOF DOT COMMA COLON AND ]
-- On RBRACE shift to state 65
-- On LET shift to state 3
-- On binding shift to state 66

State 65:
expression0 -> LBRACE bindings RBRACE . [ SEMI RPAREN RBRACE LPAREN LID LET LBRACE INTEGER INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN EQUAL EOF DOT COMMA COLON AND ]
-- On SEMI reduce production expression0 -> LBRACE bindings RBRACE
-- On RPAREN reduce production expression0 -> LBRACE bindings RBRACE
-- On RBRACE reduce production expression0 -> LBRACE bindings RBRACE
-- On LPAREN reduce production expression0 -> LBRACE bindings RBRACE
-- On LID reduce production expression0 -> LBRACE bindings RBRACE
-- On LET reduce production expression0 -> LBRACE bindings RBRACE
-- On LBRACE reduce production expression0 -> LBRACE bindings RBRACE
-- On INTEGER reduce production expression0 -> LBRACE bindings RBRACE
-- On INFIXOP4 reduce production expression0 -> LBRACE bindings RBRACE
-- On INFIXOP3 reduce production expression0 -> LBRACE bindings RBRACE
-- On INFIXOP2 reduce production expression0 -> LBRACE bindings RBRACE
-- On INFIXOP1 reduce production expression0 -> LBRACE bindings RBRACE
-- On INFIXOP0 reduce production expression0 -> LBRACE bindings RBRACE
-- On IN reduce production expression0 -> LBRACE bindings RBRACE
-- On EQUAL reduce production expression0 -> LBRACE bindings RBRACE
-- On EOF reduce production expression0 -> LBRACE bindings RBRACE
-- On DOT reduce production expression0 -> LBRACE bindings RBRACE
-- On COMMA reduce production expression0 -> LBRACE bindings RBRACE
-- On COLON reduce production expression0 -> LBRACE bindings RBRACE
-- On AND reduce production expression0 -> LBRACE bindings RBRACE

State 66:
bindings -> bindings binding . [ RBRACE LET EOF ]
-- On RBRACE reduce production bindings -> bindings binding
-- On LET reduce production bindings -> bindings binding
-- On EOF reduce production bindings -> bindings binding

State 67:
expression0 -> INTEGER . [ SEMI RPAREN RBRACE LPAREN LID LET LBRACE INTEGER INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN EQUAL EOF DOT COMMA COLON AND ]
-- On SEMI reduce production expression0 -> INTEGER
-- On RPAREN reduce production expression0 -> INTEGER
-- On RBRACE reduce production expression0 -> INTEGER
-- On LPAREN reduce production expression0 -> INTEGER
-- On LID reduce production expression0 -> INTEGER
-- On LET reduce production expression0 -> INTEGER
-- On LBRACE reduce production expression0 -> INTEGER
-- On INTEGER reduce production expression0 -> INTEGER
-- On INFIXOP4 reduce production expression0 -> INTEGER
-- On INFIXOP3 reduce production expression0 -> INTEGER
-- On INFIXOP2 reduce production expression0 -> INTEGER
-- On INFIXOP1 reduce production expression0 -> INTEGER
-- On INFIXOP0 reduce production expression0 -> INTEGER
-- On IN reduce production expression0 -> INTEGER
-- On EQUAL reduce production expression0 -> INTEGER
-- On EOF reduce production expression0 -> INTEGER
-- On DOT reduce production expression0 -> INTEGER
-- On COMMA reduce production expression0 -> INTEGER
-- On COLON reduce production expression0 -> INTEGER
-- On AND reduce production expression0 -> INTEGER

State 68:
expression400 -> EXISTS . quantifiers DOT expression400 [ RPAREN RBRACE LET IN EOF COMMA COLON AND ]
-- On LID shift to state 6
-- On quantifiers shift to state 69
-- On quantifier shift to state 10

State 69:
expression400 -> EXISTS quantifiers . DOT expression400 [ RPAREN RBRACE LET IN EOF COMMA COLON AND ]
quantifiers -> quantifiers . quantifier [ LID DOT ]
-- On LID shift to state 6
-- On DOT shift to state 70
-- On quantifier shift to state 9

State 70:
expression400 -> EXISTS quantifiers DOT . expression400 [ RPAREN RBRACE LET IN EOF COMMA COLON AND ]
-- On LPAREN shift to state 60
-- On LID shift to state 62
-- On LET shift to state 3
-- On LBRACE shift to state 63
-- On INTEGER shift to state 67
-- On EXISTS shift to state 68
-- On BACKSLASH shift to state 71
-- On expression400 shift to state 104
-- On expression300 shift to state 75
-- On expression200 shift to state 78
-- On expression100 shift to state 81
-- On expression0 shift to state 96
-- On binding shift to state 101

State 71:
expression400 -> BACKSLASH . pattern DOT expression400 [ RPAREN RBRACE LET IN EOF COMMA COLON AND ]
-- On WILD shift to state 15
-- On UID shift to state 17
-- On LPAREN shift to state 16
-- On LID shift to state 23
-- On INTEGER shift to state 20
-- On pattern3 shift to state 28
-- On pattern2 shift to state 49
-- On pattern1 shift to state 26
-- On pattern0 shift to state 27
-- On pattern shift to state 72

State 72:
expression400 -> BACKSLASH pattern . DOT expression400 [ RPAREN RBRACE LET IN EOF COMMA COLON AND ]
-- On DOT shift to state 73

State 73:
expression400 -> BACKSLASH pattern DOT . expression400 [ RPAREN RBRACE LET IN EOF COMMA COLON AND ]
-- On LPAREN shift to state 60
-- On LID shift to state 62
-- On LET shift to state 3
-- On LBRACE shift to state 63
-- On INTEGER shift to state 67
-- On EXISTS shift to state 68
-- On BACKSLASH shift to state 71
-- On expression400 shift to state 74
-- On expression300 shift to state 75
-- On expression200 shift to state 78
-- On expression100 shift to state 81
-- On expression0 shift to state 96
-- On binding shift to state 101

State 74:
expression400 -> BACKSLASH pattern DOT expression400 . [ RPAREN RBRACE LET IN EOF COMMA COLON AND ]
-- On RPAREN reduce production expression400 -> BACKSLASH pattern DOT expression400
-- On RBRACE reduce production expression400 -> BACKSLASH pattern DOT expression400
-- On LET reduce production expression400 -> BACKSLASH pattern DOT expression400
-- On IN reduce production expression400 -> BACKSLASH pattern DOT expression400
-- On EOF reduce production expression400 -> BACKSLASH pattern DOT expression400
-- On COMMA reduce production expression400 -> BACKSLASH pattern DOT expression400
-- On COLON reduce production expression400 -> BACKSLASH pattern DOT expression400
-- On AND reduce production expression400 -> BACKSLASH pattern DOT expression400

State 75:
expression400 -> expression300 . SEMI expression400 [ RPAREN RBRACE LET IN EOF COMMA COLON AND ]
expression400 -> expression300 . [ RPAREN RBRACE LET IN EOF COMMA COLON AND ]
-- On SEMI shift to state 76
-- On RPAREN reduce production expression400 -> expression300
-- On RBRACE reduce production expression400 -> expression300
-- On LET reduce production expression400 -> expression300
-- On IN reduce production expression400 -> expression300
-- On EOF reduce production expression400 -> expression300
-- On COMMA reduce production expression400 -> expression300
-- On COLON reduce production expression400 -> expression300
-- On AND reduce production expression400 -> expression300

State 76:
expression400 -> expression300 SEMI . expression400 [ RPAREN RBRACE LET IN EOF COMMA COLON AND ]
-- On LPAREN shift to state 60
-- On LID shift to state 62
-- On LET shift to state 3
-- On LBRACE shift to state 63
-- On INTEGER shift to state 67
-- On EXISTS shift to state 68
-- On BACKSLASH shift to state 71
-- On expression400 shift to state 77
-- On expression300 shift to state 75
-- On expression200 shift to state 78
-- On expression100 shift to state 81
-- On expression0 shift to state 96
-- On binding shift to state 101

State 77:
expression400 -> expression300 SEMI expression400 . [ RPAREN RBRACE LET IN EOF COMMA COLON AND ]
-- On RPAREN reduce production expression400 -> expression300 SEMI expression400
-- On RBRACE reduce production expression400 -> expression300 SEMI expression400
-- On LET reduce production expression400 -> expression300 SEMI expression400
-- On IN reduce production expression400 -> expression300 SEMI expression400
-- On EOF reduce production expression400 -> expression300 SEMI expression400
-- On COMMA reduce production expression400 -> expression300 SEMI expression400
-- On COLON reduce production expression400 -> expression300 SEMI expression400
-- On AND reduce production expression400 -> expression300 SEMI expression400

State 78:
expression200 -> expression200 . INFIXOP0 expression200 [ SEMI RPAREN RBRACE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN EQUAL EOF COMMA COLON AND ]
expression200 -> expression200 . INFIXOP1 expression200 [ SEMI RPAREN RBRACE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN EQUAL EOF COMMA COLON AND ]
expression200 -> expression200 . INFIXOP2 expression200 [ SEMI RPAREN RBRACE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN EQUAL EOF COMMA COLON AND ]
expression200 -> expression200 . INFIXOP3 expression200 [ SEMI RPAREN RBRACE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN EQUAL EOF COMMA COLON AND ]
expression200 -> expression200 . INFIXOP4 expression200 [ SEMI RPAREN RBRACE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN EQUAL EOF COMMA COLON AND ]
expression200 -> expression200 . EQUAL expression200 [ SEMI RPAREN RBRACE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN EQUAL EOF COMMA COLON AND ]
expression300 -> expression200 . [ SEMI RPAREN RBRACE LET IN EOF COMMA COLON AND ]
-- On INFIXOP4 shift to state 79
-- On INFIXOP3 shift to state 86
-- On INFIXOP2 shift to state 88
-- On INFIXOP1 shift to state 90
-- On INFIXOP0 shift to state 92
-- On EQUAL shift to state 94
-- On SEMI reduce production expression300 -> expression200
-- On RPAREN reduce production expression300 -> expression200
-- On RBRACE reduce production expression300 -> expression200
-- On LET reduce production expression300 -> expression200
-- On IN reduce production expression300 -> expression200
-- On EOF reduce production expression300 -> expression200
-- On COMMA reduce production expression300 -> expression200
-- On COLON reduce production expression300 -> expression200
-- On AND reduce production expression300 -> expression200

State 79:
expression200 -> expression200 INFIXOP4 . expression200 [ SEMI RPAREN RBRACE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN EQUAL EOF COMMA COLON AND ]
-- On LPAREN shift to state 60
-- On LID shift to state 62
-- On LBRACE shift to state 63
-- On INTEGER shift to state 67
-- On expression200 shift to state 80
-- On expression100 shift to state 81
-- On expression0 shift to state 85

State 80:
expression200 -> expression200 . INFIXOP0 expression200 [ SEMI RPAREN RBRACE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN EQUAL EOF COMMA COLON AND ]
expression200 -> expression200 . INFIXOP1 expression200 [ SEMI RPAREN RBRACE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN EQUAL EOF COMMA COLON AND ]
expression200 -> expression200 . INFIXOP2 expression200 [ SEMI RPAREN RBRACE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN EQUAL EOF COMMA COLON AND ]
expression200 -> expression200 . INFIXOP3 expression200 [ SEMI RPAREN RBRACE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN EQUAL EOF COMMA COLON AND ]
expression200 -> expression200 . INFIXOP4 expression200 [ SEMI RPAREN RBRACE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN EQUAL EOF COMMA COLON AND ]
expression200 -> expression200 INFIXOP4 expression200 . [ SEMI RPAREN RBRACE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN EQUAL EOF COMMA COLON AND ]
expression200 -> expression200 . EQUAL expression200 [ SEMI RPAREN RBRACE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN EQUAL EOF COMMA COLON AND ]
-- On INFIXOP4 shift to state 79
-- On SEMI reduce production expression200 -> expression200 INFIXOP4 expression200
-- On RPAREN reduce production expression200 -> expression200 INFIXOP4 expression200
-- On RBRACE reduce production expression200 -> expression200 INFIXOP4 expression200
-- On LET reduce production expression200 -> expression200 INFIXOP4 expression200
-- On INFIXOP3 reduce production expression200 -> expression200 INFIXOP4 expression200
-- On INFIXOP2 reduce production expression200 -> expression200 INFIXOP4 expression200
-- On INFIXOP1 reduce production expression200 -> expression200 INFIXOP4 expression200
-- On INFIXOP0 reduce production expression200 -> expression200 INFIXOP4 expression200
-- On IN reduce production expression200 -> expression200 INFIXOP4 expression200
-- On EQUAL reduce production expression200 -> expression200 INFIXOP4 expression200
-- On EOF reduce production expression200 -> expression200 INFIXOP4 expression200
-- On COMMA reduce production expression200 -> expression200 INFIXOP4 expression200
-- On COLON reduce production expression200 -> expression200 INFIXOP4 expression200
-- On AND reduce production expression200 -> expression200 INFIXOP4 expression200

State 81:
expression100 -> expression100 . expression0 [ SEMI RPAREN RBRACE LPAREN LID LET LBRACE INTEGER INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN EQUAL EOF COMMA COLON AND ]
expression200 -> expression100 . [ SEMI RPAREN RBRACE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN EQUAL EOF COMMA COLON AND ]
-- On LPAREN shift to state 60
-- On LID shift to state 62
-- On LBRACE shift to state 63
-- On INTEGER shift to state 67
-- On expression0 shift to state 82
-- On SEMI reduce production expression200 -> expression100
-- On RPAREN reduce production expression200 -> expression100
-- On RBRACE reduce production expression200 -> expression100
-- On LET reduce production expression200 -> expression100
-- On INFIXOP4 reduce production expression200 -> expression100
-- On INFIXOP3 reduce production expression200 -> expression100
-- On INFIXOP2 reduce production expression200 -> expression100
-- On INFIXOP1 reduce production expression200 -> expression100
-- On INFIXOP0 reduce production expression200 -> expression100
-- On IN reduce production expression200 -> expression100
-- On EQUAL reduce production expression200 -> expression100
-- On EOF reduce production expression200 -> expression100
-- On COMMA reduce production expression200 -> expression100
-- On COLON reduce production expression200 -> expression100
-- On AND reduce production expression200 -> expression100

State 82:
expression0 -> expression0 . DOT LID [ SEMI RPAREN RBRACE LPAREN LID LET LBRACE INTEGER INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN EQUAL EOF DOT COMMA COLON AND ]
expression100 -> expression100 expression0 . [ SEMI RPAREN RBRACE LPAREN LID LET LBRACE INTEGER INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN EQUAL EOF COMMA COLON AND ]
-- On DOT shift to state 83
-- On SEMI reduce production expression100 -> expression100 expression0
-- On RPAREN reduce production expression100 -> expression100 expression0
-- On RBRACE reduce production expression100 -> expression100 expression0
-- On LPAREN reduce production expression100 -> expression100 expression0
-- On LID reduce production expression100 -> expression100 expression0
-- On LET reduce production expression100 -> expression100 expression0
-- On LBRACE reduce production expression100 -> expression100 expression0
-- On INTEGER reduce production expression100 -> expression100 expression0
-- On INFIXOP4 reduce production expression100 -> expression100 expression0
-- On INFIXOP3 reduce production expression100 -> expression100 expression0
-- On INFIXOP2 reduce production expression100 -> expression100 expression0
-- On INFIXOP1 reduce production expression100 -> expression100 expression0
-- On INFIXOP0 reduce production expression100 -> expression100 expression0
-- On IN reduce production expression100 -> expression100 expression0
-- On EQUAL reduce production expression100 -> expression100 expression0
-- On EOF reduce production expression100 -> expression100 expression0
-- On COMMA reduce production expression100 -> expression100 expression0
-- On COLON reduce production expression100 -> expression100 expression0
-- On AND reduce production expression100 -> expression100 expression0

State 83:
expression0 -> expression0 DOT . LID [ SEMI RPAREN RBRACE LPAREN LID LET LBRACE INTEGER INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN EQUAL EOF DOT COMMA COLON AND ]
-- On LID shift to state 84

State 84:
expression0 -> expression0 DOT LID . [ SEMI RPAREN RBRACE LPAREN LID LET LBRACE INTEGER INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN EQUAL EOF DOT COMMA COLON AND ]
-- On SEMI reduce production expression0 -> expression0 DOT LID
-- On RPAREN reduce production expression0 -> expression0 DOT LID
-- On RBRACE reduce production expression0 -> expression0 DOT LID
-- On LPAREN reduce production expression0 -> expression0 DOT LID
-- On LID reduce production expression0 -> expression0 DOT LID
-- On LET reduce production expression0 -> expression0 DOT LID
-- On LBRACE reduce production expression0 -> expression0 DOT LID
-- On INTEGER reduce production expression0 -> expression0 DOT LID
-- On INFIXOP4 reduce production expression0 -> expression0 DOT LID
-- On INFIXOP3 reduce production expression0 -> expression0 DOT LID
-- On INFIXOP2 reduce production expression0 -> expression0 DOT LID
-- On INFIXOP1 reduce production expression0 -> expression0 DOT LID
-- On INFIXOP0 reduce production expression0 -> expression0 DOT LID
-- On IN reduce production expression0 -> expression0 DOT LID
-- On EQUAL reduce production expression0 -> expression0 DOT LID
-- On EOF reduce production expression0 -> expression0 DOT LID
-- On DOT reduce production expression0 -> expression0 DOT LID
-- On COMMA reduce production expression0 -> expression0 DOT LID
-- On COLON reduce production expression0 -> expression0 DOT LID
-- On AND reduce production expression0 -> expression0 DOT LID

State 85:
expression0 -> expression0 . DOT LID [ SEMI RPAREN RBRACE LPAREN LID LET LBRACE INTEGER INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN EQUAL EOF DOT COMMA COLON AND ]
expression100 -> expression0 . [ SEMI RPAREN RBRACE LPAREN LID LET LBRACE INTEGER INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN EQUAL EOF COMMA COLON AND ]
-- On DOT shift to state 83
-- On SEMI reduce production expression100 -> expression0
-- On RPAREN reduce production expression100 -> expression0
-- On RBRACE reduce production expression100 -> expression0
-- On LPAREN reduce production expression100 -> expression0
-- On LID reduce production expression100 -> expression0
-- On LET reduce production expression100 -> expression0
-- On LBRACE reduce production expression100 -> expression0
-- On INTEGER reduce production expression100 -> expression0
-- On INFIXOP4 reduce production expression100 -> expression0
-- On INFIXOP3 reduce production expression100 -> expression0
-- On INFIXOP2 reduce production expression100 -> expression0
-- On INFIXOP1 reduce production expression100 -> expression0
-- On INFIXOP0 reduce production expression100 -> expression0
-- On IN reduce production expression100 -> expression0
-- On EQUAL reduce production expression100 -> expression0
-- On EOF reduce production expression100 -> expression0
-- On COMMA reduce production expression100 -> expression0
-- On COLON reduce production expression100 -> expression0
-- On AND reduce production expression100 -> expression0

State 86:
expression200 -> expression200 INFIXOP3 . expression200 [ SEMI RPAREN RBRACE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN EQUAL EOF COMMA COLON AND ]
-- On LPAREN shift to state 60
-- On LID shift to state 62
-- On LBRACE shift to state 63
-- On INTEGER shift to state 67
-- On expression200 shift to state 87
-- On expression100 shift to state 81
-- On expression0 shift to state 85

State 87:
expression200 -> expression200 . INFIXOP0 expression200 [ SEMI RPAREN RBRACE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN EQUAL EOF COMMA COLON AND ]
expression200 -> expression200 . INFIXOP1 expression200 [ SEMI RPAREN RBRACE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN EQUAL EOF COMMA COLON AND ]
expression200 -> expression200 . INFIXOP2 expression200 [ SEMI RPAREN RBRACE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN EQUAL EOF COMMA COLON AND ]
expression200 -> expression200 . INFIXOP3 expression200 [ SEMI RPAREN RBRACE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN EQUAL EOF COMMA COLON AND ]
expression200 -> expression200 INFIXOP3 expression200 . [ SEMI RPAREN RBRACE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN EQUAL EOF COMMA COLON AND ]
expression200 -> expression200 . INFIXOP4 expression200 [ SEMI RPAREN RBRACE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN EQUAL EOF COMMA COLON AND ]
expression200 -> expression200 . EQUAL expression200 [ SEMI RPAREN RBRACE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN EQUAL EOF COMMA COLON AND ]
-- On INFIXOP4 shift to state 79
-- On SEMI reduce production expression200 -> expression200 INFIXOP3 expression200
-- On RPAREN reduce production expression200 -> expression200 INFIXOP3 expression200
-- On RBRACE reduce production expression200 -> expression200 INFIXOP3 expression200
-- On LET reduce production expression200 -> expression200 INFIXOP3 expression200
-- On INFIXOP3 reduce production expression200 -> expression200 INFIXOP3 expression200
-- On INFIXOP2 reduce production expression200 -> expression200 INFIXOP3 expression200
-- On INFIXOP1 reduce production expression200 -> expression200 INFIXOP3 expression200
-- On INFIXOP0 reduce production expression200 -> expression200 INFIXOP3 expression200
-- On IN reduce production expression200 -> expression200 INFIXOP3 expression200
-- On EQUAL reduce production expression200 -> expression200 INFIXOP3 expression200
-- On EOF reduce production expression200 -> expression200 INFIXOP3 expression200
-- On COMMA reduce production expression200 -> expression200 INFIXOP3 expression200
-- On COLON reduce production expression200 -> expression200 INFIXOP3 expression200
-- On AND reduce production expression200 -> expression200 INFIXOP3 expression200

State 88:
expression200 -> expression200 INFIXOP2 . expression200 [ SEMI RPAREN RBRACE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN EQUAL EOF COMMA COLON AND ]
-- On LPAREN shift to state 60
-- On LID shift to state 62
-- On LBRACE shift to state 63
-- On INTEGER shift to state 67
-- On expression200 shift to state 89
-- On expression100 shift to state 81
-- On expression0 shift to state 85

State 89:
expression200 -> expression200 . INFIXOP0 expression200 [ SEMI RPAREN RBRACE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN EQUAL EOF COMMA COLON AND ]
expression200 -> expression200 . INFIXOP1 expression200 [ SEMI RPAREN RBRACE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN EQUAL EOF COMMA COLON AND ]
expression200 -> expression200 . INFIXOP2 expression200 [ SEMI RPAREN RBRACE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN EQUAL EOF COMMA COLON AND ]
expression200 -> expression200 INFIXOP2 expression200 . [ SEMI RPAREN RBRACE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN EQUAL EOF COMMA COLON AND ]
expression200 -> expression200 . INFIXOP3 expression200 [ SEMI RPAREN RBRACE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN EQUAL EOF COMMA COLON AND ]
expression200 -> expression200 . INFIXOP4 expression200 [ SEMI RPAREN RBRACE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN EQUAL EOF COMMA COLON AND ]
expression200 -> expression200 . EQUAL expression200 [ SEMI RPAREN RBRACE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN EQUAL EOF COMMA COLON AND ]
-- On INFIXOP4 shift to state 79
-- On INFIXOP3 shift to state 86
-- On SEMI reduce production expression200 -> expression200 INFIXOP2 expression200
-- On RPAREN reduce production expression200 -> expression200 INFIXOP2 expression200
-- On RBRACE reduce production expression200 -> expression200 INFIXOP2 expression200
-- On LET reduce production expression200 -> expression200 INFIXOP2 expression200
-- On INFIXOP2 reduce production expression200 -> expression200 INFIXOP2 expression200
-- On INFIXOP1 reduce production expression200 -> expression200 INFIXOP2 expression200
-- On INFIXOP0 reduce production expression200 -> expression200 INFIXOP2 expression200
-- On IN reduce production expression200 -> expression200 INFIXOP2 expression200
-- On EQUAL reduce production expression200 -> expression200 INFIXOP2 expression200
-- On EOF reduce production expression200 -> expression200 INFIXOP2 expression200
-- On COMMA reduce production expression200 -> expression200 INFIXOP2 expression200
-- On COLON reduce production expression200 -> expression200 INFIXOP2 expression200
-- On AND reduce production expression200 -> expression200 INFIXOP2 expression200

State 90:
expression200 -> expression200 INFIXOP1 . expression200 [ SEMI RPAREN RBRACE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN EQUAL EOF COMMA COLON AND ]
-- On LPAREN shift to state 60
-- On LID shift to state 62
-- On LBRACE shift to state 63
-- On INTEGER shift to state 67
-- On expression200 shift to state 91
-- On expression100 shift to state 81
-- On expression0 shift to state 85

State 91:
expression200 -> expression200 . INFIXOP0 expression200 [ SEMI RPAREN RBRACE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN EQUAL EOF COMMA COLON AND ]
expression200 -> expression200 . INFIXOP1 expression200 [ SEMI RPAREN RBRACE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN EQUAL EOF COMMA COLON AND ]
expression200 -> expression200 INFIXOP1 expression200 . [ SEMI RPAREN RBRACE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN EQUAL EOF COMMA COLON AND ]
expression200 -> expression200 . INFIXOP2 expression200 [ SEMI RPAREN RBRACE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN EQUAL EOF COMMA COLON AND ]
expression200 -> expression200 . INFIXOP3 expression200 [ SEMI RPAREN RBRACE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN EQUAL EOF COMMA COLON AND ]
expression200 -> expression200 . INFIXOP4 expression200 [ SEMI RPAREN RBRACE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN EQUAL EOF COMMA COLON AND ]
expression200 -> expression200 . EQUAL expression200 [ SEMI RPAREN RBRACE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN EQUAL EOF COMMA COLON AND ]
-- On INFIXOP4 shift to state 79
-- On INFIXOP3 shift to state 86
-- On INFIXOP2 shift to state 88
-- On INFIXOP1 shift to state 90
-- On SEMI reduce production expression200 -> expression200 INFIXOP1 expression200
-- On RPAREN reduce production expression200 -> expression200 INFIXOP1 expression200
-- On RBRACE reduce production expression200 -> expression200 INFIXOP1 expression200
-- On LET reduce production expression200 -> expression200 INFIXOP1 expression200
-- On INFIXOP0 reduce production expression200 -> expression200 INFIXOP1 expression200
-- On IN reduce production expression200 -> expression200 INFIXOP1 expression200
-- On EQUAL reduce production expression200 -> expression200 INFIXOP1 expression200
-- On EOF reduce production expression200 -> expression200 INFIXOP1 expression200
-- On COMMA reduce production expression200 -> expression200 INFIXOP1 expression200
-- On COLON reduce production expression200 -> expression200 INFIXOP1 expression200
-- On AND reduce production expression200 -> expression200 INFIXOP1 expression200

State 92:
expression200 -> expression200 INFIXOP0 . expression200 [ SEMI RPAREN RBRACE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN EQUAL EOF COMMA COLON AND ]
-- On LPAREN shift to state 60
-- On LID shift to state 62
-- On LBRACE shift to state 63
-- On INTEGER shift to state 67
-- On expression200 shift to state 93
-- On expression100 shift to state 81
-- On expression0 shift to state 85

State 93:
expression200 -> expression200 . INFIXOP0 expression200 [ SEMI RPAREN RBRACE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN EQUAL EOF COMMA COLON AND ]
expression200 -> expression200 INFIXOP0 expression200 . [ SEMI RPAREN RBRACE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN EQUAL EOF COMMA COLON AND ]
expression200 -> expression200 . INFIXOP1 expression200 [ SEMI RPAREN RBRACE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN EQUAL EOF COMMA COLON AND ]
expression200 -> expression200 . INFIXOP2 expression200 [ SEMI RPAREN RBRACE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN EQUAL EOF COMMA COLON AND ]
expression200 -> expression200 . INFIXOP3 expression200 [ SEMI RPAREN RBRACE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN EQUAL EOF COMMA COLON AND ]
expression200 -> expression200 . INFIXOP4 expression200 [ SEMI RPAREN RBRACE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN EQUAL EOF COMMA COLON AND ]
expression200 -> expression200 . EQUAL expression200 [ SEMI RPAREN RBRACE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN EQUAL EOF COMMA COLON AND ]
-- On INFIXOP4 shift to state 79
-- On INFIXOP3 shift to state 86
-- On INFIXOP2 shift to state 88
-- On INFIXOP1 shift to state 90
-- On SEMI reduce production expression200 -> expression200 INFIXOP0 expression200
-- On RPAREN reduce production expression200 -> expression200 INFIXOP0 expression200
-- On RBRACE reduce production expression200 -> expression200 INFIXOP0 expression200
-- On LET reduce production expression200 -> expression200 INFIXOP0 expression200
-- On INFIXOP0 reduce production expression200 -> expression200 INFIXOP0 expression200
-- On IN reduce production expression200 -> expression200 INFIXOP0 expression200
-- On EQUAL reduce production expression200 -> expression200 INFIXOP0 expression200
-- On EOF reduce production expression200 -> expression200 INFIXOP0 expression200
-- On COMMA reduce production expression200 -> expression200 INFIXOP0 expression200
-- On COLON reduce production expression200 -> expression200 INFIXOP0 expression200
-- On AND reduce production expression200 -> expression200 INFIXOP0 expression200

State 94:
expression200 -> expression200 EQUAL . expression200 [ SEMI RPAREN RBRACE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN EQUAL EOF COMMA COLON AND ]
-- On LPAREN shift to state 60
-- On LID shift to state 62
-- On LBRACE shift to state 63
-- On INTEGER shift to state 67
-- On expression200 shift to state 95
-- On expression100 shift to state 81
-- On expression0 shift to state 85

State 95:
expression200 -> expression200 . INFIXOP0 expression200 [ SEMI RPAREN RBRACE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN EQUAL EOF COMMA COLON AND ]
expression200 -> expression200 . INFIXOP1 expression200 [ SEMI RPAREN RBRACE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN EQUAL EOF COMMA COLON AND ]
expression200 -> expression200 . INFIXOP2 expression200 [ SEMI RPAREN RBRACE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN EQUAL EOF COMMA COLON AND ]
expression200 -> expression200 . INFIXOP3 expression200 [ SEMI RPAREN RBRACE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN EQUAL EOF COMMA COLON AND ]
expression200 -> expression200 . INFIXOP4 expression200 [ SEMI RPAREN RBRACE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN EQUAL EOF COMMA COLON AND ]
expression200 -> expression200 . EQUAL expression200 [ SEMI RPAREN RBRACE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN EQUAL EOF COMMA COLON AND ]
expression200 -> expression200 EQUAL expression200 . [ SEMI RPAREN RBRACE LET INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN EQUAL EOF COMMA COLON AND ]
-- On INFIXOP4 shift to state 79
-- On INFIXOP3 shift to state 86
-- On INFIXOP2 shift to state 88
-- On INFIXOP1 shift to state 90
-- On SEMI reduce production expression200 -> expression200 EQUAL expression200
-- On RPAREN reduce production expression200 -> expression200 EQUAL expression200
-- On RBRACE reduce production expression200 -> expression200 EQUAL expression200
-- On LET reduce production expression200 -> expression200 EQUAL expression200
-- On INFIXOP0 reduce production expression200 -> expression200 EQUAL expression200
-- On IN reduce production expression200 -> expression200 EQUAL expression200
-- On EQUAL reduce production expression200 -> expression200 EQUAL expression200
-- On EOF reduce production expression200 -> expression200 EQUAL expression200
-- On COMMA reduce production expression200 -> expression200 EQUAL expression200
-- On COLON reduce production expression200 -> expression200 EQUAL expression200
-- On AND reduce production expression200 -> expression200 EQUAL expression200

State 96:
expression0 -> expression0 . DOT LID [ SEMI RPAREN RBRACE LPAREN LID LET LBRACE INTEGER INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN EQUAL EOF DOT COMMA COLON AND ]
expression100 -> expression0 . [ SEMI RPAREN RBRACE LPAREN LID LET LBRACE INTEGER INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN EQUAL EOF COMMA COLON AND ]
expression300 -> expression0 . DOT LID LEFTARROW expression100 [ SEMI RPAREN RBRACE LET IN EOF COMMA COLON AND ]
-- On DOT shift to state 97
-- On SEMI reduce production expression100 -> expression0
-- On RPAREN reduce production expression100 -> expression0
-- On RBRACE reduce production expression100 -> expression0
-- On LPAREN reduce production expression100 -> expression0
-- On LID reduce production expression100 -> expression0
-- On LET reduce production expression100 -> expression0
-- On LBRACE reduce production expression100 -> expression0
-- On INTEGER reduce production expression100 -> expression0
-- On INFIXOP4 reduce production expression100 -> expression0
-- On INFIXOP3 reduce production expression100 -> expression0
-- On INFIXOP2 reduce production expression100 -> expression0
-- On INFIXOP1 reduce production expression100 -> expression0
-- On INFIXOP0 reduce production expression100 -> expression0
-- On IN reduce production expression100 -> expression0
-- On EQUAL reduce production expression100 -> expression0
-- On EOF reduce production expression100 -> expression0
-- On COMMA reduce production expression100 -> expression0
-- On COLON reduce production expression100 -> expression0
-- On AND reduce production expression100 -> expression0

State 97:
expression0 -> expression0 DOT . LID [ SEMI RPAREN RBRACE LPAREN LID LET LBRACE INTEGER INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN EQUAL EOF DOT COMMA COLON AND ]
expression300 -> expression0 DOT . LID LEFTARROW expression100 [ SEMI RPAREN RBRACE LET IN EOF COMMA COLON AND ]
-- On LID shift to state 98

State 98:
expression0 -> expression0 DOT LID . [ SEMI RPAREN RBRACE LPAREN LID LET LBRACE INTEGER INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN EQUAL EOF DOT COMMA COLON AND ]
expression300 -> expression0 DOT LID . LEFTARROW expression100 [ SEMI RPAREN RBRACE LET IN EOF COMMA COLON AND ]
-- On LEFTARROW shift to state 99
-- On SEMI reduce production expression0 -> expression0 DOT LID
-- On RPAREN reduce production expression0 -> expression0 DOT LID
-- On RBRACE reduce production expression0 -> expression0 DOT LID
-- On LPAREN reduce production expression0 -> expression0 DOT LID
-- On LID reduce production expression0 -> expression0 DOT LID
-- On LET reduce production expression0 -> expression0 DOT LID
-- On LBRACE reduce production expression0 -> expression0 DOT LID
-- On INTEGER reduce production expression0 -> expression0 DOT LID
-- On INFIXOP4 reduce production expression0 -> expression0 DOT LID
-- On INFIXOP3 reduce production expression0 -> expression0 DOT LID
-- On INFIXOP2 reduce production expression0 -> expression0 DOT LID
-- On INFIXOP1 reduce production expression0 -> expression0 DOT LID
-- On INFIXOP0 reduce production expression0 -> expression0 DOT LID
-- On IN reduce production expression0 -> expression0 DOT LID
-- On EQUAL reduce production expression0 -> expression0 DOT LID
-- On EOF reduce production expression0 -> expression0 DOT LID
-- On DOT reduce production expression0 -> expression0 DOT LID
-- On COMMA reduce production expression0 -> expression0 DOT LID
-- On COLON reduce production expression0 -> expression0 DOT LID
-- On AND reduce production expression0 -> expression0 DOT LID

State 99:
expression300 -> expression0 DOT LID LEFTARROW . expression100 [ SEMI RPAREN RBRACE LET IN EOF COMMA COLON AND ]
-- On LPAREN shift to state 60
-- On LID shift to state 62
-- On LBRACE shift to state 63
-- On INTEGER shift to state 67
-- On expression100 shift to state 100
-- On expression0 shift to state 85

State 100:
expression100 -> expression100 . expression0 [ SEMI RPAREN RBRACE LPAREN LID LET LBRACE INTEGER IN EOF COMMA COLON AND ]
expression300 -> expression0 DOT LID LEFTARROW expression100 . [ SEMI RPAREN RBRACE LET IN EOF COMMA COLON AND ]
-- On LPAREN shift to state 60
-- On LID shift to state 62
-- On LBRACE shift to state 63
-- On INTEGER shift to state 67
-- On expression0 shift to state 82
-- On SEMI reduce production expression300 -> expression0 DOT LID LEFTARROW expression100
-- On RPAREN reduce production expression300 -> expression0 DOT LID LEFTARROW expression100
-- On RBRACE reduce production expression300 -> expression0 DOT LID LEFTARROW expression100
-- On LET reduce production expression300 -> expression0 DOT LID LEFTARROW expression100
-- On IN reduce production expression300 -> expression0 DOT LID LEFTARROW expression100
-- On EOF reduce production expression300 -> expression0 DOT LID LEFTARROW expression100
-- On COMMA reduce production expression300 -> expression0 DOT LID LEFTARROW expression100
-- On COLON reduce production expression300 -> expression0 DOT LID LEFTARROW expression100
-- On AND reduce production expression300 -> expression0 DOT LID LEFTARROW expression100

State 101:
expression400 -> binding . IN expression400 [ RPAREN RBRACE LET IN EOF COMMA COLON AND ]
-- On IN shift to state 102

State 102:
expression400 -> binding IN . expression400 [ RPAREN RBRACE LET IN EOF COMMA COLON AND ]
-- On LPAREN shift to state 60
-- On LID shift to state 62
-- On LET shift to state 3
-- On LBRACE shift to state 63
-- On INTEGER shift to state 67
-- On EXISTS shift to state 68
-- On BACKSLASH shift to state 71
-- On expression400 shift to state 103
-- On expression300 shift to state 75
-- On expression200 shift to state 78
-- On expression100 shift to state 81
-- On expression0 shift to state 96
-- On binding shift to state 101

State 103:
expression400 -> binding IN expression400 . [ RPAREN RBRACE LET IN EOF COMMA COLON AND ]
-- On RPAREN reduce production expression400 -> binding IN expression400
-- On RBRACE reduce production expression400 -> binding IN expression400
-- On LET reduce production expression400 -> binding IN expression400
-- On IN reduce production expression400 -> binding IN expression400
-- On EOF reduce production expression400 -> binding IN expression400
-- On COMMA reduce production expression400 -> binding IN expression400
-- On COLON reduce production expression400 -> binding IN expression400
-- On AND reduce production expression400 -> binding IN expression400

State 104:
expression400 -> EXISTS quantifiers DOT expression400 . [ RPAREN RBRACE LET IN EOF COMMA COLON AND ]
-- On RPAREN reduce production expression400 -> EXISTS quantifiers DOT expression400
-- On RBRACE reduce production expression400 -> EXISTS quantifiers DOT expression400
-- On LET reduce production expression400 -> EXISTS quantifiers DOT expression400
-- On IN reduce production expression400 -> EXISTS quantifiers DOT expression400
-- On EOF reduce production expression400 -> EXISTS quantifiers DOT expression400
-- On COMMA reduce production expression400 -> EXISTS quantifiers DOT expression400
-- On COLON reduce production expression400 -> EXISTS quantifiers DOT expression400
-- On AND reduce production expression400 -> EXISTS quantifiers DOT expression400

State 105:
expression -> expression400 . [ RPAREN RBRACE LET IN EOF COMMA COLON AND ]
-- On RPAREN reduce production expression -> expression400
-- On RBRACE reduce production expression -> expression400
-- On LET reduce production expression -> expression400
-- On IN reduce production expression -> expression400
-- On EOF reduce production expression -> expression400
-- On COMMA reduce production expression -> expression400
-- On COLON reduce production expression -> expression400
-- On AND reduce production expression -> expression400

State 106:
expression0 -> LPAREN expression . RPAREN [ SEMI RPAREN RBRACE LPAREN LID LET LBRACE INTEGER INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN EQUAL EOF DOT COMMA COLON AND ]
expression0 -> LPAREN expression . COLON typ RPAREN [ SEMI RPAREN RBRACE LPAREN LID LET LBRACE INTEGER INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN EQUAL EOF DOT COMMA COLON AND ]
expression0 -> LPAREN expression . COMMA expressions RPAREN [ SEMI RPAREN RBRACE LPAREN LID LET LBRACE INTEGER INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN EQUAL EOF DOT COMMA COLON AND ]
-- On RPAREN shift to state 107
-- On COMMA shift to state 108
-- On COLON shift to state 114

State 107:
expression0 -> LPAREN expression RPAREN . [ SEMI RPAREN RBRACE LPAREN LID LET LBRACE INTEGER INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN EQUAL EOF DOT COMMA COLON AND ]
-- On SEMI reduce production expression0 -> LPAREN expression RPAREN
-- On RPAREN reduce production expression0 -> LPAREN expression RPAREN
-- On RBRACE reduce production expression0 -> LPAREN expression RPAREN
-- On LPAREN reduce production expression0 -> LPAREN expression RPAREN
-- On LID reduce production expression0 -> LPAREN expression RPAREN
-- On LET reduce production expression0 -> LPAREN expression RPAREN
-- On LBRACE reduce production expression0 -> LPAREN expression RPAREN
-- On INTEGER reduce production expression0 -> LPAREN expression RPAREN
-- On INFIXOP4 reduce production expression0 -> LPAREN expression RPAREN
-- On INFIXOP3 reduce production expression0 -> LPAREN expression RPAREN
-- On INFIXOP2 reduce production expression0 -> LPAREN expression RPAREN
-- On INFIXOP1 reduce production expression0 -> LPAREN expression RPAREN
-- On INFIXOP0 reduce production expression0 -> LPAREN expression RPAREN
-- On IN reduce production expression0 -> LPAREN expression RPAREN
-- On EQUAL reduce production expression0 -> LPAREN expression RPAREN
-- On EOF reduce production expression0 -> LPAREN expression RPAREN
-- On DOT reduce production expression0 -> LPAREN expression RPAREN
-- On COMMA reduce production expression0 -> LPAREN expression RPAREN
-- On COLON reduce production expression0 -> LPAREN expression RPAREN
-- On AND reduce production expression0 -> LPAREN expression RPAREN

State 108:
expression0 -> LPAREN expression COMMA . expressions RPAREN [ SEMI RPAREN RBRACE LPAREN LID LET LBRACE INTEGER INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN EQUAL EOF DOT COMMA COLON AND ]
-- On LPAREN shift to state 60
-- On LID shift to state 62
-- On LET shift to state 3
-- On LBRACE shift to state 63
-- On INTEGER shift to state 67
-- On EXISTS shift to state 68
-- On BACKSLASH shift to state 71
-- On expressions shift to state 109
-- On expression400 shift to state 105
-- On expression300 shift to state 75
-- On expression200 shift to state 78
-- On expression100 shift to state 81
-- On expression0 shift to state 96
-- On expression shift to state 111
-- On binding shift to state 101

State 109:
expression0 -> LPAREN expression COMMA expressions . RPAREN [ SEMI RPAREN RBRACE LPAREN LID LET LBRACE INTEGER INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN EQUAL EOF DOT COMMA COLON AND ]
-- On RPAREN shift to state 110

State 110:
expression0 -> LPAREN expression COMMA expressions RPAREN . [ SEMI RPAREN RBRACE LPAREN LID LET LBRACE INTEGER INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN EQUAL EOF DOT COMMA COLON AND ]
-- On SEMI reduce production expression0 -> LPAREN expression COMMA expressions RPAREN
-- On RPAREN reduce production expression0 -> LPAREN expression COMMA expressions RPAREN
-- On RBRACE reduce production expression0 -> LPAREN expression COMMA expressions RPAREN
-- On LPAREN reduce production expression0 -> LPAREN expression COMMA expressions RPAREN
-- On LID reduce production expression0 -> LPAREN expression COMMA expressions RPAREN
-- On LET reduce production expression0 -> LPAREN expression COMMA expressions RPAREN
-- On LBRACE reduce production expression0 -> LPAREN expression COMMA expressions RPAREN
-- On INTEGER reduce production expression0 -> LPAREN expression COMMA expressions RPAREN
-- On INFIXOP4 reduce production expression0 -> LPAREN expression COMMA expressions RPAREN
-- On INFIXOP3 reduce production expression0 -> LPAREN expression COMMA expressions RPAREN
-- On INFIXOP2 reduce production expression0 -> LPAREN expression COMMA expressions RPAREN
-- On INFIXOP1 reduce production expression0 -> LPAREN expression COMMA expressions RPAREN
-- On INFIXOP0 reduce production expression0 -> LPAREN expression COMMA expressions RPAREN
-- On IN reduce production expression0 -> LPAREN expression COMMA expressions RPAREN
-- On EQUAL reduce production expression0 -> LPAREN expression COMMA expressions RPAREN
-- On EOF reduce production expression0 -> LPAREN expression COMMA expressions RPAREN
-- On DOT reduce production expression0 -> LPAREN expression COMMA expressions RPAREN
-- On COMMA reduce production expression0 -> LPAREN expression COMMA expressions RPAREN
-- On COLON reduce production expression0 -> LPAREN expression COMMA expressions RPAREN
-- On AND reduce production expression0 -> LPAREN expression COMMA expressions RPAREN

State 111:
expressions -> expression . [ RPAREN ]
expressions -> expression . COMMA expressions [ RPAREN ]
-- On COMMA shift to state 112
-- On RPAREN reduce production expressions -> expression

State 112:
expressions -> expression COMMA . expressions [ RPAREN ]
-- On LPAREN shift to state 60
-- On LID shift to state 62
-- On LET shift to state 3
-- On LBRACE shift to state 63
-- On INTEGER shift to state 67
-- On EXISTS shift to state 68
-- On BACKSLASH shift to state 71
-- On expressions shift to state 113
-- On expression400 shift to state 105
-- On expression300 shift to state 75
-- On expression200 shift to state 78
-- On expression100 shift to state 81
-- On expression0 shift to state 96
-- On expression shift to state 111
-- On binding shift to state 101

State 113:
expressions -> expression COMMA expressions . [ RPAREN ]
-- On RPAREN reduce production expressions -> expression COMMA expressions

State 114:
expression0 -> LPAREN expression COLON . typ RPAREN [ SEMI RPAREN RBRACE LPAREN LID LET LBRACE INTEGER INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN EQUAL EOF DOT COMMA COLON AND ]
-- On UNIT shift to state 30
-- On LPAREN shift to state 31
-- On LID shift to state 32
-- On type2 shift to state 33
-- On type1 shift to state 34
-- On type0 shift to state 37
-- On typ shift to state 115

State 115:
expression0 -> LPAREN expression COLON typ . RPAREN [ SEMI RPAREN RBRACE LPAREN LID LET LBRACE INTEGER INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN EQUAL EOF DOT COMMA COLON AND ]
-- On RPAREN shift to state 116

State 116:
expression0 -> LPAREN expression COLON typ RPAREN . [ SEMI RPAREN RBRACE LPAREN LID LET LBRACE INTEGER INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN EQUAL EOF DOT COMMA COLON AND ]
-- On SEMI reduce production expression0 -> LPAREN expression COLON typ RPAREN
-- On RPAREN reduce production expression0 -> LPAREN expression COLON typ RPAREN
-- On RBRACE reduce production expression0 -> LPAREN expression COLON typ RPAREN
-- On LPAREN reduce production expression0 -> LPAREN expression COLON typ RPAREN
-- On LID reduce production expression0 -> LPAREN expression COLON typ RPAREN
-- On LET reduce production expression0 -> LPAREN expression COLON typ RPAREN
-- On LBRACE reduce production expression0 -> LPAREN expression COLON typ RPAREN
-- On INTEGER reduce production expression0 -> LPAREN expression COLON typ RPAREN
-- On INFIXOP4 reduce production expression0 -> LPAREN expression COLON typ RPAREN
-- On INFIXOP3 reduce production expression0 -> LPAREN expression COLON typ RPAREN
-- On INFIXOP2 reduce production expression0 -> LPAREN expression COLON typ RPAREN
-- On INFIXOP1 reduce production expression0 -> LPAREN expression COLON typ RPAREN
-- On INFIXOP0 reduce production expression0 -> LPAREN expression COLON typ RPAREN
-- On IN reduce production expression0 -> LPAREN expression COLON typ RPAREN
-- On EQUAL reduce production expression0 -> LPAREN expression COLON typ RPAREN
-- On EOF reduce production expression0 -> LPAREN expression COLON typ RPAREN
-- On DOT reduce production expression0 -> LPAREN expression COLON typ RPAREN
-- On COMMA reduce production expression0 -> LPAREN expression COLON typ RPAREN
-- On COLON reduce production expression0 -> LPAREN expression COLON typ RPAREN
-- On AND reduce production expression0 -> LPAREN expression COLON typ RPAREN

State 117:
equal_expression -> EQUAL expression . [ RBRACE LET IN EOF AND ]
-- On RBRACE reduce production equal_expression -> EQUAL expression
-- On LET reduce production equal_expression -> EQUAL expression
-- On IN reduce production equal_expression -> EQUAL expression
-- On EOF reduce production equal_expression -> EQUAL expression
-- On AND reduce production equal_expression -> EQUAL expression

State 118:
equal_expression -> COLON . typ EQUAL expression [ RBRACE LET IN EOF AND ]
-- On UNIT shift to state 30
-- On LPAREN shift to state 31
-- On LID shift to state 32
-- On type2 shift to state 33
-- On type1 shift to state 34
-- On type0 shift to state 37
-- On typ shift to state 119

State 119:
equal_expression -> COLON typ . EQUAL expression [ RBRACE LET IN EOF AND ]
-- On EQUAL shift to state 120

State 120:
equal_expression -> COLON typ EQUAL . expression [ RBRACE LET IN EOF AND ]
-- On LPAREN shift to state 60
-- On LID shift to state 62
-- On LET shift to state 3
-- On LBRACE shift to state 63
-- On INTEGER shift to state 67
-- On EXISTS shift to state 68
-- On BACKSLASH shift to state 71
-- On expression400 shift to state 105
-- On expression300 shift to state 75
-- On expression200 shift to state 78
-- On expression100 shift to state 81
-- On expression0 shift to state 96
-- On expression shift to state 121
-- On binding shift to state 101

State 121:
equal_expression -> COLON typ EQUAL expression . [ RBRACE LET IN EOF AND ]
-- On RBRACE reduce production equal_expression -> COLON typ EQUAL expression
-- On LET reduce production equal_expression -> COLON typ EQUAL expression
-- On IN reduce production equal_expression -> COLON typ EQUAL expression
-- On EOF reduce production equal_expression -> COLON typ EQUAL expression
-- On AND reduce production equal_expression -> COLON typ EQUAL expression

State 122:
equal_expression -> pattern0 . equal_expression [ RBRACE LET IN EOF AND ]
-- On WILD shift to state 15
-- On LPAREN shift to state 16
-- On LID shift to state 19
-- On INTEGER shift to state 20
-- On EQUAL shift to state 59
-- On COLON shift to state 118
-- On pattern0 shift to state 122
-- On equal_expression shift to state 123

State 123:
equal_expression -> pattern0 equal_expression . [ RBRACE LET IN EOF AND ]
-- On RBRACE reduce production equal_expression -> pattern0 equal_expression
-- On LET reduce production equal_expression -> pattern0 equal_expression
-- On IN reduce production equal_expression -> pattern0 equal_expression
-- On EOF reduce production equal_expression -> pattern0 equal_expression
-- On AND reduce production equal_expression -> pattern0 equal_expression

State 124:
value_definition -> forall pattern0 equal_expression . [ RBRACE LET IN EOF AND ]
-- On RBRACE reduce production value_definition -> forall pattern0 equal_expression
-- On LET reduce production value_definition -> forall pattern0 equal_expression
-- On IN reduce production value_definition -> forall pattern0 equal_expression
-- On EOF reduce production value_definition -> forall pattern0 equal_expression
-- On AND reduce production value_definition -> forall pattern0 equal_expression

State 125:
value_definitions -> value_definition . [ RBRACE LET IN EOF AND ]
-- On RBRACE reduce production value_definitions -> value_definition
-- On LET reduce production value_definitions -> value_definition
-- On IN reduce production value_definitions -> value_definition
-- On EOF reduce production value_definitions -> value_definition
-- On AND reduce production value_definitions -> value_definition

State 126:
binding -> LET value_definitions . [ RBRACE LET IN EOF ]
value_definitions -> value_definitions . AND value_definition [ RBRACE LET IN EOF AND ]
-- On AND shift to state 12
-- On RBRACE reduce production binding -> LET value_definitions
-- On LET reduce production binding -> LET value_definitions
-- On IN reduce production binding -> LET value_definitions
-- On EOF reduce production binding -> LET value_definitions

State 127:
program -> bindings EOF . [ # ]
-- On # reduce production program -> bindings EOF

