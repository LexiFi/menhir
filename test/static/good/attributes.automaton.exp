State 0:
## Known stack suffix:
##
## LR(1) items:
main' -> . main [ # ]
## Transitions:
-- On A shift to state 1
-- On main shift to state 4
## Reductions:

State 1:
## Known stack suffix:
## A
## LR(1) items:
main -> A . B C [ # ]
## Transitions:
-- On B shift to state 2
## Reductions:

State 2:
## Known stack suffix:
## A B
## LR(1) items:
main -> A B . C [ # ]
## Transitions:
-- On C shift to state 3
## Reductions:

State 3:
## Known stack suffix:
## A B C
## LR(1) items:
main -> A B C . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production main -> A B C

State 4:
## Known stack suffix:
## main
## LR(1) items:
main' -> main . [ # ]
## Transitions:
## Reductions:
-- On #
--   accept main

