State 0:
file' -> . file [ # ]
-- On EVENT shift to state 1
-- On CONTRACT shift to state 24
-- On list(contract) shift to state 187
-- On file shift to state 189
-- On contract shift to state 190
-- On EOF reduce production list(contract) ->

State 1:
contract -> EVENT . IDENT LPAR loption(separated_nonempty_list(COMMA,event_arg)) RPAR SEMICOLON [ EVENT EOF CONTRACT ]
-- On IDENT shift to state 2

State 2:
contract -> EVENT IDENT . LPAR loption(separated_nonempty_list(COMMA,event_arg)) RPAR SEMICOLON [ EVENT EOF CONTRACT ]
-- On LPAR shift to state 3

State 3:
contract -> EVENT IDENT LPAR . loption(separated_nonempty_list(COMMA,event_arg)) RPAR SEMICOLON [ EVENT EOF CONTRACT ]
-- On UINT8 shift to state 4
-- On UINT256 shift to state 5
-- On IDENT shift to state 6
-- On BYTES32 shift to state 7
-- On BOOL shift to state 8
-- On ADDRESS shift to state 9
-- On typ shift to state 10
-- On separated_nonempty_list(COMMA,event_arg) shift to state 16
-- On loption(separated_nonempty_list(COMMA,event_arg)) shift to state 17
-- On event_arg shift to state 20
-- On arg shift to state 23
-- On RPAR reduce production loption(separated_nonempty_list(COMMA,event_arg)) ->

State 4:
typ -> UINT8 . [ RARROW INDEXED IDENT ]
-- On RARROW reduce production typ -> UINT8
-- On INDEXED reduce production typ -> UINT8
-- On IDENT reduce production typ -> UINT8

State 5:
typ -> UINT256 . [ RARROW INDEXED IDENT ]
-- On RARROW reduce production typ -> UINT256
-- On INDEXED reduce production typ -> UINT256
-- On IDENT reduce production typ -> UINT256

State 6:
typ -> IDENT . [ RARROW INDEXED IDENT ]
-- On RARROW reduce production typ -> IDENT
-- On INDEXED reduce production typ -> IDENT
-- On IDENT reduce production typ -> IDENT

State 7:
typ -> BYTES32 . [ RARROW INDEXED IDENT ]
-- On RARROW reduce production typ -> BYTES32
-- On INDEXED reduce production typ -> BYTES32
-- On IDENT reduce production typ -> BYTES32

State 8:
typ -> BOOL . [ RARROW INDEXED IDENT ]
-- On RARROW reduce production typ -> BOOL
-- On INDEXED reduce production typ -> BOOL
-- On IDENT reduce production typ -> BOOL

State 9:
typ -> ADDRESS . [ RARROW INDEXED IDENT ]
-- On RARROW reduce production typ -> ADDRESS
-- On INDEXED reduce production typ -> ADDRESS
-- On IDENT reduce production typ -> ADDRESS

State 10:
arg -> typ . IDENT [ RPAR COMMA ]
event_arg -> typ . INDEXED IDENT [ RPAR COMMA ]
typ -> typ . RARROW typ [ RARROW INDEXED IDENT ]
-- On RARROW shift to state 11
-- On INDEXED shift to state 13
-- On IDENT shift to state 15

State 11:
typ -> typ RARROW . typ [ RARROW INDEXED IDENT ]
-- On UINT8 shift to state 4
-- On UINT256 shift to state 5
-- On IDENT shift to state 6
-- On BYTES32 shift to state 7
-- On BOOL shift to state 8
-- On ADDRESS shift to state 9
-- On typ shift to state 12

State 12:
typ -> typ . RARROW typ [ RARROW INDEXED IDENT ]
typ -> typ RARROW typ . [ RARROW INDEXED IDENT ]
-- On RARROW shift to state 11
-- On INDEXED reduce production typ -> typ RARROW typ
-- On IDENT reduce production typ -> typ RARROW typ

State 13:
event_arg -> typ INDEXED . IDENT [ RPAR COMMA ]
-- On IDENT shift to state 14

State 14:
event_arg -> typ INDEXED IDENT . [ RPAR COMMA ]
-- On RPAR reduce production event_arg -> typ INDEXED IDENT
-- On COMMA reduce production event_arg -> typ INDEXED IDENT

State 15:
arg -> typ IDENT . [ RPAR COMMA ]
-- On RPAR reduce production arg -> typ IDENT
-- On COMMA reduce production arg -> typ IDENT

State 16:
loption(separated_nonempty_list(COMMA,event_arg)) -> separated_nonempty_list(COMMA,event_arg) . [ RPAR ]
-- On RPAR reduce production loption(separated_nonempty_list(COMMA,event_arg)) -> separated_nonempty_list(COMMA,event_arg)

State 17:
contract -> EVENT IDENT LPAR loption(separated_nonempty_list(COMMA,event_arg)) . RPAR SEMICOLON [ EVENT EOF CONTRACT ]
-- On RPAR shift to state 18

State 18:
contract -> EVENT IDENT LPAR loption(separated_nonempty_list(COMMA,event_arg)) RPAR . SEMICOLON [ EVENT EOF CONTRACT ]
-- On SEMICOLON shift to state 19

State 19:
contract -> EVENT IDENT LPAR loption(separated_nonempty_list(COMMA,event_arg)) RPAR SEMICOLON . [ EVENT EOF CONTRACT ]
-- On EVENT reduce production contract -> EVENT IDENT LPAR loption(separated_nonempty_list(COMMA,event_arg)) RPAR SEMICOLON
-- On EOF reduce production contract -> EVENT IDENT LPAR loption(separated_nonempty_list(COMMA,event_arg)) RPAR SEMICOLON
-- On CONTRACT reduce production contract -> EVENT IDENT LPAR loption(separated_nonempty_list(COMMA,event_arg)) RPAR SEMICOLON

State 20:
separated_nonempty_list(COMMA,event_arg) -> event_arg . [ RPAR ]
separated_nonempty_list(COMMA,event_arg) -> event_arg . COMMA separated_nonempty_list(COMMA,event_arg) [ RPAR ]
-- On COMMA shift to state 21
-- On RPAR reduce production separated_nonempty_list(COMMA,event_arg) -> event_arg

State 21:
separated_nonempty_list(COMMA,event_arg) -> event_arg COMMA . separated_nonempty_list(COMMA,event_arg) [ RPAR ]
-- On UINT8 shift to state 4
-- On UINT256 shift to state 5
-- On IDENT shift to state 6
-- On BYTES32 shift to state 7
-- On BOOL shift to state 8
-- On ADDRESS shift to state 9
-- On typ shift to state 10
-- On separated_nonempty_list(COMMA,event_arg) shift to state 22
-- On event_arg shift to state 20
-- On arg shift to state 23

State 22:
separated_nonempty_list(COMMA,event_arg) -> event_arg COMMA separated_nonempty_list(COMMA,event_arg) . [ RPAR ]
-- On RPAR reduce production separated_nonempty_list(COMMA,event_arg) -> event_arg COMMA separated_nonempty_list(COMMA,event_arg)

State 23:
event_arg -> arg . [ RPAR COMMA ]
-- On RPAR reduce production event_arg -> arg
-- On COMMA reduce production event_arg -> arg

State 24:
contract -> CONTRACT . IDENT LPAR loption(separated_nonempty_list(COMMA,arg)) RPAR LBRACE list(case) RBRACE [ EVENT EOF CONTRACT ]
-- On IDENT shift to state 25

State 25:
contract -> CONTRACT IDENT . LPAR loption(separated_nonempty_list(COMMA,arg)) RPAR LBRACE list(case) RBRACE [ EVENT EOF CONTRACT ]
-- On LPAR shift to state 26

State 26:
contract -> CONTRACT IDENT LPAR . loption(separated_nonempty_list(COMMA,arg)) RPAR LBRACE list(case) RBRACE [ EVENT EOF CONTRACT ]
-- On UINT8 shift to state 4
-- On UINT256 shift to state 5
-- On IDENT shift to state 6
-- On BYTES32 shift to state 7
-- On BOOL shift to state 8
-- On ADDRESS shift to state 9
-- On typ shift to state 27
-- On separated_nonempty_list(COMMA,arg) shift to state 28
-- On loption(separated_nonempty_list(COMMA,arg)) shift to state 29
-- On arg shift to state 41
-- On RPAR reduce production loption(separated_nonempty_list(COMMA,arg)) ->

State 27:
arg -> typ . IDENT [ RPAR COMMA ]
typ -> typ . RARROW typ [ RARROW IDENT ]
-- On RARROW shift to state 11
-- On IDENT shift to state 15

State 28:
loption(separated_nonempty_list(COMMA,arg)) -> separated_nonempty_list(COMMA,arg) . [ RPAR ]
-- On RPAR reduce production loption(separated_nonempty_list(COMMA,arg)) -> separated_nonempty_list(COMMA,arg)

State 29:
contract -> CONTRACT IDENT LPAR loption(separated_nonempty_list(COMMA,arg)) . RPAR LBRACE list(case) RBRACE [ EVENT EOF CONTRACT ]
-- On RPAR shift to state 30

State 30:
contract -> CONTRACT IDENT LPAR loption(separated_nonempty_list(COMMA,arg)) RPAR . LBRACE list(case) RBRACE [ EVENT EOF CONTRACT ]
-- On LBRACE shift to state 31

State 31:
contract -> CONTRACT IDENT LPAR loption(separated_nonempty_list(COMMA,arg)) RPAR LBRACE . list(case) RBRACE [ EVENT EOF CONTRACT ]
-- On DEFAULT shift to state 32
-- On CASE shift to state 33
-- On list(case) shift to state 50
-- On case_header shift to state 52
-- On case shift to state 185
-- On RBRACE reduce production list(case) ->

State 32:
case_header -> DEFAULT . [ LBRACE ]
-- On LBRACE reduce production case_header -> DEFAULT

State 33:
case_header -> CASE . LPAR typ IDENT LPAR loption(separated_nonempty_list(COMMA,arg)) RPAR RPAR [ LBRACE ]
case_header -> CASE . LPAR VOID IDENT LPAR loption(separated_nonempty_list(COMMA,arg)) RPAR RPAR [ LBRACE ]
-- On LPAR shift to state 34

State 34:
case_header -> CASE LPAR . typ IDENT LPAR loption(separated_nonempty_list(COMMA,arg)) RPAR RPAR [ LBRACE ]
case_header -> CASE LPAR . VOID IDENT LPAR loption(separated_nonempty_list(COMMA,arg)) RPAR RPAR [ LBRACE ]
-- On VOID shift to state 35
-- On UINT8 shift to state 4
-- On UINT256 shift to state 5
-- On IDENT shift to state 6
-- On BYTES32 shift to state 7
-- On BOOL shift to state 8
-- On ADDRESS shift to state 9
-- On typ shift to state 44

State 35:
case_header -> CASE LPAR VOID . IDENT LPAR loption(separated_nonempty_list(COMMA,arg)) RPAR RPAR [ LBRACE ]
-- On IDENT shift to state 36

State 36:
case_header -> CASE LPAR VOID IDENT . LPAR loption(separated_nonempty_list(COMMA,arg)) RPAR RPAR [ LBRACE ]
-- On LPAR shift to state 37

State 37:
case_header -> CASE LPAR VOID IDENT LPAR . loption(separated_nonempty_list(COMMA,arg)) RPAR RPAR [ LBRACE ]
-- On UINT8 shift to state 4
-- On UINT256 shift to state 5
-- On IDENT shift to state 6
-- On BYTES32 shift to state 7
-- On BOOL shift to state 8
-- On ADDRESS shift to state 9
-- On typ shift to state 27
-- On separated_nonempty_list(COMMA,arg) shift to state 28
-- On loption(separated_nonempty_list(COMMA,arg)) shift to state 38
-- On arg shift to state 41
-- On RPAR reduce production loption(separated_nonempty_list(COMMA,arg)) ->

State 38:
case_header -> CASE LPAR VOID IDENT LPAR loption(separated_nonempty_list(COMMA,arg)) . RPAR RPAR [ LBRACE ]
-- On RPAR shift to state 39

State 39:
case_header -> CASE LPAR VOID IDENT LPAR loption(separated_nonempty_list(COMMA,arg)) RPAR . RPAR [ LBRACE ]
-- On RPAR shift to state 40

State 40:
case_header -> CASE LPAR VOID IDENT LPAR loption(separated_nonempty_list(COMMA,arg)) RPAR RPAR . [ LBRACE ]
-- On LBRACE reduce production case_header -> CASE LPAR VOID IDENT LPAR loption(separated_nonempty_list(COMMA,arg)) RPAR RPAR

State 41:
separated_nonempty_list(COMMA,arg) -> arg . [ RPAR ]
separated_nonempty_list(COMMA,arg) -> arg . COMMA separated_nonempty_list(COMMA,arg) [ RPAR ]
-- On COMMA shift to state 42
-- On RPAR reduce production separated_nonempty_list(COMMA,arg) -> arg

State 42:
separated_nonempty_list(COMMA,arg) -> arg COMMA . separated_nonempty_list(COMMA,arg) [ RPAR ]
-- On UINT8 shift to state 4
-- On UINT256 shift to state 5
-- On IDENT shift to state 6
-- On BYTES32 shift to state 7
-- On BOOL shift to state 8
-- On ADDRESS shift to state 9
-- On typ shift to state 27
-- On separated_nonempty_list(COMMA,arg) shift to state 43
-- On arg shift to state 41

State 43:
separated_nonempty_list(COMMA,arg) -> arg COMMA separated_nonempty_list(COMMA,arg) . [ RPAR ]
-- On RPAR reduce production separated_nonempty_list(COMMA,arg) -> arg COMMA separated_nonempty_list(COMMA,arg)

State 44:
case_header -> CASE LPAR typ . IDENT LPAR loption(separated_nonempty_list(COMMA,arg)) RPAR RPAR [ LBRACE ]
typ -> typ . RARROW typ [ RARROW IDENT ]
-- On RARROW shift to state 11
-- On IDENT shift to state 45

State 45:
case_header -> CASE LPAR typ IDENT . LPAR loption(separated_nonempty_list(COMMA,arg)) RPAR RPAR [ LBRACE ]
-- On LPAR shift to state 46

State 46:
case_header -> CASE LPAR typ IDENT LPAR . loption(separated_nonempty_list(COMMA,arg)) RPAR RPAR [ LBRACE ]
-- On UINT8 shift to state 4
-- On UINT256 shift to state 5
-- On IDENT shift to state 6
-- On BYTES32 shift to state 7
-- On BOOL shift to state 8
-- On ADDRESS shift to state 9
-- On typ shift to state 27
-- On separated_nonempty_list(COMMA,arg) shift to state 28
-- On loption(separated_nonempty_list(COMMA,arg)) shift to state 47
-- On arg shift to state 41
-- On RPAR reduce production loption(separated_nonempty_list(COMMA,arg)) ->

State 47:
case_header -> CASE LPAR typ IDENT LPAR loption(separated_nonempty_list(COMMA,arg)) . RPAR RPAR [ LBRACE ]
-- On RPAR shift to state 48

State 48:
case_header -> CASE LPAR typ IDENT LPAR loption(separated_nonempty_list(COMMA,arg)) RPAR . RPAR [ LBRACE ]
-- On RPAR shift to state 49

State 49:
case_header -> CASE LPAR typ IDENT LPAR loption(separated_nonempty_list(COMMA,arg)) RPAR RPAR . [ LBRACE ]
-- On LBRACE reduce production case_header -> CASE LPAR typ IDENT LPAR loption(separated_nonempty_list(COMMA,arg)) RPAR RPAR

State 50:
contract -> CONTRACT IDENT LPAR loption(separated_nonempty_list(COMMA,arg)) RPAR LBRACE list(case) . RBRACE [ EVENT EOF CONTRACT ]
-- On RBRACE shift to state 51

State 51:
contract -> CONTRACT IDENT LPAR loption(separated_nonempty_list(COMMA,arg)) RPAR LBRACE list(case) RBRACE . [ EVENT EOF CONTRACT ]
-- On EVENT reduce production contract -> CONTRACT IDENT LPAR loption(separated_nonempty_list(COMMA,arg)) RPAR LBRACE list(case) RBRACE
-- On EOF reduce production contract -> CONTRACT IDENT LPAR loption(separated_nonempty_list(COMMA,arg)) RPAR LBRACE list(case) RBRACE
-- On CONTRACT reduce production contract -> CONTRACT IDENT LPAR loption(separated_nonempty_list(COMMA,arg)) RPAR LBRACE list(case) RBRACE

State 52:
case -> case_header . block [ RBRACE DEFAULT CASE ]
-- On LBRACE shift to state 53
-- On block shift to state 184

State 53:
block -> LBRACE . list(sentence) RBRACE [ VOID VALUE UINT8 UINT256 TRUE THIS THEN SENDER SEMICOLON SELFDESTRUCT RSQBR RPAR RETURN REENTRANCE RBRACE PLUS NOW NOT NEQ MULT MINUS LT LSQBR LPAR LOG LAND IF IDENT GT FALSE EQUALITY ELSE DOT DEPLOY DEFAULT DECLIT8 DECLIT256 COMMA CASE BYTES32 BOOL BALANCE ADDRESS ABORT ]
-- On VOID shift to state 54
-- On VALUE shift to state 56
-- On UINT8 shift to state 4
-- On UINT256 shift to state 5
-- On TRUE shift to state 60
-- On THIS shift to state 61
-- On SENDER shift to state 62
-- On SELFDESTRUCT shift to state 138
-- On RETURN shift to state 141
-- On NOW shift to state 66
-- On NOT shift to state 70
-- On LPAR shift to state 71
-- On LOG shift to state 148
-- On IF shift to state 154
-- On IDENT shift to state 158
-- On FALSE shift to state 74
-- On DEPLOY shift to state 75
-- On DECLIT8 shift to state 78
-- On DECLIT256 shift to state 79
-- On BYTES32 shift to state 7
-- On BOOL shift to state 8
-- On BALANCE shift to state 80
-- On ADDRESS shift to state 159
-- On ABORT shift to state 160
-- On typ shift to state 162
-- On sentence shift to state 180
-- On list(sentence) shift to state 182
-- On lexp shift to state 170
-- On exp shift to state 174
-- On RBRACE reduce production list(sentence) ->

State 54:
sentence -> VOID . SINGLE_EQ exp SEMICOLON [ VOID VALUE UINT8 UINT256 TRUE THIS SENDER SELFDESTRUCT RETURN RBRACE NOW NOT LPAR LOG IF IDENT FALSE ELSE DEPLOY DECLIT8 DECLIT256 BYTES32 BOOL BALANCE ADDRESS ABORT ]
-- On SINGLE_EQ shift to state 55

State 55:
sentence -> VOID SINGLE_EQ . exp SEMICOLON [ VOID VALUE UINT8 UINT256 TRUE THIS SENDER SELFDESTRUCT RETURN RBRACE NOW NOT LPAR LOG IF IDENT FALSE ELSE DEPLOY DECLIT8 DECLIT256 BYTES32 BOOL BALANCE ADDRESS ABORT ]
-- On VALUE shift to state 56
-- On TRUE shift to state 60
-- On THIS shift to state 61
-- On SENDER shift to state 62
-- On NOW shift to state 66
-- On NOT shift to state 70
-- On LPAR shift to state 71
-- On IDENT shift to state 72
-- On FALSE shift to state 74
-- On DEPLOY shift to state 75
-- On DECLIT8 shift to state 78
-- On DECLIT256 shift to state 79
-- On BALANCE shift to state 80
-- On ADDRESS shift to state 82
-- On lexp shift to state 84
-- On exp shift to state 136

State 56:
exp -> VALUE . LPAR MSG RPAR [ THEN SEMICOLON RSQBR RPAR REENTRANCE PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT COMMA ]
-- On LPAR shift to state 57

State 57:
exp -> VALUE LPAR . MSG RPAR [ THEN SEMICOLON RSQBR RPAR REENTRANCE PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT COMMA ]
-- On MSG shift to state 58

State 58:
exp -> VALUE LPAR MSG . RPAR [ THEN SEMICOLON RSQBR RPAR REENTRANCE PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT COMMA ]
-- On RPAR shift to state 59

State 59:
exp -> VALUE LPAR MSG RPAR . [ THEN SEMICOLON RSQBR RPAR REENTRANCE PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT COMMA ]
-- On THEN reduce production exp -> VALUE LPAR MSG RPAR
-- On SEMICOLON reduce production exp -> VALUE LPAR MSG RPAR
-- On RSQBR reduce production exp -> VALUE LPAR MSG RPAR
-- On RPAR reduce production exp -> VALUE LPAR MSG RPAR
-- On REENTRANCE reduce production exp -> VALUE LPAR MSG RPAR
-- On PLUS reduce production exp -> VALUE LPAR MSG RPAR
-- On NEQ reduce production exp -> VALUE LPAR MSG RPAR
-- On MULT reduce production exp -> VALUE LPAR MSG RPAR
-- On MINUS reduce production exp -> VALUE LPAR MSG RPAR
-- On LT reduce production exp -> VALUE LPAR MSG RPAR
-- On LSQBR reduce production exp -> VALUE LPAR MSG RPAR
-- On LAND reduce production exp -> VALUE LPAR MSG RPAR
-- On GT reduce production exp -> VALUE LPAR MSG RPAR
-- On EQUALITY reduce production exp -> VALUE LPAR MSG RPAR
-- On DOT reduce production exp -> VALUE LPAR MSG RPAR
-- On COMMA reduce production exp -> VALUE LPAR MSG RPAR

State 60:
exp -> TRUE . [ THEN SEMICOLON RSQBR RPAR REENTRANCE PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT COMMA ]
-- On THEN reduce production exp -> TRUE
-- On SEMICOLON reduce production exp -> TRUE
-- On RSQBR reduce production exp -> TRUE
-- On RPAR reduce production exp -> TRUE
-- On REENTRANCE reduce production exp -> TRUE
-- On PLUS reduce production exp -> TRUE
-- On NEQ reduce production exp -> TRUE
-- On MULT reduce production exp -> TRUE
-- On MINUS reduce production exp -> TRUE
-- On LT reduce production exp -> TRUE
-- On LSQBR reduce production exp -> TRUE
-- On LAND reduce production exp -> TRUE
-- On GT reduce production exp -> TRUE
-- On EQUALITY reduce production exp -> TRUE
-- On DOT reduce production exp -> TRUE
-- On COMMA reduce production exp -> TRUE

State 61:
exp -> THIS . [ THEN SEMICOLON RSQBR RPAR REENTRANCE PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT COMMA ]
-- On THEN reduce production exp -> THIS
-- On SEMICOLON reduce production exp -> THIS
-- On RSQBR reduce production exp -> THIS
-- On RPAR reduce production exp -> THIS
-- On REENTRANCE reduce production exp -> THIS
-- On PLUS reduce production exp -> THIS
-- On NEQ reduce production exp -> THIS
-- On MULT reduce production exp -> THIS
-- On MINUS reduce production exp -> THIS
-- On LT reduce production exp -> THIS
-- On LSQBR reduce production exp -> THIS
-- On LAND reduce production exp -> THIS
-- On GT reduce production exp -> THIS
-- On EQUALITY reduce production exp -> THIS
-- On DOT reduce production exp -> THIS
-- On COMMA reduce production exp -> THIS

State 62:
exp -> SENDER . LPAR MSG RPAR [ THEN SEMICOLON RSQBR RPAR REENTRANCE PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT COMMA ]
-- On LPAR shift to state 63

State 63:
exp -> SENDER LPAR . MSG RPAR [ THEN SEMICOLON RSQBR RPAR REENTRANCE PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT COMMA ]
-- On MSG shift to state 64

State 64:
exp -> SENDER LPAR MSG . RPAR [ THEN SEMICOLON RSQBR RPAR REENTRANCE PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT COMMA ]
-- On RPAR shift to state 65

State 65:
exp -> SENDER LPAR MSG RPAR . [ THEN SEMICOLON RSQBR RPAR REENTRANCE PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT COMMA ]
-- On THEN reduce production exp -> SENDER LPAR MSG RPAR
-- On SEMICOLON reduce production exp -> SENDER LPAR MSG RPAR
-- On RSQBR reduce production exp -> SENDER LPAR MSG RPAR
-- On RPAR reduce production exp -> SENDER LPAR MSG RPAR
-- On REENTRANCE reduce production exp -> SENDER LPAR MSG RPAR
-- On PLUS reduce production exp -> SENDER LPAR MSG RPAR
-- On NEQ reduce production exp -> SENDER LPAR MSG RPAR
-- On MULT reduce production exp -> SENDER LPAR MSG RPAR
-- On MINUS reduce production exp -> SENDER LPAR MSG RPAR
-- On LT reduce production exp -> SENDER LPAR MSG RPAR
-- On LSQBR reduce production exp -> SENDER LPAR MSG RPAR
-- On LAND reduce production exp -> SENDER LPAR MSG RPAR
-- On GT reduce production exp -> SENDER LPAR MSG RPAR
-- On EQUALITY reduce production exp -> SENDER LPAR MSG RPAR
-- On DOT reduce production exp -> SENDER LPAR MSG RPAR
-- On COMMA reduce production exp -> SENDER LPAR MSG RPAR

State 66:
exp -> NOW . LPAR BLOCK RPAR [ THEN SEMICOLON RSQBR RPAR REENTRANCE PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT COMMA ]
-- On LPAR shift to state 67

State 67:
exp -> NOW LPAR . BLOCK RPAR [ THEN SEMICOLON RSQBR RPAR REENTRANCE PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT COMMA ]
-- On BLOCK shift to state 68

State 68:
exp -> NOW LPAR BLOCK . RPAR [ THEN SEMICOLON RSQBR RPAR REENTRANCE PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT COMMA ]
-- On RPAR shift to state 69

State 69:
exp -> NOW LPAR BLOCK RPAR . [ THEN SEMICOLON RSQBR RPAR REENTRANCE PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT COMMA ]
-- On THEN reduce production exp -> NOW LPAR BLOCK RPAR
-- On SEMICOLON reduce production exp -> NOW LPAR BLOCK RPAR
-- On RSQBR reduce production exp -> NOW LPAR BLOCK RPAR
-- On RPAR reduce production exp -> NOW LPAR BLOCK RPAR
-- On REENTRANCE reduce production exp -> NOW LPAR BLOCK RPAR
-- On PLUS reduce production exp -> NOW LPAR BLOCK RPAR
-- On NEQ reduce production exp -> NOW LPAR BLOCK RPAR
-- On MULT reduce production exp -> NOW LPAR BLOCK RPAR
-- On MINUS reduce production exp -> NOW LPAR BLOCK RPAR
-- On LT reduce production exp -> NOW LPAR BLOCK RPAR
-- On LSQBR reduce production exp -> NOW LPAR BLOCK RPAR
-- On LAND reduce production exp -> NOW LPAR BLOCK RPAR
-- On GT reduce production exp -> NOW LPAR BLOCK RPAR
-- On EQUALITY reduce production exp -> NOW LPAR BLOCK RPAR
-- On DOT reduce production exp -> NOW LPAR BLOCK RPAR
-- On COMMA reduce production exp -> NOW LPAR BLOCK RPAR

State 70:
exp -> NOT . exp [ THEN SEMICOLON RSQBR RPAR REENTRANCE PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT COMMA ]
-- On VALUE shift to state 56
-- On TRUE shift to state 60
-- On THIS shift to state 61
-- On SENDER shift to state 62
-- On NOW shift to state 66
-- On NOT shift to state 70
-- On LPAR shift to state 71
-- On IDENT shift to state 72
-- On FALSE shift to state 74
-- On DEPLOY shift to state 75
-- On DECLIT8 shift to state 78
-- On DECLIT256 shift to state 79
-- On BALANCE shift to state 80
-- On ADDRESS shift to state 82
-- On lexp shift to state 84
-- On exp shift to state 135

State 71:
exp -> LPAR . exp RPAR [ THEN SEMICOLON RSQBR RPAR REENTRANCE PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT COMMA ]
-- On VALUE shift to state 56
-- On TRUE shift to state 60
-- On THIS shift to state 61
-- On SENDER shift to state 62
-- On NOW shift to state 66
-- On NOT shift to state 70
-- On LPAR shift to state 71
-- On IDENT shift to state 72
-- On FALSE shift to state 74
-- On DEPLOY shift to state 75
-- On DECLIT8 shift to state 78
-- On DECLIT256 shift to state 79
-- On BALANCE shift to state 80
-- On ADDRESS shift to state 82
-- On lexp shift to state 84
-- On exp shift to state 133

State 72:
exp -> IDENT . [ THEN SEMICOLON RSQBR RPAR REENTRANCE PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT COMMA ]
exp -> IDENT . LPAR loption(separated_nonempty_list(COMMA,exp)) RPAR [ THEN SEMICOLON RSQBR RPAR REENTRANCE PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT COMMA ]
-- On LPAR shift to state 73
-- On THEN reduce production exp -> IDENT
-- On SEMICOLON reduce production exp -> IDENT
-- On RSQBR reduce production exp -> IDENT
-- On RPAR reduce production exp -> IDENT
-- On REENTRANCE reduce production exp -> IDENT
-- On PLUS reduce production exp -> IDENT
-- On NEQ reduce production exp -> IDENT
-- On MULT reduce production exp -> IDENT
-- On MINUS reduce production exp -> IDENT
-- On LT reduce production exp -> IDENT
-- On LSQBR reduce production exp -> IDENT
-- On LAND reduce production exp -> IDENT
-- On GT reduce production exp -> IDENT
-- On EQUALITY reduce production exp -> IDENT
-- On DOT reduce production exp -> IDENT
-- On COMMA reduce production exp -> IDENT

State 73:
exp -> IDENT LPAR . loption(separated_nonempty_list(COMMA,exp)) RPAR [ THEN SEMICOLON RSQBR RPAR REENTRANCE PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT COMMA ]
-- On VALUE shift to state 56
-- On TRUE shift to state 60
-- On THIS shift to state 61
-- On SENDER shift to state 62
-- On NOW shift to state 66
-- On NOT shift to state 70
-- On LPAR shift to state 71
-- On IDENT shift to state 72
-- On FALSE shift to state 74
-- On DEPLOY shift to state 75
-- On DECLIT8 shift to state 78
-- On DECLIT256 shift to state 79
-- On BALANCE shift to state 80
-- On ADDRESS shift to state 82
-- On separated_nonempty_list(COMMA,exp) shift to state 101
-- On loption(separated_nonempty_list(COMMA,exp)) shift to state 131
-- On lexp shift to state 84
-- On exp shift to state 119
-- On RPAR reduce production loption(separated_nonempty_list(COMMA,exp)) ->

State 74:
exp -> FALSE . [ THEN SEMICOLON RSQBR RPAR REENTRANCE PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT COMMA ]
-- On THEN reduce production exp -> FALSE
-- On SEMICOLON reduce production exp -> FALSE
-- On RSQBR reduce production exp -> FALSE
-- On RPAR reduce production exp -> FALSE
-- On REENTRANCE reduce production exp -> FALSE
-- On PLUS reduce production exp -> FALSE
-- On NEQ reduce production exp -> FALSE
-- On MULT reduce production exp -> FALSE
-- On MINUS reduce production exp -> FALSE
-- On LT reduce production exp -> FALSE
-- On LSQBR reduce production exp -> FALSE
-- On LAND reduce production exp -> FALSE
-- On GT reduce production exp -> FALSE
-- On EQUALITY reduce production exp -> FALSE
-- On DOT reduce production exp -> FALSE
-- On COMMA reduce production exp -> FALSE

State 75:
exp -> DEPLOY . IDENT LPAR loption(separated_nonempty_list(COMMA,exp)) RPAR msg_info [ THEN SEMICOLON RSQBR RPAR REENTRANCE PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT COMMA ]
-- On IDENT shift to state 76

State 76:
exp -> DEPLOY IDENT . LPAR loption(separated_nonempty_list(COMMA,exp)) RPAR msg_info [ THEN SEMICOLON RSQBR RPAR REENTRANCE PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT COMMA ]
-- On LPAR shift to state 77

State 77:
exp -> DEPLOY IDENT LPAR . loption(separated_nonempty_list(COMMA,exp)) RPAR msg_info [ THEN SEMICOLON RSQBR RPAR REENTRANCE PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT COMMA ]
-- On VALUE shift to state 56
-- On TRUE shift to state 60
-- On THIS shift to state 61
-- On SENDER shift to state 62
-- On NOW shift to state 66
-- On NOT shift to state 70
-- On LPAR shift to state 71
-- On IDENT shift to state 72
-- On FALSE shift to state 74
-- On DEPLOY shift to state 75
-- On DECLIT8 shift to state 78
-- On DECLIT256 shift to state 79
-- On BALANCE shift to state 80
-- On ADDRESS shift to state 82
-- On separated_nonempty_list(COMMA,exp) shift to state 101
-- On loption(separated_nonempty_list(COMMA,exp)) shift to state 128
-- On lexp shift to state 84
-- On exp shift to state 119
-- On RPAR reduce production loption(separated_nonempty_list(COMMA,exp)) ->

State 78:
exp -> DECLIT8 . [ THEN SEMICOLON RSQBR RPAR REENTRANCE PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT COMMA ]
-- On THEN reduce production exp -> DECLIT8
-- On SEMICOLON reduce production exp -> DECLIT8
-- On RSQBR reduce production exp -> DECLIT8
-- On RPAR reduce production exp -> DECLIT8
-- On REENTRANCE reduce production exp -> DECLIT8
-- On PLUS reduce production exp -> DECLIT8
-- On NEQ reduce production exp -> DECLIT8
-- On MULT reduce production exp -> DECLIT8
-- On MINUS reduce production exp -> DECLIT8
-- On LT reduce production exp -> DECLIT8
-- On LSQBR reduce production exp -> DECLIT8
-- On LAND reduce production exp -> DECLIT8
-- On GT reduce production exp -> DECLIT8
-- On EQUALITY reduce production exp -> DECLIT8
-- On DOT reduce production exp -> DECLIT8
-- On COMMA reduce production exp -> DECLIT8

State 79:
exp -> DECLIT256 . [ THEN SEMICOLON RSQBR RPAR REENTRANCE PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT COMMA ]
-- On THEN reduce production exp -> DECLIT256
-- On SEMICOLON reduce production exp -> DECLIT256
-- On RSQBR reduce production exp -> DECLIT256
-- On RPAR reduce production exp -> DECLIT256
-- On REENTRANCE reduce production exp -> DECLIT256
-- On PLUS reduce production exp -> DECLIT256
-- On NEQ reduce production exp -> DECLIT256
-- On MULT reduce production exp -> DECLIT256
-- On MINUS reduce production exp -> DECLIT256
-- On LT reduce production exp -> DECLIT256
-- On LSQBR reduce production exp -> DECLIT256
-- On LAND reduce production exp -> DECLIT256
-- On GT reduce production exp -> DECLIT256
-- On EQUALITY reduce production exp -> DECLIT256
-- On DOT reduce production exp -> DECLIT256
-- On COMMA reduce production exp -> DECLIT256

State 80:
exp -> BALANCE . LPAR exp RPAR [ THEN SEMICOLON RSQBR RPAR REENTRANCE PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT COMMA ]
-- On LPAR shift to state 81

State 81:
exp -> BALANCE LPAR . exp RPAR [ THEN SEMICOLON RSQBR RPAR REENTRANCE PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT COMMA ]
-- On VALUE shift to state 56
-- On TRUE shift to state 60
-- On THIS shift to state 61
-- On SENDER shift to state 62
-- On NOW shift to state 66
-- On NOT shift to state 70
-- On LPAR shift to state 71
-- On IDENT shift to state 72
-- On FALSE shift to state 74
-- On DEPLOY shift to state 75
-- On DECLIT8 shift to state 78
-- On DECLIT256 shift to state 79
-- On BALANCE shift to state 80
-- On ADDRESS shift to state 82
-- On lexp shift to state 84
-- On exp shift to state 126

State 82:
exp -> ADDRESS . LPAR exp RPAR [ THEN SEMICOLON RSQBR RPAR REENTRANCE PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT COMMA ]
-- On LPAR shift to state 83

State 83:
exp -> ADDRESS LPAR . exp RPAR [ THEN SEMICOLON RSQBR RPAR REENTRANCE PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT COMMA ]
-- On VALUE shift to state 56
-- On TRUE shift to state 60
-- On THIS shift to state 61
-- On SENDER shift to state 62
-- On NOW shift to state 66
-- On NOT shift to state 70
-- On LPAR shift to state 71
-- On IDENT shift to state 72
-- On FALSE shift to state 74
-- On DEPLOY shift to state 75
-- On DECLIT8 shift to state 78
-- On DECLIT256 shift to state 79
-- On BALANCE shift to state 80
-- On ADDRESS shift to state 82
-- On lexp shift to state 84
-- On exp shift to state 85

State 84:
exp -> lexp . [ THEN SEMICOLON RSQBR RPAR REENTRANCE PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT COMMA ]
-- On THEN reduce production exp -> lexp
-- On SEMICOLON reduce production exp -> lexp
-- On RSQBR reduce production exp -> lexp
-- On RPAR reduce production exp -> lexp
-- On REENTRANCE reduce production exp -> lexp
-- On PLUS reduce production exp -> lexp
-- On NEQ reduce production exp -> lexp
-- On MULT reduce production exp -> lexp
-- On MINUS reduce production exp -> lexp
-- On LT reduce production exp -> lexp
-- On LSQBR reduce production exp -> lexp
-- On LAND reduce production exp -> lexp
-- On GT reduce production exp -> lexp
-- On EQUALITY reduce production exp -> lexp
-- On DOT reduce production exp -> lexp
-- On COMMA reduce production exp -> lexp

State 85:
exp -> exp . LAND exp [ RPAR PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT ]
exp -> exp . PLUS exp [ RPAR PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT ]
exp -> exp . MINUS exp [ RPAR PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT ]
exp -> exp . MULT exp [ RPAR PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT ]
exp -> exp . LT exp [ RPAR PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT ]
exp -> exp . GT exp [ RPAR PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT ]
exp -> exp . NEQ exp [ RPAR PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT ]
exp -> exp . EQUALITY exp [ RPAR PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT ]
exp -> exp . DOT DEFAULT LPAR RPAR msg_info [ RPAR PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT ]
exp -> exp . DOT IDENT LPAR loption(separated_nonempty_list(COMMA,exp)) RPAR msg_info [ RPAR PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT ]
exp -> ADDRESS LPAR exp . RPAR [ THEN SEMICOLON RSQBR RPAR REENTRANCE PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT COMMA ]
lexp -> exp . LSQBR exp RSQBR [ RPAR PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT ]
-- On RPAR shift to state 86
-- On PLUS shift to state 87
-- On NEQ shift to state 94
-- On MULT shift to state 89
-- On MINUS shift to state 96
-- On LT shift to state 106
-- On LSQBR shift to state 91
-- On LAND shift to state 108
-- On GT shift to state 110
-- On EQUALITY shift to state 112
-- On DOT shift to state 98

State 86:
exp -> ADDRESS LPAR exp RPAR . [ THEN SEMICOLON RSQBR RPAR REENTRANCE PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT COMMA ]
-- On THEN reduce production exp -> ADDRESS LPAR exp RPAR
-- On SEMICOLON reduce production exp -> ADDRESS LPAR exp RPAR
-- On RSQBR reduce production exp -> ADDRESS LPAR exp RPAR
-- On RPAR reduce production exp -> ADDRESS LPAR exp RPAR
-- On REENTRANCE reduce production exp -> ADDRESS LPAR exp RPAR
-- On PLUS reduce production exp -> ADDRESS LPAR exp RPAR
-- On NEQ reduce production exp -> ADDRESS LPAR exp RPAR
-- On MULT reduce production exp -> ADDRESS LPAR exp RPAR
-- On MINUS reduce production exp -> ADDRESS LPAR exp RPAR
-- On LT reduce production exp -> ADDRESS LPAR exp RPAR
-- On LSQBR reduce production exp -> ADDRESS LPAR exp RPAR
-- On LAND reduce production exp -> ADDRESS LPAR exp RPAR
-- On GT reduce production exp -> ADDRESS LPAR exp RPAR
-- On EQUALITY reduce production exp -> ADDRESS LPAR exp RPAR
-- On DOT reduce production exp -> ADDRESS LPAR exp RPAR
-- On COMMA reduce production exp -> ADDRESS LPAR exp RPAR

State 87:
exp -> exp PLUS . exp [ THEN SEMICOLON RSQBR RPAR REENTRANCE PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT COMMA ]
-- On VALUE shift to state 56
-- On TRUE shift to state 60
-- On THIS shift to state 61
-- On SENDER shift to state 62
-- On NOW shift to state 66
-- On NOT shift to state 70
-- On LPAR shift to state 71
-- On IDENT shift to state 72
-- On FALSE shift to state 74
-- On DEPLOY shift to state 75
-- On DECLIT8 shift to state 78
-- On DECLIT256 shift to state 79
-- On BALANCE shift to state 80
-- On ADDRESS shift to state 82
-- On lexp shift to state 84
-- On exp shift to state 88

State 88:
exp -> exp . LAND exp [ THEN SEMICOLON RSQBR RPAR REENTRANCE PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT COMMA ]
exp -> exp . PLUS exp [ THEN SEMICOLON RSQBR RPAR REENTRANCE PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT COMMA ]
exp -> exp PLUS exp . [ THEN SEMICOLON RSQBR RPAR REENTRANCE PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT COMMA ]
exp -> exp . MINUS exp [ THEN SEMICOLON RSQBR RPAR REENTRANCE PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT COMMA ]
exp -> exp . MULT exp [ THEN SEMICOLON RSQBR RPAR REENTRANCE PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT COMMA ]
exp -> exp . LT exp [ THEN SEMICOLON RSQBR RPAR REENTRANCE PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT COMMA ]
exp -> exp . GT exp [ THEN SEMICOLON RSQBR RPAR REENTRANCE PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT COMMA ]
exp -> exp . NEQ exp [ THEN SEMICOLON RSQBR RPAR REENTRANCE PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT COMMA ]
exp -> exp . EQUALITY exp [ THEN SEMICOLON RSQBR RPAR REENTRANCE PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT COMMA ]
exp -> exp . DOT DEFAULT LPAR RPAR msg_info [ THEN SEMICOLON RSQBR RPAR REENTRANCE PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT COMMA ]
exp -> exp . DOT IDENT LPAR loption(separated_nonempty_list(COMMA,exp)) RPAR msg_info [ THEN SEMICOLON RSQBR RPAR REENTRANCE PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT COMMA ]
lexp -> exp . LSQBR exp RSQBR [ THEN SEMICOLON RSQBR RPAR REENTRANCE PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT COMMA ]
-- On MULT shift to state 89
-- On LSQBR shift to state 91
-- On DOT shift to state 98
-- On THEN reduce production exp -> exp PLUS exp
-- On SEMICOLON reduce production exp -> exp PLUS exp
-- On RSQBR reduce production exp -> exp PLUS exp
-- On RPAR reduce production exp -> exp PLUS exp
-- On REENTRANCE reduce production exp -> exp PLUS exp
-- On PLUS reduce production exp -> exp PLUS exp
-- On NEQ reduce production exp -> exp PLUS exp
-- On MINUS reduce production exp -> exp PLUS exp
-- On LT reduce production exp -> exp PLUS exp
-- On LAND reduce production exp -> exp PLUS exp
-- On GT reduce production exp -> exp PLUS exp
-- On EQUALITY reduce production exp -> exp PLUS exp
-- On COMMA reduce production exp -> exp PLUS exp

State 89:
exp -> exp MULT . exp [ THEN SEMICOLON RSQBR RPAR REENTRANCE PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT COMMA ]
-- On VALUE shift to state 56
-- On TRUE shift to state 60
-- On THIS shift to state 61
-- On SENDER shift to state 62
-- On NOW shift to state 66
-- On NOT shift to state 70
-- On LPAR shift to state 71
-- On IDENT shift to state 72
-- On FALSE shift to state 74
-- On DEPLOY shift to state 75
-- On DECLIT8 shift to state 78
-- On DECLIT256 shift to state 79
-- On BALANCE shift to state 80
-- On ADDRESS shift to state 82
-- On lexp shift to state 84
-- On exp shift to state 90

State 90:
exp -> exp . LAND exp [ THEN SEMICOLON RSQBR RPAR REENTRANCE PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT COMMA ]
exp -> exp . PLUS exp [ THEN SEMICOLON RSQBR RPAR REENTRANCE PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT COMMA ]
exp -> exp . MINUS exp [ THEN SEMICOLON RSQBR RPAR REENTRANCE PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT COMMA ]
exp -> exp . MULT exp [ THEN SEMICOLON RSQBR RPAR REENTRANCE PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT COMMA ]
exp -> exp MULT exp . [ THEN SEMICOLON RSQBR RPAR REENTRANCE PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT COMMA ]
exp -> exp . LT exp [ THEN SEMICOLON RSQBR RPAR REENTRANCE PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT COMMA ]
exp -> exp . GT exp [ THEN SEMICOLON RSQBR RPAR REENTRANCE PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT COMMA ]
exp -> exp . NEQ exp [ THEN SEMICOLON RSQBR RPAR REENTRANCE PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT COMMA ]
exp -> exp . EQUALITY exp [ THEN SEMICOLON RSQBR RPAR REENTRANCE PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT COMMA ]
exp -> exp . DOT DEFAULT LPAR RPAR msg_info [ THEN SEMICOLON RSQBR RPAR REENTRANCE PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT COMMA ]
exp -> exp . DOT IDENT LPAR loption(separated_nonempty_list(COMMA,exp)) RPAR msg_info [ THEN SEMICOLON RSQBR RPAR REENTRANCE PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT COMMA ]
lexp -> exp . LSQBR exp RSQBR [ THEN SEMICOLON RSQBR RPAR REENTRANCE PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT COMMA ]
-- On LSQBR shift to state 91
-- On DOT shift to state 98
-- On THEN reduce production exp -> exp MULT exp
-- On SEMICOLON reduce production exp -> exp MULT exp
-- On RSQBR reduce production exp -> exp MULT exp
-- On RPAR reduce production exp -> exp MULT exp
-- On REENTRANCE reduce production exp -> exp MULT exp
-- On PLUS reduce production exp -> exp MULT exp
-- On NEQ reduce production exp -> exp MULT exp
-- On MULT reduce production exp -> exp MULT exp
-- On MINUS reduce production exp -> exp MULT exp
-- On LT reduce production exp -> exp MULT exp
-- On LAND reduce production exp -> exp MULT exp
-- On GT reduce production exp -> exp MULT exp
-- On EQUALITY reduce production exp -> exp MULT exp
-- On COMMA reduce production exp -> exp MULT exp

State 91:
lexp -> exp LSQBR . exp RSQBR [ THEN SINGLE_EQ SEMICOLON RSQBR RPAR REENTRANCE PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT COMMA ]
-- On VALUE shift to state 56
-- On TRUE shift to state 60
-- On THIS shift to state 61
-- On SENDER shift to state 62
-- On NOW shift to state 66
-- On NOT shift to state 70
-- On LPAR shift to state 71
-- On IDENT shift to state 72
-- On FALSE shift to state 74
-- On DEPLOY shift to state 75
-- On DECLIT8 shift to state 78
-- On DECLIT256 shift to state 79
-- On BALANCE shift to state 80
-- On ADDRESS shift to state 82
-- On lexp shift to state 84
-- On exp shift to state 92

State 92:
exp -> exp . LAND exp [ RSQBR PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT ]
exp -> exp . PLUS exp [ RSQBR PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT ]
exp -> exp . MINUS exp [ RSQBR PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT ]
exp -> exp . MULT exp [ RSQBR PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT ]
exp -> exp . LT exp [ RSQBR PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT ]
exp -> exp . GT exp [ RSQBR PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT ]
exp -> exp . NEQ exp [ RSQBR PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT ]
exp -> exp . EQUALITY exp [ RSQBR PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT ]
exp -> exp . DOT DEFAULT LPAR RPAR msg_info [ RSQBR PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT ]
exp -> exp . DOT IDENT LPAR loption(separated_nonempty_list(COMMA,exp)) RPAR msg_info [ RSQBR PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT ]
lexp -> exp . LSQBR exp RSQBR [ RSQBR PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT ]
lexp -> exp LSQBR exp . RSQBR [ THEN SINGLE_EQ SEMICOLON RSQBR RPAR REENTRANCE PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT COMMA ]
-- On RSQBR shift to state 93
-- On PLUS shift to state 87
-- On NEQ shift to state 94
-- On MULT shift to state 89
-- On MINUS shift to state 96
-- On LT shift to state 106
-- On LSQBR shift to state 91
-- On LAND shift to state 108
-- On GT shift to state 110
-- On EQUALITY shift to state 112
-- On DOT shift to state 98

State 93:
lexp -> exp LSQBR exp RSQBR . [ THEN SINGLE_EQ SEMICOLON RSQBR RPAR REENTRANCE PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT COMMA ]
-- On THEN reduce production lexp -> exp LSQBR exp RSQBR
-- On SINGLE_EQ reduce production lexp -> exp LSQBR exp RSQBR
-- On SEMICOLON reduce production lexp -> exp LSQBR exp RSQBR
-- On RSQBR reduce production lexp -> exp LSQBR exp RSQBR
-- On RPAR reduce production lexp -> exp LSQBR exp RSQBR
-- On REENTRANCE reduce production lexp -> exp LSQBR exp RSQBR
-- On PLUS reduce production lexp -> exp LSQBR exp RSQBR
-- On NEQ reduce production lexp -> exp LSQBR exp RSQBR
-- On MULT reduce production lexp -> exp LSQBR exp RSQBR
-- On MINUS reduce production lexp -> exp LSQBR exp RSQBR
-- On LT reduce production lexp -> exp LSQBR exp RSQBR
-- On LSQBR reduce production lexp -> exp LSQBR exp RSQBR
-- On LAND reduce production lexp -> exp LSQBR exp RSQBR
-- On GT reduce production lexp -> exp LSQBR exp RSQBR
-- On EQUALITY reduce production lexp -> exp LSQBR exp RSQBR
-- On DOT reduce production lexp -> exp LSQBR exp RSQBR
-- On COMMA reduce production lexp -> exp LSQBR exp RSQBR

State 94:
exp -> exp NEQ . exp [ THEN SEMICOLON RSQBR RPAR REENTRANCE PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT COMMA ]
-- On VALUE shift to state 56
-- On TRUE shift to state 60
-- On THIS shift to state 61
-- On SENDER shift to state 62
-- On NOW shift to state 66
-- On NOT shift to state 70
-- On LPAR shift to state 71
-- On IDENT shift to state 72
-- On FALSE shift to state 74
-- On DEPLOY shift to state 75
-- On DECLIT8 shift to state 78
-- On DECLIT256 shift to state 79
-- On BALANCE shift to state 80
-- On ADDRESS shift to state 82
-- On lexp shift to state 84
-- On exp shift to state 95

State 95:
exp -> exp . LAND exp [ THEN SEMICOLON RSQBR RPAR REENTRANCE PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT COMMA ]
exp -> exp . PLUS exp [ THEN SEMICOLON RSQBR RPAR REENTRANCE PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT COMMA ]
exp -> exp . MINUS exp [ THEN SEMICOLON RSQBR RPAR REENTRANCE PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT COMMA ]
exp -> exp . MULT exp [ THEN SEMICOLON RSQBR RPAR REENTRANCE PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT COMMA ]
exp -> exp . LT exp [ THEN SEMICOLON RSQBR RPAR REENTRANCE PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT COMMA ]
exp -> exp . GT exp [ THEN SEMICOLON RSQBR RPAR REENTRANCE PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT COMMA ]
exp -> exp . NEQ exp [ THEN SEMICOLON RSQBR RPAR REENTRANCE PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT COMMA ]
exp -> exp NEQ exp . [ THEN SEMICOLON RSQBR RPAR REENTRANCE PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT COMMA ]
exp -> exp . EQUALITY exp [ THEN SEMICOLON RSQBR RPAR REENTRANCE PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT COMMA ]
exp -> exp . DOT DEFAULT LPAR RPAR msg_info [ THEN SEMICOLON RSQBR RPAR REENTRANCE PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT COMMA ]
exp -> exp . DOT IDENT LPAR loption(separated_nonempty_list(COMMA,exp)) RPAR msg_info [ THEN SEMICOLON RSQBR RPAR REENTRANCE PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT COMMA ]
lexp -> exp . LSQBR exp RSQBR [ THEN SEMICOLON RSQBR RPAR REENTRANCE PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT COMMA ]
-- On PLUS shift to state 87
-- On MULT shift to state 89
-- On MINUS shift to state 96
-- On LSQBR shift to state 91
-- On DOT shift to state 98
-- On THEN reduce production exp -> exp NEQ exp
-- On SEMICOLON reduce production exp -> exp NEQ exp
-- On RSQBR reduce production exp -> exp NEQ exp
-- On RPAR reduce production exp -> exp NEQ exp
-- On REENTRANCE reduce production exp -> exp NEQ exp
-- On NEQ reduce production exp -> exp NEQ exp
-- On LT reduce production exp -> exp NEQ exp
-- On LAND reduce production exp -> exp NEQ exp
-- On GT reduce production exp -> exp NEQ exp
-- On EQUALITY reduce production exp -> exp NEQ exp
-- On COMMA reduce production exp -> exp NEQ exp

State 96:
exp -> exp MINUS . exp [ THEN SEMICOLON RSQBR RPAR REENTRANCE PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT COMMA ]
-- On VALUE shift to state 56
-- On TRUE shift to state 60
-- On THIS shift to state 61
-- On SENDER shift to state 62
-- On NOW shift to state 66
-- On NOT shift to state 70
-- On LPAR shift to state 71
-- On IDENT shift to state 72
-- On FALSE shift to state 74
-- On DEPLOY shift to state 75
-- On DECLIT8 shift to state 78
-- On DECLIT256 shift to state 79
-- On BALANCE shift to state 80
-- On ADDRESS shift to state 82
-- On lexp shift to state 84
-- On exp shift to state 97

State 97:
exp -> exp . LAND exp [ THEN SEMICOLON RSQBR RPAR REENTRANCE PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT COMMA ]
exp -> exp . PLUS exp [ THEN SEMICOLON RSQBR RPAR REENTRANCE PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT COMMA ]
exp -> exp . MINUS exp [ THEN SEMICOLON RSQBR RPAR REENTRANCE PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT COMMA ]
exp -> exp MINUS exp . [ THEN SEMICOLON RSQBR RPAR REENTRANCE PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT COMMA ]
exp -> exp . MULT exp [ THEN SEMICOLON RSQBR RPAR REENTRANCE PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT COMMA ]
exp -> exp . LT exp [ THEN SEMICOLON RSQBR RPAR REENTRANCE PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT COMMA ]
exp -> exp . GT exp [ THEN SEMICOLON RSQBR RPAR REENTRANCE PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT COMMA ]
exp -> exp . NEQ exp [ THEN SEMICOLON RSQBR RPAR REENTRANCE PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT COMMA ]
exp -> exp . EQUALITY exp [ THEN SEMICOLON RSQBR RPAR REENTRANCE PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT COMMA ]
exp -> exp . DOT DEFAULT LPAR RPAR msg_info [ THEN SEMICOLON RSQBR RPAR REENTRANCE PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT COMMA ]
exp -> exp . DOT IDENT LPAR loption(separated_nonempty_list(COMMA,exp)) RPAR msg_info [ THEN SEMICOLON RSQBR RPAR REENTRANCE PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT COMMA ]
lexp -> exp . LSQBR exp RSQBR [ THEN SEMICOLON RSQBR RPAR REENTRANCE PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT COMMA ]
-- On MULT shift to state 89
-- On LSQBR shift to state 91
-- On DOT shift to state 98
-- On THEN reduce production exp -> exp MINUS exp
-- On SEMICOLON reduce production exp -> exp MINUS exp
-- On RSQBR reduce production exp -> exp MINUS exp
-- On RPAR reduce production exp -> exp MINUS exp
-- On REENTRANCE reduce production exp -> exp MINUS exp
-- On PLUS reduce production exp -> exp MINUS exp
-- On NEQ reduce production exp -> exp MINUS exp
-- On MINUS reduce production exp -> exp MINUS exp
-- On LT reduce production exp -> exp MINUS exp
-- On LAND reduce production exp -> exp MINUS exp
-- On GT reduce production exp -> exp MINUS exp
-- On EQUALITY reduce production exp -> exp MINUS exp
-- On COMMA reduce production exp -> exp MINUS exp

State 98:
exp -> exp DOT . DEFAULT LPAR RPAR msg_info [ THEN SEMICOLON RSQBR RPAR REENTRANCE PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT COMMA ]
exp -> exp DOT . IDENT LPAR loption(separated_nonempty_list(COMMA,exp)) RPAR msg_info [ THEN SEMICOLON RSQBR RPAR REENTRANCE PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT COMMA ]
-- On IDENT shift to state 99
-- On DEFAULT shift to state 122

State 99:
exp -> exp DOT IDENT . LPAR loption(separated_nonempty_list(COMMA,exp)) RPAR msg_info [ THEN SEMICOLON RSQBR RPAR REENTRANCE PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT COMMA ]
-- On LPAR shift to state 100

State 100:
exp -> exp DOT IDENT LPAR . loption(separated_nonempty_list(COMMA,exp)) RPAR msg_info [ THEN SEMICOLON RSQBR RPAR REENTRANCE PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT COMMA ]
-- On VALUE shift to state 56
-- On TRUE shift to state 60
-- On THIS shift to state 61
-- On SENDER shift to state 62
-- On NOW shift to state 66
-- On NOT shift to state 70
-- On LPAR shift to state 71
-- On IDENT shift to state 72
-- On FALSE shift to state 74
-- On DEPLOY shift to state 75
-- On DECLIT8 shift to state 78
-- On DECLIT256 shift to state 79
-- On BALANCE shift to state 80
-- On ADDRESS shift to state 82
-- On separated_nonempty_list(COMMA,exp) shift to state 101
-- On loption(separated_nonempty_list(COMMA,exp)) shift to state 102
-- On lexp shift to state 84
-- On exp shift to state 119
-- On RPAR reduce production loption(separated_nonempty_list(COMMA,exp)) ->

State 101:
loption(separated_nonempty_list(COMMA,exp)) -> separated_nonempty_list(COMMA,exp) . [ RPAR ]
-- On RPAR reduce production loption(separated_nonempty_list(COMMA,exp)) -> separated_nonempty_list(COMMA,exp)

State 102:
exp -> exp DOT IDENT LPAR loption(separated_nonempty_list(COMMA,exp)) . RPAR msg_info [ THEN SEMICOLON RSQBR RPAR REENTRANCE PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT COMMA ]
-- On RPAR shift to state 103

State 103:
exp -> exp DOT IDENT LPAR loption(separated_nonempty_list(COMMA,exp)) RPAR . msg_info [ THEN SEMICOLON RSQBR RPAR REENTRANCE PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT COMMA ]
-- On ALONG shift to state 104
-- On value_info shift to state 114
-- On msg_info shift to state 118
-- On REENTRANCE reduce production value_info ->

State 104:
value_info -> ALONG . exp [ REENTRANCE ]
-- On VALUE shift to state 56
-- On TRUE shift to state 60
-- On THIS shift to state 61
-- On SENDER shift to state 62
-- On NOW shift to state 66
-- On NOT shift to state 70
-- On LPAR shift to state 71
-- On IDENT shift to state 72
-- On FALSE shift to state 74
-- On DEPLOY shift to state 75
-- On DECLIT8 shift to state 78
-- On DECLIT256 shift to state 79
-- On BALANCE shift to state 80
-- On ADDRESS shift to state 82
-- On lexp shift to state 84
-- On exp shift to state 105

State 105:
exp -> exp . LAND exp [ REENTRANCE PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT ]
exp -> exp . PLUS exp [ REENTRANCE PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT ]
exp -> exp . MINUS exp [ REENTRANCE PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT ]
exp -> exp . MULT exp [ REENTRANCE PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT ]
exp -> exp . LT exp [ REENTRANCE PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT ]
exp -> exp . GT exp [ REENTRANCE PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT ]
exp -> exp . NEQ exp [ REENTRANCE PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT ]
exp -> exp . EQUALITY exp [ REENTRANCE PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT ]
exp -> exp . DOT DEFAULT LPAR RPAR msg_info [ REENTRANCE PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT ]
exp -> exp . DOT IDENT LPAR loption(separated_nonempty_list(COMMA,exp)) RPAR msg_info [ REENTRANCE PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT ]
lexp -> exp . LSQBR exp RSQBR [ REENTRANCE PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT ]
value_info -> ALONG exp . [ REENTRANCE ]
-- On PLUS shift to state 87
-- On NEQ shift to state 94
-- On MULT shift to state 89
-- On MINUS shift to state 96
-- On LT shift to state 106
-- On LSQBR shift to state 91
-- On LAND shift to state 108
-- On GT shift to state 110
-- On EQUALITY shift to state 112
-- On DOT shift to state 98
-- On REENTRANCE reduce production value_info -> ALONG exp

State 106:
exp -> exp LT . exp [ THEN SEMICOLON RSQBR RPAR REENTRANCE PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT COMMA ]
-- On VALUE shift to state 56
-- On TRUE shift to state 60
-- On THIS shift to state 61
-- On SENDER shift to state 62
-- On NOW shift to state 66
-- On NOT shift to state 70
-- On LPAR shift to state 71
-- On IDENT shift to state 72
-- On FALSE shift to state 74
-- On DEPLOY shift to state 75
-- On DECLIT8 shift to state 78
-- On DECLIT256 shift to state 79
-- On BALANCE shift to state 80
-- On ADDRESS shift to state 82
-- On lexp shift to state 84
-- On exp shift to state 107

State 107:
exp -> exp . LAND exp [ THEN SEMICOLON RSQBR RPAR REENTRANCE PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT COMMA ]
exp -> exp . PLUS exp [ THEN SEMICOLON RSQBR RPAR REENTRANCE PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT COMMA ]
exp -> exp . MINUS exp [ THEN SEMICOLON RSQBR RPAR REENTRANCE PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT COMMA ]
exp -> exp . MULT exp [ THEN SEMICOLON RSQBR RPAR REENTRANCE PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT COMMA ]
exp -> exp . LT exp [ THEN SEMICOLON RSQBR RPAR REENTRANCE PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT COMMA ]
exp -> exp LT exp . [ THEN SEMICOLON RSQBR RPAR REENTRANCE PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT COMMA ]
exp -> exp . GT exp [ THEN SEMICOLON RSQBR RPAR REENTRANCE PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT COMMA ]
exp -> exp . NEQ exp [ THEN SEMICOLON RSQBR RPAR REENTRANCE PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT COMMA ]
exp -> exp . EQUALITY exp [ THEN SEMICOLON RSQBR RPAR REENTRANCE PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT COMMA ]
exp -> exp . DOT DEFAULT LPAR RPAR msg_info [ THEN SEMICOLON RSQBR RPAR REENTRANCE PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT COMMA ]
exp -> exp . DOT IDENT LPAR loption(separated_nonempty_list(COMMA,exp)) RPAR msg_info [ THEN SEMICOLON RSQBR RPAR REENTRANCE PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT COMMA ]
lexp -> exp . LSQBR exp RSQBR [ THEN SEMICOLON RSQBR RPAR REENTRANCE PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT COMMA ]
-- On PLUS shift to state 87
-- On MULT shift to state 89
-- On MINUS shift to state 96
-- On LSQBR shift to state 91
-- On DOT shift to state 98
-- On THEN reduce production exp -> exp LT exp
-- On SEMICOLON reduce production exp -> exp LT exp
-- On RSQBR reduce production exp -> exp LT exp
-- On RPAR reduce production exp -> exp LT exp
-- On REENTRANCE reduce production exp -> exp LT exp
-- On NEQ reduce production exp -> exp LT exp
-- On LT reduce production exp -> exp LT exp
-- On LAND reduce production exp -> exp LT exp
-- On GT reduce production exp -> exp LT exp
-- On EQUALITY reduce production exp -> exp LT exp
-- On COMMA reduce production exp -> exp LT exp

State 108:
exp -> exp LAND . exp [ THEN SEMICOLON RSQBR RPAR REENTRANCE PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT COMMA ]
-- On VALUE shift to state 56
-- On TRUE shift to state 60
-- On THIS shift to state 61
-- On SENDER shift to state 62
-- On NOW shift to state 66
-- On NOT shift to state 70
-- On LPAR shift to state 71
-- On IDENT shift to state 72
-- On FALSE shift to state 74
-- On DEPLOY shift to state 75
-- On DECLIT8 shift to state 78
-- On DECLIT256 shift to state 79
-- On BALANCE shift to state 80
-- On ADDRESS shift to state 82
-- On lexp shift to state 84
-- On exp shift to state 109

State 109:
exp -> exp . LAND exp [ THEN SEMICOLON RSQBR RPAR REENTRANCE PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT COMMA ]
exp -> exp LAND exp . [ THEN SEMICOLON RSQBR RPAR REENTRANCE PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT COMMA ]
exp -> exp . PLUS exp [ THEN SEMICOLON RSQBR RPAR REENTRANCE PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT COMMA ]
exp -> exp . MINUS exp [ THEN SEMICOLON RSQBR RPAR REENTRANCE PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT COMMA ]
exp -> exp . MULT exp [ THEN SEMICOLON RSQBR RPAR REENTRANCE PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT COMMA ]
exp -> exp . LT exp [ THEN SEMICOLON RSQBR RPAR REENTRANCE PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT COMMA ]
exp -> exp . GT exp [ THEN SEMICOLON RSQBR RPAR REENTRANCE PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT COMMA ]
exp -> exp . NEQ exp [ THEN SEMICOLON RSQBR RPAR REENTRANCE PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT COMMA ]
exp -> exp . EQUALITY exp [ THEN SEMICOLON RSQBR RPAR REENTRANCE PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT COMMA ]
exp -> exp . DOT DEFAULT LPAR RPAR msg_info [ THEN SEMICOLON RSQBR RPAR REENTRANCE PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT COMMA ]
exp -> exp . DOT IDENT LPAR loption(separated_nonempty_list(COMMA,exp)) RPAR msg_info [ THEN SEMICOLON RSQBR RPAR REENTRANCE PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT COMMA ]
lexp -> exp . LSQBR exp RSQBR [ THEN SEMICOLON RSQBR RPAR REENTRANCE PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT COMMA ]
-- On PLUS shift to state 87
-- On NEQ shift to state 94
-- On MULT shift to state 89
-- On MINUS shift to state 96
-- On LT shift to state 106
-- On LSQBR shift to state 91
-- On GT shift to state 110
-- On EQUALITY shift to state 112
-- On DOT shift to state 98
-- On THEN reduce production exp -> exp LAND exp
-- On SEMICOLON reduce production exp -> exp LAND exp
-- On RSQBR reduce production exp -> exp LAND exp
-- On RPAR reduce production exp -> exp LAND exp
-- On REENTRANCE reduce production exp -> exp LAND exp
-- On LAND reduce production exp -> exp LAND exp
-- On COMMA reduce production exp -> exp LAND exp

State 110:
exp -> exp GT . exp [ THEN SEMICOLON RSQBR RPAR REENTRANCE PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT COMMA ]
-- On VALUE shift to state 56
-- On TRUE shift to state 60
-- On THIS shift to state 61
-- On SENDER shift to state 62
-- On NOW shift to state 66
-- On NOT shift to state 70
-- On LPAR shift to state 71
-- On IDENT shift to state 72
-- On FALSE shift to state 74
-- On DEPLOY shift to state 75
-- On DECLIT8 shift to state 78
-- On DECLIT256 shift to state 79
-- On BALANCE shift to state 80
-- On ADDRESS shift to state 82
-- On lexp shift to state 84
-- On exp shift to state 111

State 111:
exp -> exp . LAND exp [ THEN SEMICOLON RSQBR RPAR REENTRANCE PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT COMMA ]
exp -> exp . PLUS exp [ THEN SEMICOLON RSQBR RPAR REENTRANCE PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT COMMA ]
exp -> exp . MINUS exp [ THEN SEMICOLON RSQBR RPAR REENTRANCE PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT COMMA ]
exp -> exp . MULT exp [ THEN SEMICOLON RSQBR RPAR REENTRANCE PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT COMMA ]
exp -> exp . LT exp [ THEN SEMICOLON RSQBR RPAR REENTRANCE PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT COMMA ]
exp -> exp . GT exp [ THEN SEMICOLON RSQBR RPAR REENTRANCE PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT COMMA ]
exp -> exp GT exp . [ THEN SEMICOLON RSQBR RPAR REENTRANCE PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT COMMA ]
exp -> exp . NEQ exp [ THEN SEMICOLON RSQBR RPAR REENTRANCE PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT COMMA ]
exp -> exp . EQUALITY exp [ THEN SEMICOLON RSQBR RPAR REENTRANCE PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT COMMA ]
exp -> exp . DOT DEFAULT LPAR RPAR msg_info [ THEN SEMICOLON RSQBR RPAR REENTRANCE PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT COMMA ]
exp -> exp . DOT IDENT LPAR loption(separated_nonempty_list(COMMA,exp)) RPAR msg_info [ THEN SEMICOLON RSQBR RPAR REENTRANCE PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT COMMA ]
lexp -> exp . LSQBR exp RSQBR [ THEN SEMICOLON RSQBR RPAR REENTRANCE PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT COMMA ]
-- On PLUS shift to state 87
-- On MULT shift to state 89
-- On MINUS shift to state 96
-- On LSQBR shift to state 91
-- On DOT shift to state 98
-- On THEN reduce production exp -> exp GT exp
-- On SEMICOLON reduce production exp -> exp GT exp
-- On RSQBR reduce production exp -> exp GT exp
-- On RPAR reduce production exp -> exp GT exp
-- On REENTRANCE reduce production exp -> exp GT exp
-- On NEQ reduce production exp -> exp GT exp
-- On LT reduce production exp -> exp GT exp
-- On LAND reduce production exp -> exp GT exp
-- On GT reduce production exp -> exp GT exp
-- On EQUALITY reduce production exp -> exp GT exp
-- On COMMA reduce production exp -> exp GT exp

State 112:
exp -> exp EQUALITY . exp [ THEN SEMICOLON RSQBR RPAR REENTRANCE PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT COMMA ]
-- On VALUE shift to state 56
-- On TRUE shift to state 60
-- On THIS shift to state 61
-- On SENDER shift to state 62
-- On NOW shift to state 66
-- On NOT shift to state 70
-- On LPAR shift to state 71
-- On IDENT shift to state 72
-- On FALSE shift to state 74
-- On DEPLOY shift to state 75
-- On DECLIT8 shift to state 78
-- On DECLIT256 shift to state 79
-- On BALANCE shift to state 80
-- On ADDRESS shift to state 82
-- On lexp shift to state 84
-- On exp shift to state 113

State 113:
exp -> exp . LAND exp [ THEN SEMICOLON RSQBR RPAR REENTRANCE PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT COMMA ]
exp -> exp . PLUS exp [ THEN SEMICOLON RSQBR RPAR REENTRANCE PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT COMMA ]
exp -> exp . MINUS exp [ THEN SEMICOLON RSQBR RPAR REENTRANCE PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT COMMA ]
exp -> exp . MULT exp [ THEN SEMICOLON RSQBR RPAR REENTRANCE PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT COMMA ]
exp -> exp . LT exp [ THEN SEMICOLON RSQBR RPAR REENTRANCE PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT COMMA ]
exp -> exp . GT exp [ THEN SEMICOLON RSQBR RPAR REENTRANCE PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT COMMA ]
exp -> exp . NEQ exp [ THEN SEMICOLON RSQBR RPAR REENTRANCE PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT COMMA ]
exp -> exp . EQUALITY exp [ THEN SEMICOLON RSQBR RPAR REENTRANCE PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT COMMA ]
exp -> exp EQUALITY exp . [ THEN SEMICOLON RSQBR RPAR REENTRANCE PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT COMMA ]
exp -> exp . DOT DEFAULT LPAR RPAR msg_info [ THEN SEMICOLON RSQBR RPAR REENTRANCE PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT COMMA ]
exp -> exp . DOT IDENT LPAR loption(separated_nonempty_list(COMMA,exp)) RPAR msg_info [ THEN SEMICOLON RSQBR RPAR REENTRANCE PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT COMMA ]
lexp -> exp . LSQBR exp RSQBR [ THEN SEMICOLON RSQBR RPAR REENTRANCE PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT COMMA ]
-- On PLUS shift to state 87
-- On MULT shift to state 89
-- On MINUS shift to state 96
-- On LSQBR shift to state 91
-- On DOT shift to state 98
-- On THEN reduce production exp -> exp EQUALITY exp
-- On SEMICOLON reduce production exp -> exp EQUALITY exp
-- On RSQBR reduce production exp -> exp EQUALITY exp
-- On RPAR reduce production exp -> exp EQUALITY exp
-- On REENTRANCE reduce production exp -> exp EQUALITY exp
-- On NEQ reduce production exp -> exp EQUALITY exp
-- On LT reduce production exp -> exp EQUALITY exp
-- On LAND reduce production exp -> exp EQUALITY exp
-- On GT reduce production exp -> exp EQUALITY exp
-- On EQUALITY reduce production exp -> exp EQUALITY exp
-- On COMMA reduce production exp -> exp EQUALITY exp

State 114:
msg_info -> value_info . reentrance_info [ THEN SEMICOLON RSQBR RPAR REENTRANCE PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT COMMA ]
-- On REENTRANCE shift to state 115
-- On reentrance_info shift to state 117

State 115:
reentrance_info -> REENTRANCE . block [ THEN SEMICOLON RSQBR RPAR REENTRANCE PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT COMMA ]
-- On LBRACE shift to state 53
-- On block shift to state 116

State 116:
reentrance_info -> REENTRANCE block . [ THEN SEMICOLON RSQBR RPAR REENTRANCE PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT COMMA ]
-- On THEN reduce production reentrance_info -> REENTRANCE block
-- On SEMICOLON reduce production reentrance_info -> REENTRANCE block
-- On RSQBR reduce production reentrance_info -> REENTRANCE block
-- On RPAR reduce production reentrance_info -> REENTRANCE block
-- On REENTRANCE reduce production reentrance_info -> REENTRANCE block
-- On PLUS reduce production reentrance_info -> REENTRANCE block
-- On NEQ reduce production reentrance_info -> REENTRANCE block
-- On MULT reduce production reentrance_info -> REENTRANCE block
-- On MINUS reduce production reentrance_info -> REENTRANCE block
-- On LT reduce production reentrance_info -> REENTRANCE block
-- On LSQBR reduce production reentrance_info -> REENTRANCE block
-- On LAND reduce production reentrance_info -> REENTRANCE block
-- On GT reduce production reentrance_info -> REENTRANCE block
-- On EQUALITY reduce production reentrance_info -> REENTRANCE block
-- On DOT reduce production reentrance_info -> REENTRANCE block
-- On COMMA reduce production reentrance_info -> REENTRANCE block

State 117:
msg_info -> value_info reentrance_info . [ THEN SEMICOLON RSQBR RPAR REENTRANCE PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT COMMA ]
-- On THEN reduce production msg_info -> value_info reentrance_info
-- On SEMICOLON reduce production msg_info -> value_info reentrance_info
-- On RSQBR reduce production msg_info -> value_info reentrance_info
-- On RPAR reduce production msg_info -> value_info reentrance_info
-- On REENTRANCE reduce production msg_info -> value_info reentrance_info
-- On PLUS reduce production msg_info -> value_info reentrance_info
-- On NEQ reduce production msg_info -> value_info reentrance_info
-- On MULT reduce production msg_info -> value_info reentrance_info
-- On MINUS reduce production msg_info -> value_info reentrance_info
-- On LT reduce production msg_info -> value_info reentrance_info
-- On LSQBR reduce production msg_info -> value_info reentrance_info
-- On LAND reduce production msg_info -> value_info reentrance_info
-- On GT reduce production msg_info -> value_info reentrance_info
-- On EQUALITY reduce production msg_info -> value_info reentrance_info
-- On DOT reduce production msg_info -> value_info reentrance_info
-- On COMMA reduce production msg_info -> value_info reentrance_info

State 118:
exp -> exp DOT IDENT LPAR loption(separated_nonempty_list(COMMA,exp)) RPAR msg_info . [ THEN SEMICOLON RSQBR RPAR REENTRANCE PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT COMMA ]
-- On THEN reduce production exp -> exp DOT IDENT LPAR loption(separated_nonempty_list(COMMA,exp)) RPAR msg_info
-- On SEMICOLON reduce production exp -> exp DOT IDENT LPAR loption(separated_nonempty_list(COMMA,exp)) RPAR msg_info
-- On RSQBR reduce production exp -> exp DOT IDENT LPAR loption(separated_nonempty_list(COMMA,exp)) RPAR msg_info
-- On RPAR reduce production exp -> exp DOT IDENT LPAR loption(separated_nonempty_list(COMMA,exp)) RPAR msg_info
-- On REENTRANCE reduce production exp -> exp DOT IDENT LPAR loption(separated_nonempty_list(COMMA,exp)) RPAR msg_info
-- On PLUS reduce production exp -> exp DOT IDENT LPAR loption(separated_nonempty_list(COMMA,exp)) RPAR msg_info
-- On NEQ reduce production exp -> exp DOT IDENT LPAR loption(separated_nonempty_list(COMMA,exp)) RPAR msg_info
-- On MULT reduce production exp -> exp DOT IDENT LPAR loption(separated_nonempty_list(COMMA,exp)) RPAR msg_info
-- On MINUS reduce production exp -> exp DOT IDENT LPAR loption(separated_nonempty_list(COMMA,exp)) RPAR msg_info
-- On LT reduce production exp -> exp DOT IDENT LPAR loption(separated_nonempty_list(COMMA,exp)) RPAR msg_info
-- On LSQBR reduce production exp -> exp DOT IDENT LPAR loption(separated_nonempty_list(COMMA,exp)) RPAR msg_info
-- On LAND reduce production exp -> exp DOT IDENT LPAR loption(separated_nonempty_list(COMMA,exp)) RPAR msg_info
-- On GT reduce production exp -> exp DOT IDENT LPAR loption(separated_nonempty_list(COMMA,exp)) RPAR msg_info
-- On EQUALITY reduce production exp -> exp DOT IDENT LPAR loption(separated_nonempty_list(COMMA,exp)) RPAR msg_info
-- On DOT reduce production exp -> exp DOT IDENT LPAR loption(separated_nonempty_list(COMMA,exp)) RPAR msg_info
-- On COMMA reduce production exp -> exp DOT IDENT LPAR loption(separated_nonempty_list(COMMA,exp)) RPAR msg_info

State 119:
exp -> exp . LAND exp [ RPAR PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT COMMA ]
exp -> exp . PLUS exp [ RPAR PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT COMMA ]
exp -> exp . MINUS exp [ RPAR PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT COMMA ]
exp -> exp . MULT exp [ RPAR PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT COMMA ]
exp -> exp . LT exp [ RPAR PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT COMMA ]
exp -> exp . GT exp [ RPAR PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT COMMA ]
exp -> exp . NEQ exp [ RPAR PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT COMMA ]
exp -> exp . EQUALITY exp [ RPAR PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT COMMA ]
exp -> exp . DOT DEFAULT LPAR RPAR msg_info [ RPAR PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT COMMA ]
exp -> exp . DOT IDENT LPAR loption(separated_nonempty_list(COMMA,exp)) RPAR msg_info [ RPAR PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT COMMA ]
lexp -> exp . LSQBR exp RSQBR [ RPAR PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT COMMA ]
separated_nonempty_list(COMMA,exp) -> exp . [ RPAR ]
separated_nonempty_list(COMMA,exp) -> exp . COMMA separated_nonempty_list(COMMA,exp) [ RPAR ]
-- On PLUS shift to state 87
-- On NEQ shift to state 94
-- On MULT shift to state 89
-- On MINUS shift to state 96
-- On LT shift to state 106
-- On LSQBR shift to state 91
-- On LAND shift to state 108
-- On GT shift to state 110
-- On EQUALITY shift to state 112
-- On DOT shift to state 98
-- On COMMA shift to state 120
-- On RPAR reduce production separated_nonempty_list(COMMA,exp) -> exp

State 120:
separated_nonempty_list(COMMA,exp) -> exp COMMA . separated_nonempty_list(COMMA,exp) [ RPAR ]
-- On VALUE shift to state 56
-- On TRUE shift to state 60
-- On THIS shift to state 61
-- On SENDER shift to state 62
-- On NOW shift to state 66
-- On NOT shift to state 70
-- On LPAR shift to state 71
-- On IDENT shift to state 72
-- On FALSE shift to state 74
-- On DEPLOY shift to state 75
-- On DECLIT8 shift to state 78
-- On DECLIT256 shift to state 79
-- On BALANCE shift to state 80
-- On ADDRESS shift to state 82
-- On separated_nonempty_list(COMMA,exp) shift to state 121
-- On lexp shift to state 84
-- On exp shift to state 119

State 121:
separated_nonempty_list(COMMA,exp) -> exp COMMA separated_nonempty_list(COMMA,exp) . [ RPAR ]
-- On RPAR reduce production separated_nonempty_list(COMMA,exp) -> exp COMMA separated_nonempty_list(COMMA,exp)

State 122:
exp -> exp DOT DEFAULT . LPAR RPAR msg_info [ THEN SEMICOLON RSQBR RPAR REENTRANCE PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT COMMA ]
-- On LPAR shift to state 123

State 123:
exp -> exp DOT DEFAULT LPAR . RPAR msg_info [ THEN SEMICOLON RSQBR RPAR REENTRANCE PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT COMMA ]
-- On RPAR shift to state 124

State 124:
exp -> exp DOT DEFAULT LPAR RPAR . msg_info [ THEN SEMICOLON RSQBR RPAR REENTRANCE PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT COMMA ]
-- On ALONG shift to state 104
-- On value_info shift to state 114
-- On msg_info shift to state 125
-- On REENTRANCE reduce production value_info ->

State 125:
exp -> exp DOT DEFAULT LPAR RPAR msg_info . [ THEN SEMICOLON RSQBR RPAR REENTRANCE PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT COMMA ]
-- On THEN reduce production exp -> exp DOT DEFAULT LPAR RPAR msg_info
-- On SEMICOLON reduce production exp -> exp DOT DEFAULT LPAR RPAR msg_info
-- On RSQBR reduce production exp -> exp DOT DEFAULT LPAR RPAR msg_info
-- On RPAR reduce production exp -> exp DOT DEFAULT LPAR RPAR msg_info
-- On REENTRANCE reduce production exp -> exp DOT DEFAULT LPAR RPAR msg_info
-- On PLUS reduce production exp -> exp DOT DEFAULT LPAR RPAR msg_info
-- On NEQ reduce production exp -> exp DOT DEFAULT LPAR RPAR msg_info
-- On MULT reduce production exp -> exp DOT DEFAULT LPAR RPAR msg_info
-- On MINUS reduce production exp -> exp DOT DEFAULT LPAR RPAR msg_info
-- On LT reduce production exp -> exp DOT DEFAULT LPAR RPAR msg_info
-- On LSQBR reduce production exp -> exp DOT DEFAULT LPAR RPAR msg_info
-- On LAND reduce production exp -> exp DOT DEFAULT LPAR RPAR msg_info
-- On GT reduce production exp -> exp DOT DEFAULT LPAR RPAR msg_info
-- On EQUALITY reduce production exp -> exp DOT DEFAULT LPAR RPAR msg_info
-- On DOT reduce production exp -> exp DOT DEFAULT LPAR RPAR msg_info
-- On COMMA reduce production exp -> exp DOT DEFAULT LPAR RPAR msg_info

State 126:
exp -> exp . LAND exp [ RPAR PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT ]
exp -> BALANCE LPAR exp . RPAR [ THEN SEMICOLON RSQBR RPAR REENTRANCE PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT COMMA ]
exp -> exp . PLUS exp [ RPAR PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT ]
exp -> exp . MINUS exp [ RPAR PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT ]
exp -> exp . MULT exp [ RPAR PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT ]
exp -> exp . LT exp [ RPAR PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT ]
exp -> exp . GT exp [ RPAR PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT ]
exp -> exp . NEQ exp [ RPAR PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT ]
exp -> exp . EQUALITY exp [ RPAR PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT ]
exp -> exp . DOT DEFAULT LPAR RPAR msg_info [ RPAR PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT ]
exp -> exp . DOT IDENT LPAR loption(separated_nonempty_list(COMMA,exp)) RPAR msg_info [ RPAR PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT ]
lexp -> exp . LSQBR exp RSQBR [ RPAR PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT ]
-- On RPAR shift to state 127
-- On PLUS shift to state 87
-- On NEQ shift to state 94
-- On MULT shift to state 89
-- On MINUS shift to state 96
-- On LT shift to state 106
-- On LSQBR shift to state 91
-- On LAND shift to state 108
-- On GT shift to state 110
-- On EQUALITY shift to state 112
-- On DOT shift to state 98

State 127:
exp -> BALANCE LPAR exp RPAR . [ THEN SEMICOLON RSQBR RPAR REENTRANCE PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT COMMA ]
-- On THEN reduce production exp -> BALANCE LPAR exp RPAR
-- On SEMICOLON reduce production exp -> BALANCE LPAR exp RPAR
-- On RSQBR reduce production exp -> BALANCE LPAR exp RPAR
-- On RPAR reduce production exp -> BALANCE LPAR exp RPAR
-- On REENTRANCE reduce production exp -> BALANCE LPAR exp RPAR
-- On PLUS reduce production exp -> BALANCE LPAR exp RPAR
-- On NEQ reduce production exp -> BALANCE LPAR exp RPAR
-- On MULT reduce production exp -> BALANCE LPAR exp RPAR
-- On MINUS reduce production exp -> BALANCE LPAR exp RPAR
-- On LT reduce production exp -> BALANCE LPAR exp RPAR
-- On LSQBR reduce production exp -> BALANCE LPAR exp RPAR
-- On LAND reduce production exp -> BALANCE LPAR exp RPAR
-- On GT reduce production exp -> BALANCE LPAR exp RPAR
-- On EQUALITY reduce production exp -> BALANCE LPAR exp RPAR
-- On DOT reduce production exp -> BALANCE LPAR exp RPAR
-- On COMMA reduce production exp -> BALANCE LPAR exp RPAR

State 128:
exp -> DEPLOY IDENT LPAR loption(separated_nonempty_list(COMMA,exp)) . RPAR msg_info [ THEN SEMICOLON RSQBR RPAR REENTRANCE PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT COMMA ]
-- On RPAR shift to state 129

State 129:
exp -> DEPLOY IDENT LPAR loption(separated_nonempty_list(COMMA,exp)) RPAR . msg_info [ THEN SEMICOLON RSQBR RPAR REENTRANCE PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT COMMA ]
-- On ALONG shift to state 104
-- On value_info shift to state 114
-- On msg_info shift to state 130
-- On REENTRANCE reduce production value_info ->

State 130:
exp -> DEPLOY IDENT LPAR loption(separated_nonempty_list(COMMA,exp)) RPAR msg_info . [ THEN SEMICOLON RSQBR RPAR REENTRANCE PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT COMMA ]
-- On THEN reduce production exp -> DEPLOY IDENT LPAR loption(separated_nonempty_list(COMMA,exp)) RPAR msg_info
-- On SEMICOLON reduce production exp -> DEPLOY IDENT LPAR loption(separated_nonempty_list(COMMA,exp)) RPAR msg_info
-- On RSQBR reduce production exp -> DEPLOY IDENT LPAR loption(separated_nonempty_list(COMMA,exp)) RPAR msg_info
-- On RPAR reduce production exp -> DEPLOY IDENT LPAR loption(separated_nonempty_list(COMMA,exp)) RPAR msg_info
-- On REENTRANCE reduce production exp -> DEPLOY IDENT LPAR loption(separated_nonempty_list(COMMA,exp)) RPAR msg_info
-- On PLUS reduce production exp -> DEPLOY IDENT LPAR loption(separated_nonempty_list(COMMA,exp)) RPAR msg_info
-- On NEQ reduce production exp -> DEPLOY IDENT LPAR loption(separated_nonempty_list(COMMA,exp)) RPAR msg_info
-- On MULT reduce production exp -> DEPLOY IDENT LPAR loption(separated_nonempty_list(COMMA,exp)) RPAR msg_info
-- On MINUS reduce production exp -> DEPLOY IDENT LPAR loption(separated_nonempty_list(COMMA,exp)) RPAR msg_info
-- On LT reduce production exp -> DEPLOY IDENT LPAR loption(separated_nonempty_list(COMMA,exp)) RPAR msg_info
-- On LSQBR reduce production exp -> DEPLOY IDENT LPAR loption(separated_nonempty_list(COMMA,exp)) RPAR msg_info
-- On LAND reduce production exp -> DEPLOY IDENT LPAR loption(separated_nonempty_list(COMMA,exp)) RPAR msg_info
-- On GT reduce production exp -> DEPLOY IDENT LPAR loption(separated_nonempty_list(COMMA,exp)) RPAR msg_info
-- On EQUALITY reduce production exp -> DEPLOY IDENT LPAR loption(separated_nonempty_list(COMMA,exp)) RPAR msg_info
-- On DOT reduce production exp -> DEPLOY IDENT LPAR loption(separated_nonempty_list(COMMA,exp)) RPAR msg_info
-- On COMMA reduce production exp -> DEPLOY IDENT LPAR loption(separated_nonempty_list(COMMA,exp)) RPAR msg_info

State 131:
exp -> IDENT LPAR loption(separated_nonempty_list(COMMA,exp)) . RPAR [ THEN SEMICOLON RSQBR RPAR REENTRANCE PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT COMMA ]
-- On RPAR shift to state 132

State 132:
exp -> IDENT LPAR loption(separated_nonempty_list(COMMA,exp)) RPAR . [ THEN SEMICOLON RSQBR RPAR REENTRANCE PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT COMMA ]
-- On THEN reduce production exp -> IDENT LPAR loption(separated_nonempty_list(COMMA,exp)) RPAR
-- On SEMICOLON reduce production exp -> IDENT LPAR loption(separated_nonempty_list(COMMA,exp)) RPAR
-- On RSQBR reduce production exp -> IDENT LPAR loption(separated_nonempty_list(COMMA,exp)) RPAR
-- On RPAR reduce production exp -> IDENT LPAR loption(separated_nonempty_list(COMMA,exp)) RPAR
-- On REENTRANCE reduce production exp -> IDENT LPAR loption(separated_nonempty_list(COMMA,exp)) RPAR
-- On PLUS reduce production exp -> IDENT LPAR loption(separated_nonempty_list(COMMA,exp)) RPAR
-- On NEQ reduce production exp -> IDENT LPAR loption(separated_nonempty_list(COMMA,exp)) RPAR
-- On MULT reduce production exp -> IDENT LPAR loption(separated_nonempty_list(COMMA,exp)) RPAR
-- On MINUS reduce production exp -> IDENT LPAR loption(separated_nonempty_list(COMMA,exp)) RPAR
-- On LT reduce production exp -> IDENT LPAR loption(separated_nonempty_list(COMMA,exp)) RPAR
-- On LSQBR reduce production exp -> IDENT LPAR loption(separated_nonempty_list(COMMA,exp)) RPAR
-- On LAND reduce production exp -> IDENT LPAR loption(separated_nonempty_list(COMMA,exp)) RPAR
-- On GT reduce production exp -> IDENT LPAR loption(separated_nonempty_list(COMMA,exp)) RPAR
-- On EQUALITY reduce production exp -> IDENT LPAR loption(separated_nonempty_list(COMMA,exp)) RPAR
-- On DOT reduce production exp -> IDENT LPAR loption(separated_nonempty_list(COMMA,exp)) RPAR
-- On COMMA reduce production exp -> IDENT LPAR loption(separated_nonempty_list(COMMA,exp)) RPAR

State 133:
exp -> exp . LAND exp [ RPAR PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT ]
exp -> exp . PLUS exp [ RPAR PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT ]
exp -> exp . MINUS exp [ RPAR PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT ]
exp -> exp . MULT exp [ RPAR PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT ]
exp -> exp . LT exp [ RPAR PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT ]
exp -> exp . GT exp [ RPAR PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT ]
exp -> exp . NEQ exp [ RPAR PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT ]
exp -> exp . EQUALITY exp [ RPAR PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT ]
exp -> LPAR exp . RPAR [ THEN SEMICOLON RSQBR RPAR REENTRANCE PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT COMMA ]
exp -> exp . DOT DEFAULT LPAR RPAR msg_info [ RPAR PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT ]
exp -> exp . DOT IDENT LPAR loption(separated_nonempty_list(COMMA,exp)) RPAR msg_info [ RPAR PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT ]
lexp -> exp . LSQBR exp RSQBR [ RPAR PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT ]
-- On RPAR shift to state 134
-- On PLUS shift to state 87
-- On NEQ shift to state 94
-- On MULT shift to state 89
-- On MINUS shift to state 96
-- On LT shift to state 106
-- On LSQBR shift to state 91
-- On LAND shift to state 108
-- On GT shift to state 110
-- On EQUALITY shift to state 112
-- On DOT shift to state 98

State 134:
exp -> LPAR exp RPAR . [ THEN SEMICOLON RSQBR RPAR REENTRANCE PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT COMMA ]
-- On THEN reduce production exp -> LPAR exp RPAR
-- On SEMICOLON reduce production exp -> LPAR exp RPAR
-- On RSQBR reduce production exp -> LPAR exp RPAR
-- On RPAR reduce production exp -> LPAR exp RPAR
-- On REENTRANCE reduce production exp -> LPAR exp RPAR
-- On PLUS reduce production exp -> LPAR exp RPAR
-- On NEQ reduce production exp -> LPAR exp RPAR
-- On MULT reduce production exp -> LPAR exp RPAR
-- On MINUS reduce production exp -> LPAR exp RPAR
-- On LT reduce production exp -> LPAR exp RPAR
-- On LSQBR reduce production exp -> LPAR exp RPAR
-- On LAND reduce production exp -> LPAR exp RPAR
-- On GT reduce production exp -> LPAR exp RPAR
-- On EQUALITY reduce production exp -> LPAR exp RPAR
-- On DOT reduce production exp -> LPAR exp RPAR
-- On COMMA reduce production exp -> LPAR exp RPAR

State 135:
exp -> exp . LAND exp [ THEN SEMICOLON RSQBR RPAR REENTRANCE PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT COMMA ]
exp -> exp . PLUS exp [ THEN SEMICOLON RSQBR RPAR REENTRANCE PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT COMMA ]
exp -> exp . MINUS exp [ THEN SEMICOLON RSQBR RPAR REENTRANCE PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT COMMA ]
exp -> exp . MULT exp [ THEN SEMICOLON RSQBR RPAR REENTRANCE PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT COMMA ]
exp -> exp . LT exp [ THEN SEMICOLON RSQBR RPAR REENTRANCE PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT COMMA ]
exp -> exp . GT exp [ THEN SEMICOLON RSQBR RPAR REENTRANCE PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT COMMA ]
exp -> exp . NEQ exp [ THEN SEMICOLON RSQBR RPAR REENTRANCE PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT COMMA ]
exp -> exp . EQUALITY exp [ THEN SEMICOLON RSQBR RPAR REENTRANCE PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT COMMA ]
exp -> exp . DOT DEFAULT LPAR RPAR msg_info [ THEN SEMICOLON RSQBR RPAR REENTRANCE PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT COMMA ]
exp -> exp . DOT IDENT LPAR loption(separated_nonempty_list(COMMA,exp)) RPAR msg_info [ THEN SEMICOLON RSQBR RPAR REENTRANCE PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT COMMA ]
exp -> NOT exp . [ THEN SEMICOLON RSQBR RPAR REENTRANCE PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT COMMA ]
lexp -> exp . LSQBR exp RSQBR [ THEN SEMICOLON RSQBR RPAR REENTRANCE PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT COMMA ]
-- On PLUS shift to state 87
-- On NEQ shift to state 94
-- On MULT shift to state 89
-- On MINUS shift to state 96
-- On LT shift to state 106
-- On LSQBR shift to state 91
-- On LAND shift to state 108
-- On GT shift to state 110
-- On EQUALITY shift to state 112
-- On DOT shift to state 98
-- On THEN reduce production exp -> NOT exp
-- On SEMICOLON reduce production exp -> NOT exp
-- On RSQBR reduce production exp -> NOT exp
-- On RPAR reduce production exp -> NOT exp
-- On REENTRANCE reduce production exp -> NOT exp
-- On COMMA reduce production exp -> NOT exp

State 136:
exp -> exp . LAND exp [ SEMICOLON PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT ]
exp -> exp . PLUS exp [ SEMICOLON PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT ]
exp -> exp . MINUS exp [ SEMICOLON PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT ]
exp -> exp . MULT exp [ SEMICOLON PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT ]
exp -> exp . LT exp [ SEMICOLON PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT ]
exp -> exp . GT exp [ SEMICOLON PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT ]
exp -> exp . NEQ exp [ SEMICOLON PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT ]
exp -> exp . EQUALITY exp [ SEMICOLON PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT ]
exp -> exp . DOT DEFAULT LPAR RPAR msg_info [ SEMICOLON PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT ]
exp -> exp . DOT IDENT LPAR loption(separated_nonempty_list(COMMA,exp)) RPAR msg_info [ SEMICOLON PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT ]
lexp -> exp . LSQBR exp RSQBR [ SEMICOLON PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT ]
sentence -> VOID SINGLE_EQ exp . SEMICOLON [ VOID VALUE UINT8 UINT256 TRUE THIS SENDER SELFDESTRUCT RETURN RBRACE NOW NOT LPAR LOG IF IDENT FALSE ELSE DEPLOY DECLIT8 DECLIT256 BYTES32 BOOL BALANCE ADDRESS ABORT ]
-- On SEMICOLON shift to state 137
-- On PLUS shift to state 87
-- On NEQ shift to state 94
-- On MULT shift to state 89
-- On MINUS shift to state 96
-- On LT shift to state 106
-- On LSQBR shift to state 91
-- On LAND shift to state 108
-- On GT shift to state 110
-- On EQUALITY shift to state 112
-- On DOT shift to state 98

State 137:
sentence -> VOID SINGLE_EQ exp SEMICOLON . [ VOID VALUE UINT8 UINT256 TRUE THIS SENDER SELFDESTRUCT RETURN RBRACE NOW NOT LPAR LOG IF IDENT FALSE ELSE DEPLOY DECLIT8 DECLIT256 BYTES32 BOOL BALANCE ADDRESS ABORT ]
-- On VOID reduce production sentence -> VOID SINGLE_EQ exp SEMICOLON
-- On VALUE reduce production sentence -> VOID SINGLE_EQ exp SEMICOLON
-- On UINT8 reduce production sentence -> VOID SINGLE_EQ exp SEMICOLON
-- On UINT256 reduce production sentence -> VOID SINGLE_EQ exp SEMICOLON
-- On TRUE reduce production sentence -> VOID SINGLE_EQ exp SEMICOLON
-- On THIS reduce production sentence -> VOID SINGLE_EQ exp SEMICOLON
-- On SENDER reduce production sentence -> VOID SINGLE_EQ exp SEMICOLON
-- On SELFDESTRUCT reduce production sentence -> VOID SINGLE_EQ exp SEMICOLON
-- On RETURN reduce production sentence -> VOID SINGLE_EQ exp SEMICOLON
-- On RBRACE reduce production sentence -> VOID SINGLE_EQ exp SEMICOLON
-- On NOW reduce production sentence -> VOID SINGLE_EQ exp SEMICOLON
-- On NOT reduce production sentence -> VOID SINGLE_EQ exp SEMICOLON
-- On LPAR reduce production sentence -> VOID SINGLE_EQ exp SEMICOLON
-- On LOG reduce production sentence -> VOID SINGLE_EQ exp SEMICOLON
-- On IF reduce production sentence -> VOID SINGLE_EQ exp SEMICOLON
-- On IDENT reduce production sentence -> VOID SINGLE_EQ exp SEMICOLON
-- On FALSE reduce production sentence -> VOID SINGLE_EQ exp SEMICOLON
-- On ELSE reduce production sentence -> VOID SINGLE_EQ exp SEMICOLON
-- On DEPLOY reduce production sentence -> VOID SINGLE_EQ exp SEMICOLON
-- On DECLIT8 reduce production sentence -> VOID SINGLE_EQ exp SEMICOLON
-- On DECLIT256 reduce production sentence -> VOID SINGLE_EQ exp SEMICOLON
-- On BYTES32 reduce production sentence -> VOID SINGLE_EQ exp SEMICOLON
-- On BOOL reduce production sentence -> VOID SINGLE_EQ exp SEMICOLON
-- On BALANCE reduce production sentence -> VOID SINGLE_EQ exp SEMICOLON
-- On ADDRESS reduce production sentence -> VOID SINGLE_EQ exp SEMICOLON
-- On ABORT reduce production sentence -> VOID SINGLE_EQ exp SEMICOLON

State 138:
sentence -> SELFDESTRUCT . exp SEMICOLON [ VOID VALUE UINT8 UINT256 TRUE THIS SENDER SELFDESTRUCT RETURN RBRACE NOW NOT LPAR LOG IF IDENT FALSE ELSE DEPLOY DECLIT8 DECLIT256 BYTES32 BOOL BALANCE ADDRESS ABORT ]
-- On VALUE shift to state 56
-- On TRUE shift to state 60
-- On THIS shift to state 61
-- On SENDER shift to state 62
-- On NOW shift to state 66
-- On NOT shift to state 70
-- On LPAR shift to state 71
-- On IDENT shift to state 72
-- On FALSE shift to state 74
-- On DEPLOY shift to state 75
-- On DECLIT8 shift to state 78
-- On DECLIT256 shift to state 79
-- On BALANCE shift to state 80
-- On ADDRESS shift to state 82
-- On lexp shift to state 84
-- On exp shift to state 139

State 139:
exp -> exp . LAND exp [ SEMICOLON PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT ]
exp -> exp . PLUS exp [ SEMICOLON PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT ]
exp -> exp . MINUS exp [ SEMICOLON PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT ]
exp -> exp . MULT exp [ SEMICOLON PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT ]
exp -> exp . LT exp [ SEMICOLON PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT ]
exp -> exp . GT exp [ SEMICOLON PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT ]
exp -> exp . NEQ exp [ SEMICOLON PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT ]
exp -> exp . EQUALITY exp [ SEMICOLON PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT ]
exp -> exp . DOT DEFAULT LPAR RPAR msg_info [ SEMICOLON PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT ]
exp -> exp . DOT IDENT LPAR loption(separated_nonempty_list(COMMA,exp)) RPAR msg_info [ SEMICOLON PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT ]
lexp -> exp . LSQBR exp RSQBR [ SEMICOLON PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT ]
sentence -> SELFDESTRUCT exp . SEMICOLON [ VOID VALUE UINT8 UINT256 TRUE THIS SENDER SELFDESTRUCT RETURN RBRACE NOW NOT LPAR LOG IF IDENT FALSE ELSE DEPLOY DECLIT8 DECLIT256 BYTES32 BOOL BALANCE ADDRESS ABORT ]
-- On SEMICOLON shift to state 140
-- On PLUS shift to state 87
-- On NEQ shift to state 94
-- On MULT shift to state 89
-- On MINUS shift to state 96
-- On LT shift to state 106
-- On LSQBR shift to state 91
-- On LAND shift to state 108
-- On GT shift to state 110
-- On EQUALITY shift to state 112
-- On DOT shift to state 98

State 140:
sentence -> SELFDESTRUCT exp SEMICOLON . [ VOID VALUE UINT8 UINT256 TRUE THIS SENDER SELFDESTRUCT RETURN RBRACE NOW NOT LPAR LOG IF IDENT FALSE ELSE DEPLOY DECLIT8 DECLIT256 BYTES32 BOOL BALANCE ADDRESS ABORT ]
-- On VOID reduce production sentence -> SELFDESTRUCT exp SEMICOLON
-- On VALUE reduce production sentence -> SELFDESTRUCT exp SEMICOLON
-- On UINT8 reduce production sentence -> SELFDESTRUCT exp SEMICOLON
-- On UINT256 reduce production sentence -> SELFDESTRUCT exp SEMICOLON
-- On TRUE reduce production sentence -> SELFDESTRUCT exp SEMICOLON
-- On THIS reduce production sentence -> SELFDESTRUCT exp SEMICOLON
-- On SENDER reduce production sentence -> SELFDESTRUCT exp SEMICOLON
-- On SELFDESTRUCT reduce production sentence -> SELFDESTRUCT exp SEMICOLON
-- On RETURN reduce production sentence -> SELFDESTRUCT exp SEMICOLON
-- On RBRACE reduce production sentence -> SELFDESTRUCT exp SEMICOLON
-- On NOW reduce production sentence -> SELFDESTRUCT exp SEMICOLON
-- On NOT reduce production sentence -> SELFDESTRUCT exp SEMICOLON
-- On LPAR reduce production sentence -> SELFDESTRUCT exp SEMICOLON
-- On LOG reduce production sentence -> SELFDESTRUCT exp SEMICOLON
-- On IF reduce production sentence -> SELFDESTRUCT exp SEMICOLON
-- On IDENT reduce production sentence -> SELFDESTRUCT exp SEMICOLON
-- On FALSE reduce production sentence -> SELFDESTRUCT exp SEMICOLON
-- On ELSE reduce production sentence -> SELFDESTRUCT exp SEMICOLON
-- On DEPLOY reduce production sentence -> SELFDESTRUCT exp SEMICOLON
-- On DECLIT8 reduce production sentence -> SELFDESTRUCT exp SEMICOLON
-- On DECLIT256 reduce production sentence -> SELFDESTRUCT exp SEMICOLON
-- On BYTES32 reduce production sentence -> SELFDESTRUCT exp SEMICOLON
-- On BOOL reduce production sentence -> SELFDESTRUCT exp SEMICOLON
-- On BALANCE reduce production sentence -> SELFDESTRUCT exp SEMICOLON
-- On ADDRESS reduce production sentence -> SELFDESTRUCT exp SEMICOLON
-- On ABORT reduce production sentence -> SELFDESTRUCT exp SEMICOLON

State 141:
sentence -> RETURN . option(exp) THEN BECOME exp SEMICOLON [ VOID VALUE UINT8 UINT256 TRUE THIS SENDER SELFDESTRUCT RETURN RBRACE NOW NOT LPAR LOG IF IDENT FALSE ELSE DEPLOY DECLIT8 DECLIT256 BYTES32 BOOL BALANCE ADDRESS ABORT ]
-- On VALUE shift to state 56
-- On TRUE shift to state 60
-- On THIS shift to state 61
-- On SENDER shift to state 62
-- On NOW shift to state 66
-- On NOT shift to state 70
-- On LPAR shift to state 71
-- On IDENT shift to state 72
-- On FALSE shift to state 74
-- On DEPLOY shift to state 75
-- On DECLIT8 shift to state 78
-- On DECLIT256 shift to state 79
-- On BALANCE shift to state 80
-- On ADDRESS shift to state 82
-- On option(exp) shift to state 142
-- On lexp shift to state 84
-- On exp shift to state 147
-- On THEN reduce production option(exp) ->

State 142:
sentence -> RETURN option(exp) . THEN BECOME exp SEMICOLON [ VOID VALUE UINT8 UINT256 TRUE THIS SENDER SELFDESTRUCT RETURN RBRACE NOW NOT LPAR LOG IF IDENT FALSE ELSE DEPLOY DECLIT8 DECLIT256 BYTES32 BOOL BALANCE ADDRESS ABORT ]
-- On THEN shift to state 143

State 143:
sentence -> RETURN option(exp) THEN . BECOME exp SEMICOLON [ VOID VALUE UINT8 UINT256 TRUE THIS SENDER SELFDESTRUCT RETURN RBRACE NOW NOT LPAR LOG IF IDENT FALSE ELSE DEPLOY DECLIT8 DECLIT256 BYTES32 BOOL BALANCE ADDRESS ABORT ]
-- On BECOME shift to state 144

State 144:
sentence -> RETURN option(exp) THEN BECOME . exp SEMICOLON [ VOID VALUE UINT8 UINT256 TRUE THIS SENDER SELFDESTRUCT RETURN RBRACE NOW NOT LPAR LOG IF IDENT FALSE ELSE DEPLOY DECLIT8 DECLIT256 BYTES32 BOOL BALANCE ADDRESS ABORT ]
-- On VALUE shift to state 56
-- On TRUE shift to state 60
-- On THIS shift to state 61
-- On SENDER shift to state 62
-- On NOW shift to state 66
-- On NOT shift to state 70
-- On LPAR shift to state 71
-- On IDENT shift to state 72
-- On FALSE shift to state 74
-- On DEPLOY shift to state 75
-- On DECLIT8 shift to state 78
-- On DECLIT256 shift to state 79
-- On BALANCE shift to state 80
-- On ADDRESS shift to state 82
-- On lexp shift to state 84
-- On exp shift to state 145

State 145:
exp -> exp . LAND exp [ SEMICOLON PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT ]
exp -> exp . PLUS exp [ SEMICOLON PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT ]
exp -> exp . MINUS exp [ SEMICOLON PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT ]
exp -> exp . MULT exp [ SEMICOLON PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT ]
exp -> exp . LT exp [ SEMICOLON PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT ]
exp -> exp . GT exp [ SEMICOLON PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT ]
exp -> exp . NEQ exp [ SEMICOLON PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT ]
exp -> exp . EQUALITY exp [ SEMICOLON PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT ]
exp -> exp . DOT DEFAULT LPAR RPAR msg_info [ SEMICOLON PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT ]
exp -> exp . DOT IDENT LPAR loption(separated_nonempty_list(COMMA,exp)) RPAR msg_info [ SEMICOLON PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT ]
lexp -> exp . LSQBR exp RSQBR [ SEMICOLON PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT ]
sentence -> RETURN option(exp) THEN BECOME exp . SEMICOLON [ VOID VALUE UINT8 UINT256 TRUE THIS SENDER SELFDESTRUCT RETURN RBRACE NOW NOT LPAR LOG IF IDENT FALSE ELSE DEPLOY DECLIT8 DECLIT256 BYTES32 BOOL BALANCE ADDRESS ABORT ]
-- On SEMICOLON shift to state 146
-- On PLUS shift to state 87
-- On NEQ shift to state 94
-- On MULT shift to state 89
-- On MINUS shift to state 96
-- On LT shift to state 106
-- On LSQBR shift to state 91
-- On LAND shift to state 108
-- On GT shift to state 110
-- On EQUALITY shift to state 112
-- On DOT shift to state 98

State 146:
sentence -> RETURN option(exp) THEN BECOME exp SEMICOLON . [ VOID VALUE UINT8 UINT256 TRUE THIS SENDER SELFDESTRUCT RETURN RBRACE NOW NOT LPAR LOG IF IDENT FALSE ELSE DEPLOY DECLIT8 DECLIT256 BYTES32 BOOL BALANCE ADDRESS ABORT ]
-- On VOID reduce production sentence -> RETURN option(exp) THEN BECOME exp SEMICOLON
-- On VALUE reduce production sentence -> RETURN option(exp) THEN BECOME exp SEMICOLON
-- On UINT8 reduce production sentence -> RETURN option(exp) THEN BECOME exp SEMICOLON
-- On UINT256 reduce production sentence -> RETURN option(exp) THEN BECOME exp SEMICOLON
-- On TRUE reduce production sentence -> RETURN option(exp) THEN BECOME exp SEMICOLON
-- On THIS reduce production sentence -> RETURN option(exp) THEN BECOME exp SEMICOLON
-- On SENDER reduce production sentence -> RETURN option(exp) THEN BECOME exp SEMICOLON
-- On SELFDESTRUCT reduce production sentence -> RETURN option(exp) THEN BECOME exp SEMICOLON
-- On RETURN reduce production sentence -> RETURN option(exp) THEN BECOME exp SEMICOLON
-- On RBRACE reduce production sentence -> RETURN option(exp) THEN BECOME exp SEMICOLON
-- On NOW reduce production sentence -> RETURN option(exp) THEN BECOME exp SEMICOLON
-- On NOT reduce production sentence -> RETURN option(exp) THEN BECOME exp SEMICOLON
-- On LPAR reduce production sentence -> RETURN option(exp) THEN BECOME exp SEMICOLON
-- On LOG reduce production sentence -> RETURN option(exp) THEN BECOME exp SEMICOLON
-- On IF reduce production sentence -> RETURN option(exp) THEN BECOME exp SEMICOLON
-- On IDENT reduce production sentence -> RETURN option(exp) THEN BECOME exp SEMICOLON
-- On FALSE reduce production sentence -> RETURN option(exp) THEN BECOME exp SEMICOLON
-- On ELSE reduce production sentence -> RETURN option(exp) THEN BECOME exp SEMICOLON
-- On DEPLOY reduce production sentence -> RETURN option(exp) THEN BECOME exp SEMICOLON
-- On DECLIT8 reduce production sentence -> RETURN option(exp) THEN BECOME exp SEMICOLON
-- On DECLIT256 reduce production sentence -> RETURN option(exp) THEN BECOME exp SEMICOLON
-- On BYTES32 reduce production sentence -> RETURN option(exp) THEN BECOME exp SEMICOLON
-- On BOOL reduce production sentence -> RETURN option(exp) THEN BECOME exp SEMICOLON
-- On BALANCE reduce production sentence -> RETURN option(exp) THEN BECOME exp SEMICOLON
-- On ADDRESS reduce production sentence -> RETURN option(exp) THEN BECOME exp SEMICOLON
-- On ABORT reduce production sentence -> RETURN option(exp) THEN BECOME exp SEMICOLON

State 147:
exp -> exp . LAND exp [ THEN PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT ]
exp -> exp . PLUS exp [ THEN PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT ]
exp -> exp . MINUS exp [ THEN PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT ]
exp -> exp . MULT exp [ THEN PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT ]
exp -> exp . LT exp [ THEN PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT ]
exp -> exp . GT exp [ THEN PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT ]
exp -> exp . NEQ exp [ THEN PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT ]
exp -> exp . EQUALITY exp [ THEN PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT ]
exp -> exp . DOT DEFAULT LPAR RPAR msg_info [ THEN PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT ]
exp -> exp . DOT IDENT LPAR loption(separated_nonempty_list(COMMA,exp)) RPAR msg_info [ THEN PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT ]
lexp -> exp . LSQBR exp RSQBR [ THEN PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT ]
option(exp) -> exp . [ THEN ]
-- On PLUS shift to state 87
-- On NEQ shift to state 94
-- On MULT shift to state 89
-- On MINUS shift to state 96
-- On LT shift to state 106
-- On LSQBR shift to state 91
-- On LAND shift to state 108
-- On GT shift to state 110
-- On EQUALITY shift to state 112
-- On DOT shift to state 98
-- On THEN reduce production option(exp) -> exp

State 148:
sentence -> LOG . IDENT LPAR loption(separated_nonempty_list(COMMA,exp)) RPAR SEMICOLON [ VOID VALUE UINT8 UINT256 TRUE THIS SENDER SELFDESTRUCT RETURN RBRACE NOW NOT LPAR LOG IF IDENT FALSE ELSE DEPLOY DECLIT8 DECLIT256 BYTES32 BOOL BALANCE ADDRESS ABORT ]
-- On IDENT shift to state 149

State 149:
sentence -> LOG IDENT . LPAR loption(separated_nonempty_list(COMMA,exp)) RPAR SEMICOLON [ VOID VALUE UINT8 UINT256 TRUE THIS SENDER SELFDESTRUCT RETURN RBRACE NOW NOT LPAR LOG IF IDENT FALSE ELSE DEPLOY DECLIT8 DECLIT256 BYTES32 BOOL BALANCE ADDRESS ABORT ]
-- On LPAR shift to state 150

State 150:
sentence -> LOG IDENT LPAR . loption(separated_nonempty_list(COMMA,exp)) RPAR SEMICOLON [ VOID VALUE UINT8 UINT256 TRUE THIS SENDER SELFDESTRUCT RETURN RBRACE NOW NOT LPAR LOG IF IDENT FALSE ELSE DEPLOY DECLIT8 DECLIT256 BYTES32 BOOL BALANCE ADDRESS ABORT ]
-- On VALUE shift to state 56
-- On TRUE shift to state 60
-- On THIS shift to state 61
-- On SENDER shift to state 62
-- On NOW shift to state 66
-- On NOT shift to state 70
-- On LPAR shift to state 71
-- On IDENT shift to state 72
-- On FALSE shift to state 74
-- On DEPLOY shift to state 75
-- On DECLIT8 shift to state 78
-- On DECLIT256 shift to state 79
-- On BALANCE shift to state 80
-- On ADDRESS shift to state 82
-- On separated_nonempty_list(COMMA,exp) shift to state 101
-- On loption(separated_nonempty_list(COMMA,exp)) shift to state 151
-- On lexp shift to state 84
-- On exp shift to state 119
-- On RPAR reduce production loption(separated_nonempty_list(COMMA,exp)) ->

State 151:
sentence -> LOG IDENT LPAR loption(separated_nonempty_list(COMMA,exp)) . RPAR SEMICOLON [ VOID VALUE UINT8 UINT256 TRUE THIS SENDER SELFDESTRUCT RETURN RBRACE NOW NOT LPAR LOG IF IDENT FALSE ELSE DEPLOY DECLIT8 DECLIT256 BYTES32 BOOL BALANCE ADDRESS ABORT ]
-- On RPAR shift to state 152

State 152:
sentence -> LOG IDENT LPAR loption(separated_nonempty_list(COMMA,exp)) RPAR . SEMICOLON [ VOID VALUE UINT8 UINT256 TRUE THIS SENDER SELFDESTRUCT RETURN RBRACE NOW NOT LPAR LOG IF IDENT FALSE ELSE DEPLOY DECLIT8 DECLIT256 BYTES32 BOOL BALANCE ADDRESS ABORT ]
-- On SEMICOLON shift to state 153

State 153:
sentence -> LOG IDENT LPAR loption(separated_nonempty_list(COMMA,exp)) RPAR SEMICOLON . [ VOID VALUE UINT8 UINT256 TRUE THIS SENDER SELFDESTRUCT RETURN RBRACE NOW NOT LPAR LOG IF IDENT FALSE ELSE DEPLOY DECLIT8 DECLIT256 BYTES32 BOOL BALANCE ADDRESS ABORT ]
-- On VOID reduce production sentence -> LOG IDENT LPAR loption(separated_nonempty_list(COMMA,exp)) RPAR SEMICOLON
-- On VALUE reduce production sentence -> LOG IDENT LPAR loption(separated_nonempty_list(COMMA,exp)) RPAR SEMICOLON
-- On UINT8 reduce production sentence -> LOG IDENT LPAR loption(separated_nonempty_list(COMMA,exp)) RPAR SEMICOLON
-- On UINT256 reduce production sentence -> LOG IDENT LPAR loption(separated_nonempty_list(COMMA,exp)) RPAR SEMICOLON
-- On TRUE reduce production sentence -> LOG IDENT LPAR loption(separated_nonempty_list(COMMA,exp)) RPAR SEMICOLON
-- On THIS reduce production sentence -> LOG IDENT LPAR loption(separated_nonempty_list(COMMA,exp)) RPAR SEMICOLON
-- On SENDER reduce production sentence -> LOG IDENT LPAR loption(separated_nonempty_list(COMMA,exp)) RPAR SEMICOLON
-- On SELFDESTRUCT reduce production sentence -> LOG IDENT LPAR loption(separated_nonempty_list(COMMA,exp)) RPAR SEMICOLON
-- On RETURN reduce production sentence -> LOG IDENT LPAR loption(separated_nonempty_list(COMMA,exp)) RPAR SEMICOLON
-- On RBRACE reduce production sentence -> LOG IDENT LPAR loption(separated_nonempty_list(COMMA,exp)) RPAR SEMICOLON
-- On NOW reduce production sentence -> LOG IDENT LPAR loption(separated_nonempty_list(COMMA,exp)) RPAR SEMICOLON
-- On NOT reduce production sentence -> LOG IDENT LPAR loption(separated_nonempty_list(COMMA,exp)) RPAR SEMICOLON
-- On LPAR reduce production sentence -> LOG IDENT LPAR loption(separated_nonempty_list(COMMA,exp)) RPAR SEMICOLON
-- On LOG reduce production sentence -> LOG IDENT LPAR loption(separated_nonempty_list(COMMA,exp)) RPAR SEMICOLON
-- On IF reduce production sentence -> LOG IDENT LPAR loption(separated_nonempty_list(COMMA,exp)) RPAR SEMICOLON
-- On IDENT reduce production sentence -> LOG IDENT LPAR loption(separated_nonempty_list(COMMA,exp)) RPAR SEMICOLON
-- On FALSE reduce production sentence -> LOG IDENT LPAR loption(separated_nonempty_list(COMMA,exp)) RPAR SEMICOLON
-- On ELSE reduce production sentence -> LOG IDENT LPAR loption(separated_nonempty_list(COMMA,exp)) RPAR SEMICOLON
-- On DEPLOY reduce production sentence -> LOG IDENT LPAR loption(separated_nonempty_list(COMMA,exp)) RPAR SEMICOLON
-- On DECLIT8 reduce production sentence -> LOG IDENT LPAR loption(separated_nonempty_list(COMMA,exp)) RPAR SEMICOLON
-- On DECLIT256 reduce production sentence -> LOG IDENT LPAR loption(separated_nonempty_list(COMMA,exp)) RPAR SEMICOLON
-- On BYTES32 reduce production sentence -> LOG IDENT LPAR loption(separated_nonempty_list(COMMA,exp)) RPAR SEMICOLON
-- On BOOL reduce production sentence -> LOG IDENT LPAR loption(separated_nonempty_list(COMMA,exp)) RPAR SEMICOLON
-- On BALANCE reduce production sentence -> LOG IDENT LPAR loption(separated_nonempty_list(COMMA,exp)) RPAR SEMICOLON
-- On ADDRESS reduce production sentence -> LOG IDENT LPAR loption(separated_nonempty_list(COMMA,exp)) RPAR SEMICOLON
-- On ABORT reduce production sentence -> LOG IDENT LPAR loption(separated_nonempty_list(COMMA,exp)) RPAR SEMICOLON

State 154:
sentence -> IF . LPAR exp RPAR sentence ELSE sentence [ VOID VALUE UINT8 UINT256 TRUE THIS SENDER SELFDESTRUCT RETURN RBRACE NOW NOT LPAR LOG IF IDENT FALSE ELSE DEPLOY DECLIT8 DECLIT256 BYTES32 BOOL BALANCE ADDRESS ABORT ]
sentence -> IF . LPAR exp RPAR sentence ELSE block [ VOID VALUE UINT8 UINT256 TRUE THIS SENDER SELFDESTRUCT RETURN RBRACE NOW NOT LPAR LOG IF IDENT FALSE ELSE DEPLOY DECLIT8 DECLIT256 BYTES32 BOOL BALANCE ADDRESS ABORT ]
sentence -> IF . LPAR exp RPAR block ELSE sentence [ VOID VALUE UINT8 UINT256 TRUE THIS SENDER SELFDESTRUCT RETURN RBRACE NOW NOT LPAR LOG IF IDENT FALSE ELSE DEPLOY DECLIT8 DECLIT256 BYTES32 BOOL BALANCE ADDRESS ABORT ]
sentence -> IF . LPAR exp RPAR block ELSE block [ VOID VALUE UINT8 UINT256 TRUE THIS SENDER SELFDESTRUCT RETURN RBRACE NOW NOT LPAR LOG IF IDENT FALSE ELSE DEPLOY DECLIT8 DECLIT256 BYTES32 BOOL BALANCE ADDRESS ABORT ]
sentence -> IF . LPAR exp RPAR sentence [ VOID VALUE UINT8 UINT256 TRUE THIS SENDER SELFDESTRUCT RETURN RBRACE NOW NOT LPAR LOG IF IDENT FALSE ELSE DEPLOY DECLIT8 DECLIT256 BYTES32 BOOL BALANCE ADDRESS ABORT ]
sentence -> IF . LPAR exp RPAR block [ VOID VALUE UINT8 UINT256 TRUE THIS SENDER SELFDESTRUCT RETURN RBRACE NOW NOT LPAR LOG IF IDENT FALSE ELSE DEPLOY DECLIT8 DECLIT256 BYTES32 BOOL BALANCE ADDRESS ABORT ]
-- On LPAR shift to state 155

State 155:
sentence -> IF LPAR . exp RPAR sentence ELSE sentence [ VOID VALUE UINT8 UINT256 TRUE THIS SENDER SELFDESTRUCT RETURN RBRACE NOW NOT LPAR LOG IF IDENT FALSE ELSE DEPLOY DECLIT8 DECLIT256 BYTES32 BOOL BALANCE ADDRESS ABORT ]
sentence -> IF LPAR . exp RPAR sentence ELSE block [ VOID VALUE UINT8 UINT256 TRUE THIS SENDER SELFDESTRUCT RETURN RBRACE NOW NOT LPAR LOG IF IDENT FALSE ELSE DEPLOY DECLIT8 DECLIT256 BYTES32 BOOL BALANCE ADDRESS ABORT ]
sentence -> IF LPAR . exp RPAR block ELSE sentence [ VOID VALUE UINT8 UINT256 TRUE THIS SENDER SELFDESTRUCT RETURN RBRACE NOW NOT LPAR LOG IF IDENT FALSE ELSE DEPLOY DECLIT8 DECLIT256 BYTES32 BOOL BALANCE ADDRESS ABORT ]
sentence -> IF LPAR . exp RPAR block ELSE block [ VOID VALUE UINT8 UINT256 TRUE THIS SENDER SELFDESTRUCT RETURN RBRACE NOW NOT LPAR LOG IF IDENT FALSE ELSE DEPLOY DECLIT8 DECLIT256 BYTES32 BOOL BALANCE ADDRESS ABORT ]
sentence -> IF LPAR . exp RPAR sentence [ VOID VALUE UINT8 UINT256 TRUE THIS SENDER SELFDESTRUCT RETURN RBRACE NOW NOT LPAR LOG IF IDENT FALSE ELSE DEPLOY DECLIT8 DECLIT256 BYTES32 BOOL BALANCE ADDRESS ABORT ]
sentence -> IF LPAR . exp RPAR block [ VOID VALUE UINT8 UINT256 TRUE THIS SENDER SELFDESTRUCT RETURN RBRACE NOW NOT LPAR LOG IF IDENT FALSE ELSE DEPLOY DECLIT8 DECLIT256 BYTES32 BOOL BALANCE ADDRESS ABORT ]
-- On VALUE shift to state 56
-- On TRUE shift to state 60
-- On THIS shift to state 61
-- On SENDER shift to state 62
-- On NOW shift to state 66
-- On NOT shift to state 70
-- On LPAR shift to state 71
-- On IDENT shift to state 72
-- On FALSE shift to state 74
-- On DEPLOY shift to state 75
-- On DECLIT8 shift to state 78
-- On DECLIT256 shift to state 79
-- On BALANCE shift to state 80
-- On ADDRESS shift to state 82
-- On lexp shift to state 84
-- On exp shift to state 156

State 156:
exp -> exp . LAND exp [ RPAR PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT ]
exp -> exp . PLUS exp [ RPAR PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT ]
exp -> exp . MINUS exp [ RPAR PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT ]
exp -> exp . MULT exp [ RPAR PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT ]
exp -> exp . LT exp [ RPAR PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT ]
exp -> exp . GT exp [ RPAR PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT ]
exp -> exp . NEQ exp [ RPAR PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT ]
exp -> exp . EQUALITY exp [ RPAR PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT ]
exp -> exp . DOT DEFAULT LPAR RPAR msg_info [ RPAR PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT ]
exp -> exp . DOT IDENT LPAR loption(separated_nonempty_list(COMMA,exp)) RPAR msg_info [ RPAR PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT ]
lexp -> exp . LSQBR exp RSQBR [ RPAR PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT ]
sentence -> IF LPAR exp . RPAR sentence ELSE sentence [ VOID VALUE UINT8 UINT256 TRUE THIS SENDER SELFDESTRUCT RETURN RBRACE NOW NOT LPAR LOG IF IDENT FALSE ELSE DEPLOY DECLIT8 DECLIT256 BYTES32 BOOL BALANCE ADDRESS ABORT ]
sentence -> IF LPAR exp . RPAR sentence ELSE block [ VOID VALUE UINT8 UINT256 TRUE THIS SENDER SELFDESTRUCT RETURN RBRACE NOW NOT LPAR LOG IF IDENT FALSE ELSE DEPLOY DECLIT8 DECLIT256 BYTES32 BOOL BALANCE ADDRESS ABORT ]
sentence -> IF LPAR exp . RPAR block ELSE sentence [ VOID VALUE UINT8 UINT256 TRUE THIS SENDER SELFDESTRUCT RETURN RBRACE NOW NOT LPAR LOG IF IDENT FALSE ELSE DEPLOY DECLIT8 DECLIT256 BYTES32 BOOL BALANCE ADDRESS ABORT ]
sentence -> IF LPAR exp . RPAR block ELSE block [ VOID VALUE UINT8 UINT256 TRUE THIS SENDER SELFDESTRUCT RETURN RBRACE NOW NOT LPAR LOG IF IDENT FALSE ELSE DEPLOY DECLIT8 DECLIT256 BYTES32 BOOL BALANCE ADDRESS ABORT ]
sentence -> IF LPAR exp . RPAR sentence [ VOID VALUE UINT8 UINT256 TRUE THIS SENDER SELFDESTRUCT RETURN RBRACE NOW NOT LPAR LOG IF IDENT FALSE ELSE DEPLOY DECLIT8 DECLIT256 BYTES32 BOOL BALANCE ADDRESS ABORT ]
sentence -> IF LPAR exp . RPAR block [ VOID VALUE UINT8 UINT256 TRUE THIS SENDER SELFDESTRUCT RETURN RBRACE NOW NOT LPAR LOG IF IDENT FALSE ELSE DEPLOY DECLIT8 DECLIT256 BYTES32 BOOL BALANCE ADDRESS ABORT ]
-- On RPAR shift to state 157
-- On PLUS shift to state 87
-- On NEQ shift to state 94
-- On MULT shift to state 89
-- On MINUS shift to state 96
-- On LT shift to state 106
-- On LSQBR shift to state 91
-- On LAND shift to state 108
-- On GT shift to state 110
-- On EQUALITY shift to state 112
-- On DOT shift to state 98

State 157:
sentence -> IF LPAR exp RPAR . sentence ELSE sentence [ VOID VALUE UINT8 UINT256 TRUE THIS SENDER SELFDESTRUCT RETURN RBRACE NOW NOT LPAR LOG IF IDENT FALSE ELSE DEPLOY DECLIT8 DECLIT256 BYTES32 BOOL BALANCE ADDRESS ABORT ]
sentence -> IF LPAR exp RPAR . sentence ELSE block [ VOID VALUE UINT8 UINT256 TRUE THIS SENDER SELFDESTRUCT RETURN RBRACE NOW NOT LPAR LOG IF IDENT FALSE ELSE DEPLOY DECLIT8 DECLIT256 BYTES32 BOOL BALANCE ADDRESS ABORT ]
sentence -> IF LPAR exp RPAR . block ELSE sentence [ VOID VALUE UINT8 UINT256 TRUE THIS SENDER SELFDESTRUCT RETURN RBRACE NOW NOT LPAR LOG IF IDENT FALSE ELSE DEPLOY DECLIT8 DECLIT256 BYTES32 BOOL BALANCE ADDRESS ABORT ]
sentence -> IF LPAR exp RPAR . block ELSE block [ VOID VALUE UINT8 UINT256 TRUE THIS SENDER SELFDESTRUCT RETURN RBRACE NOW NOT LPAR LOG IF IDENT FALSE ELSE DEPLOY DECLIT8 DECLIT256 BYTES32 BOOL BALANCE ADDRESS ABORT ]
sentence -> IF LPAR exp RPAR . sentence [ VOID VALUE UINT8 UINT256 TRUE THIS SENDER SELFDESTRUCT RETURN RBRACE NOW NOT LPAR LOG IF IDENT FALSE ELSE DEPLOY DECLIT8 DECLIT256 BYTES32 BOOL BALANCE ADDRESS ABORT ]
sentence -> IF LPAR exp RPAR . block [ VOID VALUE UINT8 UINT256 TRUE THIS SENDER SELFDESTRUCT RETURN RBRACE NOW NOT LPAR LOG IF IDENT FALSE ELSE DEPLOY DECLIT8 DECLIT256 BYTES32 BOOL BALANCE ADDRESS ABORT ]
-- On VOID shift to state 54
-- On VALUE shift to state 56
-- On UINT8 shift to state 4
-- On UINT256 shift to state 5
-- On TRUE shift to state 60
-- On THIS shift to state 61
-- On SENDER shift to state 62
-- On SELFDESTRUCT shift to state 138
-- On RETURN shift to state 141
-- On NOW shift to state 66
-- On NOT shift to state 70
-- On LPAR shift to state 71
-- On LOG shift to state 148
-- On LBRACE shift to state 53
-- On IF shift to state 154
-- On IDENT shift to state 158
-- On FALSE shift to state 74
-- On DEPLOY shift to state 75
-- On DECLIT8 shift to state 78
-- On DECLIT256 shift to state 79
-- On BYTES32 shift to state 7
-- On BOOL shift to state 8
-- On BALANCE shift to state 80
-- On ADDRESS shift to state 159
-- On ABORT shift to state 160
-- On typ shift to state 162
-- On sentence shift to state 167
-- On lexp shift to state 170
-- On exp shift to state 174
-- On block shift to state 176

State 158:
exp -> IDENT . [ PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT ]
exp -> IDENT . LPAR loption(separated_nonempty_list(COMMA,exp)) RPAR [ PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT ]
typ -> IDENT . [ RARROW IDENT ]
-- On LPAR shift to state 73
-- On RARROW reduce production typ -> IDENT
-- On PLUS reduce production exp -> IDENT
-- On NEQ reduce production exp -> IDENT
-- On MULT reduce production exp -> IDENT
-- On MINUS reduce production exp -> IDENT
-- On LT reduce production exp -> IDENT
-- On LSQBR reduce production exp -> IDENT
-- On LAND reduce production exp -> IDENT
-- On IDENT reduce production typ -> IDENT
-- On GT reduce production exp -> IDENT
-- On EQUALITY reduce production exp -> IDENT
-- On DOT reduce production exp -> IDENT

State 159:
exp -> ADDRESS . LPAR exp RPAR [ PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT ]
typ -> ADDRESS . [ RARROW IDENT ]
-- On LPAR shift to state 83
-- On RARROW reduce production typ -> ADDRESS
-- On IDENT reduce production typ -> ADDRESS

State 160:
sentence -> ABORT . SEMICOLON [ VOID VALUE UINT8 UINT256 TRUE THIS SENDER SELFDESTRUCT RETURN RBRACE NOW NOT LPAR LOG IF IDENT FALSE ELSE DEPLOY DECLIT8 DECLIT256 BYTES32 BOOL BALANCE ADDRESS ABORT ]
-- On SEMICOLON shift to state 161

State 161:
sentence -> ABORT SEMICOLON . [ VOID VALUE UINT8 UINT256 TRUE THIS SENDER SELFDESTRUCT RETURN RBRACE NOW NOT LPAR LOG IF IDENT FALSE ELSE DEPLOY DECLIT8 DECLIT256 BYTES32 BOOL BALANCE ADDRESS ABORT ]
-- On VOID reduce production sentence -> ABORT SEMICOLON
-- On VALUE reduce production sentence -> ABORT SEMICOLON
-- On UINT8 reduce production sentence -> ABORT SEMICOLON
-- On UINT256 reduce production sentence -> ABORT SEMICOLON
-- On TRUE reduce production sentence -> ABORT SEMICOLON
-- On THIS reduce production sentence -> ABORT SEMICOLON
-- On SENDER reduce production sentence -> ABORT SEMICOLON
-- On SELFDESTRUCT reduce production sentence -> ABORT SEMICOLON
-- On RETURN reduce production sentence -> ABORT SEMICOLON
-- On RBRACE reduce production sentence -> ABORT SEMICOLON
-- On NOW reduce production sentence -> ABORT SEMICOLON
-- On NOT reduce production sentence -> ABORT SEMICOLON
-- On LPAR reduce production sentence -> ABORT SEMICOLON
-- On LOG reduce production sentence -> ABORT SEMICOLON
-- On IF reduce production sentence -> ABORT SEMICOLON
-- On IDENT reduce production sentence -> ABORT SEMICOLON
-- On FALSE reduce production sentence -> ABORT SEMICOLON
-- On ELSE reduce production sentence -> ABORT SEMICOLON
-- On DEPLOY reduce production sentence -> ABORT SEMICOLON
-- On DECLIT8 reduce production sentence -> ABORT SEMICOLON
-- On DECLIT256 reduce production sentence -> ABORT SEMICOLON
-- On BYTES32 reduce production sentence -> ABORT SEMICOLON
-- On BOOL reduce production sentence -> ABORT SEMICOLON
-- On BALANCE reduce production sentence -> ABORT SEMICOLON
-- On ADDRESS reduce production sentence -> ABORT SEMICOLON
-- On ABORT reduce production sentence -> ABORT SEMICOLON

State 162:
sentence -> typ . IDENT SINGLE_EQ exp SEMICOLON [ VOID VALUE UINT8 UINT256 TRUE THIS SENDER SELFDESTRUCT RETURN RBRACE NOW NOT LPAR LOG IF IDENT FALSE ELSE DEPLOY DECLIT8 DECLIT256 BYTES32 BOOL BALANCE ADDRESS ABORT ]
typ -> typ . RARROW typ [ RARROW IDENT ]
-- On RARROW shift to state 11
-- On IDENT shift to state 163

State 163:
sentence -> typ IDENT . SINGLE_EQ exp SEMICOLON [ VOID VALUE UINT8 UINT256 TRUE THIS SENDER SELFDESTRUCT RETURN RBRACE NOW NOT LPAR LOG IF IDENT FALSE ELSE DEPLOY DECLIT8 DECLIT256 BYTES32 BOOL BALANCE ADDRESS ABORT ]
-- On SINGLE_EQ shift to state 164

State 164:
sentence -> typ IDENT SINGLE_EQ . exp SEMICOLON [ VOID VALUE UINT8 UINT256 TRUE THIS SENDER SELFDESTRUCT RETURN RBRACE NOW NOT LPAR LOG IF IDENT FALSE ELSE DEPLOY DECLIT8 DECLIT256 BYTES32 BOOL BALANCE ADDRESS ABORT ]
-- On VALUE shift to state 56
-- On TRUE shift to state 60
-- On THIS shift to state 61
-- On SENDER shift to state 62
-- On NOW shift to state 66
-- On NOT shift to state 70
-- On LPAR shift to state 71
-- On IDENT shift to state 72
-- On FALSE shift to state 74
-- On DEPLOY shift to state 75
-- On DECLIT8 shift to state 78
-- On DECLIT256 shift to state 79
-- On BALANCE shift to state 80
-- On ADDRESS shift to state 82
-- On lexp shift to state 84
-- On exp shift to state 165

State 165:
exp -> exp . LAND exp [ SEMICOLON PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT ]
exp -> exp . PLUS exp [ SEMICOLON PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT ]
exp -> exp . MINUS exp [ SEMICOLON PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT ]
exp -> exp . MULT exp [ SEMICOLON PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT ]
exp -> exp . LT exp [ SEMICOLON PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT ]
exp -> exp . GT exp [ SEMICOLON PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT ]
exp -> exp . NEQ exp [ SEMICOLON PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT ]
exp -> exp . EQUALITY exp [ SEMICOLON PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT ]
exp -> exp . DOT DEFAULT LPAR RPAR msg_info [ SEMICOLON PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT ]
exp -> exp . DOT IDENT LPAR loption(separated_nonempty_list(COMMA,exp)) RPAR msg_info [ SEMICOLON PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT ]
lexp -> exp . LSQBR exp RSQBR [ SEMICOLON PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT ]
sentence -> typ IDENT SINGLE_EQ exp . SEMICOLON [ VOID VALUE UINT8 UINT256 TRUE THIS SENDER SELFDESTRUCT RETURN RBRACE NOW NOT LPAR LOG IF IDENT FALSE ELSE DEPLOY DECLIT8 DECLIT256 BYTES32 BOOL BALANCE ADDRESS ABORT ]
-- On SEMICOLON shift to state 166
-- On PLUS shift to state 87
-- On NEQ shift to state 94
-- On MULT shift to state 89
-- On MINUS shift to state 96
-- On LT shift to state 106
-- On LSQBR shift to state 91
-- On LAND shift to state 108
-- On GT shift to state 110
-- On EQUALITY shift to state 112
-- On DOT shift to state 98

State 166:
sentence -> typ IDENT SINGLE_EQ exp SEMICOLON . [ VOID VALUE UINT8 UINT256 TRUE THIS SENDER SELFDESTRUCT RETURN RBRACE NOW NOT LPAR LOG IF IDENT FALSE ELSE DEPLOY DECLIT8 DECLIT256 BYTES32 BOOL BALANCE ADDRESS ABORT ]
-- On VOID reduce production sentence -> typ IDENT SINGLE_EQ exp SEMICOLON
-- On VALUE reduce production sentence -> typ IDENT SINGLE_EQ exp SEMICOLON
-- On UINT8 reduce production sentence -> typ IDENT SINGLE_EQ exp SEMICOLON
-- On UINT256 reduce production sentence -> typ IDENT SINGLE_EQ exp SEMICOLON
-- On TRUE reduce production sentence -> typ IDENT SINGLE_EQ exp SEMICOLON
-- On THIS reduce production sentence -> typ IDENT SINGLE_EQ exp SEMICOLON
-- On SENDER reduce production sentence -> typ IDENT SINGLE_EQ exp SEMICOLON
-- On SELFDESTRUCT reduce production sentence -> typ IDENT SINGLE_EQ exp SEMICOLON
-- On RETURN reduce production sentence -> typ IDENT SINGLE_EQ exp SEMICOLON
-- On RBRACE reduce production sentence -> typ IDENT SINGLE_EQ exp SEMICOLON
-- On NOW reduce production sentence -> typ IDENT SINGLE_EQ exp SEMICOLON
-- On NOT reduce production sentence -> typ IDENT SINGLE_EQ exp SEMICOLON
-- On LPAR reduce production sentence -> typ IDENT SINGLE_EQ exp SEMICOLON
-- On LOG reduce production sentence -> typ IDENT SINGLE_EQ exp SEMICOLON
-- On IF reduce production sentence -> typ IDENT SINGLE_EQ exp SEMICOLON
-- On IDENT reduce production sentence -> typ IDENT SINGLE_EQ exp SEMICOLON
-- On FALSE reduce production sentence -> typ IDENT SINGLE_EQ exp SEMICOLON
-- On ELSE reduce production sentence -> typ IDENT SINGLE_EQ exp SEMICOLON
-- On DEPLOY reduce production sentence -> typ IDENT SINGLE_EQ exp SEMICOLON
-- On DECLIT8 reduce production sentence -> typ IDENT SINGLE_EQ exp SEMICOLON
-- On DECLIT256 reduce production sentence -> typ IDENT SINGLE_EQ exp SEMICOLON
-- On BYTES32 reduce production sentence -> typ IDENT SINGLE_EQ exp SEMICOLON
-- On BOOL reduce production sentence -> typ IDENT SINGLE_EQ exp SEMICOLON
-- On BALANCE reduce production sentence -> typ IDENT SINGLE_EQ exp SEMICOLON
-- On ADDRESS reduce production sentence -> typ IDENT SINGLE_EQ exp SEMICOLON
-- On ABORT reduce production sentence -> typ IDENT SINGLE_EQ exp SEMICOLON

State 167:
sentence -> IF LPAR exp RPAR sentence . ELSE sentence [ VOID VALUE UINT8 UINT256 TRUE THIS SENDER SELFDESTRUCT RETURN RBRACE NOW NOT LPAR LOG IF IDENT FALSE ELSE DEPLOY DECLIT8 DECLIT256 BYTES32 BOOL BALANCE ADDRESS ABORT ]
sentence -> IF LPAR exp RPAR sentence . ELSE block [ VOID VALUE UINT8 UINT256 TRUE THIS SENDER SELFDESTRUCT RETURN RBRACE NOW NOT LPAR LOG IF IDENT FALSE ELSE DEPLOY DECLIT8 DECLIT256 BYTES32 BOOL BALANCE ADDRESS ABORT ]
sentence -> IF LPAR exp RPAR sentence . [ VOID VALUE UINT8 UINT256 TRUE THIS SENDER SELFDESTRUCT RETURN RBRACE NOW NOT LPAR LOG IF IDENT FALSE ELSE DEPLOY DECLIT8 DECLIT256 BYTES32 BOOL BALANCE ADDRESS ABORT ]
-- On ELSE shift to state 168
-- On VOID reduce production sentence -> IF LPAR exp RPAR sentence
-- On VALUE reduce production sentence -> IF LPAR exp RPAR sentence
-- On UINT8 reduce production sentence -> IF LPAR exp RPAR sentence
-- On UINT256 reduce production sentence -> IF LPAR exp RPAR sentence
-- On TRUE reduce production sentence -> IF LPAR exp RPAR sentence
-- On THIS reduce production sentence -> IF LPAR exp RPAR sentence
-- On SENDER reduce production sentence -> IF LPAR exp RPAR sentence
-- On SELFDESTRUCT reduce production sentence -> IF LPAR exp RPAR sentence
-- On RETURN reduce production sentence -> IF LPAR exp RPAR sentence
-- On RBRACE reduce production sentence -> IF LPAR exp RPAR sentence
-- On NOW reduce production sentence -> IF LPAR exp RPAR sentence
-- On NOT reduce production sentence -> IF LPAR exp RPAR sentence
-- On LPAR reduce production sentence -> IF LPAR exp RPAR sentence
-- On LOG reduce production sentence -> IF LPAR exp RPAR sentence
-- On IF reduce production sentence -> IF LPAR exp RPAR sentence
-- On IDENT reduce production sentence -> IF LPAR exp RPAR sentence
-- On FALSE reduce production sentence -> IF LPAR exp RPAR sentence
-- On DEPLOY reduce production sentence -> IF LPAR exp RPAR sentence
-- On DECLIT8 reduce production sentence -> IF LPAR exp RPAR sentence
-- On DECLIT256 reduce production sentence -> IF LPAR exp RPAR sentence
-- On BYTES32 reduce production sentence -> IF LPAR exp RPAR sentence
-- On BOOL reduce production sentence -> IF LPAR exp RPAR sentence
-- On BALANCE reduce production sentence -> IF LPAR exp RPAR sentence
-- On ADDRESS reduce production sentence -> IF LPAR exp RPAR sentence
-- On ABORT reduce production sentence -> IF LPAR exp RPAR sentence

State 168:
sentence -> IF LPAR exp RPAR sentence ELSE . sentence [ VOID VALUE UINT8 UINT256 TRUE THIS SENDER SELFDESTRUCT RETURN RBRACE NOW NOT LPAR LOG IF IDENT FALSE ELSE DEPLOY DECLIT8 DECLIT256 BYTES32 BOOL BALANCE ADDRESS ABORT ]
sentence -> IF LPAR exp RPAR sentence ELSE . block [ VOID VALUE UINT8 UINT256 TRUE THIS SENDER SELFDESTRUCT RETURN RBRACE NOW NOT LPAR LOG IF IDENT FALSE ELSE DEPLOY DECLIT8 DECLIT256 BYTES32 BOOL BALANCE ADDRESS ABORT ]
-- On VOID shift to state 54
-- On VALUE shift to state 56
-- On UINT8 shift to state 4
-- On UINT256 shift to state 5
-- On TRUE shift to state 60
-- On THIS shift to state 61
-- On SENDER shift to state 62
-- On SELFDESTRUCT shift to state 138
-- On RETURN shift to state 141
-- On NOW shift to state 66
-- On NOT shift to state 70
-- On LPAR shift to state 71
-- On LOG shift to state 148
-- On LBRACE shift to state 53
-- On IF shift to state 154
-- On IDENT shift to state 158
-- On FALSE shift to state 74
-- On DEPLOY shift to state 75
-- On DECLIT8 shift to state 78
-- On DECLIT256 shift to state 79
-- On BYTES32 shift to state 7
-- On BOOL shift to state 8
-- On BALANCE shift to state 80
-- On ADDRESS shift to state 159
-- On ABORT shift to state 160
-- On typ shift to state 162
-- On sentence shift to state 169
-- On lexp shift to state 170
-- On exp shift to state 174
-- On block shift to state 175

State 169:
sentence -> IF LPAR exp RPAR sentence ELSE sentence . [ VOID VALUE UINT8 UINT256 TRUE THIS SENDER SELFDESTRUCT RETURN RBRACE NOW NOT LPAR LOG IF IDENT FALSE ELSE DEPLOY DECLIT8 DECLIT256 BYTES32 BOOL BALANCE ADDRESS ABORT ]
-- On VOID reduce production sentence -> IF LPAR exp RPAR sentence ELSE sentence
-- On VALUE reduce production sentence -> IF LPAR exp RPAR sentence ELSE sentence
-- On UINT8 reduce production sentence -> IF LPAR exp RPAR sentence ELSE sentence
-- On UINT256 reduce production sentence -> IF LPAR exp RPAR sentence ELSE sentence
-- On TRUE reduce production sentence -> IF LPAR exp RPAR sentence ELSE sentence
-- On THIS reduce production sentence -> IF LPAR exp RPAR sentence ELSE sentence
-- On SENDER reduce production sentence -> IF LPAR exp RPAR sentence ELSE sentence
-- On SELFDESTRUCT reduce production sentence -> IF LPAR exp RPAR sentence ELSE sentence
-- On RETURN reduce production sentence -> IF LPAR exp RPAR sentence ELSE sentence
-- On RBRACE reduce production sentence -> IF LPAR exp RPAR sentence ELSE sentence
-- On NOW reduce production sentence -> IF LPAR exp RPAR sentence ELSE sentence
-- On NOT reduce production sentence -> IF LPAR exp RPAR sentence ELSE sentence
-- On LPAR reduce production sentence -> IF LPAR exp RPAR sentence ELSE sentence
-- On LOG reduce production sentence -> IF LPAR exp RPAR sentence ELSE sentence
-- On IF reduce production sentence -> IF LPAR exp RPAR sentence ELSE sentence
-- On IDENT reduce production sentence -> IF LPAR exp RPAR sentence ELSE sentence
-- On FALSE reduce production sentence -> IF LPAR exp RPAR sentence ELSE sentence
-- On ELSE reduce production sentence -> IF LPAR exp RPAR sentence ELSE sentence
-- On DEPLOY reduce production sentence -> IF LPAR exp RPAR sentence ELSE sentence
-- On DECLIT8 reduce production sentence -> IF LPAR exp RPAR sentence ELSE sentence
-- On DECLIT256 reduce production sentence -> IF LPAR exp RPAR sentence ELSE sentence
-- On BYTES32 reduce production sentence -> IF LPAR exp RPAR sentence ELSE sentence
-- On BOOL reduce production sentence -> IF LPAR exp RPAR sentence ELSE sentence
-- On BALANCE reduce production sentence -> IF LPAR exp RPAR sentence ELSE sentence
-- On ADDRESS reduce production sentence -> IF LPAR exp RPAR sentence ELSE sentence
-- On ABORT reduce production sentence -> IF LPAR exp RPAR sentence ELSE sentence

State 170:
exp -> lexp . [ PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT ]
sentence -> lexp . SINGLE_EQ exp SEMICOLON [ VOID VALUE UINT8 UINT256 TRUE THIS SENDER SELFDESTRUCT RETURN RBRACE NOW NOT LPAR LOG IF IDENT FALSE ELSE DEPLOY DECLIT8 DECLIT256 BYTES32 BOOL BALANCE ADDRESS ABORT ]
-- On SINGLE_EQ shift to state 171
-- On PLUS reduce production exp -> lexp
-- On NEQ reduce production exp -> lexp
-- On MULT reduce production exp -> lexp
-- On MINUS reduce production exp -> lexp
-- On LT reduce production exp -> lexp
-- On LSQBR reduce production exp -> lexp
-- On LAND reduce production exp -> lexp
-- On GT reduce production exp -> lexp
-- On EQUALITY reduce production exp -> lexp
-- On DOT reduce production exp -> lexp

State 171:
sentence -> lexp SINGLE_EQ . exp SEMICOLON [ VOID VALUE UINT8 UINT256 TRUE THIS SENDER SELFDESTRUCT RETURN RBRACE NOW NOT LPAR LOG IF IDENT FALSE ELSE DEPLOY DECLIT8 DECLIT256 BYTES32 BOOL BALANCE ADDRESS ABORT ]
-- On VALUE shift to state 56
-- On TRUE shift to state 60
-- On THIS shift to state 61
-- On SENDER shift to state 62
-- On NOW shift to state 66
-- On NOT shift to state 70
-- On LPAR shift to state 71
-- On IDENT shift to state 72
-- On FALSE shift to state 74
-- On DEPLOY shift to state 75
-- On DECLIT8 shift to state 78
-- On DECLIT256 shift to state 79
-- On BALANCE shift to state 80
-- On ADDRESS shift to state 82
-- On lexp shift to state 84
-- On exp shift to state 172

State 172:
exp -> exp . LAND exp [ SEMICOLON PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT ]
exp -> exp . PLUS exp [ SEMICOLON PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT ]
exp -> exp . MINUS exp [ SEMICOLON PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT ]
exp -> exp . MULT exp [ SEMICOLON PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT ]
exp -> exp . LT exp [ SEMICOLON PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT ]
exp -> exp . GT exp [ SEMICOLON PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT ]
exp -> exp . NEQ exp [ SEMICOLON PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT ]
exp -> exp . EQUALITY exp [ SEMICOLON PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT ]
exp -> exp . DOT DEFAULT LPAR RPAR msg_info [ SEMICOLON PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT ]
exp -> exp . DOT IDENT LPAR loption(separated_nonempty_list(COMMA,exp)) RPAR msg_info [ SEMICOLON PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT ]
lexp -> exp . LSQBR exp RSQBR [ SEMICOLON PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT ]
sentence -> lexp SINGLE_EQ exp . SEMICOLON [ VOID VALUE UINT8 UINT256 TRUE THIS SENDER SELFDESTRUCT RETURN RBRACE NOW NOT LPAR LOG IF IDENT FALSE ELSE DEPLOY DECLIT8 DECLIT256 BYTES32 BOOL BALANCE ADDRESS ABORT ]
-- On SEMICOLON shift to state 173
-- On PLUS shift to state 87
-- On NEQ shift to state 94
-- On MULT shift to state 89
-- On MINUS shift to state 96
-- On LT shift to state 106
-- On LSQBR shift to state 91
-- On LAND shift to state 108
-- On GT shift to state 110
-- On EQUALITY shift to state 112
-- On DOT shift to state 98

State 173:
sentence -> lexp SINGLE_EQ exp SEMICOLON . [ VOID VALUE UINT8 UINT256 TRUE THIS SENDER SELFDESTRUCT RETURN RBRACE NOW NOT LPAR LOG IF IDENT FALSE ELSE DEPLOY DECLIT8 DECLIT256 BYTES32 BOOL BALANCE ADDRESS ABORT ]
-- On VOID reduce production sentence -> lexp SINGLE_EQ exp SEMICOLON
-- On VALUE reduce production sentence -> lexp SINGLE_EQ exp SEMICOLON
-- On UINT8 reduce production sentence -> lexp SINGLE_EQ exp SEMICOLON
-- On UINT256 reduce production sentence -> lexp SINGLE_EQ exp SEMICOLON
-- On TRUE reduce production sentence -> lexp SINGLE_EQ exp SEMICOLON
-- On THIS reduce production sentence -> lexp SINGLE_EQ exp SEMICOLON
-- On SENDER reduce production sentence -> lexp SINGLE_EQ exp SEMICOLON
-- On SELFDESTRUCT reduce production sentence -> lexp SINGLE_EQ exp SEMICOLON
-- On RETURN reduce production sentence -> lexp SINGLE_EQ exp SEMICOLON
-- On RBRACE reduce production sentence -> lexp SINGLE_EQ exp SEMICOLON
-- On NOW reduce production sentence -> lexp SINGLE_EQ exp SEMICOLON
-- On NOT reduce production sentence -> lexp SINGLE_EQ exp SEMICOLON
-- On LPAR reduce production sentence -> lexp SINGLE_EQ exp SEMICOLON
-- On LOG reduce production sentence -> lexp SINGLE_EQ exp SEMICOLON
-- On IF reduce production sentence -> lexp SINGLE_EQ exp SEMICOLON
-- On IDENT reduce production sentence -> lexp SINGLE_EQ exp SEMICOLON
-- On FALSE reduce production sentence -> lexp SINGLE_EQ exp SEMICOLON
-- On ELSE reduce production sentence -> lexp SINGLE_EQ exp SEMICOLON
-- On DEPLOY reduce production sentence -> lexp SINGLE_EQ exp SEMICOLON
-- On DECLIT8 reduce production sentence -> lexp SINGLE_EQ exp SEMICOLON
-- On DECLIT256 reduce production sentence -> lexp SINGLE_EQ exp SEMICOLON
-- On BYTES32 reduce production sentence -> lexp SINGLE_EQ exp SEMICOLON
-- On BOOL reduce production sentence -> lexp SINGLE_EQ exp SEMICOLON
-- On BALANCE reduce production sentence -> lexp SINGLE_EQ exp SEMICOLON
-- On ADDRESS reduce production sentence -> lexp SINGLE_EQ exp SEMICOLON
-- On ABORT reduce production sentence -> lexp SINGLE_EQ exp SEMICOLON

State 174:
exp -> exp . LAND exp [ PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT ]
exp -> exp . PLUS exp [ PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT ]
exp -> exp . MINUS exp [ PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT ]
exp -> exp . MULT exp [ PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT ]
exp -> exp . LT exp [ PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT ]
exp -> exp . GT exp [ PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT ]
exp -> exp . NEQ exp [ PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT ]
exp -> exp . EQUALITY exp [ PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT ]
exp -> exp . DOT DEFAULT LPAR RPAR msg_info [ PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT ]
exp -> exp . DOT IDENT LPAR loption(separated_nonempty_list(COMMA,exp)) RPAR msg_info [ PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT ]
lexp -> exp . LSQBR exp RSQBR [ SINGLE_EQ PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT ]
-- On PLUS shift to state 87
-- On NEQ shift to state 94
-- On MULT shift to state 89
-- On MINUS shift to state 96
-- On LT shift to state 106
-- On LSQBR shift to state 91
-- On LAND shift to state 108
-- On GT shift to state 110
-- On EQUALITY shift to state 112
-- On DOT shift to state 98

State 175:
sentence -> IF LPAR exp RPAR sentence ELSE block . [ VOID VALUE UINT8 UINT256 TRUE THIS SENDER SELFDESTRUCT RETURN RBRACE NOW NOT LPAR LOG IF IDENT FALSE ELSE DEPLOY DECLIT8 DECLIT256 BYTES32 BOOL BALANCE ADDRESS ABORT ]
-- On VOID reduce production sentence -> IF LPAR exp RPAR sentence ELSE block
-- On VALUE reduce production sentence -> IF LPAR exp RPAR sentence ELSE block
-- On UINT8 reduce production sentence -> IF LPAR exp RPAR sentence ELSE block
-- On UINT256 reduce production sentence -> IF LPAR exp RPAR sentence ELSE block
-- On TRUE reduce production sentence -> IF LPAR exp RPAR sentence ELSE block
-- On THIS reduce production sentence -> IF LPAR exp RPAR sentence ELSE block
-- On SENDER reduce production sentence -> IF LPAR exp RPAR sentence ELSE block
-- On SELFDESTRUCT reduce production sentence -> IF LPAR exp RPAR sentence ELSE block
-- On RETURN reduce production sentence -> IF LPAR exp RPAR sentence ELSE block
-- On RBRACE reduce production sentence -> IF LPAR exp RPAR sentence ELSE block
-- On NOW reduce production sentence -> IF LPAR exp RPAR sentence ELSE block
-- On NOT reduce production sentence -> IF LPAR exp RPAR sentence ELSE block
-- On LPAR reduce production sentence -> IF LPAR exp RPAR sentence ELSE block
-- On LOG reduce production sentence -> IF LPAR exp RPAR sentence ELSE block
-- On IF reduce production sentence -> IF LPAR exp RPAR sentence ELSE block
-- On IDENT reduce production sentence -> IF LPAR exp RPAR sentence ELSE block
-- On FALSE reduce production sentence -> IF LPAR exp RPAR sentence ELSE block
-- On ELSE reduce production sentence -> IF LPAR exp RPAR sentence ELSE block
-- On DEPLOY reduce production sentence -> IF LPAR exp RPAR sentence ELSE block
-- On DECLIT8 reduce production sentence -> IF LPAR exp RPAR sentence ELSE block
-- On DECLIT256 reduce production sentence -> IF LPAR exp RPAR sentence ELSE block
-- On BYTES32 reduce production sentence -> IF LPAR exp RPAR sentence ELSE block
-- On BOOL reduce production sentence -> IF LPAR exp RPAR sentence ELSE block
-- On BALANCE reduce production sentence -> IF LPAR exp RPAR sentence ELSE block
-- On ADDRESS reduce production sentence -> IF LPAR exp RPAR sentence ELSE block
-- On ABORT reduce production sentence -> IF LPAR exp RPAR sentence ELSE block

State 176:
sentence -> IF LPAR exp RPAR block . ELSE sentence [ VOID VALUE UINT8 UINT256 TRUE THIS SENDER SELFDESTRUCT RETURN RBRACE NOW NOT LPAR LOG IF IDENT FALSE ELSE DEPLOY DECLIT8 DECLIT256 BYTES32 BOOL BALANCE ADDRESS ABORT ]
sentence -> IF LPAR exp RPAR block . ELSE block [ VOID VALUE UINT8 UINT256 TRUE THIS SENDER SELFDESTRUCT RETURN RBRACE NOW NOT LPAR LOG IF IDENT FALSE ELSE DEPLOY DECLIT8 DECLIT256 BYTES32 BOOL BALANCE ADDRESS ABORT ]
sentence -> IF LPAR exp RPAR block . [ VOID VALUE UINT8 UINT256 TRUE THIS SENDER SELFDESTRUCT RETURN RBRACE NOW NOT LPAR LOG IF IDENT FALSE ELSE DEPLOY DECLIT8 DECLIT256 BYTES32 BOOL BALANCE ADDRESS ABORT ]
-- On ELSE shift to state 177
-- On VOID reduce production sentence -> IF LPAR exp RPAR block
-- On VALUE reduce production sentence -> IF LPAR exp RPAR block
-- On UINT8 reduce production sentence -> IF LPAR exp RPAR block
-- On UINT256 reduce production sentence -> IF LPAR exp RPAR block
-- On TRUE reduce production sentence -> IF LPAR exp RPAR block
-- On THIS reduce production sentence -> IF LPAR exp RPAR block
-- On SENDER reduce production sentence -> IF LPAR exp RPAR block
-- On SELFDESTRUCT reduce production sentence -> IF LPAR exp RPAR block
-- On RETURN reduce production sentence -> IF LPAR exp RPAR block
-- On RBRACE reduce production sentence -> IF LPAR exp RPAR block
-- On NOW reduce production sentence -> IF LPAR exp RPAR block
-- On NOT reduce production sentence -> IF LPAR exp RPAR block
-- On LPAR reduce production sentence -> IF LPAR exp RPAR block
-- On LOG reduce production sentence -> IF LPAR exp RPAR block
-- On IF reduce production sentence -> IF LPAR exp RPAR block
-- On IDENT reduce production sentence -> IF LPAR exp RPAR block
-- On FALSE reduce production sentence -> IF LPAR exp RPAR block
-- On DEPLOY reduce production sentence -> IF LPAR exp RPAR block
-- On DECLIT8 reduce production sentence -> IF LPAR exp RPAR block
-- On DECLIT256 reduce production sentence -> IF LPAR exp RPAR block
-- On BYTES32 reduce production sentence -> IF LPAR exp RPAR block
-- On BOOL reduce production sentence -> IF LPAR exp RPAR block
-- On BALANCE reduce production sentence -> IF LPAR exp RPAR block
-- On ADDRESS reduce production sentence -> IF LPAR exp RPAR block
-- On ABORT reduce production sentence -> IF LPAR exp RPAR block

State 177:
sentence -> IF LPAR exp RPAR block ELSE . sentence [ VOID VALUE UINT8 UINT256 TRUE THIS SENDER SELFDESTRUCT RETURN RBRACE NOW NOT LPAR LOG IF IDENT FALSE ELSE DEPLOY DECLIT8 DECLIT256 BYTES32 BOOL BALANCE ADDRESS ABORT ]
sentence -> IF LPAR exp RPAR block ELSE . block [ VOID VALUE UINT8 UINT256 TRUE THIS SENDER SELFDESTRUCT RETURN RBRACE NOW NOT LPAR LOG IF IDENT FALSE ELSE DEPLOY DECLIT8 DECLIT256 BYTES32 BOOL BALANCE ADDRESS ABORT ]
-- On VOID shift to state 54
-- On VALUE shift to state 56
-- On UINT8 shift to state 4
-- On UINT256 shift to state 5
-- On TRUE shift to state 60
-- On THIS shift to state 61
-- On SENDER shift to state 62
-- On SELFDESTRUCT shift to state 138
-- On RETURN shift to state 141
-- On NOW shift to state 66
-- On NOT shift to state 70
-- On LPAR shift to state 71
-- On LOG shift to state 148
-- On LBRACE shift to state 53
-- On IF shift to state 154
-- On IDENT shift to state 158
-- On FALSE shift to state 74
-- On DEPLOY shift to state 75
-- On DECLIT8 shift to state 78
-- On DECLIT256 shift to state 79
-- On BYTES32 shift to state 7
-- On BOOL shift to state 8
-- On BALANCE shift to state 80
-- On ADDRESS shift to state 159
-- On ABORT shift to state 160
-- On typ shift to state 162
-- On sentence shift to state 178
-- On lexp shift to state 170
-- On exp shift to state 174
-- On block shift to state 179

State 178:
sentence -> IF LPAR exp RPAR block ELSE sentence . [ VOID VALUE UINT8 UINT256 TRUE THIS SENDER SELFDESTRUCT RETURN RBRACE NOW NOT LPAR LOG IF IDENT FALSE ELSE DEPLOY DECLIT8 DECLIT256 BYTES32 BOOL BALANCE ADDRESS ABORT ]
-- On VOID reduce production sentence -> IF LPAR exp RPAR block ELSE sentence
-- On VALUE reduce production sentence -> IF LPAR exp RPAR block ELSE sentence
-- On UINT8 reduce production sentence -> IF LPAR exp RPAR block ELSE sentence
-- On UINT256 reduce production sentence -> IF LPAR exp RPAR block ELSE sentence
-- On TRUE reduce production sentence -> IF LPAR exp RPAR block ELSE sentence
-- On THIS reduce production sentence -> IF LPAR exp RPAR block ELSE sentence
-- On SENDER reduce production sentence -> IF LPAR exp RPAR block ELSE sentence
-- On SELFDESTRUCT reduce production sentence -> IF LPAR exp RPAR block ELSE sentence
-- On RETURN reduce production sentence -> IF LPAR exp RPAR block ELSE sentence
-- On RBRACE reduce production sentence -> IF LPAR exp RPAR block ELSE sentence
-- On NOW reduce production sentence -> IF LPAR exp RPAR block ELSE sentence
-- On NOT reduce production sentence -> IF LPAR exp RPAR block ELSE sentence
-- On LPAR reduce production sentence -> IF LPAR exp RPAR block ELSE sentence
-- On LOG reduce production sentence -> IF LPAR exp RPAR block ELSE sentence
-- On IF reduce production sentence -> IF LPAR exp RPAR block ELSE sentence
-- On IDENT reduce production sentence -> IF LPAR exp RPAR block ELSE sentence
-- On FALSE reduce production sentence -> IF LPAR exp RPAR block ELSE sentence
-- On ELSE reduce production sentence -> IF LPAR exp RPAR block ELSE sentence
-- On DEPLOY reduce production sentence -> IF LPAR exp RPAR block ELSE sentence
-- On DECLIT8 reduce production sentence -> IF LPAR exp RPAR block ELSE sentence
-- On DECLIT256 reduce production sentence -> IF LPAR exp RPAR block ELSE sentence
-- On BYTES32 reduce production sentence -> IF LPAR exp RPAR block ELSE sentence
-- On BOOL reduce production sentence -> IF LPAR exp RPAR block ELSE sentence
-- On BALANCE reduce production sentence -> IF LPAR exp RPAR block ELSE sentence
-- On ADDRESS reduce production sentence -> IF LPAR exp RPAR block ELSE sentence
-- On ABORT reduce production sentence -> IF LPAR exp RPAR block ELSE sentence

State 179:
sentence -> IF LPAR exp RPAR block ELSE block . [ VOID VALUE UINT8 UINT256 TRUE THIS SENDER SELFDESTRUCT RETURN RBRACE NOW NOT LPAR LOG IF IDENT FALSE ELSE DEPLOY DECLIT8 DECLIT256 BYTES32 BOOL BALANCE ADDRESS ABORT ]
-- On VOID reduce production sentence -> IF LPAR exp RPAR block ELSE block
-- On VALUE reduce production sentence -> IF LPAR exp RPAR block ELSE block
-- On UINT8 reduce production sentence -> IF LPAR exp RPAR block ELSE block
-- On UINT256 reduce production sentence -> IF LPAR exp RPAR block ELSE block
-- On TRUE reduce production sentence -> IF LPAR exp RPAR block ELSE block
-- On THIS reduce production sentence -> IF LPAR exp RPAR block ELSE block
-- On SENDER reduce production sentence -> IF LPAR exp RPAR block ELSE block
-- On SELFDESTRUCT reduce production sentence -> IF LPAR exp RPAR block ELSE block
-- On RETURN reduce production sentence -> IF LPAR exp RPAR block ELSE block
-- On RBRACE reduce production sentence -> IF LPAR exp RPAR block ELSE block
-- On NOW reduce production sentence -> IF LPAR exp RPAR block ELSE block
-- On NOT reduce production sentence -> IF LPAR exp RPAR block ELSE block
-- On LPAR reduce production sentence -> IF LPAR exp RPAR block ELSE block
-- On LOG reduce production sentence -> IF LPAR exp RPAR block ELSE block
-- On IF reduce production sentence -> IF LPAR exp RPAR block ELSE block
-- On IDENT reduce production sentence -> IF LPAR exp RPAR block ELSE block
-- On FALSE reduce production sentence -> IF LPAR exp RPAR block ELSE block
-- On ELSE reduce production sentence -> IF LPAR exp RPAR block ELSE block
-- On DEPLOY reduce production sentence -> IF LPAR exp RPAR block ELSE block
-- On DECLIT8 reduce production sentence -> IF LPAR exp RPAR block ELSE block
-- On DECLIT256 reduce production sentence -> IF LPAR exp RPAR block ELSE block
-- On BYTES32 reduce production sentence -> IF LPAR exp RPAR block ELSE block
-- On BOOL reduce production sentence -> IF LPAR exp RPAR block ELSE block
-- On BALANCE reduce production sentence -> IF LPAR exp RPAR block ELSE block
-- On ADDRESS reduce production sentence -> IF LPAR exp RPAR block ELSE block
-- On ABORT reduce production sentence -> IF LPAR exp RPAR block ELSE block

State 180:
list(sentence) -> sentence . list(sentence) [ RBRACE ]
-- On VOID shift to state 54
-- On VALUE shift to state 56
-- On UINT8 shift to state 4
-- On UINT256 shift to state 5
-- On TRUE shift to state 60
-- On THIS shift to state 61
-- On SENDER shift to state 62
-- On SELFDESTRUCT shift to state 138
-- On RETURN shift to state 141
-- On NOW shift to state 66
-- On NOT shift to state 70
-- On LPAR shift to state 71
-- On LOG shift to state 148
-- On IF shift to state 154
-- On IDENT shift to state 158
-- On FALSE shift to state 74
-- On DEPLOY shift to state 75
-- On DECLIT8 shift to state 78
-- On DECLIT256 shift to state 79
-- On BYTES32 shift to state 7
-- On BOOL shift to state 8
-- On BALANCE shift to state 80
-- On ADDRESS shift to state 159
-- On ABORT shift to state 160
-- On typ shift to state 162
-- On sentence shift to state 180
-- On list(sentence) shift to state 181
-- On lexp shift to state 170
-- On exp shift to state 174
-- On RBRACE reduce production list(sentence) ->

State 181:
list(sentence) -> sentence list(sentence) . [ RBRACE ]
-- On RBRACE reduce production list(sentence) -> sentence list(sentence)

State 182:
block -> LBRACE list(sentence) . RBRACE [ VOID VALUE UINT8 UINT256 TRUE THIS THEN SENDER SEMICOLON SELFDESTRUCT RSQBR RPAR RETURN REENTRANCE RBRACE PLUS NOW NOT NEQ MULT MINUS LT LSQBR LPAR LOG LAND IF IDENT GT FALSE EQUALITY ELSE DOT DEPLOY DEFAULT DECLIT8 DECLIT256 COMMA CASE BYTES32 BOOL BALANCE ADDRESS ABORT ]
-- On RBRACE shift to state 183

State 183:
block -> LBRACE list(sentence) RBRACE . [ VOID VALUE UINT8 UINT256 TRUE THIS THEN SENDER SEMICOLON SELFDESTRUCT RSQBR RPAR RETURN REENTRANCE RBRACE PLUS NOW NOT NEQ MULT MINUS LT LSQBR LPAR LOG LAND IF IDENT GT FALSE EQUALITY ELSE DOT DEPLOY DEFAULT DECLIT8 DECLIT256 COMMA CASE BYTES32 BOOL BALANCE ADDRESS ABORT ]
-- On VOID reduce production block -> LBRACE list(sentence) RBRACE
-- On VALUE reduce production block -> LBRACE list(sentence) RBRACE
-- On UINT8 reduce production block -> LBRACE list(sentence) RBRACE
-- On UINT256 reduce production block -> LBRACE list(sentence) RBRACE
-- On TRUE reduce production block -> LBRACE list(sentence) RBRACE
-- On THIS reduce production block -> LBRACE list(sentence) RBRACE
-- On THEN reduce production block -> LBRACE list(sentence) RBRACE
-- On SENDER reduce production block -> LBRACE list(sentence) RBRACE
-- On SEMICOLON reduce production block -> LBRACE list(sentence) RBRACE
-- On SELFDESTRUCT reduce production block -> LBRACE list(sentence) RBRACE
-- On RSQBR reduce production block -> LBRACE list(sentence) RBRACE
-- On RPAR reduce production block -> LBRACE list(sentence) RBRACE
-- On RETURN reduce production block -> LBRACE list(sentence) RBRACE
-- On REENTRANCE reduce production block -> LBRACE list(sentence) RBRACE
-- On RBRACE reduce production block -> LBRACE list(sentence) RBRACE
-- On PLUS reduce production block -> LBRACE list(sentence) RBRACE
-- On NOW reduce production block -> LBRACE list(sentence) RBRACE
-- On NOT reduce production block -> LBRACE list(sentence) RBRACE
-- On NEQ reduce production block -> LBRACE list(sentence) RBRACE
-- On MULT reduce production block -> LBRACE list(sentence) RBRACE
-- On MINUS reduce production block -> LBRACE list(sentence) RBRACE
-- On LT reduce production block -> LBRACE list(sentence) RBRACE
-- On LSQBR reduce production block -> LBRACE list(sentence) RBRACE
-- On LPAR reduce production block -> LBRACE list(sentence) RBRACE
-- On LOG reduce production block -> LBRACE list(sentence) RBRACE
-- On LAND reduce production block -> LBRACE list(sentence) RBRACE
-- On IF reduce production block -> LBRACE list(sentence) RBRACE
-- On IDENT reduce production block -> LBRACE list(sentence) RBRACE
-- On GT reduce production block -> LBRACE list(sentence) RBRACE
-- On FALSE reduce production block -> LBRACE list(sentence) RBRACE
-- On EQUALITY reduce production block -> LBRACE list(sentence) RBRACE
-- On ELSE reduce production block -> LBRACE list(sentence) RBRACE
-- On DOT reduce production block -> LBRACE list(sentence) RBRACE
-- On DEPLOY reduce production block -> LBRACE list(sentence) RBRACE
-- On DEFAULT reduce production block -> LBRACE list(sentence) RBRACE
-- On DECLIT8 reduce production block -> LBRACE list(sentence) RBRACE
-- On DECLIT256 reduce production block -> LBRACE list(sentence) RBRACE
-- On COMMA reduce production block -> LBRACE list(sentence) RBRACE
-- On CASE reduce production block -> LBRACE list(sentence) RBRACE
-- On BYTES32 reduce production block -> LBRACE list(sentence) RBRACE
-- On BOOL reduce production block -> LBRACE list(sentence) RBRACE
-- On BALANCE reduce production block -> LBRACE list(sentence) RBRACE
-- On ADDRESS reduce production block -> LBRACE list(sentence) RBRACE
-- On ABORT reduce production block -> LBRACE list(sentence) RBRACE

State 184:
case -> case_header block . [ RBRACE DEFAULT CASE ]
-- On RBRACE reduce production case -> case_header block
-- On DEFAULT reduce production case -> case_header block
-- On CASE reduce production case -> case_header block

State 185:
list(case) -> case . list(case) [ RBRACE ]
-- On DEFAULT shift to state 32
-- On CASE shift to state 33
-- On list(case) shift to state 186
-- On case_header shift to state 52
-- On case shift to state 185
-- On RBRACE reduce production list(case) ->

State 186:
list(case) -> case list(case) . [ RBRACE ]
-- On RBRACE reduce production list(case) -> case list(case)

State 187:
file -> list(contract) . EOF [ # ]
-- On EOF shift to state 188

State 188:
file -> list(contract) EOF . [ # ]
-- On # reduce production file -> list(contract) EOF

State 189:
file' -> file . [ # ]
-- On # accept file

State 190:
list(contract) -> contract . list(contract) [ EOF ]
-- On EVENT shift to state 1
-- On CONTRACT shift to state 24
-- On list(contract) shift to state 191
-- On contract shift to state 190
-- On EOF reduce production list(contract) ->

State 191:
list(contract) -> contract list(contract) . [ EOF ]
-- On EOF reduce production list(contract) -> contract list(contract)

