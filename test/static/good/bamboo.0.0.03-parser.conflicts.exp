
** Conflict (shift/reduce) in state 176.
** Token involved: ELSE
** This state is reached from file after reading:

CONTRACT IDENT LPAR loption(separated_nonempty_list(COMMA,arg)) RPAR LBRACE case_header LBRACE IF LPAR exp RPAR IF LPAR exp RPAR block

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

file 
list(contract) EOF 
contract list(contract) 
CONTRACT IDENT LPAR loption(separated_nonempty_list(COMMA,arg)) RPAR LBRACE list(case) RBRACE 
                                                                            case list(case) 
                                                                            case_header block 
                                                                                        LBRACE list(sentence) RBRACE 
                                                                                               sentence list(sentence) 
                                                                                               (?)

** In state 176, looking ahead at ELSE, shifting is permitted
** because of the following sub-derivation:

IF LPAR exp RPAR sentence ELSE sentence 
                 IF LPAR exp RPAR block . ELSE sentence 

** In state 176, looking ahead at ELSE, reducing production
** sentence -> IF LPAR exp RPAR block
** is permitted because of the following sub-derivation:

IF LPAR exp RPAR sentence ELSE sentence // lookahead token appears
                 IF LPAR exp RPAR block . 

** Conflict (shift/reduce) in state 167.
** Token involved: ELSE
** This state is reached from file after reading:

CONTRACT IDENT LPAR loption(separated_nonempty_list(COMMA,arg)) RPAR LBRACE case_header LBRACE IF LPAR exp RPAR IF LPAR exp RPAR sentence

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

file 
list(contract) EOF 
contract list(contract) 
CONTRACT IDENT LPAR loption(separated_nonempty_list(COMMA,arg)) RPAR LBRACE list(case) RBRACE 
                                                                            case list(case) 
                                                                            case_header block 
                                                                                        LBRACE list(sentence) RBRACE 
                                                                                               sentence list(sentence) 
                                                                                               (?)

** In state 167, looking ahead at ELSE, shifting is permitted
** because of the following sub-derivation:

IF LPAR exp RPAR sentence ELSE sentence 
                 IF LPAR exp RPAR sentence . ELSE sentence 

** In state 167, looking ahead at ELSE, reducing production
** sentence -> IF LPAR exp RPAR sentence
** is permitted because of the following sub-derivation:

IF LPAR exp RPAR sentence ELSE sentence // lookahead token appears
                 IF LPAR exp RPAR sentence . 

** Conflict (shift/reduce) in state 135.
** Tokens involved: PLUS NEQ MULT MINUS LT LSQBR LAND GT EQUALITY DOT
** The following explanations concentrate on token PLUS.
** This state is reached from file after reading:

CONTRACT IDENT LPAR loption(separated_nonempty_list(COMMA,arg)) RPAR LBRACE case_header LBRACE NOT exp

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

file 
list(contract) EOF 
contract list(contract) 
CONTRACT IDENT LPAR loption(separated_nonempty_list(COMMA,arg)) RPAR LBRACE list(case) RBRACE 
                                                                            case list(case) 
                                                                            case_header block 
                                                                                        LBRACE list(sentence) RBRACE 
                                                                                               sentence list(sentence) 
                                                                                               lexp SINGLE_EQ exp SEMICOLON 
                                                                                               exp LSQBR exp RSQBR 
                                                                                               (?)

** In state 135, looking ahead at PLUS, shifting is permitted
** because of the following sub-derivation:

NOT exp 
    exp . PLUS exp 

** In state 135, looking ahead at PLUS, reducing production
** exp -> NOT exp
** is permitted because of the following sub-derivation:

exp PLUS exp // lookahead token appears
NOT exp . 

** Conflict (shift/reduce) in state 113.
** Tokens involved: LSQBR DOT
** The following explanations concentrate on token LSQBR.
** This state is reached from file after reading:

CONTRACT IDENT LPAR loption(separated_nonempty_list(COMMA,arg)) RPAR LBRACE case_header LBRACE exp EQUALITY exp

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

file 
list(contract) EOF 
contract list(contract) 
CONTRACT IDENT LPAR loption(separated_nonempty_list(COMMA,arg)) RPAR LBRACE list(case) RBRACE 
                                                                            case list(case) 
                                                                            case_header block 
                                                                                        LBRACE list(sentence) RBRACE 
                                                                                               sentence list(sentence) 
                                                                                               lexp SINGLE_EQ exp SEMICOLON 
                                                                                               (?)

** In state 113, looking ahead at LSQBR, reducing production
** exp -> exp EQUALITY exp
** is permitted because of the following sub-derivation:

exp LSQBR exp RSQBR // lookahead token appears
exp EQUALITY exp . 

** In state 113, looking ahead at LSQBR, shifting is permitted
** because of the following sub-derivation:

exp LSQBR exp RSQBR 
exp EQUALITY exp 
             lexp 
             exp . LSQBR exp RSQBR 

** Conflict (shift/reduce) in state 111.
** Tokens involved: LSQBR DOT
** The following explanations concentrate on token LSQBR.
** This state is reached from file after reading:

CONTRACT IDENT LPAR loption(separated_nonempty_list(COMMA,arg)) RPAR LBRACE case_header LBRACE exp GT exp

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

file 
list(contract) EOF 
contract list(contract) 
CONTRACT IDENT LPAR loption(separated_nonempty_list(COMMA,arg)) RPAR LBRACE list(case) RBRACE 
                                                                            case list(case) 
                                                                            case_header block 
                                                                                        LBRACE list(sentence) RBRACE 
                                                                                               sentence list(sentence) 
                                                                                               lexp SINGLE_EQ exp SEMICOLON 
                                                                                               (?)

** In state 111, looking ahead at LSQBR, reducing production
** exp -> exp GT exp
** is permitted because of the following sub-derivation:

exp LSQBR exp RSQBR // lookahead token appears
exp GT exp . 

** In state 111, looking ahead at LSQBR, shifting is permitted
** because of the following sub-derivation:

exp LSQBR exp RSQBR 
exp GT exp 
       lexp 
       exp . LSQBR exp RSQBR 

** Conflict (shift/reduce) in state 109.
** Tokens involved: LSQBR DOT
** The following explanations concentrate on token LSQBR.
** This state is reached from file after reading:

CONTRACT IDENT LPAR loption(separated_nonempty_list(COMMA,arg)) RPAR LBRACE case_header LBRACE exp LAND exp

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

file 
list(contract) EOF 
contract list(contract) 
CONTRACT IDENT LPAR loption(separated_nonempty_list(COMMA,arg)) RPAR LBRACE list(case) RBRACE 
                                                                            case list(case) 
                                                                            case_header block 
                                                                                        LBRACE list(sentence) RBRACE 
                                                                                               sentence list(sentence) 
                                                                                               lexp SINGLE_EQ exp SEMICOLON 
                                                                                               (?)

** In state 109, looking ahead at LSQBR, reducing production
** exp -> exp LAND exp
** is permitted because of the following sub-derivation:

exp LSQBR exp RSQBR // lookahead token appears
exp LAND exp . 

** In state 109, looking ahead at LSQBR, shifting is permitted
** because of the following sub-derivation:

exp LSQBR exp RSQBR 
exp LAND exp 
         lexp 
         exp . LSQBR exp RSQBR 

** Conflict (shift/reduce) in state 107.
** Tokens involved: LSQBR DOT
** The following explanations concentrate on token LSQBR.
** This state is reached from file after reading:

CONTRACT IDENT LPAR loption(separated_nonempty_list(COMMA,arg)) RPAR LBRACE case_header LBRACE exp LT exp

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

file 
list(contract) EOF 
contract list(contract) 
CONTRACT IDENT LPAR loption(separated_nonempty_list(COMMA,arg)) RPAR LBRACE list(case) RBRACE 
                                                                            case list(case) 
                                                                            case_header block 
                                                                                        LBRACE list(sentence) RBRACE 
                                                                                               sentence list(sentence) 
                                                                                               lexp SINGLE_EQ exp SEMICOLON 
                                                                                               (?)

** In state 107, looking ahead at LSQBR, reducing production
** exp -> exp LT exp
** is permitted because of the following sub-derivation:

exp LSQBR exp RSQBR // lookahead token appears
exp LT exp . 

** In state 107, looking ahead at LSQBR, shifting is permitted
** because of the following sub-derivation:

exp LSQBR exp RSQBR 
exp LT exp 
       lexp 
       exp . LSQBR exp RSQBR 

** Conflict (shift/reduce) in state 97.
** Tokens involved: LSQBR DOT
** The following explanations concentrate on token LSQBR.
** This state is reached from file after reading:

CONTRACT IDENT LPAR loption(separated_nonempty_list(COMMA,arg)) RPAR LBRACE case_header LBRACE exp MINUS exp

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

file 
list(contract) EOF 
contract list(contract) 
CONTRACT IDENT LPAR loption(separated_nonempty_list(COMMA,arg)) RPAR LBRACE list(case) RBRACE 
                                                                            case list(case) 
                                                                            case_header block 
                                                                                        LBRACE list(sentence) RBRACE 
                                                                                               sentence list(sentence) 
                                                                                               lexp SINGLE_EQ exp SEMICOLON 
                                                                                               (?)

** In state 97, looking ahead at LSQBR, reducing production
** exp -> exp MINUS exp
** is permitted because of the following sub-derivation:

exp LSQBR exp RSQBR // lookahead token appears
exp MINUS exp . 

** In state 97, looking ahead at LSQBR, shifting is permitted
** because of the following sub-derivation:

exp LSQBR exp RSQBR 
exp MINUS exp 
          lexp 
          exp . LSQBR exp RSQBR 

** Conflict (shift/reduce) in state 95.
** Tokens involved: LSQBR DOT
** The following explanations concentrate on token LSQBR.
** This state is reached from file after reading:

CONTRACT IDENT LPAR loption(separated_nonempty_list(COMMA,arg)) RPAR LBRACE case_header LBRACE exp NEQ exp

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

file 
list(contract) EOF 
contract list(contract) 
CONTRACT IDENT LPAR loption(separated_nonempty_list(COMMA,arg)) RPAR LBRACE list(case) RBRACE 
                                                                            case list(case) 
                                                                            case_header block 
                                                                                        LBRACE list(sentence) RBRACE 
                                                                                               sentence list(sentence) 
                                                                                               lexp SINGLE_EQ exp SEMICOLON 
                                                                                               (?)

** In state 95, looking ahead at LSQBR, reducing production
** exp -> exp NEQ exp
** is permitted because of the following sub-derivation:

exp LSQBR exp RSQBR // lookahead token appears
exp NEQ exp . 

** In state 95, looking ahead at LSQBR, shifting is permitted
** because of the following sub-derivation:

exp LSQBR exp RSQBR 
exp NEQ exp 
        lexp 
        exp . LSQBR exp RSQBR 

** Conflict (shift/reduce) in state 90.
** Tokens involved: LSQBR DOT
** The following explanations concentrate on token LSQBR.
** This state is reached from file after reading:

CONTRACT IDENT LPAR loption(separated_nonempty_list(COMMA,arg)) RPAR LBRACE case_header LBRACE exp MULT exp

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

file 
list(contract) EOF 
contract list(contract) 
CONTRACT IDENT LPAR loption(separated_nonempty_list(COMMA,arg)) RPAR LBRACE list(case) RBRACE 
                                                                            case list(case) 
                                                                            case_header block 
                                                                                        LBRACE list(sentence) RBRACE 
                                                                                               sentence list(sentence) 
                                                                                               lexp SINGLE_EQ exp SEMICOLON 
                                                                                               (?)

** In state 90, looking ahead at LSQBR, reducing production
** exp -> exp MULT exp
** is permitted because of the following sub-derivation:

exp LSQBR exp RSQBR // lookahead token appears
exp MULT exp . 

** In state 90, looking ahead at LSQBR, shifting is permitted
** because of the following sub-derivation:

exp LSQBR exp RSQBR 
exp MULT exp 
         lexp 
         exp . LSQBR exp RSQBR 

** Conflict (shift/reduce) in state 88.
** Tokens involved: LSQBR DOT
** The following explanations concentrate on token LSQBR.
** This state is reached from file after reading:

CONTRACT IDENT LPAR loption(separated_nonempty_list(COMMA,arg)) RPAR LBRACE case_header LBRACE exp PLUS exp

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

file 
list(contract) EOF 
contract list(contract) 
CONTRACT IDENT LPAR loption(separated_nonempty_list(COMMA,arg)) RPAR LBRACE list(case) RBRACE 
                                                                            case list(case) 
                                                                            case_header block 
                                                                                        LBRACE list(sentence) RBRACE 
                                                                                               sentence list(sentence) 
                                                                                               lexp SINGLE_EQ exp SEMICOLON 
                                                                                               (?)

** In state 88, looking ahead at LSQBR, reducing production
** exp -> exp PLUS exp
** is permitted because of the following sub-derivation:

exp LSQBR exp RSQBR // lookahead token appears
exp PLUS exp . 

** In state 88, looking ahead at LSQBR, shifting is permitted
** because of the following sub-derivation:

exp LSQBR exp RSQBR 
exp PLUS exp 
         lexp 
         exp . LSQBR exp RSQBR 
