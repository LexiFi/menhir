Grammar has 4 nonterminal symbols, among which 1 start symbols.
Grammar has 8 terminal symbols.
Grammar has 10 productions.
nullable(multiplicative_expr) = false
nullable(main) = false
nullable(atomic_expr) = false
nullable(additive_expr) = false
first(multiplicative_expr) = MINUS LPAREN INT
first(main) = MINUS LPAREN INT
first(atomic_expr) = MINUS LPAREN INT
first(additive_expr) = MINUS LPAREN INT
minimal(multiplicative_expr) = (* 1 *) INT
minimal(main) = (* 2 *) INT EOL
minimal(atomic_expr) = (* 1 *) INT
minimal(additive_expr) = (* 1 *) INT
follow(multiplicative_expr) = TIMES RPAREN PLUS MINUS EOL DIV
follow(main) = #
follow(atomic_expr) = TIMES RPAREN PLUS MINUS EOL DIV
follow(additive_expr) = RPAREN PLUS MINUS EOL
Built an LR(0) automaton with 20 states.
The grammar is SLR(1).
The construction mode is pager.
Built an LR(1) automaton with 20 states.
8 out of 20 states have a default reduction.
7 out of 20 states are represented.
0 out of 15 symbols keep track of their start position.
0 out of 15 symbols keep track of their end position.
8 out of 11 productions exploit shiftreduce optimization.
0 out of 20 states can peek at an error.
60 functions before inlining, 14 functions after inlining.
