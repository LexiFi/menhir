Grammar has 9 nonterminal symbols, among which 1 start symbols.
Grammar has 8 terminal symbols.
Grammar has 16 productions.
nullable(term) = false
nullable(separated_nonempty_list(DOT,clause)) = false
nullable(separated_nonempty_list(COMMA,term)) = false
nullable(params) = false
nullable(option(params)) = true
nullable(loption(separated_nonempty_list(DOT,clause))) = true
nullable(loption(separated_nonempty_list(COMMA,term))) = true
nullable(clauses) = false
nullable(clause) = false
first(term) = VARIABLE IDENTIFIER
first(separated_nonempty_list(DOT,clause)) = VARIABLE IDENTIFIER
first(separated_nonempty_list(COMMA,term)) = VARIABLE IDENTIFIER
first(params) = LPARENT
first(option(params)) = LPARENT
first(loption(separated_nonempty_list(DOT,clause))) = VARIABLE IDENTIFIER
first(loption(separated_nonempty_list(COMMA,term))) = VARIABLE IDENTIFIER
first(clauses) = VARIABLE IDENTIFIER EOF
first(clause) = VARIABLE IDENTIFIER
minimal(term) = (* 1 *) IDENTIFIER
minimal(separated_nonempty_list(DOT,clause)) = (* 1 *) IDENTIFIER
minimal(separated_nonempty_list(COMMA,term)) = (* 1 *) IDENTIFIER
minimal(params) = (* 2 *) LPARENT RPARENT
minimal(option(params)) = (* 0 *)
minimal(loption(separated_nonempty_list(DOT,clause))) = (* 0 *)
minimal(loption(separated_nonempty_list(COMMA,term))) = (* 0 *)
minimal(clauses) = (* 1 *) EOF
minimal(clause) = (* 1 *) IDENTIFIER
maximal(term) = infinity
maximal(separated_nonempty_list(DOT,clause)) = infinity
maximal(separated_nonempty_list(COMMA,term)) = infinity
maximal(params) = infinity
maximal(option(params)) = infinity
maximal(loption(separated_nonempty_list(DOT,clause))) = infinity
maximal(loption(separated_nonempty_list(COMMA,term))) = infinity
maximal(clauses) = infinity
maximal(clause) = infinity
follow(term) = RPARENT INFERS EOF DOT COMMA
follow(separated_nonempty_list(DOT,clause)) = EOF
follow(separated_nonempty_list(COMMA,term)) = RPARENT EOF DOT
follow(params) = RPARENT INFERS EOF DOT COMMA
follow(option(params)) = RPARENT INFERS EOF DOT COMMA
follow(loption(separated_nonempty_list(DOT,clause))) = EOF
follow(loption(separated_nonempty_list(COMMA,term))) = RPARENT EOF DOT
follow(clauses) = #
follow(clause) = EOF DOT
Built an LR(0) automaton with 22 states.
The grammar is SLR(1).
The construction mode is pager.
Built an LR(1) automaton with 22 states.
11 out of 22 states have a default reduction.
5 out of 22 states are represented.
0 out of 20 symbols keep track of their start position.
0 out of 20 symbols keep track of their end position.
10 out of 17 productions exploit shiftreduce optimization.
0 out of 22 states can peek at an error.
75 functions before inlining, 14 functions after inlining.
