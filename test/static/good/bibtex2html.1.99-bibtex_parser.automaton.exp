State 0:
## Known stack suffix:
##
## LR(1) items:
command' -> . command [ # ]
## Transitions:
-- On Tpreamble shift to state 1
-- On Tentry shift to state 9
-- On Tcomment shift to state 10
-- On Tabbrev shift to state 11
-- On entry shift to state 16
-- On command shift to state 28
## Reductions:

State 1:
## Known stack suffix:
## Tpreamble
## LR(1) items:
command -> Tpreamble . sharp_string_list Trbrace [ # ]
## Transitions:
-- On Tstring shift to state 2
-- On Tident shift to state 3
-- On sharp_string_list shift to state 4
-- On atom shift to state 6
## Reductions:

State 2:
## Known stack suffix:
## Tstring
## LR(1) items:
atom -> Tstring . [ Tsharp Trbrace Tcomma ]
## Transitions:
## Reductions:
-- On Tsharp Trbrace Tcomma
--   reduce production atom -> Tstring

State 3:
## Known stack suffix:
## Tident
## LR(1) items:
atom -> Tident . [ Tsharp Trbrace Tcomma ]
## Transitions:
## Reductions:
-- On Tsharp Trbrace Tcomma
--   reduce production atom -> Tident

State 4:
## Known stack suffix:
## Tpreamble sharp_string_list
## LR(1) items:
command -> Tpreamble sharp_string_list . Trbrace [ # ]
## Transitions:
-- On Trbrace shift to state 5
## Reductions:

State 5:
## Known stack suffix:
## Tpreamble sharp_string_list Trbrace
## LR(1) items:
command -> Tpreamble sharp_string_list Trbrace . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production command -> Tpreamble sharp_string_list Trbrace

State 6:
## Known stack suffix:
## atom
## LR(1) items:
sharp_string_list -> atom . Tsharp sharp_string_list [ Trbrace Tcomma ]
sharp_string_list -> atom . [ Trbrace Tcomma ]
## Transitions:
-- On Tsharp shift to state 7
## Reductions:
-- On Trbrace Tcomma
--   reduce production sharp_string_list -> atom

State 7:
## Known stack suffix:
## atom Tsharp
## LR(1) items:
sharp_string_list -> atom Tsharp . sharp_string_list [ Trbrace Tcomma ]
## Transitions:
-- On Tstring shift to state 2
-- On Tident shift to state 3
-- On sharp_string_list shift to state 8
-- On atom shift to state 6
## Reductions:

State 8:
## Known stack suffix:
## atom Tsharp sharp_string_list
## LR(1) items:
sharp_string_list -> atom Tsharp sharp_string_list . [ Trbrace Tcomma ]
## Transitions:
## Reductions:
-- On Trbrace Tcomma
--   reduce production sharp_string_list -> atom Tsharp sharp_string_list

State 9:
## Known stack suffix:
## Tentry
## LR(1) items:
entry -> Tentry . [ Tcomma ]
## Transitions:
## Reductions:
-- On Tcomma
--   reduce production entry -> Tentry

State 10:
## Known stack suffix:
## Tcomment
## LR(1) items:
command -> Tcomment . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production command -> Tcomment

State 11:
## Known stack suffix:
## Tabbrev
## LR(1) items:
command -> Tabbrev . Tident Tequal sharp_string_list Trbrace [ # ]
## Transitions:
-- On Tident shift to state 12
## Reductions:

State 12:
## Known stack suffix:
## Tabbrev Tident
## LR(1) items:
command -> Tabbrev Tident . Tequal sharp_string_list Trbrace [ # ]
## Transitions:
-- On Tequal shift to state 13
## Reductions:

State 13:
## Known stack suffix:
## Tabbrev Tident Tequal
## LR(1) items:
command -> Tabbrev Tident Tequal . sharp_string_list Trbrace [ # ]
## Transitions:
-- On Tstring shift to state 2
-- On Tident shift to state 3
-- On sharp_string_list shift to state 14
-- On atom shift to state 6
## Reductions:

State 14:
## Known stack suffix:
## Tabbrev Tident Tequal sharp_string_list
## LR(1) items:
command -> Tabbrev Tident Tequal sharp_string_list . Trbrace [ # ]
## Transitions:
-- On Trbrace shift to state 15
## Reductions:

State 15:
## Known stack suffix:
## Tabbrev Tident Tequal sharp_string_list Trbrace
## LR(1) items:
command -> Tabbrev Tident Tequal sharp_string_list Trbrace . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production command -> Tabbrev Tident Tequal sharp_string_list Trbrace

State 16:
## Known stack suffix:
## entry
## LR(1) items:
command -> entry . Tcomma comma_field_list Trbrace [ # ]
## Transitions:
-- On Tcomma shift to state 17
## Reductions:

State 17:
## Known stack suffix:
## entry Tcomma
## LR(1) items:
command -> entry Tcomma . comma_field_list Trbrace [ # ]
## Transitions:
-- On Tident shift to state 18
-- On Tcomment shift to state 19
-- On field_name shift to state 20
-- On field shift to state 23
-- On comma_field_list shift to state 26
## Reductions:

State 18:
## Known stack suffix:
## Tident
## LR(1) items:
field_name -> Tident . [ Tequal ]
## Transitions:
## Reductions:
-- On Tequal
--   reduce production field_name -> Tident

State 19:
## Known stack suffix:
## Tcomment
## LR(1) items:
field_name -> Tcomment . [ Tequal ]
## Transitions:
## Reductions:
-- On Tequal
--   reduce production field_name -> Tcomment

State 20:
## Known stack suffix:
## field_name
## LR(1) items:
field -> field_name . Tequal sharp_string_list [ Trbrace Tcomma ]
field -> field_name . Tequal [ Trbrace Tcomma ]
## Transitions:
-- On Tequal shift to state 21
## Reductions:

State 21:
## Known stack suffix:
## field_name Tequal
## LR(1) items:
field -> field_name Tequal . sharp_string_list [ Trbrace Tcomma ]
field -> field_name Tequal . [ Trbrace Tcomma ]
## Transitions:
-- On Tstring shift to state 2
-- On Tident shift to state 3
-- On sharp_string_list shift to state 22
-- On atom shift to state 6
## Reductions:
-- On Trbrace Tcomma
--   reduce production field -> field_name Tequal

State 22:
## Known stack suffix:
## field_name Tequal sharp_string_list
## LR(1) items:
field -> field_name Tequal sharp_string_list . [ Trbrace Tcomma ]
## Transitions:
## Reductions:
-- On Trbrace Tcomma
--   reduce production field -> field_name Tequal sharp_string_list

State 23:
## Known stack suffix:
## field
## LR(1) items:
comma_field_list -> field . Tcomma comma_field_list [ Trbrace ]
comma_field_list -> field . [ Trbrace ]
comma_field_list -> field . Tcomma [ Trbrace ]
## Transitions:
-- On Tcomma shift to state 24
## Reductions:
-- On Trbrace
--   reduce production comma_field_list -> field

State 24:
## Known stack suffix:
## field Tcomma
## LR(1) items:
comma_field_list -> field Tcomma . comma_field_list [ Trbrace ]
comma_field_list -> field Tcomma . [ Trbrace ]
## Transitions:
-- On Tident shift to state 18
-- On Tcomment shift to state 19
-- On field_name shift to state 20
-- On field shift to state 23
-- On comma_field_list shift to state 25
## Reductions:
-- On Trbrace
--   reduce production comma_field_list -> field Tcomma

State 25:
## Known stack suffix:
## field Tcomma comma_field_list
## LR(1) items:
comma_field_list -> field Tcomma comma_field_list . [ Trbrace ]
## Transitions:
## Reductions:
-- On Trbrace
--   reduce production comma_field_list -> field Tcomma comma_field_list

State 26:
## Known stack suffix:
## entry Tcomma comma_field_list
## LR(1) items:
command -> entry Tcomma comma_field_list . Trbrace [ # ]
## Transitions:
-- On Trbrace shift to state 27
## Reductions:

State 27:
## Known stack suffix:
## entry Tcomma comma_field_list Trbrace
## LR(1) items:
command -> entry Tcomma comma_field_list Trbrace . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production command -> entry Tcomma comma_field_list Trbrace

State 28:
## Known stack suffix:
## command
## LR(1) items:
command' -> command . [ # ]
## Transitions:
## Reductions:
-- On #
--   accept command

State 29:
## Known stack suffix:
##
## LR(1) items:
command_list' -> . command_list [ # ]
## Transitions:
-- On commands shift to state 30
-- On command_list shift to state 46
## Reductions:
-- On Tpreamble Tentry Tcomment Tabbrev EOF
--   reduce production commands ->

State 30:
## Known stack suffix:
## commands
## LR(1) items:
command_list -> commands . EOF [ # ]
commands -> commands . command [ Tpreamble Tentry Tcomment Tabbrev EOF ]
## Transitions:
-- On Tpreamble shift to state 31
-- On Tentry shift to state 9
-- On Tcomment shift to state 34
-- On Tabbrev shift to state 35
-- On EOF shift to state 40
-- On entry shift to state 41
-- On command shift to state 45
## Reductions:

State 31:
## Known stack suffix:
## Tpreamble
## LR(1) items:
command -> Tpreamble . sharp_string_list Trbrace [ Tpreamble Tentry Tcomment Tabbrev EOF ]
## Transitions:
-- On Tstring shift to state 2
-- On Tident shift to state 3
-- On sharp_string_list shift to state 32
-- On atom shift to state 6
## Reductions:

State 32:
## Known stack suffix:
## Tpreamble sharp_string_list
## LR(1) items:
command -> Tpreamble sharp_string_list . Trbrace [ Tpreamble Tentry Tcomment Tabbrev EOF ]
## Transitions:
-- On Trbrace shift to state 33
## Reductions:

State 33:
## Known stack suffix:
## Tpreamble sharp_string_list Trbrace
## LR(1) items:
command -> Tpreamble sharp_string_list Trbrace . [ Tpreamble Tentry Tcomment Tabbrev EOF ]
## Transitions:
## Reductions:
-- On Tpreamble Tentry Tcomment Tabbrev EOF
--   reduce production command -> Tpreamble sharp_string_list Trbrace

State 34:
## Known stack suffix:
## Tcomment
## LR(1) items:
command -> Tcomment . [ Tpreamble Tentry Tcomment Tabbrev EOF ]
## Transitions:
## Reductions:
-- On Tpreamble Tentry Tcomment Tabbrev EOF
--   reduce production command -> Tcomment

State 35:
## Known stack suffix:
## Tabbrev
## LR(1) items:
command -> Tabbrev . Tident Tequal sharp_string_list Trbrace [ Tpreamble Tentry Tcomment Tabbrev EOF ]
## Transitions:
-- On Tident shift to state 36
## Reductions:

State 36:
## Known stack suffix:
## Tabbrev Tident
## LR(1) items:
command -> Tabbrev Tident . Tequal sharp_string_list Trbrace [ Tpreamble Tentry Tcomment Tabbrev EOF ]
## Transitions:
-- On Tequal shift to state 37
## Reductions:

State 37:
## Known stack suffix:
## Tabbrev Tident Tequal
## LR(1) items:
command -> Tabbrev Tident Tequal . sharp_string_list Trbrace [ Tpreamble Tentry Tcomment Tabbrev EOF ]
## Transitions:
-- On Tstring shift to state 2
-- On Tident shift to state 3
-- On sharp_string_list shift to state 38
-- On atom shift to state 6
## Reductions:

State 38:
## Known stack suffix:
## Tabbrev Tident Tequal sharp_string_list
## LR(1) items:
command -> Tabbrev Tident Tequal sharp_string_list . Trbrace [ Tpreamble Tentry Tcomment Tabbrev EOF ]
## Transitions:
-- On Trbrace shift to state 39
## Reductions:

State 39:
## Known stack suffix:
## Tabbrev Tident Tequal sharp_string_list Trbrace
## LR(1) items:
command -> Tabbrev Tident Tequal sharp_string_list Trbrace . [ Tpreamble Tentry Tcomment Tabbrev EOF ]
## Transitions:
## Reductions:
-- On Tpreamble Tentry Tcomment Tabbrev EOF
--   reduce production command -> Tabbrev Tident Tequal sharp_string_list Trbrace

State 40:
## Known stack suffix:
## commands EOF
## LR(1) items:
command_list -> commands EOF . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production command_list -> commands EOF

State 41:
## Known stack suffix:
## entry
## LR(1) items:
command -> entry . Tcomma comma_field_list Trbrace [ Tpreamble Tentry Tcomment Tabbrev EOF ]
## Transitions:
-- On Tcomma shift to state 42
## Reductions:

State 42:
## Known stack suffix:
## entry Tcomma
## LR(1) items:
command -> entry Tcomma . comma_field_list Trbrace [ Tpreamble Tentry Tcomment Tabbrev EOF ]
## Transitions:
-- On Tident shift to state 18
-- On Tcomment shift to state 19
-- On field_name shift to state 20
-- On field shift to state 23
-- On comma_field_list shift to state 43
## Reductions:

State 43:
## Known stack suffix:
## entry Tcomma comma_field_list
## LR(1) items:
command -> entry Tcomma comma_field_list . Trbrace [ Tpreamble Tentry Tcomment Tabbrev EOF ]
## Transitions:
-- On Trbrace shift to state 44
## Reductions:

State 44:
## Known stack suffix:
## entry Tcomma comma_field_list Trbrace
## LR(1) items:
command -> entry Tcomma comma_field_list Trbrace . [ Tpreamble Tentry Tcomment Tabbrev EOF ]
## Transitions:
## Reductions:
-- On Tpreamble Tentry Tcomment Tabbrev EOF
--   reduce production command -> entry Tcomma comma_field_list Trbrace

State 45:
## Known stack suffix:
## commands command
## LR(1) items:
commands -> commands command . [ Tpreamble Tentry Tcomment Tabbrev EOF ]
## Transitions:
## Reductions:
-- On Tpreamble Tentry Tcomment Tabbrev EOF
--   reduce production commands -> commands command

State 46:
## Known stack suffix:
## command_list
## LR(1) items:
command_list' -> command_list . [ # ]
## Transitions:
## Reductions:
-- On #
--   accept command_list

