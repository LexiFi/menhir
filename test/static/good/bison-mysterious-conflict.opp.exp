%start def
%token COLON
%token COMMA
%token ID
%type <unit> def
%%

separated_nonempty_list_COMMA_name_:
  x = name
    {    ( [ x ] )} [@name one_COMMA_name]
| x = name _2 = COMMA xs = separated_nonempty_list_COMMA_name_
    {    ( x :: xs )} [@name more_COMMA_name]

def:
  _1 = param_spec _2 = return_spec _3 = COMMA
    {    ( () )}

param_spec:
  _1 = typ
    {    ( () )}
| _1 = separated_nonempty_list_COMMA_name_ _2 = COLON _3 = typ
    {    ( () )}

return_spec:
  _1 = typ
    {    ( () )}
| _1 = name _2 = COLON _3 = typ
    {    ( () )}

typ:
  _1 = ID
    {    ( () )}

name:
  _1 = ID
    {    ( () )}

%%
