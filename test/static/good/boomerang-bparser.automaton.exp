State 0:
modl' -> . modl [ # ]
-- On MODULE shift to state 1
-- On modl shift to state 508

State 1:
modl -> MODULE . UIDENT EQUAL opens decls EOF [ # ]
-- On UIDENT shift to state 2

State 2:
modl -> MODULE UIDENT . EQUAL opens decls EOF [ # ]
-- On EQUAL shift to state 3

State 3:
modl -> MODULE UIDENT EQUAL . opens decls EOF [ # ]
-- On OPEN shift to state 4
-- On opens shift to state 10
-- On TYPE reduce production opens -> 
-- On TEST reduce production opens -> 
-- On MODULE reduce production opens -> 
-- On LET reduce production opens -> 
-- On EOF reduce production opens -> 

State 4:
opens -> OPEN . qid opens [ TYPE TEST MODULE LET EOF ]
-- On UIDENT shift to state 5
-- On QUALIDENT shift to state 6
-- On LIDENT shift to state 7
-- On qid shift to state 8

State 5:
qid -> UIDENT . [ WITH VTYPE USING UIDENT TYPE TILDE TEST STYPE STR STAR SEMI RPAREN RBRACK RBRACE RANGLE QUALIDENT QMARK PUT PLUS OPEN NSET MODULE MINUS LT LPAREN LIDENT LET LEQ LBRACE LANGLE INTO INTEGER IN HASH GT GRAMMAR GET GEQ EQUAL EOF END DOT DOLLAR DEQARROW DARROW CSET CREATE COMMA COLON CHOOSE CHARACTER CEX CANONIZE BOOLEAN BIJ BEGIN BARBAR BAR AVTYPE ASTYPE ARROW AND AMPERSAND ]
-- On WITH reduce production qid -> UIDENT 
-- On VTYPE reduce production qid -> UIDENT 
-- On USING reduce production qid -> UIDENT 
-- On UIDENT reduce production qid -> UIDENT 
-- On TYPE reduce production qid -> UIDENT 
-- On TILDE reduce production qid -> UIDENT 
-- On TEST reduce production qid -> UIDENT 
-- On STYPE reduce production qid -> UIDENT 
-- On STR reduce production qid -> UIDENT 
-- On STAR reduce production qid -> UIDENT 
-- On SEMI reduce production qid -> UIDENT 
-- On RPAREN reduce production qid -> UIDENT 
-- On RBRACK reduce production qid -> UIDENT 
-- On RBRACE reduce production qid -> UIDENT 
-- On RANGLE reduce production qid -> UIDENT 
-- On QUALIDENT reduce production qid -> UIDENT 
-- On QMARK reduce production qid -> UIDENT 
-- On PUT reduce production qid -> UIDENT 
-- On PLUS reduce production qid -> UIDENT 
-- On OPEN reduce production qid -> UIDENT 
-- On NSET reduce production qid -> UIDENT 
-- On MODULE reduce production qid -> UIDENT 
-- On MINUS reduce production qid -> UIDENT 
-- On LT reduce production qid -> UIDENT 
-- On LPAREN reduce production qid -> UIDENT 
-- On LIDENT reduce production qid -> UIDENT 
-- On LET reduce production qid -> UIDENT 
-- On LEQ reduce production qid -> UIDENT 
-- On LBRACE reduce production qid -> UIDENT 
-- On LANGLE reduce production qid -> UIDENT 
-- On INTO reduce production qid -> UIDENT 
-- On INTEGER reduce production qid -> UIDENT 
-- On IN reduce production qid -> UIDENT 
-- On HASH reduce production qid -> UIDENT 
-- On GT reduce production qid -> UIDENT 
-- On GRAMMAR reduce production qid -> UIDENT 
-- On GET reduce production qid -> UIDENT 
-- On GEQ reduce production qid -> UIDENT 
-- On EQUAL reduce production qid -> UIDENT 
-- On EOF reduce production qid -> UIDENT 
-- On END reduce production qid -> UIDENT 
-- On DOT reduce production qid -> UIDENT 
-- On DOLLAR reduce production qid -> UIDENT 
-- On DEQARROW reduce production qid -> UIDENT 
-- On DARROW reduce production qid -> UIDENT 
-- On CSET reduce production qid -> UIDENT 
-- On CREATE reduce production qid -> UIDENT 
-- On COMMA reduce production qid -> UIDENT 
-- On COLON reduce production qid -> UIDENT 
-- On CHOOSE reduce production qid -> UIDENT 
-- On CHARACTER reduce production qid -> UIDENT 
-- On CEX reduce production qid -> UIDENT 
-- On CANONIZE reduce production qid -> UIDENT 
-- On BOOLEAN reduce production qid -> UIDENT 
-- On BIJ reduce production qid -> UIDENT 
-- On BEGIN reduce production qid -> UIDENT 
-- On BARBAR reduce production qid -> UIDENT 
-- On BAR reduce production qid -> UIDENT 
-- On AVTYPE reduce production qid -> UIDENT 
-- On ASTYPE reduce production qid -> UIDENT 
-- On ARROW reduce production qid -> UIDENT 
-- On AND reduce production qid -> UIDENT 
-- On AMPERSAND reduce production qid -> UIDENT 

State 6:
qid -> QUALIDENT . [ WITH VTYPE USING UIDENT TYPE TILDE TEST STYPE STR STAR SEMI RPAREN RBRACK RBRACE RANGLE QUALIDENT QMARK PUT PLUS OPEN NSET MODULE MINUS LT LPAREN LIDENT LET LEQ LBRACE LANGLE INTO INTEGER IN HASH GT GRAMMAR GET GEQ EQUAL EOF END DOT DOLLAR DEQARROW DARROW CSET CREATE COMMA COLON CHOOSE CHARACTER CEX CANONIZE BOOLEAN BIJ BEGIN BARBAR BAR AVTYPE ASTYPE ARROW AND AMPERSAND ]
-- On WITH reduce production qid -> QUALIDENT 
-- On VTYPE reduce production qid -> QUALIDENT 
-- On USING reduce production qid -> QUALIDENT 
-- On UIDENT reduce production qid -> QUALIDENT 
-- On TYPE reduce production qid -> QUALIDENT 
-- On TILDE reduce production qid -> QUALIDENT 
-- On TEST reduce production qid -> QUALIDENT 
-- On STYPE reduce production qid -> QUALIDENT 
-- On STR reduce production qid -> QUALIDENT 
-- On STAR reduce production qid -> QUALIDENT 
-- On SEMI reduce production qid -> QUALIDENT 
-- On RPAREN reduce production qid -> QUALIDENT 
-- On RBRACK reduce production qid -> QUALIDENT 
-- On RBRACE reduce production qid -> QUALIDENT 
-- On RANGLE reduce production qid -> QUALIDENT 
-- On QUALIDENT reduce production qid -> QUALIDENT 
-- On QMARK reduce production qid -> QUALIDENT 
-- On PUT reduce production qid -> QUALIDENT 
-- On PLUS reduce production qid -> QUALIDENT 
-- On OPEN reduce production qid -> QUALIDENT 
-- On NSET reduce production qid -> QUALIDENT 
-- On MODULE reduce production qid -> QUALIDENT 
-- On MINUS reduce production qid -> QUALIDENT 
-- On LT reduce production qid -> QUALIDENT 
-- On LPAREN reduce production qid -> QUALIDENT 
-- On LIDENT reduce production qid -> QUALIDENT 
-- On LET reduce production qid -> QUALIDENT 
-- On LEQ reduce production qid -> QUALIDENT 
-- On LBRACE reduce production qid -> QUALIDENT 
-- On LANGLE reduce production qid -> QUALIDENT 
-- On INTO reduce production qid -> QUALIDENT 
-- On INTEGER reduce production qid -> QUALIDENT 
-- On IN reduce production qid -> QUALIDENT 
-- On HASH reduce production qid -> QUALIDENT 
-- On GT reduce production qid -> QUALIDENT 
-- On GRAMMAR reduce production qid -> QUALIDENT 
-- On GET reduce production qid -> QUALIDENT 
-- On GEQ reduce production qid -> QUALIDENT 
-- On EQUAL reduce production qid -> QUALIDENT 
-- On EOF reduce production qid -> QUALIDENT 
-- On END reduce production qid -> QUALIDENT 
-- On DOT reduce production qid -> QUALIDENT 
-- On DOLLAR reduce production qid -> QUALIDENT 
-- On DEQARROW reduce production qid -> QUALIDENT 
-- On DARROW reduce production qid -> QUALIDENT 
-- On CSET reduce production qid -> QUALIDENT 
-- On CREATE reduce production qid -> QUALIDENT 
-- On COMMA reduce production qid -> QUALIDENT 
-- On COLON reduce production qid -> QUALIDENT 
-- On CHOOSE reduce production qid -> QUALIDENT 
-- On CHARACTER reduce production qid -> QUALIDENT 
-- On CEX reduce production qid -> QUALIDENT 
-- On CANONIZE reduce production qid -> QUALIDENT 
-- On BOOLEAN reduce production qid -> QUALIDENT 
-- On BIJ reduce production qid -> QUALIDENT 
-- On BEGIN reduce production qid -> QUALIDENT 
-- On BARBAR reduce production qid -> QUALIDENT 
-- On BAR reduce production qid -> QUALIDENT 
-- On AVTYPE reduce production qid -> QUALIDENT 
-- On ASTYPE reduce production qid -> QUALIDENT 
-- On ARROW reduce production qid -> QUALIDENT 
-- On AND reduce production qid -> QUALIDENT 
-- On AMPERSAND reduce production qid -> QUALIDENT 

State 7:
qid -> LIDENT . [ WITH VTYPE USING UIDENT TYPE TILDE TEST STYPE STR STAR SEMI RPAREN RBRACK RBRACE RANGLE QUALIDENT QMARK PUT PLUS OPEN NSET MODULE MINUS LT LPAREN LIDENT LET LEQ LBRACE LANGLE INTO INTEGER IN HASH GT GRAMMAR GET GEQ EQUAL EOF END DOT DOLLAR DEQARROW DARROW CSET CREATE COMMA COLON CHOOSE CHARACTER CEX CANONIZE BOOLEAN BIJ BEGIN BARBAR BAR AVTYPE ASTYPE ARROW AND AMPERSAND ]
-- On WITH reduce production qid -> LIDENT 
-- On VTYPE reduce production qid -> LIDENT 
-- On USING reduce production qid -> LIDENT 
-- On UIDENT reduce production qid -> LIDENT 
-- On TYPE reduce production qid -> LIDENT 
-- On TILDE reduce production qid -> LIDENT 
-- On TEST reduce production qid -> LIDENT 
-- On STYPE reduce production qid -> LIDENT 
-- On STR reduce production qid -> LIDENT 
-- On STAR reduce production qid -> LIDENT 
-- On SEMI reduce production qid -> LIDENT 
-- On RPAREN reduce production qid -> LIDENT 
-- On RBRACK reduce production qid -> LIDENT 
-- On RBRACE reduce production qid -> LIDENT 
-- On RANGLE reduce production qid -> LIDENT 
-- On QUALIDENT reduce production qid -> LIDENT 
-- On QMARK reduce production qid -> LIDENT 
-- On PUT reduce production qid -> LIDENT 
-- On PLUS reduce production qid -> LIDENT 
-- On OPEN reduce production qid -> LIDENT 
-- On NSET reduce production qid -> LIDENT 
-- On MODULE reduce production qid -> LIDENT 
-- On MINUS reduce production qid -> LIDENT 
-- On LT reduce production qid -> LIDENT 
-- On LPAREN reduce production qid -> LIDENT 
-- On LIDENT reduce production qid -> LIDENT 
-- On LET reduce production qid -> LIDENT 
-- On LEQ reduce production qid -> LIDENT 
-- On LBRACE reduce production qid -> LIDENT 
-- On LANGLE reduce production qid -> LIDENT 
-- On INTO reduce production qid -> LIDENT 
-- On INTEGER reduce production qid -> LIDENT 
-- On IN reduce production qid -> LIDENT 
-- On HASH reduce production qid -> LIDENT 
-- On GT reduce production qid -> LIDENT 
-- On GRAMMAR reduce production qid -> LIDENT 
-- On GET reduce production qid -> LIDENT 
-- On GEQ reduce production qid -> LIDENT 
-- On EQUAL reduce production qid -> LIDENT 
-- On EOF reduce production qid -> LIDENT 
-- On END reduce production qid -> LIDENT 
-- On DOT reduce production qid -> LIDENT 
-- On DOLLAR reduce production qid -> LIDENT 
-- On DEQARROW reduce production qid -> LIDENT 
-- On DARROW reduce production qid -> LIDENT 
-- On CSET reduce production qid -> LIDENT 
-- On CREATE reduce production qid -> LIDENT 
-- On COMMA reduce production qid -> LIDENT 
-- On COLON reduce production qid -> LIDENT 
-- On CHOOSE reduce production qid -> LIDENT 
-- On CHARACTER reduce production qid -> LIDENT 
-- On CEX reduce production qid -> LIDENT 
-- On CANONIZE reduce production qid -> LIDENT 
-- On BOOLEAN reduce production qid -> LIDENT 
-- On BIJ reduce production qid -> LIDENT 
-- On BEGIN reduce production qid -> LIDENT 
-- On BARBAR reduce production qid -> LIDENT 
-- On BAR reduce production qid -> LIDENT 
-- On AVTYPE reduce production qid -> LIDENT 
-- On ASTYPE reduce production qid -> LIDENT 
-- On ARROW reduce production qid -> LIDENT 
-- On AND reduce production qid -> LIDENT 
-- On AMPERSAND reduce production qid -> LIDENT 

State 8:
opens -> OPEN qid . opens [ TYPE TEST MODULE LET EOF ]
-- On OPEN shift to state 4
-- On opens shift to state 9
-- On TYPE reduce production opens -> 
-- On TEST reduce production opens -> 
-- On MODULE reduce production opens -> 
-- On LET reduce production opens -> 
-- On EOF reduce production opens -> 

State 9:
opens -> OPEN qid opens . [ TYPE TEST MODULE LET EOF ]
-- On TYPE reduce production opens -> OPEN qid opens 
-- On TEST reduce production opens -> OPEN qid opens 
-- On MODULE reduce production opens -> OPEN qid opens 
-- On LET reduce production opens -> OPEN qid opens 
-- On EOF reduce production opens -> OPEN qid opens 

State 10:
modl -> MODULE UIDENT EQUAL opens . decls EOF [ # ]
-- On TYPE shift to state 11
-- On TEST shift to state 457
-- On MODULE shift to state 463
-- On LET shift to state 466
-- On decls shift to state 506
-- On EOF reduce production decls -> 

State 11:
decls -> TYPE . tyvar_list LIDENT EQUAL dtsort_list decls [ EOF END ]
-- On TYVARIDENT shift to state 12
-- On LPAREN shift to state 13
-- On tyvar_list shift to state 19
-- On tyvar shift to state 505
-- On LIDENT reduce production tyvar_list -> 

State 12:
tyvar -> TYVARIDENT . [ WHERE TYPE TEST STAR RPAREN RBRACE RANGLE QUALIDENT MODULE LLIST LIDENT LET IN EQUAL EOF END DOLLAR COMMA BAR ARROW ]
-- On WHERE reduce production tyvar -> TYVARIDENT 
-- On TYPE reduce production tyvar -> TYVARIDENT 
-- On TEST reduce production tyvar -> TYVARIDENT 
-- On STAR reduce production tyvar -> TYVARIDENT 
-- On RPAREN reduce production tyvar -> TYVARIDENT 
-- On RBRACE reduce production tyvar -> TYVARIDENT 
-- On RANGLE reduce production tyvar -> TYVARIDENT 
-- On QUALIDENT reduce production tyvar -> TYVARIDENT 
-- On MODULE reduce production tyvar -> TYVARIDENT 
-- On LLIST reduce production tyvar -> TYVARIDENT 
-- On LIDENT reduce production tyvar -> TYVARIDENT 
-- On LET reduce production tyvar -> TYVARIDENT 
-- On IN reduce production tyvar -> TYVARIDENT 
-- On EQUAL reduce production tyvar -> TYVARIDENT 
-- On EOF reduce production tyvar -> TYVARIDENT 
-- On END reduce production tyvar -> TYVARIDENT 
-- On DOLLAR reduce production tyvar -> TYVARIDENT 
-- On COMMA reduce production tyvar -> TYVARIDENT 
-- On BAR reduce production tyvar -> TYVARIDENT 
-- On ARROW reduce production tyvar -> TYVARIDENT 

State 13:
tyvar_list -> LPAREN . tyvar_list2 RPAREN [ LIDENT ]
-- On TYVARIDENT shift to state 12
-- On tyvar_list2 shift to state 14
-- On tyvar shift to state 16

State 14:
tyvar_list -> LPAREN tyvar_list2 . RPAREN [ LIDENT ]
-- On RPAREN shift to state 15

State 15:
tyvar_list -> LPAREN tyvar_list2 RPAREN . [ LIDENT ]
-- On LIDENT reduce production tyvar_list -> LPAREN tyvar_list2 RPAREN 

State 16:
tyvar_list2 -> tyvar . [ RPAREN ]
tyvar_list2 -> tyvar . COMMA tyvar_list2 [ RPAREN ]
-- On COMMA shift to state 17
-- On RPAREN reduce production tyvar_list2 -> tyvar 

State 17:
tyvar_list2 -> tyvar COMMA . tyvar_list2 [ RPAREN ]
-- On TYVARIDENT shift to state 12
-- On tyvar_list2 shift to state 18
-- On tyvar shift to state 16

State 18:
tyvar_list2 -> tyvar COMMA tyvar_list2 . [ RPAREN ]
-- On RPAREN reduce production tyvar_list2 -> tyvar COMMA tyvar_list2 

State 19:
decls -> TYPE tyvar_list . LIDENT EQUAL dtsort_list decls [ EOF END ]
-- On LIDENT shift to state 20

State 20:
decls -> TYPE tyvar_list LIDENT . EQUAL dtsort_list decls [ EOF END ]
-- On EQUAL shift to state 21

State 21:
decls -> TYPE tyvar_list LIDENT EQUAL . dtsort_list decls [ EOF END ]
-- On UIDENT shift to state 22
-- On dtsort_list shift to state 456
-- On dtsort shift to state 500

State 22:
dtsort -> UIDENT . [ TYPE TEST MODULE LET EOF END BAR ]
dtsort -> UIDENT . OF sort [ TYPE TEST MODULE LET EOF END BAR ]
-- On OF shift to state 23
-- On TYPE reduce production dtsort -> UIDENT 
-- On TEST reduce production dtsort -> UIDENT 
-- On MODULE reduce production dtsort -> UIDENT 
-- On LET reduce production dtsort -> UIDENT 
-- On EOF reduce production dtsort -> UIDENT 
-- On END reduce production dtsort -> UIDENT 
-- On BAR reduce production dtsort -> UIDENT 

State 23:
dtsort -> UIDENT OF . sort [ TYPE TEST MODULE LET EOF END BAR ]
-- On UNIT shift to state 24
-- On TYVARIDENT shift to state 12
-- On STRINGPREFS shift to state 25
-- On STRINGLISTPREFS shift to state 26
-- On STRING shift to state 27
-- On SKELETONS shift to state 28
-- On RESOURCES shift to state 29
-- On REGEXP shift to state 30
-- On QUALIDENT shift to state 31
-- On LPAREN shift to state 32
-- On LIDENT shift to state 52
-- On LENS shift to state 53
-- On INTPREFS shift to state 54
-- On INT shift to state 55
-- On FORALL shift to state 56
-- On CHAR shift to state 59
-- On CANONIZER shift to state 60
-- On BOOLPREFS shift to state 61
-- On BOOL shift to state 62
-- On AREGEXP shift to state 63
-- On tyvar shift to state 64
-- On sort shift to state 455
-- On qvar shift to state 66
-- On productsort shift to state 67
-- On datatypesort shift to state 149
-- On bsort shift to state 150
-- On asort shift to state 152
-- On arrowsort shift to state 153

State 24:
asort -> UNIT . [ WHERE TYPE TEST STAR RPAREN RBRACE RANGLE QUALIDENT MODULE LLIST LIDENT LET IN EQUAL EOF END DOLLAR COMMA BAR ARROW ]
-- On WHERE reduce production asort -> UNIT 
-- On TYPE reduce production asort -> UNIT 
-- On TEST reduce production asort -> UNIT 
-- On STAR reduce production asort -> UNIT 
-- On RPAREN reduce production asort -> UNIT 
-- On RBRACE reduce production asort -> UNIT 
-- On RANGLE reduce production asort -> UNIT 
-- On QUALIDENT reduce production asort -> UNIT 
-- On MODULE reduce production asort -> UNIT 
-- On LLIST reduce production asort -> UNIT 
-- On LIDENT reduce production asort -> UNIT 
-- On LET reduce production asort -> UNIT 
-- On IN reduce production asort -> UNIT 
-- On EQUAL reduce production asort -> UNIT 
-- On EOF reduce production asort -> UNIT 
-- On END reduce production asort -> UNIT 
-- On DOLLAR reduce production asort -> UNIT 
-- On COMMA reduce production asort -> UNIT 
-- On BAR reduce production asort -> UNIT 
-- On ARROW reduce production asort -> UNIT 

State 25:
asort -> STRINGPREFS . [ WHERE TYPE TEST STAR RPAREN RBRACE RANGLE QUALIDENT MODULE LLIST LIDENT LET IN EQUAL EOF END DOLLAR COMMA BAR ARROW ]
-- On WHERE reduce production asort -> STRINGPREFS 
-- On TYPE reduce production asort -> STRINGPREFS 
-- On TEST reduce production asort -> STRINGPREFS 
-- On STAR reduce production asort -> STRINGPREFS 
-- On RPAREN reduce production asort -> STRINGPREFS 
-- On RBRACE reduce production asort -> STRINGPREFS 
-- On RANGLE reduce production asort -> STRINGPREFS 
-- On QUALIDENT reduce production asort -> STRINGPREFS 
-- On MODULE reduce production asort -> STRINGPREFS 
-- On LLIST reduce production asort -> STRINGPREFS 
-- On LIDENT reduce production asort -> STRINGPREFS 
-- On LET reduce production asort -> STRINGPREFS 
-- On IN reduce production asort -> STRINGPREFS 
-- On EQUAL reduce production asort -> STRINGPREFS 
-- On EOF reduce production asort -> STRINGPREFS 
-- On END reduce production asort -> STRINGPREFS 
-- On DOLLAR reduce production asort -> STRINGPREFS 
-- On COMMA reduce production asort -> STRINGPREFS 
-- On BAR reduce production asort -> STRINGPREFS 
-- On ARROW reduce production asort -> STRINGPREFS 

State 26:
asort -> STRINGLISTPREFS . [ WHERE TYPE TEST STAR RPAREN RBRACE RANGLE QUALIDENT MODULE LLIST LIDENT LET IN EQUAL EOF END DOLLAR COMMA BAR ARROW ]
-- On WHERE reduce production asort -> STRINGLISTPREFS 
-- On TYPE reduce production asort -> STRINGLISTPREFS 
-- On TEST reduce production asort -> STRINGLISTPREFS 
-- On STAR reduce production asort -> STRINGLISTPREFS 
-- On RPAREN reduce production asort -> STRINGLISTPREFS 
-- On RBRACE reduce production asort -> STRINGLISTPREFS 
-- On RANGLE reduce production asort -> STRINGLISTPREFS 
-- On QUALIDENT reduce production asort -> STRINGLISTPREFS 
-- On MODULE reduce production asort -> STRINGLISTPREFS 
-- On LLIST reduce production asort -> STRINGLISTPREFS 
-- On LIDENT reduce production asort -> STRINGLISTPREFS 
-- On LET reduce production asort -> STRINGLISTPREFS 
-- On IN reduce production asort -> STRINGLISTPREFS 
-- On EQUAL reduce production asort -> STRINGLISTPREFS 
-- On EOF reduce production asort -> STRINGLISTPREFS 
-- On END reduce production asort -> STRINGLISTPREFS 
-- On DOLLAR reduce production asort -> STRINGLISTPREFS 
-- On COMMA reduce production asort -> STRINGLISTPREFS 
-- On BAR reduce production asort -> STRINGLISTPREFS 
-- On ARROW reduce production asort -> STRINGLISTPREFS 

State 27:
asort -> STRING . [ WHERE TYPE TEST STAR RPAREN RBRACE RANGLE QUALIDENT MODULE LLIST LIDENT LET IN EQUAL EOF END DOLLAR COMMA BAR ARROW ]
-- On WHERE reduce production asort -> STRING 
-- On TYPE reduce production asort -> STRING 
-- On TEST reduce production asort -> STRING 
-- On STAR reduce production asort -> STRING 
-- On RPAREN reduce production asort -> STRING 
-- On RBRACE reduce production asort -> STRING 
-- On RANGLE reduce production asort -> STRING 
-- On QUALIDENT reduce production asort -> STRING 
-- On MODULE reduce production asort -> STRING 
-- On LLIST reduce production asort -> STRING 
-- On LIDENT reduce production asort -> STRING 
-- On LET reduce production asort -> STRING 
-- On IN reduce production asort -> STRING 
-- On EQUAL reduce production asort -> STRING 
-- On EOF reduce production asort -> STRING 
-- On END reduce production asort -> STRING 
-- On DOLLAR reduce production asort -> STRING 
-- On COMMA reduce production asort -> STRING 
-- On BAR reduce production asort -> STRING 
-- On ARROW reduce production asort -> STRING 

State 28:
asort -> SKELETONS . [ WHERE TYPE TEST STAR RPAREN RBRACE RANGLE QUALIDENT MODULE LLIST LIDENT LET IN EQUAL EOF END DOLLAR COMMA BAR ARROW ]
-- On WHERE reduce production asort -> SKELETONS 
-- On TYPE reduce production asort -> SKELETONS 
-- On TEST reduce production asort -> SKELETONS 
-- On STAR reduce production asort -> SKELETONS 
-- On RPAREN reduce production asort -> SKELETONS 
-- On RBRACE reduce production asort -> SKELETONS 
-- On RANGLE reduce production asort -> SKELETONS 
-- On QUALIDENT reduce production asort -> SKELETONS 
-- On MODULE reduce production asort -> SKELETONS 
-- On LLIST reduce production asort -> SKELETONS 
-- On LIDENT reduce production asort -> SKELETONS 
-- On LET reduce production asort -> SKELETONS 
-- On IN reduce production asort -> SKELETONS 
-- On EQUAL reduce production asort -> SKELETONS 
-- On EOF reduce production asort -> SKELETONS 
-- On END reduce production asort -> SKELETONS 
-- On DOLLAR reduce production asort -> SKELETONS 
-- On COMMA reduce production asort -> SKELETONS 
-- On BAR reduce production asort -> SKELETONS 
-- On ARROW reduce production asort -> SKELETONS 

State 29:
asort -> RESOURCES . [ WHERE TYPE TEST STAR RPAREN RBRACE RANGLE QUALIDENT MODULE LLIST LIDENT LET IN EQUAL EOF END DOLLAR COMMA BAR ARROW ]
-- On WHERE reduce production asort -> RESOURCES 
-- On TYPE reduce production asort -> RESOURCES 
-- On TEST reduce production asort -> RESOURCES 
-- On STAR reduce production asort -> RESOURCES 
-- On RPAREN reduce production asort -> RESOURCES 
-- On RBRACE reduce production asort -> RESOURCES 
-- On RANGLE reduce production asort -> RESOURCES 
-- On QUALIDENT reduce production asort -> RESOURCES 
-- On MODULE reduce production asort -> RESOURCES 
-- On LLIST reduce production asort -> RESOURCES 
-- On LIDENT reduce production asort -> RESOURCES 
-- On LET reduce production asort -> RESOURCES 
-- On IN reduce production asort -> RESOURCES 
-- On EQUAL reduce production asort -> RESOURCES 
-- On EOF reduce production asort -> RESOURCES 
-- On END reduce production asort -> RESOURCES 
-- On DOLLAR reduce production asort -> RESOURCES 
-- On COMMA reduce production asort -> RESOURCES 
-- On BAR reduce production asort -> RESOURCES 
-- On ARROW reduce production asort -> RESOURCES 

State 30:
asort -> REGEXP . [ WHERE TYPE TEST STAR RPAREN RBRACE RANGLE QUALIDENT MODULE LLIST LIDENT LET IN EQUAL EOF END DOLLAR COMMA BAR ARROW ]
-- On WHERE reduce production asort -> REGEXP 
-- On TYPE reduce production asort -> REGEXP 
-- On TEST reduce production asort -> REGEXP 
-- On STAR reduce production asort -> REGEXP 
-- On RPAREN reduce production asort -> REGEXP 
-- On RBRACE reduce production asort -> REGEXP 
-- On RANGLE reduce production asort -> REGEXP 
-- On QUALIDENT reduce production asort -> REGEXP 
-- On MODULE reduce production asort -> REGEXP 
-- On LLIST reduce production asort -> REGEXP 
-- On LIDENT reduce production asort -> REGEXP 
-- On LET reduce production asort -> REGEXP 
-- On IN reduce production asort -> REGEXP 
-- On EQUAL reduce production asort -> REGEXP 
-- On EOF reduce production asort -> REGEXP 
-- On END reduce production asort -> REGEXP 
-- On DOLLAR reduce production asort -> REGEXP 
-- On COMMA reduce production asort -> REGEXP 
-- On BAR reduce production asort -> REGEXP 
-- On ARROW reduce production asort -> REGEXP 

State 31:
qvar -> QUALIDENT . [ WHERE TYPE TEST STAR RPAREN RBRACE RANGLE QUALIDENT MODULE LLIST LIDENT LET IN EQUAL EOF END DOLLAR COMMA BAR ARROW ]
-- On WHERE reduce production qvar -> QUALIDENT 
-- On TYPE reduce production qvar -> QUALIDENT 
-- On TEST reduce production qvar -> QUALIDENT 
-- On STAR reduce production qvar -> QUALIDENT 
-- On RPAREN reduce production qvar -> QUALIDENT 
-- On RBRACE reduce production qvar -> QUALIDENT 
-- On RANGLE reduce production qvar -> QUALIDENT 
-- On QUALIDENT reduce production qvar -> QUALIDENT 
-- On MODULE reduce production qvar -> QUALIDENT 
-- On LLIST reduce production qvar -> QUALIDENT 
-- On LIDENT reduce production qvar -> QUALIDENT 
-- On LET reduce production qvar -> QUALIDENT 
-- On IN reduce production qvar -> QUALIDENT 
-- On EQUAL reduce production qvar -> QUALIDENT 
-- On EOF reduce production qvar -> QUALIDENT 
-- On END reduce production qvar -> QUALIDENT 
-- On DOLLAR reduce production qvar -> QUALIDENT 
-- On COMMA reduce production qvar -> QUALIDENT 
-- On BAR reduce production qvar -> QUALIDENT 
-- On ARROW reduce production qvar -> QUALIDENT 

State 32:
arrowsort -> LPAREN . id COLON productsort ARROW arrowsort RPAREN [ WHERE TYPE TEST RPAREN RBRACE RANGLE MODULE LLIST LET IN EQUAL EOF END DOLLAR COMMA BAR ]
bsort -> LPAREN . sort RPAREN [ WHERE TYPE TEST STAR RPAREN RBRACE RANGLE QUALIDENT MODULE LLIST LIDENT LET IN EQUAL EOF END DOLLAR COMMA BAR ARROW ]
bsort -> LPAREN . sort WHERE BANG exp RPAREN [ WHERE TYPE TEST STAR RPAREN RBRACE RANGLE QUALIDENT MODULE LLIST LIDENT LET IN EQUAL EOF END DOLLAR COMMA BAR ARROW ]
bsort -> LPAREN . sort WHERE exp RPAREN [ WHERE TYPE TEST STAR RPAREN RBRACE RANGLE QUALIDENT MODULE LLIST LIDENT LET IN EQUAL EOF END DOLLAR COMMA BAR ARROW ]
bsort -> LPAREN . id COLON sort WHERE BANG exp RPAREN [ WHERE TYPE TEST STAR RPAREN RBRACE RANGLE QUALIDENT MODULE LLIST LIDENT LET IN EQUAL EOF END DOLLAR COMMA BAR ARROW ]
bsort -> LPAREN . id COLON sort WHERE exp RPAREN [ WHERE TYPE TEST STAR RPAREN RBRACE RANGLE QUALIDENT MODULE LLIST LIDENT LET IN EQUAL EOF END DOLLAR COMMA BAR ARROW ]
bsort -> LPAREN . LENS IN QMARK DARROW appexp RPAREN [ WHERE TYPE TEST STAR RPAREN RBRACE RANGLE QUALIDENT MODULE LLIST LIDENT LET IN EQUAL EOF END DOLLAR COMMA BAR ARROW ]
bsort -> LPAREN . LENS IN QMARK DEQARROW appexp RPAREN [ WHERE TYPE TEST STAR RPAREN RBRACE RANGLE QUALIDENT MODULE LLIST LIDENT LET IN EQUAL EOF END DOLLAR COMMA BAR ARROW ]
bsort -> LPAREN . LENS IN appexp DARROW QMARK RPAREN [ WHERE TYPE TEST STAR RPAREN RBRACE RANGLE QUALIDENT MODULE LLIST LIDENT LET IN EQUAL EOF END DOLLAR COMMA BAR ARROW ]
bsort -> LPAREN . LENS IN appexp DEQARROW QMARK RPAREN [ WHERE TYPE TEST STAR RPAREN RBRACE RANGLE QUALIDENT MODULE LLIST LIDENT LET IN EQUAL EOF END DOLLAR COMMA BAR ARROW ]
bsort -> LPAREN . LENS IN appexp DARROW appexp RPAREN [ WHERE TYPE TEST STAR RPAREN RBRACE RANGLE QUALIDENT MODULE LLIST LIDENT LET IN EQUAL EOF END DOLLAR COMMA BAR ARROW ]
bsort -> LPAREN . LENS IN appexp DEQARROW appexp RPAREN [ WHERE TYPE TEST STAR RPAREN RBRACE RANGLE QUALIDENT MODULE LLIST LIDENT LET IN EQUAL EOF END DOLLAR COMMA BAR ARROW ]
bsort -> LPAREN . STRING IN exp RPAREN [ WHERE TYPE TEST STAR RPAREN RBRACE RANGLE QUALIDENT MODULE LLIST LIDENT LET IN EQUAL EOF END DOLLAR COMMA BAR ARROW ]
datatypesort -> LPAREN . sort COMMA sort_list RPAREN qvar [ WHERE TYPE TEST STAR RPAREN RBRACE RANGLE MODULE LLIST LET IN EQUAL EOF END DOLLAR COMMA BAR ARROW ]
-- On UNIT shift to state 24
-- On UIDENT shift to state 33
-- On TYVARIDENT shift to state 12
-- On STRINGPREFS shift to state 25
-- On STRINGLISTPREFS shift to state 26
-- On STRING shift to state 34
-- On SKELETONS shift to state 28
-- On RESOURCES shift to state 29
-- On REGEXP shift to state 30
-- On QUALIDENT shift to state 31
-- On LPAREN shift to state 32
-- On LIDENT shift to state 70
-- On LENS shift to state 71
-- On INTPREFS shift to state 54
-- On INT shift to state 55
-- On FORALL shift to state 56
-- On CHAR shift to state 59
-- On CANONIZER shift to state 60
-- On BOOLPREFS shift to state 61
-- On BOOL shift to state 62
-- On AREGEXP shift to state 63
-- On tyvar shift to state 64
-- On sort shift to state 361
-- On qvar shift to state 66
-- On productsort shift to state 67
-- On id shift to state 449
-- On datatypesort shift to state 149
-- On bsort shift to state 150
-- On asort shift to state 152
-- On arrowsort shift to state 153

State 33:
id -> UIDENT . [ COLON ]
-- On COLON reduce production id -> UIDENT 

State 34:
asort -> STRING . [ WHERE STAR RPAREN QUALIDENT LIDENT COMMA ARROW ]
bsort -> LPAREN STRING . IN exp RPAREN [ WHERE TYPE TEST STAR RPAREN RBRACE RANGLE QUALIDENT MODULE LLIST LIDENT LET IN EQUAL EOF END DOLLAR COMMA BAR ARROW ]
-- On IN shift to state 35
-- On WHERE reduce production asort -> STRING 
-- On STAR reduce production asort -> STRING 
-- On RPAREN reduce production asort -> STRING 
-- On QUALIDENT reduce production asort -> STRING 
-- On LIDENT reduce production asort -> STRING 
-- On COMMA reduce production asort -> STRING 
-- On ARROW reduce production asort -> STRING 

State 35:
bsort -> LPAREN STRING IN . exp RPAREN [ WHERE TYPE TEST STAR RPAREN RBRACE RANGLE QUALIDENT MODULE LLIST LIDENT LET IN EQUAL EOF END DOLLAR COMMA BAR ARROW ]
-- On UIDENT shift to state 5
-- On SYNTH shift to state 36
-- On STR shift to state 37
-- On SQUASH shift to state 38
-- On QUALIDENT shift to state 6
-- On PROJECT shift to state 39
-- On PERM shift to state 40
-- On NSET shift to state 43
-- On MINUS shift to state 46
-- On MATCH shift to state 48
-- On LPAREN shift to state 44
-- On LIDENT shift to state 7
-- On LET shift to state 85
-- On LANGLE shift to state 47
-- On INTEGER shift to state 49
-- On HASH shift to state 50
-- On GRAMMAR shift to state 75
-- On FUN shift to state 123
-- On CSET shift to state 81
-- On CHARACTER shift to state 82
-- On CEX shift to state 83
-- On BOOLEAN shift to state 134
-- On BEGIN shift to state 135
-- On tyexp shift to state 136
-- On tildeexp shift to state 155
-- On rewriteexp shift to state 168
-- On repexp shift to state 157
-- On qid shift to state 158
-- On obarexp shift to state 176
-- On minusexp shift to state 178
-- On matchexp shift to state 159
-- On ltexp shift to state 179
-- On leqexp shift to state 180
-- On lenscomponentexp shift to state 181
-- On infixexp shift to state 182
-- On gtexp shift to state 185
-- On geqexp shift to state 186
-- On funexp shift to state 230
-- On exp shift to state 447
-- On equalexp shift to state 233
-- On dotexp shift to state 188
-- On dbarexp shift to state 238
-- On composeexp shift to state 241
-- On commaexp shift to state 247
-- On cexp shift to state 248
-- On barexp shift to state 246
-- On appexp shift to state 192
-- On ampexp shift to state 226
-- On ampampexp shift to state 229
-- On aexp shift to state 162

State 36:
appexp -> SYNTH . appexp DEQARROW repexp USING LBRACE listexp2 [ WITH UIDENT TYPE TILDE TEST STR SEMI RPAREN RBRACK RBRACE RANGLE QUALIDENT PUT NSET MODULE MINUS LT LPAREN LIDENT LET LEQ LANGLE INTO INTEGER IN HASH GT GRAMMAR GET GEQ EQUAL EOF END DOT DOLLAR DEQARROW DARROW CSET CREATE COMMA COLON CHOOSE CHARACTER CEX CANONIZE BOOLEAN BEGIN BARBAR BAR ARROW AMPERSAND ]
appexp -> SYNTH . appexp DEQARROW repexp [ WITH UIDENT TYPE TILDE TEST STR SEMI RPAREN RBRACK RBRACE RANGLE QUALIDENT PUT NSET MODULE MINUS LT LPAREN LIDENT LET LEQ LANGLE INTO INTEGER IN HASH GT GRAMMAR GET GEQ EQUAL EOF END DOT DOLLAR DEQARROW DARROW CSET CREATE COMMA COLON CHOOSE CHARACTER CEX CANONIZE BOOLEAN BEGIN BARBAR BAR ARROW AMPERSAND ]
-- On UIDENT shift to state 5
-- On SYNTH shift to state 36
-- On STR shift to state 37
-- On SQUASH shift to state 38
-- On QUALIDENT shift to state 6
-- On PROJECT shift to state 39
-- On PERM shift to state 40
-- On NSET shift to state 43
-- On LPAREN shift to state 44
-- On LIDENT shift to state 7
-- On LANGLE shift to state 47
-- On INTEGER shift to state 49
-- On HASH shift to state 50
-- On GRAMMAR shift to state 75
-- On CSET shift to state 81
-- On CHARACTER shift to state 82
-- On CEX shift to state 83
-- On BOOLEAN shift to state 134
-- On BEGIN shift to state 135
-- On tyexp shift to state 136
-- On repexp shift to state 157
-- On qid shift to state 158
-- On matchexp shift to state 159
-- On appexp shift to state 436
-- On aexp shift to state 162

State 37:
aexp -> STR . [ WITH VTYPE USING UIDENT TYPE TILDE TEST STYPE STR STAR SEMI RPAREN RBRACK RBRACE RANGLE QUALIDENT QMARK PUT PLUS NSET MODULE MINUS LT LPAREN LIDENT LET LEQ LBRACE LANGLE INTO INTEGER IN HASH GT GRAMMAR GET GEQ EQUAL EOF END DOT DOLLAR DEQARROW DARROW CSET CREATE COMMA COLON CHOOSE CHARACTER CEX CANONIZE BOOLEAN BIJ BEGIN BARBAR BAR AVTYPE ASTYPE ARROW AND AMPERSAND ]
-- On WITH reduce production aexp -> STR 
-- On VTYPE reduce production aexp -> STR 
-- On USING reduce production aexp -> STR 
-- On UIDENT reduce production aexp -> STR 
-- On TYPE reduce production aexp -> STR 
-- On TILDE reduce production aexp -> STR 
-- On TEST reduce production aexp -> STR 
-- On STYPE reduce production aexp -> STR 
-- On STR reduce production aexp -> STR 
-- On STAR reduce production aexp -> STR 
-- On SEMI reduce production aexp -> STR 
-- On RPAREN reduce production aexp -> STR 
-- On RBRACK reduce production aexp -> STR 
-- On RBRACE reduce production aexp -> STR 
-- On RANGLE reduce production aexp -> STR 
-- On QUALIDENT reduce production aexp -> STR 
-- On QMARK reduce production aexp -> STR 
-- On PUT reduce production aexp -> STR 
-- On PLUS reduce production aexp -> STR 
-- On NSET reduce production aexp -> STR 
-- On MODULE reduce production aexp -> STR 
-- On MINUS reduce production aexp -> STR 
-- On LT reduce production aexp -> STR 
-- On LPAREN reduce production aexp -> STR 
-- On LIDENT reduce production aexp -> STR 
-- On LET reduce production aexp -> STR 
-- On LEQ reduce production aexp -> STR 
-- On LBRACE reduce production aexp -> STR 
-- On LANGLE reduce production aexp -> STR 
-- On INTO reduce production aexp -> STR 
-- On INTEGER reduce production aexp -> STR 
-- On IN reduce production aexp -> STR 
-- On HASH reduce production aexp -> STR 
-- On GT reduce production aexp -> STR 
-- On GRAMMAR reduce production aexp -> STR 
-- On GET reduce production aexp -> STR 
-- On GEQ reduce production aexp -> STR 
-- On EQUAL reduce production aexp -> STR 
-- On EOF reduce production aexp -> STR 
-- On END reduce production aexp -> STR 
-- On DOT reduce production aexp -> STR 
-- On DOLLAR reduce production aexp -> STR 
-- On DEQARROW reduce production aexp -> STR 
-- On DARROW reduce production aexp -> STR 
-- On CSET reduce production aexp -> STR 
-- On CREATE reduce production aexp -> STR 
-- On COMMA reduce production aexp -> STR 
-- On COLON reduce production aexp -> STR 
-- On CHOOSE reduce production aexp -> STR 
-- On CHARACTER reduce production aexp -> STR 
-- On CEX reduce production aexp -> STR 
-- On CANONIZE reduce production aexp -> STR 
-- On BOOLEAN reduce production aexp -> STR 
-- On BIJ reduce production aexp -> STR 
-- On BEGIN reduce production aexp -> STR 
-- On BARBAR reduce production aexp -> STR 
-- On BAR reduce production aexp -> STR 
-- On AVTYPE reduce production aexp -> STR 
-- On ASTYPE reduce production aexp -> STR 
-- On ARROW reduce production aexp -> STR 
-- On AND reduce production aexp -> STR 
-- On AMPERSAND reduce production aexp -> STR 

State 38:
appexp -> SQUASH . appexp ARROW repexp USING repexp [ WITH UIDENT TYPE TILDE TEST STR SEMI RPAREN RBRACK RBRACE RANGLE QUALIDENT PUT NSET MODULE MINUS LT LPAREN LIDENT LET LEQ LANGLE INTO INTEGER IN HASH GT GRAMMAR GET GEQ EQUAL EOF END DOT DOLLAR DEQARROW DARROW CSET CREATE COMMA COLON CHOOSE CHARACTER CEX CANONIZE BOOLEAN BEGIN BARBAR BAR ARROW AMPERSAND ]
-- On UIDENT shift to state 5
-- On SYNTH shift to state 36
-- On STR shift to state 37
-- On SQUASH shift to state 38
-- On QUALIDENT shift to state 6
-- On PROJECT shift to state 39
-- On PERM shift to state 40
-- On NSET shift to state 43
-- On LPAREN shift to state 44
-- On LIDENT shift to state 7
-- On LANGLE shift to state 47
-- On INTEGER shift to state 49
-- On HASH shift to state 50
-- On GRAMMAR shift to state 75
-- On CSET shift to state 81
-- On CHARACTER shift to state 82
-- On CEX shift to state 83
-- On BOOLEAN shift to state 134
-- On BEGIN shift to state 135
-- On tyexp shift to state 136
-- On repexp shift to state 157
-- On qid shift to state 158
-- On matchexp shift to state 159
-- On appexp shift to state 431
-- On aexp shift to state 162

State 39:
appexp -> PROJECT . appexp ARROW repexp [ WITH UIDENT TYPE TILDE TEST STR SEMI RPAREN RBRACK RBRACE RANGLE QUALIDENT PUT NSET MODULE MINUS LT LPAREN LIDENT LET LEQ LANGLE INTO INTEGER IN HASH GT GRAMMAR GET GEQ EQUAL EOF END DOT DOLLAR DEQARROW DARROW CSET CREATE COMMA COLON CHOOSE CHARACTER CEX CANONIZE BOOLEAN BEGIN BARBAR BAR ARROW AMPERSAND ]
-- On UIDENT shift to state 5
-- On SYNTH shift to state 36
-- On STR shift to state 37
-- On SQUASH shift to state 38
-- On QUALIDENT shift to state 6
-- On PROJECT shift to state 39
-- On PERM shift to state 40
-- On NSET shift to state 43
-- On LPAREN shift to state 44
-- On LIDENT shift to state 7
-- On LANGLE shift to state 47
-- On INTEGER shift to state 49
-- On HASH shift to state 50
-- On GRAMMAR shift to state 75
-- On CSET shift to state 81
-- On CHARACTER shift to state 82
-- On CEX shift to state 83
-- On BOOLEAN shift to state 134
-- On BEGIN shift to state 135
-- On tyexp shift to state 136
-- On repexp shift to state 157
-- On qid shift to state 158
-- On matchexp shift to state 159
-- On appexp shift to state 428
-- On aexp shift to state 162

State 40:
appexp -> PERM . LPAREN listexp1 WITH repexp [ WITH UIDENT TYPE TILDE TEST STR SEMI RPAREN RBRACK RBRACE RANGLE QUALIDENT PUT NSET MODULE MINUS LT LPAREN LIDENT LET LEQ LANGLE INTO INTEGER IN HASH GT GRAMMAR GET GEQ EQUAL EOF END DOT DOLLAR DEQARROW DARROW CSET CREATE COMMA COLON CHOOSE CHARACTER CEX CANONIZE BOOLEAN BEGIN BARBAR BAR ARROW AMPERSAND ]
-- On LPAREN shift to state 41

State 41:
appexp -> PERM LPAREN . listexp1 WITH repexp [ WITH UIDENT TYPE TILDE TEST STR SEMI RPAREN RBRACK RBRACE RANGLE QUALIDENT PUT NSET MODULE MINUS LT LPAREN LIDENT LET LEQ LANGLE INTO INTEGER IN HASH GT GRAMMAR GET GEQ EQUAL EOF END DOT DOLLAR DEQARROW DARROW CSET CREATE COMMA COLON CHOOSE CHARACTER CEX CANONIZE BOOLEAN BEGIN BARBAR BAR ARROW AMPERSAND ]
-- On UIDENT shift to state 5
-- On SYNTH shift to state 36
-- On STR shift to state 37
-- On SQUASH shift to state 38
-- On RPAREN shift to state 42
-- On QUALIDENT shift to state 6
-- On PROJECT shift to state 39
-- On PERM shift to state 40
-- On NSET shift to state 43
-- On LPAREN shift to state 44
-- On LIDENT shift to state 7
-- On LANGLE shift to state 47
-- On INTEGER shift to state 49
-- On HASH shift to state 50
-- On GRAMMAR shift to state 75
-- On CSET shift to state 81
-- On CHARACTER shift to state 82
-- On CEX shift to state 83
-- On BOOLEAN shift to state 134
-- On BEGIN shift to state 135
-- On tyexp shift to state 136
-- On repexp shift to state 157
-- On qid shift to state 158
-- On matchexp shift to state 159
-- On listexp1 shift to state 421
-- On appexp shift to state 424
-- On aexp shift to state 162

State 42:
listexp1 -> RPAREN . [ WITH ]
-- On WITH reduce production listexp1 -> RPAREN 

State 43:
aexp -> NSET . [ WITH VTYPE USING UIDENT TYPE TILDE TEST STYPE STR STAR SEMI RPAREN RBRACK RBRACE RANGLE QUALIDENT QMARK PUT PLUS NSET MODULE MINUS LT LPAREN LIDENT LET LEQ LBRACE LANGLE INTO INTEGER IN HASH GT GRAMMAR GET GEQ EQUAL EOF END DOT DOLLAR DEQARROW DARROW CSET CREATE COMMA COLON CHOOSE CHARACTER CEX CANONIZE BOOLEAN BIJ BEGIN BARBAR BAR AVTYPE ASTYPE ARROW AND AMPERSAND ]
-- On WITH reduce production aexp -> NSET 
-- On VTYPE reduce production aexp -> NSET 
-- On USING reduce production aexp -> NSET 
-- On UIDENT reduce production aexp -> NSET 
-- On TYPE reduce production aexp -> NSET 
-- On TILDE reduce production aexp -> NSET 
-- On TEST reduce production aexp -> NSET 
-- On STYPE reduce production aexp -> NSET 
-- On STR reduce production aexp -> NSET 
-- On STAR reduce production aexp -> NSET 
-- On SEMI reduce production aexp -> NSET 
-- On RPAREN reduce production aexp -> NSET 
-- On RBRACK reduce production aexp -> NSET 
-- On RBRACE reduce production aexp -> NSET 
-- On RANGLE reduce production aexp -> NSET 
-- On QUALIDENT reduce production aexp -> NSET 
-- On QMARK reduce production aexp -> NSET 
-- On PUT reduce production aexp -> NSET 
-- On PLUS reduce production aexp -> NSET 
-- On NSET reduce production aexp -> NSET 
-- On MODULE reduce production aexp -> NSET 
-- On MINUS reduce production aexp -> NSET 
-- On LT reduce production aexp -> NSET 
-- On LPAREN reduce production aexp -> NSET 
-- On LIDENT reduce production aexp -> NSET 
-- On LET reduce production aexp -> NSET 
-- On LEQ reduce production aexp -> NSET 
-- On LBRACE reduce production aexp -> NSET 
-- On LANGLE reduce production aexp -> NSET 
-- On INTO reduce production aexp -> NSET 
-- On INTEGER reduce production aexp -> NSET 
-- On IN reduce production aexp -> NSET 
-- On HASH reduce production aexp -> NSET 
-- On GT reduce production aexp -> NSET 
-- On GRAMMAR reduce production aexp -> NSET 
-- On GET reduce production aexp -> NSET 
-- On GEQ reduce production aexp -> NSET 
-- On EQUAL reduce production aexp -> NSET 
-- On EOF reduce production aexp -> NSET 
-- On END reduce production aexp -> NSET 
-- On DOT reduce production aexp -> NSET 
-- On DOLLAR reduce production aexp -> NSET 
-- On DEQARROW reduce production aexp -> NSET 
-- On DARROW reduce production aexp -> NSET 
-- On CSET reduce production aexp -> NSET 
-- On CREATE reduce production aexp -> NSET 
-- On COMMA reduce production aexp -> NSET 
-- On COLON reduce production aexp -> NSET 
-- On CHOOSE reduce production aexp -> NSET 
-- On CHARACTER reduce production aexp -> NSET 
-- On CEX reduce production aexp -> NSET 
-- On CANONIZE reduce production aexp -> NSET 
-- On BOOLEAN reduce production aexp -> NSET 
-- On BIJ reduce production aexp -> NSET 
-- On BEGIN reduce production aexp -> NSET 
-- On BARBAR reduce production aexp -> NSET 
-- On BAR reduce production aexp -> NSET 
-- On AVTYPE reduce production aexp -> NSET 
-- On ASTYPE reduce production aexp -> NSET 
-- On ARROW reduce production aexp -> NSET 
-- On AND reduce production aexp -> NSET 
-- On AMPERSAND reduce production aexp -> NSET 

State 44:
aexp -> LPAREN . exp RPAREN [ WITH VTYPE USING UIDENT TYPE TILDE TEST STYPE STR STAR SEMI RPAREN RBRACK RBRACE RANGLE QUALIDENT QMARK PUT PLUS NSET MODULE MINUS LT LPAREN LIDENT LET LEQ LBRACE LANGLE INTO INTEGER IN HASH GT GRAMMAR GET GEQ EQUAL EOF END DOT DOLLAR DEQARROW DARROW CSET CREATE COMMA COLON CHOOSE CHARACTER CEX CANONIZE BOOLEAN BIJ BEGIN BARBAR BAR AVTYPE ASTYPE ARROW AND AMPERSAND ]
aexp -> LPAREN . RPAREN [ WITH VTYPE USING UIDENT TYPE TILDE TEST STYPE STR STAR SEMI RPAREN RBRACK RBRACE RANGLE QUALIDENT QMARK PUT PLUS NSET MODULE MINUS LT LPAREN LIDENT LET LEQ LBRACE LANGLE INTO INTEGER IN HASH GT GRAMMAR GET GEQ EQUAL EOF END DOT DOLLAR DEQARROW DARROW CSET CREATE COMMA COLON CHOOSE CHARACTER CEX CANONIZE BOOLEAN BIJ BEGIN BARBAR BAR AVTYPE ASTYPE ARROW AND AMPERSAND ]
-- On UIDENT shift to state 5
-- On SYNTH shift to state 36
-- On STR shift to state 37
-- On SQUASH shift to state 38
-- On RPAREN shift to state 45
-- On QUALIDENT shift to state 6
-- On PROJECT shift to state 39
-- On PERM shift to state 40
-- On NSET shift to state 43
-- On MINUS shift to state 46
-- On MATCH shift to state 48
-- On LPAREN shift to state 44
-- On LIDENT shift to state 7
-- On LET shift to state 85
-- On LANGLE shift to state 47
-- On INTEGER shift to state 49
-- On HASH shift to state 50
-- On GRAMMAR shift to state 75
-- On FUN shift to state 123
-- On CSET shift to state 81
-- On CHARACTER shift to state 82
-- On CEX shift to state 83
-- On BOOLEAN shift to state 134
-- On BEGIN shift to state 135
-- On tyexp shift to state 136
-- On tildeexp shift to state 155
-- On rewriteexp shift to state 168
-- On repexp shift to state 157
-- On qid shift to state 158
-- On obarexp shift to state 176
-- On minusexp shift to state 178
-- On matchexp shift to state 159
-- On ltexp shift to state 179
-- On leqexp shift to state 180
-- On lenscomponentexp shift to state 181
-- On infixexp shift to state 182
-- On gtexp shift to state 185
-- On geqexp shift to state 186
-- On funexp shift to state 230
-- On exp shift to state 419
-- On equalexp shift to state 233
-- On dotexp shift to state 188
-- On dbarexp shift to state 238
-- On composeexp shift to state 241
-- On commaexp shift to state 247
-- On cexp shift to state 248
-- On barexp shift to state 246
-- On appexp shift to state 192
-- On ampexp shift to state 226
-- On ampampexp shift to state 229
-- On aexp shift to state 162

State 45:
aexp -> LPAREN RPAREN . [ WITH VTYPE USING UIDENT TYPE TILDE TEST STYPE STR STAR SEMI RPAREN RBRACK RBRACE RANGLE QUALIDENT QMARK PUT PLUS NSET MODULE MINUS LT LPAREN LIDENT LET LEQ LBRACE LANGLE INTO INTEGER IN HASH GT GRAMMAR GET GEQ EQUAL EOF END DOT DOLLAR DEQARROW DARROW CSET CREATE COMMA COLON CHOOSE CHARACTER CEX CANONIZE BOOLEAN BIJ BEGIN BARBAR BAR AVTYPE ASTYPE ARROW AND AMPERSAND ]
-- On WITH reduce production aexp -> LPAREN RPAREN 
-- On VTYPE reduce production aexp -> LPAREN RPAREN 
-- On USING reduce production aexp -> LPAREN RPAREN 
-- On UIDENT reduce production aexp -> LPAREN RPAREN 
-- On TYPE reduce production aexp -> LPAREN RPAREN 
-- On TILDE reduce production aexp -> LPAREN RPAREN 
-- On TEST reduce production aexp -> LPAREN RPAREN 
-- On STYPE reduce production aexp -> LPAREN RPAREN 
-- On STR reduce production aexp -> LPAREN RPAREN 
-- On STAR reduce production aexp -> LPAREN RPAREN 
-- On SEMI reduce production aexp -> LPAREN RPAREN 
-- On RPAREN reduce production aexp -> LPAREN RPAREN 
-- On RBRACK reduce production aexp -> LPAREN RPAREN 
-- On RBRACE reduce production aexp -> LPAREN RPAREN 
-- On RANGLE reduce production aexp -> LPAREN RPAREN 
-- On QUALIDENT reduce production aexp -> LPAREN RPAREN 
-- On QMARK reduce production aexp -> LPAREN RPAREN 
-- On PUT reduce production aexp -> LPAREN RPAREN 
-- On PLUS reduce production aexp -> LPAREN RPAREN 
-- On NSET reduce production aexp -> LPAREN RPAREN 
-- On MODULE reduce production aexp -> LPAREN RPAREN 
-- On MINUS reduce production aexp -> LPAREN RPAREN 
-- On LT reduce production aexp -> LPAREN RPAREN 
-- On LPAREN reduce production aexp -> LPAREN RPAREN 
-- On LIDENT reduce production aexp -> LPAREN RPAREN 
-- On LET reduce production aexp -> LPAREN RPAREN 
-- On LEQ reduce production aexp -> LPAREN RPAREN 
-- On LBRACE reduce production aexp -> LPAREN RPAREN 
-- On LANGLE reduce production aexp -> LPAREN RPAREN 
-- On INTO reduce production aexp -> LPAREN RPAREN 
-- On INTEGER reduce production aexp -> LPAREN RPAREN 
-- On IN reduce production aexp -> LPAREN RPAREN 
-- On HASH reduce production aexp -> LPAREN RPAREN 
-- On GT reduce production aexp -> LPAREN RPAREN 
-- On GRAMMAR reduce production aexp -> LPAREN RPAREN 
-- On GET reduce production aexp -> LPAREN RPAREN 
-- On GEQ reduce production aexp -> LPAREN RPAREN 
-- On EQUAL reduce production aexp -> LPAREN RPAREN 
-- On EOF reduce production aexp -> LPAREN RPAREN 
-- On END reduce production aexp -> LPAREN RPAREN 
-- On DOT reduce production aexp -> LPAREN RPAREN 
-- On DOLLAR reduce production aexp -> LPAREN RPAREN 
-- On DEQARROW reduce production aexp -> LPAREN RPAREN 
-- On DARROW reduce production aexp -> LPAREN RPAREN 
-- On CSET reduce production aexp -> LPAREN RPAREN 
-- On CREATE reduce production aexp -> LPAREN RPAREN 
-- On COMMA reduce production aexp -> LPAREN RPAREN 
-- On COLON reduce production aexp -> LPAREN RPAREN 
-- On CHOOSE reduce production aexp -> LPAREN RPAREN 
-- On CHARACTER reduce production aexp -> LPAREN RPAREN 
-- On CEX reduce production aexp -> LPAREN RPAREN 
-- On CANONIZE reduce production aexp -> LPAREN RPAREN 
-- On BOOLEAN reduce production aexp -> LPAREN RPAREN 
-- On BIJ reduce production aexp -> LPAREN RPAREN 
-- On BEGIN reduce production aexp -> LPAREN RPAREN 
-- On BARBAR reduce production aexp -> LPAREN RPAREN 
-- On BAR reduce production aexp -> LPAREN RPAREN 
-- On AVTYPE reduce production aexp -> LPAREN RPAREN 
-- On ASTYPE reduce production aexp -> LPAREN RPAREN 
-- On ARROW reduce production aexp -> LPAREN RPAREN 
-- On AND reduce production aexp -> LPAREN RPAREN 
-- On AMPERSAND reduce production aexp -> LPAREN RPAREN 

State 46:
minusexp -> MINUS . appexp [ WITH TYPE TEST SEMI RPAREN RBRACK RANGLE MODULE MINUS LET IN EQUAL EOF END DOLLAR COMMA COLON BARBAR BAR ]
-- On UIDENT shift to state 5
-- On SYNTH shift to state 36
-- On STR shift to state 37
-- On SQUASH shift to state 38
-- On QUALIDENT shift to state 6
-- On PROJECT shift to state 39
-- On PERM shift to state 40
-- On NSET shift to state 43
-- On LPAREN shift to state 44
-- On LIDENT shift to state 7
-- On LANGLE shift to state 47
-- On INTEGER shift to state 49
-- On HASH shift to state 50
-- On GRAMMAR shift to state 75
-- On CSET shift to state 81
-- On CHARACTER shift to state 82
-- On CEX shift to state 83
-- On BOOLEAN shift to state 134
-- On BEGIN shift to state 135
-- On tyexp shift to state 136
-- On repexp shift to state 157
-- On qid shift to state 158
-- On matchexp shift to state 159
-- On appexp shift to state 418
-- On aexp shift to state 162

State 47:
matchexp -> LANGLE . exp RANGLE [ WITH VTYPE USING UIDENT TYPE TILDE TEST STYPE STR STAR SEMI RPAREN RBRACK RBRACE RANGLE QUALIDENT QMARK PUT PLUS NSET MODULE MINUS LT LPAREN LIDENT LET LEQ LBRACE LANGLE INTO INTEGER IN HASH GT GRAMMAR GET GEQ EQUAL EOF END DOT DOLLAR DEQARROW DARROW CSET CREATE COMMA COLON CHOOSE CHARACTER CEX CANONIZE BOOLEAN BIJ BEGIN BARBAR BAR AVTYPE ASTYPE ARROW AND AMPERSAND ]
matchexp -> LANGLE . appexp COLON exp RANGLE [ WITH VTYPE USING UIDENT TYPE TILDE TEST STYPE STR STAR SEMI RPAREN RBRACK RBRACE RANGLE QUALIDENT QMARK PUT PLUS NSET MODULE MINUS LT LPAREN LIDENT LET LEQ LBRACE LANGLE INTO INTEGER IN HASH GT GRAMMAR GET GEQ EQUAL EOF END DOT DOLLAR DEQARROW DARROW CSET CREATE COMMA COLON CHOOSE CHARACTER CEX CANONIZE BOOLEAN BIJ BEGIN BARBAR BAR AVTYPE ASTYPE ARROW AND AMPERSAND ]
-- On UIDENT shift to state 5
-- On SYNTH shift to state 36
-- On STR shift to state 37
-- On SQUASH shift to state 38
-- On QUALIDENT shift to state 6
-- On PROJECT shift to state 39
-- On PERM shift to state 40
-- On NSET shift to state 43
-- On MINUS shift to state 46
-- On MATCH shift to state 48
-- On LPAREN shift to state 44
-- On LIDENT shift to state 7
-- On LET shift to state 85
-- On LANGLE shift to state 47
-- On INTEGER shift to state 49
-- On HASH shift to state 50
-- On GRAMMAR shift to state 75
-- On FUN shift to state 123
-- On CSET shift to state 81
-- On CHARACTER shift to state 82
-- On CEX shift to state 83
-- On BOOLEAN shift to state 134
-- On BEGIN shift to state 135
-- On tyexp shift to state 136
-- On tildeexp shift to state 155
-- On rewriteexp shift to state 168
-- On repexp shift to state 157
-- On qid shift to state 158
-- On obarexp shift to state 176
-- On minusexp shift to state 178
-- On matchexp shift to state 159
-- On ltexp shift to state 179
-- On leqexp shift to state 180
-- On lenscomponentexp shift to state 181
-- On infixexp shift to state 182
-- On gtexp shift to state 185
-- On geqexp shift to state 186
-- On funexp shift to state 230
-- On exp shift to state 412
-- On equalexp shift to state 233
-- On dotexp shift to state 188
-- On dbarexp shift to state 238
-- On composeexp shift to state 241
-- On commaexp shift to state 247
-- On cexp shift to state 248
-- On barexp shift to state 246
-- On appexp shift to state 414
-- On ampexp shift to state 226
-- On ampampexp shift to state 229
-- On aexp shift to state 162

State 48:
cexp -> MATCH . composeexp WITH branch_list [ TYPE TEST RPAREN RANGLE MODULE LET IN EOF END DOLLAR ]
cexp -> MATCH . composeexp WITH branch_list COLON sort [ TYPE TEST RPAREN RANGLE MODULE LET IN EOF END DOLLAR ]
-- On UIDENT shift to state 5
-- On SYNTH shift to state 36
-- On STR shift to state 37
-- On SQUASH shift to state 38
-- On QUALIDENT shift to state 6
-- On PROJECT shift to state 39
-- On PERM shift to state 40
-- On NSET shift to state 43
-- On MINUS shift to state 46
-- On LPAREN shift to state 44
-- On LIDENT shift to state 7
-- On LANGLE shift to state 47
-- On INTEGER shift to state 49
-- On HASH shift to state 50
-- On GRAMMAR shift to state 75
-- On CSET shift to state 81
-- On CHARACTER shift to state 82
-- On CEX shift to state 83
-- On BOOLEAN shift to state 134
-- On BEGIN shift to state 135
-- On tyexp shift to state 136
-- On tildeexp shift to state 155
-- On rewriteexp shift to state 168
-- On repexp shift to state 157
-- On qid shift to state 158
-- On obarexp shift to state 176
-- On minusexp shift to state 178
-- On matchexp shift to state 159
-- On ltexp shift to state 179
-- On leqexp shift to state 180
-- On lenscomponentexp shift to state 181
-- On infixexp shift to state 182
-- On gtexp shift to state 185
-- On geqexp shift to state 186
-- On equalexp shift to state 233
-- On dotexp shift to state 188
-- On dbarexp shift to state 238
-- On composeexp shift to state 396
-- On commaexp shift to state 247
-- On barexp shift to state 246
-- On appexp shift to state 192
-- On ampexp shift to state 226
-- On ampampexp shift to state 229
-- On aexp shift to state 162

State 49:
aexp -> INTEGER . [ WITH VTYPE USING UIDENT TYPE TILDE TEST STYPE STR STAR SEMI RPAREN RBRACK RBRACE RANGLE QUALIDENT QMARK PUT PLUS NSET MODULE MINUS LT LPAREN LIDENT LET LEQ LBRACE LANGLE INTO INTEGER IN HASH GT GRAMMAR GET GEQ EQUAL EOF END DOT DOLLAR DEQARROW DARROW CSET CREATE COMMA COLON CHOOSE CHARACTER CEX CANONIZE BOOLEAN BIJ BEGIN BARBAR BAR AVTYPE ASTYPE ARROW AND AMPERSAND ]
-- On WITH reduce production aexp -> INTEGER 
-- On VTYPE reduce production aexp -> INTEGER 
-- On USING reduce production aexp -> INTEGER 
-- On UIDENT reduce production aexp -> INTEGER 
-- On TYPE reduce production aexp -> INTEGER 
-- On TILDE reduce production aexp -> INTEGER 
-- On TEST reduce production aexp -> INTEGER 
-- On STYPE reduce production aexp -> INTEGER 
-- On STR reduce production aexp -> INTEGER 
-- On STAR reduce production aexp -> INTEGER 
-- On SEMI reduce production aexp -> INTEGER 
-- On RPAREN reduce production aexp -> INTEGER 
-- On RBRACK reduce production aexp -> INTEGER 
-- On RBRACE reduce production aexp -> INTEGER 
-- On RANGLE reduce production aexp -> INTEGER 
-- On QUALIDENT reduce production aexp -> INTEGER 
-- On QMARK reduce production aexp -> INTEGER 
-- On PUT reduce production aexp -> INTEGER 
-- On PLUS reduce production aexp -> INTEGER 
-- On NSET reduce production aexp -> INTEGER 
-- On MODULE reduce production aexp -> INTEGER 
-- On MINUS reduce production aexp -> INTEGER 
-- On LT reduce production aexp -> INTEGER 
-- On LPAREN reduce production aexp -> INTEGER 
-- On LIDENT reduce production aexp -> INTEGER 
-- On LET reduce production aexp -> INTEGER 
-- On LEQ reduce production aexp -> INTEGER 
-- On LBRACE reduce production aexp -> INTEGER 
-- On LANGLE reduce production aexp -> INTEGER 
-- On INTO reduce production aexp -> INTEGER 
-- On INTEGER reduce production aexp -> INTEGER 
-- On IN reduce production aexp -> INTEGER 
-- On HASH reduce production aexp -> INTEGER 
-- On GT reduce production aexp -> INTEGER 
-- On GRAMMAR reduce production aexp -> INTEGER 
-- On GET reduce production aexp -> INTEGER 
-- On GEQ reduce production aexp -> INTEGER 
-- On EQUAL reduce production aexp -> INTEGER 
-- On EOF reduce production aexp -> INTEGER 
-- On END reduce production aexp -> INTEGER 
-- On DOT reduce production aexp -> INTEGER 
-- On DOLLAR reduce production aexp -> INTEGER 
-- On DEQARROW reduce production aexp -> INTEGER 
-- On DARROW reduce production aexp -> INTEGER 
-- On CSET reduce production aexp -> INTEGER 
-- On CREATE reduce production aexp -> INTEGER 
-- On COMMA reduce production aexp -> INTEGER 
-- On COLON reduce production aexp -> INTEGER 
-- On CHOOSE reduce production aexp -> INTEGER 
-- On CHARACTER reduce production aexp -> INTEGER 
-- On CEX reduce production aexp -> INTEGER 
-- On CANONIZE reduce production aexp -> INTEGER 
-- On BOOLEAN reduce production aexp -> INTEGER 
-- On BIJ reduce production aexp -> INTEGER 
-- On BEGIN reduce production aexp -> INTEGER 
-- On BARBAR reduce production aexp -> INTEGER 
-- On BAR reduce production aexp -> INTEGER 
-- On AVTYPE reduce production aexp -> INTEGER 
-- On ASTYPE reduce production aexp -> INTEGER 
-- On ARROW reduce production aexp -> INTEGER 
-- On AND reduce production aexp -> INTEGER 
-- On AMPERSAND reduce production aexp -> INTEGER 

State 50:
aexp -> HASH . LBRACE sort LLIST boomerang_bparser_list [ WITH VTYPE USING UIDENT TYPE TILDE TEST STYPE STR STAR SEMI RPAREN RBRACK RBRACE RANGLE QUALIDENT QMARK PUT PLUS NSET MODULE MINUS LT LPAREN LIDENT LET LEQ LBRACE LANGLE INTO INTEGER IN HASH GT GRAMMAR GET GEQ EQUAL EOF END DOT DOLLAR DEQARROW DARROW CSET CREATE COMMA COLON CHOOSE CHARACTER CEX CANONIZE BOOLEAN BIJ BEGIN BARBAR BAR AVTYPE ASTYPE ARROW AND AMPERSAND ]
-- On LBRACE shift to state 51

State 51:
aexp -> HASH LBRACE . sort LLIST boomerang_bparser_list [ WITH VTYPE USING UIDENT TYPE TILDE TEST STYPE STR STAR SEMI RPAREN RBRACK RBRACE RANGLE QUALIDENT QMARK PUT PLUS NSET MODULE MINUS LT LPAREN LIDENT LET LEQ LBRACE LANGLE INTO INTEGER IN HASH GT GRAMMAR GET GEQ EQUAL EOF END DOT DOLLAR DEQARROW DARROW CSET CREATE COMMA COLON CHOOSE CHARACTER CEX CANONIZE BOOLEAN BIJ BEGIN BARBAR BAR AVTYPE ASTYPE ARROW AND AMPERSAND ]
-- On UNIT shift to state 24
-- On TYVARIDENT shift to state 12
-- On STRINGPREFS shift to state 25
-- On STRINGLISTPREFS shift to state 26
-- On STRING shift to state 27
-- On SKELETONS shift to state 28
-- On RESOURCES shift to state 29
-- On REGEXP shift to state 30
-- On QUALIDENT shift to state 31
-- On LPAREN shift to state 32
-- On LIDENT shift to state 52
-- On LENS shift to state 53
-- On INTPREFS shift to state 54
-- On INT shift to state 55
-- On FORALL shift to state 56
-- On CHAR shift to state 59
-- On CANONIZER shift to state 60
-- On BOOLPREFS shift to state 61
-- On BOOL shift to state 62
-- On AREGEXP shift to state 63
-- On tyvar shift to state 64
-- On sort shift to state 388
-- On qvar shift to state 66
-- On productsort shift to state 67
-- On datatypesort shift to state 149
-- On bsort shift to state 150
-- On asort shift to state 152
-- On arrowsort shift to state 153

State 52:
qvar -> LIDENT . [ WHERE TYPE TEST STAR RPAREN RBRACE RANGLE QUALIDENT MODULE LLIST LIDENT LET IN EQUAL EOF END DOLLAR COMMA BAR ARROW ]
-- On WHERE reduce production qvar -> LIDENT 
-- On TYPE reduce production qvar -> LIDENT 
-- On TEST reduce production qvar -> LIDENT 
-- On STAR reduce production qvar -> LIDENT 
-- On RPAREN reduce production qvar -> LIDENT 
-- On RBRACE reduce production qvar -> LIDENT 
-- On RANGLE reduce production qvar -> LIDENT 
-- On QUALIDENT reduce production qvar -> LIDENT 
-- On MODULE reduce production qvar -> LIDENT 
-- On LLIST reduce production qvar -> LIDENT 
-- On LIDENT reduce production qvar -> LIDENT 
-- On LET reduce production qvar -> LIDENT 
-- On IN reduce production qvar -> LIDENT 
-- On EQUAL reduce production qvar -> LIDENT 
-- On EOF reduce production qvar -> LIDENT 
-- On END reduce production qvar -> LIDENT 
-- On DOLLAR reduce production qvar -> LIDENT 
-- On COMMA reduce production qvar -> LIDENT 
-- On BAR reduce production qvar -> LIDENT 
-- On ARROW reduce production qvar -> LIDENT 

State 53:
asort -> LENS . [ WHERE TYPE TEST STAR RPAREN RBRACE RANGLE QUALIDENT MODULE LLIST LIDENT LET IN EQUAL EOF END DOLLAR COMMA BAR ARROW ]
-- On WHERE reduce production asort -> LENS 
-- On TYPE reduce production asort -> LENS 
-- On TEST reduce production asort -> LENS 
-- On STAR reduce production asort -> LENS 
-- On RPAREN reduce production asort -> LENS 
-- On RBRACE reduce production asort -> LENS 
-- On RANGLE reduce production asort -> LENS 
-- On QUALIDENT reduce production asort -> LENS 
-- On MODULE reduce production asort -> LENS 
-- On LLIST reduce production asort -> LENS 
-- On LIDENT reduce production asort -> LENS 
-- On LET reduce production asort -> LENS 
-- On IN reduce production asort -> LENS 
-- On EQUAL reduce production asort -> LENS 
-- On EOF reduce production asort -> LENS 
-- On END reduce production asort -> LENS 
-- On DOLLAR reduce production asort -> LENS 
-- On COMMA reduce production asort -> LENS 
-- On BAR reduce production asort -> LENS 
-- On ARROW reduce production asort -> LENS 

State 54:
asort -> INTPREFS . [ WHERE TYPE TEST STAR RPAREN RBRACE RANGLE QUALIDENT MODULE LLIST LIDENT LET IN EQUAL EOF END DOLLAR COMMA BAR ARROW ]
-- On WHERE reduce production asort -> INTPREFS 
-- On TYPE reduce production asort -> INTPREFS 
-- On TEST reduce production asort -> INTPREFS 
-- On STAR reduce production asort -> INTPREFS 
-- On RPAREN reduce production asort -> INTPREFS 
-- On RBRACE reduce production asort -> INTPREFS 
-- On RANGLE reduce production asort -> INTPREFS 
-- On QUALIDENT reduce production asort -> INTPREFS 
-- On MODULE reduce production asort -> INTPREFS 
-- On LLIST reduce production asort -> INTPREFS 
-- On LIDENT reduce production asort -> INTPREFS 
-- On LET reduce production asort -> INTPREFS 
-- On IN reduce production asort -> INTPREFS 
-- On EQUAL reduce production asort -> INTPREFS 
-- On EOF reduce production asort -> INTPREFS 
-- On END reduce production asort -> INTPREFS 
-- On DOLLAR reduce production asort -> INTPREFS 
-- On COMMA reduce production asort -> INTPREFS 
-- On BAR reduce production asort -> INTPREFS 
-- On ARROW reduce production asort -> INTPREFS 

State 55:
asort -> INT . [ WHERE TYPE TEST STAR RPAREN RBRACE RANGLE QUALIDENT MODULE LLIST LIDENT LET IN EQUAL EOF END DOLLAR COMMA BAR ARROW ]
-- On WHERE reduce production asort -> INT 
-- On TYPE reduce production asort -> INT 
-- On TEST reduce production asort -> INT 
-- On STAR reduce production asort -> INT 
-- On RPAREN reduce production asort -> INT 
-- On RBRACE reduce production asort -> INT 
-- On RANGLE reduce production asort -> INT 
-- On QUALIDENT reduce production asort -> INT 
-- On MODULE reduce production asort -> INT 
-- On LLIST reduce production asort -> INT 
-- On LIDENT reduce production asort -> INT 
-- On LET reduce production asort -> INT 
-- On IN reduce production asort -> INT 
-- On EQUAL reduce production asort -> INT 
-- On EOF reduce production asort -> INT 
-- On END reduce production asort -> INT 
-- On DOLLAR reduce production asort -> INT 
-- On COMMA reduce production asort -> INT 
-- On BAR reduce production asort -> INT 
-- On ARROW reduce production asort -> INT 

State 56:
sort -> FORALL . TYVARIDENT EQARROW sort [ WHERE TYPE TEST RPAREN RBRACE RANGLE MODULE LLIST LET IN EQUAL EOF END DOLLAR COMMA BAR ]
-- On TYVARIDENT shift to state 57

State 57:
sort -> FORALL TYVARIDENT . EQARROW sort [ WHERE TYPE TEST RPAREN RBRACE RANGLE MODULE LLIST LET IN EQUAL EOF END DOLLAR COMMA BAR ]
-- On EQARROW shift to state 58

State 58:
sort -> FORALL TYVARIDENT EQARROW . sort [ WHERE TYPE TEST RPAREN RBRACE RANGLE MODULE LLIST LET IN EQUAL EOF END DOLLAR COMMA BAR ]
-- On UNIT shift to state 24
-- On TYVARIDENT shift to state 12
-- On STRINGPREFS shift to state 25
-- On STRINGLISTPREFS shift to state 26
-- On STRING shift to state 27
-- On SKELETONS shift to state 28
-- On RESOURCES shift to state 29
-- On REGEXP shift to state 30
-- On QUALIDENT shift to state 31
-- On LPAREN shift to state 32
-- On LIDENT shift to state 52
-- On LENS shift to state 53
-- On INTPREFS shift to state 54
-- On INT shift to state 55
-- On FORALL shift to state 56
-- On CHAR shift to state 59
-- On CANONIZER shift to state 60
-- On BOOLPREFS shift to state 61
-- On BOOL shift to state 62
-- On AREGEXP shift to state 63
-- On tyvar shift to state 64
-- On sort shift to state 65
-- On qvar shift to state 66
-- On productsort shift to state 67
-- On datatypesort shift to state 149
-- On bsort shift to state 150
-- On asort shift to state 152
-- On arrowsort shift to state 153

State 59:
asort -> CHAR . [ WHERE TYPE TEST STAR RPAREN RBRACE RANGLE QUALIDENT MODULE LLIST LIDENT LET IN EQUAL EOF END DOLLAR COMMA BAR ARROW ]
-- On WHERE reduce production asort -> CHAR 
-- On TYPE reduce production asort -> CHAR 
-- On TEST reduce production asort -> CHAR 
-- On STAR reduce production asort -> CHAR 
-- On RPAREN reduce production asort -> CHAR 
-- On RBRACE reduce production asort -> CHAR 
-- On RANGLE reduce production asort -> CHAR 
-- On QUALIDENT reduce production asort -> CHAR 
-- On MODULE reduce production asort -> CHAR 
-- On LLIST reduce production asort -> CHAR 
-- On LIDENT reduce production asort -> CHAR 
-- On LET reduce production asort -> CHAR 
-- On IN reduce production asort -> CHAR 
-- On EQUAL reduce production asort -> CHAR 
-- On EOF reduce production asort -> CHAR 
-- On END reduce production asort -> CHAR 
-- On DOLLAR reduce production asort -> CHAR 
-- On COMMA reduce production asort -> CHAR 
-- On BAR reduce production asort -> CHAR 
-- On ARROW reduce production asort -> CHAR 

State 60:
asort -> CANONIZER . [ WHERE TYPE TEST STAR RPAREN RBRACE RANGLE QUALIDENT MODULE LLIST LIDENT LET IN EQUAL EOF END DOLLAR COMMA BAR ARROW ]
-- On WHERE reduce production asort -> CANONIZER 
-- On TYPE reduce production asort -> CANONIZER 
-- On TEST reduce production asort -> CANONIZER 
-- On STAR reduce production asort -> CANONIZER 
-- On RPAREN reduce production asort -> CANONIZER 
-- On RBRACE reduce production asort -> CANONIZER 
-- On RANGLE reduce production asort -> CANONIZER 
-- On QUALIDENT reduce production asort -> CANONIZER 
-- On MODULE reduce production asort -> CANONIZER 
-- On LLIST reduce production asort -> CANONIZER 
-- On LIDENT reduce production asort -> CANONIZER 
-- On LET reduce production asort -> CANONIZER 
-- On IN reduce production asort -> CANONIZER 
-- On EQUAL reduce production asort -> CANONIZER 
-- On EOF reduce production asort -> CANONIZER 
-- On END reduce production asort -> CANONIZER 
-- On DOLLAR reduce production asort -> CANONIZER 
-- On COMMA reduce production asort -> CANONIZER 
-- On BAR reduce production asort -> CANONIZER 
-- On ARROW reduce production asort -> CANONIZER 

State 61:
asort -> BOOLPREFS . [ WHERE TYPE TEST STAR RPAREN RBRACE RANGLE QUALIDENT MODULE LLIST LIDENT LET IN EQUAL EOF END DOLLAR COMMA BAR ARROW ]
-- On WHERE reduce production asort -> BOOLPREFS 
-- On TYPE reduce production asort -> BOOLPREFS 
-- On TEST reduce production asort -> BOOLPREFS 
-- On STAR reduce production asort -> BOOLPREFS 
-- On RPAREN reduce production asort -> BOOLPREFS 
-- On RBRACE reduce production asort -> BOOLPREFS 
-- On RANGLE reduce production asort -> BOOLPREFS 
-- On QUALIDENT reduce production asort -> BOOLPREFS 
-- On MODULE reduce production asort -> BOOLPREFS 
-- On LLIST reduce production asort -> BOOLPREFS 
-- On LIDENT reduce production asort -> BOOLPREFS 
-- On LET reduce production asort -> BOOLPREFS 
-- On IN reduce production asort -> BOOLPREFS 
-- On EQUAL reduce production asort -> BOOLPREFS 
-- On EOF reduce production asort -> BOOLPREFS 
-- On END reduce production asort -> BOOLPREFS 
-- On DOLLAR reduce production asort -> BOOLPREFS 
-- On COMMA reduce production asort -> BOOLPREFS 
-- On BAR reduce production asort -> BOOLPREFS 
-- On ARROW reduce production asort -> BOOLPREFS 

State 62:
asort -> BOOL . [ WHERE TYPE TEST STAR RPAREN RBRACE RANGLE QUALIDENT MODULE LLIST LIDENT LET IN EQUAL EOF END DOLLAR COMMA BAR ARROW ]
-- On WHERE reduce production asort -> BOOL 
-- On TYPE reduce production asort -> BOOL 
-- On TEST reduce production asort -> BOOL 
-- On STAR reduce production asort -> BOOL 
-- On RPAREN reduce production asort -> BOOL 
-- On RBRACE reduce production asort -> BOOL 
-- On RANGLE reduce production asort -> BOOL 
-- On QUALIDENT reduce production asort -> BOOL 
-- On MODULE reduce production asort -> BOOL 
-- On LLIST reduce production asort -> BOOL 
-- On LIDENT reduce production asort -> BOOL 
-- On LET reduce production asort -> BOOL 
-- On IN reduce production asort -> BOOL 
-- On EQUAL reduce production asort -> BOOL 
-- On EOF reduce production asort -> BOOL 
-- On END reduce production asort -> BOOL 
-- On DOLLAR reduce production asort -> BOOL 
-- On COMMA reduce production asort -> BOOL 
-- On BAR reduce production asort -> BOOL 
-- On ARROW reduce production asort -> BOOL 

State 63:
asort -> AREGEXP . [ WHERE TYPE TEST STAR RPAREN RBRACE RANGLE QUALIDENT MODULE LLIST LIDENT LET IN EQUAL EOF END DOLLAR COMMA BAR ARROW ]
-- On WHERE reduce production asort -> AREGEXP 
-- On TYPE reduce production asort -> AREGEXP 
-- On TEST reduce production asort -> AREGEXP 
-- On STAR reduce production asort -> AREGEXP 
-- On RPAREN reduce production asort -> AREGEXP 
-- On RBRACE reduce production asort -> AREGEXP 
-- On RANGLE reduce production asort -> AREGEXP 
-- On QUALIDENT reduce production asort -> AREGEXP 
-- On MODULE reduce production asort -> AREGEXP 
-- On LLIST reduce production asort -> AREGEXP 
-- On LIDENT reduce production asort -> AREGEXP 
-- On LET reduce production asort -> AREGEXP 
-- On IN reduce production asort -> AREGEXP 
-- On EQUAL reduce production asort -> AREGEXP 
-- On EOF reduce production asort -> AREGEXP 
-- On END reduce production asort -> AREGEXP 
-- On DOLLAR reduce production asort -> AREGEXP 
-- On COMMA reduce production asort -> AREGEXP 
-- On BAR reduce production asort -> AREGEXP 
-- On ARROW reduce production asort -> AREGEXP 

State 64:
asort -> tyvar . [ WHERE TYPE TEST STAR RPAREN RBRACE RANGLE QUALIDENT MODULE LLIST LIDENT LET IN EQUAL EOF END DOLLAR COMMA BAR ARROW ]
-- On WHERE reduce production asort -> tyvar 
-- On TYPE reduce production asort -> tyvar 
-- On TEST reduce production asort -> tyvar 
-- On STAR reduce production asort -> tyvar 
-- On RPAREN reduce production asort -> tyvar 
-- On RBRACE reduce production asort -> tyvar 
-- On RANGLE reduce production asort -> tyvar 
-- On QUALIDENT reduce production asort -> tyvar 
-- On MODULE reduce production asort -> tyvar 
-- On LLIST reduce production asort -> tyvar 
-- On LIDENT reduce production asort -> tyvar 
-- On LET reduce production asort -> tyvar 
-- On IN reduce production asort -> tyvar 
-- On EQUAL reduce production asort -> tyvar 
-- On EOF reduce production asort -> tyvar 
-- On END reduce production asort -> tyvar 
-- On DOLLAR reduce production asort -> tyvar 
-- On COMMA reduce production asort -> tyvar 
-- On BAR reduce production asort -> tyvar 
-- On ARROW reduce production asort -> tyvar 

State 65:
sort -> FORALL TYVARIDENT EQARROW sort . [ WHERE TYPE TEST RPAREN RBRACE RANGLE MODULE LLIST LET IN EQUAL EOF END DOLLAR COMMA BAR ]
-- On WHERE reduce production sort -> FORALL TYVARIDENT EQARROW sort 
-- On TYPE reduce production sort -> FORALL TYVARIDENT EQARROW sort 
-- On TEST reduce production sort -> FORALL TYVARIDENT EQARROW sort 
-- On RPAREN reduce production sort -> FORALL TYVARIDENT EQARROW sort 
-- On RBRACE reduce production sort -> FORALL TYVARIDENT EQARROW sort 
-- On RANGLE reduce production sort -> FORALL TYVARIDENT EQARROW sort 
-- On MODULE reduce production sort -> FORALL TYVARIDENT EQARROW sort 
-- On LLIST reduce production sort -> FORALL TYVARIDENT EQARROW sort 
-- On LET reduce production sort -> FORALL TYVARIDENT EQARROW sort 
-- On IN reduce production sort -> FORALL TYVARIDENT EQARROW sort 
-- On EQUAL reduce production sort -> FORALL TYVARIDENT EQARROW sort 
-- On EOF reduce production sort -> FORALL TYVARIDENT EQARROW sort 
-- On END reduce production sort -> FORALL TYVARIDENT EQARROW sort 
-- On DOLLAR reduce production sort -> FORALL TYVARIDENT EQARROW sort 
-- On COMMA reduce production sort -> FORALL TYVARIDENT EQARROW sort 
-- On BAR reduce production sort -> FORALL TYVARIDENT EQARROW sort 

State 66:
asort -> qvar . [ WHERE TYPE TEST STAR RPAREN RBRACE RANGLE QUALIDENT MODULE LLIST LIDENT LET IN EQUAL EOF END DOLLAR COMMA BAR ARROW ]
-- On WHERE reduce production asort -> qvar 
-- On TYPE reduce production asort -> qvar 
-- On TEST reduce production asort -> qvar 
-- On STAR reduce production asort -> qvar 
-- On RPAREN reduce production asort -> qvar 
-- On RBRACE reduce production asort -> qvar 
-- On RANGLE reduce production asort -> qvar 
-- On QUALIDENT reduce production asort -> qvar 
-- On MODULE reduce production asort -> qvar 
-- On LLIST reduce production asort -> qvar 
-- On LIDENT reduce production asort -> qvar 
-- On LET reduce production asort -> qvar 
-- On IN reduce production asort -> qvar 
-- On EQUAL reduce production asort -> qvar 
-- On EOF reduce production asort -> qvar 
-- On END reduce production asort -> qvar 
-- On DOLLAR reduce production asort -> qvar 
-- On COMMA reduce production asort -> qvar 
-- On BAR reduce production asort -> qvar 
-- On ARROW reduce production asort -> qvar 

State 67:
arrowsort -> productsort . ARROW arrowsort [ WHERE TYPE TEST RPAREN RBRACE RANGLE MODULE LLIST LET IN EQUAL EOF END DOLLAR COMMA BAR ]
arrowsort -> productsort . [ WHERE TYPE TEST RPAREN RBRACE RANGLE MODULE LLIST LET IN EQUAL EOF END DOLLAR COMMA BAR ]
productsort -> productsort . STAR datatypesort [ WHERE TYPE TEST STAR RPAREN RBRACE RANGLE MODULE LLIST LET IN EQUAL EOF END DOLLAR COMMA BAR ARROW ]
-- On STAR shift to state 68
-- On ARROW shift to state 386
-- On WHERE reduce production arrowsort -> productsort 
-- On TYPE reduce production arrowsort -> productsort 
-- On TEST reduce production arrowsort -> productsort 
-- On RPAREN reduce production arrowsort -> productsort 
-- On RBRACE reduce production arrowsort -> productsort 
-- On RANGLE reduce production arrowsort -> productsort 
-- On MODULE reduce production arrowsort -> productsort 
-- On LLIST reduce production arrowsort -> productsort 
-- On LET reduce production arrowsort -> productsort 
-- On IN reduce production arrowsort -> productsort 
-- On EQUAL reduce production arrowsort -> productsort 
-- On EOF reduce production arrowsort -> productsort 
-- On END reduce production arrowsort -> productsort 
-- On DOLLAR reduce production arrowsort -> productsort 
-- On COMMA reduce production arrowsort -> productsort 
-- On BAR reduce production arrowsort -> productsort 

State 68:
productsort -> productsort STAR . datatypesort [ WHERE TYPE TEST STAR RPAREN RBRACE RANGLE MODULE LLIST LET IN EQUAL EOF END DOLLAR COMMA BAR ARROW ]
-- On UNIT shift to state 24
-- On TYVARIDENT shift to state 12
-- On STRINGPREFS shift to state 25
-- On STRINGLISTPREFS shift to state 26
-- On STRING shift to state 27
-- On SKELETONS shift to state 28
-- On RESOURCES shift to state 29
-- On REGEXP shift to state 30
-- On QUALIDENT shift to state 31
-- On LPAREN shift to state 69
-- On LIDENT shift to state 52
-- On LENS shift to state 53
-- On INTPREFS shift to state 54
-- On INT shift to state 55
-- On CHAR shift to state 59
-- On CANONIZER shift to state 60
-- On BOOLPREFS shift to state 61
-- On BOOL shift to state 62
-- On AREGEXP shift to state 63
-- On tyvar shift to state 64
-- On qvar shift to state 66
-- On datatypesort shift to state 385
-- On bsort shift to state 150
-- On asort shift to state 152

State 69:
bsort -> LPAREN . sort RPAREN [ WHERE TYPE TEST STAR RPAREN RBRACE RANGLE QUALIDENT MODULE LLIST LIDENT LET IN EQUAL EOF END DOLLAR COMMA BAR ARROW ]
bsort -> LPAREN . sort WHERE BANG exp RPAREN [ WHERE TYPE TEST STAR RPAREN RBRACE RANGLE QUALIDENT MODULE LLIST LIDENT LET IN EQUAL EOF END DOLLAR COMMA BAR ARROW ]
bsort -> LPAREN . sort WHERE exp RPAREN [ WHERE TYPE TEST STAR RPAREN RBRACE RANGLE QUALIDENT MODULE LLIST LIDENT LET IN EQUAL EOF END DOLLAR COMMA BAR ARROW ]
bsort -> LPAREN . id COLON sort WHERE BANG exp RPAREN [ WHERE TYPE TEST STAR RPAREN RBRACE RANGLE QUALIDENT MODULE LLIST LIDENT LET IN EQUAL EOF END DOLLAR COMMA BAR ARROW ]
bsort -> LPAREN . id COLON sort WHERE exp RPAREN [ WHERE TYPE TEST STAR RPAREN RBRACE RANGLE QUALIDENT MODULE LLIST LIDENT LET IN EQUAL EOF END DOLLAR COMMA BAR ARROW ]
bsort -> LPAREN . LENS IN QMARK DARROW appexp RPAREN [ WHERE TYPE TEST STAR RPAREN RBRACE RANGLE QUALIDENT MODULE LLIST LIDENT LET IN EQUAL EOF END DOLLAR COMMA BAR ARROW ]
bsort -> LPAREN . LENS IN QMARK DEQARROW appexp RPAREN [ WHERE TYPE TEST STAR RPAREN RBRACE RANGLE QUALIDENT MODULE LLIST LIDENT LET IN EQUAL EOF END DOLLAR COMMA BAR ARROW ]
bsort -> LPAREN . LENS IN appexp DARROW QMARK RPAREN [ WHERE TYPE TEST STAR RPAREN RBRACE RANGLE QUALIDENT MODULE LLIST LIDENT LET IN EQUAL EOF END DOLLAR COMMA BAR ARROW ]
bsort -> LPAREN . LENS IN appexp DEQARROW QMARK RPAREN [ WHERE TYPE TEST STAR RPAREN RBRACE RANGLE QUALIDENT MODULE LLIST LIDENT LET IN EQUAL EOF END DOLLAR COMMA BAR ARROW ]
bsort -> LPAREN . LENS IN appexp DARROW appexp RPAREN [ WHERE TYPE TEST STAR RPAREN RBRACE RANGLE QUALIDENT MODULE LLIST LIDENT LET IN EQUAL EOF END DOLLAR COMMA BAR ARROW ]
bsort -> LPAREN . LENS IN appexp DEQARROW appexp RPAREN [ WHERE TYPE TEST STAR RPAREN RBRACE RANGLE QUALIDENT MODULE LLIST LIDENT LET IN EQUAL EOF END DOLLAR COMMA BAR ARROW ]
bsort -> LPAREN . STRING IN exp RPAREN [ WHERE TYPE TEST STAR RPAREN RBRACE RANGLE QUALIDENT MODULE LLIST LIDENT LET IN EQUAL EOF END DOLLAR COMMA BAR ARROW ]
datatypesort -> LPAREN . sort COMMA sort_list RPAREN qvar [ WHERE TYPE TEST STAR RPAREN RBRACE RANGLE MODULE LLIST LET IN EQUAL EOF END DOLLAR COMMA BAR ARROW ]
-- On UNIT shift to state 24
-- On UIDENT shift to state 33
-- On TYVARIDENT shift to state 12
-- On STRINGPREFS shift to state 25
-- On STRINGLISTPREFS shift to state 26
-- On STRING shift to state 34
-- On SKELETONS shift to state 28
-- On RESOURCES shift to state 29
-- On REGEXP shift to state 30
-- On QUALIDENT shift to state 31
-- On LPAREN shift to state 32
-- On LIDENT shift to state 70
-- On LENS shift to state 71
-- On INTPREFS shift to state 54
-- On INT shift to state 55
-- On FORALL shift to state 56
-- On CHAR shift to state 59
-- On CANONIZER shift to state 60
-- On BOOLPREFS shift to state 61
-- On BOOL shift to state 62
-- On AREGEXP shift to state 63
-- On tyvar shift to state 64
-- On sort shift to state 361
-- On qvar shift to state 66
-- On productsort shift to state 67
-- On id shift to state 376
-- On datatypesort shift to state 149
-- On bsort shift to state 150
-- On asort shift to state 152
-- On arrowsort shift to state 153

State 70:
id -> LIDENT . [ COLON ]
qvar -> LIDENT . [ WHERE STAR RPAREN QUALIDENT LIDENT COMMA ARROW ]
-- On WHERE reduce production qvar -> LIDENT 
-- On STAR reduce production qvar -> LIDENT 
-- On RPAREN reduce production qvar -> LIDENT 
-- On QUALIDENT reduce production qvar -> LIDENT 
-- On LIDENT reduce production qvar -> LIDENT 
-- On COMMA reduce production qvar -> LIDENT 
-- On COLON reduce production id -> LIDENT 
-- On ARROW reduce production qvar -> LIDENT 

State 71:
asort -> LENS . [ WHERE STAR RPAREN QUALIDENT LIDENT COMMA ARROW ]
bsort -> LPAREN LENS . IN QMARK DARROW appexp RPAREN [ WHERE TYPE TEST STAR RPAREN RBRACE RANGLE QUALIDENT MODULE LLIST LIDENT LET IN EQUAL EOF END DOLLAR COMMA BAR ARROW ]
bsort -> LPAREN LENS . IN QMARK DEQARROW appexp RPAREN [ WHERE TYPE TEST STAR RPAREN RBRACE RANGLE QUALIDENT MODULE LLIST LIDENT LET IN EQUAL EOF END DOLLAR COMMA BAR ARROW ]
bsort -> LPAREN LENS . IN appexp DARROW QMARK RPAREN [ WHERE TYPE TEST STAR RPAREN RBRACE RANGLE QUALIDENT MODULE LLIST LIDENT LET IN EQUAL EOF END DOLLAR COMMA BAR ARROW ]
bsort -> LPAREN LENS . IN appexp DEQARROW QMARK RPAREN [ WHERE TYPE TEST STAR RPAREN RBRACE RANGLE QUALIDENT MODULE LLIST LIDENT LET IN EQUAL EOF END DOLLAR COMMA BAR ARROW ]
bsort -> LPAREN LENS . IN appexp DARROW appexp RPAREN [ WHERE TYPE TEST STAR RPAREN RBRACE RANGLE QUALIDENT MODULE LLIST LIDENT LET IN EQUAL EOF END DOLLAR COMMA BAR ARROW ]
bsort -> LPAREN LENS . IN appexp DEQARROW appexp RPAREN [ WHERE TYPE TEST STAR RPAREN RBRACE RANGLE QUALIDENT MODULE LLIST LIDENT LET IN EQUAL EOF END DOLLAR COMMA BAR ARROW ]
-- On IN shift to state 72
-- On WHERE reduce production asort -> LENS 
-- On STAR reduce production asort -> LENS 
-- On RPAREN reduce production asort -> LENS 
-- On QUALIDENT reduce production asort -> LENS 
-- On LIDENT reduce production asort -> LENS 
-- On COMMA reduce production asort -> LENS 
-- On ARROW reduce production asort -> LENS 

State 72:
bsort -> LPAREN LENS IN . QMARK DARROW appexp RPAREN [ WHERE TYPE TEST STAR RPAREN RBRACE RANGLE QUALIDENT MODULE LLIST LIDENT LET IN EQUAL EOF END DOLLAR COMMA BAR ARROW ]
bsort -> LPAREN LENS IN . QMARK DEQARROW appexp RPAREN [ WHERE TYPE TEST STAR RPAREN RBRACE RANGLE QUALIDENT MODULE LLIST LIDENT LET IN EQUAL EOF END DOLLAR COMMA BAR ARROW ]
bsort -> LPAREN LENS IN . appexp DARROW QMARK RPAREN [ WHERE TYPE TEST STAR RPAREN RBRACE RANGLE QUALIDENT MODULE LLIST LIDENT LET IN EQUAL EOF END DOLLAR COMMA BAR ARROW ]
bsort -> LPAREN LENS IN . appexp DEQARROW QMARK RPAREN [ WHERE TYPE TEST STAR RPAREN RBRACE RANGLE QUALIDENT MODULE LLIST LIDENT LET IN EQUAL EOF END DOLLAR COMMA BAR ARROW ]
bsort -> LPAREN LENS IN . appexp DARROW appexp RPAREN [ WHERE TYPE TEST STAR RPAREN RBRACE RANGLE QUALIDENT MODULE LLIST LIDENT LET IN EQUAL EOF END DOLLAR COMMA BAR ARROW ]
bsort -> LPAREN LENS IN . appexp DEQARROW appexp RPAREN [ WHERE TYPE TEST STAR RPAREN RBRACE RANGLE QUALIDENT MODULE LLIST LIDENT LET IN EQUAL EOF END DOLLAR COMMA BAR ARROW ]
-- On UIDENT shift to state 5
-- On SYNTH shift to state 36
-- On STR shift to state 37
-- On SQUASH shift to state 38
-- On QUALIDENT shift to state 6
-- On QMARK shift to state 73
-- On PROJECT shift to state 39
-- On PERM shift to state 40
-- On NSET shift to state 43
-- On LPAREN shift to state 44
-- On LIDENT shift to state 7
-- On LANGLE shift to state 47
-- On INTEGER shift to state 49
-- On HASH shift to state 50
-- On GRAMMAR shift to state 75
-- On CSET shift to state 81
-- On CHARACTER shift to state 82
-- On CEX shift to state 83
-- On BOOLEAN shift to state 134
-- On BEGIN shift to state 135
-- On tyexp shift to state 136
-- On repexp shift to state 157
-- On qid shift to state 158
-- On matchexp shift to state 159
-- On appexp shift to state 350
-- On aexp shift to state 162

State 73:
bsort -> LPAREN LENS IN QMARK . DARROW appexp RPAREN [ WHERE TYPE TEST STAR RPAREN RBRACE RANGLE QUALIDENT MODULE LLIST LIDENT LET IN EQUAL EOF END DOLLAR COMMA BAR ARROW ]
bsort -> LPAREN LENS IN QMARK . DEQARROW appexp RPAREN [ WHERE TYPE TEST STAR RPAREN RBRACE RANGLE QUALIDENT MODULE LLIST LIDENT LET IN EQUAL EOF END DOLLAR COMMA BAR ARROW ]
-- On DEQARROW shift to state 74
-- On DARROW shift to state 347

State 74:
bsort -> LPAREN LENS IN QMARK DEQARROW . appexp RPAREN [ WHERE TYPE TEST STAR RPAREN RBRACE RANGLE QUALIDENT MODULE LLIST LIDENT LET IN EQUAL EOF END DOLLAR COMMA BAR ARROW ]
-- On UIDENT shift to state 5
-- On SYNTH shift to state 36
-- On STR shift to state 37
-- On SQUASH shift to state 38
-- On QUALIDENT shift to state 6
-- On PROJECT shift to state 39
-- On PERM shift to state 40
-- On NSET shift to state 43
-- On LPAREN shift to state 44
-- On LIDENT shift to state 7
-- On LANGLE shift to state 47
-- On INTEGER shift to state 49
-- On HASH shift to state 50
-- On GRAMMAR shift to state 75
-- On CSET shift to state 81
-- On CHARACTER shift to state 82
-- On CEX shift to state 83
-- On BOOLEAN shift to state 134
-- On BEGIN shift to state 135
-- On tyexp shift to state 136
-- On repexp shift to state 157
-- On qid shift to state 158
-- On matchexp shift to state 159
-- On appexp shift to state 345
-- On aexp shift to state 162

State 75:
aexp -> GRAMMAR . productions END [ WITH VTYPE USING UIDENT TYPE TILDE TEST STYPE STR STAR SEMI RPAREN RBRACK RBRACE RANGLE QUALIDENT QMARK PUT PLUS NSET MODULE MINUS LT LPAREN LIDENT LET LEQ LBRACE LANGLE INTO INTEGER IN HASH GT GRAMMAR GET GEQ EQUAL EOF END DOT DOLLAR DEQARROW DARROW CSET CREATE COMMA COLON CHOOSE CHARACTER CEX CANONIZE BOOLEAN BIJ BEGIN BARBAR BAR AVTYPE ASTYPE ARROW AND AMPERSAND ]
-- On LIDENT shift to state 76
-- On productions shift to state 340
-- On production shift to state 342

State 76:
production -> LIDENT . COLONCOLON EQUAL rules [ END AND ]
-- On COLONCOLON shift to state 77

State 77:
production -> LIDENT COLONCOLON . EQUAL rules [ END AND ]
-- On EQUAL shift to state 78

State 78:
production -> LIDENT COLONCOLON EQUAL . rules [ END AND ]
-- On UIDENT shift to state 5
-- On STR shift to state 37
-- On QUALIDENT shift to state 6
-- On NSET shift to state 43
-- On LPAREN shift to state 44
-- On LIDENT shift to state 79
-- On LANGLE shift to state 47
-- On INTEGER shift to state 49
-- On HASH shift to state 50
-- On GRAMMAR shift to state 75
-- On CSET shift to state 81
-- On CHARACTER shift to state 82
-- On CEX shift to state 83
-- On BOOLEAN shift to state 134
-- On BEGIN shift to state 135
-- On BAR shift to state 319
-- On rules shift to state 337
-- On rule shift to state 338
-- On qid shift to state 158
-- On matchexp shift to state 159
-- On atoms shift to state 324
-- On atom shift to state 331
-- On aexp shift to state 335

State 79:
atom -> LIDENT . COLON aexp [ UIDENT STR QUALIDENT NSET LPAREN LIDENT LANGLE INTEGER HASH GRAMMAR DARROW CSET CHARACTER CEX BOOLEAN BEGIN ]
qid -> LIDENT . [ VTYPE UIDENT STYPE STR QUALIDENT NSET LPAREN LIDENT LANGLE INTEGER HASH GRAMMAR DARROW CSET CHARACTER CEX BOOLEAN BIJ BEGIN AVTYPE ASTYPE ]
-- On COLON shift to state 80
-- On VTYPE reduce production qid -> LIDENT 
-- On UIDENT reduce production qid -> LIDENT 
-- On STYPE reduce production qid -> LIDENT 
-- On STR reduce production qid -> LIDENT 
-- On QUALIDENT reduce production qid -> LIDENT 
-- On NSET reduce production qid -> LIDENT 
-- On LPAREN reduce production qid -> LIDENT 
-- On LIDENT reduce production qid -> LIDENT 
-- On LANGLE reduce production qid -> LIDENT 
-- On INTEGER reduce production qid -> LIDENT 
-- On HASH reduce production qid -> LIDENT 
-- On GRAMMAR reduce production qid -> LIDENT 
-- On DARROW reduce production qid -> LIDENT 
-- On CSET reduce production qid -> LIDENT 
-- On CHARACTER reduce production qid -> LIDENT 
-- On CEX reduce production qid -> LIDENT 
-- On BOOLEAN reduce production qid -> LIDENT 
-- On BIJ reduce production qid -> LIDENT 
-- On BEGIN reduce production qid -> LIDENT 
-- On AVTYPE reduce production qid -> LIDENT 
-- On ASTYPE reduce production qid -> LIDENT 

State 80:
atom -> LIDENT COLON . aexp [ UIDENT STR QUALIDENT NSET LPAREN LIDENT LANGLE INTEGER HASH GRAMMAR DARROW CSET CHARACTER CEX BOOLEAN BEGIN ]
-- On UIDENT shift to state 5
-- On STR shift to state 37
-- On QUALIDENT shift to state 6
-- On NSET shift to state 43
-- On LPAREN shift to state 44
-- On LIDENT shift to state 7
-- On LANGLE shift to state 47
-- On INTEGER shift to state 49
-- On HASH shift to state 50
-- On GRAMMAR shift to state 75
-- On CSET shift to state 81
-- On CHARACTER shift to state 82
-- On CEX shift to state 83
-- On BOOLEAN shift to state 134
-- On BEGIN shift to state 135
-- On qid shift to state 158
-- On matchexp shift to state 159
-- On aexp shift to state 318

State 81:
aexp -> CSET . [ WITH VTYPE USING UIDENT TYPE TILDE TEST STYPE STR STAR SEMI RPAREN RBRACK RBRACE RANGLE QUALIDENT QMARK PUT PLUS NSET MODULE MINUS LT LPAREN LIDENT LET LEQ LBRACE LANGLE INTO INTEGER IN HASH GT GRAMMAR GET GEQ EQUAL EOF END DOT DOLLAR DEQARROW DARROW CSET CREATE COMMA COLON CHOOSE CHARACTER CEX CANONIZE BOOLEAN BIJ BEGIN BARBAR BAR AVTYPE ASTYPE ARROW AND AMPERSAND ]
-- On WITH reduce production aexp -> CSET 
-- On VTYPE reduce production aexp -> CSET 
-- On USING reduce production aexp -> CSET 
-- On UIDENT reduce production aexp -> CSET 
-- On TYPE reduce production aexp -> CSET 
-- On TILDE reduce production aexp -> CSET 
-- On TEST reduce production aexp -> CSET 
-- On STYPE reduce production aexp -> CSET 
-- On STR reduce production aexp -> CSET 
-- On STAR reduce production aexp -> CSET 
-- On SEMI reduce production aexp -> CSET 
-- On RPAREN reduce production aexp -> CSET 
-- On RBRACK reduce production aexp -> CSET 
-- On RBRACE reduce production aexp -> CSET 
-- On RANGLE reduce production aexp -> CSET 
-- On QUALIDENT reduce production aexp -> CSET 
-- On QMARK reduce production aexp -> CSET 
-- On PUT reduce production aexp -> CSET 
-- On PLUS reduce production aexp -> CSET 
-- On NSET reduce production aexp -> CSET 
-- On MODULE reduce production aexp -> CSET 
-- On MINUS reduce production aexp -> CSET 
-- On LT reduce production aexp -> CSET 
-- On LPAREN reduce production aexp -> CSET 
-- On LIDENT reduce production aexp -> CSET 
-- On LET reduce production aexp -> CSET 
-- On LEQ reduce production aexp -> CSET 
-- On LBRACE reduce production aexp -> CSET 
-- On LANGLE reduce production aexp -> CSET 
-- On INTO reduce production aexp -> CSET 
-- On INTEGER reduce production aexp -> CSET 
-- On IN reduce production aexp -> CSET 
-- On HASH reduce production aexp -> CSET 
-- On GT reduce production aexp -> CSET 
-- On GRAMMAR reduce production aexp -> CSET 
-- On GET reduce production aexp -> CSET 
-- On GEQ reduce production aexp -> CSET 
-- On EQUAL reduce production aexp -> CSET 
-- On EOF reduce production aexp -> CSET 
-- On END reduce production aexp -> CSET 
-- On DOT reduce production aexp -> CSET 
-- On DOLLAR reduce production aexp -> CSET 
-- On DEQARROW reduce production aexp -> CSET 
-- On DARROW reduce production aexp -> CSET 
-- On CSET reduce production aexp -> CSET 
-- On CREATE reduce production aexp -> CSET 
-- On COMMA reduce production aexp -> CSET 
-- On COLON reduce production aexp -> CSET 
-- On CHOOSE reduce production aexp -> CSET 
-- On CHARACTER reduce production aexp -> CSET 
-- On CEX reduce production aexp -> CSET 
-- On CANONIZE reduce production aexp -> CSET 
-- On BOOLEAN reduce production aexp -> CSET 
-- On BIJ reduce production aexp -> CSET 
-- On BEGIN reduce production aexp -> CSET 
-- On BARBAR reduce production aexp -> CSET 
-- On BAR reduce production aexp -> CSET 
-- On AVTYPE reduce production aexp -> CSET 
-- On ASTYPE reduce production aexp -> CSET 
-- On ARROW reduce production aexp -> CSET 
-- On AND reduce production aexp -> CSET 
-- On AMPERSAND reduce production aexp -> CSET 

State 82:
aexp -> CHARACTER . [ WITH VTYPE USING UIDENT TYPE TILDE TEST STYPE STR STAR SEMI RPAREN RBRACK RBRACE RANGLE QUALIDENT QMARK PUT PLUS NSET MODULE MINUS LT LPAREN LIDENT LET LEQ LBRACE LANGLE INTO INTEGER IN HASH GT GRAMMAR GET GEQ EQUAL EOF END DOT DOLLAR DEQARROW DARROW CSET CREATE COMMA COLON CHOOSE CHARACTER CEX CANONIZE BOOLEAN BIJ BEGIN BARBAR BAR AVTYPE ASTYPE ARROW AND AMPERSAND ]
-- On WITH reduce production aexp -> CHARACTER 
-- On VTYPE reduce production aexp -> CHARACTER 
-- On USING reduce production aexp -> CHARACTER 
-- On UIDENT reduce production aexp -> CHARACTER 
-- On TYPE reduce production aexp -> CHARACTER 
-- On TILDE reduce production aexp -> CHARACTER 
-- On TEST reduce production aexp -> CHARACTER 
-- On STYPE reduce production aexp -> CHARACTER 
-- On STR reduce production aexp -> CHARACTER 
-- On STAR reduce production aexp -> CHARACTER 
-- On SEMI reduce production aexp -> CHARACTER 
-- On RPAREN reduce production aexp -> CHARACTER 
-- On RBRACK reduce production aexp -> CHARACTER 
-- On RBRACE reduce production aexp -> CHARACTER 
-- On RANGLE reduce production aexp -> CHARACTER 
-- On QUALIDENT reduce production aexp -> CHARACTER 
-- On QMARK reduce production aexp -> CHARACTER 
-- On PUT reduce production aexp -> CHARACTER 
-- On PLUS reduce production aexp -> CHARACTER 
-- On NSET reduce production aexp -> CHARACTER 
-- On MODULE reduce production aexp -> CHARACTER 
-- On MINUS reduce production aexp -> CHARACTER 
-- On LT reduce production aexp -> CHARACTER 
-- On LPAREN reduce production aexp -> CHARACTER 
-- On LIDENT reduce production aexp -> CHARACTER 
-- On LET reduce production aexp -> CHARACTER 
-- On LEQ reduce production aexp -> CHARACTER 
-- On LBRACE reduce production aexp -> CHARACTER 
-- On LANGLE reduce production aexp -> CHARACTER 
-- On INTO reduce production aexp -> CHARACTER 
-- On INTEGER reduce production aexp -> CHARACTER 
-- On IN reduce production aexp -> CHARACTER 
-- On HASH reduce production aexp -> CHARACTER 
-- On GT reduce production aexp -> CHARACTER 
-- On GRAMMAR reduce production aexp -> CHARACTER 
-- On GET reduce production aexp -> CHARACTER 
-- On GEQ reduce production aexp -> CHARACTER 
-- On EQUAL reduce production aexp -> CHARACTER 
-- On EOF reduce production aexp -> CHARACTER 
-- On END reduce production aexp -> CHARACTER 
-- On DOT reduce production aexp -> CHARACTER 
-- On DOLLAR reduce production aexp -> CHARACTER 
-- On DEQARROW reduce production aexp -> CHARACTER 
-- On DARROW reduce production aexp -> CHARACTER 
-- On CSET reduce production aexp -> CHARACTER 
-- On CREATE reduce production aexp -> CHARACTER 
-- On COMMA reduce production aexp -> CHARACTER 
-- On COLON reduce production aexp -> CHARACTER 
-- On CHOOSE reduce production aexp -> CHARACTER 
-- On CHARACTER reduce production aexp -> CHARACTER 
-- On CEX reduce production aexp -> CHARACTER 
-- On CANONIZE reduce production aexp -> CHARACTER 
-- On BOOLEAN reduce production aexp -> CHARACTER 
-- On BIJ reduce production aexp -> CHARACTER 
-- On BEGIN reduce production aexp -> CHARACTER 
-- On BARBAR reduce production aexp -> CHARACTER 
-- On BAR reduce production aexp -> CHARACTER 
-- On AVTYPE reduce production aexp -> CHARACTER 
-- On ASTYPE reduce production aexp -> CHARACTER 
-- On ARROW reduce production aexp -> CHARACTER 
-- On AND reduce production aexp -> CHARACTER 
-- On AMPERSAND reduce production aexp -> CHARACTER 

State 83:
aexp -> CEX . LPAREN exp RPAREN [ WITH VTYPE USING UIDENT TYPE TILDE TEST STYPE STR STAR SEMI RPAREN RBRACK RBRACE RANGLE QUALIDENT QMARK PUT PLUS NSET MODULE MINUS LT LPAREN LIDENT LET LEQ LBRACE LANGLE INTO INTEGER IN HASH GT GRAMMAR GET GEQ EQUAL EOF END DOT DOLLAR DEQARROW DARROW CSET CREATE COMMA COLON CHOOSE CHARACTER CEX CANONIZE BOOLEAN BIJ BEGIN BARBAR BAR AVTYPE ASTYPE ARROW AND AMPERSAND ]
-- On LPAREN shift to state 84

State 84:
aexp -> CEX LPAREN . exp RPAREN [ WITH VTYPE USING UIDENT TYPE TILDE TEST STYPE STR STAR SEMI RPAREN RBRACK RBRACE RANGLE QUALIDENT QMARK PUT PLUS NSET MODULE MINUS LT LPAREN LIDENT LET LEQ LBRACE LANGLE INTO INTEGER IN HASH GT GRAMMAR GET GEQ EQUAL EOF END DOT DOLLAR DEQARROW DARROW CSET CREATE COMMA COLON CHOOSE CHARACTER CEX CANONIZE BOOLEAN BIJ BEGIN BARBAR BAR AVTYPE ASTYPE ARROW AND AMPERSAND ]
-- On UIDENT shift to state 5
-- On SYNTH shift to state 36
-- On STR shift to state 37
-- On SQUASH shift to state 38
-- On QUALIDENT shift to state 6
-- On PROJECT shift to state 39
-- On PERM shift to state 40
-- On NSET shift to state 43
-- On MINUS shift to state 46
-- On MATCH shift to state 48
-- On LPAREN shift to state 44
-- On LIDENT shift to state 7
-- On LET shift to state 85
-- On LANGLE shift to state 47
-- On INTEGER shift to state 49
-- On HASH shift to state 50
-- On GRAMMAR shift to state 75
-- On FUN shift to state 123
-- On CSET shift to state 81
-- On CHARACTER shift to state 82
-- On CEX shift to state 83
-- On BOOLEAN shift to state 134
-- On BEGIN shift to state 135
-- On tyexp shift to state 136
-- On tildeexp shift to state 155
-- On rewriteexp shift to state 168
-- On repexp shift to state 157
-- On qid shift to state 158
-- On obarexp shift to state 176
-- On minusexp shift to state 178
-- On matchexp shift to state 159
-- On ltexp shift to state 179
-- On leqexp shift to state 180
-- On lenscomponentexp shift to state 181
-- On infixexp shift to state 182
-- On gtexp shift to state 185
-- On geqexp shift to state 186
-- On funexp shift to state 230
-- On exp shift to state 316
-- On equalexp shift to state 233
-- On dotexp shift to state 188
-- On dbarexp shift to state 238
-- On composeexp shift to state 241
-- On commaexp shift to state 247
-- On cexp shift to state 248
-- On barexp shift to state 246
-- On appexp shift to state 192
-- On ampexp shift to state 226
-- On ampampexp shift to state 229
-- On aexp shift to state 162

State 85:
exp -> LET . id param_list COLON sort EQUAL exp IN exp [ TYPE TEST RPAREN RANGLE MODULE LET IN EOF END ]
exp -> LET . id param_list EQUAL exp IN exp [ TYPE TEST RPAREN RANGLE MODULE LET IN EOF END ]
exp -> LET . letpat COLON sort EQUAL exp IN exp [ TYPE TEST RPAREN RANGLE MODULE LET IN EOF END ]
exp -> LET . letpat EQUAL exp IN exp [ TYPE TEST RPAREN RANGLE MODULE LET IN EOF END ]
-- On UNDERLINE shift to state 86
-- On UIDENT shift to state 87
-- On STR shift to state 88
-- On QUALIDENT shift to state 89
-- On LPAREN shift to state 92
-- On LIDENT shift to state 120
-- On INTEGER shift to state 95
-- On CEX shift to state 96
-- On BOOLEAN shift to state 99
-- On letpat shift to state 121
-- On id shift to state 303
-- On apat shift to state 315
-- On aapat shift to state 101

State 86:
aapat -> UNDERLINE . [ RPAREN EQUAL COMMA COLONCOLON COLON ARROW ]
-- On RPAREN reduce production aapat -> UNDERLINE 
-- On EQUAL reduce production aapat -> UNDERLINE 
-- On COMMA reduce production aapat -> UNDERLINE 
-- On COLONCOLON reduce production aapat -> UNDERLINE 
-- On COLON reduce production aapat -> UNDERLINE 
-- On ARROW reduce production aapat -> UNDERLINE 

State 87:
apat -> UIDENT . [ EQUAL COMMA COLON ]
id -> UIDENT . [ TYVARIDENT LPAREN ]
-- On TYVARIDENT reduce production id -> UIDENT 
-- On LPAREN reduce production id -> UIDENT 
-- On EQUAL reduce production apat -> UIDENT 
-- On COMMA reduce production apat -> UIDENT 
-- On COLON reduce production apat -> UIDENT 

State 88:
apat -> STR . [ RPAREN EQUAL COMMA COLONCOLON COLON ARROW ]
-- On RPAREN reduce production apat -> STR 
-- On EQUAL reduce production apat -> STR 
-- On COMMA reduce production apat -> STR 
-- On COLONCOLON reduce production apat -> STR 
-- On COLON reduce production apat -> STR 
-- On ARROW reduce production apat -> STR 

State 89:
apat -> QUALIDENT . [ EQUAL COMMA COLON ]
letpat -> QUALIDENT . apat [ EQUAL COMMA COLON ]
-- On UNDERLINE shift to state 86
-- On UIDENT shift to state 90
-- On STR shift to state 88
-- On QUALIDENT shift to state 91
-- On LPAREN shift to state 92
-- On LIDENT shift to state 94
-- On INTEGER shift to state 95
-- On CEX shift to state 96
-- On BOOLEAN shift to state 99
-- On apat shift to state 119
-- On aapat shift to state 101
-- On EQUAL reduce production apat -> QUALIDENT 
-- On COMMA reduce production apat -> QUALIDENT 
-- On COLON reduce production apat -> QUALIDENT 

State 90:
apat -> UIDENT . [ RPAREN EQUAL COMMA COLONCOLON COLON ARROW ]
-- On RPAREN reduce production apat -> UIDENT 
-- On EQUAL reduce production apat -> UIDENT 
-- On COMMA reduce production apat -> UIDENT 
-- On COLONCOLON reduce production apat -> UIDENT 
-- On COLON reduce production apat -> UIDENT 
-- On ARROW reduce production apat -> UIDENT 

State 91:
apat -> QUALIDENT . [ RPAREN EQUAL COMMA COLONCOLON COLON ARROW ]
-- On RPAREN reduce production apat -> QUALIDENT 
-- On EQUAL reduce production apat -> QUALIDENT 
-- On COMMA reduce production apat -> QUALIDENT 
-- On COLONCOLON reduce production apat -> QUALIDENT 
-- On COLON reduce production apat -> QUALIDENT 
-- On ARROW reduce production apat -> QUALIDENT 

State 92:
apat -> LPAREN . RPAREN [ RPAREN EQUAL COMMA COLONCOLON COLON ARROW ]
apat -> LPAREN . pat RPAREN [ RPAREN EQUAL COMMA COLONCOLON COLON ARROW ]
-- On UNDERLINE shift to state 86
-- On UIDENT shift to state 93
-- On STR shift to state 88
-- On RPAREN shift to state 116
-- On QUALIDENT shift to state 98
-- On LPAREN shift to state 92
-- On LIDENT shift to state 94
-- On INTEGER shift to state 95
-- On CSET shift to state 102
-- On CEX shift to state 96
-- On BOOLEAN shift to state 99
-- On pat shift to state 117
-- On listpat shift to state 106
-- On lcpat shift to state 114
-- On conpat shift to state 108
-- On apat shift to state 112
-- On aapat shift to state 101

State 93:
apat -> UIDENT . [ RPAREN EQUAL COMMA COLONCOLON COLON ARROW ]
conpat -> UIDENT . apat [ RPAREN EQUAL COMMA COLONCOLON COLON ARROW ]
-- On UNDERLINE shift to state 86
-- On UIDENT shift to state 90
-- On STR shift to state 88
-- On QUALIDENT shift to state 91
-- On LPAREN shift to state 92
-- On LIDENT shift to state 94
-- On INTEGER shift to state 95
-- On CEX shift to state 96
-- On BOOLEAN shift to state 99
-- On apat shift to state 115
-- On aapat shift to state 101
-- On RPAREN reduce production apat -> UIDENT 
-- On EQUAL reduce production apat -> UIDENT 
-- On COMMA reduce production apat -> UIDENT 
-- On COLONCOLON reduce production apat -> UIDENT 
-- On COLON reduce production apat -> UIDENT 
-- On ARROW reduce production apat -> UIDENT 

State 94:
aapat -> LIDENT . [ RPAREN EQUAL COMMA COLONCOLON COLON ARROW ]
-- On RPAREN reduce production aapat -> LIDENT 
-- On EQUAL reduce production aapat -> LIDENT 
-- On COMMA reduce production aapat -> LIDENT 
-- On COLONCOLON reduce production aapat -> LIDENT 
-- On COLON reduce production aapat -> LIDENT 
-- On ARROW reduce production aapat -> LIDENT 

State 95:
apat -> INTEGER . [ RPAREN EQUAL COMMA COLONCOLON COLON ARROW ]
-- On RPAREN reduce production apat -> INTEGER 
-- On EQUAL reduce production apat -> INTEGER 
-- On COMMA reduce production apat -> INTEGER 
-- On COLONCOLON reduce production apat -> INTEGER 
-- On COLON reduce production apat -> INTEGER 
-- On ARROW reduce production apat -> INTEGER 

State 96:
apat -> CEX . LPAREN pat RPAREN [ RPAREN EQUAL COMMA COLONCOLON COLON ARROW ]
-- On LPAREN shift to state 97

State 97:
apat -> CEX LPAREN . pat RPAREN [ RPAREN EQUAL COMMA COLONCOLON COLON ARROW ]
-- On UNDERLINE shift to state 86
-- On UIDENT shift to state 93
-- On STR shift to state 88
-- On QUALIDENT shift to state 98
-- On LPAREN shift to state 92
-- On LIDENT shift to state 94
-- On INTEGER shift to state 95
-- On CSET shift to state 102
-- On CEX shift to state 96
-- On BOOLEAN shift to state 99
-- On pat shift to state 103
-- On listpat shift to state 106
-- On lcpat shift to state 114
-- On conpat shift to state 108
-- On apat shift to state 112
-- On aapat shift to state 101

State 98:
apat -> QUALIDENT . [ RPAREN EQUAL COMMA COLONCOLON COLON ARROW ]
conpat -> QUALIDENT . apat [ RPAREN EQUAL COMMA COLONCOLON COLON ARROW ]
-- On UNDERLINE shift to state 86
-- On UIDENT shift to state 90
-- On STR shift to state 88
-- On QUALIDENT shift to state 91
-- On LPAREN shift to state 92
-- On LIDENT shift to state 94
-- On INTEGER shift to state 95
-- On CEX shift to state 96
-- On BOOLEAN shift to state 99
-- On apat shift to state 100
-- On aapat shift to state 101
-- On RPAREN reduce production apat -> QUALIDENT 
-- On EQUAL reduce production apat -> QUALIDENT 
-- On COMMA reduce production apat -> QUALIDENT 
-- On COLONCOLON reduce production apat -> QUALIDENT 
-- On COLON reduce production apat -> QUALIDENT 
-- On ARROW reduce production apat -> QUALIDENT 

State 99:
apat -> BOOLEAN . [ RPAREN EQUAL COMMA COLONCOLON COLON ARROW ]
-- On RPAREN reduce production apat -> BOOLEAN 
-- On EQUAL reduce production apat -> BOOLEAN 
-- On COMMA reduce production apat -> BOOLEAN 
-- On COLONCOLON reduce production apat -> BOOLEAN 
-- On COLON reduce production apat -> BOOLEAN 
-- On ARROW reduce production apat -> BOOLEAN 

State 100:
conpat -> QUALIDENT apat . [ RPAREN EQUAL COMMA COLONCOLON COLON ARROW ]
-- On RPAREN reduce production conpat -> QUALIDENT apat 
-- On EQUAL reduce production conpat -> QUALIDENT apat 
-- On COMMA reduce production conpat -> QUALIDENT apat 
-- On COLONCOLON reduce production conpat -> QUALIDENT apat 
-- On COLON reduce production conpat -> QUALIDENT apat 
-- On ARROW reduce production conpat -> QUALIDENT apat 

State 101:
apat -> aapat . [ RPAREN EQUAL COMMA COLONCOLON COLON ARROW ]
-- On RPAREN reduce production apat -> aapat 
-- On EQUAL reduce production apat -> aapat 
-- On COMMA reduce production apat -> aapat 
-- On COLONCOLON reduce production apat -> aapat 
-- On COLON reduce production apat -> aapat 
-- On ARROW reduce production apat -> aapat 

State 102:
listpat -> CSET . [ RPAREN EQUAL COMMA COLON ARROW ]
-- On RPAREN reduce production listpat -> CSET 
-- On EQUAL reduce production listpat -> CSET 
-- On COMMA reduce production listpat -> CSET 
-- On COLON reduce production listpat -> CSET 
-- On ARROW reduce production listpat -> CSET 

State 103:
apat -> CEX LPAREN pat . RPAREN [ RPAREN EQUAL COMMA COLONCOLON COLON ARROW ]
pat -> pat . COMMA lcpat [ RPAREN COMMA ]
-- On RPAREN shift to state 104
-- On COMMA shift to state 105

State 104:
apat -> CEX LPAREN pat RPAREN . [ RPAREN EQUAL COMMA COLONCOLON COLON ARROW ]
-- On RPAREN reduce production apat -> CEX LPAREN pat RPAREN 
-- On EQUAL reduce production apat -> CEX LPAREN pat RPAREN 
-- On COMMA reduce production apat -> CEX LPAREN pat RPAREN 
-- On COLONCOLON reduce production apat -> CEX LPAREN pat RPAREN 
-- On COLON reduce production apat -> CEX LPAREN pat RPAREN 
-- On ARROW reduce production apat -> CEX LPAREN pat RPAREN 

State 105:
pat -> pat COMMA . lcpat [ RPAREN COMMA ARROW ]
-- On UNDERLINE shift to state 86
-- On UIDENT shift to state 93
-- On STR shift to state 88
-- On QUALIDENT shift to state 98
-- On LPAREN shift to state 92
-- On LIDENT shift to state 94
-- On INTEGER shift to state 95
-- On CSET shift to state 102
-- On CEX shift to state 96
-- On BOOLEAN shift to state 99
-- On listpat shift to state 106
-- On lcpat shift to state 107
-- On conpat shift to state 108
-- On apat shift to state 112
-- On aapat shift to state 101

State 106:
lcpat -> listpat . [ RPAREN EQUAL COMMA COLON ARROW ]
-- On RPAREN reduce production lcpat -> listpat 
-- On EQUAL reduce production lcpat -> listpat 
-- On COMMA reduce production lcpat -> listpat 
-- On COLON reduce production lcpat -> listpat 
-- On ARROW reduce production lcpat -> listpat 

State 107:
pat -> pat COMMA lcpat . [ RPAREN COMMA ARROW ]
-- On RPAREN reduce production pat -> pat COMMA lcpat 
-- On COMMA reduce production pat -> pat COMMA lcpat 
-- On ARROW reduce production pat -> pat COMMA lcpat 

State 108:
lcpat -> conpat . [ RPAREN EQUAL COMMA COLON ARROW ]
listpat -> conpat . COLONCOLON aapat [ RPAREN EQUAL COMMA COLON ARROW ]
listpat -> conpat . COLONCOLON listpat [ RPAREN EQUAL COMMA COLON ARROW ]
-- On COLONCOLON shift to state 109
-- On RPAREN reduce production lcpat -> conpat 
-- On EQUAL reduce production lcpat -> conpat 
-- On COMMA reduce production lcpat -> conpat 
-- On COLON reduce production lcpat -> conpat 
-- On ARROW reduce production lcpat -> conpat 

State 109:
listpat -> conpat COLONCOLON . aapat [ RPAREN EQUAL COMMA COLON ARROW ]
listpat -> conpat COLONCOLON . listpat [ RPAREN EQUAL COMMA COLON ARROW ]
-- On UNDERLINE shift to state 86
-- On UIDENT shift to state 93
-- On STR shift to state 88
-- On QUALIDENT shift to state 98
-- On LPAREN shift to state 92
-- On LIDENT shift to state 94
-- On INTEGER shift to state 95
-- On CSET shift to state 102
-- On CEX shift to state 96
-- On BOOLEAN shift to state 99
-- On listpat shift to state 110
-- On conpat shift to state 111
-- On apat shift to state 112
-- On aapat shift to state 113

State 110:
listpat -> conpat COLONCOLON listpat . [ RPAREN EQUAL COMMA COLON ARROW ]
-- On RPAREN reduce production listpat -> conpat COLONCOLON listpat 
-- On EQUAL reduce production listpat -> conpat COLONCOLON listpat 
-- On COMMA reduce production listpat -> conpat COLONCOLON listpat 
-- On COLON reduce production listpat -> conpat COLONCOLON listpat 
-- On ARROW reduce production listpat -> conpat COLONCOLON listpat 

State 111:
listpat -> conpat . COLONCOLON aapat [ RPAREN EQUAL COMMA COLON ARROW ]
listpat -> conpat . COLONCOLON listpat [ RPAREN EQUAL COMMA COLON ARROW ]
-- On COLONCOLON shift to state 109

State 112:
conpat -> apat . [ RPAREN EQUAL COMMA COLONCOLON COLON ARROW ]
-- On RPAREN reduce production conpat -> apat 
-- On EQUAL reduce production conpat -> apat 
-- On COMMA reduce production conpat -> apat 
-- On COLONCOLON reduce production conpat -> apat 
-- On COLON reduce production conpat -> apat 
-- On ARROW reduce production conpat -> apat 

State 113:
apat -> aapat . [ COLONCOLON ]
listpat -> conpat COLONCOLON aapat . [ RPAREN EQUAL COMMA COLON ARROW ]
-- On RPAREN reduce production listpat -> conpat COLONCOLON aapat 
-- On EQUAL reduce production listpat -> conpat COLONCOLON aapat 
-- On COMMA reduce production listpat -> conpat COLONCOLON aapat 
-- On COLONCOLON reduce production apat -> aapat 
-- On COLON reduce production listpat -> conpat COLONCOLON aapat 
-- On ARROW reduce production listpat -> conpat COLONCOLON aapat 

State 114:
pat -> lcpat . [ RPAREN COMMA ARROW ]
-- On RPAREN reduce production pat -> lcpat 
-- On COMMA reduce production pat -> lcpat 
-- On ARROW reduce production pat -> lcpat 

State 115:
conpat -> UIDENT apat . [ RPAREN EQUAL COMMA COLONCOLON COLON ARROW ]
-- On RPAREN reduce production conpat -> UIDENT apat 
-- On EQUAL reduce production conpat -> UIDENT apat 
-- On COMMA reduce production conpat -> UIDENT apat 
-- On COLONCOLON reduce production conpat -> UIDENT apat 
-- On COLON reduce production conpat -> UIDENT apat 
-- On ARROW reduce production conpat -> UIDENT apat 

State 116:
apat -> LPAREN RPAREN . [ RPAREN EQUAL COMMA COLONCOLON COLON ARROW ]
-- On RPAREN reduce production apat -> LPAREN RPAREN 
-- On EQUAL reduce production apat -> LPAREN RPAREN 
-- On COMMA reduce production apat -> LPAREN RPAREN 
-- On COLONCOLON reduce production apat -> LPAREN RPAREN 
-- On COLON reduce production apat -> LPAREN RPAREN 
-- On ARROW reduce production apat -> LPAREN RPAREN 

State 117:
apat -> LPAREN pat . RPAREN [ RPAREN EQUAL COMMA COLONCOLON COLON ARROW ]
pat -> pat . COMMA lcpat [ RPAREN COMMA ]
-- On RPAREN shift to state 118
-- On COMMA shift to state 105

State 118:
apat -> LPAREN pat RPAREN . [ RPAREN EQUAL COMMA COLONCOLON COLON ARROW ]
-- On RPAREN reduce production apat -> LPAREN pat RPAREN 
-- On EQUAL reduce production apat -> LPAREN pat RPAREN 
-- On COMMA reduce production apat -> LPAREN pat RPAREN 
-- On COLONCOLON reduce production apat -> LPAREN pat RPAREN 
-- On COLON reduce production apat -> LPAREN pat RPAREN 
-- On ARROW reduce production apat -> LPAREN pat RPAREN 

State 119:
letpat -> QUALIDENT apat . [ EQUAL COMMA COLON ]
-- On EQUAL reduce production letpat -> QUALIDENT apat 
-- On COMMA reduce production letpat -> QUALIDENT apat 
-- On COLON reduce production letpat -> QUALIDENT apat 

State 120:
aapat -> LIDENT . [ EQUAL COMMA COLON ]
id -> LIDENT . [ TYVARIDENT LPAREN ]
-- On TYVARIDENT reduce production id -> LIDENT 
-- On LPAREN reduce production id -> LIDENT 
-- On EQUAL reduce production aapat -> LIDENT 
-- On COMMA reduce production aapat -> LIDENT 
-- On COLON reduce production aapat -> LIDENT 

State 121:
exp -> LET letpat . COLON sort EQUAL exp IN exp [ TYPE TEST RPAREN RANGLE MODULE LET IN EOF END ]
exp -> LET letpat . EQUAL exp IN exp [ TYPE TEST RPAREN RANGLE MODULE LET IN EOF END ]
letpat -> letpat . COMMA lcpat [ EQUAL COMMA COLON ]
-- On EQUAL shift to state 122
-- On COMMA shift to state 295
-- On COLON shift to state 297

State 122:
exp -> LET letpat EQUAL . exp IN exp [ TYPE TEST RPAREN RANGLE MODULE LET IN EOF END ]
-- On UIDENT shift to state 5
-- On SYNTH shift to state 36
-- On STR shift to state 37
-- On SQUASH shift to state 38
-- On QUALIDENT shift to state 6
-- On PROJECT shift to state 39
-- On PERM shift to state 40
-- On NSET shift to state 43
-- On MINUS shift to state 46
-- On MATCH shift to state 48
-- On LPAREN shift to state 44
-- On LIDENT shift to state 7
-- On LET shift to state 85
-- On LANGLE shift to state 47
-- On INTEGER shift to state 49
-- On HASH shift to state 50
-- On GRAMMAR shift to state 75
-- On FUN shift to state 123
-- On CSET shift to state 81
-- On CHARACTER shift to state 82
-- On CEX shift to state 83
-- On BOOLEAN shift to state 134
-- On BEGIN shift to state 135
-- On tyexp shift to state 136
-- On tildeexp shift to state 155
-- On rewriteexp shift to state 168
-- On repexp shift to state 157
-- On qid shift to state 158
-- On obarexp shift to state 176
-- On minusexp shift to state 178
-- On matchexp shift to state 159
-- On ltexp shift to state 179
-- On leqexp shift to state 180
-- On lenscomponentexp shift to state 181
-- On infixexp shift to state 182
-- On gtexp shift to state 185
-- On geqexp shift to state 186
-- On funexp shift to state 230
-- On exp shift to state 292
-- On equalexp shift to state 233
-- On dotexp shift to state 188
-- On dbarexp shift to state 238
-- On composeexp shift to state 241
-- On commaexp shift to state 247
-- On cexp shift to state 248
-- On barexp shift to state 246
-- On appexp shift to state 192
-- On ampexp shift to state 226
-- On ampampexp shift to state 229
-- On aexp shift to state 162

State 123:
funexp -> FUN . param_list ARROW exp [ TYPE TEST RPAREN RANGLE MODULE LET IN EOF END ]
funexp -> FUN . param_list COLON asort ARROW exp [ TYPE TEST RPAREN RANGLE MODULE LET IN EOF END ]
-- On TYVARIDENT shift to state 124
-- On LPAREN shift to state 125
-- On param_list shift to state 281
-- On param shift to state 288

State 124:
param -> TYVARIDENT . [ TYVARIDENT LPAREN EQUAL COLON ARROW ]
-- On TYVARIDENT reduce production param -> TYVARIDENT 
-- On LPAREN reduce production param -> TYVARIDENT 
-- On EQUAL reduce production param -> TYVARIDENT 
-- On COLON reduce production param -> TYVARIDENT 
-- On ARROW reduce production param -> TYVARIDENT 

State 125:
param -> LPAREN . id COLON sort RPAREN [ TYVARIDENT LPAREN EQUAL COLON ARROW ]
param -> LPAREN . id COLON LENS IN QMARK DARROW appexp RPAREN [ TYVARIDENT LPAREN EQUAL COLON ARROW ]
param -> LPAREN . id COLON LENS IN QMARK DEQARROW appexp RPAREN [ TYVARIDENT LPAREN EQUAL COLON ARROW ]
param -> LPAREN . id COLON LENS IN appexp DARROW QMARK RPAREN [ TYVARIDENT LPAREN EQUAL COLON ARROW ]
param -> LPAREN . id COLON LENS IN appexp DEQARROW QMARK RPAREN [ TYVARIDENT LPAREN EQUAL COLON ARROW ]
param -> LPAREN . id COLON LENS IN appexp DARROW appexp RPAREN [ TYVARIDENT LPAREN EQUAL COLON ARROW ]
param -> LPAREN . id COLON LENS IN appexp DEQARROW appexp RPAREN [ TYVARIDENT LPAREN EQUAL COLON ARROW ]
param -> LPAREN . id COLON STRING IN exp RPAREN [ TYVARIDENT LPAREN EQUAL COLON ARROW ]
param -> LPAREN . id COLON sort WHERE BANG exp RPAREN [ TYVARIDENT LPAREN EQUAL COLON ARROW ]
param -> LPAREN . id COLON sort WHERE exp RPAREN [ TYVARIDENT LPAREN EQUAL COLON ARROW ]
param -> LPAREN . TYVARIDENT RPAREN [ TYVARIDENT LPAREN EQUAL COLON ARROW ]
param -> LPAREN . RPAREN [ TYVARIDENT LPAREN EQUAL COLON ARROW ]
-- On UIDENT shift to state 33
-- On TYVARIDENT shift to state 126
-- On RPAREN shift to state 128
-- On LIDENT shift to state 129
-- On id shift to state 130

State 126:
param -> LPAREN TYVARIDENT . RPAREN [ TYVARIDENT LPAREN EQUAL COLON ARROW ]
-- On RPAREN shift to state 127

State 127:
param -> LPAREN TYVARIDENT RPAREN . [ TYVARIDENT LPAREN EQUAL COLON ARROW ]
-- On TYVARIDENT reduce production param -> LPAREN TYVARIDENT RPAREN 
-- On LPAREN reduce production param -> LPAREN TYVARIDENT RPAREN 
-- On EQUAL reduce production param -> LPAREN TYVARIDENT RPAREN 
-- On COLON reduce production param -> LPAREN TYVARIDENT RPAREN 
-- On ARROW reduce production param -> LPAREN TYVARIDENT RPAREN 

State 128:
param -> LPAREN RPAREN . [ TYVARIDENT LPAREN EQUAL COLON ARROW ]
-- On TYVARIDENT reduce production param -> LPAREN RPAREN 
-- On LPAREN reduce production param -> LPAREN RPAREN 
-- On EQUAL reduce production param -> LPAREN RPAREN 
-- On COLON reduce production param -> LPAREN RPAREN 
-- On ARROW reduce production param -> LPAREN RPAREN 

State 129:
id -> LIDENT . [ COLON ]
-- On COLON reduce production id -> LIDENT 

State 130:
param -> LPAREN id . COLON sort RPAREN [ TYVARIDENT LPAREN EQUAL COLON ARROW ]
param -> LPAREN id . COLON LENS IN QMARK DARROW appexp RPAREN [ TYVARIDENT LPAREN EQUAL COLON ARROW ]
param -> LPAREN id . COLON LENS IN QMARK DEQARROW appexp RPAREN [ TYVARIDENT LPAREN EQUAL COLON ARROW ]
param -> LPAREN id . COLON LENS IN appexp DARROW QMARK RPAREN [ TYVARIDENT LPAREN EQUAL COLON ARROW ]
param -> LPAREN id . COLON LENS IN appexp DEQARROW QMARK RPAREN [ TYVARIDENT LPAREN EQUAL COLON ARROW ]
param -> LPAREN id . COLON LENS IN appexp DARROW appexp RPAREN [ TYVARIDENT LPAREN EQUAL COLON ARROW ]
param -> LPAREN id . COLON LENS IN appexp DEQARROW appexp RPAREN [ TYVARIDENT LPAREN EQUAL COLON ARROW ]
param -> LPAREN id . COLON STRING IN exp RPAREN [ TYVARIDENT LPAREN EQUAL COLON ARROW ]
param -> LPAREN id . COLON sort WHERE BANG exp RPAREN [ TYVARIDENT LPAREN EQUAL COLON ARROW ]
param -> LPAREN id . COLON sort WHERE exp RPAREN [ TYVARIDENT LPAREN EQUAL COLON ARROW ]
-- On COLON shift to state 131

State 131:
param -> LPAREN id COLON . sort RPAREN [ TYVARIDENT LPAREN EQUAL COLON ARROW ]
param -> LPAREN id COLON . LENS IN QMARK DARROW appexp RPAREN [ TYVARIDENT LPAREN EQUAL COLON ARROW ]
param -> LPAREN id COLON . LENS IN QMARK DEQARROW appexp RPAREN [ TYVARIDENT LPAREN EQUAL COLON ARROW ]
param -> LPAREN id COLON . LENS IN appexp DARROW QMARK RPAREN [ TYVARIDENT LPAREN EQUAL COLON ARROW ]
param -> LPAREN id COLON . LENS IN appexp DEQARROW QMARK RPAREN [ TYVARIDENT LPAREN EQUAL COLON ARROW ]
param -> LPAREN id COLON . LENS IN appexp DARROW appexp RPAREN [ TYVARIDENT LPAREN EQUAL COLON ARROW ]
param -> LPAREN id COLON . LENS IN appexp DEQARROW appexp RPAREN [ TYVARIDENT LPAREN EQUAL COLON ARROW ]
param -> LPAREN id COLON . STRING IN exp RPAREN [ TYVARIDENT LPAREN EQUAL COLON ARROW ]
param -> LPAREN id COLON . sort WHERE BANG exp RPAREN [ TYVARIDENT LPAREN EQUAL COLON ARROW ]
param -> LPAREN id COLON . sort WHERE exp RPAREN [ TYVARIDENT LPAREN EQUAL COLON ARROW ]
-- On UNIT shift to state 24
-- On TYVARIDENT shift to state 12
-- On STRINGPREFS shift to state 25
-- On STRINGLISTPREFS shift to state 26
-- On STRING shift to state 132
-- On SKELETONS shift to state 28
-- On RESOURCES shift to state 29
-- On REGEXP shift to state 30
-- On QUALIDENT shift to state 31
-- On LPAREN shift to state 32
-- On LIDENT shift to state 52
-- On LENS shift to state 253
-- On INTPREFS shift to state 54
-- On INT shift to state 55
-- On FORALL shift to state 56
-- On CHAR shift to state 59
-- On CANONIZER shift to state 60
-- On BOOLPREFS shift to state 61
-- On BOOL shift to state 62
-- On AREGEXP shift to state 63
-- On tyvar shift to state 64
-- On sort shift to state 273
-- On qvar shift to state 66
-- On productsort shift to state 67
-- On datatypesort shift to state 149
-- On bsort shift to state 150
-- On asort shift to state 152
-- On arrowsort shift to state 153

State 132:
asort -> STRING . [ WHERE STAR RPAREN QUALIDENT LIDENT ARROW ]
param -> LPAREN id COLON STRING . IN exp RPAREN [ TYVARIDENT LPAREN EQUAL COLON ARROW ]
-- On IN shift to state 133
-- On WHERE reduce production asort -> STRING 
-- On STAR reduce production asort -> STRING 
-- On RPAREN reduce production asort -> STRING 
-- On QUALIDENT reduce production asort -> STRING 
-- On LIDENT reduce production asort -> STRING 
-- On ARROW reduce production asort -> STRING 

State 133:
param -> LPAREN id COLON STRING IN . exp RPAREN [ TYVARIDENT LPAREN EQUAL COLON ARROW ]
-- On UIDENT shift to state 5
-- On SYNTH shift to state 36
-- On STR shift to state 37
-- On SQUASH shift to state 38
-- On QUALIDENT shift to state 6
-- On PROJECT shift to state 39
-- On PERM shift to state 40
-- On NSET shift to state 43
-- On MINUS shift to state 46
-- On MATCH shift to state 48
-- On LPAREN shift to state 44
-- On LIDENT shift to state 7
-- On LET shift to state 85
-- On LANGLE shift to state 47
-- On INTEGER shift to state 49
-- On HASH shift to state 50
-- On GRAMMAR shift to state 75
-- On FUN shift to state 123
-- On CSET shift to state 81
-- On CHARACTER shift to state 82
-- On CEX shift to state 83
-- On BOOLEAN shift to state 134
-- On BEGIN shift to state 135
-- On tyexp shift to state 136
-- On tildeexp shift to state 155
-- On rewriteexp shift to state 168
-- On repexp shift to state 157
-- On qid shift to state 158
-- On obarexp shift to state 176
-- On minusexp shift to state 178
-- On matchexp shift to state 159
-- On ltexp shift to state 179
-- On leqexp shift to state 180
-- On lenscomponentexp shift to state 181
-- On infixexp shift to state 182
-- On gtexp shift to state 185
-- On geqexp shift to state 186
-- On funexp shift to state 230
-- On exp shift to state 251
-- On equalexp shift to state 233
-- On dotexp shift to state 188
-- On dbarexp shift to state 238
-- On composeexp shift to state 241
-- On commaexp shift to state 247
-- On cexp shift to state 248
-- On barexp shift to state 246
-- On appexp shift to state 192
-- On ampexp shift to state 226
-- On ampampexp shift to state 229
-- On aexp shift to state 162

State 134:
aexp -> BOOLEAN . [ WITH VTYPE USING UIDENT TYPE TILDE TEST STYPE STR STAR SEMI RPAREN RBRACK RBRACE RANGLE QUALIDENT QMARK PUT PLUS NSET MODULE MINUS LT LPAREN LIDENT LET LEQ LBRACE LANGLE INTO INTEGER IN HASH GT GRAMMAR GET GEQ EQUAL EOF END DOT DOLLAR DEQARROW DARROW CSET CREATE COMMA COLON CHOOSE CHARACTER CEX CANONIZE BOOLEAN BIJ BEGIN BARBAR BAR AVTYPE ASTYPE ARROW AND AMPERSAND ]
-- On WITH reduce production aexp -> BOOLEAN 
-- On VTYPE reduce production aexp -> BOOLEAN 
-- On USING reduce production aexp -> BOOLEAN 
-- On UIDENT reduce production aexp -> BOOLEAN 
-- On TYPE reduce production aexp -> BOOLEAN 
-- On TILDE reduce production aexp -> BOOLEAN 
-- On TEST reduce production aexp -> BOOLEAN 
-- On STYPE reduce production aexp -> BOOLEAN 
-- On STR reduce production aexp -> BOOLEAN 
-- On STAR reduce production aexp -> BOOLEAN 
-- On SEMI reduce production aexp -> BOOLEAN 
-- On RPAREN reduce production aexp -> BOOLEAN 
-- On RBRACK reduce production aexp -> BOOLEAN 
-- On RBRACE reduce production aexp -> BOOLEAN 
-- On RANGLE reduce production aexp -> BOOLEAN 
-- On QUALIDENT reduce production aexp -> BOOLEAN 
-- On QMARK reduce production aexp -> BOOLEAN 
-- On PUT reduce production aexp -> BOOLEAN 
-- On PLUS reduce production aexp -> BOOLEAN 
-- On NSET reduce production aexp -> BOOLEAN 
-- On MODULE reduce production aexp -> BOOLEAN 
-- On MINUS reduce production aexp -> BOOLEAN 
-- On LT reduce production aexp -> BOOLEAN 
-- On LPAREN reduce production aexp -> BOOLEAN 
-- On LIDENT reduce production aexp -> BOOLEAN 
-- On LET reduce production aexp -> BOOLEAN 
-- On LEQ reduce production aexp -> BOOLEAN 
-- On LBRACE reduce production aexp -> BOOLEAN 
-- On LANGLE reduce production aexp -> BOOLEAN 
-- On INTO reduce production aexp -> BOOLEAN 
-- On INTEGER reduce production aexp -> BOOLEAN 
-- On IN reduce production aexp -> BOOLEAN 
-- On HASH reduce production aexp -> BOOLEAN 
-- On GT reduce production aexp -> BOOLEAN 
-- On GRAMMAR reduce production aexp -> BOOLEAN 
-- On GET reduce production aexp -> BOOLEAN 
-- On GEQ reduce production aexp -> BOOLEAN 
-- On EQUAL reduce production aexp -> BOOLEAN 
-- On EOF reduce production aexp -> BOOLEAN 
-- On END reduce production aexp -> BOOLEAN 
-- On DOT reduce production aexp -> BOOLEAN 
-- On DOLLAR reduce production aexp -> BOOLEAN 
-- On DEQARROW reduce production aexp -> BOOLEAN 
-- On DARROW reduce production aexp -> BOOLEAN 
-- On CSET reduce production aexp -> BOOLEAN 
-- On CREATE reduce production aexp -> BOOLEAN 
-- On COMMA reduce production aexp -> BOOLEAN 
-- On COLON reduce production aexp -> BOOLEAN 
-- On CHOOSE reduce production aexp -> BOOLEAN 
-- On CHARACTER reduce production aexp -> BOOLEAN 
-- On CEX reduce production aexp -> BOOLEAN 
-- On CANONIZE reduce production aexp -> BOOLEAN 
-- On BOOLEAN reduce production aexp -> BOOLEAN 
-- On BIJ reduce production aexp -> BOOLEAN 
-- On BEGIN reduce production aexp -> BOOLEAN 
-- On BARBAR reduce production aexp -> BOOLEAN 
-- On BAR reduce production aexp -> BOOLEAN 
-- On AVTYPE reduce production aexp -> BOOLEAN 
-- On ASTYPE reduce production aexp -> BOOLEAN 
-- On ARROW reduce production aexp -> BOOLEAN 
-- On AND reduce production aexp -> BOOLEAN 
-- On AMPERSAND reduce production aexp -> BOOLEAN 

State 135:
aexp -> BEGIN . exp END [ WITH VTYPE USING UIDENT TYPE TILDE TEST STYPE STR STAR SEMI RPAREN RBRACK RBRACE RANGLE QUALIDENT QMARK PUT PLUS NSET MODULE MINUS LT LPAREN LIDENT LET LEQ LBRACE LANGLE INTO INTEGER IN HASH GT GRAMMAR GET GEQ EQUAL EOF END DOT DOLLAR DEQARROW DARROW CSET CREATE COMMA COLON CHOOSE CHARACTER CEX CANONIZE BOOLEAN BIJ BEGIN BARBAR BAR AVTYPE ASTYPE ARROW AND AMPERSAND ]
-- On UIDENT shift to state 5
-- On SYNTH shift to state 36
-- On STR shift to state 37
-- On SQUASH shift to state 38
-- On QUALIDENT shift to state 6
-- On PROJECT shift to state 39
-- On PERM shift to state 40
-- On NSET shift to state 43
-- On MINUS shift to state 46
-- On MATCH shift to state 48
-- On LPAREN shift to state 44
-- On LIDENT shift to state 7
-- On LET shift to state 85
-- On LANGLE shift to state 47
-- On INTEGER shift to state 49
-- On HASH shift to state 50
-- On GRAMMAR shift to state 75
-- On FUN shift to state 123
-- On CSET shift to state 81
-- On CHARACTER shift to state 82
-- On CEX shift to state 83
-- On BOOLEAN shift to state 134
-- On BEGIN shift to state 135
-- On tyexp shift to state 136
-- On tildeexp shift to state 155
-- On rewriteexp shift to state 168
-- On repexp shift to state 157
-- On qid shift to state 158
-- On obarexp shift to state 176
-- On minusexp shift to state 178
-- On matchexp shift to state 159
-- On ltexp shift to state 179
-- On leqexp shift to state 180
-- On lenscomponentexp shift to state 181
-- On infixexp shift to state 182
-- On gtexp shift to state 185
-- On geqexp shift to state 186
-- On funexp shift to state 230
-- On exp shift to state 231
-- On equalexp shift to state 233
-- On dotexp shift to state 188
-- On dbarexp shift to state 238
-- On composeexp shift to state 241
-- On commaexp shift to state 247
-- On cexp shift to state 248
-- On barexp shift to state 246
-- On appexp shift to state 192
-- On ampexp shift to state 226
-- On ampampexp shift to state 229
-- On aexp shift to state 162

State 136:
repexp -> tyexp . rep [ WITH USING UIDENT TYPE TILDE TEST STR SEMI RPAREN RBRACK RBRACE RANGLE QUALIDENT PUT NSET MODULE MINUS LT LPAREN LIDENT LET LEQ LANGLE INTO INTEGER IN HASH GT GRAMMAR GET GEQ EQUAL EOF END DOT DOLLAR DEQARROW DARROW CSET CREATE COMMA COLON CHOOSE CHARACTER CEX CANONIZE BOOLEAN BEGIN BARBAR BAR ARROW AMPERSAND ]
repexp -> tyexp . [ WITH USING UIDENT TYPE TILDE TEST STR SEMI RPAREN RBRACK RBRACE RANGLE QUALIDENT PUT NSET MODULE MINUS LT LPAREN LIDENT LET LEQ LANGLE INTO INTEGER IN HASH GT GRAMMAR GET GEQ EQUAL EOF END DOT DOLLAR DEQARROW DARROW CSET CREATE COMMA COLON CHOOSE CHARACTER CEX CANONIZE BOOLEAN BEGIN BARBAR BAR ARROW AMPERSAND ]
tyexp -> tyexp . LBRACE sort RBRACE [ WITH USING UIDENT TYPE TILDE TEST STR STAR SEMI RPAREN RBRACK RBRACE RANGLE QUALIDENT QMARK PUT PLUS NSET MODULE MINUS LT LPAREN LIDENT LET LEQ LBRACE LANGLE INTO INTEGER IN HASH GT GRAMMAR GET GEQ EQUAL EOF END DOT DOLLAR DEQARROW DARROW CSET CREATE COMMA COLON CHOOSE CHARACTER CEX CANONIZE BOOLEAN BEGIN BARBAR BAR ARROW AMPERSAND ]
-- On STAR shift to state 137
-- On QMARK shift to state 138
-- On PLUS shift to state 139
-- On LBRACE shift to state 140
-- On rep shift to state 154
-- On WITH reduce production repexp -> tyexp 
-- On USING reduce production repexp -> tyexp 
-- On UIDENT reduce production repexp -> tyexp 
-- On TYPE reduce production repexp -> tyexp 
-- On TILDE reduce production repexp -> tyexp 
-- On TEST reduce production repexp -> tyexp 
-- On STR reduce production repexp -> tyexp 
-- On SEMI reduce production repexp -> tyexp 
-- On RPAREN reduce production repexp -> tyexp 
-- On RBRACK reduce production repexp -> tyexp 
-- On RBRACE reduce production repexp -> tyexp 
-- On RANGLE reduce production repexp -> tyexp 
-- On QUALIDENT reduce production repexp -> tyexp 
-- On PUT reduce production repexp -> tyexp 
-- On NSET reduce production repexp -> tyexp 
-- On MODULE reduce production repexp -> tyexp 
-- On MINUS reduce production repexp -> tyexp 
-- On LT reduce production repexp -> tyexp 
-- On LPAREN reduce production repexp -> tyexp 
-- On LIDENT reduce production repexp -> tyexp 
-- On LET reduce production repexp -> tyexp 
-- On LEQ reduce production repexp -> tyexp 
-- On LANGLE reduce production repexp -> tyexp 
-- On INTO reduce production repexp -> tyexp 
-- On INTEGER reduce production repexp -> tyexp 
-- On IN reduce production repexp -> tyexp 
-- On HASH reduce production repexp -> tyexp 
-- On GT reduce production repexp -> tyexp 
-- On GRAMMAR reduce production repexp -> tyexp 
-- On GET reduce production repexp -> tyexp 
-- On GEQ reduce production repexp -> tyexp 
-- On EQUAL reduce production repexp -> tyexp 
-- On EOF reduce production repexp -> tyexp 
-- On END reduce production repexp -> tyexp 
-- On DOT reduce production repexp -> tyexp 
-- On DOLLAR reduce production repexp -> tyexp 
-- On DEQARROW reduce production repexp -> tyexp 
-- On DARROW reduce production repexp -> tyexp 
-- On CSET reduce production repexp -> tyexp 
-- On CREATE reduce production repexp -> tyexp 
-- On COMMA reduce production repexp -> tyexp 
-- On COLON reduce production repexp -> tyexp 
-- On CHOOSE reduce production repexp -> tyexp 
-- On CHARACTER reduce production repexp -> tyexp 
-- On CEX reduce production repexp -> tyexp 
-- On CANONIZE reduce production repexp -> tyexp 
-- On BOOLEAN reduce production repexp -> tyexp 
-- On BEGIN reduce production repexp -> tyexp 
-- On BARBAR reduce production repexp -> tyexp 
-- On BAR reduce production repexp -> tyexp 
-- On ARROW reduce production repexp -> tyexp 
-- On AMPERSAND reduce production repexp -> tyexp 

State 137:
rep -> STAR . [ WITH USING UIDENT TYPE TILDE TEST STR SEMI RPAREN RBRACK RBRACE RANGLE QUALIDENT PUT NSET MODULE MINUS LT LPAREN LIDENT LET LEQ LANGLE INTO INTEGER IN HASH GT GRAMMAR GET GEQ EQUAL EOF END DOT DOLLAR DEQARROW DARROW CSET CREATE COMMA COLON CHOOSE CHARACTER CEX CANONIZE BOOLEAN BEGIN BARBAR BAR ARROW AMPERSAND ]
-- On WITH reduce production rep -> STAR 
-- On USING reduce production rep -> STAR 
-- On UIDENT reduce production rep -> STAR 
-- On TYPE reduce production rep -> STAR 
-- On TILDE reduce production rep -> STAR 
-- On TEST reduce production rep -> STAR 
-- On STR reduce production rep -> STAR 
-- On SEMI reduce production rep -> STAR 
-- On RPAREN reduce production rep -> STAR 
-- On RBRACK reduce production rep -> STAR 
-- On RBRACE reduce production rep -> STAR 
-- On RANGLE reduce production rep -> STAR 
-- On QUALIDENT reduce production rep -> STAR 
-- On PUT reduce production rep -> STAR 
-- On NSET reduce production rep -> STAR 
-- On MODULE reduce production rep -> STAR 
-- On MINUS reduce production rep -> STAR 
-- On LT reduce production rep -> STAR 
-- On LPAREN reduce production rep -> STAR 
-- On LIDENT reduce production rep -> STAR 
-- On LET reduce production rep -> STAR 
-- On LEQ reduce production rep -> STAR 
-- On LANGLE reduce production rep -> STAR 
-- On INTO reduce production rep -> STAR 
-- On INTEGER reduce production rep -> STAR 
-- On IN reduce production rep -> STAR 
-- On HASH reduce production rep -> STAR 
-- On GT reduce production rep -> STAR 
-- On GRAMMAR reduce production rep -> STAR 
-- On GET reduce production rep -> STAR 
-- On GEQ reduce production rep -> STAR 
-- On EQUAL reduce production rep -> STAR 
-- On EOF reduce production rep -> STAR 
-- On END reduce production rep -> STAR 
-- On DOT reduce production rep -> STAR 
-- On DOLLAR reduce production rep -> STAR 
-- On DEQARROW reduce production rep -> STAR 
-- On DARROW reduce production rep -> STAR 
-- On CSET reduce production rep -> STAR 
-- On CREATE reduce production rep -> STAR 
-- On COMMA reduce production rep -> STAR 
-- On COLON reduce production rep -> STAR 
-- On CHOOSE reduce production rep -> STAR 
-- On CHARACTER reduce production rep -> STAR 
-- On CEX reduce production rep -> STAR 
-- On CANONIZE reduce production rep -> STAR 
-- On BOOLEAN reduce production rep -> STAR 
-- On BEGIN reduce production rep -> STAR 
-- On BARBAR reduce production rep -> STAR 
-- On BAR reduce production rep -> STAR 
-- On ARROW reduce production rep -> STAR 
-- On AMPERSAND reduce production rep -> STAR 

State 138:
rep -> QMARK . [ WITH USING UIDENT TYPE TILDE TEST STR SEMI RPAREN RBRACK RBRACE RANGLE QUALIDENT PUT NSET MODULE MINUS LT LPAREN LIDENT LET LEQ LANGLE INTO INTEGER IN HASH GT GRAMMAR GET GEQ EQUAL EOF END DOT DOLLAR DEQARROW DARROW CSET CREATE COMMA COLON CHOOSE CHARACTER CEX CANONIZE BOOLEAN BEGIN BARBAR BAR ARROW AMPERSAND ]
-- On WITH reduce production rep -> QMARK 
-- On USING reduce production rep -> QMARK 
-- On UIDENT reduce production rep -> QMARK 
-- On TYPE reduce production rep -> QMARK 
-- On TILDE reduce production rep -> QMARK 
-- On TEST reduce production rep -> QMARK 
-- On STR reduce production rep -> QMARK 
-- On SEMI reduce production rep -> QMARK 
-- On RPAREN reduce production rep -> QMARK 
-- On RBRACK reduce production rep -> QMARK 
-- On RBRACE reduce production rep -> QMARK 
-- On RANGLE reduce production rep -> QMARK 
-- On QUALIDENT reduce production rep -> QMARK 
-- On PUT reduce production rep -> QMARK 
-- On NSET reduce production rep -> QMARK 
-- On MODULE reduce production rep -> QMARK 
-- On MINUS reduce production rep -> QMARK 
-- On LT reduce production rep -> QMARK 
-- On LPAREN reduce production rep -> QMARK 
-- On LIDENT reduce production rep -> QMARK 
-- On LET reduce production rep -> QMARK 
-- On LEQ reduce production rep -> QMARK 
-- On LANGLE reduce production rep -> QMARK 
-- On INTO reduce production rep -> QMARK 
-- On INTEGER reduce production rep -> QMARK 
-- On IN reduce production rep -> QMARK 
-- On HASH reduce production rep -> QMARK 
-- On GT reduce production rep -> QMARK 
-- On GRAMMAR reduce production rep -> QMARK 
-- On GET reduce production rep -> QMARK 
-- On GEQ reduce production rep -> QMARK 
-- On EQUAL reduce production rep -> QMARK 
-- On EOF reduce production rep -> QMARK 
-- On END reduce production rep -> QMARK 
-- On DOT reduce production rep -> QMARK 
-- On DOLLAR reduce production rep -> QMARK 
-- On DEQARROW reduce production rep -> QMARK 
-- On DARROW reduce production rep -> QMARK 
-- On CSET reduce production rep -> QMARK 
-- On CREATE reduce production rep -> QMARK 
-- On COMMA reduce production rep -> QMARK 
-- On COLON reduce production rep -> QMARK 
-- On CHOOSE reduce production rep -> QMARK 
-- On CHARACTER reduce production rep -> QMARK 
-- On CEX reduce production rep -> QMARK 
-- On CANONIZE reduce production rep -> QMARK 
-- On BOOLEAN reduce production rep -> QMARK 
-- On BEGIN reduce production rep -> QMARK 
-- On BARBAR reduce production rep -> QMARK 
-- On BAR reduce production rep -> QMARK 
-- On ARROW reduce production rep -> QMARK 
-- On AMPERSAND reduce production rep -> QMARK 

State 139:
rep -> PLUS . [ WITH USING UIDENT TYPE TILDE TEST STR SEMI RPAREN RBRACK RBRACE RANGLE QUALIDENT PUT NSET MODULE MINUS LT LPAREN LIDENT LET LEQ LANGLE INTO INTEGER IN HASH GT GRAMMAR GET GEQ EQUAL EOF END DOT DOLLAR DEQARROW DARROW CSET CREATE COMMA COLON CHOOSE CHARACTER CEX CANONIZE BOOLEAN BEGIN BARBAR BAR ARROW AMPERSAND ]
-- On WITH reduce production rep -> PLUS 
-- On USING reduce production rep -> PLUS 
-- On UIDENT reduce production rep -> PLUS 
-- On TYPE reduce production rep -> PLUS 
-- On TILDE reduce production rep -> PLUS 
-- On TEST reduce production rep -> PLUS 
-- On STR reduce production rep -> PLUS 
-- On SEMI reduce production rep -> PLUS 
-- On RPAREN reduce production rep -> PLUS 
-- On RBRACK reduce production rep -> PLUS 
-- On RBRACE reduce production rep -> PLUS 
-- On RANGLE reduce production rep -> PLUS 
-- On QUALIDENT reduce production rep -> PLUS 
-- On PUT reduce production rep -> PLUS 
-- On NSET reduce production rep -> PLUS 
-- On MODULE reduce production rep -> PLUS 
-- On MINUS reduce production rep -> PLUS 
-- On LT reduce production rep -> PLUS 
-- On LPAREN reduce production rep -> PLUS 
-- On LIDENT reduce production rep -> PLUS 
-- On LET reduce production rep -> PLUS 
-- On LEQ reduce production rep -> PLUS 
-- On LANGLE reduce production rep -> PLUS 
-- On INTO reduce production rep -> PLUS 
-- On INTEGER reduce production rep -> PLUS 
-- On IN reduce production rep -> PLUS 
-- On HASH reduce production rep -> PLUS 
-- On GT reduce production rep -> PLUS 
-- On GRAMMAR reduce production rep -> PLUS 
-- On GET reduce production rep -> PLUS 
-- On GEQ reduce production rep -> PLUS 
-- On EQUAL reduce production rep -> PLUS 
-- On EOF reduce production rep -> PLUS 
-- On END reduce production rep -> PLUS 
-- On DOT reduce production rep -> PLUS 
-- On DOLLAR reduce production rep -> PLUS 
-- On DEQARROW reduce production rep -> PLUS 
-- On DARROW reduce production rep -> PLUS 
-- On CSET reduce production rep -> PLUS 
-- On CREATE reduce production rep -> PLUS 
-- On COMMA reduce production rep -> PLUS 
-- On COLON reduce production rep -> PLUS 
-- On CHOOSE reduce production rep -> PLUS 
-- On CHARACTER reduce production rep -> PLUS 
-- On CEX reduce production rep -> PLUS 
-- On CANONIZE reduce production rep -> PLUS 
-- On BOOLEAN reduce production rep -> PLUS 
-- On BEGIN reduce production rep -> PLUS 
-- On BARBAR reduce production rep -> PLUS 
-- On BAR reduce production rep -> PLUS 
-- On ARROW reduce production rep -> PLUS 
-- On AMPERSAND reduce production rep -> PLUS 

State 140:
rep -> LBRACE . INTEGER RBRACE [ WITH USING UIDENT TYPE TILDE TEST STR SEMI RPAREN RBRACK RBRACE RANGLE QUALIDENT PUT NSET MODULE MINUS LT LPAREN LIDENT LET LEQ LANGLE INTO INTEGER IN HASH GT GRAMMAR GET GEQ EQUAL EOF END DOT DOLLAR DEQARROW DARROW CSET CREATE COMMA COLON CHOOSE CHARACTER CEX CANONIZE BOOLEAN BEGIN BARBAR BAR ARROW AMPERSAND ]
rep -> LBRACE . INTEGER COMMA RBRACE [ WITH USING UIDENT TYPE TILDE TEST STR SEMI RPAREN RBRACK RBRACE RANGLE QUALIDENT PUT NSET MODULE MINUS LT LPAREN LIDENT LET LEQ LANGLE INTO INTEGER IN HASH GT GRAMMAR GET GEQ EQUAL EOF END DOT DOLLAR DEQARROW DARROW CSET CREATE COMMA COLON CHOOSE CHARACTER CEX CANONIZE BOOLEAN BEGIN BARBAR BAR ARROW AMPERSAND ]
rep -> LBRACE . INTEGER COMMA INTEGER RBRACE [ WITH USING UIDENT TYPE TILDE TEST STR SEMI RPAREN RBRACK RBRACE RANGLE QUALIDENT PUT NSET MODULE MINUS LT LPAREN LIDENT LET LEQ LANGLE INTO INTEGER IN HASH GT GRAMMAR GET GEQ EQUAL EOF END DOT DOLLAR DEQARROW DARROW CSET CREATE COMMA COLON CHOOSE CHARACTER CEX CANONIZE BOOLEAN BEGIN BARBAR BAR ARROW AMPERSAND ]
tyexp -> tyexp LBRACE . sort RBRACE [ WITH USING UIDENT TYPE TILDE TEST STR STAR SEMI RPAREN RBRACK RBRACE RANGLE QUALIDENT QMARK PUT PLUS NSET MODULE MINUS LT LPAREN LIDENT LET LEQ LBRACE LANGLE INTO INTEGER IN HASH GT GRAMMAR GET GEQ EQUAL EOF END DOT DOLLAR DEQARROW DARROW CSET CREATE COMMA COLON CHOOSE CHARACTER CEX CANONIZE BOOLEAN BEGIN BARBAR BAR ARROW AMPERSAND ]
-- On UNIT shift to state 24
-- On TYVARIDENT shift to state 12
-- On STRINGPREFS shift to state 25
-- On STRINGLISTPREFS shift to state 26
-- On STRING shift to state 27
-- On SKELETONS shift to state 28
-- On RESOURCES shift to state 29
-- On REGEXP shift to state 30
-- On QUALIDENT shift to state 31
-- On LPAREN shift to state 32
-- On LIDENT shift to state 52
-- On LENS shift to state 53
-- On INTPREFS shift to state 54
-- On INTEGER shift to state 141
-- On INT shift to state 55
-- On FORALL shift to state 56
-- On CHAR shift to state 59
-- On CANONIZER shift to state 60
-- On BOOLPREFS shift to state 61
-- On BOOL shift to state 62
-- On AREGEXP shift to state 63
-- On tyvar shift to state 64
-- On sort shift to state 147
-- On qvar shift to state 66
-- On productsort shift to state 67
-- On datatypesort shift to state 149
-- On bsort shift to state 150
-- On asort shift to state 152
-- On arrowsort shift to state 153

State 141:
rep -> LBRACE INTEGER . RBRACE [ WITH USING UIDENT TYPE TILDE TEST STR SEMI RPAREN RBRACK RBRACE RANGLE QUALIDENT PUT NSET MODULE MINUS LT LPAREN LIDENT LET LEQ LANGLE INTO INTEGER IN HASH GT GRAMMAR GET GEQ EQUAL EOF END DOT DOLLAR DEQARROW DARROW CSET CREATE COMMA COLON CHOOSE CHARACTER CEX CANONIZE BOOLEAN BEGIN BARBAR BAR ARROW AMPERSAND ]
rep -> LBRACE INTEGER . COMMA RBRACE [ WITH USING UIDENT TYPE TILDE TEST STR SEMI RPAREN RBRACK RBRACE RANGLE QUALIDENT PUT NSET MODULE MINUS LT LPAREN LIDENT LET LEQ LANGLE INTO INTEGER IN HASH GT GRAMMAR GET GEQ EQUAL EOF END DOT DOLLAR DEQARROW DARROW CSET CREATE COMMA COLON CHOOSE CHARACTER CEX CANONIZE BOOLEAN BEGIN BARBAR BAR ARROW AMPERSAND ]
rep -> LBRACE INTEGER . COMMA INTEGER RBRACE [ WITH USING UIDENT TYPE TILDE TEST STR SEMI RPAREN RBRACK RBRACE RANGLE QUALIDENT PUT NSET MODULE MINUS LT LPAREN LIDENT LET LEQ LANGLE INTO INTEGER IN HASH GT GRAMMAR GET GEQ EQUAL EOF END DOT DOLLAR DEQARROW DARROW CSET CREATE COMMA COLON CHOOSE CHARACTER CEX CANONIZE BOOLEAN BEGIN BARBAR BAR ARROW AMPERSAND ]
-- On RBRACE shift to state 142
-- On COMMA shift to state 143

State 142:
rep -> LBRACE INTEGER RBRACE . [ WITH USING UIDENT TYPE TILDE TEST STR SEMI RPAREN RBRACK RBRACE RANGLE QUALIDENT PUT NSET MODULE MINUS LT LPAREN LIDENT LET LEQ LANGLE INTO INTEGER IN HASH GT GRAMMAR GET GEQ EQUAL EOF END DOT DOLLAR DEQARROW DARROW CSET CREATE COMMA COLON CHOOSE CHARACTER CEX CANONIZE BOOLEAN BEGIN BARBAR BAR ARROW AMPERSAND ]
-- On WITH reduce production rep -> LBRACE INTEGER RBRACE 
-- On USING reduce production rep -> LBRACE INTEGER RBRACE 
-- On UIDENT reduce production rep -> LBRACE INTEGER RBRACE 
-- On TYPE reduce production rep -> LBRACE INTEGER RBRACE 
-- On TILDE reduce production rep -> LBRACE INTEGER RBRACE 
-- On TEST reduce production rep -> LBRACE INTEGER RBRACE 
-- On STR reduce production rep -> LBRACE INTEGER RBRACE 
-- On SEMI reduce production rep -> LBRACE INTEGER RBRACE 
-- On RPAREN reduce production rep -> LBRACE INTEGER RBRACE 
-- On RBRACK reduce production rep -> LBRACE INTEGER RBRACE 
-- On RBRACE reduce production rep -> LBRACE INTEGER RBRACE 
-- On RANGLE reduce production rep -> LBRACE INTEGER RBRACE 
-- On QUALIDENT reduce production rep -> LBRACE INTEGER RBRACE 
-- On PUT reduce production rep -> LBRACE INTEGER RBRACE 
-- On NSET reduce production rep -> LBRACE INTEGER RBRACE 
-- On MODULE reduce production rep -> LBRACE INTEGER RBRACE 
-- On MINUS reduce production rep -> LBRACE INTEGER RBRACE 
-- On LT reduce production rep -> LBRACE INTEGER RBRACE 
-- On LPAREN reduce production rep -> LBRACE INTEGER RBRACE 
-- On LIDENT reduce production rep -> LBRACE INTEGER RBRACE 
-- On LET reduce production rep -> LBRACE INTEGER RBRACE 
-- On LEQ reduce production rep -> LBRACE INTEGER RBRACE 
-- On LANGLE reduce production rep -> LBRACE INTEGER RBRACE 
-- On INTO reduce production rep -> LBRACE INTEGER RBRACE 
-- On INTEGER reduce production rep -> LBRACE INTEGER RBRACE 
-- On IN reduce production rep -> LBRACE INTEGER RBRACE 
-- On HASH reduce production rep -> LBRACE INTEGER RBRACE 
-- On GT reduce production rep -> LBRACE INTEGER RBRACE 
-- On GRAMMAR reduce production rep -> LBRACE INTEGER RBRACE 
-- On GET reduce production rep -> LBRACE INTEGER RBRACE 
-- On GEQ reduce production rep -> LBRACE INTEGER RBRACE 
-- On EQUAL reduce production rep -> LBRACE INTEGER RBRACE 
-- On EOF reduce production rep -> LBRACE INTEGER RBRACE 
-- On END reduce production rep -> LBRACE INTEGER RBRACE 
-- On DOT reduce production rep -> LBRACE INTEGER RBRACE 
-- On DOLLAR reduce production rep -> LBRACE INTEGER RBRACE 
-- On DEQARROW reduce production rep -> LBRACE INTEGER RBRACE 
-- On DARROW reduce production rep -> LBRACE INTEGER RBRACE 
-- On CSET reduce production rep -> LBRACE INTEGER RBRACE 
-- On CREATE reduce production rep -> LBRACE INTEGER RBRACE 
-- On COMMA reduce production rep -> LBRACE INTEGER RBRACE 
-- On COLON reduce production rep -> LBRACE INTEGER RBRACE 
-- On CHOOSE reduce production rep -> LBRACE INTEGER RBRACE 
-- On CHARACTER reduce production rep -> LBRACE INTEGER RBRACE 
-- On CEX reduce production rep -> LBRACE INTEGER RBRACE 
-- On CANONIZE reduce production rep -> LBRACE INTEGER RBRACE 
-- On BOOLEAN reduce production rep -> LBRACE INTEGER RBRACE 
-- On BEGIN reduce production rep -> LBRACE INTEGER RBRACE 
-- On BARBAR reduce production rep -> LBRACE INTEGER RBRACE 
-- On BAR reduce production rep -> LBRACE INTEGER RBRACE 
-- On ARROW reduce production rep -> LBRACE INTEGER RBRACE 
-- On AMPERSAND reduce production rep -> LBRACE INTEGER RBRACE 

State 143:
rep -> LBRACE INTEGER COMMA . RBRACE [ WITH USING UIDENT TYPE TILDE TEST STR SEMI RPAREN RBRACK RBRACE RANGLE QUALIDENT PUT NSET MODULE MINUS LT LPAREN LIDENT LET LEQ LANGLE INTO INTEGER IN HASH GT GRAMMAR GET GEQ EQUAL EOF END DOT DOLLAR DEQARROW DARROW CSET CREATE COMMA COLON CHOOSE CHARACTER CEX CANONIZE BOOLEAN BEGIN BARBAR BAR ARROW AMPERSAND ]
rep -> LBRACE INTEGER COMMA . INTEGER RBRACE [ WITH USING UIDENT TYPE TILDE TEST STR SEMI RPAREN RBRACK RBRACE RANGLE QUALIDENT PUT NSET MODULE MINUS LT LPAREN LIDENT LET LEQ LANGLE INTO INTEGER IN HASH GT GRAMMAR GET GEQ EQUAL EOF END DOT DOLLAR DEQARROW DARROW CSET CREATE COMMA COLON CHOOSE CHARACTER CEX CANONIZE BOOLEAN BEGIN BARBAR BAR ARROW AMPERSAND ]
-- On RBRACE shift to state 144
-- On INTEGER shift to state 145

State 144:
rep -> LBRACE INTEGER COMMA RBRACE . [ WITH USING UIDENT TYPE TILDE TEST STR SEMI RPAREN RBRACK RBRACE RANGLE QUALIDENT PUT NSET MODULE MINUS LT LPAREN LIDENT LET LEQ LANGLE INTO INTEGER IN HASH GT GRAMMAR GET GEQ EQUAL EOF END DOT DOLLAR DEQARROW DARROW CSET CREATE COMMA COLON CHOOSE CHARACTER CEX CANONIZE BOOLEAN BEGIN BARBAR BAR ARROW AMPERSAND ]
-- On WITH reduce production rep -> LBRACE INTEGER COMMA RBRACE 
-- On USING reduce production rep -> LBRACE INTEGER COMMA RBRACE 
-- On UIDENT reduce production rep -> LBRACE INTEGER COMMA RBRACE 
-- On TYPE reduce production rep -> LBRACE INTEGER COMMA RBRACE 
-- On TILDE reduce production rep -> LBRACE INTEGER COMMA RBRACE 
-- On TEST reduce production rep -> LBRACE INTEGER COMMA RBRACE 
-- On STR reduce production rep -> LBRACE INTEGER COMMA RBRACE 
-- On SEMI reduce production rep -> LBRACE INTEGER COMMA RBRACE 
-- On RPAREN reduce production rep -> LBRACE INTEGER COMMA RBRACE 
-- On RBRACK reduce production rep -> LBRACE INTEGER COMMA RBRACE 
-- On RBRACE reduce production rep -> LBRACE INTEGER COMMA RBRACE 
-- On RANGLE reduce production rep -> LBRACE INTEGER COMMA RBRACE 
-- On QUALIDENT reduce production rep -> LBRACE INTEGER COMMA RBRACE 
-- On PUT reduce production rep -> LBRACE INTEGER COMMA RBRACE 
-- On NSET reduce production rep -> LBRACE INTEGER COMMA RBRACE 
-- On MODULE reduce production rep -> LBRACE INTEGER COMMA RBRACE 
-- On MINUS reduce production rep -> LBRACE INTEGER COMMA RBRACE 
-- On LT reduce production rep -> LBRACE INTEGER COMMA RBRACE 
-- On LPAREN reduce production rep -> LBRACE INTEGER COMMA RBRACE 
-- On LIDENT reduce production rep -> LBRACE INTEGER COMMA RBRACE 
-- On LET reduce production rep -> LBRACE INTEGER COMMA RBRACE 
-- On LEQ reduce production rep -> LBRACE INTEGER COMMA RBRACE 
-- On LANGLE reduce production rep -> LBRACE INTEGER COMMA RBRACE 
-- On INTO reduce production rep -> LBRACE INTEGER COMMA RBRACE 
-- On INTEGER reduce production rep -> LBRACE INTEGER COMMA RBRACE 
-- On IN reduce production rep -> LBRACE INTEGER COMMA RBRACE 
-- On HASH reduce production rep -> LBRACE INTEGER COMMA RBRACE 
-- On GT reduce production rep -> LBRACE INTEGER COMMA RBRACE 
-- On GRAMMAR reduce production rep -> LBRACE INTEGER COMMA RBRACE 
-- On GET reduce production rep -> LBRACE INTEGER COMMA RBRACE 
-- On GEQ reduce production rep -> LBRACE INTEGER COMMA RBRACE 
-- On EQUAL reduce production rep -> LBRACE INTEGER COMMA RBRACE 
-- On EOF reduce production rep -> LBRACE INTEGER COMMA RBRACE 
-- On END reduce production rep -> LBRACE INTEGER COMMA RBRACE 
-- On DOT reduce production rep -> LBRACE INTEGER COMMA RBRACE 
-- On DOLLAR reduce production rep -> LBRACE INTEGER COMMA RBRACE 
-- On DEQARROW reduce production rep -> LBRACE INTEGER COMMA RBRACE 
-- On DARROW reduce production rep -> LBRACE INTEGER COMMA RBRACE 
-- On CSET reduce production rep -> LBRACE INTEGER COMMA RBRACE 
-- On CREATE reduce production rep -> LBRACE INTEGER COMMA RBRACE 
-- On COMMA reduce production rep -> LBRACE INTEGER COMMA RBRACE 
-- On COLON reduce production rep -> LBRACE INTEGER COMMA RBRACE 
-- On CHOOSE reduce production rep -> LBRACE INTEGER COMMA RBRACE 
-- On CHARACTER reduce production rep -> LBRACE INTEGER COMMA RBRACE 
-- On CEX reduce production rep -> LBRACE INTEGER COMMA RBRACE 
-- On CANONIZE reduce production rep -> LBRACE INTEGER COMMA RBRACE 
-- On BOOLEAN reduce production rep -> LBRACE INTEGER COMMA RBRACE 
-- On BEGIN reduce production rep -> LBRACE INTEGER COMMA RBRACE 
-- On BARBAR reduce production rep -> LBRACE INTEGER COMMA RBRACE 
-- On BAR reduce production rep -> LBRACE INTEGER COMMA RBRACE 
-- On ARROW reduce production rep -> LBRACE INTEGER COMMA RBRACE 
-- On AMPERSAND reduce production rep -> LBRACE INTEGER COMMA RBRACE 

State 145:
rep -> LBRACE INTEGER COMMA INTEGER . RBRACE [ WITH USING UIDENT TYPE TILDE TEST STR SEMI RPAREN RBRACK RBRACE RANGLE QUALIDENT PUT NSET MODULE MINUS LT LPAREN LIDENT LET LEQ LANGLE INTO INTEGER IN HASH GT GRAMMAR GET GEQ EQUAL EOF END DOT DOLLAR DEQARROW DARROW CSET CREATE COMMA COLON CHOOSE CHARACTER CEX CANONIZE BOOLEAN BEGIN BARBAR BAR ARROW AMPERSAND ]
-- On RBRACE shift to state 146

State 146:
rep -> LBRACE INTEGER COMMA INTEGER RBRACE . [ WITH USING UIDENT TYPE TILDE TEST STR SEMI RPAREN RBRACK RBRACE RANGLE QUALIDENT PUT NSET MODULE MINUS LT LPAREN LIDENT LET LEQ LANGLE INTO INTEGER IN HASH GT GRAMMAR GET GEQ EQUAL EOF END DOT DOLLAR DEQARROW DARROW CSET CREATE COMMA COLON CHOOSE CHARACTER CEX CANONIZE BOOLEAN BEGIN BARBAR BAR ARROW AMPERSAND ]
-- On WITH reduce production rep -> LBRACE INTEGER COMMA INTEGER RBRACE 
-- On USING reduce production rep -> LBRACE INTEGER COMMA INTEGER RBRACE 
-- On UIDENT reduce production rep -> LBRACE INTEGER COMMA INTEGER RBRACE 
-- On TYPE reduce production rep -> LBRACE INTEGER COMMA INTEGER RBRACE 
-- On TILDE reduce production rep -> LBRACE INTEGER COMMA INTEGER RBRACE 
-- On TEST reduce production rep -> LBRACE INTEGER COMMA INTEGER RBRACE 
-- On STR reduce production rep -> LBRACE INTEGER COMMA INTEGER RBRACE 
-- On SEMI reduce production rep -> LBRACE INTEGER COMMA INTEGER RBRACE 
-- On RPAREN reduce production rep -> LBRACE INTEGER COMMA INTEGER RBRACE 
-- On RBRACK reduce production rep -> LBRACE INTEGER COMMA INTEGER RBRACE 
-- On RBRACE reduce production rep -> LBRACE INTEGER COMMA INTEGER RBRACE 
-- On RANGLE reduce production rep -> LBRACE INTEGER COMMA INTEGER RBRACE 
-- On QUALIDENT reduce production rep -> LBRACE INTEGER COMMA INTEGER RBRACE 
-- On PUT reduce production rep -> LBRACE INTEGER COMMA INTEGER RBRACE 
-- On NSET reduce production rep -> LBRACE INTEGER COMMA INTEGER RBRACE 
-- On MODULE reduce production rep -> LBRACE INTEGER COMMA INTEGER RBRACE 
-- On MINUS reduce production rep -> LBRACE INTEGER COMMA INTEGER RBRACE 
-- On LT reduce production rep -> LBRACE INTEGER COMMA INTEGER RBRACE 
-- On LPAREN reduce production rep -> LBRACE INTEGER COMMA INTEGER RBRACE 
-- On LIDENT reduce production rep -> LBRACE INTEGER COMMA INTEGER RBRACE 
-- On LET reduce production rep -> LBRACE INTEGER COMMA INTEGER RBRACE 
-- On LEQ reduce production rep -> LBRACE INTEGER COMMA INTEGER RBRACE 
-- On LANGLE reduce production rep -> LBRACE INTEGER COMMA INTEGER RBRACE 
-- On INTO reduce production rep -> LBRACE INTEGER COMMA INTEGER RBRACE 
-- On INTEGER reduce production rep -> LBRACE INTEGER COMMA INTEGER RBRACE 
-- On IN reduce production rep -> LBRACE INTEGER COMMA INTEGER RBRACE 
-- On HASH reduce production rep -> LBRACE INTEGER COMMA INTEGER RBRACE 
-- On GT reduce production rep -> LBRACE INTEGER COMMA INTEGER RBRACE 
-- On GRAMMAR reduce production rep -> LBRACE INTEGER COMMA INTEGER RBRACE 
-- On GET reduce production rep -> LBRACE INTEGER COMMA INTEGER RBRACE 
-- On GEQ reduce production rep -> LBRACE INTEGER COMMA INTEGER RBRACE 
-- On EQUAL reduce production rep -> LBRACE INTEGER COMMA INTEGER RBRACE 
-- On EOF reduce production rep -> LBRACE INTEGER COMMA INTEGER RBRACE 
-- On END reduce production rep -> LBRACE INTEGER COMMA INTEGER RBRACE 
-- On DOT reduce production rep -> LBRACE INTEGER COMMA INTEGER RBRACE 
-- On DOLLAR reduce production rep -> LBRACE INTEGER COMMA INTEGER RBRACE 
-- On DEQARROW reduce production rep -> LBRACE INTEGER COMMA INTEGER RBRACE 
-- On DARROW reduce production rep -> LBRACE INTEGER COMMA INTEGER RBRACE 
-- On CSET reduce production rep -> LBRACE INTEGER COMMA INTEGER RBRACE 
-- On CREATE reduce production rep -> LBRACE INTEGER COMMA INTEGER RBRACE 
-- On COMMA reduce production rep -> LBRACE INTEGER COMMA INTEGER RBRACE 
-- On COLON reduce production rep -> LBRACE INTEGER COMMA INTEGER RBRACE 
-- On CHOOSE reduce production rep -> LBRACE INTEGER COMMA INTEGER RBRACE 
-- On CHARACTER reduce production rep -> LBRACE INTEGER COMMA INTEGER RBRACE 
-- On CEX reduce production rep -> LBRACE INTEGER COMMA INTEGER RBRACE 
-- On CANONIZE reduce production rep -> LBRACE INTEGER COMMA INTEGER RBRACE 
-- On BOOLEAN reduce production rep -> LBRACE INTEGER COMMA INTEGER RBRACE 
-- On BEGIN reduce production rep -> LBRACE INTEGER COMMA INTEGER RBRACE 
-- On BARBAR reduce production rep -> LBRACE INTEGER COMMA INTEGER RBRACE 
-- On BAR reduce production rep -> LBRACE INTEGER COMMA INTEGER RBRACE 
-- On ARROW reduce production rep -> LBRACE INTEGER COMMA INTEGER RBRACE 
-- On AMPERSAND reduce production rep -> LBRACE INTEGER COMMA INTEGER RBRACE 

State 147:
tyexp -> tyexp LBRACE sort . RBRACE [ WITH USING UIDENT TYPE TILDE TEST STR STAR SEMI RPAREN RBRACK RBRACE RANGLE QUALIDENT QMARK PUT PLUS NSET MODULE MINUS LT LPAREN LIDENT LET LEQ LBRACE LANGLE INTO INTEGER IN HASH GT GRAMMAR GET GEQ EQUAL EOF END DOT DOLLAR DEQARROW DARROW CSET CREATE COMMA COLON CHOOSE CHARACTER CEX CANONIZE BOOLEAN BEGIN BARBAR BAR ARROW AMPERSAND ]
-- On RBRACE shift to state 148

State 148:
tyexp -> tyexp LBRACE sort RBRACE . [ WITH USING UIDENT TYPE TILDE TEST STR STAR SEMI RPAREN RBRACK RBRACE RANGLE QUALIDENT QMARK PUT PLUS NSET MODULE MINUS LT LPAREN LIDENT LET LEQ LBRACE LANGLE INTO INTEGER IN HASH GT GRAMMAR GET GEQ EQUAL EOF END DOT DOLLAR DEQARROW DARROW CSET CREATE COMMA COLON CHOOSE CHARACTER CEX CANONIZE BOOLEAN BEGIN BARBAR BAR ARROW AMPERSAND ]
-- On WITH reduce production tyexp -> tyexp LBRACE sort RBRACE 
-- On USING reduce production tyexp -> tyexp LBRACE sort RBRACE 
-- On UIDENT reduce production tyexp -> tyexp LBRACE sort RBRACE 
-- On TYPE reduce production tyexp -> tyexp LBRACE sort RBRACE 
-- On TILDE reduce production tyexp -> tyexp LBRACE sort RBRACE 
-- On TEST reduce production tyexp -> tyexp LBRACE sort RBRACE 
-- On STR reduce production tyexp -> tyexp LBRACE sort RBRACE 
-- On STAR reduce production tyexp -> tyexp LBRACE sort RBRACE 
-- On SEMI reduce production tyexp -> tyexp LBRACE sort RBRACE 
-- On RPAREN reduce production tyexp -> tyexp LBRACE sort RBRACE 
-- On RBRACK reduce production tyexp -> tyexp LBRACE sort RBRACE 
-- On RBRACE reduce production tyexp -> tyexp LBRACE sort RBRACE 
-- On RANGLE reduce production tyexp -> tyexp LBRACE sort RBRACE 
-- On QUALIDENT reduce production tyexp -> tyexp LBRACE sort RBRACE 
-- On QMARK reduce production tyexp -> tyexp LBRACE sort RBRACE 
-- On PUT reduce production tyexp -> tyexp LBRACE sort RBRACE 
-- On PLUS reduce production tyexp -> tyexp LBRACE sort RBRACE 
-- On NSET reduce production tyexp -> tyexp LBRACE sort RBRACE 
-- On MODULE reduce production tyexp -> tyexp LBRACE sort RBRACE 
-- On MINUS reduce production tyexp -> tyexp LBRACE sort RBRACE 
-- On LT reduce production tyexp -> tyexp LBRACE sort RBRACE 
-- On LPAREN reduce production tyexp -> tyexp LBRACE sort RBRACE 
-- On LIDENT reduce production tyexp -> tyexp LBRACE sort RBRACE 
-- On LET reduce production tyexp -> tyexp LBRACE sort RBRACE 
-- On LEQ reduce production tyexp -> tyexp LBRACE sort RBRACE 
-- On LBRACE reduce production tyexp -> tyexp LBRACE sort RBRACE 
-- On LANGLE reduce production tyexp -> tyexp LBRACE sort RBRACE 
-- On INTO reduce production tyexp -> tyexp LBRACE sort RBRACE 
-- On INTEGER reduce production tyexp -> tyexp LBRACE sort RBRACE 
-- On IN reduce production tyexp -> tyexp LBRACE sort RBRACE 
-- On HASH reduce production tyexp -> tyexp LBRACE sort RBRACE 
-- On GT reduce production tyexp -> tyexp LBRACE sort RBRACE 
-- On GRAMMAR reduce production tyexp -> tyexp LBRACE sort RBRACE 
-- On GET reduce production tyexp -> tyexp LBRACE sort RBRACE 
-- On GEQ reduce production tyexp -> tyexp LBRACE sort RBRACE 
-- On EQUAL reduce production tyexp -> tyexp LBRACE sort RBRACE 
-- On EOF reduce production tyexp -> tyexp LBRACE sort RBRACE 
-- On END reduce production tyexp -> tyexp LBRACE sort RBRACE 
-- On DOT reduce production tyexp -> tyexp LBRACE sort RBRACE 
-- On DOLLAR reduce production tyexp -> tyexp LBRACE sort RBRACE 
-- On DEQARROW reduce production tyexp -> tyexp LBRACE sort RBRACE 
-- On DARROW reduce production tyexp -> tyexp LBRACE sort RBRACE 
-- On CSET reduce production tyexp -> tyexp LBRACE sort RBRACE 
-- On CREATE reduce production tyexp -> tyexp LBRACE sort RBRACE 
-- On COMMA reduce production tyexp -> tyexp LBRACE sort RBRACE 
-- On COLON reduce production tyexp -> tyexp LBRACE sort RBRACE 
-- On CHOOSE reduce production tyexp -> tyexp LBRACE sort RBRACE 
-- On CHARACTER reduce production tyexp -> tyexp LBRACE sort RBRACE 
-- On CEX reduce production tyexp -> tyexp LBRACE sort RBRACE 
-- On CANONIZE reduce production tyexp -> tyexp LBRACE sort RBRACE 
-- On BOOLEAN reduce production tyexp -> tyexp LBRACE sort RBRACE 
-- On BEGIN reduce production tyexp -> tyexp LBRACE sort RBRACE 
-- On BARBAR reduce production tyexp -> tyexp LBRACE sort RBRACE 
-- On BAR reduce production tyexp -> tyexp LBRACE sort RBRACE 
-- On ARROW reduce production tyexp -> tyexp LBRACE sort RBRACE 
-- On AMPERSAND reduce production tyexp -> tyexp LBRACE sort RBRACE 

State 149:
productsort -> datatypesort . [ WHERE TYPE TEST STAR RPAREN RBRACE RANGLE MODULE LLIST LET IN EQUAL EOF END DOLLAR COMMA BAR ARROW ]
-- On WHERE reduce production productsort -> datatypesort 
-- On TYPE reduce production productsort -> datatypesort 
-- On TEST reduce production productsort -> datatypesort 
-- On STAR reduce production productsort -> datatypesort 
-- On RPAREN reduce production productsort -> datatypesort 
-- On RBRACE reduce production productsort -> datatypesort 
-- On RANGLE reduce production productsort -> datatypesort 
-- On MODULE reduce production productsort -> datatypesort 
-- On LLIST reduce production productsort -> datatypesort 
-- On LET reduce production productsort -> datatypesort 
-- On IN reduce production productsort -> datatypesort 
-- On EQUAL reduce production productsort -> datatypesort 
-- On EOF reduce production productsort -> datatypesort 
-- On END reduce production productsort -> datatypesort 
-- On DOLLAR reduce production productsort -> datatypesort 
-- On COMMA reduce production productsort -> datatypesort 
-- On BAR reduce production productsort -> datatypesort 
-- On ARROW reduce production productsort -> datatypesort 

State 150:
datatypesort -> bsort . qvar [ WHERE TYPE TEST STAR RPAREN RBRACE RANGLE MODULE LLIST LET IN EQUAL EOF END DOLLAR COMMA BAR ARROW ]
datatypesort -> bsort . [ WHERE TYPE TEST STAR RPAREN RBRACE RANGLE MODULE LLIST LET IN EQUAL EOF END DOLLAR COMMA BAR ARROW ]
-- On QUALIDENT shift to state 31
-- On LIDENT shift to state 52
-- On qvar shift to state 151
-- On WHERE reduce production datatypesort -> bsort 
-- On TYPE reduce production datatypesort -> bsort 
-- On TEST reduce production datatypesort -> bsort 
-- On STAR reduce production datatypesort -> bsort 
-- On RPAREN reduce production datatypesort -> bsort 
-- On RBRACE reduce production datatypesort -> bsort 
-- On RANGLE reduce production datatypesort -> bsort 
-- On MODULE reduce production datatypesort -> bsort 
-- On LLIST reduce production datatypesort -> bsort 
-- On LET reduce production datatypesort -> bsort 
-- On IN reduce production datatypesort -> bsort 
-- On EQUAL reduce production datatypesort -> bsort 
-- On EOF reduce production datatypesort -> bsort 
-- On END reduce production datatypesort -> bsort 
-- On DOLLAR reduce production datatypesort -> bsort 
-- On COMMA reduce production datatypesort -> bsort 
-- On BAR reduce production datatypesort -> bsort 
-- On ARROW reduce production datatypesort -> bsort 

State 151:
datatypesort -> bsort qvar . [ WHERE TYPE TEST STAR RPAREN RBRACE RANGLE MODULE LLIST LET IN EQUAL EOF END DOLLAR COMMA BAR ARROW ]
-- On WHERE reduce production datatypesort -> bsort qvar 
-- On TYPE reduce production datatypesort -> bsort qvar 
-- On TEST reduce production datatypesort -> bsort qvar 
-- On STAR reduce production datatypesort -> bsort qvar 
-- On RPAREN reduce production datatypesort -> bsort qvar 
-- On RBRACE reduce production datatypesort -> bsort qvar 
-- On RANGLE reduce production datatypesort -> bsort qvar 
-- On MODULE reduce production datatypesort -> bsort qvar 
-- On LLIST reduce production datatypesort -> bsort qvar 
-- On LET reduce production datatypesort -> bsort qvar 
-- On IN reduce production datatypesort -> bsort qvar 
-- On EQUAL reduce production datatypesort -> bsort qvar 
-- On EOF reduce production datatypesort -> bsort qvar 
-- On END reduce production datatypesort -> bsort qvar 
-- On DOLLAR reduce production datatypesort -> bsort qvar 
-- On COMMA reduce production datatypesort -> bsort qvar 
-- On BAR reduce production datatypesort -> bsort qvar 
-- On ARROW reduce production datatypesort -> bsort qvar 

State 152:
bsort -> asort . [ WHERE TYPE TEST STAR RPAREN RBRACE RANGLE QUALIDENT MODULE LLIST LIDENT LET IN EQUAL EOF END DOLLAR COMMA BAR ARROW ]
-- On WHERE reduce production bsort -> asort 
-- On TYPE reduce production bsort -> asort 
-- On TEST reduce production bsort -> asort 
-- On STAR reduce production bsort -> asort 
-- On RPAREN reduce production bsort -> asort 
-- On RBRACE reduce production bsort -> asort 
-- On RANGLE reduce production bsort -> asort 
-- On QUALIDENT reduce production bsort -> asort 
-- On MODULE reduce production bsort -> asort 
-- On LLIST reduce production bsort -> asort 
-- On LIDENT reduce production bsort -> asort 
-- On LET reduce production bsort -> asort 
-- On IN reduce production bsort -> asort 
-- On EQUAL reduce production bsort -> asort 
-- On EOF reduce production bsort -> asort 
-- On END reduce production bsort -> asort 
-- On DOLLAR reduce production bsort -> asort 
-- On COMMA reduce production bsort -> asort 
-- On BAR reduce production bsort -> asort 
-- On ARROW reduce production bsort -> asort 

State 153:
sort -> arrowsort . [ WHERE TYPE TEST RPAREN RBRACE RANGLE MODULE LLIST LET IN EQUAL EOF END DOLLAR COMMA BAR ]
-- On WHERE reduce production sort -> arrowsort 
-- On TYPE reduce production sort -> arrowsort 
-- On TEST reduce production sort -> arrowsort 
-- On RPAREN reduce production sort -> arrowsort 
-- On RBRACE reduce production sort -> arrowsort 
-- On RANGLE reduce production sort -> arrowsort 
-- On MODULE reduce production sort -> arrowsort 
-- On LLIST reduce production sort -> arrowsort 
-- On LET reduce production sort -> arrowsort 
-- On IN reduce production sort -> arrowsort 
-- On EQUAL reduce production sort -> arrowsort 
-- On EOF reduce production sort -> arrowsort 
-- On END reduce production sort -> arrowsort 
-- On DOLLAR reduce production sort -> arrowsort 
-- On COMMA reduce production sort -> arrowsort 
-- On BAR reduce production sort -> arrowsort 

State 154:
repexp -> tyexp rep . [ WITH USING UIDENT TYPE TILDE TEST STR SEMI RPAREN RBRACK RBRACE RANGLE QUALIDENT PUT NSET MODULE MINUS LT LPAREN LIDENT LET LEQ LANGLE INTO INTEGER IN HASH GT GRAMMAR GET GEQ EQUAL EOF END DOT DOLLAR DEQARROW DARROW CSET CREATE COMMA COLON CHOOSE CHARACTER CEX CANONIZE BOOLEAN BEGIN BARBAR BAR ARROW AMPERSAND ]
-- On WITH reduce production repexp -> tyexp rep 
-- On USING reduce production repexp -> tyexp rep 
-- On UIDENT reduce production repexp -> tyexp rep 
-- On TYPE reduce production repexp -> tyexp rep 
-- On TILDE reduce production repexp -> tyexp rep 
-- On TEST reduce production repexp -> tyexp rep 
-- On STR reduce production repexp -> tyexp rep 
-- On SEMI reduce production repexp -> tyexp rep 
-- On RPAREN reduce production repexp -> tyexp rep 
-- On RBRACK reduce production repexp -> tyexp rep 
-- On RBRACE reduce production repexp -> tyexp rep 
-- On RANGLE reduce production repexp -> tyexp rep 
-- On QUALIDENT reduce production repexp -> tyexp rep 
-- On PUT reduce production repexp -> tyexp rep 
-- On NSET reduce production repexp -> tyexp rep 
-- On MODULE reduce production repexp -> tyexp rep 
-- On MINUS reduce production repexp -> tyexp rep 
-- On LT reduce production repexp -> tyexp rep 
-- On LPAREN reduce production repexp -> tyexp rep 
-- On LIDENT reduce production repexp -> tyexp rep 
-- On LET reduce production repexp -> tyexp rep 
-- On LEQ reduce production repexp -> tyexp rep 
-- On LANGLE reduce production repexp -> tyexp rep 
-- On INTO reduce production repexp -> tyexp rep 
-- On INTEGER reduce production repexp -> tyexp rep 
-- On IN reduce production repexp -> tyexp rep 
-- On HASH reduce production repexp -> tyexp rep 
-- On GT reduce production repexp -> tyexp rep 
-- On GRAMMAR reduce production repexp -> tyexp rep 
-- On GET reduce production repexp -> tyexp rep 
-- On GEQ reduce production repexp -> tyexp rep 
-- On EQUAL reduce production repexp -> tyexp rep 
-- On EOF reduce production repexp -> tyexp rep 
-- On END reduce production repexp -> tyexp rep 
-- On DOT reduce production repexp -> tyexp rep 
-- On DOLLAR reduce production repexp -> tyexp rep 
-- On DEQARROW reduce production repexp -> tyexp rep 
-- On DARROW reduce production repexp -> tyexp rep 
-- On CSET reduce production repexp -> tyexp rep 
-- On CREATE reduce production repexp -> tyexp rep 
-- On COMMA reduce production repexp -> tyexp rep 
-- On COLON reduce production repexp -> tyexp rep 
-- On CHOOSE reduce production repexp -> tyexp rep 
-- On CHARACTER reduce production repexp -> tyexp rep 
-- On CEX reduce production repexp -> tyexp rep 
-- On CANONIZE reduce production repexp -> tyexp rep 
-- On BOOLEAN reduce production repexp -> tyexp rep 
-- On BEGIN reduce production repexp -> tyexp rep 
-- On BARBAR reduce production repexp -> tyexp rep 
-- On BAR reduce production repexp -> tyexp rep 
-- On ARROW reduce production repexp -> tyexp rep 
-- On AMPERSAND reduce production repexp -> tyexp rep 

State 155:
infixexp -> tildeexp . [ WITH TYPE TEST SEMI RPAREN RBRACK RANGLE MODULE MINUS LET IN EQUAL EOF END DOLLAR COMMA COLON BARBAR BAR ]
tildeexp -> tildeexp . TILDE appexp [ WITH TYPE TILDE TEST SEMI RPAREN RBRACK RANGLE MODULE MINUS LET IN EQUAL EOF END DOLLAR COMMA COLON BARBAR BAR ]
-- On TILDE shift to state 156
-- On WITH reduce production infixexp -> tildeexp 
-- On TYPE reduce production infixexp -> tildeexp 
-- On TEST reduce production infixexp -> tildeexp 
-- On SEMI reduce production infixexp -> tildeexp 
-- On RPAREN reduce production infixexp -> tildeexp 
-- On RBRACK reduce production infixexp -> tildeexp 
-- On RANGLE reduce production infixexp -> tildeexp 
-- On MODULE reduce production infixexp -> tildeexp 
-- On MINUS reduce production infixexp -> tildeexp 
-- On LET reduce production infixexp -> tildeexp 
-- On IN reduce production infixexp -> tildeexp 
-- On EQUAL reduce production infixexp -> tildeexp 
-- On EOF reduce production infixexp -> tildeexp 
-- On END reduce production infixexp -> tildeexp 
-- On DOLLAR reduce production infixexp -> tildeexp 
-- On COMMA reduce production infixexp -> tildeexp 
-- On COLON reduce production infixexp -> tildeexp 
-- On BARBAR reduce production infixexp -> tildeexp 
-- On BAR reduce production infixexp -> tildeexp 

State 156:
tildeexp -> tildeexp TILDE . appexp [ WITH TYPE TILDE TEST SEMI RPAREN RBRACK RANGLE MODULE MINUS LET IN EQUAL EOF END DOLLAR COMMA COLON BARBAR BAR ]
-- On UIDENT shift to state 5
-- On SYNTH shift to state 36
-- On STR shift to state 37
-- On SQUASH shift to state 38
-- On QUALIDENT shift to state 6
-- On PROJECT shift to state 39
-- On PERM shift to state 40
-- On NSET shift to state 43
-- On LPAREN shift to state 44
-- On LIDENT shift to state 7
-- On LANGLE shift to state 47
-- On INTEGER shift to state 49
-- On HASH shift to state 50
-- On GRAMMAR shift to state 75
-- On CSET shift to state 81
-- On CHARACTER shift to state 82
-- On CEX shift to state 83
-- On BOOLEAN shift to state 134
-- On BEGIN shift to state 135
-- On tyexp shift to state 136
-- On repexp shift to state 157
-- On qid shift to state 158
-- On matchexp shift to state 159
-- On appexp shift to state 160
-- On aexp shift to state 162

State 157:
appexp -> repexp . [ WITH UIDENT TYPE TILDE TEST STR SEMI RPAREN RBRACK RBRACE RANGLE QUALIDENT PUT NSET MODULE MINUS LT LPAREN LIDENT LET LEQ LANGLE INTO INTEGER IN HASH GT GRAMMAR GET GEQ EQUAL EOF END DOT DOLLAR DEQARROW DARROW CSET CREATE COMMA COLON CHOOSE CHARACTER CEX CANONIZE BOOLEAN BEGIN BARBAR BAR ARROW AMPERSAND ]
-- On WITH reduce production appexp -> repexp 
-- On UIDENT reduce production appexp -> repexp 
-- On TYPE reduce production appexp -> repexp 
-- On TILDE reduce production appexp -> repexp 
-- On TEST reduce production appexp -> repexp 
-- On STR reduce production appexp -> repexp 
-- On SEMI reduce production appexp -> repexp 
-- On RPAREN reduce production appexp -> repexp 
-- On RBRACK reduce production appexp -> repexp 
-- On RBRACE reduce production appexp -> repexp 
-- On RANGLE reduce production appexp -> repexp 
-- On QUALIDENT reduce production appexp -> repexp 
-- On PUT reduce production appexp -> repexp 
-- On NSET reduce production appexp -> repexp 
-- On MODULE reduce production appexp -> repexp 
-- On MINUS reduce production appexp -> repexp 
-- On LT reduce production appexp -> repexp 
-- On LPAREN reduce production appexp -> repexp 
-- On LIDENT reduce production appexp -> repexp 
-- On LET reduce production appexp -> repexp 
-- On LEQ reduce production appexp -> repexp 
-- On LANGLE reduce production appexp -> repexp 
-- On INTO reduce production appexp -> repexp 
-- On INTEGER reduce production appexp -> repexp 
-- On IN reduce production appexp -> repexp 
-- On HASH reduce production appexp -> repexp 
-- On GT reduce production appexp -> repexp 
-- On GRAMMAR reduce production appexp -> repexp 
-- On GET reduce production appexp -> repexp 
-- On GEQ reduce production appexp -> repexp 
-- On EQUAL reduce production appexp -> repexp 
-- On EOF reduce production appexp -> repexp 
-- On END reduce production appexp -> repexp 
-- On DOT reduce production appexp -> repexp 
-- On DOLLAR reduce production appexp -> repexp 
-- On DEQARROW reduce production appexp -> repexp 
-- On DARROW reduce production appexp -> repexp 
-- On CSET reduce production appexp -> repexp 
-- On CREATE reduce production appexp -> repexp 
-- On COMMA reduce production appexp -> repexp 
-- On COLON reduce production appexp -> repexp 
-- On CHOOSE reduce production appexp -> repexp 
-- On CHARACTER reduce production appexp -> repexp 
-- On CEX reduce production appexp -> repexp 
-- On CANONIZE reduce production appexp -> repexp 
-- On BOOLEAN reduce production appexp -> repexp 
-- On BEGIN reduce production appexp -> repexp 
-- On BARBAR reduce production appexp -> repexp 
-- On BAR reduce production appexp -> repexp 
-- On ARROW reduce production appexp -> repexp 
-- On AMPERSAND reduce production appexp -> repexp 

State 158:
aexp -> qid . [ WITH VTYPE USING UIDENT TYPE TILDE TEST STYPE STR STAR SEMI RPAREN RBRACK RBRACE RANGLE QUALIDENT QMARK PUT PLUS NSET MODULE MINUS LT LPAREN LIDENT LET LEQ LBRACE LANGLE INTO INTEGER IN HASH GT GRAMMAR GET GEQ EQUAL EOF END DOT DOLLAR DEQARROW DARROW CSET CREATE COMMA COLON CHOOSE CHARACTER CEX CANONIZE BOOLEAN BIJ BEGIN BARBAR BAR AVTYPE ASTYPE ARROW AND AMPERSAND ]
-- On WITH reduce production aexp -> qid 
-- On VTYPE reduce production aexp -> qid 
-- On USING reduce production aexp -> qid 
-- On UIDENT reduce production aexp -> qid 
-- On TYPE reduce production aexp -> qid 
-- On TILDE reduce production aexp -> qid 
-- On TEST reduce production aexp -> qid 
-- On STYPE reduce production aexp -> qid 
-- On STR reduce production aexp -> qid 
-- On STAR reduce production aexp -> qid 
-- On SEMI reduce production aexp -> qid 
-- On RPAREN reduce production aexp -> qid 
-- On RBRACK reduce production aexp -> qid 
-- On RBRACE reduce production aexp -> qid 
-- On RANGLE reduce production aexp -> qid 
-- On QUALIDENT reduce production aexp -> qid 
-- On QMARK reduce production aexp -> qid 
-- On PUT reduce production aexp -> qid 
-- On PLUS reduce production aexp -> qid 
-- On NSET reduce production aexp -> qid 
-- On MODULE reduce production aexp -> qid 
-- On MINUS reduce production aexp -> qid 
-- On LT reduce production aexp -> qid 
-- On LPAREN reduce production aexp -> qid 
-- On LIDENT reduce production aexp -> qid 
-- On LET reduce production aexp -> qid 
-- On LEQ reduce production aexp -> qid 
-- On LBRACE reduce production aexp -> qid 
-- On LANGLE reduce production aexp -> qid 
-- On INTO reduce production aexp -> qid 
-- On INTEGER reduce production aexp -> qid 
-- On IN reduce production aexp -> qid 
-- On HASH reduce production aexp -> qid 
-- On GT reduce production aexp -> qid 
-- On GRAMMAR reduce production aexp -> qid 
-- On GET reduce production aexp -> qid 
-- On GEQ reduce production aexp -> qid 
-- On EQUAL reduce production aexp -> qid 
-- On EOF reduce production aexp -> qid 
-- On END reduce production aexp -> qid 
-- On DOT reduce production aexp -> qid 
-- On DOLLAR reduce production aexp -> qid 
-- On DEQARROW reduce production aexp -> qid 
-- On DARROW reduce production aexp -> qid 
-- On CSET reduce production aexp -> qid 
-- On CREATE reduce production aexp -> qid 
-- On COMMA reduce production aexp -> qid 
-- On COLON reduce production aexp -> qid 
-- On CHOOSE reduce production aexp -> qid 
-- On CHARACTER reduce production aexp -> qid 
-- On CEX reduce production aexp -> qid 
-- On CANONIZE reduce production aexp -> qid 
-- On BOOLEAN reduce production aexp -> qid 
-- On BIJ reduce production aexp -> qid 
-- On BEGIN reduce production aexp -> qid 
-- On BARBAR reduce production aexp -> qid 
-- On BAR reduce production aexp -> qid 
-- On AVTYPE reduce production aexp -> qid 
-- On ASTYPE reduce production aexp -> qid 
-- On ARROW reduce production aexp -> qid 
-- On AND reduce production aexp -> qid 
-- On AMPERSAND reduce production aexp -> qid 

State 159:
aexp -> matchexp . [ WITH VTYPE USING UIDENT TYPE TILDE TEST STYPE STR STAR SEMI RPAREN RBRACK RBRACE RANGLE QUALIDENT QMARK PUT PLUS NSET MODULE MINUS LT LPAREN LIDENT LET LEQ LBRACE LANGLE INTO INTEGER IN HASH GT GRAMMAR GET GEQ EQUAL EOF END DOT DOLLAR DEQARROW DARROW CSET CREATE COMMA COLON CHOOSE CHARACTER CEX CANONIZE BOOLEAN BIJ BEGIN BARBAR BAR AVTYPE ASTYPE ARROW AND AMPERSAND ]
-- On WITH reduce production aexp -> matchexp 
-- On VTYPE reduce production aexp -> matchexp 
-- On USING reduce production aexp -> matchexp 
-- On UIDENT reduce production aexp -> matchexp 
-- On TYPE reduce production aexp -> matchexp 
-- On TILDE reduce production aexp -> matchexp 
-- On TEST reduce production aexp -> matchexp 
-- On STYPE reduce production aexp -> matchexp 
-- On STR reduce production aexp -> matchexp 
-- On STAR reduce production aexp -> matchexp 
-- On SEMI reduce production aexp -> matchexp 
-- On RPAREN reduce production aexp -> matchexp 
-- On RBRACK reduce production aexp -> matchexp 
-- On RBRACE reduce production aexp -> matchexp 
-- On RANGLE reduce production aexp -> matchexp 
-- On QUALIDENT reduce production aexp -> matchexp 
-- On QMARK reduce production aexp -> matchexp 
-- On PUT reduce production aexp -> matchexp 
-- On PLUS reduce production aexp -> matchexp 
-- On NSET reduce production aexp -> matchexp 
-- On MODULE reduce production aexp -> matchexp 
-- On MINUS reduce production aexp -> matchexp 
-- On LT reduce production aexp -> matchexp 
-- On LPAREN reduce production aexp -> matchexp 
-- On LIDENT reduce production aexp -> matchexp 
-- On LET reduce production aexp -> matchexp 
-- On LEQ reduce production aexp -> matchexp 
-- On LBRACE reduce production aexp -> matchexp 
-- On LANGLE reduce production aexp -> matchexp 
-- On INTO reduce production aexp -> matchexp 
-- On INTEGER reduce production aexp -> matchexp 
-- On IN reduce production aexp -> matchexp 
-- On HASH reduce production aexp -> matchexp 
-- On GT reduce production aexp -> matchexp 
-- On GRAMMAR reduce production aexp -> matchexp 
-- On GET reduce production aexp -> matchexp 
-- On GEQ reduce production aexp -> matchexp 
-- On EQUAL reduce production aexp -> matchexp 
-- On EOF reduce production aexp -> matchexp 
-- On END reduce production aexp -> matchexp 
-- On DOT reduce production aexp -> matchexp 
-- On DOLLAR reduce production aexp -> matchexp 
-- On DEQARROW reduce production aexp -> matchexp 
-- On DARROW reduce production aexp -> matchexp 
-- On CSET reduce production aexp -> matchexp 
-- On CREATE reduce production aexp -> matchexp 
-- On COMMA reduce production aexp -> matchexp 
-- On COLON reduce production aexp -> matchexp 
-- On CHOOSE reduce production aexp -> matchexp 
-- On CHARACTER reduce production aexp -> matchexp 
-- On CEX reduce production aexp -> matchexp 
-- On CANONIZE reduce production aexp -> matchexp 
-- On BOOLEAN reduce production aexp -> matchexp 
-- On BIJ reduce production aexp -> matchexp 
-- On BEGIN reduce production aexp -> matchexp 
-- On BARBAR reduce production aexp -> matchexp 
-- On BAR reduce production aexp -> matchexp 
-- On AVTYPE reduce production aexp -> matchexp 
-- On ASTYPE reduce production aexp -> matchexp 
-- On ARROW reduce production aexp -> matchexp 
-- On AND reduce production aexp -> matchexp 
-- On AMPERSAND reduce production aexp -> matchexp 

State 160:
appexp -> appexp . repexp [ WITH UIDENT TYPE TILDE TEST STR SEMI RPAREN RBRACK RANGLE QUALIDENT NSET MODULE MINUS LPAREN LIDENT LET LANGLE INTEGER IN HASH GRAMMAR EQUAL EOF END DOLLAR CSET COMMA COLON CHARACTER CEX BOOLEAN BEGIN BARBAR BAR ]
tildeexp -> tildeexp TILDE appexp . [ WITH TYPE TILDE TEST SEMI RPAREN RBRACK RANGLE MODULE MINUS LET IN EQUAL EOF END DOLLAR COMMA COLON BARBAR BAR ]
-- On UIDENT shift to state 5
-- On STR shift to state 37
-- On QUALIDENT shift to state 6
-- On NSET shift to state 43
-- On LPAREN shift to state 44
-- On LIDENT shift to state 7
-- On LANGLE shift to state 47
-- On INTEGER shift to state 49
-- On HASH shift to state 50
-- On GRAMMAR shift to state 75
-- On CSET shift to state 81
-- On CHARACTER shift to state 82
-- On CEX shift to state 83
-- On BOOLEAN shift to state 134
-- On BEGIN shift to state 135
-- On tyexp shift to state 136
-- On repexp shift to state 161
-- On qid shift to state 158
-- On matchexp shift to state 159
-- On aexp shift to state 162
-- On WITH reduce production tildeexp -> tildeexp TILDE appexp 
-- On TYPE reduce production tildeexp -> tildeexp TILDE appexp 
-- On TILDE reduce production tildeexp -> tildeexp TILDE appexp 
-- On TEST reduce production tildeexp -> tildeexp TILDE appexp 
-- On SEMI reduce production tildeexp -> tildeexp TILDE appexp 
-- On RPAREN reduce production tildeexp -> tildeexp TILDE appexp 
-- On RBRACK reduce production tildeexp -> tildeexp TILDE appexp 
-- On RANGLE reduce production tildeexp -> tildeexp TILDE appexp 
-- On MODULE reduce production tildeexp -> tildeexp TILDE appexp 
-- On MINUS reduce production tildeexp -> tildeexp TILDE appexp 
-- On LET reduce production tildeexp -> tildeexp TILDE appexp 
-- On IN reduce production tildeexp -> tildeexp TILDE appexp 
-- On EQUAL reduce production tildeexp -> tildeexp TILDE appexp 
-- On EOF reduce production tildeexp -> tildeexp TILDE appexp 
-- On END reduce production tildeexp -> tildeexp TILDE appexp 
-- On DOLLAR reduce production tildeexp -> tildeexp TILDE appexp 
-- On COMMA reduce production tildeexp -> tildeexp TILDE appexp 
-- On COLON reduce production tildeexp -> tildeexp TILDE appexp 
-- On BARBAR reduce production tildeexp -> tildeexp TILDE appexp 
-- On BAR reduce production tildeexp -> tildeexp TILDE appexp 

State 161:
appexp -> appexp repexp . [ WITH UIDENT TYPE TILDE TEST STR SEMI RPAREN RBRACK RBRACE RANGLE QUALIDENT PUT NSET MODULE MINUS LT LPAREN LIDENT LET LEQ LANGLE INTO INTEGER IN HASH GT GRAMMAR GET GEQ EQUAL EOF END DOT DOLLAR DEQARROW DARROW CSET CREATE COMMA COLON CHOOSE CHARACTER CEX CANONIZE BOOLEAN BEGIN BARBAR BAR ARROW AMPERSAND ]
-- On WITH reduce production appexp -> appexp repexp 
-- On UIDENT reduce production appexp -> appexp repexp 
-- On TYPE reduce production appexp -> appexp repexp 
-- On TILDE reduce production appexp -> appexp repexp 
-- On TEST reduce production appexp -> appexp repexp 
-- On STR reduce production appexp -> appexp repexp 
-- On SEMI reduce production appexp -> appexp repexp 
-- On RPAREN reduce production appexp -> appexp repexp 
-- On RBRACK reduce production appexp -> appexp repexp 
-- On RBRACE reduce production appexp -> appexp repexp 
-- On RANGLE reduce production appexp -> appexp repexp 
-- On QUALIDENT reduce production appexp -> appexp repexp 
-- On PUT reduce production appexp -> appexp repexp 
-- On NSET reduce production appexp -> appexp repexp 
-- On MODULE reduce production appexp -> appexp repexp 
-- On MINUS reduce production appexp -> appexp repexp 
-- On LT reduce production appexp -> appexp repexp 
-- On LPAREN reduce production appexp -> appexp repexp 
-- On LIDENT reduce production appexp -> appexp repexp 
-- On LET reduce production appexp -> appexp repexp 
-- On LEQ reduce production appexp -> appexp repexp 
-- On LANGLE reduce production appexp -> appexp repexp 
-- On INTO reduce production appexp -> appexp repexp 
-- On INTEGER reduce production appexp -> appexp repexp 
-- On IN reduce production appexp -> appexp repexp 
-- On HASH reduce production appexp -> appexp repexp 
-- On GT reduce production appexp -> appexp repexp 
-- On GRAMMAR reduce production appexp -> appexp repexp 
-- On GET reduce production appexp -> appexp repexp 
-- On GEQ reduce production appexp -> appexp repexp 
-- On EQUAL reduce production appexp -> appexp repexp 
-- On EOF reduce production appexp -> appexp repexp 
-- On END reduce production appexp -> appexp repexp 
-- On DOT reduce production appexp -> appexp repexp 
-- On DOLLAR reduce production appexp -> appexp repexp 
-- On DEQARROW reduce production appexp -> appexp repexp 
-- On DARROW reduce production appexp -> appexp repexp 
-- On CSET reduce production appexp -> appexp repexp 
-- On CREATE reduce production appexp -> appexp repexp 
-- On COMMA reduce production appexp -> appexp repexp 
-- On COLON reduce production appexp -> appexp repexp 
-- On CHOOSE reduce production appexp -> appexp repexp 
-- On CHARACTER reduce production appexp -> appexp repexp 
-- On CEX reduce production appexp -> appexp repexp 
-- On CANONIZE reduce production appexp -> appexp repexp 
-- On BOOLEAN reduce production appexp -> appexp repexp 
-- On BEGIN reduce production appexp -> appexp repexp 
-- On BARBAR reduce production appexp -> appexp repexp 
-- On BAR reduce production appexp -> appexp repexp 
-- On ARROW reduce production appexp -> appexp repexp 
-- On AMPERSAND reduce production appexp -> appexp repexp 

State 162:
aexp -> aexp . STYPE [ WITH VTYPE USING UIDENT TYPE TILDE TEST STYPE STR STAR SEMI RPAREN RBRACK RBRACE RANGLE QUALIDENT QMARK PUT PLUS NSET MODULE MINUS LT LPAREN LIDENT LET LEQ LBRACE LANGLE INTO INTEGER IN HASH GT GRAMMAR GET GEQ EQUAL EOF END DOT DOLLAR DEQARROW DARROW CSET CREATE COMMA COLON CHOOSE CHARACTER CEX CANONIZE BOOLEAN BIJ BEGIN BARBAR BAR AVTYPE ASTYPE ARROW AMPERSAND ]
aexp -> aexp . VTYPE [ WITH VTYPE USING UIDENT TYPE TILDE TEST STYPE STR STAR SEMI RPAREN RBRACK RBRACE RANGLE QUALIDENT QMARK PUT PLUS NSET MODULE MINUS LT LPAREN LIDENT LET LEQ LBRACE LANGLE INTO INTEGER IN HASH GT GRAMMAR GET GEQ EQUAL EOF END DOT DOLLAR DEQARROW DARROW CSET CREATE COMMA COLON CHOOSE CHARACTER CEX CANONIZE BOOLEAN BIJ BEGIN BARBAR BAR AVTYPE ASTYPE ARROW AMPERSAND ]
aexp -> aexp . ASTYPE [ WITH VTYPE USING UIDENT TYPE TILDE TEST STYPE STR STAR SEMI RPAREN RBRACK RBRACE RANGLE QUALIDENT QMARK PUT PLUS NSET MODULE MINUS LT LPAREN LIDENT LET LEQ LBRACE LANGLE INTO INTEGER IN HASH GT GRAMMAR GET GEQ EQUAL EOF END DOT DOLLAR DEQARROW DARROW CSET CREATE COMMA COLON CHOOSE CHARACTER CEX CANONIZE BOOLEAN BIJ BEGIN BARBAR BAR AVTYPE ASTYPE ARROW AMPERSAND ]
aexp -> aexp . AVTYPE [ WITH VTYPE USING UIDENT TYPE TILDE TEST STYPE STR STAR SEMI RPAREN RBRACK RBRACE RANGLE QUALIDENT QMARK PUT PLUS NSET MODULE MINUS LT LPAREN LIDENT LET LEQ LBRACE LANGLE INTO INTEGER IN HASH GT GRAMMAR GET GEQ EQUAL EOF END DOT DOLLAR DEQARROW DARROW CSET CREATE COMMA COLON CHOOSE CHARACTER CEX CANONIZE BOOLEAN BIJ BEGIN BARBAR BAR AVTYPE ASTYPE ARROW AMPERSAND ]
aexp -> aexp . BIJ [ WITH VTYPE USING UIDENT TYPE TILDE TEST STYPE STR STAR SEMI RPAREN RBRACK RBRACE RANGLE QUALIDENT QMARK PUT PLUS NSET MODULE MINUS LT LPAREN LIDENT LET LEQ LBRACE LANGLE INTO INTEGER IN HASH GT GRAMMAR GET GEQ EQUAL EOF END DOT DOLLAR DEQARROW DARROW CSET CREATE COMMA COLON CHOOSE CHARACTER CEX CANONIZE BOOLEAN BIJ BEGIN BARBAR BAR AVTYPE ASTYPE ARROW AMPERSAND ]
tyexp -> aexp . [ WITH USING UIDENT TYPE TILDE TEST STR STAR SEMI RPAREN RBRACK RBRACE RANGLE QUALIDENT QMARK PUT PLUS NSET MODULE MINUS LT LPAREN LIDENT LET LEQ LBRACE LANGLE INTO INTEGER IN HASH GT GRAMMAR GET GEQ EQUAL EOF END DOT DOLLAR DEQARROW DARROW CSET CREATE COMMA COLON CHOOSE CHARACTER CEX CANONIZE BOOLEAN BEGIN BARBAR BAR ARROW AMPERSAND ]
-- On VTYPE shift to state 163
-- On STYPE shift to state 164
-- On BIJ shift to state 165
-- On AVTYPE shift to state 166
-- On ASTYPE shift to state 167
-- On WITH reduce production tyexp -> aexp 
-- On USING reduce production tyexp -> aexp 
-- On UIDENT reduce production tyexp -> aexp 
-- On TYPE reduce production tyexp -> aexp 
-- On TILDE reduce production tyexp -> aexp 
-- On TEST reduce production tyexp -> aexp 
-- On STR reduce production tyexp -> aexp 
-- On STAR reduce production tyexp -> aexp 
-- On SEMI reduce production tyexp -> aexp 
-- On RPAREN reduce production tyexp -> aexp 
-- On RBRACK reduce production tyexp -> aexp 
-- On RBRACE reduce production tyexp -> aexp 
-- On RANGLE reduce production tyexp -> aexp 
-- On QUALIDENT reduce production tyexp -> aexp 
-- On QMARK reduce production tyexp -> aexp 
-- On PUT reduce production tyexp -> aexp 
-- On PLUS reduce production tyexp -> aexp 
-- On NSET reduce production tyexp -> aexp 
-- On MODULE reduce production tyexp -> aexp 
-- On MINUS reduce production tyexp -> aexp 
-- On LT reduce production tyexp -> aexp 
-- On LPAREN reduce production tyexp -> aexp 
-- On LIDENT reduce production tyexp -> aexp 
-- On LET reduce production tyexp -> aexp 
-- On LEQ reduce production tyexp -> aexp 
-- On LBRACE reduce production tyexp -> aexp 
-- On LANGLE reduce production tyexp -> aexp 
-- On INTO reduce production tyexp -> aexp 
-- On INTEGER reduce production tyexp -> aexp 
-- On IN reduce production tyexp -> aexp 
-- On HASH reduce production tyexp -> aexp 
-- On GT reduce production tyexp -> aexp 
-- On GRAMMAR reduce production tyexp -> aexp 
-- On GET reduce production tyexp -> aexp 
-- On GEQ reduce production tyexp -> aexp 
-- On EQUAL reduce production tyexp -> aexp 
-- On EOF reduce production tyexp -> aexp 
-- On END reduce production tyexp -> aexp 
-- On DOT reduce production tyexp -> aexp 
-- On DOLLAR reduce production tyexp -> aexp 
-- On DEQARROW reduce production tyexp -> aexp 
-- On DARROW reduce production tyexp -> aexp 
-- On CSET reduce production tyexp -> aexp 
-- On CREATE reduce production tyexp -> aexp 
-- On COMMA reduce production tyexp -> aexp 
-- On COLON reduce production tyexp -> aexp 
-- On CHOOSE reduce production tyexp -> aexp 
-- On CHARACTER reduce production tyexp -> aexp 
-- On CEX reduce production tyexp -> aexp 
-- On CANONIZE reduce production tyexp -> aexp 
-- On BOOLEAN reduce production tyexp -> aexp 
-- On BEGIN reduce production tyexp -> aexp 
-- On BARBAR reduce production tyexp -> aexp 
-- On BAR reduce production tyexp -> aexp 
-- On ARROW reduce production tyexp -> aexp 
-- On AMPERSAND reduce production tyexp -> aexp 

State 163:
aexp -> aexp VTYPE . [ WITH VTYPE USING UIDENT TYPE TILDE TEST STYPE STR STAR SEMI RPAREN RBRACK RBRACE RANGLE QUALIDENT QMARK PUT PLUS NSET MODULE MINUS LT LPAREN LIDENT LET LEQ LBRACE LANGLE INTO INTEGER IN HASH GT GRAMMAR GET GEQ EQUAL EOF END DOT DOLLAR DEQARROW DARROW CSET CREATE COMMA COLON CHOOSE CHARACTER CEX CANONIZE BOOLEAN BIJ BEGIN BARBAR BAR AVTYPE ASTYPE ARROW AND AMPERSAND ]
-- On WITH reduce production aexp -> aexp VTYPE 
-- On VTYPE reduce production aexp -> aexp VTYPE 
-- On USING reduce production aexp -> aexp VTYPE 
-- On UIDENT reduce production aexp -> aexp VTYPE 
-- On TYPE reduce production aexp -> aexp VTYPE 
-- On TILDE reduce production aexp -> aexp VTYPE 
-- On TEST reduce production aexp -> aexp VTYPE 
-- On STYPE reduce production aexp -> aexp VTYPE 
-- On STR reduce production aexp -> aexp VTYPE 
-- On STAR reduce production aexp -> aexp VTYPE 
-- On SEMI reduce production aexp -> aexp VTYPE 
-- On RPAREN reduce production aexp -> aexp VTYPE 
-- On RBRACK reduce production aexp -> aexp VTYPE 
-- On RBRACE reduce production aexp -> aexp VTYPE 
-- On RANGLE reduce production aexp -> aexp VTYPE 
-- On QUALIDENT reduce production aexp -> aexp VTYPE 
-- On QMARK reduce production aexp -> aexp VTYPE 
-- On PUT reduce production aexp -> aexp VTYPE 
-- On PLUS reduce production aexp -> aexp VTYPE 
-- On NSET reduce production aexp -> aexp VTYPE 
-- On MODULE reduce production aexp -> aexp VTYPE 
-- On MINUS reduce production aexp -> aexp VTYPE 
-- On LT reduce production aexp -> aexp VTYPE 
-- On LPAREN reduce production aexp -> aexp VTYPE 
-- On LIDENT reduce production aexp -> aexp VTYPE 
-- On LET reduce production aexp -> aexp VTYPE 
-- On LEQ reduce production aexp -> aexp VTYPE 
-- On LBRACE reduce production aexp -> aexp VTYPE 
-- On LANGLE reduce production aexp -> aexp VTYPE 
-- On INTO reduce production aexp -> aexp VTYPE 
-- On INTEGER reduce production aexp -> aexp VTYPE 
-- On IN reduce production aexp -> aexp VTYPE 
-- On HASH reduce production aexp -> aexp VTYPE 
-- On GT reduce production aexp -> aexp VTYPE 
-- On GRAMMAR reduce production aexp -> aexp VTYPE 
-- On GET reduce production aexp -> aexp VTYPE 
-- On GEQ reduce production aexp -> aexp VTYPE 
-- On EQUAL reduce production aexp -> aexp VTYPE 
-- On EOF reduce production aexp -> aexp VTYPE 
-- On END reduce production aexp -> aexp VTYPE 
-- On DOT reduce production aexp -> aexp VTYPE 
-- On DOLLAR reduce production aexp -> aexp VTYPE 
-- On DEQARROW reduce production aexp -> aexp VTYPE 
-- On DARROW reduce production aexp -> aexp VTYPE 
-- On CSET reduce production aexp -> aexp VTYPE 
-- On CREATE reduce production aexp -> aexp VTYPE 
-- On COMMA reduce production aexp -> aexp VTYPE 
-- On COLON reduce production aexp -> aexp VTYPE 
-- On CHOOSE reduce production aexp -> aexp VTYPE 
-- On CHARACTER reduce production aexp -> aexp VTYPE 
-- On CEX reduce production aexp -> aexp VTYPE 
-- On CANONIZE reduce production aexp -> aexp VTYPE 
-- On BOOLEAN reduce production aexp -> aexp VTYPE 
-- On BIJ reduce production aexp -> aexp VTYPE 
-- On BEGIN reduce production aexp -> aexp VTYPE 
-- On BARBAR reduce production aexp -> aexp VTYPE 
-- On BAR reduce production aexp -> aexp VTYPE 
-- On AVTYPE reduce production aexp -> aexp VTYPE 
-- On ASTYPE reduce production aexp -> aexp VTYPE 
-- On ARROW reduce production aexp -> aexp VTYPE 
-- On AND reduce production aexp -> aexp VTYPE 
-- On AMPERSAND reduce production aexp -> aexp VTYPE 

State 164:
aexp -> aexp STYPE . [ WITH VTYPE USING UIDENT TYPE TILDE TEST STYPE STR STAR SEMI RPAREN RBRACK RBRACE RANGLE QUALIDENT QMARK PUT PLUS NSET MODULE MINUS LT LPAREN LIDENT LET LEQ LBRACE LANGLE INTO INTEGER IN HASH GT GRAMMAR GET GEQ EQUAL EOF END DOT DOLLAR DEQARROW DARROW CSET CREATE COMMA COLON CHOOSE CHARACTER CEX CANONIZE BOOLEAN BIJ BEGIN BARBAR BAR AVTYPE ASTYPE ARROW AND AMPERSAND ]
-- On WITH reduce production aexp -> aexp STYPE 
-- On VTYPE reduce production aexp -> aexp STYPE 
-- On USING reduce production aexp -> aexp STYPE 
-- On UIDENT reduce production aexp -> aexp STYPE 
-- On TYPE reduce production aexp -> aexp STYPE 
-- On TILDE reduce production aexp -> aexp STYPE 
-- On TEST reduce production aexp -> aexp STYPE 
-- On STYPE reduce production aexp -> aexp STYPE 
-- On STR reduce production aexp -> aexp STYPE 
-- On STAR reduce production aexp -> aexp STYPE 
-- On SEMI reduce production aexp -> aexp STYPE 
-- On RPAREN reduce production aexp -> aexp STYPE 
-- On RBRACK reduce production aexp -> aexp STYPE 
-- On RBRACE reduce production aexp -> aexp STYPE 
-- On RANGLE reduce production aexp -> aexp STYPE 
-- On QUALIDENT reduce production aexp -> aexp STYPE 
-- On QMARK reduce production aexp -> aexp STYPE 
-- On PUT reduce production aexp -> aexp STYPE 
-- On PLUS reduce production aexp -> aexp STYPE 
-- On NSET reduce production aexp -> aexp STYPE 
-- On MODULE reduce production aexp -> aexp STYPE 
-- On MINUS reduce production aexp -> aexp STYPE 
-- On LT reduce production aexp -> aexp STYPE 
-- On LPAREN reduce production aexp -> aexp STYPE 
-- On LIDENT reduce production aexp -> aexp STYPE 
-- On LET reduce production aexp -> aexp STYPE 
-- On LEQ reduce production aexp -> aexp STYPE 
-- On LBRACE reduce production aexp -> aexp STYPE 
-- On LANGLE reduce production aexp -> aexp STYPE 
-- On INTO reduce production aexp -> aexp STYPE 
-- On INTEGER reduce production aexp -> aexp STYPE 
-- On IN reduce production aexp -> aexp STYPE 
-- On HASH reduce production aexp -> aexp STYPE 
-- On GT reduce production aexp -> aexp STYPE 
-- On GRAMMAR reduce production aexp -> aexp STYPE 
-- On GET reduce production aexp -> aexp STYPE 
-- On GEQ reduce production aexp -> aexp STYPE 
-- On EQUAL reduce production aexp -> aexp STYPE 
-- On EOF reduce production aexp -> aexp STYPE 
-- On END reduce production aexp -> aexp STYPE 
-- On DOT reduce production aexp -> aexp STYPE 
-- On DOLLAR reduce production aexp -> aexp STYPE 
-- On DEQARROW reduce production aexp -> aexp STYPE 
-- On DARROW reduce production aexp -> aexp STYPE 
-- On CSET reduce production aexp -> aexp STYPE 
-- On CREATE reduce production aexp -> aexp STYPE 
-- On COMMA reduce production aexp -> aexp STYPE 
-- On COLON reduce production aexp -> aexp STYPE 
-- On CHOOSE reduce production aexp -> aexp STYPE 
-- On CHARACTER reduce production aexp -> aexp STYPE 
-- On CEX reduce production aexp -> aexp STYPE 
-- On CANONIZE reduce production aexp -> aexp STYPE 
-- On BOOLEAN reduce production aexp -> aexp STYPE 
-- On BIJ reduce production aexp -> aexp STYPE 
-- On BEGIN reduce production aexp -> aexp STYPE 
-- On BARBAR reduce production aexp -> aexp STYPE 
-- On BAR reduce production aexp -> aexp STYPE 
-- On AVTYPE reduce production aexp -> aexp STYPE 
-- On ASTYPE reduce production aexp -> aexp STYPE 
-- On ARROW reduce production aexp -> aexp STYPE 
-- On AND reduce production aexp -> aexp STYPE 
-- On AMPERSAND reduce production aexp -> aexp STYPE 

State 165:
aexp -> aexp BIJ . [ WITH VTYPE USING UIDENT TYPE TILDE TEST STYPE STR STAR SEMI RPAREN RBRACK RBRACE RANGLE QUALIDENT QMARK PUT PLUS NSET MODULE MINUS LT LPAREN LIDENT LET LEQ LBRACE LANGLE INTO INTEGER IN HASH GT GRAMMAR GET GEQ EQUAL EOF END DOT DOLLAR DEQARROW DARROW CSET CREATE COMMA COLON CHOOSE CHARACTER CEX CANONIZE BOOLEAN BIJ BEGIN BARBAR BAR AVTYPE ASTYPE ARROW AND AMPERSAND ]
-- On WITH reduce production aexp -> aexp BIJ 
-- On VTYPE reduce production aexp -> aexp BIJ 
-- On USING reduce production aexp -> aexp BIJ 
-- On UIDENT reduce production aexp -> aexp BIJ 
-- On TYPE reduce production aexp -> aexp BIJ 
-- On TILDE reduce production aexp -> aexp BIJ 
-- On TEST reduce production aexp -> aexp BIJ 
-- On STYPE reduce production aexp -> aexp BIJ 
-- On STR reduce production aexp -> aexp BIJ 
-- On STAR reduce production aexp -> aexp BIJ 
-- On SEMI reduce production aexp -> aexp BIJ 
-- On RPAREN reduce production aexp -> aexp BIJ 
-- On RBRACK reduce production aexp -> aexp BIJ 
-- On RBRACE reduce production aexp -> aexp BIJ 
-- On RANGLE reduce production aexp -> aexp BIJ 
-- On QUALIDENT reduce production aexp -> aexp BIJ 
-- On QMARK reduce production aexp -> aexp BIJ 
-- On PUT reduce production aexp -> aexp BIJ 
-- On PLUS reduce production aexp -> aexp BIJ 
-- On NSET reduce production aexp -> aexp BIJ 
-- On MODULE reduce production aexp -> aexp BIJ 
-- On MINUS reduce production aexp -> aexp BIJ 
-- On LT reduce production aexp -> aexp BIJ 
-- On LPAREN reduce production aexp -> aexp BIJ 
-- On LIDENT reduce production aexp -> aexp BIJ 
-- On LET reduce production aexp -> aexp BIJ 
-- On LEQ reduce production aexp -> aexp BIJ 
-- On LBRACE reduce production aexp -> aexp BIJ 
-- On LANGLE reduce production aexp -> aexp BIJ 
-- On INTO reduce production aexp -> aexp BIJ 
-- On INTEGER reduce production aexp -> aexp BIJ 
-- On IN reduce production aexp -> aexp BIJ 
-- On HASH reduce production aexp -> aexp BIJ 
-- On GT reduce production aexp -> aexp BIJ 
-- On GRAMMAR reduce production aexp -> aexp BIJ 
-- On GET reduce production aexp -> aexp BIJ 
-- On GEQ reduce production aexp -> aexp BIJ 
-- On EQUAL reduce production aexp -> aexp BIJ 
-- On EOF reduce production aexp -> aexp BIJ 
-- On END reduce production aexp -> aexp BIJ 
-- On DOT reduce production aexp -> aexp BIJ 
-- On DOLLAR reduce production aexp -> aexp BIJ 
-- On DEQARROW reduce production aexp -> aexp BIJ 
-- On DARROW reduce production aexp -> aexp BIJ 
-- On CSET reduce production aexp -> aexp BIJ 
-- On CREATE reduce production aexp -> aexp BIJ 
-- On COMMA reduce production aexp -> aexp BIJ 
-- On COLON reduce production aexp -> aexp BIJ 
-- On CHOOSE reduce production aexp -> aexp BIJ 
-- On CHARACTER reduce production aexp -> aexp BIJ 
-- On CEX reduce production aexp -> aexp BIJ 
-- On CANONIZE reduce production aexp -> aexp BIJ 
-- On BOOLEAN reduce production aexp -> aexp BIJ 
-- On BIJ reduce production aexp -> aexp BIJ 
-- On BEGIN reduce production aexp -> aexp BIJ 
-- On BARBAR reduce production aexp -> aexp BIJ 
-- On BAR reduce production aexp -> aexp BIJ 
-- On AVTYPE reduce production aexp -> aexp BIJ 
-- On ASTYPE reduce production aexp -> aexp BIJ 
-- On ARROW reduce production aexp -> aexp BIJ 
-- On AND reduce production aexp -> aexp BIJ 
-- On AMPERSAND reduce production aexp -> aexp BIJ 

State 166:
aexp -> aexp AVTYPE . [ WITH VTYPE USING UIDENT TYPE TILDE TEST STYPE STR STAR SEMI RPAREN RBRACK RBRACE RANGLE QUALIDENT QMARK PUT PLUS NSET MODULE MINUS LT LPAREN LIDENT LET LEQ LBRACE LANGLE INTO INTEGER IN HASH GT GRAMMAR GET GEQ EQUAL EOF END DOT DOLLAR DEQARROW DARROW CSET CREATE COMMA COLON CHOOSE CHARACTER CEX CANONIZE BOOLEAN BIJ BEGIN BARBAR BAR AVTYPE ASTYPE ARROW AND AMPERSAND ]
-- On WITH reduce production aexp -> aexp AVTYPE 
-- On VTYPE reduce production aexp -> aexp AVTYPE 
-- On USING reduce production aexp -> aexp AVTYPE 
-- On UIDENT reduce production aexp -> aexp AVTYPE 
-- On TYPE reduce production aexp -> aexp AVTYPE 
-- On TILDE reduce production aexp -> aexp AVTYPE 
-- On TEST reduce production aexp -> aexp AVTYPE 
-- On STYPE reduce production aexp -> aexp AVTYPE 
-- On STR reduce production aexp -> aexp AVTYPE 
-- On STAR reduce production aexp -> aexp AVTYPE 
-- On SEMI reduce production aexp -> aexp AVTYPE 
-- On RPAREN reduce production aexp -> aexp AVTYPE 
-- On RBRACK reduce production aexp -> aexp AVTYPE 
-- On RBRACE reduce production aexp -> aexp AVTYPE 
-- On RANGLE reduce production aexp -> aexp AVTYPE 
-- On QUALIDENT reduce production aexp -> aexp AVTYPE 
-- On QMARK reduce production aexp -> aexp AVTYPE 
-- On PUT reduce production aexp -> aexp AVTYPE 
-- On PLUS reduce production aexp -> aexp AVTYPE 
-- On NSET reduce production aexp -> aexp AVTYPE 
-- On MODULE reduce production aexp -> aexp AVTYPE 
-- On MINUS reduce production aexp -> aexp AVTYPE 
-- On LT reduce production aexp -> aexp AVTYPE 
-- On LPAREN reduce production aexp -> aexp AVTYPE 
-- On LIDENT reduce production aexp -> aexp AVTYPE 
-- On LET reduce production aexp -> aexp AVTYPE 
-- On LEQ reduce production aexp -> aexp AVTYPE 
-- On LBRACE reduce production aexp -> aexp AVTYPE 
-- On LANGLE reduce production aexp -> aexp AVTYPE 
-- On INTO reduce production aexp -> aexp AVTYPE 
-- On INTEGER reduce production aexp -> aexp AVTYPE 
-- On IN reduce production aexp -> aexp AVTYPE 
-- On HASH reduce production aexp -> aexp AVTYPE 
-- On GT reduce production aexp -> aexp AVTYPE 
-- On GRAMMAR reduce production aexp -> aexp AVTYPE 
-- On GET reduce production aexp -> aexp AVTYPE 
-- On GEQ reduce production aexp -> aexp AVTYPE 
-- On EQUAL reduce production aexp -> aexp AVTYPE 
-- On EOF reduce production aexp -> aexp AVTYPE 
-- On END reduce production aexp -> aexp AVTYPE 
-- On DOT reduce production aexp -> aexp AVTYPE 
-- On DOLLAR reduce production aexp -> aexp AVTYPE 
-- On DEQARROW reduce production aexp -> aexp AVTYPE 
-- On DARROW reduce production aexp -> aexp AVTYPE 
-- On CSET reduce production aexp -> aexp AVTYPE 
-- On CREATE reduce production aexp -> aexp AVTYPE 
-- On COMMA reduce production aexp -> aexp AVTYPE 
-- On COLON reduce production aexp -> aexp AVTYPE 
-- On CHOOSE reduce production aexp -> aexp AVTYPE 
-- On CHARACTER reduce production aexp -> aexp AVTYPE 
-- On CEX reduce production aexp -> aexp AVTYPE 
-- On CANONIZE reduce production aexp -> aexp AVTYPE 
-- On BOOLEAN reduce production aexp -> aexp AVTYPE 
-- On BIJ reduce production aexp -> aexp AVTYPE 
-- On BEGIN reduce production aexp -> aexp AVTYPE 
-- On BARBAR reduce production aexp -> aexp AVTYPE 
-- On BAR reduce production aexp -> aexp AVTYPE 
-- On AVTYPE reduce production aexp -> aexp AVTYPE 
-- On ASTYPE reduce production aexp -> aexp AVTYPE 
-- On ARROW reduce production aexp -> aexp AVTYPE 
-- On AND reduce production aexp -> aexp AVTYPE 
-- On AMPERSAND reduce production aexp -> aexp AVTYPE 

State 167:
aexp -> aexp ASTYPE . [ WITH VTYPE USING UIDENT TYPE TILDE TEST STYPE STR STAR SEMI RPAREN RBRACK RBRACE RANGLE QUALIDENT QMARK PUT PLUS NSET MODULE MINUS LT LPAREN LIDENT LET LEQ LBRACE LANGLE INTO INTEGER IN HASH GT GRAMMAR GET GEQ EQUAL EOF END DOT DOLLAR DEQARROW DARROW CSET CREATE COMMA COLON CHOOSE CHARACTER CEX CANONIZE BOOLEAN BIJ BEGIN BARBAR BAR AVTYPE ASTYPE ARROW AND AMPERSAND ]
-- On WITH reduce production aexp -> aexp ASTYPE 
-- On VTYPE reduce production aexp -> aexp ASTYPE 
-- On USING reduce production aexp -> aexp ASTYPE 
-- On UIDENT reduce production aexp -> aexp ASTYPE 
-- On TYPE reduce production aexp -> aexp ASTYPE 
-- On TILDE reduce production aexp -> aexp ASTYPE 
-- On TEST reduce production aexp -> aexp ASTYPE 
-- On STYPE reduce production aexp -> aexp ASTYPE 
-- On STR reduce production aexp -> aexp ASTYPE 
-- On STAR reduce production aexp -> aexp ASTYPE 
-- On SEMI reduce production aexp -> aexp ASTYPE 
-- On RPAREN reduce production aexp -> aexp ASTYPE 
-- On RBRACK reduce production aexp -> aexp ASTYPE 
-- On RBRACE reduce production aexp -> aexp ASTYPE 
-- On RANGLE reduce production aexp -> aexp ASTYPE 
-- On QUALIDENT reduce production aexp -> aexp ASTYPE 
-- On QMARK reduce production aexp -> aexp ASTYPE 
-- On PUT reduce production aexp -> aexp ASTYPE 
-- On PLUS reduce production aexp -> aexp ASTYPE 
-- On NSET reduce production aexp -> aexp ASTYPE 
-- On MODULE reduce production aexp -> aexp ASTYPE 
-- On MINUS reduce production aexp -> aexp ASTYPE 
-- On LT reduce production aexp -> aexp ASTYPE 
-- On LPAREN reduce production aexp -> aexp ASTYPE 
-- On LIDENT reduce production aexp -> aexp ASTYPE 
-- On LET reduce production aexp -> aexp ASTYPE 
-- On LEQ reduce production aexp -> aexp ASTYPE 
-- On LBRACE reduce production aexp -> aexp ASTYPE 
-- On LANGLE reduce production aexp -> aexp ASTYPE 
-- On INTO reduce production aexp -> aexp ASTYPE 
-- On INTEGER reduce production aexp -> aexp ASTYPE 
-- On IN reduce production aexp -> aexp ASTYPE 
-- On HASH reduce production aexp -> aexp ASTYPE 
-- On GT reduce production aexp -> aexp ASTYPE 
-- On GRAMMAR reduce production aexp -> aexp ASTYPE 
-- On GET reduce production aexp -> aexp ASTYPE 
-- On GEQ reduce production aexp -> aexp ASTYPE 
-- On EQUAL reduce production aexp -> aexp ASTYPE 
-- On EOF reduce production aexp -> aexp ASTYPE 
-- On END reduce production aexp -> aexp ASTYPE 
-- On DOT reduce production aexp -> aexp ASTYPE 
-- On DOLLAR reduce production aexp -> aexp ASTYPE 
-- On DEQARROW reduce production aexp -> aexp ASTYPE 
-- On DARROW reduce production aexp -> aexp ASTYPE 
-- On CSET reduce production aexp -> aexp ASTYPE 
-- On CREATE reduce production aexp -> aexp ASTYPE 
-- On COMMA reduce production aexp -> aexp ASTYPE 
-- On COLON reduce production aexp -> aexp ASTYPE 
-- On CHOOSE reduce production aexp -> aexp ASTYPE 
-- On CHARACTER reduce production aexp -> aexp ASTYPE 
-- On CEX reduce production aexp -> aexp ASTYPE 
-- On CANONIZE reduce production aexp -> aexp ASTYPE 
-- On BOOLEAN reduce production aexp -> aexp ASTYPE 
-- On BIJ reduce production aexp -> aexp ASTYPE 
-- On BEGIN reduce production aexp -> aexp ASTYPE 
-- On BARBAR reduce production aexp -> aexp ASTYPE 
-- On BAR reduce production aexp -> aexp ASTYPE 
-- On AVTYPE reduce production aexp -> aexp ASTYPE 
-- On ASTYPE reduce production aexp -> aexp ASTYPE 
-- On ARROW reduce production aexp -> aexp ASTYPE 
-- On AND reduce production aexp -> aexp ASTYPE 
-- On AMPERSAND reduce production aexp -> aexp ASTYPE 

State 168:
dotexp -> rewriteexp . DOT rewriteexp [ WITH TYPE TEST SEMI RPAREN RBRACK RANGLE MODULE MINUS LET IN EQUAL EOF END DOT DOLLAR COMMA COLON BARBAR BAR ]
dotexp -> rewriteexp . DOT appexp [ WITH TYPE TEST SEMI RPAREN RBRACK RANGLE MODULE MINUS LET IN EQUAL EOF END DOT DOLLAR COMMA COLON BARBAR BAR ]
infixexp -> rewriteexp . [ WITH TYPE TEST SEMI RPAREN RBRACK RANGLE MODULE MINUS LET IN EQUAL EOF END DOLLAR COMMA COLON BARBAR BAR ]
-- On DOT shift to state 169
-- On WITH reduce production infixexp -> rewriteexp 
-- On TYPE reduce production infixexp -> rewriteexp 
-- On TEST reduce production infixexp -> rewriteexp 
-- On SEMI reduce production infixexp -> rewriteexp 
-- On RPAREN reduce production infixexp -> rewriteexp 
-- On RBRACK reduce production infixexp -> rewriteexp 
-- On RANGLE reduce production infixexp -> rewriteexp 
-- On MODULE reduce production infixexp -> rewriteexp 
-- On MINUS reduce production infixexp -> rewriteexp 
-- On LET reduce production infixexp -> rewriteexp 
-- On IN reduce production infixexp -> rewriteexp 
-- On EQUAL reduce production infixexp -> rewriteexp 
-- On EOF reduce production infixexp -> rewriteexp 
-- On END reduce production infixexp -> rewriteexp 
-- On DOLLAR reduce production infixexp -> rewriteexp 
-- On COMMA reduce production infixexp -> rewriteexp 
-- On COLON reduce production infixexp -> rewriteexp 
-- On BARBAR reduce production infixexp -> rewriteexp 
-- On BAR reduce production infixexp -> rewriteexp 

State 169:
dotexp -> rewriteexp DOT . rewriteexp [ WITH TYPE TEST SEMI RPAREN RBRACK RANGLE MODULE MINUS LET IN EQUAL EOF END DOT DOLLAR COMMA COLON BARBAR BAR ]
dotexp -> rewriteexp DOT . appexp [ WITH TYPE TEST SEMI RPAREN RBRACK RANGLE MODULE MINUS LET IN EQUAL EOF END DOT DOLLAR COMMA COLON BARBAR BAR ]
-- On UIDENT shift to state 5
-- On SYNTH shift to state 36
-- On STR shift to state 37
-- On SQUASH shift to state 38
-- On QUALIDENT shift to state 6
-- On PROJECT shift to state 39
-- On PERM shift to state 40
-- On NSET shift to state 43
-- On LPAREN shift to state 44
-- On LIDENT shift to state 7
-- On LANGLE shift to state 47
-- On INTEGER shift to state 49
-- On HASH shift to state 50
-- On GRAMMAR shift to state 75
-- On CSET shift to state 81
-- On CHARACTER shift to state 82
-- On CEX shift to state 83
-- On BOOLEAN shift to state 134
-- On BEGIN shift to state 135
-- On tyexp shift to state 136
-- On rewriteexp shift to state 170
-- On repexp shift to state 157
-- On qid shift to state 158
-- On matchexp shift to state 159
-- On appexp shift to state 171
-- On aexp shift to state 162

State 170:
dotexp -> rewriteexp DOT rewriteexp . [ WITH TYPE TEST SEMI RPAREN RBRACK RANGLE MODULE MINUS LET IN EQUAL EOF END DOT DOLLAR COMMA COLON BARBAR BAR ]
-- On WITH reduce production dotexp -> rewriteexp DOT rewriteexp 
-- On TYPE reduce production dotexp -> rewriteexp DOT rewriteexp 
-- On TEST reduce production dotexp -> rewriteexp DOT rewriteexp 
-- On SEMI reduce production dotexp -> rewriteexp DOT rewriteexp 
-- On RPAREN reduce production dotexp -> rewriteexp DOT rewriteexp 
-- On RBRACK reduce production dotexp -> rewriteexp DOT rewriteexp 
-- On RANGLE reduce production dotexp -> rewriteexp DOT rewriteexp 
-- On MODULE reduce production dotexp -> rewriteexp DOT rewriteexp 
-- On MINUS reduce production dotexp -> rewriteexp DOT rewriteexp 
-- On LET reduce production dotexp -> rewriteexp DOT rewriteexp 
-- On IN reduce production dotexp -> rewriteexp DOT rewriteexp 
-- On EQUAL reduce production dotexp -> rewriteexp DOT rewriteexp 
-- On EOF reduce production dotexp -> rewriteexp DOT rewriteexp 
-- On END reduce production dotexp -> rewriteexp DOT rewriteexp 
-- On DOT reduce production dotexp -> rewriteexp DOT rewriteexp 
-- On DOLLAR reduce production dotexp -> rewriteexp DOT rewriteexp 
-- On COMMA reduce production dotexp -> rewriteexp DOT rewriteexp 
-- On COLON reduce production dotexp -> rewriteexp DOT rewriteexp 
-- On BARBAR reduce production dotexp -> rewriteexp DOT rewriteexp 
-- On BAR reduce production dotexp -> rewriteexp DOT rewriteexp 

State 171:
appexp -> appexp . repexp [ WITH UIDENT TYPE TEST STR SEMI RPAREN RBRACK RANGLE QUALIDENT NSET MODULE MINUS LPAREN LIDENT LET LANGLE INTEGER IN HASH GRAMMAR EQUAL EOF END DOT DOLLAR DEQARROW DARROW CSET COMMA COLON CHARACTER CEX BOOLEAN BEGIN BARBAR BAR ]
dotexp -> rewriteexp DOT appexp . [ WITH TYPE TEST SEMI RPAREN RBRACK RANGLE MODULE MINUS LET IN EQUAL EOF END DOT DOLLAR COMMA COLON BARBAR BAR ]
rewriteexp -> appexp . DARROW appexp [ WITH TYPE TEST SEMI RPAREN RBRACK RANGLE MODULE MINUS LET IN EQUAL EOF END DOT DOLLAR COMMA COLON BARBAR BAR ]
rewriteexp -> appexp . DEQARROW appexp [ WITH TYPE TEST SEMI RPAREN RBRACK RANGLE MODULE MINUS LET IN EQUAL EOF END DOT DOLLAR COMMA COLON BARBAR BAR ]
-- On UIDENT shift to state 5
-- On STR shift to state 37
-- On QUALIDENT shift to state 6
-- On NSET shift to state 43
-- On LPAREN shift to state 44
-- On LIDENT shift to state 7
-- On LANGLE shift to state 47
-- On INTEGER shift to state 49
-- On HASH shift to state 50
-- On GRAMMAR shift to state 75
-- On DEQARROW shift to state 172
-- On DARROW shift to state 174
-- On CSET shift to state 81
-- On CHARACTER shift to state 82
-- On CEX shift to state 83
-- On BOOLEAN shift to state 134
-- On BEGIN shift to state 135
-- On tyexp shift to state 136
-- On repexp shift to state 161
-- On qid shift to state 158
-- On matchexp shift to state 159
-- On aexp shift to state 162
-- On WITH reduce production dotexp -> rewriteexp DOT appexp 
-- On TYPE reduce production dotexp -> rewriteexp DOT appexp 
-- On TEST reduce production dotexp -> rewriteexp DOT appexp 
-- On SEMI reduce production dotexp -> rewriteexp DOT appexp 
-- On RPAREN reduce production dotexp -> rewriteexp DOT appexp 
-- On RBRACK reduce production dotexp -> rewriteexp DOT appexp 
-- On RANGLE reduce production dotexp -> rewriteexp DOT appexp 
-- On MODULE reduce production dotexp -> rewriteexp DOT appexp 
-- On MINUS reduce production dotexp -> rewriteexp DOT appexp 
-- On LET reduce production dotexp -> rewriteexp DOT appexp 
-- On IN reduce production dotexp -> rewriteexp DOT appexp 
-- On EQUAL reduce production dotexp -> rewriteexp DOT appexp 
-- On EOF reduce production dotexp -> rewriteexp DOT appexp 
-- On END reduce production dotexp -> rewriteexp DOT appexp 
-- On DOT reduce production dotexp -> rewriteexp DOT appexp 
-- On DOLLAR reduce production dotexp -> rewriteexp DOT appexp 
-- On COMMA reduce production dotexp -> rewriteexp DOT appexp 
-- On COLON reduce production dotexp -> rewriteexp DOT appexp 
-- On BARBAR reduce production dotexp -> rewriteexp DOT appexp 
-- On BAR reduce production dotexp -> rewriteexp DOT appexp 

State 172:
rewriteexp -> appexp DEQARROW . appexp [ WITH TYPE TEST SEMI RPAREN RBRACK RANGLE MODULE MINUS LET IN EQUAL EOF END DOT DOLLAR COMMA COLON BARBAR BAR ]
-- On UIDENT shift to state 5
-- On SYNTH shift to state 36
-- On STR shift to state 37
-- On SQUASH shift to state 38
-- On QUALIDENT shift to state 6
-- On PROJECT shift to state 39
-- On PERM shift to state 40
-- On NSET shift to state 43
-- On LPAREN shift to state 44
-- On LIDENT shift to state 7
-- On LANGLE shift to state 47
-- On INTEGER shift to state 49
-- On HASH shift to state 50
-- On GRAMMAR shift to state 75
-- On CSET shift to state 81
-- On CHARACTER shift to state 82
-- On CEX shift to state 83
-- On BOOLEAN shift to state 134
-- On BEGIN shift to state 135
-- On tyexp shift to state 136
-- On repexp shift to state 157
-- On qid shift to state 158
-- On matchexp shift to state 159
-- On appexp shift to state 173
-- On aexp shift to state 162

State 173:
appexp -> appexp . repexp [ WITH UIDENT TYPE TEST STR SEMI RPAREN RBRACK RANGLE QUALIDENT NSET MODULE MINUS LPAREN LIDENT LET LANGLE INTEGER IN HASH GRAMMAR EQUAL EOF END DOT DOLLAR CSET COMMA COLON CHARACTER CEX BOOLEAN BEGIN BARBAR BAR ]
rewriteexp -> appexp DEQARROW appexp . [ WITH TYPE TEST SEMI RPAREN RBRACK RANGLE MODULE MINUS LET IN EQUAL EOF END DOT DOLLAR COMMA COLON BARBAR BAR ]
-- On UIDENT shift to state 5
-- On STR shift to state 37
-- On QUALIDENT shift to state 6
-- On NSET shift to state 43
-- On LPAREN shift to state 44
-- On LIDENT shift to state 7
-- On LANGLE shift to state 47
-- On INTEGER shift to state 49
-- On HASH shift to state 50
-- On GRAMMAR shift to state 75
-- On CSET shift to state 81
-- On CHARACTER shift to state 82
-- On CEX shift to state 83
-- On BOOLEAN shift to state 134
-- On BEGIN shift to state 135
-- On tyexp shift to state 136
-- On repexp shift to state 161
-- On qid shift to state 158
-- On matchexp shift to state 159
-- On aexp shift to state 162
-- On WITH reduce production rewriteexp -> appexp DEQARROW appexp 
-- On TYPE reduce production rewriteexp -> appexp DEQARROW appexp 
-- On TEST reduce production rewriteexp -> appexp DEQARROW appexp 
-- On SEMI reduce production rewriteexp -> appexp DEQARROW appexp 
-- On RPAREN reduce production rewriteexp -> appexp DEQARROW appexp 
-- On RBRACK reduce production rewriteexp -> appexp DEQARROW appexp 
-- On RANGLE reduce production rewriteexp -> appexp DEQARROW appexp 
-- On MODULE reduce production rewriteexp -> appexp DEQARROW appexp 
-- On MINUS reduce production rewriteexp -> appexp DEQARROW appexp 
-- On LET reduce production rewriteexp -> appexp DEQARROW appexp 
-- On IN reduce production rewriteexp -> appexp DEQARROW appexp 
-- On EQUAL reduce production rewriteexp -> appexp DEQARROW appexp 
-- On EOF reduce production rewriteexp -> appexp DEQARROW appexp 
-- On END reduce production rewriteexp -> appexp DEQARROW appexp 
-- On DOT reduce production rewriteexp -> appexp DEQARROW appexp 
-- On DOLLAR reduce production rewriteexp -> appexp DEQARROW appexp 
-- On COMMA reduce production rewriteexp -> appexp DEQARROW appexp 
-- On COLON reduce production rewriteexp -> appexp DEQARROW appexp 
-- On BARBAR reduce production rewriteexp -> appexp DEQARROW appexp 
-- On BAR reduce production rewriteexp -> appexp DEQARROW appexp 

State 174:
rewriteexp -> appexp DARROW . appexp [ WITH TYPE TEST SEMI RPAREN RBRACK RANGLE MODULE MINUS LET IN EQUAL EOF END DOT DOLLAR COMMA COLON BARBAR BAR ]
-- On UIDENT shift to state 5
-- On SYNTH shift to state 36
-- On STR shift to state 37
-- On SQUASH shift to state 38
-- On QUALIDENT shift to state 6
-- On PROJECT shift to state 39
-- On PERM shift to state 40
-- On NSET shift to state 43
-- On LPAREN shift to state 44
-- On LIDENT shift to state 7
-- On LANGLE shift to state 47
-- On INTEGER shift to state 49
-- On HASH shift to state 50
-- On GRAMMAR shift to state 75
-- On CSET shift to state 81
-- On CHARACTER shift to state 82
-- On CEX shift to state 83
-- On BOOLEAN shift to state 134
-- On BEGIN shift to state 135
-- On tyexp shift to state 136
-- On repexp shift to state 157
-- On qid shift to state 158
-- On matchexp shift to state 159
-- On appexp shift to state 175
-- On aexp shift to state 162

State 175:
appexp -> appexp . repexp [ WITH UIDENT TYPE TEST STR SEMI RPAREN RBRACK RANGLE QUALIDENT NSET MODULE MINUS LPAREN LIDENT LET LANGLE INTEGER IN HASH GRAMMAR EQUAL EOF END DOT DOLLAR CSET COMMA COLON CHARACTER CEX BOOLEAN BEGIN BARBAR BAR ]
rewriteexp -> appexp DARROW appexp . [ WITH TYPE TEST SEMI RPAREN RBRACK RANGLE MODULE MINUS LET IN EQUAL EOF END DOT DOLLAR COMMA COLON BARBAR BAR ]
-- On UIDENT shift to state 5
-- On STR shift to state 37
-- On QUALIDENT shift to state 6
-- On NSET shift to state 43
-- On LPAREN shift to state 44
-- On LIDENT shift to state 7
-- On LANGLE shift to state 47
-- On INTEGER shift to state 49
-- On HASH shift to state 50
-- On GRAMMAR shift to state 75
-- On CSET shift to state 81
-- On CHARACTER shift to state 82
-- On CEX shift to state 83
-- On BOOLEAN shift to state 134
-- On BEGIN shift to state 135
-- On tyexp shift to state 136
-- On repexp shift to state 161
-- On qid shift to state 158
-- On matchexp shift to state 159
-- On aexp shift to state 162
-- On WITH reduce production rewriteexp -> appexp DARROW appexp 
-- On TYPE reduce production rewriteexp -> appexp DARROW appexp 
-- On TEST reduce production rewriteexp -> appexp DARROW appexp 
-- On SEMI reduce production rewriteexp -> appexp DARROW appexp 
-- On RPAREN reduce production rewriteexp -> appexp DARROW appexp 
-- On RBRACK reduce production rewriteexp -> appexp DARROW appexp 
-- On RANGLE reduce production rewriteexp -> appexp DARROW appexp 
-- On MODULE reduce production rewriteexp -> appexp DARROW appexp 
-- On MINUS reduce production rewriteexp -> appexp DARROW appexp 
-- On LET reduce production rewriteexp -> appexp DARROW appexp 
-- On IN reduce production rewriteexp -> appexp DARROW appexp 
-- On EQUAL reduce production rewriteexp -> appexp DARROW appexp 
-- On EOF reduce production rewriteexp -> appexp DARROW appexp 
-- On END reduce production rewriteexp -> appexp DARROW appexp 
-- On DOT reduce production rewriteexp -> appexp DARROW appexp 
-- On DOLLAR reduce production rewriteexp -> appexp DARROW appexp 
-- On COMMA reduce production rewriteexp -> appexp DARROW appexp 
-- On COLON reduce production rewriteexp -> appexp DARROW appexp 
-- On BARBAR reduce production rewriteexp -> appexp DARROW appexp 
-- On BAR reduce production rewriteexp -> appexp DARROW appexp 

State 176:
barexp -> obarexp . [ WITH TYPE TEST SEMI RPAREN RBRACK RANGLE MODULE LET IN EOF END DOLLAR COMMA ]
obarexp -> obarexp . BAR equalexp [ WITH TYPE TEST SEMI RPAREN RBRACK RANGLE MODULE LET IN EOF END DOLLAR COMMA BAR ]
-- On BAR shift to state 177
-- On WITH reduce production barexp -> obarexp 
-- On TYPE reduce production barexp -> obarexp 
-- On TEST reduce production barexp -> obarexp 
-- On SEMI reduce production barexp -> obarexp 
-- On RPAREN reduce production barexp -> obarexp 
-- On RBRACK reduce production barexp -> obarexp 
-- On RANGLE reduce production barexp -> obarexp 
-- On MODULE reduce production barexp -> obarexp 
-- On LET reduce production barexp -> obarexp 
-- On IN reduce production barexp -> obarexp 
-- On EOF reduce production barexp -> obarexp 
-- On END reduce production barexp -> obarexp 
-- On DOLLAR reduce production barexp -> obarexp 
-- On COMMA reduce production barexp -> obarexp 

State 177:
obarexp -> obarexp BAR . equalexp [ WITH TYPE TEST SEMI RPAREN RBRACK RANGLE MODULE LET IN EOF END DOLLAR COMMA BAR ]
-- On UIDENT shift to state 5
-- On SYNTH shift to state 36
-- On STR shift to state 37
-- On SQUASH shift to state 38
-- On QUALIDENT shift to state 6
-- On PROJECT shift to state 39
-- On PERM shift to state 40
-- On NSET shift to state 43
-- On MINUS shift to state 46
-- On LPAREN shift to state 44
-- On LIDENT shift to state 7
-- On LANGLE shift to state 47
-- On INTEGER shift to state 49
-- On HASH shift to state 50
-- On GRAMMAR shift to state 75
-- On CSET shift to state 81
-- On CHARACTER shift to state 82
-- On CEX shift to state 83
-- On BOOLEAN shift to state 134
-- On BEGIN shift to state 135
-- On tyexp shift to state 136
-- On tildeexp shift to state 155
-- On rewriteexp shift to state 168
-- On repexp shift to state 157
-- On qid shift to state 158
-- On minusexp shift to state 178
-- On matchexp shift to state 159
-- On ltexp shift to state 179
-- On leqexp shift to state 180
-- On lenscomponentexp shift to state 181
-- On infixexp shift to state 182
-- On gtexp shift to state 185
-- On geqexp shift to state 186
-- On equalexp shift to state 187
-- On dotexp shift to state 188
-- On appexp shift to state 192
-- On ampexp shift to state 226
-- On ampampexp shift to state 229
-- On aexp shift to state 162

State 178:
infixexp -> minusexp . [ WITH TYPE TEST SEMI RPAREN RBRACK RANGLE MODULE MINUS LET IN EQUAL EOF END DOLLAR COMMA COLON BARBAR BAR ]
-- On WITH reduce production infixexp -> minusexp 
-- On TYPE reduce production infixexp -> minusexp 
-- On TEST reduce production infixexp -> minusexp 
-- On SEMI reduce production infixexp -> minusexp 
-- On RPAREN reduce production infixexp -> minusexp 
-- On RBRACK reduce production infixexp -> minusexp 
-- On RANGLE reduce production infixexp -> minusexp 
-- On MODULE reduce production infixexp -> minusexp 
-- On MINUS reduce production infixexp -> minusexp 
-- On LET reduce production infixexp -> minusexp 
-- On IN reduce production infixexp -> minusexp 
-- On EQUAL reduce production infixexp -> minusexp 
-- On EOF reduce production infixexp -> minusexp 
-- On END reduce production infixexp -> minusexp 
-- On DOLLAR reduce production infixexp -> minusexp 
-- On COMMA reduce production infixexp -> minusexp 
-- On COLON reduce production infixexp -> minusexp 
-- On BARBAR reduce production infixexp -> minusexp 
-- On BAR reduce production infixexp -> minusexp 

State 179:
infixexp -> ltexp . [ WITH TYPE TEST SEMI RPAREN RBRACK RANGLE MODULE MINUS LET IN EQUAL EOF END DOLLAR COMMA COLON BARBAR BAR ]
-- On WITH reduce production infixexp -> ltexp 
-- On TYPE reduce production infixexp -> ltexp 
-- On TEST reduce production infixexp -> ltexp 
-- On SEMI reduce production infixexp -> ltexp 
-- On RPAREN reduce production infixexp -> ltexp 
-- On RBRACK reduce production infixexp -> ltexp 
-- On RANGLE reduce production infixexp -> ltexp 
-- On MODULE reduce production infixexp -> ltexp 
-- On MINUS reduce production infixexp -> ltexp 
-- On LET reduce production infixexp -> ltexp 
-- On IN reduce production infixexp -> ltexp 
-- On EQUAL reduce production infixexp -> ltexp 
-- On EOF reduce production infixexp -> ltexp 
-- On END reduce production infixexp -> ltexp 
-- On DOLLAR reduce production infixexp -> ltexp 
-- On COMMA reduce production infixexp -> ltexp 
-- On COLON reduce production infixexp -> ltexp 
-- On BARBAR reduce production infixexp -> ltexp 
-- On BAR reduce production infixexp -> ltexp 

State 180:
infixexp -> leqexp . [ WITH TYPE TEST SEMI RPAREN RBRACK RANGLE MODULE MINUS LET IN EQUAL EOF END DOLLAR COMMA COLON BARBAR BAR ]
-- On WITH reduce production infixexp -> leqexp 
-- On TYPE reduce production infixexp -> leqexp 
-- On TEST reduce production infixexp -> leqexp 
-- On SEMI reduce production infixexp -> leqexp 
-- On RPAREN reduce production infixexp -> leqexp 
-- On RBRACK reduce production infixexp -> leqexp 
-- On RANGLE reduce production infixexp -> leqexp 
-- On MODULE reduce production infixexp -> leqexp 
-- On MINUS reduce production infixexp -> leqexp 
-- On LET reduce production infixexp -> leqexp 
-- On IN reduce production infixexp -> leqexp 
-- On EQUAL reduce production infixexp -> leqexp 
-- On EOF reduce production infixexp -> leqexp 
-- On END reduce production infixexp -> leqexp 
-- On DOLLAR reduce production infixexp -> leqexp 
-- On COMMA reduce production infixexp -> leqexp 
-- On COLON reduce production infixexp -> leqexp 
-- On BARBAR reduce production infixexp -> leqexp 
-- On BAR reduce production infixexp -> leqexp 

State 181:
infixexp -> lenscomponentexp . [ WITH TYPE TEST SEMI RPAREN RBRACK RANGLE MODULE MINUS LET IN EQUAL EOF END DOLLAR COMMA COLON BARBAR BAR ]
-- On WITH reduce production infixexp -> lenscomponentexp 
-- On TYPE reduce production infixexp -> lenscomponentexp 
-- On TEST reduce production infixexp -> lenscomponentexp 
-- On SEMI reduce production infixexp -> lenscomponentexp 
-- On RPAREN reduce production infixexp -> lenscomponentexp 
-- On RBRACK reduce production infixexp -> lenscomponentexp 
-- On RANGLE reduce production infixexp -> lenscomponentexp 
-- On MODULE reduce production infixexp -> lenscomponentexp 
-- On MINUS reduce production infixexp -> lenscomponentexp 
-- On LET reduce production infixexp -> lenscomponentexp 
-- On IN reduce production infixexp -> lenscomponentexp 
-- On EQUAL reduce production infixexp -> lenscomponentexp 
-- On EOF reduce production infixexp -> lenscomponentexp 
-- On END reduce production infixexp -> lenscomponentexp 
-- On DOLLAR reduce production infixexp -> lenscomponentexp 
-- On COMMA reduce production infixexp -> lenscomponentexp 
-- On COLON reduce production infixexp -> lenscomponentexp 
-- On BARBAR reduce production infixexp -> lenscomponentexp 
-- On BAR reduce production infixexp -> lenscomponentexp 

State 182:
equalexp -> infixexp . [ WITH TYPE TEST SEMI RPAREN RBRACK RANGLE MODULE LET IN EOF END DOLLAR COMMA COLON BARBAR BAR ]
minusexp -> infixexp . MINUS appexp [ WITH TYPE TEST SEMI RPAREN RBRACK RANGLE MODULE MINUS LET IN EOF END DOLLAR COMMA COLON BARBAR BAR ]
-- On MINUS shift to state 183
-- On WITH reduce production equalexp -> infixexp 
-- On TYPE reduce production equalexp -> infixexp 
-- On TEST reduce production equalexp -> infixexp 
-- On SEMI reduce production equalexp -> infixexp 
-- On RPAREN reduce production equalexp -> infixexp 
-- On RBRACK reduce production equalexp -> infixexp 
-- On RANGLE reduce production equalexp -> infixexp 
-- On MODULE reduce production equalexp -> infixexp 
-- On LET reduce production equalexp -> infixexp 
-- On IN reduce production equalexp -> infixexp 
-- On EOF reduce production equalexp -> infixexp 
-- On END reduce production equalexp -> infixexp 
-- On DOLLAR reduce production equalexp -> infixexp 
-- On COMMA reduce production equalexp -> infixexp 
-- On COLON reduce production equalexp -> infixexp 
-- On BARBAR reduce production equalexp -> infixexp 
-- On BAR reduce production equalexp -> infixexp 

State 183:
minusexp -> infixexp MINUS . appexp [ WITH TYPE TEST SEMI RPAREN RBRACK RANGLE MODULE MINUS LET IN EQUAL EOF END DOLLAR COMMA COLON BARBAR BAR ]
-- On UIDENT shift to state 5
-- On SYNTH shift to state 36
-- On STR shift to state 37
-- On SQUASH shift to state 38
-- On QUALIDENT shift to state 6
-- On PROJECT shift to state 39
-- On PERM shift to state 40
-- On NSET shift to state 43
-- On LPAREN shift to state 44
-- On LIDENT shift to state 7
-- On LANGLE shift to state 47
-- On INTEGER shift to state 49
-- On HASH shift to state 50
-- On GRAMMAR shift to state 75
-- On CSET shift to state 81
-- On CHARACTER shift to state 82
-- On CEX shift to state 83
-- On BOOLEAN shift to state 134
-- On BEGIN shift to state 135
-- On tyexp shift to state 136
-- On repexp shift to state 157
-- On qid shift to state 158
-- On matchexp shift to state 159
-- On appexp shift to state 184
-- On aexp shift to state 162

State 184:
appexp -> appexp . repexp [ WITH UIDENT TYPE TEST STR SEMI RPAREN RBRACK RANGLE QUALIDENT NSET MODULE MINUS LPAREN LIDENT LET LANGLE INTEGER IN HASH GRAMMAR EQUAL EOF END DOLLAR CSET COMMA COLON CHARACTER CEX BOOLEAN BEGIN BARBAR BAR ]
minusexp -> infixexp MINUS appexp . [ WITH TYPE TEST SEMI RPAREN RBRACK RANGLE MODULE MINUS LET IN EQUAL EOF END DOLLAR COMMA COLON BARBAR BAR ]
-- On UIDENT shift to state 5
-- On STR shift to state 37
-- On QUALIDENT shift to state 6
-- On NSET shift to state 43
-- On LPAREN shift to state 44
-- On LIDENT shift to state 7
-- On LANGLE shift to state 47
-- On INTEGER shift to state 49
-- On HASH shift to state 50
-- On GRAMMAR shift to state 75
-- On CSET shift to state 81
-- On CHARACTER shift to state 82
-- On CEX shift to state 83
-- On BOOLEAN shift to state 134
-- On BEGIN shift to state 135
-- On tyexp shift to state 136
-- On repexp shift to state 161
-- On qid shift to state 158
-- On matchexp shift to state 159
-- On aexp shift to state 162
-- On WITH reduce production minusexp -> infixexp MINUS appexp 
-- On TYPE reduce production minusexp -> infixexp MINUS appexp 
-- On TEST reduce production minusexp -> infixexp MINUS appexp 
-- On SEMI reduce production minusexp -> infixexp MINUS appexp 
-- On RPAREN reduce production minusexp -> infixexp MINUS appexp 
-- On RBRACK reduce production minusexp -> infixexp MINUS appexp 
-- On RANGLE reduce production minusexp -> infixexp MINUS appexp 
-- On MODULE reduce production minusexp -> infixexp MINUS appexp 
-- On MINUS reduce production minusexp -> infixexp MINUS appexp 
-- On LET reduce production minusexp -> infixexp MINUS appexp 
-- On IN reduce production minusexp -> infixexp MINUS appexp 
-- On EQUAL reduce production minusexp -> infixexp MINUS appexp 
-- On EOF reduce production minusexp -> infixexp MINUS appexp 
-- On END reduce production minusexp -> infixexp MINUS appexp 
-- On DOLLAR reduce production minusexp -> infixexp MINUS appexp 
-- On COMMA reduce production minusexp -> infixexp MINUS appexp 
-- On COLON reduce production minusexp -> infixexp MINUS appexp 
-- On BARBAR reduce production minusexp -> infixexp MINUS appexp 
-- On BAR reduce production minusexp -> infixexp MINUS appexp 

State 185:
infixexp -> gtexp . [ WITH TYPE TEST SEMI RPAREN RBRACK RANGLE MODULE MINUS LET IN EQUAL EOF END DOLLAR COMMA COLON BARBAR BAR ]
-- On WITH reduce production infixexp -> gtexp 
-- On TYPE reduce production infixexp -> gtexp 
-- On TEST reduce production infixexp -> gtexp 
-- On SEMI reduce production infixexp -> gtexp 
-- On RPAREN reduce production infixexp -> gtexp 
-- On RBRACK reduce production infixexp -> gtexp 
-- On RANGLE reduce production infixexp -> gtexp 
-- On MODULE reduce production infixexp -> gtexp 
-- On MINUS reduce production infixexp -> gtexp 
-- On LET reduce production infixexp -> gtexp 
-- On IN reduce production infixexp -> gtexp 
-- On EQUAL reduce production infixexp -> gtexp 
-- On EOF reduce production infixexp -> gtexp 
-- On END reduce production infixexp -> gtexp 
-- On DOLLAR reduce production infixexp -> gtexp 
-- On COMMA reduce production infixexp -> gtexp 
-- On COLON reduce production infixexp -> gtexp 
-- On BARBAR reduce production infixexp -> gtexp 
-- On BAR reduce production infixexp -> gtexp 

State 186:
infixexp -> geqexp . [ WITH TYPE TEST SEMI RPAREN RBRACK RANGLE MODULE MINUS LET IN EQUAL EOF END DOLLAR COMMA COLON BARBAR BAR ]
-- On WITH reduce production infixexp -> geqexp 
-- On TYPE reduce production infixexp -> geqexp 
-- On TEST reduce production infixexp -> geqexp 
-- On SEMI reduce production infixexp -> geqexp 
-- On RPAREN reduce production infixexp -> geqexp 
-- On RBRACK reduce production infixexp -> geqexp 
-- On RANGLE reduce production infixexp -> geqexp 
-- On MODULE reduce production infixexp -> geqexp 
-- On MINUS reduce production infixexp -> geqexp 
-- On LET reduce production infixexp -> geqexp 
-- On IN reduce production infixexp -> geqexp 
-- On EQUAL reduce production infixexp -> geqexp 
-- On EOF reduce production infixexp -> geqexp 
-- On END reduce production infixexp -> geqexp 
-- On DOLLAR reduce production infixexp -> geqexp 
-- On COMMA reduce production infixexp -> geqexp 
-- On COLON reduce production infixexp -> geqexp 
-- On BARBAR reduce production infixexp -> geqexp 
-- On BAR reduce production infixexp -> geqexp 

State 187:
obarexp -> obarexp BAR equalexp . [ WITH TYPE TEST SEMI RPAREN RBRACK RANGLE MODULE LET IN EOF END DOLLAR COMMA BAR ]
-- On WITH reduce production obarexp -> obarexp BAR equalexp 
-- On TYPE reduce production obarexp -> obarexp BAR equalexp 
-- On TEST reduce production obarexp -> obarexp BAR equalexp 
-- On SEMI reduce production obarexp -> obarexp BAR equalexp 
-- On RPAREN reduce production obarexp -> obarexp BAR equalexp 
-- On RBRACK reduce production obarexp -> obarexp BAR equalexp 
-- On RANGLE reduce production obarexp -> obarexp BAR equalexp 
-- On MODULE reduce production obarexp -> obarexp BAR equalexp 
-- On LET reduce production obarexp -> obarexp BAR equalexp 
-- On IN reduce production obarexp -> obarexp BAR equalexp 
-- On EOF reduce production obarexp -> obarexp BAR equalexp 
-- On END reduce production obarexp -> obarexp BAR equalexp 
-- On DOLLAR reduce production obarexp -> obarexp BAR equalexp 
-- On COMMA reduce production obarexp -> obarexp BAR equalexp 
-- On BAR reduce production obarexp -> obarexp BAR equalexp 

State 188:
dotexp -> dotexp . DOT appexp [ WITH TYPE TEST SEMI RPAREN RBRACK RANGLE MODULE MINUS LET IN EQUAL EOF END DOT DOLLAR COMMA COLON BARBAR BAR ]
dotexp -> dotexp . DOT rewriteexp [ WITH TYPE TEST SEMI RPAREN RBRACK RANGLE MODULE MINUS LET IN EQUAL EOF END DOT DOLLAR COMMA COLON BARBAR BAR ]
infixexp -> dotexp . [ WITH TYPE TEST SEMI RPAREN RBRACK RANGLE MODULE MINUS LET IN EQUAL EOF END DOLLAR COMMA COLON BARBAR BAR ]
-- On DOT shift to state 189
-- On WITH reduce production infixexp -> dotexp 
-- On TYPE reduce production infixexp -> dotexp 
-- On TEST reduce production infixexp -> dotexp 
-- On SEMI reduce production infixexp -> dotexp 
-- On RPAREN reduce production infixexp -> dotexp 
-- On RBRACK reduce production infixexp -> dotexp 
-- On RANGLE reduce production infixexp -> dotexp 
-- On MODULE reduce production infixexp -> dotexp 
-- On MINUS reduce production infixexp -> dotexp 
-- On LET reduce production infixexp -> dotexp 
-- On IN reduce production infixexp -> dotexp 
-- On EQUAL reduce production infixexp -> dotexp 
-- On EOF reduce production infixexp -> dotexp 
-- On END reduce production infixexp -> dotexp 
-- On DOLLAR reduce production infixexp -> dotexp 
-- On COMMA reduce production infixexp -> dotexp 
-- On COLON reduce production infixexp -> dotexp 
-- On BARBAR reduce production infixexp -> dotexp 
-- On BAR reduce production infixexp -> dotexp 

State 189:
dotexp -> dotexp DOT . appexp [ WITH TYPE TEST SEMI RPAREN RBRACK RANGLE MODULE MINUS LET IN EQUAL EOF END DOT DOLLAR COMMA COLON BARBAR BAR ]
dotexp -> dotexp DOT . rewriteexp [ WITH TYPE TEST SEMI RPAREN RBRACK RANGLE MODULE MINUS LET IN EQUAL EOF END DOT DOLLAR COMMA COLON BARBAR BAR ]
-- On UIDENT shift to state 5
-- On SYNTH shift to state 36
-- On STR shift to state 37
-- On SQUASH shift to state 38
-- On QUALIDENT shift to state 6
-- On PROJECT shift to state 39
-- On PERM shift to state 40
-- On NSET shift to state 43
-- On LPAREN shift to state 44
-- On LIDENT shift to state 7
-- On LANGLE shift to state 47
-- On INTEGER shift to state 49
-- On HASH shift to state 50
-- On GRAMMAR shift to state 75
-- On CSET shift to state 81
-- On CHARACTER shift to state 82
-- On CEX shift to state 83
-- On BOOLEAN shift to state 134
-- On BEGIN shift to state 135
-- On tyexp shift to state 136
-- On rewriteexp shift to state 190
-- On repexp shift to state 157
-- On qid shift to state 158
-- On matchexp shift to state 159
-- On appexp shift to state 191
-- On aexp shift to state 162

State 190:
dotexp -> dotexp DOT rewriteexp . [ WITH TYPE TEST SEMI RPAREN RBRACK RANGLE MODULE MINUS LET IN EQUAL EOF END DOT DOLLAR COMMA COLON BARBAR BAR ]
-- On WITH reduce production dotexp -> dotexp DOT rewriteexp 
-- On TYPE reduce production dotexp -> dotexp DOT rewriteexp 
-- On TEST reduce production dotexp -> dotexp DOT rewriteexp 
-- On SEMI reduce production dotexp -> dotexp DOT rewriteexp 
-- On RPAREN reduce production dotexp -> dotexp DOT rewriteexp 
-- On RBRACK reduce production dotexp -> dotexp DOT rewriteexp 
-- On RANGLE reduce production dotexp -> dotexp DOT rewriteexp 
-- On MODULE reduce production dotexp -> dotexp DOT rewriteexp 
-- On MINUS reduce production dotexp -> dotexp DOT rewriteexp 
-- On LET reduce production dotexp -> dotexp DOT rewriteexp 
-- On IN reduce production dotexp -> dotexp DOT rewriteexp 
-- On EQUAL reduce production dotexp -> dotexp DOT rewriteexp 
-- On EOF reduce production dotexp -> dotexp DOT rewriteexp 
-- On END reduce production dotexp -> dotexp DOT rewriteexp 
-- On DOT reduce production dotexp -> dotexp DOT rewriteexp 
-- On DOLLAR reduce production dotexp -> dotexp DOT rewriteexp 
-- On COMMA reduce production dotexp -> dotexp DOT rewriteexp 
-- On COLON reduce production dotexp -> dotexp DOT rewriteexp 
-- On BARBAR reduce production dotexp -> dotexp DOT rewriteexp 
-- On BAR reduce production dotexp -> dotexp DOT rewriteexp 

State 191:
appexp -> appexp . repexp [ WITH UIDENT TYPE TEST STR SEMI RPAREN RBRACK RANGLE QUALIDENT NSET MODULE MINUS LPAREN LIDENT LET LANGLE INTEGER IN HASH GRAMMAR EQUAL EOF END DOT DOLLAR DEQARROW DARROW CSET COMMA COLON CHARACTER CEX BOOLEAN BEGIN BARBAR BAR ]
dotexp -> dotexp DOT appexp . [ WITH TYPE TEST SEMI RPAREN RBRACK RANGLE MODULE MINUS LET IN EQUAL EOF END DOT DOLLAR COMMA COLON BARBAR BAR ]
rewriteexp -> appexp . DARROW appexp [ WITH TYPE TEST SEMI RPAREN RBRACK RANGLE MODULE MINUS LET IN EQUAL EOF END DOT DOLLAR COMMA COLON BARBAR BAR ]
rewriteexp -> appexp . DEQARROW appexp [ WITH TYPE TEST SEMI RPAREN RBRACK RANGLE MODULE MINUS LET IN EQUAL EOF END DOT DOLLAR COMMA COLON BARBAR BAR ]
-- On UIDENT shift to state 5
-- On STR shift to state 37
-- On QUALIDENT shift to state 6
-- On NSET shift to state 43
-- On LPAREN shift to state 44
-- On LIDENT shift to state 7
-- On LANGLE shift to state 47
-- On INTEGER shift to state 49
-- On HASH shift to state 50
-- On GRAMMAR shift to state 75
-- On DEQARROW shift to state 172
-- On DARROW shift to state 174
-- On CSET shift to state 81
-- On CHARACTER shift to state 82
-- On CEX shift to state 83
-- On BOOLEAN shift to state 134
-- On BEGIN shift to state 135
-- On tyexp shift to state 136
-- On repexp shift to state 161
-- On qid shift to state 158
-- On matchexp shift to state 159
-- On aexp shift to state 162
-- On WITH reduce production dotexp -> dotexp DOT appexp 
-- On TYPE reduce production dotexp -> dotexp DOT appexp 
-- On TEST reduce production dotexp -> dotexp DOT appexp 
-- On SEMI reduce production dotexp -> dotexp DOT appexp 
-- On RPAREN reduce production dotexp -> dotexp DOT appexp 
-- On RBRACK reduce production dotexp -> dotexp DOT appexp 
-- On RANGLE reduce production dotexp -> dotexp DOT appexp 
-- On MODULE reduce production dotexp -> dotexp DOT appexp 
-- On MINUS reduce production dotexp -> dotexp DOT appexp 
-- On LET reduce production dotexp -> dotexp DOT appexp 
-- On IN reduce production dotexp -> dotexp DOT appexp 
-- On EQUAL reduce production dotexp -> dotexp DOT appexp 
-- On EOF reduce production dotexp -> dotexp DOT appexp 
-- On END reduce production dotexp -> dotexp DOT appexp 
-- On DOT reduce production dotexp -> dotexp DOT appexp 
-- On DOLLAR reduce production dotexp -> dotexp DOT appexp 
-- On COMMA reduce production dotexp -> dotexp DOT appexp 
-- On COLON reduce production dotexp -> dotexp DOT appexp 
-- On BARBAR reduce production dotexp -> dotexp DOT appexp 
-- On BAR reduce production dotexp -> dotexp DOT appexp 

State 192:
ampampexp -> appexp . AMPERSAND AMPERSAND ampampexp [ WITH TYPE TEST SEMI RPAREN RBRACK RANGLE MODULE MINUS LET IN EOF END DOLLAR COMMA COLON BARBAR BAR ]
ampampexp -> appexp . AMPERSAND AMPERSAND appexp [ WITH TYPE TEST SEMI RPAREN RBRACK RANGLE MODULE MINUS LET IN EOF END DOLLAR COMMA COLON BARBAR BAR ]
ampexp -> appexp . AMPERSAND appexp [ WITH TYPE TEST SEMI RPAREN RBRACK RANGLE MODULE MINUS LET IN EOF END DOLLAR COMMA COLON BARBAR BAR AMPERSAND ]
appexp -> appexp . repexp [ WITH UIDENT TYPE TILDE TEST STR SEMI RPAREN RBRACK RANGLE QUALIDENT PUT NSET MODULE MINUS LT LPAREN LIDENT LET LEQ LANGLE INTEGER IN HASH GT GRAMMAR GET GEQ EQUAL EOF END DOT DOLLAR DEQARROW DARROW CSET CREATE COMMA COLON CHOOSE CHARACTER CEX CANONIZE BOOLEAN BEGIN BARBAR BAR AMPERSAND ]
dotexp -> appexp . DOT appexp [ WITH TYPE TEST SEMI RPAREN RBRACK RANGLE MODULE MINUS LET IN EOF END DOT DOLLAR COMMA COLON BARBAR BAR ]
dotexp -> appexp . DOT rewriteexp [ WITH TYPE TEST SEMI RPAREN RBRACK RANGLE MODULE MINUS LET IN EOF END DOT DOLLAR COMMA COLON BARBAR BAR ]
equalexp -> appexp . EQUAL appexp [ WITH TYPE TEST SEMI RPAREN RBRACK RANGLE MODULE LET IN EOF END DOLLAR COMMA COLON BARBAR BAR ]
geqexp -> appexp . GEQ appexp [ WITH TYPE TEST SEMI RPAREN RBRACK RANGLE MODULE MINUS LET IN EOF END DOLLAR COMMA COLON BARBAR BAR ]
gtexp -> appexp . GT appexp [ WITH TYPE TEST SEMI RPAREN RBRACK RANGLE MODULE MINUS LET IN EOF END DOLLAR COMMA COLON BARBAR BAR ]
infixexp -> appexp . [ WITH TYPE TEST SEMI RPAREN RBRACK RANGLE MODULE MINUS LET IN EOF END DOLLAR COMMA COLON BARBAR BAR ]
lenscomponentexp -> appexp . GET appexp [ WITH TYPE TEST SEMI RPAREN RBRACK RANGLE MODULE MINUS LET IN EOF END DOLLAR COMMA COLON BARBAR BAR ]
lenscomponentexp -> appexp . PUT appexp INTO appexp [ WITH TYPE TEST SEMI RPAREN RBRACK RANGLE MODULE MINUS LET IN EOF END DOLLAR COMMA COLON BARBAR BAR ]
lenscomponentexp -> appexp . CREATE appexp [ WITH TYPE TEST SEMI RPAREN RBRACK RANGLE MODULE MINUS LET IN EOF END DOLLAR COMMA COLON BARBAR BAR ]
lenscomponentexp -> appexp . CANONIZE appexp [ WITH TYPE TEST SEMI RPAREN RBRACK RANGLE MODULE MINUS LET IN EOF END DOLLAR COMMA COLON BARBAR BAR ]
lenscomponentexp -> appexp . CHOOSE appexp [ WITH TYPE TEST SEMI RPAREN RBRACK RANGLE MODULE MINUS LET IN EOF END DOLLAR COMMA COLON BARBAR BAR ]
leqexp -> appexp . LEQ appexp [ WITH TYPE TEST SEMI RPAREN RBRACK RANGLE MODULE MINUS LET IN EOF END DOLLAR COMMA COLON BARBAR BAR ]
ltexp -> appexp . LT appexp [ WITH TYPE TEST SEMI RPAREN RBRACK RANGLE MODULE MINUS LET IN EOF END DOLLAR COMMA COLON BARBAR BAR ]
rewriteexp -> appexp . DARROW appexp [ WITH TYPE TEST SEMI RPAREN RBRACK RANGLE MODULE MINUS LET IN EOF END DOT DOLLAR COMMA COLON BARBAR BAR ]
rewriteexp -> appexp . DEQARROW appexp [ WITH TYPE TEST SEMI RPAREN RBRACK RANGLE MODULE MINUS LET IN EOF END DOT DOLLAR COMMA COLON BARBAR BAR ]
tildeexp -> appexp . TILDE appexp [ WITH TYPE TILDE TEST SEMI RPAREN RBRACK RANGLE MODULE MINUS LET IN EOF END DOLLAR COMMA COLON BARBAR BAR ]
-- On UIDENT shift to state 5
-- On TILDE shift to state 193
-- On STR shift to state 37
-- On QUALIDENT shift to state 6
-- On PUT shift to state 195
-- On NSET shift to state 43
-- On LT shift to state 199
-- On LPAREN shift to state 44
-- On LIDENT shift to state 7
-- On LEQ shift to state 201
-- On LANGLE shift to state 47
-- On INTEGER shift to state 49
-- On HASH shift to state 50
-- On GT shift to state 203
-- On GRAMMAR shift to state 75
-- On GET shift to state 205
-- On GEQ shift to state 207
-- On EQUAL shift to state 209
-- On DOT shift to state 211
-- On DEQARROW shift to state 172
-- On DARROW shift to state 174
-- On CSET shift to state 81
-- On CREATE shift to state 214
-- On CHOOSE shift to state 216
-- On CHARACTER shift to state 82
-- On CEX shift to state 83
-- On CANONIZE shift to state 218
-- On BOOLEAN shift to state 134
-- On BEGIN shift to state 135
-- On AMPERSAND shift to state 220
-- On tyexp shift to state 136
-- On repexp shift to state 161
-- On qid shift to state 158
-- On matchexp shift to state 159
-- On aexp shift to state 162
-- On WITH reduce production infixexp -> appexp 
-- On TYPE reduce production infixexp -> appexp 
-- On TEST reduce production infixexp -> appexp 
-- On SEMI reduce production infixexp -> appexp 
-- On RPAREN reduce production infixexp -> appexp 
-- On RBRACK reduce production infixexp -> appexp 
-- On RANGLE reduce production infixexp -> appexp 
-- On MODULE reduce production infixexp -> appexp 
-- On MINUS reduce production infixexp -> appexp 
-- On LET reduce production infixexp -> appexp 
-- On IN reduce production infixexp -> appexp 
-- On EOF reduce production infixexp -> appexp 
-- On END reduce production infixexp -> appexp 
-- On DOLLAR reduce production infixexp -> appexp 
-- On COMMA reduce production infixexp -> appexp 
-- On COLON reduce production infixexp -> appexp 
-- On BARBAR reduce production infixexp -> appexp 
-- On BAR reduce production infixexp -> appexp 

State 193:
tildeexp -> appexp TILDE . appexp [ WITH TYPE TILDE TEST SEMI RPAREN RBRACK RANGLE MODULE MINUS LET IN EQUAL EOF END DOLLAR COMMA COLON BARBAR BAR ]
-- On UIDENT shift to state 5
-- On SYNTH shift to state 36
-- On STR shift to state 37
-- On SQUASH shift to state 38
-- On QUALIDENT shift to state 6
-- On PROJECT shift to state 39
-- On PERM shift to state 40
-- On NSET shift to state 43
-- On LPAREN shift to state 44
-- On LIDENT shift to state 7
-- On LANGLE shift to state 47
-- On INTEGER shift to state 49
-- On HASH shift to state 50
-- On GRAMMAR shift to state 75
-- On CSET shift to state 81
-- On CHARACTER shift to state 82
-- On CEX shift to state 83
-- On BOOLEAN shift to state 134
-- On BEGIN shift to state 135
-- On tyexp shift to state 136
-- On repexp shift to state 157
-- On qid shift to state 158
-- On matchexp shift to state 159
-- On appexp shift to state 194
-- On aexp shift to state 162

State 194:
appexp -> appexp . repexp [ WITH UIDENT TYPE TILDE TEST STR SEMI RPAREN RBRACK RANGLE QUALIDENT NSET MODULE MINUS LPAREN LIDENT LET LANGLE INTEGER IN HASH GRAMMAR EQUAL EOF END DOLLAR CSET COMMA COLON CHARACTER CEX BOOLEAN BEGIN BARBAR BAR ]
tildeexp -> appexp TILDE appexp . [ WITH TYPE TILDE TEST SEMI RPAREN RBRACK RANGLE MODULE MINUS LET IN EQUAL EOF END DOLLAR COMMA COLON BARBAR BAR ]
-- On UIDENT shift to state 5
-- On STR shift to state 37
-- On QUALIDENT shift to state 6
-- On NSET shift to state 43
-- On LPAREN shift to state 44
-- On LIDENT shift to state 7
-- On LANGLE shift to state 47
-- On INTEGER shift to state 49
-- On HASH shift to state 50
-- On GRAMMAR shift to state 75
-- On CSET shift to state 81
-- On CHARACTER shift to state 82
-- On CEX shift to state 83
-- On BOOLEAN shift to state 134
-- On BEGIN shift to state 135
-- On tyexp shift to state 136
-- On repexp shift to state 161
-- On qid shift to state 158
-- On matchexp shift to state 159
-- On aexp shift to state 162
-- On WITH reduce production tildeexp -> appexp TILDE appexp 
-- On TYPE reduce production tildeexp -> appexp TILDE appexp 
-- On TILDE reduce production tildeexp -> appexp TILDE appexp 
-- On TEST reduce production tildeexp -> appexp TILDE appexp 
-- On SEMI reduce production tildeexp -> appexp TILDE appexp 
-- On RPAREN reduce production tildeexp -> appexp TILDE appexp 
-- On RBRACK reduce production tildeexp -> appexp TILDE appexp 
-- On RANGLE reduce production tildeexp -> appexp TILDE appexp 
-- On MODULE reduce production tildeexp -> appexp TILDE appexp 
-- On MINUS reduce production tildeexp -> appexp TILDE appexp 
-- On LET reduce production tildeexp -> appexp TILDE appexp 
-- On IN reduce production tildeexp -> appexp TILDE appexp 
-- On EQUAL reduce production tildeexp -> appexp TILDE appexp 
-- On EOF reduce production tildeexp -> appexp TILDE appexp 
-- On END reduce production tildeexp -> appexp TILDE appexp 
-- On DOLLAR reduce production tildeexp -> appexp TILDE appexp 
-- On COMMA reduce production tildeexp -> appexp TILDE appexp 
-- On COLON reduce production tildeexp -> appexp TILDE appexp 
-- On BARBAR reduce production tildeexp -> appexp TILDE appexp 
-- On BAR reduce production tildeexp -> appexp TILDE appexp 

State 195:
lenscomponentexp -> appexp PUT . appexp INTO appexp [ WITH TYPE TEST SEMI RPAREN RBRACK RANGLE MODULE MINUS LET IN EQUAL EOF END DOLLAR COMMA COLON BARBAR BAR ]
-- On UIDENT shift to state 5
-- On SYNTH shift to state 36
-- On STR shift to state 37
-- On SQUASH shift to state 38
-- On QUALIDENT shift to state 6
-- On PROJECT shift to state 39
-- On PERM shift to state 40
-- On NSET shift to state 43
-- On LPAREN shift to state 44
-- On LIDENT shift to state 7
-- On LANGLE shift to state 47
-- On INTEGER shift to state 49
-- On HASH shift to state 50
-- On GRAMMAR shift to state 75
-- On CSET shift to state 81
-- On CHARACTER shift to state 82
-- On CEX shift to state 83
-- On BOOLEAN shift to state 134
-- On BEGIN shift to state 135
-- On tyexp shift to state 136
-- On repexp shift to state 157
-- On qid shift to state 158
-- On matchexp shift to state 159
-- On appexp shift to state 196
-- On aexp shift to state 162

State 196:
appexp -> appexp . repexp [ UIDENT STR QUALIDENT NSET LPAREN LIDENT LANGLE INTO INTEGER HASH GRAMMAR CSET CHARACTER CEX BOOLEAN BEGIN ]
lenscomponentexp -> appexp PUT appexp . INTO appexp [ WITH TYPE TEST SEMI RPAREN RBRACK RANGLE MODULE MINUS LET IN EQUAL EOF END DOLLAR COMMA COLON BARBAR BAR ]
-- On UIDENT shift to state 5
-- On STR shift to state 37
-- On QUALIDENT shift to state 6
-- On NSET shift to state 43
-- On LPAREN shift to state 44
-- On LIDENT shift to state 7
-- On LANGLE shift to state 47
-- On INTO shift to state 197
-- On INTEGER shift to state 49
-- On HASH shift to state 50
-- On GRAMMAR shift to state 75
-- On CSET shift to state 81
-- On CHARACTER shift to state 82
-- On CEX shift to state 83
-- On BOOLEAN shift to state 134
-- On BEGIN shift to state 135
-- On tyexp shift to state 136
-- On repexp shift to state 161
-- On qid shift to state 158
-- On matchexp shift to state 159
-- On aexp shift to state 162

State 197:
lenscomponentexp -> appexp PUT appexp INTO . appexp [ WITH TYPE TEST SEMI RPAREN RBRACK RANGLE MODULE MINUS LET IN EQUAL EOF END DOLLAR COMMA COLON BARBAR BAR ]
-- On UIDENT shift to state 5
-- On SYNTH shift to state 36
-- On STR shift to state 37
-- On SQUASH shift to state 38
-- On QUALIDENT shift to state 6
-- On PROJECT shift to state 39
-- On PERM shift to state 40
-- On NSET shift to state 43
-- On LPAREN shift to state 44
-- On LIDENT shift to state 7
-- On LANGLE shift to state 47
-- On INTEGER shift to state 49
-- On HASH shift to state 50
-- On GRAMMAR shift to state 75
-- On CSET shift to state 81
-- On CHARACTER shift to state 82
-- On CEX shift to state 83
-- On BOOLEAN shift to state 134
-- On BEGIN shift to state 135
-- On tyexp shift to state 136
-- On repexp shift to state 157
-- On qid shift to state 158
-- On matchexp shift to state 159
-- On appexp shift to state 198
-- On aexp shift to state 162

State 198:
appexp -> appexp . repexp [ WITH UIDENT TYPE TEST STR SEMI RPAREN RBRACK RANGLE QUALIDENT NSET MODULE MINUS LPAREN LIDENT LET LANGLE INTEGER IN HASH GRAMMAR EQUAL EOF END DOLLAR CSET COMMA COLON CHARACTER CEX BOOLEAN BEGIN BARBAR BAR ]
lenscomponentexp -> appexp PUT appexp INTO appexp . [ WITH TYPE TEST SEMI RPAREN RBRACK RANGLE MODULE MINUS LET IN EQUAL EOF END DOLLAR COMMA COLON BARBAR BAR ]
-- On UIDENT shift to state 5
-- On STR shift to state 37
-- On QUALIDENT shift to state 6
-- On NSET shift to state 43
-- On LPAREN shift to state 44
-- On LIDENT shift to state 7
-- On LANGLE shift to state 47
-- On INTEGER shift to state 49
-- On HASH shift to state 50
-- On GRAMMAR shift to state 75
-- On CSET shift to state 81
-- On CHARACTER shift to state 82
-- On CEX shift to state 83
-- On BOOLEAN shift to state 134
-- On BEGIN shift to state 135
-- On tyexp shift to state 136
-- On repexp shift to state 161
-- On qid shift to state 158
-- On matchexp shift to state 159
-- On aexp shift to state 162
-- On WITH reduce production lenscomponentexp -> appexp PUT appexp INTO appexp 
-- On TYPE reduce production lenscomponentexp -> appexp PUT appexp INTO appexp 
-- On TEST reduce production lenscomponentexp -> appexp PUT appexp INTO appexp 
-- On SEMI reduce production lenscomponentexp -> appexp PUT appexp INTO appexp 
-- On RPAREN reduce production lenscomponentexp -> appexp PUT appexp INTO appexp 
-- On RBRACK reduce production lenscomponentexp -> appexp PUT appexp INTO appexp 
-- On RANGLE reduce production lenscomponentexp -> appexp PUT appexp INTO appexp 
-- On MODULE reduce production lenscomponentexp -> appexp PUT appexp INTO appexp 
-- On MINUS reduce production lenscomponentexp -> appexp PUT appexp INTO appexp 
-- On LET reduce production lenscomponentexp -> appexp PUT appexp INTO appexp 
-- On IN reduce production lenscomponentexp -> appexp PUT appexp INTO appexp 
-- On EQUAL reduce production lenscomponentexp -> appexp PUT appexp INTO appexp 
-- On EOF reduce production lenscomponentexp -> appexp PUT appexp INTO appexp 
-- On END reduce production lenscomponentexp -> appexp PUT appexp INTO appexp 
-- On DOLLAR reduce production lenscomponentexp -> appexp PUT appexp INTO appexp 
-- On COMMA reduce production lenscomponentexp -> appexp PUT appexp INTO appexp 
-- On COLON reduce production lenscomponentexp -> appexp PUT appexp INTO appexp 
-- On BARBAR reduce production lenscomponentexp -> appexp PUT appexp INTO appexp 
-- On BAR reduce production lenscomponentexp -> appexp PUT appexp INTO appexp 

State 199:
ltexp -> appexp LT . appexp [ WITH TYPE TEST SEMI RPAREN RBRACK RANGLE MODULE MINUS LET IN EQUAL EOF END DOLLAR COMMA COLON BARBAR BAR ]
-- On UIDENT shift to state 5
-- On SYNTH shift to state 36
-- On STR shift to state 37
-- On SQUASH shift to state 38
-- On QUALIDENT shift to state 6
-- On PROJECT shift to state 39
-- On PERM shift to state 40
-- On NSET shift to state 43
-- On LPAREN shift to state 44
-- On LIDENT shift to state 7
-- On LANGLE shift to state 47
-- On INTEGER shift to state 49
-- On HASH shift to state 50
-- On GRAMMAR shift to state 75
-- On CSET shift to state 81
-- On CHARACTER shift to state 82
-- On CEX shift to state 83
-- On BOOLEAN shift to state 134
-- On BEGIN shift to state 135
-- On tyexp shift to state 136
-- On repexp shift to state 157
-- On qid shift to state 158
-- On matchexp shift to state 159
-- On appexp shift to state 200
-- On aexp shift to state 162

State 200:
appexp -> appexp . repexp [ WITH UIDENT TYPE TEST STR SEMI RPAREN RBRACK RANGLE QUALIDENT NSET MODULE MINUS LPAREN LIDENT LET LANGLE INTEGER IN HASH GRAMMAR EQUAL EOF END DOLLAR CSET COMMA COLON CHARACTER CEX BOOLEAN BEGIN BARBAR BAR ]
ltexp -> appexp LT appexp . [ WITH TYPE TEST SEMI RPAREN RBRACK RANGLE MODULE MINUS LET IN EQUAL EOF END DOLLAR COMMA COLON BARBAR BAR ]
-- On UIDENT shift to state 5
-- On STR shift to state 37
-- On QUALIDENT shift to state 6
-- On NSET shift to state 43
-- On LPAREN shift to state 44
-- On LIDENT shift to state 7
-- On LANGLE shift to state 47
-- On INTEGER shift to state 49
-- On HASH shift to state 50
-- On GRAMMAR shift to state 75
-- On CSET shift to state 81
-- On CHARACTER shift to state 82
-- On CEX shift to state 83
-- On BOOLEAN shift to state 134
-- On BEGIN shift to state 135
-- On tyexp shift to state 136
-- On repexp shift to state 161
-- On qid shift to state 158
-- On matchexp shift to state 159
-- On aexp shift to state 162
-- On WITH reduce production ltexp -> appexp LT appexp 
-- On TYPE reduce production ltexp -> appexp LT appexp 
-- On TEST reduce production ltexp -> appexp LT appexp 
-- On SEMI reduce production ltexp -> appexp LT appexp 
-- On RPAREN reduce production ltexp -> appexp LT appexp 
-- On RBRACK reduce production ltexp -> appexp LT appexp 
-- On RANGLE reduce production ltexp -> appexp LT appexp 
-- On MODULE reduce production ltexp -> appexp LT appexp 
-- On MINUS reduce production ltexp -> appexp LT appexp 
-- On LET reduce production ltexp -> appexp LT appexp 
-- On IN reduce production ltexp -> appexp LT appexp 
-- On EQUAL reduce production ltexp -> appexp LT appexp 
-- On EOF reduce production ltexp -> appexp LT appexp 
-- On END reduce production ltexp -> appexp LT appexp 
-- On DOLLAR reduce production ltexp -> appexp LT appexp 
-- On COMMA reduce production ltexp -> appexp LT appexp 
-- On COLON reduce production ltexp -> appexp LT appexp 
-- On BARBAR reduce production ltexp -> appexp LT appexp 
-- On BAR reduce production ltexp -> appexp LT appexp 

State 201:
leqexp -> appexp LEQ . appexp [ WITH TYPE TEST SEMI RPAREN RBRACK RANGLE MODULE MINUS LET IN EQUAL EOF END DOLLAR COMMA COLON BARBAR BAR ]
-- On UIDENT shift to state 5
-- On SYNTH shift to state 36
-- On STR shift to state 37
-- On SQUASH shift to state 38
-- On QUALIDENT shift to state 6
-- On PROJECT shift to state 39
-- On PERM shift to state 40
-- On NSET shift to state 43
-- On LPAREN shift to state 44
-- On LIDENT shift to state 7
-- On LANGLE shift to state 47
-- On INTEGER shift to state 49
-- On HASH shift to state 50
-- On GRAMMAR shift to state 75
-- On CSET shift to state 81
-- On CHARACTER shift to state 82
-- On CEX shift to state 83
-- On BOOLEAN shift to state 134
-- On BEGIN shift to state 135
-- On tyexp shift to state 136
-- On repexp shift to state 157
-- On qid shift to state 158
-- On matchexp shift to state 159
-- On appexp shift to state 202
-- On aexp shift to state 162

State 202:
appexp -> appexp . repexp [ WITH UIDENT TYPE TEST STR SEMI RPAREN RBRACK RANGLE QUALIDENT NSET MODULE MINUS LPAREN LIDENT LET LANGLE INTEGER IN HASH GRAMMAR EQUAL EOF END DOLLAR CSET COMMA COLON CHARACTER CEX BOOLEAN BEGIN BARBAR BAR ]
leqexp -> appexp LEQ appexp . [ WITH TYPE TEST SEMI RPAREN RBRACK RANGLE MODULE MINUS LET IN EQUAL EOF END DOLLAR COMMA COLON BARBAR BAR ]
-- On UIDENT shift to state 5
-- On STR shift to state 37
-- On QUALIDENT shift to state 6
-- On NSET shift to state 43
-- On LPAREN shift to state 44
-- On LIDENT shift to state 7
-- On LANGLE shift to state 47
-- On INTEGER shift to state 49
-- On HASH shift to state 50
-- On GRAMMAR shift to state 75
-- On CSET shift to state 81
-- On CHARACTER shift to state 82
-- On CEX shift to state 83
-- On BOOLEAN shift to state 134
-- On BEGIN shift to state 135
-- On tyexp shift to state 136
-- On repexp shift to state 161
-- On qid shift to state 158
-- On matchexp shift to state 159
-- On aexp shift to state 162
-- On WITH reduce production leqexp -> appexp LEQ appexp 
-- On TYPE reduce production leqexp -> appexp LEQ appexp 
-- On TEST reduce production leqexp -> appexp LEQ appexp 
-- On SEMI reduce production leqexp -> appexp LEQ appexp 
-- On RPAREN reduce production leqexp -> appexp LEQ appexp 
-- On RBRACK reduce production leqexp -> appexp LEQ appexp 
-- On RANGLE reduce production leqexp -> appexp LEQ appexp 
-- On MODULE reduce production leqexp -> appexp LEQ appexp 
-- On MINUS reduce production leqexp -> appexp LEQ appexp 
-- On LET reduce production leqexp -> appexp LEQ appexp 
-- On IN reduce production leqexp -> appexp LEQ appexp 
-- On EQUAL reduce production leqexp -> appexp LEQ appexp 
-- On EOF reduce production leqexp -> appexp LEQ appexp 
-- On END reduce production leqexp -> appexp LEQ appexp 
-- On DOLLAR reduce production leqexp -> appexp LEQ appexp 
-- On COMMA reduce production leqexp -> appexp LEQ appexp 
-- On COLON reduce production leqexp -> appexp LEQ appexp 
-- On BARBAR reduce production leqexp -> appexp LEQ appexp 
-- On BAR reduce production leqexp -> appexp LEQ appexp 

State 203:
gtexp -> appexp GT . appexp [ WITH TYPE TEST SEMI RPAREN RBRACK RANGLE MODULE MINUS LET IN EQUAL EOF END DOLLAR COMMA COLON BARBAR BAR ]
-- On UIDENT shift to state 5
-- On SYNTH shift to state 36
-- On STR shift to state 37
-- On SQUASH shift to state 38
-- On QUALIDENT shift to state 6
-- On PROJECT shift to state 39
-- On PERM shift to state 40
-- On NSET shift to state 43
-- On LPAREN shift to state 44
-- On LIDENT shift to state 7
-- On LANGLE shift to state 47
-- On INTEGER shift to state 49
-- On HASH shift to state 50
-- On GRAMMAR shift to state 75
-- On CSET shift to state 81
-- On CHARACTER shift to state 82
-- On CEX shift to state 83
-- On BOOLEAN shift to state 134
-- On BEGIN shift to state 135
-- On tyexp shift to state 136
-- On repexp shift to state 157
-- On qid shift to state 158
-- On matchexp shift to state 159
-- On appexp shift to state 204
-- On aexp shift to state 162

State 204:
appexp -> appexp . repexp [ WITH UIDENT TYPE TEST STR SEMI RPAREN RBRACK RANGLE QUALIDENT NSET MODULE MINUS LPAREN LIDENT LET LANGLE INTEGER IN HASH GRAMMAR EQUAL EOF END DOLLAR CSET COMMA COLON CHARACTER CEX BOOLEAN BEGIN BARBAR BAR ]
gtexp -> appexp GT appexp . [ WITH TYPE TEST SEMI RPAREN RBRACK RANGLE MODULE MINUS LET IN EQUAL EOF END DOLLAR COMMA COLON BARBAR BAR ]
-- On UIDENT shift to state 5
-- On STR shift to state 37
-- On QUALIDENT shift to state 6
-- On NSET shift to state 43
-- On LPAREN shift to state 44
-- On LIDENT shift to state 7
-- On LANGLE shift to state 47
-- On INTEGER shift to state 49
-- On HASH shift to state 50
-- On GRAMMAR shift to state 75
-- On CSET shift to state 81
-- On CHARACTER shift to state 82
-- On CEX shift to state 83
-- On BOOLEAN shift to state 134
-- On BEGIN shift to state 135
-- On tyexp shift to state 136
-- On repexp shift to state 161
-- On qid shift to state 158
-- On matchexp shift to state 159
-- On aexp shift to state 162
-- On WITH reduce production gtexp -> appexp GT appexp 
-- On TYPE reduce production gtexp -> appexp GT appexp 
-- On TEST reduce production gtexp -> appexp GT appexp 
-- On SEMI reduce production gtexp -> appexp GT appexp 
-- On RPAREN reduce production gtexp -> appexp GT appexp 
-- On RBRACK reduce production gtexp -> appexp GT appexp 
-- On RANGLE reduce production gtexp -> appexp GT appexp 
-- On MODULE reduce production gtexp -> appexp GT appexp 
-- On MINUS reduce production gtexp -> appexp GT appexp 
-- On LET reduce production gtexp -> appexp GT appexp 
-- On IN reduce production gtexp -> appexp GT appexp 
-- On EQUAL reduce production gtexp -> appexp GT appexp 
-- On EOF reduce production gtexp -> appexp GT appexp 
-- On END reduce production gtexp -> appexp GT appexp 
-- On DOLLAR reduce production gtexp -> appexp GT appexp 
-- On COMMA reduce production gtexp -> appexp GT appexp 
-- On COLON reduce production gtexp -> appexp GT appexp 
-- On BARBAR reduce production gtexp -> appexp GT appexp 
-- On BAR reduce production gtexp -> appexp GT appexp 

State 205:
lenscomponentexp -> appexp GET . appexp [ WITH TYPE TEST SEMI RPAREN RBRACK RANGLE MODULE MINUS LET IN EQUAL EOF END DOLLAR COMMA COLON BARBAR BAR ]
-- On UIDENT shift to state 5
-- On SYNTH shift to state 36
-- On STR shift to state 37
-- On SQUASH shift to state 38
-- On QUALIDENT shift to state 6
-- On PROJECT shift to state 39
-- On PERM shift to state 40
-- On NSET shift to state 43
-- On LPAREN shift to state 44
-- On LIDENT shift to state 7
-- On LANGLE shift to state 47
-- On INTEGER shift to state 49
-- On HASH shift to state 50
-- On GRAMMAR shift to state 75
-- On CSET shift to state 81
-- On CHARACTER shift to state 82
-- On CEX shift to state 83
-- On BOOLEAN shift to state 134
-- On BEGIN shift to state 135
-- On tyexp shift to state 136
-- On repexp shift to state 157
-- On qid shift to state 158
-- On matchexp shift to state 159
-- On appexp shift to state 206
-- On aexp shift to state 162

State 206:
appexp -> appexp . repexp [ WITH UIDENT TYPE TEST STR SEMI RPAREN RBRACK RANGLE QUALIDENT NSET MODULE MINUS LPAREN LIDENT LET LANGLE INTEGER IN HASH GRAMMAR EQUAL EOF END DOLLAR CSET COMMA COLON CHARACTER CEX BOOLEAN BEGIN BARBAR BAR ]
lenscomponentexp -> appexp GET appexp . [ WITH TYPE TEST SEMI RPAREN RBRACK RANGLE MODULE MINUS LET IN EQUAL EOF END DOLLAR COMMA COLON BARBAR BAR ]
-- On UIDENT shift to state 5
-- On STR shift to state 37
-- On QUALIDENT shift to state 6
-- On NSET shift to state 43
-- On LPAREN shift to state 44
-- On LIDENT shift to state 7
-- On LANGLE shift to state 47
-- On INTEGER shift to state 49
-- On HASH shift to state 50
-- On GRAMMAR shift to state 75
-- On CSET shift to state 81
-- On CHARACTER shift to state 82
-- On CEX shift to state 83
-- On BOOLEAN shift to state 134
-- On BEGIN shift to state 135
-- On tyexp shift to state 136
-- On repexp shift to state 161
-- On qid shift to state 158
-- On matchexp shift to state 159
-- On aexp shift to state 162
-- On WITH reduce production lenscomponentexp -> appexp GET appexp 
-- On TYPE reduce production lenscomponentexp -> appexp GET appexp 
-- On TEST reduce production lenscomponentexp -> appexp GET appexp 
-- On SEMI reduce production lenscomponentexp -> appexp GET appexp 
-- On RPAREN reduce production lenscomponentexp -> appexp GET appexp 
-- On RBRACK reduce production lenscomponentexp -> appexp GET appexp 
-- On RANGLE reduce production lenscomponentexp -> appexp GET appexp 
-- On MODULE reduce production lenscomponentexp -> appexp GET appexp 
-- On MINUS reduce production lenscomponentexp -> appexp GET appexp 
-- On LET reduce production lenscomponentexp -> appexp GET appexp 
-- On IN reduce production lenscomponentexp -> appexp GET appexp 
-- On EQUAL reduce production lenscomponentexp -> appexp GET appexp 
-- On EOF reduce production lenscomponentexp -> appexp GET appexp 
-- On END reduce production lenscomponentexp -> appexp GET appexp 
-- On DOLLAR reduce production lenscomponentexp -> appexp GET appexp 
-- On COMMA reduce production lenscomponentexp -> appexp GET appexp 
-- On COLON reduce production lenscomponentexp -> appexp GET appexp 
-- On BARBAR reduce production lenscomponentexp -> appexp GET appexp 
-- On BAR reduce production lenscomponentexp -> appexp GET appexp 

State 207:
geqexp -> appexp GEQ . appexp [ WITH TYPE TEST SEMI RPAREN RBRACK RANGLE MODULE MINUS LET IN EQUAL EOF END DOLLAR COMMA COLON BARBAR BAR ]
-- On UIDENT shift to state 5
-- On SYNTH shift to state 36
-- On STR shift to state 37
-- On SQUASH shift to state 38
-- On QUALIDENT shift to state 6
-- On PROJECT shift to state 39
-- On PERM shift to state 40
-- On NSET shift to state 43
-- On LPAREN shift to state 44
-- On LIDENT shift to state 7
-- On LANGLE shift to state 47
-- On INTEGER shift to state 49
-- On HASH shift to state 50
-- On GRAMMAR shift to state 75
-- On CSET shift to state 81
-- On CHARACTER shift to state 82
-- On CEX shift to state 83
-- On BOOLEAN shift to state 134
-- On BEGIN shift to state 135
-- On tyexp shift to state 136
-- On repexp shift to state 157
-- On qid shift to state 158
-- On matchexp shift to state 159
-- On appexp shift to state 208
-- On aexp shift to state 162

State 208:
appexp -> appexp . repexp [ WITH UIDENT TYPE TEST STR SEMI RPAREN RBRACK RANGLE QUALIDENT NSET MODULE MINUS LPAREN LIDENT LET LANGLE INTEGER IN HASH GRAMMAR EQUAL EOF END DOLLAR CSET COMMA COLON CHARACTER CEX BOOLEAN BEGIN BARBAR BAR ]
geqexp -> appexp GEQ appexp . [ WITH TYPE TEST SEMI RPAREN RBRACK RANGLE MODULE MINUS LET IN EQUAL EOF END DOLLAR COMMA COLON BARBAR BAR ]
-- On UIDENT shift to state 5
-- On STR shift to state 37
-- On QUALIDENT shift to state 6
-- On NSET shift to state 43
-- On LPAREN shift to state 44
-- On LIDENT shift to state 7
-- On LANGLE shift to state 47
-- On INTEGER shift to state 49
-- On HASH shift to state 50
-- On GRAMMAR shift to state 75
-- On CSET shift to state 81
-- On CHARACTER shift to state 82
-- On CEX shift to state 83
-- On BOOLEAN shift to state 134
-- On BEGIN shift to state 135
-- On tyexp shift to state 136
-- On repexp shift to state 161
-- On qid shift to state 158
-- On matchexp shift to state 159
-- On aexp shift to state 162
-- On WITH reduce production geqexp -> appexp GEQ appexp 
-- On TYPE reduce production geqexp -> appexp GEQ appexp 
-- On TEST reduce production geqexp -> appexp GEQ appexp 
-- On SEMI reduce production geqexp -> appexp GEQ appexp 
-- On RPAREN reduce production geqexp -> appexp GEQ appexp 
-- On RBRACK reduce production geqexp -> appexp GEQ appexp 
-- On RANGLE reduce production geqexp -> appexp GEQ appexp 
-- On MODULE reduce production geqexp -> appexp GEQ appexp 
-- On MINUS reduce production geqexp -> appexp GEQ appexp 
-- On LET reduce production geqexp -> appexp GEQ appexp 
-- On IN reduce production geqexp -> appexp GEQ appexp 
-- On EQUAL reduce production geqexp -> appexp GEQ appexp 
-- On EOF reduce production geqexp -> appexp GEQ appexp 
-- On END reduce production geqexp -> appexp GEQ appexp 
-- On DOLLAR reduce production geqexp -> appexp GEQ appexp 
-- On COMMA reduce production geqexp -> appexp GEQ appexp 
-- On COLON reduce production geqexp -> appexp GEQ appexp 
-- On BARBAR reduce production geqexp -> appexp GEQ appexp 
-- On BAR reduce production geqexp -> appexp GEQ appexp 

State 209:
equalexp -> appexp EQUAL . appexp [ WITH TYPE TEST SEMI RPAREN RBRACK RANGLE MODULE LET IN EOF END DOLLAR COMMA COLON BARBAR BAR ]
-- On UIDENT shift to state 5
-- On SYNTH shift to state 36
-- On STR shift to state 37
-- On SQUASH shift to state 38
-- On QUALIDENT shift to state 6
-- On PROJECT shift to state 39
-- On PERM shift to state 40
-- On NSET shift to state 43
-- On LPAREN shift to state 44
-- On LIDENT shift to state 7
-- On LANGLE shift to state 47
-- On INTEGER shift to state 49
-- On HASH shift to state 50
-- On GRAMMAR shift to state 75
-- On CSET shift to state 81
-- On CHARACTER shift to state 82
-- On CEX shift to state 83
-- On BOOLEAN shift to state 134
-- On BEGIN shift to state 135
-- On tyexp shift to state 136
-- On repexp shift to state 157
-- On qid shift to state 158
-- On matchexp shift to state 159
-- On appexp shift to state 210
-- On aexp shift to state 162

State 210:
appexp -> appexp . repexp [ WITH UIDENT TYPE TEST STR SEMI RPAREN RBRACK RANGLE QUALIDENT NSET MODULE LPAREN LIDENT LET LANGLE INTEGER IN HASH GRAMMAR EOF END DOLLAR CSET COMMA COLON CHARACTER CEX BOOLEAN BEGIN BARBAR BAR ]
equalexp -> appexp EQUAL appexp . [ WITH TYPE TEST SEMI RPAREN RBRACK RANGLE MODULE LET IN EOF END DOLLAR COMMA COLON BARBAR BAR ]
-- On UIDENT shift to state 5
-- On STR shift to state 37
-- On QUALIDENT shift to state 6
-- On NSET shift to state 43
-- On LPAREN shift to state 44
-- On LIDENT shift to state 7
-- On LANGLE shift to state 47
-- On INTEGER shift to state 49
-- On HASH shift to state 50
-- On GRAMMAR shift to state 75
-- On CSET shift to state 81
-- On CHARACTER shift to state 82
-- On CEX shift to state 83
-- On BOOLEAN shift to state 134
-- On BEGIN shift to state 135
-- On tyexp shift to state 136
-- On repexp shift to state 161
-- On qid shift to state 158
-- On matchexp shift to state 159
-- On aexp shift to state 162
-- On WITH reduce production equalexp -> appexp EQUAL appexp 
-- On TYPE reduce production equalexp -> appexp EQUAL appexp 
-- On TEST reduce production equalexp -> appexp EQUAL appexp 
-- On SEMI reduce production equalexp -> appexp EQUAL appexp 
-- On RPAREN reduce production equalexp -> appexp EQUAL appexp 
-- On RBRACK reduce production equalexp -> appexp EQUAL appexp 
-- On RANGLE reduce production equalexp -> appexp EQUAL appexp 
-- On MODULE reduce production equalexp -> appexp EQUAL appexp 
-- On LET reduce production equalexp -> appexp EQUAL appexp 
-- On IN reduce production equalexp -> appexp EQUAL appexp 
-- On EOF reduce production equalexp -> appexp EQUAL appexp 
-- On END reduce production equalexp -> appexp EQUAL appexp 
-- On DOLLAR reduce production equalexp -> appexp EQUAL appexp 
-- On COMMA reduce production equalexp -> appexp EQUAL appexp 
-- On COLON reduce production equalexp -> appexp EQUAL appexp 
-- On BARBAR reduce production equalexp -> appexp EQUAL appexp 
-- On BAR reduce production equalexp -> appexp EQUAL appexp 

State 211:
dotexp -> appexp DOT . appexp [ WITH TYPE TEST SEMI RPAREN RBRACK RANGLE MODULE MINUS LET IN EQUAL EOF END DOT DOLLAR COMMA COLON BARBAR BAR ]
dotexp -> appexp DOT . rewriteexp [ WITH TYPE TEST SEMI RPAREN RBRACK RANGLE MODULE MINUS LET IN EQUAL EOF END DOT DOLLAR COMMA COLON BARBAR BAR ]
-- On UIDENT shift to state 5
-- On SYNTH shift to state 36
-- On STR shift to state 37
-- On SQUASH shift to state 38
-- On QUALIDENT shift to state 6
-- On PROJECT shift to state 39
-- On PERM shift to state 40
-- On NSET shift to state 43
-- On LPAREN shift to state 44
-- On LIDENT shift to state 7
-- On LANGLE shift to state 47
-- On INTEGER shift to state 49
-- On HASH shift to state 50
-- On GRAMMAR shift to state 75
-- On CSET shift to state 81
-- On CHARACTER shift to state 82
-- On CEX shift to state 83
-- On BOOLEAN shift to state 134
-- On BEGIN shift to state 135
-- On tyexp shift to state 136
-- On rewriteexp shift to state 212
-- On repexp shift to state 157
-- On qid shift to state 158
-- On matchexp shift to state 159
-- On appexp shift to state 213
-- On aexp shift to state 162

State 212:
dotexp -> appexp DOT rewriteexp . [ WITH TYPE TEST SEMI RPAREN RBRACK RANGLE MODULE MINUS LET IN EQUAL EOF END DOT DOLLAR COMMA COLON BARBAR BAR ]
-- On WITH reduce production dotexp -> appexp DOT rewriteexp 
-- On TYPE reduce production dotexp -> appexp DOT rewriteexp 
-- On TEST reduce production dotexp -> appexp DOT rewriteexp 
-- On SEMI reduce production dotexp -> appexp DOT rewriteexp 
-- On RPAREN reduce production dotexp -> appexp DOT rewriteexp 
-- On RBRACK reduce production dotexp -> appexp DOT rewriteexp 
-- On RANGLE reduce production dotexp -> appexp DOT rewriteexp 
-- On MODULE reduce production dotexp -> appexp DOT rewriteexp 
-- On MINUS reduce production dotexp -> appexp DOT rewriteexp 
-- On LET reduce production dotexp -> appexp DOT rewriteexp 
-- On IN reduce production dotexp -> appexp DOT rewriteexp 
-- On EQUAL reduce production dotexp -> appexp DOT rewriteexp 
-- On EOF reduce production dotexp -> appexp DOT rewriteexp 
-- On END reduce production dotexp -> appexp DOT rewriteexp 
-- On DOT reduce production dotexp -> appexp DOT rewriteexp 
-- On DOLLAR reduce production dotexp -> appexp DOT rewriteexp 
-- On COMMA reduce production dotexp -> appexp DOT rewriteexp 
-- On COLON reduce production dotexp -> appexp DOT rewriteexp 
-- On BARBAR reduce production dotexp -> appexp DOT rewriteexp 
-- On BAR reduce production dotexp -> appexp DOT rewriteexp 

State 213:
appexp -> appexp . repexp [ WITH UIDENT TYPE TEST STR SEMI RPAREN RBRACK RANGLE QUALIDENT NSET MODULE MINUS LPAREN LIDENT LET LANGLE INTEGER IN HASH GRAMMAR EQUAL EOF END DOT DOLLAR DEQARROW DARROW CSET COMMA COLON CHARACTER CEX BOOLEAN BEGIN BARBAR BAR ]
dotexp -> appexp DOT appexp . [ WITH TYPE TEST SEMI RPAREN RBRACK RANGLE MODULE MINUS LET IN EQUAL EOF END DOT DOLLAR COMMA COLON BARBAR BAR ]
rewriteexp -> appexp . DARROW appexp [ WITH TYPE TEST SEMI RPAREN RBRACK RANGLE MODULE MINUS LET IN EQUAL EOF END DOT DOLLAR COMMA COLON BARBAR BAR ]
rewriteexp -> appexp . DEQARROW appexp [ WITH TYPE TEST SEMI RPAREN RBRACK RANGLE MODULE MINUS LET IN EQUAL EOF END DOT DOLLAR COMMA COLON BARBAR BAR ]
-- On UIDENT shift to state 5
-- On STR shift to state 37
-- On QUALIDENT shift to state 6
-- On NSET shift to state 43
-- On LPAREN shift to state 44
-- On LIDENT shift to state 7
-- On LANGLE shift to state 47
-- On INTEGER shift to state 49
-- On HASH shift to state 50
-- On GRAMMAR shift to state 75
-- On DEQARROW shift to state 172
-- On DARROW shift to state 174
-- On CSET shift to state 81
-- On CHARACTER shift to state 82
-- On CEX shift to state 83
-- On BOOLEAN shift to state 134
-- On BEGIN shift to state 135
-- On tyexp shift to state 136
-- On repexp shift to state 161
-- On qid shift to state 158
-- On matchexp shift to state 159
-- On aexp shift to state 162
-- On WITH reduce production dotexp -> appexp DOT appexp 
-- On TYPE reduce production dotexp -> appexp DOT appexp 
-- On TEST reduce production dotexp -> appexp DOT appexp 
-- On SEMI reduce production dotexp -> appexp DOT appexp 
-- On RPAREN reduce production dotexp -> appexp DOT appexp 
-- On RBRACK reduce production dotexp -> appexp DOT appexp 
-- On RANGLE reduce production dotexp -> appexp DOT appexp 
-- On MODULE reduce production dotexp -> appexp DOT appexp 
-- On MINUS reduce production dotexp -> appexp DOT appexp 
-- On LET reduce production dotexp -> appexp DOT appexp 
-- On IN reduce production dotexp -> appexp DOT appexp 
-- On EQUAL reduce production dotexp -> appexp DOT appexp 
-- On EOF reduce production dotexp -> appexp DOT appexp 
-- On END reduce production dotexp -> appexp DOT appexp 
-- On DOT reduce production dotexp -> appexp DOT appexp 
-- On DOLLAR reduce production dotexp -> appexp DOT appexp 
-- On COMMA reduce production dotexp -> appexp DOT appexp 
-- On COLON reduce production dotexp -> appexp DOT appexp 
-- On BARBAR reduce production dotexp -> appexp DOT appexp 
-- On BAR reduce production dotexp -> appexp DOT appexp 

State 214:
lenscomponentexp -> appexp CREATE . appexp [ WITH TYPE TEST SEMI RPAREN RBRACK RANGLE MODULE MINUS LET IN EQUAL EOF END DOLLAR COMMA COLON BARBAR BAR ]
-- On UIDENT shift to state 5
-- On SYNTH shift to state 36
-- On STR shift to state 37
-- On SQUASH shift to state 38
-- On QUALIDENT shift to state 6
-- On PROJECT shift to state 39
-- On PERM shift to state 40
-- On NSET shift to state 43
-- On LPAREN shift to state 44
-- On LIDENT shift to state 7
-- On LANGLE shift to state 47
-- On INTEGER shift to state 49
-- On HASH shift to state 50
-- On GRAMMAR shift to state 75
-- On CSET shift to state 81
-- On CHARACTER shift to state 82
-- On CEX shift to state 83
-- On BOOLEAN shift to state 134
-- On BEGIN shift to state 135
-- On tyexp shift to state 136
-- On repexp shift to state 157
-- On qid shift to state 158
-- On matchexp shift to state 159
-- On appexp shift to state 215
-- On aexp shift to state 162

State 215:
appexp -> appexp . repexp [ WITH UIDENT TYPE TEST STR SEMI RPAREN RBRACK RANGLE QUALIDENT NSET MODULE MINUS LPAREN LIDENT LET LANGLE INTEGER IN HASH GRAMMAR EQUAL EOF END DOLLAR CSET COMMA COLON CHARACTER CEX BOOLEAN BEGIN BARBAR BAR ]
lenscomponentexp -> appexp CREATE appexp . [ WITH TYPE TEST SEMI RPAREN RBRACK RANGLE MODULE MINUS LET IN EQUAL EOF END DOLLAR COMMA COLON BARBAR BAR ]
-- On UIDENT shift to state 5
-- On STR shift to state 37
-- On QUALIDENT shift to state 6
-- On NSET shift to state 43
-- On LPAREN shift to state 44
-- On LIDENT shift to state 7
-- On LANGLE shift to state 47
-- On INTEGER shift to state 49
-- On HASH shift to state 50
-- On GRAMMAR shift to state 75
-- On CSET shift to state 81
-- On CHARACTER shift to state 82
-- On CEX shift to state 83
-- On BOOLEAN shift to state 134
-- On BEGIN shift to state 135
-- On tyexp shift to state 136
-- On repexp shift to state 161
-- On qid shift to state 158
-- On matchexp shift to state 159
-- On aexp shift to state 162
-- On WITH reduce production lenscomponentexp -> appexp CREATE appexp 
-- On TYPE reduce production lenscomponentexp -> appexp CREATE appexp 
-- On TEST reduce production lenscomponentexp -> appexp CREATE appexp 
-- On SEMI reduce production lenscomponentexp -> appexp CREATE appexp 
-- On RPAREN reduce production lenscomponentexp -> appexp CREATE appexp 
-- On RBRACK reduce production lenscomponentexp -> appexp CREATE appexp 
-- On RANGLE reduce production lenscomponentexp -> appexp CREATE appexp 
-- On MODULE reduce production lenscomponentexp -> appexp CREATE appexp 
-- On MINUS reduce production lenscomponentexp -> appexp CREATE appexp 
-- On LET reduce production lenscomponentexp -> appexp CREATE appexp 
-- On IN reduce production lenscomponentexp -> appexp CREATE appexp 
-- On EQUAL reduce production lenscomponentexp -> appexp CREATE appexp 
-- On EOF reduce production lenscomponentexp -> appexp CREATE appexp 
-- On END reduce production lenscomponentexp -> appexp CREATE appexp 
-- On DOLLAR reduce production lenscomponentexp -> appexp CREATE appexp 
-- On COMMA reduce production lenscomponentexp -> appexp CREATE appexp 
-- On COLON reduce production lenscomponentexp -> appexp CREATE appexp 
-- On BARBAR reduce production lenscomponentexp -> appexp CREATE appexp 
-- On BAR reduce production lenscomponentexp -> appexp CREATE appexp 

State 216:
lenscomponentexp -> appexp CHOOSE . appexp [ WITH TYPE TEST SEMI RPAREN RBRACK RANGLE MODULE MINUS LET IN EQUAL EOF END DOLLAR COMMA COLON BARBAR BAR ]
-- On UIDENT shift to state 5
-- On SYNTH shift to state 36
-- On STR shift to state 37
-- On SQUASH shift to state 38
-- On QUALIDENT shift to state 6
-- On PROJECT shift to state 39
-- On PERM shift to state 40
-- On NSET shift to state 43
-- On LPAREN shift to state 44
-- On LIDENT shift to state 7
-- On LANGLE shift to state 47
-- On INTEGER shift to state 49
-- On HASH shift to state 50
-- On GRAMMAR shift to state 75
-- On CSET shift to state 81
-- On CHARACTER shift to state 82
-- On CEX shift to state 83
-- On BOOLEAN shift to state 134
-- On BEGIN shift to state 135
-- On tyexp shift to state 136
-- On repexp shift to state 157
-- On qid shift to state 158
-- On matchexp shift to state 159
-- On appexp shift to state 217
-- On aexp shift to state 162

State 217:
appexp -> appexp . repexp [ WITH UIDENT TYPE TEST STR SEMI RPAREN RBRACK RANGLE QUALIDENT NSET MODULE MINUS LPAREN LIDENT LET LANGLE INTEGER IN HASH GRAMMAR EQUAL EOF END DOLLAR CSET COMMA COLON CHARACTER CEX BOOLEAN BEGIN BARBAR BAR ]
lenscomponentexp -> appexp CHOOSE appexp . [ WITH TYPE TEST SEMI RPAREN RBRACK RANGLE MODULE MINUS LET IN EQUAL EOF END DOLLAR COMMA COLON BARBAR BAR ]
-- On UIDENT shift to state 5
-- On STR shift to state 37
-- On QUALIDENT shift to state 6
-- On NSET shift to state 43
-- On LPAREN shift to state 44
-- On LIDENT shift to state 7
-- On LANGLE shift to state 47
-- On INTEGER shift to state 49
-- On HASH shift to state 50
-- On GRAMMAR shift to state 75
-- On CSET shift to state 81
-- On CHARACTER shift to state 82
-- On CEX shift to state 83
-- On BOOLEAN shift to state 134
-- On BEGIN shift to state 135
-- On tyexp shift to state 136
-- On repexp shift to state 161
-- On qid shift to state 158
-- On matchexp shift to state 159
-- On aexp shift to state 162
-- On WITH reduce production lenscomponentexp -> appexp CHOOSE appexp 
-- On TYPE reduce production lenscomponentexp -> appexp CHOOSE appexp 
-- On TEST reduce production lenscomponentexp -> appexp CHOOSE appexp 
-- On SEMI reduce production lenscomponentexp -> appexp CHOOSE appexp 
-- On RPAREN reduce production lenscomponentexp -> appexp CHOOSE appexp 
-- On RBRACK reduce production lenscomponentexp -> appexp CHOOSE appexp 
-- On RANGLE reduce production lenscomponentexp -> appexp CHOOSE appexp 
-- On MODULE reduce production lenscomponentexp -> appexp CHOOSE appexp 
-- On MINUS reduce production lenscomponentexp -> appexp CHOOSE appexp 
-- On LET reduce production lenscomponentexp -> appexp CHOOSE appexp 
-- On IN reduce production lenscomponentexp -> appexp CHOOSE appexp 
-- On EQUAL reduce production lenscomponentexp -> appexp CHOOSE appexp 
-- On EOF reduce production lenscomponentexp -> appexp CHOOSE appexp 
-- On END reduce production lenscomponentexp -> appexp CHOOSE appexp 
-- On DOLLAR reduce production lenscomponentexp -> appexp CHOOSE appexp 
-- On COMMA reduce production lenscomponentexp -> appexp CHOOSE appexp 
-- On COLON reduce production lenscomponentexp -> appexp CHOOSE appexp 
-- On BARBAR reduce production lenscomponentexp -> appexp CHOOSE appexp 
-- On BAR reduce production lenscomponentexp -> appexp CHOOSE appexp 

State 218:
lenscomponentexp -> appexp CANONIZE . appexp [ WITH TYPE TEST SEMI RPAREN RBRACK RANGLE MODULE MINUS LET IN EQUAL EOF END DOLLAR COMMA COLON BARBAR BAR ]
-- On UIDENT shift to state 5
-- On SYNTH shift to state 36
-- On STR shift to state 37
-- On SQUASH shift to state 38
-- On QUALIDENT shift to state 6
-- On PROJECT shift to state 39
-- On PERM shift to state 40
-- On NSET shift to state 43
-- On LPAREN shift to state 44
-- On LIDENT shift to state 7
-- On LANGLE shift to state 47
-- On INTEGER shift to state 49
-- On HASH shift to state 50
-- On GRAMMAR shift to state 75
-- On CSET shift to state 81
-- On CHARACTER shift to state 82
-- On CEX shift to state 83
-- On BOOLEAN shift to state 134
-- On BEGIN shift to state 135
-- On tyexp shift to state 136
-- On repexp shift to state 157
-- On qid shift to state 158
-- On matchexp shift to state 159
-- On appexp shift to state 219
-- On aexp shift to state 162

State 219:
appexp -> appexp . repexp [ WITH UIDENT TYPE TEST STR SEMI RPAREN RBRACK RANGLE QUALIDENT NSET MODULE MINUS LPAREN LIDENT LET LANGLE INTEGER IN HASH GRAMMAR EQUAL EOF END DOLLAR CSET COMMA COLON CHARACTER CEX BOOLEAN BEGIN BARBAR BAR ]
lenscomponentexp -> appexp CANONIZE appexp . [ WITH TYPE TEST SEMI RPAREN RBRACK RANGLE MODULE MINUS LET IN EQUAL EOF END DOLLAR COMMA COLON BARBAR BAR ]
-- On UIDENT shift to state 5
-- On STR shift to state 37
-- On QUALIDENT shift to state 6
-- On NSET shift to state 43
-- On LPAREN shift to state 44
-- On LIDENT shift to state 7
-- On LANGLE shift to state 47
-- On INTEGER shift to state 49
-- On HASH shift to state 50
-- On GRAMMAR shift to state 75
-- On CSET shift to state 81
-- On CHARACTER shift to state 82
-- On CEX shift to state 83
-- On BOOLEAN shift to state 134
-- On BEGIN shift to state 135
-- On tyexp shift to state 136
-- On repexp shift to state 161
-- On qid shift to state 158
-- On matchexp shift to state 159
-- On aexp shift to state 162
-- On WITH reduce production lenscomponentexp -> appexp CANONIZE appexp 
-- On TYPE reduce production lenscomponentexp -> appexp CANONIZE appexp 
-- On TEST reduce production lenscomponentexp -> appexp CANONIZE appexp 
-- On SEMI reduce production lenscomponentexp -> appexp CANONIZE appexp 
-- On RPAREN reduce production lenscomponentexp -> appexp CANONIZE appexp 
-- On RBRACK reduce production lenscomponentexp -> appexp CANONIZE appexp 
-- On RANGLE reduce production lenscomponentexp -> appexp CANONIZE appexp 
-- On MODULE reduce production lenscomponentexp -> appexp CANONIZE appexp 
-- On MINUS reduce production lenscomponentexp -> appexp CANONIZE appexp 
-- On LET reduce production lenscomponentexp -> appexp CANONIZE appexp 
-- On IN reduce production lenscomponentexp -> appexp CANONIZE appexp 
-- On EQUAL reduce production lenscomponentexp -> appexp CANONIZE appexp 
-- On EOF reduce production lenscomponentexp -> appexp CANONIZE appexp 
-- On END reduce production lenscomponentexp -> appexp CANONIZE appexp 
-- On DOLLAR reduce production lenscomponentexp -> appexp CANONIZE appexp 
-- On COMMA reduce production lenscomponentexp -> appexp CANONIZE appexp 
-- On COLON reduce production lenscomponentexp -> appexp CANONIZE appexp 
-- On BARBAR reduce production lenscomponentexp -> appexp CANONIZE appexp 
-- On BAR reduce production lenscomponentexp -> appexp CANONIZE appexp 

State 220:
ampampexp -> appexp AMPERSAND . AMPERSAND ampampexp [ WITH TYPE TEST SEMI RPAREN RBRACK RANGLE MODULE MINUS LET IN EQUAL EOF END DOLLAR COMMA COLON BARBAR BAR ]
ampampexp -> appexp AMPERSAND . AMPERSAND appexp [ WITH TYPE TEST SEMI RPAREN RBRACK RANGLE MODULE MINUS LET IN EQUAL EOF END DOLLAR COMMA COLON BARBAR BAR ]
ampexp -> appexp AMPERSAND . appexp [ WITH TYPE TEST SEMI RPAREN RBRACK RANGLE MODULE MINUS LET IN EQUAL EOF END DOLLAR COMMA COLON BARBAR BAR AMPERSAND ]
-- On UIDENT shift to state 5
-- On SYNTH shift to state 36
-- On STR shift to state 37
-- On SQUASH shift to state 38
-- On QUALIDENT shift to state 6
-- On PROJECT shift to state 39
-- On PERM shift to state 40
-- On NSET shift to state 43
-- On LPAREN shift to state 44
-- On LIDENT shift to state 7
-- On LANGLE shift to state 47
-- On INTEGER shift to state 49
-- On HASH shift to state 50
-- On GRAMMAR shift to state 75
-- On CSET shift to state 81
-- On CHARACTER shift to state 82
-- On CEX shift to state 83
-- On BOOLEAN shift to state 134
-- On BEGIN shift to state 135
-- On AMPERSAND shift to state 221
-- On tyexp shift to state 136
-- On repexp shift to state 157
-- On qid shift to state 158
-- On matchexp shift to state 159
-- On appexp shift to state 225
-- On aexp shift to state 162

State 221:
ampampexp -> appexp AMPERSAND AMPERSAND . ampampexp [ WITH TYPE TEST SEMI RPAREN RBRACK RANGLE MODULE MINUS LET IN EQUAL EOF END DOLLAR COMMA COLON BARBAR BAR ]
ampampexp -> appexp AMPERSAND AMPERSAND . appexp [ WITH TYPE TEST SEMI RPAREN RBRACK RANGLE MODULE MINUS LET IN EQUAL EOF END DOLLAR COMMA COLON BARBAR BAR ]
-- On UIDENT shift to state 5
-- On SYNTH shift to state 36
-- On STR shift to state 37
-- On SQUASH shift to state 38
-- On QUALIDENT shift to state 6
-- On PROJECT shift to state 39
-- On PERM shift to state 40
-- On NSET shift to state 43
-- On LPAREN shift to state 44
-- On LIDENT shift to state 7
-- On LANGLE shift to state 47
-- On INTEGER shift to state 49
-- On HASH shift to state 50
-- On GRAMMAR shift to state 75
-- On CSET shift to state 81
-- On CHARACTER shift to state 82
-- On CEX shift to state 83
-- On BOOLEAN shift to state 134
-- On BEGIN shift to state 135
-- On tyexp shift to state 136
-- On repexp shift to state 157
-- On qid shift to state 158
-- On matchexp shift to state 159
-- On appexp shift to state 222
-- On ampampexp shift to state 224
-- On aexp shift to state 162

State 222:
ampampexp -> appexp . AMPERSAND AMPERSAND ampampexp [ WITH TYPE TEST SEMI RPAREN RBRACK RANGLE MODULE MINUS LET IN EQUAL EOF END DOLLAR COMMA COLON BARBAR BAR ]
ampampexp -> appexp . AMPERSAND AMPERSAND appexp [ WITH TYPE TEST SEMI RPAREN RBRACK RANGLE MODULE MINUS LET IN EQUAL EOF END DOLLAR COMMA COLON BARBAR BAR ]
ampampexp -> appexp AMPERSAND AMPERSAND appexp . [ WITH TYPE TEST SEMI RPAREN RBRACK RANGLE MODULE MINUS LET IN EQUAL EOF END DOLLAR COMMA COLON BARBAR BAR ]
appexp -> appexp . repexp [ WITH UIDENT TYPE TEST STR SEMI RPAREN RBRACK RANGLE QUALIDENT NSET MODULE MINUS LPAREN LIDENT LET LANGLE INTEGER IN HASH GRAMMAR EQUAL EOF END DOLLAR CSET COMMA COLON CHARACTER CEX BOOLEAN BEGIN BARBAR BAR AMPERSAND ]
-- On UIDENT shift to state 5
-- On STR shift to state 37
-- On QUALIDENT shift to state 6
-- On NSET shift to state 43
-- On LPAREN shift to state 44
-- On LIDENT shift to state 7
-- On LANGLE shift to state 47
-- On INTEGER shift to state 49
-- On HASH shift to state 50
-- On GRAMMAR shift to state 75
-- On CSET shift to state 81
-- On CHARACTER shift to state 82
-- On CEX shift to state 83
-- On BOOLEAN shift to state 134
-- On BEGIN shift to state 135
-- On AMPERSAND shift to state 223
-- On tyexp shift to state 136
-- On repexp shift to state 161
-- On qid shift to state 158
-- On matchexp shift to state 159
-- On aexp shift to state 162
-- On WITH reduce production ampampexp -> appexp AMPERSAND AMPERSAND appexp 
-- On TYPE reduce production ampampexp -> appexp AMPERSAND AMPERSAND appexp 
-- On TEST reduce production ampampexp -> appexp AMPERSAND AMPERSAND appexp 
-- On SEMI reduce production ampampexp -> appexp AMPERSAND AMPERSAND appexp 
-- On RPAREN reduce production ampampexp -> appexp AMPERSAND AMPERSAND appexp 
-- On RBRACK reduce production ampampexp -> appexp AMPERSAND AMPERSAND appexp 
-- On RANGLE reduce production ampampexp -> appexp AMPERSAND AMPERSAND appexp 
-- On MODULE reduce production ampampexp -> appexp AMPERSAND AMPERSAND appexp 
-- On MINUS reduce production ampampexp -> appexp AMPERSAND AMPERSAND appexp 
-- On LET reduce production ampampexp -> appexp AMPERSAND AMPERSAND appexp 
-- On IN reduce production ampampexp -> appexp AMPERSAND AMPERSAND appexp 
-- On EQUAL reduce production ampampexp -> appexp AMPERSAND AMPERSAND appexp 
-- On EOF reduce production ampampexp -> appexp AMPERSAND AMPERSAND appexp 
-- On END reduce production ampampexp -> appexp AMPERSAND AMPERSAND appexp 
-- On DOLLAR reduce production ampampexp -> appexp AMPERSAND AMPERSAND appexp 
-- On COMMA reduce production ampampexp -> appexp AMPERSAND AMPERSAND appexp 
-- On COLON reduce production ampampexp -> appexp AMPERSAND AMPERSAND appexp 
-- On BARBAR reduce production ampampexp -> appexp AMPERSAND AMPERSAND appexp 
-- On BAR reduce production ampampexp -> appexp AMPERSAND AMPERSAND appexp 

State 223:
ampampexp -> appexp AMPERSAND . AMPERSAND ampampexp [ WITH TYPE TEST SEMI RPAREN RBRACK RANGLE MODULE MINUS LET IN EQUAL EOF END DOLLAR COMMA COLON BARBAR BAR ]
ampampexp -> appexp AMPERSAND . AMPERSAND appexp [ WITH TYPE TEST SEMI RPAREN RBRACK RANGLE MODULE MINUS LET IN EQUAL EOF END DOLLAR COMMA COLON BARBAR BAR ]
-- On AMPERSAND shift to state 221

State 224:
ampampexp -> appexp AMPERSAND AMPERSAND ampampexp . [ WITH TYPE TEST SEMI RPAREN RBRACK RANGLE MODULE MINUS LET IN EQUAL EOF END DOLLAR COMMA COLON BARBAR BAR ]
-- On WITH reduce production ampampexp -> appexp AMPERSAND AMPERSAND ampampexp 
-- On TYPE reduce production ampampexp -> appexp AMPERSAND AMPERSAND ampampexp 
-- On TEST reduce production ampampexp -> appexp AMPERSAND AMPERSAND ampampexp 
-- On SEMI reduce production ampampexp -> appexp AMPERSAND AMPERSAND ampampexp 
-- On RPAREN reduce production ampampexp -> appexp AMPERSAND AMPERSAND ampampexp 
-- On RBRACK reduce production ampampexp -> appexp AMPERSAND AMPERSAND ampampexp 
-- On RANGLE reduce production ampampexp -> appexp AMPERSAND AMPERSAND ampampexp 
-- On MODULE reduce production ampampexp -> appexp AMPERSAND AMPERSAND ampampexp 
-- On MINUS reduce production ampampexp -> appexp AMPERSAND AMPERSAND ampampexp 
-- On LET reduce production ampampexp -> appexp AMPERSAND AMPERSAND ampampexp 
-- On IN reduce production ampampexp -> appexp AMPERSAND AMPERSAND ampampexp 
-- On EQUAL reduce production ampampexp -> appexp AMPERSAND AMPERSAND ampampexp 
-- On EOF reduce production ampampexp -> appexp AMPERSAND AMPERSAND ampampexp 
-- On END reduce production ampampexp -> appexp AMPERSAND AMPERSAND ampampexp 
-- On DOLLAR reduce production ampampexp -> appexp AMPERSAND AMPERSAND ampampexp 
-- On COMMA reduce production ampampexp -> appexp AMPERSAND AMPERSAND ampampexp 
-- On COLON reduce production ampampexp -> appexp AMPERSAND AMPERSAND ampampexp 
-- On BARBAR reduce production ampampexp -> appexp AMPERSAND AMPERSAND ampampexp 
-- On BAR reduce production ampampexp -> appexp AMPERSAND AMPERSAND ampampexp 

State 225:
ampexp -> appexp AMPERSAND appexp . [ WITH TYPE TEST SEMI RPAREN RBRACK RANGLE MODULE MINUS LET IN EQUAL EOF END DOLLAR COMMA COLON BARBAR BAR AMPERSAND ]
appexp -> appexp . repexp [ WITH UIDENT TYPE TEST STR SEMI RPAREN RBRACK RANGLE QUALIDENT NSET MODULE MINUS LPAREN LIDENT LET LANGLE INTEGER IN HASH GRAMMAR EQUAL EOF END DOLLAR CSET COMMA COLON CHARACTER CEX BOOLEAN BEGIN BARBAR BAR AMPERSAND ]
-- On UIDENT shift to state 5
-- On STR shift to state 37
-- On QUALIDENT shift to state 6
-- On NSET shift to state 43
-- On LPAREN shift to state 44
-- On LIDENT shift to state 7
-- On LANGLE shift to state 47
-- On INTEGER shift to state 49
-- On HASH shift to state 50
-- On GRAMMAR shift to state 75
-- On CSET shift to state 81
-- On CHARACTER shift to state 82
-- On CEX shift to state 83
-- On BOOLEAN shift to state 134
-- On BEGIN shift to state 135
-- On tyexp shift to state 136
-- On repexp shift to state 161
-- On qid shift to state 158
-- On matchexp shift to state 159
-- On aexp shift to state 162
-- On WITH reduce production ampexp -> appexp AMPERSAND appexp 
-- On TYPE reduce production ampexp -> appexp AMPERSAND appexp 
-- On TEST reduce production ampexp -> appexp AMPERSAND appexp 
-- On SEMI reduce production ampexp -> appexp AMPERSAND appexp 
-- On RPAREN reduce production ampexp -> appexp AMPERSAND appexp 
-- On RBRACK reduce production ampexp -> appexp AMPERSAND appexp 
-- On RANGLE reduce production ampexp -> appexp AMPERSAND appexp 
-- On MODULE reduce production ampexp -> appexp AMPERSAND appexp 
-- On MINUS reduce production ampexp -> appexp AMPERSAND appexp 
-- On LET reduce production ampexp -> appexp AMPERSAND appexp 
-- On IN reduce production ampexp -> appexp AMPERSAND appexp 
-- On EQUAL reduce production ampexp -> appexp AMPERSAND appexp 
-- On EOF reduce production ampexp -> appexp AMPERSAND appexp 
-- On END reduce production ampexp -> appexp AMPERSAND appexp 
-- On DOLLAR reduce production ampexp -> appexp AMPERSAND appexp 
-- On COMMA reduce production ampexp -> appexp AMPERSAND appexp 
-- On COLON reduce production ampexp -> appexp AMPERSAND appexp 
-- On BARBAR reduce production ampexp -> appexp AMPERSAND appexp 
-- On BAR reduce production ampexp -> appexp AMPERSAND appexp 
-- On AMPERSAND reduce production ampexp -> appexp AMPERSAND appexp 

State 226:
ampexp -> ampexp . AMPERSAND appexp [ WITH TYPE TEST SEMI RPAREN RBRACK RANGLE MODULE MINUS LET IN EQUAL EOF END DOLLAR COMMA COLON BARBAR BAR AMPERSAND ]
infixexp -> ampexp . [ WITH TYPE TEST SEMI RPAREN RBRACK RANGLE MODULE MINUS LET IN EQUAL EOF END DOLLAR COMMA COLON BARBAR BAR ]
-- On AMPERSAND shift to state 227
-- On WITH reduce production infixexp -> ampexp 
-- On TYPE reduce production infixexp -> ampexp 
-- On TEST reduce production infixexp -> ampexp 
-- On SEMI reduce production infixexp -> ampexp 
-- On RPAREN reduce production infixexp -> ampexp 
-- On RBRACK reduce production infixexp -> ampexp 
-- On RANGLE reduce production infixexp -> ampexp 
-- On MODULE reduce production infixexp -> ampexp 
-- On MINUS reduce production infixexp -> ampexp 
-- On LET reduce production infixexp -> ampexp 
-- On IN reduce production infixexp -> ampexp 
-- On EQUAL reduce production infixexp -> ampexp 
-- On EOF reduce production infixexp -> ampexp 
-- On END reduce production infixexp -> ampexp 
-- On DOLLAR reduce production infixexp -> ampexp 
-- On COMMA reduce production infixexp -> ampexp 
-- On COLON reduce production infixexp -> ampexp 
-- On BARBAR reduce production infixexp -> ampexp 
-- On BAR reduce production infixexp -> ampexp 

State 227:
ampexp -> ampexp AMPERSAND . appexp [ WITH TYPE TEST SEMI RPAREN RBRACK RANGLE MODULE MINUS LET IN EQUAL EOF END DOLLAR COMMA COLON BARBAR BAR AMPERSAND ]
-- On UIDENT shift to state 5
-- On SYNTH shift to state 36
-- On STR shift to state 37
-- On SQUASH shift to state 38
-- On QUALIDENT shift to state 6
-- On PROJECT shift to state 39
-- On PERM shift to state 40
-- On NSET shift to state 43
-- On LPAREN shift to state 44
-- On LIDENT shift to state 7
-- On LANGLE shift to state 47
-- On INTEGER shift to state 49
-- On HASH shift to state 50
-- On GRAMMAR shift to state 75
-- On CSET shift to state 81
-- On CHARACTER shift to state 82
-- On CEX shift to state 83
-- On BOOLEAN shift to state 134
-- On BEGIN shift to state 135
-- On tyexp shift to state 136
-- On repexp shift to state 157
-- On qid shift to state 158
-- On matchexp shift to state 159
-- On appexp shift to state 228
-- On aexp shift to state 162

State 228:
ampexp -> ampexp AMPERSAND appexp . [ WITH TYPE TEST SEMI RPAREN RBRACK RANGLE MODULE MINUS LET IN EQUAL EOF END DOLLAR COMMA COLON BARBAR BAR AMPERSAND ]
appexp -> appexp . repexp [ WITH UIDENT TYPE TEST STR SEMI RPAREN RBRACK RANGLE QUALIDENT NSET MODULE MINUS LPAREN LIDENT LET LANGLE INTEGER IN HASH GRAMMAR EQUAL EOF END DOLLAR CSET COMMA COLON CHARACTER CEX BOOLEAN BEGIN BARBAR BAR AMPERSAND ]
-- On UIDENT shift to state 5
-- On STR shift to state 37
-- On QUALIDENT shift to state 6
-- On NSET shift to state 43
-- On LPAREN shift to state 44
-- On LIDENT shift to state 7
-- On LANGLE shift to state 47
-- On INTEGER shift to state 49
-- On HASH shift to state 50
-- On GRAMMAR shift to state 75
-- On CSET shift to state 81
-- On CHARACTER shift to state 82
-- On CEX shift to state 83
-- On BOOLEAN shift to state 134
-- On BEGIN shift to state 135
-- On tyexp shift to state 136
-- On repexp shift to state 161
-- On qid shift to state 158
-- On matchexp shift to state 159
-- On aexp shift to state 162
-- On WITH reduce production ampexp -> ampexp AMPERSAND appexp 
-- On TYPE reduce production ampexp -> ampexp AMPERSAND appexp 
-- On TEST reduce production ampexp -> ampexp AMPERSAND appexp 
-- On SEMI reduce production ampexp -> ampexp AMPERSAND appexp 
-- On RPAREN reduce production ampexp -> ampexp AMPERSAND appexp 
-- On RBRACK reduce production ampexp -> ampexp AMPERSAND appexp 
-- On RANGLE reduce production ampexp -> ampexp AMPERSAND appexp 
-- On MODULE reduce production ampexp -> ampexp AMPERSAND appexp 
-- On MINUS reduce production ampexp -> ampexp AMPERSAND appexp 
-- On LET reduce production ampexp -> ampexp AMPERSAND appexp 
-- On IN reduce production ampexp -> ampexp AMPERSAND appexp 
-- On EQUAL reduce production ampexp -> ampexp AMPERSAND appexp 
-- On EOF reduce production ampexp -> ampexp AMPERSAND appexp 
-- On END reduce production ampexp -> ampexp AMPERSAND appexp 
-- On DOLLAR reduce production ampexp -> ampexp AMPERSAND appexp 
-- On COMMA reduce production ampexp -> ampexp AMPERSAND appexp 
-- On COLON reduce production ampexp -> ampexp AMPERSAND appexp 
-- On BARBAR reduce production ampexp -> ampexp AMPERSAND appexp 
-- On BAR reduce production ampexp -> ampexp AMPERSAND appexp 
-- On AMPERSAND reduce production ampexp -> ampexp AMPERSAND appexp 

State 229:
infixexp -> ampampexp . [ WITH TYPE TEST SEMI RPAREN RBRACK RANGLE MODULE MINUS LET IN EQUAL EOF END DOLLAR COMMA COLON BARBAR BAR ]
-- On WITH reduce production infixexp -> ampampexp 
-- On TYPE reduce production infixexp -> ampampexp 
-- On TEST reduce production infixexp -> ampampexp 
-- On SEMI reduce production infixexp -> ampampexp 
-- On RPAREN reduce production infixexp -> ampampexp 
-- On RBRACK reduce production infixexp -> ampampexp 
-- On RANGLE reduce production infixexp -> ampampexp 
-- On MODULE reduce production infixexp -> ampampexp 
-- On MINUS reduce production infixexp -> ampampexp 
-- On LET reduce production infixexp -> ampampexp 
-- On IN reduce production infixexp -> ampampexp 
-- On EQUAL reduce production infixexp -> ampampexp 
-- On EOF reduce production infixexp -> ampampexp 
-- On END reduce production infixexp -> ampampexp 
-- On DOLLAR reduce production infixexp -> ampampexp 
-- On COMMA reduce production infixexp -> ampampexp 
-- On COLON reduce production infixexp -> ampampexp 
-- On BARBAR reduce production infixexp -> ampampexp 
-- On BAR reduce production infixexp -> ampampexp 

State 230:
exp -> funexp . [ TYPE TEST RPAREN RANGLE MODULE LET IN EOF END ]
-- On TYPE reduce production exp -> funexp 
-- On TEST reduce production exp -> funexp 
-- On RPAREN reduce production exp -> funexp 
-- On RANGLE reduce production exp -> funexp 
-- On MODULE reduce production exp -> funexp 
-- On LET reduce production exp -> funexp 
-- On IN reduce production exp -> funexp 
-- On EOF reduce production exp -> funexp 
-- On END reduce production exp -> funexp 

State 231:
aexp -> BEGIN exp . END [ WITH VTYPE USING UIDENT TYPE TILDE TEST STYPE STR STAR SEMI RPAREN RBRACK RBRACE RANGLE QUALIDENT QMARK PUT PLUS NSET MODULE MINUS LT LPAREN LIDENT LET LEQ LBRACE LANGLE INTO INTEGER IN HASH GT GRAMMAR GET GEQ EQUAL EOF END DOT DOLLAR DEQARROW DARROW CSET CREATE COMMA COLON CHOOSE CHARACTER CEX CANONIZE BOOLEAN BIJ BEGIN BARBAR BAR AVTYPE ASTYPE ARROW AND AMPERSAND ]
-- On END shift to state 232

State 232:
aexp -> BEGIN exp END . [ WITH VTYPE USING UIDENT TYPE TILDE TEST STYPE STR STAR SEMI RPAREN RBRACK RBRACE RANGLE QUALIDENT QMARK PUT PLUS NSET MODULE MINUS LT LPAREN LIDENT LET LEQ LBRACE LANGLE INTO INTEGER IN HASH GT GRAMMAR GET GEQ EQUAL EOF END DOT DOLLAR DEQARROW DARROW CSET CREATE COMMA COLON CHOOSE CHARACTER CEX CANONIZE BOOLEAN BIJ BEGIN BARBAR BAR AVTYPE ASTYPE ARROW AND AMPERSAND ]
-- On WITH reduce production aexp -> BEGIN exp END 
-- On VTYPE reduce production aexp -> BEGIN exp END 
-- On USING reduce production aexp -> BEGIN exp END 
-- On UIDENT reduce production aexp -> BEGIN exp END 
-- On TYPE reduce production aexp -> BEGIN exp END 
-- On TILDE reduce production aexp -> BEGIN exp END 
-- On TEST reduce production aexp -> BEGIN exp END 
-- On STYPE reduce production aexp -> BEGIN exp END 
-- On STR reduce production aexp -> BEGIN exp END 
-- On STAR reduce production aexp -> BEGIN exp END 
-- On SEMI reduce production aexp -> BEGIN exp END 
-- On RPAREN reduce production aexp -> BEGIN exp END 
-- On RBRACK reduce production aexp -> BEGIN exp END 
-- On RBRACE reduce production aexp -> BEGIN exp END 
-- On RANGLE reduce production aexp -> BEGIN exp END 
-- On QUALIDENT reduce production aexp -> BEGIN exp END 
-- On QMARK reduce production aexp -> BEGIN exp END 
-- On PUT reduce production aexp -> BEGIN exp END 
-- On PLUS reduce production aexp -> BEGIN exp END 
-- On NSET reduce production aexp -> BEGIN exp END 
-- On MODULE reduce production aexp -> BEGIN exp END 
-- On MINUS reduce production aexp -> BEGIN exp END 
-- On LT reduce production aexp -> BEGIN exp END 
-- On LPAREN reduce production aexp -> BEGIN exp END 
-- On LIDENT reduce production aexp -> BEGIN exp END 
-- On LET reduce production aexp -> BEGIN exp END 
-- On LEQ reduce production aexp -> BEGIN exp END 
-- On LBRACE reduce production aexp -> BEGIN exp END 
-- On LANGLE reduce production aexp -> BEGIN exp END 
-- On INTO reduce production aexp -> BEGIN exp END 
-- On INTEGER reduce production aexp -> BEGIN exp END 
-- On IN reduce production aexp -> BEGIN exp END 
-- On HASH reduce production aexp -> BEGIN exp END 
-- On GT reduce production aexp -> BEGIN exp END 
-- On GRAMMAR reduce production aexp -> BEGIN exp END 
-- On GET reduce production aexp -> BEGIN exp END 
-- On GEQ reduce production aexp -> BEGIN exp END 
-- On EQUAL reduce production aexp -> BEGIN exp END 
-- On EOF reduce production aexp -> BEGIN exp END 
-- On END reduce production aexp -> BEGIN exp END 
-- On DOT reduce production aexp -> BEGIN exp END 
-- On DOLLAR reduce production aexp -> BEGIN exp END 
-- On DEQARROW reduce production aexp -> BEGIN exp END 
-- On DARROW reduce production aexp -> BEGIN exp END 
-- On CSET reduce production aexp -> BEGIN exp END 
-- On CREATE reduce production aexp -> BEGIN exp END 
-- On COMMA reduce production aexp -> BEGIN exp END 
-- On COLON reduce production aexp -> BEGIN exp END 
-- On CHOOSE reduce production aexp -> BEGIN exp END 
-- On CHARACTER reduce production aexp -> BEGIN exp END 
-- On CEX reduce production aexp -> BEGIN exp END 
-- On CANONIZE reduce production aexp -> BEGIN exp END 
-- On BOOLEAN reduce production aexp -> BEGIN exp END 
-- On BIJ reduce production aexp -> BEGIN exp END 
-- On BEGIN reduce production aexp -> BEGIN exp END 
-- On BARBAR reduce production aexp -> BEGIN exp END 
-- On BAR reduce production aexp -> BEGIN exp END 
-- On AVTYPE reduce production aexp -> BEGIN exp END 
-- On ASTYPE reduce production aexp -> BEGIN exp END 
-- On ARROW reduce production aexp -> BEGIN exp END 
-- On AND reduce production aexp -> BEGIN exp END 
-- On AMPERSAND reduce production aexp -> BEGIN exp END 

State 233:
barexp -> equalexp . [ WITH TYPE TEST SEMI RPAREN RBRACK RANGLE MODULE LET IN EOF END DOLLAR COMMA ]
dbarexp -> equalexp . BARBAR equalexp [ WITH TYPE TEST SEMI RPAREN RBRACK RANGLE MODULE LET IN EOF END DOLLAR COMMA BARBAR ]
obarexp -> equalexp . BAR equalexp [ WITH TYPE TEST SEMI RPAREN RBRACK RANGLE MODULE LET IN EOF END DOLLAR COMMA BAR ]
-- On BARBAR shift to state 234
-- On BAR shift to state 236
-- On WITH reduce production barexp -> equalexp 
-- On TYPE reduce production barexp -> equalexp 
-- On TEST reduce production barexp -> equalexp 
-- On SEMI reduce production barexp -> equalexp 
-- On RPAREN reduce production barexp -> equalexp 
-- On RBRACK reduce production barexp -> equalexp 
-- On RANGLE reduce production barexp -> equalexp 
-- On MODULE reduce production barexp -> equalexp 
-- On LET reduce production barexp -> equalexp 
-- On IN reduce production barexp -> equalexp 
-- On EOF reduce production barexp -> equalexp 
-- On END reduce production barexp -> equalexp 
-- On DOLLAR reduce production barexp -> equalexp 
-- On COMMA reduce production barexp -> equalexp 

State 234:
dbarexp -> equalexp BARBAR . equalexp [ WITH TYPE TEST SEMI RPAREN RBRACK RANGLE MODULE LET IN EOF END DOLLAR COMMA BARBAR ]
-- On UIDENT shift to state 5
-- On SYNTH shift to state 36
-- On STR shift to state 37
-- On SQUASH shift to state 38
-- On QUALIDENT shift to state 6
-- On PROJECT shift to state 39
-- On PERM shift to state 40
-- On NSET shift to state 43
-- On MINUS shift to state 46
-- On LPAREN shift to state 44
-- On LIDENT shift to state 7
-- On LANGLE shift to state 47
-- On INTEGER shift to state 49
-- On HASH shift to state 50
-- On GRAMMAR shift to state 75
-- On CSET shift to state 81
-- On CHARACTER shift to state 82
-- On CEX shift to state 83
-- On BOOLEAN shift to state 134
-- On BEGIN shift to state 135
-- On tyexp shift to state 136
-- On tildeexp shift to state 155
-- On rewriteexp shift to state 168
-- On repexp shift to state 157
-- On qid shift to state 158
-- On minusexp shift to state 178
-- On matchexp shift to state 159
-- On ltexp shift to state 179
-- On leqexp shift to state 180
-- On lenscomponentexp shift to state 181
-- On infixexp shift to state 182
-- On gtexp shift to state 185
-- On geqexp shift to state 186
-- On equalexp shift to state 235
-- On dotexp shift to state 188
-- On appexp shift to state 192
-- On ampexp shift to state 226
-- On ampampexp shift to state 229
-- On aexp shift to state 162

State 235:
dbarexp -> equalexp BARBAR equalexp . [ WITH TYPE TEST SEMI RPAREN RBRACK RANGLE MODULE LET IN EOF END DOLLAR COMMA BARBAR ]
-- On WITH reduce production dbarexp -> equalexp BARBAR equalexp 
-- On TYPE reduce production dbarexp -> equalexp BARBAR equalexp 
-- On TEST reduce production dbarexp -> equalexp BARBAR equalexp 
-- On SEMI reduce production dbarexp -> equalexp BARBAR equalexp 
-- On RPAREN reduce production dbarexp -> equalexp BARBAR equalexp 
-- On RBRACK reduce production dbarexp -> equalexp BARBAR equalexp 
-- On RANGLE reduce production dbarexp -> equalexp BARBAR equalexp 
-- On MODULE reduce production dbarexp -> equalexp BARBAR equalexp 
-- On LET reduce production dbarexp -> equalexp BARBAR equalexp 
-- On IN reduce production dbarexp -> equalexp BARBAR equalexp 
-- On EOF reduce production dbarexp -> equalexp BARBAR equalexp 
-- On END reduce production dbarexp -> equalexp BARBAR equalexp 
-- On DOLLAR reduce production dbarexp -> equalexp BARBAR equalexp 
-- On COMMA reduce production dbarexp -> equalexp BARBAR equalexp 
-- On BARBAR reduce production dbarexp -> equalexp BARBAR equalexp 

State 236:
obarexp -> equalexp BAR . equalexp [ WITH TYPE TEST SEMI RPAREN RBRACK RANGLE MODULE LET IN EOF END DOLLAR COMMA BAR ]
-- On UIDENT shift to state 5
-- On SYNTH shift to state 36
-- On STR shift to state 37
-- On SQUASH shift to state 38
-- On QUALIDENT shift to state 6
-- On PROJECT shift to state 39
-- On PERM shift to state 40
-- On NSET shift to state 43
-- On MINUS shift to state 46
-- On LPAREN shift to state 44
-- On LIDENT shift to state 7
-- On LANGLE shift to state 47
-- On INTEGER shift to state 49
-- On HASH shift to state 50
-- On GRAMMAR shift to state 75
-- On CSET shift to state 81
-- On CHARACTER shift to state 82
-- On CEX shift to state 83
-- On BOOLEAN shift to state 134
-- On BEGIN shift to state 135
-- On tyexp shift to state 136
-- On tildeexp shift to state 155
-- On rewriteexp shift to state 168
-- On repexp shift to state 157
-- On qid shift to state 158
-- On minusexp shift to state 178
-- On matchexp shift to state 159
-- On ltexp shift to state 179
-- On leqexp shift to state 180
-- On lenscomponentexp shift to state 181
-- On infixexp shift to state 182
-- On gtexp shift to state 185
-- On geqexp shift to state 186
-- On equalexp shift to state 237
-- On dotexp shift to state 188
-- On appexp shift to state 192
-- On ampexp shift to state 226
-- On ampampexp shift to state 229
-- On aexp shift to state 162

State 237:
obarexp -> equalexp BAR equalexp . [ WITH TYPE TEST SEMI RPAREN RBRACK RANGLE MODULE LET IN EOF END DOLLAR COMMA BAR ]
-- On WITH reduce production obarexp -> equalexp BAR equalexp 
-- On TYPE reduce production obarexp -> equalexp BAR equalexp 
-- On TEST reduce production obarexp -> equalexp BAR equalexp 
-- On SEMI reduce production obarexp -> equalexp BAR equalexp 
-- On RPAREN reduce production obarexp -> equalexp BAR equalexp 
-- On RBRACK reduce production obarexp -> equalexp BAR equalexp 
-- On RANGLE reduce production obarexp -> equalexp BAR equalexp 
-- On MODULE reduce production obarexp -> equalexp BAR equalexp 
-- On LET reduce production obarexp -> equalexp BAR equalexp 
-- On IN reduce production obarexp -> equalexp BAR equalexp 
-- On EOF reduce production obarexp -> equalexp BAR equalexp 
-- On END reduce production obarexp -> equalexp BAR equalexp 
-- On DOLLAR reduce production obarexp -> equalexp BAR equalexp 
-- On COMMA reduce production obarexp -> equalexp BAR equalexp 
-- On BAR reduce production obarexp -> equalexp BAR equalexp 

State 238:
barexp -> dbarexp . [ WITH TYPE TEST SEMI RPAREN RBRACK RANGLE MODULE LET IN EOF END DOLLAR COMMA ]
dbarexp -> dbarexp . BARBAR equalexp [ WITH TYPE TEST SEMI RPAREN RBRACK RANGLE MODULE LET IN EOF END DOLLAR COMMA BARBAR ]
-- On BARBAR shift to state 239
-- On WITH reduce production barexp -> dbarexp 
-- On TYPE reduce production barexp -> dbarexp 
-- On TEST reduce production barexp -> dbarexp 
-- On SEMI reduce production barexp -> dbarexp 
-- On RPAREN reduce production barexp -> dbarexp 
-- On RBRACK reduce production barexp -> dbarexp 
-- On RANGLE reduce production barexp -> dbarexp 
-- On MODULE reduce production barexp -> dbarexp 
-- On LET reduce production barexp -> dbarexp 
-- On IN reduce production barexp -> dbarexp 
-- On EOF reduce production barexp -> dbarexp 
-- On END reduce production barexp -> dbarexp 
-- On DOLLAR reduce production barexp -> dbarexp 
-- On COMMA reduce production barexp -> dbarexp 

State 239:
dbarexp -> dbarexp BARBAR . equalexp [ WITH TYPE TEST SEMI RPAREN RBRACK RANGLE MODULE LET IN EOF END DOLLAR COMMA BARBAR ]
-- On UIDENT shift to state 5
-- On SYNTH shift to state 36
-- On STR shift to state 37
-- On SQUASH shift to state 38
-- On QUALIDENT shift to state 6
-- On PROJECT shift to state 39
-- On PERM shift to state 40
-- On NSET shift to state 43
-- On MINUS shift to state 46
-- On LPAREN shift to state 44
-- On LIDENT shift to state 7
-- On LANGLE shift to state 47
-- On INTEGER shift to state 49
-- On HASH shift to state 50
-- On GRAMMAR shift to state 75
-- On CSET shift to state 81
-- On CHARACTER shift to state 82
-- On CEX shift to state 83
-- On BOOLEAN shift to state 134
-- On BEGIN shift to state 135
-- On tyexp shift to state 136
-- On tildeexp shift to state 155
-- On rewriteexp shift to state 168
-- On repexp shift to state 157
-- On qid shift to state 158
-- On minusexp shift to state 178
-- On matchexp shift to state 159
-- On ltexp shift to state 179
-- On leqexp shift to state 180
-- On lenscomponentexp shift to state 181
-- On infixexp shift to state 182
-- On gtexp shift to state 185
-- On geqexp shift to state 186
-- On equalexp shift to state 240
-- On dotexp shift to state 188
-- On appexp shift to state 192
-- On ampexp shift to state 226
-- On ampampexp shift to state 229
-- On aexp shift to state 162

State 240:
dbarexp -> dbarexp BARBAR equalexp . [ WITH TYPE TEST SEMI RPAREN RBRACK RANGLE MODULE LET IN EOF END DOLLAR COMMA BARBAR ]
-- On WITH reduce production dbarexp -> dbarexp BARBAR equalexp 
-- On TYPE reduce production dbarexp -> dbarexp BARBAR equalexp 
-- On TEST reduce production dbarexp -> dbarexp BARBAR equalexp 
-- On SEMI reduce production dbarexp -> dbarexp BARBAR equalexp 
-- On RPAREN reduce production dbarexp -> dbarexp BARBAR equalexp 
-- On RBRACK reduce production dbarexp -> dbarexp BARBAR equalexp 
-- On RANGLE reduce production dbarexp -> dbarexp BARBAR equalexp 
-- On MODULE reduce production dbarexp -> dbarexp BARBAR equalexp 
-- On LET reduce production dbarexp -> dbarexp BARBAR equalexp 
-- On IN reduce production dbarexp -> dbarexp BARBAR equalexp 
-- On EOF reduce production dbarexp -> dbarexp BARBAR equalexp 
-- On END reduce production dbarexp -> dbarexp BARBAR equalexp 
-- On DOLLAR reduce production dbarexp -> dbarexp BARBAR equalexp 
-- On COMMA reduce production dbarexp -> dbarexp BARBAR equalexp 
-- On BARBAR reduce production dbarexp -> dbarexp BARBAR equalexp 

State 241:
cexp -> composeexp . [ TYPE TEST RPAREN RANGLE MODULE LET IN EOF END DOLLAR ]
composeexp -> composeexp . SEMI commaexp [ TYPE TEST SEMI RPAREN RANGLE MODULE LET IN EOF END DOLLAR ]
-- On SEMI shift to state 242
-- On TYPE reduce production cexp -> composeexp 
-- On TEST reduce production cexp -> composeexp 
-- On RPAREN reduce production cexp -> composeexp 
-- On RANGLE reduce production cexp -> composeexp 
-- On MODULE reduce production cexp -> composeexp 
-- On LET reduce production cexp -> composeexp 
-- On IN reduce production cexp -> composeexp 
-- On EOF reduce production cexp -> composeexp 
-- On END reduce production cexp -> composeexp 
-- On DOLLAR reduce production cexp -> composeexp 

State 242:
composeexp -> composeexp SEMI . commaexp [ WITH TYPE TEST SEMI RPAREN RANGLE MODULE LET IN EOF END DOLLAR ]
-- On UIDENT shift to state 5
-- On SYNTH shift to state 36
-- On STR shift to state 37
-- On SQUASH shift to state 38
-- On QUALIDENT shift to state 6
-- On PROJECT shift to state 39
-- On PERM shift to state 40
-- On NSET shift to state 43
-- On MINUS shift to state 46
-- On LPAREN shift to state 44
-- On LIDENT shift to state 7
-- On LANGLE shift to state 47
-- On INTEGER shift to state 49
-- On HASH shift to state 50
-- On GRAMMAR shift to state 75
-- On CSET shift to state 81
-- On CHARACTER shift to state 82
-- On CEX shift to state 83
-- On BOOLEAN shift to state 134
-- On BEGIN shift to state 135
-- On tyexp shift to state 136
-- On tildeexp shift to state 155
-- On rewriteexp shift to state 168
-- On repexp shift to state 157
-- On qid shift to state 158
-- On obarexp shift to state 176
-- On minusexp shift to state 178
-- On matchexp shift to state 159
-- On ltexp shift to state 179
-- On leqexp shift to state 180
-- On lenscomponentexp shift to state 181
-- On infixexp shift to state 182
-- On gtexp shift to state 185
-- On geqexp shift to state 186
-- On equalexp shift to state 233
-- On dotexp shift to state 188
-- On dbarexp shift to state 238
-- On commaexp shift to state 243
-- On barexp shift to state 246
-- On appexp shift to state 192
-- On ampexp shift to state 226
-- On ampampexp shift to state 229
-- On aexp shift to state 162

State 243:
commaexp -> commaexp . COMMA barexp [ WITH TYPE TEST SEMI RPAREN RANGLE MODULE LET IN EOF END DOLLAR COMMA ]
composeexp -> composeexp SEMI commaexp . [ WITH TYPE TEST SEMI RPAREN RANGLE MODULE LET IN EOF END DOLLAR ]
-- On COMMA shift to state 244
-- On WITH reduce production composeexp -> composeexp SEMI commaexp 
-- On TYPE reduce production composeexp -> composeexp SEMI commaexp 
-- On TEST reduce production composeexp -> composeexp SEMI commaexp 
-- On SEMI reduce production composeexp -> composeexp SEMI commaexp 
-- On RPAREN reduce production composeexp -> composeexp SEMI commaexp 
-- On RANGLE reduce production composeexp -> composeexp SEMI commaexp 
-- On MODULE reduce production composeexp -> composeexp SEMI commaexp 
-- On LET reduce production composeexp -> composeexp SEMI commaexp 
-- On IN reduce production composeexp -> composeexp SEMI commaexp 
-- On EOF reduce production composeexp -> composeexp SEMI commaexp 
-- On END reduce production composeexp -> composeexp SEMI commaexp 
-- On DOLLAR reduce production composeexp -> composeexp SEMI commaexp 

State 244:
commaexp -> commaexp COMMA . barexp [ WITH TYPE TEST SEMI RPAREN RBRACK RANGLE MODULE LET IN EOF END DOLLAR COMMA ]
-- On UIDENT shift to state 5
-- On SYNTH shift to state 36
-- On STR shift to state 37
-- On SQUASH shift to state 38
-- On QUALIDENT shift to state 6
-- On PROJECT shift to state 39
-- On PERM shift to state 40
-- On NSET shift to state 43
-- On MINUS shift to state 46
-- On LPAREN shift to state 44
-- On LIDENT shift to state 7
-- On LANGLE shift to state 47
-- On INTEGER shift to state 49
-- On HASH shift to state 50
-- On GRAMMAR shift to state 75
-- On CSET shift to state 81
-- On CHARACTER shift to state 82
-- On CEX shift to state 83
-- On BOOLEAN shift to state 134
-- On BEGIN shift to state 135
-- On tyexp shift to state 136
-- On tildeexp shift to state 155
-- On rewriteexp shift to state 168
-- On repexp shift to state 157
-- On qid shift to state 158
-- On obarexp shift to state 176
-- On minusexp shift to state 178
-- On matchexp shift to state 159
-- On ltexp shift to state 179
-- On leqexp shift to state 180
-- On lenscomponentexp shift to state 181
-- On infixexp shift to state 182
-- On gtexp shift to state 185
-- On geqexp shift to state 186
-- On equalexp shift to state 233
-- On dotexp shift to state 188
-- On dbarexp shift to state 238
-- On barexp shift to state 245
-- On appexp shift to state 192
-- On ampexp shift to state 226
-- On ampampexp shift to state 229
-- On aexp shift to state 162

State 245:
commaexp -> commaexp COMMA barexp . [ WITH TYPE TEST SEMI RPAREN RBRACK RANGLE MODULE LET IN EOF END DOLLAR COMMA ]
-- On WITH reduce production commaexp -> commaexp COMMA barexp 
-- On TYPE reduce production commaexp -> commaexp COMMA barexp 
-- On TEST reduce production commaexp -> commaexp COMMA barexp 
-- On SEMI reduce production commaexp -> commaexp COMMA barexp 
-- On RPAREN reduce production commaexp -> commaexp COMMA barexp 
-- On RBRACK reduce production commaexp -> commaexp COMMA barexp 
-- On RANGLE reduce production commaexp -> commaexp COMMA barexp 
-- On MODULE reduce production commaexp -> commaexp COMMA barexp 
-- On LET reduce production commaexp -> commaexp COMMA barexp 
-- On IN reduce production commaexp -> commaexp COMMA barexp 
-- On EOF reduce production commaexp -> commaexp COMMA barexp 
-- On END reduce production commaexp -> commaexp COMMA barexp 
-- On DOLLAR reduce production commaexp -> commaexp COMMA barexp 
-- On COMMA reduce production commaexp -> commaexp COMMA barexp 

State 246:
commaexp -> barexp . [ WITH TYPE TEST SEMI RPAREN RBRACK RANGLE MODULE LET IN EOF END DOLLAR COMMA ]
-- On WITH reduce production commaexp -> barexp 
-- On TYPE reduce production commaexp -> barexp 
-- On TEST reduce production commaexp -> barexp 
-- On SEMI reduce production commaexp -> barexp 
-- On RPAREN reduce production commaexp -> barexp 
-- On RBRACK reduce production commaexp -> barexp 
-- On RANGLE reduce production commaexp -> barexp 
-- On MODULE reduce production commaexp -> barexp 
-- On LET reduce production commaexp -> barexp 
-- On IN reduce production commaexp -> barexp 
-- On EOF reduce production commaexp -> barexp 
-- On END reduce production commaexp -> barexp 
-- On DOLLAR reduce production commaexp -> barexp 
-- On COMMA reduce production commaexp -> barexp 

State 247:
commaexp -> commaexp . COMMA barexp [ WITH TYPE TEST SEMI RPAREN RANGLE MODULE LET IN EOF END DOLLAR COMMA ]
composeexp -> commaexp . [ WITH TYPE TEST SEMI RPAREN RANGLE MODULE LET IN EOF END DOLLAR ]
-- On COMMA shift to state 244
-- On WITH reduce production composeexp -> commaexp 
-- On TYPE reduce production composeexp -> commaexp 
-- On TEST reduce production composeexp -> commaexp 
-- On SEMI reduce production composeexp -> commaexp 
-- On RPAREN reduce production composeexp -> commaexp 
-- On RANGLE reduce production composeexp -> commaexp 
-- On MODULE reduce production composeexp -> commaexp 
-- On LET reduce production composeexp -> commaexp 
-- On IN reduce production composeexp -> commaexp 
-- On EOF reduce production composeexp -> commaexp 
-- On END reduce production composeexp -> commaexp 
-- On DOLLAR reduce production composeexp -> commaexp 

State 248:
funexp -> cexp . DOLLAR funexp [ TYPE TEST RPAREN RANGLE MODULE LET IN EOF END ]
funexp -> cexp . [ TYPE TEST RPAREN RANGLE MODULE LET IN EOF END ]
-- On DOLLAR shift to state 249
-- On TYPE reduce production funexp -> cexp 
-- On TEST reduce production funexp -> cexp 
-- On RPAREN reduce production funexp -> cexp 
-- On RANGLE reduce production funexp -> cexp 
-- On MODULE reduce production funexp -> cexp 
-- On LET reduce production funexp -> cexp 
-- On IN reduce production funexp -> cexp 
-- On EOF reduce production funexp -> cexp 
-- On END reduce production funexp -> cexp 

State 249:
funexp -> cexp DOLLAR . funexp [ TYPE TEST RPAREN RANGLE MODULE LET IN EOF END ]
-- On UIDENT shift to state 5
-- On SYNTH shift to state 36
-- On STR shift to state 37
-- On SQUASH shift to state 38
-- On QUALIDENT shift to state 6
-- On PROJECT shift to state 39
-- On PERM shift to state 40
-- On NSET shift to state 43
-- On MINUS shift to state 46
-- On MATCH shift to state 48
-- On LPAREN shift to state 44
-- On LIDENT shift to state 7
-- On LANGLE shift to state 47
-- On INTEGER shift to state 49
-- On HASH shift to state 50
-- On GRAMMAR shift to state 75
-- On FUN shift to state 123
-- On CSET shift to state 81
-- On CHARACTER shift to state 82
-- On CEX shift to state 83
-- On BOOLEAN shift to state 134
-- On BEGIN shift to state 135
-- On tyexp shift to state 136
-- On tildeexp shift to state 155
-- On rewriteexp shift to state 168
-- On repexp shift to state 157
-- On qid shift to state 158
-- On obarexp shift to state 176
-- On minusexp shift to state 178
-- On matchexp shift to state 159
-- On ltexp shift to state 179
-- On leqexp shift to state 180
-- On lenscomponentexp shift to state 181
-- On infixexp shift to state 182
-- On gtexp shift to state 185
-- On geqexp shift to state 186
-- On funexp shift to state 250
-- On equalexp shift to state 233
-- On dotexp shift to state 188
-- On dbarexp shift to state 238
-- On composeexp shift to state 241
-- On commaexp shift to state 247
-- On cexp shift to state 248
-- On barexp shift to state 246
-- On appexp shift to state 192
-- On ampexp shift to state 226
-- On ampampexp shift to state 229
-- On aexp shift to state 162

State 250:
funexp -> cexp DOLLAR funexp . [ TYPE TEST RPAREN RANGLE MODULE LET IN EOF END ]
-- On TYPE reduce production funexp -> cexp DOLLAR funexp 
-- On TEST reduce production funexp -> cexp DOLLAR funexp 
-- On RPAREN reduce production funexp -> cexp DOLLAR funexp 
-- On RANGLE reduce production funexp -> cexp DOLLAR funexp 
-- On MODULE reduce production funexp -> cexp DOLLAR funexp 
-- On LET reduce production funexp -> cexp DOLLAR funexp 
-- On IN reduce production funexp -> cexp DOLLAR funexp 
-- On EOF reduce production funexp -> cexp DOLLAR funexp 
-- On END reduce production funexp -> cexp DOLLAR funexp 

State 251:
param -> LPAREN id COLON STRING IN exp . RPAREN [ TYVARIDENT LPAREN EQUAL COLON ARROW ]
-- On RPAREN shift to state 252

State 252:
param -> LPAREN id COLON STRING IN exp RPAREN . [ TYVARIDENT LPAREN EQUAL COLON ARROW ]
-- On TYVARIDENT reduce production param -> LPAREN id COLON STRING IN exp RPAREN 
-- On LPAREN reduce production param -> LPAREN id COLON STRING IN exp RPAREN 
-- On EQUAL reduce production param -> LPAREN id COLON STRING IN exp RPAREN 
-- On COLON reduce production param -> LPAREN id COLON STRING IN exp RPAREN 
-- On ARROW reduce production param -> LPAREN id COLON STRING IN exp RPAREN 

State 253:
asort -> LENS . [ WHERE STAR RPAREN QUALIDENT LIDENT ARROW ]
param -> LPAREN id COLON LENS . IN QMARK DARROW appexp RPAREN [ TYVARIDENT LPAREN EQUAL COLON ARROW ]
param -> LPAREN id COLON LENS . IN QMARK DEQARROW appexp RPAREN [ TYVARIDENT LPAREN EQUAL COLON ARROW ]
param -> LPAREN id COLON LENS . IN appexp DARROW QMARK RPAREN [ TYVARIDENT LPAREN EQUAL COLON ARROW ]
param -> LPAREN id COLON LENS . IN appexp DEQARROW QMARK RPAREN [ TYVARIDENT LPAREN EQUAL COLON ARROW ]
param -> LPAREN id COLON LENS . IN appexp DARROW appexp RPAREN [ TYVARIDENT LPAREN EQUAL COLON ARROW ]
param -> LPAREN id COLON LENS . IN appexp DEQARROW appexp RPAREN [ TYVARIDENT LPAREN EQUAL COLON ARROW ]
-- On IN shift to state 254
-- On WHERE reduce production asort -> LENS 
-- On STAR reduce production asort -> LENS 
-- On RPAREN reduce production asort -> LENS 
-- On QUALIDENT reduce production asort -> LENS 
-- On LIDENT reduce production asort -> LENS 
-- On ARROW reduce production asort -> LENS 

State 254:
param -> LPAREN id COLON LENS IN . QMARK DARROW appexp RPAREN [ TYVARIDENT LPAREN EQUAL COLON ARROW ]
param -> LPAREN id COLON LENS IN . QMARK DEQARROW appexp RPAREN [ TYVARIDENT LPAREN EQUAL COLON ARROW ]
param -> LPAREN id COLON LENS IN . appexp DARROW QMARK RPAREN [ TYVARIDENT LPAREN EQUAL COLON ARROW ]
param -> LPAREN id COLON LENS IN . appexp DEQARROW QMARK RPAREN [ TYVARIDENT LPAREN EQUAL COLON ARROW ]
param -> LPAREN id COLON LENS IN . appexp DARROW appexp RPAREN [ TYVARIDENT LPAREN EQUAL COLON ARROW ]
param -> LPAREN id COLON LENS IN . appexp DEQARROW appexp RPAREN [ TYVARIDENT LPAREN EQUAL COLON ARROW ]
-- On UIDENT shift to state 5
-- On SYNTH shift to state 36
-- On STR shift to state 37
-- On SQUASH shift to state 38
-- On QUALIDENT shift to state 6
-- On QMARK shift to state 255
-- On PROJECT shift to state 39
-- On PERM shift to state 40
-- On NSET shift to state 43
-- On LPAREN shift to state 44
-- On LIDENT shift to state 7
-- On LANGLE shift to state 47
-- On INTEGER shift to state 49
-- On HASH shift to state 50
-- On GRAMMAR shift to state 75
-- On CSET shift to state 81
-- On CHARACTER shift to state 82
-- On CEX shift to state 83
-- On BOOLEAN shift to state 134
-- On BEGIN shift to state 135
-- On tyexp shift to state 136
-- On repexp shift to state 157
-- On qid shift to state 158
-- On matchexp shift to state 159
-- On appexp shift to state 262
-- On aexp shift to state 162

State 255:
param -> LPAREN id COLON LENS IN QMARK . DARROW appexp RPAREN [ TYVARIDENT LPAREN EQUAL COLON ARROW ]
param -> LPAREN id COLON LENS IN QMARK . DEQARROW appexp RPAREN [ TYVARIDENT LPAREN EQUAL COLON ARROW ]
-- On DEQARROW shift to state 256
-- On DARROW shift to state 259

State 256:
param -> LPAREN id COLON LENS IN QMARK DEQARROW . appexp RPAREN [ TYVARIDENT LPAREN EQUAL COLON ARROW ]
-- On UIDENT shift to state 5
-- On SYNTH shift to state 36
-- On STR shift to state 37
-- On SQUASH shift to state 38
-- On QUALIDENT shift to state 6
-- On PROJECT shift to state 39
-- On PERM shift to state 40
-- On NSET shift to state 43
-- On LPAREN shift to state 44
-- On LIDENT shift to state 7
-- On LANGLE shift to state 47
-- On INTEGER shift to state 49
-- On HASH shift to state 50
-- On GRAMMAR shift to state 75
-- On CSET shift to state 81
-- On CHARACTER shift to state 82
-- On CEX shift to state 83
-- On BOOLEAN shift to state 134
-- On BEGIN shift to state 135
-- On tyexp shift to state 136
-- On repexp shift to state 157
-- On qid shift to state 158
-- On matchexp shift to state 159
-- On appexp shift to state 257
-- On aexp shift to state 162

State 257:
appexp -> appexp . repexp [ UIDENT STR RPAREN QUALIDENT NSET LPAREN LIDENT LANGLE INTEGER HASH GRAMMAR CSET CHARACTER CEX BOOLEAN BEGIN ]
param -> LPAREN id COLON LENS IN QMARK DEQARROW appexp . RPAREN [ TYVARIDENT LPAREN EQUAL COLON ARROW ]
-- On UIDENT shift to state 5
-- On STR shift to state 37
-- On RPAREN shift to state 258
-- On QUALIDENT shift to state 6
-- On NSET shift to state 43
-- On LPAREN shift to state 44
-- On LIDENT shift to state 7
-- On LANGLE shift to state 47
-- On INTEGER shift to state 49
-- On HASH shift to state 50
-- On GRAMMAR shift to state 75
-- On CSET shift to state 81
-- On CHARACTER shift to state 82
-- On CEX shift to state 83
-- On BOOLEAN shift to state 134
-- On BEGIN shift to state 135
-- On tyexp shift to state 136
-- On repexp shift to state 161
-- On qid shift to state 158
-- On matchexp shift to state 159
-- On aexp shift to state 162

State 258:
param -> LPAREN id COLON LENS IN QMARK DEQARROW appexp RPAREN . [ TYVARIDENT LPAREN EQUAL COLON ARROW ]
-- On TYVARIDENT reduce production param -> LPAREN id COLON LENS IN QMARK DEQARROW appexp RPAREN 
-- On LPAREN reduce production param -> LPAREN id COLON LENS IN QMARK DEQARROW appexp RPAREN 
-- On EQUAL reduce production param -> LPAREN id COLON LENS IN QMARK DEQARROW appexp RPAREN 
-- On COLON reduce production param -> LPAREN id COLON LENS IN QMARK DEQARROW appexp RPAREN 
-- On ARROW reduce production param -> LPAREN id COLON LENS IN QMARK DEQARROW appexp RPAREN 

State 259:
param -> LPAREN id COLON LENS IN QMARK DARROW . appexp RPAREN [ TYVARIDENT LPAREN EQUAL COLON ARROW ]
-- On UIDENT shift to state 5
-- On SYNTH shift to state 36
-- On STR shift to state 37
-- On SQUASH shift to state 38
-- On QUALIDENT shift to state 6
-- On PROJECT shift to state 39
-- On PERM shift to state 40
-- On NSET shift to state 43
-- On LPAREN shift to state 44
-- On LIDENT shift to state 7
-- On LANGLE shift to state 47
-- On INTEGER shift to state 49
-- On HASH shift to state 50
-- On GRAMMAR shift to state 75
-- On CSET shift to state 81
-- On CHARACTER shift to state 82
-- On CEX shift to state 83
-- On BOOLEAN shift to state 134
-- On BEGIN shift to state 135
-- On tyexp shift to state 136
-- On repexp shift to state 157
-- On qid shift to state 158
-- On matchexp shift to state 159
-- On appexp shift to state 260
-- On aexp shift to state 162

State 260:
appexp -> appexp . repexp [ UIDENT STR RPAREN QUALIDENT NSET LPAREN LIDENT LANGLE INTEGER HASH GRAMMAR CSET CHARACTER CEX BOOLEAN BEGIN ]
param -> LPAREN id COLON LENS IN QMARK DARROW appexp . RPAREN [ TYVARIDENT LPAREN EQUAL COLON ARROW ]
-- On UIDENT shift to state 5
-- On STR shift to state 37
-- On RPAREN shift to state 261
-- On QUALIDENT shift to state 6
-- On NSET shift to state 43
-- On LPAREN shift to state 44
-- On LIDENT shift to state 7
-- On LANGLE shift to state 47
-- On INTEGER shift to state 49
-- On HASH shift to state 50
-- On GRAMMAR shift to state 75
-- On CSET shift to state 81
-- On CHARACTER shift to state 82
-- On CEX shift to state 83
-- On BOOLEAN shift to state 134
-- On BEGIN shift to state 135
-- On tyexp shift to state 136
-- On repexp shift to state 161
-- On qid shift to state 158
-- On matchexp shift to state 159
-- On aexp shift to state 162

State 261:
param -> LPAREN id COLON LENS IN QMARK DARROW appexp RPAREN . [ TYVARIDENT LPAREN EQUAL COLON ARROW ]
-- On TYVARIDENT reduce production param -> LPAREN id COLON LENS IN QMARK DARROW appexp RPAREN 
-- On LPAREN reduce production param -> LPAREN id COLON LENS IN QMARK DARROW appexp RPAREN 
-- On EQUAL reduce production param -> LPAREN id COLON LENS IN QMARK DARROW appexp RPAREN 
-- On COLON reduce production param -> LPAREN id COLON LENS IN QMARK DARROW appexp RPAREN 
-- On ARROW reduce production param -> LPAREN id COLON LENS IN QMARK DARROW appexp RPAREN 

State 262:
appexp -> appexp . repexp [ UIDENT STR QUALIDENT NSET LPAREN LIDENT LANGLE INTEGER HASH GRAMMAR DEQARROW DARROW CSET CHARACTER CEX BOOLEAN BEGIN ]
param -> LPAREN id COLON LENS IN appexp . DARROW QMARK RPAREN [ TYVARIDENT LPAREN EQUAL COLON ARROW ]
param -> LPAREN id COLON LENS IN appexp . DEQARROW QMARK RPAREN [ TYVARIDENT LPAREN EQUAL COLON ARROW ]
param -> LPAREN id COLON LENS IN appexp . DARROW appexp RPAREN [ TYVARIDENT LPAREN EQUAL COLON ARROW ]
param -> LPAREN id COLON LENS IN appexp . DEQARROW appexp RPAREN [ TYVARIDENT LPAREN EQUAL COLON ARROW ]
-- On UIDENT shift to state 5
-- On STR shift to state 37
-- On QUALIDENT shift to state 6
-- On NSET shift to state 43
-- On LPAREN shift to state 44
-- On LIDENT shift to state 7
-- On LANGLE shift to state 47
-- On INTEGER shift to state 49
-- On HASH shift to state 50
-- On GRAMMAR shift to state 75
-- On DEQARROW shift to state 263
-- On DARROW shift to state 268
-- On CSET shift to state 81
-- On CHARACTER shift to state 82
-- On CEX shift to state 83
-- On BOOLEAN shift to state 134
-- On BEGIN shift to state 135
-- On tyexp shift to state 136
-- On repexp shift to state 161
-- On qid shift to state 158
-- On matchexp shift to state 159
-- On aexp shift to state 162

State 263:
param -> LPAREN id COLON LENS IN appexp DEQARROW . QMARK RPAREN [ TYVARIDENT LPAREN EQUAL COLON ARROW ]
param -> LPAREN id COLON LENS IN appexp DEQARROW . appexp RPAREN [ TYVARIDENT LPAREN EQUAL COLON ARROW ]
-- On UIDENT shift to state 5
-- On SYNTH shift to state 36
-- On STR shift to state 37
-- On SQUASH shift to state 38
-- On QUALIDENT shift to state 6
-- On QMARK shift to state 264
-- On PROJECT shift to state 39
-- On PERM shift to state 40
-- On NSET shift to state 43
-- On LPAREN shift to state 44
-- On LIDENT shift to state 7
-- On LANGLE shift to state 47
-- On INTEGER shift to state 49
-- On HASH shift to state 50
-- On GRAMMAR shift to state 75
-- On CSET shift to state 81
-- On CHARACTER shift to state 82
-- On CEX shift to state 83
-- On BOOLEAN shift to state 134
-- On BEGIN shift to state 135
-- On tyexp shift to state 136
-- On repexp shift to state 157
-- On qid shift to state 158
-- On matchexp shift to state 159
-- On appexp shift to state 266
-- On aexp shift to state 162

State 264:
param -> LPAREN id COLON LENS IN appexp DEQARROW QMARK . RPAREN [ TYVARIDENT LPAREN EQUAL COLON ARROW ]
-- On RPAREN shift to state 265

State 265:
param -> LPAREN id COLON LENS IN appexp DEQARROW QMARK RPAREN . [ TYVARIDENT LPAREN EQUAL COLON ARROW ]
-- On TYVARIDENT reduce production param -> LPAREN id COLON LENS IN appexp DEQARROW QMARK RPAREN 
-- On LPAREN reduce production param -> LPAREN id COLON LENS IN appexp DEQARROW QMARK RPAREN 
-- On EQUAL reduce production param -> LPAREN id COLON LENS IN appexp DEQARROW QMARK RPAREN 
-- On COLON reduce production param -> LPAREN id COLON LENS IN appexp DEQARROW QMARK RPAREN 
-- On ARROW reduce production param -> LPAREN id COLON LENS IN appexp DEQARROW QMARK RPAREN 

State 266:
appexp -> appexp . repexp [ UIDENT STR RPAREN QUALIDENT NSET LPAREN LIDENT LANGLE INTEGER HASH GRAMMAR CSET CHARACTER CEX BOOLEAN BEGIN ]
param -> LPAREN id COLON LENS IN appexp DEQARROW appexp . RPAREN [ TYVARIDENT LPAREN EQUAL COLON ARROW ]
-- On UIDENT shift to state 5
-- On STR shift to state 37
-- On RPAREN shift to state 267
-- On QUALIDENT shift to state 6
-- On NSET shift to state 43
-- On LPAREN shift to state 44
-- On LIDENT shift to state 7
-- On LANGLE shift to state 47
-- On INTEGER shift to state 49
-- On HASH shift to state 50
-- On GRAMMAR shift to state 75
-- On CSET shift to state 81
-- On CHARACTER shift to state 82
-- On CEX shift to state 83
-- On BOOLEAN shift to state 134
-- On BEGIN shift to state 135
-- On tyexp shift to state 136
-- On repexp shift to state 161
-- On qid shift to state 158
-- On matchexp shift to state 159
-- On aexp shift to state 162

State 267:
param -> LPAREN id COLON LENS IN appexp DEQARROW appexp RPAREN . [ TYVARIDENT LPAREN EQUAL COLON ARROW ]
-- On TYVARIDENT reduce production param -> LPAREN id COLON LENS IN appexp DEQARROW appexp RPAREN 
-- On LPAREN reduce production param -> LPAREN id COLON LENS IN appexp DEQARROW appexp RPAREN 
-- On EQUAL reduce production param -> LPAREN id COLON LENS IN appexp DEQARROW appexp RPAREN 
-- On COLON reduce production param -> LPAREN id COLON LENS IN appexp DEQARROW appexp RPAREN 
-- On ARROW reduce production param -> LPAREN id COLON LENS IN appexp DEQARROW appexp RPAREN 

State 268:
param -> LPAREN id COLON LENS IN appexp DARROW . QMARK RPAREN [ TYVARIDENT LPAREN EQUAL COLON ARROW ]
param -> LPAREN id COLON LENS IN appexp DARROW . appexp RPAREN [ TYVARIDENT LPAREN EQUAL COLON ARROW ]
-- On UIDENT shift to state 5
-- On SYNTH shift to state 36
-- On STR shift to state 37
-- On SQUASH shift to state 38
-- On QUALIDENT shift to state 6
-- On QMARK shift to state 269
-- On PROJECT shift to state 39
-- On PERM shift to state 40
-- On NSET shift to state 43
-- On LPAREN shift to state 44
-- On LIDENT shift to state 7
-- On LANGLE shift to state 47
-- On INTEGER shift to state 49
-- On HASH shift to state 50
-- On GRAMMAR shift to state 75
-- On CSET shift to state 81
-- On CHARACTER shift to state 82
-- On CEX shift to state 83
-- On BOOLEAN shift to state 134
-- On BEGIN shift to state 135
-- On tyexp shift to state 136
-- On repexp shift to state 157
-- On qid shift to state 158
-- On matchexp shift to state 159
-- On appexp shift to state 271
-- On aexp shift to state 162

State 269:
param -> LPAREN id COLON LENS IN appexp DARROW QMARK . RPAREN [ TYVARIDENT LPAREN EQUAL COLON ARROW ]
-- On RPAREN shift to state 270

State 270:
param -> LPAREN id COLON LENS IN appexp DARROW QMARK RPAREN . [ TYVARIDENT LPAREN EQUAL COLON ARROW ]
-- On TYVARIDENT reduce production param -> LPAREN id COLON LENS IN appexp DARROW QMARK RPAREN 
-- On LPAREN reduce production param -> LPAREN id COLON LENS IN appexp DARROW QMARK RPAREN 
-- On EQUAL reduce production param -> LPAREN id COLON LENS IN appexp DARROW QMARK RPAREN 
-- On COLON reduce production param -> LPAREN id COLON LENS IN appexp DARROW QMARK RPAREN 
-- On ARROW reduce production param -> LPAREN id COLON LENS IN appexp DARROW QMARK RPAREN 

State 271:
appexp -> appexp . repexp [ UIDENT STR RPAREN QUALIDENT NSET LPAREN LIDENT LANGLE INTEGER HASH GRAMMAR CSET CHARACTER CEX BOOLEAN BEGIN ]
param -> LPAREN id COLON LENS IN appexp DARROW appexp . RPAREN [ TYVARIDENT LPAREN EQUAL COLON ARROW ]
-- On UIDENT shift to state 5
-- On STR shift to state 37
-- On RPAREN shift to state 272
-- On QUALIDENT shift to state 6
-- On NSET shift to state 43
-- On LPAREN shift to state 44
-- On LIDENT shift to state 7
-- On LANGLE shift to state 47
-- On INTEGER shift to state 49
-- On HASH shift to state 50
-- On GRAMMAR shift to state 75
-- On CSET shift to state 81
-- On CHARACTER shift to state 82
-- On CEX shift to state 83
-- On BOOLEAN shift to state 134
-- On BEGIN shift to state 135
-- On tyexp shift to state 136
-- On repexp shift to state 161
-- On qid shift to state 158
-- On matchexp shift to state 159
-- On aexp shift to state 162

State 272:
param -> LPAREN id COLON LENS IN appexp DARROW appexp RPAREN . [ TYVARIDENT LPAREN EQUAL COLON ARROW ]
-- On TYVARIDENT reduce production param -> LPAREN id COLON LENS IN appexp DARROW appexp RPAREN 
-- On LPAREN reduce production param -> LPAREN id COLON LENS IN appexp DARROW appexp RPAREN 
-- On EQUAL reduce production param -> LPAREN id COLON LENS IN appexp DARROW appexp RPAREN 
-- On COLON reduce production param -> LPAREN id COLON LENS IN appexp DARROW appexp RPAREN 
-- On ARROW reduce production param -> LPAREN id COLON LENS IN appexp DARROW appexp RPAREN 

State 273:
param -> LPAREN id COLON sort . RPAREN [ TYVARIDENT LPAREN EQUAL COLON ARROW ]
param -> LPAREN id COLON sort . WHERE BANG exp RPAREN [ TYVARIDENT LPAREN EQUAL COLON ARROW ]
param -> LPAREN id COLON sort . WHERE exp RPAREN [ TYVARIDENT LPAREN EQUAL COLON ARROW ]
-- On WHERE shift to state 274
-- On RPAREN shift to state 280

State 274:
param -> LPAREN id COLON sort WHERE . BANG exp RPAREN [ TYVARIDENT LPAREN EQUAL COLON ARROW ]
param -> LPAREN id COLON sort WHERE . exp RPAREN [ TYVARIDENT LPAREN EQUAL COLON ARROW ]
-- On UIDENT shift to state 5
-- On SYNTH shift to state 36
-- On STR shift to state 37
-- On SQUASH shift to state 38
-- On QUALIDENT shift to state 6
-- On PROJECT shift to state 39
-- On PERM shift to state 40
-- On NSET shift to state 43
-- On MINUS shift to state 46
-- On MATCH shift to state 48
-- On LPAREN shift to state 44
-- On LIDENT shift to state 7
-- On LET shift to state 85
-- On LANGLE shift to state 47
-- On INTEGER shift to state 49
-- On HASH shift to state 50
-- On GRAMMAR shift to state 75
-- On FUN shift to state 123
-- On CSET shift to state 81
-- On CHARACTER shift to state 82
-- On CEX shift to state 83
-- On BOOLEAN shift to state 134
-- On BEGIN shift to state 135
-- On BANG shift to state 275
-- On tyexp shift to state 136
-- On tildeexp shift to state 155
-- On rewriteexp shift to state 168
-- On repexp shift to state 157
-- On qid shift to state 158
-- On obarexp shift to state 176
-- On minusexp shift to state 178
-- On matchexp shift to state 159
-- On ltexp shift to state 179
-- On leqexp shift to state 180
-- On lenscomponentexp shift to state 181
-- On infixexp shift to state 182
-- On gtexp shift to state 185
-- On geqexp shift to state 186
-- On funexp shift to state 230
-- On exp shift to state 278
-- On equalexp shift to state 233
-- On dotexp shift to state 188
-- On dbarexp shift to state 238
-- On composeexp shift to state 241
-- On commaexp shift to state 247
-- On cexp shift to state 248
-- On barexp shift to state 246
-- On appexp shift to state 192
-- On ampexp shift to state 226
-- On ampampexp shift to state 229
-- On aexp shift to state 162

State 275:
param -> LPAREN id COLON sort WHERE BANG . exp RPAREN [ TYVARIDENT LPAREN EQUAL COLON ARROW ]
-- On UIDENT shift to state 5
-- On SYNTH shift to state 36
-- On STR shift to state 37
-- On SQUASH shift to state 38
-- On QUALIDENT shift to state 6
-- On PROJECT shift to state 39
-- On PERM shift to state 40
-- On NSET shift to state 43
-- On MINUS shift to state 46
-- On MATCH shift to state 48
-- On LPAREN shift to state 44
-- On LIDENT shift to state 7
-- On LET shift to state 85
-- On LANGLE shift to state 47
-- On INTEGER shift to state 49
-- On HASH shift to state 50
-- On GRAMMAR shift to state 75
-- On FUN shift to state 123
-- On CSET shift to state 81
-- On CHARACTER shift to state 82
-- On CEX shift to state 83
-- On BOOLEAN shift to state 134
-- On BEGIN shift to state 135
-- On tyexp shift to state 136
-- On tildeexp shift to state 155
-- On rewriteexp shift to state 168
-- On repexp shift to state 157
-- On qid shift to state 158
-- On obarexp shift to state 176
-- On minusexp shift to state 178
-- On matchexp shift to state 159
-- On ltexp shift to state 179
-- On leqexp shift to state 180
-- On lenscomponentexp shift to state 181
-- On infixexp shift to state 182
-- On gtexp shift to state 185
-- On geqexp shift to state 186
-- On funexp shift to state 230
-- On exp shift to state 276
-- On equalexp shift to state 233
-- On dotexp shift to state 188
-- On dbarexp shift to state 238
-- On composeexp shift to state 241
-- On commaexp shift to state 247
-- On cexp shift to state 248
-- On barexp shift to state 246
-- On appexp shift to state 192
-- On ampexp shift to state 226
-- On ampampexp shift to state 229
-- On aexp shift to state 162

State 276:
param -> LPAREN id COLON sort WHERE BANG exp . RPAREN [ TYVARIDENT LPAREN EQUAL COLON ARROW ]
-- On RPAREN shift to state 277

State 277:
param -> LPAREN id COLON sort WHERE BANG exp RPAREN . [ TYVARIDENT LPAREN EQUAL COLON ARROW ]
-- On TYVARIDENT reduce production param -> LPAREN id COLON sort WHERE BANG exp RPAREN 
-- On LPAREN reduce production param -> LPAREN id COLON sort WHERE BANG exp RPAREN 
-- On EQUAL reduce production param -> LPAREN id COLON sort WHERE BANG exp RPAREN 
-- On COLON reduce production param -> LPAREN id COLON sort WHERE BANG exp RPAREN 
-- On ARROW reduce production param -> LPAREN id COLON sort WHERE BANG exp RPAREN 

State 278:
param -> LPAREN id COLON sort WHERE exp . RPAREN [ TYVARIDENT LPAREN EQUAL COLON ARROW ]
-- On RPAREN shift to state 279

State 279:
param -> LPAREN id COLON sort WHERE exp RPAREN . [ TYVARIDENT LPAREN EQUAL COLON ARROW ]
-- On TYVARIDENT reduce production param -> LPAREN id COLON sort WHERE exp RPAREN 
-- On LPAREN reduce production param -> LPAREN id COLON sort WHERE exp RPAREN 
-- On EQUAL reduce production param -> LPAREN id COLON sort WHERE exp RPAREN 
-- On COLON reduce production param -> LPAREN id COLON sort WHERE exp RPAREN 
-- On ARROW reduce production param -> LPAREN id COLON sort WHERE exp RPAREN 

State 280:
param -> LPAREN id COLON sort RPAREN . [ TYVARIDENT LPAREN EQUAL COLON ARROW ]
-- On TYVARIDENT reduce production param -> LPAREN id COLON sort RPAREN 
-- On LPAREN reduce production param -> LPAREN id COLON sort RPAREN 
-- On EQUAL reduce production param -> LPAREN id COLON sort RPAREN 
-- On COLON reduce production param -> LPAREN id COLON sort RPAREN 
-- On ARROW reduce production param -> LPAREN id COLON sort RPAREN 

State 281:
funexp -> FUN param_list . ARROW exp [ TYPE TEST RPAREN RANGLE MODULE LET IN EOF END ]
funexp -> FUN param_list . COLON asort ARROW exp [ TYPE TEST RPAREN RANGLE MODULE LET IN EOF END ]
-- On COLON shift to state 282
-- On ARROW shift to state 286

State 282:
funexp -> FUN param_list COLON . asort ARROW exp [ TYPE TEST RPAREN RANGLE MODULE LET IN EOF END ]
-- On UNIT shift to state 24
-- On TYVARIDENT shift to state 12
-- On STRINGPREFS shift to state 25
-- On STRINGLISTPREFS shift to state 26
-- On STRING shift to state 27
-- On SKELETONS shift to state 28
-- On RESOURCES shift to state 29
-- On REGEXP shift to state 30
-- On QUALIDENT shift to state 31
-- On LIDENT shift to state 52
-- On LENS shift to state 53
-- On INTPREFS shift to state 54
-- On INT shift to state 55
-- On CHAR shift to state 59
-- On CANONIZER shift to state 60
-- On BOOLPREFS shift to state 61
-- On BOOL shift to state 62
-- On AREGEXP shift to state 63
-- On tyvar shift to state 64
-- On qvar shift to state 66
-- On asort shift to state 283

State 283:
funexp -> FUN param_list COLON asort . ARROW exp [ TYPE TEST RPAREN RANGLE MODULE LET IN EOF END ]
-- On ARROW shift to state 284

State 284:
funexp -> FUN param_list COLON asort ARROW . exp [ TYPE TEST RPAREN RANGLE MODULE LET IN EOF END ]
-- On UIDENT shift to state 5
-- On SYNTH shift to state 36
-- On STR shift to state 37
-- On SQUASH shift to state 38
-- On QUALIDENT shift to state 6
-- On PROJECT shift to state 39
-- On PERM shift to state 40
-- On NSET shift to state 43
-- On MINUS shift to state 46
-- On MATCH shift to state 48
-- On LPAREN shift to state 44
-- On LIDENT shift to state 7
-- On LET shift to state 85
-- On LANGLE shift to state 47
-- On INTEGER shift to state 49
-- On HASH shift to state 50
-- On GRAMMAR shift to state 75
-- On FUN shift to state 123
-- On CSET shift to state 81
-- On CHARACTER shift to state 82
-- On CEX shift to state 83
-- On BOOLEAN shift to state 134
-- On BEGIN shift to state 135
-- On tyexp shift to state 136
-- On tildeexp shift to state 155
-- On rewriteexp shift to state 168
-- On repexp shift to state 157
-- On qid shift to state 158
-- On obarexp shift to state 176
-- On minusexp shift to state 178
-- On matchexp shift to state 159
-- On ltexp shift to state 179
-- On leqexp shift to state 180
-- On lenscomponentexp shift to state 181
-- On infixexp shift to state 182
-- On gtexp shift to state 185
-- On geqexp shift to state 186
-- On funexp shift to state 230
-- On exp shift to state 285
-- On equalexp shift to state 233
-- On dotexp shift to state 188
-- On dbarexp shift to state 238
-- On composeexp shift to state 241
-- On commaexp shift to state 247
-- On cexp shift to state 248
-- On barexp shift to state 246
-- On appexp shift to state 192
-- On ampexp shift to state 226
-- On ampampexp shift to state 229
-- On aexp shift to state 162

State 285:
funexp -> FUN param_list COLON asort ARROW exp . [ TYPE TEST RPAREN RANGLE MODULE LET IN EOF END ]
-- On TYPE reduce production funexp -> FUN param_list COLON asort ARROW exp 
-- On TEST reduce production funexp -> FUN param_list COLON asort ARROW exp 
-- On RPAREN reduce production funexp -> FUN param_list COLON asort ARROW exp 
-- On RANGLE reduce production funexp -> FUN param_list COLON asort ARROW exp 
-- On MODULE reduce production funexp -> FUN param_list COLON asort ARROW exp 
-- On LET reduce production funexp -> FUN param_list COLON asort ARROW exp 
-- On IN reduce production funexp -> FUN param_list COLON asort ARROW exp 
-- On EOF reduce production funexp -> FUN param_list COLON asort ARROW exp 
-- On END reduce production funexp -> FUN param_list COLON asort ARROW exp 

State 286:
funexp -> FUN param_list ARROW . exp [ TYPE TEST RPAREN RANGLE MODULE LET IN EOF END ]
-- On UIDENT shift to state 5
-- On SYNTH shift to state 36
-- On STR shift to state 37
-- On SQUASH shift to state 38
-- On QUALIDENT shift to state 6
-- On PROJECT shift to state 39
-- On PERM shift to state 40
-- On NSET shift to state 43
-- On MINUS shift to state 46
-- On MATCH shift to state 48
-- On LPAREN shift to state 44
-- On LIDENT shift to state 7
-- On LET shift to state 85
-- On LANGLE shift to state 47
-- On INTEGER shift to state 49
-- On HASH shift to state 50
-- On GRAMMAR shift to state 75
-- On FUN shift to state 123
-- On CSET shift to state 81
-- On CHARACTER shift to state 82
-- On CEX shift to state 83
-- On BOOLEAN shift to state 134
-- On BEGIN shift to state 135
-- On tyexp shift to state 136
-- On tildeexp shift to state 155
-- On rewriteexp shift to state 168
-- On repexp shift to state 157
-- On qid shift to state 158
-- On obarexp shift to state 176
-- On minusexp shift to state 178
-- On matchexp shift to state 159
-- On ltexp shift to state 179
-- On leqexp shift to state 180
-- On lenscomponentexp shift to state 181
-- On infixexp shift to state 182
-- On gtexp shift to state 185
-- On geqexp shift to state 186
-- On funexp shift to state 230
-- On exp shift to state 287
-- On equalexp shift to state 233
-- On dotexp shift to state 188
-- On dbarexp shift to state 238
-- On composeexp shift to state 241
-- On commaexp shift to state 247
-- On cexp shift to state 248
-- On barexp shift to state 246
-- On appexp shift to state 192
-- On ampexp shift to state 226
-- On ampampexp shift to state 229
-- On aexp shift to state 162

State 287:
funexp -> FUN param_list ARROW exp . [ TYPE TEST RPAREN RANGLE MODULE LET IN EOF END ]
-- On TYPE reduce production funexp -> FUN param_list ARROW exp 
-- On TEST reduce production funexp -> FUN param_list ARROW exp 
-- On RPAREN reduce production funexp -> FUN param_list ARROW exp 
-- On RANGLE reduce production funexp -> FUN param_list ARROW exp 
-- On MODULE reduce production funexp -> FUN param_list ARROW exp 
-- On LET reduce production funexp -> FUN param_list ARROW exp 
-- On IN reduce production funexp -> FUN param_list ARROW exp 
-- On EOF reduce production funexp -> FUN param_list ARROW exp 
-- On END reduce production funexp -> FUN param_list ARROW exp 

State 288:
param_list -> param . param_list2 [ EQUAL COLON ARROW ]
-- On TYVARIDENT shift to state 124
-- On LPAREN shift to state 125
-- On param_list2 shift to state 289
-- On param shift to state 290
-- On EQUAL reduce production param_list2 -> 
-- On COLON reduce production param_list2 -> 
-- On ARROW reduce production param_list2 -> 

State 289:
param_list -> param param_list2 . [ EQUAL COLON ARROW ]
-- On EQUAL reduce production param_list -> param param_list2 
-- On COLON reduce production param_list -> param param_list2 
-- On ARROW reduce production param_list -> param param_list2 

State 290:
param_list2 -> param . param_list2 [ EQUAL COLON ARROW ]
-- On TYVARIDENT shift to state 124
-- On LPAREN shift to state 125
-- On param_list2 shift to state 291
-- On param shift to state 290
-- On EQUAL reduce production param_list2 -> 
-- On COLON reduce production param_list2 -> 
-- On ARROW reduce production param_list2 -> 

State 291:
param_list2 -> param param_list2 . [ EQUAL COLON ARROW ]
-- On EQUAL reduce production param_list2 -> param param_list2 
-- On COLON reduce production param_list2 -> param param_list2 
-- On ARROW reduce production param_list2 -> param param_list2 

State 292:
exp -> LET letpat EQUAL exp . IN exp [ TYPE TEST RPAREN RANGLE MODULE LET IN EOF END ]
-- On IN shift to state 293

State 293:
exp -> LET letpat EQUAL exp IN . exp [ TYPE TEST RPAREN RANGLE MODULE LET IN EOF END ]
-- On UIDENT shift to state 5
-- On SYNTH shift to state 36
-- On STR shift to state 37
-- On SQUASH shift to state 38
-- On QUALIDENT shift to state 6
-- On PROJECT shift to state 39
-- On PERM shift to state 40
-- On NSET shift to state 43
-- On MINUS shift to state 46
-- On MATCH shift to state 48
-- On LPAREN shift to state 44
-- On LIDENT shift to state 7
-- On LET shift to state 85
-- On LANGLE shift to state 47
-- On INTEGER shift to state 49
-- On HASH shift to state 50
-- On GRAMMAR shift to state 75
-- On FUN shift to state 123
-- On CSET shift to state 81
-- On CHARACTER shift to state 82
-- On CEX shift to state 83
-- On BOOLEAN shift to state 134
-- On BEGIN shift to state 135
-- On tyexp shift to state 136
-- On tildeexp shift to state 155
-- On rewriteexp shift to state 168
-- On repexp shift to state 157
-- On qid shift to state 158
-- On obarexp shift to state 176
-- On minusexp shift to state 178
-- On matchexp shift to state 159
-- On ltexp shift to state 179
-- On leqexp shift to state 180
-- On lenscomponentexp shift to state 181
-- On infixexp shift to state 182
-- On gtexp shift to state 185
-- On geqexp shift to state 186
-- On funexp shift to state 230
-- On exp shift to state 294
-- On equalexp shift to state 233
-- On dotexp shift to state 188
-- On dbarexp shift to state 238
-- On composeexp shift to state 241
-- On commaexp shift to state 247
-- On cexp shift to state 248
-- On barexp shift to state 246
-- On appexp shift to state 192
-- On ampexp shift to state 226
-- On ampampexp shift to state 229
-- On aexp shift to state 162

State 294:
exp -> LET letpat EQUAL exp IN exp . [ TYPE TEST RPAREN RANGLE MODULE LET IN EOF END ]
-- On TYPE reduce production exp -> LET letpat EQUAL exp IN exp 
-- On TEST reduce production exp -> LET letpat EQUAL exp IN exp 
-- On RPAREN reduce production exp -> LET letpat EQUAL exp IN exp 
-- On RANGLE reduce production exp -> LET letpat EQUAL exp IN exp 
-- On MODULE reduce production exp -> LET letpat EQUAL exp IN exp 
-- On LET reduce production exp -> LET letpat EQUAL exp IN exp 
-- On IN reduce production exp -> LET letpat EQUAL exp IN exp 
-- On EOF reduce production exp -> LET letpat EQUAL exp IN exp 
-- On END reduce production exp -> LET letpat EQUAL exp IN exp 

State 295:
letpat -> letpat COMMA . lcpat [ EQUAL COMMA COLON ]
-- On UNDERLINE shift to state 86
-- On UIDENT shift to state 93
-- On STR shift to state 88
-- On QUALIDENT shift to state 98
-- On LPAREN shift to state 92
-- On LIDENT shift to state 94
-- On INTEGER shift to state 95
-- On CSET shift to state 102
-- On CEX shift to state 96
-- On BOOLEAN shift to state 99
-- On listpat shift to state 106
-- On lcpat shift to state 296
-- On conpat shift to state 108
-- On apat shift to state 112
-- On aapat shift to state 101

State 296:
letpat -> letpat COMMA lcpat . [ EQUAL COMMA COLON ]
-- On EQUAL reduce production letpat -> letpat COMMA lcpat 
-- On COMMA reduce production letpat -> letpat COMMA lcpat 
-- On COLON reduce production letpat -> letpat COMMA lcpat 

State 297:
exp -> LET letpat COLON . sort EQUAL exp IN exp [ TYPE TEST RPAREN RANGLE MODULE LET IN EOF END ]
-- On UNIT shift to state 24
-- On TYVARIDENT shift to state 12
-- On STRINGPREFS shift to state 25
-- On STRINGLISTPREFS shift to state 26
-- On STRING shift to state 27
-- On SKELETONS shift to state 28
-- On RESOURCES shift to state 29
-- On REGEXP shift to state 30
-- On QUALIDENT shift to state 31
-- On LPAREN shift to state 32
-- On LIDENT shift to state 52
-- On LENS shift to state 53
-- On INTPREFS shift to state 54
-- On INT shift to state 55
-- On FORALL shift to state 56
-- On CHAR shift to state 59
-- On CANONIZER shift to state 60
-- On BOOLPREFS shift to state 61
-- On BOOL shift to state 62
-- On AREGEXP shift to state 63
-- On tyvar shift to state 64
-- On sort shift to state 298
-- On qvar shift to state 66
-- On productsort shift to state 67
-- On datatypesort shift to state 149
-- On bsort shift to state 150
-- On asort shift to state 152
-- On arrowsort shift to state 153

State 298:
exp -> LET letpat COLON sort . EQUAL exp IN exp [ TYPE TEST RPAREN RANGLE MODULE LET IN EOF END ]
-- On EQUAL shift to state 299

State 299:
exp -> LET letpat COLON sort EQUAL . exp IN exp [ TYPE TEST RPAREN RANGLE MODULE LET IN EOF END ]
-- On UIDENT shift to state 5
-- On SYNTH shift to state 36
-- On STR shift to state 37
-- On SQUASH shift to state 38
-- On QUALIDENT shift to state 6
-- On PROJECT shift to state 39
-- On PERM shift to state 40
-- On NSET shift to state 43
-- On MINUS shift to state 46
-- On MATCH shift to state 48
-- On LPAREN shift to state 44
-- On LIDENT shift to state 7
-- On LET shift to state 85
-- On LANGLE shift to state 47
-- On INTEGER shift to state 49
-- On HASH shift to state 50
-- On GRAMMAR shift to state 75
-- On FUN shift to state 123
-- On CSET shift to state 81
-- On CHARACTER shift to state 82
-- On CEX shift to state 83
-- On BOOLEAN shift to state 134
-- On BEGIN shift to state 135
-- On tyexp shift to state 136
-- On tildeexp shift to state 155
-- On rewriteexp shift to state 168
-- On repexp shift to state 157
-- On qid shift to state 158
-- On obarexp shift to state 176
-- On minusexp shift to state 178
-- On matchexp shift to state 159
-- On ltexp shift to state 179
-- On leqexp shift to state 180
-- On lenscomponentexp shift to state 181
-- On infixexp shift to state 182
-- On gtexp shift to state 185
-- On geqexp shift to state 186
-- On funexp shift to state 230
-- On exp shift to state 300
-- On equalexp shift to state 233
-- On dotexp shift to state 188
-- On dbarexp shift to state 238
-- On composeexp shift to state 241
-- On commaexp shift to state 247
-- On cexp shift to state 248
-- On barexp shift to state 246
-- On appexp shift to state 192
-- On ampexp shift to state 226
-- On ampampexp shift to state 229
-- On aexp shift to state 162

State 300:
exp -> LET letpat COLON sort EQUAL exp . IN exp [ TYPE TEST RPAREN RANGLE MODULE LET IN EOF END ]
-- On IN shift to state 301

State 301:
exp -> LET letpat COLON sort EQUAL exp IN . exp [ TYPE TEST RPAREN RANGLE MODULE LET IN EOF END ]
-- On UIDENT shift to state 5
-- On SYNTH shift to state 36
-- On STR shift to state 37
-- On SQUASH shift to state 38
-- On QUALIDENT shift to state 6
-- On PROJECT shift to state 39
-- On PERM shift to state 40
-- On NSET shift to state 43
-- On MINUS shift to state 46
-- On MATCH shift to state 48
-- On LPAREN shift to state 44
-- On LIDENT shift to state 7
-- On LET shift to state 85
-- On LANGLE shift to state 47
-- On INTEGER shift to state 49
-- On HASH shift to state 50
-- On GRAMMAR shift to state 75
-- On FUN shift to state 123
-- On CSET shift to state 81
-- On CHARACTER shift to state 82
-- On CEX shift to state 83
-- On BOOLEAN shift to state 134
-- On BEGIN shift to state 135
-- On tyexp shift to state 136
-- On tildeexp shift to state 155
-- On rewriteexp shift to state 168
-- On repexp shift to state 157
-- On qid shift to state 158
-- On obarexp shift to state 176
-- On minusexp shift to state 178
-- On matchexp shift to state 159
-- On ltexp shift to state 179
-- On leqexp shift to state 180
-- On lenscomponentexp shift to state 181
-- On infixexp shift to state 182
-- On gtexp shift to state 185
-- On geqexp shift to state 186
-- On funexp shift to state 230
-- On exp shift to state 302
-- On equalexp shift to state 233
-- On dotexp shift to state 188
-- On dbarexp shift to state 238
-- On composeexp shift to state 241
-- On commaexp shift to state 247
-- On cexp shift to state 248
-- On barexp shift to state 246
-- On appexp shift to state 192
-- On ampexp shift to state 226
-- On ampampexp shift to state 229
-- On aexp shift to state 162

State 302:
exp -> LET letpat COLON sort EQUAL exp IN exp . [ TYPE TEST RPAREN RANGLE MODULE LET IN EOF END ]
-- On TYPE reduce production exp -> LET letpat COLON sort EQUAL exp IN exp 
-- On TEST reduce production exp -> LET letpat COLON sort EQUAL exp IN exp 
-- On RPAREN reduce production exp -> LET letpat COLON sort EQUAL exp IN exp 
-- On RANGLE reduce production exp -> LET letpat COLON sort EQUAL exp IN exp 
-- On MODULE reduce production exp -> LET letpat COLON sort EQUAL exp IN exp 
-- On LET reduce production exp -> LET letpat COLON sort EQUAL exp IN exp 
-- On IN reduce production exp -> LET letpat COLON sort EQUAL exp IN exp 
-- On EOF reduce production exp -> LET letpat COLON sort EQUAL exp IN exp 
-- On END reduce production exp -> LET letpat COLON sort EQUAL exp IN exp 

State 303:
exp -> LET id . param_list COLON sort EQUAL exp IN exp [ TYPE TEST RPAREN RANGLE MODULE LET IN EOF END ]
exp -> LET id . param_list EQUAL exp IN exp [ TYPE TEST RPAREN RANGLE MODULE LET IN EOF END ]
-- On TYVARIDENT shift to state 124
-- On LPAREN shift to state 125
-- On param_list shift to state 304
-- On param shift to state 288

State 304:
exp -> LET id param_list . COLON sort EQUAL exp IN exp [ TYPE TEST RPAREN RANGLE MODULE LET IN EOF END ]
exp -> LET id param_list . EQUAL exp IN exp [ TYPE TEST RPAREN RANGLE MODULE LET IN EOF END ]
-- On EQUAL shift to state 305
-- On COLON shift to state 309

State 305:
exp -> LET id param_list EQUAL . exp IN exp [ TYPE TEST RPAREN RANGLE MODULE LET IN EOF END ]
-- On UIDENT shift to state 5
-- On SYNTH shift to state 36
-- On STR shift to state 37
-- On SQUASH shift to state 38
-- On QUALIDENT shift to state 6
-- On PROJECT shift to state 39
-- On PERM shift to state 40
-- On NSET shift to state 43
-- On MINUS shift to state 46
-- On MATCH shift to state 48
-- On LPAREN shift to state 44
-- On LIDENT shift to state 7
-- On LET shift to state 85
-- On LANGLE shift to state 47
-- On INTEGER shift to state 49
-- On HASH shift to state 50
-- On GRAMMAR shift to state 75
-- On FUN shift to state 123
-- On CSET shift to state 81
-- On CHARACTER shift to state 82
-- On CEX shift to state 83
-- On BOOLEAN shift to state 134
-- On BEGIN shift to state 135
-- On tyexp shift to state 136
-- On tildeexp shift to state 155
-- On rewriteexp shift to state 168
-- On repexp shift to state 157
-- On qid shift to state 158
-- On obarexp shift to state 176
-- On minusexp shift to state 178
-- On matchexp shift to state 159
-- On ltexp shift to state 179
-- On leqexp shift to state 180
-- On lenscomponentexp shift to state 181
-- On infixexp shift to state 182
-- On gtexp shift to state 185
-- On geqexp shift to state 186
-- On funexp shift to state 230
-- On exp shift to state 306
-- On equalexp shift to state 233
-- On dotexp shift to state 188
-- On dbarexp shift to state 238
-- On composeexp shift to state 241
-- On commaexp shift to state 247
-- On cexp shift to state 248
-- On barexp shift to state 246
-- On appexp shift to state 192
-- On ampexp shift to state 226
-- On ampampexp shift to state 229
-- On aexp shift to state 162

State 306:
exp -> LET id param_list EQUAL exp . IN exp [ TYPE TEST RPAREN RANGLE MODULE LET IN EOF END ]
-- On IN shift to state 307

State 307:
exp -> LET id param_list EQUAL exp IN . exp [ TYPE TEST RPAREN RANGLE MODULE LET IN EOF END ]
-- On UIDENT shift to state 5
-- On SYNTH shift to state 36
-- On STR shift to state 37
-- On SQUASH shift to state 38
-- On QUALIDENT shift to state 6
-- On PROJECT shift to state 39
-- On PERM shift to state 40
-- On NSET shift to state 43
-- On MINUS shift to state 46
-- On MATCH shift to state 48
-- On LPAREN shift to state 44
-- On LIDENT shift to state 7
-- On LET shift to state 85
-- On LANGLE shift to state 47
-- On INTEGER shift to state 49
-- On HASH shift to state 50
-- On GRAMMAR shift to state 75
-- On FUN shift to state 123
-- On CSET shift to state 81
-- On CHARACTER shift to state 82
-- On CEX shift to state 83
-- On BOOLEAN shift to state 134
-- On BEGIN shift to state 135
-- On tyexp shift to state 136
-- On tildeexp shift to state 155
-- On rewriteexp shift to state 168
-- On repexp shift to state 157
-- On qid shift to state 158
-- On obarexp shift to state 176
-- On minusexp shift to state 178
-- On matchexp shift to state 159
-- On ltexp shift to state 179
-- On leqexp shift to state 180
-- On lenscomponentexp shift to state 181
-- On infixexp shift to state 182
-- On gtexp shift to state 185
-- On geqexp shift to state 186
-- On funexp shift to state 230
-- On exp shift to state 308
-- On equalexp shift to state 233
-- On dotexp shift to state 188
-- On dbarexp shift to state 238
-- On composeexp shift to state 241
-- On commaexp shift to state 247
-- On cexp shift to state 248
-- On barexp shift to state 246
-- On appexp shift to state 192
-- On ampexp shift to state 226
-- On ampampexp shift to state 229
-- On aexp shift to state 162

State 308:
exp -> LET id param_list EQUAL exp IN exp . [ TYPE TEST RPAREN RANGLE MODULE LET IN EOF END ]
-- On TYPE reduce production exp -> LET id param_list EQUAL exp IN exp 
-- On TEST reduce production exp -> LET id param_list EQUAL exp IN exp 
-- On RPAREN reduce production exp -> LET id param_list EQUAL exp IN exp 
-- On RANGLE reduce production exp -> LET id param_list EQUAL exp IN exp 
-- On MODULE reduce production exp -> LET id param_list EQUAL exp IN exp 
-- On LET reduce production exp -> LET id param_list EQUAL exp IN exp 
-- On IN reduce production exp -> LET id param_list EQUAL exp IN exp 
-- On EOF reduce production exp -> LET id param_list EQUAL exp IN exp 
-- On END reduce production exp -> LET id param_list EQUAL exp IN exp 

State 309:
exp -> LET id param_list COLON . sort EQUAL exp IN exp [ TYPE TEST RPAREN RANGLE MODULE LET IN EOF END ]
-- On UNIT shift to state 24
-- On TYVARIDENT shift to state 12
-- On STRINGPREFS shift to state 25
-- On STRINGLISTPREFS shift to state 26
-- On STRING shift to state 27
-- On SKELETONS shift to state 28
-- On RESOURCES shift to state 29
-- On REGEXP shift to state 30
-- On QUALIDENT shift to state 31
-- On LPAREN shift to state 32
-- On LIDENT shift to state 52
-- On LENS shift to state 53
-- On INTPREFS shift to state 54
-- On INT shift to state 55
-- On FORALL shift to state 56
-- On CHAR shift to state 59
-- On CANONIZER shift to state 60
-- On BOOLPREFS shift to state 61
-- On BOOL shift to state 62
-- On AREGEXP shift to state 63
-- On tyvar shift to state 64
-- On sort shift to state 310
-- On qvar shift to state 66
-- On productsort shift to state 67
-- On datatypesort shift to state 149
-- On bsort shift to state 150
-- On asort shift to state 152
-- On arrowsort shift to state 153

State 310:
exp -> LET id param_list COLON sort . EQUAL exp IN exp [ TYPE TEST RPAREN RANGLE MODULE LET IN EOF END ]
-- On EQUAL shift to state 311

State 311:
exp -> LET id param_list COLON sort EQUAL . exp IN exp [ TYPE TEST RPAREN RANGLE MODULE LET IN EOF END ]
-- On UIDENT shift to state 5
-- On SYNTH shift to state 36
-- On STR shift to state 37
-- On SQUASH shift to state 38
-- On QUALIDENT shift to state 6
-- On PROJECT shift to state 39
-- On PERM shift to state 40
-- On NSET shift to state 43
-- On MINUS shift to state 46
-- On MATCH shift to state 48
-- On LPAREN shift to state 44
-- On LIDENT shift to state 7
-- On LET shift to state 85
-- On LANGLE shift to state 47
-- On INTEGER shift to state 49
-- On HASH shift to state 50
-- On GRAMMAR shift to state 75
-- On FUN shift to state 123
-- On CSET shift to state 81
-- On CHARACTER shift to state 82
-- On CEX shift to state 83
-- On BOOLEAN shift to state 134
-- On BEGIN shift to state 135
-- On tyexp shift to state 136
-- On tildeexp shift to state 155
-- On rewriteexp shift to state 168
-- On repexp shift to state 157
-- On qid shift to state 158
-- On obarexp shift to state 176
-- On minusexp shift to state 178
-- On matchexp shift to state 159
-- On ltexp shift to state 179
-- On leqexp shift to state 180
-- On lenscomponentexp shift to state 181
-- On infixexp shift to state 182
-- On gtexp shift to state 185
-- On geqexp shift to state 186
-- On funexp shift to state 230
-- On exp shift to state 312
-- On equalexp shift to state 233
-- On dotexp shift to state 188
-- On dbarexp shift to state 238
-- On composeexp shift to state 241
-- On commaexp shift to state 247
-- On cexp shift to state 248
-- On barexp shift to state 246
-- On appexp shift to state 192
-- On ampexp shift to state 226
-- On ampampexp shift to state 229
-- On aexp shift to state 162

State 312:
exp -> LET id param_list COLON sort EQUAL exp . IN exp [ TYPE TEST RPAREN RANGLE MODULE LET IN EOF END ]
-- On IN shift to state 313

State 313:
exp -> LET id param_list COLON sort EQUAL exp IN . exp [ TYPE TEST RPAREN RANGLE MODULE LET IN EOF END ]
-- On UIDENT shift to state 5
-- On SYNTH shift to state 36
-- On STR shift to state 37
-- On SQUASH shift to state 38
-- On QUALIDENT shift to state 6
-- On PROJECT shift to state 39
-- On PERM shift to state 40
-- On NSET shift to state 43
-- On MINUS shift to state 46
-- On MATCH shift to state 48
-- On LPAREN shift to state 44
-- On LIDENT shift to state 7
-- On LET shift to state 85
-- On LANGLE shift to state 47
-- On INTEGER shift to state 49
-- On HASH shift to state 50
-- On GRAMMAR shift to state 75
-- On FUN shift to state 123
-- On CSET shift to state 81
-- On CHARACTER shift to state 82
-- On CEX shift to state 83
-- On BOOLEAN shift to state 134
-- On BEGIN shift to state 135
-- On tyexp shift to state 136
-- On tildeexp shift to state 155
-- On rewriteexp shift to state 168
-- On repexp shift to state 157
-- On qid shift to state 158
-- On obarexp shift to state 176
-- On minusexp shift to state 178
-- On matchexp shift to state 159
-- On ltexp shift to state 179
-- On leqexp shift to state 180
-- On lenscomponentexp shift to state 181
-- On infixexp shift to state 182
-- On gtexp shift to state 185
-- On geqexp shift to state 186
-- On funexp shift to state 230
-- On exp shift to state 314
-- On equalexp shift to state 233
-- On dotexp shift to state 188
-- On dbarexp shift to state 238
-- On composeexp shift to state 241
-- On commaexp shift to state 247
-- On cexp shift to state 248
-- On barexp shift to state 246
-- On appexp shift to state 192
-- On ampexp shift to state 226
-- On ampampexp shift to state 229
-- On aexp shift to state 162

State 314:
exp -> LET id param_list COLON sort EQUAL exp IN exp . [ TYPE TEST RPAREN RANGLE MODULE LET IN EOF END ]
-- On TYPE reduce production exp -> LET id param_list COLON sort EQUAL exp IN exp 
-- On TEST reduce production exp -> LET id param_list COLON sort EQUAL exp IN exp 
-- On RPAREN reduce production exp -> LET id param_list COLON sort EQUAL exp IN exp 
-- On RANGLE reduce production exp -> LET id param_list COLON sort EQUAL exp IN exp 
-- On MODULE reduce production exp -> LET id param_list COLON sort EQUAL exp IN exp 
-- On LET reduce production exp -> LET id param_list COLON sort EQUAL exp IN exp 
-- On IN reduce production exp -> LET id param_list COLON sort EQUAL exp IN exp 
-- On EOF reduce production exp -> LET id param_list COLON sort EQUAL exp IN exp 
-- On END reduce production exp -> LET id param_list COLON sort EQUAL exp IN exp 

State 315:
letpat -> apat . [ EQUAL COMMA COLON ]
-- On EQUAL reduce production letpat -> apat 
-- On COMMA reduce production letpat -> apat 
-- On COLON reduce production letpat -> apat 

State 316:
aexp -> CEX LPAREN exp . RPAREN [ WITH VTYPE USING UIDENT TYPE TILDE TEST STYPE STR STAR SEMI RPAREN RBRACK RBRACE RANGLE QUALIDENT QMARK PUT PLUS NSET MODULE MINUS LT LPAREN LIDENT LET LEQ LBRACE LANGLE INTO INTEGER IN HASH GT GRAMMAR GET GEQ EQUAL EOF END DOT DOLLAR DEQARROW DARROW CSET CREATE COMMA COLON CHOOSE CHARACTER CEX CANONIZE BOOLEAN BIJ BEGIN BARBAR BAR AVTYPE ASTYPE ARROW AND AMPERSAND ]
-- On RPAREN shift to state 317

State 317:
aexp -> CEX LPAREN exp RPAREN . [ WITH VTYPE USING UIDENT TYPE TILDE TEST STYPE STR STAR SEMI RPAREN RBRACK RBRACE RANGLE QUALIDENT QMARK PUT PLUS NSET MODULE MINUS LT LPAREN LIDENT LET LEQ LBRACE LANGLE INTO INTEGER IN HASH GT GRAMMAR GET GEQ EQUAL EOF END DOT DOLLAR DEQARROW DARROW CSET CREATE COMMA COLON CHOOSE CHARACTER CEX CANONIZE BOOLEAN BIJ BEGIN BARBAR BAR AVTYPE ASTYPE ARROW AND AMPERSAND ]
-- On WITH reduce production aexp -> CEX LPAREN exp RPAREN 
-- On VTYPE reduce production aexp -> CEX LPAREN exp RPAREN 
-- On USING reduce production aexp -> CEX LPAREN exp RPAREN 
-- On UIDENT reduce production aexp -> CEX LPAREN exp RPAREN 
-- On TYPE reduce production aexp -> CEX LPAREN exp RPAREN 
-- On TILDE reduce production aexp -> CEX LPAREN exp RPAREN 
-- On TEST reduce production aexp -> CEX LPAREN exp RPAREN 
-- On STYPE reduce production aexp -> CEX LPAREN exp RPAREN 
-- On STR reduce production aexp -> CEX LPAREN exp RPAREN 
-- On STAR reduce production aexp -> CEX LPAREN exp RPAREN 
-- On SEMI reduce production aexp -> CEX LPAREN exp RPAREN 
-- On RPAREN reduce production aexp -> CEX LPAREN exp RPAREN 
-- On RBRACK reduce production aexp -> CEX LPAREN exp RPAREN 
-- On RBRACE reduce production aexp -> CEX LPAREN exp RPAREN 
-- On RANGLE reduce production aexp -> CEX LPAREN exp RPAREN 
-- On QUALIDENT reduce production aexp -> CEX LPAREN exp RPAREN 
-- On QMARK reduce production aexp -> CEX LPAREN exp RPAREN 
-- On PUT reduce production aexp -> CEX LPAREN exp RPAREN 
-- On PLUS reduce production aexp -> CEX LPAREN exp RPAREN 
-- On NSET reduce production aexp -> CEX LPAREN exp RPAREN 
-- On MODULE reduce production aexp -> CEX LPAREN exp RPAREN 
-- On MINUS reduce production aexp -> CEX LPAREN exp RPAREN 
-- On LT reduce production aexp -> CEX LPAREN exp RPAREN 
-- On LPAREN reduce production aexp -> CEX LPAREN exp RPAREN 
-- On LIDENT reduce production aexp -> CEX LPAREN exp RPAREN 
-- On LET reduce production aexp -> CEX LPAREN exp RPAREN 
-- On LEQ reduce production aexp -> CEX LPAREN exp RPAREN 
-- On LBRACE reduce production aexp -> CEX LPAREN exp RPAREN 
-- On LANGLE reduce production aexp -> CEX LPAREN exp RPAREN 
-- On INTO reduce production aexp -> CEX LPAREN exp RPAREN 
-- On INTEGER reduce production aexp -> CEX LPAREN exp RPAREN 
-- On IN reduce production aexp -> CEX LPAREN exp RPAREN 
-- On HASH reduce production aexp -> CEX LPAREN exp RPAREN 
-- On GT reduce production aexp -> CEX LPAREN exp RPAREN 
-- On GRAMMAR reduce production aexp -> CEX LPAREN exp RPAREN 
-- On GET reduce production aexp -> CEX LPAREN exp RPAREN 
-- On GEQ reduce production aexp -> CEX LPAREN exp RPAREN 
-- On EQUAL reduce production aexp -> CEX LPAREN exp RPAREN 
-- On EOF reduce production aexp -> CEX LPAREN exp RPAREN 
-- On END reduce production aexp -> CEX LPAREN exp RPAREN 
-- On DOT reduce production aexp -> CEX LPAREN exp RPAREN 
-- On DOLLAR reduce production aexp -> CEX LPAREN exp RPAREN 
-- On DEQARROW reduce production aexp -> CEX LPAREN exp RPAREN 
-- On DARROW reduce production aexp -> CEX LPAREN exp RPAREN 
-- On CSET reduce production aexp -> CEX LPAREN exp RPAREN 
-- On CREATE reduce production aexp -> CEX LPAREN exp RPAREN 
-- On COMMA reduce production aexp -> CEX LPAREN exp RPAREN 
-- On COLON reduce production aexp -> CEX LPAREN exp RPAREN 
-- On CHOOSE reduce production aexp -> CEX LPAREN exp RPAREN 
-- On CHARACTER reduce production aexp -> CEX LPAREN exp RPAREN 
-- On CEX reduce production aexp -> CEX LPAREN exp RPAREN 
-- On CANONIZE reduce production aexp -> CEX LPAREN exp RPAREN 
-- On BOOLEAN reduce production aexp -> CEX LPAREN exp RPAREN 
-- On BIJ reduce production aexp -> CEX LPAREN exp RPAREN 
-- On BEGIN reduce production aexp -> CEX LPAREN exp RPAREN 
-- On BARBAR reduce production aexp -> CEX LPAREN exp RPAREN 
-- On BAR reduce production aexp -> CEX LPAREN exp RPAREN 
-- On AVTYPE reduce production aexp -> CEX LPAREN exp RPAREN 
-- On ASTYPE reduce production aexp -> CEX LPAREN exp RPAREN 
-- On ARROW reduce production aexp -> CEX LPAREN exp RPAREN 
-- On AND reduce production aexp -> CEX LPAREN exp RPAREN 
-- On AMPERSAND reduce production aexp -> CEX LPAREN exp RPAREN 

State 318:
aexp -> aexp . STYPE [ VTYPE UIDENT STYPE STR QUALIDENT NSET LPAREN LIDENT LANGLE INTEGER HASH GRAMMAR DARROW CSET CHARACTER CEX BOOLEAN BIJ BEGIN AVTYPE ASTYPE ]
aexp -> aexp . VTYPE [ VTYPE UIDENT STYPE STR QUALIDENT NSET LPAREN LIDENT LANGLE INTEGER HASH GRAMMAR DARROW CSET CHARACTER CEX BOOLEAN BIJ BEGIN AVTYPE ASTYPE ]
aexp -> aexp . ASTYPE [ VTYPE UIDENT STYPE STR QUALIDENT NSET LPAREN LIDENT LANGLE INTEGER HASH GRAMMAR DARROW CSET CHARACTER CEX BOOLEAN BIJ BEGIN AVTYPE ASTYPE ]
aexp -> aexp . AVTYPE [ VTYPE UIDENT STYPE STR QUALIDENT NSET LPAREN LIDENT LANGLE INTEGER HASH GRAMMAR DARROW CSET CHARACTER CEX BOOLEAN BIJ BEGIN AVTYPE ASTYPE ]
aexp -> aexp . BIJ [ VTYPE UIDENT STYPE STR QUALIDENT NSET LPAREN LIDENT LANGLE INTEGER HASH GRAMMAR DARROW CSET CHARACTER CEX BOOLEAN BIJ BEGIN AVTYPE ASTYPE ]
atom -> LIDENT COLON aexp . [ UIDENT STR QUALIDENT NSET LPAREN LIDENT LANGLE INTEGER HASH GRAMMAR DARROW CSET CHARACTER CEX BOOLEAN BEGIN ]
-- On VTYPE shift to state 163
-- On STYPE shift to state 164
-- On BIJ shift to state 165
-- On AVTYPE shift to state 166
-- On ASTYPE shift to state 167
-- On UIDENT reduce production atom -> LIDENT COLON aexp 
-- On STR reduce production atom -> LIDENT COLON aexp 
-- On QUALIDENT reduce production atom -> LIDENT COLON aexp 
-- On NSET reduce production atom -> LIDENT COLON aexp 
-- On LPAREN reduce production atom -> LIDENT COLON aexp 
-- On LIDENT reduce production atom -> LIDENT COLON aexp 
-- On LANGLE reduce production atom -> LIDENT COLON aexp 
-- On INTEGER reduce production atom -> LIDENT COLON aexp 
-- On HASH reduce production atom -> LIDENT COLON aexp 
-- On GRAMMAR reduce production atom -> LIDENT COLON aexp 
-- On DARROW reduce production atom -> LIDENT COLON aexp 
-- On CSET reduce production atom -> LIDENT COLON aexp 
-- On CHARACTER reduce production atom -> LIDENT COLON aexp 
-- On CEX reduce production atom -> LIDENT COLON aexp 
-- On BOOLEAN reduce production atom -> LIDENT COLON aexp 
-- On BEGIN reduce production atom -> LIDENT COLON aexp 

State 319:
rules -> BAR . rule rules2 [ END AND ]
-- On UIDENT shift to state 5
-- On STR shift to state 37
-- On QUALIDENT shift to state 6
-- On NSET shift to state 43
-- On LPAREN shift to state 44
-- On LIDENT shift to state 79
-- On LANGLE shift to state 47
-- On INTEGER shift to state 49
-- On HASH shift to state 50
-- On GRAMMAR shift to state 75
-- On CSET shift to state 81
-- On CHARACTER shift to state 82
-- On CEX shift to state 83
-- On BOOLEAN shift to state 134
-- On BEGIN shift to state 135
-- On rule shift to state 320
-- On qid shift to state 158
-- On matchexp shift to state 159
-- On atoms shift to state 324
-- On atom shift to state 331
-- On aexp shift to state 335

State 320:
rules -> BAR rule . rules2 [ END AND ]
-- On BAR shift to state 321
-- On rules2 shift to state 336
-- On END reduce production rules2 -> 
-- On AND reduce production rules2 -> 

State 321:
rules2 -> BAR . rule rules2 [ END AND ]
-- On UIDENT shift to state 5
-- On STR shift to state 37
-- On QUALIDENT shift to state 6
-- On NSET shift to state 43
-- On LPAREN shift to state 44
-- On LIDENT shift to state 79
-- On LANGLE shift to state 47
-- On INTEGER shift to state 49
-- On HASH shift to state 50
-- On GRAMMAR shift to state 75
-- On CSET shift to state 81
-- On CHARACTER shift to state 82
-- On CEX shift to state 83
-- On BOOLEAN shift to state 134
-- On BEGIN shift to state 135
-- On rule shift to state 322
-- On qid shift to state 158
-- On matchexp shift to state 159
-- On atoms shift to state 324
-- On atom shift to state 331
-- On aexp shift to state 335

State 322:
rules2 -> BAR rule . rules2 [ END AND ]
-- On BAR shift to state 321
-- On rules2 shift to state 323
-- On END reduce production rules2 -> 
-- On AND reduce production rules2 -> 

State 323:
rules2 -> BAR rule rules2 . [ END AND ]
-- On END reduce production rules2 -> BAR rule rules2 
-- On AND reduce production rules2 -> BAR rule rules2 

State 324:
rule -> atoms . DARROW aexps [ END BAR AND ]
-- On DARROW shift to state 325

State 325:
rule -> atoms DARROW . aexps [ END BAR AND ]
-- On UIDENT shift to state 5
-- On STR shift to state 37
-- On QUALIDENT shift to state 6
-- On NSET shift to state 43
-- On LPAREN shift to state 44
-- On LIDENT shift to state 7
-- On LANGLE shift to state 47
-- On INTEGER shift to state 49
-- On HASH shift to state 50
-- On GRAMMAR shift to state 75
-- On CSET shift to state 81
-- On CHARACTER shift to state 82
-- On CEX shift to state 83
-- On BOOLEAN shift to state 134
-- On BEGIN shift to state 135
-- On qid shift to state 158
-- On matchexp shift to state 159
-- On aexps shift to state 326
-- On aexp shift to state 327

State 326:
rule -> atoms DARROW aexps . [ END BAR AND ]
-- On END reduce production rule -> atoms DARROW aexps 
-- On BAR reduce production rule -> atoms DARROW aexps 
-- On AND reduce production rule -> atoms DARROW aexps 

State 327:
aexp -> aexp . STYPE [ VTYPE UIDENT STYPE STR QUALIDENT NSET LPAREN LIDENT LANGLE INTEGER HASH GRAMMAR END CSET CHARACTER CEX BOOLEAN BIJ BEGIN BAR AVTYPE ASTYPE AND ]
aexp -> aexp . VTYPE [ VTYPE UIDENT STYPE STR QUALIDENT NSET LPAREN LIDENT LANGLE INTEGER HASH GRAMMAR END CSET CHARACTER CEX BOOLEAN BIJ BEGIN BAR AVTYPE ASTYPE AND ]
aexp -> aexp . ASTYPE [ VTYPE UIDENT STYPE STR QUALIDENT NSET LPAREN LIDENT LANGLE INTEGER HASH GRAMMAR END CSET CHARACTER CEX BOOLEAN BIJ BEGIN BAR AVTYPE ASTYPE AND ]
aexp -> aexp . AVTYPE [ VTYPE UIDENT STYPE STR QUALIDENT NSET LPAREN LIDENT LANGLE INTEGER HASH GRAMMAR END CSET CHARACTER CEX BOOLEAN BIJ BEGIN BAR AVTYPE ASTYPE AND ]
aexp -> aexp . BIJ [ VTYPE UIDENT STYPE STR QUALIDENT NSET LPAREN LIDENT LANGLE INTEGER HASH GRAMMAR END CSET CHARACTER CEX BOOLEAN BIJ BEGIN BAR AVTYPE ASTYPE AND ]
aexps -> aexp . aexps2 [ END BAR AND ]
-- On VTYPE shift to state 163
-- On UIDENT shift to state 5
-- On STYPE shift to state 164
-- On STR shift to state 37
-- On QUALIDENT shift to state 6
-- On NSET shift to state 43
-- On LPAREN shift to state 44
-- On LIDENT shift to state 7
-- On LANGLE shift to state 47
-- On INTEGER shift to state 49
-- On HASH shift to state 50
-- On GRAMMAR shift to state 75
-- On CSET shift to state 81
-- On CHARACTER shift to state 82
-- On CEX shift to state 83
-- On BOOLEAN shift to state 134
-- On BIJ shift to state 165
-- On BEGIN shift to state 135
-- On AVTYPE shift to state 166
-- On ASTYPE shift to state 167
-- On qid shift to state 158
-- On matchexp shift to state 159
-- On aexps2 shift to state 328
-- On aexp shift to state 329
-- On END reduce production aexps2 -> 
-- On BAR reduce production aexps2 -> 
-- On AND reduce production aexps2 -> 

State 328:
aexps -> aexp aexps2 . [ END BAR AND ]
-- On END reduce production aexps -> aexp aexps2 
-- On BAR reduce production aexps -> aexp aexps2 
-- On AND reduce production aexps -> aexp aexps2 

State 329:
aexp -> aexp . STYPE [ VTYPE UIDENT STYPE STR QUALIDENT NSET LPAREN LIDENT LANGLE INTEGER HASH GRAMMAR END CSET CHARACTER CEX BOOLEAN BIJ BEGIN BAR AVTYPE ASTYPE AND ]
aexp -> aexp . VTYPE [ VTYPE UIDENT STYPE STR QUALIDENT NSET LPAREN LIDENT LANGLE INTEGER HASH GRAMMAR END CSET CHARACTER CEX BOOLEAN BIJ BEGIN BAR AVTYPE ASTYPE AND ]
aexp -> aexp . ASTYPE [ VTYPE UIDENT STYPE STR QUALIDENT NSET LPAREN LIDENT LANGLE INTEGER HASH GRAMMAR END CSET CHARACTER CEX BOOLEAN BIJ BEGIN BAR AVTYPE ASTYPE AND ]
aexp -> aexp . AVTYPE [ VTYPE UIDENT STYPE STR QUALIDENT NSET LPAREN LIDENT LANGLE INTEGER HASH GRAMMAR END CSET CHARACTER CEX BOOLEAN BIJ BEGIN BAR AVTYPE ASTYPE AND ]
aexp -> aexp . BIJ [ VTYPE UIDENT STYPE STR QUALIDENT NSET LPAREN LIDENT LANGLE INTEGER HASH GRAMMAR END CSET CHARACTER CEX BOOLEAN BIJ BEGIN BAR AVTYPE ASTYPE AND ]
aexps2 -> aexp . aexps2 [ END BAR AND ]
-- On VTYPE shift to state 163
-- On UIDENT shift to state 5
-- On STYPE shift to state 164
-- On STR shift to state 37
-- On QUALIDENT shift to state 6
-- On NSET shift to state 43
-- On LPAREN shift to state 44
-- On LIDENT shift to state 7
-- On LANGLE shift to state 47
-- On INTEGER shift to state 49
-- On HASH shift to state 50
-- On GRAMMAR shift to state 75
-- On CSET shift to state 81
-- On CHARACTER shift to state 82
-- On CEX shift to state 83
-- On BOOLEAN shift to state 134
-- On BIJ shift to state 165
-- On BEGIN shift to state 135
-- On AVTYPE shift to state 166
-- On ASTYPE shift to state 167
-- On qid shift to state 158
-- On matchexp shift to state 159
-- On aexps2 shift to state 330
-- On aexp shift to state 329
-- On END reduce production aexps2 -> 
-- On BAR reduce production aexps2 -> 
-- On AND reduce production aexps2 -> 

State 330:
aexps2 -> aexp aexps2 . [ END BAR AND ]
-- On END reduce production aexps2 -> aexp aexps2 
-- On BAR reduce production aexps2 -> aexp aexps2 
-- On AND reduce production aexps2 -> aexp aexps2 

State 331:
atoms -> atom . atoms2 [ DARROW ]
-- On UIDENT shift to state 5
-- On STR shift to state 37
-- On QUALIDENT shift to state 6
-- On NSET shift to state 43
-- On LPAREN shift to state 44
-- On LIDENT shift to state 79
-- On LANGLE shift to state 47
-- On INTEGER shift to state 49
-- On HASH shift to state 50
-- On GRAMMAR shift to state 75
-- On CSET shift to state 81
-- On CHARACTER shift to state 82
-- On CEX shift to state 83
-- On BOOLEAN shift to state 134
-- On BEGIN shift to state 135
-- On qid shift to state 158
-- On matchexp shift to state 159
-- On atoms2 shift to state 332
-- On atom shift to state 333
-- On aexp shift to state 335
-- On DARROW reduce production atoms2 -> 

State 332:
atoms -> atom atoms2 . [ DARROW ]
-- On DARROW reduce production atoms -> atom atoms2 

State 333:
atoms2 -> atom . atoms2 [ DARROW ]
-- On UIDENT shift to state 5
-- On STR shift to state 37
-- On QUALIDENT shift to state 6
-- On NSET shift to state 43
-- On LPAREN shift to state 44
-- On LIDENT shift to state 79
-- On LANGLE shift to state 47
-- On INTEGER shift to state 49
-- On HASH shift to state 50
-- On GRAMMAR shift to state 75
-- On CSET shift to state 81
-- On CHARACTER shift to state 82
-- On CEX shift to state 83
-- On BOOLEAN shift to state 134
-- On BEGIN shift to state 135
-- On qid shift to state 158
-- On matchexp shift to state 159
-- On atoms2 shift to state 334
-- On atom shift to state 333
-- On aexp shift to state 335
-- On DARROW reduce production atoms2 -> 

State 334:
atoms2 -> atom atoms2 . [ DARROW ]
-- On DARROW reduce production atoms2 -> atom atoms2 

State 335:
aexp -> aexp . STYPE [ VTYPE UIDENT STYPE STR QUALIDENT NSET LPAREN LIDENT LANGLE INTEGER HASH GRAMMAR DARROW CSET CHARACTER CEX BOOLEAN BIJ BEGIN AVTYPE ASTYPE ]
aexp -> aexp . VTYPE [ VTYPE UIDENT STYPE STR QUALIDENT NSET LPAREN LIDENT LANGLE INTEGER HASH GRAMMAR DARROW CSET CHARACTER CEX BOOLEAN BIJ BEGIN AVTYPE ASTYPE ]
aexp -> aexp . ASTYPE [ VTYPE UIDENT STYPE STR QUALIDENT NSET LPAREN LIDENT LANGLE INTEGER HASH GRAMMAR DARROW CSET CHARACTER CEX BOOLEAN BIJ BEGIN AVTYPE ASTYPE ]
aexp -> aexp . AVTYPE [ VTYPE UIDENT STYPE STR QUALIDENT NSET LPAREN LIDENT LANGLE INTEGER HASH GRAMMAR DARROW CSET CHARACTER CEX BOOLEAN BIJ BEGIN AVTYPE ASTYPE ]
aexp -> aexp . BIJ [ VTYPE UIDENT STYPE STR QUALIDENT NSET LPAREN LIDENT LANGLE INTEGER HASH GRAMMAR DARROW CSET CHARACTER CEX BOOLEAN BIJ BEGIN AVTYPE ASTYPE ]
atom -> aexp . [ UIDENT STR QUALIDENT NSET LPAREN LIDENT LANGLE INTEGER HASH GRAMMAR DARROW CSET CHARACTER CEX BOOLEAN BEGIN ]
-- On VTYPE shift to state 163
-- On STYPE shift to state 164
-- On BIJ shift to state 165
-- On AVTYPE shift to state 166
-- On ASTYPE shift to state 167
-- On UIDENT reduce production atom -> aexp 
-- On STR reduce production atom -> aexp 
-- On QUALIDENT reduce production atom -> aexp 
-- On NSET reduce production atom -> aexp 
-- On LPAREN reduce production atom -> aexp 
-- On LIDENT reduce production atom -> aexp 
-- On LANGLE reduce production atom -> aexp 
-- On INTEGER reduce production atom -> aexp 
-- On HASH reduce production atom -> aexp 
-- On GRAMMAR reduce production atom -> aexp 
-- On DARROW reduce production atom -> aexp 
-- On CSET reduce production atom -> aexp 
-- On CHARACTER reduce production atom -> aexp 
-- On CEX reduce production atom -> aexp 
-- On BOOLEAN reduce production atom -> aexp 
-- On BEGIN reduce production atom -> aexp 

State 336:
rules -> BAR rule rules2 . [ END AND ]
-- On END reduce production rules -> BAR rule rules2 
-- On AND reduce production rules -> BAR rule rules2 

State 337:
production -> LIDENT COLONCOLON EQUAL rules . [ END AND ]
-- On END reduce production production -> LIDENT COLONCOLON EQUAL rules 
-- On AND reduce production production -> LIDENT COLONCOLON EQUAL rules 

State 338:
rules -> rule . rules2 [ END AND ]
-- On BAR shift to state 321
-- On rules2 shift to state 339
-- On END reduce production rules2 -> 
-- On AND reduce production rules2 -> 

State 339:
rules -> rule rules2 . [ END AND ]
-- On END reduce production rules -> rule rules2 
-- On AND reduce production rules -> rule rules2 

State 340:
aexp -> GRAMMAR productions . END [ WITH VTYPE USING UIDENT TYPE TILDE TEST STYPE STR STAR SEMI RPAREN RBRACK RBRACE RANGLE QUALIDENT QMARK PUT PLUS NSET MODULE MINUS LT LPAREN LIDENT LET LEQ LBRACE LANGLE INTO INTEGER IN HASH GT GRAMMAR GET GEQ EQUAL EOF END DOT DOLLAR DEQARROW DARROW CSET CREATE COMMA COLON CHOOSE CHARACTER CEX CANONIZE BOOLEAN BIJ BEGIN BARBAR BAR AVTYPE ASTYPE ARROW AND AMPERSAND ]
-- On END shift to state 341

State 341:
aexp -> GRAMMAR productions END . [ WITH VTYPE USING UIDENT TYPE TILDE TEST STYPE STR STAR SEMI RPAREN RBRACK RBRACE RANGLE QUALIDENT QMARK PUT PLUS NSET MODULE MINUS LT LPAREN LIDENT LET LEQ LBRACE LANGLE INTO INTEGER IN HASH GT GRAMMAR GET GEQ EQUAL EOF END DOT DOLLAR DEQARROW DARROW CSET CREATE COMMA COLON CHOOSE CHARACTER CEX CANONIZE BOOLEAN BIJ BEGIN BARBAR BAR AVTYPE ASTYPE ARROW AND AMPERSAND ]
-- On WITH reduce production aexp -> GRAMMAR productions END 
-- On VTYPE reduce production aexp -> GRAMMAR productions END 
-- On USING reduce production aexp -> GRAMMAR productions END 
-- On UIDENT reduce production aexp -> GRAMMAR productions END 
-- On TYPE reduce production aexp -> GRAMMAR productions END 
-- On TILDE reduce production aexp -> GRAMMAR productions END 
-- On TEST reduce production aexp -> GRAMMAR productions END 
-- On STYPE reduce production aexp -> GRAMMAR productions END 
-- On STR reduce production aexp -> GRAMMAR productions END 
-- On STAR reduce production aexp -> GRAMMAR productions END 
-- On SEMI reduce production aexp -> GRAMMAR productions END 
-- On RPAREN reduce production aexp -> GRAMMAR productions END 
-- On RBRACK reduce production aexp -> GRAMMAR productions END 
-- On RBRACE reduce production aexp -> GRAMMAR productions END 
-- On RANGLE reduce production aexp -> GRAMMAR productions END 
-- On QUALIDENT reduce production aexp -> GRAMMAR productions END 
-- On QMARK reduce production aexp -> GRAMMAR productions END 
-- On PUT reduce production aexp -> GRAMMAR productions END 
-- On PLUS reduce production aexp -> GRAMMAR productions END 
-- On NSET reduce production aexp -> GRAMMAR productions END 
-- On MODULE reduce production aexp -> GRAMMAR productions END 
-- On MINUS reduce production aexp -> GRAMMAR productions END 
-- On LT reduce production aexp -> GRAMMAR productions END 
-- On LPAREN reduce production aexp -> GRAMMAR productions END 
-- On LIDENT reduce production aexp -> GRAMMAR productions END 
-- On LET reduce production aexp -> GRAMMAR productions END 
-- On LEQ reduce production aexp -> GRAMMAR productions END 
-- On LBRACE reduce production aexp -> GRAMMAR productions END 
-- On LANGLE reduce production aexp -> GRAMMAR productions END 
-- On INTO reduce production aexp -> GRAMMAR productions END 
-- On INTEGER reduce production aexp -> GRAMMAR productions END 
-- On IN reduce production aexp -> GRAMMAR productions END 
-- On HASH reduce production aexp -> GRAMMAR productions END 
-- On GT reduce production aexp -> GRAMMAR productions END 
-- On GRAMMAR reduce production aexp -> GRAMMAR productions END 
-- On GET reduce production aexp -> GRAMMAR productions END 
-- On GEQ reduce production aexp -> GRAMMAR productions END 
-- On EQUAL reduce production aexp -> GRAMMAR productions END 
-- On EOF reduce production aexp -> GRAMMAR productions END 
-- On END reduce production aexp -> GRAMMAR productions END 
-- On DOT reduce production aexp -> GRAMMAR productions END 
-- On DOLLAR reduce production aexp -> GRAMMAR productions END 
-- On DEQARROW reduce production aexp -> GRAMMAR productions END 
-- On DARROW reduce production aexp -> GRAMMAR productions END 
-- On CSET reduce production aexp -> GRAMMAR productions END 
-- On CREATE reduce production aexp -> GRAMMAR productions END 
-- On COMMA reduce production aexp -> GRAMMAR productions END 
-- On COLON reduce production aexp -> GRAMMAR productions END 
-- On CHOOSE reduce production aexp -> GRAMMAR productions END 
-- On CHARACTER reduce production aexp -> GRAMMAR productions END 
-- On CEX reduce production aexp -> GRAMMAR productions END 
-- On CANONIZE reduce production aexp -> GRAMMAR productions END 
-- On BOOLEAN reduce production aexp -> GRAMMAR productions END 
-- On BIJ reduce production aexp -> GRAMMAR productions END 
-- On BEGIN reduce production aexp -> GRAMMAR productions END 
-- On BARBAR reduce production aexp -> GRAMMAR productions END 
-- On BAR reduce production aexp -> GRAMMAR productions END 
-- On AVTYPE reduce production aexp -> GRAMMAR productions END 
-- On ASTYPE reduce production aexp -> GRAMMAR productions END 
-- On ARROW reduce production aexp -> GRAMMAR productions END 
-- On AND reduce production aexp -> GRAMMAR productions END 
-- On AMPERSAND reduce production aexp -> GRAMMAR productions END 

State 342:
productions -> production . [ END ]
productions -> production . AND productions [ END ]
-- On AND shift to state 343
-- On END reduce production productions -> production 

State 343:
productions -> production AND . productions [ END ]
-- On LIDENT shift to state 76
-- On productions shift to state 344
-- On production shift to state 342

State 344:
productions -> production AND productions . [ END ]
-- On END reduce production productions -> production AND productions 

State 345:
appexp -> appexp . repexp [ UIDENT STR RPAREN QUALIDENT NSET LPAREN LIDENT LANGLE INTEGER HASH GRAMMAR CSET CHARACTER CEX BOOLEAN BEGIN ]
bsort -> LPAREN LENS IN QMARK DEQARROW appexp . RPAREN [ WHERE TYPE TEST STAR RPAREN RBRACE RANGLE QUALIDENT MODULE LLIST LIDENT LET IN EQUAL EOF END DOLLAR COMMA BAR ARROW ]
-- On UIDENT shift to state 5
-- On STR shift to state 37
-- On RPAREN shift to state 346
-- On QUALIDENT shift to state 6
-- On NSET shift to state 43
-- On LPAREN shift to state 44
-- On LIDENT shift to state 7
-- On LANGLE shift to state 47
-- On INTEGER shift to state 49
-- On HASH shift to state 50
-- On GRAMMAR shift to state 75
-- On CSET shift to state 81
-- On CHARACTER shift to state 82
-- On CEX shift to state 83
-- On BOOLEAN shift to state 134
-- On BEGIN shift to state 135
-- On tyexp shift to state 136
-- On repexp shift to state 161
-- On qid shift to state 158
-- On matchexp shift to state 159
-- On aexp shift to state 162

State 346:
bsort -> LPAREN LENS IN QMARK DEQARROW appexp RPAREN . [ WHERE TYPE TEST STAR RPAREN RBRACE RANGLE QUALIDENT MODULE LLIST LIDENT LET IN EQUAL EOF END DOLLAR COMMA BAR ARROW ]
-- On WHERE reduce production bsort -> LPAREN LENS IN QMARK DEQARROW appexp RPAREN 
-- On TYPE reduce production bsort -> LPAREN LENS IN QMARK DEQARROW appexp RPAREN 
-- On TEST reduce production bsort -> LPAREN LENS IN QMARK DEQARROW appexp RPAREN 
-- On STAR reduce production bsort -> LPAREN LENS IN QMARK DEQARROW appexp RPAREN 
-- On RPAREN reduce production bsort -> LPAREN LENS IN QMARK DEQARROW appexp RPAREN 
-- On RBRACE reduce production bsort -> LPAREN LENS IN QMARK DEQARROW appexp RPAREN 
-- On RANGLE reduce production bsort -> LPAREN LENS IN QMARK DEQARROW appexp RPAREN 
-- On QUALIDENT reduce production bsort -> LPAREN LENS IN QMARK DEQARROW appexp RPAREN 
-- On MODULE reduce production bsort -> LPAREN LENS IN QMARK DEQARROW appexp RPAREN 
-- On LLIST reduce production bsort -> LPAREN LENS IN QMARK DEQARROW appexp RPAREN 
-- On LIDENT reduce production bsort -> LPAREN LENS IN QMARK DEQARROW appexp RPAREN 
-- On LET reduce production bsort -> LPAREN LENS IN QMARK DEQARROW appexp RPAREN 
-- On IN reduce production bsort -> LPAREN LENS IN QMARK DEQARROW appexp RPAREN 
-- On EQUAL reduce production bsort -> LPAREN LENS IN QMARK DEQARROW appexp RPAREN 
-- On EOF reduce production bsort -> LPAREN LENS IN QMARK DEQARROW appexp RPAREN 
-- On END reduce production bsort -> LPAREN LENS IN QMARK DEQARROW appexp RPAREN 
-- On DOLLAR reduce production bsort -> LPAREN LENS IN QMARK DEQARROW appexp RPAREN 
-- On COMMA reduce production bsort -> LPAREN LENS IN QMARK DEQARROW appexp RPAREN 
-- On BAR reduce production bsort -> LPAREN LENS IN QMARK DEQARROW appexp RPAREN 
-- On ARROW reduce production bsort -> LPAREN LENS IN QMARK DEQARROW appexp RPAREN 

State 347:
bsort -> LPAREN LENS IN QMARK DARROW . appexp RPAREN [ WHERE TYPE TEST STAR RPAREN RBRACE RANGLE QUALIDENT MODULE LLIST LIDENT LET IN EQUAL EOF END DOLLAR COMMA BAR ARROW ]
-- On UIDENT shift to state 5
-- On SYNTH shift to state 36
-- On STR shift to state 37
-- On SQUASH shift to state 38
-- On QUALIDENT shift to state 6
-- On PROJECT shift to state 39
-- On PERM shift to state 40
-- On NSET shift to state 43
-- On LPAREN shift to state 44
-- On LIDENT shift to state 7
-- On LANGLE shift to state 47
-- On INTEGER shift to state 49
-- On HASH shift to state 50
-- On GRAMMAR shift to state 75
-- On CSET shift to state 81
-- On CHARACTER shift to state 82
-- On CEX shift to state 83
-- On BOOLEAN shift to state 134
-- On BEGIN shift to state 135
-- On tyexp shift to state 136
-- On repexp shift to state 157
-- On qid shift to state 158
-- On matchexp shift to state 159
-- On appexp shift to state 348
-- On aexp shift to state 162

State 348:
appexp -> appexp . repexp [ UIDENT STR RPAREN QUALIDENT NSET LPAREN LIDENT LANGLE INTEGER HASH GRAMMAR CSET CHARACTER CEX BOOLEAN BEGIN ]
bsort -> LPAREN LENS IN QMARK DARROW appexp . RPAREN [ WHERE TYPE TEST STAR RPAREN RBRACE RANGLE QUALIDENT MODULE LLIST LIDENT LET IN EQUAL EOF END DOLLAR COMMA BAR ARROW ]
-- On UIDENT shift to state 5
-- On STR shift to state 37
-- On RPAREN shift to state 349
-- On QUALIDENT shift to state 6
-- On NSET shift to state 43
-- On LPAREN shift to state 44
-- On LIDENT shift to state 7
-- On LANGLE shift to state 47
-- On INTEGER shift to state 49
-- On HASH shift to state 50
-- On GRAMMAR shift to state 75
-- On CSET shift to state 81
-- On CHARACTER shift to state 82
-- On CEX shift to state 83
-- On BOOLEAN shift to state 134
-- On BEGIN shift to state 135
-- On tyexp shift to state 136
-- On repexp shift to state 161
-- On qid shift to state 158
-- On matchexp shift to state 159
-- On aexp shift to state 162

State 349:
bsort -> LPAREN LENS IN QMARK DARROW appexp RPAREN . [ WHERE TYPE TEST STAR RPAREN RBRACE RANGLE QUALIDENT MODULE LLIST LIDENT LET IN EQUAL EOF END DOLLAR COMMA BAR ARROW ]
-- On WHERE reduce production bsort -> LPAREN LENS IN QMARK DARROW appexp RPAREN 
-- On TYPE reduce production bsort -> LPAREN LENS IN QMARK DARROW appexp RPAREN 
-- On TEST reduce production bsort -> LPAREN LENS IN QMARK DARROW appexp RPAREN 
-- On STAR reduce production bsort -> LPAREN LENS IN QMARK DARROW appexp RPAREN 
-- On RPAREN reduce production bsort -> LPAREN LENS IN QMARK DARROW appexp RPAREN 
-- On RBRACE reduce production bsort -> LPAREN LENS IN QMARK DARROW appexp RPAREN 
-- On RANGLE reduce production bsort -> LPAREN LENS IN QMARK DARROW appexp RPAREN 
-- On QUALIDENT reduce production bsort -> LPAREN LENS IN QMARK DARROW appexp RPAREN 
-- On MODULE reduce production bsort -> LPAREN LENS IN QMARK DARROW appexp RPAREN 
-- On LLIST reduce production bsort -> LPAREN LENS IN QMARK DARROW appexp RPAREN 
-- On LIDENT reduce production bsort -> LPAREN LENS IN QMARK DARROW appexp RPAREN 
-- On LET reduce production bsort -> LPAREN LENS IN QMARK DARROW appexp RPAREN 
-- On IN reduce production bsort -> LPAREN LENS IN QMARK DARROW appexp RPAREN 
-- On EQUAL reduce production bsort -> LPAREN LENS IN QMARK DARROW appexp RPAREN 
-- On EOF reduce production bsort -> LPAREN LENS IN QMARK DARROW appexp RPAREN 
-- On END reduce production bsort -> LPAREN LENS IN QMARK DARROW appexp RPAREN 
-- On DOLLAR reduce production bsort -> LPAREN LENS IN QMARK DARROW appexp RPAREN 
-- On COMMA reduce production bsort -> LPAREN LENS IN QMARK DARROW appexp RPAREN 
-- On BAR reduce production bsort -> LPAREN LENS IN QMARK DARROW appexp RPAREN 
-- On ARROW reduce production bsort -> LPAREN LENS IN QMARK DARROW appexp RPAREN 

State 350:
appexp -> appexp . repexp [ UIDENT STR QUALIDENT NSET LPAREN LIDENT LANGLE INTEGER HASH GRAMMAR DEQARROW DARROW CSET CHARACTER CEX BOOLEAN BEGIN ]
bsort -> LPAREN LENS IN appexp . DARROW QMARK RPAREN [ WHERE TYPE TEST STAR RPAREN RBRACE RANGLE QUALIDENT MODULE LLIST LIDENT LET IN EQUAL EOF END DOLLAR COMMA BAR ARROW ]
bsort -> LPAREN LENS IN appexp . DEQARROW QMARK RPAREN [ WHERE TYPE TEST STAR RPAREN RBRACE RANGLE QUALIDENT MODULE LLIST LIDENT LET IN EQUAL EOF END DOLLAR COMMA BAR ARROW ]
bsort -> LPAREN LENS IN appexp . DARROW appexp RPAREN [ WHERE TYPE TEST STAR RPAREN RBRACE RANGLE QUALIDENT MODULE LLIST LIDENT LET IN EQUAL EOF END DOLLAR COMMA BAR ARROW ]
bsort -> LPAREN LENS IN appexp . DEQARROW appexp RPAREN [ WHERE TYPE TEST STAR RPAREN RBRACE RANGLE QUALIDENT MODULE LLIST LIDENT LET IN EQUAL EOF END DOLLAR COMMA BAR ARROW ]
-- On UIDENT shift to state 5
-- On STR shift to state 37
-- On QUALIDENT shift to state 6
-- On NSET shift to state 43
-- On LPAREN shift to state 44
-- On LIDENT shift to state 7
-- On LANGLE shift to state 47
-- On INTEGER shift to state 49
-- On HASH shift to state 50
-- On GRAMMAR shift to state 75
-- On DEQARROW shift to state 351
-- On DARROW shift to state 356
-- On CSET shift to state 81
-- On CHARACTER shift to state 82
-- On CEX shift to state 83
-- On BOOLEAN shift to state 134
-- On BEGIN shift to state 135
-- On tyexp shift to state 136
-- On repexp shift to state 161
-- On qid shift to state 158
-- On matchexp shift to state 159
-- On aexp shift to state 162

State 351:
bsort -> LPAREN LENS IN appexp DEQARROW . QMARK RPAREN [ WHERE TYPE TEST STAR RPAREN RBRACE RANGLE QUALIDENT MODULE LLIST LIDENT LET IN EQUAL EOF END DOLLAR COMMA BAR ARROW ]
bsort -> LPAREN LENS IN appexp DEQARROW . appexp RPAREN [ WHERE TYPE TEST STAR RPAREN RBRACE RANGLE QUALIDENT MODULE LLIST LIDENT LET IN EQUAL EOF END DOLLAR COMMA BAR ARROW ]
-- On UIDENT shift to state 5
-- On SYNTH shift to state 36
-- On STR shift to state 37
-- On SQUASH shift to state 38
-- On QUALIDENT shift to state 6
-- On QMARK shift to state 352
-- On PROJECT shift to state 39
-- On PERM shift to state 40
-- On NSET shift to state 43
-- On LPAREN shift to state 44
-- On LIDENT shift to state 7
-- On LANGLE shift to state 47
-- On INTEGER shift to state 49
-- On HASH shift to state 50
-- On GRAMMAR shift to state 75
-- On CSET shift to state 81
-- On CHARACTER shift to state 82
-- On CEX shift to state 83
-- On BOOLEAN shift to state 134
-- On BEGIN shift to state 135
-- On tyexp shift to state 136
-- On repexp shift to state 157
-- On qid shift to state 158
-- On matchexp shift to state 159
-- On appexp shift to state 354
-- On aexp shift to state 162

State 352:
bsort -> LPAREN LENS IN appexp DEQARROW QMARK . RPAREN [ WHERE TYPE TEST STAR RPAREN RBRACE RANGLE QUALIDENT MODULE LLIST LIDENT LET IN EQUAL EOF END DOLLAR COMMA BAR ARROW ]
-- On RPAREN shift to state 353

State 353:
bsort -> LPAREN LENS IN appexp DEQARROW QMARK RPAREN . [ WHERE TYPE TEST STAR RPAREN RBRACE RANGLE QUALIDENT MODULE LLIST LIDENT LET IN EQUAL EOF END DOLLAR COMMA BAR ARROW ]
-- On WHERE reduce production bsort -> LPAREN LENS IN appexp DEQARROW QMARK RPAREN 
-- On TYPE reduce production bsort -> LPAREN LENS IN appexp DEQARROW QMARK RPAREN 
-- On TEST reduce production bsort -> LPAREN LENS IN appexp DEQARROW QMARK RPAREN 
-- On STAR reduce production bsort -> LPAREN LENS IN appexp DEQARROW QMARK RPAREN 
-- On RPAREN reduce production bsort -> LPAREN LENS IN appexp DEQARROW QMARK RPAREN 
-- On RBRACE reduce production bsort -> LPAREN LENS IN appexp DEQARROW QMARK RPAREN 
-- On RANGLE reduce production bsort -> LPAREN LENS IN appexp DEQARROW QMARK RPAREN 
-- On QUALIDENT reduce production bsort -> LPAREN LENS IN appexp DEQARROW QMARK RPAREN 
-- On MODULE reduce production bsort -> LPAREN LENS IN appexp DEQARROW QMARK RPAREN 
-- On LLIST reduce production bsort -> LPAREN LENS IN appexp DEQARROW QMARK RPAREN 
-- On LIDENT reduce production bsort -> LPAREN LENS IN appexp DEQARROW QMARK RPAREN 
-- On LET reduce production bsort -> LPAREN LENS IN appexp DEQARROW QMARK RPAREN 
-- On IN reduce production bsort -> LPAREN LENS IN appexp DEQARROW QMARK RPAREN 
-- On EQUAL reduce production bsort -> LPAREN LENS IN appexp DEQARROW QMARK RPAREN 
-- On EOF reduce production bsort -> LPAREN LENS IN appexp DEQARROW QMARK RPAREN 
-- On END reduce production bsort -> LPAREN LENS IN appexp DEQARROW QMARK RPAREN 
-- On DOLLAR reduce production bsort -> LPAREN LENS IN appexp DEQARROW QMARK RPAREN 
-- On COMMA reduce production bsort -> LPAREN LENS IN appexp DEQARROW QMARK RPAREN 
-- On BAR reduce production bsort -> LPAREN LENS IN appexp DEQARROW QMARK RPAREN 
-- On ARROW reduce production bsort -> LPAREN LENS IN appexp DEQARROW QMARK RPAREN 

State 354:
appexp -> appexp . repexp [ UIDENT STR RPAREN QUALIDENT NSET LPAREN LIDENT LANGLE INTEGER HASH GRAMMAR CSET CHARACTER CEX BOOLEAN BEGIN ]
bsort -> LPAREN LENS IN appexp DEQARROW appexp . RPAREN [ WHERE TYPE TEST STAR RPAREN RBRACE RANGLE QUALIDENT MODULE LLIST LIDENT LET IN EQUAL EOF END DOLLAR COMMA BAR ARROW ]
-- On UIDENT shift to state 5
-- On STR shift to state 37
-- On RPAREN shift to state 355
-- On QUALIDENT shift to state 6
-- On NSET shift to state 43
-- On LPAREN shift to state 44
-- On LIDENT shift to state 7
-- On LANGLE shift to state 47
-- On INTEGER shift to state 49
-- On HASH shift to state 50
-- On GRAMMAR shift to state 75
-- On CSET shift to state 81
-- On CHARACTER shift to state 82
-- On CEX shift to state 83
-- On BOOLEAN shift to state 134
-- On BEGIN shift to state 135
-- On tyexp shift to state 136
-- On repexp shift to state 161
-- On qid shift to state 158
-- On matchexp shift to state 159
-- On aexp shift to state 162

State 355:
bsort -> LPAREN LENS IN appexp DEQARROW appexp RPAREN . [ WHERE TYPE TEST STAR RPAREN RBRACE RANGLE QUALIDENT MODULE LLIST LIDENT LET IN EQUAL EOF END DOLLAR COMMA BAR ARROW ]
-- On WHERE reduce production bsort -> LPAREN LENS IN appexp DEQARROW appexp RPAREN 
-- On TYPE reduce production bsort -> LPAREN LENS IN appexp DEQARROW appexp RPAREN 
-- On TEST reduce production bsort -> LPAREN LENS IN appexp DEQARROW appexp RPAREN 
-- On STAR reduce production bsort -> LPAREN LENS IN appexp DEQARROW appexp RPAREN 
-- On RPAREN reduce production bsort -> LPAREN LENS IN appexp DEQARROW appexp RPAREN 
-- On RBRACE reduce production bsort -> LPAREN LENS IN appexp DEQARROW appexp RPAREN 
-- On RANGLE reduce production bsort -> LPAREN LENS IN appexp DEQARROW appexp RPAREN 
-- On QUALIDENT reduce production bsort -> LPAREN LENS IN appexp DEQARROW appexp RPAREN 
-- On MODULE reduce production bsort -> LPAREN LENS IN appexp DEQARROW appexp RPAREN 
-- On LLIST reduce production bsort -> LPAREN LENS IN appexp DEQARROW appexp RPAREN 
-- On LIDENT reduce production bsort -> LPAREN LENS IN appexp DEQARROW appexp RPAREN 
-- On LET reduce production bsort -> LPAREN LENS IN appexp DEQARROW appexp RPAREN 
-- On IN reduce production bsort -> LPAREN LENS IN appexp DEQARROW appexp RPAREN 
-- On EQUAL reduce production bsort -> LPAREN LENS IN appexp DEQARROW appexp RPAREN 
-- On EOF reduce production bsort -> LPAREN LENS IN appexp DEQARROW appexp RPAREN 
-- On END reduce production bsort -> LPAREN LENS IN appexp DEQARROW appexp RPAREN 
-- On DOLLAR reduce production bsort -> LPAREN LENS IN appexp DEQARROW appexp RPAREN 
-- On COMMA reduce production bsort -> LPAREN LENS IN appexp DEQARROW appexp RPAREN 
-- On BAR reduce production bsort -> LPAREN LENS IN appexp DEQARROW appexp RPAREN 
-- On ARROW reduce production bsort -> LPAREN LENS IN appexp DEQARROW appexp RPAREN 

State 356:
bsort -> LPAREN LENS IN appexp DARROW . QMARK RPAREN [ WHERE TYPE TEST STAR RPAREN RBRACE RANGLE QUALIDENT MODULE LLIST LIDENT LET IN EQUAL EOF END DOLLAR COMMA BAR ARROW ]
bsort -> LPAREN LENS IN appexp DARROW . appexp RPAREN [ WHERE TYPE TEST STAR RPAREN RBRACE RANGLE QUALIDENT MODULE LLIST LIDENT LET IN EQUAL EOF END DOLLAR COMMA BAR ARROW ]
-- On UIDENT shift to state 5
-- On SYNTH shift to state 36
-- On STR shift to state 37
-- On SQUASH shift to state 38
-- On QUALIDENT shift to state 6
-- On QMARK shift to state 357
-- On PROJECT shift to state 39
-- On PERM shift to state 40
-- On NSET shift to state 43
-- On LPAREN shift to state 44
-- On LIDENT shift to state 7
-- On LANGLE shift to state 47
-- On INTEGER shift to state 49
-- On HASH shift to state 50
-- On GRAMMAR shift to state 75
-- On CSET shift to state 81
-- On CHARACTER shift to state 82
-- On CEX shift to state 83
-- On BOOLEAN shift to state 134
-- On BEGIN shift to state 135
-- On tyexp shift to state 136
-- On repexp shift to state 157
-- On qid shift to state 158
-- On matchexp shift to state 159
-- On appexp shift to state 359
-- On aexp shift to state 162

State 357:
bsort -> LPAREN LENS IN appexp DARROW QMARK . RPAREN [ WHERE TYPE TEST STAR RPAREN RBRACE RANGLE QUALIDENT MODULE LLIST LIDENT LET IN EQUAL EOF END DOLLAR COMMA BAR ARROW ]
-- On RPAREN shift to state 358

State 358:
bsort -> LPAREN LENS IN appexp DARROW QMARK RPAREN . [ WHERE TYPE TEST STAR RPAREN RBRACE RANGLE QUALIDENT MODULE LLIST LIDENT LET IN EQUAL EOF END DOLLAR COMMA BAR ARROW ]
-- On WHERE reduce production bsort -> LPAREN LENS IN appexp DARROW QMARK RPAREN 
-- On TYPE reduce production bsort -> LPAREN LENS IN appexp DARROW QMARK RPAREN 
-- On TEST reduce production bsort -> LPAREN LENS IN appexp DARROW QMARK RPAREN 
-- On STAR reduce production bsort -> LPAREN LENS IN appexp DARROW QMARK RPAREN 
-- On RPAREN reduce production bsort -> LPAREN LENS IN appexp DARROW QMARK RPAREN 
-- On RBRACE reduce production bsort -> LPAREN LENS IN appexp DARROW QMARK RPAREN 
-- On RANGLE reduce production bsort -> LPAREN LENS IN appexp DARROW QMARK RPAREN 
-- On QUALIDENT reduce production bsort -> LPAREN LENS IN appexp DARROW QMARK RPAREN 
-- On MODULE reduce production bsort -> LPAREN LENS IN appexp DARROW QMARK RPAREN 
-- On LLIST reduce production bsort -> LPAREN LENS IN appexp DARROW QMARK RPAREN 
-- On LIDENT reduce production bsort -> LPAREN LENS IN appexp DARROW QMARK RPAREN 
-- On LET reduce production bsort -> LPAREN LENS IN appexp DARROW QMARK RPAREN 
-- On IN reduce production bsort -> LPAREN LENS IN appexp DARROW QMARK RPAREN 
-- On EQUAL reduce production bsort -> LPAREN LENS IN appexp DARROW QMARK RPAREN 
-- On EOF reduce production bsort -> LPAREN LENS IN appexp DARROW QMARK RPAREN 
-- On END reduce production bsort -> LPAREN LENS IN appexp DARROW QMARK RPAREN 
-- On DOLLAR reduce production bsort -> LPAREN LENS IN appexp DARROW QMARK RPAREN 
-- On COMMA reduce production bsort -> LPAREN LENS IN appexp DARROW QMARK RPAREN 
-- On BAR reduce production bsort -> LPAREN LENS IN appexp DARROW QMARK RPAREN 
-- On ARROW reduce production bsort -> LPAREN LENS IN appexp DARROW QMARK RPAREN 

State 359:
appexp -> appexp . repexp [ UIDENT STR RPAREN QUALIDENT NSET LPAREN LIDENT LANGLE INTEGER HASH GRAMMAR CSET CHARACTER CEX BOOLEAN BEGIN ]
bsort -> LPAREN LENS IN appexp DARROW appexp . RPAREN [ WHERE TYPE TEST STAR RPAREN RBRACE RANGLE QUALIDENT MODULE LLIST LIDENT LET IN EQUAL EOF END DOLLAR COMMA BAR ARROW ]
-- On UIDENT shift to state 5
-- On STR shift to state 37
-- On RPAREN shift to state 360
-- On QUALIDENT shift to state 6
-- On NSET shift to state 43
-- On LPAREN shift to state 44
-- On LIDENT shift to state 7
-- On LANGLE shift to state 47
-- On INTEGER shift to state 49
-- On HASH shift to state 50
-- On GRAMMAR shift to state 75
-- On CSET shift to state 81
-- On CHARACTER shift to state 82
-- On CEX shift to state 83
-- On BOOLEAN shift to state 134
-- On BEGIN shift to state 135
-- On tyexp shift to state 136
-- On repexp shift to state 161
-- On qid shift to state 158
-- On matchexp shift to state 159
-- On aexp shift to state 162

State 360:
bsort -> LPAREN LENS IN appexp DARROW appexp RPAREN . [ WHERE TYPE TEST STAR RPAREN RBRACE RANGLE QUALIDENT MODULE LLIST LIDENT LET IN EQUAL EOF END DOLLAR COMMA BAR ARROW ]
-- On WHERE reduce production bsort -> LPAREN LENS IN appexp DARROW appexp RPAREN 
-- On TYPE reduce production bsort -> LPAREN LENS IN appexp DARROW appexp RPAREN 
-- On TEST reduce production bsort -> LPAREN LENS IN appexp DARROW appexp RPAREN 
-- On STAR reduce production bsort -> LPAREN LENS IN appexp DARROW appexp RPAREN 
-- On RPAREN reduce production bsort -> LPAREN LENS IN appexp DARROW appexp RPAREN 
-- On RBRACE reduce production bsort -> LPAREN LENS IN appexp DARROW appexp RPAREN 
-- On RANGLE reduce production bsort -> LPAREN LENS IN appexp DARROW appexp RPAREN 
-- On QUALIDENT reduce production bsort -> LPAREN LENS IN appexp DARROW appexp RPAREN 
-- On MODULE reduce production bsort -> LPAREN LENS IN appexp DARROW appexp RPAREN 
-- On LLIST reduce production bsort -> LPAREN LENS IN appexp DARROW appexp RPAREN 
-- On LIDENT reduce production bsort -> LPAREN LENS IN appexp DARROW appexp RPAREN 
-- On LET reduce production bsort -> LPAREN LENS IN appexp DARROW appexp RPAREN 
-- On IN reduce production bsort -> LPAREN LENS IN appexp DARROW appexp RPAREN 
-- On EQUAL reduce production bsort -> LPAREN LENS IN appexp DARROW appexp RPAREN 
-- On EOF reduce production bsort -> LPAREN LENS IN appexp DARROW appexp RPAREN 
-- On END reduce production bsort -> LPAREN LENS IN appexp DARROW appexp RPAREN 
-- On DOLLAR reduce production bsort -> LPAREN LENS IN appexp DARROW appexp RPAREN 
-- On COMMA reduce production bsort -> LPAREN LENS IN appexp DARROW appexp RPAREN 
-- On BAR reduce production bsort -> LPAREN LENS IN appexp DARROW appexp RPAREN 
-- On ARROW reduce production bsort -> LPAREN LENS IN appexp DARROW appexp RPAREN 

State 361:
bsort -> LPAREN sort . RPAREN [ WHERE TYPE TEST STAR RPAREN RBRACE RANGLE QUALIDENT MODULE LLIST LIDENT LET IN EQUAL EOF END DOLLAR COMMA BAR ARROW ]
bsort -> LPAREN sort . WHERE BANG exp RPAREN [ WHERE TYPE TEST STAR RPAREN RBRACE RANGLE QUALIDENT MODULE LLIST LIDENT LET IN EQUAL EOF END DOLLAR COMMA BAR ARROW ]
bsort -> LPAREN sort . WHERE exp RPAREN [ WHERE TYPE TEST STAR RPAREN RBRACE RANGLE QUALIDENT MODULE LLIST LIDENT LET IN EQUAL EOF END DOLLAR COMMA BAR ARROW ]
datatypesort -> LPAREN sort . COMMA sort_list RPAREN qvar [ WHERE TYPE TEST STAR RPAREN RBRACE RANGLE MODULE LLIST LET IN EQUAL EOF END DOLLAR COMMA BAR ARROW ]
-- On WHERE shift to state 362
-- On RPAREN shift to state 368
-- On COMMA shift to state 369

State 362:
bsort -> LPAREN sort WHERE . BANG exp RPAREN [ WHERE TYPE TEST STAR RPAREN RBRACE RANGLE QUALIDENT MODULE LLIST LIDENT LET IN EQUAL EOF END DOLLAR COMMA BAR ARROW ]
bsort -> LPAREN sort WHERE . exp RPAREN [ WHERE TYPE TEST STAR RPAREN RBRACE RANGLE QUALIDENT MODULE LLIST LIDENT LET IN EQUAL EOF END DOLLAR COMMA BAR ARROW ]
-- On UIDENT shift to state 5
-- On SYNTH shift to state 36
-- On STR shift to state 37
-- On SQUASH shift to state 38
-- On QUALIDENT shift to state 6
-- On PROJECT shift to state 39
-- On PERM shift to state 40
-- On NSET shift to state 43
-- On MINUS shift to state 46
-- On MATCH shift to state 48
-- On LPAREN shift to state 44
-- On LIDENT shift to state 7
-- On LET shift to state 85
-- On LANGLE shift to state 47
-- On INTEGER shift to state 49
-- On HASH shift to state 50
-- On GRAMMAR shift to state 75
-- On FUN shift to state 123
-- On CSET shift to state 81
-- On CHARACTER shift to state 82
-- On CEX shift to state 83
-- On BOOLEAN shift to state 134
-- On BEGIN shift to state 135
-- On BANG shift to state 363
-- On tyexp shift to state 136
-- On tildeexp shift to state 155
-- On rewriteexp shift to state 168
-- On repexp shift to state 157
-- On qid shift to state 158
-- On obarexp shift to state 176
-- On minusexp shift to state 178
-- On matchexp shift to state 159
-- On ltexp shift to state 179
-- On leqexp shift to state 180
-- On lenscomponentexp shift to state 181
-- On infixexp shift to state 182
-- On gtexp shift to state 185
-- On geqexp shift to state 186
-- On funexp shift to state 230
-- On exp shift to state 366
-- On equalexp shift to state 233
-- On dotexp shift to state 188
-- On dbarexp shift to state 238
-- On composeexp shift to state 241
-- On commaexp shift to state 247
-- On cexp shift to state 248
-- On barexp shift to state 246
-- On appexp shift to state 192
-- On ampexp shift to state 226
-- On ampampexp shift to state 229
-- On aexp shift to state 162

State 363:
bsort -> LPAREN sort WHERE BANG . exp RPAREN [ WHERE TYPE TEST STAR RPAREN RBRACE RANGLE QUALIDENT MODULE LLIST LIDENT LET IN EQUAL EOF END DOLLAR COMMA BAR ARROW ]
-- On UIDENT shift to state 5
-- On SYNTH shift to state 36
-- On STR shift to state 37
-- On SQUASH shift to state 38
-- On QUALIDENT shift to state 6
-- On PROJECT shift to state 39
-- On PERM shift to state 40
-- On NSET shift to state 43
-- On MINUS shift to state 46
-- On MATCH shift to state 48
-- On LPAREN shift to state 44
-- On LIDENT shift to state 7
-- On LET shift to state 85
-- On LANGLE shift to state 47
-- On INTEGER shift to state 49
-- On HASH shift to state 50
-- On GRAMMAR shift to state 75
-- On FUN shift to state 123
-- On CSET shift to state 81
-- On CHARACTER shift to state 82
-- On CEX shift to state 83
-- On BOOLEAN shift to state 134
-- On BEGIN shift to state 135
-- On tyexp shift to state 136
-- On tildeexp shift to state 155
-- On rewriteexp shift to state 168
-- On repexp shift to state 157
-- On qid shift to state 158
-- On obarexp shift to state 176
-- On minusexp shift to state 178
-- On matchexp shift to state 159
-- On ltexp shift to state 179
-- On leqexp shift to state 180
-- On lenscomponentexp shift to state 181
-- On infixexp shift to state 182
-- On gtexp shift to state 185
-- On geqexp shift to state 186
-- On funexp shift to state 230
-- On exp shift to state 364
-- On equalexp shift to state 233
-- On dotexp shift to state 188
-- On dbarexp shift to state 238
-- On composeexp shift to state 241
-- On commaexp shift to state 247
-- On cexp shift to state 248
-- On barexp shift to state 246
-- On appexp shift to state 192
-- On ampexp shift to state 226
-- On ampampexp shift to state 229
-- On aexp shift to state 162

State 364:
bsort -> LPAREN sort WHERE BANG exp . RPAREN [ WHERE TYPE TEST STAR RPAREN RBRACE RANGLE QUALIDENT MODULE LLIST LIDENT LET IN EQUAL EOF END DOLLAR COMMA BAR ARROW ]
-- On RPAREN shift to state 365

State 365:
bsort -> LPAREN sort WHERE BANG exp RPAREN . [ WHERE TYPE TEST STAR RPAREN RBRACE RANGLE QUALIDENT MODULE LLIST LIDENT LET IN EQUAL EOF END DOLLAR COMMA BAR ARROW ]
-- On WHERE reduce production bsort -> LPAREN sort WHERE BANG exp RPAREN 
-- On TYPE reduce production bsort -> LPAREN sort WHERE BANG exp RPAREN 
-- On TEST reduce production bsort -> LPAREN sort WHERE BANG exp RPAREN 
-- On STAR reduce production bsort -> LPAREN sort WHERE BANG exp RPAREN 
-- On RPAREN reduce production bsort -> LPAREN sort WHERE BANG exp RPAREN 
-- On RBRACE reduce production bsort -> LPAREN sort WHERE BANG exp RPAREN 
-- On RANGLE reduce production bsort -> LPAREN sort WHERE BANG exp RPAREN 
-- On QUALIDENT reduce production bsort -> LPAREN sort WHERE BANG exp RPAREN 
-- On MODULE reduce production bsort -> LPAREN sort WHERE BANG exp RPAREN 
-- On LLIST reduce production bsort -> LPAREN sort WHERE BANG exp RPAREN 
-- On LIDENT reduce production bsort -> LPAREN sort WHERE BANG exp RPAREN 
-- On LET reduce production bsort -> LPAREN sort WHERE BANG exp RPAREN 
-- On IN reduce production bsort -> LPAREN sort WHERE BANG exp RPAREN 
-- On EQUAL reduce production bsort -> LPAREN sort WHERE BANG exp RPAREN 
-- On EOF reduce production bsort -> LPAREN sort WHERE BANG exp RPAREN 
-- On END reduce production bsort -> LPAREN sort WHERE BANG exp RPAREN 
-- On DOLLAR reduce production bsort -> LPAREN sort WHERE BANG exp RPAREN 
-- On COMMA reduce production bsort -> LPAREN sort WHERE BANG exp RPAREN 
-- On BAR reduce production bsort -> LPAREN sort WHERE BANG exp RPAREN 
-- On ARROW reduce production bsort -> LPAREN sort WHERE BANG exp RPAREN 

State 366:
bsort -> LPAREN sort WHERE exp . RPAREN [ WHERE TYPE TEST STAR RPAREN RBRACE RANGLE QUALIDENT MODULE LLIST LIDENT LET IN EQUAL EOF END DOLLAR COMMA BAR ARROW ]
-- On RPAREN shift to state 367

State 367:
bsort -> LPAREN sort WHERE exp RPAREN . [ WHERE TYPE TEST STAR RPAREN RBRACE RANGLE QUALIDENT MODULE LLIST LIDENT LET IN EQUAL EOF END DOLLAR COMMA BAR ARROW ]
-- On WHERE reduce production bsort -> LPAREN sort WHERE exp RPAREN 
-- On TYPE reduce production bsort -> LPAREN sort WHERE exp RPAREN 
-- On TEST reduce production bsort -> LPAREN sort WHERE exp RPAREN 
-- On STAR reduce production bsort -> LPAREN sort WHERE exp RPAREN 
-- On RPAREN reduce production bsort -> LPAREN sort WHERE exp RPAREN 
-- On RBRACE reduce production bsort -> LPAREN sort WHERE exp RPAREN 
-- On RANGLE reduce production bsort -> LPAREN sort WHERE exp RPAREN 
-- On QUALIDENT reduce production bsort -> LPAREN sort WHERE exp RPAREN 
-- On MODULE reduce production bsort -> LPAREN sort WHERE exp RPAREN 
-- On LLIST reduce production bsort -> LPAREN sort WHERE exp RPAREN 
-- On LIDENT reduce production bsort -> LPAREN sort WHERE exp RPAREN 
-- On LET reduce production bsort -> LPAREN sort WHERE exp RPAREN 
-- On IN reduce production bsort -> LPAREN sort WHERE exp RPAREN 
-- On EQUAL reduce production bsort -> LPAREN sort WHERE exp RPAREN 
-- On EOF reduce production bsort -> LPAREN sort WHERE exp RPAREN 
-- On END reduce production bsort -> LPAREN sort WHERE exp RPAREN 
-- On DOLLAR reduce production bsort -> LPAREN sort WHERE exp RPAREN 
-- On COMMA reduce production bsort -> LPAREN sort WHERE exp RPAREN 
-- On BAR reduce production bsort -> LPAREN sort WHERE exp RPAREN 
-- On ARROW reduce production bsort -> LPAREN sort WHERE exp RPAREN 

State 368:
bsort -> LPAREN sort RPAREN . [ WHERE TYPE TEST STAR RPAREN RBRACE RANGLE QUALIDENT MODULE LLIST LIDENT LET IN EQUAL EOF END DOLLAR COMMA BAR ARROW ]
-- On WHERE reduce production bsort -> LPAREN sort RPAREN 
-- On TYPE reduce production bsort -> LPAREN sort RPAREN 
-- On TEST reduce production bsort -> LPAREN sort RPAREN 
-- On STAR reduce production bsort -> LPAREN sort RPAREN 
-- On RPAREN reduce production bsort -> LPAREN sort RPAREN 
-- On RBRACE reduce production bsort -> LPAREN sort RPAREN 
-- On RANGLE reduce production bsort -> LPAREN sort RPAREN 
-- On QUALIDENT reduce production bsort -> LPAREN sort RPAREN 
-- On MODULE reduce production bsort -> LPAREN sort RPAREN 
-- On LLIST reduce production bsort -> LPAREN sort RPAREN 
-- On LIDENT reduce production bsort -> LPAREN sort RPAREN 
-- On LET reduce production bsort -> LPAREN sort RPAREN 
-- On IN reduce production bsort -> LPAREN sort RPAREN 
-- On EQUAL reduce production bsort -> LPAREN sort RPAREN 
-- On EOF reduce production bsort -> LPAREN sort RPAREN 
-- On END reduce production bsort -> LPAREN sort RPAREN 
-- On DOLLAR reduce production bsort -> LPAREN sort RPAREN 
-- On COMMA reduce production bsort -> LPAREN sort RPAREN 
-- On BAR reduce production bsort -> LPAREN sort RPAREN 
-- On ARROW reduce production bsort -> LPAREN sort RPAREN 

State 369:
datatypesort -> LPAREN sort COMMA . sort_list RPAREN qvar [ WHERE TYPE TEST STAR RPAREN RBRACE RANGLE MODULE LLIST LET IN EQUAL EOF END DOLLAR COMMA BAR ARROW ]
-- On UNIT shift to state 24
-- On TYVARIDENT shift to state 12
-- On STRINGPREFS shift to state 25
-- On STRINGLISTPREFS shift to state 26
-- On STRING shift to state 27
-- On SKELETONS shift to state 28
-- On RESOURCES shift to state 29
-- On REGEXP shift to state 30
-- On QUALIDENT shift to state 31
-- On LPAREN shift to state 32
-- On LIDENT shift to state 52
-- On LENS shift to state 53
-- On INTPREFS shift to state 54
-- On INT shift to state 55
-- On FORALL shift to state 56
-- On CHAR shift to state 59
-- On CANONIZER shift to state 60
-- On BOOLPREFS shift to state 61
-- On BOOL shift to state 62
-- On AREGEXP shift to state 63
-- On tyvar shift to state 64
-- On sort_list shift to state 370
-- On sort shift to state 373
-- On qvar shift to state 66
-- On productsort shift to state 67
-- On datatypesort shift to state 149
-- On bsort shift to state 150
-- On asort shift to state 152
-- On arrowsort shift to state 153

State 370:
datatypesort -> LPAREN sort COMMA sort_list . RPAREN qvar [ WHERE TYPE TEST STAR RPAREN RBRACE RANGLE MODULE LLIST LET IN EQUAL EOF END DOLLAR COMMA BAR ARROW ]
-- On RPAREN shift to state 371

State 371:
datatypesort -> LPAREN sort COMMA sort_list RPAREN . qvar [ WHERE TYPE TEST STAR RPAREN RBRACE RANGLE MODULE LLIST LET IN EQUAL EOF END DOLLAR COMMA BAR ARROW ]
-- On QUALIDENT shift to state 31
-- On LIDENT shift to state 52
-- On qvar shift to state 372

State 372:
datatypesort -> LPAREN sort COMMA sort_list RPAREN qvar . [ WHERE TYPE TEST STAR RPAREN RBRACE RANGLE MODULE LLIST LET IN EQUAL EOF END DOLLAR COMMA BAR ARROW ]
-- On WHERE reduce production datatypesort -> LPAREN sort COMMA sort_list RPAREN qvar 
-- On TYPE reduce production datatypesort -> LPAREN sort COMMA sort_list RPAREN qvar 
-- On TEST reduce production datatypesort -> LPAREN sort COMMA sort_list RPAREN qvar 
-- On STAR reduce production datatypesort -> LPAREN sort COMMA sort_list RPAREN qvar 
-- On RPAREN reduce production datatypesort -> LPAREN sort COMMA sort_list RPAREN qvar 
-- On RBRACE reduce production datatypesort -> LPAREN sort COMMA sort_list RPAREN qvar 
-- On RANGLE reduce production datatypesort -> LPAREN sort COMMA sort_list RPAREN qvar 
-- On MODULE reduce production datatypesort -> LPAREN sort COMMA sort_list RPAREN qvar 
-- On LLIST reduce production datatypesort -> LPAREN sort COMMA sort_list RPAREN qvar 
-- On LET reduce production datatypesort -> LPAREN sort COMMA sort_list RPAREN qvar 
-- On IN reduce production datatypesort -> LPAREN sort COMMA sort_list RPAREN qvar 
-- On EQUAL reduce production datatypesort -> LPAREN sort COMMA sort_list RPAREN qvar 
-- On EOF reduce production datatypesort -> LPAREN sort COMMA sort_list RPAREN qvar 
-- On END reduce production datatypesort -> LPAREN sort COMMA sort_list RPAREN qvar 
-- On DOLLAR reduce production datatypesort -> LPAREN sort COMMA sort_list RPAREN qvar 
-- On COMMA reduce production datatypesort -> LPAREN sort COMMA sort_list RPAREN qvar 
-- On BAR reduce production datatypesort -> LPAREN sort COMMA sort_list RPAREN qvar 
-- On ARROW reduce production datatypesort -> LPAREN sort COMMA sort_list RPAREN qvar 

State 373:
sort_list -> sort . [ RPAREN ]
sort_list -> sort . COMMA sort_list [ RPAREN ]
-- On COMMA shift to state 374
-- On RPAREN reduce production sort_list -> sort 

State 374:
sort_list -> sort COMMA . sort_list [ RPAREN ]
-- On UNIT shift to state 24
-- On TYVARIDENT shift to state 12
-- On STRINGPREFS shift to state 25
-- On STRINGLISTPREFS shift to state 26
-- On STRING shift to state 27
-- On SKELETONS shift to state 28
-- On RESOURCES shift to state 29
-- On REGEXP shift to state 30
-- On QUALIDENT shift to state 31
-- On LPAREN shift to state 32
-- On LIDENT shift to state 52
-- On LENS shift to state 53
-- On INTPREFS shift to state 54
-- On INT shift to state 55
-- On FORALL shift to state 56
-- On CHAR shift to state 59
-- On CANONIZER shift to state 60
-- On BOOLPREFS shift to state 61
-- On BOOL shift to state 62
-- On AREGEXP shift to state 63
-- On tyvar shift to state 64
-- On sort_list shift to state 375
-- On sort shift to state 373
-- On qvar shift to state 66
-- On productsort shift to state 67
-- On datatypesort shift to state 149
-- On bsort shift to state 150
-- On asort shift to state 152
-- On arrowsort shift to state 153

State 375:
sort_list -> sort COMMA sort_list . [ RPAREN ]
-- On RPAREN reduce production sort_list -> sort COMMA sort_list 

State 376:
bsort -> LPAREN id . COLON sort WHERE BANG exp RPAREN [ WHERE TYPE TEST STAR RPAREN RBRACE RANGLE QUALIDENT MODULE LLIST LIDENT LET IN EQUAL EOF END DOLLAR COMMA BAR ARROW ]
bsort -> LPAREN id . COLON sort WHERE exp RPAREN [ WHERE TYPE TEST STAR RPAREN RBRACE RANGLE QUALIDENT MODULE LLIST LIDENT LET IN EQUAL EOF END DOLLAR COMMA BAR ARROW ]
-- On COLON shift to state 377

State 377:
bsort -> LPAREN id COLON . sort WHERE BANG exp RPAREN [ WHERE TYPE TEST STAR RPAREN RBRACE RANGLE QUALIDENT MODULE LLIST LIDENT LET IN EQUAL EOF END DOLLAR COMMA BAR ARROW ]
bsort -> LPAREN id COLON . sort WHERE exp RPAREN [ WHERE TYPE TEST STAR RPAREN RBRACE RANGLE QUALIDENT MODULE LLIST LIDENT LET IN EQUAL EOF END DOLLAR COMMA BAR ARROW ]
-- On UNIT shift to state 24
-- On TYVARIDENT shift to state 12
-- On STRINGPREFS shift to state 25
-- On STRINGLISTPREFS shift to state 26
-- On STRING shift to state 27
-- On SKELETONS shift to state 28
-- On RESOURCES shift to state 29
-- On REGEXP shift to state 30
-- On QUALIDENT shift to state 31
-- On LPAREN shift to state 32
-- On LIDENT shift to state 52
-- On LENS shift to state 53
-- On INTPREFS shift to state 54
-- On INT shift to state 55
-- On FORALL shift to state 56
-- On CHAR shift to state 59
-- On CANONIZER shift to state 60
-- On BOOLPREFS shift to state 61
-- On BOOL shift to state 62
-- On AREGEXP shift to state 63
-- On tyvar shift to state 64
-- On sort shift to state 378
-- On qvar shift to state 66
-- On productsort shift to state 67
-- On datatypesort shift to state 149
-- On bsort shift to state 150
-- On asort shift to state 152
-- On arrowsort shift to state 153

State 378:
bsort -> LPAREN id COLON sort . WHERE BANG exp RPAREN [ WHERE TYPE TEST STAR RPAREN RBRACE RANGLE QUALIDENT MODULE LLIST LIDENT LET IN EQUAL EOF END DOLLAR COMMA BAR ARROW ]
bsort -> LPAREN id COLON sort . WHERE exp RPAREN [ WHERE TYPE TEST STAR RPAREN RBRACE RANGLE QUALIDENT MODULE LLIST LIDENT LET IN EQUAL EOF END DOLLAR COMMA BAR ARROW ]
-- On WHERE shift to state 379

State 379:
bsort -> LPAREN id COLON sort WHERE . BANG exp RPAREN [ WHERE TYPE TEST STAR RPAREN RBRACE RANGLE QUALIDENT MODULE LLIST LIDENT LET IN EQUAL EOF END DOLLAR COMMA BAR ARROW ]
bsort -> LPAREN id COLON sort WHERE . exp RPAREN [ WHERE TYPE TEST STAR RPAREN RBRACE RANGLE QUALIDENT MODULE LLIST LIDENT LET IN EQUAL EOF END DOLLAR COMMA BAR ARROW ]
-- On UIDENT shift to state 5
-- On SYNTH shift to state 36
-- On STR shift to state 37
-- On SQUASH shift to state 38
-- On QUALIDENT shift to state 6
-- On PROJECT shift to state 39
-- On PERM shift to state 40
-- On NSET shift to state 43
-- On MINUS shift to state 46
-- On MATCH shift to state 48
-- On LPAREN shift to state 44
-- On LIDENT shift to state 7
-- On LET shift to state 85
-- On LANGLE shift to state 47
-- On INTEGER shift to state 49
-- On HASH shift to state 50
-- On GRAMMAR shift to state 75
-- On FUN shift to state 123
-- On CSET shift to state 81
-- On CHARACTER shift to state 82
-- On CEX shift to state 83
-- On BOOLEAN shift to state 134
-- On BEGIN shift to state 135
-- On BANG shift to state 380
-- On tyexp shift to state 136
-- On tildeexp shift to state 155
-- On rewriteexp shift to state 168
-- On repexp shift to state 157
-- On qid shift to state 158
-- On obarexp shift to state 176
-- On minusexp shift to state 178
-- On matchexp shift to state 159
-- On ltexp shift to state 179
-- On leqexp shift to state 180
-- On lenscomponentexp shift to state 181
-- On infixexp shift to state 182
-- On gtexp shift to state 185
-- On geqexp shift to state 186
-- On funexp shift to state 230
-- On exp shift to state 383
-- On equalexp shift to state 233
-- On dotexp shift to state 188
-- On dbarexp shift to state 238
-- On composeexp shift to state 241
-- On commaexp shift to state 247
-- On cexp shift to state 248
-- On barexp shift to state 246
-- On appexp shift to state 192
-- On ampexp shift to state 226
-- On ampampexp shift to state 229
-- On aexp shift to state 162

State 380:
bsort -> LPAREN id COLON sort WHERE BANG . exp RPAREN [ WHERE TYPE TEST STAR RPAREN RBRACE RANGLE QUALIDENT MODULE LLIST LIDENT LET IN EQUAL EOF END DOLLAR COMMA BAR ARROW ]
-- On UIDENT shift to state 5
-- On SYNTH shift to state 36
-- On STR shift to state 37
-- On SQUASH shift to state 38
-- On QUALIDENT shift to state 6
-- On PROJECT shift to state 39
-- On PERM shift to state 40
-- On NSET shift to state 43
-- On MINUS shift to state 46
-- On MATCH shift to state 48
-- On LPAREN shift to state 44
-- On LIDENT shift to state 7
-- On LET shift to state 85
-- On LANGLE shift to state 47
-- On INTEGER shift to state 49
-- On HASH shift to state 50
-- On GRAMMAR shift to state 75
-- On FUN shift to state 123
-- On CSET shift to state 81
-- On CHARACTER shift to state 82
-- On CEX shift to state 83
-- On BOOLEAN shift to state 134
-- On BEGIN shift to state 135
-- On tyexp shift to state 136
-- On tildeexp shift to state 155
-- On rewriteexp shift to state 168
-- On repexp shift to state 157
-- On qid shift to state 158
-- On obarexp shift to state 176
-- On minusexp shift to state 178
-- On matchexp shift to state 159
-- On ltexp shift to state 179
-- On leqexp shift to state 180
-- On lenscomponentexp shift to state 181
-- On infixexp shift to state 182
-- On gtexp shift to state 185
-- On geqexp shift to state 186
-- On funexp shift to state 230
-- On exp shift to state 381
-- On equalexp shift to state 233
-- On dotexp shift to state 188
-- On dbarexp shift to state 238
-- On composeexp shift to state 241
-- On commaexp shift to state 247
-- On cexp shift to state 248
-- On barexp shift to state 246
-- On appexp shift to state 192
-- On ampexp shift to state 226
-- On ampampexp shift to state 229
-- On aexp shift to state 162

State 381:
bsort -> LPAREN id COLON sort WHERE BANG exp . RPAREN [ WHERE TYPE TEST STAR RPAREN RBRACE RANGLE QUALIDENT MODULE LLIST LIDENT LET IN EQUAL EOF END DOLLAR COMMA BAR ARROW ]
-- On RPAREN shift to state 382

State 382:
bsort -> LPAREN id COLON sort WHERE BANG exp RPAREN . [ WHERE TYPE TEST STAR RPAREN RBRACE RANGLE QUALIDENT MODULE LLIST LIDENT LET IN EQUAL EOF END DOLLAR COMMA BAR ARROW ]
-- On WHERE reduce production bsort -> LPAREN id COLON sort WHERE BANG exp RPAREN 
-- On TYPE reduce production bsort -> LPAREN id COLON sort WHERE BANG exp RPAREN 
-- On TEST reduce production bsort -> LPAREN id COLON sort WHERE BANG exp RPAREN 
-- On STAR reduce production bsort -> LPAREN id COLON sort WHERE BANG exp RPAREN 
-- On RPAREN reduce production bsort -> LPAREN id COLON sort WHERE BANG exp RPAREN 
-- On RBRACE reduce production bsort -> LPAREN id COLON sort WHERE BANG exp RPAREN 
-- On RANGLE reduce production bsort -> LPAREN id COLON sort WHERE BANG exp RPAREN 
-- On QUALIDENT reduce production bsort -> LPAREN id COLON sort WHERE BANG exp RPAREN 
-- On MODULE reduce production bsort -> LPAREN id COLON sort WHERE BANG exp RPAREN 
-- On LLIST reduce production bsort -> LPAREN id COLON sort WHERE BANG exp RPAREN 
-- On LIDENT reduce production bsort -> LPAREN id COLON sort WHERE BANG exp RPAREN 
-- On LET reduce production bsort -> LPAREN id COLON sort WHERE BANG exp RPAREN 
-- On IN reduce production bsort -> LPAREN id COLON sort WHERE BANG exp RPAREN 
-- On EQUAL reduce production bsort -> LPAREN id COLON sort WHERE BANG exp RPAREN 
-- On EOF reduce production bsort -> LPAREN id COLON sort WHERE BANG exp RPAREN 
-- On END reduce production bsort -> LPAREN id COLON sort WHERE BANG exp RPAREN 
-- On DOLLAR reduce production bsort -> LPAREN id COLON sort WHERE BANG exp RPAREN 
-- On COMMA reduce production bsort -> LPAREN id COLON sort WHERE BANG exp RPAREN 
-- On BAR reduce production bsort -> LPAREN id COLON sort WHERE BANG exp RPAREN 
-- On ARROW reduce production bsort -> LPAREN id COLON sort WHERE BANG exp RPAREN 

State 383:
bsort -> LPAREN id COLON sort WHERE exp . RPAREN [ WHERE TYPE TEST STAR RPAREN RBRACE RANGLE QUALIDENT MODULE LLIST LIDENT LET IN EQUAL EOF END DOLLAR COMMA BAR ARROW ]
-- On RPAREN shift to state 384

State 384:
bsort -> LPAREN id COLON sort WHERE exp RPAREN . [ WHERE TYPE TEST STAR RPAREN RBRACE RANGLE QUALIDENT MODULE LLIST LIDENT LET IN EQUAL EOF END DOLLAR COMMA BAR ARROW ]
-- On WHERE reduce production bsort -> LPAREN id COLON sort WHERE exp RPAREN 
-- On TYPE reduce production bsort -> LPAREN id COLON sort WHERE exp RPAREN 
-- On TEST reduce production bsort -> LPAREN id COLON sort WHERE exp RPAREN 
-- On STAR reduce production bsort -> LPAREN id COLON sort WHERE exp RPAREN 
-- On RPAREN reduce production bsort -> LPAREN id COLON sort WHERE exp RPAREN 
-- On RBRACE reduce production bsort -> LPAREN id COLON sort WHERE exp RPAREN 
-- On RANGLE reduce production bsort -> LPAREN id COLON sort WHERE exp RPAREN 
-- On QUALIDENT reduce production bsort -> LPAREN id COLON sort WHERE exp RPAREN 
-- On MODULE reduce production bsort -> LPAREN id COLON sort WHERE exp RPAREN 
-- On LLIST reduce production bsort -> LPAREN id COLON sort WHERE exp RPAREN 
-- On LIDENT reduce production bsort -> LPAREN id COLON sort WHERE exp RPAREN 
-- On LET reduce production bsort -> LPAREN id COLON sort WHERE exp RPAREN 
-- On IN reduce production bsort -> LPAREN id COLON sort WHERE exp RPAREN 
-- On EQUAL reduce production bsort -> LPAREN id COLON sort WHERE exp RPAREN 
-- On EOF reduce production bsort -> LPAREN id COLON sort WHERE exp RPAREN 
-- On END reduce production bsort -> LPAREN id COLON sort WHERE exp RPAREN 
-- On DOLLAR reduce production bsort -> LPAREN id COLON sort WHERE exp RPAREN 
-- On COMMA reduce production bsort -> LPAREN id COLON sort WHERE exp RPAREN 
-- On BAR reduce production bsort -> LPAREN id COLON sort WHERE exp RPAREN 
-- On ARROW reduce production bsort -> LPAREN id COLON sort WHERE exp RPAREN 

State 385:
productsort -> productsort STAR datatypesort . [ WHERE TYPE TEST STAR RPAREN RBRACE RANGLE MODULE LLIST LET IN EQUAL EOF END DOLLAR COMMA BAR ARROW ]
-- On WHERE reduce production productsort -> productsort STAR datatypesort 
-- On TYPE reduce production productsort -> productsort STAR datatypesort 
-- On TEST reduce production productsort -> productsort STAR datatypesort 
-- On STAR reduce production productsort -> productsort STAR datatypesort 
-- On RPAREN reduce production productsort -> productsort STAR datatypesort 
-- On RBRACE reduce production productsort -> productsort STAR datatypesort 
-- On RANGLE reduce production productsort -> productsort STAR datatypesort 
-- On MODULE reduce production productsort -> productsort STAR datatypesort 
-- On LLIST reduce production productsort -> productsort STAR datatypesort 
-- On LET reduce production productsort -> productsort STAR datatypesort 
-- On IN reduce production productsort -> productsort STAR datatypesort 
-- On EQUAL reduce production productsort -> productsort STAR datatypesort 
-- On EOF reduce production productsort -> productsort STAR datatypesort 
-- On END reduce production productsort -> productsort STAR datatypesort 
-- On DOLLAR reduce production productsort -> productsort STAR datatypesort 
-- On COMMA reduce production productsort -> productsort STAR datatypesort 
-- On BAR reduce production productsort -> productsort STAR datatypesort 
-- On ARROW reduce production productsort -> productsort STAR datatypesort 

State 386:
arrowsort -> productsort ARROW . arrowsort [ WHERE TYPE TEST RPAREN RBRACE RANGLE MODULE LLIST LET IN EQUAL EOF END DOLLAR COMMA BAR ]
-- On UNIT shift to state 24
-- On TYVARIDENT shift to state 12
-- On STRINGPREFS shift to state 25
-- On STRINGLISTPREFS shift to state 26
-- On STRING shift to state 27
-- On SKELETONS shift to state 28
-- On RESOURCES shift to state 29
-- On REGEXP shift to state 30
-- On QUALIDENT shift to state 31
-- On LPAREN shift to state 32
-- On LIDENT shift to state 52
-- On LENS shift to state 53
-- On INTPREFS shift to state 54
-- On INT shift to state 55
-- On CHAR shift to state 59
-- On CANONIZER shift to state 60
-- On BOOLPREFS shift to state 61
-- On BOOL shift to state 62
-- On AREGEXP shift to state 63
-- On tyvar shift to state 64
-- On qvar shift to state 66
-- On productsort shift to state 67
-- On datatypesort shift to state 149
-- On bsort shift to state 150
-- On asort shift to state 152
-- On arrowsort shift to state 387

State 387:
arrowsort -> productsort ARROW arrowsort . [ WHERE TYPE TEST RPAREN RBRACE RANGLE MODULE LLIST LET IN EQUAL EOF END DOLLAR COMMA BAR ]
-- On WHERE reduce production arrowsort -> productsort ARROW arrowsort 
-- On TYPE reduce production arrowsort -> productsort ARROW arrowsort 
-- On TEST reduce production arrowsort -> productsort ARROW arrowsort 
-- On RPAREN reduce production arrowsort -> productsort ARROW arrowsort 
-- On RBRACE reduce production arrowsort -> productsort ARROW arrowsort 
-- On RANGLE reduce production arrowsort -> productsort ARROW arrowsort 
-- On MODULE reduce production arrowsort -> productsort ARROW arrowsort 
-- On LLIST reduce production arrowsort -> productsort ARROW arrowsort 
-- On LET reduce production arrowsort -> productsort ARROW arrowsort 
-- On IN reduce production arrowsort -> productsort ARROW arrowsort 
-- On EQUAL reduce production arrowsort -> productsort ARROW arrowsort 
-- On EOF reduce production arrowsort -> productsort ARROW arrowsort 
-- On END reduce production arrowsort -> productsort ARROW arrowsort 
-- On DOLLAR reduce production arrowsort -> productsort ARROW arrowsort 
-- On COMMA reduce production arrowsort -> productsort ARROW arrowsort 
-- On BAR reduce production arrowsort -> productsort ARROW arrowsort 

State 388:
aexp -> HASH LBRACE sort . LLIST boomerang_bparser_list [ WITH VTYPE USING UIDENT TYPE TILDE TEST STYPE STR STAR SEMI RPAREN RBRACK RBRACE RANGLE QUALIDENT QMARK PUT PLUS NSET MODULE MINUS LT LPAREN LIDENT LET LEQ LBRACE LANGLE INTO INTEGER IN HASH GT GRAMMAR GET GEQ EQUAL EOF END DOT DOLLAR DEQARROW DARROW CSET CREATE COMMA COLON CHOOSE CHARACTER CEX CANONIZE BOOLEAN BIJ BEGIN BARBAR BAR AVTYPE ASTYPE ARROW AND AMPERSAND ]
-- On LLIST shift to state 389

State 389:
aexp -> HASH LBRACE sort LLIST . boomerang_bparser_list [ WITH VTYPE USING UIDENT TYPE TILDE TEST STYPE STR STAR SEMI RPAREN RBRACK RBRACE RANGLE QUALIDENT QMARK PUT PLUS NSET MODULE MINUS LT LPAREN LIDENT LET LEQ LBRACE LANGLE INTO INTEGER IN HASH GT GRAMMAR GET GEQ EQUAL EOF END DOT DOLLAR DEQARROW DARROW CSET CREATE COMMA COLON CHOOSE CHARACTER CEX CANONIZE BOOLEAN BIJ BEGIN BARBAR BAR AVTYPE ASTYPE ARROW AND AMPERSAND ]
-- On UIDENT shift to state 5
-- On SYNTH shift to state 36
-- On STR shift to state 37
-- On SQUASH shift to state 38
-- On RBRACK shift to state 390
-- On QUALIDENT shift to state 6
-- On PROJECT shift to state 39
-- On PERM shift to state 40
-- On NSET shift to state 43
-- On MINUS shift to state 46
-- On LPAREN shift to state 44
-- On LIDENT shift to state 7
-- On LANGLE shift to state 47
-- On INTEGER shift to state 49
-- On HASH shift to state 50
-- On GRAMMAR shift to state 75
-- On CSET shift to state 81
-- On CHARACTER shift to state 82
-- On CEX shift to state 83
-- On BOOLEAN shift to state 134
-- On BEGIN shift to state 135
-- On tyexp shift to state 136
-- On tildeexp shift to state 155
-- On rewriteexp shift to state 168
-- On repexp shift to state 157
-- On qid shift to state 158
-- On obarexp shift to state 176
-- On minusexp shift to state 178
-- On matchexp shift to state 159
-- On ltexp shift to state 179
-- On leqexp shift to state 180
-- On lenscomponentexp shift to state 181
-- On infixexp shift to state 182
-- On gtexp shift to state 185
-- On geqexp shift to state 186
-- On equalexp shift to state 233
-- On dotexp shift to state 188
-- On dbarexp shift to state 238
-- On commaexp shift to state 391
-- On boomerang_bparser_list shift to state 395
-- On barexp shift to state 246
-- On appexp shift to state 192
-- On ampexp shift to state 226
-- On ampampexp shift to state 229
-- On aexp shift to state 162

State 390:
boomerang_bparser_list -> RBRACK . [ WITH VTYPE USING UIDENT TYPE TILDE TEST STYPE STR STAR SEMI RPAREN RBRACK RBRACE RANGLE QUALIDENT QMARK PUT PLUS NSET MODULE MINUS LT LPAREN LIDENT LET LEQ LBRACE LANGLE INTO INTEGER IN HASH GT GRAMMAR GET GEQ EQUAL EOF END DOT DOLLAR DEQARROW DARROW CSET CREATE COMMA COLON CHOOSE CHARACTER CEX CANONIZE BOOLEAN BIJ BEGIN BARBAR BAR AVTYPE ASTYPE ARROW AND AMPERSAND ]
-- On WITH reduce production boomerang_bparser_list -> RBRACK 
-- On VTYPE reduce production boomerang_bparser_list -> RBRACK 
-- On USING reduce production boomerang_bparser_list -> RBRACK 
-- On UIDENT reduce production boomerang_bparser_list -> RBRACK 
-- On TYPE reduce production boomerang_bparser_list -> RBRACK 
-- On TILDE reduce production boomerang_bparser_list -> RBRACK 
-- On TEST reduce production boomerang_bparser_list -> RBRACK 
-- On STYPE reduce production boomerang_bparser_list -> RBRACK 
-- On STR reduce production boomerang_bparser_list -> RBRACK 
-- On STAR reduce production boomerang_bparser_list -> RBRACK 
-- On SEMI reduce production boomerang_bparser_list -> RBRACK 
-- On RPAREN reduce production boomerang_bparser_list -> RBRACK 
-- On RBRACK reduce production boomerang_bparser_list -> RBRACK 
-- On RBRACE reduce production boomerang_bparser_list -> RBRACK 
-- On RANGLE reduce production boomerang_bparser_list -> RBRACK 
-- On QUALIDENT reduce production boomerang_bparser_list -> RBRACK 
-- On QMARK reduce production boomerang_bparser_list -> RBRACK 
-- On PUT reduce production boomerang_bparser_list -> RBRACK 
-- On PLUS reduce production boomerang_bparser_list -> RBRACK 
-- On NSET reduce production boomerang_bparser_list -> RBRACK 
-- On MODULE reduce production boomerang_bparser_list -> RBRACK 
-- On MINUS reduce production boomerang_bparser_list -> RBRACK 
-- On LT reduce production boomerang_bparser_list -> RBRACK 
-- On LPAREN reduce production boomerang_bparser_list -> RBRACK 
-- On LIDENT reduce production boomerang_bparser_list -> RBRACK 
-- On LET reduce production boomerang_bparser_list -> RBRACK 
-- On LEQ reduce production boomerang_bparser_list -> RBRACK 
-- On LBRACE reduce production boomerang_bparser_list -> RBRACK 
-- On LANGLE reduce production boomerang_bparser_list -> RBRACK 
-- On INTO reduce production boomerang_bparser_list -> RBRACK 
-- On INTEGER reduce production boomerang_bparser_list -> RBRACK 
-- On IN reduce production boomerang_bparser_list -> RBRACK 
-- On HASH reduce production boomerang_bparser_list -> RBRACK 
-- On GT reduce production boomerang_bparser_list -> RBRACK 
-- On GRAMMAR reduce production boomerang_bparser_list -> RBRACK 
-- On GET reduce production boomerang_bparser_list -> RBRACK 
-- On GEQ reduce production boomerang_bparser_list -> RBRACK 
-- On EQUAL reduce production boomerang_bparser_list -> RBRACK 
-- On EOF reduce production boomerang_bparser_list -> RBRACK 
-- On END reduce production boomerang_bparser_list -> RBRACK 
-- On DOT reduce production boomerang_bparser_list -> RBRACK 
-- On DOLLAR reduce production boomerang_bparser_list -> RBRACK 
-- On DEQARROW reduce production boomerang_bparser_list -> RBRACK 
-- On DARROW reduce production boomerang_bparser_list -> RBRACK 
-- On CSET reduce production boomerang_bparser_list -> RBRACK 
-- On CREATE reduce production boomerang_bparser_list -> RBRACK 
-- On COMMA reduce production boomerang_bparser_list -> RBRACK 
-- On COLON reduce production boomerang_bparser_list -> RBRACK 
-- On CHOOSE reduce production boomerang_bparser_list -> RBRACK 
-- On CHARACTER reduce production boomerang_bparser_list -> RBRACK 
-- On CEX reduce production boomerang_bparser_list -> RBRACK 
-- On CANONIZE reduce production boomerang_bparser_list -> RBRACK 
-- On BOOLEAN reduce production boomerang_bparser_list -> RBRACK 
-- On BIJ reduce production boomerang_bparser_list -> RBRACK 
-- On BEGIN reduce production boomerang_bparser_list -> RBRACK 
-- On BARBAR reduce production boomerang_bparser_list -> RBRACK 
-- On BAR reduce production boomerang_bparser_list -> RBRACK 
-- On AVTYPE reduce production boomerang_bparser_list -> RBRACK 
-- On ASTYPE reduce production boomerang_bparser_list -> RBRACK 
-- On ARROW reduce production boomerang_bparser_list -> RBRACK 
-- On AND reduce production boomerang_bparser_list -> RBRACK 
-- On AMPERSAND reduce production boomerang_bparser_list -> RBRACK 

State 391:
boomerang_bparser_list -> commaexp . RBRACK [ WITH VTYPE USING UIDENT TYPE TILDE TEST STYPE STR STAR SEMI RPAREN RBRACK RBRACE RANGLE QUALIDENT QMARK PUT PLUS NSET MODULE MINUS LT LPAREN LIDENT LET LEQ LBRACE LANGLE INTO INTEGER IN HASH GT GRAMMAR GET GEQ EQUAL EOF END DOT DOLLAR DEQARROW DARROW CSET CREATE COMMA COLON CHOOSE CHARACTER CEX CANONIZE BOOLEAN BIJ BEGIN BARBAR BAR AVTYPE ASTYPE ARROW AND AMPERSAND ]
boomerang_bparser_list -> commaexp . SEMI boomerang_bparser_list [ WITH VTYPE USING UIDENT TYPE TILDE TEST STYPE STR STAR SEMI RPAREN RBRACK RBRACE RANGLE QUALIDENT QMARK PUT PLUS NSET MODULE MINUS LT LPAREN LIDENT LET LEQ LBRACE LANGLE INTO INTEGER IN HASH GT GRAMMAR GET GEQ EQUAL EOF END DOT DOLLAR DEQARROW DARROW CSET CREATE COMMA COLON CHOOSE CHARACTER CEX CANONIZE BOOLEAN BIJ BEGIN BARBAR BAR AVTYPE ASTYPE ARROW AND AMPERSAND ]
commaexp -> commaexp . COMMA barexp [ SEMI RBRACK COMMA ]
-- On SEMI shift to state 392
-- On RBRACK shift to state 394
-- On COMMA shift to state 244

State 392:
boomerang_bparser_list -> commaexp SEMI . boomerang_bparser_list [ WITH VTYPE USING UIDENT TYPE TILDE TEST STYPE STR STAR SEMI RPAREN RBRACK RBRACE RANGLE QUALIDENT QMARK PUT PLUS NSET MODULE MINUS LT LPAREN LIDENT LET LEQ LBRACE LANGLE INTO INTEGER IN HASH GT GRAMMAR GET GEQ EQUAL EOF END DOT DOLLAR DEQARROW DARROW CSET CREATE COMMA COLON CHOOSE CHARACTER CEX CANONIZE BOOLEAN BIJ BEGIN BARBAR BAR AVTYPE ASTYPE ARROW AND AMPERSAND ]
-- On UIDENT shift to state 5
-- On SYNTH shift to state 36
-- On STR shift to state 37
-- On SQUASH shift to state 38
-- On RBRACK shift to state 390
-- On QUALIDENT shift to state 6
-- On PROJECT shift to state 39
-- On PERM shift to state 40
-- On NSET shift to state 43
-- On MINUS shift to state 46
-- On LPAREN shift to state 44
-- On LIDENT shift to state 7
-- On LANGLE shift to state 47
-- On INTEGER shift to state 49
-- On HASH shift to state 50
-- On GRAMMAR shift to state 75
-- On CSET shift to state 81
-- On CHARACTER shift to state 82
-- On CEX shift to state 83
-- On BOOLEAN shift to state 134
-- On BEGIN shift to state 135
-- On tyexp shift to state 136
-- On tildeexp shift to state 155
-- On rewriteexp shift to state 168
-- On repexp shift to state 157
-- On qid shift to state 158
-- On obarexp shift to state 176
-- On minusexp shift to state 178
-- On matchexp shift to state 159
-- On ltexp shift to state 179
-- On leqexp shift to state 180
-- On lenscomponentexp shift to state 181
-- On infixexp shift to state 182
-- On gtexp shift to state 185
-- On geqexp shift to state 186
-- On equalexp shift to state 233
-- On dotexp shift to state 188
-- On dbarexp shift to state 238
-- On commaexp shift to state 391
-- On boomerang_bparser_list shift to state 393
-- On barexp shift to state 246
-- On appexp shift to state 192
-- On ampexp shift to state 226
-- On ampampexp shift to state 229
-- On aexp shift to state 162

State 393:
boomerang_bparser_list -> commaexp SEMI boomerang_bparser_list . [ WITH VTYPE USING UIDENT TYPE TILDE TEST STYPE STR STAR SEMI RPAREN RBRACK RBRACE RANGLE QUALIDENT QMARK PUT PLUS NSET MODULE MINUS LT LPAREN LIDENT LET LEQ LBRACE LANGLE INTO INTEGER IN HASH GT GRAMMAR GET GEQ EQUAL EOF END DOT DOLLAR DEQARROW DARROW CSET CREATE COMMA COLON CHOOSE CHARACTER CEX CANONIZE BOOLEAN BIJ BEGIN BARBAR BAR AVTYPE ASTYPE ARROW AND AMPERSAND ]
-- On WITH reduce production boomerang_bparser_list -> commaexp SEMI boomerang_bparser_list 
-- On VTYPE reduce production boomerang_bparser_list -> commaexp SEMI boomerang_bparser_list 
-- On USING reduce production boomerang_bparser_list -> commaexp SEMI boomerang_bparser_list 
-- On UIDENT reduce production boomerang_bparser_list -> commaexp SEMI boomerang_bparser_list 
-- On TYPE reduce production boomerang_bparser_list -> commaexp SEMI boomerang_bparser_list 
-- On TILDE reduce production boomerang_bparser_list -> commaexp SEMI boomerang_bparser_list 
-- On TEST reduce production boomerang_bparser_list -> commaexp SEMI boomerang_bparser_list 
-- On STYPE reduce production boomerang_bparser_list -> commaexp SEMI boomerang_bparser_list 
-- On STR reduce production boomerang_bparser_list -> commaexp SEMI boomerang_bparser_list 
-- On STAR reduce production boomerang_bparser_list -> commaexp SEMI boomerang_bparser_list 
-- On SEMI reduce production boomerang_bparser_list -> commaexp SEMI boomerang_bparser_list 
-- On RPAREN reduce production boomerang_bparser_list -> commaexp SEMI boomerang_bparser_list 
-- On RBRACK reduce production boomerang_bparser_list -> commaexp SEMI boomerang_bparser_list 
-- On RBRACE reduce production boomerang_bparser_list -> commaexp SEMI boomerang_bparser_list 
-- On RANGLE reduce production boomerang_bparser_list -> commaexp SEMI boomerang_bparser_list 
-- On QUALIDENT reduce production boomerang_bparser_list -> commaexp SEMI boomerang_bparser_list 
-- On QMARK reduce production boomerang_bparser_list -> commaexp SEMI boomerang_bparser_list 
-- On PUT reduce production boomerang_bparser_list -> commaexp SEMI boomerang_bparser_list 
-- On PLUS reduce production boomerang_bparser_list -> commaexp SEMI boomerang_bparser_list 
-- On NSET reduce production boomerang_bparser_list -> commaexp SEMI boomerang_bparser_list 
-- On MODULE reduce production boomerang_bparser_list -> commaexp SEMI boomerang_bparser_list 
-- On MINUS reduce production boomerang_bparser_list -> commaexp SEMI boomerang_bparser_list 
-- On LT reduce production boomerang_bparser_list -> commaexp SEMI boomerang_bparser_list 
-- On LPAREN reduce production boomerang_bparser_list -> commaexp SEMI boomerang_bparser_list 
-- On LIDENT reduce production boomerang_bparser_list -> commaexp SEMI boomerang_bparser_list 
-- On LET reduce production boomerang_bparser_list -> commaexp SEMI boomerang_bparser_list 
-- On LEQ reduce production boomerang_bparser_list -> commaexp SEMI boomerang_bparser_list 
-- On LBRACE reduce production boomerang_bparser_list -> commaexp SEMI boomerang_bparser_list 
-- On LANGLE reduce production boomerang_bparser_list -> commaexp SEMI boomerang_bparser_list 
-- On INTO reduce production boomerang_bparser_list -> commaexp SEMI boomerang_bparser_list 
-- On INTEGER reduce production boomerang_bparser_list -> commaexp SEMI boomerang_bparser_list 
-- On IN reduce production boomerang_bparser_list -> commaexp SEMI boomerang_bparser_list 
-- On HASH reduce production boomerang_bparser_list -> commaexp SEMI boomerang_bparser_list 
-- On GT reduce production boomerang_bparser_list -> commaexp SEMI boomerang_bparser_list 
-- On GRAMMAR reduce production boomerang_bparser_list -> commaexp SEMI boomerang_bparser_list 
-- On GET reduce production boomerang_bparser_list -> commaexp SEMI boomerang_bparser_list 
-- On GEQ reduce production boomerang_bparser_list -> commaexp SEMI boomerang_bparser_list 
-- On EQUAL reduce production boomerang_bparser_list -> commaexp SEMI boomerang_bparser_list 
-- On EOF reduce production boomerang_bparser_list -> commaexp SEMI boomerang_bparser_list 
-- On END reduce production boomerang_bparser_list -> commaexp SEMI boomerang_bparser_list 
-- On DOT reduce production boomerang_bparser_list -> commaexp SEMI boomerang_bparser_list 
-- On DOLLAR reduce production boomerang_bparser_list -> commaexp SEMI boomerang_bparser_list 
-- On DEQARROW reduce production boomerang_bparser_list -> commaexp SEMI boomerang_bparser_list 
-- On DARROW reduce production boomerang_bparser_list -> commaexp SEMI boomerang_bparser_list 
-- On CSET reduce production boomerang_bparser_list -> commaexp SEMI boomerang_bparser_list 
-- On CREATE reduce production boomerang_bparser_list -> commaexp SEMI boomerang_bparser_list 
-- On COMMA reduce production boomerang_bparser_list -> commaexp SEMI boomerang_bparser_list 
-- On COLON reduce production boomerang_bparser_list -> commaexp SEMI boomerang_bparser_list 
-- On CHOOSE reduce production boomerang_bparser_list -> commaexp SEMI boomerang_bparser_list 
-- On CHARACTER reduce production boomerang_bparser_list -> commaexp SEMI boomerang_bparser_list 
-- On CEX reduce production boomerang_bparser_list -> commaexp SEMI boomerang_bparser_list 
-- On CANONIZE reduce production boomerang_bparser_list -> commaexp SEMI boomerang_bparser_list 
-- On BOOLEAN reduce production boomerang_bparser_list -> commaexp SEMI boomerang_bparser_list 
-- On BIJ reduce production boomerang_bparser_list -> commaexp SEMI boomerang_bparser_list 
-- On BEGIN reduce production boomerang_bparser_list -> commaexp SEMI boomerang_bparser_list 
-- On BARBAR reduce production boomerang_bparser_list -> commaexp SEMI boomerang_bparser_list 
-- On BAR reduce production boomerang_bparser_list -> commaexp SEMI boomerang_bparser_list 
-- On AVTYPE reduce production boomerang_bparser_list -> commaexp SEMI boomerang_bparser_list 
-- On ASTYPE reduce production boomerang_bparser_list -> commaexp SEMI boomerang_bparser_list 
-- On ARROW reduce production boomerang_bparser_list -> commaexp SEMI boomerang_bparser_list 
-- On AND reduce production boomerang_bparser_list -> commaexp SEMI boomerang_bparser_list 
-- On AMPERSAND reduce production boomerang_bparser_list -> commaexp SEMI boomerang_bparser_list 

State 394:
boomerang_bparser_list -> commaexp RBRACK . [ WITH VTYPE USING UIDENT TYPE TILDE TEST STYPE STR STAR SEMI RPAREN RBRACK RBRACE RANGLE QUALIDENT QMARK PUT PLUS NSET MODULE MINUS LT LPAREN LIDENT LET LEQ LBRACE LANGLE INTO INTEGER IN HASH GT GRAMMAR GET GEQ EQUAL EOF END DOT DOLLAR DEQARROW DARROW CSET CREATE COMMA COLON CHOOSE CHARACTER CEX CANONIZE BOOLEAN BIJ BEGIN BARBAR BAR AVTYPE ASTYPE ARROW AND AMPERSAND ]
-- On WITH reduce production boomerang_bparser_list -> commaexp RBRACK 
-- On VTYPE reduce production boomerang_bparser_list -> commaexp RBRACK 
-- On USING reduce production boomerang_bparser_list -> commaexp RBRACK 
-- On UIDENT reduce production boomerang_bparser_list -> commaexp RBRACK 
-- On TYPE reduce production boomerang_bparser_list -> commaexp RBRACK 
-- On TILDE reduce production boomerang_bparser_list -> commaexp RBRACK 
-- On TEST reduce production boomerang_bparser_list -> commaexp RBRACK 
-- On STYPE reduce production boomerang_bparser_list -> commaexp RBRACK 
-- On STR reduce production boomerang_bparser_list -> commaexp RBRACK 
-- On STAR reduce production boomerang_bparser_list -> commaexp RBRACK 
-- On SEMI reduce production boomerang_bparser_list -> commaexp RBRACK 
-- On RPAREN reduce production boomerang_bparser_list -> commaexp RBRACK 
-- On RBRACK reduce production boomerang_bparser_list -> commaexp RBRACK 
-- On RBRACE reduce production boomerang_bparser_list -> commaexp RBRACK 
-- On RANGLE reduce production boomerang_bparser_list -> commaexp RBRACK 
-- On QUALIDENT reduce production boomerang_bparser_list -> commaexp RBRACK 
-- On QMARK reduce production boomerang_bparser_list -> commaexp RBRACK 
-- On PUT reduce production boomerang_bparser_list -> commaexp RBRACK 
-- On PLUS reduce production boomerang_bparser_list -> commaexp RBRACK 
-- On NSET reduce production boomerang_bparser_list -> commaexp RBRACK 
-- On MODULE reduce production boomerang_bparser_list -> commaexp RBRACK 
-- On MINUS reduce production boomerang_bparser_list -> commaexp RBRACK 
-- On LT reduce production boomerang_bparser_list -> commaexp RBRACK 
-- On LPAREN reduce production boomerang_bparser_list -> commaexp RBRACK 
-- On LIDENT reduce production boomerang_bparser_list -> commaexp RBRACK 
-- On LET reduce production boomerang_bparser_list -> commaexp RBRACK 
-- On LEQ reduce production boomerang_bparser_list -> commaexp RBRACK 
-- On LBRACE reduce production boomerang_bparser_list -> commaexp RBRACK 
-- On LANGLE reduce production boomerang_bparser_list -> commaexp RBRACK 
-- On INTO reduce production boomerang_bparser_list -> commaexp RBRACK 
-- On INTEGER reduce production boomerang_bparser_list -> commaexp RBRACK 
-- On IN reduce production boomerang_bparser_list -> commaexp RBRACK 
-- On HASH reduce production boomerang_bparser_list -> commaexp RBRACK 
-- On GT reduce production boomerang_bparser_list -> commaexp RBRACK 
-- On GRAMMAR reduce production boomerang_bparser_list -> commaexp RBRACK 
-- On GET reduce production boomerang_bparser_list -> commaexp RBRACK 
-- On GEQ reduce production boomerang_bparser_list -> commaexp RBRACK 
-- On EQUAL reduce production boomerang_bparser_list -> commaexp RBRACK 
-- On EOF reduce production boomerang_bparser_list -> commaexp RBRACK 
-- On END reduce production boomerang_bparser_list -> commaexp RBRACK 
-- On DOT reduce production boomerang_bparser_list -> commaexp RBRACK 
-- On DOLLAR reduce production boomerang_bparser_list -> commaexp RBRACK 
-- On DEQARROW reduce production boomerang_bparser_list -> commaexp RBRACK 
-- On DARROW reduce production boomerang_bparser_list -> commaexp RBRACK 
-- On CSET reduce production boomerang_bparser_list -> commaexp RBRACK 
-- On CREATE reduce production boomerang_bparser_list -> commaexp RBRACK 
-- On COMMA reduce production boomerang_bparser_list -> commaexp RBRACK 
-- On COLON reduce production boomerang_bparser_list -> commaexp RBRACK 
-- On CHOOSE reduce production boomerang_bparser_list -> commaexp RBRACK 
-- On CHARACTER reduce production boomerang_bparser_list -> commaexp RBRACK 
-- On CEX reduce production boomerang_bparser_list -> commaexp RBRACK 
-- On CANONIZE reduce production boomerang_bparser_list -> commaexp RBRACK 
-- On BOOLEAN reduce production boomerang_bparser_list -> commaexp RBRACK 
-- On BIJ reduce production boomerang_bparser_list -> commaexp RBRACK 
-- On BEGIN reduce production boomerang_bparser_list -> commaexp RBRACK 
-- On BARBAR reduce production boomerang_bparser_list -> commaexp RBRACK 
-- On BAR reduce production boomerang_bparser_list -> commaexp RBRACK 
-- On AVTYPE reduce production boomerang_bparser_list -> commaexp RBRACK 
-- On ASTYPE reduce production boomerang_bparser_list -> commaexp RBRACK 
-- On ARROW reduce production boomerang_bparser_list -> commaexp RBRACK 
-- On AND reduce production boomerang_bparser_list -> commaexp RBRACK 
-- On AMPERSAND reduce production boomerang_bparser_list -> commaexp RBRACK 

State 395:
aexp -> HASH LBRACE sort LLIST boomerang_bparser_list . [ WITH VTYPE USING UIDENT TYPE TILDE TEST STYPE STR STAR SEMI RPAREN RBRACK RBRACE RANGLE QUALIDENT QMARK PUT PLUS NSET MODULE MINUS LT LPAREN LIDENT LET LEQ LBRACE LANGLE INTO INTEGER IN HASH GT GRAMMAR GET GEQ EQUAL EOF END DOT DOLLAR DEQARROW DARROW CSET CREATE COMMA COLON CHOOSE CHARACTER CEX CANONIZE BOOLEAN BIJ BEGIN BARBAR BAR AVTYPE ASTYPE ARROW AND AMPERSAND ]
-- On WITH reduce production aexp -> HASH LBRACE sort LLIST boomerang_bparser_list 
-- On VTYPE reduce production aexp -> HASH LBRACE sort LLIST boomerang_bparser_list 
-- On USING reduce production aexp -> HASH LBRACE sort LLIST boomerang_bparser_list 
-- On UIDENT reduce production aexp -> HASH LBRACE sort LLIST boomerang_bparser_list 
-- On TYPE reduce production aexp -> HASH LBRACE sort LLIST boomerang_bparser_list 
-- On TILDE reduce production aexp -> HASH LBRACE sort LLIST boomerang_bparser_list 
-- On TEST reduce production aexp -> HASH LBRACE sort LLIST boomerang_bparser_list 
-- On STYPE reduce production aexp -> HASH LBRACE sort LLIST boomerang_bparser_list 
-- On STR reduce production aexp -> HASH LBRACE sort LLIST boomerang_bparser_list 
-- On STAR reduce production aexp -> HASH LBRACE sort LLIST boomerang_bparser_list 
-- On SEMI reduce production aexp -> HASH LBRACE sort LLIST boomerang_bparser_list 
-- On RPAREN reduce production aexp -> HASH LBRACE sort LLIST boomerang_bparser_list 
-- On RBRACK reduce production aexp -> HASH LBRACE sort LLIST boomerang_bparser_list 
-- On RBRACE reduce production aexp -> HASH LBRACE sort LLIST boomerang_bparser_list 
-- On RANGLE reduce production aexp -> HASH LBRACE sort LLIST boomerang_bparser_list 
-- On QUALIDENT reduce production aexp -> HASH LBRACE sort LLIST boomerang_bparser_list 
-- On QMARK reduce production aexp -> HASH LBRACE sort LLIST boomerang_bparser_list 
-- On PUT reduce production aexp -> HASH LBRACE sort LLIST boomerang_bparser_list 
-- On PLUS reduce production aexp -> HASH LBRACE sort LLIST boomerang_bparser_list 
-- On NSET reduce production aexp -> HASH LBRACE sort LLIST boomerang_bparser_list 
-- On MODULE reduce production aexp -> HASH LBRACE sort LLIST boomerang_bparser_list 
-- On MINUS reduce production aexp -> HASH LBRACE sort LLIST boomerang_bparser_list 
-- On LT reduce production aexp -> HASH LBRACE sort LLIST boomerang_bparser_list 
-- On LPAREN reduce production aexp -> HASH LBRACE sort LLIST boomerang_bparser_list 
-- On LIDENT reduce production aexp -> HASH LBRACE sort LLIST boomerang_bparser_list 
-- On LET reduce production aexp -> HASH LBRACE sort LLIST boomerang_bparser_list 
-- On LEQ reduce production aexp -> HASH LBRACE sort LLIST boomerang_bparser_list 
-- On LBRACE reduce production aexp -> HASH LBRACE sort LLIST boomerang_bparser_list 
-- On LANGLE reduce production aexp -> HASH LBRACE sort LLIST boomerang_bparser_list 
-- On INTO reduce production aexp -> HASH LBRACE sort LLIST boomerang_bparser_list 
-- On INTEGER reduce production aexp -> HASH LBRACE sort LLIST boomerang_bparser_list 
-- On IN reduce production aexp -> HASH LBRACE sort LLIST boomerang_bparser_list 
-- On HASH reduce production aexp -> HASH LBRACE sort LLIST boomerang_bparser_list 
-- On GT reduce production aexp -> HASH LBRACE sort LLIST boomerang_bparser_list 
-- On GRAMMAR reduce production aexp -> HASH LBRACE sort LLIST boomerang_bparser_list 
-- On GET reduce production aexp -> HASH LBRACE sort LLIST boomerang_bparser_list 
-- On GEQ reduce production aexp -> HASH LBRACE sort LLIST boomerang_bparser_list 
-- On EQUAL reduce production aexp -> HASH LBRACE sort LLIST boomerang_bparser_list 
-- On EOF reduce production aexp -> HASH LBRACE sort LLIST boomerang_bparser_list 
-- On END reduce production aexp -> HASH LBRACE sort LLIST boomerang_bparser_list 
-- On DOT reduce production aexp -> HASH LBRACE sort LLIST boomerang_bparser_list 
-- On DOLLAR reduce production aexp -> HASH LBRACE sort LLIST boomerang_bparser_list 
-- On DEQARROW reduce production aexp -> HASH LBRACE sort LLIST boomerang_bparser_list 
-- On DARROW reduce production aexp -> HASH LBRACE sort LLIST boomerang_bparser_list 
-- On CSET reduce production aexp -> HASH LBRACE sort LLIST boomerang_bparser_list 
-- On CREATE reduce production aexp -> HASH LBRACE sort LLIST boomerang_bparser_list 
-- On COMMA reduce production aexp -> HASH LBRACE sort LLIST boomerang_bparser_list 
-- On COLON reduce production aexp -> HASH LBRACE sort LLIST boomerang_bparser_list 
-- On CHOOSE reduce production aexp -> HASH LBRACE sort LLIST boomerang_bparser_list 
-- On CHARACTER reduce production aexp -> HASH LBRACE sort LLIST boomerang_bparser_list 
-- On CEX reduce production aexp -> HASH LBRACE sort LLIST boomerang_bparser_list 
-- On CANONIZE reduce production aexp -> HASH LBRACE sort LLIST boomerang_bparser_list 
-- On BOOLEAN reduce production aexp -> HASH LBRACE sort LLIST boomerang_bparser_list 
-- On BIJ reduce production aexp -> HASH LBRACE sort LLIST boomerang_bparser_list 
-- On BEGIN reduce production aexp -> HASH LBRACE sort LLIST boomerang_bparser_list 
-- On BARBAR reduce production aexp -> HASH LBRACE sort LLIST boomerang_bparser_list 
-- On BAR reduce production aexp -> HASH LBRACE sort LLIST boomerang_bparser_list 
-- On AVTYPE reduce production aexp -> HASH LBRACE sort LLIST boomerang_bparser_list 
-- On ASTYPE reduce production aexp -> HASH LBRACE sort LLIST boomerang_bparser_list 
-- On ARROW reduce production aexp -> HASH LBRACE sort LLIST boomerang_bparser_list 
-- On AND reduce production aexp -> HASH LBRACE sort LLIST boomerang_bparser_list 
-- On AMPERSAND reduce production aexp -> HASH LBRACE sort LLIST boomerang_bparser_list 

State 396:
cexp -> MATCH composeexp . WITH branch_list [ TYPE TEST RPAREN RANGLE MODULE LET IN EOF END DOLLAR ]
cexp -> MATCH composeexp . WITH branch_list COLON sort [ TYPE TEST RPAREN RANGLE MODULE LET IN EOF END DOLLAR ]
composeexp -> composeexp . SEMI commaexp [ WITH SEMI ]
-- On WITH shift to state 397
-- On SEMI shift to state 242

State 397:
cexp -> MATCH composeexp WITH . branch_list [ TYPE TEST RPAREN RANGLE MODULE LET IN EOF END DOLLAR ]
cexp -> MATCH composeexp WITH . branch_list COLON sort [ TYPE TEST RPAREN RANGLE MODULE LET IN EOF END DOLLAR ]
-- On UNDERLINE shift to state 86
-- On UIDENT shift to state 93
-- On STR shift to state 88
-- On QUALIDENT shift to state 98
-- On LPAREN shift to state 92
-- On LIDENT shift to state 94
-- On INTEGER shift to state 95
-- On CSET shift to state 102
-- On CEX shift to state 96
-- On BOOLEAN shift to state 99
-- On BAR shift to state 398
-- On pat shift to state 399
-- On listpat shift to state 106
-- On lcpat shift to state 114
-- On conpat shift to state 108
-- On branch_list shift to state 407
-- On branch shift to state 410
-- On apat shift to state 112
-- On aapat shift to state 101

State 398:
branch_list -> BAR . branch branch_list2 [ TYPE TEST RPAREN RANGLE MODULE LET IN EOF END DOLLAR COLON ]
-- On UNDERLINE shift to state 86
-- On UIDENT shift to state 93
-- On STR shift to state 88
-- On QUALIDENT shift to state 98
-- On LPAREN shift to state 92
-- On LIDENT shift to state 94
-- On INTEGER shift to state 95
-- On CSET shift to state 102
-- On CEX shift to state 96
-- On BOOLEAN shift to state 99
-- On pat shift to state 399
-- On listpat shift to state 106
-- On lcpat shift to state 114
-- On conpat shift to state 108
-- On branch shift to state 402
-- On apat shift to state 112
-- On aapat shift to state 101

State 399:
branch -> pat . ARROW equalexp [ TYPE TEST RPAREN RANGLE MODULE LET IN EOF END DOLLAR COLON BAR ]
pat -> pat . COMMA lcpat [ COMMA ARROW ]
-- On COMMA shift to state 105
-- On ARROW shift to state 400

State 400:
branch -> pat ARROW . equalexp [ TYPE TEST RPAREN RANGLE MODULE LET IN EOF END DOLLAR COLON BAR ]
-- On UIDENT shift to state 5
-- On SYNTH shift to state 36
-- On STR shift to state 37
-- On SQUASH shift to state 38
-- On QUALIDENT shift to state 6
-- On PROJECT shift to state 39
-- On PERM shift to state 40
-- On NSET shift to state 43
-- On MINUS shift to state 46
-- On LPAREN shift to state 44
-- On LIDENT shift to state 7
-- On LANGLE shift to state 47
-- On INTEGER shift to state 49
-- On HASH shift to state 50
-- On GRAMMAR shift to state 75
-- On CSET shift to state 81
-- On CHARACTER shift to state 82
-- On CEX shift to state 83
-- On BOOLEAN shift to state 134
-- On BEGIN shift to state 135
-- On tyexp shift to state 136
-- On tildeexp shift to state 155
-- On rewriteexp shift to state 168
-- On repexp shift to state 157
-- On qid shift to state 158
-- On minusexp shift to state 178
-- On matchexp shift to state 159
-- On ltexp shift to state 179
-- On leqexp shift to state 180
-- On lenscomponentexp shift to state 181
-- On infixexp shift to state 182
-- On gtexp shift to state 185
-- On geqexp shift to state 186
-- On equalexp shift to state 401
-- On dotexp shift to state 188
-- On appexp shift to state 192
-- On ampexp shift to state 226
-- On ampampexp shift to state 229
-- On aexp shift to state 162

State 401:
branch -> pat ARROW equalexp . [ TYPE TEST RPAREN RANGLE MODULE LET IN EOF END DOLLAR COLON BAR ]
-- On TYPE reduce production branch -> pat ARROW equalexp 
-- On TEST reduce production branch -> pat ARROW equalexp 
-- On RPAREN reduce production branch -> pat ARROW equalexp 
-- On RANGLE reduce production branch -> pat ARROW equalexp 
-- On MODULE reduce production branch -> pat ARROW equalexp 
-- On LET reduce production branch -> pat ARROW equalexp 
-- On IN reduce production branch -> pat ARROW equalexp 
-- On EOF reduce production branch -> pat ARROW equalexp 
-- On END reduce production branch -> pat ARROW equalexp 
-- On DOLLAR reduce production branch -> pat ARROW equalexp 
-- On COLON reduce production branch -> pat ARROW equalexp 
-- On BAR reduce production branch -> pat ARROW equalexp 

State 402:
branch_list -> BAR branch . branch_list2 [ TYPE TEST RPAREN RANGLE MODULE LET IN EOF END DOLLAR COLON ]
-- On BAR shift to state 403
-- On branch_list2 shift to state 406
-- On TYPE reduce production branch_list2 -> 
-- On TEST reduce production branch_list2 -> 
-- On RPAREN reduce production branch_list2 -> 
-- On RANGLE reduce production branch_list2 -> 
-- On MODULE reduce production branch_list2 -> 
-- On LET reduce production branch_list2 -> 
-- On IN reduce production branch_list2 -> 
-- On EOF reduce production branch_list2 -> 
-- On END reduce production branch_list2 -> 
-- On DOLLAR reduce production branch_list2 -> 
-- On COLON reduce production branch_list2 -> 

State 403:
branch_list2 -> BAR . branch branch_list2 [ TYPE TEST RPAREN RANGLE MODULE LET IN EOF END DOLLAR COLON ]
-- On UNDERLINE shift to state 86
-- On UIDENT shift to state 93
-- On STR shift to state 88
-- On QUALIDENT shift to state 98
-- On LPAREN shift to state 92
-- On LIDENT shift to state 94
-- On INTEGER shift to state 95
-- On CSET shift to state 102
-- On CEX shift to state 96
-- On BOOLEAN shift to state 99
-- On pat shift to state 399
-- On listpat shift to state 106
-- On lcpat shift to state 114
-- On conpat shift to state 108
-- On branch shift to state 404
-- On apat shift to state 112
-- On aapat shift to state 101

State 404:
branch_list2 -> BAR branch . branch_list2 [ TYPE TEST RPAREN RANGLE MODULE LET IN EOF END DOLLAR COLON ]
-- On BAR shift to state 403
-- On branch_list2 shift to state 405
-- On TYPE reduce production branch_list2 -> 
-- On TEST reduce production branch_list2 -> 
-- On RPAREN reduce production branch_list2 -> 
-- On RANGLE reduce production branch_list2 -> 
-- On MODULE reduce production branch_list2 -> 
-- On LET reduce production branch_list2 -> 
-- On IN reduce production branch_list2 -> 
-- On EOF reduce production branch_list2 -> 
-- On END reduce production branch_list2 -> 
-- On DOLLAR reduce production branch_list2 -> 
-- On COLON reduce production branch_list2 -> 

State 405:
branch_list2 -> BAR branch branch_list2 . [ TYPE TEST RPAREN RANGLE MODULE LET IN EOF END DOLLAR COLON ]
-- On TYPE reduce production branch_list2 -> BAR branch branch_list2 
-- On TEST reduce production branch_list2 -> BAR branch branch_list2 
-- On RPAREN reduce production branch_list2 -> BAR branch branch_list2 
-- On RANGLE reduce production branch_list2 -> BAR branch branch_list2 
-- On MODULE reduce production branch_list2 -> BAR branch branch_list2 
-- On LET reduce production branch_list2 -> BAR branch branch_list2 
-- On IN reduce production branch_list2 -> BAR branch branch_list2 
-- On EOF reduce production branch_list2 -> BAR branch branch_list2 
-- On END reduce production branch_list2 -> BAR branch branch_list2 
-- On DOLLAR reduce production branch_list2 -> BAR branch branch_list2 
-- On COLON reduce production branch_list2 -> BAR branch branch_list2 

State 406:
branch_list -> BAR branch branch_list2 . [ TYPE TEST RPAREN RANGLE MODULE LET IN EOF END DOLLAR COLON ]
-- On TYPE reduce production branch_list -> BAR branch branch_list2 
-- On TEST reduce production branch_list -> BAR branch branch_list2 
-- On RPAREN reduce production branch_list -> BAR branch branch_list2 
-- On RANGLE reduce production branch_list -> BAR branch branch_list2 
-- On MODULE reduce production branch_list -> BAR branch branch_list2 
-- On LET reduce production branch_list -> BAR branch branch_list2 
-- On IN reduce production branch_list -> BAR branch branch_list2 
-- On EOF reduce production branch_list -> BAR branch branch_list2 
-- On END reduce production branch_list -> BAR branch branch_list2 
-- On DOLLAR reduce production branch_list -> BAR branch branch_list2 
-- On COLON reduce production branch_list -> BAR branch branch_list2 

State 407:
cexp -> MATCH composeexp WITH branch_list . [ TYPE TEST RPAREN RANGLE MODULE LET IN EOF END DOLLAR ]
cexp -> MATCH composeexp WITH branch_list . COLON sort [ TYPE TEST RPAREN RANGLE MODULE LET IN EOF END DOLLAR ]
-- On COLON shift to state 408
-- On TYPE reduce production cexp -> MATCH composeexp WITH branch_list 
-- On TEST reduce production cexp -> MATCH composeexp WITH branch_list 
-- On RPAREN reduce production cexp -> MATCH composeexp WITH branch_list 
-- On RANGLE reduce production cexp -> MATCH composeexp WITH branch_list 
-- On MODULE reduce production cexp -> MATCH composeexp WITH branch_list 
-- On LET reduce production cexp -> MATCH composeexp WITH branch_list 
-- On IN reduce production cexp -> MATCH composeexp WITH branch_list 
-- On EOF reduce production cexp -> MATCH composeexp WITH branch_list 
-- On END reduce production cexp -> MATCH composeexp WITH branch_list 
-- On DOLLAR reduce production cexp -> MATCH composeexp WITH branch_list 

State 408:
cexp -> MATCH composeexp WITH branch_list COLON . sort [ TYPE TEST RPAREN RANGLE MODULE LET IN EOF END DOLLAR ]
-- On UNIT shift to state 24
-- On TYVARIDENT shift to state 12
-- On STRINGPREFS shift to state 25
-- On STRINGLISTPREFS shift to state 26
-- On STRING shift to state 27
-- On SKELETONS shift to state 28
-- On RESOURCES shift to state 29
-- On REGEXP shift to state 30
-- On QUALIDENT shift to state 31
-- On LPAREN shift to state 32
-- On LIDENT shift to state 52
-- On LENS shift to state 53
-- On INTPREFS shift to state 54
-- On INT shift to state 55
-- On FORALL shift to state 56
-- On CHAR shift to state 59
-- On CANONIZER shift to state 60
-- On BOOLPREFS shift to state 61
-- On BOOL shift to state 62
-- On AREGEXP shift to state 63
-- On tyvar shift to state 64
-- On sort shift to state 409
-- On qvar shift to state 66
-- On productsort shift to state 67
-- On datatypesort shift to state 149
-- On bsort shift to state 150
-- On asort shift to state 152
-- On arrowsort shift to state 153

State 409:
cexp -> MATCH composeexp WITH branch_list COLON sort . [ TYPE TEST RPAREN RANGLE MODULE LET IN EOF END DOLLAR ]
-- On TYPE reduce production cexp -> MATCH composeexp WITH branch_list COLON sort 
-- On TEST reduce production cexp -> MATCH composeexp WITH branch_list COLON sort 
-- On RPAREN reduce production cexp -> MATCH composeexp WITH branch_list COLON sort 
-- On RANGLE reduce production cexp -> MATCH composeexp WITH branch_list COLON sort 
-- On MODULE reduce production cexp -> MATCH composeexp WITH branch_list COLON sort 
-- On LET reduce production cexp -> MATCH composeexp WITH branch_list COLON sort 
-- On IN reduce production cexp -> MATCH composeexp WITH branch_list COLON sort 
-- On EOF reduce production cexp -> MATCH composeexp WITH branch_list COLON sort 
-- On END reduce production cexp -> MATCH composeexp WITH branch_list COLON sort 
-- On DOLLAR reduce production cexp -> MATCH composeexp WITH branch_list COLON sort 

State 410:
branch_list -> branch . branch_list2 [ TYPE TEST RPAREN RANGLE MODULE LET IN EOF END DOLLAR COLON ]
-- On BAR shift to state 403
-- On branch_list2 shift to state 411
-- On TYPE reduce production branch_list2 -> 
-- On TEST reduce production branch_list2 -> 
-- On RPAREN reduce production branch_list2 -> 
-- On RANGLE reduce production branch_list2 -> 
-- On MODULE reduce production branch_list2 -> 
-- On LET reduce production branch_list2 -> 
-- On IN reduce production branch_list2 -> 
-- On EOF reduce production branch_list2 -> 
-- On END reduce production branch_list2 -> 
-- On DOLLAR reduce production branch_list2 -> 
-- On COLON reduce production branch_list2 -> 

State 411:
branch_list -> branch branch_list2 . [ TYPE TEST RPAREN RANGLE MODULE LET IN EOF END DOLLAR COLON ]
-- On TYPE reduce production branch_list -> branch branch_list2 
-- On TEST reduce production branch_list -> branch branch_list2 
-- On RPAREN reduce production branch_list -> branch branch_list2 
-- On RANGLE reduce production branch_list -> branch branch_list2 
-- On MODULE reduce production branch_list -> branch branch_list2 
-- On LET reduce production branch_list -> branch branch_list2 
-- On IN reduce production branch_list -> branch branch_list2 
-- On EOF reduce production branch_list -> branch branch_list2 
-- On END reduce production branch_list -> branch branch_list2 
-- On DOLLAR reduce production branch_list -> branch branch_list2 
-- On COLON reduce production branch_list -> branch branch_list2 

State 412:
matchexp -> LANGLE exp . RANGLE [ WITH VTYPE USING UIDENT TYPE TILDE TEST STYPE STR STAR SEMI RPAREN RBRACK RBRACE RANGLE QUALIDENT QMARK PUT PLUS NSET MODULE MINUS LT LPAREN LIDENT LET LEQ LBRACE LANGLE INTO INTEGER IN HASH GT GRAMMAR GET GEQ EQUAL EOF END DOT DOLLAR DEQARROW DARROW CSET CREATE COMMA COLON CHOOSE CHARACTER CEX CANONIZE BOOLEAN BIJ BEGIN BARBAR BAR AVTYPE ASTYPE ARROW AND AMPERSAND ]
-- On RANGLE shift to state 413

State 413:
matchexp -> LANGLE exp RANGLE . [ WITH VTYPE USING UIDENT TYPE TILDE TEST STYPE STR STAR SEMI RPAREN RBRACK RBRACE RANGLE QUALIDENT QMARK PUT PLUS NSET MODULE MINUS LT LPAREN LIDENT LET LEQ LBRACE LANGLE INTO INTEGER IN HASH GT GRAMMAR GET GEQ EQUAL EOF END DOT DOLLAR DEQARROW DARROW CSET CREATE COMMA COLON CHOOSE CHARACTER CEX CANONIZE BOOLEAN BIJ BEGIN BARBAR BAR AVTYPE ASTYPE ARROW AND AMPERSAND ]
-- On WITH reduce production matchexp -> LANGLE exp RANGLE 
-- On VTYPE reduce production matchexp -> LANGLE exp RANGLE 
-- On USING reduce production matchexp -> LANGLE exp RANGLE 
-- On UIDENT reduce production matchexp -> LANGLE exp RANGLE 
-- On TYPE reduce production matchexp -> LANGLE exp RANGLE 
-- On TILDE reduce production matchexp -> LANGLE exp RANGLE 
-- On TEST reduce production matchexp -> LANGLE exp RANGLE 
-- On STYPE reduce production matchexp -> LANGLE exp RANGLE 
-- On STR reduce production matchexp -> LANGLE exp RANGLE 
-- On STAR reduce production matchexp -> LANGLE exp RANGLE 
-- On SEMI reduce production matchexp -> LANGLE exp RANGLE 
-- On RPAREN reduce production matchexp -> LANGLE exp RANGLE 
-- On RBRACK reduce production matchexp -> LANGLE exp RANGLE 
-- On RBRACE reduce production matchexp -> LANGLE exp RANGLE 
-- On RANGLE reduce production matchexp -> LANGLE exp RANGLE 
-- On QUALIDENT reduce production matchexp -> LANGLE exp RANGLE 
-- On QMARK reduce production matchexp -> LANGLE exp RANGLE 
-- On PUT reduce production matchexp -> LANGLE exp RANGLE 
-- On PLUS reduce production matchexp -> LANGLE exp RANGLE 
-- On NSET reduce production matchexp -> LANGLE exp RANGLE 
-- On MODULE reduce production matchexp -> LANGLE exp RANGLE 
-- On MINUS reduce production matchexp -> LANGLE exp RANGLE 
-- On LT reduce production matchexp -> LANGLE exp RANGLE 
-- On LPAREN reduce production matchexp -> LANGLE exp RANGLE 
-- On LIDENT reduce production matchexp -> LANGLE exp RANGLE 
-- On LET reduce production matchexp -> LANGLE exp RANGLE 
-- On LEQ reduce production matchexp -> LANGLE exp RANGLE 
-- On LBRACE reduce production matchexp -> LANGLE exp RANGLE 
-- On LANGLE reduce production matchexp -> LANGLE exp RANGLE 
-- On INTO reduce production matchexp -> LANGLE exp RANGLE 
-- On INTEGER reduce production matchexp -> LANGLE exp RANGLE 
-- On IN reduce production matchexp -> LANGLE exp RANGLE 
-- On HASH reduce production matchexp -> LANGLE exp RANGLE 
-- On GT reduce production matchexp -> LANGLE exp RANGLE 
-- On GRAMMAR reduce production matchexp -> LANGLE exp RANGLE 
-- On GET reduce production matchexp -> LANGLE exp RANGLE 
-- On GEQ reduce production matchexp -> LANGLE exp RANGLE 
-- On EQUAL reduce production matchexp -> LANGLE exp RANGLE 
-- On EOF reduce production matchexp -> LANGLE exp RANGLE 
-- On END reduce production matchexp -> LANGLE exp RANGLE 
-- On DOT reduce production matchexp -> LANGLE exp RANGLE 
-- On DOLLAR reduce production matchexp -> LANGLE exp RANGLE 
-- On DEQARROW reduce production matchexp -> LANGLE exp RANGLE 
-- On DARROW reduce production matchexp -> LANGLE exp RANGLE 
-- On CSET reduce production matchexp -> LANGLE exp RANGLE 
-- On CREATE reduce production matchexp -> LANGLE exp RANGLE 
-- On COMMA reduce production matchexp -> LANGLE exp RANGLE 
-- On COLON reduce production matchexp -> LANGLE exp RANGLE 
-- On CHOOSE reduce production matchexp -> LANGLE exp RANGLE 
-- On CHARACTER reduce production matchexp -> LANGLE exp RANGLE 
-- On CEX reduce production matchexp -> LANGLE exp RANGLE 
-- On CANONIZE reduce production matchexp -> LANGLE exp RANGLE 
-- On BOOLEAN reduce production matchexp -> LANGLE exp RANGLE 
-- On BIJ reduce production matchexp -> LANGLE exp RANGLE 
-- On BEGIN reduce production matchexp -> LANGLE exp RANGLE 
-- On BARBAR reduce production matchexp -> LANGLE exp RANGLE 
-- On BAR reduce production matchexp -> LANGLE exp RANGLE 
-- On AVTYPE reduce production matchexp -> LANGLE exp RANGLE 
-- On ASTYPE reduce production matchexp -> LANGLE exp RANGLE 
-- On ARROW reduce production matchexp -> LANGLE exp RANGLE 
-- On AND reduce production matchexp -> LANGLE exp RANGLE 
-- On AMPERSAND reduce production matchexp -> LANGLE exp RANGLE 

State 414:
ampampexp -> appexp . AMPERSAND AMPERSAND ampampexp [ SEMI RANGLE MINUS DOLLAR COMMA BARBAR BAR ]
ampampexp -> appexp . AMPERSAND AMPERSAND appexp [ SEMI RANGLE MINUS DOLLAR COMMA BARBAR BAR ]
ampexp -> appexp . AMPERSAND appexp [ SEMI RANGLE MINUS DOLLAR COMMA BARBAR BAR AMPERSAND ]
appexp -> appexp . repexp [ UIDENT TILDE STR SEMI RANGLE QUALIDENT PUT NSET MINUS LT LPAREN LIDENT LEQ LANGLE INTEGER HASH GT GRAMMAR GET GEQ EQUAL DOT DOLLAR DEQARROW DARROW CSET CREATE COMMA COLON CHOOSE CHARACTER CEX CANONIZE BOOLEAN BEGIN BARBAR BAR AMPERSAND ]
dotexp -> appexp . DOT appexp [ SEMI RANGLE MINUS DOT DOLLAR COMMA BARBAR BAR ]
dotexp -> appexp . DOT rewriteexp [ SEMI RANGLE MINUS DOT DOLLAR COMMA BARBAR BAR ]
equalexp -> appexp . EQUAL appexp [ SEMI RANGLE DOLLAR COMMA BARBAR BAR ]
geqexp -> appexp . GEQ appexp [ SEMI RANGLE MINUS DOLLAR COMMA BARBAR BAR ]
gtexp -> appexp . GT appexp [ SEMI RANGLE MINUS DOLLAR COMMA BARBAR BAR ]
infixexp -> appexp . [ SEMI RANGLE MINUS DOLLAR COMMA BARBAR BAR ]
lenscomponentexp -> appexp . GET appexp [ SEMI RANGLE MINUS DOLLAR COMMA BARBAR BAR ]
lenscomponentexp -> appexp . PUT appexp INTO appexp [ SEMI RANGLE MINUS DOLLAR COMMA BARBAR BAR ]
lenscomponentexp -> appexp . CREATE appexp [ SEMI RANGLE MINUS DOLLAR COMMA BARBAR BAR ]
lenscomponentexp -> appexp . CANONIZE appexp [ SEMI RANGLE MINUS DOLLAR COMMA BARBAR BAR ]
lenscomponentexp -> appexp . CHOOSE appexp [ SEMI RANGLE MINUS DOLLAR COMMA BARBAR BAR ]
leqexp -> appexp . LEQ appexp [ SEMI RANGLE MINUS DOLLAR COMMA BARBAR BAR ]
ltexp -> appexp . LT appexp [ SEMI RANGLE MINUS DOLLAR COMMA BARBAR BAR ]
matchexp -> LANGLE appexp . COLON exp RANGLE [ WITH VTYPE USING UIDENT TYPE TILDE TEST STYPE STR STAR SEMI RPAREN RBRACK RBRACE RANGLE QUALIDENT QMARK PUT PLUS NSET MODULE MINUS LT LPAREN LIDENT LET LEQ LBRACE LANGLE INTO INTEGER IN HASH GT GRAMMAR GET GEQ EQUAL EOF END DOT DOLLAR DEQARROW DARROW CSET CREATE COMMA COLON CHOOSE CHARACTER CEX CANONIZE BOOLEAN BIJ BEGIN BARBAR BAR AVTYPE ASTYPE ARROW AND AMPERSAND ]
rewriteexp -> appexp . DARROW appexp [ SEMI RANGLE MINUS DOT DOLLAR COMMA BARBAR BAR ]
rewriteexp -> appexp . DEQARROW appexp [ SEMI RANGLE MINUS DOT DOLLAR COMMA BARBAR BAR ]
tildeexp -> appexp . TILDE appexp [ TILDE SEMI RANGLE MINUS DOLLAR COMMA BARBAR BAR ]
-- On UIDENT shift to state 5
-- On TILDE shift to state 193
-- On STR shift to state 37
-- On QUALIDENT shift to state 6
-- On PUT shift to state 195
-- On NSET shift to state 43
-- On LT shift to state 199
-- On LPAREN shift to state 44
-- On LIDENT shift to state 7
-- On LEQ shift to state 201
-- On LANGLE shift to state 47
-- On INTEGER shift to state 49
-- On HASH shift to state 50
-- On GT shift to state 203
-- On GRAMMAR shift to state 75
-- On GET shift to state 205
-- On GEQ shift to state 207
-- On EQUAL shift to state 209
-- On DOT shift to state 211
-- On DEQARROW shift to state 172
-- On DARROW shift to state 174
-- On CSET shift to state 81
-- On CREATE shift to state 214
-- On COLON shift to state 415
-- On CHOOSE shift to state 216
-- On CHARACTER shift to state 82
-- On CEX shift to state 83
-- On CANONIZE shift to state 218
-- On BOOLEAN shift to state 134
-- On BEGIN shift to state 135
-- On AMPERSAND shift to state 220
-- On tyexp shift to state 136
-- On repexp shift to state 161
-- On qid shift to state 158
-- On matchexp shift to state 159
-- On aexp shift to state 162
-- On SEMI reduce production infixexp -> appexp 
-- On RANGLE reduce production infixexp -> appexp 
-- On MINUS reduce production infixexp -> appexp 
-- On DOLLAR reduce production infixexp -> appexp 
-- On COMMA reduce production infixexp -> appexp 
-- On BARBAR reduce production infixexp -> appexp 
-- On BAR reduce production infixexp -> appexp 

State 415:
matchexp -> LANGLE appexp COLON . exp RANGLE [ WITH VTYPE USING UIDENT TYPE TILDE TEST STYPE STR STAR SEMI RPAREN RBRACK RBRACE RANGLE QUALIDENT QMARK PUT PLUS NSET MODULE MINUS LT LPAREN LIDENT LET LEQ LBRACE LANGLE INTO INTEGER IN HASH GT GRAMMAR GET GEQ EQUAL EOF END DOT DOLLAR DEQARROW DARROW CSET CREATE COMMA COLON CHOOSE CHARACTER CEX CANONIZE BOOLEAN BIJ BEGIN BARBAR BAR AVTYPE ASTYPE ARROW AND AMPERSAND ]
-- On UIDENT shift to state 5
-- On SYNTH shift to state 36
-- On STR shift to state 37
-- On SQUASH shift to state 38
-- On QUALIDENT shift to state 6
-- On PROJECT shift to state 39
-- On PERM shift to state 40
-- On NSET shift to state 43
-- On MINUS shift to state 46
-- On MATCH shift to state 48
-- On LPAREN shift to state 44
-- On LIDENT shift to state 7
-- On LET shift to state 85
-- On LANGLE shift to state 47
-- On INTEGER shift to state 49
-- On HASH shift to state 50
-- On GRAMMAR shift to state 75
-- On FUN shift to state 123
-- On CSET shift to state 81
-- On CHARACTER shift to state 82
-- On CEX shift to state 83
-- On BOOLEAN shift to state 134
-- On BEGIN shift to state 135
-- On tyexp shift to state 136
-- On tildeexp shift to state 155
-- On rewriteexp shift to state 168
-- On repexp shift to state 157
-- On qid shift to state 158
-- On obarexp shift to state 176
-- On minusexp shift to state 178
-- On matchexp shift to state 159
-- On ltexp shift to state 179
-- On leqexp shift to state 180
-- On lenscomponentexp shift to state 181
-- On infixexp shift to state 182
-- On gtexp shift to state 185
-- On geqexp shift to state 186
-- On funexp shift to state 230
-- On exp shift to state 416
-- On equalexp shift to state 233
-- On dotexp shift to state 188
-- On dbarexp shift to state 238
-- On composeexp shift to state 241
-- On commaexp shift to state 247
-- On cexp shift to state 248
-- On barexp shift to state 246
-- On appexp shift to state 192
-- On ampexp shift to state 226
-- On ampampexp shift to state 229
-- On aexp shift to state 162

State 416:
matchexp -> LANGLE appexp COLON exp . RANGLE [ WITH VTYPE USING UIDENT TYPE TILDE TEST STYPE STR STAR SEMI RPAREN RBRACK RBRACE RANGLE QUALIDENT QMARK PUT PLUS NSET MODULE MINUS LT LPAREN LIDENT LET LEQ LBRACE LANGLE INTO INTEGER IN HASH GT GRAMMAR GET GEQ EQUAL EOF END DOT DOLLAR DEQARROW DARROW CSET CREATE COMMA COLON CHOOSE CHARACTER CEX CANONIZE BOOLEAN BIJ BEGIN BARBAR BAR AVTYPE ASTYPE ARROW AND AMPERSAND ]
-- On RANGLE shift to state 417

State 417:
matchexp -> LANGLE appexp COLON exp RANGLE . [ WITH VTYPE USING UIDENT TYPE TILDE TEST STYPE STR STAR SEMI RPAREN RBRACK RBRACE RANGLE QUALIDENT QMARK PUT PLUS NSET MODULE MINUS LT LPAREN LIDENT LET LEQ LBRACE LANGLE INTO INTEGER IN HASH GT GRAMMAR GET GEQ EQUAL EOF END DOT DOLLAR DEQARROW DARROW CSET CREATE COMMA COLON CHOOSE CHARACTER CEX CANONIZE BOOLEAN BIJ BEGIN BARBAR BAR AVTYPE ASTYPE ARROW AND AMPERSAND ]
-- On WITH reduce production matchexp -> LANGLE appexp COLON exp RANGLE 
-- On VTYPE reduce production matchexp -> LANGLE appexp COLON exp RANGLE 
-- On USING reduce production matchexp -> LANGLE appexp COLON exp RANGLE 
-- On UIDENT reduce production matchexp -> LANGLE appexp COLON exp RANGLE 
-- On TYPE reduce production matchexp -> LANGLE appexp COLON exp RANGLE 
-- On TILDE reduce production matchexp -> LANGLE appexp COLON exp RANGLE 
-- On TEST reduce production matchexp -> LANGLE appexp COLON exp RANGLE 
-- On STYPE reduce production matchexp -> LANGLE appexp COLON exp RANGLE 
-- On STR reduce production matchexp -> LANGLE appexp COLON exp RANGLE 
-- On STAR reduce production matchexp -> LANGLE appexp COLON exp RANGLE 
-- On SEMI reduce production matchexp -> LANGLE appexp COLON exp RANGLE 
-- On RPAREN reduce production matchexp -> LANGLE appexp COLON exp RANGLE 
-- On RBRACK reduce production matchexp -> LANGLE appexp COLON exp RANGLE 
-- On RBRACE reduce production matchexp -> LANGLE appexp COLON exp RANGLE 
-- On RANGLE reduce production matchexp -> LANGLE appexp COLON exp RANGLE 
-- On QUALIDENT reduce production matchexp -> LANGLE appexp COLON exp RANGLE 
-- On QMARK reduce production matchexp -> LANGLE appexp COLON exp RANGLE 
-- On PUT reduce production matchexp -> LANGLE appexp COLON exp RANGLE 
-- On PLUS reduce production matchexp -> LANGLE appexp COLON exp RANGLE 
-- On NSET reduce production matchexp -> LANGLE appexp COLON exp RANGLE 
-- On MODULE reduce production matchexp -> LANGLE appexp COLON exp RANGLE 
-- On MINUS reduce production matchexp -> LANGLE appexp COLON exp RANGLE 
-- On LT reduce production matchexp -> LANGLE appexp COLON exp RANGLE 
-- On LPAREN reduce production matchexp -> LANGLE appexp COLON exp RANGLE 
-- On LIDENT reduce production matchexp -> LANGLE appexp COLON exp RANGLE 
-- On LET reduce production matchexp -> LANGLE appexp COLON exp RANGLE 
-- On LEQ reduce production matchexp -> LANGLE appexp COLON exp RANGLE 
-- On LBRACE reduce production matchexp -> LANGLE appexp COLON exp RANGLE 
-- On LANGLE reduce production matchexp -> LANGLE appexp COLON exp RANGLE 
-- On INTO reduce production matchexp -> LANGLE appexp COLON exp RANGLE 
-- On INTEGER reduce production matchexp -> LANGLE appexp COLON exp RANGLE 
-- On IN reduce production matchexp -> LANGLE appexp COLON exp RANGLE 
-- On HASH reduce production matchexp -> LANGLE appexp COLON exp RANGLE 
-- On GT reduce production matchexp -> LANGLE appexp COLON exp RANGLE 
-- On GRAMMAR reduce production matchexp -> LANGLE appexp COLON exp RANGLE 
-- On GET reduce production matchexp -> LANGLE appexp COLON exp RANGLE 
-- On GEQ reduce production matchexp -> LANGLE appexp COLON exp RANGLE 
-- On EQUAL reduce production matchexp -> LANGLE appexp COLON exp RANGLE 
-- On EOF reduce production matchexp -> LANGLE appexp COLON exp RANGLE 
-- On END reduce production matchexp -> LANGLE appexp COLON exp RANGLE 
-- On DOT reduce production matchexp -> LANGLE appexp COLON exp RANGLE 
-- On DOLLAR reduce production matchexp -> LANGLE appexp COLON exp RANGLE 
-- On DEQARROW reduce production matchexp -> LANGLE appexp COLON exp RANGLE 
-- On DARROW reduce production matchexp -> LANGLE appexp COLON exp RANGLE 
-- On CSET reduce production matchexp -> LANGLE appexp COLON exp RANGLE 
-- On CREATE reduce production matchexp -> LANGLE appexp COLON exp RANGLE 
-- On COMMA reduce production matchexp -> LANGLE appexp COLON exp RANGLE 
-- On COLON reduce production matchexp -> LANGLE appexp COLON exp RANGLE 
-- On CHOOSE reduce production matchexp -> LANGLE appexp COLON exp RANGLE 
-- On CHARACTER reduce production matchexp -> LANGLE appexp COLON exp RANGLE 
-- On CEX reduce production matchexp -> LANGLE appexp COLON exp RANGLE 
-- On CANONIZE reduce production matchexp -> LANGLE appexp COLON exp RANGLE 
-- On BOOLEAN reduce production matchexp -> LANGLE appexp COLON exp RANGLE 
-- On BIJ reduce production matchexp -> LANGLE appexp COLON exp RANGLE 
-- On BEGIN reduce production matchexp -> LANGLE appexp COLON exp RANGLE 
-- On BARBAR reduce production matchexp -> LANGLE appexp COLON exp RANGLE 
-- On BAR reduce production matchexp -> LANGLE appexp COLON exp RANGLE 
-- On AVTYPE reduce production matchexp -> LANGLE appexp COLON exp RANGLE 
-- On ASTYPE reduce production matchexp -> LANGLE appexp COLON exp RANGLE 
-- On ARROW reduce production matchexp -> LANGLE appexp COLON exp RANGLE 
-- On AND reduce production matchexp -> LANGLE appexp COLON exp RANGLE 
-- On AMPERSAND reduce production matchexp -> LANGLE appexp COLON exp RANGLE 

State 418:
appexp -> appexp . repexp [ WITH UIDENT TYPE TEST STR SEMI RPAREN RBRACK RANGLE QUALIDENT NSET MODULE MINUS LPAREN LIDENT LET LANGLE INTEGER IN HASH GRAMMAR EQUAL EOF END DOLLAR CSET COMMA COLON CHARACTER CEX BOOLEAN BEGIN BARBAR BAR ]
minusexp -> MINUS appexp . [ WITH TYPE TEST SEMI RPAREN RBRACK RANGLE MODULE MINUS LET IN EQUAL EOF END DOLLAR COMMA COLON BARBAR BAR ]
-- On UIDENT shift to state 5
-- On STR shift to state 37
-- On QUALIDENT shift to state 6
-- On NSET shift to state 43
-- On LPAREN shift to state 44
-- On LIDENT shift to state 7
-- On LANGLE shift to state 47
-- On INTEGER shift to state 49
-- On HASH shift to state 50
-- On GRAMMAR shift to state 75
-- On CSET shift to state 81
-- On CHARACTER shift to state 82
-- On CEX shift to state 83
-- On BOOLEAN shift to state 134
-- On BEGIN shift to state 135
-- On tyexp shift to state 136
-- On repexp shift to state 161
-- On qid shift to state 158
-- On matchexp shift to state 159
-- On aexp shift to state 162
-- On WITH reduce production minusexp -> MINUS appexp 
-- On TYPE reduce production minusexp -> MINUS appexp 
-- On TEST reduce production minusexp -> MINUS appexp 
-- On SEMI reduce production minusexp -> MINUS appexp 
-- On RPAREN reduce production minusexp -> MINUS appexp 
-- On RBRACK reduce production minusexp -> MINUS appexp 
-- On RANGLE reduce production minusexp -> MINUS appexp 
-- On MODULE reduce production minusexp -> MINUS appexp 
-- On MINUS reduce production minusexp -> MINUS appexp 
-- On LET reduce production minusexp -> MINUS appexp 
-- On IN reduce production minusexp -> MINUS appexp 
-- On EQUAL reduce production minusexp -> MINUS appexp 
-- On EOF reduce production minusexp -> MINUS appexp 
-- On END reduce production minusexp -> MINUS appexp 
-- On DOLLAR reduce production minusexp -> MINUS appexp 
-- On COMMA reduce production minusexp -> MINUS appexp 
-- On COLON reduce production minusexp -> MINUS appexp 
-- On BARBAR reduce production minusexp -> MINUS appexp 
-- On BAR reduce production minusexp -> MINUS appexp 

State 419:
aexp -> LPAREN exp . RPAREN [ WITH VTYPE USING UIDENT TYPE TILDE TEST STYPE STR STAR SEMI RPAREN RBRACK RBRACE RANGLE QUALIDENT QMARK PUT PLUS NSET MODULE MINUS LT LPAREN LIDENT LET LEQ LBRACE LANGLE INTO INTEGER IN HASH GT GRAMMAR GET GEQ EQUAL EOF END DOT DOLLAR DEQARROW DARROW CSET CREATE COMMA COLON CHOOSE CHARACTER CEX CANONIZE BOOLEAN BIJ BEGIN BARBAR BAR AVTYPE ASTYPE ARROW AND AMPERSAND ]
-- On RPAREN shift to state 420

State 420:
aexp -> LPAREN exp RPAREN . [ WITH VTYPE USING UIDENT TYPE TILDE TEST STYPE STR STAR SEMI RPAREN RBRACK RBRACE RANGLE QUALIDENT QMARK PUT PLUS NSET MODULE MINUS LT LPAREN LIDENT LET LEQ LBRACE LANGLE INTO INTEGER IN HASH GT GRAMMAR GET GEQ EQUAL EOF END DOT DOLLAR DEQARROW DARROW CSET CREATE COMMA COLON CHOOSE CHARACTER CEX CANONIZE BOOLEAN BIJ BEGIN BARBAR BAR AVTYPE ASTYPE ARROW AND AMPERSAND ]
-- On WITH reduce production aexp -> LPAREN exp RPAREN 
-- On VTYPE reduce production aexp -> LPAREN exp RPAREN 
-- On USING reduce production aexp -> LPAREN exp RPAREN 
-- On UIDENT reduce production aexp -> LPAREN exp RPAREN 
-- On TYPE reduce production aexp -> LPAREN exp RPAREN 
-- On TILDE reduce production aexp -> LPAREN exp RPAREN 
-- On TEST reduce production aexp -> LPAREN exp RPAREN 
-- On STYPE reduce production aexp -> LPAREN exp RPAREN 
-- On STR reduce production aexp -> LPAREN exp RPAREN 
-- On STAR reduce production aexp -> LPAREN exp RPAREN 
-- On SEMI reduce production aexp -> LPAREN exp RPAREN 
-- On RPAREN reduce production aexp -> LPAREN exp RPAREN 
-- On RBRACK reduce production aexp -> LPAREN exp RPAREN 
-- On RBRACE reduce production aexp -> LPAREN exp RPAREN 
-- On RANGLE reduce production aexp -> LPAREN exp RPAREN 
-- On QUALIDENT reduce production aexp -> LPAREN exp RPAREN 
-- On QMARK reduce production aexp -> LPAREN exp RPAREN 
-- On PUT reduce production aexp -> LPAREN exp RPAREN 
-- On PLUS reduce production aexp -> LPAREN exp RPAREN 
-- On NSET reduce production aexp -> LPAREN exp RPAREN 
-- On MODULE reduce production aexp -> LPAREN exp RPAREN 
-- On MINUS reduce production aexp -> LPAREN exp RPAREN 
-- On LT reduce production aexp -> LPAREN exp RPAREN 
-- On LPAREN reduce production aexp -> LPAREN exp RPAREN 
-- On LIDENT reduce production aexp -> LPAREN exp RPAREN 
-- On LET reduce production aexp -> LPAREN exp RPAREN 
-- On LEQ reduce production aexp -> LPAREN exp RPAREN 
-- On LBRACE reduce production aexp -> LPAREN exp RPAREN 
-- On LANGLE reduce production aexp -> LPAREN exp RPAREN 
-- On INTO reduce production aexp -> LPAREN exp RPAREN 
-- On INTEGER reduce production aexp -> LPAREN exp RPAREN 
-- On IN reduce production aexp -> LPAREN exp RPAREN 
-- On HASH reduce production aexp -> LPAREN exp RPAREN 
-- On GT reduce production aexp -> LPAREN exp RPAREN 
-- On GRAMMAR reduce production aexp -> LPAREN exp RPAREN 
-- On GET reduce production aexp -> LPAREN exp RPAREN 
-- On GEQ reduce production aexp -> LPAREN exp RPAREN 
-- On EQUAL reduce production aexp -> LPAREN exp RPAREN 
-- On EOF reduce production aexp -> LPAREN exp RPAREN 
-- On END reduce production aexp -> LPAREN exp RPAREN 
-- On DOT reduce production aexp -> LPAREN exp RPAREN 
-- On DOLLAR reduce production aexp -> LPAREN exp RPAREN 
-- On DEQARROW reduce production aexp -> LPAREN exp RPAREN 
-- On DARROW reduce production aexp -> LPAREN exp RPAREN 
-- On CSET reduce production aexp -> LPAREN exp RPAREN 
-- On CREATE reduce production aexp -> LPAREN exp RPAREN 
-- On COMMA reduce production aexp -> LPAREN exp RPAREN 
-- On COLON reduce production aexp -> LPAREN exp RPAREN 
-- On CHOOSE reduce production aexp -> LPAREN exp RPAREN 
-- On CHARACTER reduce production aexp -> LPAREN exp RPAREN 
-- On CEX reduce production aexp -> LPAREN exp RPAREN 
-- On CANONIZE reduce production aexp -> LPAREN exp RPAREN 
-- On BOOLEAN reduce production aexp -> LPAREN exp RPAREN 
-- On BIJ reduce production aexp -> LPAREN exp RPAREN 
-- On BEGIN reduce production aexp -> LPAREN exp RPAREN 
-- On BARBAR reduce production aexp -> LPAREN exp RPAREN 
-- On BAR reduce production aexp -> LPAREN exp RPAREN 
-- On AVTYPE reduce production aexp -> LPAREN exp RPAREN 
-- On ASTYPE reduce production aexp -> LPAREN exp RPAREN 
-- On ARROW reduce production aexp -> LPAREN exp RPAREN 
-- On AND reduce production aexp -> LPAREN exp RPAREN 
-- On AMPERSAND reduce production aexp -> LPAREN exp RPAREN 

State 421:
appexp -> PERM LPAREN listexp1 . WITH repexp [ WITH UIDENT TYPE TILDE TEST STR SEMI RPAREN RBRACK RBRACE RANGLE QUALIDENT PUT NSET MODULE MINUS LT LPAREN LIDENT LET LEQ LANGLE INTO INTEGER IN HASH GT GRAMMAR GET GEQ EQUAL EOF END DOT DOLLAR DEQARROW DARROW CSET CREATE COMMA COLON CHOOSE CHARACTER CEX CANONIZE BOOLEAN BEGIN BARBAR BAR ARROW AMPERSAND ]
-- On WITH shift to state 422

State 422:
appexp -> PERM LPAREN listexp1 WITH . repexp [ WITH UIDENT TYPE TILDE TEST STR SEMI RPAREN RBRACK RBRACE RANGLE QUALIDENT PUT NSET MODULE MINUS LT LPAREN LIDENT LET LEQ LANGLE INTO INTEGER IN HASH GT GRAMMAR GET GEQ EQUAL EOF END DOT DOLLAR DEQARROW DARROW CSET CREATE COMMA COLON CHOOSE CHARACTER CEX CANONIZE BOOLEAN BEGIN BARBAR BAR ARROW AMPERSAND ]
-- On UIDENT shift to state 5
-- On STR shift to state 37
-- On QUALIDENT shift to state 6
-- On NSET shift to state 43
-- On LPAREN shift to state 44
-- On LIDENT shift to state 7
-- On LANGLE shift to state 47
-- On INTEGER shift to state 49
-- On HASH shift to state 50
-- On GRAMMAR shift to state 75
-- On CSET shift to state 81
-- On CHARACTER shift to state 82
-- On CEX shift to state 83
-- On BOOLEAN shift to state 134
-- On BEGIN shift to state 135
-- On tyexp shift to state 136
-- On repexp shift to state 423
-- On qid shift to state 158
-- On matchexp shift to state 159
-- On aexp shift to state 162

State 423:
appexp -> PERM LPAREN listexp1 WITH repexp . [ WITH UIDENT TYPE TILDE TEST STR SEMI RPAREN RBRACK RBRACE RANGLE QUALIDENT PUT NSET MODULE MINUS LT LPAREN LIDENT LET LEQ LANGLE INTO INTEGER IN HASH GT GRAMMAR GET GEQ EQUAL EOF END DOT DOLLAR DEQARROW DARROW CSET CREATE COMMA COLON CHOOSE CHARACTER CEX CANONIZE BOOLEAN BEGIN BARBAR BAR ARROW AMPERSAND ]
-- On WITH reduce production appexp -> PERM LPAREN listexp1 WITH repexp 
-- On UIDENT reduce production appexp -> PERM LPAREN listexp1 WITH repexp 
-- On TYPE reduce production appexp -> PERM LPAREN listexp1 WITH repexp 
-- On TILDE reduce production appexp -> PERM LPAREN listexp1 WITH repexp 
-- On TEST reduce production appexp -> PERM LPAREN listexp1 WITH repexp 
-- On STR reduce production appexp -> PERM LPAREN listexp1 WITH repexp 
-- On SEMI reduce production appexp -> PERM LPAREN listexp1 WITH repexp 
-- On RPAREN reduce production appexp -> PERM LPAREN listexp1 WITH repexp 
-- On RBRACK reduce production appexp -> PERM LPAREN listexp1 WITH repexp 
-- On RBRACE reduce production appexp -> PERM LPAREN listexp1 WITH repexp 
-- On RANGLE reduce production appexp -> PERM LPAREN listexp1 WITH repexp 
-- On QUALIDENT reduce production appexp -> PERM LPAREN listexp1 WITH repexp 
-- On PUT reduce production appexp -> PERM LPAREN listexp1 WITH repexp 
-- On NSET reduce production appexp -> PERM LPAREN listexp1 WITH repexp 
-- On MODULE reduce production appexp -> PERM LPAREN listexp1 WITH repexp 
-- On MINUS reduce production appexp -> PERM LPAREN listexp1 WITH repexp 
-- On LT reduce production appexp -> PERM LPAREN listexp1 WITH repexp 
-- On LPAREN reduce production appexp -> PERM LPAREN listexp1 WITH repexp 
-- On LIDENT reduce production appexp -> PERM LPAREN listexp1 WITH repexp 
-- On LET reduce production appexp -> PERM LPAREN listexp1 WITH repexp 
-- On LEQ reduce production appexp -> PERM LPAREN listexp1 WITH repexp 
-- On LANGLE reduce production appexp -> PERM LPAREN listexp1 WITH repexp 
-- On INTO reduce production appexp -> PERM LPAREN listexp1 WITH repexp 
-- On INTEGER reduce production appexp -> PERM LPAREN listexp1 WITH repexp 
-- On IN reduce production appexp -> PERM LPAREN listexp1 WITH repexp 
-- On HASH reduce production appexp -> PERM LPAREN listexp1 WITH repexp 
-- On GT reduce production appexp -> PERM LPAREN listexp1 WITH repexp 
-- On GRAMMAR reduce production appexp -> PERM LPAREN listexp1 WITH repexp 
-- On GET reduce production appexp -> PERM LPAREN listexp1 WITH repexp 
-- On GEQ reduce production appexp -> PERM LPAREN listexp1 WITH repexp 
-- On EQUAL reduce production appexp -> PERM LPAREN listexp1 WITH repexp 
-- On EOF reduce production appexp -> PERM LPAREN listexp1 WITH repexp 
-- On END reduce production appexp -> PERM LPAREN listexp1 WITH repexp 
-- On DOT reduce production appexp -> PERM LPAREN listexp1 WITH repexp 
-- On DOLLAR reduce production appexp -> PERM LPAREN listexp1 WITH repexp 
-- On DEQARROW reduce production appexp -> PERM LPAREN listexp1 WITH repexp 
-- On DARROW reduce production appexp -> PERM LPAREN listexp1 WITH repexp 
-- On CSET reduce production appexp -> PERM LPAREN listexp1 WITH repexp 
-- On CREATE reduce production appexp -> PERM LPAREN listexp1 WITH repexp 
-- On COMMA reduce production appexp -> PERM LPAREN listexp1 WITH repexp 
-- On COLON reduce production appexp -> PERM LPAREN listexp1 WITH repexp 
-- On CHOOSE reduce production appexp -> PERM LPAREN listexp1 WITH repexp 
-- On CHARACTER reduce production appexp -> PERM LPAREN listexp1 WITH repexp 
-- On CEX reduce production appexp -> PERM LPAREN listexp1 WITH repexp 
-- On CANONIZE reduce production appexp -> PERM LPAREN listexp1 WITH repexp 
-- On BOOLEAN reduce production appexp -> PERM LPAREN listexp1 WITH repexp 
-- On BEGIN reduce production appexp -> PERM LPAREN listexp1 WITH repexp 
-- On BARBAR reduce production appexp -> PERM LPAREN listexp1 WITH repexp 
-- On BAR reduce production appexp -> PERM LPAREN listexp1 WITH repexp 
-- On ARROW reduce production appexp -> PERM LPAREN listexp1 WITH repexp 
-- On AMPERSAND reduce production appexp -> PERM LPAREN listexp1 WITH repexp 

State 424:
appexp -> appexp . repexp [ UIDENT STR RPAREN QUALIDENT NSET LPAREN LIDENT LANGLE INTEGER HASH GRAMMAR CSET COMMA CHARACTER CEX BOOLEAN BEGIN ]
listexp1 -> appexp . RPAREN [ WITH ]
listexp1 -> appexp . COMMA listexp1 [ WITH ]
-- On UIDENT shift to state 5
-- On STR shift to state 37
-- On RPAREN shift to state 425
-- On QUALIDENT shift to state 6
-- On NSET shift to state 43
-- On LPAREN shift to state 44
-- On LIDENT shift to state 7
-- On LANGLE shift to state 47
-- On INTEGER shift to state 49
-- On HASH shift to state 50
-- On GRAMMAR shift to state 75
-- On CSET shift to state 81
-- On COMMA shift to state 426
-- On CHARACTER shift to state 82
-- On CEX shift to state 83
-- On BOOLEAN shift to state 134
-- On BEGIN shift to state 135
-- On tyexp shift to state 136
-- On repexp shift to state 161
-- On qid shift to state 158
-- On matchexp shift to state 159
-- On aexp shift to state 162

State 425:
listexp1 -> appexp RPAREN . [ WITH ]
-- On WITH reduce production listexp1 -> appexp RPAREN 

State 426:
listexp1 -> appexp COMMA . listexp1 [ WITH ]
-- On UIDENT shift to state 5
-- On SYNTH shift to state 36
-- On STR shift to state 37
-- On SQUASH shift to state 38
-- On RPAREN shift to state 42
-- On QUALIDENT shift to state 6
-- On PROJECT shift to state 39
-- On PERM shift to state 40
-- On NSET shift to state 43
-- On LPAREN shift to state 44
-- On LIDENT shift to state 7
-- On LANGLE shift to state 47
-- On INTEGER shift to state 49
-- On HASH shift to state 50
-- On GRAMMAR shift to state 75
-- On CSET shift to state 81
-- On CHARACTER shift to state 82
-- On CEX shift to state 83
-- On BOOLEAN shift to state 134
-- On BEGIN shift to state 135
-- On tyexp shift to state 136
-- On repexp shift to state 157
-- On qid shift to state 158
-- On matchexp shift to state 159
-- On listexp1 shift to state 427
-- On appexp shift to state 424
-- On aexp shift to state 162

State 427:
listexp1 -> appexp COMMA listexp1 . [ WITH ]
-- On WITH reduce production listexp1 -> appexp COMMA listexp1 

State 428:
appexp -> appexp . repexp [ UIDENT STR QUALIDENT NSET LPAREN LIDENT LANGLE INTEGER HASH GRAMMAR CSET CHARACTER CEX BOOLEAN BEGIN ARROW ]
appexp -> PROJECT appexp . ARROW repexp [ WITH UIDENT TYPE TILDE TEST STR SEMI RPAREN RBRACK RBRACE RANGLE QUALIDENT PUT NSET MODULE MINUS LT LPAREN LIDENT LET LEQ LANGLE INTO INTEGER IN HASH GT GRAMMAR GET GEQ EQUAL EOF END DOT DOLLAR DEQARROW DARROW CSET CREATE COMMA COLON CHOOSE CHARACTER CEX CANONIZE BOOLEAN BEGIN BARBAR BAR ARROW AMPERSAND ]
-- On UIDENT shift to state 5
-- On STR shift to state 37
-- On QUALIDENT shift to state 6
-- On NSET shift to state 43
-- On LPAREN shift to state 44
-- On LIDENT shift to state 7
-- On LANGLE shift to state 47
-- On INTEGER shift to state 49
-- On HASH shift to state 50
-- On GRAMMAR shift to state 75
-- On CSET shift to state 81
-- On CHARACTER shift to state 82
-- On CEX shift to state 83
-- On BOOLEAN shift to state 134
-- On BEGIN shift to state 135
-- On ARROW shift to state 429
-- On tyexp shift to state 136
-- On repexp shift to state 161
-- On qid shift to state 158
-- On matchexp shift to state 159
-- On aexp shift to state 162

State 429:
appexp -> PROJECT appexp ARROW . repexp [ WITH UIDENT TYPE TILDE TEST STR SEMI RPAREN RBRACK RBRACE RANGLE QUALIDENT PUT NSET MODULE MINUS LT LPAREN LIDENT LET LEQ LANGLE INTO INTEGER IN HASH GT GRAMMAR GET GEQ EQUAL EOF END DOT DOLLAR DEQARROW DARROW CSET CREATE COMMA COLON CHOOSE CHARACTER CEX CANONIZE BOOLEAN BEGIN BARBAR BAR ARROW AMPERSAND ]
-- On UIDENT shift to state 5
-- On STR shift to state 37
-- On QUALIDENT shift to state 6
-- On NSET shift to state 43
-- On LPAREN shift to state 44
-- On LIDENT shift to state 7
-- On LANGLE shift to state 47
-- On INTEGER shift to state 49
-- On HASH shift to state 50
-- On GRAMMAR shift to state 75
-- On CSET shift to state 81
-- On CHARACTER shift to state 82
-- On CEX shift to state 83
-- On BOOLEAN shift to state 134
-- On BEGIN shift to state 135
-- On tyexp shift to state 136
-- On repexp shift to state 430
-- On qid shift to state 158
-- On matchexp shift to state 159
-- On aexp shift to state 162

State 430:
appexp -> PROJECT appexp ARROW repexp . [ WITH UIDENT TYPE TILDE TEST STR SEMI RPAREN RBRACK RBRACE RANGLE QUALIDENT PUT NSET MODULE MINUS LT LPAREN LIDENT LET LEQ LANGLE INTO INTEGER IN HASH GT GRAMMAR GET GEQ EQUAL EOF END DOT DOLLAR DEQARROW DARROW CSET CREATE COMMA COLON CHOOSE CHARACTER CEX CANONIZE BOOLEAN BEGIN BARBAR BAR ARROW AMPERSAND ]
-- On WITH reduce production appexp -> PROJECT appexp ARROW repexp 
-- On UIDENT reduce production appexp -> PROJECT appexp ARROW repexp 
-- On TYPE reduce production appexp -> PROJECT appexp ARROW repexp 
-- On TILDE reduce production appexp -> PROJECT appexp ARROW repexp 
-- On TEST reduce production appexp -> PROJECT appexp ARROW repexp 
-- On STR reduce production appexp -> PROJECT appexp ARROW repexp 
-- On SEMI reduce production appexp -> PROJECT appexp ARROW repexp 
-- On RPAREN reduce production appexp -> PROJECT appexp ARROW repexp 
-- On RBRACK reduce production appexp -> PROJECT appexp ARROW repexp 
-- On RBRACE reduce production appexp -> PROJECT appexp ARROW repexp 
-- On RANGLE reduce production appexp -> PROJECT appexp ARROW repexp 
-- On QUALIDENT reduce production appexp -> PROJECT appexp ARROW repexp 
-- On PUT reduce production appexp -> PROJECT appexp ARROW repexp 
-- On NSET reduce production appexp -> PROJECT appexp ARROW repexp 
-- On MODULE reduce production appexp -> PROJECT appexp ARROW repexp 
-- On MINUS reduce production appexp -> PROJECT appexp ARROW repexp 
-- On LT reduce production appexp -> PROJECT appexp ARROW repexp 
-- On LPAREN reduce production appexp -> PROJECT appexp ARROW repexp 
-- On LIDENT reduce production appexp -> PROJECT appexp ARROW repexp 
-- On LET reduce production appexp -> PROJECT appexp ARROW repexp 
-- On LEQ reduce production appexp -> PROJECT appexp ARROW repexp 
-- On LANGLE reduce production appexp -> PROJECT appexp ARROW repexp 
-- On INTO reduce production appexp -> PROJECT appexp ARROW repexp 
-- On INTEGER reduce production appexp -> PROJECT appexp ARROW repexp 
-- On IN reduce production appexp -> PROJECT appexp ARROW repexp 
-- On HASH reduce production appexp -> PROJECT appexp ARROW repexp 
-- On GT reduce production appexp -> PROJECT appexp ARROW repexp 
-- On GRAMMAR reduce production appexp -> PROJECT appexp ARROW repexp 
-- On GET reduce production appexp -> PROJECT appexp ARROW repexp 
-- On GEQ reduce production appexp -> PROJECT appexp ARROW repexp 
-- On EQUAL reduce production appexp -> PROJECT appexp ARROW repexp 
-- On EOF reduce production appexp -> PROJECT appexp ARROW repexp 
-- On END reduce production appexp -> PROJECT appexp ARROW repexp 
-- On DOT reduce production appexp -> PROJECT appexp ARROW repexp 
-- On DOLLAR reduce production appexp -> PROJECT appexp ARROW repexp 
-- On DEQARROW reduce production appexp -> PROJECT appexp ARROW repexp 
-- On DARROW reduce production appexp -> PROJECT appexp ARROW repexp 
-- On CSET reduce production appexp -> PROJECT appexp ARROW repexp 
-- On CREATE reduce production appexp -> PROJECT appexp ARROW repexp 
-- On COMMA reduce production appexp -> PROJECT appexp ARROW repexp 
-- On COLON reduce production appexp -> PROJECT appexp ARROW repexp 
-- On CHOOSE reduce production appexp -> PROJECT appexp ARROW repexp 
-- On CHARACTER reduce production appexp -> PROJECT appexp ARROW repexp 
-- On CEX reduce production appexp -> PROJECT appexp ARROW repexp 
-- On CANONIZE reduce production appexp -> PROJECT appexp ARROW repexp 
-- On BOOLEAN reduce production appexp -> PROJECT appexp ARROW repexp 
-- On BEGIN reduce production appexp -> PROJECT appexp ARROW repexp 
-- On BARBAR reduce production appexp -> PROJECT appexp ARROW repexp 
-- On BAR reduce production appexp -> PROJECT appexp ARROW repexp 
-- On ARROW reduce production appexp -> PROJECT appexp ARROW repexp 
-- On AMPERSAND reduce production appexp -> PROJECT appexp ARROW repexp 

State 431:
appexp -> appexp . repexp [ UIDENT STR QUALIDENT NSET LPAREN LIDENT LANGLE INTEGER HASH GRAMMAR CSET CHARACTER CEX BOOLEAN BEGIN ARROW ]
appexp -> SQUASH appexp . ARROW repexp USING repexp [ WITH UIDENT TYPE TILDE TEST STR SEMI RPAREN RBRACK RBRACE RANGLE QUALIDENT PUT NSET MODULE MINUS LT LPAREN LIDENT LET LEQ LANGLE INTO INTEGER IN HASH GT GRAMMAR GET GEQ EQUAL EOF END DOT DOLLAR DEQARROW DARROW CSET CREATE COMMA COLON CHOOSE CHARACTER CEX CANONIZE BOOLEAN BEGIN BARBAR BAR ARROW AMPERSAND ]
-- On UIDENT shift to state 5
-- On STR shift to state 37
-- On QUALIDENT shift to state 6
-- On NSET shift to state 43
-- On LPAREN shift to state 44
-- On LIDENT shift to state 7
-- On LANGLE shift to state 47
-- On INTEGER shift to state 49
-- On HASH shift to state 50
-- On GRAMMAR shift to state 75
-- On CSET shift to state 81
-- On CHARACTER shift to state 82
-- On CEX shift to state 83
-- On BOOLEAN shift to state 134
-- On BEGIN shift to state 135
-- On ARROW shift to state 432
-- On tyexp shift to state 136
-- On repexp shift to state 161
-- On qid shift to state 158
-- On matchexp shift to state 159
-- On aexp shift to state 162

State 432:
appexp -> SQUASH appexp ARROW . repexp USING repexp [ WITH UIDENT TYPE TILDE TEST STR SEMI RPAREN RBRACK RBRACE RANGLE QUALIDENT PUT NSET MODULE MINUS LT LPAREN LIDENT LET LEQ LANGLE INTO INTEGER IN HASH GT GRAMMAR GET GEQ EQUAL EOF END DOT DOLLAR DEQARROW DARROW CSET CREATE COMMA COLON CHOOSE CHARACTER CEX CANONIZE BOOLEAN BEGIN BARBAR BAR ARROW AMPERSAND ]
-- On UIDENT shift to state 5
-- On STR shift to state 37
-- On QUALIDENT shift to state 6
-- On NSET shift to state 43
-- On LPAREN shift to state 44
-- On LIDENT shift to state 7
-- On LANGLE shift to state 47
-- On INTEGER shift to state 49
-- On HASH shift to state 50
-- On GRAMMAR shift to state 75
-- On CSET shift to state 81
-- On CHARACTER shift to state 82
-- On CEX shift to state 83
-- On BOOLEAN shift to state 134
-- On BEGIN shift to state 135
-- On tyexp shift to state 136
-- On repexp shift to state 433
-- On qid shift to state 158
-- On matchexp shift to state 159
-- On aexp shift to state 162

State 433:
appexp -> SQUASH appexp ARROW repexp . USING repexp [ WITH UIDENT TYPE TILDE TEST STR SEMI RPAREN RBRACK RBRACE RANGLE QUALIDENT PUT NSET MODULE MINUS LT LPAREN LIDENT LET LEQ LANGLE INTO INTEGER IN HASH GT GRAMMAR GET GEQ EQUAL EOF END DOT DOLLAR DEQARROW DARROW CSET CREATE COMMA COLON CHOOSE CHARACTER CEX CANONIZE BOOLEAN BEGIN BARBAR BAR ARROW AMPERSAND ]
-- On USING shift to state 434

State 434:
appexp -> SQUASH appexp ARROW repexp USING . repexp [ WITH UIDENT TYPE TILDE TEST STR SEMI RPAREN RBRACK RBRACE RANGLE QUALIDENT PUT NSET MODULE MINUS LT LPAREN LIDENT LET LEQ LANGLE INTO INTEGER IN HASH GT GRAMMAR GET GEQ EQUAL EOF END DOT DOLLAR DEQARROW DARROW CSET CREATE COMMA COLON CHOOSE CHARACTER CEX CANONIZE BOOLEAN BEGIN BARBAR BAR ARROW AMPERSAND ]
-- On UIDENT shift to state 5
-- On STR shift to state 37
-- On QUALIDENT shift to state 6
-- On NSET shift to state 43
-- On LPAREN shift to state 44
-- On LIDENT shift to state 7
-- On LANGLE shift to state 47
-- On INTEGER shift to state 49
-- On HASH shift to state 50
-- On GRAMMAR shift to state 75
-- On CSET shift to state 81
-- On CHARACTER shift to state 82
-- On CEX shift to state 83
-- On BOOLEAN shift to state 134
-- On BEGIN shift to state 135
-- On tyexp shift to state 136
-- On repexp shift to state 435
-- On qid shift to state 158
-- On matchexp shift to state 159
-- On aexp shift to state 162

State 435:
appexp -> SQUASH appexp ARROW repexp USING repexp . [ WITH UIDENT TYPE TILDE TEST STR SEMI RPAREN RBRACK RBRACE RANGLE QUALIDENT PUT NSET MODULE MINUS LT LPAREN LIDENT LET LEQ LANGLE INTO INTEGER IN HASH GT GRAMMAR GET GEQ EQUAL EOF END DOT DOLLAR DEQARROW DARROW CSET CREATE COMMA COLON CHOOSE CHARACTER CEX CANONIZE BOOLEAN BEGIN BARBAR BAR ARROW AMPERSAND ]
-- On WITH reduce production appexp -> SQUASH appexp ARROW repexp USING repexp 
-- On UIDENT reduce production appexp -> SQUASH appexp ARROW repexp USING repexp 
-- On TYPE reduce production appexp -> SQUASH appexp ARROW repexp USING repexp 
-- On TILDE reduce production appexp -> SQUASH appexp ARROW repexp USING repexp 
-- On TEST reduce production appexp -> SQUASH appexp ARROW repexp USING repexp 
-- On STR reduce production appexp -> SQUASH appexp ARROW repexp USING repexp 
-- On SEMI reduce production appexp -> SQUASH appexp ARROW repexp USING repexp 
-- On RPAREN reduce production appexp -> SQUASH appexp ARROW repexp USING repexp 
-- On RBRACK reduce production appexp -> SQUASH appexp ARROW repexp USING repexp 
-- On RBRACE reduce production appexp -> SQUASH appexp ARROW repexp USING repexp 
-- On RANGLE reduce production appexp -> SQUASH appexp ARROW repexp USING repexp 
-- On QUALIDENT reduce production appexp -> SQUASH appexp ARROW repexp USING repexp 
-- On PUT reduce production appexp -> SQUASH appexp ARROW repexp USING repexp 
-- On NSET reduce production appexp -> SQUASH appexp ARROW repexp USING repexp 
-- On MODULE reduce production appexp -> SQUASH appexp ARROW repexp USING repexp 
-- On MINUS reduce production appexp -> SQUASH appexp ARROW repexp USING repexp 
-- On LT reduce production appexp -> SQUASH appexp ARROW repexp USING repexp 
-- On LPAREN reduce production appexp -> SQUASH appexp ARROW repexp USING repexp 
-- On LIDENT reduce production appexp -> SQUASH appexp ARROW repexp USING repexp 
-- On LET reduce production appexp -> SQUASH appexp ARROW repexp USING repexp 
-- On LEQ reduce production appexp -> SQUASH appexp ARROW repexp USING repexp 
-- On LANGLE reduce production appexp -> SQUASH appexp ARROW repexp USING repexp 
-- On INTO reduce production appexp -> SQUASH appexp ARROW repexp USING repexp 
-- On INTEGER reduce production appexp -> SQUASH appexp ARROW repexp USING repexp 
-- On IN reduce production appexp -> SQUASH appexp ARROW repexp USING repexp 
-- On HASH reduce production appexp -> SQUASH appexp ARROW repexp USING repexp 
-- On GT reduce production appexp -> SQUASH appexp ARROW repexp USING repexp 
-- On GRAMMAR reduce production appexp -> SQUASH appexp ARROW repexp USING repexp 
-- On GET reduce production appexp -> SQUASH appexp ARROW repexp USING repexp 
-- On GEQ reduce production appexp -> SQUASH appexp ARROW repexp USING repexp 
-- On EQUAL reduce production appexp -> SQUASH appexp ARROW repexp USING repexp 
-- On EOF reduce production appexp -> SQUASH appexp ARROW repexp USING repexp 
-- On END reduce production appexp -> SQUASH appexp ARROW repexp USING repexp 
-- On DOT reduce production appexp -> SQUASH appexp ARROW repexp USING repexp 
-- On DOLLAR reduce production appexp -> SQUASH appexp ARROW repexp USING repexp 
-- On DEQARROW reduce production appexp -> SQUASH appexp ARROW repexp USING repexp 
-- On DARROW reduce production appexp -> SQUASH appexp ARROW repexp USING repexp 
-- On CSET reduce production appexp -> SQUASH appexp ARROW repexp USING repexp 
-- On CREATE reduce production appexp -> SQUASH appexp ARROW repexp USING repexp 
-- On COMMA reduce production appexp -> SQUASH appexp ARROW repexp USING repexp 
-- On COLON reduce production appexp -> SQUASH appexp ARROW repexp USING repexp 
-- On CHOOSE reduce production appexp -> SQUASH appexp ARROW repexp USING repexp 
-- On CHARACTER reduce production appexp -> SQUASH appexp ARROW repexp USING repexp 
-- On CEX reduce production appexp -> SQUASH appexp ARROW repexp USING repexp 
-- On CANONIZE reduce production appexp -> SQUASH appexp ARROW repexp USING repexp 
-- On BOOLEAN reduce production appexp -> SQUASH appexp ARROW repexp USING repexp 
-- On BEGIN reduce production appexp -> SQUASH appexp ARROW repexp USING repexp 
-- On BARBAR reduce production appexp -> SQUASH appexp ARROW repexp USING repexp 
-- On BAR reduce production appexp -> SQUASH appexp ARROW repexp USING repexp 
-- On ARROW reduce production appexp -> SQUASH appexp ARROW repexp USING repexp 
-- On AMPERSAND reduce production appexp -> SQUASH appexp ARROW repexp USING repexp 

State 436:
appexp -> appexp . repexp [ UIDENT STR QUALIDENT NSET LPAREN LIDENT LANGLE INTEGER HASH GRAMMAR DEQARROW CSET CHARACTER CEX BOOLEAN BEGIN ]
appexp -> SYNTH appexp . DEQARROW repexp USING LBRACE listexp2 [ WITH UIDENT TYPE TILDE TEST STR SEMI RPAREN RBRACK RBRACE RANGLE QUALIDENT PUT NSET MODULE MINUS LT LPAREN LIDENT LET LEQ LANGLE INTO INTEGER IN HASH GT GRAMMAR GET GEQ EQUAL EOF END DOT DOLLAR DEQARROW DARROW CSET CREATE COMMA COLON CHOOSE CHARACTER CEX CANONIZE BOOLEAN BEGIN BARBAR BAR ARROW AMPERSAND ]
appexp -> SYNTH appexp . DEQARROW repexp [ WITH UIDENT TYPE TILDE TEST STR SEMI RPAREN RBRACK RBRACE RANGLE QUALIDENT PUT NSET MODULE MINUS LT LPAREN LIDENT LET LEQ LANGLE INTO INTEGER IN HASH GT GRAMMAR GET GEQ EQUAL EOF END DOT DOLLAR DEQARROW DARROW CSET CREATE COMMA COLON CHOOSE CHARACTER CEX CANONIZE BOOLEAN BEGIN BARBAR BAR ARROW AMPERSAND ]
-- On UIDENT shift to state 5
-- On STR shift to state 37
-- On QUALIDENT shift to state 6
-- On NSET shift to state 43
-- On LPAREN shift to state 44
-- On LIDENT shift to state 7
-- On LANGLE shift to state 47
-- On INTEGER shift to state 49
-- On HASH shift to state 50
-- On GRAMMAR shift to state 75
-- On DEQARROW shift to state 437
-- On CSET shift to state 81
-- On CHARACTER shift to state 82
-- On CEX shift to state 83
-- On BOOLEAN shift to state 134
-- On BEGIN shift to state 135
-- On tyexp shift to state 136
-- On repexp shift to state 161
-- On qid shift to state 158
-- On matchexp shift to state 159
-- On aexp shift to state 162

State 437:
appexp -> SYNTH appexp DEQARROW . repexp USING LBRACE listexp2 [ WITH UIDENT TYPE TILDE TEST STR SEMI RPAREN RBRACK RBRACE RANGLE QUALIDENT PUT NSET MODULE MINUS LT LPAREN LIDENT LET LEQ LANGLE INTO INTEGER IN HASH GT GRAMMAR GET GEQ EQUAL EOF END DOT DOLLAR DEQARROW DARROW CSET CREATE COMMA COLON CHOOSE CHARACTER CEX CANONIZE BOOLEAN BEGIN BARBAR BAR ARROW AMPERSAND ]
appexp -> SYNTH appexp DEQARROW . repexp [ WITH UIDENT TYPE TILDE TEST STR SEMI RPAREN RBRACK RBRACE RANGLE QUALIDENT PUT NSET MODULE MINUS LT LPAREN LIDENT LET LEQ LANGLE INTO INTEGER IN HASH GT GRAMMAR GET GEQ EQUAL EOF END DOT DOLLAR DEQARROW DARROW CSET CREATE COMMA COLON CHOOSE CHARACTER CEX CANONIZE BOOLEAN BEGIN BARBAR BAR ARROW AMPERSAND ]
-- On UIDENT shift to state 5
-- On STR shift to state 37
-- On QUALIDENT shift to state 6
-- On NSET shift to state 43
-- On LPAREN shift to state 44
-- On LIDENT shift to state 7
-- On LANGLE shift to state 47
-- On INTEGER shift to state 49
-- On HASH shift to state 50
-- On GRAMMAR shift to state 75
-- On CSET shift to state 81
-- On CHARACTER shift to state 82
-- On CEX shift to state 83
-- On BOOLEAN shift to state 134
-- On BEGIN shift to state 135
-- On tyexp shift to state 136
-- On repexp shift to state 438
-- On qid shift to state 158
-- On matchexp shift to state 159
-- On aexp shift to state 162

State 438:
appexp -> SYNTH appexp DEQARROW repexp . USING LBRACE listexp2 [ WITH UIDENT TYPE TILDE TEST STR SEMI RPAREN RBRACK RBRACE RANGLE QUALIDENT PUT NSET MODULE MINUS LT LPAREN LIDENT LET LEQ LANGLE INTO INTEGER IN HASH GT GRAMMAR GET GEQ EQUAL EOF END DOT DOLLAR DEQARROW DARROW CSET CREATE COMMA COLON CHOOSE CHARACTER CEX CANONIZE BOOLEAN BEGIN BARBAR BAR ARROW AMPERSAND ]
appexp -> SYNTH appexp DEQARROW repexp . [ WITH UIDENT TYPE TILDE TEST STR SEMI RPAREN RBRACK RBRACE RANGLE QUALIDENT PUT NSET MODULE MINUS LT LPAREN LIDENT LET LEQ LANGLE INTO INTEGER IN HASH GT GRAMMAR GET GEQ EQUAL EOF END DOT DOLLAR DEQARROW DARROW CSET CREATE COMMA COLON CHOOSE CHARACTER CEX CANONIZE BOOLEAN BEGIN BARBAR BAR ARROW AMPERSAND ]
-- On USING shift to state 439
-- On WITH reduce production appexp -> SYNTH appexp DEQARROW repexp 
-- On UIDENT reduce production appexp -> SYNTH appexp DEQARROW repexp 
-- On TYPE reduce production appexp -> SYNTH appexp DEQARROW repexp 
-- On TILDE reduce production appexp -> SYNTH appexp DEQARROW repexp 
-- On TEST reduce production appexp -> SYNTH appexp DEQARROW repexp 
-- On STR reduce production appexp -> SYNTH appexp DEQARROW repexp 
-- On SEMI reduce production appexp -> SYNTH appexp DEQARROW repexp 
-- On RPAREN reduce production appexp -> SYNTH appexp DEQARROW repexp 
-- On RBRACK reduce production appexp -> SYNTH appexp DEQARROW repexp 
-- On RBRACE reduce production appexp -> SYNTH appexp DEQARROW repexp 
-- On RANGLE reduce production appexp -> SYNTH appexp DEQARROW repexp 
-- On QUALIDENT reduce production appexp -> SYNTH appexp DEQARROW repexp 
-- On PUT reduce production appexp -> SYNTH appexp DEQARROW repexp 
-- On NSET reduce production appexp -> SYNTH appexp DEQARROW repexp 
-- On MODULE reduce production appexp -> SYNTH appexp DEQARROW repexp 
-- On MINUS reduce production appexp -> SYNTH appexp DEQARROW repexp 
-- On LT reduce production appexp -> SYNTH appexp DEQARROW repexp 
-- On LPAREN reduce production appexp -> SYNTH appexp DEQARROW repexp 
-- On LIDENT reduce production appexp -> SYNTH appexp DEQARROW repexp 
-- On LET reduce production appexp -> SYNTH appexp DEQARROW repexp 
-- On LEQ reduce production appexp -> SYNTH appexp DEQARROW repexp 
-- On LANGLE reduce production appexp -> SYNTH appexp DEQARROW repexp 
-- On INTO reduce production appexp -> SYNTH appexp DEQARROW repexp 
-- On INTEGER reduce production appexp -> SYNTH appexp DEQARROW repexp 
-- On IN reduce production appexp -> SYNTH appexp DEQARROW repexp 
-- On HASH reduce production appexp -> SYNTH appexp DEQARROW repexp 
-- On GT reduce production appexp -> SYNTH appexp DEQARROW repexp 
-- On GRAMMAR reduce production appexp -> SYNTH appexp DEQARROW repexp 
-- On GET reduce production appexp -> SYNTH appexp DEQARROW repexp 
-- On GEQ reduce production appexp -> SYNTH appexp DEQARROW repexp 
-- On EQUAL reduce production appexp -> SYNTH appexp DEQARROW repexp 
-- On EOF reduce production appexp -> SYNTH appexp DEQARROW repexp 
-- On END reduce production appexp -> SYNTH appexp DEQARROW repexp 
-- On DOT reduce production appexp -> SYNTH appexp DEQARROW repexp 
-- On DOLLAR reduce production appexp -> SYNTH appexp DEQARROW repexp 
-- On DEQARROW reduce production appexp -> SYNTH appexp DEQARROW repexp 
-- On DARROW reduce production appexp -> SYNTH appexp DEQARROW repexp 
-- On CSET reduce production appexp -> SYNTH appexp DEQARROW repexp 
-- On CREATE reduce production appexp -> SYNTH appexp DEQARROW repexp 
-- On COMMA reduce production appexp -> SYNTH appexp DEQARROW repexp 
-- On COLON reduce production appexp -> SYNTH appexp DEQARROW repexp 
-- On CHOOSE reduce production appexp -> SYNTH appexp DEQARROW repexp 
-- On CHARACTER reduce production appexp -> SYNTH appexp DEQARROW repexp 
-- On CEX reduce production appexp -> SYNTH appexp DEQARROW repexp 
-- On CANONIZE reduce production appexp -> SYNTH appexp DEQARROW repexp 
-- On BOOLEAN reduce production appexp -> SYNTH appexp DEQARROW repexp 
-- On BEGIN reduce production appexp -> SYNTH appexp DEQARROW repexp 
-- On BARBAR reduce production appexp -> SYNTH appexp DEQARROW repexp 
-- On BAR reduce production appexp -> SYNTH appexp DEQARROW repexp 
-- On ARROW reduce production appexp -> SYNTH appexp DEQARROW repexp 
-- On AMPERSAND reduce production appexp -> SYNTH appexp DEQARROW repexp 

State 439:
appexp -> SYNTH appexp DEQARROW repexp USING . LBRACE listexp2 [ WITH UIDENT TYPE TILDE TEST STR SEMI RPAREN RBRACK RBRACE RANGLE QUALIDENT PUT NSET MODULE MINUS LT LPAREN LIDENT LET LEQ LANGLE INTO INTEGER IN HASH GT GRAMMAR GET GEQ EQUAL EOF END DOT DOLLAR DEQARROW DARROW CSET CREATE COMMA COLON CHOOSE CHARACTER CEX CANONIZE BOOLEAN BEGIN BARBAR BAR ARROW AMPERSAND ]
-- On LBRACE shift to state 440

State 440:
appexp -> SYNTH appexp DEQARROW repexp USING LBRACE . listexp2 [ WITH UIDENT TYPE TILDE TEST STR SEMI RPAREN RBRACK RBRACE RANGLE QUALIDENT PUT NSET MODULE MINUS LT LPAREN LIDENT LET LEQ LANGLE INTO INTEGER IN HASH GT GRAMMAR GET GEQ EQUAL EOF END DOT DOLLAR DEQARROW DARROW CSET CREATE COMMA COLON CHOOSE CHARACTER CEX CANONIZE BOOLEAN BEGIN BARBAR BAR ARROW AMPERSAND ]
-- On UIDENT shift to state 5
-- On SYNTH shift to state 36
-- On STR shift to state 37
-- On SQUASH shift to state 38
-- On RBRACE shift to state 441
-- On QUALIDENT shift to state 6
-- On PROJECT shift to state 39
-- On PERM shift to state 40
-- On NSET shift to state 43
-- On LPAREN shift to state 44
-- On LIDENT shift to state 7
-- On LANGLE shift to state 47
-- On INTEGER shift to state 49
-- On HASH shift to state 50
-- On GRAMMAR shift to state 75
-- On CSET shift to state 81
-- On CHARACTER shift to state 82
-- On CEX shift to state 83
-- On BOOLEAN shift to state 134
-- On BEGIN shift to state 135
-- On tyexp shift to state 136
-- On repexp shift to state 157
-- On qid shift to state 158
-- On matchexp shift to state 159
-- On listexp2 shift to state 442
-- On appexp shift to state 443
-- On aexp shift to state 162

State 441:
listexp2 -> RBRACE . [ WITH UIDENT TYPE TILDE TEST STR SEMI RPAREN RBRACK RBRACE RANGLE QUALIDENT PUT NSET MODULE MINUS LT LPAREN LIDENT LET LEQ LANGLE INTO INTEGER IN HASH GT GRAMMAR GET GEQ EQUAL EOF END DOT DOLLAR DEQARROW DARROW CSET CREATE COMMA COLON CHOOSE CHARACTER CEX CANONIZE BOOLEAN BEGIN BARBAR BAR ARROW AMPERSAND ]
-- On WITH reduce production listexp2 -> RBRACE 
-- On UIDENT reduce production listexp2 -> RBRACE 
-- On TYPE reduce production listexp2 -> RBRACE 
-- On TILDE reduce production listexp2 -> RBRACE 
-- On TEST reduce production listexp2 -> RBRACE 
-- On STR reduce production listexp2 -> RBRACE 
-- On SEMI reduce production listexp2 -> RBRACE 
-- On RPAREN reduce production listexp2 -> RBRACE 
-- On RBRACK reduce production listexp2 -> RBRACE 
-- On RBRACE reduce production listexp2 -> RBRACE 
-- On RANGLE reduce production listexp2 -> RBRACE 
-- On QUALIDENT reduce production listexp2 -> RBRACE 
-- On PUT reduce production listexp2 -> RBRACE 
-- On NSET reduce production listexp2 -> RBRACE 
-- On MODULE reduce production listexp2 -> RBRACE 
-- On MINUS reduce production listexp2 -> RBRACE 
-- On LT reduce production listexp2 -> RBRACE 
-- On LPAREN reduce production listexp2 -> RBRACE 
-- On LIDENT reduce production listexp2 -> RBRACE 
-- On LET reduce production listexp2 -> RBRACE 
-- On LEQ reduce production listexp2 -> RBRACE 
-- On LANGLE reduce production listexp2 -> RBRACE 
-- On INTO reduce production listexp2 -> RBRACE 
-- On INTEGER reduce production listexp2 -> RBRACE 
-- On IN reduce production listexp2 -> RBRACE 
-- On HASH reduce production listexp2 -> RBRACE 
-- On GT reduce production listexp2 -> RBRACE 
-- On GRAMMAR reduce production listexp2 -> RBRACE 
-- On GET reduce production listexp2 -> RBRACE 
-- On GEQ reduce production listexp2 -> RBRACE 
-- On EQUAL reduce production listexp2 -> RBRACE 
-- On EOF reduce production listexp2 -> RBRACE 
-- On END reduce production listexp2 -> RBRACE 
-- On DOT reduce production listexp2 -> RBRACE 
-- On DOLLAR reduce production listexp2 -> RBRACE 
-- On DEQARROW reduce production listexp2 -> RBRACE 
-- On DARROW reduce production listexp2 -> RBRACE 
-- On CSET reduce production listexp2 -> RBRACE 
-- On CREATE reduce production listexp2 -> RBRACE 
-- On COMMA reduce production listexp2 -> RBRACE 
-- On COLON reduce production listexp2 -> RBRACE 
-- On CHOOSE reduce production listexp2 -> RBRACE 
-- On CHARACTER reduce production listexp2 -> RBRACE 
-- On CEX reduce production listexp2 -> RBRACE 
-- On CANONIZE reduce production listexp2 -> RBRACE 
-- On BOOLEAN reduce production listexp2 -> RBRACE 
-- On BEGIN reduce production listexp2 -> RBRACE 
-- On BARBAR reduce production listexp2 -> RBRACE 
-- On BAR reduce production listexp2 -> RBRACE 
-- On ARROW reduce production listexp2 -> RBRACE 
-- On AMPERSAND reduce production listexp2 -> RBRACE 

State 442:
appexp -> SYNTH appexp DEQARROW repexp USING LBRACE listexp2 . [ WITH UIDENT TYPE TILDE TEST STR SEMI RPAREN RBRACK RBRACE RANGLE QUALIDENT PUT NSET MODULE MINUS LT LPAREN LIDENT LET LEQ LANGLE INTO INTEGER IN HASH GT GRAMMAR GET GEQ EQUAL EOF END DOT DOLLAR DEQARROW DARROW CSET CREATE COMMA COLON CHOOSE CHARACTER CEX CANONIZE BOOLEAN BEGIN BARBAR BAR ARROW AMPERSAND ]
-- On WITH reduce production appexp -> SYNTH appexp DEQARROW repexp USING LBRACE listexp2 
-- On UIDENT reduce production appexp -> SYNTH appexp DEQARROW repexp USING LBRACE listexp2 
-- On TYPE reduce production appexp -> SYNTH appexp DEQARROW repexp USING LBRACE listexp2 
-- On TILDE reduce production appexp -> SYNTH appexp DEQARROW repexp USING LBRACE listexp2 
-- On TEST reduce production appexp -> SYNTH appexp DEQARROW repexp USING LBRACE listexp2 
-- On STR reduce production appexp -> SYNTH appexp DEQARROW repexp USING LBRACE listexp2 
-- On SEMI reduce production appexp -> SYNTH appexp DEQARROW repexp USING LBRACE listexp2 
-- On RPAREN reduce production appexp -> SYNTH appexp DEQARROW repexp USING LBRACE listexp2 
-- On RBRACK reduce production appexp -> SYNTH appexp DEQARROW repexp USING LBRACE listexp2 
-- On RBRACE reduce production appexp -> SYNTH appexp DEQARROW repexp USING LBRACE listexp2 
-- On RANGLE reduce production appexp -> SYNTH appexp DEQARROW repexp USING LBRACE listexp2 
-- On QUALIDENT reduce production appexp -> SYNTH appexp DEQARROW repexp USING LBRACE listexp2 
-- On PUT reduce production appexp -> SYNTH appexp DEQARROW repexp USING LBRACE listexp2 
-- On NSET reduce production appexp -> SYNTH appexp DEQARROW repexp USING LBRACE listexp2 
-- On MODULE reduce production appexp -> SYNTH appexp DEQARROW repexp USING LBRACE listexp2 
-- On MINUS reduce production appexp -> SYNTH appexp DEQARROW repexp USING LBRACE listexp2 
-- On LT reduce production appexp -> SYNTH appexp DEQARROW repexp USING LBRACE listexp2 
-- On LPAREN reduce production appexp -> SYNTH appexp DEQARROW repexp USING LBRACE listexp2 
-- On LIDENT reduce production appexp -> SYNTH appexp DEQARROW repexp USING LBRACE listexp2 
-- On LET reduce production appexp -> SYNTH appexp DEQARROW repexp USING LBRACE listexp2 
-- On LEQ reduce production appexp -> SYNTH appexp DEQARROW repexp USING LBRACE listexp2 
-- On LANGLE reduce production appexp -> SYNTH appexp DEQARROW repexp USING LBRACE listexp2 
-- On INTO reduce production appexp -> SYNTH appexp DEQARROW repexp USING LBRACE listexp2 
-- On INTEGER reduce production appexp -> SYNTH appexp DEQARROW repexp USING LBRACE listexp2 
-- On IN reduce production appexp -> SYNTH appexp DEQARROW repexp USING LBRACE listexp2 
-- On HASH reduce production appexp -> SYNTH appexp DEQARROW repexp USING LBRACE listexp2 
-- On GT reduce production appexp -> SYNTH appexp DEQARROW repexp USING LBRACE listexp2 
-- On GRAMMAR reduce production appexp -> SYNTH appexp DEQARROW repexp USING LBRACE listexp2 
-- On GET reduce production appexp -> SYNTH appexp DEQARROW repexp USING LBRACE listexp2 
-- On GEQ reduce production appexp -> SYNTH appexp DEQARROW repexp USING LBRACE listexp2 
-- On EQUAL reduce production appexp -> SYNTH appexp DEQARROW repexp USING LBRACE listexp2 
-- On EOF reduce production appexp -> SYNTH appexp DEQARROW repexp USING LBRACE listexp2 
-- On END reduce production appexp -> SYNTH appexp DEQARROW repexp USING LBRACE listexp2 
-- On DOT reduce production appexp -> SYNTH appexp DEQARROW repexp USING LBRACE listexp2 
-- On DOLLAR reduce production appexp -> SYNTH appexp DEQARROW repexp USING LBRACE listexp2 
-- On DEQARROW reduce production appexp -> SYNTH appexp DEQARROW repexp USING LBRACE listexp2 
-- On DARROW reduce production appexp -> SYNTH appexp DEQARROW repexp USING LBRACE listexp2 
-- On CSET reduce production appexp -> SYNTH appexp DEQARROW repexp USING LBRACE listexp2 
-- On CREATE reduce production appexp -> SYNTH appexp DEQARROW repexp USING LBRACE listexp2 
-- On COMMA reduce production appexp -> SYNTH appexp DEQARROW repexp USING LBRACE listexp2 
-- On COLON reduce production appexp -> SYNTH appexp DEQARROW repexp USING LBRACE listexp2 
-- On CHOOSE reduce production appexp -> SYNTH appexp DEQARROW repexp USING LBRACE listexp2 
-- On CHARACTER reduce production appexp -> SYNTH appexp DEQARROW repexp USING LBRACE listexp2 
-- On CEX reduce production appexp -> SYNTH appexp DEQARROW repexp USING LBRACE listexp2 
-- On CANONIZE reduce production appexp -> SYNTH appexp DEQARROW repexp USING LBRACE listexp2 
-- On BOOLEAN reduce production appexp -> SYNTH appexp DEQARROW repexp USING LBRACE listexp2 
-- On BEGIN reduce production appexp -> SYNTH appexp DEQARROW repexp USING LBRACE listexp2 
-- On BARBAR reduce production appexp -> SYNTH appexp DEQARROW repexp USING LBRACE listexp2 
-- On BAR reduce production appexp -> SYNTH appexp DEQARROW repexp USING LBRACE listexp2 
-- On ARROW reduce production appexp -> SYNTH appexp DEQARROW repexp USING LBRACE listexp2 
-- On AMPERSAND reduce production appexp -> SYNTH appexp DEQARROW repexp USING LBRACE listexp2 

State 443:
appexp -> appexp . repexp [ UIDENT STR RBRACE QUALIDENT NSET LPAREN LIDENT LANGLE INTEGER HASH GRAMMAR CSET COMMA CHARACTER CEX BOOLEAN BEGIN ]
listexp2 -> appexp . RBRACE [ WITH UIDENT TYPE TILDE TEST STR SEMI RPAREN RBRACK RBRACE RANGLE QUALIDENT PUT NSET MODULE MINUS LT LPAREN LIDENT LET LEQ LANGLE INTO INTEGER IN HASH GT GRAMMAR GET GEQ EQUAL EOF END DOT DOLLAR DEQARROW DARROW CSET CREATE COMMA COLON CHOOSE CHARACTER CEX CANONIZE BOOLEAN BEGIN BARBAR BAR ARROW AMPERSAND ]
listexp2 -> appexp . COMMA listexp2 [ WITH UIDENT TYPE TILDE TEST STR SEMI RPAREN RBRACK RBRACE RANGLE QUALIDENT PUT NSET MODULE MINUS LT LPAREN LIDENT LET LEQ LANGLE INTO INTEGER IN HASH GT GRAMMAR GET GEQ EQUAL EOF END DOT DOLLAR DEQARROW DARROW CSET CREATE COMMA COLON CHOOSE CHARACTER CEX CANONIZE BOOLEAN BEGIN BARBAR BAR ARROW AMPERSAND ]
-- On UIDENT shift to state 5
-- On STR shift to state 37
-- On RBRACE shift to state 444
-- On QUALIDENT shift to state 6
-- On NSET shift to state 43
-- On LPAREN shift to state 44
-- On LIDENT shift to state 7
-- On LANGLE shift to state 47
-- On INTEGER shift to state 49
-- On HASH shift to state 50
-- On GRAMMAR shift to state 75
-- On CSET shift to state 81
-- On COMMA shift to state 445
-- On CHARACTER shift to state 82
-- On CEX shift to state 83
-- On BOOLEAN shift to state 134
-- On BEGIN shift to state 135
-- On tyexp shift to state 136
-- On repexp shift to state 161
-- On qid shift to state 158
-- On matchexp shift to state 159
-- On aexp shift to state 162

State 444:
listexp2 -> appexp RBRACE . [ WITH UIDENT TYPE TILDE TEST STR SEMI RPAREN RBRACK RBRACE RANGLE QUALIDENT PUT NSET MODULE MINUS LT LPAREN LIDENT LET LEQ LANGLE INTO INTEGER IN HASH GT GRAMMAR GET GEQ EQUAL EOF END DOT DOLLAR DEQARROW DARROW CSET CREATE COMMA COLON CHOOSE CHARACTER CEX CANONIZE BOOLEAN BEGIN BARBAR BAR ARROW AMPERSAND ]
-- On WITH reduce production listexp2 -> appexp RBRACE 
-- On UIDENT reduce production listexp2 -> appexp RBRACE 
-- On TYPE reduce production listexp2 -> appexp RBRACE 
-- On TILDE reduce production listexp2 -> appexp RBRACE 
-- On TEST reduce production listexp2 -> appexp RBRACE 
-- On STR reduce production listexp2 -> appexp RBRACE 
-- On SEMI reduce production listexp2 -> appexp RBRACE 
-- On RPAREN reduce production listexp2 -> appexp RBRACE 
-- On RBRACK reduce production listexp2 -> appexp RBRACE 
-- On RBRACE reduce production listexp2 -> appexp RBRACE 
-- On RANGLE reduce production listexp2 -> appexp RBRACE 
-- On QUALIDENT reduce production listexp2 -> appexp RBRACE 
-- On PUT reduce production listexp2 -> appexp RBRACE 
-- On NSET reduce production listexp2 -> appexp RBRACE 
-- On MODULE reduce production listexp2 -> appexp RBRACE 
-- On MINUS reduce production listexp2 -> appexp RBRACE 
-- On LT reduce production listexp2 -> appexp RBRACE 
-- On LPAREN reduce production listexp2 -> appexp RBRACE 
-- On LIDENT reduce production listexp2 -> appexp RBRACE 
-- On LET reduce production listexp2 -> appexp RBRACE 
-- On LEQ reduce production listexp2 -> appexp RBRACE 
-- On LANGLE reduce production listexp2 -> appexp RBRACE 
-- On INTO reduce production listexp2 -> appexp RBRACE 
-- On INTEGER reduce production listexp2 -> appexp RBRACE 
-- On IN reduce production listexp2 -> appexp RBRACE 
-- On HASH reduce production listexp2 -> appexp RBRACE 
-- On GT reduce production listexp2 -> appexp RBRACE 
-- On GRAMMAR reduce production listexp2 -> appexp RBRACE 
-- On GET reduce production listexp2 -> appexp RBRACE 
-- On GEQ reduce production listexp2 -> appexp RBRACE 
-- On EQUAL reduce production listexp2 -> appexp RBRACE 
-- On EOF reduce production listexp2 -> appexp RBRACE 
-- On END reduce production listexp2 -> appexp RBRACE 
-- On DOT reduce production listexp2 -> appexp RBRACE 
-- On DOLLAR reduce production listexp2 -> appexp RBRACE 
-- On DEQARROW reduce production listexp2 -> appexp RBRACE 
-- On DARROW reduce production listexp2 -> appexp RBRACE 
-- On CSET reduce production listexp2 -> appexp RBRACE 
-- On CREATE reduce production listexp2 -> appexp RBRACE 
-- On COMMA reduce production listexp2 -> appexp RBRACE 
-- On COLON reduce production listexp2 -> appexp RBRACE 
-- On CHOOSE reduce production listexp2 -> appexp RBRACE 
-- On CHARACTER reduce production listexp2 -> appexp RBRACE 
-- On CEX reduce production listexp2 -> appexp RBRACE 
-- On CANONIZE reduce production listexp2 -> appexp RBRACE 
-- On BOOLEAN reduce production listexp2 -> appexp RBRACE 
-- On BEGIN reduce production listexp2 -> appexp RBRACE 
-- On BARBAR reduce production listexp2 -> appexp RBRACE 
-- On BAR reduce production listexp2 -> appexp RBRACE 
-- On ARROW reduce production listexp2 -> appexp RBRACE 
-- On AMPERSAND reduce production listexp2 -> appexp RBRACE 

State 445:
listexp2 -> appexp COMMA . listexp2 [ WITH UIDENT TYPE TILDE TEST STR SEMI RPAREN RBRACK RBRACE RANGLE QUALIDENT PUT NSET MODULE MINUS LT LPAREN LIDENT LET LEQ LANGLE INTO INTEGER IN HASH GT GRAMMAR GET GEQ EQUAL EOF END DOT DOLLAR DEQARROW DARROW CSET CREATE COMMA COLON CHOOSE CHARACTER CEX CANONIZE BOOLEAN BEGIN BARBAR BAR ARROW AMPERSAND ]
-- On UIDENT shift to state 5
-- On SYNTH shift to state 36
-- On STR shift to state 37
-- On SQUASH shift to state 38
-- On RBRACE shift to state 441
-- On QUALIDENT shift to state 6
-- On PROJECT shift to state 39
-- On PERM shift to state 40
-- On NSET shift to state 43
-- On LPAREN shift to state 44
-- On LIDENT shift to state 7
-- On LANGLE shift to state 47
-- On INTEGER shift to state 49
-- On HASH shift to state 50
-- On GRAMMAR shift to state 75
-- On CSET shift to state 81
-- On CHARACTER shift to state 82
-- On CEX shift to state 83
-- On BOOLEAN shift to state 134
-- On BEGIN shift to state 135
-- On tyexp shift to state 136
-- On repexp shift to state 157
-- On qid shift to state 158
-- On matchexp shift to state 159
-- On listexp2 shift to state 446
-- On appexp shift to state 443
-- On aexp shift to state 162

State 446:
listexp2 -> appexp COMMA listexp2 . [ WITH UIDENT TYPE TILDE TEST STR SEMI RPAREN RBRACK RBRACE RANGLE QUALIDENT PUT NSET MODULE MINUS LT LPAREN LIDENT LET LEQ LANGLE INTO INTEGER IN HASH GT GRAMMAR GET GEQ EQUAL EOF END DOT DOLLAR DEQARROW DARROW CSET CREATE COMMA COLON CHOOSE CHARACTER CEX CANONIZE BOOLEAN BEGIN BARBAR BAR ARROW AMPERSAND ]
-- On WITH reduce production listexp2 -> appexp COMMA listexp2 
-- On UIDENT reduce production listexp2 -> appexp COMMA listexp2 
-- On TYPE reduce production listexp2 -> appexp COMMA listexp2 
-- On TILDE reduce production listexp2 -> appexp COMMA listexp2 
-- On TEST reduce production listexp2 -> appexp COMMA listexp2 
-- On STR reduce production listexp2 -> appexp COMMA listexp2 
-- On SEMI reduce production listexp2 -> appexp COMMA listexp2 
-- On RPAREN reduce production listexp2 -> appexp COMMA listexp2 
-- On RBRACK reduce production listexp2 -> appexp COMMA listexp2 
-- On RBRACE reduce production listexp2 -> appexp COMMA listexp2 
-- On RANGLE reduce production listexp2 -> appexp COMMA listexp2 
-- On QUALIDENT reduce production listexp2 -> appexp COMMA listexp2 
-- On PUT reduce production listexp2 -> appexp COMMA listexp2 
-- On NSET reduce production listexp2 -> appexp COMMA listexp2 
-- On MODULE reduce production listexp2 -> appexp COMMA listexp2 
-- On MINUS reduce production listexp2 -> appexp COMMA listexp2 
-- On LT reduce production listexp2 -> appexp COMMA listexp2 
-- On LPAREN reduce production listexp2 -> appexp COMMA listexp2 
-- On LIDENT reduce production listexp2 -> appexp COMMA listexp2 
-- On LET reduce production listexp2 -> appexp COMMA listexp2 
-- On LEQ reduce production listexp2 -> appexp COMMA listexp2 
-- On LANGLE reduce production listexp2 -> appexp COMMA listexp2 
-- On INTO reduce production listexp2 -> appexp COMMA listexp2 
-- On INTEGER reduce production listexp2 -> appexp COMMA listexp2 
-- On IN reduce production listexp2 -> appexp COMMA listexp2 
-- On HASH reduce production listexp2 -> appexp COMMA listexp2 
-- On GT reduce production listexp2 -> appexp COMMA listexp2 
-- On GRAMMAR reduce production listexp2 -> appexp COMMA listexp2 
-- On GET reduce production listexp2 -> appexp COMMA listexp2 
-- On GEQ reduce production listexp2 -> appexp COMMA listexp2 
-- On EQUAL reduce production listexp2 -> appexp COMMA listexp2 
-- On EOF reduce production listexp2 -> appexp COMMA listexp2 
-- On END reduce production listexp2 -> appexp COMMA listexp2 
-- On DOT reduce production listexp2 -> appexp COMMA listexp2 
-- On DOLLAR reduce production listexp2 -> appexp COMMA listexp2 
-- On DEQARROW reduce production listexp2 -> appexp COMMA listexp2 
-- On DARROW reduce production listexp2 -> appexp COMMA listexp2 
-- On CSET reduce production listexp2 -> appexp COMMA listexp2 
-- On CREATE reduce production listexp2 -> appexp COMMA listexp2 
-- On COMMA reduce production listexp2 -> appexp COMMA listexp2 
-- On COLON reduce production listexp2 -> appexp COMMA listexp2 
-- On CHOOSE reduce production listexp2 -> appexp COMMA listexp2 
-- On CHARACTER reduce production listexp2 -> appexp COMMA listexp2 
-- On CEX reduce production listexp2 -> appexp COMMA listexp2 
-- On CANONIZE reduce production listexp2 -> appexp COMMA listexp2 
-- On BOOLEAN reduce production listexp2 -> appexp COMMA listexp2 
-- On BEGIN reduce production listexp2 -> appexp COMMA listexp2 
-- On BARBAR reduce production listexp2 -> appexp COMMA listexp2 
-- On BAR reduce production listexp2 -> appexp COMMA listexp2 
-- On ARROW reduce production listexp2 -> appexp COMMA listexp2 
-- On AMPERSAND reduce production listexp2 -> appexp COMMA listexp2 

State 447:
bsort -> LPAREN STRING IN exp . RPAREN [ WHERE TYPE TEST STAR RPAREN RBRACE RANGLE QUALIDENT MODULE LLIST LIDENT LET IN EQUAL EOF END DOLLAR COMMA BAR ARROW ]
-- On RPAREN shift to state 448

State 448:
bsort -> LPAREN STRING IN exp RPAREN . [ WHERE TYPE TEST STAR RPAREN RBRACE RANGLE QUALIDENT MODULE LLIST LIDENT LET IN EQUAL EOF END DOLLAR COMMA BAR ARROW ]
-- On WHERE reduce production bsort -> LPAREN STRING IN exp RPAREN 
-- On TYPE reduce production bsort -> LPAREN STRING IN exp RPAREN 
-- On TEST reduce production bsort -> LPAREN STRING IN exp RPAREN 
-- On STAR reduce production bsort -> LPAREN STRING IN exp RPAREN 
-- On RPAREN reduce production bsort -> LPAREN STRING IN exp RPAREN 
-- On RBRACE reduce production bsort -> LPAREN STRING IN exp RPAREN 
-- On RANGLE reduce production bsort -> LPAREN STRING IN exp RPAREN 
-- On QUALIDENT reduce production bsort -> LPAREN STRING IN exp RPAREN 
-- On MODULE reduce production bsort -> LPAREN STRING IN exp RPAREN 
-- On LLIST reduce production bsort -> LPAREN STRING IN exp RPAREN 
-- On LIDENT reduce production bsort -> LPAREN STRING IN exp RPAREN 
-- On LET reduce production bsort -> LPAREN STRING IN exp RPAREN 
-- On IN reduce production bsort -> LPAREN STRING IN exp RPAREN 
-- On EQUAL reduce production bsort -> LPAREN STRING IN exp RPAREN 
-- On EOF reduce production bsort -> LPAREN STRING IN exp RPAREN 
-- On END reduce production bsort -> LPAREN STRING IN exp RPAREN 
-- On DOLLAR reduce production bsort -> LPAREN STRING IN exp RPAREN 
-- On COMMA reduce production bsort -> LPAREN STRING IN exp RPAREN 
-- On BAR reduce production bsort -> LPAREN STRING IN exp RPAREN 
-- On ARROW reduce production bsort -> LPAREN STRING IN exp RPAREN 

State 449:
arrowsort -> LPAREN id . COLON productsort ARROW arrowsort RPAREN [ WHERE TYPE TEST RPAREN RBRACE RANGLE MODULE LLIST LET IN EQUAL EOF END DOLLAR COMMA BAR ]
bsort -> LPAREN id . COLON sort WHERE BANG exp RPAREN [ WHERE TYPE TEST STAR RPAREN RBRACE RANGLE QUALIDENT MODULE LLIST LIDENT LET IN EQUAL EOF END DOLLAR COMMA BAR ARROW ]
bsort -> LPAREN id . COLON sort WHERE exp RPAREN [ WHERE TYPE TEST STAR RPAREN RBRACE RANGLE QUALIDENT MODULE LLIST LIDENT LET IN EQUAL EOF END DOLLAR COMMA BAR ARROW ]
-- On COLON shift to state 450

State 450:
arrowsort -> LPAREN id COLON . productsort ARROW arrowsort RPAREN [ WHERE TYPE TEST RPAREN RBRACE RANGLE MODULE LLIST LET IN EQUAL EOF END DOLLAR COMMA BAR ]
bsort -> LPAREN id COLON . sort WHERE BANG exp RPAREN [ WHERE TYPE TEST STAR RPAREN RBRACE RANGLE QUALIDENT MODULE LLIST LIDENT LET IN EQUAL EOF END DOLLAR COMMA BAR ARROW ]
bsort -> LPAREN id COLON . sort WHERE exp RPAREN [ WHERE TYPE TEST STAR RPAREN RBRACE RANGLE QUALIDENT MODULE LLIST LIDENT LET IN EQUAL EOF END DOLLAR COMMA BAR ARROW ]
-- On UNIT shift to state 24
-- On TYVARIDENT shift to state 12
-- On STRINGPREFS shift to state 25
-- On STRINGLISTPREFS shift to state 26
-- On STRING shift to state 27
-- On SKELETONS shift to state 28
-- On RESOURCES shift to state 29
-- On REGEXP shift to state 30
-- On QUALIDENT shift to state 31
-- On LPAREN shift to state 32
-- On LIDENT shift to state 52
-- On LENS shift to state 53
-- On INTPREFS shift to state 54
-- On INT shift to state 55
-- On FORALL shift to state 56
-- On CHAR shift to state 59
-- On CANONIZER shift to state 60
-- On BOOLPREFS shift to state 61
-- On BOOL shift to state 62
-- On AREGEXP shift to state 63
-- On tyvar shift to state 64
-- On sort shift to state 378
-- On qvar shift to state 66
-- On productsort shift to state 451
-- On datatypesort shift to state 149
-- On bsort shift to state 150
-- On asort shift to state 152
-- On arrowsort shift to state 153

State 451:
arrowsort -> productsort . ARROW arrowsort [ WHERE ]
arrowsort -> LPAREN id COLON productsort . ARROW arrowsort RPAREN [ WHERE TYPE TEST RPAREN RBRACE RANGLE MODULE LLIST LET IN EQUAL EOF END DOLLAR COMMA BAR ]
arrowsort -> productsort . [ WHERE ]
productsort -> productsort . STAR datatypesort [ WHERE STAR ARROW ]
-- On STAR shift to state 68
-- On ARROW shift to state 452
-- On WHERE reduce production arrowsort -> productsort 

State 452:
arrowsort -> productsort ARROW . arrowsort [ WHERE ]
arrowsort -> LPAREN id COLON productsort ARROW . arrowsort RPAREN [ WHERE TYPE TEST RPAREN RBRACE RANGLE MODULE LLIST LET IN EQUAL EOF END DOLLAR COMMA BAR ]
-- On UNIT shift to state 24
-- On TYVARIDENT shift to state 12
-- On STRINGPREFS shift to state 25
-- On STRINGLISTPREFS shift to state 26
-- On STRING shift to state 27
-- On SKELETONS shift to state 28
-- On RESOURCES shift to state 29
-- On REGEXP shift to state 30
-- On QUALIDENT shift to state 31
-- On LPAREN shift to state 32
-- On LIDENT shift to state 52
-- On LENS shift to state 53
-- On INTPREFS shift to state 54
-- On INT shift to state 55
-- On CHAR shift to state 59
-- On CANONIZER shift to state 60
-- On BOOLPREFS shift to state 61
-- On BOOL shift to state 62
-- On AREGEXP shift to state 63
-- On tyvar shift to state 64
-- On qvar shift to state 66
-- On productsort shift to state 67
-- On datatypesort shift to state 149
-- On bsort shift to state 150
-- On asort shift to state 152
-- On arrowsort shift to state 453

State 453:
arrowsort -> productsort ARROW arrowsort . [ WHERE ]
arrowsort -> LPAREN id COLON productsort ARROW arrowsort . RPAREN [ WHERE TYPE TEST RPAREN RBRACE RANGLE MODULE LLIST LET IN EQUAL EOF END DOLLAR COMMA BAR ]
-- On RPAREN shift to state 454
-- On WHERE reduce production arrowsort -> productsort ARROW arrowsort 

State 454:
arrowsort -> LPAREN id COLON productsort ARROW arrowsort RPAREN . [ WHERE TYPE TEST RPAREN RBRACE RANGLE MODULE LLIST LET IN EQUAL EOF END DOLLAR COMMA BAR ]
-- On WHERE reduce production arrowsort -> LPAREN id COLON productsort ARROW arrowsort RPAREN 
-- On TYPE reduce production arrowsort -> LPAREN id COLON productsort ARROW arrowsort RPAREN 
-- On TEST reduce production arrowsort -> LPAREN id COLON productsort ARROW arrowsort RPAREN 
-- On RPAREN reduce production arrowsort -> LPAREN id COLON productsort ARROW arrowsort RPAREN 
-- On RBRACE reduce production arrowsort -> LPAREN id COLON productsort ARROW arrowsort RPAREN 
-- On RANGLE reduce production arrowsort -> LPAREN id COLON productsort ARROW arrowsort RPAREN 
-- On MODULE reduce production arrowsort -> LPAREN id COLON productsort ARROW arrowsort RPAREN 
-- On LLIST reduce production arrowsort -> LPAREN id COLON productsort ARROW arrowsort RPAREN 
-- On LET reduce production arrowsort -> LPAREN id COLON productsort ARROW arrowsort RPAREN 
-- On IN reduce production arrowsort -> LPAREN id COLON productsort ARROW arrowsort RPAREN 
-- On EQUAL reduce production arrowsort -> LPAREN id COLON productsort ARROW arrowsort RPAREN 
-- On EOF reduce production arrowsort -> LPAREN id COLON productsort ARROW arrowsort RPAREN 
-- On END reduce production arrowsort -> LPAREN id COLON productsort ARROW arrowsort RPAREN 
-- On DOLLAR reduce production arrowsort -> LPAREN id COLON productsort ARROW arrowsort RPAREN 
-- On COMMA reduce production arrowsort -> LPAREN id COLON productsort ARROW arrowsort RPAREN 
-- On BAR reduce production arrowsort -> LPAREN id COLON productsort ARROW arrowsort RPAREN 

State 455:
dtsort -> UIDENT OF sort . [ TYPE TEST MODULE LET EOF END BAR ]
-- On TYPE reduce production dtsort -> UIDENT OF sort 
-- On TEST reduce production dtsort -> UIDENT OF sort 
-- On MODULE reduce production dtsort -> UIDENT OF sort 
-- On LET reduce production dtsort -> UIDENT OF sort 
-- On EOF reduce production dtsort -> UIDENT OF sort 
-- On END reduce production dtsort -> UIDENT OF sort 
-- On BAR reduce production dtsort -> UIDENT OF sort 

State 456:
decls -> TYPE tyvar_list LIDENT EQUAL dtsort_list . decls [ EOF END ]
-- On TYPE shift to state 11
-- On TEST shift to state 457
-- On MODULE shift to state 463
-- On LET shift to state 466
-- On decls shift to state 499
-- On EOF reduce production decls -> 
-- On END reduce production decls -> 

State 457:
decls -> TEST . infixexp EQUAL test_res_exp decls [ EOF END ]
decls -> TEST . infixexp COLON test_res_sort decls [ EOF END ]
decls -> TEST . infixexp COLON ERROR decls [ EOF END ]
-- On UIDENT shift to state 5
-- On SYNTH shift to state 36
-- On STR shift to state 37
-- On SQUASH shift to state 38
-- On QUALIDENT shift to state 6
-- On PROJECT shift to state 39
-- On PERM shift to state 40
-- On NSET shift to state 43
-- On MINUS shift to state 46
-- On LPAREN shift to state 44
-- On LIDENT shift to state 7
-- On LANGLE shift to state 47
-- On INTEGER shift to state 49
-- On HASH shift to state 50
-- On GRAMMAR shift to state 75
-- On CSET shift to state 81
-- On CHARACTER shift to state 82
-- On CEX shift to state 83
-- On BOOLEAN shift to state 134
-- On BEGIN shift to state 135
-- On tyexp shift to state 136
-- On tildeexp shift to state 155
-- On rewriteexp shift to state 168
-- On repexp shift to state 157
-- On qid shift to state 158
-- On minusexp shift to state 178
-- On matchexp shift to state 159
-- On ltexp shift to state 179
-- On leqexp shift to state 180
-- On lenscomponentexp shift to state 181
-- On infixexp shift to state 458
-- On gtexp shift to state 185
-- On geqexp shift to state 186
-- On dotexp shift to state 188
-- On appexp shift to state 498
-- On ampexp shift to state 226
-- On ampampexp shift to state 229
-- On aexp shift to state 162

State 458:
decls -> TEST infixexp . EQUAL test_res_exp decls [ EOF END ]
decls -> TEST infixexp . COLON test_res_sort decls [ EOF END ]
decls -> TEST infixexp . COLON ERROR decls [ EOF END ]
minusexp -> infixexp . MINUS appexp [ MINUS EQUAL COLON ]
-- On MINUS shift to state 183
-- On EQUAL shift to state 459
-- On COLON shift to state 491

State 459:
decls -> TEST infixexp EQUAL . test_res_exp decls [ EOF END ]
-- On UIDENT shift to state 5
-- On SYNTH shift to state 36
-- On STR shift to state 37
-- On SQUASH shift to state 38
-- On QUALIDENT shift to state 6
-- On QMARK shift to state 460
-- On PROJECT shift to state 39
-- On PERM shift to state 40
-- On NSET shift to state 43
-- On LPAREN shift to state 44
-- On LIDENT shift to state 7
-- On LANGLE shift to state 47
-- On INTEGER shift to state 49
-- On HASH shift to state 50
-- On GRAMMAR shift to state 75
-- On ERROR shift to state 461
-- On CSET shift to state 81
-- On CHARACTER shift to state 82
-- On CEX shift to state 83
-- On BOOLEAN shift to state 134
-- On BEGIN shift to state 135
-- On tyexp shift to state 136
-- On test_res_exp shift to state 462
-- On repexp shift to state 157
-- On qid shift to state 158
-- On matchexp shift to state 159
-- On appexp shift to state 490
-- On aexp shift to state 162

State 460:
test_res_exp -> QMARK . [ TYPE TEST MODULE LET EOF END ]
-- On TYPE reduce production test_res_exp -> QMARK 
-- On TEST reduce production test_res_exp -> QMARK 
-- On MODULE reduce production test_res_exp -> QMARK 
-- On LET reduce production test_res_exp -> QMARK 
-- On EOF reduce production test_res_exp -> QMARK 
-- On END reduce production test_res_exp -> QMARK 

State 461:
test_res_exp -> ERROR . [ TYPE TEST MODULE LET EOF END ]
-- On TYPE reduce production test_res_exp -> ERROR 
-- On TEST reduce production test_res_exp -> ERROR 
-- On MODULE reduce production test_res_exp -> ERROR 
-- On LET reduce production test_res_exp -> ERROR 
-- On EOF reduce production test_res_exp -> ERROR 
-- On END reduce production test_res_exp -> ERROR 

State 462:
decls -> TEST infixexp EQUAL test_res_exp . decls [ EOF END ]
-- On TYPE shift to state 11
-- On TEST shift to state 457
-- On MODULE shift to state 463
-- On LET shift to state 466
-- On decls shift to state 489
-- On EOF reduce production decls -> 
-- On END reduce production decls -> 

State 463:
decls -> MODULE . UIDENT EQUAL decls END decls [ EOF END ]
-- On UIDENT shift to state 464

State 464:
decls -> MODULE UIDENT . EQUAL decls END decls [ EOF END ]
-- On EQUAL shift to state 465

State 465:
decls -> MODULE UIDENT EQUAL . decls END decls [ EOF END ]
-- On TYPE shift to state 11
-- On TEST shift to state 457
-- On MODULE shift to state 463
-- On LET shift to state 466
-- On decls shift to state 486
-- On END reduce production decls -> 

State 466:
decls -> LET . id param_list COLON sort EQUAL exp decls [ EOF END ]
decls -> LET . id param_list EQUAL exp decls [ EOF END ]
decls -> LET . letpat COLON sort EQUAL exp decls [ EOF END ]
decls -> LET . letpat EQUAL exp decls [ EOF END ]
-- On UNDERLINE shift to state 86
-- On UIDENT shift to state 87
-- On STR shift to state 88
-- On QUALIDENT shift to state 89
-- On LPAREN shift to state 92
-- On LIDENT shift to state 120
-- On INTEGER shift to state 95
-- On CEX shift to state 96
-- On BOOLEAN shift to state 99
-- On letpat shift to state 467
-- On id shift to state 476
-- On apat shift to state 315
-- On aapat shift to state 101

State 467:
decls -> LET letpat . COLON sort EQUAL exp decls [ EOF END ]
decls -> LET letpat . EQUAL exp decls [ EOF END ]
letpat -> letpat . COMMA lcpat [ EQUAL COMMA COLON ]
-- On EQUAL shift to state 468
-- On COMMA shift to state 295
-- On COLON shift to state 471

State 468:
decls -> LET letpat EQUAL . exp decls [ EOF END ]
-- On UIDENT shift to state 5
-- On SYNTH shift to state 36
-- On STR shift to state 37
-- On SQUASH shift to state 38
-- On QUALIDENT shift to state 6
-- On PROJECT shift to state 39
-- On PERM shift to state 40
-- On NSET shift to state 43
-- On MINUS shift to state 46
-- On MATCH shift to state 48
-- On LPAREN shift to state 44
-- On LIDENT shift to state 7
-- On LET shift to state 85
-- On LANGLE shift to state 47
-- On INTEGER shift to state 49
-- On HASH shift to state 50
-- On GRAMMAR shift to state 75
-- On FUN shift to state 123
-- On CSET shift to state 81
-- On CHARACTER shift to state 82
-- On CEX shift to state 83
-- On BOOLEAN shift to state 134
-- On BEGIN shift to state 135
-- On tyexp shift to state 136
-- On tildeexp shift to state 155
-- On rewriteexp shift to state 168
-- On repexp shift to state 157
-- On qid shift to state 158
-- On obarexp shift to state 176
-- On minusexp shift to state 178
-- On matchexp shift to state 159
-- On ltexp shift to state 179
-- On leqexp shift to state 180
-- On lenscomponentexp shift to state 181
-- On infixexp shift to state 182
-- On gtexp shift to state 185
-- On geqexp shift to state 186
-- On funexp shift to state 230
-- On exp shift to state 469
-- On equalexp shift to state 233
-- On dotexp shift to state 188
-- On dbarexp shift to state 238
-- On composeexp shift to state 241
-- On commaexp shift to state 247
-- On cexp shift to state 248
-- On barexp shift to state 246
-- On appexp shift to state 192
-- On ampexp shift to state 226
-- On ampampexp shift to state 229
-- On aexp shift to state 162

State 469:
decls -> LET letpat EQUAL exp . decls [ EOF END ]
-- On TYPE shift to state 11
-- On TEST shift to state 457
-- On MODULE shift to state 463
-- On LET shift to state 466
-- On decls shift to state 470
-- On EOF reduce production decls -> 
-- On END reduce production decls -> 

State 470:
decls -> LET letpat EQUAL exp decls . [ EOF END ]
-- On EOF reduce production decls -> LET letpat EQUAL exp decls 
-- On END reduce production decls -> LET letpat EQUAL exp decls 

State 471:
decls -> LET letpat COLON . sort EQUAL exp decls [ EOF END ]
-- On UNIT shift to state 24
-- On TYVARIDENT shift to state 12
-- On STRINGPREFS shift to state 25
-- On STRINGLISTPREFS shift to state 26
-- On STRING shift to state 27
-- On SKELETONS shift to state 28
-- On RESOURCES shift to state 29
-- On REGEXP shift to state 30
-- On QUALIDENT shift to state 31
-- On LPAREN shift to state 32
-- On LIDENT shift to state 52
-- On LENS shift to state 53
-- On INTPREFS shift to state 54
-- On INT shift to state 55
-- On FORALL shift to state 56
-- On CHAR shift to state 59
-- On CANONIZER shift to state 60
-- On BOOLPREFS shift to state 61
-- On BOOL shift to state 62
-- On AREGEXP shift to state 63
-- On tyvar shift to state 64
-- On sort shift to state 472
-- On qvar shift to state 66
-- On productsort shift to state 67
-- On datatypesort shift to state 149
-- On bsort shift to state 150
-- On asort shift to state 152
-- On arrowsort shift to state 153

State 472:
decls -> LET letpat COLON sort . EQUAL exp decls [ EOF END ]
-- On EQUAL shift to state 473

State 473:
decls -> LET letpat COLON sort EQUAL . exp decls [ EOF END ]
-- On UIDENT shift to state 5
-- On SYNTH shift to state 36
-- On STR shift to state 37
-- On SQUASH shift to state 38
-- On QUALIDENT shift to state 6
-- On PROJECT shift to state 39
-- On PERM shift to state 40
-- On NSET shift to state 43
-- On MINUS shift to state 46
-- On MATCH shift to state 48
-- On LPAREN shift to state 44
-- On LIDENT shift to state 7
-- On LET shift to state 85
-- On LANGLE shift to state 47
-- On INTEGER shift to state 49
-- On HASH shift to state 50
-- On GRAMMAR shift to state 75
-- On FUN shift to state 123
-- On CSET shift to state 81
-- On CHARACTER shift to state 82
-- On CEX shift to state 83
-- On BOOLEAN shift to state 134
-- On BEGIN shift to state 135
-- On tyexp shift to state 136
-- On tildeexp shift to state 155
-- On rewriteexp shift to state 168
-- On repexp shift to state 157
-- On qid shift to state 158
-- On obarexp shift to state 176
-- On minusexp shift to state 178
-- On matchexp shift to state 159
-- On ltexp shift to state 179
-- On leqexp shift to state 180
-- On lenscomponentexp shift to state 181
-- On infixexp shift to state 182
-- On gtexp shift to state 185
-- On geqexp shift to state 186
-- On funexp shift to state 230
-- On exp shift to state 474
-- On equalexp shift to state 233
-- On dotexp shift to state 188
-- On dbarexp shift to state 238
-- On composeexp shift to state 241
-- On commaexp shift to state 247
-- On cexp shift to state 248
-- On barexp shift to state 246
-- On appexp shift to state 192
-- On ampexp shift to state 226
-- On ampampexp shift to state 229
-- On aexp shift to state 162

State 474:
decls -> LET letpat COLON sort EQUAL exp . decls [ EOF END ]
-- On TYPE shift to state 11
-- On TEST shift to state 457
-- On MODULE shift to state 463
-- On LET shift to state 466
-- On decls shift to state 475
-- On EOF reduce production decls -> 
-- On END reduce production decls -> 

State 475:
decls -> LET letpat COLON sort EQUAL exp decls . [ EOF END ]
-- On EOF reduce production decls -> LET letpat COLON sort EQUAL exp decls 
-- On END reduce production decls -> LET letpat COLON sort EQUAL exp decls 

State 476:
decls -> LET id . param_list COLON sort EQUAL exp decls [ EOF END ]
decls -> LET id . param_list EQUAL exp decls [ EOF END ]
-- On TYVARIDENT shift to state 124
-- On LPAREN shift to state 125
-- On param_list shift to state 477
-- On param shift to state 288

State 477:
decls -> LET id param_list . COLON sort EQUAL exp decls [ EOF END ]
decls -> LET id param_list . EQUAL exp decls [ EOF END ]
-- On EQUAL shift to state 478
-- On COLON shift to state 481

State 478:
decls -> LET id param_list EQUAL . exp decls [ EOF END ]
-- On UIDENT shift to state 5
-- On SYNTH shift to state 36
-- On STR shift to state 37
-- On SQUASH shift to state 38
-- On QUALIDENT shift to state 6
-- On PROJECT shift to state 39
-- On PERM shift to state 40
-- On NSET shift to state 43
-- On MINUS shift to state 46
-- On MATCH shift to state 48
-- On LPAREN shift to state 44
-- On LIDENT shift to state 7
-- On LET shift to state 85
-- On LANGLE shift to state 47
-- On INTEGER shift to state 49
-- On HASH shift to state 50
-- On GRAMMAR shift to state 75
-- On FUN shift to state 123
-- On CSET shift to state 81
-- On CHARACTER shift to state 82
-- On CEX shift to state 83
-- On BOOLEAN shift to state 134
-- On BEGIN shift to state 135
-- On tyexp shift to state 136
-- On tildeexp shift to state 155
-- On rewriteexp shift to state 168
-- On repexp shift to state 157
-- On qid shift to state 158
-- On obarexp shift to state 176
-- On minusexp shift to state 178
-- On matchexp shift to state 159
-- On ltexp shift to state 179
-- On leqexp shift to state 180
-- On lenscomponentexp shift to state 181
-- On infixexp shift to state 182
-- On gtexp shift to state 185
-- On geqexp shift to state 186
-- On funexp shift to state 230
-- On exp shift to state 479
-- On equalexp shift to state 233
-- On dotexp shift to state 188
-- On dbarexp shift to state 238
-- On composeexp shift to state 241
-- On commaexp shift to state 247
-- On cexp shift to state 248
-- On barexp shift to state 246
-- On appexp shift to state 192
-- On ampexp shift to state 226
-- On ampampexp shift to state 229
-- On aexp shift to state 162

State 479:
decls -> LET id param_list EQUAL exp . decls [ EOF END ]
-- On TYPE shift to state 11
-- On TEST shift to state 457
-- On MODULE shift to state 463
-- On LET shift to state 466
-- On decls shift to state 480
-- On EOF reduce production decls -> 
-- On END reduce production decls -> 

State 480:
decls -> LET id param_list EQUAL exp decls . [ EOF END ]
-- On EOF reduce production decls -> LET id param_list EQUAL exp decls 
-- On END reduce production decls -> LET id param_list EQUAL exp decls 

State 481:
decls -> LET id param_list COLON . sort EQUAL exp decls [ EOF END ]
-- On UNIT shift to state 24
-- On TYVARIDENT shift to state 12
-- On STRINGPREFS shift to state 25
-- On STRINGLISTPREFS shift to state 26
-- On STRING shift to state 27
-- On SKELETONS shift to state 28
-- On RESOURCES shift to state 29
-- On REGEXP shift to state 30
-- On QUALIDENT shift to state 31
-- On LPAREN shift to state 32
-- On LIDENT shift to state 52
-- On LENS shift to state 53
-- On INTPREFS shift to state 54
-- On INT shift to state 55
-- On FORALL shift to state 56
-- On CHAR shift to state 59
-- On CANONIZER shift to state 60
-- On BOOLPREFS shift to state 61
-- On BOOL shift to state 62
-- On AREGEXP shift to state 63
-- On tyvar shift to state 64
-- On sort shift to state 482
-- On qvar shift to state 66
-- On productsort shift to state 67
-- On datatypesort shift to state 149
-- On bsort shift to state 150
-- On asort shift to state 152
-- On arrowsort shift to state 153

State 482:
decls -> LET id param_list COLON sort . EQUAL exp decls [ EOF END ]
-- On EQUAL shift to state 483

State 483:
decls -> LET id param_list COLON sort EQUAL . exp decls [ EOF END ]
-- On UIDENT shift to state 5
-- On SYNTH shift to state 36
-- On STR shift to state 37
-- On SQUASH shift to state 38
-- On QUALIDENT shift to state 6
-- On PROJECT shift to state 39
-- On PERM shift to state 40
-- On NSET shift to state 43
-- On MINUS shift to state 46
-- On MATCH shift to state 48
-- On LPAREN shift to state 44
-- On LIDENT shift to state 7
-- On LET shift to state 85
-- On LANGLE shift to state 47
-- On INTEGER shift to state 49
-- On HASH shift to state 50
-- On GRAMMAR shift to state 75
-- On FUN shift to state 123
-- On CSET shift to state 81
-- On CHARACTER shift to state 82
-- On CEX shift to state 83
-- On BOOLEAN shift to state 134
-- On BEGIN shift to state 135
-- On tyexp shift to state 136
-- On tildeexp shift to state 155
-- On rewriteexp shift to state 168
-- On repexp shift to state 157
-- On qid shift to state 158
-- On obarexp shift to state 176
-- On minusexp shift to state 178
-- On matchexp shift to state 159
-- On ltexp shift to state 179
-- On leqexp shift to state 180
-- On lenscomponentexp shift to state 181
-- On infixexp shift to state 182
-- On gtexp shift to state 185
-- On geqexp shift to state 186
-- On funexp shift to state 230
-- On exp shift to state 484
-- On equalexp shift to state 233
-- On dotexp shift to state 188
-- On dbarexp shift to state 238
-- On composeexp shift to state 241
-- On commaexp shift to state 247
-- On cexp shift to state 248
-- On barexp shift to state 246
-- On appexp shift to state 192
-- On ampexp shift to state 226
-- On ampampexp shift to state 229
-- On aexp shift to state 162

State 484:
decls -> LET id param_list COLON sort EQUAL exp . decls [ EOF END ]
-- On TYPE shift to state 11
-- On TEST shift to state 457
-- On MODULE shift to state 463
-- On LET shift to state 466
-- On decls shift to state 485
-- On EOF reduce production decls -> 
-- On END reduce production decls -> 

State 485:
decls -> LET id param_list COLON sort EQUAL exp decls . [ EOF END ]
-- On EOF reduce production decls -> LET id param_list COLON sort EQUAL exp decls 
-- On END reduce production decls -> LET id param_list COLON sort EQUAL exp decls 

State 486:
decls -> MODULE UIDENT EQUAL decls . END decls [ EOF END ]
-- On END shift to state 487

State 487:
decls -> MODULE UIDENT EQUAL decls END . decls [ EOF END ]
-- On TYPE shift to state 11
-- On TEST shift to state 457
-- On MODULE shift to state 463
-- On LET shift to state 466
-- On decls shift to state 488
-- On EOF reduce production decls -> 
-- On END reduce production decls -> 

State 488:
decls -> MODULE UIDENT EQUAL decls END decls . [ EOF END ]
-- On EOF reduce production decls -> MODULE UIDENT EQUAL decls END decls 
-- On END reduce production decls -> MODULE UIDENT EQUAL decls END decls 

State 489:
decls -> TEST infixexp EQUAL test_res_exp decls . [ EOF END ]
-- On EOF reduce production decls -> TEST infixexp EQUAL test_res_exp decls 
-- On END reduce production decls -> TEST infixexp EQUAL test_res_exp decls 

State 490:
appexp -> appexp . repexp [ UIDENT TYPE TEST STR QUALIDENT NSET MODULE LPAREN LIDENT LET LANGLE INTEGER HASH GRAMMAR EOF END CSET CHARACTER CEX BOOLEAN BEGIN ]
test_res_exp -> appexp . [ TYPE TEST MODULE LET EOF END ]
-- On UIDENT shift to state 5
-- On STR shift to state 37
-- On QUALIDENT shift to state 6
-- On NSET shift to state 43
-- On LPAREN shift to state 44
-- On LIDENT shift to state 7
-- On LANGLE shift to state 47
-- On INTEGER shift to state 49
-- On HASH shift to state 50
-- On GRAMMAR shift to state 75
-- On CSET shift to state 81
-- On CHARACTER shift to state 82
-- On CEX shift to state 83
-- On BOOLEAN shift to state 134
-- On BEGIN shift to state 135
-- On tyexp shift to state 136
-- On repexp shift to state 161
-- On qid shift to state 158
-- On matchexp shift to state 159
-- On aexp shift to state 162
-- On TYPE reduce production test_res_exp -> appexp 
-- On TEST reduce production test_res_exp -> appexp 
-- On MODULE reduce production test_res_exp -> appexp 
-- On LET reduce production test_res_exp -> appexp 
-- On EOF reduce production test_res_exp -> appexp 
-- On END reduce production test_res_exp -> appexp 

State 491:
decls -> TEST infixexp COLON . test_res_sort decls [ EOF END ]
decls -> TEST infixexp COLON . ERROR decls [ EOF END ]
-- On UNIT shift to state 24
-- On TYVARIDENT shift to state 12
-- On STRINGPREFS shift to state 25
-- On STRINGLISTPREFS shift to state 26
-- On STRING shift to state 27
-- On SKELETONS shift to state 28
-- On RESOURCES shift to state 29
-- On REGEXP shift to state 30
-- On QUALIDENT shift to state 31
-- On QMARK shift to state 492
-- On LPAREN shift to state 32
-- On LIDENT shift to state 52
-- On LENS shift to state 53
-- On INTPREFS shift to state 54
-- On INT shift to state 55
-- On FORALL shift to state 56
-- On ERROR shift to state 493
-- On CHAR shift to state 59
-- On CANONIZER shift to state 60
-- On BOOLPREFS shift to state 61
-- On BOOL shift to state 62
-- On AREGEXP shift to state 63
-- On tyvar shift to state 64
-- On test_res_sort shift to state 495
-- On sort shift to state 497
-- On qvar shift to state 66
-- On productsort shift to state 67
-- On datatypesort shift to state 149
-- On bsort shift to state 150
-- On asort shift to state 152
-- On arrowsort shift to state 153

State 492:
test_res_sort -> QMARK . [ TYPE TEST MODULE LET EOF END ]
-- On TYPE reduce production test_res_sort -> QMARK 
-- On TEST reduce production test_res_sort -> QMARK 
-- On MODULE reduce production test_res_sort -> QMARK 
-- On LET reduce production test_res_sort -> QMARK 
-- On EOF reduce production test_res_sort -> QMARK 
-- On END reduce production test_res_sort -> QMARK 

State 493:
decls -> TEST infixexp COLON ERROR . decls [ EOF END ]
-- On TYPE shift to state 11
-- On TEST shift to state 457
-- On MODULE shift to state 463
-- On LET shift to state 466
-- On decls shift to state 494
-- On EOF reduce production decls -> 
-- On END reduce production decls -> 

State 494:
decls -> TEST infixexp COLON ERROR decls . [ EOF END ]
-- On EOF reduce production decls -> TEST infixexp COLON ERROR decls 
-- On END reduce production decls -> TEST infixexp COLON ERROR decls 

State 495:
decls -> TEST infixexp COLON test_res_sort . decls [ EOF END ]
-- On TYPE shift to state 11
-- On TEST shift to state 457
-- On MODULE shift to state 463
-- On LET shift to state 466
-- On decls shift to state 496
-- On EOF reduce production decls -> 
-- On END reduce production decls -> 

State 496:
decls -> TEST infixexp COLON test_res_sort decls . [ EOF END ]
-- On EOF reduce production decls -> TEST infixexp COLON test_res_sort decls 
-- On END reduce production decls -> TEST infixexp COLON test_res_sort decls 

State 497:
test_res_sort -> sort . [ TYPE TEST MODULE LET EOF END ]
-- On TYPE reduce production test_res_sort -> sort 
-- On TEST reduce production test_res_sort -> sort 
-- On MODULE reduce production test_res_sort -> sort 
-- On LET reduce production test_res_sort -> sort 
-- On EOF reduce production test_res_sort -> sort 
-- On END reduce production test_res_sort -> sort 

State 498:
ampampexp -> appexp . AMPERSAND AMPERSAND ampampexp [ MINUS EQUAL COLON ]
ampampexp -> appexp . AMPERSAND AMPERSAND appexp [ MINUS EQUAL COLON ]
ampexp -> appexp . AMPERSAND appexp [ MINUS EQUAL COLON AMPERSAND ]
appexp -> appexp . repexp [ UIDENT TILDE STR QUALIDENT PUT NSET MINUS LT LPAREN LIDENT LEQ LANGLE INTEGER HASH GT GRAMMAR GET GEQ EQUAL DOT DEQARROW DARROW CSET CREATE COLON CHOOSE CHARACTER CEX CANONIZE BOOLEAN BEGIN AMPERSAND ]
dotexp -> appexp . DOT appexp [ MINUS EQUAL DOT COLON ]
dotexp -> appexp . DOT rewriteexp [ MINUS EQUAL DOT COLON ]
geqexp -> appexp . GEQ appexp [ MINUS EQUAL COLON ]
gtexp -> appexp . GT appexp [ MINUS EQUAL COLON ]
infixexp -> appexp . [ MINUS EQUAL COLON ]
lenscomponentexp -> appexp . GET appexp [ MINUS EQUAL COLON ]
lenscomponentexp -> appexp . PUT appexp INTO appexp [ MINUS EQUAL COLON ]
lenscomponentexp -> appexp . CREATE appexp [ MINUS EQUAL COLON ]
lenscomponentexp -> appexp . CANONIZE appexp [ MINUS EQUAL COLON ]
lenscomponentexp -> appexp . CHOOSE appexp [ MINUS EQUAL COLON ]
leqexp -> appexp . LEQ appexp [ MINUS EQUAL COLON ]
ltexp -> appexp . LT appexp [ MINUS EQUAL COLON ]
rewriteexp -> appexp . DARROW appexp [ MINUS EQUAL DOT COLON ]
rewriteexp -> appexp . DEQARROW appexp [ MINUS EQUAL DOT COLON ]
tildeexp -> appexp . TILDE appexp [ TILDE MINUS EQUAL COLON ]
-- On UIDENT shift to state 5
-- On TILDE shift to state 193
-- On STR shift to state 37
-- On QUALIDENT shift to state 6
-- On PUT shift to state 195
-- On NSET shift to state 43
-- On LT shift to state 199
-- On LPAREN shift to state 44
-- On LIDENT shift to state 7
-- On LEQ shift to state 201
-- On LANGLE shift to state 47
-- On INTEGER shift to state 49
-- On HASH shift to state 50
-- On GT shift to state 203
-- On GRAMMAR shift to state 75
-- On GET shift to state 205
-- On GEQ shift to state 207
-- On DOT shift to state 211
-- On DEQARROW shift to state 172
-- On DARROW shift to state 174
-- On CSET shift to state 81
-- On CREATE shift to state 214
-- On CHOOSE shift to state 216
-- On CHARACTER shift to state 82
-- On CEX shift to state 83
-- On CANONIZE shift to state 218
-- On BOOLEAN shift to state 134
-- On BEGIN shift to state 135
-- On AMPERSAND shift to state 220
-- On tyexp shift to state 136
-- On repexp shift to state 161
-- On qid shift to state 158
-- On matchexp shift to state 159
-- On aexp shift to state 162
-- On MINUS reduce production infixexp -> appexp 
-- On EQUAL reduce production infixexp -> appexp 
-- On COLON reduce production infixexp -> appexp 

State 499:
decls -> TYPE tyvar_list LIDENT EQUAL dtsort_list decls . [ EOF END ]
-- On EOF reduce production decls -> TYPE tyvar_list LIDENT EQUAL dtsort_list decls 
-- On END reduce production decls -> TYPE tyvar_list LIDENT EQUAL dtsort_list decls 

State 500:
dtsort_list -> dtsort . dtsort_list2 [ TYPE TEST MODULE LET EOF END ]
-- On BAR shift to state 501
-- On dtsort_list2 shift to state 504
-- On TYPE reduce production dtsort_list2 -> 
-- On TEST reduce production dtsort_list2 -> 
-- On MODULE reduce production dtsort_list2 -> 
-- On LET reduce production dtsort_list2 -> 
-- On EOF reduce production dtsort_list2 -> 
-- On END reduce production dtsort_list2 -> 

State 501:
dtsort_list2 -> BAR . dtsort dtsort_list2 [ TYPE TEST MODULE LET EOF END ]
-- On UIDENT shift to state 22
-- On dtsort shift to state 502

State 502:
dtsort_list2 -> BAR dtsort . dtsort_list2 [ TYPE TEST MODULE LET EOF END ]
-- On BAR shift to state 501
-- On dtsort_list2 shift to state 503
-- On TYPE reduce production dtsort_list2 -> 
-- On TEST reduce production dtsort_list2 -> 
-- On MODULE reduce production dtsort_list2 -> 
-- On LET reduce production dtsort_list2 -> 
-- On EOF reduce production dtsort_list2 -> 
-- On END reduce production dtsort_list2 -> 

State 503:
dtsort_list2 -> BAR dtsort dtsort_list2 . [ TYPE TEST MODULE LET EOF END ]
-- On TYPE reduce production dtsort_list2 -> BAR dtsort dtsort_list2 
-- On TEST reduce production dtsort_list2 -> BAR dtsort dtsort_list2 
-- On MODULE reduce production dtsort_list2 -> BAR dtsort dtsort_list2 
-- On LET reduce production dtsort_list2 -> BAR dtsort dtsort_list2 
-- On EOF reduce production dtsort_list2 -> BAR dtsort dtsort_list2 
-- On END reduce production dtsort_list2 -> BAR dtsort dtsort_list2 

State 504:
dtsort_list -> dtsort dtsort_list2 . [ TYPE TEST MODULE LET EOF END ]
-- On TYPE reduce production dtsort_list -> dtsort dtsort_list2 
-- On TEST reduce production dtsort_list -> dtsort dtsort_list2 
-- On MODULE reduce production dtsort_list -> dtsort dtsort_list2 
-- On LET reduce production dtsort_list -> dtsort dtsort_list2 
-- On EOF reduce production dtsort_list -> dtsort dtsort_list2 
-- On END reduce production dtsort_list -> dtsort dtsort_list2 

State 505:
tyvar_list -> tyvar . [ LIDENT ]
-- On LIDENT reduce production tyvar_list -> tyvar 

State 506:
modl -> MODULE UIDENT EQUAL opens decls . EOF [ # ]
-- On EOF shift to state 507

State 507:
modl -> MODULE UIDENT EQUAL opens decls EOF . [ # ]
-- On # reduce production modl -> MODULE UIDENT EQUAL opens decls EOF 

State 508:
modl' -> modl . [ # ]
-- On # accept modl

State 509:
qid' -> . qid [ # ]
-- On UIDENT shift to state 510
-- On QUALIDENT shift to state 511
-- On LIDENT shift to state 512
-- On qid shift to state 513

State 510:
qid -> UIDENT . [ # ]
-- On # reduce production qid -> UIDENT 

State 511:
qid -> QUALIDENT . [ # ]
-- On # reduce production qid -> QUALIDENT 

State 512:
qid -> LIDENT . [ # ]
-- On # reduce production qid -> LIDENT 

State 513:
qid' -> qid . [ # ]
-- On # accept qid

State 514:
uid' -> . uid [ # ]
-- On UIDENT shift to state 515
-- On uid shift to state 516

State 515:
uid -> UIDENT . [ # ]
-- On # reduce production uid -> UIDENT 

State 516:
uid' -> uid . [ # ]
-- On # accept uid

