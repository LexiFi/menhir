%{

open Ast

%}
%start debut
%token DOT
%token <string> LIDENT
%token SEP
%type <unit> debut
%%

inst:
  i = LIDENT e = expr
    {    ( () )}
| _1 = SEP i1 = inst i2 = inst
    {    ( () )}
| e = expr _2 = DOT
    {    ( () )}

expr:
  i = LIDENT
    {    ( () )}
| e = expr _2 = DOT
    {    ( () )}
| i = inst _2 = DOT e = expr
    {    ( () )}

debut:
  _1 = expr _2 = DOT
    {    ( () )}

%%
