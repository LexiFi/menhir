State 0:
translation_unit' -> . translation_unit [ # ]
-- On VOLATILE shift to state 1
-- On VOID shift to state 2
-- On UNSIGNED shift to state 3
-- On UNION shift to state 4
-- On TYPE_NAME shift to state 5
-- On TYPEDEF shift to state 6
-- On STRUCT shift to state 7
-- On STATIC shift to state 8
-- On STAR shift to state 9
-- On SIGNED shift to state 16
-- On SHORT shift to state 17
-- On REGISTER shift to state 18
-- On LPAREN shift to state 19
-- On LONG shift to state 25
-- On INT shift to state 26
-- On IDENTIFIER shift to state 20
-- On FLOAT shift to state 28
-- On EXTERN shift to state 29
-- On ENUM shift to state 30
-- On DOUBLE shift to state 143
-- On CONST shift to state 10
-- On CHAR shift to state 144
-- On AUTO shift to state 188
-- On type_specifier shift to state 189
-- On type_qualifier shift to state 190
-- On translation_unit shift to state 242
-- On struct_or_union_specifier shift to state 147
-- On struct_or_union shift to state 148
-- On storage_class_specifier shift to state 191
-- On pointer shift to state 21
-- On function_definition shift to state 243
-- On external_declaration shift to state 348
-- On enum_specifier shift to state 170
-- On direct_declarator shift to state 161
-- On declarator shift to state 245
-- On declaration_specifiers shift to state 342
-- On declaration shift to state 347

State 1:
type_qualifier -> VOLATILE . [ VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN REGISTER LPAREN LONG LBRACK INT IDENTIFIER FLOAT EXTERN ENUM DOUBLE CONST COMMA COLON CHAR AUTO ]
-- On VOLATILE reduce production type_qualifier -> VOLATILE
-- On VOID reduce production type_qualifier -> VOLATILE
-- On UNSIGNED reduce production type_qualifier -> VOLATILE
-- On UNION reduce production type_qualifier -> VOLATILE
-- On TYPE_NAME reduce production type_qualifier -> VOLATILE
-- On TYPEDEF reduce production type_qualifier -> VOLATILE
-- On STRUCT reduce production type_qualifier -> VOLATILE
-- On STATIC reduce production type_qualifier -> VOLATILE
-- On STAR reduce production type_qualifier -> VOLATILE
-- On SIGNED reduce production type_qualifier -> VOLATILE
-- On SHORT reduce production type_qualifier -> VOLATILE
-- On SEMICOLON reduce production type_qualifier -> VOLATILE
-- On RPAREN reduce production type_qualifier -> VOLATILE
-- On REGISTER reduce production type_qualifier -> VOLATILE
-- On LPAREN reduce production type_qualifier -> VOLATILE
-- On LONG reduce production type_qualifier -> VOLATILE
-- On LBRACK reduce production type_qualifier -> VOLATILE
-- On INT reduce production type_qualifier -> VOLATILE
-- On IDENTIFIER reduce production type_qualifier -> VOLATILE
-- On FLOAT reduce production type_qualifier -> VOLATILE
-- On EXTERN reduce production type_qualifier -> VOLATILE
-- On ENUM reduce production type_qualifier -> VOLATILE
-- On DOUBLE reduce production type_qualifier -> VOLATILE
-- On CONST reduce production type_qualifier -> VOLATILE
-- On COMMA reduce production type_qualifier -> VOLATILE
-- On COLON reduce production type_qualifier -> VOLATILE
-- On CHAR reduce production type_qualifier -> VOLATILE
-- On AUTO reduce production type_qualifier -> VOLATILE

State 2:
type_specifier -> VOID . [ VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN REGISTER LPAREN LONG LBRACK INT IDENTIFIER FLOAT EXTERN ENUM DOUBLE CONST COMMA COLON CHAR AUTO ]
-- On VOLATILE reduce production type_specifier -> VOID
-- On VOID reduce production type_specifier -> VOID
-- On UNSIGNED reduce production type_specifier -> VOID
-- On UNION reduce production type_specifier -> VOID
-- On TYPE_NAME reduce production type_specifier -> VOID
-- On TYPEDEF reduce production type_specifier -> VOID
-- On STRUCT reduce production type_specifier -> VOID
-- On STATIC reduce production type_specifier -> VOID
-- On STAR reduce production type_specifier -> VOID
-- On SIGNED reduce production type_specifier -> VOID
-- On SHORT reduce production type_specifier -> VOID
-- On SEMICOLON reduce production type_specifier -> VOID
-- On RPAREN reduce production type_specifier -> VOID
-- On REGISTER reduce production type_specifier -> VOID
-- On LPAREN reduce production type_specifier -> VOID
-- On LONG reduce production type_specifier -> VOID
-- On LBRACK reduce production type_specifier -> VOID
-- On INT reduce production type_specifier -> VOID
-- On IDENTIFIER reduce production type_specifier -> VOID
-- On FLOAT reduce production type_specifier -> VOID
-- On EXTERN reduce production type_specifier -> VOID
-- On ENUM reduce production type_specifier -> VOID
-- On DOUBLE reduce production type_specifier -> VOID
-- On CONST reduce production type_specifier -> VOID
-- On COMMA reduce production type_specifier -> VOID
-- On COLON reduce production type_specifier -> VOID
-- On CHAR reduce production type_specifier -> VOID
-- On AUTO reduce production type_specifier -> VOID

State 3:
type_specifier -> UNSIGNED . [ VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN REGISTER LPAREN LONG LBRACK INT IDENTIFIER FLOAT EXTERN ENUM DOUBLE CONST COMMA COLON CHAR AUTO ]
-- On VOLATILE reduce production type_specifier -> UNSIGNED
-- On VOID reduce production type_specifier -> UNSIGNED
-- On UNSIGNED reduce production type_specifier -> UNSIGNED
-- On UNION reduce production type_specifier -> UNSIGNED
-- On TYPE_NAME reduce production type_specifier -> UNSIGNED
-- On TYPEDEF reduce production type_specifier -> UNSIGNED
-- On STRUCT reduce production type_specifier -> UNSIGNED
-- On STATIC reduce production type_specifier -> UNSIGNED
-- On STAR reduce production type_specifier -> UNSIGNED
-- On SIGNED reduce production type_specifier -> UNSIGNED
-- On SHORT reduce production type_specifier -> UNSIGNED
-- On SEMICOLON reduce production type_specifier -> UNSIGNED
-- On RPAREN reduce production type_specifier -> UNSIGNED
-- On REGISTER reduce production type_specifier -> UNSIGNED
-- On LPAREN reduce production type_specifier -> UNSIGNED
-- On LONG reduce production type_specifier -> UNSIGNED
-- On LBRACK reduce production type_specifier -> UNSIGNED
-- On INT reduce production type_specifier -> UNSIGNED
-- On IDENTIFIER reduce production type_specifier -> UNSIGNED
-- On FLOAT reduce production type_specifier -> UNSIGNED
-- On EXTERN reduce production type_specifier -> UNSIGNED
-- On ENUM reduce production type_specifier -> UNSIGNED
-- On DOUBLE reduce production type_specifier -> UNSIGNED
-- On CONST reduce production type_specifier -> UNSIGNED
-- On COMMA reduce production type_specifier -> UNSIGNED
-- On COLON reduce production type_specifier -> UNSIGNED
-- On CHAR reduce production type_specifier -> UNSIGNED
-- On AUTO reduce production type_specifier -> UNSIGNED

State 4:
struct_or_union -> UNION . [ LBRACE IDENTIFIER ]
-- On LBRACE reduce production struct_or_union -> UNION
-- On IDENTIFIER reduce production struct_or_union -> UNION

State 5:
type_specifier -> TYPE_NAME . [ VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN REGISTER LPAREN LONG LBRACK INT IDENTIFIER FLOAT EXTERN ENUM DOUBLE CONST COMMA COLON CHAR AUTO ]
-- On VOLATILE reduce production type_specifier -> TYPE_NAME
-- On VOID reduce production type_specifier -> TYPE_NAME
-- On UNSIGNED reduce production type_specifier -> TYPE_NAME
-- On UNION reduce production type_specifier -> TYPE_NAME
-- On TYPE_NAME reduce production type_specifier -> TYPE_NAME
-- On TYPEDEF reduce production type_specifier -> TYPE_NAME
-- On STRUCT reduce production type_specifier -> TYPE_NAME
-- On STATIC reduce production type_specifier -> TYPE_NAME
-- On STAR reduce production type_specifier -> TYPE_NAME
-- On SIGNED reduce production type_specifier -> TYPE_NAME
-- On SHORT reduce production type_specifier -> TYPE_NAME
-- On SEMICOLON reduce production type_specifier -> TYPE_NAME
-- On RPAREN reduce production type_specifier -> TYPE_NAME
-- On REGISTER reduce production type_specifier -> TYPE_NAME
-- On LPAREN reduce production type_specifier -> TYPE_NAME
-- On LONG reduce production type_specifier -> TYPE_NAME
-- On LBRACK reduce production type_specifier -> TYPE_NAME
-- On INT reduce production type_specifier -> TYPE_NAME
-- On IDENTIFIER reduce production type_specifier -> TYPE_NAME
-- On FLOAT reduce production type_specifier -> TYPE_NAME
-- On EXTERN reduce production type_specifier -> TYPE_NAME
-- On ENUM reduce production type_specifier -> TYPE_NAME
-- On DOUBLE reduce production type_specifier -> TYPE_NAME
-- On CONST reduce production type_specifier -> TYPE_NAME
-- On COMMA reduce production type_specifier -> TYPE_NAME
-- On COLON reduce production type_specifier -> TYPE_NAME
-- On CHAR reduce production type_specifier -> TYPE_NAME
-- On AUTO reduce production type_specifier -> TYPE_NAME

State 6:
storage_class_specifier -> TYPEDEF . [ VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN REGISTER LPAREN LONG LBRACK INT IDENTIFIER FLOAT EXTERN ENUM DOUBLE CONST COMMA CHAR AUTO ]
-- On VOLATILE reduce production storage_class_specifier -> TYPEDEF
-- On VOID reduce production storage_class_specifier -> TYPEDEF
-- On UNSIGNED reduce production storage_class_specifier -> TYPEDEF
-- On UNION reduce production storage_class_specifier -> TYPEDEF
-- On TYPE_NAME reduce production storage_class_specifier -> TYPEDEF
-- On TYPEDEF reduce production storage_class_specifier -> TYPEDEF
-- On STRUCT reduce production storage_class_specifier -> TYPEDEF
-- On STATIC reduce production storage_class_specifier -> TYPEDEF
-- On STAR reduce production storage_class_specifier -> TYPEDEF
-- On SIGNED reduce production storage_class_specifier -> TYPEDEF
-- On SHORT reduce production storage_class_specifier -> TYPEDEF
-- On SEMICOLON reduce production storage_class_specifier -> TYPEDEF
-- On RPAREN reduce production storage_class_specifier -> TYPEDEF
-- On REGISTER reduce production storage_class_specifier -> TYPEDEF
-- On LPAREN reduce production storage_class_specifier -> TYPEDEF
-- On LONG reduce production storage_class_specifier -> TYPEDEF
-- On LBRACK reduce production storage_class_specifier -> TYPEDEF
-- On INT reduce production storage_class_specifier -> TYPEDEF
-- On IDENTIFIER reduce production storage_class_specifier -> TYPEDEF
-- On FLOAT reduce production storage_class_specifier -> TYPEDEF
-- On EXTERN reduce production storage_class_specifier -> TYPEDEF
-- On ENUM reduce production storage_class_specifier -> TYPEDEF
-- On DOUBLE reduce production storage_class_specifier -> TYPEDEF
-- On CONST reduce production storage_class_specifier -> TYPEDEF
-- On COMMA reduce production storage_class_specifier -> TYPEDEF
-- On CHAR reduce production storage_class_specifier -> TYPEDEF
-- On AUTO reduce production storage_class_specifier -> TYPEDEF

State 7:
struct_or_union -> STRUCT . [ LBRACE IDENTIFIER ]
-- On LBRACE reduce production struct_or_union -> STRUCT
-- On IDENTIFIER reduce production struct_or_union -> STRUCT

State 8:
storage_class_specifier -> STATIC . [ VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN REGISTER LPAREN LONG LBRACK INT IDENTIFIER FLOAT EXTERN ENUM DOUBLE CONST COMMA CHAR AUTO ]
-- On VOLATILE reduce production storage_class_specifier -> STATIC
-- On VOID reduce production storage_class_specifier -> STATIC
-- On UNSIGNED reduce production storage_class_specifier -> STATIC
-- On UNION reduce production storage_class_specifier -> STATIC
-- On TYPE_NAME reduce production storage_class_specifier -> STATIC
-- On TYPEDEF reduce production storage_class_specifier -> STATIC
-- On STRUCT reduce production storage_class_specifier -> STATIC
-- On STATIC reduce production storage_class_specifier -> STATIC
-- On STAR reduce production storage_class_specifier -> STATIC
-- On SIGNED reduce production storage_class_specifier -> STATIC
-- On SHORT reduce production storage_class_specifier -> STATIC
-- On SEMICOLON reduce production storage_class_specifier -> STATIC
-- On RPAREN reduce production storage_class_specifier -> STATIC
-- On REGISTER reduce production storage_class_specifier -> STATIC
-- On LPAREN reduce production storage_class_specifier -> STATIC
-- On LONG reduce production storage_class_specifier -> STATIC
-- On LBRACK reduce production storage_class_specifier -> STATIC
-- On INT reduce production storage_class_specifier -> STATIC
-- On IDENTIFIER reduce production storage_class_specifier -> STATIC
-- On FLOAT reduce production storage_class_specifier -> STATIC
-- On EXTERN reduce production storage_class_specifier -> STATIC
-- On ENUM reduce production storage_class_specifier -> STATIC
-- On DOUBLE reduce production storage_class_specifier -> STATIC
-- On CONST reduce production storage_class_specifier -> STATIC
-- On COMMA reduce production storage_class_specifier -> STATIC
-- On CHAR reduce production storage_class_specifier -> STATIC
-- On AUTO reduce production storage_class_specifier -> STATIC

State 9:
pointer -> STAR . [ RPAREN LPAREN LBRACK IDENTIFIER COMMA ]
pointer -> STAR . type_qualifier_list [ RPAREN LPAREN LBRACK IDENTIFIER COMMA ]
pointer -> STAR . pointer [ RPAREN LPAREN LBRACK IDENTIFIER COMMA ]
pointer -> STAR . type_qualifier_list pointer [ RPAREN LPAREN LBRACK IDENTIFIER COMMA ]
-- On VOLATILE shift to state 1
-- On STAR shift to state 9
-- On CONST shift to state 10
-- On type_qualifier_list shift to state 11
-- On type_qualifier shift to state 14
-- On pointer shift to state 15
-- On RPAREN reduce production pointer -> STAR
-- On LPAREN reduce production pointer -> STAR
-- On LBRACK reduce production pointer -> STAR
-- On IDENTIFIER reduce production pointer -> STAR
-- On COMMA reduce production pointer -> STAR

State 10:
type_qualifier -> CONST . [ VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN REGISTER LPAREN LONG LBRACK INT IDENTIFIER FLOAT EXTERN ENUM DOUBLE CONST COMMA COLON CHAR AUTO ]
-- On VOLATILE reduce production type_qualifier -> CONST
-- On VOID reduce production type_qualifier -> CONST
-- On UNSIGNED reduce production type_qualifier -> CONST
-- On UNION reduce production type_qualifier -> CONST
-- On TYPE_NAME reduce production type_qualifier -> CONST
-- On TYPEDEF reduce production type_qualifier -> CONST
-- On STRUCT reduce production type_qualifier -> CONST
-- On STATIC reduce production type_qualifier -> CONST
-- On STAR reduce production type_qualifier -> CONST
-- On SIGNED reduce production type_qualifier -> CONST
-- On SHORT reduce production type_qualifier -> CONST
-- On SEMICOLON reduce production type_qualifier -> CONST
-- On RPAREN reduce production type_qualifier -> CONST
-- On REGISTER reduce production type_qualifier -> CONST
-- On LPAREN reduce production type_qualifier -> CONST
-- On LONG reduce production type_qualifier -> CONST
-- On LBRACK reduce production type_qualifier -> CONST
-- On INT reduce production type_qualifier -> CONST
-- On IDENTIFIER reduce production type_qualifier -> CONST
-- On FLOAT reduce production type_qualifier -> CONST
-- On EXTERN reduce production type_qualifier -> CONST
-- On ENUM reduce production type_qualifier -> CONST
-- On DOUBLE reduce production type_qualifier -> CONST
-- On CONST reduce production type_qualifier -> CONST
-- On COMMA reduce production type_qualifier -> CONST
-- On COLON reduce production type_qualifier -> CONST
-- On CHAR reduce production type_qualifier -> CONST
-- On AUTO reduce production type_qualifier -> CONST

State 11:
pointer -> STAR type_qualifier_list . [ RPAREN LPAREN LBRACK IDENTIFIER COMMA ]
pointer -> STAR type_qualifier_list . pointer [ RPAREN LPAREN LBRACK IDENTIFIER COMMA ]
type_qualifier_list -> type_qualifier_list . type_qualifier [ VOLATILE STAR RPAREN LPAREN LBRACK IDENTIFIER CONST COMMA ]
-- On VOLATILE shift to state 1
-- On STAR shift to state 9
-- On CONST shift to state 10
-- On type_qualifier shift to state 12
-- On pointer shift to state 13
-- On RPAREN reduce production pointer -> STAR type_qualifier_list
-- On LPAREN reduce production pointer -> STAR type_qualifier_list
-- On LBRACK reduce production pointer -> STAR type_qualifier_list
-- On IDENTIFIER reduce production pointer -> STAR type_qualifier_list
-- On COMMA reduce production pointer -> STAR type_qualifier_list

State 12:
type_qualifier_list -> type_qualifier_list type_qualifier . [ VOLATILE STAR RPAREN LPAREN LBRACK IDENTIFIER CONST COMMA ]
-- On VOLATILE reduce production type_qualifier_list -> type_qualifier_list type_qualifier
-- On STAR reduce production type_qualifier_list -> type_qualifier_list type_qualifier
-- On RPAREN reduce production type_qualifier_list -> type_qualifier_list type_qualifier
-- On LPAREN reduce production type_qualifier_list -> type_qualifier_list type_qualifier
-- On LBRACK reduce production type_qualifier_list -> type_qualifier_list type_qualifier
-- On IDENTIFIER reduce production type_qualifier_list -> type_qualifier_list type_qualifier
-- On CONST reduce production type_qualifier_list -> type_qualifier_list type_qualifier
-- On COMMA reduce production type_qualifier_list -> type_qualifier_list type_qualifier

State 13:
pointer -> STAR type_qualifier_list pointer . [ RPAREN LPAREN LBRACK IDENTIFIER COMMA ]
-- On RPAREN reduce production pointer -> STAR type_qualifier_list pointer
-- On LPAREN reduce production pointer -> STAR type_qualifier_list pointer
-- On LBRACK reduce production pointer -> STAR type_qualifier_list pointer
-- On IDENTIFIER reduce production pointer -> STAR type_qualifier_list pointer
-- On COMMA reduce production pointer -> STAR type_qualifier_list pointer

State 14:
type_qualifier_list -> type_qualifier . [ VOLATILE STAR RPAREN LPAREN LBRACK IDENTIFIER CONST COMMA ]
-- On VOLATILE reduce production type_qualifier_list -> type_qualifier
-- On STAR reduce production type_qualifier_list -> type_qualifier
-- On RPAREN reduce production type_qualifier_list -> type_qualifier
-- On LPAREN reduce production type_qualifier_list -> type_qualifier
-- On LBRACK reduce production type_qualifier_list -> type_qualifier
-- On IDENTIFIER reduce production type_qualifier_list -> type_qualifier
-- On CONST reduce production type_qualifier_list -> type_qualifier
-- On COMMA reduce production type_qualifier_list -> type_qualifier

State 15:
pointer -> STAR pointer . [ RPAREN LPAREN LBRACK IDENTIFIER COMMA ]
-- On RPAREN reduce production pointer -> STAR pointer
-- On LPAREN reduce production pointer -> STAR pointer
-- On LBRACK reduce production pointer -> STAR pointer
-- On IDENTIFIER reduce production pointer -> STAR pointer
-- On COMMA reduce production pointer -> STAR pointer

State 16:
type_specifier -> SIGNED . [ VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN REGISTER LPAREN LONG LBRACK INT IDENTIFIER FLOAT EXTERN ENUM DOUBLE CONST COMMA COLON CHAR AUTO ]
-- On VOLATILE reduce production type_specifier -> SIGNED
-- On VOID reduce production type_specifier -> SIGNED
-- On UNSIGNED reduce production type_specifier -> SIGNED
-- On UNION reduce production type_specifier -> SIGNED
-- On TYPE_NAME reduce production type_specifier -> SIGNED
-- On TYPEDEF reduce production type_specifier -> SIGNED
-- On STRUCT reduce production type_specifier -> SIGNED
-- On STATIC reduce production type_specifier -> SIGNED
-- On STAR reduce production type_specifier -> SIGNED
-- On SIGNED reduce production type_specifier -> SIGNED
-- On SHORT reduce production type_specifier -> SIGNED
-- On SEMICOLON reduce production type_specifier -> SIGNED
-- On RPAREN reduce production type_specifier -> SIGNED
-- On REGISTER reduce production type_specifier -> SIGNED
-- On LPAREN reduce production type_specifier -> SIGNED
-- On LONG reduce production type_specifier -> SIGNED
-- On LBRACK reduce production type_specifier -> SIGNED
-- On INT reduce production type_specifier -> SIGNED
-- On IDENTIFIER reduce production type_specifier -> SIGNED
-- On FLOAT reduce production type_specifier -> SIGNED
-- On EXTERN reduce production type_specifier -> SIGNED
-- On ENUM reduce production type_specifier -> SIGNED
-- On DOUBLE reduce production type_specifier -> SIGNED
-- On CONST reduce production type_specifier -> SIGNED
-- On COMMA reduce production type_specifier -> SIGNED
-- On COLON reduce production type_specifier -> SIGNED
-- On CHAR reduce production type_specifier -> SIGNED
-- On AUTO reduce production type_specifier -> SIGNED

State 17:
type_specifier -> SHORT . [ VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN REGISTER LPAREN LONG LBRACK INT IDENTIFIER FLOAT EXTERN ENUM DOUBLE CONST COMMA COLON CHAR AUTO ]
-- On VOLATILE reduce production type_specifier -> SHORT
-- On VOID reduce production type_specifier -> SHORT
-- On UNSIGNED reduce production type_specifier -> SHORT
-- On UNION reduce production type_specifier -> SHORT
-- On TYPE_NAME reduce production type_specifier -> SHORT
-- On TYPEDEF reduce production type_specifier -> SHORT
-- On STRUCT reduce production type_specifier -> SHORT
-- On STATIC reduce production type_specifier -> SHORT
-- On STAR reduce production type_specifier -> SHORT
-- On SIGNED reduce production type_specifier -> SHORT
-- On SHORT reduce production type_specifier -> SHORT
-- On SEMICOLON reduce production type_specifier -> SHORT
-- On RPAREN reduce production type_specifier -> SHORT
-- On REGISTER reduce production type_specifier -> SHORT
-- On LPAREN reduce production type_specifier -> SHORT
-- On LONG reduce production type_specifier -> SHORT
-- On LBRACK reduce production type_specifier -> SHORT
-- On INT reduce production type_specifier -> SHORT
-- On IDENTIFIER reduce production type_specifier -> SHORT
-- On FLOAT reduce production type_specifier -> SHORT
-- On EXTERN reduce production type_specifier -> SHORT
-- On ENUM reduce production type_specifier -> SHORT
-- On DOUBLE reduce production type_specifier -> SHORT
-- On CONST reduce production type_specifier -> SHORT
-- On COMMA reduce production type_specifier -> SHORT
-- On COLON reduce production type_specifier -> SHORT
-- On CHAR reduce production type_specifier -> SHORT
-- On AUTO reduce production type_specifier -> SHORT

State 18:
storage_class_specifier -> REGISTER . [ VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN REGISTER LPAREN LONG LBRACK INT IDENTIFIER FLOAT EXTERN ENUM DOUBLE CONST COMMA CHAR AUTO ]
-- On VOLATILE reduce production storage_class_specifier -> REGISTER
-- On VOID reduce production storage_class_specifier -> REGISTER
-- On UNSIGNED reduce production storage_class_specifier -> REGISTER
-- On UNION reduce production storage_class_specifier -> REGISTER
-- On TYPE_NAME reduce production storage_class_specifier -> REGISTER
-- On TYPEDEF reduce production storage_class_specifier -> REGISTER
-- On STRUCT reduce production storage_class_specifier -> REGISTER
-- On STATIC reduce production storage_class_specifier -> REGISTER
-- On STAR reduce production storage_class_specifier -> REGISTER
-- On SIGNED reduce production storage_class_specifier -> REGISTER
-- On SHORT reduce production storage_class_specifier -> REGISTER
-- On SEMICOLON reduce production storage_class_specifier -> REGISTER
-- On RPAREN reduce production storage_class_specifier -> REGISTER
-- On REGISTER reduce production storage_class_specifier -> REGISTER
-- On LPAREN reduce production storage_class_specifier -> REGISTER
-- On LONG reduce production storage_class_specifier -> REGISTER
-- On LBRACK reduce production storage_class_specifier -> REGISTER
-- On INT reduce production storage_class_specifier -> REGISTER
-- On IDENTIFIER reduce production storage_class_specifier -> REGISTER
-- On FLOAT reduce production storage_class_specifier -> REGISTER
-- On EXTERN reduce production storage_class_specifier -> REGISTER
-- On ENUM reduce production storage_class_specifier -> REGISTER
-- On DOUBLE reduce production storage_class_specifier -> REGISTER
-- On CONST reduce production storage_class_specifier -> REGISTER
-- On COMMA reduce production storage_class_specifier -> REGISTER
-- On CHAR reduce production storage_class_specifier -> REGISTER
-- On AUTO reduce production storage_class_specifier -> REGISTER

State 19:
direct_declarator -> LPAREN . declarator RPAREN [ VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF STRUCT STATIC SIGNED SHORT SEMICOLON RPAREN REGISTER LPAREN LONG LBRACK LBRACE INT FLOAT EXTERN EQUAL ENUM DOUBLE CONST COMMA COLON CHAR AUTO ]
-- On STAR shift to state 9
-- On LPAREN shift to state 19
-- On IDENTIFIER shift to state 20
-- On pointer shift to state 21
-- On direct_declarator shift to state 161
-- On declarator shift to state 216

State 20:
direct_declarator -> IDENTIFIER . [ VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF STRUCT STATIC SIGNED SHORT SEMICOLON RPAREN REGISTER LPAREN LONG LBRACK LBRACE INT FLOAT EXTERN EQUAL ENUM DOUBLE CONST COMMA COLON CHAR AUTO ]
-- On VOLATILE reduce production direct_declarator -> IDENTIFIER
-- On VOID reduce production direct_declarator -> IDENTIFIER
-- On UNSIGNED reduce production direct_declarator -> IDENTIFIER
-- On UNION reduce production direct_declarator -> IDENTIFIER
-- On TYPE_NAME reduce production direct_declarator -> IDENTIFIER
-- On TYPEDEF reduce production direct_declarator -> IDENTIFIER
-- On STRUCT reduce production direct_declarator -> IDENTIFIER
-- On STATIC reduce production direct_declarator -> IDENTIFIER
-- On SIGNED reduce production direct_declarator -> IDENTIFIER
-- On SHORT reduce production direct_declarator -> IDENTIFIER
-- On SEMICOLON reduce production direct_declarator -> IDENTIFIER
-- On RPAREN reduce production direct_declarator -> IDENTIFIER
-- On REGISTER reduce production direct_declarator -> IDENTIFIER
-- On LPAREN reduce production direct_declarator -> IDENTIFIER
-- On LONG reduce production direct_declarator -> IDENTIFIER
-- On LBRACK reduce production direct_declarator -> IDENTIFIER
-- On LBRACE reduce production direct_declarator -> IDENTIFIER
-- On INT reduce production direct_declarator -> IDENTIFIER
-- On FLOAT reduce production direct_declarator -> IDENTIFIER
-- On EXTERN reduce production direct_declarator -> IDENTIFIER
-- On EQUAL reduce production direct_declarator -> IDENTIFIER
-- On ENUM reduce production direct_declarator -> IDENTIFIER
-- On DOUBLE reduce production direct_declarator -> IDENTIFIER
-- On CONST reduce production direct_declarator -> IDENTIFIER
-- On COMMA reduce production direct_declarator -> IDENTIFIER
-- On COLON reduce production direct_declarator -> IDENTIFIER
-- On CHAR reduce production direct_declarator -> IDENTIFIER
-- On AUTO reduce production direct_declarator -> IDENTIFIER

State 21:
declarator -> pointer . direct_declarator [ VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF STRUCT STATIC SIGNED SHORT SEMICOLON RPAREN REGISTER LONG LBRACE INT FLOAT EXTERN EQUAL ENUM DOUBLE CONST COMMA COLON CHAR AUTO ]
-- On LPAREN shift to state 19
-- On IDENTIFIER shift to state 20
-- On direct_declarator shift to state 22

State 22:
declarator -> pointer direct_declarator . [ VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF STRUCT STATIC SIGNED SHORT SEMICOLON RPAREN REGISTER LONG LBRACE INT FLOAT EXTERN EQUAL ENUM DOUBLE CONST COMMA COLON CHAR AUTO ]
direct_declarator -> direct_declarator . LBRACK constant_expression RBRACK [ VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF STRUCT STATIC SIGNED SHORT SEMICOLON RPAREN REGISTER LPAREN LONG LBRACK LBRACE INT FLOAT EXTERN EQUAL ENUM DOUBLE CONST COMMA COLON CHAR AUTO ]
direct_declarator -> direct_declarator . LBRACK RBRACK [ VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF STRUCT STATIC SIGNED SHORT SEMICOLON RPAREN REGISTER LPAREN LONG LBRACK LBRACE INT FLOAT EXTERN EQUAL ENUM DOUBLE CONST COMMA COLON CHAR AUTO ]
direct_declarator -> direct_declarator . LPAREN parameter_type_list RPAREN [ VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF STRUCT STATIC SIGNED SHORT SEMICOLON RPAREN REGISTER LPAREN LONG LBRACK LBRACE INT FLOAT EXTERN EQUAL ENUM DOUBLE CONST COMMA COLON CHAR AUTO ]
direct_declarator -> direct_declarator . LPAREN identifier_list RPAREN [ VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF STRUCT STATIC SIGNED SHORT SEMICOLON RPAREN REGISTER LPAREN LONG LBRACK LBRACE INT FLOAT EXTERN EQUAL ENUM DOUBLE CONST COMMA COLON CHAR AUTO ]
direct_declarator -> direct_declarator . LPAREN RPAREN [ VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF STRUCT STATIC SIGNED SHORT SEMICOLON RPAREN REGISTER LPAREN LONG LBRACK LBRACE INT FLOAT EXTERN EQUAL ENUM DOUBLE CONST COMMA COLON CHAR AUTO ]
-- On LPAREN shift to state 23
-- On LBRACK shift to state 162
-- On VOLATILE reduce production declarator -> pointer direct_declarator
-- On VOID reduce production declarator -> pointer direct_declarator
-- On UNSIGNED reduce production declarator -> pointer direct_declarator
-- On UNION reduce production declarator -> pointer direct_declarator
-- On TYPE_NAME reduce production declarator -> pointer direct_declarator
-- On TYPEDEF reduce production declarator -> pointer direct_declarator
-- On STRUCT reduce production declarator -> pointer direct_declarator
-- On STATIC reduce production declarator -> pointer direct_declarator
-- On SIGNED reduce production declarator -> pointer direct_declarator
-- On SHORT reduce production declarator -> pointer direct_declarator
-- On SEMICOLON reduce production declarator -> pointer direct_declarator
-- On RPAREN reduce production declarator -> pointer direct_declarator
-- On REGISTER reduce production declarator -> pointer direct_declarator
-- On LONG reduce production declarator -> pointer direct_declarator
-- On LBRACE reduce production declarator -> pointer direct_declarator
-- On INT reduce production declarator -> pointer direct_declarator
-- On FLOAT reduce production declarator -> pointer direct_declarator
-- On EXTERN reduce production declarator -> pointer direct_declarator
-- On EQUAL reduce production declarator -> pointer direct_declarator
-- On ENUM reduce production declarator -> pointer direct_declarator
-- On DOUBLE reduce production declarator -> pointer direct_declarator
-- On CONST reduce production declarator -> pointer direct_declarator
-- On COMMA reduce production declarator -> pointer direct_declarator
-- On COLON reduce production declarator -> pointer direct_declarator
-- On CHAR reduce production declarator -> pointer direct_declarator
-- On AUTO reduce production declarator -> pointer direct_declarator

State 23:
direct_declarator -> direct_declarator LPAREN . parameter_type_list RPAREN [ VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF STRUCT STATIC SIGNED SHORT SEMICOLON RPAREN REGISTER LPAREN LONG LBRACK LBRACE INT FLOAT EXTERN EQUAL ENUM DOUBLE CONST COMMA COLON CHAR AUTO ]
direct_declarator -> direct_declarator LPAREN . identifier_list RPAREN [ VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF STRUCT STATIC SIGNED SHORT SEMICOLON RPAREN REGISTER LPAREN LONG LBRACK LBRACE INT FLOAT EXTERN EQUAL ENUM DOUBLE CONST COMMA COLON CHAR AUTO ]
direct_declarator -> direct_declarator LPAREN . RPAREN [ VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF STRUCT STATIC SIGNED SHORT SEMICOLON RPAREN REGISTER LPAREN LONG LBRACK LBRACE INT FLOAT EXTERN EQUAL ENUM DOUBLE CONST COMMA COLON CHAR AUTO ]
-- On VOLATILE shift to state 1
-- On VOID shift to state 2
-- On UNSIGNED shift to state 3
-- On UNION shift to state 4
-- On TYPE_NAME shift to state 5
-- On TYPEDEF shift to state 6
-- On STRUCT shift to state 7
-- On STATIC shift to state 8
-- On SIGNED shift to state 16
-- On SHORT shift to state 17
-- On RPAREN shift to state 24
-- On REGISTER shift to state 18
-- On LONG shift to state 25
-- On INT shift to state 26
-- On IDENTIFIER shift to state 27
-- On FLOAT shift to state 28
-- On EXTERN shift to state 29
-- On ENUM shift to state 30
-- On DOUBLE shift to state 143
-- On CONST shift to state 10
-- On CHAR shift to state 144
-- On AUTO shift to state 188
-- On type_specifier shift to state 189
-- On type_qualifier shift to state 190
-- On struct_or_union_specifier shift to state 147
-- On struct_or_union shift to state 148
-- On storage_class_specifier shift to state 191
-- On parameter_type_list shift to state 236
-- On parameter_list shift to state 201
-- On parameter_declaration shift to state 210
-- On identifier_list shift to state 238
-- On enum_specifier shift to state 170
-- On declaration_specifiers shift to state 205

State 24:
direct_declarator -> direct_declarator LPAREN RPAREN . [ VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF STRUCT STATIC SIGNED SHORT SEMICOLON RPAREN REGISTER LPAREN LONG LBRACK LBRACE INT FLOAT EXTERN EQUAL ENUM DOUBLE CONST COMMA COLON CHAR AUTO ]
-- On VOLATILE reduce production direct_declarator -> direct_declarator LPAREN RPAREN
-- On VOID reduce production direct_declarator -> direct_declarator LPAREN RPAREN
-- On UNSIGNED reduce production direct_declarator -> direct_declarator LPAREN RPAREN
-- On UNION reduce production direct_declarator -> direct_declarator LPAREN RPAREN
-- On TYPE_NAME reduce production direct_declarator -> direct_declarator LPAREN RPAREN
-- On TYPEDEF reduce production direct_declarator -> direct_declarator LPAREN RPAREN
-- On STRUCT reduce production direct_declarator -> direct_declarator LPAREN RPAREN
-- On STATIC reduce production direct_declarator -> direct_declarator LPAREN RPAREN
-- On SIGNED reduce production direct_declarator -> direct_declarator LPAREN RPAREN
-- On SHORT reduce production direct_declarator -> direct_declarator LPAREN RPAREN
-- On SEMICOLON reduce production direct_declarator -> direct_declarator LPAREN RPAREN
-- On RPAREN reduce production direct_declarator -> direct_declarator LPAREN RPAREN
-- On REGISTER reduce production direct_declarator -> direct_declarator LPAREN RPAREN
-- On LPAREN reduce production direct_declarator -> direct_declarator LPAREN RPAREN
-- On LONG reduce production direct_declarator -> direct_declarator LPAREN RPAREN
-- On LBRACK reduce production direct_declarator -> direct_declarator LPAREN RPAREN
-- On LBRACE reduce production direct_declarator -> direct_declarator LPAREN RPAREN
-- On INT reduce production direct_declarator -> direct_declarator LPAREN RPAREN
-- On FLOAT reduce production direct_declarator -> direct_declarator LPAREN RPAREN
-- On EXTERN reduce production direct_declarator -> direct_declarator LPAREN RPAREN
-- On EQUAL reduce production direct_declarator -> direct_declarator LPAREN RPAREN
-- On ENUM reduce production direct_declarator -> direct_declarator LPAREN RPAREN
-- On DOUBLE reduce production direct_declarator -> direct_declarator LPAREN RPAREN
-- On CONST reduce production direct_declarator -> direct_declarator LPAREN RPAREN
-- On COMMA reduce production direct_declarator -> direct_declarator LPAREN RPAREN
-- On COLON reduce production direct_declarator -> direct_declarator LPAREN RPAREN
-- On CHAR reduce production direct_declarator -> direct_declarator LPAREN RPAREN
-- On AUTO reduce production direct_declarator -> direct_declarator LPAREN RPAREN

State 25:
type_specifier -> LONG . [ VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN REGISTER LPAREN LONG LBRACK INT IDENTIFIER FLOAT EXTERN ENUM DOUBLE CONST COMMA COLON CHAR AUTO ]
-- On VOLATILE reduce production type_specifier -> LONG
-- On VOID reduce production type_specifier -> LONG
-- On UNSIGNED reduce production type_specifier -> LONG
-- On UNION reduce production type_specifier -> LONG
-- On TYPE_NAME reduce production type_specifier -> LONG
-- On TYPEDEF reduce production type_specifier -> LONG
-- On STRUCT reduce production type_specifier -> LONG
-- On STATIC reduce production type_specifier -> LONG
-- On STAR reduce production type_specifier -> LONG
-- On SIGNED reduce production type_specifier -> LONG
-- On SHORT reduce production type_specifier -> LONG
-- On SEMICOLON reduce production type_specifier -> LONG
-- On RPAREN reduce production type_specifier -> LONG
-- On REGISTER reduce production type_specifier -> LONG
-- On LPAREN reduce production type_specifier -> LONG
-- On LONG reduce production type_specifier -> LONG
-- On LBRACK reduce production type_specifier -> LONG
-- On INT reduce production type_specifier -> LONG
-- On IDENTIFIER reduce production type_specifier -> LONG
-- On FLOAT reduce production type_specifier -> LONG
-- On EXTERN reduce production type_specifier -> LONG
-- On ENUM reduce production type_specifier -> LONG
-- On DOUBLE reduce production type_specifier -> LONG
-- On CONST reduce production type_specifier -> LONG
-- On COMMA reduce production type_specifier -> LONG
-- On COLON reduce production type_specifier -> LONG
-- On CHAR reduce production type_specifier -> LONG
-- On AUTO reduce production type_specifier -> LONG

State 26:
type_specifier -> INT . [ VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN REGISTER LPAREN LONG LBRACK INT IDENTIFIER FLOAT EXTERN ENUM DOUBLE CONST COMMA COLON CHAR AUTO ]
-- On VOLATILE reduce production type_specifier -> INT
-- On VOID reduce production type_specifier -> INT
-- On UNSIGNED reduce production type_specifier -> INT
-- On UNION reduce production type_specifier -> INT
-- On TYPE_NAME reduce production type_specifier -> INT
-- On TYPEDEF reduce production type_specifier -> INT
-- On STRUCT reduce production type_specifier -> INT
-- On STATIC reduce production type_specifier -> INT
-- On STAR reduce production type_specifier -> INT
-- On SIGNED reduce production type_specifier -> INT
-- On SHORT reduce production type_specifier -> INT
-- On SEMICOLON reduce production type_specifier -> INT
-- On RPAREN reduce production type_specifier -> INT
-- On REGISTER reduce production type_specifier -> INT
-- On LPAREN reduce production type_specifier -> INT
-- On LONG reduce production type_specifier -> INT
-- On LBRACK reduce production type_specifier -> INT
-- On INT reduce production type_specifier -> INT
-- On IDENTIFIER reduce production type_specifier -> INT
-- On FLOAT reduce production type_specifier -> INT
-- On EXTERN reduce production type_specifier -> INT
-- On ENUM reduce production type_specifier -> INT
-- On DOUBLE reduce production type_specifier -> INT
-- On CONST reduce production type_specifier -> INT
-- On COMMA reduce production type_specifier -> INT
-- On COLON reduce production type_specifier -> INT
-- On CHAR reduce production type_specifier -> INT
-- On AUTO reduce production type_specifier -> INT

State 27:
identifier_list -> IDENTIFIER . [ RPAREN COMMA ]
-- On RPAREN reduce production identifier_list -> IDENTIFIER
-- On COMMA reduce production identifier_list -> IDENTIFIER

State 28:
type_specifier -> FLOAT . [ VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN REGISTER LPAREN LONG LBRACK INT IDENTIFIER FLOAT EXTERN ENUM DOUBLE CONST COMMA COLON CHAR AUTO ]
-- On VOLATILE reduce production type_specifier -> FLOAT
-- On VOID reduce production type_specifier -> FLOAT
-- On UNSIGNED reduce production type_specifier -> FLOAT
-- On UNION reduce production type_specifier -> FLOAT
-- On TYPE_NAME reduce production type_specifier -> FLOAT
-- On TYPEDEF reduce production type_specifier -> FLOAT
-- On STRUCT reduce production type_specifier -> FLOAT
-- On STATIC reduce production type_specifier -> FLOAT
-- On STAR reduce production type_specifier -> FLOAT
-- On SIGNED reduce production type_specifier -> FLOAT
-- On SHORT reduce production type_specifier -> FLOAT
-- On SEMICOLON reduce production type_specifier -> FLOAT
-- On RPAREN reduce production type_specifier -> FLOAT
-- On REGISTER reduce production type_specifier -> FLOAT
-- On LPAREN reduce production type_specifier -> FLOAT
-- On LONG reduce production type_specifier -> FLOAT
-- On LBRACK reduce production type_specifier -> FLOAT
-- On INT reduce production type_specifier -> FLOAT
-- On IDENTIFIER reduce production type_specifier -> FLOAT
-- On FLOAT reduce production type_specifier -> FLOAT
-- On EXTERN reduce production type_specifier -> FLOAT
-- On ENUM reduce production type_specifier -> FLOAT
-- On DOUBLE reduce production type_specifier -> FLOAT
-- On CONST reduce production type_specifier -> FLOAT
-- On COMMA reduce production type_specifier -> FLOAT
-- On COLON reduce production type_specifier -> FLOAT
-- On CHAR reduce production type_specifier -> FLOAT
-- On AUTO reduce production type_specifier -> FLOAT

State 29:
storage_class_specifier -> EXTERN . [ VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN REGISTER LPAREN LONG LBRACK INT IDENTIFIER FLOAT EXTERN ENUM DOUBLE CONST COMMA CHAR AUTO ]
-- On VOLATILE reduce production storage_class_specifier -> EXTERN
-- On VOID reduce production storage_class_specifier -> EXTERN
-- On UNSIGNED reduce production storage_class_specifier -> EXTERN
-- On UNION reduce production storage_class_specifier -> EXTERN
-- On TYPE_NAME reduce production storage_class_specifier -> EXTERN
-- On TYPEDEF reduce production storage_class_specifier -> EXTERN
-- On STRUCT reduce production storage_class_specifier -> EXTERN
-- On STATIC reduce production storage_class_specifier -> EXTERN
-- On STAR reduce production storage_class_specifier -> EXTERN
-- On SIGNED reduce production storage_class_specifier -> EXTERN
-- On SHORT reduce production storage_class_specifier -> EXTERN
-- On SEMICOLON reduce production storage_class_specifier -> EXTERN
-- On RPAREN reduce production storage_class_specifier -> EXTERN
-- On REGISTER reduce production storage_class_specifier -> EXTERN
-- On LPAREN reduce production storage_class_specifier -> EXTERN
-- On LONG reduce production storage_class_specifier -> EXTERN
-- On LBRACK reduce production storage_class_specifier -> EXTERN
-- On INT reduce production storage_class_specifier -> EXTERN
-- On IDENTIFIER reduce production storage_class_specifier -> EXTERN
-- On FLOAT reduce production storage_class_specifier -> EXTERN
-- On EXTERN reduce production storage_class_specifier -> EXTERN
-- On ENUM reduce production storage_class_specifier -> EXTERN
-- On DOUBLE reduce production storage_class_specifier -> EXTERN
-- On CONST reduce production storage_class_specifier -> EXTERN
-- On COMMA reduce production storage_class_specifier -> EXTERN
-- On CHAR reduce production storage_class_specifier -> EXTERN
-- On AUTO reduce production storage_class_specifier -> EXTERN

State 30:
enum_specifier -> ENUM . LBRACE enumerator_list RBRACE [ VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN REGISTER LPAREN LONG LBRACK INT IDENTIFIER FLOAT EXTERN ENUM DOUBLE CONST COMMA COLON CHAR AUTO ]
enum_specifier -> ENUM . IDENTIFIER LBRACE enumerator_list RBRACE [ VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN REGISTER LPAREN LONG LBRACK INT IDENTIFIER FLOAT EXTERN ENUM DOUBLE CONST COMMA COLON CHAR AUTO ]
enum_specifier -> ENUM . IDENTIFIER [ VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN REGISTER LPAREN LONG LBRACK INT IDENTIFIER FLOAT EXTERN ENUM DOUBLE CONST COMMA COLON CHAR AUTO ]
-- On LBRACE shift to state 31
-- On IDENTIFIER shift to state 232

State 31:
enum_specifier -> ENUM LBRACE . enumerator_list RBRACE [ VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN REGISTER LPAREN LONG LBRACK INT IDENTIFIER FLOAT EXTERN ENUM DOUBLE CONST COMMA COLON CHAR AUTO ]
-- On IDENTIFIER shift to state 32
-- On enumerator_list shift to state 227
-- On enumerator shift to state 231

State 32:
enumerator -> IDENTIFIER . [ RBRACE COMMA ]
enumerator -> IDENTIFIER . EQUAL constant_expression [ RBRACE COMMA ]
-- On EQUAL shift to state 33
-- On RBRACE reduce production enumerator -> IDENTIFIER
-- On COMMA reduce production enumerator -> IDENTIFIER

State 33:
enumerator -> IDENTIFIER EQUAL . constant_expression [ RBRACE COMMA ]
-- On TILDE shift to state 34
-- On STRING_LITERAL shift to state 35
-- On STAR shift to state 36
-- On SIZEOF shift to state 37
-- On PLUS shift to state 38
-- On MINUS shift to state 39
-- On LPAREN shift to state 41
-- On INC_OP shift to state 42
-- On IDENTIFIER shift to state 44
-- On DEC_OP shift to state 45
-- On CONSTANT shift to state 46
-- On BANG shift to state 47
-- On AMPERSAND shift to state 48
-- On unary_operator shift to state 49
-- On unary_expression shift to state 50
-- On shift_expression shift to state 70
-- On relational_expression shift to state 87
-- On primary_expression shift to state 51
-- On postfix_expression shift to state 52
-- On multiplicative_expression shift to state 72
-- On logical_or_expression shift to state 97
-- On logical_and_expression shift to state 99
-- On inclusive_or_expression shift to state 115
-- On exclusive_or_expression shift to state 114
-- On equality_expression shift to state 105
-- On constant_expression shift to state 226
-- On conditional_expression shift to state 156
-- On cast_expression shift to state 79
-- On and_expression shift to state 113
-- On additive_expression shift to state 90

State 34:
unary_operator -> TILDE . [ TILDE STRING_LITERAL STAR SIZEOF PLUS MINUS LPAREN INC_OP IDENTIFIER DEC_OP CONSTANT BANG AMPERSAND ]
-- On TILDE reduce production unary_operator -> TILDE
-- On STRING_LITERAL reduce production unary_operator -> TILDE
-- On STAR reduce production unary_operator -> TILDE
-- On SIZEOF reduce production unary_operator -> TILDE
-- On PLUS reduce production unary_operator -> TILDE
-- On MINUS reduce production unary_operator -> TILDE
-- On LPAREN reduce production unary_operator -> TILDE
-- On INC_OP reduce production unary_operator -> TILDE
-- On IDENTIFIER reduce production unary_operator -> TILDE
-- On DEC_OP reduce production unary_operator -> TILDE
-- On CONSTANT reduce production unary_operator -> TILDE
-- On BANG reduce production unary_operator -> TILDE
-- On AMPERSAND reduce production unary_operator -> TILDE

State 35:
primary_expression -> STRING_LITERAL . [ XOR_ASSIGN SUB_ASSIGN STAR SLASH SEMICOLON RPAREN RIGHT_OP RIGHT_ASSIGN RBRACK RBRACE QUESTION PTR_OP PLUS PERCENT OR_OP OR_ASSIGN NE_OP MUL_ASSIGN MOD_ASSIGN MINUS LT LPAREN LE_OP LEFT_OP LEFT_ASSIGN LBRACK INC_OP HAT GT GE_OP EQ_OP EQUAL DOT DIV_ASSIGN DEC_OP COMMA COLON BAR AND_OP AND_ASSIGN AMPERSAND ADD_ASSIGN ]
-- On XOR_ASSIGN reduce production primary_expression -> STRING_LITERAL
-- On SUB_ASSIGN reduce production primary_expression -> STRING_LITERAL
-- On STAR reduce production primary_expression -> STRING_LITERAL
-- On SLASH reduce production primary_expression -> STRING_LITERAL
-- On SEMICOLON reduce production primary_expression -> STRING_LITERAL
-- On RPAREN reduce production primary_expression -> STRING_LITERAL
-- On RIGHT_OP reduce production primary_expression -> STRING_LITERAL
-- On RIGHT_ASSIGN reduce production primary_expression -> STRING_LITERAL
-- On RBRACK reduce production primary_expression -> STRING_LITERAL
-- On RBRACE reduce production primary_expression -> STRING_LITERAL
-- On QUESTION reduce production primary_expression -> STRING_LITERAL
-- On PTR_OP reduce production primary_expression -> STRING_LITERAL
-- On PLUS reduce production primary_expression -> STRING_LITERAL
-- On PERCENT reduce production primary_expression -> STRING_LITERAL
-- On OR_OP reduce production primary_expression -> STRING_LITERAL
-- On OR_ASSIGN reduce production primary_expression -> STRING_LITERAL
-- On NE_OP reduce production primary_expression -> STRING_LITERAL
-- On MUL_ASSIGN reduce production primary_expression -> STRING_LITERAL
-- On MOD_ASSIGN reduce production primary_expression -> STRING_LITERAL
-- On MINUS reduce production primary_expression -> STRING_LITERAL
-- On LT reduce production primary_expression -> STRING_LITERAL
-- On LPAREN reduce production primary_expression -> STRING_LITERAL
-- On LE_OP reduce production primary_expression -> STRING_LITERAL
-- On LEFT_OP reduce production primary_expression -> STRING_LITERAL
-- On LEFT_ASSIGN reduce production primary_expression -> STRING_LITERAL
-- On LBRACK reduce production primary_expression -> STRING_LITERAL
-- On INC_OP reduce production primary_expression -> STRING_LITERAL
-- On HAT reduce production primary_expression -> STRING_LITERAL
-- On GT reduce production primary_expression -> STRING_LITERAL
-- On GE_OP reduce production primary_expression -> STRING_LITERAL
-- On EQ_OP reduce production primary_expression -> STRING_LITERAL
-- On EQUAL reduce production primary_expression -> STRING_LITERAL
-- On DOT reduce production primary_expression -> STRING_LITERAL
-- On DIV_ASSIGN reduce production primary_expression -> STRING_LITERAL
-- On DEC_OP reduce production primary_expression -> STRING_LITERAL
-- On COMMA reduce production primary_expression -> STRING_LITERAL
-- On COLON reduce production primary_expression -> STRING_LITERAL
-- On BAR reduce production primary_expression -> STRING_LITERAL
-- On AND_OP reduce production primary_expression -> STRING_LITERAL
-- On AND_ASSIGN reduce production primary_expression -> STRING_LITERAL
-- On AMPERSAND reduce production primary_expression -> STRING_LITERAL
-- On ADD_ASSIGN reduce production primary_expression -> STRING_LITERAL

State 36:
unary_operator -> STAR . [ TILDE STRING_LITERAL STAR SIZEOF PLUS MINUS LPAREN INC_OP IDENTIFIER DEC_OP CONSTANT BANG AMPERSAND ]
-- On TILDE reduce production unary_operator -> STAR
-- On STRING_LITERAL reduce production unary_operator -> STAR
-- On STAR reduce production unary_operator -> STAR
-- On SIZEOF reduce production unary_operator -> STAR
-- On PLUS reduce production unary_operator -> STAR
-- On MINUS reduce production unary_operator -> STAR
-- On LPAREN reduce production unary_operator -> STAR
-- On INC_OP reduce production unary_operator -> STAR
-- On IDENTIFIER reduce production unary_operator -> STAR
-- On DEC_OP reduce production unary_operator -> STAR
-- On CONSTANT reduce production unary_operator -> STAR
-- On BANG reduce production unary_operator -> STAR
-- On AMPERSAND reduce production unary_operator -> STAR

State 37:
unary_expression -> SIZEOF . unary_expression [ XOR_ASSIGN SUB_ASSIGN STAR SLASH SEMICOLON RPAREN RIGHT_OP RIGHT_ASSIGN RBRACK RBRACE QUESTION PLUS PERCENT OR_OP OR_ASSIGN NE_OP MUL_ASSIGN MOD_ASSIGN MINUS LT LE_OP LEFT_OP LEFT_ASSIGN HAT GT GE_OP EQ_OP EQUAL DIV_ASSIGN COMMA COLON BAR AND_OP AND_ASSIGN AMPERSAND ADD_ASSIGN ]
unary_expression -> SIZEOF . LPAREN type_name RPAREN [ XOR_ASSIGN SUB_ASSIGN STAR SLASH SEMICOLON RPAREN RIGHT_OP RIGHT_ASSIGN RBRACK RBRACE QUESTION PLUS PERCENT OR_OP OR_ASSIGN NE_OP MUL_ASSIGN MOD_ASSIGN MINUS LT LE_OP LEFT_OP LEFT_ASSIGN HAT GT GE_OP EQ_OP EQUAL DIV_ASSIGN COMMA COLON BAR AND_OP AND_ASSIGN AMPERSAND ADD_ASSIGN ]
-- On TILDE shift to state 34
-- On STRING_LITERAL shift to state 35
-- On STAR shift to state 36
-- On SIZEOF shift to state 37
-- On PLUS shift to state 38
-- On MINUS shift to state 39
-- On LPAREN shift to state 40
-- On INC_OP shift to state 42
-- On IDENTIFIER shift to state 44
-- On DEC_OP shift to state 45
-- On CONSTANT shift to state 46
-- On BANG shift to state 47
-- On AMPERSAND shift to state 48
-- On unary_operator shift to state 49
-- On unary_expression shift to state 225
-- On primary_expression shift to state 51
-- On postfix_expression shift to state 52

State 38:
unary_operator -> PLUS . [ TILDE STRING_LITERAL STAR SIZEOF PLUS MINUS LPAREN INC_OP IDENTIFIER DEC_OP CONSTANT BANG AMPERSAND ]
-- On TILDE reduce production unary_operator -> PLUS
-- On STRING_LITERAL reduce production unary_operator -> PLUS
-- On STAR reduce production unary_operator -> PLUS
-- On SIZEOF reduce production unary_operator -> PLUS
-- On PLUS reduce production unary_operator -> PLUS
-- On MINUS reduce production unary_operator -> PLUS
-- On LPAREN reduce production unary_operator -> PLUS
-- On INC_OP reduce production unary_operator -> PLUS
-- On IDENTIFIER reduce production unary_operator -> PLUS
-- On DEC_OP reduce production unary_operator -> PLUS
-- On CONSTANT reduce production unary_operator -> PLUS
-- On BANG reduce production unary_operator -> PLUS
-- On AMPERSAND reduce production unary_operator -> PLUS

State 39:
unary_operator -> MINUS . [ TILDE STRING_LITERAL STAR SIZEOF PLUS MINUS LPAREN INC_OP IDENTIFIER DEC_OP CONSTANT BANG AMPERSAND ]
-- On TILDE reduce production unary_operator -> MINUS
-- On STRING_LITERAL reduce production unary_operator -> MINUS
-- On STAR reduce production unary_operator -> MINUS
-- On SIZEOF reduce production unary_operator -> MINUS
-- On PLUS reduce production unary_operator -> MINUS
-- On MINUS reduce production unary_operator -> MINUS
-- On LPAREN reduce production unary_operator -> MINUS
-- On INC_OP reduce production unary_operator -> MINUS
-- On IDENTIFIER reduce production unary_operator -> MINUS
-- On DEC_OP reduce production unary_operator -> MINUS
-- On CONSTANT reduce production unary_operator -> MINUS
-- On BANG reduce production unary_operator -> MINUS
-- On AMPERSAND reduce production unary_operator -> MINUS

State 40:
primary_expression -> LPAREN . expression RPAREN [ XOR_ASSIGN SUB_ASSIGN STAR SLASH SEMICOLON RPAREN RIGHT_OP RIGHT_ASSIGN RBRACK RBRACE QUESTION PTR_OP PLUS PERCENT OR_OP OR_ASSIGN NE_OP MUL_ASSIGN MOD_ASSIGN MINUS LT LPAREN LE_OP LEFT_OP LEFT_ASSIGN LBRACK INC_OP HAT GT GE_OP EQ_OP EQUAL DOT DIV_ASSIGN DEC_OP COMMA COLON BAR AND_OP AND_ASSIGN AMPERSAND ADD_ASSIGN ]
unary_expression -> SIZEOF LPAREN . type_name RPAREN [ XOR_ASSIGN SUB_ASSIGN STAR SLASH SEMICOLON RPAREN RIGHT_OP RIGHT_ASSIGN RBRACK RBRACE QUESTION PLUS PERCENT OR_OP OR_ASSIGN NE_OP MUL_ASSIGN MOD_ASSIGN MINUS LT LE_OP LEFT_OP LEFT_ASSIGN HAT GT GE_OP EQ_OP EQUAL DIV_ASSIGN COMMA COLON BAR AND_OP AND_ASSIGN AMPERSAND ADD_ASSIGN ]
-- On VOLATILE shift to state 1
-- On VOID shift to state 2
-- On UNSIGNED shift to state 3
-- On UNION shift to state 4
-- On TYPE_NAME shift to state 5
-- On TILDE shift to state 34
-- On STRUCT shift to state 7
-- On STRING_LITERAL shift to state 35
-- On STAR shift to state 36
-- On SIZEOF shift to state 37
-- On SIGNED shift to state 16
-- On SHORT shift to state 17
-- On PLUS shift to state 38
-- On MINUS shift to state 39
-- On LPAREN shift to state 41
-- On LONG shift to state 25
-- On INT shift to state 26
-- On INC_OP shift to state 42
-- On IDENTIFIER shift to state 44
-- On FLOAT shift to state 28
-- On ENUM shift to state 30
-- On DOUBLE shift to state 143
-- On DEC_OP shift to state 45
-- On CONSTANT shift to state 46
-- On CONST shift to state 10
-- On CHAR shift to state 144
-- On BANG shift to state 47
-- On AMPERSAND shift to state 48
-- On unary_operator shift to state 49
-- On unary_expression shift to state 57
-- On type_specifier shift to state 145
-- On type_qualifier shift to state 146
-- On type_name shift to state 223
-- On struct_or_union_specifier shift to state 147
-- On struct_or_union shift to state 148
-- On specifier_qualifier_list shift to state 181
-- On shift_expression shift to state 70
-- On relational_expression shift to state 87
-- On primary_expression shift to state 51
-- On postfix_expression shift to state 52
-- On multiplicative_expression shift to state 72
-- On logical_or_expression shift to state 97
-- On logical_and_expression shift to state 99
-- On inclusive_or_expression shift to state 115
-- On expression shift to state 140
-- On exclusive_or_expression shift to state 114
-- On equality_expression shift to state 105
-- On enum_specifier shift to state 170
-- On conditional_expression shift to state 118
-- On cast_expression shift to state 79
-- On assignment_expression shift to state 122
-- On and_expression shift to state 113
-- On additive_expression shift to state 90

State 41:
cast_expression -> LPAREN . type_name RPAREN cast_expression [ XOR_ASSIGN SUB_ASSIGN STAR SLASH SEMICOLON RPAREN RIGHT_OP RIGHT_ASSIGN RBRACK RBRACE QUESTION PLUS PERCENT OR_OP OR_ASSIGN NE_OP MUL_ASSIGN MOD_ASSIGN MINUS LT LE_OP LEFT_OP LEFT_ASSIGN HAT GT GE_OP EQ_OP EQUAL DIV_ASSIGN COMMA COLON BAR AND_OP AND_ASSIGN AMPERSAND ADD_ASSIGN ]
primary_expression -> LPAREN . expression RPAREN [ XOR_ASSIGN SUB_ASSIGN STAR SLASH SEMICOLON RPAREN RIGHT_OP RIGHT_ASSIGN RBRACK RBRACE QUESTION PTR_OP PLUS PERCENT OR_OP OR_ASSIGN NE_OP MUL_ASSIGN MOD_ASSIGN MINUS LT LPAREN LE_OP LEFT_OP LEFT_ASSIGN LBRACK INC_OP HAT GT GE_OP EQ_OP EQUAL DOT DIV_ASSIGN DEC_OP COMMA COLON BAR AND_OP AND_ASSIGN AMPERSAND ADD_ASSIGN ]
-- On VOLATILE shift to state 1
-- On VOID shift to state 2
-- On UNSIGNED shift to state 3
-- On UNION shift to state 4
-- On TYPE_NAME shift to state 5
-- On TILDE shift to state 34
-- On STRUCT shift to state 7
-- On STRING_LITERAL shift to state 35
-- On STAR shift to state 36
-- On SIZEOF shift to state 37
-- On SIGNED shift to state 16
-- On SHORT shift to state 17
-- On PLUS shift to state 38
-- On MINUS shift to state 39
-- On LPAREN shift to state 41
-- On LONG shift to state 25
-- On INT shift to state 26
-- On INC_OP shift to state 42
-- On IDENTIFIER shift to state 44
-- On FLOAT shift to state 28
-- On ENUM shift to state 30
-- On DOUBLE shift to state 143
-- On DEC_OP shift to state 45
-- On CONSTANT shift to state 46
-- On CONST shift to state 10
-- On CHAR shift to state 144
-- On BANG shift to state 47
-- On AMPERSAND shift to state 48
-- On unary_operator shift to state 49
-- On unary_expression shift to state 57
-- On type_specifier shift to state 145
-- On type_qualifier shift to state 146
-- On type_name shift to state 178
-- On struct_or_union_specifier shift to state 147
-- On struct_or_union shift to state 148
-- On specifier_qualifier_list shift to state 181
-- On shift_expression shift to state 70
-- On relational_expression shift to state 87
-- On primary_expression shift to state 51
-- On postfix_expression shift to state 52
-- On multiplicative_expression shift to state 72
-- On logical_or_expression shift to state 97
-- On logical_and_expression shift to state 99
-- On inclusive_or_expression shift to state 115
-- On expression shift to state 140
-- On exclusive_or_expression shift to state 114
-- On equality_expression shift to state 105
-- On enum_specifier shift to state 170
-- On conditional_expression shift to state 118
-- On cast_expression shift to state 79
-- On assignment_expression shift to state 122
-- On and_expression shift to state 113
-- On additive_expression shift to state 90

State 42:
unary_expression -> INC_OP . unary_expression [ XOR_ASSIGN SUB_ASSIGN STAR SLASH SEMICOLON RPAREN RIGHT_OP RIGHT_ASSIGN RBRACK RBRACE QUESTION PLUS PERCENT OR_OP OR_ASSIGN NE_OP MUL_ASSIGN MOD_ASSIGN MINUS LT LE_OP LEFT_OP LEFT_ASSIGN HAT GT GE_OP EQ_OP EQUAL DIV_ASSIGN COMMA COLON BAR AND_OP AND_ASSIGN AMPERSAND ADD_ASSIGN ]
-- On TILDE shift to state 34
-- On STRING_LITERAL shift to state 35
-- On STAR shift to state 36
-- On SIZEOF shift to state 37
-- On PLUS shift to state 38
-- On MINUS shift to state 39
-- On LPAREN shift to state 43
-- On INC_OP shift to state 42
-- On IDENTIFIER shift to state 44
-- On DEC_OP shift to state 45
-- On CONSTANT shift to state 46
-- On BANG shift to state 47
-- On AMPERSAND shift to state 48
-- On unary_operator shift to state 49
-- On unary_expression shift to state 142
-- On primary_expression shift to state 51
-- On postfix_expression shift to state 52

State 43:
primary_expression -> LPAREN . expression RPAREN [ XOR_ASSIGN SUB_ASSIGN STAR SLASH SEMICOLON RPAREN RIGHT_OP RIGHT_ASSIGN RBRACK RBRACE QUESTION PTR_OP PLUS PERCENT OR_OP OR_ASSIGN NE_OP MUL_ASSIGN MOD_ASSIGN MINUS LT LPAREN LE_OP LEFT_OP LEFT_ASSIGN LBRACK INC_OP HAT GT GE_OP EQ_OP EQUAL DOT DIV_ASSIGN DEC_OP COMMA COLON BAR AND_OP AND_ASSIGN AMPERSAND ADD_ASSIGN ]
-- On TILDE shift to state 34
-- On STRING_LITERAL shift to state 35
-- On STAR shift to state 36
-- On SIZEOF shift to state 37
-- On PLUS shift to state 38
-- On MINUS shift to state 39
-- On LPAREN shift to state 41
-- On INC_OP shift to state 42
-- On IDENTIFIER shift to state 44
-- On DEC_OP shift to state 45
-- On CONSTANT shift to state 46
-- On BANG shift to state 47
-- On AMPERSAND shift to state 48
-- On unary_operator shift to state 49
-- On unary_expression shift to state 57
-- On shift_expression shift to state 70
-- On relational_expression shift to state 87
-- On primary_expression shift to state 51
-- On postfix_expression shift to state 52
-- On multiplicative_expression shift to state 72
-- On logical_or_expression shift to state 97
-- On logical_and_expression shift to state 99
-- On inclusive_or_expression shift to state 115
-- On expression shift to state 140
-- On exclusive_or_expression shift to state 114
-- On equality_expression shift to state 105
-- On conditional_expression shift to state 118
-- On cast_expression shift to state 79
-- On assignment_expression shift to state 122
-- On and_expression shift to state 113
-- On additive_expression shift to state 90

State 44:
primary_expression -> IDENTIFIER . [ XOR_ASSIGN SUB_ASSIGN STAR SLASH SEMICOLON RPAREN RIGHT_OP RIGHT_ASSIGN RBRACK RBRACE QUESTION PTR_OP PLUS PERCENT OR_OP OR_ASSIGN NE_OP MUL_ASSIGN MOD_ASSIGN MINUS LT LPAREN LE_OP LEFT_OP LEFT_ASSIGN LBRACK INC_OP HAT GT GE_OP EQ_OP EQUAL DOT DIV_ASSIGN DEC_OP COMMA COLON BAR AND_OP AND_ASSIGN AMPERSAND ADD_ASSIGN ]
-- On XOR_ASSIGN reduce production primary_expression -> IDENTIFIER
-- On SUB_ASSIGN reduce production primary_expression -> IDENTIFIER
-- On STAR reduce production primary_expression -> IDENTIFIER
-- On SLASH reduce production primary_expression -> IDENTIFIER
-- On SEMICOLON reduce production primary_expression -> IDENTIFIER
-- On RPAREN reduce production primary_expression -> IDENTIFIER
-- On RIGHT_OP reduce production primary_expression -> IDENTIFIER
-- On RIGHT_ASSIGN reduce production primary_expression -> IDENTIFIER
-- On RBRACK reduce production primary_expression -> IDENTIFIER
-- On RBRACE reduce production primary_expression -> IDENTIFIER
-- On QUESTION reduce production primary_expression -> IDENTIFIER
-- On PTR_OP reduce production primary_expression -> IDENTIFIER
-- On PLUS reduce production primary_expression -> IDENTIFIER
-- On PERCENT reduce production primary_expression -> IDENTIFIER
-- On OR_OP reduce production primary_expression -> IDENTIFIER
-- On OR_ASSIGN reduce production primary_expression -> IDENTIFIER
-- On NE_OP reduce production primary_expression -> IDENTIFIER
-- On MUL_ASSIGN reduce production primary_expression -> IDENTIFIER
-- On MOD_ASSIGN reduce production primary_expression -> IDENTIFIER
-- On MINUS reduce production primary_expression -> IDENTIFIER
-- On LT reduce production primary_expression -> IDENTIFIER
-- On LPAREN reduce production primary_expression -> IDENTIFIER
-- On LE_OP reduce production primary_expression -> IDENTIFIER
-- On LEFT_OP reduce production primary_expression -> IDENTIFIER
-- On LEFT_ASSIGN reduce production primary_expression -> IDENTIFIER
-- On LBRACK reduce production primary_expression -> IDENTIFIER
-- On INC_OP reduce production primary_expression -> IDENTIFIER
-- On HAT reduce production primary_expression -> IDENTIFIER
-- On GT reduce production primary_expression -> IDENTIFIER
-- On GE_OP reduce production primary_expression -> IDENTIFIER
-- On EQ_OP reduce production primary_expression -> IDENTIFIER
-- On EQUAL reduce production primary_expression -> IDENTIFIER
-- On DOT reduce production primary_expression -> IDENTIFIER
-- On DIV_ASSIGN reduce production primary_expression -> IDENTIFIER
-- On DEC_OP reduce production primary_expression -> IDENTIFIER
-- On COMMA reduce production primary_expression -> IDENTIFIER
-- On COLON reduce production primary_expression -> IDENTIFIER
-- On BAR reduce production primary_expression -> IDENTIFIER
-- On AND_OP reduce production primary_expression -> IDENTIFIER
-- On AND_ASSIGN reduce production primary_expression -> IDENTIFIER
-- On AMPERSAND reduce production primary_expression -> IDENTIFIER
-- On ADD_ASSIGN reduce production primary_expression -> IDENTIFIER

State 45:
unary_expression -> DEC_OP . unary_expression [ XOR_ASSIGN SUB_ASSIGN STAR SLASH SEMICOLON RPAREN RIGHT_OP RIGHT_ASSIGN RBRACK RBRACE QUESTION PLUS PERCENT OR_OP OR_ASSIGN NE_OP MUL_ASSIGN MOD_ASSIGN MINUS LT LE_OP LEFT_OP LEFT_ASSIGN HAT GT GE_OP EQ_OP EQUAL DIV_ASSIGN COMMA COLON BAR AND_OP AND_ASSIGN AMPERSAND ADD_ASSIGN ]
-- On TILDE shift to state 34
-- On STRING_LITERAL shift to state 35
-- On STAR shift to state 36
-- On SIZEOF shift to state 37
-- On PLUS shift to state 38
-- On MINUS shift to state 39
-- On LPAREN shift to state 43
-- On INC_OP shift to state 42
-- On IDENTIFIER shift to state 44
-- On DEC_OP shift to state 45
-- On CONSTANT shift to state 46
-- On BANG shift to state 47
-- On AMPERSAND shift to state 48
-- On unary_operator shift to state 49
-- On unary_expression shift to state 139
-- On primary_expression shift to state 51
-- On postfix_expression shift to state 52

State 46:
primary_expression -> CONSTANT . [ XOR_ASSIGN SUB_ASSIGN STAR SLASH SEMICOLON RPAREN RIGHT_OP RIGHT_ASSIGN RBRACK RBRACE QUESTION PTR_OP PLUS PERCENT OR_OP OR_ASSIGN NE_OP MUL_ASSIGN MOD_ASSIGN MINUS LT LPAREN LE_OP LEFT_OP LEFT_ASSIGN LBRACK INC_OP HAT GT GE_OP EQ_OP EQUAL DOT DIV_ASSIGN DEC_OP COMMA COLON BAR AND_OP AND_ASSIGN AMPERSAND ADD_ASSIGN ]
-- On XOR_ASSIGN reduce production primary_expression -> CONSTANT
-- On SUB_ASSIGN reduce production primary_expression -> CONSTANT
-- On STAR reduce production primary_expression -> CONSTANT
-- On SLASH reduce production primary_expression -> CONSTANT
-- On SEMICOLON reduce production primary_expression -> CONSTANT
-- On RPAREN reduce production primary_expression -> CONSTANT
-- On RIGHT_OP reduce production primary_expression -> CONSTANT
-- On RIGHT_ASSIGN reduce production primary_expression -> CONSTANT
-- On RBRACK reduce production primary_expression -> CONSTANT
-- On RBRACE reduce production primary_expression -> CONSTANT
-- On QUESTION reduce production primary_expression -> CONSTANT
-- On PTR_OP reduce production primary_expression -> CONSTANT
-- On PLUS reduce production primary_expression -> CONSTANT
-- On PERCENT reduce production primary_expression -> CONSTANT
-- On OR_OP reduce production primary_expression -> CONSTANT
-- On OR_ASSIGN reduce production primary_expression -> CONSTANT
-- On NE_OP reduce production primary_expression -> CONSTANT
-- On MUL_ASSIGN reduce production primary_expression -> CONSTANT
-- On MOD_ASSIGN reduce production primary_expression -> CONSTANT
-- On MINUS reduce production primary_expression -> CONSTANT
-- On LT reduce production primary_expression -> CONSTANT
-- On LPAREN reduce production primary_expression -> CONSTANT
-- On LE_OP reduce production primary_expression -> CONSTANT
-- On LEFT_OP reduce production primary_expression -> CONSTANT
-- On LEFT_ASSIGN reduce production primary_expression -> CONSTANT
-- On LBRACK reduce production primary_expression -> CONSTANT
-- On INC_OP reduce production primary_expression -> CONSTANT
-- On HAT reduce production primary_expression -> CONSTANT
-- On GT reduce production primary_expression -> CONSTANT
-- On GE_OP reduce production primary_expression -> CONSTANT
-- On EQ_OP reduce production primary_expression -> CONSTANT
-- On EQUAL reduce production primary_expression -> CONSTANT
-- On DOT reduce production primary_expression -> CONSTANT
-- On DIV_ASSIGN reduce production primary_expression -> CONSTANT
-- On DEC_OP reduce production primary_expression -> CONSTANT
-- On COMMA reduce production primary_expression -> CONSTANT
-- On COLON reduce production primary_expression -> CONSTANT
-- On BAR reduce production primary_expression -> CONSTANT
-- On AND_OP reduce production primary_expression -> CONSTANT
-- On AND_ASSIGN reduce production primary_expression -> CONSTANT
-- On AMPERSAND reduce production primary_expression -> CONSTANT
-- On ADD_ASSIGN reduce production primary_expression -> CONSTANT

State 47:
unary_operator -> BANG . [ TILDE STRING_LITERAL STAR SIZEOF PLUS MINUS LPAREN INC_OP IDENTIFIER DEC_OP CONSTANT BANG AMPERSAND ]
-- On TILDE reduce production unary_operator -> BANG
-- On STRING_LITERAL reduce production unary_operator -> BANG
-- On STAR reduce production unary_operator -> BANG
-- On SIZEOF reduce production unary_operator -> BANG
-- On PLUS reduce production unary_operator -> BANG
-- On MINUS reduce production unary_operator -> BANG
-- On LPAREN reduce production unary_operator -> BANG
-- On INC_OP reduce production unary_operator -> BANG
-- On IDENTIFIER reduce production unary_operator -> BANG
-- On DEC_OP reduce production unary_operator -> BANG
-- On CONSTANT reduce production unary_operator -> BANG
-- On BANG reduce production unary_operator -> BANG
-- On AMPERSAND reduce production unary_operator -> BANG

State 48:
unary_operator -> AMPERSAND . [ TILDE STRING_LITERAL STAR SIZEOF PLUS MINUS LPAREN INC_OP IDENTIFIER DEC_OP CONSTANT BANG AMPERSAND ]
-- On TILDE reduce production unary_operator -> AMPERSAND
-- On STRING_LITERAL reduce production unary_operator -> AMPERSAND
-- On STAR reduce production unary_operator -> AMPERSAND
-- On SIZEOF reduce production unary_operator -> AMPERSAND
-- On PLUS reduce production unary_operator -> AMPERSAND
-- On MINUS reduce production unary_operator -> AMPERSAND
-- On LPAREN reduce production unary_operator -> AMPERSAND
-- On INC_OP reduce production unary_operator -> AMPERSAND
-- On IDENTIFIER reduce production unary_operator -> AMPERSAND
-- On DEC_OP reduce production unary_operator -> AMPERSAND
-- On CONSTANT reduce production unary_operator -> AMPERSAND
-- On BANG reduce production unary_operator -> AMPERSAND
-- On AMPERSAND reduce production unary_operator -> AMPERSAND

State 49:
unary_expression -> unary_operator . cast_expression [ XOR_ASSIGN SUB_ASSIGN STAR SLASH SEMICOLON RPAREN RIGHT_OP RIGHT_ASSIGN RBRACK RBRACE QUESTION PLUS PERCENT OR_OP OR_ASSIGN NE_OP MUL_ASSIGN MOD_ASSIGN MINUS LT LE_OP LEFT_OP LEFT_ASSIGN HAT GT GE_OP EQ_OP EQUAL DIV_ASSIGN COMMA COLON BAR AND_OP AND_ASSIGN AMPERSAND ADD_ASSIGN ]
-- On TILDE shift to state 34
-- On STRING_LITERAL shift to state 35
-- On STAR shift to state 36
-- On SIZEOF shift to state 37
-- On PLUS shift to state 38
-- On MINUS shift to state 39
-- On LPAREN shift to state 41
-- On INC_OP shift to state 42
-- On IDENTIFIER shift to state 44
-- On DEC_OP shift to state 45
-- On CONSTANT shift to state 46
-- On BANG shift to state 47
-- On AMPERSAND shift to state 48
-- On unary_operator shift to state 49
-- On unary_expression shift to state 50
-- On primary_expression shift to state 51
-- On postfix_expression shift to state 52
-- On cast_expression shift to state 138

State 50:
cast_expression -> unary_expression . [ XOR_ASSIGN SUB_ASSIGN STAR SLASH SEMICOLON RPAREN RIGHT_OP RIGHT_ASSIGN RBRACK RBRACE QUESTION PLUS PERCENT OR_OP OR_ASSIGN NE_OP MUL_ASSIGN MOD_ASSIGN MINUS LT LE_OP LEFT_OP LEFT_ASSIGN HAT GT GE_OP EQ_OP EQUAL DIV_ASSIGN COMMA COLON BAR AND_OP AND_ASSIGN AMPERSAND ADD_ASSIGN ]
-- On XOR_ASSIGN reduce production cast_expression -> unary_expression
-- On SUB_ASSIGN reduce production cast_expression -> unary_expression
-- On STAR reduce production cast_expression -> unary_expression
-- On SLASH reduce production cast_expression -> unary_expression
-- On SEMICOLON reduce production cast_expression -> unary_expression
-- On RPAREN reduce production cast_expression -> unary_expression
-- On RIGHT_OP reduce production cast_expression -> unary_expression
-- On RIGHT_ASSIGN reduce production cast_expression -> unary_expression
-- On RBRACK reduce production cast_expression -> unary_expression
-- On RBRACE reduce production cast_expression -> unary_expression
-- On QUESTION reduce production cast_expression -> unary_expression
-- On PLUS reduce production cast_expression -> unary_expression
-- On PERCENT reduce production cast_expression -> unary_expression
-- On OR_OP reduce production cast_expression -> unary_expression
-- On OR_ASSIGN reduce production cast_expression -> unary_expression
-- On NE_OP reduce production cast_expression -> unary_expression
-- On MUL_ASSIGN reduce production cast_expression -> unary_expression
-- On MOD_ASSIGN reduce production cast_expression -> unary_expression
-- On MINUS reduce production cast_expression -> unary_expression
-- On LT reduce production cast_expression -> unary_expression
-- On LE_OP reduce production cast_expression -> unary_expression
-- On LEFT_OP reduce production cast_expression -> unary_expression
-- On LEFT_ASSIGN reduce production cast_expression -> unary_expression
-- On HAT reduce production cast_expression -> unary_expression
-- On GT reduce production cast_expression -> unary_expression
-- On GE_OP reduce production cast_expression -> unary_expression
-- On EQ_OP reduce production cast_expression -> unary_expression
-- On EQUAL reduce production cast_expression -> unary_expression
-- On DIV_ASSIGN reduce production cast_expression -> unary_expression
-- On COMMA reduce production cast_expression -> unary_expression
-- On COLON reduce production cast_expression -> unary_expression
-- On BAR reduce production cast_expression -> unary_expression
-- On AND_OP reduce production cast_expression -> unary_expression
-- On AND_ASSIGN reduce production cast_expression -> unary_expression
-- On AMPERSAND reduce production cast_expression -> unary_expression
-- On ADD_ASSIGN reduce production cast_expression -> unary_expression

State 51:
postfix_expression -> primary_expression . [ XOR_ASSIGN SUB_ASSIGN STAR SLASH SEMICOLON RPAREN RIGHT_OP RIGHT_ASSIGN RBRACK RBRACE QUESTION PTR_OP PLUS PERCENT OR_OP OR_ASSIGN NE_OP MUL_ASSIGN MOD_ASSIGN MINUS LT LPAREN LE_OP LEFT_OP LEFT_ASSIGN LBRACK INC_OP HAT GT GE_OP EQ_OP EQUAL DOT DIV_ASSIGN DEC_OP COMMA COLON BAR AND_OP AND_ASSIGN AMPERSAND ADD_ASSIGN ]
-- On XOR_ASSIGN reduce production postfix_expression -> primary_expression
-- On SUB_ASSIGN reduce production postfix_expression -> primary_expression
-- On STAR reduce production postfix_expression -> primary_expression
-- On SLASH reduce production postfix_expression -> primary_expression
-- On SEMICOLON reduce production postfix_expression -> primary_expression
-- On RPAREN reduce production postfix_expression -> primary_expression
-- On RIGHT_OP reduce production postfix_expression -> primary_expression
-- On RIGHT_ASSIGN reduce production postfix_expression -> primary_expression
-- On RBRACK reduce production postfix_expression -> primary_expression
-- On RBRACE reduce production postfix_expression -> primary_expression
-- On QUESTION reduce production postfix_expression -> primary_expression
-- On PTR_OP reduce production postfix_expression -> primary_expression
-- On PLUS reduce production postfix_expression -> primary_expression
-- On PERCENT reduce production postfix_expression -> primary_expression
-- On OR_OP reduce production postfix_expression -> primary_expression
-- On OR_ASSIGN reduce production postfix_expression -> primary_expression
-- On NE_OP reduce production postfix_expression -> primary_expression
-- On MUL_ASSIGN reduce production postfix_expression -> primary_expression
-- On MOD_ASSIGN reduce production postfix_expression -> primary_expression
-- On MINUS reduce production postfix_expression -> primary_expression
-- On LT reduce production postfix_expression -> primary_expression
-- On LPAREN reduce production postfix_expression -> primary_expression
-- On LE_OP reduce production postfix_expression -> primary_expression
-- On LEFT_OP reduce production postfix_expression -> primary_expression
-- On LEFT_ASSIGN reduce production postfix_expression -> primary_expression
-- On LBRACK reduce production postfix_expression -> primary_expression
-- On INC_OP reduce production postfix_expression -> primary_expression
-- On HAT reduce production postfix_expression -> primary_expression
-- On GT reduce production postfix_expression -> primary_expression
-- On GE_OP reduce production postfix_expression -> primary_expression
-- On EQ_OP reduce production postfix_expression -> primary_expression
-- On EQUAL reduce production postfix_expression -> primary_expression
-- On DOT reduce production postfix_expression -> primary_expression
-- On DIV_ASSIGN reduce production postfix_expression -> primary_expression
-- On DEC_OP reduce production postfix_expression -> primary_expression
-- On COMMA reduce production postfix_expression -> primary_expression
-- On COLON reduce production postfix_expression -> primary_expression
-- On BAR reduce production postfix_expression -> primary_expression
-- On AND_OP reduce production postfix_expression -> primary_expression
-- On AND_ASSIGN reduce production postfix_expression -> primary_expression
-- On AMPERSAND reduce production postfix_expression -> primary_expression
-- On ADD_ASSIGN reduce production postfix_expression -> primary_expression

State 52:
postfix_expression -> postfix_expression . LBRACK expression RBRACK [ XOR_ASSIGN SUB_ASSIGN STAR SLASH SEMICOLON RPAREN RIGHT_OP RIGHT_ASSIGN RBRACK RBRACE QUESTION PTR_OP PLUS PERCENT OR_OP OR_ASSIGN NE_OP MUL_ASSIGN MOD_ASSIGN MINUS LT LPAREN LE_OP LEFT_OP LEFT_ASSIGN LBRACK INC_OP HAT GT GE_OP EQ_OP EQUAL DOT DIV_ASSIGN DEC_OP COMMA COLON BAR AND_OP AND_ASSIGN AMPERSAND ADD_ASSIGN ]
postfix_expression -> postfix_expression . LPAREN RPAREN [ XOR_ASSIGN SUB_ASSIGN STAR SLASH SEMICOLON RPAREN RIGHT_OP RIGHT_ASSIGN RBRACK RBRACE QUESTION PTR_OP PLUS PERCENT OR_OP OR_ASSIGN NE_OP MUL_ASSIGN MOD_ASSIGN MINUS LT LPAREN LE_OP LEFT_OP LEFT_ASSIGN LBRACK INC_OP HAT GT GE_OP EQ_OP EQUAL DOT DIV_ASSIGN DEC_OP COMMA COLON BAR AND_OP AND_ASSIGN AMPERSAND ADD_ASSIGN ]
postfix_expression -> postfix_expression . LPAREN argument_expression_list RPAREN [ XOR_ASSIGN SUB_ASSIGN STAR SLASH SEMICOLON RPAREN RIGHT_OP RIGHT_ASSIGN RBRACK RBRACE QUESTION PTR_OP PLUS PERCENT OR_OP OR_ASSIGN NE_OP MUL_ASSIGN MOD_ASSIGN MINUS LT LPAREN LE_OP LEFT_OP LEFT_ASSIGN LBRACK INC_OP HAT GT GE_OP EQ_OP EQUAL DOT DIV_ASSIGN DEC_OP COMMA COLON BAR AND_OP AND_ASSIGN AMPERSAND ADD_ASSIGN ]
postfix_expression -> postfix_expression . DOT IDENTIFIER [ XOR_ASSIGN SUB_ASSIGN STAR SLASH SEMICOLON RPAREN RIGHT_OP RIGHT_ASSIGN RBRACK RBRACE QUESTION PTR_OP PLUS PERCENT OR_OP OR_ASSIGN NE_OP MUL_ASSIGN MOD_ASSIGN MINUS LT LPAREN LE_OP LEFT_OP LEFT_ASSIGN LBRACK INC_OP HAT GT GE_OP EQ_OP EQUAL DOT DIV_ASSIGN DEC_OP COMMA COLON BAR AND_OP AND_ASSIGN AMPERSAND ADD_ASSIGN ]
postfix_expression -> postfix_expression . PTR_OP IDENTIFIER [ XOR_ASSIGN SUB_ASSIGN STAR SLASH SEMICOLON RPAREN RIGHT_OP RIGHT_ASSIGN RBRACK RBRACE QUESTION PTR_OP PLUS PERCENT OR_OP OR_ASSIGN NE_OP MUL_ASSIGN MOD_ASSIGN MINUS LT LPAREN LE_OP LEFT_OP LEFT_ASSIGN LBRACK INC_OP HAT GT GE_OP EQ_OP EQUAL DOT DIV_ASSIGN DEC_OP COMMA COLON BAR AND_OP AND_ASSIGN AMPERSAND ADD_ASSIGN ]
postfix_expression -> postfix_expression . INC_OP [ XOR_ASSIGN SUB_ASSIGN STAR SLASH SEMICOLON RPAREN RIGHT_OP RIGHT_ASSIGN RBRACK RBRACE QUESTION PTR_OP PLUS PERCENT OR_OP OR_ASSIGN NE_OP MUL_ASSIGN MOD_ASSIGN MINUS LT LPAREN LE_OP LEFT_OP LEFT_ASSIGN LBRACK INC_OP HAT GT GE_OP EQ_OP EQUAL DOT DIV_ASSIGN DEC_OP COMMA COLON BAR AND_OP AND_ASSIGN AMPERSAND ADD_ASSIGN ]
postfix_expression -> postfix_expression . DEC_OP [ XOR_ASSIGN SUB_ASSIGN STAR SLASH SEMICOLON RPAREN RIGHT_OP RIGHT_ASSIGN RBRACK RBRACE QUESTION PTR_OP PLUS PERCENT OR_OP OR_ASSIGN NE_OP MUL_ASSIGN MOD_ASSIGN MINUS LT LPAREN LE_OP LEFT_OP LEFT_ASSIGN LBRACK INC_OP HAT GT GE_OP EQ_OP EQUAL DOT DIV_ASSIGN DEC_OP COMMA COLON BAR AND_OP AND_ASSIGN AMPERSAND ADD_ASSIGN ]
unary_expression -> postfix_expression . [ XOR_ASSIGN SUB_ASSIGN STAR SLASH SEMICOLON RPAREN RIGHT_OP RIGHT_ASSIGN RBRACK RBRACE QUESTION PLUS PERCENT OR_OP OR_ASSIGN NE_OP MUL_ASSIGN MOD_ASSIGN MINUS LT LE_OP LEFT_OP LEFT_ASSIGN HAT GT GE_OP EQ_OP EQUAL DIV_ASSIGN COMMA COLON BAR AND_OP AND_ASSIGN AMPERSAND ADD_ASSIGN ]
-- On PTR_OP shift to state 53
-- On LPAREN shift to state 55
-- On LBRACK shift to state 131
-- On INC_OP shift to state 134
-- On DOT shift to state 135
-- On DEC_OP shift to state 137
-- On XOR_ASSIGN reduce production unary_expression -> postfix_expression
-- On SUB_ASSIGN reduce production unary_expression -> postfix_expression
-- On STAR reduce production unary_expression -> postfix_expression
-- On SLASH reduce production unary_expression -> postfix_expression
-- On SEMICOLON reduce production unary_expression -> postfix_expression
-- On RPAREN reduce production unary_expression -> postfix_expression
-- On RIGHT_OP reduce production unary_expression -> postfix_expression
-- On RIGHT_ASSIGN reduce production unary_expression -> postfix_expression
-- On RBRACK reduce production unary_expression -> postfix_expression
-- On RBRACE reduce production unary_expression -> postfix_expression
-- On QUESTION reduce production unary_expression -> postfix_expression
-- On PLUS reduce production unary_expression -> postfix_expression
-- On PERCENT reduce production unary_expression -> postfix_expression
-- On OR_OP reduce production unary_expression -> postfix_expression
-- On OR_ASSIGN reduce production unary_expression -> postfix_expression
-- On NE_OP reduce production unary_expression -> postfix_expression
-- On MUL_ASSIGN reduce production unary_expression -> postfix_expression
-- On MOD_ASSIGN reduce production unary_expression -> postfix_expression
-- On MINUS reduce production unary_expression -> postfix_expression
-- On LT reduce production unary_expression -> postfix_expression
-- On LE_OP reduce production unary_expression -> postfix_expression
-- On LEFT_OP reduce production unary_expression -> postfix_expression
-- On LEFT_ASSIGN reduce production unary_expression -> postfix_expression
-- On HAT reduce production unary_expression -> postfix_expression
-- On GT reduce production unary_expression -> postfix_expression
-- On GE_OP reduce production unary_expression -> postfix_expression
-- On EQ_OP reduce production unary_expression -> postfix_expression
-- On EQUAL reduce production unary_expression -> postfix_expression
-- On DIV_ASSIGN reduce production unary_expression -> postfix_expression
-- On COMMA reduce production unary_expression -> postfix_expression
-- On COLON reduce production unary_expression -> postfix_expression
-- On BAR reduce production unary_expression -> postfix_expression
-- On AND_OP reduce production unary_expression -> postfix_expression
-- On AND_ASSIGN reduce production unary_expression -> postfix_expression
-- On AMPERSAND reduce production unary_expression -> postfix_expression
-- On ADD_ASSIGN reduce production unary_expression -> postfix_expression

State 53:
postfix_expression -> postfix_expression PTR_OP . IDENTIFIER [ XOR_ASSIGN SUB_ASSIGN STAR SLASH SEMICOLON RPAREN RIGHT_OP RIGHT_ASSIGN RBRACK RBRACE QUESTION PTR_OP PLUS PERCENT OR_OP OR_ASSIGN NE_OP MUL_ASSIGN MOD_ASSIGN MINUS LT LPAREN LE_OP LEFT_OP LEFT_ASSIGN LBRACK INC_OP HAT GT GE_OP EQ_OP EQUAL DOT DIV_ASSIGN DEC_OP COMMA COLON BAR AND_OP AND_ASSIGN AMPERSAND ADD_ASSIGN ]
-- On IDENTIFIER shift to state 54

State 54:
postfix_expression -> postfix_expression PTR_OP IDENTIFIER . [ XOR_ASSIGN SUB_ASSIGN STAR SLASH SEMICOLON RPAREN RIGHT_OP RIGHT_ASSIGN RBRACK RBRACE QUESTION PTR_OP PLUS PERCENT OR_OP OR_ASSIGN NE_OP MUL_ASSIGN MOD_ASSIGN MINUS LT LPAREN LE_OP LEFT_OP LEFT_ASSIGN LBRACK INC_OP HAT GT GE_OP EQ_OP EQUAL DOT DIV_ASSIGN DEC_OP COMMA COLON BAR AND_OP AND_ASSIGN AMPERSAND ADD_ASSIGN ]
-- On XOR_ASSIGN reduce production postfix_expression -> postfix_expression PTR_OP IDENTIFIER
-- On SUB_ASSIGN reduce production postfix_expression -> postfix_expression PTR_OP IDENTIFIER
-- On STAR reduce production postfix_expression -> postfix_expression PTR_OP IDENTIFIER
-- On SLASH reduce production postfix_expression -> postfix_expression PTR_OP IDENTIFIER
-- On SEMICOLON reduce production postfix_expression -> postfix_expression PTR_OP IDENTIFIER
-- On RPAREN reduce production postfix_expression -> postfix_expression PTR_OP IDENTIFIER
-- On RIGHT_OP reduce production postfix_expression -> postfix_expression PTR_OP IDENTIFIER
-- On RIGHT_ASSIGN reduce production postfix_expression -> postfix_expression PTR_OP IDENTIFIER
-- On RBRACK reduce production postfix_expression -> postfix_expression PTR_OP IDENTIFIER
-- On RBRACE reduce production postfix_expression -> postfix_expression PTR_OP IDENTIFIER
-- On QUESTION reduce production postfix_expression -> postfix_expression PTR_OP IDENTIFIER
-- On PTR_OP reduce production postfix_expression -> postfix_expression PTR_OP IDENTIFIER
-- On PLUS reduce production postfix_expression -> postfix_expression PTR_OP IDENTIFIER
-- On PERCENT reduce production postfix_expression -> postfix_expression PTR_OP IDENTIFIER
-- On OR_OP reduce production postfix_expression -> postfix_expression PTR_OP IDENTIFIER
-- On OR_ASSIGN reduce production postfix_expression -> postfix_expression PTR_OP IDENTIFIER
-- On NE_OP reduce production postfix_expression -> postfix_expression PTR_OP IDENTIFIER
-- On MUL_ASSIGN reduce production postfix_expression -> postfix_expression PTR_OP IDENTIFIER
-- On MOD_ASSIGN reduce production postfix_expression -> postfix_expression PTR_OP IDENTIFIER
-- On MINUS reduce production postfix_expression -> postfix_expression PTR_OP IDENTIFIER
-- On LT reduce production postfix_expression -> postfix_expression PTR_OP IDENTIFIER
-- On LPAREN reduce production postfix_expression -> postfix_expression PTR_OP IDENTIFIER
-- On LE_OP reduce production postfix_expression -> postfix_expression PTR_OP IDENTIFIER
-- On LEFT_OP reduce production postfix_expression -> postfix_expression PTR_OP IDENTIFIER
-- On LEFT_ASSIGN reduce production postfix_expression -> postfix_expression PTR_OP IDENTIFIER
-- On LBRACK reduce production postfix_expression -> postfix_expression PTR_OP IDENTIFIER
-- On INC_OP reduce production postfix_expression -> postfix_expression PTR_OP IDENTIFIER
-- On HAT reduce production postfix_expression -> postfix_expression PTR_OP IDENTIFIER
-- On GT reduce production postfix_expression -> postfix_expression PTR_OP IDENTIFIER
-- On GE_OP reduce production postfix_expression -> postfix_expression PTR_OP IDENTIFIER
-- On EQ_OP reduce production postfix_expression -> postfix_expression PTR_OP IDENTIFIER
-- On EQUAL reduce production postfix_expression -> postfix_expression PTR_OP IDENTIFIER
-- On DOT reduce production postfix_expression -> postfix_expression PTR_OP IDENTIFIER
-- On DIV_ASSIGN reduce production postfix_expression -> postfix_expression PTR_OP IDENTIFIER
-- On DEC_OP reduce production postfix_expression -> postfix_expression PTR_OP IDENTIFIER
-- On COMMA reduce production postfix_expression -> postfix_expression PTR_OP IDENTIFIER
-- On COLON reduce production postfix_expression -> postfix_expression PTR_OP IDENTIFIER
-- On BAR reduce production postfix_expression -> postfix_expression PTR_OP IDENTIFIER
-- On AND_OP reduce production postfix_expression -> postfix_expression PTR_OP IDENTIFIER
-- On AND_ASSIGN reduce production postfix_expression -> postfix_expression PTR_OP IDENTIFIER
-- On AMPERSAND reduce production postfix_expression -> postfix_expression PTR_OP IDENTIFIER
-- On ADD_ASSIGN reduce production postfix_expression -> postfix_expression PTR_OP IDENTIFIER

State 55:
postfix_expression -> postfix_expression LPAREN . RPAREN [ XOR_ASSIGN SUB_ASSIGN STAR SLASH SEMICOLON RPAREN RIGHT_OP RIGHT_ASSIGN RBRACK RBRACE QUESTION PTR_OP PLUS PERCENT OR_OP OR_ASSIGN NE_OP MUL_ASSIGN MOD_ASSIGN MINUS LT LPAREN LE_OP LEFT_OP LEFT_ASSIGN LBRACK INC_OP HAT GT GE_OP EQ_OP EQUAL DOT DIV_ASSIGN DEC_OP COMMA COLON BAR AND_OP AND_ASSIGN AMPERSAND ADD_ASSIGN ]
postfix_expression -> postfix_expression LPAREN . argument_expression_list RPAREN [ XOR_ASSIGN SUB_ASSIGN STAR SLASH SEMICOLON RPAREN RIGHT_OP RIGHT_ASSIGN RBRACK RBRACE QUESTION PTR_OP PLUS PERCENT OR_OP OR_ASSIGN NE_OP MUL_ASSIGN MOD_ASSIGN MINUS LT LPAREN LE_OP LEFT_OP LEFT_ASSIGN LBRACK INC_OP HAT GT GE_OP EQ_OP EQUAL DOT DIV_ASSIGN DEC_OP COMMA COLON BAR AND_OP AND_ASSIGN AMPERSAND ADD_ASSIGN ]
-- On TILDE shift to state 34
-- On STRING_LITERAL shift to state 35
-- On STAR shift to state 36
-- On SIZEOF shift to state 37
-- On RPAREN shift to state 56
-- On PLUS shift to state 38
-- On MINUS shift to state 39
-- On LPAREN shift to state 41
-- On INC_OP shift to state 42
-- On IDENTIFIER shift to state 44
-- On DEC_OP shift to state 45
-- On CONSTANT shift to state 46
-- On BANG shift to state 47
-- On AMPERSAND shift to state 48
-- On unary_operator shift to state 49
-- On unary_expression shift to state 57
-- On shift_expression shift to state 70
-- On relational_expression shift to state 87
-- On primary_expression shift to state 51
-- On postfix_expression shift to state 52
-- On multiplicative_expression shift to state 72
-- On logical_or_expression shift to state 97
-- On logical_and_expression shift to state 99
-- On inclusive_or_expression shift to state 115
-- On exclusive_or_expression shift to state 114
-- On equality_expression shift to state 105
-- On conditional_expression shift to state 118
-- On cast_expression shift to state 79
-- On assignment_expression shift to state 126
-- On argument_expression_list shift to state 127
-- On and_expression shift to state 113
-- On additive_expression shift to state 90

State 56:
postfix_expression -> postfix_expression LPAREN RPAREN . [ XOR_ASSIGN SUB_ASSIGN STAR SLASH SEMICOLON RPAREN RIGHT_OP RIGHT_ASSIGN RBRACK RBRACE QUESTION PTR_OP PLUS PERCENT OR_OP OR_ASSIGN NE_OP MUL_ASSIGN MOD_ASSIGN MINUS LT LPAREN LE_OP LEFT_OP LEFT_ASSIGN LBRACK INC_OP HAT GT GE_OP EQ_OP EQUAL DOT DIV_ASSIGN DEC_OP COMMA COLON BAR AND_OP AND_ASSIGN AMPERSAND ADD_ASSIGN ]
-- On XOR_ASSIGN reduce production postfix_expression -> postfix_expression LPAREN RPAREN
-- On SUB_ASSIGN reduce production postfix_expression -> postfix_expression LPAREN RPAREN
-- On STAR reduce production postfix_expression -> postfix_expression LPAREN RPAREN
-- On SLASH reduce production postfix_expression -> postfix_expression LPAREN RPAREN
-- On SEMICOLON reduce production postfix_expression -> postfix_expression LPAREN RPAREN
-- On RPAREN reduce production postfix_expression -> postfix_expression LPAREN RPAREN
-- On RIGHT_OP reduce production postfix_expression -> postfix_expression LPAREN RPAREN
-- On RIGHT_ASSIGN reduce production postfix_expression -> postfix_expression LPAREN RPAREN
-- On RBRACK reduce production postfix_expression -> postfix_expression LPAREN RPAREN
-- On RBRACE reduce production postfix_expression -> postfix_expression LPAREN RPAREN
-- On QUESTION reduce production postfix_expression -> postfix_expression LPAREN RPAREN
-- On PTR_OP reduce production postfix_expression -> postfix_expression LPAREN RPAREN
-- On PLUS reduce production postfix_expression -> postfix_expression LPAREN RPAREN
-- On PERCENT reduce production postfix_expression -> postfix_expression LPAREN RPAREN
-- On OR_OP reduce production postfix_expression -> postfix_expression LPAREN RPAREN
-- On OR_ASSIGN reduce production postfix_expression -> postfix_expression LPAREN RPAREN
-- On NE_OP reduce production postfix_expression -> postfix_expression LPAREN RPAREN
-- On MUL_ASSIGN reduce production postfix_expression -> postfix_expression LPAREN RPAREN
-- On MOD_ASSIGN reduce production postfix_expression -> postfix_expression LPAREN RPAREN
-- On MINUS reduce production postfix_expression -> postfix_expression LPAREN RPAREN
-- On LT reduce production postfix_expression -> postfix_expression LPAREN RPAREN
-- On LPAREN reduce production postfix_expression -> postfix_expression LPAREN RPAREN
-- On LE_OP reduce production postfix_expression -> postfix_expression LPAREN RPAREN
-- On LEFT_OP reduce production postfix_expression -> postfix_expression LPAREN RPAREN
-- On LEFT_ASSIGN reduce production postfix_expression -> postfix_expression LPAREN RPAREN
-- On LBRACK reduce production postfix_expression -> postfix_expression LPAREN RPAREN
-- On INC_OP reduce production postfix_expression -> postfix_expression LPAREN RPAREN
-- On HAT reduce production postfix_expression -> postfix_expression LPAREN RPAREN
-- On GT reduce production postfix_expression -> postfix_expression LPAREN RPAREN
-- On GE_OP reduce production postfix_expression -> postfix_expression LPAREN RPAREN
-- On EQ_OP reduce production postfix_expression -> postfix_expression LPAREN RPAREN
-- On EQUAL reduce production postfix_expression -> postfix_expression LPAREN RPAREN
-- On DOT reduce production postfix_expression -> postfix_expression LPAREN RPAREN
-- On DIV_ASSIGN reduce production postfix_expression -> postfix_expression LPAREN RPAREN
-- On DEC_OP reduce production postfix_expression -> postfix_expression LPAREN RPAREN
-- On COMMA reduce production postfix_expression -> postfix_expression LPAREN RPAREN
-- On COLON reduce production postfix_expression -> postfix_expression LPAREN RPAREN
-- On BAR reduce production postfix_expression -> postfix_expression LPAREN RPAREN
-- On AND_OP reduce production postfix_expression -> postfix_expression LPAREN RPAREN
-- On AND_ASSIGN reduce production postfix_expression -> postfix_expression LPAREN RPAREN
-- On AMPERSAND reduce production postfix_expression -> postfix_expression LPAREN RPAREN
-- On ADD_ASSIGN reduce production postfix_expression -> postfix_expression LPAREN RPAREN

State 57:
assignment_expression -> unary_expression . assignment_operator assignment_expression [ SEMICOLON RPAREN RBRACK RBRACE COMMA COLON ]
cast_expression -> unary_expression . [ STAR SLASH SEMICOLON RPAREN RIGHT_OP RBRACK RBRACE QUESTION PLUS PERCENT OR_OP NE_OP MINUS LT LE_OP LEFT_OP HAT GT GE_OP EQ_OP COMMA COLON BAR AND_OP AMPERSAND ]
-- On XOR_ASSIGN shift to state 58
-- On SUB_ASSIGN shift to state 59
-- On RIGHT_ASSIGN shift to state 60
-- On OR_ASSIGN shift to state 61
-- On MUL_ASSIGN shift to state 62
-- On MOD_ASSIGN shift to state 63
-- On LEFT_ASSIGN shift to state 64
-- On EQUAL shift to state 65
-- On DIV_ASSIGN shift to state 66
-- On AND_ASSIGN shift to state 67
-- On ADD_ASSIGN shift to state 68
-- On assignment_operator shift to state 69
-- On STAR reduce production cast_expression -> unary_expression
-- On SLASH reduce production cast_expression -> unary_expression
-- On SEMICOLON reduce production cast_expression -> unary_expression
-- On RPAREN reduce production cast_expression -> unary_expression
-- On RIGHT_OP reduce production cast_expression -> unary_expression
-- On RBRACK reduce production cast_expression -> unary_expression
-- On RBRACE reduce production cast_expression -> unary_expression
-- On QUESTION reduce production cast_expression -> unary_expression
-- On PLUS reduce production cast_expression -> unary_expression
-- On PERCENT reduce production cast_expression -> unary_expression
-- On OR_OP reduce production cast_expression -> unary_expression
-- On NE_OP reduce production cast_expression -> unary_expression
-- On MINUS reduce production cast_expression -> unary_expression
-- On LT reduce production cast_expression -> unary_expression
-- On LE_OP reduce production cast_expression -> unary_expression
-- On LEFT_OP reduce production cast_expression -> unary_expression
-- On HAT reduce production cast_expression -> unary_expression
-- On GT reduce production cast_expression -> unary_expression
-- On GE_OP reduce production cast_expression -> unary_expression
-- On EQ_OP reduce production cast_expression -> unary_expression
-- On COMMA reduce production cast_expression -> unary_expression
-- On COLON reduce production cast_expression -> unary_expression
-- On BAR reduce production cast_expression -> unary_expression
-- On AND_OP reduce production cast_expression -> unary_expression
-- On AMPERSAND reduce production cast_expression -> unary_expression

State 58:
assignment_operator -> XOR_ASSIGN . [ TILDE STRING_LITERAL STAR SIZEOF PLUS MINUS LPAREN INC_OP IDENTIFIER DEC_OP CONSTANT BANG AMPERSAND ]
-- On TILDE reduce production assignment_operator -> XOR_ASSIGN
-- On STRING_LITERAL reduce production assignment_operator -> XOR_ASSIGN
-- On STAR reduce production assignment_operator -> XOR_ASSIGN
-- On SIZEOF reduce production assignment_operator -> XOR_ASSIGN
-- On PLUS reduce production assignment_operator -> XOR_ASSIGN
-- On MINUS reduce production assignment_operator -> XOR_ASSIGN
-- On LPAREN reduce production assignment_operator -> XOR_ASSIGN
-- On INC_OP reduce production assignment_operator -> XOR_ASSIGN
-- On IDENTIFIER reduce production assignment_operator -> XOR_ASSIGN
-- On DEC_OP reduce production assignment_operator -> XOR_ASSIGN
-- On CONSTANT reduce production assignment_operator -> XOR_ASSIGN
-- On BANG reduce production assignment_operator -> XOR_ASSIGN
-- On AMPERSAND reduce production assignment_operator -> XOR_ASSIGN

State 59:
assignment_operator -> SUB_ASSIGN . [ TILDE STRING_LITERAL STAR SIZEOF PLUS MINUS LPAREN INC_OP IDENTIFIER DEC_OP CONSTANT BANG AMPERSAND ]
-- On TILDE reduce production assignment_operator -> SUB_ASSIGN
-- On STRING_LITERAL reduce production assignment_operator -> SUB_ASSIGN
-- On STAR reduce production assignment_operator -> SUB_ASSIGN
-- On SIZEOF reduce production assignment_operator -> SUB_ASSIGN
-- On PLUS reduce production assignment_operator -> SUB_ASSIGN
-- On MINUS reduce production assignment_operator -> SUB_ASSIGN
-- On LPAREN reduce production assignment_operator -> SUB_ASSIGN
-- On INC_OP reduce production assignment_operator -> SUB_ASSIGN
-- On IDENTIFIER reduce production assignment_operator -> SUB_ASSIGN
-- On DEC_OP reduce production assignment_operator -> SUB_ASSIGN
-- On CONSTANT reduce production assignment_operator -> SUB_ASSIGN
-- On BANG reduce production assignment_operator -> SUB_ASSIGN
-- On AMPERSAND reduce production assignment_operator -> SUB_ASSIGN

State 60:
assignment_operator -> RIGHT_ASSIGN . [ TILDE STRING_LITERAL STAR SIZEOF PLUS MINUS LPAREN INC_OP IDENTIFIER DEC_OP CONSTANT BANG AMPERSAND ]
-- On TILDE reduce production assignment_operator -> RIGHT_ASSIGN
-- On STRING_LITERAL reduce production assignment_operator -> RIGHT_ASSIGN
-- On STAR reduce production assignment_operator -> RIGHT_ASSIGN
-- On SIZEOF reduce production assignment_operator -> RIGHT_ASSIGN
-- On PLUS reduce production assignment_operator -> RIGHT_ASSIGN
-- On MINUS reduce production assignment_operator -> RIGHT_ASSIGN
-- On LPAREN reduce production assignment_operator -> RIGHT_ASSIGN
-- On INC_OP reduce production assignment_operator -> RIGHT_ASSIGN
-- On IDENTIFIER reduce production assignment_operator -> RIGHT_ASSIGN
-- On DEC_OP reduce production assignment_operator -> RIGHT_ASSIGN
-- On CONSTANT reduce production assignment_operator -> RIGHT_ASSIGN
-- On BANG reduce production assignment_operator -> RIGHT_ASSIGN
-- On AMPERSAND reduce production assignment_operator -> RIGHT_ASSIGN

State 61:
assignment_operator -> OR_ASSIGN . [ TILDE STRING_LITERAL STAR SIZEOF PLUS MINUS LPAREN INC_OP IDENTIFIER DEC_OP CONSTANT BANG AMPERSAND ]
-- On TILDE reduce production assignment_operator -> OR_ASSIGN
-- On STRING_LITERAL reduce production assignment_operator -> OR_ASSIGN
-- On STAR reduce production assignment_operator -> OR_ASSIGN
-- On SIZEOF reduce production assignment_operator -> OR_ASSIGN
-- On PLUS reduce production assignment_operator -> OR_ASSIGN
-- On MINUS reduce production assignment_operator -> OR_ASSIGN
-- On LPAREN reduce production assignment_operator -> OR_ASSIGN
-- On INC_OP reduce production assignment_operator -> OR_ASSIGN
-- On IDENTIFIER reduce production assignment_operator -> OR_ASSIGN
-- On DEC_OP reduce production assignment_operator -> OR_ASSIGN
-- On CONSTANT reduce production assignment_operator -> OR_ASSIGN
-- On BANG reduce production assignment_operator -> OR_ASSIGN
-- On AMPERSAND reduce production assignment_operator -> OR_ASSIGN

State 62:
assignment_operator -> MUL_ASSIGN . [ TILDE STRING_LITERAL STAR SIZEOF PLUS MINUS LPAREN INC_OP IDENTIFIER DEC_OP CONSTANT BANG AMPERSAND ]
-- On TILDE reduce production assignment_operator -> MUL_ASSIGN
-- On STRING_LITERAL reduce production assignment_operator -> MUL_ASSIGN
-- On STAR reduce production assignment_operator -> MUL_ASSIGN
-- On SIZEOF reduce production assignment_operator -> MUL_ASSIGN
-- On PLUS reduce production assignment_operator -> MUL_ASSIGN
-- On MINUS reduce production assignment_operator -> MUL_ASSIGN
-- On LPAREN reduce production assignment_operator -> MUL_ASSIGN
-- On INC_OP reduce production assignment_operator -> MUL_ASSIGN
-- On IDENTIFIER reduce production assignment_operator -> MUL_ASSIGN
-- On DEC_OP reduce production assignment_operator -> MUL_ASSIGN
-- On CONSTANT reduce production assignment_operator -> MUL_ASSIGN
-- On BANG reduce production assignment_operator -> MUL_ASSIGN
-- On AMPERSAND reduce production assignment_operator -> MUL_ASSIGN

State 63:
assignment_operator -> MOD_ASSIGN . [ TILDE STRING_LITERAL STAR SIZEOF PLUS MINUS LPAREN INC_OP IDENTIFIER DEC_OP CONSTANT BANG AMPERSAND ]
-- On TILDE reduce production assignment_operator -> MOD_ASSIGN
-- On STRING_LITERAL reduce production assignment_operator -> MOD_ASSIGN
-- On STAR reduce production assignment_operator -> MOD_ASSIGN
-- On SIZEOF reduce production assignment_operator -> MOD_ASSIGN
-- On PLUS reduce production assignment_operator -> MOD_ASSIGN
-- On MINUS reduce production assignment_operator -> MOD_ASSIGN
-- On LPAREN reduce production assignment_operator -> MOD_ASSIGN
-- On INC_OP reduce production assignment_operator -> MOD_ASSIGN
-- On IDENTIFIER reduce production assignment_operator -> MOD_ASSIGN
-- On DEC_OP reduce production assignment_operator -> MOD_ASSIGN
-- On CONSTANT reduce production assignment_operator -> MOD_ASSIGN
-- On BANG reduce production assignment_operator -> MOD_ASSIGN
-- On AMPERSAND reduce production assignment_operator -> MOD_ASSIGN

State 64:
assignment_operator -> LEFT_ASSIGN . [ TILDE STRING_LITERAL STAR SIZEOF PLUS MINUS LPAREN INC_OP IDENTIFIER DEC_OP CONSTANT BANG AMPERSAND ]
-- On TILDE reduce production assignment_operator -> LEFT_ASSIGN
-- On STRING_LITERAL reduce production assignment_operator -> LEFT_ASSIGN
-- On STAR reduce production assignment_operator -> LEFT_ASSIGN
-- On SIZEOF reduce production assignment_operator -> LEFT_ASSIGN
-- On PLUS reduce production assignment_operator -> LEFT_ASSIGN
-- On MINUS reduce production assignment_operator -> LEFT_ASSIGN
-- On LPAREN reduce production assignment_operator -> LEFT_ASSIGN
-- On INC_OP reduce production assignment_operator -> LEFT_ASSIGN
-- On IDENTIFIER reduce production assignment_operator -> LEFT_ASSIGN
-- On DEC_OP reduce production assignment_operator -> LEFT_ASSIGN
-- On CONSTANT reduce production assignment_operator -> LEFT_ASSIGN
-- On BANG reduce production assignment_operator -> LEFT_ASSIGN
-- On AMPERSAND reduce production assignment_operator -> LEFT_ASSIGN

State 65:
assignment_operator -> EQUAL . [ TILDE STRING_LITERAL STAR SIZEOF PLUS MINUS LPAREN INC_OP IDENTIFIER DEC_OP CONSTANT BANG AMPERSAND ]
-- On TILDE reduce production assignment_operator -> EQUAL
-- On STRING_LITERAL reduce production assignment_operator -> EQUAL
-- On STAR reduce production assignment_operator -> EQUAL
-- On SIZEOF reduce production assignment_operator -> EQUAL
-- On PLUS reduce production assignment_operator -> EQUAL
-- On MINUS reduce production assignment_operator -> EQUAL
-- On LPAREN reduce production assignment_operator -> EQUAL
-- On INC_OP reduce production assignment_operator -> EQUAL
-- On IDENTIFIER reduce production assignment_operator -> EQUAL
-- On DEC_OP reduce production assignment_operator -> EQUAL
-- On CONSTANT reduce production assignment_operator -> EQUAL
-- On BANG reduce production assignment_operator -> EQUAL
-- On AMPERSAND reduce production assignment_operator -> EQUAL

State 66:
assignment_operator -> DIV_ASSIGN . [ TILDE STRING_LITERAL STAR SIZEOF PLUS MINUS LPAREN INC_OP IDENTIFIER DEC_OP CONSTANT BANG AMPERSAND ]
-- On TILDE reduce production assignment_operator -> DIV_ASSIGN
-- On STRING_LITERAL reduce production assignment_operator -> DIV_ASSIGN
-- On STAR reduce production assignment_operator -> DIV_ASSIGN
-- On SIZEOF reduce production assignment_operator -> DIV_ASSIGN
-- On PLUS reduce production assignment_operator -> DIV_ASSIGN
-- On MINUS reduce production assignment_operator -> DIV_ASSIGN
-- On LPAREN reduce production assignment_operator -> DIV_ASSIGN
-- On INC_OP reduce production assignment_operator -> DIV_ASSIGN
-- On IDENTIFIER reduce production assignment_operator -> DIV_ASSIGN
-- On DEC_OP reduce production assignment_operator -> DIV_ASSIGN
-- On CONSTANT reduce production assignment_operator -> DIV_ASSIGN
-- On BANG reduce production assignment_operator -> DIV_ASSIGN
-- On AMPERSAND reduce production assignment_operator -> DIV_ASSIGN

State 67:
assignment_operator -> AND_ASSIGN . [ TILDE STRING_LITERAL STAR SIZEOF PLUS MINUS LPAREN INC_OP IDENTIFIER DEC_OP CONSTANT BANG AMPERSAND ]
-- On TILDE reduce production assignment_operator -> AND_ASSIGN
-- On STRING_LITERAL reduce production assignment_operator -> AND_ASSIGN
-- On STAR reduce production assignment_operator -> AND_ASSIGN
-- On SIZEOF reduce production assignment_operator -> AND_ASSIGN
-- On PLUS reduce production assignment_operator -> AND_ASSIGN
-- On MINUS reduce production assignment_operator -> AND_ASSIGN
-- On LPAREN reduce production assignment_operator -> AND_ASSIGN
-- On INC_OP reduce production assignment_operator -> AND_ASSIGN
-- On IDENTIFIER reduce production assignment_operator -> AND_ASSIGN
-- On DEC_OP reduce production assignment_operator -> AND_ASSIGN
-- On CONSTANT reduce production assignment_operator -> AND_ASSIGN
-- On BANG reduce production assignment_operator -> AND_ASSIGN
-- On AMPERSAND reduce production assignment_operator -> AND_ASSIGN

State 68:
assignment_operator -> ADD_ASSIGN . [ TILDE STRING_LITERAL STAR SIZEOF PLUS MINUS LPAREN INC_OP IDENTIFIER DEC_OP CONSTANT BANG AMPERSAND ]
-- On TILDE reduce production assignment_operator -> ADD_ASSIGN
-- On STRING_LITERAL reduce production assignment_operator -> ADD_ASSIGN
-- On STAR reduce production assignment_operator -> ADD_ASSIGN
-- On SIZEOF reduce production assignment_operator -> ADD_ASSIGN
-- On PLUS reduce production assignment_operator -> ADD_ASSIGN
-- On MINUS reduce production assignment_operator -> ADD_ASSIGN
-- On LPAREN reduce production assignment_operator -> ADD_ASSIGN
-- On INC_OP reduce production assignment_operator -> ADD_ASSIGN
-- On IDENTIFIER reduce production assignment_operator -> ADD_ASSIGN
-- On DEC_OP reduce production assignment_operator -> ADD_ASSIGN
-- On CONSTANT reduce production assignment_operator -> ADD_ASSIGN
-- On BANG reduce production assignment_operator -> ADD_ASSIGN
-- On AMPERSAND reduce production assignment_operator -> ADD_ASSIGN

State 69:
assignment_expression -> unary_expression assignment_operator . assignment_expression [ SEMICOLON RPAREN RBRACK RBRACE COMMA COLON ]
-- On TILDE shift to state 34
-- On STRING_LITERAL shift to state 35
-- On STAR shift to state 36
-- On SIZEOF shift to state 37
-- On PLUS shift to state 38
-- On MINUS shift to state 39
-- On LPAREN shift to state 41
-- On INC_OP shift to state 42
-- On IDENTIFIER shift to state 44
-- On DEC_OP shift to state 45
-- On CONSTANT shift to state 46
-- On BANG shift to state 47
-- On AMPERSAND shift to state 48
-- On unary_operator shift to state 49
-- On unary_expression shift to state 57
-- On shift_expression shift to state 70
-- On relational_expression shift to state 87
-- On primary_expression shift to state 51
-- On postfix_expression shift to state 52
-- On multiplicative_expression shift to state 72
-- On logical_or_expression shift to state 97
-- On logical_and_expression shift to state 99
-- On inclusive_or_expression shift to state 115
-- On exclusive_or_expression shift to state 114
-- On equality_expression shift to state 105
-- On conditional_expression shift to state 118
-- On cast_expression shift to state 79
-- On assignment_expression shift to state 125
-- On and_expression shift to state 113
-- On additive_expression shift to state 90

State 70:
relational_expression -> shift_expression . [ SEMICOLON RPAREN RBRACK RBRACE QUESTION OR_OP NE_OP LT LE_OP HAT GT GE_OP EQ_OP COMMA COLON BAR AND_OP AMPERSAND ]
shift_expression -> shift_expression . LEFT_OP additive_expression [ SEMICOLON RPAREN RIGHT_OP RBRACK RBRACE QUESTION OR_OP NE_OP LT LE_OP LEFT_OP HAT GT GE_OP EQ_OP COMMA COLON BAR AND_OP AMPERSAND ]
shift_expression -> shift_expression . RIGHT_OP additive_expression [ SEMICOLON RPAREN RIGHT_OP RBRACK RBRACE QUESTION OR_OP NE_OP LT LE_OP LEFT_OP HAT GT GE_OP EQ_OP COMMA COLON BAR AND_OP AMPERSAND ]
-- On RIGHT_OP shift to state 71
-- On LEFT_OP shift to state 85
-- On SEMICOLON reduce production relational_expression -> shift_expression
-- On RPAREN reduce production relational_expression -> shift_expression
-- On RBRACK reduce production relational_expression -> shift_expression
-- On RBRACE reduce production relational_expression -> shift_expression
-- On QUESTION reduce production relational_expression -> shift_expression
-- On OR_OP reduce production relational_expression -> shift_expression
-- On NE_OP reduce production relational_expression -> shift_expression
-- On LT reduce production relational_expression -> shift_expression
-- On LE_OP reduce production relational_expression -> shift_expression
-- On HAT reduce production relational_expression -> shift_expression
-- On GT reduce production relational_expression -> shift_expression
-- On GE_OP reduce production relational_expression -> shift_expression
-- On EQ_OP reduce production relational_expression -> shift_expression
-- On COMMA reduce production relational_expression -> shift_expression
-- On COLON reduce production relational_expression -> shift_expression
-- On BAR reduce production relational_expression -> shift_expression
-- On AND_OP reduce production relational_expression -> shift_expression
-- On AMPERSAND reduce production relational_expression -> shift_expression

State 71:
shift_expression -> shift_expression RIGHT_OP . additive_expression [ SEMICOLON RPAREN RIGHT_OP RBRACK RBRACE QUESTION OR_OP NE_OP LT LE_OP LEFT_OP HAT GT GE_OP EQ_OP COMMA COLON BAR AND_OP AMPERSAND ]
-- On TILDE shift to state 34
-- On STRING_LITERAL shift to state 35
-- On STAR shift to state 36
-- On SIZEOF shift to state 37
-- On PLUS shift to state 38
-- On MINUS shift to state 39
-- On LPAREN shift to state 41
-- On INC_OP shift to state 42
-- On IDENTIFIER shift to state 44
-- On DEC_OP shift to state 45
-- On CONSTANT shift to state 46
-- On BANG shift to state 47
-- On AMPERSAND shift to state 48
-- On unary_operator shift to state 49
-- On unary_expression shift to state 50
-- On primary_expression shift to state 51
-- On postfix_expression shift to state 52
-- On multiplicative_expression shift to state 72
-- On cast_expression shift to state 79
-- On additive_expression shift to state 80

State 72:
additive_expression -> multiplicative_expression . [ SEMICOLON RPAREN RIGHT_OP RBRACK RBRACE QUESTION PLUS OR_OP NE_OP MINUS LT LE_OP LEFT_OP HAT GT GE_OP EQ_OP COMMA COLON BAR AND_OP AMPERSAND ]
multiplicative_expression -> multiplicative_expression . STAR cast_expression [ STAR SLASH SEMICOLON RPAREN RIGHT_OP RBRACK RBRACE QUESTION PLUS PERCENT OR_OP NE_OP MINUS LT LE_OP LEFT_OP HAT GT GE_OP EQ_OP COMMA COLON BAR AND_OP AMPERSAND ]
multiplicative_expression -> multiplicative_expression . SLASH cast_expression [ STAR SLASH SEMICOLON RPAREN RIGHT_OP RBRACK RBRACE QUESTION PLUS PERCENT OR_OP NE_OP MINUS LT LE_OP LEFT_OP HAT GT GE_OP EQ_OP COMMA COLON BAR AND_OP AMPERSAND ]
multiplicative_expression -> multiplicative_expression . PERCENT cast_expression [ STAR SLASH SEMICOLON RPAREN RIGHT_OP RBRACK RBRACE QUESTION PLUS PERCENT OR_OP NE_OP MINUS LT LE_OP LEFT_OP HAT GT GE_OP EQ_OP COMMA COLON BAR AND_OP AMPERSAND ]
-- On STAR shift to state 73
-- On SLASH shift to state 75
-- On PERCENT shift to state 77
-- On SEMICOLON reduce production additive_expression -> multiplicative_expression
-- On RPAREN reduce production additive_expression -> multiplicative_expression
-- On RIGHT_OP reduce production additive_expression -> multiplicative_expression
-- On RBRACK reduce production additive_expression -> multiplicative_expression
-- On RBRACE reduce production additive_expression -> multiplicative_expression
-- On QUESTION reduce production additive_expression -> multiplicative_expression
-- On PLUS reduce production additive_expression -> multiplicative_expression
-- On OR_OP reduce production additive_expression -> multiplicative_expression
-- On NE_OP reduce production additive_expression -> multiplicative_expression
-- On MINUS reduce production additive_expression -> multiplicative_expression
-- On LT reduce production additive_expression -> multiplicative_expression
-- On LE_OP reduce production additive_expression -> multiplicative_expression
-- On LEFT_OP reduce production additive_expression -> multiplicative_expression
-- On HAT reduce production additive_expression -> multiplicative_expression
-- On GT reduce production additive_expression -> multiplicative_expression
-- On GE_OP reduce production additive_expression -> multiplicative_expression
-- On EQ_OP reduce production additive_expression -> multiplicative_expression
-- On COMMA reduce production additive_expression -> multiplicative_expression
-- On COLON reduce production additive_expression -> multiplicative_expression
-- On BAR reduce production additive_expression -> multiplicative_expression
-- On AND_OP reduce production additive_expression -> multiplicative_expression
-- On AMPERSAND reduce production additive_expression -> multiplicative_expression

State 73:
multiplicative_expression -> multiplicative_expression STAR . cast_expression [ STAR SLASH SEMICOLON RPAREN RIGHT_OP RBRACK RBRACE QUESTION PLUS PERCENT OR_OP NE_OP MINUS LT LE_OP LEFT_OP HAT GT GE_OP EQ_OP COMMA COLON BAR AND_OP AMPERSAND ]
-- On TILDE shift to state 34
-- On STRING_LITERAL shift to state 35
-- On STAR shift to state 36
-- On SIZEOF shift to state 37
-- On PLUS shift to state 38
-- On MINUS shift to state 39
-- On LPAREN shift to state 41
-- On INC_OP shift to state 42
-- On IDENTIFIER shift to state 44
-- On DEC_OP shift to state 45
-- On CONSTANT shift to state 46
-- On BANG shift to state 47
-- On AMPERSAND shift to state 48
-- On unary_operator shift to state 49
-- On unary_expression shift to state 50
-- On primary_expression shift to state 51
-- On postfix_expression shift to state 52
-- On cast_expression shift to state 74

State 74:
multiplicative_expression -> multiplicative_expression STAR cast_expression . [ STAR SLASH SEMICOLON RPAREN RIGHT_OP RBRACK RBRACE QUESTION PLUS PERCENT OR_OP NE_OP MINUS LT LE_OP LEFT_OP HAT GT GE_OP EQ_OP COMMA COLON BAR AND_OP AMPERSAND ]
-- On STAR reduce production multiplicative_expression -> multiplicative_expression STAR cast_expression
-- On SLASH reduce production multiplicative_expression -> multiplicative_expression STAR cast_expression
-- On SEMICOLON reduce production multiplicative_expression -> multiplicative_expression STAR cast_expression
-- On RPAREN reduce production multiplicative_expression -> multiplicative_expression STAR cast_expression
-- On RIGHT_OP reduce production multiplicative_expression -> multiplicative_expression STAR cast_expression
-- On RBRACK reduce production multiplicative_expression -> multiplicative_expression STAR cast_expression
-- On RBRACE reduce production multiplicative_expression -> multiplicative_expression STAR cast_expression
-- On QUESTION reduce production multiplicative_expression -> multiplicative_expression STAR cast_expression
-- On PLUS reduce production multiplicative_expression -> multiplicative_expression STAR cast_expression
-- On PERCENT reduce production multiplicative_expression -> multiplicative_expression STAR cast_expression
-- On OR_OP reduce production multiplicative_expression -> multiplicative_expression STAR cast_expression
-- On NE_OP reduce production multiplicative_expression -> multiplicative_expression STAR cast_expression
-- On MINUS reduce production multiplicative_expression -> multiplicative_expression STAR cast_expression
-- On LT reduce production multiplicative_expression -> multiplicative_expression STAR cast_expression
-- On LE_OP reduce production multiplicative_expression -> multiplicative_expression STAR cast_expression
-- On LEFT_OP reduce production multiplicative_expression -> multiplicative_expression STAR cast_expression
-- On HAT reduce production multiplicative_expression -> multiplicative_expression STAR cast_expression
-- On GT reduce production multiplicative_expression -> multiplicative_expression STAR cast_expression
-- On GE_OP reduce production multiplicative_expression -> multiplicative_expression STAR cast_expression
-- On EQ_OP reduce production multiplicative_expression -> multiplicative_expression STAR cast_expression
-- On COMMA reduce production multiplicative_expression -> multiplicative_expression STAR cast_expression
-- On COLON reduce production multiplicative_expression -> multiplicative_expression STAR cast_expression
-- On BAR reduce production multiplicative_expression -> multiplicative_expression STAR cast_expression
-- On AND_OP reduce production multiplicative_expression -> multiplicative_expression STAR cast_expression
-- On AMPERSAND reduce production multiplicative_expression -> multiplicative_expression STAR cast_expression

State 75:
multiplicative_expression -> multiplicative_expression SLASH . cast_expression [ STAR SLASH SEMICOLON RPAREN RIGHT_OP RBRACK RBRACE QUESTION PLUS PERCENT OR_OP NE_OP MINUS LT LE_OP LEFT_OP HAT GT GE_OP EQ_OP COMMA COLON BAR AND_OP AMPERSAND ]
-- On TILDE shift to state 34
-- On STRING_LITERAL shift to state 35
-- On STAR shift to state 36
-- On SIZEOF shift to state 37
-- On PLUS shift to state 38
-- On MINUS shift to state 39
-- On LPAREN shift to state 41
-- On INC_OP shift to state 42
-- On IDENTIFIER shift to state 44
-- On DEC_OP shift to state 45
-- On CONSTANT shift to state 46
-- On BANG shift to state 47
-- On AMPERSAND shift to state 48
-- On unary_operator shift to state 49
-- On unary_expression shift to state 50
-- On primary_expression shift to state 51
-- On postfix_expression shift to state 52
-- On cast_expression shift to state 76

State 76:
multiplicative_expression -> multiplicative_expression SLASH cast_expression . [ STAR SLASH SEMICOLON RPAREN RIGHT_OP RBRACK RBRACE QUESTION PLUS PERCENT OR_OP NE_OP MINUS LT LE_OP LEFT_OP HAT GT GE_OP EQ_OP COMMA COLON BAR AND_OP AMPERSAND ]
-- On STAR reduce production multiplicative_expression -> multiplicative_expression SLASH cast_expression
-- On SLASH reduce production multiplicative_expression -> multiplicative_expression SLASH cast_expression
-- On SEMICOLON reduce production multiplicative_expression -> multiplicative_expression SLASH cast_expression
-- On RPAREN reduce production multiplicative_expression -> multiplicative_expression SLASH cast_expression
-- On RIGHT_OP reduce production multiplicative_expression -> multiplicative_expression SLASH cast_expression
-- On RBRACK reduce production multiplicative_expression -> multiplicative_expression SLASH cast_expression
-- On RBRACE reduce production multiplicative_expression -> multiplicative_expression SLASH cast_expression
-- On QUESTION reduce production multiplicative_expression -> multiplicative_expression SLASH cast_expression
-- On PLUS reduce production multiplicative_expression -> multiplicative_expression SLASH cast_expression
-- On PERCENT reduce production multiplicative_expression -> multiplicative_expression SLASH cast_expression
-- On OR_OP reduce production multiplicative_expression -> multiplicative_expression SLASH cast_expression
-- On NE_OP reduce production multiplicative_expression -> multiplicative_expression SLASH cast_expression
-- On MINUS reduce production multiplicative_expression -> multiplicative_expression SLASH cast_expression
-- On LT reduce production multiplicative_expression -> multiplicative_expression SLASH cast_expression
-- On LE_OP reduce production multiplicative_expression -> multiplicative_expression SLASH cast_expression
-- On LEFT_OP reduce production multiplicative_expression -> multiplicative_expression SLASH cast_expression
-- On HAT reduce production multiplicative_expression -> multiplicative_expression SLASH cast_expression
-- On GT reduce production multiplicative_expression -> multiplicative_expression SLASH cast_expression
-- On GE_OP reduce production multiplicative_expression -> multiplicative_expression SLASH cast_expression
-- On EQ_OP reduce production multiplicative_expression -> multiplicative_expression SLASH cast_expression
-- On COMMA reduce production multiplicative_expression -> multiplicative_expression SLASH cast_expression
-- On COLON reduce production multiplicative_expression -> multiplicative_expression SLASH cast_expression
-- On BAR reduce production multiplicative_expression -> multiplicative_expression SLASH cast_expression
-- On AND_OP reduce production multiplicative_expression -> multiplicative_expression SLASH cast_expression
-- On AMPERSAND reduce production multiplicative_expression -> multiplicative_expression SLASH cast_expression

State 77:
multiplicative_expression -> multiplicative_expression PERCENT . cast_expression [ STAR SLASH SEMICOLON RPAREN RIGHT_OP RBRACK RBRACE QUESTION PLUS PERCENT OR_OP NE_OP MINUS LT LE_OP LEFT_OP HAT GT GE_OP EQ_OP COMMA COLON BAR AND_OP AMPERSAND ]
-- On TILDE shift to state 34
-- On STRING_LITERAL shift to state 35
-- On STAR shift to state 36
-- On SIZEOF shift to state 37
-- On PLUS shift to state 38
-- On MINUS shift to state 39
-- On LPAREN shift to state 41
-- On INC_OP shift to state 42
-- On IDENTIFIER shift to state 44
-- On DEC_OP shift to state 45
-- On CONSTANT shift to state 46
-- On BANG shift to state 47
-- On AMPERSAND shift to state 48
-- On unary_operator shift to state 49
-- On unary_expression shift to state 50
-- On primary_expression shift to state 51
-- On postfix_expression shift to state 52
-- On cast_expression shift to state 78

State 78:
multiplicative_expression -> multiplicative_expression PERCENT cast_expression . [ STAR SLASH SEMICOLON RPAREN RIGHT_OP RBRACK RBRACE QUESTION PLUS PERCENT OR_OP NE_OP MINUS LT LE_OP LEFT_OP HAT GT GE_OP EQ_OP COMMA COLON BAR AND_OP AMPERSAND ]
-- On STAR reduce production multiplicative_expression -> multiplicative_expression PERCENT cast_expression
-- On SLASH reduce production multiplicative_expression -> multiplicative_expression PERCENT cast_expression
-- On SEMICOLON reduce production multiplicative_expression -> multiplicative_expression PERCENT cast_expression
-- On RPAREN reduce production multiplicative_expression -> multiplicative_expression PERCENT cast_expression
-- On RIGHT_OP reduce production multiplicative_expression -> multiplicative_expression PERCENT cast_expression
-- On RBRACK reduce production multiplicative_expression -> multiplicative_expression PERCENT cast_expression
-- On RBRACE reduce production multiplicative_expression -> multiplicative_expression PERCENT cast_expression
-- On QUESTION reduce production multiplicative_expression -> multiplicative_expression PERCENT cast_expression
-- On PLUS reduce production multiplicative_expression -> multiplicative_expression PERCENT cast_expression
-- On PERCENT reduce production multiplicative_expression -> multiplicative_expression PERCENT cast_expression
-- On OR_OP reduce production multiplicative_expression -> multiplicative_expression PERCENT cast_expression
-- On NE_OP reduce production multiplicative_expression -> multiplicative_expression PERCENT cast_expression
-- On MINUS reduce production multiplicative_expression -> multiplicative_expression PERCENT cast_expression
-- On LT reduce production multiplicative_expression -> multiplicative_expression PERCENT cast_expression
-- On LE_OP reduce production multiplicative_expression -> multiplicative_expression PERCENT cast_expression
-- On LEFT_OP reduce production multiplicative_expression -> multiplicative_expression PERCENT cast_expression
-- On HAT reduce production multiplicative_expression -> multiplicative_expression PERCENT cast_expression
-- On GT reduce production multiplicative_expression -> multiplicative_expression PERCENT cast_expression
-- On GE_OP reduce production multiplicative_expression -> multiplicative_expression PERCENT cast_expression
-- On EQ_OP reduce production multiplicative_expression -> multiplicative_expression PERCENT cast_expression
-- On COMMA reduce production multiplicative_expression -> multiplicative_expression PERCENT cast_expression
-- On COLON reduce production multiplicative_expression -> multiplicative_expression PERCENT cast_expression
-- On BAR reduce production multiplicative_expression -> multiplicative_expression PERCENT cast_expression
-- On AND_OP reduce production multiplicative_expression -> multiplicative_expression PERCENT cast_expression
-- On AMPERSAND reduce production multiplicative_expression -> multiplicative_expression PERCENT cast_expression

State 79:
multiplicative_expression -> cast_expression . [ STAR SLASH SEMICOLON RPAREN RIGHT_OP RBRACK RBRACE QUESTION PLUS PERCENT OR_OP NE_OP MINUS LT LE_OP LEFT_OP HAT GT GE_OP EQ_OP COMMA COLON BAR AND_OP AMPERSAND ]
-- On STAR reduce production multiplicative_expression -> cast_expression
-- On SLASH reduce production multiplicative_expression -> cast_expression
-- On SEMICOLON reduce production multiplicative_expression -> cast_expression
-- On RPAREN reduce production multiplicative_expression -> cast_expression
-- On RIGHT_OP reduce production multiplicative_expression -> cast_expression
-- On RBRACK reduce production multiplicative_expression -> cast_expression
-- On RBRACE reduce production multiplicative_expression -> cast_expression
-- On QUESTION reduce production multiplicative_expression -> cast_expression
-- On PLUS reduce production multiplicative_expression -> cast_expression
-- On PERCENT reduce production multiplicative_expression -> cast_expression
-- On OR_OP reduce production multiplicative_expression -> cast_expression
-- On NE_OP reduce production multiplicative_expression -> cast_expression
-- On MINUS reduce production multiplicative_expression -> cast_expression
-- On LT reduce production multiplicative_expression -> cast_expression
-- On LE_OP reduce production multiplicative_expression -> cast_expression
-- On LEFT_OP reduce production multiplicative_expression -> cast_expression
-- On HAT reduce production multiplicative_expression -> cast_expression
-- On GT reduce production multiplicative_expression -> cast_expression
-- On GE_OP reduce production multiplicative_expression -> cast_expression
-- On EQ_OP reduce production multiplicative_expression -> cast_expression
-- On COMMA reduce production multiplicative_expression -> cast_expression
-- On COLON reduce production multiplicative_expression -> cast_expression
-- On BAR reduce production multiplicative_expression -> cast_expression
-- On AND_OP reduce production multiplicative_expression -> cast_expression
-- On AMPERSAND reduce production multiplicative_expression -> cast_expression

State 80:
additive_expression -> additive_expression . PLUS multiplicative_expression [ SEMICOLON RPAREN RIGHT_OP RBRACK RBRACE QUESTION PLUS OR_OP NE_OP MINUS LT LE_OP LEFT_OP HAT GT GE_OP EQ_OP COMMA COLON BAR AND_OP AMPERSAND ]
additive_expression -> additive_expression . MINUS multiplicative_expression [ SEMICOLON RPAREN RIGHT_OP RBRACK RBRACE QUESTION PLUS OR_OP NE_OP MINUS LT LE_OP LEFT_OP HAT GT GE_OP EQ_OP COMMA COLON BAR AND_OP AMPERSAND ]
shift_expression -> shift_expression RIGHT_OP additive_expression . [ SEMICOLON RPAREN RIGHT_OP RBRACK RBRACE QUESTION OR_OP NE_OP LT LE_OP LEFT_OP HAT GT GE_OP EQ_OP COMMA COLON BAR AND_OP AMPERSAND ]
-- On PLUS shift to state 81
-- On MINUS shift to state 83
-- On SEMICOLON reduce production shift_expression -> shift_expression RIGHT_OP additive_expression
-- On RPAREN reduce production shift_expression -> shift_expression RIGHT_OP additive_expression
-- On RIGHT_OP reduce production shift_expression -> shift_expression RIGHT_OP additive_expression
-- On RBRACK reduce production shift_expression -> shift_expression RIGHT_OP additive_expression
-- On RBRACE reduce production shift_expression -> shift_expression RIGHT_OP additive_expression
-- On QUESTION reduce production shift_expression -> shift_expression RIGHT_OP additive_expression
-- On OR_OP reduce production shift_expression -> shift_expression RIGHT_OP additive_expression
-- On NE_OP reduce production shift_expression -> shift_expression RIGHT_OP additive_expression
-- On LT reduce production shift_expression -> shift_expression RIGHT_OP additive_expression
-- On LE_OP reduce production shift_expression -> shift_expression RIGHT_OP additive_expression
-- On LEFT_OP reduce production shift_expression -> shift_expression RIGHT_OP additive_expression
-- On HAT reduce production shift_expression -> shift_expression RIGHT_OP additive_expression
-- On GT reduce production shift_expression -> shift_expression RIGHT_OP additive_expression
-- On GE_OP reduce production shift_expression -> shift_expression RIGHT_OP additive_expression
-- On EQ_OP reduce production shift_expression -> shift_expression RIGHT_OP additive_expression
-- On COMMA reduce production shift_expression -> shift_expression RIGHT_OP additive_expression
-- On COLON reduce production shift_expression -> shift_expression RIGHT_OP additive_expression
-- On BAR reduce production shift_expression -> shift_expression RIGHT_OP additive_expression
-- On AND_OP reduce production shift_expression -> shift_expression RIGHT_OP additive_expression
-- On AMPERSAND reduce production shift_expression -> shift_expression RIGHT_OP additive_expression

State 81:
additive_expression -> additive_expression PLUS . multiplicative_expression [ SEMICOLON RPAREN RIGHT_OP RBRACK RBRACE QUESTION PLUS OR_OP NE_OP MINUS LT LE_OP LEFT_OP HAT GT GE_OP EQ_OP COMMA COLON BAR AND_OP AMPERSAND ]
-- On TILDE shift to state 34
-- On STRING_LITERAL shift to state 35
-- On STAR shift to state 36
-- On SIZEOF shift to state 37
-- On PLUS shift to state 38
-- On MINUS shift to state 39
-- On LPAREN shift to state 41
-- On INC_OP shift to state 42
-- On IDENTIFIER shift to state 44
-- On DEC_OP shift to state 45
-- On CONSTANT shift to state 46
-- On BANG shift to state 47
-- On AMPERSAND shift to state 48
-- On unary_operator shift to state 49
-- On unary_expression shift to state 50
-- On primary_expression shift to state 51
-- On postfix_expression shift to state 52
-- On multiplicative_expression shift to state 82
-- On cast_expression shift to state 79

State 82:
additive_expression -> additive_expression PLUS multiplicative_expression . [ SEMICOLON RPAREN RIGHT_OP RBRACK RBRACE QUESTION PLUS OR_OP NE_OP MINUS LT LE_OP LEFT_OP HAT GT GE_OP EQ_OP COMMA COLON BAR AND_OP AMPERSAND ]
multiplicative_expression -> multiplicative_expression . STAR cast_expression [ STAR SLASH SEMICOLON RPAREN RIGHT_OP RBRACK RBRACE QUESTION PLUS PERCENT OR_OP NE_OP MINUS LT LE_OP LEFT_OP HAT GT GE_OP EQ_OP COMMA COLON BAR AND_OP AMPERSAND ]
multiplicative_expression -> multiplicative_expression . SLASH cast_expression [ STAR SLASH SEMICOLON RPAREN RIGHT_OP RBRACK RBRACE QUESTION PLUS PERCENT OR_OP NE_OP MINUS LT LE_OP LEFT_OP HAT GT GE_OP EQ_OP COMMA COLON BAR AND_OP AMPERSAND ]
multiplicative_expression -> multiplicative_expression . PERCENT cast_expression [ STAR SLASH SEMICOLON RPAREN RIGHT_OP RBRACK RBRACE QUESTION PLUS PERCENT OR_OP NE_OP MINUS LT LE_OP LEFT_OP HAT GT GE_OP EQ_OP COMMA COLON BAR AND_OP AMPERSAND ]
-- On STAR shift to state 73
-- On SLASH shift to state 75
-- On PERCENT shift to state 77
-- On SEMICOLON reduce production additive_expression -> additive_expression PLUS multiplicative_expression
-- On RPAREN reduce production additive_expression -> additive_expression PLUS multiplicative_expression
-- On RIGHT_OP reduce production additive_expression -> additive_expression PLUS multiplicative_expression
-- On RBRACK reduce production additive_expression -> additive_expression PLUS multiplicative_expression
-- On RBRACE reduce production additive_expression -> additive_expression PLUS multiplicative_expression
-- On QUESTION reduce production additive_expression -> additive_expression PLUS multiplicative_expression
-- On PLUS reduce production additive_expression -> additive_expression PLUS multiplicative_expression
-- On OR_OP reduce production additive_expression -> additive_expression PLUS multiplicative_expression
-- On NE_OP reduce production additive_expression -> additive_expression PLUS multiplicative_expression
-- On MINUS reduce production additive_expression -> additive_expression PLUS multiplicative_expression
-- On LT reduce production additive_expression -> additive_expression PLUS multiplicative_expression
-- On LE_OP reduce production additive_expression -> additive_expression PLUS multiplicative_expression
-- On LEFT_OP reduce production additive_expression -> additive_expression PLUS multiplicative_expression
-- On HAT reduce production additive_expression -> additive_expression PLUS multiplicative_expression
-- On GT reduce production additive_expression -> additive_expression PLUS multiplicative_expression
-- On GE_OP reduce production additive_expression -> additive_expression PLUS multiplicative_expression
-- On EQ_OP reduce production additive_expression -> additive_expression PLUS multiplicative_expression
-- On COMMA reduce production additive_expression -> additive_expression PLUS multiplicative_expression
-- On COLON reduce production additive_expression -> additive_expression PLUS multiplicative_expression
-- On BAR reduce production additive_expression -> additive_expression PLUS multiplicative_expression
-- On AND_OP reduce production additive_expression -> additive_expression PLUS multiplicative_expression
-- On AMPERSAND reduce production additive_expression -> additive_expression PLUS multiplicative_expression

State 83:
additive_expression -> additive_expression MINUS . multiplicative_expression [ SEMICOLON RPAREN RIGHT_OP RBRACK RBRACE QUESTION PLUS OR_OP NE_OP MINUS LT LE_OP LEFT_OP HAT GT GE_OP EQ_OP COMMA COLON BAR AND_OP AMPERSAND ]
-- On TILDE shift to state 34
-- On STRING_LITERAL shift to state 35
-- On STAR shift to state 36
-- On SIZEOF shift to state 37
-- On PLUS shift to state 38
-- On MINUS shift to state 39
-- On LPAREN shift to state 41
-- On INC_OP shift to state 42
-- On IDENTIFIER shift to state 44
-- On DEC_OP shift to state 45
-- On CONSTANT shift to state 46
-- On BANG shift to state 47
-- On AMPERSAND shift to state 48
-- On unary_operator shift to state 49
-- On unary_expression shift to state 50
-- On primary_expression shift to state 51
-- On postfix_expression shift to state 52
-- On multiplicative_expression shift to state 84
-- On cast_expression shift to state 79

State 84:
additive_expression -> additive_expression MINUS multiplicative_expression . [ SEMICOLON RPAREN RIGHT_OP RBRACK RBRACE QUESTION PLUS OR_OP NE_OP MINUS LT LE_OP LEFT_OP HAT GT GE_OP EQ_OP COMMA COLON BAR AND_OP AMPERSAND ]
multiplicative_expression -> multiplicative_expression . STAR cast_expression [ STAR SLASH SEMICOLON RPAREN RIGHT_OP RBRACK RBRACE QUESTION PLUS PERCENT OR_OP NE_OP MINUS LT LE_OP LEFT_OP HAT GT GE_OP EQ_OP COMMA COLON BAR AND_OP AMPERSAND ]
multiplicative_expression -> multiplicative_expression . SLASH cast_expression [ STAR SLASH SEMICOLON RPAREN RIGHT_OP RBRACK RBRACE QUESTION PLUS PERCENT OR_OP NE_OP MINUS LT LE_OP LEFT_OP HAT GT GE_OP EQ_OP COMMA COLON BAR AND_OP AMPERSAND ]
multiplicative_expression -> multiplicative_expression . PERCENT cast_expression [ STAR SLASH SEMICOLON RPAREN RIGHT_OP RBRACK RBRACE QUESTION PLUS PERCENT OR_OP NE_OP MINUS LT LE_OP LEFT_OP HAT GT GE_OP EQ_OP COMMA COLON BAR AND_OP AMPERSAND ]
-- On STAR shift to state 73
-- On SLASH shift to state 75
-- On PERCENT shift to state 77
-- On SEMICOLON reduce production additive_expression -> additive_expression MINUS multiplicative_expression
-- On RPAREN reduce production additive_expression -> additive_expression MINUS multiplicative_expression
-- On RIGHT_OP reduce production additive_expression -> additive_expression MINUS multiplicative_expression
-- On RBRACK reduce production additive_expression -> additive_expression MINUS multiplicative_expression
-- On RBRACE reduce production additive_expression -> additive_expression MINUS multiplicative_expression
-- On QUESTION reduce production additive_expression -> additive_expression MINUS multiplicative_expression
-- On PLUS reduce production additive_expression -> additive_expression MINUS multiplicative_expression
-- On OR_OP reduce production additive_expression -> additive_expression MINUS multiplicative_expression
-- On NE_OP reduce production additive_expression -> additive_expression MINUS multiplicative_expression
-- On MINUS reduce production additive_expression -> additive_expression MINUS multiplicative_expression
-- On LT reduce production additive_expression -> additive_expression MINUS multiplicative_expression
-- On LE_OP reduce production additive_expression -> additive_expression MINUS multiplicative_expression
-- On LEFT_OP reduce production additive_expression -> additive_expression MINUS multiplicative_expression
-- On HAT reduce production additive_expression -> additive_expression MINUS multiplicative_expression
-- On GT reduce production additive_expression -> additive_expression MINUS multiplicative_expression
-- On GE_OP reduce production additive_expression -> additive_expression MINUS multiplicative_expression
-- On EQ_OP reduce production additive_expression -> additive_expression MINUS multiplicative_expression
-- On COMMA reduce production additive_expression -> additive_expression MINUS multiplicative_expression
-- On COLON reduce production additive_expression -> additive_expression MINUS multiplicative_expression
-- On BAR reduce production additive_expression -> additive_expression MINUS multiplicative_expression
-- On AND_OP reduce production additive_expression -> additive_expression MINUS multiplicative_expression
-- On AMPERSAND reduce production additive_expression -> additive_expression MINUS multiplicative_expression

State 85:
shift_expression -> shift_expression LEFT_OP . additive_expression [ SEMICOLON RPAREN RIGHT_OP RBRACK RBRACE QUESTION OR_OP NE_OP LT LE_OP LEFT_OP HAT GT GE_OP EQ_OP COMMA COLON BAR AND_OP AMPERSAND ]
-- On TILDE shift to state 34
-- On STRING_LITERAL shift to state 35
-- On STAR shift to state 36
-- On SIZEOF shift to state 37
-- On PLUS shift to state 38
-- On MINUS shift to state 39
-- On LPAREN shift to state 41
-- On INC_OP shift to state 42
-- On IDENTIFIER shift to state 44
-- On DEC_OP shift to state 45
-- On CONSTANT shift to state 46
-- On BANG shift to state 47
-- On AMPERSAND shift to state 48
-- On unary_operator shift to state 49
-- On unary_expression shift to state 50
-- On primary_expression shift to state 51
-- On postfix_expression shift to state 52
-- On multiplicative_expression shift to state 72
-- On cast_expression shift to state 79
-- On additive_expression shift to state 86

State 86:
additive_expression -> additive_expression . PLUS multiplicative_expression [ SEMICOLON RPAREN RIGHT_OP RBRACK RBRACE QUESTION PLUS OR_OP NE_OP MINUS LT LE_OP LEFT_OP HAT GT GE_OP EQ_OP COMMA COLON BAR AND_OP AMPERSAND ]
additive_expression -> additive_expression . MINUS multiplicative_expression [ SEMICOLON RPAREN RIGHT_OP RBRACK RBRACE QUESTION PLUS OR_OP NE_OP MINUS LT LE_OP LEFT_OP HAT GT GE_OP EQ_OP COMMA COLON BAR AND_OP AMPERSAND ]
shift_expression -> shift_expression LEFT_OP additive_expression . [ SEMICOLON RPAREN RIGHT_OP RBRACK RBRACE QUESTION OR_OP NE_OP LT LE_OP LEFT_OP HAT GT GE_OP EQ_OP COMMA COLON BAR AND_OP AMPERSAND ]
-- On PLUS shift to state 81
-- On MINUS shift to state 83
-- On SEMICOLON reduce production shift_expression -> shift_expression LEFT_OP additive_expression
-- On RPAREN reduce production shift_expression -> shift_expression LEFT_OP additive_expression
-- On RIGHT_OP reduce production shift_expression -> shift_expression LEFT_OP additive_expression
-- On RBRACK reduce production shift_expression -> shift_expression LEFT_OP additive_expression
-- On RBRACE reduce production shift_expression -> shift_expression LEFT_OP additive_expression
-- On QUESTION reduce production shift_expression -> shift_expression LEFT_OP additive_expression
-- On OR_OP reduce production shift_expression -> shift_expression LEFT_OP additive_expression
-- On NE_OP reduce production shift_expression -> shift_expression LEFT_OP additive_expression
-- On LT reduce production shift_expression -> shift_expression LEFT_OP additive_expression
-- On LE_OP reduce production shift_expression -> shift_expression LEFT_OP additive_expression
-- On LEFT_OP reduce production shift_expression -> shift_expression LEFT_OP additive_expression
-- On HAT reduce production shift_expression -> shift_expression LEFT_OP additive_expression
-- On GT reduce production shift_expression -> shift_expression LEFT_OP additive_expression
-- On GE_OP reduce production shift_expression -> shift_expression LEFT_OP additive_expression
-- On EQ_OP reduce production shift_expression -> shift_expression LEFT_OP additive_expression
-- On COMMA reduce production shift_expression -> shift_expression LEFT_OP additive_expression
-- On COLON reduce production shift_expression -> shift_expression LEFT_OP additive_expression
-- On BAR reduce production shift_expression -> shift_expression LEFT_OP additive_expression
-- On AND_OP reduce production shift_expression -> shift_expression LEFT_OP additive_expression
-- On AMPERSAND reduce production shift_expression -> shift_expression LEFT_OP additive_expression

State 87:
equality_expression -> relational_expression . [ SEMICOLON RPAREN RBRACK RBRACE QUESTION OR_OP NE_OP HAT EQ_OP COMMA COLON BAR AND_OP AMPERSAND ]
relational_expression -> relational_expression . LT shift_expression [ SEMICOLON RPAREN RBRACK RBRACE QUESTION OR_OP NE_OP LT LE_OP HAT GT GE_OP EQ_OP COMMA COLON BAR AND_OP AMPERSAND ]
relational_expression -> relational_expression . GT shift_expression [ SEMICOLON RPAREN RBRACK RBRACE QUESTION OR_OP NE_OP LT LE_OP HAT GT GE_OP EQ_OP COMMA COLON BAR AND_OP AMPERSAND ]
relational_expression -> relational_expression . LE_OP shift_expression [ SEMICOLON RPAREN RBRACK RBRACE QUESTION OR_OP NE_OP LT LE_OP HAT GT GE_OP EQ_OP COMMA COLON BAR AND_OP AMPERSAND ]
relational_expression -> relational_expression . GE_OP shift_expression [ SEMICOLON RPAREN RBRACK RBRACE QUESTION OR_OP NE_OP LT LE_OP HAT GT GE_OP EQ_OP COMMA COLON BAR AND_OP AMPERSAND ]
-- On LT shift to state 88
-- On LE_OP shift to state 91
-- On GT shift to state 93
-- On GE_OP shift to state 95
-- On SEMICOLON reduce production equality_expression -> relational_expression
-- On RPAREN reduce production equality_expression -> relational_expression
-- On RBRACK reduce production equality_expression -> relational_expression
-- On RBRACE reduce production equality_expression -> relational_expression
-- On QUESTION reduce production equality_expression -> relational_expression
-- On OR_OP reduce production equality_expression -> relational_expression
-- On NE_OP reduce production equality_expression -> relational_expression
-- On HAT reduce production equality_expression -> relational_expression
-- On EQ_OP reduce production equality_expression -> relational_expression
-- On COMMA reduce production equality_expression -> relational_expression
-- On COLON reduce production equality_expression -> relational_expression
-- On BAR reduce production equality_expression -> relational_expression
-- On AND_OP reduce production equality_expression -> relational_expression
-- On AMPERSAND reduce production equality_expression -> relational_expression

State 88:
relational_expression -> relational_expression LT . shift_expression [ SEMICOLON RPAREN RBRACK RBRACE QUESTION OR_OP NE_OP LT LE_OP HAT GT GE_OP EQ_OP COMMA COLON BAR AND_OP AMPERSAND ]
-- On TILDE shift to state 34
-- On STRING_LITERAL shift to state 35
-- On STAR shift to state 36
-- On SIZEOF shift to state 37
-- On PLUS shift to state 38
-- On MINUS shift to state 39
-- On LPAREN shift to state 41
-- On INC_OP shift to state 42
-- On IDENTIFIER shift to state 44
-- On DEC_OP shift to state 45
-- On CONSTANT shift to state 46
-- On BANG shift to state 47
-- On AMPERSAND shift to state 48
-- On unary_operator shift to state 49
-- On unary_expression shift to state 50
-- On shift_expression shift to state 89
-- On primary_expression shift to state 51
-- On postfix_expression shift to state 52
-- On multiplicative_expression shift to state 72
-- On cast_expression shift to state 79
-- On additive_expression shift to state 90

State 89:
relational_expression -> relational_expression LT shift_expression . [ SEMICOLON RPAREN RBRACK RBRACE QUESTION OR_OP NE_OP LT LE_OP HAT GT GE_OP EQ_OP COMMA COLON BAR AND_OP AMPERSAND ]
shift_expression -> shift_expression . LEFT_OP additive_expression [ SEMICOLON RPAREN RIGHT_OP RBRACK RBRACE QUESTION OR_OP NE_OP LT LE_OP LEFT_OP HAT GT GE_OP EQ_OP COMMA COLON BAR AND_OP AMPERSAND ]
shift_expression -> shift_expression . RIGHT_OP additive_expression [ SEMICOLON RPAREN RIGHT_OP RBRACK RBRACE QUESTION OR_OP NE_OP LT LE_OP LEFT_OP HAT GT GE_OP EQ_OP COMMA COLON BAR AND_OP AMPERSAND ]
-- On RIGHT_OP shift to state 71
-- On LEFT_OP shift to state 85
-- On SEMICOLON reduce production relational_expression -> relational_expression LT shift_expression
-- On RPAREN reduce production relational_expression -> relational_expression LT shift_expression
-- On RBRACK reduce production relational_expression -> relational_expression LT shift_expression
-- On RBRACE reduce production relational_expression -> relational_expression LT shift_expression
-- On QUESTION reduce production relational_expression -> relational_expression LT shift_expression
-- On OR_OP reduce production relational_expression -> relational_expression LT shift_expression
-- On NE_OP reduce production relational_expression -> relational_expression LT shift_expression
-- On LT reduce production relational_expression -> relational_expression LT shift_expression
-- On LE_OP reduce production relational_expression -> relational_expression LT shift_expression
-- On HAT reduce production relational_expression -> relational_expression LT shift_expression
-- On GT reduce production relational_expression -> relational_expression LT shift_expression
-- On GE_OP reduce production relational_expression -> relational_expression LT shift_expression
-- On EQ_OP reduce production relational_expression -> relational_expression LT shift_expression
-- On COMMA reduce production relational_expression -> relational_expression LT shift_expression
-- On COLON reduce production relational_expression -> relational_expression LT shift_expression
-- On BAR reduce production relational_expression -> relational_expression LT shift_expression
-- On AND_OP reduce production relational_expression -> relational_expression LT shift_expression
-- On AMPERSAND reduce production relational_expression -> relational_expression LT shift_expression

State 90:
additive_expression -> additive_expression . PLUS multiplicative_expression [ SEMICOLON RPAREN RIGHT_OP RBRACK RBRACE QUESTION PLUS OR_OP NE_OP MINUS LT LE_OP LEFT_OP HAT GT GE_OP EQ_OP COMMA COLON BAR AND_OP AMPERSAND ]
additive_expression -> additive_expression . MINUS multiplicative_expression [ SEMICOLON RPAREN RIGHT_OP RBRACK RBRACE QUESTION PLUS OR_OP NE_OP MINUS LT LE_OP LEFT_OP HAT GT GE_OP EQ_OP COMMA COLON BAR AND_OP AMPERSAND ]
shift_expression -> additive_expression . [ SEMICOLON RPAREN RIGHT_OP RBRACK RBRACE QUESTION OR_OP NE_OP LT LE_OP LEFT_OP HAT GT GE_OP EQ_OP COMMA COLON BAR AND_OP AMPERSAND ]
-- On PLUS shift to state 81
-- On MINUS shift to state 83
-- On SEMICOLON reduce production shift_expression -> additive_expression
-- On RPAREN reduce production shift_expression -> additive_expression
-- On RIGHT_OP reduce production shift_expression -> additive_expression
-- On RBRACK reduce production shift_expression -> additive_expression
-- On RBRACE reduce production shift_expression -> additive_expression
-- On QUESTION reduce production shift_expression -> additive_expression
-- On OR_OP reduce production shift_expression -> additive_expression
-- On NE_OP reduce production shift_expression -> additive_expression
-- On LT reduce production shift_expression -> additive_expression
-- On LE_OP reduce production shift_expression -> additive_expression
-- On LEFT_OP reduce production shift_expression -> additive_expression
-- On HAT reduce production shift_expression -> additive_expression
-- On GT reduce production shift_expression -> additive_expression
-- On GE_OP reduce production shift_expression -> additive_expression
-- On EQ_OP reduce production shift_expression -> additive_expression
-- On COMMA reduce production shift_expression -> additive_expression
-- On COLON reduce production shift_expression -> additive_expression
-- On BAR reduce production shift_expression -> additive_expression
-- On AND_OP reduce production shift_expression -> additive_expression
-- On AMPERSAND reduce production shift_expression -> additive_expression

State 91:
relational_expression -> relational_expression LE_OP . shift_expression [ SEMICOLON RPAREN RBRACK RBRACE QUESTION OR_OP NE_OP LT LE_OP HAT GT GE_OP EQ_OP COMMA COLON BAR AND_OP AMPERSAND ]
-- On TILDE shift to state 34
-- On STRING_LITERAL shift to state 35
-- On STAR shift to state 36
-- On SIZEOF shift to state 37
-- On PLUS shift to state 38
-- On MINUS shift to state 39
-- On LPAREN shift to state 41
-- On INC_OP shift to state 42
-- On IDENTIFIER shift to state 44
-- On DEC_OP shift to state 45
-- On CONSTANT shift to state 46
-- On BANG shift to state 47
-- On AMPERSAND shift to state 48
-- On unary_operator shift to state 49
-- On unary_expression shift to state 50
-- On shift_expression shift to state 92
-- On primary_expression shift to state 51
-- On postfix_expression shift to state 52
-- On multiplicative_expression shift to state 72
-- On cast_expression shift to state 79
-- On additive_expression shift to state 90

State 92:
relational_expression -> relational_expression LE_OP shift_expression . [ SEMICOLON RPAREN RBRACK RBRACE QUESTION OR_OP NE_OP LT LE_OP HAT GT GE_OP EQ_OP COMMA COLON BAR AND_OP AMPERSAND ]
shift_expression -> shift_expression . LEFT_OP additive_expression [ SEMICOLON RPAREN RIGHT_OP RBRACK RBRACE QUESTION OR_OP NE_OP LT LE_OP LEFT_OP HAT GT GE_OP EQ_OP COMMA COLON BAR AND_OP AMPERSAND ]
shift_expression -> shift_expression . RIGHT_OP additive_expression [ SEMICOLON RPAREN RIGHT_OP RBRACK RBRACE QUESTION OR_OP NE_OP LT LE_OP LEFT_OP HAT GT GE_OP EQ_OP COMMA COLON BAR AND_OP AMPERSAND ]
-- On RIGHT_OP shift to state 71
-- On LEFT_OP shift to state 85
-- On SEMICOLON reduce production relational_expression -> relational_expression LE_OP shift_expression
-- On RPAREN reduce production relational_expression -> relational_expression LE_OP shift_expression
-- On RBRACK reduce production relational_expression -> relational_expression LE_OP shift_expression
-- On RBRACE reduce production relational_expression -> relational_expression LE_OP shift_expression
-- On QUESTION reduce production relational_expression -> relational_expression LE_OP shift_expression
-- On OR_OP reduce production relational_expression -> relational_expression LE_OP shift_expression
-- On NE_OP reduce production relational_expression -> relational_expression LE_OP shift_expression
-- On LT reduce production relational_expression -> relational_expression LE_OP shift_expression
-- On LE_OP reduce production relational_expression -> relational_expression LE_OP shift_expression
-- On HAT reduce production relational_expression -> relational_expression LE_OP shift_expression
-- On GT reduce production relational_expression -> relational_expression LE_OP shift_expression
-- On GE_OP reduce production relational_expression -> relational_expression LE_OP shift_expression
-- On EQ_OP reduce production relational_expression -> relational_expression LE_OP shift_expression
-- On COMMA reduce production relational_expression -> relational_expression LE_OP shift_expression
-- On COLON reduce production relational_expression -> relational_expression LE_OP shift_expression
-- On BAR reduce production relational_expression -> relational_expression LE_OP shift_expression
-- On AND_OP reduce production relational_expression -> relational_expression LE_OP shift_expression
-- On AMPERSAND reduce production relational_expression -> relational_expression LE_OP shift_expression

State 93:
relational_expression -> relational_expression GT . shift_expression [ SEMICOLON RPAREN RBRACK RBRACE QUESTION OR_OP NE_OP LT LE_OP HAT GT GE_OP EQ_OP COMMA COLON BAR AND_OP AMPERSAND ]
-- On TILDE shift to state 34
-- On STRING_LITERAL shift to state 35
-- On STAR shift to state 36
-- On SIZEOF shift to state 37
-- On PLUS shift to state 38
-- On MINUS shift to state 39
-- On LPAREN shift to state 41
-- On INC_OP shift to state 42
-- On IDENTIFIER shift to state 44
-- On DEC_OP shift to state 45
-- On CONSTANT shift to state 46
-- On BANG shift to state 47
-- On AMPERSAND shift to state 48
-- On unary_operator shift to state 49
-- On unary_expression shift to state 50
-- On shift_expression shift to state 94
-- On primary_expression shift to state 51
-- On postfix_expression shift to state 52
-- On multiplicative_expression shift to state 72
-- On cast_expression shift to state 79
-- On additive_expression shift to state 90

State 94:
relational_expression -> relational_expression GT shift_expression . [ SEMICOLON RPAREN RBRACK RBRACE QUESTION OR_OP NE_OP LT LE_OP HAT GT GE_OP EQ_OP COMMA COLON BAR AND_OP AMPERSAND ]
shift_expression -> shift_expression . LEFT_OP additive_expression [ SEMICOLON RPAREN RIGHT_OP RBRACK RBRACE QUESTION OR_OP NE_OP LT LE_OP LEFT_OP HAT GT GE_OP EQ_OP COMMA COLON BAR AND_OP AMPERSAND ]
shift_expression -> shift_expression . RIGHT_OP additive_expression [ SEMICOLON RPAREN RIGHT_OP RBRACK RBRACE QUESTION OR_OP NE_OP LT LE_OP LEFT_OP HAT GT GE_OP EQ_OP COMMA COLON BAR AND_OP AMPERSAND ]
-- On RIGHT_OP shift to state 71
-- On LEFT_OP shift to state 85
-- On SEMICOLON reduce production relational_expression -> relational_expression GT shift_expression
-- On RPAREN reduce production relational_expression -> relational_expression GT shift_expression
-- On RBRACK reduce production relational_expression -> relational_expression GT shift_expression
-- On RBRACE reduce production relational_expression -> relational_expression GT shift_expression
-- On QUESTION reduce production relational_expression -> relational_expression GT shift_expression
-- On OR_OP reduce production relational_expression -> relational_expression GT shift_expression
-- On NE_OP reduce production relational_expression -> relational_expression GT shift_expression
-- On LT reduce production relational_expression -> relational_expression GT shift_expression
-- On LE_OP reduce production relational_expression -> relational_expression GT shift_expression
-- On HAT reduce production relational_expression -> relational_expression GT shift_expression
-- On GT reduce production relational_expression -> relational_expression GT shift_expression
-- On GE_OP reduce production relational_expression -> relational_expression GT shift_expression
-- On EQ_OP reduce production relational_expression -> relational_expression GT shift_expression
-- On COMMA reduce production relational_expression -> relational_expression GT shift_expression
-- On COLON reduce production relational_expression -> relational_expression GT shift_expression
-- On BAR reduce production relational_expression -> relational_expression GT shift_expression
-- On AND_OP reduce production relational_expression -> relational_expression GT shift_expression
-- On AMPERSAND reduce production relational_expression -> relational_expression GT shift_expression

State 95:
relational_expression -> relational_expression GE_OP . shift_expression [ SEMICOLON RPAREN RBRACK RBRACE QUESTION OR_OP NE_OP LT LE_OP HAT GT GE_OP EQ_OP COMMA COLON BAR AND_OP AMPERSAND ]
-- On TILDE shift to state 34
-- On STRING_LITERAL shift to state 35
-- On STAR shift to state 36
-- On SIZEOF shift to state 37
-- On PLUS shift to state 38
-- On MINUS shift to state 39
-- On LPAREN shift to state 41
-- On INC_OP shift to state 42
-- On IDENTIFIER shift to state 44
-- On DEC_OP shift to state 45
-- On CONSTANT shift to state 46
-- On BANG shift to state 47
-- On AMPERSAND shift to state 48
-- On unary_operator shift to state 49
-- On unary_expression shift to state 50
-- On shift_expression shift to state 96
-- On primary_expression shift to state 51
-- On postfix_expression shift to state 52
-- On multiplicative_expression shift to state 72
-- On cast_expression shift to state 79
-- On additive_expression shift to state 90

State 96:
relational_expression -> relational_expression GE_OP shift_expression . [ SEMICOLON RPAREN RBRACK RBRACE QUESTION OR_OP NE_OP LT LE_OP HAT GT GE_OP EQ_OP COMMA COLON BAR AND_OP AMPERSAND ]
shift_expression -> shift_expression . LEFT_OP additive_expression [ SEMICOLON RPAREN RIGHT_OP RBRACK RBRACE QUESTION OR_OP NE_OP LT LE_OP LEFT_OP HAT GT GE_OP EQ_OP COMMA COLON BAR AND_OP AMPERSAND ]
shift_expression -> shift_expression . RIGHT_OP additive_expression [ SEMICOLON RPAREN RIGHT_OP RBRACK RBRACE QUESTION OR_OP NE_OP LT LE_OP LEFT_OP HAT GT GE_OP EQ_OP COMMA COLON BAR AND_OP AMPERSAND ]
-- On RIGHT_OP shift to state 71
-- On LEFT_OP shift to state 85
-- On SEMICOLON reduce production relational_expression -> relational_expression GE_OP shift_expression
-- On RPAREN reduce production relational_expression -> relational_expression GE_OP shift_expression
-- On RBRACK reduce production relational_expression -> relational_expression GE_OP shift_expression
-- On RBRACE reduce production relational_expression -> relational_expression GE_OP shift_expression
-- On QUESTION reduce production relational_expression -> relational_expression GE_OP shift_expression
-- On OR_OP reduce production relational_expression -> relational_expression GE_OP shift_expression
-- On NE_OP reduce production relational_expression -> relational_expression GE_OP shift_expression
-- On LT reduce production relational_expression -> relational_expression GE_OP shift_expression
-- On LE_OP reduce production relational_expression -> relational_expression GE_OP shift_expression
-- On HAT reduce production relational_expression -> relational_expression GE_OP shift_expression
-- On GT reduce production relational_expression -> relational_expression GE_OP shift_expression
-- On GE_OP reduce production relational_expression -> relational_expression GE_OP shift_expression
-- On EQ_OP reduce production relational_expression -> relational_expression GE_OP shift_expression
-- On COMMA reduce production relational_expression -> relational_expression GE_OP shift_expression
-- On COLON reduce production relational_expression -> relational_expression GE_OP shift_expression
-- On BAR reduce production relational_expression -> relational_expression GE_OP shift_expression
-- On AND_OP reduce production relational_expression -> relational_expression GE_OP shift_expression
-- On AMPERSAND reduce production relational_expression -> relational_expression GE_OP shift_expression

State 97:
conditional_expression -> logical_or_expression . [ SEMICOLON RPAREN RBRACK RBRACE COMMA COLON ]
conditional_expression -> logical_or_expression . QUESTION expression COLON conditional_expression [ SEMICOLON RPAREN RBRACK RBRACE COMMA COLON ]
logical_or_expression -> logical_or_expression . OR_OP logical_and_expression [ SEMICOLON RPAREN RBRACK RBRACE QUESTION OR_OP COMMA COLON ]
-- On QUESTION shift to state 98
-- On OR_OP shift to state 123
-- On SEMICOLON reduce production conditional_expression -> logical_or_expression
-- On RPAREN reduce production conditional_expression -> logical_or_expression
-- On RBRACK reduce production conditional_expression -> logical_or_expression
-- On RBRACE reduce production conditional_expression -> logical_or_expression
-- On COMMA reduce production conditional_expression -> logical_or_expression
-- On COLON reduce production conditional_expression -> logical_or_expression

State 98:
conditional_expression -> logical_or_expression QUESTION . expression COLON conditional_expression [ SEMICOLON RPAREN RBRACK RBRACE COMMA COLON ]
-- On TILDE shift to state 34
-- On STRING_LITERAL shift to state 35
-- On STAR shift to state 36
-- On SIZEOF shift to state 37
-- On PLUS shift to state 38
-- On MINUS shift to state 39
-- On LPAREN shift to state 41
-- On INC_OP shift to state 42
-- On IDENTIFIER shift to state 44
-- On DEC_OP shift to state 45
-- On CONSTANT shift to state 46
-- On BANG shift to state 47
-- On AMPERSAND shift to state 48
-- On unary_operator shift to state 49
-- On unary_expression shift to state 57
-- On shift_expression shift to state 70
-- On relational_expression shift to state 87
-- On primary_expression shift to state 51
-- On postfix_expression shift to state 52
-- On multiplicative_expression shift to state 72
-- On logical_or_expression shift to state 97
-- On logical_and_expression shift to state 99
-- On inclusive_or_expression shift to state 115
-- On expression shift to state 116
-- On exclusive_or_expression shift to state 114
-- On equality_expression shift to state 105
-- On conditional_expression shift to state 118
-- On cast_expression shift to state 79
-- On assignment_expression shift to state 122
-- On and_expression shift to state 113
-- On additive_expression shift to state 90

State 99:
logical_and_expression -> logical_and_expression . AND_OP inclusive_or_expression [ SEMICOLON RPAREN RBRACK RBRACE QUESTION OR_OP COMMA COLON AND_OP ]
logical_or_expression -> logical_and_expression . [ SEMICOLON RPAREN RBRACK RBRACE QUESTION OR_OP COMMA COLON ]
-- On AND_OP shift to state 100
-- On SEMICOLON reduce production logical_or_expression -> logical_and_expression
-- On RPAREN reduce production logical_or_expression -> logical_and_expression
-- On RBRACK reduce production logical_or_expression -> logical_and_expression
-- On RBRACE reduce production logical_or_expression -> logical_and_expression
-- On QUESTION reduce production logical_or_expression -> logical_and_expression
-- On OR_OP reduce production logical_or_expression -> logical_and_expression
-- On COMMA reduce production logical_or_expression -> logical_and_expression
-- On COLON reduce production logical_or_expression -> logical_and_expression

State 100:
logical_and_expression -> logical_and_expression AND_OP . inclusive_or_expression [ SEMICOLON RPAREN RBRACK RBRACE QUESTION OR_OP COMMA COLON AND_OP ]
-- On TILDE shift to state 34
-- On STRING_LITERAL shift to state 35
-- On STAR shift to state 36
-- On SIZEOF shift to state 37
-- On PLUS shift to state 38
-- On MINUS shift to state 39
-- On LPAREN shift to state 41
-- On INC_OP shift to state 42
-- On IDENTIFIER shift to state 44
-- On DEC_OP shift to state 45
-- On CONSTANT shift to state 46
-- On BANG shift to state 47
-- On AMPERSAND shift to state 48
-- On unary_operator shift to state 49
-- On unary_expression shift to state 50
-- On shift_expression shift to state 70
-- On relational_expression shift to state 87
-- On primary_expression shift to state 51
-- On postfix_expression shift to state 52
-- On multiplicative_expression shift to state 72
-- On inclusive_or_expression shift to state 101
-- On exclusive_or_expression shift to state 114
-- On equality_expression shift to state 105
-- On cast_expression shift to state 79
-- On and_expression shift to state 113
-- On additive_expression shift to state 90

State 101:
inclusive_or_expression -> inclusive_or_expression . BAR exclusive_or_expression [ SEMICOLON RPAREN RBRACK RBRACE QUESTION OR_OP COMMA COLON BAR AND_OP ]
logical_and_expression -> logical_and_expression AND_OP inclusive_or_expression . [ SEMICOLON RPAREN RBRACK RBRACE QUESTION OR_OP COMMA COLON AND_OP ]
-- On BAR shift to state 102
-- On SEMICOLON reduce production logical_and_expression -> logical_and_expression AND_OP inclusive_or_expression
-- On RPAREN reduce production logical_and_expression -> logical_and_expression AND_OP inclusive_or_expression
-- On RBRACK reduce production logical_and_expression -> logical_and_expression AND_OP inclusive_or_expression
-- On RBRACE reduce production logical_and_expression -> logical_and_expression AND_OP inclusive_or_expression
-- On QUESTION reduce production logical_and_expression -> logical_and_expression AND_OP inclusive_or_expression
-- On OR_OP reduce production logical_and_expression -> logical_and_expression AND_OP inclusive_or_expression
-- On COMMA reduce production logical_and_expression -> logical_and_expression AND_OP inclusive_or_expression
-- On COLON reduce production logical_and_expression -> logical_and_expression AND_OP inclusive_or_expression
-- On AND_OP reduce production logical_and_expression -> logical_and_expression AND_OP inclusive_or_expression

State 102:
inclusive_or_expression -> inclusive_or_expression BAR . exclusive_or_expression [ SEMICOLON RPAREN RBRACK RBRACE QUESTION OR_OP COMMA COLON BAR AND_OP ]
-- On TILDE shift to state 34
-- On STRING_LITERAL shift to state 35
-- On STAR shift to state 36
-- On SIZEOF shift to state 37
-- On PLUS shift to state 38
-- On MINUS shift to state 39
-- On LPAREN shift to state 41
-- On INC_OP shift to state 42
-- On IDENTIFIER shift to state 44
-- On DEC_OP shift to state 45
-- On CONSTANT shift to state 46
-- On BANG shift to state 47
-- On AMPERSAND shift to state 48
-- On unary_operator shift to state 49
-- On unary_expression shift to state 50
-- On shift_expression shift to state 70
-- On relational_expression shift to state 87
-- On primary_expression shift to state 51
-- On postfix_expression shift to state 52
-- On multiplicative_expression shift to state 72
-- On exclusive_or_expression shift to state 103
-- On equality_expression shift to state 105
-- On cast_expression shift to state 79
-- On and_expression shift to state 113
-- On additive_expression shift to state 90

State 103:
exclusive_or_expression -> exclusive_or_expression . HAT and_expression [ SEMICOLON RPAREN RBRACK RBRACE QUESTION OR_OP HAT COMMA COLON BAR AND_OP ]
inclusive_or_expression -> inclusive_or_expression BAR exclusive_or_expression . [ SEMICOLON RPAREN RBRACK RBRACE QUESTION OR_OP COMMA COLON BAR AND_OP ]
-- On HAT shift to state 104
-- On SEMICOLON reduce production inclusive_or_expression -> inclusive_or_expression BAR exclusive_or_expression
-- On RPAREN reduce production inclusive_or_expression -> inclusive_or_expression BAR exclusive_or_expression
-- On RBRACK reduce production inclusive_or_expression -> inclusive_or_expression BAR exclusive_or_expression
-- On RBRACE reduce production inclusive_or_expression -> inclusive_or_expression BAR exclusive_or_expression
-- On QUESTION reduce production inclusive_or_expression -> inclusive_or_expression BAR exclusive_or_expression
-- On OR_OP reduce production inclusive_or_expression -> inclusive_or_expression BAR exclusive_or_expression
-- On COMMA reduce production inclusive_or_expression -> inclusive_or_expression BAR exclusive_or_expression
-- On COLON reduce production inclusive_or_expression -> inclusive_or_expression BAR exclusive_or_expression
-- On BAR reduce production inclusive_or_expression -> inclusive_or_expression BAR exclusive_or_expression
-- On AND_OP reduce production inclusive_or_expression -> inclusive_or_expression BAR exclusive_or_expression

State 104:
exclusive_or_expression -> exclusive_or_expression HAT . and_expression [ SEMICOLON RPAREN RBRACK RBRACE QUESTION OR_OP HAT COMMA COLON BAR AND_OP ]
-- On TILDE shift to state 34
-- On STRING_LITERAL shift to state 35
-- On STAR shift to state 36
-- On SIZEOF shift to state 37
-- On PLUS shift to state 38
-- On MINUS shift to state 39
-- On LPAREN shift to state 41
-- On INC_OP shift to state 42
-- On IDENTIFIER shift to state 44
-- On DEC_OP shift to state 45
-- On CONSTANT shift to state 46
-- On BANG shift to state 47
-- On AMPERSAND shift to state 48
-- On unary_operator shift to state 49
-- On unary_expression shift to state 50
-- On shift_expression shift to state 70
-- On relational_expression shift to state 87
-- On primary_expression shift to state 51
-- On postfix_expression shift to state 52
-- On multiplicative_expression shift to state 72
-- On equality_expression shift to state 105
-- On cast_expression shift to state 79
-- On and_expression shift to state 110
-- On additive_expression shift to state 90

State 105:
and_expression -> equality_expression . [ SEMICOLON RPAREN RBRACK RBRACE QUESTION OR_OP HAT COMMA COLON BAR AND_OP AMPERSAND ]
equality_expression -> equality_expression . EQ_OP relational_expression [ SEMICOLON RPAREN RBRACK RBRACE QUESTION OR_OP NE_OP HAT EQ_OP COMMA COLON BAR AND_OP AMPERSAND ]
equality_expression -> equality_expression . NE_OP relational_expression [ SEMICOLON RPAREN RBRACK RBRACE QUESTION OR_OP NE_OP HAT EQ_OP COMMA COLON BAR AND_OP AMPERSAND ]
-- On NE_OP shift to state 106
-- On EQ_OP shift to state 108
-- On SEMICOLON reduce production and_expression -> equality_expression
-- On RPAREN reduce production and_expression -> equality_expression
-- On RBRACK reduce production and_expression -> equality_expression
-- On RBRACE reduce production and_expression -> equality_expression
-- On QUESTION reduce production and_expression -> equality_expression
-- On OR_OP reduce production and_expression -> equality_expression
-- On HAT reduce production and_expression -> equality_expression
-- On COMMA reduce production and_expression -> equality_expression
-- On COLON reduce production and_expression -> equality_expression
-- On BAR reduce production and_expression -> equality_expression
-- On AND_OP reduce production and_expression -> equality_expression
-- On AMPERSAND reduce production and_expression -> equality_expression

State 106:
equality_expression -> equality_expression NE_OP . relational_expression [ SEMICOLON RPAREN RBRACK RBRACE QUESTION OR_OP NE_OP HAT EQ_OP COMMA COLON BAR AND_OP AMPERSAND ]
-- On TILDE shift to state 34
-- On STRING_LITERAL shift to state 35
-- On STAR shift to state 36
-- On SIZEOF shift to state 37
-- On PLUS shift to state 38
-- On MINUS shift to state 39
-- On LPAREN shift to state 41
-- On INC_OP shift to state 42
-- On IDENTIFIER shift to state 44
-- On DEC_OP shift to state 45
-- On CONSTANT shift to state 46
-- On BANG shift to state 47
-- On AMPERSAND shift to state 48
-- On unary_operator shift to state 49
-- On unary_expression shift to state 50
-- On shift_expression shift to state 70
-- On relational_expression shift to state 107
-- On primary_expression shift to state 51
-- On postfix_expression shift to state 52
-- On multiplicative_expression shift to state 72
-- On cast_expression shift to state 79
-- On additive_expression shift to state 90

State 107:
equality_expression -> equality_expression NE_OP relational_expression . [ SEMICOLON RPAREN RBRACK RBRACE QUESTION OR_OP NE_OP HAT EQ_OP COMMA COLON BAR AND_OP AMPERSAND ]
relational_expression -> relational_expression . LT shift_expression [ SEMICOLON RPAREN RBRACK RBRACE QUESTION OR_OP NE_OP LT LE_OP HAT GT GE_OP EQ_OP COMMA COLON BAR AND_OP AMPERSAND ]
relational_expression -> relational_expression . GT shift_expression [ SEMICOLON RPAREN RBRACK RBRACE QUESTION OR_OP NE_OP LT LE_OP HAT GT GE_OP EQ_OP COMMA COLON BAR AND_OP AMPERSAND ]
relational_expression -> relational_expression . LE_OP shift_expression [ SEMICOLON RPAREN RBRACK RBRACE QUESTION OR_OP NE_OP LT LE_OP HAT GT GE_OP EQ_OP COMMA COLON BAR AND_OP AMPERSAND ]
relational_expression -> relational_expression . GE_OP shift_expression [ SEMICOLON RPAREN RBRACK RBRACE QUESTION OR_OP NE_OP LT LE_OP HAT GT GE_OP EQ_OP COMMA COLON BAR AND_OP AMPERSAND ]
-- On LT shift to state 88
-- On LE_OP shift to state 91
-- On GT shift to state 93
-- On GE_OP shift to state 95
-- On SEMICOLON reduce production equality_expression -> equality_expression NE_OP relational_expression
-- On RPAREN reduce production equality_expression -> equality_expression NE_OP relational_expression
-- On RBRACK reduce production equality_expression -> equality_expression NE_OP relational_expression
-- On RBRACE reduce production equality_expression -> equality_expression NE_OP relational_expression
-- On QUESTION reduce production equality_expression -> equality_expression NE_OP relational_expression
-- On OR_OP reduce production equality_expression -> equality_expression NE_OP relational_expression
-- On NE_OP reduce production equality_expression -> equality_expression NE_OP relational_expression
-- On HAT reduce production equality_expression -> equality_expression NE_OP relational_expression
-- On EQ_OP reduce production equality_expression -> equality_expression NE_OP relational_expression
-- On COMMA reduce production equality_expression -> equality_expression NE_OP relational_expression
-- On COLON reduce production equality_expression -> equality_expression NE_OP relational_expression
-- On BAR reduce production equality_expression -> equality_expression NE_OP relational_expression
-- On AND_OP reduce production equality_expression -> equality_expression NE_OP relational_expression
-- On AMPERSAND reduce production equality_expression -> equality_expression NE_OP relational_expression

State 108:
equality_expression -> equality_expression EQ_OP . relational_expression [ SEMICOLON RPAREN RBRACK RBRACE QUESTION OR_OP NE_OP HAT EQ_OP COMMA COLON BAR AND_OP AMPERSAND ]
-- On TILDE shift to state 34
-- On STRING_LITERAL shift to state 35
-- On STAR shift to state 36
-- On SIZEOF shift to state 37
-- On PLUS shift to state 38
-- On MINUS shift to state 39
-- On LPAREN shift to state 41
-- On INC_OP shift to state 42
-- On IDENTIFIER shift to state 44
-- On DEC_OP shift to state 45
-- On CONSTANT shift to state 46
-- On BANG shift to state 47
-- On AMPERSAND shift to state 48
-- On unary_operator shift to state 49
-- On unary_expression shift to state 50
-- On shift_expression shift to state 70
-- On relational_expression shift to state 109
-- On primary_expression shift to state 51
-- On postfix_expression shift to state 52
-- On multiplicative_expression shift to state 72
-- On cast_expression shift to state 79
-- On additive_expression shift to state 90

State 109:
equality_expression -> equality_expression EQ_OP relational_expression . [ SEMICOLON RPAREN RBRACK RBRACE QUESTION OR_OP NE_OP HAT EQ_OP COMMA COLON BAR AND_OP AMPERSAND ]
relational_expression -> relational_expression . LT shift_expression [ SEMICOLON RPAREN RBRACK RBRACE QUESTION OR_OP NE_OP LT LE_OP HAT GT GE_OP EQ_OP COMMA COLON BAR AND_OP AMPERSAND ]
relational_expression -> relational_expression . GT shift_expression [ SEMICOLON RPAREN RBRACK RBRACE QUESTION OR_OP NE_OP LT LE_OP HAT GT GE_OP EQ_OP COMMA COLON BAR AND_OP AMPERSAND ]
relational_expression -> relational_expression . LE_OP shift_expression [ SEMICOLON RPAREN RBRACK RBRACE QUESTION OR_OP NE_OP LT LE_OP HAT GT GE_OP EQ_OP COMMA COLON BAR AND_OP AMPERSAND ]
relational_expression -> relational_expression . GE_OP shift_expression [ SEMICOLON RPAREN RBRACK RBRACE QUESTION OR_OP NE_OP LT LE_OP HAT GT GE_OP EQ_OP COMMA COLON BAR AND_OP AMPERSAND ]
-- On LT shift to state 88
-- On LE_OP shift to state 91
-- On GT shift to state 93
-- On GE_OP shift to state 95
-- On SEMICOLON reduce production equality_expression -> equality_expression EQ_OP relational_expression
-- On RPAREN reduce production equality_expression -> equality_expression EQ_OP relational_expression
-- On RBRACK reduce production equality_expression -> equality_expression EQ_OP relational_expression
-- On RBRACE reduce production equality_expression -> equality_expression EQ_OP relational_expression
-- On QUESTION reduce production equality_expression -> equality_expression EQ_OP relational_expression
-- On OR_OP reduce production equality_expression -> equality_expression EQ_OP relational_expression
-- On NE_OP reduce production equality_expression -> equality_expression EQ_OP relational_expression
-- On HAT reduce production equality_expression -> equality_expression EQ_OP relational_expression
-- On EQ_OP reduce production equality_expression -> equality_expression EQ_OP relational_expression
-- On COMMA reduce production equality_expression -> equality_expression EQ_OP relational_expression
-- On COLON reduce production equality_expression -> equality_expression EQ_OP relational_expression
-- On BAR reduce production equality_expression -> equality_expression EQ_OP relational_expression
-- On AND_OP reduce production equality_expression -> equality_expression EQ_OP relational_expression
-- On AMPERSAND reduce production equality_expression -> equality_expression EQ_OP relational_expression

State 110:
and_expression -> and_expression . AMPERSAND equality_expression [ SEMICOLON RPAREN RBRACK RBRACE QUESTION OR_OP HAT COMMA COLON BAR AND_OP AMPERSAND ]
exclusive_or_expression -> exclusive_or_expression HAT and_expression . [ SEMICOLON RPAREN RBRACK RBRACE QUESTION OR_OP HAT COMMA COLON BAR AND_OP ]
-- On AMPERSAND shift to state 111
-- On SEMICOLON reduce production exclusive_or_expression -> exclusive_or_expression HAT and_expression
-- On RPAREN reduce production exclusive_or_expression -> exclusive_or_expression HAT and_expression
-- On RBRACK reduce production exclusive_or_expression -> exclusive_or_expression HAT and_expression
-- On RBRACE reduce production exclusive_or_expression -> exclusive_or_expression HAT and_expression
-- On QUESTION reduce production exclusive_or_expression -> exclusive_or_expression HAT and_expression
-- On OR_OP reduce production exclusive_or_expression -> exclusive_or_expression HAT and_expression
-- On HAT reduce production exclusive_or_expression -> exclusive_or_expression HAT and_expression
-- On COMMA reduce production exclusive_or_expression -> exclusive_or_expression HAT and_expression
-- On COLON reduce production exclusive_or_expression -> exclusive_or_expression HAT and_expression
-- On BAR reduce production exclusive_or_expression -> exclusive_or_expression HAT and_expression
-- On AND_OP reduce production exclusive_or_expression -> exclusive_or_expression HAT and_expression

State 111:
and_expression -> and_expression AMPERSAND . equality_expression [ SEMICOLON RPAREN RBRACK RBRACE QUESTION OR_OP HAT COMMA COLON BAR AND_OP AMPERSAND ]
-- On TILDE shift to state 34
-- On STRING_LITERAL shift to state 35
-- On STAR shift to state 36
-- On SIZEOF shift to state 37
-- On PLUS shift to state 38
-- On MINUS shift to state 39
-- On LPAREN shift to state 41
-- On INC_OP shift to state 42
-- On IDENTIFIER shift to state 44
-- On DEC_OP shift to state 45
-- On CONSTANT shift to state 46
-- On BANG shift to state 47
-- On AMPERSAND shift to state 48
-- On unary_operator shift to state 49
-- On unary_expression shift to state 50
-- On shift_expression shift to state 70
-- On relational_expression shift to state 87
-- On primary_expression shift to state 51
-- On postfix_expression shift to state 52
-- On multiplicative_expression shift to state 72
-- On equality_expression shift to state 112
-- On cast_expression shift to state 79
-- On additive_expression shift to state 90

State 112:
and_expression -> and_expression AMPERSAND equality_expression . [ SEMICOLON RPAREN RBRACK RBRACE QUESTION OR_OP HAT COMMA COLON BAR AND_OP AMPERSAND ]
equality_expression -> equality_expression . EQ_OP relational_expression [ SEMICOLON RPAREN RBRACK RBRACE QUESTION OR_OP NE_OP HAT EQ_OP COMMA COLON BAR AND_OP AMPERSAND ]
equality_expression -> equality_expression . NE_OP relational_expression [ SEMICOLON RPAREN RBRACK RBRACE QUESTION OR_OP NE_OP HAT EQ_OP COMMA COLON BAR AND_OP AMPERSAND ]
-- On NE_OP shift to state 106
-- On EQ_OP shift to state 108
-- On SEMICOLON reduce production and_expression -> and_expression AMPERSAND equality_expression
-- On RPAREN reduce production and_expression -> and_expression AMPERSAND equality_expression
-- On RBRACK reduce production and_expression -> and_expression AMPERSAND equality_expression
-- On RBRACE reduce production and_expression -> and_expression AMPERSAND equality_expression
-- On QUESTION reduce production and_expression -> and_expression AMPERSAND equality_expression
-- On OR_OP reduce production and_expression -> and_expression AMPERSAND equality_expression
-- On HAT reduce production and_expression -> and_expression AMPERSAND equality_expression
-- On COMMA reduce production and_expression -> and_expression AMPERSAND equality_expression
-- On COLON reduce production and_expression -> and_expression AMPERSAND equality_expression
-- On BAR reduce production and_expression -> and_expression AMPERSAND equality_expression
-- On AND_OP reduce production and_expression -> and_expression AMPERSAND equality_expression
-- On AMPERSAND reduce production and_expression -> and_expression AMPERSAND equality_expression

State 113:
and_expression -> and_expression . AMPERSAND equality_expression [ SEMICOLON RPAREN RBRACK RBRACE QUESTION OR_OP HAT COMMA COLON BAR AND_OP AMPERSAND ]
exclusive_or_expression -> and_expression . [ SEMICOLON RPAREN RBRACK RBRACE QUESTION OR_OP HAT COMMA COLON BAR AND_OP ]
-- On AMPERSAND shift to state 111
-- On SEMICOLON reduce production exclusive_or_expression -> and_expression
-- On RPAREN reduce production exclusive_or_expression -> and_expression
-- On RBRACK reduce production exclusive_or_expression -> and_expression
-- On RBRACE reduce production exclusive_or_expression -> and_expression
-- On QUESTION reduce production exclusive_or_expression -> and_expression
-- On OR_OP reduce production exclusive_or_expression -> and_expression
-- On HAT reduce production exclusive_or_expression -> and_expression
-- On COMMA reduce production exclusive_or_expression -> and_expression
-- On COLON reduce production exclusive_or_expression -> and_expression
-- On BAR reduce production exclusive_or_expression -> and_expression
-- On AND_OP reduce production exclusive_or_expression -> and_expression

State 114:
exclusive_or_expression -> exclusive_or_expression . HAT and_expression [ SEMICOLON RPAREN RBRACK RBRACE QUESTION OR_OP HAT COMMA COLON BAR AND_OP ]
inclusive_or_expression -> exclusive_or_expression . [ SEMICOLON RPAREN RBRACK RBRACE QUESTION OR_OP COMMA COLON BAR AND_OP ]
-- On HAT shift to state 104
-- On SEMICOLON reduce production inclusive_or_expression -> exclusive_or_expression
-- On RPAREN reduce production inclusive_or_expression -> exclusive_or_expression
-- On RBRACK reduce production inclusive_or_expression -> exclusive_or_expression
-- On RBRACE reduce production inclusive_or_expression -> exclusive_or_expression
-- On QUESTION reduce production inclusive_or_expression -> exclusive_or_expression
-- On OR_OP reduce production inclusive_or_expression -> exclusive_or_expression
-- On COMMA reduce production inclusive_or_expression -> exclusive_or_expression
-- On COLON reduce production inclusive_or_expression -> exclusive_or_expression
-- On BAR reduce production inclusive_or_expression -> exclusive_or_expression
-- On AND_OP reduce production inclusive_or_expression -> exclusive_or_expression

State 115:
inclusive_or_expression -> inclusive_or_expression . BAR exclusive_or_expression [ SEMICOLON RPAREN RBRACK RBRACE QUESTION OR_OP COMMA COLON BAR AND_OP ]
logical_and_expression -> inclusive_or_expression . [ SEMICOLON RPAREN RBRACK RBRACE QUESTION OR_OP COMMA COLON AND_OP ]
-- On BAR shift to state 102
-- On SEMICOLON reduce production logical_and_expression -> inclusive_or_expression
-- On RPAREN reduce production logical_and_expression -> inclusive_or_expression
-- On RBRACK reduce production logical_and_expression -> inclusive_or_expression
-- On RBRACE reduce production logical_and_expression -> inclusive_or_expression
-- On QUESTION reduce production logical_and_expression -> inclusive_or_expression
-- On OR_OP reduce production logical_and_expression -> inclusive_or_expression
-- On COMMA reduce production logical_and_expression -> inclusive_or_expression
-- On COLON reduce production logical_and_expression -> inclusive_or_expression
-- On AND_OP reduce production logical_and_expression -> inclusive_or_expression

State 116:
conditional_expression -> logical_or_expression QUESTION expression . COLON conditional_expression [ SEMICOLON RPAREN RBRACK RBRACE COMMA COLON ]
expression -> expression . COMMA assignment_expression [ COMMA COLON ]
-- On COMMA shift to state 117
-- On COLON shift to state 120

State 117:
expression -> expression COMMA . assignment_expression [ SEMICOLON RPAREN RBRACK COMMA COLON ]
-- On TILDE shift to state 34
-- On STRING_LITERAL shift to state 35
-- On STAR shift to state 36
-- On SIZEOF shift to state 37
-- On PLUS shift to state 38
-- On MINUS shift to state 39
-- On LPAREN shift to state 41
-- On INC_OP shift to state 42
-- On IDENTIFIER shift to state 44
-- On DEC_OP shift to state 45
-- On CONSTANT shift to state 46
-- On BANG shift to state 47
-- On AMPERSAND shift to state 48
-- On unary_operator shift to state 49
-- On unary_expression shift to state 57
-- On shift_expression shift to state 70
-- On relational_expression shift to state 87
-- On primary_expression shift to state 51
-- On postfix_expression shift to state 52
-- On multiplicative_expression shift to state 72
-- On logical_or_expression shift to state 97
-- On logical_and_expression shift to state 99
-- On inclusive_or_expression shift to state 115
-- On exclusive_or_expression shift to state 114
-- On equality_expression shift to state 105
-- On conditional_expression shift to state 118
-- On cast_expression shift to state 79
-- On assignment_expression shift to state 119
-- On and_expression shift to state 113
-- On additive_expression shift to state 90

State 118:
assignment_expression -> conditional_expression . [ SEMICOLON RPAREN RBRACK RBRACE COMMA COLON ]
-- On SEMICOLON reduce production assignment_expression -> conditional_expression
-- On RPAREN reduce production assignment_expression -> conditional_expression
-- On RBRACK reduce production assignment_expression -> conditional_expression
-- On RBRACE reduce production assignment_expression -> conditional_expression
-- On COMMA reduce production assignment_expression -> conditional_expression
-- On COLON reduce production assignment_expression -> conditional_expression

State 119:
expression -> expression COMMA assignment_expression . [ SEMICOLON RPAREN RBRACK COMMA COLON ]
-- On SEMICOLON reduce production expression -> expression COMMA assignment_expression
-- On RPAREN reduce production expression -> expression COMMA assignment_expression
-- On RBRACK reduce production expression -> expression COMMA assignment_expression
-- On COMMA reduce production expression -> expression COMMA assignment_expression
-- On COLON reduce production expression -> expression COMMA assignment_expression

State 120:
conditional_expression -> logical_or_expression QUESTION expression COLON . conditional_expression [ SEMICOLON RPAREN RBRACK RBRACE COMMA COLON ]
-- On TILDE shift to state 34
-- On STRING_LITERAL shift to state 35
-- On STAR shift to state 36
-- On SIZEOF shift to state 37
-- On PLUS shift to state 38
-- On MINUS shift to state 39
-- On LPAREN shift to state 41
-- On INC_OP shift to state 42
-- On IDENTIFIER shift to state 44
-- On DEC_OP shift to state 45
-- On CONSTANT shift to state 46
-- On BANG shift to state 47
-- On AMPERSAND shift to state 48
-- On unary_operator shift to state 49
-- On unary_expression shift to state 50
-- On shift_expression shift to state 70
-- On relational_expression shift to state 87
-- On primary_expression shift to state 51
-- On postfix_expression shift to state 52
-- On multiplicative_expression shift to state 72
-- On logical_or_expression shift to state 97
-- On logical_and_expression shift to state 99
-- On inclusive_or_expression shift to state 115
-- On exclusive_or_expression shift to state 114
-- On equality_expression shift to state 105
-- On conditional_expression shift to state 121
-- On cast_expression shift to state 79
-- On and_expression shift to state 113
-- On additive_expression shift to state 90

State 121:
conditional_expression -> logical_or_expression QUESTION expression COLON conditional_expression . [ SEMICOLON RPAREN RBRACK RBRACE COMMA COLON ]
-- On SEMICOLON reduce production conditional_expression -> logical_or_expression QUESTION expression COLON conditional_expression
-- On RPAREN reduce production conditional_expression -> logical_or_expression QUESTION expression COLON conditional_expression
-- On RBRACK reduce production conditional_expression -> logical_or_expression QUESTION expression COLON conditional_expression
-- On RBRACE reduce production conditional_expression -> logical_or_expression QUESTION expression COLON conditional_expression
-- On COMMA reduce production conditional_expression -> logical_or_expression QUESTION expression COLON conditional_expression
-- On COLON reduce production conditional_expression -> logical_or_expression QUESTION expression COLON conditional_expression

State 122:
expression -> assignment_expression . [ SEMICOLON RPAREN RBRACK COMMA COLON ]
-- On SEMICOLON reduce production expression -> assignment_expression
-- On RPAREN reduce production expression -> assignment_expression
-- On RBRACK reduce production expression -> assignment_expression
-- On COMMA reduce production expression -> assignment_expression
-- On COLON reduce production expression -> assignment_expression

State 123:
logical_or_expression -> logical_or_expression OR_OP . logical_and_expression [ SEMICOLON RPAREN RBRACK RBRACE QUESTION OR_OP COMMA COLON ]
-- On TILDE shift to state 34
-- On STRING_LITERAL shift to state 35
-- On STAR shift to state 36
-- On SIZEOF shift to state 37
-- On PLUS shift to state 38
-- On MINUS shift to state 39
-- On LPAREN shift to state 41
-- On INC_OP shift to state 42
-- On IDENTIFIER shift to state 44
-- On DEC_OP shift to state 45
-- On CONSTANT shift to state 46
-- On BANG shift to state 47
-- On AMPERSAND shift to state 48
-- On unary_operator shift to state 49
-- On unary_expression shift to state 50
-- On shift_expression shift to state 70
-- On relational_expression shift to state 87
-- On primary_expression shift to state 51
-- On postfix_expression shift to state 52
-- On multiplicative_expression shift to state 72
-- On logical_and_expression shift to state 124
-- On inclusive_or_expression shift to state 115
-- On exclusive_or_expression shift to state 114
-- On equality_expression shift to state 105
-- On cast_expression shift to state 79
-- On and_expression shift to state 113
-- On additive_expression shift to state 90

State 124:
logical_and_expression -> logical_and_expression . AND_OP inclusive_or_expression [ SEMICOLON RPAREN RBRACK RBRACE QUESTION OR_OP COMMA COLON AND_OP ]
logical_or_expression -> logical_or_expression OR_OP logical_and_expression . [ SEMICOLON RPAREN RBRACK RBRACE QUESTION OR_OP COMMA COLON ]
-- On AND_OP shift to state 100
-- On SEMICOLON reduce production logical_or_expression -> logical_or_expression OR_OP logical_and_expression
-- On RPAREN reduce production logical_or_expression -> logical_or_expression OR_OP logical_and_expression
-- On RBRACK reduce production logical_or_expression -> logical_or_expression OR_OP logical_and_expression
-- On RBRACE reduce production logical_or_expression -> logical_or_expression OR_OP logical_and_expression
-- On QUESTION reduce production logical_or_expression -> logical_or_expression OR_OP logical_and_expression
-- On OR_OP reduce production logical_or_expression -> logical_or_expression OR_OP logical_and_expression
-- On COMMA reduce production logical_or_expression -> logical_or_expression OR_OP logical_and_expression
-- On COLON reduce production logical_or_expression -> logical_or_expression OR_OP logical_and_expression

State 125:
assignment_expression -> unary_expression assignment_operator assignment_expression . [ SEMICOLON RPAREN RBRACK RBRACE COMMA COLON ]
-- On SEMICOLON reduce production assignment_expression -> unary_expression assignment_operator assignment_expression
-- On RPAREN reduce production assignment_expression -> unary_expression assignment_operator assignment_expression
-- On RBRACK reduce production assignment_expression -> unary_expression assignment_operator assignment_expression
-- On RBRACE reduce production assignment_expression -> unary_expression assignment_operator assignment_expression
-- On COMMA reduce production assignment_expression -> unary_expression assignment_operator assignment_expression
-- On COLON reduce production assignment_expression -> unary_expression assignment_operator assignment_expression

State 126:
argument_expression_list -> assignment_expression . [ RPAREN COMMA ]
-- On RPAREN reduce production argument_expression_list -> assignment_expression
-- On COMMA reduce production argument_expression_list -> assignment_expression

State 127:
argument_expression_list -> argument_expression_list . COMMA assignment_expression [ RPAREN COMMA ]
postfix_expression -> postfix_expression LPAREN argument_expression_list . RPAREN [ XOR_ASSIGN SUB_ASSIGN STAR SLASH SEMICOLON RPAREN RIGHT_OP RIGHT_ASSIGN RBRACK RBRACE QUESTION PTR_OP PLUS PERCENT OR_OP OR_ASSIGN NE_OP MUL_ASSIGN MOD_ASSIGN MINUS LT LPAREN LE_OP LEFT_OP LEFT_ASSIGN LBRACK INC_OP HAT GT GE_OP EQ_OP EQUAL DOT DIV_ASSIGN DEC_OP COMMA COLON BAR AND_OP AND_ASSIGN AMPERSAND ADD_ASSIGN ]
-- On RPAREN shift to state 128
-- On COMMA shift to state 129

State 128:
postfix_expression -> postfix_expression LPAREN argument_expression_list RPAREN . [ XOR_ASSIGN SUB_ASSIGN STAR SLASH SEMICOLON RPAREN RIGHT_OP RIGHT_ASSIGN RBRACK RBRACE QUESTION PTR_OP PLUS PERCENT OR_OP OR_ASSIGN NE_OP MUL_ASSIGN MOD_ASSIGN MINUS LT LPAREN LE_OP LEFT_OP LEFT_ASSIGN LBRACK INC_OP HAT GT GE_OP EQ_OP EQUAL DOT DIV_ASSIGN DEC_OP COMMA COLON BAR AND_OP AND_ASSIGN AMPERSAND ADD_ASSIGN ]
-- On XOR_ASSIGN reduce production postfix_expression -> postfix_expression LPAREN argument_expression_list RPAREN
-- On SUB_ASSIGN reduce production postfix_expression -> postfix_expression LPAREN argument_expression_list RPAREN
-- On STAR reduce production postfix_expression -> postfix_expression LPAREN argument_expression_list RPAREN
-- On SLASH reduce production postfix_expression -> postfix_expression LPAREN argument_expression_list RPAREN
-- On SEMICOLON reduce production postfix_expression -> postfix_expression LPAREN argument_expression_list RPAREN
-- On RPAREN reduce production postfix_expression -> postfix_expression LPAREN argument_expression_list RPAREN
-- On RIGHT_OP reduce production postfix_expression -> postfix_expression LPAREN argument_expression_list RPAREN
-- On RIGHT_ASSIGN reduce production postfix_expression -> postfix_expression LPAREN argument_expression_list RPAREN
-- On RBRACK reduce production postfix_expression -> postfix_expression LPAREN argument_expression_list RPAREN
-- On RBRACE reduce production postfix_expression -> postfix_expression LPAREN argument_expression_list RPAREN
-- On QUESTION reduce production postfix_expression -> postfix_expression LPAREN argument_expression_list RPAREN
-- On PTR_OP reduce production postfix_expression -> postfix_expression LPAREN argument_expression_list RPAREN
-- On PLUS reduce production postfix_expression -> postfix_expression LPAREN argument_expression_list RPAREN
-- On PERCENT reduce production postfix_expression -> postfix_expression LPAREN argument_expression_list RPAREN
-- On OR_OP reduce production postfix_expression -> postfix_expression LPAREN argument_expression_list RPAREN
-- On OR_ASSIGN reduce production postfix_expression -> postfix_expression LPAREN argument_expression_list RPAREN
-- On NE_OP reduce production postfix_expression -> postfix_expression LPAREN argument_expression_list RPAREN
-- On MUL_ASSIGN reduce production postfix_expression -> postfix_expression LPAREN argument_expression_list RPAREN
-- On MOD_ASSIGN reduce production postfix_expression -> postfix_expression LPAREN argument_expression_list RPAREN
-- On MINUS reduce production postfix_expression -> postfix_expression LPAREN argument_expression_list RPAREN
-- On LT reduce production postfix_expression -> postfix_expression LPAREN argument_expression_list RPAREN
-- On LPAREN reduce production postfix_expression -> postfix_expression LPAREN argument_expression_list RPAREN
-- On LE_OP reduce production postfix_expression -> postfix_expression LPAREN argument_expression_list RPAREN
-- On LEFT_OP reduce production postfix_expression -> postfix_expression LPAREN argument_expression_list RPAREN
-- On LEFT_ASSIGN reduce production postfix_expression -> postfix_expression LPAREN argument_expression_list RPAREN
-- On LBRACK reduce production postfix_expression -> postfix_expression LPAREN argument_expression_list RPAREN
-- On INC_OP reduce production postfix_expression -> postfix_expression LPAREN argument_expression_list RPAREN
-- On HAT reduce production postfix_expression -> postfix_expression LPAREN argument_expression_list RPAREN
-- On GT reduce production postfix_expression -> postfix_expression LPAREN argument_expression_list RPAREN
-- On GE_OP reduce production postfix_expression -> postfix_expression LPAREN argument_expression_list RPAREN
-- On EQ_OP reduce production postfix_expression -> postfix_expression LPAREN argument_expression_list RPAREN
-- On EQUAL reduce production postfix_expression -> postfix_expression LPAREN argument_expression_list RPAREN
-- On DOT reduce production postfix_expression -> postfix_expression LPAREN argument_expression_list RPAREN
-- On DIV_ASSIGN reduce production postfix_expression -> postfix_expression LPAREN argument_expression_list RPAREN
-- On DEC_OP reduce production postfix_expression -> postfix_expression LPAREN argument_expression_list RPAREN
-- On COMMA reduce production postfix_expression -> postfix_expression LPAREN argument_expression_list RPAREN
-- On COLON reduce production postfix_expression -> postfix_expression LPAREN argument_expression_list RPAREN
-- On BAR reduce production postfix_expression -> postfix_expression LPAREN argument_expression_list RPAREN
-- On AND_OP reduce production postfix_expression -> postfix_expression LPAREN argument_expression_list RPAREN
-- On AND_ASSIGN reduce production postfix_expression -> postfix_expression LPAREN argument_expression_list RPAREN
-- On AMPERSAND reduce production postfix_expression -> postfix_expression LPAREN argument_expression_list RPAREN
-- On ADD_ASSIGN reduce production postfix_expression -> postfix_expression LPAREN argument_expression_list RPAREN

State 129:
argument_expression_list -> argument_expression_list COMMA . assignment_expression [ RPAREN COMMA ]
-- On TILDE shift to state 34
-- On STRING_LITERAL shift to state 35
-- On STAR shift to state 36
-- On SIZEOF shift to state 37
-- On PLUS shift to state 38
-- On MINUS shift to state 39
-- On LPAREN shift to state 41
-- On INC_OP shift to state 42
-- On IDENTIFIER shift to state 44
-- On DEC_OP shift to state 45
-- On CONSTANT shift to state 46
-- On BANG shift to state 47
-- On AMPERSAND shift to state 48
-- On unary_operator shift to state 49
-- On unary_expression shift to state 57
-- On shift_expression shift to state 70
-- On relational_expression shift to state 87
-- On primary_expression shift to state 51
-- On postfix_expression shift to state 52
-- On multiplicative_expression shift to state 72
-- On logical_or_expression shift to state 97
-- On logical_and_expression shift to state 99
-- On inclusive_or_expression shift to state 115
-- On exclusive_or_expression shift to state 114
-- On equality_expression shift to state 105
-- On conditional_expression shift to state 118
-- On cast_expression shift to state 79
-- On assignment_expression shift to state 130
-- On and_expression shift to state 113
-- On additive_expression shift to state 90

State 130:
argument_expression_list -> argument_expression_list COMMA assignment_expression . [ RPAREN COMMA ]
-- On RPAREN reduce production argument_expression_list -> argument_expression_list COMMA assignment_expression
-- On COMMA reduce production argument_expression_list -> argument_expression_list COMMA assignment_expression

State 131:
postfix_expression -> postfix_expression LBRACK . expression RBRACK [ XOR_ASSIGN SUB_ASSIGN STAR SLASH SEMICOLON RPAREN RIGHT_OP RIGHT_ASSIGN RBRACK RBRACE QUESTION PTR_OP PLUS PERCENT OR_OP OR_ASSIGN NE_OP MUL_ASSIGN MOD_ASSIGN MINUS LT LPAREN LE_OP LEFT_OP LEFT_ASSIGN LBRACK INC_OP HAT GT GE_OP EQ_OP EQUAL DOT DIV_ASSIGN DEC_OP COMMA COLON BAR AND_OP AND_ASSIGN AMPERSAND ADD_ASSIGN ]
-- On TILDE shift to state 34
-- On STRING_LITERAL shift to state 35
-- On STAR shift to state 36
-- On SIZEOF shift to state 37
-- On PLUS shift to state 38
-- On MINUS shift to state 39
-- On LPAREN shift to state 41
-- On INC_OP shift to state 42
-- On IDENTIFIER shift to state 44
-- On DEC_OP shift to state 45
-- On CONSTANT shift to state 46
-- On BANG shift to state 47
-- On AMPERSAND shift to state 48
-- On unary_operator shift to state 49
-- On unary_expression shift to state 57
-- On shift_expression shift to state 70
-- On relational_expression shift to state 87
-- On primary_expression shift to state 51
-- On postfix_expression shift to state 52
-- On multiplicative_expression shift to state 72
-- On logical_or_expression shift to state 97
-- On logical_and_expression shift to state 99
-- On inclusive_or_expression shift to state 115
-- On expression shift to state 132
-- On exclusive_or_expression shift to state 114
-- On equality_expression shift to state 105
-- On conditional_expression shift to state 118
-- On cast_expression shift to state 79
-- On assignment_expression shift to state 122
-- On and_expression shift to state 113
-- On additive_expression shift to state 90

State 132:
expression -> expression . COMMA assignment_expression [ RBRACK COMMA ]
postfix_expression -> postfix_expression LBRACK expression . RBRACK [ XOR_ASSIGN SUB_ASSIGN STAR SLASH SEMICOLON RPAREN RIGHT_OP RIGHT_ASSIGN RBRACK RBRACE QUESTION PTR_OP PLUS PERCENT OR_OP OR_ASSIGN NE_OP MUL_ASSIGN MOD_ASSIGN MINUS LT LPAREN LE_OP LEFT_OP LEFT_ASSIGN LBRACK INC_OP HAT GT GE_OP EQ_OP EQUAL DOT DIV_ASSIGN DEC_OP COMMA COLON BAR AND_OP AND_ASSIGN AMPERSAND ADD_ASSIGN ]
-- On RBRACK shift to state 133
-- On COMMA shift to state 117

State 133:
postfix_expression -> postfix_expression LBRACK expression RBRACK . [ XOR_ASSIGN SUB_ASSIGN STAR SLASH SEMICOLON RPAREN RIGHT_OP RIGHT_ASSIGN RBRACK RBRACE QUESTION PTR_OP PLUS PERCENT OR_OP OR_ASSIGN NE_OP MUL_ASSIGN MOD_ASSIGN MINUS LT LPAREN LE_OP LEFT_OP LEFT_ASSIGN LBRACK INC_OP HAT GT GE_OP EQ_OP EQUAL DOT DIV_ASSIGN DEC_OP COMMA COLON BAR AND_OP AND_ASSIGN AMPERSAND ADD_ASSIGN ]
-- On XOR_ASSIGN reduce production postfix_expression -> postfix_expression LBRACK expression RBRACK
-- On SUB_ASSIGN reduce production postfix_expression -> postfix_expression LBRACK expression RBRACK
-- On STAR reduce production postfix_expression -> postfix_expression LBRACK expression RBRACK
-- On SLASH reduce production postfix_expression -> postfix_expression LBRACK expression RBRACK
-- On SEMICOLON reduce production postfix_expression -> postfix_expression LBRACK expression RBRACK
-- On RPAREN reduce production postfix_expression -> postfix_expression LBRACK expression RBRACK
-- On RIGHT_OP reduce production postfix_expression -> postfix_expression LBRACK expression RBRACK
-- On RIGHT_ASSIGN reduce production postfix_expression -> postfix_expression LBRACK expression RBRACK
-- On RBRACK reduce production postfix_expression -> postfix_expression LBRACK expression RBRACK
-- On RBRACE reduce production postfix_expression -> postfix_expression LBRACK expression RBRACK
-- On QUESTION reduce production postfix_expression -> postfix_expression LBRACK expression RBRACK
-- On PTR_OP reduce production postfix_expression -> postfix_expression LBRACK expression RBRACK
-- On PLUS reduce production postfix_expression -> postfix_expression LBRACK expression RBRACK
-- On PERCENT reduce production postfix_expression -> postfix_expression LBRACK expression RBRACK
-- On OR_OP reduce production postfix_expression -> postfix_expression LBRACK expression RBRACK
-- On OR_ASSIGN reduce production postfix_expression -> postfix_expression LBRACK expression RBRACK
-- On NE_OP reduce production postfix_expression -> postfix_expression LBRACK expression RBRACK
-- On MUL_ASSIGN reduce production postfix_expression -> postfix_expression LBRACK expression RBRACK
-- On MOD_ASSIGN reduce production postfix_expression -> postfix_expression LBRACK expression RBRACK
-- On MINUS reduce production postfix_expression -> postfix_expression LBRACK expression RBRACK
-- On LT reduce production postfix_expression -> postfix_expression LBRACK expression RBRACK
-- On LPAREN reduce production postfix_expression -> postfix_expression LBRACK expression RBRACK
-- On LE_OP reduce production postfix_expression -> postfix_expression LBRACK expression RBRACK
-- On LEFT_OP reduce production postfix_expression -> postfix_expression LBRACK expression RBRACK
-- On LEFT_ASSIGN reduce production postfix_expression -> postfix_expression LBRACK expression RBRACK
-- On LBRACK reduce production postfix_expression -> postfix_expression LBRACK expression RBRACK
-- On INC_OP reduce production postfix_expression -> postfix_expression LBRACK expression RBRACK
-- On HAT reduce production postfix_expression -> postfix_expression LBRACK expression RBRACK
-- On GT reduce production postfix_expression -> postfix_expression LBRACK expression RBRACK
-- On GE_OP reduce production postfix_expression -> postfix_expression LBRACK expression RBRACK
-- On EQ_OP reduce production postfix_expression -> postfix_expression LBRACK expression RBRACK
-- On EQUAL reduce production postfix_expression -> postfix_expression LBRACK expression RBRACK
-- On DOT reduce production postfix_expression -> postfix_expression LBRACK expression RBRACK
-- On DIV_ASSIGN reduce production postfix_expression -> postfix_expression LBRACK expression RBRACK
-- On DEC_OP reduce production postfix_expression -> postfix_expression LBRACK expression RBRACK
-- On COMMA reduce production postfix_expression -> postfix_expression LBRACK expression RBRACK
-- On COLON reduce production postfix_expression -> postfix_expression LBRACK expression RBRACK
-- On BAR reduce production postfix_expression -> postfix_expression LBRACK expression RBRACK
-- On AND_OP reduce production postfix_expression -> postfix_expression LBRACK expression RBRACK
-- On AND_ASSIGN reduce production postfix_expression -> postfix_expression LBRACK expression RBRACK
-- On AMPERSAND reduce production postfix_expression -> postfix_expression LBRACK expression RBRACK
-- On ADD_ASSIGN reduce production postfix_expression -> postfix_expression LBRACK expression RBRACK

State 134:
postfix_expression -> postfix_expression INC_OP . [ XOR_ASSIGN SUB_ASSIGN STAR SLASH SEMICOLON RPAREN RIGHT_OP RIGHT_ASSIGN RBRACK RBRACE QUESTION PTR_OP PLUS PERCENT OR_OP OR_ASSIGN NE_OP MUL_ASSIGN MOD_ASSIGN MINUS LT LPAREN LE_OP LEFT_OP LEFT_ASSIGN LBRACK INC_OP HAT GT GE_OP EQ_OP EQUAL DOT DIV_ASSIGN DEC_OP COMMA COLON BAR AND_OP AND_ASSIGN AMPERSAND ADD_ASSIGN ]
-- On XOR_ASSIGN reduce production postfix_expression -> postfix_expression INC_OP
-- On SUB_ASSIGN reduce production postfix_expression -> postfix_expression INC_OP
-- On STAR reduce production postfix_expression -> postfix_expression INC_OP
-- On SLASH reduce production postfix_expression -> postfix_expression INC_OP
-- On SEMICOLON reduce production postfix_expression -> postfix_expression INC_OP
-- On RPAREN reduce production postfix_expression -> postfix_expression INC_OP
-- On RIGHT_OP reduce production postfix_expression -> postfix_expression INC_OP
-- On RIGHT_ASSIGN reduce production postfix_expression -> postfix_expression INC_OP
-- On RBRACK reduce production postfix_expression -> postfix_expression INC_OP
-- On RBRACE reduce production postfix_expression -> postfix_expression INC_OP
-- On QUESTION reduce production postfix_expression -> postfix_expression INC_OP
-- On PTR_OP reduce production postfix_expression -> postfix_expression INC_OP
-- On PLUS reduce production postfix_expression -> postfix_expression INC_OP
-- On PERCENT reduce production postfix_expression -> postfix_expression INC_OP
-- On OR_OP reduce production postfix_expression -> postfix_expression INC_OP
-- On OR_ASSIGN reduce production postfix_expression -> postfix_expression INC_OP
-- On NE_OP reduce production postfix_expression -> postfix_expression INC_OP
-- On MUL_ASSIGN reduce production postfix_expression -> postfix_expression INC_OP
-- On MOD_ASSIGN reduce production postfix_expression -> postfix_expression INC_OP
-- On MINUS reduce production postfix_expression -> postfix_expression INC_OP
-- On LT reduce production postfix_expression -> postfix_expression INC_OP
-- On LPAREN reduce production postfix_expression -> postfix_expression INC_OP
-- On LE_OP reduce production postfix_expression -> postfix_expression INC_OP
-- On LEFT_OP reduce production postfix_expression -> postfix_expression INC_OP
-- On LEFT_ASSIGN reduce production postfix_expression -> postfix_expression INC_OP
-- On LBRACK reduce production postfix_expression -> postfix_expression INC_OP
-- On INC_OP reduce production postfix_expression -> postfix_expression INC_OP
-- On HAT reduce production postfix_expression -> postfix_expression INC_OP
-- On GT reduce production postfix_expression -> postfix_expression INC_OP
-- On GE_OP reduce production postfix_expression -> postfix_expression INC_OP
-- On EQ_OP reduce production postfix_expression -> postfix_expression INC_OP
-- On EQUAL reduce production postfix_expression -> postfix_expression INC_OP
-- On DOT reduce production postfix_expression -> postfix_expression INC_OP
-- On DIV_ASSIGN reduce production postfix_expression -> postfix_expression INC_OP
-- On DEC_OP reduce production postfix_expression -> postfix_expression INC_OP
-- On COMMA reduce production postfix_expression -> postfix_expression INC_OP
-- On COLON reduce production postfix_expression -> postfix_expression INC_OP
-- On BAR reduce production postfix_expression -> postfix_expression INC_OP
-- On AND_OP reduce production postfix_expression -> postfix_expression INC_OP
-- On AND_ASSIGN reduce production postfix_expression -> postfix_expression INC_OP
-- On AMPERSAND reduce production postfix_expression -> postfix_expression INC_OP
-- On ADD_ASSIGN reduce production postfix_expression -> postfix_expression INC_OP

State 135:
postfix_expression -> postfix_expression DOT . IDENTIFIER [ XOR_ASSIGN SUB_ASSIGN STAR SLASH SEMICOLON RPAREN RIGHT_OP RIGHT_ASSIGN RBRACK RBRACE QUESTION PTR_OP PLUS PERCENT OR_OP OR_ASSIGN NE_OP MUL_ASSIGN MOD_ASSIGN MINUS LT LPAREN LE_OP LEFT_OP LEFT_ASSIGN LBRACK INC_OP HAT GT GE_OP EQ_OP EQUAL DOT DIV_ASSIGN DEC_OP COMMA COLON BAR AND_OP AND_ASSIGN AMPERSAND ADD_ASSIGN ]
-- On IDENTIFIER shift to state 136

State 136:
postfix_expression -> postfix_expression DOT IDENTIFIER . [ XOR_ASSIGN SUB_ASSIGN STAR SLASH SEMICOLON RPAREN RIGHT_OP RIGHT_ASSIGN RBRACK RBRACE QUESTION PTR_OP PLUS PERCENT OR_OP OR_ASSIGN NE_OP MUL_ASSIGN MOD_ASSIGN MINUS LT LPAREN LE_OP LEFT_OP LEFT_ASSIGN LBRACK INC_OP HAT GT GE_OP EQ_OP EQUAL DOT DIV_ASSIGN DEC_OP COMMA COLON BAR AND_OP AND_ASSIGN AMPERSAND ADD_ASSIGN ]
-- On XOR_ASSIGN reduce production postfix_expression -> postfix_expression DOT IDENTIFIER
-- On SUB_ASSIGN reduce production postfix_expression -> postfix_expression DOT IDENTIFIER
-- On STAR reduce production postfix_expression -> postfix_expression DOT IDENTIFIER
-- On SLASH reduce production postfix_expression -> postfix_expression DOT IDENTIFIER
-- On SEMICOLON reduce production postfix_expression -> postfix_expression DOT IDENTIFIER
-- On RPAREN reduce production postfix_expression -> postfix_expression DOT IDENTIFIER
-- On RIGHT_OP reduce production postfix_expression -> postfix_expression DOT IDENTIFIER
-- On RIGHT_ASSIGN reduce production postfix_expression -> postfix_expression DOT IDENTIFIER
-- On RBRACK reduce production postfix_expression -> postfix_expression DOT IDENTIFIER
-- On RBRACE reduce production postfix_expression -> postfix_expression DOT IDENTIFIER
-- On QUESTION reduce production postfix_expression -> postfix_expression DOT IDENTIFIER
-- On PTR_OP reduce production postfix_expression -> postfix_expression DOT IDENTIFIER
-- On PLUS reduce production postfix_expression -> postfix_expression DOT IDENTIFIER
-- On PERCENT reduce production postfix_expression -> postfix_expression DOT IDENTIFIER
-- On OR_OP reduce production postfix_expression -> postfix_expression DOT IDENTIFIER
-- On OR_ASSIGN reduce production postfix_expression -> postfix_expression DOT IDENTIFIER
-- On NE_OP reduce production postfix_expression -> postfix_expression DOT IDENTIFIER
-- On MUL_ASSIGN reduce production postfix_expression -> postfix_expression DOT IDENTIFIER
-- On MOD_ASSIGN reduce production postfix_expression -> postfix_expression DOT IDENTIFIER
-- On MINUS reduce production postfix_expression -> postfix_expression DOT IDENTIFIER
-- On LT reduce production postfix_expression -> postfix_expression DOT IDENTIFIER
-- On LPAREN reduce production postfix_expression -> postfix_expression DOT IDENTIFIER
-- On LE_OP reduce production postfix_expression -> postfix_expression DOT IDENTIFIER
-- On LEFT_OP reduce production postfix_expression -> postfix_expression DOT IDENTIFIER
-- On LEFT_ASSIGN reduce production postfix_expression -> postfix_expression DOT IDENTIFIER
-- On LBRACK reduce production postfix_expression -> postfix_expression DOT IDENTIFIER
-- On INC_OP reduce production postfix_expression -> postfix_expression DOT IDENTIFIER
-- On HAT reduce production postfix_expression -> postfix_expression DOT IDENTIFIER
-- On GT reduce production postfix_expression -> postfix_expression DOT IDENTIFIER
-- On GE_OP reduce production postfix_expression -> postfix_expression DOT IDENTIFIER
-- On EQ_OP reduce production postfix_expression -> postfix_expression DOT IDENTIFIER
-- On EQUAL reduce production postfix_expression -> postfix_expression DOT IDENTIFIER
-- On DOT reduce production postfix_expression -> postfix_expression DOT IDENTIFIER
-- On DIV_ASSIGN reduce production postfix_expression -> postfix_expression DOT IDENTIFIER
-- On DEC_OP reduce production postfix_expression -> postfix_expression DOT IDENTIFIER
-- On COMMA reduce production postfix_expression -> postfix_expression DOT IDENTIFIER
-- On COLON reduce production postfix_expression -> postfix_expression DOT IDENTIFIER
-- On BAR reduce production postfix_expression -> postfix_expression DOT IDENTIFIER
-- On AND_OP reduce production postfix_expression -> postfix_expression DOT IDENTIFIER
-- On AND_ASSIGN reduce production postfix_expression -> postfix_expression DOT IDENTIFIER
-- On AMPERSAND reduce production postfix_expression -> postfix_expression DOT IDENTIFIER
-- On ADD_ASSIGN reduce production postfix_expression -> postfix_expression DOT IDENTIFIER

State 137:
postfix_expression -> postfix_expression DEC_OP . [ XOR_ASSIGN SUB_ASSIGN STAR SLASH SEMICOLON RPAREN RIGHT_OP RIGHT_ASSIGN RBRACK RBRACE QUESTION PTR_OP PLUS PERCENT OR_OP OR_ASSIGN NE_OP MUL_ASSIGN MOD_ASSIGN MINUS LT LPAREN LE_OP LEFT_OP LEFT_ASSIGN LBRACK INC_OP HAT GT GE_OP EQ_OP EQUAL DOT DIV_ASSIGN DEC_OP COMMA COLON BAR AND_OP AND_ASSIGN AMPERSAND ADD_ASSIGN ]
-- On XOR_ASSIGN reduce production postfix_expression -> postfix_expression DEC_OP
-- On SUB_ASSIGN reduce production postfix_expression -> postfix_expression DEC_OP
-- On STAR reduce production postfix_expression -> postfix_expression DEC_OP
-- On SLASH reduce production postfix_expression -> postfix_expression DEC_OP
-- On SEMICOLON reduce production postfix_expression -> postfix_expression DEC_OP
-- On RPAREN reduce production postfix_expression -> postfix_expression DEC_OP
-- On RIGHT_OP reduce production postfix_expression -> postfix_expression DEC_OP
-- On RIGHT_ASSIGN reduce production postfix_expression -> postfix_expression DEC_OP
-- On RBRACK reduce production postfix_expression -> postfix_expression DEC_OP
-- On RBRACE reduce production postfix_expression -> postfix_expression DEC_OP
-- On QUESTION reduce production postfix_expression -> postfix_expression DEC_OP
-- On PTR_OP reduce production postfix_expression -> postfix_expression DEC_OP
-- On PLUS reduce production postfix_expression -> postfix_expression DEC_OP
-- On PERCENT reduce production postfix_expression -> postfix_expression DEC_OP
-- On OR_OP reduce production postfix_expression -> postfix_expression DEC_OP
-- On OR_ASSIGN reduce production postfix_expression -> postfix_expression DEC_OP
-- On NE_OP reduce production postfix_expression -> postfix_expression DEC_OP
-- On MUL_ASSIGN reduce production postfix_expression -> postfix_expression DEC_OP
-- On MOD_ASSIGN reduce production postfix_expression -> postfix_expression DEC_OP
-- On MINUS reduce production postfix_expression -> postfix_expression DEC_OP
-- On LT reduce production postfix_expression -> postfix_expression DEC_OP
-- On LPAREN reduce production postfix_expression -> postfix_expression DEC_OP
-- On LE_OP reduce production postfix_expression -> postfix_expression DEC_OP
-- On LEFT_OP reduce production postfix_expression -> postfix_expression DEC_OP
-- On LEFT_ASSIGN reduce production postfix_expression -> postfix_expression DEC_OP
-- On LBRACK reduce production postfix_expression -> postfix_expression DEC_OP
-- On INC_OP reduce production postfix_expression -> postfix_expression DEC_OP
-- On HAT reduce production postfix_expression -> postfix_expression DEC_OP
-- On GT reduce production postfix_expression -> postfix_expression DEC_OP
-- On GE_OP reduce production postfix_expression -> postfix_expression DEC_OP
-- On EQ_OP reduce production postfix_expression -> postfix_expression DEC_OP
-- On EQUAL reduce production postfix_expression -> postfix_expression DEC_OP
-- On DOT reduce production postfix_expression -> postfix_expression DEC_OP
-- On DIV_ASSIGN reduce production postfix_expression -> postfix_expression DEC_OP
-- On DEC_OP reduce production postfix_expression -> postfix_expression DEC_OP
-- On COMMA reduce production postfix_expression -> postfix_expression DEC_OP
-- On COLON reduce production postfix_expression -> postfix_expression DEC_OP
-- On BAR reduce production postfix_expression -> postfix_expression DEC_OP
-- On AND_OP reduce production postfix_expression -> postfix_expression DEC_OP
-- On AND_ASSIGN reduce production postfix_expression -> postfix_expression DEC_OP
-- On AMPERSAND reduce production postfix_expression -> postfix_expression DEC_OP
-- On ADD_ASSIGN reduce production postfix_expression -> postfix_expression DEC_OP

State 138:
unary_expression -> unary_operator cast_expression . [ XOR_ASSIGN SUB_ASSIGN STAR SLASH SEMICOLON RPAREN RIGHT_OP RIGHT_ASSIGN RBRACK RBRACE QUESTION PLUS PERCENT OR_OP OR_ASSIGN NE_OP MUL_ASSIGN MOD_ASSIGN MINUS LT LE_OP LEFT_OP LEFT_ASSIGN HAT GT GE_OP EQ_OP EQUAL DIV_ASSIGN COMMA COLON BAR AND_OP AND_ASSIGN AMPERSAND ADD_ASSIGN ]
-- On XOR_ASSIGN reduce production unary_expression -> unary_operator cast_expression
-- On SUB_ASSIGN reduce production unary_expression -> unary_operator cast_expression
-- On STAR reduce production unary_expression -> unary_operator cast_expression
-- On SLASH reduce production unary_expression -> unary_operator cast_expression
-- On SEMICOLON reduce production unary_expression -> unary_operator cast_expression
-- On RPAREN reduce production unary_expression -> unary_operator cast_expression
-- On RIGHT_OP reduce production unary_expression -> unary_operator cast_expression
-- On RIGHT_ASSIGN reduce production unary_expression -> unary_operator cast_expression
-- On RBRACK reduce production unary_expression -> unary_operator cast_expression
-- On RBRACE reduce production unary_expression -> unary_operator cast_expression
-- On QUESTION reduce production unary_expression -> unary_operator cast_expression
-- On PLUS reduce production unary_expression -> unary_operator cast_expression
-- On PERCENT reduce production unary_expression -> unary_operator cast_expression
-- On OR_OP reduce production unary_expression -> unary_operator cast_expression
-- On OR_ASSIGN reduce production unary_expression -> unary_operator cast_expression
-- On NE_OP reduce production unary_expression -> unary_operator cast_expression
-- On MUL_ASSIGN reduce production unary_expression -> unary_operator cast_expression
-- On MOD_ASSIGN reduce production unary_expression -> unary_operator cast_expression
-- On MINUS reduce production unary_expression -> unary_operator cast_expression
-- On LT reduce production unary_expression -> unary_operator cast_expression
-- On LE_OP reduce production unary_expression -> unary_operator cast_expression
-- On LEFT_OP reduce production unary_expression -> unary_operator cast_expression
-- On LEFT_ASSIGN reduce production unary_expression -> unary_operator cast_expression
-- On HAT reduce production unary_expression -> unary_operator cast_expression
-- On GT reduce production unary_expression -> unary_operator cast_expression
-- On GE_OP reduce production unary_expression -> unary_operator cast_expression
-- On EQ_OP reduce production unary_expression -> unary_operator cast_expression
-- On EQUAL reduce production unary_expression -> unary_operator cast_expression
-- On DIV_ASSIGN reduce production unary_expression -> unary_operator cast_expression
-- On COMMA reduce production unary_expression -> unary_operator cast_expression
-- On COLON reduce production unary_expression -> unary_operator cast_expression
-- On BAR reduce production unary_expression -> unary_operator cast_expression
-- On AND_OP reduce production unary_expression -> unary_operator cast_expression
-- On AND_ASSIGN reduce production unary_expression -> unary_operator cast_expression
-- On AMPERSAND reduce production unary_expression -> unary_operator cast_expression
-- On ADD_ASSIGN reduce production unary_expression -> unary_operator cast_expression

State 139:
unary_expression -> DEC_OP unary_expression . [ XOR_ASSIGN SUB_ASSIGN STAR SLASH SEMICOLON RPAREN RIGHT_OP RIGHT_ASSIGN RBRACK RBRACE QUESTION PLUS PERCENT OR_OP OR_ASSIGN NE_OP MUL_ASSIGN MOD_ASSIGN MINUS LT LE_OP LEFT_OP LEFT_ASSIGN HAT GT GE_OP EQ_OP EQUAL DIV_ASSIGN COMMA COLON BAR AND_OP AND_ASSIGN AMPERSAND ADD_ASSIGN ]
-- On XOR_ASSIGN reduce production unary_expression -> DEC_OP unary_expression
-- On SUB_ASSIGN reduce production unary_expression -> DEC_OP unary_expression
-- On STAR reduce production unary_expression -> DEC_OP unary_expression
-- On SLASH reduce production unary_expression -> DEC_OP unary_expression
-- On SEMICOLON reduce production unary_expression -> DEC_OP unary_expression
-- On RPAREN reduce production unary_expression -> DEC_OP unary_expression
-- On RIGHT_OP reduce production unary_expression -> DEC_OP unary_expression
-- On RIGHT_ASSIGN reduce production unary_expression -> DEC_OP unary_expression
-- On RBRACK reduce production unary_expression -> DEC_OP unary_expression
-- On RBRACE reduce production unary_expression -> DEC_OP unary_expression
-- On QUESTION reduce production unary_expression -> DEC_OP unary_expression
-- On PLUS reduce production unary_expression -> DEC_OP unary_expression
-- On PERCENT reduce production unary_expression -> DEC_OP unary_expression
-- On OR_OP reduce production unary_expression -> DEC_OP unary_expression
-- On OR_ASSIGN reduce production unary_expression -> DEC_OP unary_expression
-- On NE_OP reduce production unary_expression -> DEC_OP unary_expression
-- On MUL_ASSIGN reduce production unary_expression -> DEC_OP unary_expression
-- On MOD_ASSIGN reduce production unary_expression -> DEC_OP unary_expression
-- On MINUS reduce production unary_expression -> DEC_OP unary_expression
-- On LT reduce production unary_expression -> DEC_OP unary_expression
-- On LE_OP reduce production unary_expression -> DEC_OP unary_expression
-- On LEFT_OP reduce production unary_expression -> DEC_OP unary_expression
-- On LEFT_ASSIGN reduce production unary_expression -> DEC_OP unary_expression
-- On HAT reduce production unary_expression -> DEC_OP unary_expression
-- On GT reduce production unary_expression -> DEC_OP unary_expression
-- On GE_OP reduce production unary_expression -> DEC_OP unary_expression
-- On EQ_OP reduce production unary_expression -> DEC_OP unary_expression
-- On EQUAL reduce production unary_expression -> DEC_OP unary_expression
-- On DIV_ASSIGN reduce production unary_expression -> DEC_OP unary_expression
-- On COMMA reduce production unary_expression -> DEC_OP unary_expression
-- On COLON reduce production unary_expression -> DEC_OP unary_expression
-- On BAR reduce production unary_expression -> DEC_OP unary_expression
-- On AND_OP reduce production unary_expression -> DEC_OP unary_expression
-- On AND_ASSIGN reduce production unary_expression -> DEC_OP unary_expression
-- On AMPERSAND reduce production unary_expression -> DEC_OP unary_expression
-- On ADD_ASSIGN reduce production unary_expression -> DEC_OP unary_expression

State 140:
expression -> expression . COMMA assignment_expression [ RPAREN COMMA ]
primary_expression -> LPAREN expression . RPAREN [ XOR_ASSIGN SUB_ASSIGN STAR SLASH SEMICOLON RPAREN RIGHT_OP RIGHT_ASSIGN RBRACK RBRACE QUESTION PTR_OP PLUS PERCENT OR_OP OR_ASSIGN NE_OP MUL_ASSIGN MOD_ASSIGN MINUS LT LPAREN LE_OP LEFT_OP LEFT_ASSIGN LBRACK INC_OP HAT GT GE_OP EQ_OP EQUAL DOT DIV_ASSIGN DEC_OP COMMA COLON BAR AND_OP AND_ASSIGN AMPERSAND ADD_ASSIGN ]
-- On RPAREN shift to state 141
-- On COMMA shift to state 117

State 141:
primary_expression -> LPAREN expression RPAREN . [ XOR_ASSIGN SUB_ASSIGN STAR SLASH SEMICOLON RPAREN RIGHT_OP RIGHT_ASSIGN RBRACK RBRACE QUESTION PTR_OP PLUS PERCENT OR_OP OR_ASSIGN NE_OP MUL_ASSIGN MOD_ASSIGN MINUS LT LPAREN LE_OP LEFT_OP LEFT_ASSIGN LBRACK INC_OP HAT GT GE_OP EQ_OP EQUAL DOT DIV_ASSIGN DEC_OP COMMA COLON BAR AND_OP AND_ASSIGN AMPERSAND ADD_ASSIGN ]
-- On XOR_ASSIGN reduce production primary_expression -> LPAREN expression RPAREN
-- On SUB_ASSIGN reduce production primary_expression -> LPAREN expression RPAREN
-- On STAR reduce production primary_expression -> LPAREN expression RPAREN
-- On SLASH reduce production primary_expression -> LPAREN expression RPAREN
-- On SEMICOLON reduce production primary_expression -> LPAREN expression RPAREN
-- On RPAREN reduce production primary_expression -> LPAREN expression RPAREN
-- On RIGHT_OP reduce production primary_expression -> LPAREN expression RPAREN
-- On RIGHT_ASSIGN reduce production primary_expression -> LPAREN expression RPAREN
-- On RBRACK reduce production primary_expression -> LPAREN expression RPAREN
-- On RBRACE reduce production primary_expression -> LPAREN expression RPAREN
-- On QUESTION reduce production primary_expression -> LPAREN expression RPAREN
-- On PTR_OP reduce production primary_expression -> LPAREN expression RPAREN
-- On PLUS reduce production primary_expression -> LPAREN expression RPAREN
-- On PERCENT reduce production primary_expression -> LPAREN expression RPAREN
-- On OR_OP reduce production primary_expression -> LPAREN expression RPAREN
-- On OR_ASSIGN reduce production primary_expression -> LPAREN expression RPAREN
-- On NE_OP reduce production primary_expression -> LPAREN expression RPAREN
-- On MUL_ASSIGN reduce production primary_expression -> LPAREN expression RPAREN
-- On MOD_ASSIGN reduce production primary_expression -> LPAREN expression RPAREN
-- On MINUS reduce production primary_expression -> LPAREN expression RPAREN
-- On LT reduce production primary_expression -> LPAREN expression RPAREN
-- On LPAREN reduce production primary_expression -> LPAREN expression RPAREN
-- On LE_OP reduce production primary_expression -> LPAREN expression RPAREN
-- On LEFT_OP reduce production primary_expression -> LPAREN expression RPAREN
-- On LEFT_ASSIGN reduce production primary_expression -> LPAREN expression RPAREN
-- On LBRACK reduce production primary_expression -> LPAREN expression RPAREN
-- On INC_OP reduce production primary_expression -> LPAREN expression RPAREN
-- On HAT reduce production primary_expression -> LPAREN expression RPAREN
-- On GT reduce production primary_expression -> LPAREN expression RPAREN
-- On GE_OP reduce production primary_expression -> LPAREN expression RPAREN
-- On EQ_OP reduce production primary_expression -> LPAREN expression RPAREN
-- On EQUAL reduce production primary_expression -> LPAREN expression RPAREN
-- On DOT reduce production primary_expression -> LPAREN expression RPAREN
-- On DIV_ASSIGN reduce production primary_expression -> LPAREN expression RPAREN
-- On DEC_OP reduce production primary_expression -> LPAREN expression RPAREN
-- On COMMA reduce production primary_expression -> LPAREN expression RPAREN
-- On COLON reduce production primary_expression -> LPAREN expression RPAREN
-- On BAR reduce production primary_expression -> LPAREN expression RPAREN
-- On AND_OP reduce production primary_expression -> LPAREN expression RPAREN
-- On AND_ASSIGN reduce production primary_expression -> LPAREN expression RPAREN
-- On AMPERSAND reduce production primary_expression -> LPAREN expression RPAREN
-- On ADD_ASSIGN reduce production primary_expression -> LPAREN expression RPAREN

State 142:
unary_expression -> INC_OP unary_expression . [ XOR_ASSIGN SUB_ASSIGN STAR SLASH SEMICOLON RPAREN RIGHT_OP RIGHT_ASSIGN RBRACK RBRACE QUESTION PLUS PERCENT OR_OP OR_ASSIGN NE_OP MUL_ASSIGN MOD_ASSIGN MINUS LT LE_OP LEFT_OP LEFT_ASSIGN HAT GT GE_OP EQ_OP EQUAL DIV_ASSIGN COMMA COLON BAR AND_OP AND_ASSIGN AMPERSAND ADD_ASSIGN ]
-- On XOR_ASSIGN reduce production unary_expression -> INC_OP unary_expression
-- On SUB_ASSIGN reduce production unary_expression -> INC_OP unary_expression
-- On STAR reduce production unary_expression -> INC_OP unary_expression
-- On SLASH reduce production unary_expression -> INC_OP unary_expression
-- On SEMICOLON reduce production unary_expression -> INC_OP unary_expression
-- On RPAREN reduce production unary_expression -> INC_OP unary_expression
-- On RIGHT_OP reduce production unary_expression -> INC_OP unary_expression
-- On RIGHT_ASSIGN reduce production unary_expression -> INC_OP unary_expression
-- On RBRACK reduce production unary_expression -> INC_OP unary_expression
-- On RBRACE reduce production unary_expression -> INC_OP unary_expression
-- On QUESTION reduce production unary_expression -> INC_OP unary_expression
-- On PLUS reduce production unary_expression -> INC_OP unary_expression
-- On PERCENT reduce production unary_expression -> INC_OP unary_expression
-- On OR_OP reduce production unary_expression -> INC_OP unary_expression
-- On OR_ASSIGN reduce production unary_expression -> INC_OP unary_expression
-- On NE_OP reduce production unary_expression -> INC_OP unary_expression
-- On MUL_ASSIGN reduce production unary_expression -> INC_OP unary_expression
-- On MOD_ASSIGN reduce production unary_expression -> INC_OP unary_expression
-- On MINUS reduce production unary_expression -> INC_OP unary_expression
-- On LT reduce production unary_expression -> INC_OP unary_expression
-- On LE_OP reduce production unary_expression -> INC_OP unary_expression
-- On LEFT_OP reduce production unary_expression -> INC_OP unary_expression
-- On LEFT_ASSIGN reduce production unary_expression -> INC_OP unary_expression
-- On HAT reduce production unary_expression -> INC_OP unary_expression
-- On GT reduce production unary_expression -> INC_OP unary_expression
-- On GE_OP reduce production unary_expression -> INC_OP unary_expression
-- On EQ_OP reduce production unary_expression -> INC_OP unary_expression
-- On EQUAL reduce production unary_expression -> INC_OP unary_expression
-- On DIV_ASSIGN reduce production unary_expression -> INC_OP unary_expression
-- On COMMA reduce production unary_expression -> INC_OP unary_expression
-- On COLON reduce production unary_expression -> INC_OP unary_expression
-- On BAR reduce production unary_expression -> INC_OP unary_expression
-- On AND_OP reduce production unary_expression -> INC_OP unary_expression
-- On AND_ASSIGN reduce production unary_expression -> INC_OP unary_expression
-- On AMPERSAND reduce production unary_expression -> INC_OP unary_expression
-- On ADD_ASSIGN reduce production unary_expression -> INC_OP unary_expression

State 143:
type_specifier -> DOUBLE . [ VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN REGISTER LPAREN LONG LBRACK INT IDENTIFIER FLOAT EXTERN ENUM DOUBLE CONST COMMA COLON CHAR AUTO ]
-- On VOLATILE reduce production type_specifier -> DOUBLE
-- On VOID reduce production type_specifier -> DOUBLE
-- On UNSIGNED reduce production type_specifier -> DOUBLE
-- On UNION reduce production type_specifier -> DOUBLE
-- On TYPE_NAME reduce production type_specifier -> DOUBLE
-- On TYPEDEF reduce production type_specifier -> DOUBLE
-- On STRUCT reduce production type_specifier -> DOUBLE
-- On STATIC reduce production type_specifier -> DOUBLE
-- On STAR reduce production type_specifier -> DOUBLE
-- On SIGNED reduce production type_specifier -> DOUBLE
-- On SHORT reduce production type_specifier -> DOUBLE
-- On SEMICOLON reduce production type_specifier -> DOUBLE
-- On RPAREN reduce production type_specifier -> DOUBLE
-- On REGISTER reduce production type_specifier -> DOUBLE
-- On LPAREN reduce production type_specifier -> DOUBLE
-- On LONG reduce production type_specifier -> DOUBLE
-- On LBRACK reduce production type_specifier -> DOUBLE
-- On INT reduce production type_specifier -> DOUBLE
-- On IDENTIFIER reduce production type_specifier -> DOUBLE
-- On FLOAT reduce production type_specifier -> DOUBLE
-- On EXTERN reduce production type_specifier -> DOUBLE
-- On ENUM reduce production type_specifier -> DOUBLE
-- On DOUBLE reduce production type_specifier -> DOUBLE
-- On CONST reduce production type_specifier -> DOUBLE
-- On COMMA reduce production type_specifier -> DOUBLE
-- On COLON reduce production type_specifier -> DOUBLE
-- On CHAR reduce production type_specifier -> DOUBLE
-- On AUTO reduce production type_specifier -> DOUBLE

State 144:
type_specifier -> CHAR . [ VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN REGISTER LPAREN LONG LBRACK INT IDENTIFIER FLOAT EXTERN ENUM DOUBLE CONST COMMA COLON CHAR AUTO ]
-- On VOLATILE reduce production type_specifier -> CHAR
-- On VOID reduce production type_specifier -> CHAR
-- On UNSIGNED reduce production type_specifier -> CHAR
-- On UNION reduce production type_specifier -> CHAR
-- On TYPE_NAME reduce production type_specifier -> CHAR
-- On TYPEDEF reduce production type_specifier -> CHAR
-- On STRUCT reduce production type_specifier -> CHAR
-- On STATIC reduce production type_specifier -> CHAR
-- On STAR reduce production type_specifier -> CHAR
-- On SIGNED reduce production type_specifier -> CHAR
-- On SHORT reduce production type_specifier -> CHAR
-- On SEMICOLON reduce production type_specifier -> CHAR
-- On RPAREN reduce production type_specifier -> CHAR
-- On REGISTER reduce production type_specifier -> CHAR
-- On LPAREN reduce production type_specifier -> CHAR
-- On LONG reduce production type_specifier -> CHAR
-- On LBRACK reduce production type_specifier -> CHAR
-- On INT reduce production type_specifier -> CHAR
-- On IDENTIFIER reduce production type_specifier -> CHAR
-- On FLOAT reduce production type_specifier -> CHAR
-- On EXTERN reduce production type_specifier -> CHAR
-- On ENUM reduce production type_specifier -> CHAR
-- On DOUBLE reduce production type_specifier -> CHAR
-- On CONST reduce production type_specifier -> CHAR
-- On COMMA reduce production type_specifier -> CHAR
-- On COLON reduce production type_specifier -> CHAR
-- On CHAR reduce production type_specifier -> CHAR
-- On AUTO reduce production type_specifier -> CHAR

State 145:
specifier_qualifier_list -> type_specifier . specifier_qualifier_list [ STAR RPAREN LPAREN LBRACK IDENTIFIER COLON ]
specifier_qualifier_list -> type_specifier . [ STAR RPAREN LPAREN LBRACK IDENTIFIER COLON ]
-- On VOLATILE shift to state 1
-- On VOID shift to state 2
-- On UNSIGNED shift to state 3
-- On UNION shift to state 4
-- On TYPE_NAME shift to state 5
-- On STRUCT shift to state 7
-- On SIGNED shift to state 16
-- On SHORT shift to state 17
-- On LONG shift to state 25
-- On INT shift to state 26
-- On FLOAT shift to state 28
-- On ENUM shift to state 30
-- On DOUBLE shift to state 143
-- On CONST shift to state 10
-- On CHAR shift to state 144
-- On type_specifier shift to state 145
-- On type_qualifier shift to state 146
-- On struct_or_union_specifier shift to state 147
-- On struct_or_union shift to state 148
-- On specifier_qualifier_list shift to state 177
-- On enum_specifier shift to state 170
-- On STAR reduce production specifier_qualifier_list -> type_specifier
-- On RPAREN reduce production specifier_qualifier_list -> type_specifier
-- On LPAREN reduce production specifier_qualifier_list -> type_specifier
-- On LBRACK reduce production specifier_qualifier_list -> type_specifier
-- On IDENTIFIER reduce production specifier_qualifier_list -> type_specifier
-- On COLON reduce production specifier_qualifier_list -> type_specifier

State 146:
specifier_qualifier_list -> type_qualifier . specifier_qualifier_list [ STAR RPAREN LPAREN LBRACK IDENTIFIER COLON ]
specifier_qualifier_list -> type_qualifier . [ STAR RPAREN LPAREN LBRACK IDENTIFIER COLON ]
-- On VOLATILE shift to state 1
-- On VOID shift to state 2
-- On UNSIGNED shift to state 3
-- On UNION shift to state 4
-- On TYPE_NAME shift to state 5
-- On STRUCT shift to state 7
-- On SIGNED shift to state 16
-- On SHORT shift to state 17
-- On LONG shift to state 25
-- On INT shift to state 26
-- On FLOAT shift to state 28
-- On ENUM shift to state 30
-- On DOUBLE shift to state 143
-- On CONST shift to state 10
-- On CHAR shift to state 144
-- On type_specifier shift to state 145
-- On type_qualifier shift to state 146
-- On struct_or_union_specifier shift to state 147
-- On struct_or_union shift to state 148
-- On specifier_qualifier_list shift to state 176
-- On enum_specifier shift to state 170
-- On STAR reduce production specifier_qualifier_list -> type_qualifier
-- On RPAREN reduce production specifier_qualifier_list -> type_qualifier
-- On LPAREN reduce production specifier_qualifier_list -> type_qualifier
-- On LBRACK reduce production specifier_qualifier_list -> type_qualifier
-- On IDENTIFIER reduce production specifier_qualifier_list -> type_qualifier
-- On COLON reduce production specifier_qualifier_list -> type_qualifier

State 147:
type_specifier -> struct_or_union_specifier . [ VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN REGISTER LPAREN LONG LBRACK INT IDENTIFIER FLOAT EXTERN ENUM DOUBLE CONST COMMA COLON CHAR AUTO ]
-- On VOLATILE reduce production type_specifier -> struct_or_union_specifier
-- On VOID reduce production type_specifier -> struct_or_union_specifier
-- On UNSIGNED reduce production type_specifier -> struct_or_union_specifier
-- On UNION reduce production type_specifier -> struct_or_union_specifier
-- On TYPE_NAME reduce production type_specifier -> struct_or_union_specifier
-- On TYPEDEF reduce production type_specifier -> struct_or_union_specifier
-- On STRUCT reduce production type_specifier -> struct_or_union_specifier
-- On STATIC reduce production type_specifier -> struct_or_union_specifier
-- On STAR reduce production type_specifier -> struct_or_union_specifier
-- On SIGNED reduce production type_specifier -> struct_or_union_specifier
-- On SHORT reduce production type_specifier -> struct_or_union_specifier
-- On SEMICOLON reduce production type_specifier -> struct_or_union_specifier
-- On RPAREN reduce production type_specifier -> struct_or_union_specifier
-- On REGISTER reduce production type_specifier -> struct_or_union_specifier
-- On LPAREN reduce production type_specifier -> struct_or_union_specifier
-- On LONG reduce production type_specifier -> struct_or_union_specifier
-- On LBRACK reduce production type_specifier -> struct_or_union_specifier
-- On INT reduce production type_specifier -> struct_or_union_specifier
-- On IDENTIFIER reduce production type_specifier -> struct_or_union_specifier
-- On FLOAT reduce production type_specifier -> struct_or_union_specifier
-- On EXTERN reduce production type_specifier -> struct_or_union_specifier
-- On ENUM reduce production type_specifier -> struct_or_union_specifier
-- On DOUBLE reduce production type_specifier -> struct_or_union_specifier
-- On CONST reduce production type_specifier -> struct_or_union_specifier
-- On COMMA reduce production type_specifier -> struct_or_union_specifier
-- On COLON reduce production type_specifier -> struct_or_union_specifier
-- On CHAR reduce production type_specifier -> struct_or_union_specifier
-- On AUTO reduce production type_specifier -> struct_or_union_specifier

State 148:
struct_or_union_specifier -> struct_or_union . IDENTIFIER LBRACE struct_declaration_list RBRACE [ VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN REGISTER LPAREN LONG LBRACK INT IDENTIFIER FLOAT EXTERN ENUM DOUBLE CONST COMMA COLON CHAR AUTO ]
struct_or_union_specifier -> struct_or_union . LBRACE struct_declaration_list RBRACE [ VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN REGISTER LPAREN LONG LBRACK INT IDENTIFIER FLOAT EXTERN ENUM DOUBLE CONST COMMA COLON CHAR AUTO ]
struct_or_union_specifier -> struct_or_union . IDENTIFIER [ VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN REGISTER LPAREN LONG LBRACK INT IDENTIFIER FLOAT EXTERN ENUM DOUBLE CONST COMMA COLON CHAR AUTO ]
-- On LBRACE shift to state 149
-- On IDENTIFIER shift to state 172

State 149:
struct_or_union_specifier -> struct_or_union LBRACE . struct_declaration_list RBRACE [ VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN REGISTER LPAREN LONG LBRACK INT IDENTIFIER FLOAT EXTERN ENUM DOUBLE CONST COMMA COLON CHAR AUTO ]
-- On VOLATILE shift to state 1
-- On VOID shift to state 2
-- On UNSIGNED shift to state 3
-- On UNION shift to state 4
-- On TYPE_NAME shift to state 5
-- On STRUCT shift to state 7
-- On SIGNED shift to state 16
-- On SHORT shift to state 17
-- On LONG shift to state 25
-- On INT shift to state 26
-- On FLOAT shift to state 28
-- On ENUM shift to state 30
-- On DOUBLE shift to state 143
-- On CONST shift to state 10
-- On CHAR shift to state 144
-- On type_specifier shift to state 145
-- On type_qualifier shift to state 146
-- On struct_or_union_specifier shift to state 147
-- On struct_or_union shift to state 148
-- On struct_declaration_list shift to state 150
-- On struct_declaration shift to state 171
-- On specifier_qualifier_list shift to state 153
-- On enum_specifier shift to state 170

State 150:
struct_declaration_list -> struct_declaration_list . struct_declaration [ VOLATILE VOID UNSIGNED UNION TYPE_NAME STRUCT SIGNED SHORT RBRACE LONG INT FLOAT ENUM DOUBLE CONST CHAR ]
struct_or_union_specifier -> struct_or_union LBRACE struct_declaration_list . RBRACE [ VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN REGISTER LPAREN LONG LBRACK INT IDENTIFIER FLOAT EXTERN ENUM DOUBLE CONST COMMA COLON CHAR AUTO ]
-- On VOLATILE shift to state 1
-- On VOID shift to state 2
-- On UNSIGNED shift to state 3
-- On UNION shift to state 4
-- On TYPE_NAME shift to state 5
-- On STRUCT shift to state 7
-- On SIGNED shift to state 16
-- On SHORT shift to state 17
-- On RBRACE shift to state 151
-- On LONG shift to state 25
-- On INT shift to state 26
-- On FLOAT shift to state 28
-- On ENUM shift to state 30
-- On DOUBLE shift to state 143
-- On CONST shift to state 10
-- On CHAR shift to state 144
-- On type_specifier shift to state 145
-- On type_qualifier shift to state 146
-- On struct_or_union_specifier shift to state 147
-- On struct_or_union shift to state 148
-- On struct_declaration shift to state 152
-- On specifier_qualifier_list shift to state 153
-- On enum_specifier shift to state 170

State 151:
struct_or_union_specifier -> struct_or_union LBRACE struct_declaration_list RBRACE . [ VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN REGISTER LPAREN LONG LBRACK INT IDENTIFIER FLOAT EXTERN ENUM DOUBLE CONST COMMA COLON CHAR AUTO ]
-- On VOLATILE reduce production struct_or_union_specifier -> struct_or_union LBRACE struct_declaration_list RBRACE
-- On VOID reduce production struct_or_union_specifier -> struct_or_union LBRACE struct_declaration_list RBRACE
-- On UNSIGNED reduce production struct_or_union_specifier -> struct_or_union LBRACE struct_declaration_list RBRACE
-- On UNION reduce production struct_or_union_specifier -> struct_or_union LBRACE struct_declaration_list RBRACE
-- On TYPE_NAME reduce production struct_or_union_specifier -> struct_or_union LBRACE struct_declaration_list RBRACE
-- On TYPEDEF reduce production struct_or_union_specifier -> struct_or_union LBRACE struct_declaration_list RBRACE
-- On STRUCT reduce production struct_or_union_specifier -> struct_or_union LBRACE struct_declaration_list RBRACE
-- On STATIC reduce production struct_or_union_specifier -> struct_or_union LBRACE struct_declaration_list RBRACE
-- On STAR reduce production struct_or_union_specifier -> struct_or_union LBRACE struct_declaration_list RBRACE
-- On SIGNED reduce production struct_or_union_specifier -> struct_or_union LBRACE struct_declaration_list RBRACE
-- On SHORT reduce production struct_or_union_specifier -> struct_or_union LBRACE struct_declaration_list RBRACE
-- On SEMICOLON reduce production struct_or_union_specifier -> struct_or_union LBRACE struct_declaration_list RBRACE
-- On RPAREN reduce production struct_or_union_specifier -> struct_or_union LBRACE struct_declaration_list RBRACE
-- On REGISTER reduce production struct_or_union_specifier -> struct_or_union LBRACE struct_declaration_list RBRACE
-- On LPAREN reduce production struct_or_union_specifier -> struct_or_union LBRACE struct_declaration_list RBRACE
-- On LONG reduce production struct_or_union_specifier -> struct_or_union LBRACE struct_declaration_list RBRACE
-- On LBRACK reduce production struct_or_union_specifier -> struct_or_union LBRACE struct_declaration_list RBRACE
-- On INT reduce production struct_or_union_specifier -> struct_or_union LBRACE struct_declaration_list RBRACE
-- On IDENTIFIER reduce production struct_or_union_specifier -> struct_or_union LBRACE struct_declaration_list RBRACE
-- On FLOAT reduce production struct_or_union_specifier -> struct_or_union LBRACE struct_declaration_list RBRACE
-- On EXTERN reduce production struct_or_union_specifier -> struct_or_union LBRACE struct_declaration_list RBRACE
-- On ENUM reduce production struct_or_union_specifier -> struct_or_union LBRACE struct_declaration_list RBRACE
-- On DOUBLE reduce production struct_or_union_specifier -> struct_or_union LBRACE struct_declaration_list RBRACE
-- On CONST reduce production struct_or_union_specifier -> struct_or_union LBRACE struct_declaration_list RBRACE
-- On COMMA reduce production struct_or_union_specifier -> struct_or_union LBRACE struct_declaration_list RBRACE
-- On COLON reduce production struct_or_union_specifier -> struct_or_union LBRACE struct_declaration_list RBRACE
-- On CHAR reduce production struct_or_union_specifier -> struct_or_union LBRACE struct_declaration_list RBRACE
-- On AUTO reduce production struct_or_union_specifier -> struct_or_union LBRACE struct_declaration_list RBRACE

State 152:
struct_declaration_list -> struct_declaration_list struct_declaration . [ VOLATILE VOID UNSIGNED UNION TYPE_NAME STRUCT SIGNED SHORT RBRACE LONG INT FLOAT ENUM DOUBLE CONST CHAR ]
-- On VOLATILE reduce production struct_declaration_list -> struct_declaration_list struct_declaration
-- On VOID reduce production struct_declaration_list -> struct_declaration_list struct_declaration
-- On UNSIGNED reduce production struct_declaration_list -> struct_declaration_list struct_declaration
-- On UNION reduce production struct_declaration_list -> struct_declaration_list struct_declaration
-- On TYPE_NAME reduce production struct_declaration_list -> struct_declaration_list struct_declaration
-- On STRUCT reduce production struct_declaration_list -> struct_declaration_list struct_declaration
-- On SIGNED reduce production struct_declaration_list -> struct_declaration_list struct_declaration
-- On SHORT reduce production struct_declaration_list -> struct_declaration_list struct_declaration
-- On RBRACE reduce production struct_declaration_list -> struct_declaration_list struct_declaration
-- On LONG reduce production struct_declaration_list -> struct_declaration_list struct_declaration
-- On INT reduce production struct_declaration_list -> struct_declaration_list struct_declaration
-- On FLOAT reduce production struct_declaration_list -> struct_declaration_list struct_declaration
-- On ENUM reduce production struct_declaration_list -> struct_declaration_list struct_declaration
-- On DOUBLE reduce production struct_declaration_list -> struct_declaration_list struct_declaration
-- On CONST reduce production struct_declaration_list -> struct_declaration_list struct_declaration
-- On CHAR reduce production struct_declaration_list -> struct_declaration_list struct_declaration

State 153:
struct_declaration -> specifier_qualifier_list . struct_declarator_list SEMICOLON [ VOLATILE VOID UNSIGNED UNION TYPE_NAME STRUCT SIGNED SHORT RBRACE LONG INT FLOAT ENUM DOUBLE CONST CHAR ]
-- On STAR shift to state 9
-- On LPAREN shift to state 19
-- On IDENTIFIER shift to state 20
-- On COLON shift to state 154
-- On struct_declarator_list shift to state 157
-- On struct_declarator shift to state 169
-- On pointer shift to state 21
-- On direct_declarator shift to state 161
-- On declarator shift to state 166

State 154:
struct_declarator -> COLON . constant_expression [ SEMICOLON COMMA ]
-- On TILDE shift to state 34
-- On STRING_LITERAL shift to state 35
-- On STAR shift to state 36
-- On SIZEOF shift to state 37
-- On PLUS shift to state 38
-- On MINUS shift to state 39
-- On LPAREN shift to state 41
-- On INC_OP shift to state 42
-- On IDENTIFIER shift to state 44
-- On DEC_OP shift to state 45
-- On CONSTANT shift to state 46
-- On BANG shift to state 47
-- On AMPERSAND shift to state 48
-- On unary_operator shift to state 49
-- On unary_expression shift to state 50
-- On shift_expression shift to state 70
-- On relational_expression shift to state 87
-- On primary_expression shift to state 51
-- On postfix_expression shift to state 52
-- On multiplicative_expression shift to state 72
-- On logical_or_expression shift to state 97
-- On logical_and_expression shift to state 99
-- On inclusive_or_expression shift to state 115
-- On exclusive_or_expression shift to state 114
-- On equality_expression shift to state 105
-- On constant_expression shift to state 155
-- On conditional_expression shift to state 156
-- On cast_expression shift to state 79
-- On and_expression shift to state 113
-- On additive_expression shift to state 90

State 155:
struct_declarator -> COLON constant_expression . [ SEMICOLON COMMA ]
-- On SEMICOLON reduce production struct_declarator -> COLON constant_expression
-- On COMMA reduce production struct_declarator -> COLON constant_expression

State 156:
constant_expression -> conditional_expression . [ SEMICOLON RBRACK RBRACE COMMA COLON ]
-- On SEMICOLON reduce production constant_expression -> conditional_expression
-- On RBRACK reduce production constant_expression -> conditional_expression
-- On RBRACE reduce production constant_expression -> conditional_expression
-- On COMMA reduce production constant_expression -> conditional_expression
-- On COLON reduce production constant_expression -> conditional_expression

State 157:
struct_declaration -> specifier_qualifier_list struct_declarator_list . SEMICOLON [ VOLATILE VOID UNSIGNED UNION TYPE_NAME STRUCT SIGNED SHORT RBRACE LONG INT FLOAT ENUM DOUBLE CONST CHAR ]
struct_declarator_list -> struct_declarator_list . COMMA struct_declarator [ SEMICOLON COMMA ]
-- On SEMICOLON shift to state 158
-- On COMMA shift to state 159

State 158:
struct_declaration -> specifier_qualifier_list struct_declarator_list SEMICOLON . [ VOLATILE VOID UNSIGNED UNION TYPE_NAME STRUCT SIGNED SHORT RBRACE LONG INT FLOAT ENUM DOUBLE CONST CHAR ]
-- On VOLATILE reduce production struct_declaration -> specifier_qualifier_list struct_declarator_list SEMICOLON
-- On VOID reduce production struct_declaration -> specifier_qualifier_list struct_declarator_list SEMICOLON
-- On UNSIGNED reduce production struct_declaration -> specifier_qualifier_list struct_declarator_list SEMICOLON
-- On UNION reduce production struct_declaration -> specifier_qualifier_list struct_declarator_list SEMICOLON
-- On TYPE_NAME reduce production struct_declaration -> specifier_qualifier_list struct_declarator_list SEMICOLON
-- On STRUCT reduce production struct_declaration -> specifier_qualifier_list struct_declarator_list SEMICOLON
-- On SIGNED reduce production struct_declaration -> specifier_qualifier_list struct_declarator_list SEMICOLON
-- On SHORT reduce production struct_declaration -> specifier_qualifier_list struct_declarator_list SEMICOLON
-- On RBRACE reduce production struct_declaration -> specifier_qualifier_list struct_declarator_list SEMICOLON
-- On LONG reduce production struct_declaration -> specifier_qualifier_list struct_declarator_list SEMICOLON
-- On INT reduce production struct_declaration -> specifier_qualifier_list struct_declarator_list SEMICOLON
-- On FLOAT reduce production struct_declaration -> specifier_qualifier_list struct_declarator_list SEMICOLON
-- On ENUM reduce production struct_declaration -> specifier_qualifier_list struct_declarator_list SEMICOLON
-- On DOUBLE reduce production struct_declaration -> specifier_qualifier_list struct_declarator_list SEMICOLON
-- On CONST reduce production struct_declaration -> specifier_qualifier_list struct_declarator_list SEMICOLON
-- On CHAR reduce production struct_declaration -> specifier_qualifier_list struct_declarator_list SEMICOLON

State 159:
struct_declarator_list -> struct_declarator_list COMMA . struct_declarator [ SEMICOLON COMMA ]
-- On STAR shift to state 9
-- On LPAREN shift to state 19
-- On IDENTIFIER shift to state 20
-- On COLON shift to state 154
-- On struct_declarator shift to state 160
-- On pointer shift to state 21
-- On direct_declarator shift to state 161
-- On declarator shift to state 166

State 160:
struct_declarator_list -> struct_declarator_list COMMA struct_declarator . [ SEMICOLON COMMA ]
-- On SEMICOLON reduce production struct_declarator_list -> struct_declarator_list COMMA struct_declarator
-- On COMMA reduce production struct_declarator_list -> struct_declarator_list COMMA struct_declarator

State 161:
declarator -> direct_declarator . [ VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF STRUCT STATIC SIGNED SHORT SEMICOLON RPAREN REGISTER LONG LBRACE INT FLOAT EXTERN EQUAL ENUM DOUBLE CONST COMMA COLON CHAR AUTO ]
direct_declarator -> direct_declarator . LBRACK constant_expression RBRACK [ VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF STRUCT STATIC SIGNED SHORT SEMICOLON RPAREN REGISTER LPAREN LONG LBRACK LBRACE INT FLOAT EXTERN EQUAL ENUM DOUBLE CONST COMMA COLON CHAR AUTO ]
direct_declarator -> direct_declarator . LBRACK RBRACK [ VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF STRUCT STATIC SIGNED SHORT SEMICOLON RPAREN REGISTER LPAREN LONG LBRACK LBRACE INT FLOAT EXTERN EQUAL ENUM DOUBLE CONST COMMA COLON CHAR AUTO ]
direct_declarator -> direct_declarator . LPAREN parameter_type_list RPAREN [ VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF STRUCT STATIC SIGNED SHORT SEMICOLON RPAREN REGISTER LPAREN LONG LBRACK LBRACE INT FLOAT EXTERN EQUAL ENUM DOUBLE CONST COMMA COLON CHAR AUTO ]
direct_declarator -> direct_declarator . LPAREN identifier_list RPAREN [ VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF STRUCT STATIC SIGNED SHORT SEMICOLON RPAREN REGISTER LPAREN LONG LBRACK LBRACE INT FLOAT EXTERN EQUAL ENUM DOUBLE CONST COMMA COLON CHAR AUTO ]
direct_declarator -> direct_declarator . LPAREN RPAREN [ VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF STRUCT STATIC SIGNED SHORT SEMICOLON RPAREN REGISTER LPAREN LONG LBRACK LBRACE INT FLOAT EXTERN EQUAL ENUM DOUBLE CONST COMMA COLON CHAR AUTO ]
-- On LPAREN shift to state 23
-- On LBRACK shift to state 162
-- On VOLATILE reduce production declarator -> direct_declarator
-- On VOID reduce production declarator -> direct_declarator
-- On UNSIGNED reduce production declarator -> direct_declarator
-- On UNION reduce production declarator -> direct_declarator
-- On TYPE_NAME reduce production declarator -> direct_declarator
-- On TYPEDEF reduce production declarator -> direct_declarator
-- On STRUCT reduce production declarator -> direct_declarator
-- On STATIC reduce production declarator -> direct_declarator
-- On SIGNED reduce production declarator -> direct_declarator
-- On SHORT reduce production declarator -> direct_declarator
-- On SEMICOLON reduce production declarator -> direct_declarator
-- On RPAREN reduce production declarator -> direct_declarator
-- On REGISTER reduce production declarator -> direct_declarator
-- On LONG reduce production declarator -> direct_declarator
-- On LBRACE reduce production declarator -> direct_declarator
-- On INT reduce production declarator -> direct_declarator
-- On FLOAT reduce production declarator -> direct_declarator
-- On EXTERN reduce production declarator -> direct_declarator
-- On EQUAL reduce production declarator -> direct_declarator
-- On ENUM reduce production declarator -> direct_declarator
-- On DOUBLE reduce production declarator -> direct_declarator
-- On CONST reduce production declarator -> direct_declarator
-- On COMMA reduce production declarator -> direct_declarator
-- On COLON reduce production declarator -> direct_declarator
-- On CHAR reduce production declarator -> direct_declarator
-- On AUTO reduce production declarator -> direct_declarator

State 162:
direct_declarator -> direct_declarator LBRACK . constant_expression RBRACK [ VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF STRUCT STATIC SIGNED SHORT SEMICOLON RPAREN REGISTER LPAREN LONG LBRACK LBRACE INT FLOAT EXTERN EQUAL ENUM DOUBLE CONST COMMA COLON CHAR AUTO ]
direct_declarator -> direct_declarator LBRACK . RBRACK [ VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF STRUCT STATIC SIGNED SHORT SEMICOLON RPAREN REGISTER LPAREN LONG LBRACK LBRACE INT FLOAT EXTERN EQUAL ENUM DOUBLE CONST COMMA COLON CHAR AUTO ]
-- On TILDE shift to state 34
-- On STRING_LITERAL shift to state 35
-- On STAR shift to state 36
-- On SIZEOF shift to state 37
-- On RBRACK shift to state 163
-- On PLUS shift to state 38
-- On MINUS shift to state 39
-- On LPAREN shift to state 41
-- On INC_OP shift to state 42
-- On IDENTIFIER shift to state 44
-- On DEC_OP shift to state 45
-- On CONSTANT shift to state 46
-- On BANG shift to state 47
-- On AMPERSAND shift to state 48
-- On unary_operator shift to state 49
-- On unary_expression shift to state 50
-- On shift_expression shift to state 70
-- On relational_expression shift to state 87
-- On primary_expression shift to state 51
-- On postfix_expression shift to state 52
-- On multiplicative_expression shift to state 72
-- On logical_or_expression shift to state 97
-- On logical_and_expression shift to state 99
-- On inclusive_or_expression shift to state 115
-- On exclusive_or_expression shift to state 114
-- On equality_expression shift to state 105
-- On constant_expression shift to state 164
-- On conditional_expression shift to state 156
-- On cast_expression shift to state 79
-- On and_expression shift to state 113
-- On additive_expression shift to state 90

State 163:
direct_declarator -> direct_declarator LBRACK RBRACK . [ VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF STRUCT STATIC SIGNED SHORT SEMICOLON RPAREN REGISTER LPAREN LONG LBRACK LBRACE INT FLOAT EXTERN EQUAL ENUM DOUBLE CONST COMMA COLON CHAR AUTO ]
-- On VOLATILE reduce production direct_declarator -> direct_declarator LBRACK RBRACK
-- On VOID reduce production direct_declarator -> direct_declarator LBRACK RBRACK
-- On UNSIGNED reduce production direct_declarator -> direct_declarator LBRACK RBRACK
-- On UNION reduce production direct_declarator -> direct_declarator LBRACK RBRACK
-- On TYPE_NAME reduce production direct_declarator -> direct_declarator LBRACK RBRACK
-- On TYPEDEF reduce production direct_declarator -> direct_declarator LBRACK RBRACK
-- On STRUCT reduce production direct_declarator -> direct_declarator LBRACK RBRACK
-- On STATIC reduce production direct_declarator -> direct_declarator LBRACK RBRACK
-- On SIGNED reduce production direct_declarator -> direct_declarator LBRACK RBRACK
-- On SHORT reduce production direct_declarator -> direct_declarator LBRACK RBRACK
-- On SEMICOLON reduce production direct_declarator -> direct_declarator LBRACK RBRACK
-- On RPAREN reduce production direct_declarator -> direct_declarator LBRACK RBRACK
-- On REGISTER reduce production direct_declarator -> direct_declarator LBRACK RBRACK
-- On LPAREN reduce production direct_declarator -> direct_declarator LBRACK RBRACK
-- On LONG reduce production direct_declarator -> direct_declarator LBRACK RBRACK
-- On LBRACK reduce production direct_declarator -> direct_declarator LBRACK RBRACK
-- On LBRACE reduce production direct_declarator -> direct_declarator LBRACK RBRACK
-- On INT reduce production direct_declarator -> direct_declarator LBRACK RBRACK
-- On FLOAT reduce production direct_declarator -> direct_declarator LBRACK RBRACK
-- On EXTERN reduce production direct_declarator -> direct_declarator LBRACK RBRACK
-- On EQUAL reduce production direct_declarator -> direct_declarator LBRACK RBRACK
-- On ENUM reduce production direct_declarator -> direct_declarator LBRACK RBRACK
-- On DOUBLE reduce production direct_declarator -> direct_declarator LBRACK RBRACK
-- On CONST reduce production direct_declarator -> direct_declarator LBRACK RBRACK
-- On COMMA reduce production direct_declarator -> direct_declarator LBRACK RBRACK
-- On COLON reduce production direct_declarator -> direct_declarator LBRACK RBRACK
-- On CHAR reduce production direct_declarator -> direct_declarator LBRACK RBRACK
-- On AUTO reduce production direct_declarator -> direct_declarator LBRACK RBRACK

State 164:
direct_declarator -> direct_declarator LBRACK constant_expression . RBRACK [ VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF STRUCT STATIC SIGNED SHORT SEMICOLON RPAREN REGISTER LPAREN LONG LBRACK LBRACE INT FLOAT EXTERN EQUAL ENUM DOUBLE CONST COMMA COLON CHAR AUTO ]
-- On RBRACK shift to state 165

State 165:
direct_declarator -> direct_declarator LBRACK constant_expression RBRACK . [ VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF STRUCT STATIC SIGNED SHORT SEMICOLON RPAREN REGISTER LPAREN LONG LBRACK LBRACE INT FLOAT EXTERN EQUAL ENUM DOUBLE CONST COMMA COLON CHAR AUTO ]
-- On VOLATILE reduce production direct_declarator -> direct_declarator LBRACK constant_expression RBRACK
-- On VOID reduce production direct_declarator -> direct_declarator LBRACK constant_expression RBRACK
-- On UNSIGNED reduce production direct_declarator -> direct_declarator LBRACK constant_expression RBRACK
-- On UNION reduce production direct_declarator -> direct_declarator LBRACK constant_expression RBRACK
-- On TYPE_NAME reduce production direct_declarator -> direct_declarator LBRACK constant_expression RBRACK
-- On TYPEDEF reduce production direct_declarator -> direct_declarator LBRACK constant_expression RBRACK
-- On STRUCT reduce production direct_declarator -> direct_declarator LBRACK constant_expression RBRACK
-- On STATIC reduce production direct_declarator -> direct_declarator LBRACK constant_expression RBRACK
-- On SIGNED reduce production direct_declarator -> direct_declarator LBRACK constant_expression RBRACK
-- On SHORT reduce production direct_declarator -> direct_declarator LBRACK constant_expression RBRACK
-- On SEMICOLON reduce production direct_declarator -> direct_declarator LBRACK constant_expression RBRACK
-- On RPAREN reduce production direct_declarator -> direct_declarator LBRACK constant_expression RBRACK
-- On REGISTER reduce production direct_declarator -> direct_declarator LBRACK constant_expression RBRACK
-- On LPAREN reduce production direct_declarator -> direct_declarator LBRACK constant_expression RBRACK
-- On LONG reduce production direct_declarator -> direct_declarator LBRACK constant_expression RBRACK
-- On LBRACK reduce production direct_declarator -> direct_declarator LBRACK constant_expression RBRACK
-- On LBRACE reduce production direct_declarator -> direct_declarator LBRACK constant_expression RBRACK
-- On INT reduce production direct_declarator -> direct_declarator LBRACK constant_expression RBRACK
-- On FLOAT reduce production direct_declarator -> direct_declarator LBRACK constant_expression RBRACK
-- On EXTERN reduce production direct_declarator -> direct_declarator LBRACK constant_expression RBRACK
-- On EQUAL reduce production direct_declarator -> direct_declarator LBRACK constant_expression RBRACK
-- On ENUM reduce production direct_declarator -> direct_declarator LBRACK constant_expression RBRACK
-- On DOUBLE reduce production direct_declarator -> direct_declarator LBRACK constant_expression RBRACK
-- On CONST reduce production direct_declarator -> direct_declarator LBRACK constant_expression RBRACK
-- On COMMA reduce production direct_declarator -> direct_declarator LBRACK constant_expression RBRACK
-- On COLON reduce production direct_declarator -> direct_declarator LBRACK constant_expression RBRACK
-- On CHAR reduce production direct_declarator -> direct_declarator LBRACK constant_expression RBRACK
-- On AUTO reduce production direct_declarator -> direct_declarator LBRACK constant_expression RBRACK

State 166:
struct_declarator -> declarator . [ SEMICOLON COMMA ]
struct_declarator -> declarator . COLON constant_expression [ SEMICOLON COMMA ]
-- On COLON shift to state 167
-- On SEMICOLON reduce production struct_declarator -> declarator
-- On COMMA reduce production struct_declarator -> declarator

State 167:
struct_declarator -> declarator COLON . constant_expression [ SEMICOLON COMMA ]
-- On TILDE shift to state 34
-- On STRING_LITERAL shift to state 35
-- On STAR shift to state 36
-- On SIZEOF shift to state 37
-- On PLUS shift to state 38
-- On MINUS shift to state 39
-- On LPAREN shift to state 41
-- On INC_OP shift to state 42
-- On IDENTIFIER shift to state 44
-- On DEC_OP shift to state 45
-- On CONSTANT shift to state 46
-- On BANG shift to state 47
-- On AMPERSAND shift to state 48
-- On unary_operator shift to state 49
-- On unary_expression shift to state 50
-- On shift_expression shift to state 70
-- On relational_expression shift to state 87
-- On primary_expression shift to state 51
-- On postfix_expression shift to state 52
-- On multiplicative_expression shift to state 72
-- On logical_or_expression shift to state 97
-- On logical_and_expression shift to state 99
-- On inclusive_or_expression shift to state 115
-- On exclusive_or_expression shift to state 114
-- On equality_expression shift to state 105
-- On constant_expression shift to state 168
-- On conditional_expression shift to state 156
-- On cast_expression shift to state 79
-- On and_expression shift to state 113
-- On additive_expression shift to state 90

State 168:
struct_declarator -> declarator COLON constant_expression . [ SEMICOLON COMMA ]
-- On SEMICOLON reduce production struct_declarator -> declarator COLON constant_expression
-- On COMMA reduce production struct_declarator -> declarator COLON constant_expression

State 169:
struct_declarator_list -> struct_declarator . [ SEMICOLON COMMA ]
-- On SEMICOLON reduce production struct_declarator_list -> struct_declarator
-- On COMMA reduce production struct_declarator_list -> struct_declarator

State 170:
type_specifier -> enum_specifier . [ VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN REGISTER LPAREN LONG LBRACK INT IDENTIFIER FLOAT EXTERN ENUM DOUBLE CONST COMMA COLON CHAR AUTO ]
-- On VOLATILE reduce production type_specifier -> enum_specifier
-- On VOID reduce production type_specifier -> enum_specifier
-- On UNSIGNED reduce production type_specifier -> enum_specifier
-- On UNION reduce production type_specifier -> enum_specifier
-- On TYPE_NAME reduce production type_specifier -> enum_specifier
-- On TYPEDEF reduce production type_specifier -> enum_specifier
-- On STRUCT reduce production type_specifier -> enum_specifier
-- On STATIC reduce production type_specifier -> enum_specifier
-- On STAR reduce production type_specifier -> enum_specifier
-- On SIGNED reduce production type_specifier -> enum_specifier
-- On SHORT reduce production type_specifier -> enum_specifier
-- On SEMICOLON reduce production type_specifier -> enum_specifier
-- On RPAREN reduce production type_specifier -> enum_specifier
-- On REGISTER reduce production type_specifier -> enum_specifier
-- On LPAREN reduce production type_specifier -> enum_specifier
-- On LONG reduce production type_specifier -> enum_specifier
-- On LBRACK reduce production type_specifier -> enum_specifier
-- On INT reduce production type_specifier -> enum_specifier
-- On IDENTIFIER reduce production type_specifier -> enum_specifier
-- On FLOAT reduce production type_specifier -> enum_specifier
-- On EXTERN reduce production type_specifier -> enum_specifier
-- On ENUM reduce production type_specifier -> enum_specifier
-- On DOUBLE reduce production type_specifier -> enum_specifier
-- On CONST reduce production type_specifier -> enum_specifier
-- On COMMA reduce production type_specifier -> enum_specifier
-- On COLON reduce production type_specifier -> enum_specifier
-- On CHAR reduce production type_specifier -> enum_specifier
-- On AUTO reduce production type_specifier -> enum_specifier

State 171:
struct_declaration_list -> struct_declaration . [ VOLATILE VOID UNSIGNED UNION TYPE_NAME STRUCT SIGNED SHORT RBRACE LONG INT FLOAT ENUM DOUBLE CONST CHAR ]
-- On VOLATILE reduce production struct_declaration_list -> struct_declaration
-- On VOID reduce production struct_declaration_list -> struct_declaration
-- On UNSIGNED reduce production struct_declaration_list -> struct_declaration
-- On UNION reduce production struct_declaration_list -> struct_declaration
-- On TYPE_NAME reduce production struct_declaration_list -> struct_declaration
-- On STRUCT reduce production struct_declaration_list -> struct_declaration
-- On SIGNED reduce production struct_declaration_list -> struct_declaration
-- On SHORT reduce production struct_declaration_list -> struct_declaration
-- On RBRACE reduce production struct_declaration_list -> struct_declaration
-- On LONG reduce production struct_declaration_list -> struct_declaration
-- On INT reduce production struct_declaration_list -> struct_declaration
-- On FLOAT reduce production struct_declaration_list -> struct_declaration
-- On ENUM reduce production struct_declaration_list -> struct_declaration
-- On DOUBLE reduce production struct_declaration_list -> struct_declaration
-- On CONST reduce production struct_declaration_list -> struct_declaration
-- On CHAR reduce production struct_declaration_list -> struct_declaration

State 172:
struct_or_union_specifier -> struct_or_union IDENTIFIER . LBRACE struct_declaration_list RBRACE [ VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN REGISTER LPAREN LONG LBRACK INT IDENTIFIER FLOAT EXTERN ENUM DOUBLE CONST COMMA COLON CHAR AUTO ]
struct_or_union_specifier -> struct_or_union IDENTIFIER . [ VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN REGISTER LPAREN LONG LBRACK INT IDENTIFIER FLOAT EXTERN ENUM DOUBLE CONST COMMA COLON CHAR AUTO ]
-- On LBRACE shift to state 173
-- On VOLATILE reduce production struct_or_union_specifier -> struct_or_union IDENTIFIER
-- On VOID reduce production struct_or_union_specifier -> struct_or_union IDENTIFIER
-- On UNSIGNED reduce production struct_or_union_specifier -> struct_or_union IDENTIFIER
-- On UNION reduce production struct_or_union_specifier -> struct_or_union IDENTIFIER
-- On TYPE_NAME reduce production struct_or_union_specifier -> struct_or_union IDENTIFIER
-- On TYPEDEF reduce production struct_or_union_specifier -> struct_or_union IDENTIFIER
-- On STRUCT reduce production struct_or_union_specifier -> struct_or_union IDENTIFIER
-- On STATIC reduce production struct_or_union_specifier -> struct_or_union IDENTIFIER
-- On STAR reduce production struct_or_union_specifier -> struct_or_union IDENTIFIER
-- On SIGNED reduce production struct_or_union_specifier -> struct_or_union IDENTIFIER
-- On SHORT reduce production struct_or_union_specifier -> struct_or_union IDENTIFIER
-- On SEMICOLON reduce production struct_or_union_specifier -> struct_or_union IDENTIFIER
-- On RPAREN reduce production struct_or_union_specifier -> struct_or_union IDENTIFIER
-- On REGISTER reduce production struct_or_union_specifier -> struct_or_union IDENTIFIER
-- On LPAREN reduce production struct_or_union_specifier -> struct_or_union IDENTIFIER
-- On LONG reduce production struct_or_union_specifier -> struct_or_union IDENTIFIER
-- On LBRACK reduce production struct_or_union_specifier -> struct_or_union IDENTIFIER
-- On INT reduce production struct_or_union_specifier -> struct_or_union IDENTIFIER
-- On IDENTIFIER reduce production struct_or_union_specifier -> struct_or_union IDENTIFIER
-- On FLOAT reduce production struct_or_union_specifier -> struct_or_union IDENTIFIER
-- On EXTERN reduce production struct_or_union_specifier -> struct_or_union IDENTIFIER
-- On ENUM reduce production struct_or_union_specifier -> struct_or_union IDENTIFIER
-- On DOUBLE reduce production struct_or_union_specifier -> struct_or_union IDENTIFIER
-- On CONST reduce production struct_or_union_specifier -> struct_or_union IDENTIFIER
-- On COMMA reduce production struct_or_union_specifier -> struct_or_union IDENTIFIER
-- On COLON reduce production struct_or_union_specifier -> struct_or_union IDENTIFIER
-- On CHAR reduce production struct_or_union_specifier -> struct_or_union IDENTIFIER
-- On AUTO reduce production struct_or_union_specifier -> struct_or_union IDENTIFIER

State 173:
struct_or_union_specifier -> struct_or_union IDENTIFIER LBRACE . struct_declaration_list RBRACE [ VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN REGISTER LPAREN LONG LBRACK INT IDENTIFIER FLOAT EXTERN ENUM DOUBLE CONST COMMA COLON CHAR AUTO ]
-- On VOLATILE shift to state 1
-- On VOID shift to state 2
-- On UNSIGNED shift to state 3
-- On UNION shift to state 4
-- On TYPE_NAME shift to state 5
-- On STRUCT shift to state 7
-- On SIGNED shift to state 16
-- On SHORT shift to state 17
-- On LONG shift to state 25
-- On INT shift to state 26
-- On FLOAT shift to state 28
-- On ENUM shift to state 30
-- On DOUBLE shift to state 143
-- On CONST shift to state 10
-- On CHAR shift to state 144
-- On type_specifier shift to state 145
-- On type_qualifier shift to state 146
-- On struct_or_union_specifier shift to state 147
-- On struct_or_union shift to state 148
-- On struct_declaration_list shift to state 174
-- On struct_declaration shift to state 171
-- On specifier_qualifier_list shift to state 153
-- On enum_specifier shift to state 170

State 174:
struct_declaration_list -> struct_declaration_list . struct_declaration [ VOLATILE VOID UNSIGNED UNION TYPE_NAME STRUCT SIGNED SHORT RBRACE LONG INT FLOAT ENUM DOUBLE CONST CHAR ]
struct_or_union_specifier -> struct_or_union IDENTIFIER LBRACE struct_declaration_list . RBRACE [ VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN REGISTER LPAREN LONG LBRACK INT IDENTIFIER FLOAT EXTERN ENUM DOUBLE CONST COMMA COLON CHAR AUTO ]
-- On VOLATILE shift to state 1
-- On VOID shift to state 2
-- On UNSIGNED shift to state 3
-- On UNION shift to state 4
-- On TYPE_NAME shift to state 5
-- On STRUCT shift to state 7
-- On SIGNED shift to state 16
-- On SHORT shift to state 17
-- On RBRACE shift to state 175
-- On LONG shift to state 25
-- On INT shift to state 26
-- On FLOAT shift to state 28
-- On ENUM shift to state 30
-- On DOUBLE shift to state 143
-- On CONST shift to state 10
-- On CHAR shift to state 144
-- On type_specifier shift to state 145
-- On type_qualifier shift to state 146
-- On struct_or_union_specifier shift to state 147
-- On struct_or_union shift to state 148
-- On struct_declaration shift to state 152
-- On specifier_qualifier_list shift to state 153
-- On enum_specifier shift to state 170

State 175:
struct_or_union_specifier -> struct_or_union IDENTIFIER LBRACE struct_declaration_list RBRACE . [ VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN REGISTER LPAREN LONG LBRACK INT IDENTIFIER FLOAT EXTERN ENUM DOUBLE CONST COMMA COLON CHAR AUTO ]
-- On VOLATILE reduce production struct_or_union_specifier -> struct_or_union IDENTIFIER LBRACE struct_declaration_list RBRACE
-- On VOID reduce production struct_or_union_specifier -> struct_or_union IDENTIFIER LBRACE struct_declaration_list RBRACE
-- On UNSIGNED reduce production struct_or_union_specifier -> struct_or_union IDENTIFIER LBRACE struct_declaration_list RBRACE
-- On UNION reduce production struct_or_union_specifier -> struct_or_union IDENTIFIER LBRACE struct_declaration_list RBRACE
-- On TYPE_NAME reduce production struct_or_union_specifier -> struct_or_union IDENTIFIER LBRACE struct_declaration_list RBRACE
-- On TYPEDEF reduce production struct_or_union_specifier -> struct_or_union IDENTIFIER LBRACE struct_declaration_list RBRACE
-- On STRUCT reduce production struct_or_union_specifier -> struct_or_union IDENTIFIER LBRACE struct_declaration_list RBRACE
-- On STATIC reduce production struct_or_union_specifier -> struct_or_union IDENTIFIER LBRACE struct_declaration_list RBRACE
-- On STAR reduce production struct_or_union_specifier -> struct_or_union IDENTIFIER LBRACE struct_declaration_list RBRACE
-- On SIGNED reduce production struct_or_union_specifier -> struct_or_union IDENTIFIER LBRACE struct_declaration_list RBRACE
-- On SHORT reduce production struct_or_union_specifier -> struct_or_union IDENTIFIER LBRACE struct_declaration_list RBRACE
-- On SEMICOLON reduce production struct_or_union_specifier -> struct_or_union IDENTIFIER LBRACE struct_declaration_list RBRACE
-- On RPAREN reduce production struct_or_union_specifier -> struct_or_union IDENTIFIER LBRACE struct_declaration_list RBRACE
-- On REGISTER reduce production struct_or_union_specifier -> struct_or_union IDENTIFIER LBRACE struct_declaration_list RBRACE
-- On LPAREN reduce production struct_or_union_specifier -> struct_or_union IDENTIFIER LBRACE struct_declaration_list RBRACE
-- On LONG reduce production struct_or_union_specifier -> struct_or_union IDENTIFIER LBRACE struct_declaration_list RBRACE
-- On LBRACK reduce production struct_or_union_specifier -> struct_or_union IDENTIFIER LBRACE struct_declaration_list RBRACE
-- On INT reduce production struct_or_union_specifier -> struct_or_union IDENTIFIER LBRACE struct_declaration_list RBRACE
-- On IDENTIFIER reduce production struct_or_union_specifier -> struct_or_union IDENTIFIER LBRACE struct_declaration_list RBRACE
-- On FLOAT reduce production struct_or_union_specifier -> struct_or_union IDENTIFIER LBRACE struct_declaration_list RBRACE
-- On EXTERN reduce production struct_or_union_specifier -> struct_or_union IDENTIFIER LBRACE struct_declaration_list RBRACE
-- On ENUM reduce production struct_or_union_specifier -> struct_or_union IDENTIFIER LBRACE struct_declaration_list RBRACE
-- On DOUBLE reduce production struct_or_union_specifier -> struct_or_union IDENTIFIER LBRACE struct_declaration_list RBRACE
-- On CONST reduce production struct_or_union_specifier -> struct_or_union IDENTIFIER LBRACE struct_declaration_list RBRACE
-- On COMMA reduce production struct_or_union_specifier -> struct_or_union IDENTIFIER LBRACE struct_declaration_list RBRACE
-- On COLON reduce production struct_or_union_specifier -> struct_or_union IDENTIFIER LBRACE struct_declaration_list RBRACE
-- On CHAR reduce production struct_or_union_specifier -> struct_or_union IDENTIFIER LBRACE struct_declaration_list RBRACE
-- On AUTO reduce production struct_or_union_specifier -> struct_or_union IDENTIFIER LBRACE struct_declaration_list RBRACE

State 176:
specifier_qualifier_list -> type_qualifier specifier_qualifier_list . [ STAR RPAREN LPAREN LBRACK IDENTIFIER COLON ]
-- On STAR reduce production specifier_qualifier_list -> type_qualifier specifier_qualifier_list
-- On RPAREN reduce production specifier_qualifier_list -> type_qualifier specifier_qualifier_list
-- On LPAREN reduce production specifier_qualifier_list -> type_qualifier specifier_qualifier_list
-- On LBRACK reduce production specifier_qualifier_list -> type_qualifier specifier_qualifier_list
-- On IDENTIFIER reduce production specifier_qualifier_list -> type_qualifier specifier_qualifier_list
-- On COLON reduce production specifier_qualifier_list -> type_qualifier specifier_qualifier_list

State 177:
specifier_qualifier_list -> type_specifier specifier_qualifier_list . [ STAR RPAREN LPAREN LBRACK IDENTIFIER COLON ]
-- On STAR reduce production specifier_qualifier_list -> type_specifier specifier_qualifier_list
-- On RPAREN reduce production specifier_qualifier_list -> type_specifier specifier_qualifier_list
-- On LPAREN reduce production specifier_qualifier_list -> type_specifier specifier_qualifier_list
-- On LBRACK reduce production specifier_qualifier_list -> type_specifier specifier_qualifier_list
-- On IDENTIFIER reduce production specifier_qualifier_list -> type_specifier specifier_qualifier_list
-- On COLON reduce production specifier_qualifier_list -> type_specifier specifier_qualifier_list

State 178:
cast_expression -> LPAREN type_name . RPAREN cast_expression [ XOR_ASSIGN SUB_ASSIGN STAR SLASH SEMICOLON RPAREN RIGHT_OP RIGHT_ASSIGN RBRACK RBRACE QUESTION PLUS PERCENT OR_OP OR_ASSIGN NE_OP MUL_ASSIGN MOD_ASSIGN MINUS LT LE_OP LEFT_OP LEFT_ASSIGN HAT GT GE_OP EQ_OP EQUAL DIV_ASSIGN COMMA COLON BAR AND_OP AND_ASSIGN AMPERSAND ADD_ASSIGN ]
-- On RPAREN shift to state 179

State 179:
cast_expression -> LPAREN type_name RPAREN . cast_expression [ XOR_ASSIGN SUB_ASSIGN STAR SLASH SEMICOLON RPAREN RIGHT_OP RIGHT_ASSIGN RBRACK RBRACE QUESTION PLUS PERCENT OR_OP OR_ASSIGN NE_OP MUL_ASSIGN MOD_ASSIGN MINUS LT LE_OP LEFT_OP LEFT_ASSIGN HAT GT GE_OP EQ_OP EQUAL DIV_ASSIGN COMMA COLON BAR AND_OP AND_ASSIGN AMPERSAND ADD_ASSIGN ]
-- On TILDE shift to state 34
-- On STRING_LITERAL shift to state 35
-- On STAR shift to state 36
-- On SIZEOF shift to state 37
-- On PLUS shift to state 38
-- On MINUS shift to state 39
-- On LPAREN shift to state 41
-- On INC_OP shift to state 42
-- On IDENTIFIER shift to state 44
-- On DEC_OP shift to state 45
-- On CONSTANT shift to state 46
-- On BANG shift to state 47
-- On AMPERSAND shift to state 48
-- On unary_operator shift to state 49
-- On unary_expression shift to state 50
-- On primary_expression shift to state 51
-- On postfix_expression shift to state 52
-- On cast_expression shift to state 180

State 180:
cast_expression -> LPAREN type_name RPAREN cast_expression . [ XOR_ASSIGN SUB_ASSIGN STAR SLASH SEMICOLON RPAREN RIGHT_OP RIGHT_ASSIGN RBRACK RBRACE QUESTION PLUS PERCENT OR_OP OR_ASSIGN NE_OP MUL_ASSIGN MOD_ASSIGN MINUS LT LE_OP LEFT_OP LEFT_ASSIGN HAT GT GE_OP EQ_OP EQUAL DIV_ASSIGN COMMA COLON BAR AND_OP AND_ASSIGN AMPERSAND ADD_ASSIGN ]
-- On XOR_ASSIGN reduce production cast_expression -> LPAREN type_name RPAREN cast_expression
-- On SUB_ASSIGN reduce production cast_expression -> LPAREN type_name RPAREN cast_expression
-- On STAR reduce production cast_expression -> LPAREN type_name RPAREN cast_expression
-- On SLASH reduce production cast_expression -> LPAREN type_name RPAREN cast_expression
-- On SEMICOLON reduce production cast_expression -> LPAREN type_name RPAREN cast_expression
-- On RPAREN reduce production cast_expression -> LPAREN type_name RPAREN cast_expression
-- On RIGHT_OP reduce production cast_expression -> LPAREN type_name RPAREN cast_expression
-- On RIGHT_ASSIGN reduce production cast_expression -> LPAREN type_name RPAREN cast_expression
-- On RBRACK reduce production cast_expression -> LPAREN type_name RPAREN cast_expression
-- On RBRACE reduce production cast_expression -> LPAREN type_name RPAREN cast_expression
-- On QUESTION reduce production cast_expression -> LPAREN type_name RPAREN cast_expression
-- On PLUS reduce production cast_expression -> LPAREN type_name RPAREN cast_expression
-- On PERCENT reduce production cast_expression -> LPAREN type_name RPAREN cast_expression
-- On OR_OP reduce production cast_expression -> LPAREN type_name RPAREN cast_expression
-- On OR_ASSIGN reduce production cast_expression -> LPAREN type_name RPAREN cast_expression
-- On NE_OP reduce production cast_expression -> LPAREN type_name RPAREN cast_expression
-- On MUL_ASSIGN reduce production cast_expression -> LPAREN type_name RPAREN cast_expression
-- On MOD_ASSIGN reduce production cast_expression -> LPAREN type_name RPAREN cast_expression
-- On MINUS reduce production cast_expression -> LPAREN type_name RPAREN cast_expression
-- On LT reduce production cast_expression -> LPAREN type_name RPAREN cast_expression
-- On LE_OP reduce production cast_expression -> LPAREN type_name RPAREN cast_expression
-- On LEFT_OP reduce production cast_expression -> LPAREN type_name RPAREN cast_expression
-- On LEFT_ASSIGN reduce production cast_expression -> LPAREN type_name RPAREN cast_expression
-- On HAT reduce production cast_expression -> LPAREN type_name RPAREN cast_expression
-- On GT reduce production cast_expression -> LPAREN type_name RPAREN cast_expression
-- On GE_OP reduce production cast_expression -> LPAREN type_name RPAREN cast_expression
-- On EQ_OP reduce production cast_expression -> LPAREN type_name RPAREN cast_expression
-- On EQUAL reduce production cast_expression -> LPAREN type_name RPAREN cast_expression
-- On DIV_ASSIGN reduce production cast_expression -> LPAREN type_name RPAREN cast_expression
-- On COMMA reduce production cast_expression -> LPAREN type_name RPAREN cast_expression
-- On COLON reduce production cast_expression -> LPAREN type_name RPAREN cast_expression
-- On BAR reduce production cast_expression -> LPAREN type_name RPAREN cast_expression
-- On AND_OP reduce production cast_expression -> LPAREN type_name RPAREN cast_expression
-- On AND_ASSIGN reduce production cast_expression -> LPAREN type_name RPAREN cast_expression
-- On AMPERSAND reduce production cast_expression -> LPAREN type_name RPAREN cast_expression
-- On ADD_ASSIGN reduce production cast_expression -> LPAREN type_name RPAREN cast_expression

State 181:
type_name -> specifier_qualifier_list . [ RPAREN ]
type_name -> specifier_qualifier_list . abstract_declarator [ RPAREN ]
-- On STAR shift to state 9
-- On LPAREN shift to state 182
-- On LBRACK shift to state 184
-- On pointer shift to state 195
-- On direct_abstract_declarator shift to state 211
-- On abstract_declarator shift to state 222
-- On RPAREN reduce production type_name -> specifier_qualifier_list

State 182:
direct_abstract_declarator -> LPAREN . abstract_declarator RPAREN [ RPAREN LPAREN LBRACK ]
direct_abstract_declarator -> LPAREN . RPAREN [ RPAREN LPAREN LBRACK ]
direct_abstract_declarator -> LPAREN . parameter_type_list RPAREN [ RPAREN LPAREN LBRACK ]
-- On VOLATILE shift to state 1
-- On VOID shift to state 2
-- On UNSIGNED shift to state 3
-- On UNION shift to state 4
-- On TYPE_NAME shift to state 5
-- On TYPEDEF shift to state 6
-- On STRUCT shift to state 7
-- On STATIC shift to state 8
-- On STAR shift to state 9
-- On SIGNED shift to state 16
-- On SHORT shift to state 17
-- On RPAREN shift to state 183
-- On REGISTER shift to state 18
-- On LPAREN shift to state 182
-- On LONG shift to state 25
-- On LBRACK shift to state 184
-- On INT shift to state 26
-- On FLOAT shift to state 28
-- On EXTERN shift to state 29
-- On ENUM shift to state 30
-- On DOUBLE shift to state 143
-- On CONST shift to state 10
-- On CHAR shift to state 144
-- On AUTO shift to state 188
-- On type_specifier shift to state 189
-- On type_qualifier shift to state 190
-- On struct_or_union_specifier shift to state 147
-- On struct_or_union shift to state 148
-- On storage_class_specifier shift to state 191
-- On pointer shift to state 195
-- On parameter_type_list shift to state 208
-- On parameter_list shift to state 201
-- On parameter_declaration shift to state 210
-- On enum_specifier shift to state 170
-- On direct_abstract_declarator shift to state 211
-- On declaration_specifiers shift to state 205
-- On abstract_declarator shift to state 218

State 183:
direct_abstract_declarator -> LPAREN RPAREN . [ RPAREN LPAREN LBRACK COMMA ]
-- On RPAREN reduce production direct_abstract_declarator -> LPAREN RPAREN
-- On LPAREN reduce production direct_abstract_declarator -> LPAREN RPAREN
-- On LBRACK reduce production direct_abstract_declarator -> LPAREN RPAREN
-- On COMMA reduce production direct_abstract_declarator -> LPAREN RPAREN

State 184:
direct_abstract_declarator -> LBRACK . RBRACK [ RPAREN LPAREN LBRACK COMMA ]
direct_abstract_declarator -> LBRACK . constant_expression RBRACK [ RPAREN LPAREN LBRACK COMMA ]
-- On TILDE shift to state 34
-- On STRING_LITERAL shift to state 35
-- On STAR shift to state 36
-- On SIZEOF shift to state 37
-- On RBRACK shift to state 185
-- On PLUS shift to state 38
-- On MINUS shift to state 39
-- On LPAREN shift to state 41
-- On INC_OP shift to state 42
-- On IDENTIFIER shift to state 44
-- On DEC_OP shift to state 45
-- On CONSTANT shift to state 46
-- On BANG shift to state 47
-- On AMPERSAND shift to state 48
-- On unary_operator shift to state 49
-- On unary_expression shift to state 50
-- On shift_expression shift to state 70
-- On relational_expression shift to state 87
-- On primary_expression shift to state 51
-- On postfix_expression shift to state 52
-- On multiplicative_expression shift to state 72
-- On logical_or_expression shift to state 97
-- On logical_and_expression shift to state 99
-- On inclusive_or_expression shift to state 115
-- On exclusive_or_expression shift to state 114
-- On equality_expression shift to state 105
-- On constant_expression shift to state 186
-- On conditional_expression shift to state 156
-- On cast_expression shift to state 79
-- On and_expression shift to state 113
-- On additive_expression shift to state 90

State 185:
direct_abstract_declarator -> LBRACK RBRACK . [ RPAREN LPAREN LBRACK COMMA ]
-- On RPAREN reduce production direct_abstract_declarator -> LBRACK RBRACK
-- On LPAREN reduce production direct_abstract_declarator -> LBRACK RBRACK
-- On LBRACK reduce production direct_abstract_declarator -> LBRACK RBRACK
-- On COMMA reduce production direct_abstract_declarator -> LBRACK RBRACK

State 186:
direct_abstract_declarator -> LBRACK constant_expression . RBRACK [ RPAREN LPAREN LBRACK COMMA ]
-- On RBRACK shift to state 187

State 187:
direct_abstract_declarator -> LBRACK constant_expression RBRACK . [ RPAREN LPAREN LBRACK COMMA ]
-- On RPAREN reduce production direct_abstract_declarator -> LBRACK constant_expression RBRACK
-- On LPAREN reduce production direct_abstract_declarator -> LBRACK constant_expression RBRACK
-- On LBRACK reduce production direct_abstract_declarator -> LBRACK constant_expression RBRACK
-- On COMMA reduce production direct_abstract_declarator -> LBRACK constant_expression RBRACK

State 188:
storage_class_specifier -> AUTO . [ VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN REGISTER LPAREN LONG LBRACK INT IDENTIFIER FLOAT EXTERN ENUM DOUBLE CONST COMMA CHAR AUTO ]
-- On VOLATILE reduce production storage_class_specifier -> AUTO
-- On VOID reduce production storage_class_specifier -> AUTO
-- On UNSIGNED reduce production storage_class_specifier -> AUTO
-- On UNION reduce production storage_class_specifier -> AUTO
-- On TYPE_NAME reduce production storage_class_specifier -> AUTO
-- On TYPEDEF reduce production storage_class_specifier -> AUTO
-- On STRUCT reduce production storage_class_specifier -> AUTO
-- On STATIC reduce production storage_class_specifier -> AUTO
-- On STAR reduce production storage_class_specifier -> AUTO
-- On SIGNED reduce production storage_class_specifier -> AUTO
-- On SHORT reduce production storage_class_specifier -> AUTO
-- On SEMICOLON reduce production storage_class_specifier -> AUTO
-- On RPAREN reduce production storage_class_specifier -> AUTO
-- On REGISTER reduce production storage_class_specifier -> AUTO
-- On LPAREN reduce production storage_class_specifier -> AUTO
-- On LONG reduce production storage_class_specifier -> AUTO
-- On LBRACK reduce production storage_class_specifier -> AUTO
-- On INT reduce production storage_class_specifier -> AUTO
-- On IDENTIFIER reduce production storage_class_specifier -> AUTO
-- On FLOAT reduce production storage_class_specifier -> AUTO
-- On EXTERN reduce production storage_class_specifier -> AUTO
-- On ENUM reduce production storage_class_specifier -> AUTO
-- On DOUBLE reduce production storage_class_specifier -> AUTO
-- On CONST reduce production storage_class_specifier -> AUTO
-- On COMMA reduce production storage_class_specifier -> AUTO
-- On CHAR reduce production storage_class_specifier -> AUTO
-- On AUTO reduce production storage_class_specifier -> AUTO

State 189:
declaration_specifiers -> type_specifier . [ STAR SEMICOLON RPAREN LPAREN LBRACK IDENTIFIER COMMA ]
declaration_specifiers -> type_specifier . declaration_specifiers [ STAR SEMICOLON RPAREN LPAREN LBRACK IDENTIFIER COMMA ]
-- On VOLATILE shift to state 1
-- On VOID shift to state 2
-- On UNSIGNED shift to state 3
-- On UNION shift to state 4
-- On TYPE_NAME shift to state 5
-- On TYPEDEF shift to state 6
-- On STRUCT shift to state 7
-- On STATIC shift to state 8
-- On SIGNED shift to state 16
-- On SHORT shift to state 17
-- On REGISTER shift to state 18
-- On LONG shift to state 25
-- On INT shift to state 26
-- On FLOAT shift to state 28
-- On EXTERN shift to state 29
-- On ENUM shift to state 30
-- On DOUBLE shift to state 143
-- On CONST shift to state 10
-- On CHAR shift to state 144
-- On AUTO shift to state 188
-- On type_specifier shift to state 189
-- On type_qualifier shift to state 190
-- On struct_or_union_specifier shift to state 147
-- On struct_or_union shift to state 148
-- On storage_class_specifier shift to state 191
-- On enum_specifier shift to state 170
-- On declaration_specifiers shift to state 194
-- On STAR reduce production declaration_specifiers -> type_specifier
-- On SEMICOLON reduce production declaration_specifiers -> type_specifier
-- On RPAREN reduce production declaration_specifiers -> type_specifier
-- On LPAREN reduce production declaration_specifiers -> type_specifier
-- On LBRACK reduce production declaration_specifiers -> type_specifier
-- On IDENTIFIER reduce production declaration_specifiers -> type_specifier
-- On COMMA reduce production declaration_specifiers -> type_specifier

State 190:
declaration_specifiers -> type_qualifier . [ STAR SEMICOLON RPAREN LPAREN LBRACK IDENTIFIER COMMA ]
declaration_specifiers -> type_qualifier . declaration_specifiers [ STAR SEMICOLON RPAREN LPAREN LBRACK IDENTIFIER COMMA ]
-- On VOLATILE shift to state 1
-- On VOID shift to state 2
-- On UNSIGNED shift to state 3
-- On UNION shift to state 4
-- On TYPE_NAME shift to state 5
-- On TYPEDEF shift to state 6
-- On STRUCT shift to state 7
-- On STATIC shift to state 8
-- On SIGNED shift to state 16
-- On SHORT shift to state 17
-- On REGISTER shift to state 18
-- On LONG shift to state 25
-- On INT shift to state 26
-- On FLOAT shift to state 28
-- On EXTERN shift to state 29
-- On ENUM shift to state 30
-- On DOUBLE shift to state 143
-- On CONST shift to state 10
-- On CHAR shift to state 144
-- On AUTO shift to state 188
-- On type_specifier shift to state 189
-- On type_qualifier shift to state 190
-- On struct_or_union_specifier shift to state 147
-- On struct_or_union shift to state 148
-- On storage_class_specifier shift to state 191
-- On enum_specifier shift to state 170
-- On declaration_specifiers shift to state 193
-- On STAR reduce production declaration_specifiers -> type_qualifier
-- On SEMICOLON reduce production declaration_specifiers -> type_qualifier
-- On RPAREN reduce production declaration_specifiers -> type_qualifier
-- On LPAREN reduce production declaration_specifiers -> type_qualifier
-- On LBRACK reduce production declaration_specifiers -> type_qualifier
-- On IDENTIFIER reduce production declaration_specifiers -> type_qualifier
-- On COMMA reduce production declaration_specifiers -> type_qualifier

State 191:
declaration_specifiers -> storage_class_specifier . [ STAR SEMICOLON RPAREN LPAREN LBRACK IDENTIFIER COMMA ]
declaration_specifiers -> storage_class_specifier . declaration_specifiers [ STAR SEMICOLON RPAREN LPAREN LBRACK IDENTIFIER COMMA ]
-- On VOLATILE shift to state 1
-- On VOID shift to state 2
-- On UNSIGNED shift to state 3
-- On UNION shift to state 4
-- On TYPE_NAME shift to state 5
-- On TYPEDEF shift to state 6
-- On STRUCT shift to state 7
-- On STATIC shift to state 8
-- On SIGNED shift to state 16
-- On SHORT shift to state 17
-- On REGISTER shift to state 18
-- On LONG shift to state 25
-- On INT shift to state 26
-- On FLOAT shift to state 28
-- On EXTERN shift to state 29
-- On ENUM shift to state 30
-- On DOUBLE shift to state 143
-- On CONST shift to state 10
-- On CHAR shift to state 144
-- On AUTO shift to state 188
-- On type_specifier shift to state 189
-- On type_qualifier shift to state 190
-- On struct_or_union_specifier shift to state 147
-- On struct_or_union shift to state 148
-- On storage_class_specifier shift to state 191
-- On enum_specifier shift to state 170
-- On declaration_specifiers shift to state 192
-- On STAR reduce production declaration_specifiers -> storage_class_specifier
-- On SEMICOLON reduce production declaration_specifiers -> storage_class_specifier
-- On RPAREN reduce production declaration_specifiers -> storage_class_specifier
-- On LPAREN reduce production declaration_specifiers -> storage_class_specifier
-- On LBRACK reduce production declaration_specifiers -> storage_class_specifier
-- On IDENTIFIER reduce production declaration_specifiers -> storage_class_specifier
-- On COMMA reduce production declaration_specifiers -> storage_class_specifier

State 192:
declaration_specifiers -> storage_class_specifier declaration_specifiers . [ STAR SEMICOLON RPAREN LPAREN LBRACK IDENTIFIER COMMA ]
-- On STAR reduce production declaration_specifiers -> storage_class_specifier declaration_specifiers
-- On SEMICOLON reduce production declaration_specifiers -> storage_class_specifier declaration_specifiers
-- On RPAREN reduce production declaration_specifiers -> storage_class_specifier declaration_specifiers
-- On LPAREN reduce production declaration_specifiers -> storage_class_specifier declaration_specifiers
-- On LBRACK reduce production declaration_specifiers -> storage_class_specifier declaration_specifiers
-- On IDENTIFIER reduce production declaration_specifiers -> storage_class_specifier declaration_specifiers
-- On COMMA reduce production declaration_specifiers -> storage_class_specifier declaration_specifiers

State 193:
declaration_specifiers -> type_qualifier declaration_specifiers . [ STAR SEMICOLON RPAREN LPAREN LBRACK IDENTIFIER COMMA ]
-- On STAR reduce production declaration_specifiers -> type_qualifier declaration_specifiers
-- On SEMICOLON reduce production declaration_specifiers -> type_qualifier declaration_specifiers
-- On RPAREN reduce production declaration_specifiers -> type_qualifier declaration_specifiers
-- On LPAREN reduce production declaration_specifiers -> type_qualifier declaration_specifiers
-- On LBRACK reduce production declaration_specifiers -> type_qualifier declaration_specifiers
-- On IDENTIFIER reduce production declaration_specifiers -> type_qualifier declaration_specifiers
-- On COMMA reduce production declaration_specifiers -> type_qualifier declaration_specifiers

State 194:
declaration_specifiers -> type_specifier declaration_specifiers . [ STAR SEMICOLON RPAREN LPAREN LBRACK IDENTIFIER COMMA ]
-- On STAR reduce production declaration_specifiers -> type_specifier declaration_specifiers
-- On SEMICOLON reduce production declaration_specifiers -> type_specifier declaration_specifiers
-- On RPAREN reduce production declaration_specifiers -> type_specifier declaration_specifiers
-- On LPAREN reduce production declaration_specifiers -> type_specifier declaration_specifiers
-- On LBRACK reduce production declaration_specifiers -> type_specifier declaration_specifiers
-- On IDENTIFIER reduce production declaration_specifiers -> type_specifier declaration_specifiers
-- On COMMA reduce production declaration_specifiers -> type_specifier declaration_specifiers

State 195:
abstract_declarator -> pointer . [ RPAREN ]
abstract_declarator -> pointer . direct_abstract_declarator [ RPAREN ]
-- On LPAREN shift to state 182
-- On LBRACK shift to state 184
-- On direct_abstract_declarator shift to state 196
-- On RPAREN reduce production abstract_declarator -> pointer

State 196:
abstract_declarator -> pointer direct_abstract_declarator . [ RPAREN COMMA ]
direct_abstract_declarator -> direct_abstract_declarator . LBRACK RBRACK [ RPAREN LPAREN LBRACK COMMA ]
direct_abstract_declarator -> direct_abstract_declarator . LBRACK constant_expression RBRACK [ RPAREN LPAREN LBRACK COMMA ]
direct_abstract_declarator -> direct_abstract_declarator . LPAREN RPAREN [ RPAREN LPAREN LBRACK COMMA ]
direct_abstract_declarator -> direct_abstract_declarator . LPAREN parameter_type_list RPAREN [ RPAREN LPAREN LBRACK COMMA ]
-- On LPAREN shift to state 197
-- On LBRACK shift to state 212
-- On RPAREN reduce production abstract_declarator -> pointer direct_abstract_declarator
-- On COMMA reduce production abstract_declarator -> pointer direct_abstract_declarator

State 197:
direct_abstract_declarator -> direct_abstract_declarator LPAREN . RPAREN [ RPAREN LPAREN LBRACK COMMA ]
direct_abstract_declarator -> direct_abstract_declarator LPAREN . parameter_type_list RPAREN [ RPAREN LPAREN LBRACK COMMA ]
-- On VOLATILE shift to state 1
-- On VOID shift to state 2
-- On UNSIGNED shift to state 3
-- On UNION shift to state 4
-- On TYPE_NAME shift to state 5
-- On TYPEDEF shift to state 6
-- On STRUCT shift to state 7
-- On STATIC shift to state 8
-- On SIGNED shift to state 16
-- On SHORT shift to state 17
-- On RPAREN shift to state 198
-- On REGISTER shift to state 18
-- On LONG shift to state 25
-- On INT shift to state 26
-- On FLOAT shift to state 28
-- On EXTERN shift to state 29
-- On ENUM shift to state 30
-- On DOUBLE shift to state 143
-- On CONST shift to state 10
-- On CHAR shift to state 144
-- On AUTO shift to state 188
-- On type_specifier shift to state 189
-- On type_qualifier shift to state 190
-- On struct_or_union_specifier shift to state 147
-- On struct_or_union shift to state 148
-- On storage_class_specifier shift to state 191
-- On parameter_type_list shift to state 199
-- On parameter_list shift to state 201
-- On parameter_declaration shift to state 210
-- On enum_specifier shift to state 170
-- On declaration_specifiers shift to state 205

State 198:
direct_abstract_declarator -> direct_abstract_declarator LPAREN RPAREN . [ RPAREN LPAREN LBRACK COMMA ]
-- On RPAREN reduce production direct_abstract_declarator -> direct_abstract_declarator LPAREN RPAREN
-- On LPAREN reduce production direct_abstract_declarator -> direct_abstract_declarator LPAREN RPAREN
-- On LBRACK reduce production direct_abstract_declarator -> direct_abstract_declarator LPAREN RPAREN
-- On COMMA reduce production direct_abstract_declarator -> direct_abstract_declarator LPAREN RPAREN

State 199:
direct_abstract_declarator -> direct_abstract_declarator LPAREN parameter_type_list . RPAREN [ RPAREN LPAREN LBRACK COMMA ]
-- On RPAREN shift to state 200

State 200:
direct_abstract_declarator -> direct_abstract_declarator LPAREN parameter_type_list RPAREN . [ RPAREN LPAREN LBRACK COMMA ]
-- On RPAREN reduce production direct_abstract_declarator -> direct_abstract_declarator LPAREN parameter_type_list RPAREN
-- On LPAREN reduce production direct_abstract_declarator -> direct_abstract_declarator LPAREN parameter_type_list RPAREN
-- On LBRACK reduce production direct_abstract_declarator -> direct_abstract_declarator LPAREN parameter_type_list RPAREN
-- On COMMA reduce production direct_abstract_declarator -> direct_abstract_declarator LPAREN parameter_type_list RPAREN

State 201:
parameter_list -> parameter_list . COMMA parameter_declaration [ RPAREN COMMA ]
parameter_type_list -> parameter_list . [ RPAREN ]
parameter_type_list -> parameter_list . COMMA ELLIPSIS [ RPAREN ]
-- On COMMA shift to state 202
-- On RPAREN reduce production parameter_type_list -> parameter_list

State 202:
parameter_list -> parameter_list COMMA . parameter_declaration [ RPAREN COMMA ]
parameter_type_list -> parameter_list COMMA . ELLIPSIS [ RPAREN ]
-- On VOLATILE shift to state 1
-- On VOID shift to state 2
-- On UNSIGNED shift to state 3
-- On UNION shift to state 4
-- On TYPE_NAME shift to state 5
-- On TYPEDEF shift to state 6
-- On STRUCT shift to state 7
-- On STATIC shift to state 8
-- On SIGNED shift to state 16
-- On SHORT shift to state 17
-- On REGISTER shift to state 18
-- On LONG shift to state 25
-- On INT shift to state 26
-- On FLOAT shift to state 28
-- On EXTERN shift to state 29
-- On ENUM shift to state 30
-- On ELLIPSIS shift to state 203
-- On DOUBLE shift to state 143
-- On CONST shift to state 10
-- On CHAR shift to state 144
-- On AUTO shift to state 188
-- On type_specifier shift to state 189
-- On type_qualifier shift to state 190
-- On struct_or_union_specifier shift to state 147
-- On struct_or_union shift to state 148
-- On storage_class_specifier shift to state 191
-- On parameter_declaration shift to state 204
-- On enum_specifier shift to state 170
-- On declaration_specifiers shift to state 205

State 203:
parameter_type_list -> parameter_list COMMA ELLIPSIS . [ RPAREN ]
-- On RPAREN reduce production parameter_type_list -> parameter_list COMMA ELLIPSIS

State 204:
parameter_list -> parameter_list COMMA parameter_declaration . [ RPAREN COMMA ]
-- On RPAREN reduce production parameter_list -> parameter_list COMMA parameter_declaration
-- On COMMA reduce production parameter_list -> parameter_list COMMA parameter_declaration

State 205:
parameter_declaration -> declaration_specifiers . declarator [ RPAREN COMMA ]
parameter_declaration -> declaration_specifiers . abstract_declarator [ RPAREN COMMA ]
parameter_declaration -> declaration_specifiers . [ RPAREN COMMA ]
-- On STAR shift to state 9
-- On LPAREN shift to state 206
-- On LBRACK shift to state 184
-- On IDENTIFIER shift to state 20
-- On pointer shift to state 207
-- On direct_declarator shift to state 161
-- On direct_abstract_declarator shift to state 211
-- On declarator shift to state 220
-- On abstract_declarator shift to state 221
-- On RPAREN reduce production parameter_declaration -> declaration_specifiers
-- On COMMA reduce production parameter_declaration -> declaration_specifiers

State 206:
direct_abstract_declarator -> LPAREN . abstract_declarator RPAREN [ RPAREN LPAREN LBRACK COMMA ]
direct_abstract_declarator -> LPAREN . RPAREN [ RPAREN LPAREN LBRACK COMMA ]
direct_abstract_declarator -> LPAREN . parameter_type_list RPAREN [ RPAREN LPAREN LBRACK COMMA ]
direct_declarator -> LPAREN . declarator RPAREN [ RPAREN LPAREN LBRACK COMMA ]
-- On VOLATILE shift to state 1
-- On VOID shift to state 2
-- On UNSIGNED shift to state 3
-- On UNION shift to state 4
-- On TYPE_NAME shift to state 5
-- On TYPEDEF shift to state 6
-- On STRUCT shift to state 7
-- On STATIC shift to state 8
-- On STAR shift to state 9
-- On SIGNED shift to state 16
-- On SHORT shift to state 17
-- On RPAREN shift to state 183
-- On REGISTER shift to state 18
-- On LPAREN shift to state 206
-- On LONG shift to state 25
-- On LBRACK shift to state 184
-- On INT shift to state 26
-- On IDENTIFIER shift to state 20
-- On FLOAT shift to state 28
-- On EXTERN shift to state 29
-- On ENUM shift to state 30
-- On DOUBLE shift to state 143
-- On CONST shift to state 10
-- On CHAR shift to state 144
-- On AUTO shift to state 188
-- On type_specifier shift to state 189
-- On type_qualifier shift to state 190
-- On struct_or_union_specifier shift to state 147
-- On struct_or_union shift to state 148
-- On storage_class_specifier shift to state 191
-- On pointer shift to state 207
-- On parameter_type_list shift to state 208
-- On parameter_list shift to state 201
-- On parameter_declaration shift to state 210
-- On enum_specifier shift to state 170
-- On direct_declarator shift to state 161
-- On direct_abstract_declarator shift to state 211
-- On declarator shift to state 216
-- On declaration_specifiers shift to state 205
-- On abstract_declarator shift to state 218

State 207:
abstract_declarator -> pointer . [ RPAREN COMMA ]
abstract_declarator -> pointer . direct_abstract_declarator [ RPAREN COMMA ]
declarator -> pointer . direct_declarator [ RPAREN COMMA ]
-- On LPAREN shift to state 206
-- On LBRACK shift to state 184
-- On IDENTIFIER shift to state 20
-- On direct_declarator shift to state 22
-- On direct_abstract_declarator shift to state 196
-- On RPAREN reduce production abstract_declarator -> pointer
-- On COMMA reduce production abstract_declarator -> pointer

State 208:
direct_abstract_declarator -> LPAREN parameter_type_list . RPAREN [ RPAREN LPAREN LBRACK COMMA ]
-- On RPAREN shift to state 209

State 209:
direct_abstract_declarator -> LPAREN parameter_type_list RPAREN . [ RPAREN LPAREN LBRACK COMMA ]
-- On RPAREN reduce production direct_abstract_declarator -> LPAREN parameter_type_list RPAREN
-- On LPAREN reduce production direct_abstract_declarator -> LPAREN parameter_type_list RPAREN
-- On LBRACK reduce production direct_abstract_declarator -> LPAREN parameter_type_list RPAREN
-- On COMMA reduce production direct_abstract_declarator -> LPAREN parameter_type_list RPAREN

State 210:
parameter_list -> parameter_declaration . [ RPAREN COMMA ]
-- On RPAREN reduce production parameter_list -> parameter_declaration
-- On COMMA reduce production parameter_list -> parameter_declaration

State 211:
abstract_declarator -> direct_abstract_declarator . [ RPAREN COMMA ]
direct_abstract_declarator -> direct_abstract_declarator . LBRACK RBRACK [ RPAREN LPAREN LBRACK COMMA ]
direct_abstract_declarator -> direct_abstract_declarator . LBRACK constant_expression RBRACK [ RPAREN LPAREN LBRACK COMMA ]
direct_abstract_declarator -> direct_abstract_declarator . LPAREN RPAREN [ RPAREN LPAREN LBRACK COMMA ]
direct_abstract_declarator -> direct_abstract_declarator . LPAREN parameter_type_list RPAREN [ RPAREN LPAREN LBRACK COMMA ]
-- On LPAREN shift to state 197
-- On LBRACK shift to state 212
-- On RPAREN reduce production abstract_declarator -> direct_abstract_declarator
-- On COMMA reduce production abstract_declarator -> direct_abstract_declarator

State 212:
direct_abstract_declarator -> direct_abstract_declarator LBRACK . RBRACK [ RPAREN LPAREN LBRACK COMMA ]
direct_abstract_declarator -> direct_abstract_declarator LBRACK . constant_expression RBRACK [ RPAREN LPAREN LBRACK COMMA ]
-- On TILDE shift to state 34
-- On STRING_LITERAL shift to state 35
-- On STAR shift to state 36
-- On SIZEOF shift to state 37
-- On RBRACK shift to state 213
-- On PLUS shift to state 38
-- On MINUS shift to state 39
-- On LPAREN shift to state 41
-- On INC_OP shift to state 42
-- On IDENTIFIER shift to state 44
-- On DEC_OP shift to state 45
-- On CONSTANT shift to state 46
-- On BANG shift to state 47
-- On AMPERSAND shift to state 48
-- On unary_operator shift to state 49
-- On unary_expression shift to state 50
-- On shift_expression shift to state 70
-- On relational_expression shift to state 87
-- On primary_expression shift to state 51
-- On postfix_expression shift to state 52
-- On multiplicative_expression shift to state 72
-- On logical_or_expression shift to state 97
-- On logical_and_expression shift to state 99
-- On inclusive_or_expression shift to state 115
-- On exclusive_or_expression shift to state 114
-- On equality_expression shift to state 105
-- On constant_expression shift to state 214
-- On conditional_expression shift to state 156
-- On cast_expression shift to state 79
-- On and_expression shift to state 113
-- On additive_expression shift to state 90

State 213:
direct_abstract_declarator -> direct_abstract_declarator LBRACK RBRACK . [ RPAREN LPAREN LBRACK COMMA ]
-- On RPAREN reduce production direct_abstract_declarator -> direct_abstract_declarator LBRACK RBRACK
-- On LPAREN reduce production direct_abstract_declarator -> direct_abstract_declarator LBRACK RBRACK
-- On LBRACK reduce production direct_abstract_declarator -> direct_abstract_declarator LBRACK RBRACK
-- On COMMA reduce production direct_abstract_declarator -> direct_abstract_declarator LBRACK RBRACK

State 214:
direct_abstract_declarator -> direct_abstract_declarator LBRACK constant_expression . RBRACK [ RPAREN LPAREN LBRACK COMMA ]
-- On RBRACK shift to state 215

State 215:
direct_abstract_declarator -> direct_abstract_declarator LBRACK constant_expression RBRACK . [ RPAREN LPAREN LBRACK COMMA ]
-- On RPAREN reduce production direct_abstract_declarator -> direct_abstract_declarator LBRACK constant_expression RBRACK
-- On LPAREN reduce production direct_abstract_declarator -> direct_abstract_declarator LBRACK constant_expression RBRACK
-- On LBRACK reduce production direct_abstract_declarator -> direct_abstract_declarator LBRACK constant_expression RBRACK
-- On COMMA reduce production direct_abstract_declarator -> direct_abstract_declarator LBRACK constant_expression RBRACK

State 216:
direct_declarator -> LPAREN declarator . RPAREN [ VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF STRUCT STATIC SIGNED SHORT SEMICOLON RPAREN REGISTER LPAREN LONG LBRACK LBRACE INT FLOAT EXTERN EQUAL ENUM DOUBLE CONST COMMA COLON CHAR AUTO ]
-- On RPAREN shift to state 217

State 217:
direct_declarator -> LPAREN declarator RPAREN . [ VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF STRUCT STATIC SIGNED SHORT SEMICOLON RPAREN REGISTER LPAREN LONG LBRACK LBRACE INT FLOAT EXTERN EQUAL ENUM DOUBLE CONST COMMA COLON CHAR AUTO ]
-- On VOLATILE reduce production direct_declarator -> LPAREN declarator RPAREN
-- On VOID reduce production direct_declarator -> LPAREN declarator RPAREN
-- On UNSIGNED reduce production direct_declarator -> LPAREN declarator RPAREN
-- On UNION reduce production direct_declarator -> LPAREN declarator RPAREN
-- On TYPE_NAME reduce production direct_declarator -> LPAREN declarator RPAREN
-- On TYPEDEF reduce production direct_declarator -> LPAREN declarator RPAREN
-- On STRUCT reduce production direct_declarator -> LPAREN declarator RPAREN
-- On STATIC reduce production direct_declarator -> LPAREN declarator RPAREN
-- On SIGNED reduce production direct_declarator -> LPAREN declarator RPAREN
-- On SHORT reduce production direct_declarator -> LPAREN declarator RPAREN
-- On SEMICOLON reduce production direct_declarator -> LPAREN declarator RPAREN
-- On RPAREN reduce production direct_declarator -> LPAREN declarator RPAREN
-- On REGISTER reduce production direct_declarator -> LPAREN declarator RPAREN
-- On LPAREN reduce production direct_declarator -> LPAREN declarator RPAREN
-- On LONG reduce production direct_declarator -> LPAREN declarator RPAREN
-- On LBRACK reduce production direct_declarator -> LPAREN declarator RPAREN
-- On LBRACE reduce production direct_declarator -> LPAREN declarator RPAREN
-- On INT reduce production direct_declarator -> LPAREN declarator RPAREN
-- On FLOAT reduce production direct_declarator -> LPAREN declarator RPAREN
-- On EXTERN reduce production direct_declarator -> LPAREN declarator RPAREN
-- On EQUAL reduce production direct_declarator -> LPAREN declarator RPAREN
-- On ENUM reduce production direct_declarator -> LPAREN declarator RPAREN
-- On DOUBLE reduce production direct_declarator -> LPAREN declarator RPAREN
-- On CONST reduce production direct_declarator -> LPAREN declarator RPAREN
-- On COMMA reduce production direct_declarator -> LPAREN declarator RPAREN
-- On COLON reduce production direct_declarator -> LPAREN declarator RPAREN
-- On CHAR reduce production direct_declarator -> LPAREN declarator RPAREN
-- On AUTO reduce production direct_declarator -> LPAREN declarator RPAREN

State 218:
direct_abstract_declarator -> LPAREN abstract_declarator . RPAREN [ RPAREN LPAREN LBRACK COMMA ]
-- On RPAREN shift to state 219

State 219:
direct_abstract_declarator -> LPAREN abstract_declarator RPAREN . [ RPAREN LPAREN LBRACK COMMA ]
-- On RPAREN reduce production direct_abstract_declarator -> LPAREN abstract_declarator RPAREN
-- On LPAREN reduce production direct_abstract_declarator -> LPAREN abstract_declarator RPAREN
-- On LBRACK reduce production direct_abstract_declarator -> LPAREN abstract_declarator RPAREN
-- On COMMA reduce production direct_abstract_declarator -> LPAREN abstract_declarator RPAREN

State 220:
parameter_declaration -> declaration_specifiers declarator . [ RPAREN COMMA ]
-- On RPAREN reduce production parameter_declaration -> declaration_specifiers declarator
-- On COMMA reduce production parameter_declaration -> declaration_specifiers declarator

State 221:
parameter_declaration -> declaration_specifiers abstract_declarator . [ RPAREN COMMA ]
-- On RPAREN reduce production parameter_declaration -> declaration_specifiers abstract_declarator
-- On COMMA reduce production parameter_declaration -> declaration_specifiers abstract_declarator

State 222:
type_name -> specifier_qualifier_list abstract_declarator . [ RPAREN ]
-- On RPAREN reduce production type_name -> specifier_qualifier_list abstract_declarator

State 223:
unary_expression -> SIZEOF LPAREN type_name . RPAREN [ XOR_ASSIGN SUB_ASSIGN STAR SLASH SEMICOLON RPAREN RIGHT_OP RIGHT_ASSIGN RBRACK RBRACE QUESTION PLUS PERCENT OR_OP OR_ASSIGN NE_OP MUL_ASSIGN MOD_ASSIGN MINUS LT LE_OP LEFT_OP LEFT_ASSIGN HAT GT GE_OP EQ_OP EQUAL DIV_ASSIGN COMMA COLON BAR AND_OP AND_ASSIGN AMPERSAND ADD_ASSIGN ]
-- On RPAREN shift to state 224

State 224:
unary_expression -> SIZEOF LPAREN type_name RPAREN . [ XOR_ASSIGN SUB_ASSIGN STAR SLASH SEMICOLON RPAREN RIGHT_OP RIGHT_ASSIGN RBRACK RBRACE QUESTION PLUS PERCENT OR_OP OR_ASSIGN NE_OP MUL_ASSIGN MOD_ASSIGN MINUS LT LE_OP LEFT_OP LEFT_ASSIGN HAT GT GE_OP EQ_OP EQUAL DIV_ASSIGN COMMA COLON BAR AND_OP AND_ASSIGN AMPERSAND ADD_ASSIGN ]
-- On XOR_ASSIGN reduce production unary_expression -> SIZEOF LPAREN type_name RPAREN
-- On SUB_ASSIGN reduce production unary_expression -> SIZEOF LPAREN type_name RPAREN
-- On STAR reduce production unary_expression -> SIZEOF LPAREN type_name RPAREN
-- On SLASH reduce production unary_expression -> SIZEOF LPAREN type_name RPAREN
-- On SEMICOLON reduce production unary_expression -> SIZEOF LPAREN type_name RPAREN
-- On RPAREN reduce production unary_expression -> SIZEOF LPAREN type_name RPAREN
-- On RIGHT_OP reduce production unary_expression -> SIZEOF LPAREN type_name RPAREN
-- On RIGHT_ASSIGN reduce production unary_expression -> SIZEOF LPAREN type_name RPAREN
-- On RBRACK reduce production unary_expression -> SIZEOF LPAREN type_name RPAREN
-- On RBRACE reduce production unary_expression -> SIZEOF LPAREN type_name RPAREN
-- On QUESTION reduce production unary_expression -> SIZEOF LPAREN type_name RPAREN
-- On PLUS reduce production unary_expression -> SIZEOF LPAREN type_name RPAREN
-- On PERCENT reduce production unary_expression -> SIZEOF LPAREN type_name RPAREN
-- On OR_OP reduce production unary_expression -> SIZEOF LPAREN type_name RPAREN
-- On OR_ASSIGN reduce production unary_expression -> SIZEOF LPAREN type_name RPAREN
-- On NE_OP reduce production unary_expression -> SIZEOF LPAREN type_name RPAREN
-- On MUL_ASSIGN reduce production unary_expression -> SIZEOF LPAREN type_name RPAREN
-- On MOD_ASSIGN reduce production unary_expression -> SIZEOF LPAREN type_name RPAREN
-- On MINUS reduce production unary_expression -> SIZEOF LPAREN type_name RPAREN
-- On LT reduce production unary_expression -> SIZEOF LPAREN type_name RPAREN
-- On LE_OP reduce production unary_expression -> SIZEOF LPAREN type_name RPAREN
-- On LEFT_OP reduce production unary_expression -> SIZEOF LPAREN type_name RPAREN
-- On LEFT_ASSIGN reduce production unary_expression -> SIZEOF LPAREN type_name RPAREN
-- On HAT reduce production unary_expression -> SIZEOF LPAREN type_name RPAREN
-- On GT reduce production unary_expression -> SIZEOF LPAREN type_name RPAREN
-- On GE_OP reduce production unary_expression -> SIZEOF LPAREN type_name RPAREN
-- On EQ_OP reduce production unary_expression -> SIZEOF LPAREN type_name RPAREN
-- On EQUAL reduce production unary_expression -> SIZEOF LPAREN type_name RPAREN
-- On DIV_ASSIGN reduce production unary_expression -> SIZEOF LPAREN type_name RPAREN
-- On COMMA reduce production unary_expression -> SIZEOF LPAREN type_name RPAREN
-- On COLON reduce production unary_expression -> SIZEOF LPAREN type_name RPAREN
-- On BAR reduce production unary_expression -> SIZEOF LPAREN type_name RPAREN
-- On AND_OP reduce production unary_expression -> SIZEOF LPAREN type_name RPAREN
-- On AND_ASSIGN reduce production unary_expression -> SIZEOF LPAREN type_name RPAREN
-- On AMPERSAND reduce production unary_expression -> SIZEOF LPAREN type_name RPAREN
-- On ADD_ASSIGN reduce production unary_expression -> SIZEOF LPAREN type_name RPAREN

State 225:
unary_expression -> SIZEOF unary_expression . [ XOR_ASSIGN SUB_ASSIGN STAR SLASH SEMICOLON RPAREN RIGHT_OP RIGHT_ASSIGN RBRACK RBRACE QUESTION PLUS PERCENT OR_OP OR_ASSIGN NE_OP MUL_ASSIGN MOD_ASSIGN MINUS LT LE_OP LEFT_OP LEFT_ASSIGN HAT GT GE_OP EQ_OP EQUAL DIV_ASSIGN COMMA COLON BAR AND_OP AND_ASSIGN AMPERSAND ADD_ASSIGN ]
-- On XOR_ASSIGN reduce production unary_expression -> SIZEOF unary_expression
-- On SUB_ASSIGN reduce production unary_expression -> SIZEOF unary_expression
-- On STAR reduce production unary_expression -> SIZEOF unary_expression
-- On SLASH reduce production unary_expression -> SIZEOF unary_expression
-- On SEMICOLON reduce production unary_expression -> SIZEOF unary_expression
-- On RPAREN reduce production unary_expression -> SIZEOF unary_expression
-- On RIGHT_OP reduce production unary_expression -> SIZEOF unary_expression
-- On RIGHT_ASSIGN reduce production unary_expression -> SIZEOF unary_expression
-- On RBRACK reduce production unary_expression -> SIZEOF unary_expression
-- On RBRACE reduce production unary_expression -> SIZEOF unary_expression
-- On QUESTION reduce production unary_expression -> SIZEOF unary_expression
-- On PLUS reduce production unary_expression -> SIZEOF unary_expression
-- On PERCENT reduce production unary_expression -> SIZEOF unary_expression
-- On OR_OP reduce production unary_expression -> SIZEOF unary_expression
-- On OR_ASSIGN reduce production unary_expression -> SIZEOF unary_expression
-- On NE_OP reduce production unary_expression -> SIZEOF unary_expression
-- On MUL_ASSIGN reduce production unary_expression -> SIZEOF unary_expression
-- On MOD_ASSIGN reduce production unary_expression -> SIZEOF unary_expression
-- On MINUS reduce production unary_expression -> SIZEOF unary_expression
-- On LT reduce production unary_expression -> SIZEOF unary_expression
-- On LE_OP reduce production unary_expression -> SIZEOF unary_expression
-- On LEFT_OP reduce production unary_expression -> SIZEOF unary_expression
-- On LEFT_ASSIGN reduce production unary_expression -> SIZEOF unary_expression
-- On HAT reduce production unary_expression -> SIZEOF unary_expression
-- On GT reduce production unary_expression -> SIZEOF unary_expression
-- On GE_OP reduce production unary_expression -> SIZEOF unary_expression
-- On EQ_OP reduce production unary_expression -> SIZEOF unary_expression
-- On EQUAL reduce production unary_expression -> SIZEOF unary_expression
-- On DIV_ASSIGN reduce production unary_expression -> SIZEOF unary_expression
-- On COMMA reduce production unary_expression -> SIZEOF unary_expression
-- On COLON reduce production unary_expression -> SIZEOF unary_expression
-- On BAR reduce production unary_expression -> SIZEOF unary_expression
-- On AND_OP reduce production unary_expression -> SIZEOF unary_expression
-- On AND_ASSIGN reduce production unary_expression -> SIZEOF unary_expression
-- On AMPERSAND reduce production unary_expression -> SIZEOF unary_expression
-- On ADD_ASSIGN reduce production unary_expression -> SIZEOF unary_expression

State 226:
enumerator -> IDENTIFIER EQUAL constant_expression . [ RBRACE COMMA ]
-- On RBRACE reduce production enumerator -> IDENTIFIER EQUAL constant_expression
-- On COMMA reduce production enumerator -> IDENTIFIER EQUAL constant_expression

State 227:
enum_specifier -> ENUM LBRACE enumerator_list . RBRACE [ VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN REGISTER LPAREN LONG LBRACK INT IDENTIFIER FLOAT EXTERN ENUM DOUBLE CONST COMMA COLON CHAR AUTO ]
enumerator_list -> enumerator_list . COMMA enumerator [ RBRACE COMMA ]
-- On RBRACE shift to state 228
-- On COMMA shift to state 229

State 228:
enum_specifier -> ENUM LBRACE enumerator_list RBRACE . [ VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN REGISTER LPAREN LONG LBRACK INT IDENTIFIER FLOAT EXTERN ENUM DOUBLE CONST COMMA COLON CHAR AUTO ]
-- On VOLATILE reduce production enum_specifier -> ENUM LBRACE enumerator_list RBRACE
-- On VOID reduce production enum_specifier -> ENUM LBRACE enumerator_list RBRACE
-- On UNSIGNED reduce production enum_specifier -> ENUM LBRACE enumerator_list RBRACE
-- On UNION reduce production enum_specifier -> ENUM LBRACE enumerator_list RBRACE
-- On TYPE_NAME reduce production enum_specifier -> ENUM LBRACE enumerator_list RBRACE
-- On TYPEDEF reduce production enum_specifier -> ENUM LBRACE enumerator_list RBRACE
-- On STRUCT reduce production enum_specifier -> ENUM LBRACE enumerator_list RBRACE
-- On STATIC reduce production enum_specifier -> ENUM LBRACE enumerator_list RBRACE
-- On STAR reduce production enum_specifier -> ENUM LBRACE enumerator_list RBRACE
-- On SIGNED reduce production enum_specifier -> ENUM LBRACE enumerator_list RBRACE
-- On SHORT reduce production enum_specifier -> ENUM LBRACE enumerator_list RBRACE
-- On SEMICOLON reduce production enum_specifier -> ENUM LBRACE enumerator_list RBRACE
-- On RPAREN reduce production enum_specifier -> ENUM LBRACE enumerator_list RBRACE
-- On REGISTER reduce production enum_specifier -> ENUM LBRACE enumerator_list RBRACE
-- On LPAREN reduce production enum_specifier -> ENUM LBRACE enumerator_list RBRACE
-- On LONG reduce production enum_specifier -> ENUM LBRACE enumerator_list RBRACE
-- On LBRACK reduce production enum_specifier -> ENUM LBRACE enumerator_list RBRACE
-- On INT reduce production enum_specifier -> ENUM LBRACE enumerator_list RBRACE
-- On IDENTIFIER reduce production enum_specifier -> ENUM LBRACE enumerator_list RBRACE
-- On FLOAT reduce production enum_specifier -> ENUM LBRACE enumerator_list RBRACE
-- On EXTERN reduce production enum_specifier -> ENUM LBRACE enumerator_list RBRACE
-- On ENUM reduce production enum_specifier -> ENUM LBRACE enumerator_list RBRACE
-- On DOUBLE reduce production enum_specifier -> ENUM LBRACE enumerator_list RBRACE
-- On CONST reduce production enum_specifier -> ENUM LBRACE enumerator_list RBRACE
-- On COMMA reduce production enum_specifier -> ENUM LBRACE enumerator_list RBRACE
-- On COLON reduce production enum_specifier -> ENUM LBRACE enumerator_list RBRACE
-- On CHAR reduce production enum_specifier -> ENUM LBRACE enumerator_list RBRACE
-- On AUTO reduce production enum_specifier -> ENUM LBRACE enumerator_list RBRACE

State 229:
enumerator_list -> enumerator_list COMMA . enumerator [ RBRACE COMMA ]
-- On IDENTIFIER shift to state 32
-- On enumerator shift to state 230

State 230:
enumerator_list -> enumerator_list COMMA enumerator . [ RBRACE COMMA ]
-- On RBRACE reduce production enumerator_list -> enumerator_list COMMA enumerator
-- On COMMA reduce production enumerator_list -> enumerator_list COMMA enumerator

State 231:
enumerator_list -> enumerator . [ RBRACE COMMA ]
-- On RBRACE reduce production enumerator_list -> enumerator
-- On COMMA reduce production enumerator_list -> enumerator

State 232:
enum_specifier -> ENUM IDENTIFIER . LBRACE enumerator_list RBRACE [ VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN REGISTER LPAREN LONG LBRACK INT IDENTIFIER FLOAT EXTERN ENUM DOUBLE CONST COMMA COLON CHAR AUTO ]
enum_specifier -> ENUM IDENTIFIER . [ VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN REGISTER LPAREN LONG LBRACK INT IDENTIFIER FLOAT EXTERN ENUM DOUBLE CONST COMMA COLON CHAR AUTO ]
-- On LBRACE shift to state 233
-- On VOLATILE reduce production enum_specifier -> ENUM IDENTIFIER
-- On VOID reduce production enum_specifier -> ENUM IDENTIFIER
-- On UNSIGNED reduce production enum_specifier -> ENUM IDENTIFIER
-- On UNION reduce production enum_specifier -> ENUM IDENTIFIER
-- On TYPE_NAME reduce production enum_specifier -> ENUM IDENTIFIER
-- On TYPEDEF reduce production enum_specifier -> ENUM IDENTIFIER
-- On STRUCT reduce production enum_specifier -> ENUM IDENTIFIER
-- On STATIC reduce production enum_specifier -> ENUM IDENTIFIER
-- On STAR reduce production enum_specifier -> ENUM IDENTIFIER
-- On SIGNED reduce production enum_specifier -> ENUM IDENTIFIER
-- On SHORT reduce production enum_specifier -> ENUM IDENTIFIER
-- On SEMICOLON reduce production enum_specifier -> ENUM IDENTIFIER
-- On RPAREN reduce production enum_specifier -> ENUM IDENTIFIER
-- On REGISTER reduce production enum_specifier -> ENUM IDENTIFIER
-- On LPAREN reduce production enum_specifier -> ENUM IDENTIFIER
-- On LONG reduce production enum_specifier -> ENUM IDENTIFIER
-- On LBRACK reduce production enum_specifier -> ENUM IDENTIFIER
-- On INT reduce production enum_specifier -> ENUM IDENTIFIER
-- On IDENTIFIER reduce production enum_specifier -> ENUM IDENTIFIER
-- On FLOAT reduce production enum_specifier -> ENUM IDENTIFIER
-- On EXTERN reduce production enum_specifier -> ENUM IDENTIFIER
-- On ENUM reduce production enum_specifier -> ENUM IDENTIFIER
-- On DOUBLE reduce production enum_specifier -> ENUM IDENTIFIER
-- On CONST reduce production enum_specifier -> ENUM IDENTIFIER
-- On COMMA reduce production enum_specifier -> ENUM IDENTIFIER
-- On COLON reduce production enum_specifier -> ENUM IDENTIFIER
-- On CHAR reduce production enum_specifier -> ENUM IDENTIFIER
-- On AUTO reduce production enum_specifier -> ENUM IDENTIFIER

State 233:
enum_specifier -> ENUM IDENTIFIER LBRACE . enumerator_list RBRACE [ VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN REGISTER LPAREN LONG LBRACK INT IDENTIFIER FLOAT EXTERN ENUM DOUBLE CONST COMMA COLON CHAR AUTO ]
-- On IDENTIFIER shift to state 32
-- On enumerator_list shift to state 234
-- On enumerator shift to state 231

State 234:
enum_specifier -> ENUM IDENTIFIER LBRACE enumerator_list . RBRACE [ VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN REGISTER LPAREN LONG LBRACK INT IDENTIFIER FLOAT EXTERN ENUM DOUBLE CONST COMMA COLON CHAR AUTO ]
enumerator_list -> enumerator_list . COMMA enumerator [ RBRACE COMMA ]
-- On RBRACE shift to state 235
-- On COMMA shift to state 229

State 235:
enum_specifier -> ENUM IDENTIFIER LBRACE enumerator_list RBRACE . [ VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN REGISTER LPAREN LONG LBRACK INT IDENTIFIER FLOAT EXTERN ENUM DOUBLE CONST COMMA COLON CHAR AUTO ]
-- On VOLATILE reduce production enum_specifier -> ENUM IDENTIFIER LBRACE enumerator_list RBRACE
-- On VOID reduce production enum_specifier -> ENUM IDENTIFIER LBRACE enumerator_list RBRACE
-- On UNSIGNED reduce production enum_specifier -> ENUM IDENTIFIER LBRACE enumerator_list RBRACE
-- On UNION reduce production enum_specifier -> ENUM IDENTIFIER LBRACE enumerator_list RBRACE
-- On TYPE_NAME reduce production enum_specifier -> ENUM IDENTIFIER LBRACE enumerator_list RBRACE
-- On TYPEDEF reduce production enum_specifier -> ENUM IDENTIFIER LBRACE enumerator_list RBRACE
-- On STRUCT reduce production enum_specifier -> ENUM IDENTIFIER LBRACE enumerator_list RBRACE
-- On STATIC reduce production enum_specifier -> ENUM IDENTIFIER LBRACE enumerator_list RBRACE
-- On STAR reduce production enum_specifier -> ENUM IDENTIFIER LBRACE enumerator_list RBRACE
-- On SIGNED reduce production enum_specifier -> ENUM IDENTIFIER LBRACE enumerator_list RBRACE
-- On SHORT reduce production enum_specifier -> ENUM IDENTIFIER LBRACE enumerator_list RBRACE
-- On SEMICOLON reduce production enum_specifier -> ENUM IDENTIFIER LBRACE enumerator_list RBRACE
-- On RPAREN reduce production enum_specifier -> ENUM IDENTIFIER LBRACE enumerator_list RBRACE
-- On REGISTER reduce production enum_specifier -> ENUM IDENTIFIER LBRACE enumerator_list RBRACE
-- On LPAREN reduce production enum_specifier -> ENUM IDENTIFIER LBRACE enumerator_list RBRACE
-- On LONG reduce production enum_specifier -> ENUM IDENTIFIER LBRACE enumerator_list RBRACE
-- On LBRACK reduce production enum_specifier -> ENUM IDENTIFIER LBRACE enumerator_list RBRACE
-- On INT reduce production enum_specifier -> ENUM IDENTIFIER LBRACE enumerator_list RBRACE
-- On IDENTIFIER reduce production enum_specifier -> ENUM IDENTIFIER LBRACE enumerator_list RBRACE
-- On FLOAT reduce production enum_specifier -> ENUM IDENTIFIER LBRACE enumerator_list RBRACE
-- On EXTERN reduce production enum_specifier -> ENUM IDENTIFIER LBRACE enumerator_list RBRACE
-- On ENUM reduce production enum_specifier -> ENUM IDENTIFIER LBRACE enumerator_list RBRACE
-- On DOUBLE reduce production enum_specifier -> ENUM IDENTIFIER LBRACE enumerator_list RBRACE
-- On CONST reduce production enum_specifier -> ENUM IDENTIFIER LBRACE enumerator_list RBRACE
-- On COMMA reduce production enum_specifier -> ENUM IDENTIFIER LBRACE enumerator_list RBRACE
-- On COLON reduce production enum_specifier -> ENUM IDENTIFIER LBRACE enumerator_list RBRACE
-- On CHAR reduce production enum_specifier -> ENUM IDENTIFIER LBRACE enumerator_list RBRACE
-- On AUTO reduce production enum_specifier -> ENUM IDENTIFIER LBRACE enumerator_list RBRACE

State 236:
direct_declarator -> direct_declarator LPAREN parameter_type_list . RPAREN [ VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF STRUCT STATIC SIGNED SHORT SEMICOLON RPAREN REGISTER LPAREN LONG LBRACK LBRACE INT FLOAT EXTERN EQUAL ENUM DOUBLE CONST COMMA COLON CHAR AUTO ]
-- On RPAREN shift to state 237

State 237:
direct_declarator -> direct_declarator LPAREN parameter_type_list RPAREN . [ VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF STRUCT STATIC SIGNED SHORT SEMICOLON RPAREN REGISTER LPAREN LONG LBRACK LBRACE INT FLOAT EXTERN EQUAL ENUM DOUBLE CONST COMMA COLON CHAR AUTO ]
-- On VOLATILE reduce production direct_declarator -> direct_declarator LPAREN parameter_type_list RPAREN
-- On VOID reduce production direct_declarator -> direct_declarator LPAREN parameter_type_list RPAREN
-- On UNSIGNED reduce production direct_declarator -> direct_declarator LPAREN parameter_type_list RPAREN
-- On UNION reduce production direct_declarator -> direct_declarator LPAREN parameter_type_list RPAREN
-- On TYPE_NAME reduce production direct_declarator -> direct_declarator LPAREN parameter_type_list RPAREN
-- On TYPEDEF reduce production direct_declarator -> direct_declarator LPAREN parameter_type_list RPAREN
-- On STRUCT reduce production direct_declarator -> direct_declarator LPAREN parameter_type_list RPAREN
-- On STATIC reduce production direct_declarator -> direct_declarator LPAREN parameter_type_list RPAREN
-- On SIGNED reduce production direct_declarator -> direct_declarator LPAREN parameter_type_list RPAREN
-- On SHORT reduce production direct_declarator -> direct_declarator LPAREN parameter_type_list RPAREN
-- On SEMICOLON reduce production direct_declarator -> direct_declarator LPAREN parameter_type_list RPAREN
-- On RPAREN reduce production direct_declarator -> direct_declarator LPAREN parameter_type_list RPAREN
-- On REGISTER reduce production direct_declarator -> direct_declarator LPAREN parameter_type_list RPAREN
-- On LPAREN reduce production direct_declarator -> direct_declarator LPAREN parameter_type_list RPAREN
-- On LONG reduce production direct_declarator -> direct_declarator LPAREN parameter_type_list RPAREN
-- On LBRACK reduce production direct_declarator -> direct_declarator LPAREN parameter_type_list RPAREN
-- On LBRACE reduce production direct_declarator -> direct_declarator LPAREN parameter_type_list RPAREN
-- On INT reduce production direct_declarator -> direct_declarator LPAREN parameter_type_list RPAREN
-- On FLOAT reduce production direct_declarator -> direct_declarator LPAREN parameter_type_list RPAREN
-- On EXTERN reduce production direct_declarator -> direct_declarator LPAREN parameter_type_list RPAREN
-- On EQUAL reduce production direct_declarator -> direct_declarator LPAREN parameter_type_list RPAREN
-- On ENUM reduce production direct_declarator -> direct_declarator LPAREN parameter_type_list RPAREN
-- On DOUBLE reduce production direct_declarator -> direct_declarator LPAREN parameter_type_list RPAREN
-- On CONST reduce production direct_declarator -> direct_declarator LPAREN parameter_type_list RPAREN
-- On COMMA reduce production direct_declarator -> direct_declarator LPAREN parameter_type_list RPAREN
-- On COLON reduce production direct_declarator -> direct_declarator LPAREN parameter_type_list RPAREN
-- On CHAR reduce production direct_declarator -> direct_declarator LPAREN parameter_type_list RPAREN
-- On AUTO reduce production direct_declarator -> direct_declarator LPAREN parameter_type_list RPAREN

State 238:
direct_declarator -> direct_declarator LPAREN identifier_list . RPAREN [ VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF STRUCT STATIC SIGNED SHORT SEMICOLON RPAREN REGISTER LPAREN LONG LBRACK LBRACE INT FLOAT EXTERN EQUAL ENUM DOUBLE CONST COMMA COLON CHAR AUTO ]
identifier_list -> identifier_list . COMMA IDENTIFIER [ RPAREN COMMA ]
-- On RPAREN shift to state 239
-- On COMMA shift to state 240

State 239:
direct_declarator -> direct_declarator LPAREN identifier_list RPAREN . [ VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF STRUCT STATIC SIGNED SHORT SEMICOLON RPAREN REGISTER LPAREN LONG LBRACK LBRACE INT FLOAT EXTERN EQUAL ENUM DOUBLE CONST COMMA COLON CHAR AUTO ]
-- On VOLATILE reduce production direct_declarator -> direct_declarator LPAREN identifier_list RPAREN
-- On VOID reduce production direct_declarator -> direct_declarator LPAREN identifier_list RPAREN
-- On UNSIGNED reduce production direct_declarator -> direct_declarator LPAREN identifier_list RPAREN
-- On UNION reduce production direct_declarator -> direct_declarator LPAREN identifier_list RPAREN
-- On TYPE_NAME reduce production direct_declarator -> direct_declarator LPAREN identifier_list RPAREN
-- On TYPEDEF reduce production direct_declarator -> direct_declarator LPAREN identifier_list RPAREN
-- On STRUCT reduce production direct_declarator -> direct_declarator LPAREN identifier_list RPAREN
-- On STATIC reduce production direct_declarator -> direct_declarator LPAREN identifier_list RPAREN
-- On SIGNED reduce production direct_declarator -> direct_declarator LPAREN identifier_list RPAREN
-- On SHORT reduce production direct_declarator -> direct_declarator LPAREN identifier_list RPAREN
-- On SEMICOLON reduce production direct_declarator -> direct_declarator LPAREN identifier_list RPAREN
-- On RPAREN reduce production direct_declarator -> direct_declarator LPAREN identifier_list RPAREN
-- On REGISTER reduce production direct_declarator -> direct_declarator LPAREN identifier_list RPAREN
-- On LPAREN reduce production direct_declarator -> direct_declarator LPAREN identifier_list RPAREN
-- On LONG reduce production direct_declarator -> direct_declarator LPAREN identifier_list RPAREN
-- On LBRACK reduce production direct_declarator -> direct_declarator LPAREN identifier_list RPAREN
-- On LBRACE reduce production direct_declarator -> direct_declarator LPAREN identifier_list RPAREN
-- On INT reduce production direct_declarator -> direct_declarator LPAREN identifier_list RPAREN
-- On FLOAT reduce production direct_declarator -> direct_declarator LPAREN identifier_list RPAREN
-- On EXTERN reduce production direct_declarator -> direct_declarator LPAREN identifier_list RPAREN
-- On EQUAL reduce production direct_declarator -> direct_declarator LPAREN identifier_list RPAREN
-- On ENUM reduce production direct_declarator -> direct_declarator LPAREN identifier_list RPAREN
-- On DOUBLE reduce production direct_declarator -> direct_declarator LPAREN identifier_list RPAREN
-- On CONST reduce production direct_declarator -> direct_declarator LPAREN identifier_list RPAREN
-- On COMMA reduce production direct_declarator -> direct_declarator LPAREN identifier_list RPAREN
-- On COLON reduce production direct_declarator -> direct_declarator LPAREN identifier_list RPAREN
-- On CHAR reduce production direct_declarator -> direct_declarator LPAREN identifier_list RPAREN
-- On AUTO reduce production direct_declarator -> direct_declarator LPAREN identifier_list RPAREN

State 240:
identifier_list -> identifier_list COMMA . IDENTIFIER [ RPAREN COMMA ]
-- On IDENTIFIER shift to state 241

State 241:
identifier_list -> identifier_list COMMA IDENTIFIER . [ RPAREN COMMA ]
-- On RPAREN reduce production identifier_list -> identifier_list COMMA IDENTIFIER
-- On COMMA reduce production identifier_list -> identifier_list COMMA IDENTIFIER

State 242:
translation_unit' -> translation_unit . [ # ]
translation_unit -> translation_unit . external_declaration [ VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF STRUCT STATIC STAR SIGNED SHORT REGISTER LPAREN LONG INT IDENTIFIER FLOAT EXTERN ENUM DOUBLE CONST CHAR AUTO # ]
-- On VOLATILE shift to state 1
-- On VOID shift to state 2
-- On UNSIGNED shift to state 3
-- On UNION shift to state 4
-- On TYPE_NAME shift to state 5
-- On TYPEDEF shift to state 6
-- On STRUCT shift to state 7
-- On STATIC shift to state 8
-- On STAR shift to state 9
-- On SIGNED shift to state 16
-- On SHORT shift to state 17
-- On REGISTER shift to state 18
-- On LPAREN shift to state 19
-- On LONG shift to state 25
-- On INT shift to state 26
-- On IDENTIFIER shift to state 20
-- On FLOAT shift to state 28
-- On EXTERN shift to state 29
-- On ENUM shift to state 30
-- On DOUBLE shift to state 143
-- On CONST shift to state 10
-- On CHAR shift to state 144
-- On AUTO shift to state 188
-- On type_specifier shift to state 189
-- On type_qualifier shift to state 190
-- On struct_or_union_specifier shift to state 147
-- On struct_or_union shift to state 148
-- On storage_class_specifier shift to state 191
-- On pointer shift to state 21
-- On function_definition shift to state 243
-- On external_declaration shift to state 244
-- On enum_specifier shift to state 170
-- On direct_declarator shift to state 161
-- On declarator shift to state 245
-- On declaration_specifiers shift to state 342
-- On declaration shift to state 347
-- On # accept translation_unit
** End-of-stream conflict on VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF STRUCT STATIC STAR SIGNED SHORT REGISTER LPAREN LONG INT IDENTIFIER FLOAT EXTERN ENUM DOUBLE CONST CHAR AUTO
**   There is a tension between
**   (1) accepting translation_unit
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 243:
external_declaration -> function_definition . [ VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF STRUCT STATIC STAR SIGNED SHORT REGISTER LPAREN LONG INT IDENTIFIER FLOAT EXTERN ENUM DOUBLE CONST CHAR AUTO # ]
-- On VOLATILE reduce production external_declaration -> function_definition
-- On VOID reduce production external_declaration -> function_definition
-- On UNSIGNED reduce production external_declaration -> function_definition
-- On UNION reduce production external_declaration -> function_definition
-- On TYPE_NAME reduce production external_declaration -> function_definition
-- On TYPEDEF reduce production external_declaration -> function_definition
-- On STRUCT reduce production external_declaration -> function_definition
-- On STATIC reduce production external_declaration -> function_definition
-- On STAR reduce production external_declaration -> function_definition
-- On SIGNED reduce production external_declaration -> function_definition
-- On SHORT reduce production external_declaration -> function_definition
-- On REGISTER reduce production external_declaration -> function_definition
-- On LPAREN reduce production external_declaration -> function_definition
-- On LONG reduce production external_declaration -> function_definition
-- On INT reduce production external_declaration -> function_definition
-- On IDENTIFIER reduce production external_declaration -> function_definition
-- On FLOAT reduce production external_declaration -> function_definition
-- On EXTERN reduce production external_declaration -> function_definition
-- On ENUM reduce production external_declaration -> function_definition
-- On DOUBLE reduce production external_declaration -> function_definition
-- On CONST reduce production external_declaration -> function_definition
-- On CHAR reduce production external_declaration -> function_definition
-- On AUTO reduce production external_declaration -> function_definition
-- On # reduce production external_declaration -> function_definition
** End-of-stream conflict on VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF STRUCT STATIC STAR SIGNED SHORT REGISTER LPAREN LONG INT IDENTIFIER FLOAT EXTERN ENUM DOUBLE CONST CHAR AUTO
**   There is a tension between
**   (1) reducing production external_declaration -> function_definition
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 244:
translation_unit -> translation_unit external_declaration . [ VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF STRUCT STATIC STAR SIGNED SHORT REGISTER LPAREN LONG INT IDENTIFIER FLOAT EXTERN ENUM DOUBLE CONST CHAR AUTO # ]
-- On VOLATILE reduce production translation_unit -> translation_unit external_declaration
-- On VOID reduce production translation_unit -> translation_unit external_declaration
-- On UNSIGNED reduce production translation_unit -> translation_unit external_declaration
-- On UNION reduce production translation_unit -> translation_unit external_declaration
-- On TYPE_NAME reduce production translation_unit -> translation_unit external_declaration
-- On TYPEDEF reduce production translation_unit -> translation_unit external_declaration
-- On STRUCT reduce production translation_unit -> translation_unit external_declaration
-- On STATIC reduce production translation_unit -> translation_unit external_declaration
-- On STAR reduce production translation_unit -> translation_unit external_declaration
-- On SIGNED reduce production translation_unit -> translation_unit external_declaration
-- On SHORT reduce production translation_unit -> translation_unit external_declaration
-- On REGISTER reduce production translation_unit -> translation_unit external_declaration
-- On LPAREN reduce production translation_unit -> translation_unit external_declaration
-- On LONG reduce production translation_unit -> translation_unit external_declaration
-- On INT reduce production translation_unit -> translation_unit external_declaration
-- On IDENTIFIER reduce production translation_unit -> translation_unit external_declaration
-- On FLOAT reduce production translation_unit -> translation_unit external_declaration
-- On EXTERN reduce production translation_unit -> translation_unit external_declaration
-- On ENUM reduce production translation_unit -> translation_unit external_declaration
-- On DOUBLE reduce production translation_unit -> translation_unit external_declaration
-- On CONST reduce production translation_unit -> translation_unit external_declaration
-- On CHAR reduce production translation_unit -> translation_unit external_declaration
-- On AUTO reduce production translation_unit -> translation_unit external_declaration
-- On # reduce production translation_unit -> translation_unit external_declaration
** End-of-stream conflict on VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF STRUCT STATIC STAR SIGNED SHORT REGISTER LPAREN LONG INT IDENTIFIER FLOAT EXTERN ENUM DOUBLE CONST CHAR AUTO
**   There is a tension between
**   (1) reducing production translation_unit -> translation_unit external_declaration
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 245:
function_definition -> declarator . declaration_list compound_statement [ VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF STRUCT STATIC STAR SIGNED SHORT REGISTER LPAREN LONG INT IDENTIFIER FLOAT EXTERN ENUM DOUBLE CONST CHAR AUTO # ]
function_definition -> declarator . compound_statement [ VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF STRUCT STATIC STAR SIGNED SHORT REGISTER LPAREN LONG INT IDENTIFIER FLOAT EXTERN ENUM DOUBLE CONST CHAR AUTO # ]
-- On VOLATILE shift to state 1
-- On VOID shift to state 2
-- On UNSIGNED shift to state 3
-- On UNION shift to state 4
-- On TYPE_NAME shift to state 5
-- On TYPEDEF shift to state 6
-- On STRUCT shift to state 7
-- On STATIC shift to state 8
-- On SIGNED shift to state 16
-- On SHORT shift to state 17
-- On REGISTER shift to state 18
-- On LONG shift to state 25
-- On LBRACE shift to state 246
-- On INT shift to state 26
-- On FLOAT shift to state 28
-- On EXTERN shift to state 29
-- On ENUM shift to state 30
-- On DOUBLE shift to state 143
-- On CONST shift to state 10
-- On CHAR shift to state 144
-- On AUTO shift to state 188
-- On type_specifier shift to state 189
-- On type_qualifier shift to state 190
-- On struct_or_union_specifier shift to state 147
-- On struct_or_union shift to state 148
-- On storage_class_specifier shift to state 191
-- On enum_specifier shift to state 170
-- On declaration_specifiers shift to state 315
-- On declaration_list shift to state 339
-- On declaration shift to state 338
-- On compound_statement shift to state 341

State 246:
compound_statement -> LBRACE . RBRACE [ WHILE VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF TILDE SWITCH STRUCT STRING_LITERAL STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN REGISTER RBRACE PLUS MINUS LPAREN LONG LBRACE INT INC_OP IF IDENTIFIER GOTO FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT DEC_OP CONTINUE CONSTANT CONST CHAR CASE BREAK BANG AUTO AMPERSAND # ]
compound_statement -> LBRACE . statement_list RBRACE [ WHILE VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF TILDE SWITCH STRUCT STRING_LITERAL STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN REGISTER RBRACE PLUS MINUS LPAREN LONG LBRACE INT INC_OP IF IDENTIFIER GOTO FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT DEC_OP CONTINUE CONSTANT CONST CHAR CASE BREAK BANG AUTO AMPERSAND # ]
compound_statement -> LBRACE . declaration_list RBRACE [ WHILE VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF TILDE SWITCH STRUCT STRING_LITERAL STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN REGISTER RBRACE PLUS MINUS LPAREN LONG LBRACE INT INC_OP IF IDENTIFIER GOTO FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT DEC_OP CONTINUE CONSTANT CONST CHAR CASE BREAK BANG AUTO AMPERSAND # ]
compound_statement -> LBRACE . declaration_list statement_list RBRACE [ WHILE VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF TILDE SWITCH STRUCT STRING_LITERAL STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN REGISTER RBRACE PLUS MINUS LPAREN LONG LBRACE INT INC_OP IF IDENTIFIER GOTO FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT DEC_OP CONTINUE CONSTANT CONST CHAR CASE BREAK BANG AUTO AMPERSAND # ]
-- On WHILE shift to state 247
-- On VOLATILE shift to state 1
-- On VOID shift to state 2
-- On UNSIGNED shift to state 3
-- On UNION shift to state 4
-- On TYPE_NAME shift to state 5
-- On TYPEDEF shift to state 6
-- On TILDE shift to state 34
-- On SWITCH shift to state 251
-- On STRUCT shift to state 7
-- On STRING_LITERAL shift to state 35
-- On STATIC shift to state 8
-- On STAR shift to state 36
-- On SIZEOF shift to state 37
-- On SIGNED shift to state 16
-- On SHORT shift to state 17
-- On SEMICOLON shift to state 255
-- On RETURN shift to state 256
-- On REGISTER shift to state 18
-- On RBRACE shift to state 310
-- On PLUS shift to state 38
-- On MINUS shift to state 39
-- On LPAREN shift to state 41
-- On LONG shift to state 25
-- On LBRACE shift to state 246
-- On INT shift to state 26
-- On INC_OP shift to state 42
-- On IF shift to state 260
-- On IDENTIFIER shift to state 264
-- On GOTO shift to state 266
-- On FOR shift to state 269
-- On FLOAT shift to state 28
-- On EXTERN shift to state 29
-- On ENUM shift to state 30
-- On DOUBLE shift to state 143
-- On DO shift to state 274
-- On DEFAULT shift to state 275
-- On DEC_OP shift to state 45
-- On CONTINUE shift to state 277
-- On CONSTANT shift to state 46
-- On CONST shift to state 10
-- On CHAR shift to state 144
-- On CASE shift to state 279
-- On BREAK shift to state 282
-- On BANG shift to state 47
-- On AUTO shift to state 188
-- On AMPERSAND shift to state 48
-- On unary_operator shift to state 49
-- On unary_expression shift to state 57
-- On type_specifier shift to state 189
-- On type_qualifier shift to state 190
-- On struct_or_union_specifier shift to state 147
-- On struct_or_union shift to state 148
-- On storage_class_specifier shift to state 191
-- On statement_list shift to state 311
-- On statement shift to state 314
-- On shift_expression shift to state 70
-- On selection_statement shift to state 285
-- On relational_expression shift to state 87
-- On primary_expression shift to state 51
-- On postfix_expression shift to state 52
-- On multiplicative_expression shift to state 72
-- On logical_or_expression shift to state 97
-- On logical_and_expression shift to state 99
-- On labeled_statement shift to state 286
-- On jump_statement shift to state 287
-- On iteration_statement shift to state 288
-- On inclusive_or_expression shift to state 115
-- On expression_statement shift to state 289
-- On expression shift to state 290
-- On exclusive_or_expression shift to state 114
-- On equality_expression shift to state 105
-- On enum_specifier shift to state 170
-- On declaration_specifiers shift to state 315
-- On declaration_list shift to state 333
-- On declaration shift to state 338
-- On conditional_expression shift to state 118
-- On compound_statement shift to state 292
-- On cast_expression shift to state 79
-- On assignment_expression shift to state 122
-- On and_expression shift to state 113
-- On additive_expression shift to state 90

State 247:
iteration_statement -> WHILE . LPAREN expression RPAREN statement [ WHILE TILDE SWITCH STRING_LITERAL STAR SIZEOF SEMICOLON RETURN RBRACE PLUS MINUS LPAREN LBRACE INC_OP IF IDENTIFIER GOTO FOR ELSE DO DEFAULT DEC_OP CONTINUE CONSTANT CASE BREAK BANG AMPERSAND ]
-- On LPAREN shift to state 248

State 248:
iteration_statement -> WHILE LPAREN . expression RPAREN statement [ WHILE TILDE SWITCH STRING_LITERAL STAR SIZEOF SEMICOLON RETURN RBRACE PLUS MINUS LPAREN LBRACE INC_OP IF IDENTIFIER GOTO FOR ELSE DO DEFAULT DEC_OP CONTINUE CONSTANT CASE BREAK BANG AMPERSAND ]
-- On TILDE shift to state 34
-- On STRING_LITERAL shift to state 35
-- On STAR shift to state 36
-- On SIZEOF shift to state 37
-- On PLUS shift to state 38
-- On MINUS shift to state 39
-- On LPAREN shift to state 41
-- On INC_OP shift to state 42
-- On IDENTIFIER shift to state 44
-- On DEC_OP shift to state 45
-- On CONSTANT shift to state 46
-- On BANG shift to state 47
-- On AMPERSAND shift to state 48
-- On unary_operator shift to state 49
-- On unary_expression shift to state 57
-- On shift_expression shift to state 70
-- On relational_expression shift to state 87
-- On primary_expression shift to state 51
-- On postfix_expression shift to state 52
-- On multiplicative_expression shift to state 72
-- On logical_or_expression shift to state 97
-- On logical_and_expression shift to state 99
-- On inclusive_or_expression shift to state 115
-- On expression shift to state 249
-- On exclusive_or_expression shift to state 114
-- On equality_expression shift to state 105
-- On conditional_expression shift to state 118
-- On cast_expression shift to state 79
-- On assignment_expression shift to state 122
-- On and_expression shift to state 113
-- On additive_expression shift to state 90

State 249:
expression -> expression . COMMA assignment_expression [ RPAREN COMMA ]
iteration_statement -> WHILE LPAREN expression . RPAREN statement [ WHILE TILDE SWITCH STRING_LITERAL STAR SIZEOF SEMICOLON RETURN RBRACE PLUS MINUS LPAREN LBRACE INC_OP IF IDENTIFIER GOTO FOR ELSE DO DEFAULT DEC_OP CONTINUE CONSTANT CASE BREAK BANG AMPERSAND ]
-- On RPAREN shift to state 250
-- On COMMA shift to state 117

State 250:
iteration_statement -> WHILE LPAREN expression RPAREN . statement [ WHILE TILDE SWITCH STRING_LITERAL STAR SIZEOF SEMICOLON RETURN RBRACE PLUS MINUS LPAREN LBRACE INC_OP IF IDENTIFIER GOTO FOR ELSE DO DEFAULT DEC_OP CONTINUE CONSTANT CASE BREAK BANG AMPERSAND ]
-- On WHILE shift to state 247
-- On TILDE shift to state 34
-- On SWITCH shift to state 251
-- On STRING_LITERAL shift to state 35
-- On STAR shift to state 36
-- On SIZEOF shift to state 37
-- On SEMICOLON shift to state 255
-- On RETURN shift to state 256
-- On PLUS shift to state 38
-- On MINUS shift to state 39
-- On LPAREN shift to state 41
-- On LBRACE shift to state 246
-- On INC_OP shift to state 42
-- On IF shift to state 260
-- On IDENTIFIER shift to state 264
-- On GOTO shift to state 266
-- On FOR shift to state 269
-- On DO shift to state 274
-- On DEFAULT shift to state 275
-- On DEC_OP shift to state 45
-- On CONTINUE shift to state 277
-- On CONSTANT shift to state 46
-- On CASE shift to state 279
-- On BREAK shift to state 282
-- On BANG shift to state 47
-- On AMPERSAND shift to state 48
-- On unary_operator shift to state 49
-- On unary_expression shift to state 57
-- On statement shift to state 309
-- On shift_expression shift to state 70
-- On selection_statement shift to state 285
-- On relational_expression shift to state 87
-- On primary_expression shift to state 51
-- On postfix_expression shift to state 52
-- On multiplicative_expression shift to state 72
-- On logical_or_expression shift to state 97
-- On logical_and_expression shift to state 99
-- On labeled_statement shift to state 286
-- On jump_statement shift to state 287
-- On iteration_statement shift to state 288
-- On inclusive_or_expression shift to state 115
-- On expression_statement shift to state 289
-- On expression shift to state 290
-- On exclusive_or_expression shift to state 114
-- On equality_expression shift to state 105
-- On conditional_expression shift to state 118
-- On compound_statement shift to state 292
-- On cast_expression shift to state 79
-- On assignment_expression shift to state 122
-- On and_expression shift to state 113
-- On additive_expression shift to state 90

State 251:
selection_statement -> SWITCH . LPAREN expression RPAREN statement [ WHILE TILDE SWITCH STRING_LITERAL STAR SIZEOF SEMICOLON RETURN RBRACE PLUS MINUS LPAREN LBRACE INC_OP IF IDENTIFIER GOTO FOR ELSE DO DEFAULT DEC_OP CONTINUE CONSTANT CASE BREAK BANG AMPERSAND ]
-- On LPAREN shift to state 252

State 252:
selection_statement -> SWITCH LPAREN . expression RPAREN statement [ WHILE TILDE SWITCH STRING_LITERAL STAR SIZEOF SEMICOLON RETURN RBRACE PLUS MINUS LPAREN LBRACE INC_OP IF IDENTIFIER GOTO FOR ELSE DO DEFAULT DEC_OP CONTINUE CONSTANT CASE BREAK BANG AMPERSAND ]
-- On TILDE shift to state 34
-- On STRING_LITERAL shift to state 35
-- On STAR shift to state 36
-- On SIZEOF shift to state 37
-- On PLUS shift to state 38
-- On MINUS shift to state 39
-- On LPAREN shift to state 41
-- On INC_OP shift to state 42
-- On IDENTIFIER shift to state 44
-- On DEC_OP shift to state 45
-- On CONSTANT shift to state 46
-- On BANG shift to state 47
-- On AMPERSAND shift to state 48
-- On unary_operator shift to state 49
-- On unary_expression shift to state 57
-- On shift_expression shift to state 70
-- On relational_expression shift to state 87
-- On primary_expression shift to state 51
-- On postfix_expression shift to state 52
-- On multiplicative_expression shift to state 72
-- On logical_or_expression shift to state 97
-- On logical_and_expression shift to state 99
-- On inclusive_or_expression shift to state 115
-- On expression shift to state 253
-- On exclusive_or_expression shift to state 114
-- On equality_expression shift to state 105
-- On conditional_expression shift to state 118
-- On cast_expression shift to state 79
-- On assignment_expression shift to state 122
-- On and_expression shift to state 113
-- On additive_expression shift to state 90

State 253:
expression -> expression . COMMA assignment_expression [ RPAREN COMMA ]
selection_statement -> SWITCH LPAREN expression . RPAREN statement [ WHILE TILDE SWITCH STRING_LITERAL STAR SIZEOF SEMICOLON RETURN RBRACE PLUS MINUS LPAREN LBRACE INC_OP IF IDENTIFIER GOTO FOR ELSE DO DEFAULT DEC_OP CONTINUE CONSTANT CASE BREAK BANG AMPERSAND ]
-- On RPAREN shift to state 254
-- On COMMA shift to state 117

State 254:
selection_statement -> SWITCH LPAREN expression RPAREN . statement [ WHILE TILDE SWITCH STRING_LITERAL STAR SIZEOF SEMICOLON RETURN RBRACE PLUS MINUS LPAREN LBRACE INC_OP IF IDENTIFIER GOTO FOR ELSE DO DEFAULT DEC_OP CONTINUE CONSTANT CASE BREAK BANG AMPERSAND ]
-- On WHILE shift to state 247
-- On TILDE shift to state 34
-- On SWITCH shift to state 251
-- On STRING_LITERAL shift to state 35
-- On STAR shift to state 36
-- On SIZEOF shift to state 37
-- On SEMICOLON shift to state 255
-- On RETURN shift to state 256
-- On PLUS shift to state 38
-- On MINUS shift to state 39
-- On LPAREN shift to state 41
-- On LBRACE shift to state 246
-- On INC_OP shift to state 42
-- On IF shift to state 260
-- On IDENTIFIER shift to state 264
-- On GOTO shift to state 266
-- On FOR shift to state 269
-- On DO shift to state 274
-- On DEFAULT shift to state 275
-- On DEC_OP shift to state 45
-- On CONTINUE shift to state 277
-- On CONSTANT shift to state 46
-- On CASE shift to state 279
-- On BREAK shift to state 282
-- On BANG shift to state 47
-- On AMPERSAND shift to state 48
-- On unary_operator shift to state 49
-- On unary_expression shift to state 57
-- On statement shift to state 308
-- On shift_expression shift to state 70
-- On selection_statement shift to state 285
-- On relational_expression shift to state 87
-- On primary_expression shift to state 51
-- On postfix_expression shift to state 52
-- On multiplicative_expression shift to state 72
-- On logical_or_expression shift to state 97
-- On logical_and_expression shift to state 99
-- On labeled_statement shift to state 286
-- On jump_statement shift to state 287
-- On iteration_statement shift to state 288
-- On inclusive_or_expression shift to state 115
-- On expression_statement shift to state 289
-- On expression shift to state 290
-- On exclusive_or_expression shift to state 114
-- On equality_expression shift to state 105
-- On conditional_expression shift to state 118
-- On compound_statement shift to state 292
-- On cast_expression shift to state 79
-- On assignment_expression shift to state 122
-- On and_expression shift to state 113
-- On additive_expression shift to state 90

State 255:
expression_statement -> SEMICOLON . [ WHILE TILDE SWITCH STRING_LITERAL STAR SIZEOF SEMICOLON RPAREN RETURN RBRACE PLUS MINUS LPAREN LBRACE INC_OP IF IDENTIFIER GOTO FOR ELSE DO DEFAULT DEC_OP CONTINUE CONSTANT CASE BREAK BANG AMPERSAND ]
-- On WHILE reduce production expression_statement -> SEMICOLON
-- On TILDE reduce production expression_statement -> SEMICOLON
-- On SWITCH reduce production expression_statement -> SEMICOLON
-- On STRING_LITERAL reduce production expression_statement -> SEMICOLON
-- On STAR reduce production expression_statement -> SEMICOLON
-- On SIZEOF reduce production expression_statement -> SEMICOLON
-- On SEMICOLON reduce production expression_statement -> SEMICOLON
-- On RPAREN reduce production expression_statement -> SEMICOLON
-- On RETURN reduce production expression_statement -> SEMICOLON
-- On RBRACE reduce production expression_statement -> SEMICOLON
-- On PLUS reduce production expression_statement -> SEMICOLON
-- On MINUS reduce production expression_statement -> SEMICOLON
-- On LPAREN reduce production expression_statement -> SEMICOLON
-- On LBRACE reduce production expression_statement -> SEMICOLON
-- On INC_OP reduce production expression_statement -> SEMICOLON
-- On IF reduce production expression_statement -> SEMICOLON
-- On IDENTIFIER reduce production expression_statement -> SEMICOLON
-- On GOTO reduce production expression_statement -> SEMICOLON
-- On FOR reduce production expression_statement -> SEMICOLON
-- On ELSE reduce production expression_statement -> SEMICOLON
-- On DO reduce production expression_statement -> SEMICOLON
-- On DEFAULT reduce production expression_statement -> SEMICOLON
-- On DEC_OP reduce production expression_statement -> SEMICOLON
-- On CONTINUE reduce production expression_statement -> SEMICOLON
-- On CONSTANT reduce production expression_statement -> SEMICOLON
-- On CASE reduce production expression_statement -> SEMICOLON
-- On BREAK reduce production expression_statement -> SEMICOLON
-- On BANG reduce production expression_statement -> SEMICOLON
-- On AMPERSAND reduce production expression_statement -> SEMICOLON

State 256:
jump_statement -> RETURN . SEMICOLON [ WHILE TILDE SWITCH STRING_LITERAL STAR SIZEOF SEMICOLON RETURN RBRACE PLUS MINUS LPAREN LBRACE INC_OP IF IDENTIFIER GOTO FOR ELSE DO DEFAULT DEC_OP CONTINUE CONSTANT CASE BREAK BANG AMPERSAND ]
jump_statement -> RETURN . expression SEMICOLON [ WHILE TILDE SWITCH STRING_LITERAL STAR SIZEOF SEMICOLON RETURN RBRACE PLUS MINUS LPAREN LBRACE INC_OP IF IDENTIFIER GOTO FOR ELSE DO DEFAULT DEC_OP CONTINUE CONSTANT CASE BREAK BANG AMPERSAND ]
-- On TILDE shift to state 34
-- On STRING_LITERAL shift to state 35
-- On STAR shift to state 36
-- On SIZEOF shift to state 37
-- On SEMICOLON shift to state 257
-- On PLUS shift to state 38
-- On MINUS shift to state 39
-- On LPAREN shift to state 41
-- On INC_OP shift to state 42
-- On IDENTIFIER shift to state 44
-- On DEC_OP shift to state 45
-- On CONSTANT shift to state 46
-- On BANG shift to state 47
-- On AMPERSAND shift to state 48
-- On unary_operator shift to state 49
-- On unary_expression shift to state 57
-- On shift_expression shift to state 70
-- On relational_expression shift to state 87
-- On primary_expression shift to state 51
-- On postfix_expression shift to state 52
-- On multiplicative_expression shift to state 72
-- On logical_or_expression shift to state 97
-- On logical_and_expression shift to state 99
-- On inclusive_or_expression shift to state 115
-- On expression shift to state 258
-- On exclusive_or_expression shift to state 114
-- On equality_expression shift to state 105
-- On conditional_expression shift to state 118
-- On cast_expression shift to state 79
-- On assignment_expression shift to state 122
-- On and_expression shift to state 113
-- On additive_expression shift to state 90

State 257:
jump_statement -> RETURN SEMICOLON . [ WHILE TILDE SWITCH STRING_LITERAL STAR SIZEOF SEMICOLON RETURN RBRACE PLUS MINUS LPAREN LBRACE INC_OP IF IDENTIFIER GOTO FOR ELSE DO DEFAULT DEC_OP CONTINUE CONSTANT CASE BREAK BANG AMPERSAND ]
-- On WHILE reduce production jump_statement -> RETURN SEMICOLON
-- On TILDE reduce production jump_statement -> RETURN SEMICOLON
-- On SWITCH reduce production jump_statement -> RETURN SEMICOLON
-- On STRING_LITERAL reduce production jump_statement -> RETURN SEMICOLON
-- On STAR reduce production jump_statement -> RETURN SEMICOLON
-- On SIZEOF reduce production jump_statement -> RETURN SEMICOLON
-- On SEMICOLON reduce production jump_statement -> RETURN SEMICOLON
-- On RETURN reduce production jump_statement -> RETURN SEMICOLON
-- On RBRACE reduce production jump_statement -> RETURN SEMICOLON
-- On PLUS reduce production jump_statement -> RETURN SEMICOLON
-- On MINUS reduce production jump_statement -> RETURN SEMICOLON
-- On LPAREN reduce production jump_statement -> RETURN SEMICOLON
-- On LBRACE reduce production jump_statement -> RETURN SEMICOLON
-- On INC_OP reduce production jump_statement -> RETURN SEMICOLON
-- On IF reduce production jump_statement -> RETURN SEMICOLON
-- On IDENTIFIER reduce production jump_statement -> RETURN SEMICOLON
-- On GOTO reduce production jump_statement -> RETURN SEMICOLON
-- On FOR reduce production jump_statement -> RETURN SEMICOLON
-- On ELSE reduce production jump_statement -> RETURN SEMICOLON
-- On DO reduce production jump_statement -> RETURN SEMICOLON
-- On DEFAULT reduce production jump_statement -> RETURN SEMICOLON
-- On DEC_OP reduce production jump_statement -> RETURN SEMICOLON
-- On CONTINUE reduce production jump_statement -> RETURN SEMICOLON
-- On CONSTANT reduce production jump_statement -> RETURN SEMICOLON
-- On CASE reduce production jump_statement -> RETURN SEMICOLON
-- On BREAK reduce production jump_statement -> RETURN SEMICOLON
-- On BANG reduce production jump_statement -> RETURN SEMICOLON
-- On AMPERSAND reduce production jump_statement -> RETURN SEMICOLON

State 258:
expression -> expression . COMMA assignment_expression [ SEMICOLON COMMA ]
jump_statement -> RETURN expression . SEMICOLON [ WHILE TILDE SWITCH STRING_LITERAL STAR SIZEOF SEMICOLON RETURN RBRACE PLUS MINUS LPAREN LBRACE INC_OP IF IDENTIFIER GOTO FOR ELSE DO DEFAULT DEC_OP CONTINUE CONSTANT CASE BREAK BANG AMPERSAND ]
-- On SEMICOLON shift to state 259
-- On COMMA shift to state 117

State 259:
jump_statement -> RETURN expression SEMICOLON . [ WHILE TILDE SWITCH STRING_LITERAL STAR SIZEOF SEMICOLON RETURN RBRACE PLUS MINUS LPAREN LBRACE INC_OP IF IDENTIFIER GOTO FOR ELSE DO DEFAULT DEC_OP CONTINUE CONSTANT CASE BREAK BANG AMPERSAND ]
-- On WHILE reduce production jump_statement -> RETURN expression SEMICOLON
-- On TILDE reduce production jump_statement -> RETURN expression SEMICOLON
-- On SWITCH reduce production jump_statement -> RETURN expression SEMICOLON
-- On STRING_LITERAL reduce production jump_statement -> RETURN expression SEMICOLON
-- On STAR reduce production jump_statement -> RETURN expression SEMICOLON
-- On SIZEOF reduce production jump_statement -> RETURN expression SEMICOLON
-- On SEMICOLON reduce production jump_statement -> RETURN expression SEMICOLON
-- On RETURN reduce production jump_statement -> RETURN expression SEMICOLON
-- On RBRACE reduce production jump_statement -> RETURN expression SEMICOLON
-- On PLUS reduce production jump_statement -> RETURN expression SEMICOLON
-- On MINUS reduce production jump_statement -> RETURN expression SEMICOLON
-- On LPAREN reduce production jump_statement -> RETURN expression SEMICOLON
-- On LBRACE reduce production jump_statement -> RETURN expression SEMICOLON
-- On INC_OP reduce production jump_statement -> RETURN expression SEMICOLON
-- On IF reduce production jump_statement -> RETURN expression SEMICOLON
-- On IDENTIFIER reduce production jump_statement -> RETURN expression SEMICOLON
-- On GOTO reduce production jump_statement -> RETURN expression SEMICOLON
-- On FOR reduce production jump_statement -> RETURN expression SEMICOLON
-- On ELSE reduce production jump_statement -> RETURN expression SEMICOLON
-- On DO reduce production jump_statement -> RETURN expression SEMICOLON
-- On DEFAULT reduce production jump_statement -> RETURN expression SEMICOLON
-- On DEC_OP reduce production jump_statement -> RETURN expression SEMICOLON
-- On CONTINUE reduce production jump_statement -> RETURN expression SEMICOLON
-- On CONSTANT reduce production jump_statement -> RETURN expression SEMICOLON
-- On CASE reduce production jump_statement -> RETURN expression SEMICOLON
-- On BREAK reduce production jump_statement -> RETURN expression SEMICOLON
-- On BANG reduce production jump_statement -> RETURN expression SEMICOLON
-- On AMPERSAND reduce production jump_statement -> RETURN expression SEMICOLON

State 260:
selection_statement -> IF . LPAREN expression RPAREN statement [ WHILE TILDE SWITCH STRING_LITERAL STAR SIZEOF SEMICOLON RETURN RBRACE PLUS MINUS LPAREN LBRACE INC_OP IF IDENTIFIER GOTO FOR ELSE DO DEFAULT DEC_OP CONTINUE CONSTANT CASE BREAK BANG AMPERSAND ]
selection_statement -> IF . LPAREN expression RPAREN statement ELSE statement [ WHILE TILDE SWITCH STRING_LITERAL STAR SIZEOF SEMICOLON RETURN RBRACE PLUS MINUS LPAREN LBRACE INC_OP IF IDENTIFIER GOTO FOR ELSE DO DEFAULT DEC_OP CONTINUE CONSTANT CASE BREAK BANG AMPERSAND ]
-- On LPAREN shift to state 261

State 261:
selection_statement -> IF LPAREN . expression RPAREN statement [ WHILE TILDE SWITCH STRING_LITERAL STAR SIZEOF SEMICOLON RETURN RBRACE PLUS MINUS LPAREN LBRACE INC_OP IF IDENTIFIER GOTO FOR ELSE DO DEFAULT DEC_OP CONTINUE CONSTANT CASE BREAK BANG AMPERSAND ]
selection_statement -> IF LPAREN . expression RPAREN statement ELSE statement [ WHILE TILDE SWITCH STRING_LITERAL STAR SIZEOF SEMICOLON RETURN RBRACE PLUS MINUS LPAREN LBRACE INC_OP IF IDENTIFIER GOTO FOR ELSE DO DEFAULT DEC_OP CONTINUE CONSTANT CASE BREAK BANG AMPERSAND ]
-- On TILDE shift to state 34
-- On STRING_LITERAL shift to state 35
-- On STAR shift to state 36
-- On SIZEOF shift to state 37
-- On PLUS shift to state 38
-- On MINUS shift to state 39
-- On LPAREN shift to state 41
-- On INC_OP shift to state 42
-- On IDENTIFIER shift to state 44
-- On DEC_OP shift to state 45
-- On CONSTANT shift to state 46
-- On BANG shift to state 47
-- On AMPERSAND shift to state 48
-- On unary_operator shift to state 49
-- On unary_expression shift to state 57
-- On shift_expression shift to state 70
-- On relational_expression shift to state 87
-- On primary_expression shift to state 51
-- On postfix_expression shift to state 52
-- On multiplicative_expression shift to state 72
-- On logical_or_expression shift to state 97
-- On logical_and_expression shift to state 99
-- On inclusive_or_expression shift to state 115
-- On expression shift to state 262
-- On exclusive_or_expression shift to state 114
-- On equality_expression shift to state 105
-- On conditional_expression shift to state 118
-- On cast_expression shift to state 79
-- On assignment_expression shift to state 122
-- On and_expression shift to state 113
-- On additive_expression shift to state 90

State 262:
expression -> expression . COMMA assignment_expression [ RPAREN COMMA ]
selection_statement -> IF LPAREN expression . RPAREN statement [ WHILE TILDE SWITCH STRING_LITERAL STAR SIZEOF SEMICOLON RETURN RBRACE PLUS MINUS LPAREN LBRACE INC_OP IF IDENTIFIER GOTO FOR ELSE DO DEFAULT DEC_OP CONTINUE CONSTANT CASE BREAK BANG AMPERSAND ]
selection_statement -> IF LPAREN expression . RPAREN statement ELSE statement [ WHILE TILDE SWITCH STRING_LITERAL STAR SIZEOF SEMICOLON RETURN RBRACE PLUS MINUS LPAREN LBRACE INC_OP IF IDENTIFIER GOTO FOR ELSE DO DEFAULT DEC_OP CONTINUE CONSTANT CASE BREAK BANG AMPERSAND ]
-- On RPAREN shift to state 263
-- On COMMA shift to state 117

State 263:
selection_statement -> IF LPAREN expression RPAREN . statement [ WHILE TILDE SWITCH STRING_LITERAL STAR SIZEOF SEMICOLON RETURN RBRACE PLUS MINUS LPAREN LBRACE INC_OP IF IDENTIFIER GOTO FOR ELSE DO DEFAULT DEC_OP CONTINUE CONSTANT CASE BREAK BANG AMPERSAND ]
selection_statement -> IF LPAREN expression RPAREN . statement ELSE statement [ WHILE TILDE SWITCH STRING_LITERAL STAR SIZEOF SEMICOLON RETURN RBRACE PLUS MINUS LPAREN LBRACE INC_OP IF IDENTIFIER GOTO FOR ELSE DO DEFAULT DEC_OP CONTINUE CONSTANT CASE BREAK BANG AMPERSAND ]
-- On WHILE shift to state 247
-- On TILDE shift to state 34
-- On SWITCH shift to state 251
-- On STRING_LITERAL shift to state 35
-- On STAR shift to state 36
-- On SIZEOF shift to state 37
-- On SEMICOLON shift to state 255
-- On RETURN shift to state 256
-- On PLUS shift to state 38
-- On MINUS shift to state 39
-- On LPAREN shift to state 41
-- On LBRACE shift to state 246
-- On INC_OP shift to state 42
-- On IF shift to state 260
-- On IDENTIFIER shift to state 264
-- On GOTO shift to state 266
-- On FOR shift to state 269
-- On DO shift to state 274
-- On DEFAULT shift to state 275
-- On DEC_OP shift to state 45
-- On CONTINUE shift to state 277
-- On CONSTANT shift to state 46
-- On CASE shift to state 279
-- On BREAK shift to state 282
-- On BANG shift to state 47
-- On AMPERSAND shift to state 48
-- On unary_operator shift to state 49
-- On unary_expression shift to state 57
-- On statement shift to state 305
-- On shift_expression shift to state 70
-- On selection_statement shift to state 285
-- On relational_expression shift to state 87
-- On primary_expression shift to state 51
-- On postfix_expression shift to state 52
-- On multiplicative_expression shift to state 72
-- On logical_or_expression shift to state 97
-- On logical_and_expression shift to state 99
-- On labeled_statement shift to state 286
-- On jump_statement shift to state 287
-- On iteration_statement shift to state 288
-- On inclusive_or_expression shift to state 115
-- On expression_statement shift to state 289
-- On expression shift to state 290
-- On exclusive_or_expression shift to state 114
-- On equality_expression shift to state 105
-- On conditional_expression shift to state 118
-- On compound_statement shift to state 292
-- On cast_expression shift to state 79
-- On assignment_expression shift to state 122
-- On and_expression shift to state 113
-- On additive_expression shift to state 90

State 264:
labeled_statement -> IDENTIFIER . COLON statement [ WHILE TILDE SWITCH STRING_LITERAL STAR SIZEOF SEMICOLON RETURN RBRACE PLUS MINUS LPAREN LBRACE INC_OP IF IDENTIFIER GOTO FOR ELSE DO DEFAULT DEC_OP CONTINUE CONSTANT CASE BREAK BANG AMPERSAND ]
primary_expression -> IDENTIFIER . [ XOR_ASSIGN SUB_ASSIGN STAR SLASH SEMICOLON RIGHT_OP RIGHT_ASSIGN QUESTION PTR_OP PLUS PERCENT OR_OP OR_ASSIGN NE_OP MUL_ASSIGN MOD_ASSIGN MINUS LT LPAREN LE_OP LEFT_OP LEFT_ASSIGN LBRACK INC_OP HAT GT GE_OP EQ_OP EQUAL DOT DIV_ASSIGN DEC_OP COMMA BAR AND_OP AND_ASSIGN AMPERSAND ADD_ASSIGN ]
-- On COLON shift to state 265
-- On XOR_ASSIGN reduce production primary_expression -> IDENTIFIER
-- On SUB_ASSIGN reduce production primary_expression -> IDENTIFIER
-- On STAR reduce production primary_expression -> IDENTIFIER
-- On SLASH reduce production primary_expression -> IDENTIFIER
-- On SEMICOLON reduce production primary_expression -> IDENTIFIER
-- On RIGHT_OP reduce production primary_expression -> IDENTIFIER
-- On RIGHT_ASSIGN reduce production primary_expression -> IDENTIFIER
-- On QUESTION reduce production primary_expression -> IDENTIFIER
-- On PTR_OP reduce production primary_expression -> IDENTIFIER
-- On PLUS reduce production primary_expression -> IDENTIFIER
-- On PERCENT reduce production primary_expression -> IDENTIFIER
-- On OR_OP reduce production primary_expression -> IDENTIFIER
-- On OR_ASSIGN reduce production primary_expression -> IDENTIFIER
-- On NE_OP reduce production primary_expression -> IDENTIFIER
-- On MUL_ASSIGN reduce production primary_expression -> IDENTIFIER
-- On MOD_ASSIGN reduce production primary_expression -> IDENTIFIER
-- On MINUS reduce production primary_expression -> IDENTIFIER
-- On LT reduce production primary_expression -> IDENTIFIER
-- On LPAREN reduce production primary_expression -> IDENTIFIER
-- On LE_OP reduce production primary_expression -> IDENTIFIER
-- On LEFT_OP reduce production primary_expression -> IDENTIFIER
-- On LEFT_ASSIGN reduce production primary_expression -> IDENTIFIER
-- On LBRACK reduce production primary_expression -> IDENTIFIER
-- On INC_OP reduce production primary_expression -> IDENTIFIER
-- On HAT reduce production primary_expression -> IDENTIFIER
-- On GT reduce production primary_expression -> IDENTIFIER
-- On GE_OP reduce production primary_expression -> IDENTIFIER
-- On EQ_OP reduce production primary_expression -> IDENTIFIER
-- On EQUAL reduce production primary_expression -> IDENTIFIER
-- On DOT reduce production primary_expression -> IDENTIFIER
-- On DIV_ASSIGN reduce production primary_expression -> IDENTIFIER
-- On DEC_OP reduce production primary_expression -> IDENTIFIER
-- On COMMA reduce production primary_expression -> IDENTIFIER
-- On BAR reduce production primary_expression -> IDENTIFIER
-- On AND_OP reduce production primary_expression -> IDENTIFIER
-- On AND_ASSIGN reduce production primary_expression -> IDENTIFIER
-- On AMPERSAND reduce production primary_expression -> IDENTIFIER
-- On ADD_ASSIGN reduce production primary_expression -> IDENTIFIER

State 265:
labeled_statement -> IDENTIFIER COLON . statement [ WHILE TILDE SWITCH STRING_LITERAL STAR SIZEOF SEMICOLON RETURN RBRACE PLUS MINUS LPAREN LBRACE INC_OP IF IDENTIFIER GOTO FOR ELSE DO DEFAULT DEC_OP CONTINUE CONSTANT CASE BREAK BANG AMPERSAND ]
-- On WHILE shift to state 247
-- On TILDE shift to state 34
-- On SWITCH shift to state 251
-- On STRING_LITERAL shift to state 35
-- On STAR shift to state 36
-- On SIZEOF shift to state 37
-- On SEMICOLON shift to state 255
-- On RETURN shift to state 256
-- On PLUS shift to state 38
-- On MINUS shift to state 39
-- On LPAREN shift to state 41
-- On LBRACE shift to state 246
-- On INC_OP shift to state 42
-- On IF shift to state 260
-- On IDENTIFIER shift to state 264
-- On GOTO shift to state 266
-- On FOR shift to state 269
-- On DO shift to state 274
-- On DEFAULT shift to state 275
-- On DEC_OP shift to state 45
-- On CONTINUE shift to state 277
-- On CONSTANT shift to state 46
-- On CASE shift to state 279
-- On BREAK shift to state 282
-- On BANG shift to state 47
-- On AMPERSAND shift to state 48
-- On unary_operator shift to state 49
-- On unary_expression shift to state 57
-- On statement shift to state 304
-- On shift_expression shift to state 70
-- On selection_statement shift to state 285
-- On relational_expression shift to state 87
-- On primary_expression shift to state 51
-- On postfix_expression shift to state 52
-- On multiplicative_expression shift to state 72
-- On logical_or_expression shift to state 97
-- On logical_and_expression shift to state 99
-- On labeled_statement shift to state 286
-- On jump_statement shift to state 287
-- On iteration_statement shift to state 288
-- On inclusive_or_expression shift to state 115
-- On expression_statement shift to state 289
-- On expression shift to state 290
-- On exclusive_or_expression shift to state 114
-- On equality_expression shift to state 105
-- On conditional_expression shift to state 118
-- On compound_statement shift to state 292
-- On cast_expression shift to state 79
-- On assignment_expression shift to state 122
-- On and_expression shift to state 113
-- On additive_expression shift to state 90

State 266:
jump_statement -> GOTO . IDENTIFIER SEMICOLON [ WHILE TILDE SWITCH STRING_LITERAL STAR SIZEOF SEMICOLON RETURN RBRACE PLUS MINUS LPAREN LBRACE INC_OP IF IDENTIFIER GOTO FOR ELSE DO DEFAULT DEC_OP CONTINUE CONSTANT CASE BREAK BANG AMPERSAND ]
-- On IDENTIFIER shift to state 267

State 267:
jump_statement -> GOTO IDENTIFIER . SEMICOLON [ WHILE TILDE SWITCH STRING_LITERAL STAR SIZEOF SEMICOLON RETURN RBRACE PLUS MINUS LPAREN LBRACE INC_OP IF IDENTIFIER GOTO FOR ELSE DO DEFAULT DEC_OP CONTINUE CONSTANT CASE BREAK BANG AMPERSAND ]
-- On SEMICOLON shift to state 268

State 268:
jump_statement -> GOTO IDENTIFIER SEMICOLON . [ WHILE TILDE SWITCH STRING_LITERAL STAR SIZEOF SEMICOLON RETURN RBRACE PLUS MINUS LPAREN LBRACE INC_OP IF IDENTIFIER GOTO FOR ELSE DO DEFAULT DEC_OP CONTINUE CONSTANT CASE BREAK BANG AMPERSAND ]
-- On WHILE reduce production jump_statement -> GOTO IDENTIFIER SEMICOLON
-- On TILDE reduce production jump_statement -> GOTO IDENTIFIER SEMICOLON
-- On SWITCH reduce production jump_statement -> GOTO IDENTIFIER SEMICOLON
-- On STRING_LITERAL reduce production jump_statement -> GOTO IDENTIFIER SEMICOLON
-- On STAR reduce production jump_statement -> GOTO IDENTIFIER SEMICOLON
-- On SIZEOF reduce production jump_statement -> GOTO IDENTIFIER SEMICOLON
-- On SEMICOLON reduce production jump_statement -> GOTO IDENTIFIER SEMICOLON
-- On RETURN reduce production jump_statement -> GOTO IDENTIFIER SEMICOLON
-- On RBRACE reduce production jump_statement -> GOTO IDENTIFIER SEMICOLON
-- On PLUS reduce production jump_statement -> GOTO IDENTIFIER SEMICOLON
-- On MINUS reduce production jump_statement -> GOTO IDENTIFIER SEMICOLON
-- On LPAREN reduce production jump_statement -> GOTO IDENTIFIER SEMICOLON
-- On LBRACE reduce production jump_statement -> GOTO IDENTIFIER SEMICOLON
-- On INC_OP reduce production jump_statement -> GOTO IDENTIFIER SEMICOLON
-- On IF reduce production jump_statement -> GOTO IDENTIFIER SEMICOLON
-- On IDENTIFIER reduce production jump_statement -> GOTO IDENTIFIER SEMICOLON
-- On GOTO reduce production jump_statement -> GOTO IDENTIFIER SEMICOLON
-- On FOR reduce production jump_statement -> GOTO IDENTIFIER SEMICOLON
-- On ELSE reduce production jump_statement -> GOTO IDENTIFIER SEMICOLON
-- On DO reduce production jump_statement -> GOTO IDENTIFIER SEMICOLON
-- On DEFAULT reduce production jump_statement -> GOTO IDENTIFIER SEMICOLON
-- On DEC_OP reduce production jump_statement -> GOTO IDENTIFIER SEMICOLON
-- On CONTINUE reduce production jump_statement -> GOTO IDENTIFIER SEMICOLON
-- On CONSTANT reduce production jump_statement -> GOTO IDENTIFIER SEMICOLON
-- On CASE reduce production jump_statement -> GOTO IDENTIFIER SEMICOLON
-- On BREAK reduce production jump_statement -> GOTO IDENTIFIER SEMICOLON
-- On BANG reduce production jump_statement -> GOTO IDENTIFIER SEMICOLON
-- On AMPERSAND reduce production jump_statement -> GOTO IDENTIFIER SEMICOLON

State 269:
iteration_statement -> FOR . LPAREN expression_statement expression_statement RPAREN statement [ WHILE TILDE SWITCH STRING_LITERAL STAR SIZEOF SEMICOLON RETURN RBRACE PLUS MINUS LPAREN LBRACE INC_OP IF IDENTIFIER GOTO FOR ELSE DO DEFAULT DEC_OP CONTINUE CONSTANT CASE BREAK BANG AMPERSAND ]
iteration_statement -> FOR . LPAREN expression_statement expression_statement expression RPAREN statement [ WHILE TILDE SWITCH STRING_LITERAL STAR SIZEOF SEMICOLON RETURN RBRACE PLUS MINUS LPAREN LBRACE INC_OP IF IDENTIFIER GOTO FOR ELSE DO DEFAULT DEC_OP CONTINUE CONSTANT CASE BREAK BANG AMPERSAND ]
-- On LPAREN shift to state 270

State 270:
iteration_statement -> FOR LPAREN . expression_statement expression_statement RPAREN statement [ WHILE TILDE SWITCH STRING_LITERAL STAR SIZEOF SEMICOLON RETURN RBRACE PLUS MINUS LPAREN LBRACE INC_OP IF IDENTIFIER GOTO FOR ELSE DO DEFAULT DEC_OP CONTINUE CONSTANT CASE BREAK BANG AMPERSAND ]
iteration_statement -> FOR LPAREN . expression_statement expression_statement expression RPAREN statement [ WHILE TILDE SWITCH STRING_LITERAL STAR SIZEOF SEMICOLON RETURN RBRACE PLUS MINUS LPAREN LBRACE INC_OP IF IDENTIFIER GOTO FOR ELSE DO DEFAULT DEC_OP CONTINUE CONSTANT CASE BREAK BANG AMPERSAND ]
-- On TILDE shift to state 34
-- On STRING_LITERAL shift to state 35
-- On STAR shift to state 36
-- On SIZEOF shift to state 37
-- On SEMICOLON shift to state 255
-- On PLUS shift to state 38
-- On MINUS shift to state 39
-- On LPAREN shift to state 41
-- On INC_OP shift to state 42
-- On IDENTIFIER shift to state 44
-- On DEC_OP shift to state 45
-- On CONSTANT shift to state 46
-- On BANG shift to state 47
-- On AMPERSAND shift to state 48
-- On unary_operator shift to state 49
-- On unary_expression shift to state 57
-- On shift_expression shift to state 70
-- On relational_expression shift to state 87
-- On primary_expression shift to state 51
-- On postfix_expression shift to state 52
-- On multiplicative_expression shift to state 72
-- On logical_or_expression shift to state 97
-- On logical_and_expression shift to state 99
-- On inclusive_or_expression shift to state 115
-- On expression_statement shift to state 271
-- On expression shift to state 290
-- On exclusive_or_expression shift to state 114
-- On equality_expression shift to state 105
-- On conditional_expression shift to state 118
-- On cast_expression shift to state 79
-- On assignment_expression shift to state 122
-- On and_expression shift to state 113
-- On additive_expression shift to state 90

State 271:
iteration_statement -> FOR LPAREN expression_statement . expression_statement RPAREN statement [ WHILE TILDE SWITCH STRING_LITERAL STAR SIZEOF SEMICOLON RETURN RBRACE PLUS MINUS LPAREN LBRACE INC_OP IF IDENTIFIER GOTO FOR ELSE DO DEFAULT DEC_OP CONTINUE CONSTANT CASE BREAK BANG AMPERSAND ]
iteration_statement -> FOR LPAREN expression_statement . expression_statement expression RPAREN statement [ WHILE TILDE SWITCH STRING_LITERAL STAR SIZEOF SEMICOLON RETURN RBRACE PLUS MINUS LPAREN LBRACE INC_OP IF IDENTIFIER GOTO FOR ELSE DO DEFAULT DEC_OP CONTINUE CONSTANT CASE BREAK BANG AMPERSAND ]
-- On TILDE shift to state 34
-- On STRING_LITERAL shift to state 35
-- On STAR shift to state 36
-- On SIZEOF shift to state 37
-- On SEMICOLON shift to state 255
-- On PLUS shift to state 38
-- On MINUS shift to state 39
-- On LPAREN shift to state 41
-- On INC_OP shift to state 42
-- On IDENTIFIER shift to state 44
-- On DEC_OP shift to state 45
-- On CONSTANT shift to state 46
-- On BANG shift to state 47
-- On AMPERSAND shift to state 48
-- On unary_operator shift to state 49
-- On unary_expression shift to state 57
-- On shift_expression shift to state 70
-- On relational_expression shift to state 87
-- On primary_expression shift to state 51
-- On postfix_expression shift to state 52
-- On multiplicative_expression shift to state 72
-- On logical_or_expression shift to state 97
-- On logical_and_expression shift to state 99
-- On inclusive_or_expression shift to state 115
-- On expression_statement shift to state 272
-- On expression shift to state 290
-- On exclusive_or_expression shift to state 114
-- On equality_expression shift to state 105
-- On conditional_expression shift to state 118
-- On cast_expression shift to state 79
-- On assignment_expression shift to state 122
-- On and_expression shift to state 113
-- On additive_expression shift to state 90

State 272:
iteration_statement -> FOR LPAREN expression_statement expression_statement . RPAREN statement [ WHILE TILDE SWITCH STRING_LITERAL STAR SIZEOF SEMICOLON RETURN RBRACE PLUS MINUS LPAREN LBRACE INC_OP IF IDENTIFIER GOTO FOR ELSE DO DEFAULT DEC_OP CONTINUE CONSTANT CASE BREAK BANG AMPERSAND ]
iteration_statement -> FOR LPAREN expression_statement expression_statement . expression RPAREN statement [ WHILE TILDE SWITCH STRING_LITERAL STAR SIZEOF SEMICOLON RETURN RBRACE PLUS MINUS LPAREN LBRACE INC_OP IF IDENTIFIER GOTO FOR ELSE DO DEFAULT DEC_OP CONTINUE CONSTANT CASE BREAK BANG AMPERSAND ]
-- On TILDE shift to state 34
-- On STRING_LITERAL shift to state 35
-- On STAR shift to state 36
-- On SIZEOF shift to state 37
-- On RPAREN shift to state 273
-- On PLUS shift to state 38
-- On MINUS shift to state 39
-- On LPAREN shift to state 41
-- On INC_OP shift to state 42
-- On IDENTIFIER shift to state 44
-- On DEC_OP shift to state 45
-- On CONSTANT shift to state 46
-- On BANG shift to state 47
-- On AMPERSAND shift to state 48
-- On unary_operator shift to state 49
-- On unary_expression shift to state 57
-- On shift_expression shift to state 70
-- On relational_expression shift to state 87
-- On primary_expression shift to state 51
-- On postfix_expression shift to state 52
-- On multiplicative_expression shift to state 72
-- On logical_or_expression shift to state 97
-- On logical_and_expression shift to state 99
-- On inclusive_or_expression shift to state 115
-- On expression shift to state 301
-- On exclusive_or_expression shift to state 114
-- On equality_expression shift to state 105
-- On conditional_expression shift to state 118
-- On cast_expression shift to state 79
-- On assignment_expression shift to state 122
-- On and_expression shift to state 113
-- On additive_expression shift to state 90

State 273:
iteration_statement -> FOR LPAREN expression_statement expression_statement RPAREN . statement [ WHILE TILDE SWITCH STRING_LITERAL STAR SIZEOF SEMICOLON RETURN RBRACE PLUS MINUS LPAREN LBRACE INC_OP IF IDENTIFIER GOTO FOR ELSE DO DEFAULT DEC_OP CONTINUE CONSTANT CASE BREAK BANG AMPERSAND ]
-- On WHILE shift to state 247
-- On TILDE shift to state 34
-- On SWITCH shift to state 251
-- On STRING_LITERAL shift to state 35
-- On STAR shift to state 36
-- On SIZEOF shift to state 37
-- On SEMICOLON shift to state 255
-- On RETURN shift to state 256
-- On PLUS shift to state 38
-- On MINUS shift to state 39
-- On LPAREN shift to state 41
-- On LBRACE shift to state 246
-- On INC_OP shift to state 42
-- On IF shift to state 260
-- On IDENTIFIER shift to state 264
-- On GOTO shift to state 266
-- On FOR shift to state 269
-- On DO shift to state 274
-- On DEFAULT shift to state 275
-- On DEC_OP shift to state 45
-- On CONTINUE shift to state 277
-- On CONSTANT shift to state 46
-- On CASE shift to state 279
-- On BREAK shift to state 282
-- On BANG shift to state 47
-- On AMPERSAND shift to state 48
-- On unary_operator shift to state 49
-- On unary_expression shift to state 57
-- On statement shift to state 300
-- On shift_expression shift to state 70
-- On selection_statement shift to state 285
-- On relational_expression shift to state 87
-- On primary_expression shift to state 51
-- On postfix_expression shift to state 52
-- On multiplicative_expression shift to state 72
-- On logical_or_expression shift to state 97
-- On logical_and_expression shift to state 99
-- On labeled_statement shift to state 286
-- On jump_statement shift to state 287
-- On iteration_statement shift to state 288
-- On inclusive_or_expression shift to state 115
-- On expression_statement shift to state 289
-- On expression shift to state 290
-- On exclusive_or_expression shift to state 114
-- On equality_expression shift to state 105
-- On conditional_expression shift to state 118
-- On compound_statement shift to state 292
-- On cast_expression shift to state 79
-- On assignment_expression shift to state 122
-- On and_expression shift to state 113
-- On additive_expression shift to state 90

State 274:
iteration_statement -> DO . statement WHILE LPAREN expression RPAREN SEMICOLON [ WHILE TILDE SWITCH STRING_LITERAL STAR SIZEOF SEMICOLON RETURN RBRACE PLUS MINUS LPAREN LBRACE INC_OP IF IDENTIFIER GOTO FOR ELSE DO DEFAULT DEC_OP CONTINUE CONSTANT CASE BREAK BANG AMPERSAND ]
-- On WHILE shift to state 247
-- On TILDE shift to state 34
-- On SWITCH shift to state 251
-- On STRING_LITERAL shift to state 35
-- On STAR shift to state 36
-- On SIZEOF shift to state 37
-- On SEMICOLON shift to state 255
-- On RETURN shift to state 256
-- On PLUS shift to state 38
-- On MINUS shift to state 39
-- On LPAREN shift to state 41
-- On LBRACE shift to state 246
-- On INC_OP shift to state 42
-- On IF shift to state 260
-- On IDENTIFIER shift to state 264
-- On GOTO shift to state 266
-- On FOR shift to state 269
-- On DO shift to state 274
-- On DEFAULT shift to state 275
-- On DEC_OP shift to state 45
-- On CONTINUE shift to state 277
-- On CONSTANT shift to state 46
-- On CASE shift to state 279
-- On BREAK shift to state 282
-- On BANG shift to state 47
-- On AMPERSAND shift to state 48
-- On unary_operator shift to state 49
-- On unary_expression shift to state 57
-- On statement shift to state 294
-- On shift_expression shift to state 70
-- On selection_statement shift to state 285
-- On relational_expression shift to state 87
-- On primary_expression shift to state 51
-- On postfix_expression shift to state 52
-- On multiplicative_expression shift to state 72
-- On logical_or_expression shift to state 97
-- On logical_and_expression shift to state 99
-- On labeled_statement shift to state 286
-- On jump_statement shift to state 287
-- On iteration_statement shift to state 288
-- On inclusive_or_expression shift to state 115
-- On expression_statement shift to state 289
-- On expression shift to state 290
-- On exclusive_or_expression shift to state 114
-- On equality_expression shift to state 105
-- On conditional_expression shift to state 118
-- On compound_statement shift to state 292
-- On cast_expression shift to state 79
-- On assignment_expression shift to state 122
-- On and_expression shift to state 113
-- On additive_expression shift to state 90

State 275:
labeled_statement -> DEFAULT . COLON statement [ WHILE TILDE SWITCH STRING_LITERAL STAR SIZEOF SEMICOLON RETURN RBRACE PLUS MINUS LPAREN LBRACE INC_OP IF IDENTIFIER GOTO FOR ELSE DO DEFAULT DEC_OP CONTINUE CONSTANT CASE BREAK BANG AMPERSAND ]
-- On COLON shift to state 276

State 276:
labeled_statement -> DEFAULT COLON . statement [ WHILE TILDE SWITCH STRING_LITERAL STAR SIZEOF SEMICOLON RETURN RBRACE PLUS MINUS LPAREN LBRACE INC_OP IF IDENTIFIER GOTO FOR ELSE DO DEFAULT DEC_OP CONTINUE CONSTANT CASE BREAK BANG AMPERSAND ]
-- On WHILE shift to state 247
-- On TILDE shift to state 34
-- On SWITCH shift to state 251
-- On STRING_LITERAL shift to state 35
-- On STAR shift to state 36
-- On SIZEOF shift to state 37
-- On SEMICOLON shift to state 255
-- On RETURN shift to state 256
-- On PLUS shift to state 38
-- On MINUS shift to state 39
-- On LPAREN shift to state 41
-- On LBRACE shift to state 246
-- On INC_OP shift to state 42
-- On IF shift to state 260
-- On IDENTIFIER shift to state 264
-- On GOTO shift to state 266
-- On FOR shift to state 269
-- On DO shift to state 274
-- On DEFAULT shift to state 275
-- On DEC_OP shift to state 45
-- On CONTINUE shift to state 277
-- On CONSTANT shift to state 46
-- On CASE shift to state 279
-- On BREAK shift to state 282
-- On BANG shift to state 47
-- On AMPERSAND shift to state 48
-- On unary_operator shift to state 49
-- On unary_expression shift to state 57
-- On statement shift to state 293
-- On shift_expression shift to state 70
-- On selection_statement shift to state 285
-- On relational_expression shift to state 87
-- On primary_expression shift to state 51
-- On postfix_expression shift to state 52
-- On multiplicative_expression shift to state 72
-- On logical_or_expression shift to state 97
-- On logical_and_expression shift to state 99
-- On labeled_statement shift to state 286
-- On jump_statement shift to state 287
-- On iteration_statement shift to state 288
-- On inclusive_or_expression shift to state 115
-- On expression_statement shift to state 289
-- On expression shift to state 290
-- On exclusive_or_expression shift to state 114
-- On equality_expression shift to state 105
-- On conditional_expression shift to state 118
-- On compound_statement shift to state 292
-- On cast_expression shift to state 79
-- On assignment_expression shift to state 122
-- On and_expression shift to state 113
-- On additive_expression shift to state 90

State 277:
jump_statement -> CONTINUE . SEMICOLON [ WHILE TILDE SWITCH STRING_LITERAL STAR SIZEOF SEMICOLON RETURN RBRACE PLUS MINUS LPAREN LBRACE INC_OP IF IDENTIFIER GOTO FOR ELSE DO DEFAULT DEC_OP CONTINUE CONSTANT CASE BREAK BANG AMPERSAND ]
-- On SEMICOLON shift to state 278

State 278:
jump_statement -> CONTINUE SEMICOLON . [ WHILE TILDE SWITCH STRING_LITERAL STAR SIZEOF SEMICOLON RETURN RBRACE PLUS MINUS LPAREN LBRACE INC_OP IF IDENTIFIER GOTO FOR ELSE DO DEFAULT DEC_OP CONTINUE CONSTANT CASE BREAK BANG AMPERSAND ]
-- On WHILE reduce production jump_statement -> CONTINUE SEMICOLON
-- On TILDE reduce production jump_statement -> CONTINUE SEMICOLON
-- On SWITCH reduce production jump_statement -> CONTINUE SEMICOLON
-- On STRING_LITERAL reduce production jump_statement -> CONTINUE SEMICOLON
-- On STAR reduce production jump_statement -> CONTINUE SEMICOLON
-- On SIZEOF reduce production jump_statement -> CONTINUE SEMICOLON
-- On SEMICOLON reduce production jump_statement -> CONTINUE SEMICOLON
-- On RETURN reduce production jump_statement -> CONTINUE SEMICOLON
-- On RBRACE reduce production jump_statement -> CONTINUE SEMICOLON
-- On PLUS reduce production jump_statement -> CONTINUE SEMICOLON
-- On MINUS reduce production jump_statement -> CONTINUE SEMICOLON
-- On LPAREN reduce production jump_statement -> CONTINUE SEMICOLON
-- On LBRACE reduce production jump_statement -> CONTINUE SEMICOLON
-- On INC_OP reduce production jump_statement -> CONTINUE SEMICOLON
-- On IF reduce production jump_statement -> CONTINUE SEMICOLON
-- On IDENTIFIER reduce production jump_statement -> CONTINUE SEMICOLON
-- On GOTO reduce production jump_statement -> CONTINUE SEMICOLON
-- On FOR reduce production jump_statement -> CONTINUE SEMICOLON
-- On ELSE reduce production jump_statement -> CONTINUE SEMICOLON
-- On DO reduce production jump_statement -> CONTINUE SEMICOLON
-- On DEFAULT reduce production jump_statement -> CONTINUE SEMICOLON
-- On DEC_OP reduce production jump_statement -> CONTINUE SEMICOLON
-- On CONTINUE reduce production jump_statement -> CONTINUE SEMICOLON
-- On CONSTANT reduce production jump_statement -> CONTINUE SEMICOLON
-- On CASE reduce production jump_statement -> CONTINUE SEMICOLON
-- On BREAK reduce production jump_statement -> CONTINUE SEMICOLON
-- On BANG reduce production jump_statement -> CONTINUE SEMICOLON
-- On AMPERSAND reduce production jump_statement -> CONTINUE SEMICOLON

State 279:
labeled_statement -> CASE . constant_expression COLON statement [ WHILE TILDE SWITCH STRING_LITERAL STAR SIZEOF SEMICOLON RETURN RBRACE PLUS MINUS LPAREN LBRACE INC_OP IF IDENTIFIER GOTO FOR ELSE DO DEFAULT DEC_OP CONTINUE CONSTANT CASE BREAK BANG AMPERSAND ]
-- On TILDE shift to state 34
-- On STRING_LITERAL shift to state 35
-- On STAR shift to state 36
-- On SIZEOF shift to state 37
-- On PLUS shift to state 38
-- On MINUS shift to state 39
-- On LPAREN shift to state 41
-- On INC_OP shift to state 42
-- On IDENTIFIER shift to state 44
-- On DEC_OP shift to state 45
-- On CONSTANT shift to state 46
-- On BANG shift to state 47
-- On AMPERSAND shift to state 48
-- On unary_operator shift to state 49
-- On unary_expression shift to state 50
-- On shift_expression shift to state 70
-- On relational_expression shift to state 87
-- On primary_expression shift to state 51
-- On postfix_expression shift to state 52
-- On multiplicative_expression shift to state 72
-- On logical_or_expression shift to state 97
-- On logical_and_expression shift to state 99
-- On inclusive_or_expression shift to state 115
-- On exclusive_or_expression shift to state 114
-- On equality_expression shift to state 105
-- On constant_expression shift to state 280
-- On conditional_expression shift to state 156
-- On cast_expression shift to state 79
-- On and_expression shift to state 113
-- On additive_expression shift to state 90

State 280:
labeled_statement -> CASE constant_expression . COLON statement [ WHILE TILDE SWITCH STRING_LITERAL STAR SIZEOF SEMICOLON RETURN RBRACE PLUS MINUS LPAREN LBRACE INC_OP IF IDENTIFIER GOTO FOR ELSE DO DEFAULT DEC_OP CONTINUE CONSTANT CASE BREAK BANG AMPERSAND ]
-- On COLON shift to state 281

State 281:
labeled_statement -> CASE constant_expression COLON . statement [ WHILE TILDE SWITCH STRING_LITERAL STAR SIZEOF SEMICOLON RETURN RBRACE PLUS MINUS LPAREN LBRACE INC_OP IF IDENTIFIER GOTO FOR ELSE DO DEFAULT DEC_OP CONTINUE CONSTANT CASE BREAK BANG AMPERSAND ]
-- On WHILE shift to state 247
-- On TILDE shift to state 34
-- On SWITCH shift to state 251
-- On STRING_LITERAL shift to state 35
-- On STAR shift to state 36
-- On SIZEOF shift to state 37
-- On SEMICOLON shift to state 255
-- On RETURN shift to state 256
-- On PLUS shift to state 38
-- On MINUS shift to state 39
-- On LPAREN shift to state 41
-- On LBRACE shift to state 246
-- On INC_OP shift to state 42
-- On IF shift to state 260
-- On IDENTIFIER shift to state 264
-- On GOTO shift to state 266
-- On FOR shift to state 269
-- On DO shift to state 274
-- On DEFAULT shift to state 275
-- On DEC_OP shift to state 45
-- On CONTINUE shift to state 277
-- On CONSTANT shift to state 46
-- On CASE shift to state 279
-- On BREAK shift to state 282
-- On BANG shift to state 47
-- On AMPERSAND shift to state 48
-- On unary_operator shift to state 49
-- On unary_expression shift to state 57
-- On statement shift to state 284
-- On shift_expression shift to state 70
-- On selection_statement shift to state 285
-- On relational_expression shift to state 87
-- On primary_expression shift to state 51
-- On postfix_expression shift to state 52
-- On multiplicative_expression shift to state 72
-- On logical_or_expression shift to state 97
-- On logical_and_expression shift to state 99
-- On labeled_statement shift to state 286
-- On jump_statement shift to state 287
-- On iteration_statement shift to state 288
-- On inclusive_or_expression shift to state 115
-- On expression_statement shift to state 289
-- On expression shift to state 290
-- On exclusive_or_expression shift to state 114
-- On equality_expression shift to state 105
-- On conditional_expression shift to state 118
-- On compound_statement shift to state 292
-- On cast_expression shift to state 79
-- On assignment_expression shift to state 122
-- On and_expression shift to state 113
-- On additive_expression shift to state 90

State 282:
jump_statement -> BREAK . SEMICOLON [ WHILE TILDE SWITCH STRING_LITERAL STAR SIZEOF SEMICOLON RETURN RBRACE PLUS MINUS LPAREN LBRACE INC_OP IF IDENTIFIER GOTO FOR ELSE DO DEFAULT DEC_OP CONTINUE CONSTANT CASE BREAK BANG AMPERSAND ]
-- On SEMICOLON shift to state 283

State 283:
jump_statement -> BREAK SEMICOLON . [ WHILE TILDE SWITCH STRING_LITERAL STAR SIZEOF SEMICOLON RETURN RBRACE PLUS MINUS LPAREN LBRACE INC_OP IF IDENTIFIER GOTO FOR ELSE DO DEFAULT DEC_OP CONTINUE CONSTANT CASE BREAK BANG AMPERSAND ]
-- On WHILE reduce production jump_statement -> BREAK SEMICOLON
-- On TILDE reduce production jump_statement -> BREAK SEMICOLON
-- On SWITCH reduce production jump_statement -> BREAK SEMICOLON
-- On STRING_LITERAL reduce production jump_statement -> BREAK SEMICOLON
-- On STAR reduce production jump_statement -> BREAK SEMICOLON
-- On SIZEOF reduce production jump_statement -> BREAK SEMICOLON
-- On SEMICOLON reduce production jump_statement -> BREAK SEMICOLON
-- On RETURN reduce production jump_statement -> BREAK SEMICOLON
-- On RBRACE reduce production jump_statement -> BREAK SEMICOLON
-- On PLUS reduce production jump_statement -> BREAK SEMICOLON
-- On MINUS reduce production jump_statement -> BREAK SEMICOLON
-- On LPAREN reduce production jump_statement -> BREAK SEMICOLON
-- On LBRACE reduce production jump_statement -> BREAK SEMICOLON
-- On INC_OP reduce production jump_statement -> BREAK SEMICOLON
-- On IF reduce production jump_statement -> BREAK SEMICOLON
-- On IDENTIFIER reduce production jump_statement -> BREAK SEMICOLON
-- On GOTO reduce production jump_statement -> BREAK SEMICOLON
-- On FOR reduce production jump_statement -> BREAK SEMICOLON
-- On ELSE reduce production jump_statement -> BREAK SEMICOLON
-- On DO reduce production jump_statement -> BREAK SEMICOLON
-- On DEFAULT reduce production jump_statement -> BREAK SEMICOLON
-- On DEC_OP reduce production jump_statement -> BREAK SEMICOLON
-- On CONTINUE reduce production jump_statement -> BREAK SEMICOLON
-- On CONSTANT reduce production jump_statement -> BREAK SEMICOLON
-- On CASE reduce production jump_statement -> BREAK SEMICOLON
-- On BREAK reduce production jump_statement -> BREAK SEMICOLON
-- On BANG reduce production jump_statement -> BREAK SEMICOLON
-- On AMPERSAND reduce production jump_statement -> BREAK SEMICOLON

State 284:
labeled_statement -> CASE constant_expression COLON statement . [ WHILE TILDE SWITCH STRING_LITERAL STAR SIZEOF SEMICOLON RETURN RBRACE PLUS MINUS LPAREN LBRACE INC_OP IF IDENTIFIER GOTO FOR ELSE DO DEFAULT DEC_OP CONTINUE CONSTANT CASE BREAK BANG AMPERSAND ]
-- On WHILE reduce production labeled_statement -> CASE constant_expression COLON statement
-- On TILDE reduce production labeled_statement -> CASE constant_expression COLON statement
-- On SWITCH reduce production labeled_statement -> CASE constant_expression COLON statement
-- On STRING_LITERAL reduce production labeled_statement -> CASE constant_expression COLON statement
-- On STAR reduce production labeled_statement -> CASE constant_expression COLON statement
-- On SIZEOF reduce production labeled_statement -> CASE constant_expression COLON statement
-- On SEMICOLON reduce production labeled_statement -> CASE constant_expression COLON statement
-- On RETURN reduce production labeled_statement -> CASE constant_expression COLON statement
-- On RBRACE reduce production labeled_statement -> CASE constant_expression COLON statement
-- On PLUS reduce production labeled_statement -> CASE constant_expression COLON statement
-- On MINUS reduce production labeled_statement -> CASE constant_expression COLON statement
-- On LPAREN reduce production labeled_statement -> CASE constant_expression COLON statement
-- On LBRACE reduce production labeled_statement -> CASE constant_expression COLON statement
-- On INC_OP reduce production labeled_statement -> CASE constant_expression COLON statement
-- On IF reduce production labeled_statement -> CASE constant_expression COLON statement
-- On IDENTIFIER reduce production labeled_statement -> CASE constant_expression COLON statement
-- On GOTO reduce production labeled_statement -> CASE constant_expression COLON statement
-- On FOR reduce production labeled_statement -> CASE constant_expression COLON statement
-- On ELSE reduce production labeled_statement -> CASE constant_expression COLON statement
-- On DO reduce production labeled_statement -> CASE constant_expression COLON statement
-- On DEFAULT reduce production labeled_statement -> CASE constant_expression COLON statement
-- On DEC_OP reduce production labeled_statement -> CASE constant_expression COLON statement
-- On CONTINUE reduce production labeled_statement -> CASE constant_expression COLON statement
-- On CONSTANT reduce production labeled_statement -> CASE constant_expression COLON statement
-- On CASE reduce production labeled_statement -> CASE constant_expression COLON statement
-- On BREAK reduce production labeled_statement -> CASE constant_expression COLON statement
-- On BANG reduce production labeled_statement -> CASE constant_expression COLON statement
-- On AMPERSAND reduce production labeled_statement -> CASE constant_expression COLON statement

State 285:
statement -> selection_statement . [ WHILE TILDE SWITCH STRING_LITERAL STAR SIZEOF SEMICOLON RETURN RBRACE PLUS MINUS LPAREN LBRACE INC_OP IF IDENTIFIER GOTO FOR ELSE DO DEFAULT DEC_OP CONTINUE CONSTANT CASE BREAK BANG AMPERSAND ]
-- On WHILE reduce production statement -> selection_statement
-- On TILDE reduce production statement -> selection_statement
-- On SWITCH reduce production statement -> selection_statement
-- On STRING_LITERAL reduce production statement -> selection_statement
-- On STAR reduce production statement -> selection_statement
-- On SIZEOF reduce production statement -> selection_statement
-- On SEMICOLON reduce production statement -> selection_statement
-- On RETURN reduce production statement -> selection_statement
-- On RBRACE reduce production statement -> selection_statement
-- On PLUS reduce production statement -> selection_statement
-- On MINUS reduce production statement -> selection_statement
-- On LPAREN reduce production statement -> selection_statement
-- On LBRACE reduce production statement -> selection_statement
-- On INC_OP reduce production statement -> selection_statement
-- On IF reduce production statement -> selection_statement
-- On IDENTIFIER reduce production statement -> selection_statement
-- On GOTO reduce production statement -> selection_statement
-- On FOR reduce production statement -> selection_statement
-- On ELSE reduce production statement -> selection_statement
-- On DO reduce production statement -> selection_statement
-- On DEFAULT reduce production statement -> selection_statement
-- On DEC_OP reduce production statement -> selection_statement
-- On CONTINUE reduce production statement -> selection_statement
-- On CONSTANT reduce production statement -> selection_statement
-- On CASE reduce production statement -> selection_statement
-- On BREAK reduce production statement -> selection_statement
-- On BANG reduce production statement -> selection_statement
-- On AMPERSAND reduce production statement -> selection_statement

State 286:
statement -> labeled_statement . [ WHILE TILDE SWITCH STRING_LITERAL STAR SIZEOF SEMICOLON RETURN RBRACE PLUS MINUS LPAREN LBRACE INC_OP IF IDENTIFIER GOTO FOR ELSE DO DEFAULT DEC_OP CONTINUE CONSTANT CASE BREAK BANG AMPERSAND ]
-- On WHILE reduce production statement -> labeled_statement
-- On TILDE reduce production statement -> labeled_statement
-- On SWITCH reduce production statement -> labeled_statement
-- On STRING_LITERAL reduce production statement -> labeled_statement
-- On STAR reduce production statement -> labeled_statement
-- On SIZEOF reduce production statement -> labeled_statement
-- On SEMICOLON reduce production statement -> labeled_statement
-- On RETURN reduce production statement -> labeled_statement
-- On RBRACE reduce production statement -> labeled_statement
-- On PLUS reduce production statement -> labeled_statement
-- On MINUS reduce production statement -> labeled_statement
-- On LPAREN reduce production statement -> labeled_statement
-- On LBRACE reduce production statement -> labeled_statement
-- On INC_OP reduce production statement -> labeled_statement
-- On IF reduce production statement -> labeled_statement
-- On IDENTIFIER reduce production statement -> labeled_statement
-- On GOTO reduce production statement -> labeled_statement
-- On FOR reduce production statement -> labeled_statement
-- On ELSE reduce production statement -> labeled_statement
-- On DO reduce production statement -> labeled_statement
-- On DEFAULT reduce production statement -> labeled_statement
-- On DEC_OP reduce production statement -> labeled_statement
-- On CONTINUE reduce production statement -> labeled_statement
-- On CONSTANT reduce production statement -> labeled_statement
-- On CASE reduce production statement -> labeled_statement
-- On BREAK reduce production statement -> labeled_statement
-- On BANG reduce production statement -> labeled_statement
-- On AMPERSAND reduce production statement -> labeled_statement

State 287:
statement -> jump_statement . [ WHILE TILDE SWITCH STRING_LITERAL STAR SIZEOF SEMICOLON RETURN RBRACE PLUS MINUS LPAREN LBRACE INC_OP IF IDENTIFIER GOTO FOR ELSE DO DEFAULT DEC_OP CONTINUE CONSTANT CASE BREAK BANG AMPERSAND ]
-- On WHILE reduce production statement -> jump_statement
-- On TILDE reduce production statement -> jump_statement
-- On SWITCH reduce production statement -> jump_statement
-- On STRING_LITERAL reduce production statement -> jump_statement
-- On STAR reduce production statement -> jump_statement
-- On SIZEOF reduce production statement -> jump_statement
-- On SEMICOLON reduce production statement -> jump_statement
-- On RETURN reduce production statement -> jump_statement
-- On RBRACE reduce production statement -> jump_statement
-- On PLUS reduce production statement -> jump_statement
-- On MINUS reduce production statement -> jump_statement
-- On LPAREN reduce production statement -> jump_statement
-- On LBRACE reduce production statement -> jump_statement
-- On INC_OP reduce production statement -> jump_statement
-- On IF reduce production statement -> jump_statement
-- On IDENTIFIER reduce production statement -> jump_statement
-- On GOTO reduce production statement -> jump_statement
-- On FOR reduce production statement -> jump_statement
-- On ELSE reduce production statement -> jump_statement
-- On DO reduce production statement -> jump_statement
-- On DEFAULT reduce production statement -> jump_statement
-- On DEC_OP reduce production statement -> jump_statement
-- On CONTINUE reduce production statement -> jump_statement
-- On CONSTANT reduce production statement -> jump_statement
-- On CASE reduce production statement -> jump_statement
-- On BREAK reduce production statement -> jump_statement
-- On BANG reduce production statement -> jump_statement
-- On AMPERSAND reduce production statement -> jump_statement

State 288:
statement -> iteration_statement . [ WHILE TILDE SWITCH STRING_LITERAL STAR SIZEOF SEMICOLON RETURN RBRACE PLUS MINUS LPAREN LBRACE INC_OP IF IDENTIFIER GOTO FOR ELSE DO DEFAULT DEC_OP CONTINUE CONSTANT CASE BREAK BANG AMPERSAND ]
-- On WHILE reduce production statement -> iteration_statement
-- On TILDE reduce production statement -> iteration_statement
-- On SWITCH reduce production statement -> iteration_statement
-- On STRING_LITERAL reduce production statement -> iteration_statement
-- On STAR reduce production statement -> iteration_statement
-- On SIZEOF reduce production statement -> iteration_statement
-- On SEMICOLON reduce production statement -> iteration_statement
-- On RETURN reduce production statement -> iteration_statement
-- On RBRACE reduce production statement -> iteration_statement
-- On PLUS reduce production statement -> iteration_statement
-- On MINUS reduce production statement -> iteration_statement
-- On LPAREN reduce production statement -> iteration_statement
-- On LBRACE reduce production statement -> iteration_statement
-- On INC_OP reduce production statement -> iteration_statement
-- On IF reduce production statement -> iteration_statement
-- On IDENTIFIER reduce production statement -> iteration_statement
-- On GOTO reduce production statement -> iteration_statement
-- On FOR reduce production statement -> iteration_statement
-- On ELSE reduce production statement -> iteration_statement
-- On DO reduce production statement -> iteration_statement
-- On DEFAULT reduce production statement -> iteration_statement
-- On DEC_OP reduce production statement -> iteration_statement
-- On CONTINUE reduce production statement -> iteration_statement
-- On CONSTANT reduce production statement -> iteration_statement
-- On CASE reduce production statement -> iteration_statement
-- On BREAK reduce production statement -> iteration_statement
-- On BANG reduce production statement -> iteration_statement
-- On AMPERSAND reduce production statement -> iteration_statement

State 289:
statement -> expression_statement . [ WHILE TILDE SWITCH STRING_LITERAL STAR SIZEOF SEMICOLON RETURN RBRACE PLUS MINUS LPAREN LBRACE INC_OP IF IDENTIFIER GOTO FOR ELSE DO DEFAULT DEC_OP CONTINUE CONSTANT CASE BREAK BANG AMPERSAND ]
-- On WHILE reduce production statement -> expression_statement
-- On TILDE reduce production statement -> expression_statement
-- On SWITCH reduce production statement -> expression_statement
-- On STRING_LITERAL reduce production statement -> expression_statement
-- On STAR reduce production statement -> expression_statement
-- On SIZEOF reduce production statement -> expression_statement
-- On SEMICOLON reduce production statement -> expression_statement
-- On RETURN reduce production statement -> expression_statement
-- On RBRACE reduce production statement -> expression_statement
-- On PLUS reduce production statement -> expression_statement
-- On MINUS reduce production statement -> expression_statement
-- On LPAREN reduce production statement -> expression_statement
-- On LBRACE reduce production statement -> expression_statement
-- On INC_OP reduce production statement -> expression_statement
-- On IF reduce production statement -> expression_statement
-- On IDENTIFIER reduce production statement -> expression_statement
-- On GOTO reduce production statement -> expression_statement
-- On FOR reduce production statement -> expression_statement
-- On ELSE reduce production statement -> expression_statement
-- On DO reduce production statement -> expression_statement
-- On DEFAULT reduce production statement -> expression_statement
-- On DEC_OP reduce production statement -> expression_statement
-- On CONTINUE reduce production statement -> expression_statement
-- On CONSTANT reduce production statement -> expression_statement
-- On CASE reduce production statement -> expression_statement
-- On BREAK reduce production statement -> expression_statement
-- On BANG reduce production statement -> expression_statement
-- On AMPERSAND reduce production statement -> expression_statement

State 290:
expression -> expression . COMMA assignment_expression [ SEMICOLON COMMA ]
expression_statement -> expression . SEMICOLON [ WHILE TILDE SWITCH STRING_LITERAL STAR SIZEOF SEMICOLON RPAREN RETURN RBRACE PLUS MINUS LPAREN LBRACE INC_OP IF IDENTIFIER GOTO FOR ELSE DO DEFAULT DEC_OP CONTINUE CONSTANT CASE BREAK BANG AMPERSAND ]
-- On SEMICOLON shift to state 291
-- On COMMA shift to state 117

State 291:
expression_statement -> expression SEMICOLON . [ WHILE TILDE SWITCH STRING_LITERAL STAR SIZEOF SEMICOLON RPAREN RETURN RBRACE PLUS MINUS LPAREN LBRACE INC_OP IF IDENTIFIER GOTO FOR ELSE DO DEFAULT DEC_OP CONTINUE CONSTANT CASE BREAK BANG AMPERSAND ]
-- On WHILE reduce production expression_statement -> expression SEMICOLON
-- On TILDE reduce production expression_statement -> expression SEMICOLON
-- On SWITCH reduce production expression_statement -> expression SEMICOLON
-- On STRING_LITERAL reduce production expression_statement -> expression SEMICOLON
-- On STAR reduce production expression_statement -> expression SEMICOLON
-- On SIZEOF reduce production expression_statement -> expression SEMICOLON
-- On SEMICOLON reduce production expression_statement -> expression SEMICOLON
-- On RPAREN reduce production expression_statement -> expression SEMICOLON
-- On RETURN reduce production expression_statement -> expression SEMICOLON
-- On RBRACE reduce production expression_statement -> expression SEMICOLON
-- On PLUS reduce production expression_statement -> expression SEMICOLON
-- On MINUS reduce production expression_statement -> expression SEMICOLON
-- On LPAREN reduce production expression_statement -> expression SEMICOLON
-- On LBRACE reduce production expression_statement -> expression SEMICOLON
-- On INC_OP reduce production expression_statement -> expression SEMICOLON
-- On IF reduce production expression_statement -> expression SEMICOLON
-- On IDENTIFIER reduce production expression_statement -> expression SEMICOLON
-- On GOTO reduce production expression_statement -> expression SEMICOLON
-- On FOR reduce production expression_statement -> expression SEMICOLON
-- On ELSE reduce production expression_statement -> expression SEMICOLON
-- On DO reduce production expression_statement -> expression SEMICOLON
-- On DEFAULT reduce production expression_statement -> expression SEMICOLON
-- On DEC_OP reduce production expression_statement -> expression SEMICOLON
-- On CONTINUE reduce production expression_statement -> expression SEMICOLON
-- On CONSTANT reduce production expression_statement -> expression SEMICOLON
-- On CASE reduce production expression_statement -> expression SEMICOLON
-- On BREAK reduce production expression_statement -> expression SEMICOLON
-- On BANG reduce production expression_statement -> expression SEMICOLON
-- On AMPERSAND reduce production expression_statement -> expression SEMICOLON

State 292:
statement -> compound_statement . [ WHILE TILDE SWITCH STRING_LITERAL STAR SIZEOF SEMICOLON RETURN RBRACE PLUS MINUS LPAREN LBRACE INC_OP IF IDENTIFIER GOTO FOR ELSE DO DEFAULT DEC_OP CONTINUE CONSTANT CASE BREAK BANG AMPERSAND ]
-- On WHILE reduce production statement -> compound_statement
-- On TILDE reduce production statement -> compound_statement
-- On SWITCH reduce production statement -> compound_statement
-- On STRING_LITERAL reduce production statement -> compound_statement
-- On STAR reduce production statement -> compound_statement
-- On SIZEOF reduce production statement -> compound_statement
-- On SEMICOLON reduce production statement -> compound_statement
-- On RETURN reduce production statement -> compound_statement
-- On RBRACE reduce production statement -> compound_statement
-- On PLUS reduce production statement -> compound_statement
-- On MINUS reduce production statement -> compound_statement
-- On LPAREN reduce production statement -> compound_statement
-- On LBRACE reduce production statement -> compound_statement
-- On INC_OP reduce production statement -> compound_statement
-- On IF reduce production statement -> compound_statement
-- On IDENTIFIER reduce production statement -> compound_statement
-- On GOTO reduce production statement -> compound_statement
-- On FOR reduce production statement -> compound_statement
-- On ELSE reduce production statement -> compound_statement
-- On DO reduce production statement -> compound_statement
-- On DEFAULT reduce production statement -> compound_statement
-- On DEC_OP reduce production statement -> compound_statement
-- On CONTINUE reduce production statement -> compound_statement
-- On CONSTANT reduce production statement -> compound_statement
-- On CASE reduce production statement -> compound_statement
-- On BREAK reduce production statement -> compound_statement
-- On BANG reduce production statement -> compound_statement
-- On AMPERSAND reduce production statement -> compound_statement

State 293:
labeled_statement -> DEFAULT COLON statement . [ WHILE TILDE SWITCH STRING_LITERAL STAR SIZEOF SEMICOLON RETURN RBRACE PLUS MINUS LPAREN LBRACE INC_OP IF IDENTIFIER GOTO FOR ELSE DO DEFAULT DEC_OP CONTINUE CONSTANT CASE BREAK BANG AMPERSAND ]
-- On WHILE reduce production labeled_statement -> DEFAULT COLON statement
-- On TILDE reduce production labeled_statement -> DEFAULT COLON statement
-- On SWITCH reduce production labeled_statement -> DEFAULT COLON statement
-- On STRING_LITERAL reduce production labeled_statement -> DEFAULT COLON statement
-- On STAR reduce production labeled_statement -> DEFAULT COLON statement
-- On SIZEOF reduce production labeled_statement -> DEFAULT COLON statement
-- On SEMICOLON reduce production labeled_statement -> DEFAULT COLON statement
-- On RETURN reduce production labeled_statement -> DEFAULT COLON statement
-- On RBRACE reduce production labeled_statement -> DEFAULT COLON statement
-- On PLUS reduce production labeled_statement -> DEFAULT COLON statement
-- On MINUS reduce production labeled_statement -> DEFAULT COLON statement
-- On LPAREN reduce production labeled_statement -> DEFAULT COLON statement
-- On LBRACE reduce production labeled_statement -> DEFAULT COLON statement
-- On INC_OP reduce production labeled_statement -> DEFAULT COLON statement
-- On IF reduce production labeled_statement -> DEFAULT COLON statement
-- On IDENTIFIER reduce production labeled_statement -> DEFAULT COLON statement
-- On GOTO reduce production labeled_statement -> DEFAULT COLON statement
-- On FOR reduce production labeled_statement -> DEFAULT COLON statement
-- On ELSE reduce production labeled_statement -> DEFAULT COLON statement
-- On DO reduce production labeled_statement -> DEFAULT COLON statement
-- On DEFAULT reduce production labeled_statement -> DEFAULT COLON statement
-- On DEC_OP reduce production labeled_statement -> DEFAULT COLON statement
-- On CONTINUE reduce production labeled_statement -> DEFAULT COLON statement
-- On CONSTANT reduce production labeled_statement -> DEFAULT COLON statement
-- On CASE reduce production labeled_statement -> DEFAULT COLON statement
-- On BREAK reduce production labeled_statement -> DEFAULT COLON statement
-- On BANG reduce production labeled_statement -> DEFAULT COLON statement
-- On AMPERSAND reduce production labeled_statement -> DEFAULT COLON statement

State 294:
iteration_statement -> DO statement . WHILE LPAREN expression RPAREN SEMICOLON [ WHILE TILDE SWITCH STRING_LITERAL STAR SIZEOF SEMICOLON RETURN RBRACE PLUS MINUS LPAREN LBRACE INC_OP IF IDENTIFIER GOTO FOR ELSE DO DEFAULT DEC_OP CONTINUE CONSTANT CASE BREAK BANG AMPERSAND ]
-- On WHILE shift to state 295

State 295:
iteration_statement -> DO statement WHILE . LPAREN expression RPAREN SEMICOLON [ WHILE TILDE SWITCH STRING_LITERAL STAR SIZEOF SEMICOLON RETURN RBRACE PLUS MINUS LPAREN LBRACE INC_OP IF IDENTIFIER GOTO FOR ELSE DO DEFAULT DEC_OP CONTINUE CONSTANT CASE BREAK BANG AMPERSAND ]
-- On LPAREN shift to state 296

State 296:
iteration_statement -> DO statement WHILE LPAREN . expression RPAREN SEMICOLON [ WHILE TILDE SWITCH STRING_LITERAL STAR SIZEOF SEMICOLON RETURN RBRACE PLUS MINUS LPAREN LBRACE INC_OP IF IDENTIFIER GOTO FOR ELSE DO DEFAULT DEC_OP CONTINUE CONSTANT CASE BREAK BANG AMPERSAND ]
-- On TILDE shift to state 34
-- On STRING_LITERAL shift to state 35
-- On STAR shift to state 36
-- On SIZEOF shift to state 37
-- On PLUS shift to state 38
-- On MINUS shift to state 39
-- On LPAREN shift to state 41
-- On INC_OP shift to state 42
-- On IDENTIFIER shift to state 44
-- On DEC_OP shift to state 45
-- On CONSTANT shift to state 46
-- On BANG shift to state 47
-- On AMPERSAND shift to state 48
-- On unary_operator shift to state 49
-- On unary_expression shift to state 57
-- On shift_expression shift to state 70
-- On relational_expression shift to state 87
-- On primary_expression shift to state 51
-- On postfix_expression shift to state 52
-- On multiplicative_expression shift to state 72
-- On logical_or_expression shift to state 97
-- On logical_and_expression shift to state 99
-- On inclusive_or_expression shift to state 115
-- On expression shift to state 297
-- On exclusive_or_expression shift to state 114
-- On equality_expression shift to state 105
-- On conditional_expression shift to state 118
-- On cast_expression shift to state 79
-- On assignment_expression shift to state 122
-- On and_expression shift to state 113
-- On additive_expression shift to state 90

State 297:
expression -> expression . COMMA assignment_expression [ RPAREN COMMA ]
iteration_statement -> DO statement WHILE LPAREN expression . RPAREN SEMICOLON [ WHILE TILDE SWITCH STRING_LITERAL STAR SIZEOF SEMICOLON RETURN RBRACE PLUS MINUS LPAREN LBRACE INC_OP IF IDENTIFIER GOTO FOR ELSE DO DEFAULT DEC_OP CONTINUE CONSTANT CASE BREAK BANG AMPERSAND ]
-- On RPAREN shift to state 298
-- On COMMA shift to state 117

State 298:
iteration_statement -> DO statement WHILE LPAREN expression RPAREN . SEMICOLON [ WHILE TILDE SWITCH STRING_LITERAL STAR SIZEOF SEMICOLON RETURN RBRACE PLUS MINUS LPAREN LBRACE INC_OP IF IDENTIFIER GOTO FOR ELSE DO DEFAULT DEC_OP CONTINUE CONSTANT CASE BREAK BANG AMPERSAND ]
-- On SEMICOLON shift to state 299

State 299:
iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMICOLON . [ WHILE TILDE SWITCH STRING_LITERAL STAR SIZEOF SEMICOLON RETURN RBRACE PLUS MINUS LPAREN LBRACE INC_OP IF IDENTIFIER GOTO FOR ELSE DO DEFAULT DEC_OP CONTINUE CONSTANT CASE BREAK BANG AMPERSAND ]
-- On WHILE reduce production iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMICOLON
-- On TILDE reduce production iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMICOLON
-- On SWITCH reduce production iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMICOLON
-- On STRING_LITERAL reduce production iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMICOLON
-- On STAR reduce production iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMICOLON
-- On SIZEOF reduce production iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMICOLON
-- On SEMICOLON reduce production iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMICOLON
-- On RETURN reduce production iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMICOLON
-- On RBRACE reduce production iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMICOLON
-- On PLUS reduce production iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMICOLON
-- On MINUS reduce production iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMICOLON
-- On LPAREN reduce production iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMICOLON
-- On LBRACE reduce production iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMICOLON
-- On INC_OP reduce production iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMICOLON
-- On IF reduce production iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMICOLON
-- On IDENTIFIER reduce production iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMICOLON
-- On GOTO reduce production iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMICOLON
-- On FOR reduce production iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMICOLON
-- On ELSE reduce production iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMICOLON
-- On DO reduce production iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMICOLON
-- On DEFAULT reduce production iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMICOLON
-- On DEC_OP reduce production iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMICOLON
-- On CONTINUE reduce production iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMICOLON
-- On CONSTANT reduce production iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMICOLON
-- On CASE reduce production iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMICOLON
-- On BREAK reduce production iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMICOLON
-- On BANG reduce production iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMICOLON
-- On AMPERSAND reduce production iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMICOLON

State 300:
iteration_statement -> FOR LPAREN expression_statement expression_statement RPAREN statement . [ WHILE TILDE SWITCH STRING_LITERAL STAR SIZEOF SEMICOLON RETURN RBRACE PLUS MINUS LPAREN LBRACE INC_OP IF IDENTIFIER GOTO FOR ELSE DO DEFAULT DEC_OP CONTINUE CONSTANT CASE BREAK BANG AMPERSAND ]
-- On WHILE reduce production iteration_statement -> FOR LPAREN expression_statement expression_statement RPAREN statement
-- On TILDE reduce production iteration_statement -> FOR LPAREN expression_statement expression_statement RPAREN statement
-- On SWITCH reduce production iteration_statement -> FOR LPAREN expression_statement expression_statement RPAREN statement
-- On STRING_LITERAL reduce production iteration_statement -> FOR LPAREN expression_statement expression_statement RPAREN statement
-- On STAR reduce production iteration_statement -> FOR LPAREN expression_statement expression_statement RPAREN statement
-- On SIZEOF reduce production iteration_statement -> FOR LPAREN expression_statement expression_statement RPAREN statement
-- On SEMICOLON reduce production iteration_statement -> FOR LPAREN expression_statement expression_statement RPAREN statement
-- On RETURN reduce production iteration_statement -> FOR LPAREN expression_statement expression_statement RPAREN statement
-- On RBRACE reduce production iteration_statement -> FOR LPAREN expression_statement expression_statement RPAREN statement
-- On PLUS reduce production iteration_statement -> FOR LPAREN expression_statement expression_statement RPAREN statement
-- On MINUS reduce production iteration_statement -> FOR LPAREN expression_statement expression_statement RPAREN statement
-- On LPAREN reduce production iteration_statement -> FOR LPAREN expression_statement expression_statement RPAREN statement
-- On LBRACE reduce production iteration_statement -> FOR LPAREN expression_statement expression_statement RPAREN statement
-- On INC_OP reduce production iteration_statement -> FOR LPAREN expression_statement expression_statement RPAREN statement
-- On IF reduce production iteration_statement -> FOR LPAREN expression_statement expression_statement RPAREN statement
-- On IDENTIFIER reduce production iteration_statement -> FOR LPAREN expression_statement expression_statement RPAREN statement
-- On GOTO reduce production iteration_statement -> FOR LPAREN expression_statement expression_statement RPAREN statement
-- On FOR reduce production iteration_statement -> FOR LPAREN expression_statement expression_statement RPAREN statement
-- On ELSE reduce production iteration_statement -> FOR LPAREN expression_statement expression_statement RPAREN statement
-- On DO reduce production iteration_statement -> FOR LPAREN expression_statement expression_statement RPAREN statement
-- On DEFAULT reduce production iteration_statement -> FOR LPAREN expression_statement expression_statement RPAREN statement
-- On DEC_OP reduce production iteration_statement -> FOR LPAREN expression_statement expression_statement RPAREN statement
-- On CONTINUE reduce production iteration_statement -> FOR LPAREN expression_statement expression_statement RPAREN statement
-- On CONSTANT reduce production iteration_statement -> FOR LPAREN expression_statement expression_statement RPAREN statement
-- On CASE reduce production iteration_statement -> FOR LPAREN expression_statement expression_statement RPAREN statement
-- On BREAK reduce production iteration_statement -> FOR LPAREN expression_statement expression_statement RPAREN statement
-- On BANG reduce production iteration_statement -> FOR LPAREN expression_statement expression_statement RPAREN statement
-- On AMPERSAND reduce production iteration_statement -> FOR LPAREN expression_statement expression_statement RPAREN statement

State 301:
expression -> expression . COMMA assignment_expression [ RPAREN COMMA ]
iteration_statement -> FOR LPAREN expression_statement expression_statement expression . RPAREN statement [ WHILE TILDE SWITCH STRING_LITERAL STAR SIZEOF SEMICOLON RETURN RBRACE PLUS MINUS LPAREN LBRACE INC_OP IF IDENTIFIER GOTO FOR ELSE DO DEFAULT DEC_OP CONTINUE CONSTANT CASE BREAK BANG AMPERSAND ]
-- On RPAREN shift to state 302
-- On COMMA shift to state 117

State 302:
iteration_statement -> FOR LPAREN expression_statement expression_statement expression RPAREN . statement [ WHILE TILDE SWITCH STRING_LITERAL STAR SIZEOF SEMICOLON RETURN RBRACE PLUS MINUS LPAREN LBRACE INC_OP IF IDENTIFIER GOTO FOR ELSE DO DEFAULT DEC_OP CONTINUE CONSTANT CASE BREAK BANG AMPERSAND ]
-- On WHILE shift to state 247
-- On TILDE shift to state 34
-- On SWITCH shift to state 251
-- On STRING_LITERAL shift to state 35
-- On STAR shift to state 36
-- On SIZEOF shift to state 37
-- On SEMICOLON shift to state 255
-- On RETURN shift to state 256
-- On PLUS shift to state 38
-- On MINUS shift to state 39
-- On LPAREN shift to state 41
-- On LBRACE shift to state 246
-- On INC_OP shift to state 42
-- On IF shift to state 260
-- On IDENTIFIER shift to state 264
-- On GOTO shift to state 266
-- On FOR shift to state 269
-- On DO shift to state 274
-- On DEFAULT shift to state 275
-- On DEC_OP shift to state 45
-- On CONTINUE shift to state 277
-- On CONSTANT shift to state 46
-- On CASE shift to state 279
-- On BREAK shift to state 282
-- On BANG shift to state 47
-- On AMPERSAND shift to state 48
-- On unary_operator shift to state 49
-- On unary_expression shift to state 57
-- On statement shift to state 303
-- On shift_expression shift to state 70
-- On selection_statement shift to state 285
-- On relational_expression shift to state 87
-- On primary_expression shift to state 51
-- On postfix_expression shift to state 52
-- On multiplicative_expression shift to state 72
-- On logical_or_expression shift to state 97
-- On logical_and_expression shift to state 99
-- On labeled_statement shift to state 286
-- On jump_statement shift to state 287
-- On iteration_statement shift to state 288
-- On inclusive_or_expression shift to state 115
-- On expression_statement shift to state 289
-- On expression shift to state 290
-- On exclusive_or_expression shift to state 114
-- On equality_expression shift to state 105
-- On conditional_expression shift to state 118
-- On compound_statement shift to state 292
-- On cast_expression shift to state 79
-- On assignment_expression shift to state 122
-- On and_expression shift to state 113
-- On additive_expression shift to state 90

State 303:
iteration_statement -> FOR LPAREN expression_statement expression_statement expression RPAREN statement . [ WHILE TILDE SWITCH STRING_LITERAL STAR SIZEOF SEMICOLON RETURN RBRACE PLUS MINUS LPAREN LBRACE INC_OP IF IDENTIFIER GOTO FOR ELSE DO DEFAULT DEC_OP CONTINUE CONSTANT CASE BREAK BANG AMPERSAND ]
-- On WHILE reduce production iteration_statement -> FOR LPAREN expression_statement expression_statement expression RPAREN statement
-- On TILDE reduce production iteration_statement -> FOR LPAREN expression_statement expression_statement expression RPAREN statement
-- On SWITCH reduce production iteration_statement -> FOR LPAREN expression_statement expression_statement expression RPAREN statement
-- On STRING_LITERAL reduce production iteration_statement -> FOR LPAREN expression_statement expression_statement expression RPAREN statement
-- On STAR reduce production iteration_statement -> FOR LPAREN expression_statement expression_statement expression RPAREN statement
-- On SIZEOF reduce production iteration_statement -> FOR LPAREN expression_statement expression_statement expression RPAREN statement
-- On SEMICOLON reduce production iteration_statement -> FOR LPAREN expression_statement expression_statement expression RPAREN statement
-- On RETURN reduce production iteration_statement -> FOR LPAREN expression_statement expression_statement expression RPAREN statement
-- On RBRACE reduce production iteration_statement -> FOR LPAREN expression_statement expression_statement expression RPAREN statement
-- On PLUS reduce production iteration_statement -> FOR LPAREN expression_statement expression_statement expression RPAREN statement
-- On MINUS reduce production iteration_statement -> FOR LPAREN expression_statement expression_statement expression RPAREN statement
-- On LPAREN reduce production iteration_statement -> FOR LPAREN expression_statement expression_statement expression RPAREN statement
-- On LBRACE reduce production iteration_statement -> FOR LPAREN expression_statement expression_statement expression RPAREN statement
-- On INC_OP reduce production iteration_statement -> FOR LPAREN expression_statement expression_statement expression RPAREN statement
-- On IF reduce production iteration_statement -> FOR LPAREN expression_statement expression_statement expression RPAREN statement
-- On IDENTIFIER reduce production iteration_statement -> FOR LPAREN expression_statement expression_statement expression RPAREN statement
-- On GOTO reduce production iteration_statement -> FOR LPAREN expression_statement expression_statement expression RPAREN statement
-- On FOR reduce production iteration_statement -> FOR LPAREN expression_statement expression_statement expression RPAREN statement
-- On ELSE reduce production iteration_statement -> FOR LPAREN expression_statement expression_statement expression RPAREN statement
-- On DO reduce production iteration_statement -> FOR LPAREN expression_statement expression_statement expression RPAREN statement
-- On DEFAULT reduce production iteration_statement -> FOR LPAREN expression_statement expression_statement expression RPAREN statement
-- On DEC_OP reduce production iteration_statement -> FOR LPAREN expression_statement expression_statement expression RPAREN statement
-- On CONTINUE reduce production iteration_statement -> FOR LPAREN expression_statement expression_statement expression RPAREN statement
-- On CONSTANT reduce production iteration_statement -> FOR LPAREN expression_statement expression_statement expression RPAREN statement
-- On CASE reduce production iteration_statement -> FOR LPAREN expression_statement expression_statement expression RPAREN statement
-- On BREAK reduce production iteration_statement -> FOR LPAREN expression_statement expression_statement expression RPAREN statement
-- On BANG reduce production iteration_statement -> FOR LPAREN expression_statement expression_statement expression RPAREN statement
-- On AMPERSAND reduce production iteration_statement -> FOR LPAREN expression_statement expression_statement expression RPAREN statement

State 304:
labeled_statement -> IDENTIFIER COLON statement . [ WHILE TILDE SWITCH STRING_LITERAL STAR SIZEOF SEMICOLON RETURN RBRACE PLUS MINUS LPAREN LBRACE INC_OP IF IDENTIFIER GOTO FOR ELSE DO DEFAULT DEC_OP CONTINUE CONSTANT CASE BREAK BANG AMPERSAND ]
-- On WHILE reduce production labeled_statement -> IDENTIFIER COLON statement
-- On TILDE reduce production labeled_statement -> IDENTIFIER COLON statement
-- On SWITCH reduce production labeled_statement -> IDENTIFIER COLON statement
-- On STRING_LITERAL reduce production labeled_statement -> IDENTIFIER COLON statement
-- On STAR reduce production labeled_statement -> IDENTIFIER COLON statement
-- On SIZEOF reduce production labeled_statement -> IDENTIFIER COLON statement
-- On SEMICOLON reduce production labeled_statement -> IDENTIFIER COLON statement
-- On RETURN reduce production labeled_statement -> IDENTIFIER COLON statement
-- On RBRACE reduce production labeled_statement -> IDENTIFIER COLON statement
-- On PLUS reduce production labeled_statement -> IDENTIFIER COLON statement
-- On MINUS reduce production labeled_statement -> IDENTIFIER COLON statement
-- On LPAREN reduce production labeled_statement -> IDENTIFIER COLON statement
-- On LBRACE reduce production labeled_statement -> IDENTIFIER COLON statement
-- On INC_OP reduce production labeled_statement -> IDENTIFIER COLON statement
-- On IF reduce production labeled_statement -> IDENTIFIER COLON statement
-- On IDENTIFIER reduce production labeled_statement -> IDENTIFIER COLON statement
-- On GOTO reduce production labeled_statement -> IDENTIFIER COLON statement
-- On FOR reduce production labeled_statement -> IDENTIFIER COLON statement
-- On ELSE reduce production labeled_statement -> IDENTIFIER COLON statement
-- On DO reduce production labeled_statement -> IDENTIFIER COLON statement
-- On DEFAULT reduce production labeled_statement -> IDENTIFIER COLON statement
-- On DEC_OP reduce production labeled_statement -> IDENTIFIER COLON statement
-- On CONTINUE reduce production labeled_statement -> IDENTIFIER COLON statement
-- On CONSTANT reduce production labeled_statement -> IDENTIFIER COLON statement
-- On CASE reduce production labeled_statement -> IDENTIFIER COLON statement
-- On BREAK reduce production labeled_statement -> IDENTIFIER COLON statement
-- On BANG reduce production labeled_statement -> IDENTIFIER COLON statement
-- On AMPERSAND reduce production labeled_statement -> IDENTIFIER COLON statement

State 305:
selection_statement -> IF LPAREN expression RPAREN statement . [ WHILE TILDE SWITCH STRING_LITERAL STAR SIZEOF SEMICOLON RETURN RBRACE PLUS MINUS LPAREN LBRACE INC_OP IF IDENTIFIER GOTO FOR ELSE DO DEFAULT DEC_OP CONTINUE CONSTANT CASE BREAK BANG AMPERSAND ]
selection_statement -> IF LPAREN expression RPAREN statement . ELSE statement [ WHILE TILDE SWITCH STRING_LITERAL STAR SIZEOF SEMICOLON RETURN RBRACE PLUS MINUS LPAREN LBRACE INC_OP IF IDENTIFIER GOTO FOR ELSE DO DEFAULT DEC_OP CONTINUE CONSTANT CASE BREAK BANG AMPERSAND ]
-- On ELSE shift to state 306
-- On WHILE reduce production selection_statement -> IF LPAREN expression RPAREN statement
-- On TILDE reduce production selection_statement -> IF LPAREN expression RPAREN statement
-- On SWITCH reduce production selection_statement -> IF LPAREN expression RPAREN statement
-- On STRING_LITERAL reduce production selection_statement -> IF LPAREN expression RPAREN statement
-- On STAR reduce production selection_statement -> IF LPAREN expression RPAREN statement
-- On SIZEOF reduce production selection_statement -> IF LPAREN expression RPAREN statement
-- On SEMICOLON reduce production selection_statement -> IF LPAREN expression RPAREN statement
-- On RETURN reduce production selection_statement -> IF LPAREN expression RPAREN statement
-- On RBRACE reduce production selection_statement -> IF LPAREN expression RPAREN statement
-- On PLUS reduce production selection_statement -> IF LPAREN expression RPAREN statement
-- On MINUS reduce production selection_statement -> IF LPAREN expression RPAREN statement
-- On LPAREN reduce production selection_statement -> IF LPAREN expression RPAREN statement
-- On LBRACE reduce production selection_statement -> IF LPAREN expression RPAREN statement
-- On INC_OP reduce production selection_statement -> IF LPAREN expression RPAREN statement
-- On IF reduce production selection_statement -> IF LPAREN expression RPAREN statement
-- On IDENTIFIER reduce production selection_statement -> IF LPAREN expression RPAREN statement
-- On GOTO reduce production selection_statement -> IF LPAREN expression RPAREN statement
-- On FOR reduce production selection_statement -> IF LPAREN expression RPAREN statement
-- On ELSE reduce production selection_statement -> IF LPAREN expression RPAREN statement
-- On DO reduce production selection_statement -> IF LPAREN expression RPAREN statement
-- On DEFAULT reduce production selection_statement -> IF LPAREN expression RPAREN statement
-- On DEC_OP reduce production selection_statement -> IF LPAREN expression RPAREN statement
-- On CONTINUE reduce production selection_statement -> IF LPAREN expression RPAREN statement
-- On CONSTANT reduce production selection_statement -> IF LPAREN expression RPAREN statement
-- On CASE reduce production selection_statement -> IF LPAREN expression RPAREN statement
-- On BREAK reduce production selection_statement -> IF LPAREN expression RPAREN statement
-- On BANG reduce production selection_statement -> IF LPAREN expression RPAREN statement
-- On AMPERSAND reduce production selection_statement -> IF LPAREN expression RPAREN statement
** Conflict on ELSE

State 306:
selection_statement -> IF LPAREN expression RPAREN statement ELSE . statement [ WHILE TILDE SWITCH STRING_LITERAL STAR SIZEOF SEMICOLON RETURN RBRACE PLUS MINUS LPAREN LBRACE INC_OP IF IDENTIFIER GOTO FOR ELSE DO DEFAULT DEC_OP CONTINUE CONSTANT CASE BREAK BANG AMPERSAND ]
-- On WHILE shift to state 247
-- On TILDE shift to state 34
-- On SWITCH shift to state 251
-- On STRING_LITERAL shift to state 35
-- On STAR shift to state 36
-- On SIZEOF shift to state 37
-- On SEMICOLON shift to state 255
-- On RETURN shift to state 256
-- On PLUS shift to state 38
-- On MINUS shift to state 39
-- On LPAREN shift to state 41
-- On LBRACE shift to state 246
-- On INC_OP shift to state 42
-- On IF shift to state 260
-- On IDENTIFIER shift to state 264
-- On GOTO shift to state 266
-- On FOR shift to state 269
-- On DO shift to state 274
-- On DEFAULT shift to state 275
-- On DEC_OP shift to state 45
-- On CONTINUE shift to state 277
-- On CONSTANT shift to state 46
-- On CASE shift to state 279
-- On BREAK shift to state 282
-- On BANG shift to state 47
-- On AMPERSAND shift to state 48
-- On unary_operator shift to state 49
-- On unary_expression shift to state 57
-- On statement shift to state 307
-- On shift_expression shift to state 70
-- On selection_statement shift to state 285
-- On relational_expression shift to state 87
-- On primary_expression shift to state 51
-- On postfix_expression shift to state 52
-- On multiplicative_expression shift to state 72
-- On logical_or_expression shift to state 97
-- On logical_and_expression shift to state 99
-- On labeled_statement shift to state 286
-- On jump_statement shift to state 287
-- On iteration_statement shift to state 288
-- On inclusive_or_expression shift to state 115
-- On expression_statement shift to state 289
-- On expression shift to state 290
-- On exclusive_or_expression shift to state 114
-- On equality_expression shift to state 105
-- On conditional_expression shift to state 118
-- On compound_statement shift to state 292
-- On cast_expression shift to state 79
-- On assignment_expression shift to state 122
-- On and_expression shift to state 113
-- On additive_expression shift to state 90

State 307:
selection_statement -> IF LPAREN expression RPAREN statement ELSE statement . [ WHILE TILDE SWITCH STRING_LITERAL STAR SIZEOF SEMICOLON RETURN RBRACE PLUS MINUS LPAREN LBRACE INC_OP IF IDENTIFIER GOTO FOR ELSE DO DEFAULT DEC_OP CONTINUE CONSTANT CASE BREAK BANG AMPERSAND ]
-- On WHILE reduce production selection_statement -> IF LPAREN expression RPAREN statement ELSE statement
-- On TILDE reduce production selection_statement -> IF LPAREN expression RPAREN statement ELSE statement
-- On SWITCH reduce production selection_statement -> IF LPAREN expression RPAREN statement ELSE statement
-- On STRING_LITERAL reduce production selection_statement -> IF LPAREN expression RPAREN statement ELSE statement
-- On STAR reduce production selection_statement -> IF LPAREN expression RPAREN statement ELSE statement
-- On SIZEOF reduce production selection_statement -> IF LPAREN expression RPAREN statement ELSE statement
-- On SEMICOLON reduce production selection_statement -> IF LPAREN expression RPAREN statement ELSE statement
-- On RETURN reduce production selection_statement -> IF LPAREN expression RPAREN statement ELSE statement
-- On RBRACE reduce production selection_statement -> IF LPAREN expression RPAREN statement ELSE statement
-- On PLUS reduce production selection_statement -> IF LPAREN expression RPAREN statement ELSE statement
-- On MINUS reduce production selection_statement -> IF LPAREN expression RPAREN statement ELSE statement
-- On LPAREN reduce production selection_statement -> IF LPAREN expression RPAREN statement ELSE statement
-- On LBRACE reduce production selection_statement -> IF LPAREN expression RPAREN statement ELSE statement
-- On INC_OP reduce production selection_statement -> IF LPAREN expression RPAREN statement ELSE statement
-- On IF reduce production selection_statement -> IF LPAREN expression RPAREN statement ELSE statement
-- On IDENTIFIER reduce production selection_statement -> IF LPAREN expression RPAREN statement ELSE statement
-- On GOTO reduce production selection_statement -> IF LPAREN expression RPAREN statement ELSE statement
-- On FOR reduce production selection_statement -> IF LPAREN expression RPAREN statement ELSE statement
-- On ELSE reduce production selection_statement -> IF LPAREN expression RPAREN statement ELSE statement
-- On DO reduce production selection_statement -> IF LPAREN expression RPAREN statement ELSE statement
-- On DEFAULT reduce production selection_statement -> IF LPAREN expression RPAREN statement ELSE statement
-- On DEC_OP reduce production selection_statement -> IF LPAREN expression RPAREN statement ELSE statement
-- On CONTINUE reduce production selection_statement -> IF LPAREN expression RPAREN statement ELSE statement
-- On CONSTANT reduce production selection_statement -> IF LPAREN expression RPAREN statement ELSE statement
-- On CASE reduce production selection_statement -> IF LPAREN expression RPAREN statement ELSE statement
-- On BREAK reduce production selection_statement -> IF LPAREN expression RPAREN statement ELSE statement
-- On BANG reduce production selection_statement -> IF LPAREN expression RPAREN statement ELSE statement
-- On AMPERSAND reduce production selection_statement -> IF LPAREN expression RPAREN statement ELSE statement

State 308:
selection_statement -> SWITCH LPAREN expression RPAREN statement . [ WHILE TILDE SWITCH STRING_LITERAL STAR SIZEOF SEMICOLON RETURN RBRACE PLUS MINUS LPAREN LBRACE INC_OP IF IDENTIFIER GOTO FOR ELSE DO DEFAULT DEC_OP CONTINUE CONSTANT CASE BREAK BANG AMPERSAND ]
-- On WHILE reduce production selection_statement -> SWITCH LPAREN expression RPAREN statement
-- On TILDE reduce production selection_statement -> SWITCH LPAREN expression RPAREN statement
-- On SWITCH reduce production selection_statement -> SWITCH LPAREN expression RPAREN statement
-- On STRING_LITERAL reduce production selection_statement -> SWITCH LPAREN expression RPAREN statement
-- On STAR reduce production selection_statement -> SWITCH LPAREN expression RPAREN statement
-- On SIZEOF reduce production selection_statement -> SWITCH LPAREN expression RPAREN statement
-- On SEMICOLON reduce production selection_statement -> SWITCH LPAREN expression RPAREN statement
-- On RETURN reduce production selection_statement -> SWITCH LPAREN expression RPAREN statement
-- On RBRACE reduce production selection_statement -> SWITCH LPAREN expression RPAREN statement
-- On PLUS reduce production selection_statement -> SWITCH LPAREN expression RPAREN statement
-- On MINUS reduce production selection_statement -> SWITCH LPAREN expression RPAREN statement
-- On LPAREN reduce production selection_statement -> SWITCH LPAREN expression RPAREN statement
-- On LBRACE reduce production selection_statement -> SWITCH LPAREN expression RPAREN statement
-- On INC_OP reduce production selection_statement -> SWITCH LPAREN expression RPAREN statement
-- On IF reduce production selection_statement -> SWITCH LPAREN expression RPAREN statement
-- On IDENTIFIER reduce production selection_statement -> SWITCH LPAREN expression RPAREN statement
-- On GOTO reduce production selection_statement -> SWITCH LPAREN expression RPAREN statement
-- On FOR reduce production selection_statement -> SWITCH LPAREN expression RPAREN statement
-- On ELSE reduce production selection_statement -> SWITCH LPAREN expression RPAREN statement
-- On DO reduce production selection_statement -> SWITCH LPAREN expression RPAREN statement
-- On DEFAULT reduce production selection_statement -> SWITCH LPAREN expression RPAREN statement
-- On DEC_OP reduce production selection_statement -> SWITCH LPAREN expression RPAREN statement
-- On CONTINUE reduce production selection_statement -> SWITCH LPAREN expression RPAREN statement
-- On CONSTANT reduce production selection_statement -> SWITCH LPAREN expression RPAREN statement
-- On CASE reduce production selection_statement -> SWITCH LPAREN expression RPAREN statement
-- On BREAK reduce production selection_statement -> SWITCH LPAREN expression RPAREN statement
-- On BANG reduce production selection_statement -> SWITCH LPAREN expression RPAREN statement
-- On AMPERSAND reduce production selection_statement -> SWITCH LPAREN expression RPAREN statement

State 309:
iteration_statement -> WHILE LPAREN expression RPAREN statement . [ WHILE TILDE SWITCH STRING_LITERAL STAR SIZEOF SEMICOLON RETURN RBRACE PLUS MINUS LPAREN LBRACE INC_OP IF IDENTIFIER GOTO FOR ELSE DO DEFAULT DEC_OP CONTINUE CONSTANT CASE BREAK BANG AMPERSAND ]
-- On WHILE reduce production iteration_statement -> WHILE LPAREN expression RPAREN statement
-- On TILDE reduce production iteration_statement -> WHILE LPAREN expression RPAREN statement
-- On SWITCH reduce production iteration_statement -> WHILE LPAREN expression RPAREN statement
-- On STRING_LITERAL reduce production iteration_statement -> WHILE LPAREN expression RPAREN statement
-- On STAR reduce production iteration_statement -> WHILE LPAREN expression RPAREN statement
-- On SIZEOF reduce production iteration_statement -> WHILE LPAREN expression RPAREN statement
-- On SEMICOLON reduce production iteration_statement -> WHILE LPAREN expression RPAREN statement
-- On RETURN reduce production iteration_statement -> WHILE LPAREN expression RPAREN statement
-- On RBRACE reduce production iteration_statement -> WHILE LPAREN expression RPAREN statement
-- On PLUS reduce production iteration_statement -> WHILE LPAREN expression RPAREN statement
-- On MINUS reduce production iteration_statement -> WHILE LPAREN expression RPAREN statement
-- On LPAREN reduce production iteration_statement -> WHILE LPAREN expression RPAREN statement
-- On LBRACE reduce production iteration_statement -> WHILE LPAREN expression RPAREN statement
-- On INC_OP reduce production iteration_statement -> WHILE LPAREN expression RPAREN statement
-- On IF reduce production iteration_statement -> WHILE LPAREN expression RPAREN statement
-- On IDENTIFIER reduce production iteration_statement -> WHILE LPAREN expression RPAREN statement
-- On GOTO reduce production iteration_statement -> WHILE LPAREN expression RPAREN statement
-- On FOR reduce production iteration_statement -> WHILE LPAREN expression RPAREN statement
-- On ELSE reduce production iteration_statement -> WHILE LPAREN expression RPAREN statement
-- On DO reduce production iteration_statement -> WHILE LPAREN expression RPAREN statement
-- On DEFAULT reduce production iteration_statement -> WHILE LPAREN expression RPAREN statement
-- On DEC_OP reduce production iteration_statement -> WHILE LPAREN expression RPAREN statement
-- On CONTINUE reduce production iteration_statement -> WHILE LPAREN expression RPAREN statement
-- On CONSTANT reduce production iteration_statement -> WHILE LPAREN expression RPAREN statement
-- On CASE reduce production iteration_statement -> WHILE LPAREN expression RPAREN statement
-- On BREAK reduce production iteration_statement -> WHILE LPAREN expression RPAREN statement
-- On BANG reduce production iteration_statement -> WHILE LPAREN expression RPAREN statement
-- On AMPERSAND reduce production iteration_statement -> WHILE LPAREN expression RPAREN statement

State 310:
compound_statement -> LBRACE RBRACE . [ WHILE VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF TILDE SWITCH STRUCT STRING_LITERAL STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN REGISTER RBRACE PLUS MINUS LPAREN LONG LBRACE INT INC_OP IF IDENTIFIER GOTO FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT DEC_OP CONTINUE CONSTANT CONST CHAR CASE BREAK BANG AUTO AMPERSAND # ]
-- On WHILE reduce production compound_statement -> LBRACE RBRACE
-- On VOLATILE reduce production compound_statement -> LBRACE RBRACE
-- On VOID reduce production compound_statement -> LBRACE RBRACE
-- On UNSIGNED reduce production compound_statement -> LBRACE RBRACE
-- On UNION reduce production compound_statement -> LBRACE RBRACE
-- On TYPE_NAME reduce production compound_statement -> LBRACE RBRACE
-- On TYPEDEF reduce production compound_statement -> LBRACE RBRACE
-- On TILDE reduce production compound_statement -> LBRACE RBRACE
-- On SWITCH reduce production compound_statement -> LBRACE RBRACE
-- On STRUCT reduce production compound_statement -> LBRACE RBRACE
-- On STRING_LITERAL reduce production compound_statement -> LBRACE RBRACE
-- On STATIC reduce production compound_statement -> LBRACE RBRACE
-- On STAR reduce production compound_statement -> LBRACE RBRACE
-- On SIZEOF reduce production compound_statement -> LBRACE RBRACE
-- On SIGNED reduce production compound_statement -> LBRACE RBRACE
-- On SHORT reduce production compound_statement -> LBRACE RBRACE
-- On SEMICOLON reduce production compound_statement -> LBRACE RBRACE
-- On RETURN reduce production compound_statement -> LBRACE RBRACE
-- On REGISTER reduce production compound_statement -> LBRACE RBRACE
-- On RBRACE reduce production compound_statement -> LBRACE RBRACE
-- On PLUS reduce production compound_statement -> LBRACE RBRACE
-- On MINUS reduce production compound_statement -> LBRACE RBRACE
-- On LPAREN reduce production compound_statement -> LBRACE RBRACE
-- On LONG reduce production compound_statement -> LBRACE RBRACE
-- On LBRACE reduce production compound_statement -> LBRACE RBRACE
-- On INT reduce production compound_statement -> LBRACE RBRACE
-- On INC_OP reduce production compound_statement -> LBRACE RBRACE
-- On IF reduce production compound_statement -> LBRACE RBRACE
-- On IDENTIFIER reduce production compound_statement -> LBRACE RBRACE
-- On GOTO reduce production compound_statement -> LBRACE RBRACE
-- On FOR reduce production compound_statement -> LBRACE RBRACE
-- On FLOAT reduce production compound_statement -> LBRACE RBRACE
-- On EXTERN reduce production compound_statement -> LBRACE RBRACE
-- On ENUM reduce production compound_statement -> LBRACE RBRACE
-- On ELSE reduce production compound_statement -> LBRACE RBRACE
-- On DOUBLE reduce production compound_statement -> LBRACE RBRACE
-- On DO reduce production compound_statement -> LBRACE RBRACE
-- On DEFAULT reduce production compound_statement -> LBRACE RBRACE
-- On DEC_OP reduce production compound_statement -> LBRACE RBRACE
-- On CONTINUE reduce production compound_statement -> LBRACE RBRACE
-- On CONSTANT reduce production compound_statement -> LBRACE RBRACE
-- On CONST reduce production compound_statement -> LBRACE RBRACE
-- On CHAR reduce production compound_statement -> LBRACE RBRACE
-- On CASE reduce production compound_statement -> LBRACE RBRACE
-- On BREAK reduce production compound_statement -> LBRACE RBRACE
-- On BANG reduce production compound_statement -> LBRACE RBRACE
-- On AUTO reduce production compound_statement -> LBRACE RBRACE
-- On AMPERSAND reduce production compound_statement -> LBRACE RBRACE
-- On # reduce production compound_statement -> LBRACE RBRACE
** End-of-stream conflict on WHILE VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF TILDE SWITCH STRUCT STRING_LITERAL STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN REGISTER RBRACE PLUS MINUS LPAREN LONG LBRACE INT INC_OP IF IDENTIFIER GOTO FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT DEC_OP CONTINUE CONSTANT CONST CHAR CASE BREAK BANG AUTO AMPERSAND
**   There is a tension between
**   (1) reducing production compound_statement -> LBRACE RBRACE
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 311:
compound_statement -> LBRACE statement_list . RBRACE [ WHILE VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF TILDE SWITCH STRUCT STRING_LITERAL STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN REGISTER RBRACE PLUS MINUS LPAREN LONG LBRACE INT INC_OP IF IDENTIFIER GOTO FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT DEC_OP CONTINUE CONSTANT CONST CHAR CASE BREAK BANG AUTO AMPERSAND # ]
statement_list -> statement_list . statement [ WHILE TILDE SWITCH STRING_LITERAL STAR SIZEOF SEMICOLON RETURN RBRACE PLUS MINUS LPAREN LBRACE INC_OP IF IDENTIFIER GOTO FOR DO DEFAULT DEC_OP CONTINUE CONSTANT CASE BREAK BANG AMPERSAND ]
-- On WHILE shift to state 247
-- On TILDE shift to state 34
-- On SWITCH shift to state 251
-- On STRING_LITERAL shift to state 35
-- On STAR shift to state 36
-- On SIZEOF shift to state 37
-- On SEMICOLON shift to state 255
-- On RETURN shift to state 256
-- On RBRACE shift to state 312
-- On PLUS shift to state 38
-- On MINUS shift to state 39
-- On LPAREN shift to state 41
-- On LBRACE shift to state 246
-- On INC_OP shift to state 42
-- On IF shift to state 260
-- On IDENTIFIER shift to state 264
-- On GOTO shift to state 266
-- On FOR shift to state 269
-- On DO shift to state 274
-- On DEFAULT shift to state 275
-- On DEC_OP shift to state 45
-- On CONTINUE shift to state 277
-- On CONSTANT shift to state 46
-- On CASE shift to state 279
-- On BREAK shift to state 282
-- On BANG shift to state 47
-- On AMPERSAND shift to state 48
-- On unary_operator shift to state 49
-- On unary_expression shift to state 57
-- On statement shift to state 313
-- On shift_expression shift to state 70
-- On selection_statement shift to state 285
-- On relational_expression shift to state 87
-- On primary_expression shift to state 51
-- On postfix_expression shift to state 52
-- On multiplicative_expression shift to state 72
-- On logical_or_expression shift to state 97
-- On logical_and_expression shift to state 99
-- On labeled_statement shift to state 286
-- On jump_statement shift to state 287
-- On iteration_statement shift to state 288
-- On inclusive_or_expression shift to state 115
-- On expression_statement shift to state 289
-- On expression shift to state 290
-- On exclusive_or_expression shift to state 114
-- On equality_expression shift to state 105
-- On conditional_expression shift to state 118
-- On compound_statement shift to state 292
-- On cast_expression shift to state 79
-- On assignment_expression shift to state 122
-- On and_expression shift to state 113
-- On additive_expression shift to state 90

State 312:
compound_statement -> LBRACE statement_list RBRACE . [ WHILE VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF TILDE SWITCH STRUCT STRING_LITERAL STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN REGISTER RBRACE PLUS MINUS LPAREN LONG LBRACE INT INC_OP IF IDENTIFIER GOTO FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT DEC_OP CONTINUE CONSTANT CONST CHAR CASE BREAK BANG AUTO AMPERSAND # ]
-- On WHILE reduce production compound_statement -> LBRACE statement_list RBRACE
-- On VOLATILE reduce production compound_statement -> LBRACE statement_list RBRACE
-- On VOID reduce production compound_statement -> LBRACE statement_list RBRACE
-- On UNSIGNED reduce production compound_statement -> LBRACE statement_list RBRACE
-- On UNION reduce production compound_statement -> LBRACE statement_list RBRACE
-- On TYPE_NAME reduce production compound_statement -> LBRACE statement_list RBRACE
-- On TYPEDEF reduce production compound_statement -> LBRACE statement_list RBRACE
-- On TILDE reduce production compound_statement -> LBRACE statement_list RBRACE
-- On SWITCH reduce production compound_statement -> LBRACE statement_list RBRACE
-- On STRUCT reduce production compound_statement -> LBRACE statement_list RBRACE
-- On STRING_LITERAL reduce production compound_statement -> LBRACE statement_list RBRACE
-- On STATIC reduce production compound_statement -> LBRACE statement_list RBRACE
-- On STAR reduce production compound_statement -> LBRACE statement_list RBRACE
-- On SIZEOF reduce production compound_statement -> LBRACE statement_list RBRACE
-- On SIGNED reduce production compound_statement -> LBRACE statement_list RBRACE
-- On SHORT reduce production compound_statement -> LBRACE statement_list RBRACE
-- On SEMICOLON reduce production compound_statement -> LBRACE statement_list RBRACE
-- On RETURN reduce production compound_statement -> LBRACE statement_list RBRACE
-- On REGISTER reduce production compound_statement -> LBRACE statement_list RBRACE
-- On RBRACE reduce production compound_statement -> LBRACE statement_list RBRACE
-- On PLUS reduce production compound_statement -> LBRACE statement_list RBRACE
-- On MINUS reduce production compound_statement -> LBRACE statement_list RBRACE
-- On LPAREN reduce production compound_statement -> LBRACE statement_list RBRACE
-- On LONG reduce production compound_statement -> LBRACE statement_list RBRACE
-- On LBRACE reduce production compound_statement -> LBRACE statement_list RBRACE
-- On INT reduce production compound_statement -> LBRACE statement_list RBRACE
-- On INC_OP reduce production compound_statement -> LBRACE statement_list RBRACE
-- On IF reduce production compound_statement -> LBRACE statement_list RBRACE
-- On IDENTIFIER reduce production compound_statement -> LBRACE statement_list RBRACE
-- On GOTO reduce production compound_statement -> LBRACE statement_list RBRACE
-- On FOR reduce production compound_statement -> LBRACE statement_list RBRACE
-- On FLOAT reduce production compound_statement -> LBRACE statement_list RBRACE
-- On EXTERN reduce production compound_statement -> LBRACE statement_list RBRACE
-- On ENUM reduce production compound_statement -> LBRACE statement_list RBRACE
-- On ELSE reduce production compound_statement -> LBRACE statement_list RBRACE
-- On DOUBLE reduce production compound_statement -> LBRACE statement_list RBRACE
-- On DO reduce production compound_statement -> LBRACE statement_list RBRACE
-- On DEFAULT reduce production compound_statement -> LBRACE statement_list RBRACE
-- On DEC_OP reduce production compound_statement -> LBRACE statement_list RBRACE
-- On CONTINUE reduce production compound_statement -> LBRACE statement_list RBRACE
-- On CONSTANT reduce production compound_statement -> LBRACE statement_list RBRACE
-- On CONST reduce production compound_statement -> LBRACE statement_list RBRACE
-- On CHAR reduce production compound_statement -> LBRACE statement_list RBRACE
-- On CASE reduce production compound_statement -> LBRACE statement_list RBRACE
-- On BREAK reduce production compound_statement -> LBRACE statement_list RBRACE
-- On BANG reduce production compound_statement -> LBRACE statement_list RBRACE
-- On AUTO reduce production compound_statement -> LBRACE statement_list RBRACE
-- On AMPERSAND reduce production compound_statement -> LBRACE statement_list RBRACE
-- On # reduce production compound_statement -> LBRACE statement_list RBRACE
** End-of-stream conflict on WHILE VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF TILDE SWITCH STRUCT STRING_LITERAL STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN REGISTER RBRACE PLUS MINUS LPAREN LONG LBRACE INT INC_OP IF IDENTIFIER GOTO FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT DEC_OP CONTINUE CONSTANT CONST CHAR CASE BREAK BANG AUTO AMPERSAND
**   There is a tension between
**   (1) reducing production compound_statement -> LBRACE statement_list RBRACE
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 313:
statement_list -> statement_list statement . [ WHILE TILDE SWITCH STRING_LITERAL STAR SIZEOF SEMICOLON RETURN RBRACE PLUS MINUS LPAREN LBRACE INC_OP IF IDENTIFIER GOTO FOR DO DEFAULT DEC_OP CONTINUE CONSTANT CASE BREAK BANG AMPERSAND ]
-- On WHILE reduce production statement_list -> statement_list statement
-- On TILDE reduce production statement_list -> statement_list statement
-- On SWITCH reduce production statement_list -> statement_list statement
-- On STRING_LITERAL reduce production statement_list -> statement_list statement
-- On STAR reduce production statement_list -> statement_list statement
-- On SIZEOF reduce production statement_list -> statement_list statement
-- On SEMICOLON reduce production statement_list -> statement_list statement
-- On RETURN reduce production statement_list -> statement_list statement
-- On RBRACE reduce production statement_list -> statement_list statement
-- On PLUS reduce production statement_list -> statement_list statement
-- On MINUS reduce production statement_list -> statement_list statement
-- On LPAREN reduce production statement_list -> statement_list statement
-- On LBRACE reduce production statement_list -> statement_list statement
-- On INC_OP reduce production statement_list -> statement_list statement
-- On IF reduce production statement_list -> statement_list statement
-- On IDENTIFIER reduce production statement_list -> statement_list statement
-- On GOTO reduce production statement_list -> statement_list statement
-- On FOR reduce production statement_list -> statement_list statement
-- On DO reduce production statement_list -> statement_list statement
-- On DEFAULT reduce production statement_list -> statement_list statement
-- On DEC_OP reduce production statement_list -> statement_list statement
-- On CONTINUE reduce production statement_list -> statement_list statement
-- On CONSTANT reduce production statement_list -> statement_list statement
-- On CASE reduce production statement_list -> statement_list statement
-- On BREAK reduce production statement_list -> statement_list statement
-- On BANG reduce production statement_list -> statement_list statement
-- On AMPERSAND reduce production statement_list -> statement_list statement

State 314:
statement_list -> statement . [ WHILE TILDE SWITCH STRING_LITERAL STAR SIZEOF SEMICOLON RETURN RBRACE PLUS MINUS LPAREN LBRACE INC_OP IF IDENTIFIER GOTO FOR DO DEFAULT DEC_OP CONTINUE CONSTANT CASE BREAK BANG AMPERSAND ]
-- On WHILE reduce production statement_list -> statement
-- On TILDE reduce production statement_list -> statement
-- On SWITCH reduce production statement_list -> statement
-- On STRING_LITERAL reduce production statement_list -> statement
-- On STAR reduce production statement_list -> statement
-- On SIZEOF reduce production statement_list -> statement
-- On SEMICOLON reduce production statement_list -> statement
-- On RETURN reduce production statement_list -> statement
-- On RBRACE reduce production statement_list -> statement
-- On PLUS reduce production statement_list -> statement
-- On MINUS reduce production statement_list -> statement
-- On LPAREN reduce production statement_list -> statement
-- On LBRACE reduce production statement_list -> statement
-- On INC_OP reduce production statement_list -> statement
-- On IF reduce production statement_list -> statement
-- On IDENTIFIER reduce production statement_list -> statement
-- On GOTO reduce production statement_list -> statement
-- On FOR reduce production statement_list -> statement
-- On DO reduce production statement_list -> statement
-- On DEFAULT reduce production statement_list -> statement
-- On DEC_OP reduce production statement_list -> statement
-- On CONTINUE reduce production statement_list -> statement
-- On CONSTANT reduce production statement_list -> statement
-- On CASE reduce production statement_list -> statement
-- On BREAK reduce production statement_list -> statement
-- On BANG reduce production statement_list -> statement
-- On AMPERSAND reduce production statement_list -> statement

State 315:
declaration -> declaration_specifiers . SEMICOLON [ WHILE VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF TILDE SWITCH STRUCT STRING_LITERAL STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN REGISTER RBRACE PLUS MINUS LPAREN LONG LBRACE INT INC_OP IF IDENTIFIER GOTO FOR FLOAT EXTERN ENUM DOUBLE DO DEFAULT DEC_OP CONTINUE CONSTANT CONST CHAR CASE BREAK BANG AUTO AMPERSAND ]
declaration -> declaration_specifiers . init_declarator_list SEMICOLON [ WHILE VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF TILDE SWITCH STRUCT STRING_LITERAL STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN REGISTER RBRACE PLUS MINUS LPAREN LONG LBRACE INT INC_OP IF IDENTIFIER GOTO FOR FLOAT EXTERN ENUM DOUBLE DO DEFAULT DEC_OP CONTINUE CONSTANT CONST CHAR CASE BREAK BANG AUTO AMPERSAND ]
-- On STAR shift to state 9
-- On SEMICOLON shift to state 316
-- On LPAREN shift to state 19
-- On IDENTIFIER shift to state 20
-- On pointer shift to state 21
-- On init_declarator_list shift to state 317
-- On init_declarator shift to state 332
-- On direct_declarator shift to state 161
-- On declarator shift to state 321

State 316:
declaration -> declaration_specifiers SEMICOLON . [ WHILE VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF TILDE SWITCH STRUCT STRING_LITERAL STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN REGISTER RBRACE PLUS MINUS LPAREN LONG LBRACE INT INC_OP IF IDENTIFIER GOTO FOR FLOAT EXTERN ENUM DOUBLE DO DEFAULT DEC_OP CONTINUE CONSTANT CONST CHAR CASE BREAK BANG AUTO AMPERSAND # ]
-- On WHILE reduce production declaration -> declaration_specifiers SEMICOLON
-- On VOLATILE reduce production declaration -> declaration_specifiers SEMICOLON
-- On VOID reduce production declaration -> declaration_specifiers SEMICOLON
-- On UNSIGNED reduce production declaration -> declaration_specifiers SEMICOLON
-- On UNION reduce production declaration -> declaration_specifiers SEMICOLON
-- On TYPE_NAME reduce production declaration -> declaration_specifiers SEMICOLON
-- On TYPEDEF reduce production declaration -> declaration_specifiers SEMICOLON
-- On TILDE reduce production declaration -> declaration_specifiers SEMICOLON
-- On SWITCH reduce production declaration -> declaration_specifiers SEMICOLON
-- On STRUCT reduce production declaration -> declaration_specifiers SEMICOLON
-- On STRING_LITERAL reduce production declaration -> declaration_specifiers SEMICOLON
-- On STATIC reduce production declaration -> declaration_specifiers SEMICOLON
-- On STAR reduce production declaration -> declaration_specifiers SEMICOLON
-- On SIZEOF reduce production declaration -> declaration_specifiers SEMICOLON
-- On SIGNED reduce production declaration -> declaration_specifiers SEMICOLON
-- On SHORT reduce production declaration -> declaration_specifiers SEMICOLON
-- On SEMICOLON reduce production declaration -> declaration_specifiers SEMICOLON
-- On RETURN reduce production declaration -> declaration_specifiers SEMICOLON
-- On REGISTER reduce production declaration -> declaration_specifiers SEMICOLON
-- On RBRACE reduce production declaration -> declaration_specifiers SEMICOLON
-- On PLUS reduce production declaration -> declaration_specifiers SEMICOLON
-- On MINUS reduce production declaration -> declaration_specifiers SEMICOLON
-- On LPAREN reduce production declaration -> declaration_specifiers SEMICOLON
-- On LONG reduce production declaration -> declaration_specifiers SEMICOLON
-- On LBRACE reduce production declaration -> declaration_specifiers SEMICOLON
-- On INT reduce production declaration -> declaration_specifiers SEMICOLON
-- On INC_OP reduce production declaration -> declaration_specifiers SEMICOLON
-- On IF reduce production declaration -> declaration_specifiers SEMICOLON
-- On IDENTIFIER reduce production declaration -> declaration_specifiers SEMICOLON
-- On GOTO reduce production declaration -> declaration_specifiers SEMICOLON
-- On FOR reduce production declaration -> declaration_specifiers SEMICOLON
-- On FLOAT reduce production declaration -> declaration_specifiers SEMICOLON
-- On EXTERN reduce production declaration -> declaration_specifiers SEMICOLON
-- On ENUM reduce production declaration -> declaration_specifiers SEMICOLON
-- On DOUBLE reduce production declaration -> declaration_specifiers SEMICOLON
-- On DO reduce production declaration -> declaration_specifiers SEMICOLON
-- On DEFAULT reduce production declaration -> declaration_specifiers SEMICOLON
-- On DEC_OP reduce production declaration -> declaration_specifiers SEMICOLON
-- On CONTINUE reduce production declaration -> declaration_specifiers SEMICOLON
-- On CONSTANT reduce production declaration -> declaration_specifiers SEMICOLON
-- On CONST reduce production declaration -> declaration_specifiers SEMICOLON
-- On CHAR reduce production declaration -> declaration_specifiers SEMICOLON
-- On CASE reduce production declaration -> declaration_specifiers SEMICOLON
-- On BREAK reduce production declaration -> declaration_specifiers SEMICOLON
-- On BANG reduce production declaration -> declaration_specifiers SEMICOLON
-- On AUTO reduce production declaration -> declaration_specifiers SEMICOLON
-- On AMPERSAND reduce production declaration -> declaration_specifiers SEMICOLON
-- On # reduce production declaration -> declaration_specifiers SEMICOLON
** End-of-stream conflict on WHILE VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF TILDE SWITCH STRUCT STRING_LITERAL STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN REGISTER RBRACE PLUS MINUS LPAREN LONG LBRACE INT INC_OP IF IDENTIFIER GOTO FOR FLOAT EXTERN ENUM DOUBLE DO DEFAULT DEC_OP CONTINUE CONSTANT CONST CHAR CASE BREAK BANG AUTO AMPERSAND
**   There is a tension between
**   (1) reducing production declaration -> declaration_specifiers SEMICOLON
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 317:
declaration -> declaration_specifiers init_declarator_list . SEMICOLON [ WHILE VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF TILDE SWITCH STRUCT STRING_LITERAL STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN REGISTER RBRACE PLUS MINUS LPAREN LONG LBRACE INT INC_OP IF IDENTIFIER GOTO FOR FLOAT EXTERN ENUM DOUBLE DO DEFAULT DEC_OP CONTINUE CONSTANT CONST CHAR CASE BREAK BANG AUTO AMPERSAND # ]
init_declarator_list -> init_declarator_list . COMMA init_declarator [ SEMICOLON COMMA ]
-- On SEMICOLON shift to state 318
-- On COMMA shift to state 319

State 318:
declaration -> declaration_specifiers init_declarator_list SEMICOLON . [ WHILE VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF TILDE SWITCH STRUCT STRING_LITERAL STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN REGISTER RBRACE PLUS MINUS LPAREN LONG LBRACE INT INC_OP IF IDENTIFIER GOTO FOR FLOAT EXTERN ENUM DOUBLE DO DEFAULT DEC_OP CONTINUE CONSTANT CONST CHAR CASE BREAK BANG AUTO AMPERSAND # ]
-- On WHILE reduce production declaration -> declaration_specifiers init_declarator_list SEMICOLON
-- On VOLATILE reduce production declaration -> declaration_specifiers init_declarator_list SEMICOLON
-- On VOID reduce production declaration -> declaration_specifiers init_declarator_list SEMICOLON
-- On UNSIGNED reduce production declaration -> declaration_specifiers init_declarator_list SEMICOLON
-- On UNION reduce production declaration -> declaration_specifiers init_declarator_list SEMICOLON
-- On TYPE_NAME reduce production declaration -> declaration_specifiers init_declarator_list SEMICOLON
-- On TYPEDEF reduce production declaration -> declaration_specifiers init_declarator_list SEMICOLON
-- On TILDE reduce production declaration -> declaration_specifiers init_declarator_list SEMICOLON
-- On SWITCH reduce production declaration -> declaration_specifiers init_declarator_list SEMICOLON
-- On STRUCT reduce production declaration -> declaration_specifiers init_declarator_list SEMICOLON
-- On STRING_LITERAL reduce production declaration -> declaration_specifiers init_declarator_list SEMICOLON
-- On STATIC reduce production declaration -> declaration_specifiers init_declarator_list SEMICOLON
-- On STAR reduce production declaration -> declaration_specifiers init_declarator_list SEMICOLON
-- On SIZEOF reduce production declaration -> declaration_specifiers init_declarator_list SEMICOLON
-- On SIGNED reduce production declaration -> declaration_specifiers init_declarator_list SEMICOLON
-- On SHORT reduce production declaration -> declaration_specifiers init_declarator_list SEMICOLON
-- On SEMICOLON reduce production declaration -> declaration_specifiers init_declarator_list SEMICOLON
-- On RETURN reduce production declaration -> declaration_specifiers init_declarator_list SEMICOLON
-- On REGISTER reduce production declaration -> declaration_specifiers init_declarator_list SEMICOLON
-- On RBRACE reduce production declaration -> declaration_specifiers init_declarator_list SEMICOLON
-- On PLUS reduce production declaration -> declaration_specifiers init_declarator_list SEMICOLON
-- On MINUS reduce production declaration -> declaration_specifiers init_declarator_list SEMICOLON
-- On LPAREN reduce production declaration -> declaration_specifiers init_declarator_list SEMICOLON
-- On LONG reduce production declaration -> declaration_specifiers init_declarator_list SEMICOLON
-- On LBRACE reduce production declaration -> declaration_specifiers init_declarator_list SEMICOLON
-- On INT reduce production declaration -> declaration_specifiers init_declarator_list SEMICOLON
-- On INC_OP reduce production declaration -> declaration_specifiers init_declarator_list SEMICOLON
-- On IF reduce production declaration -> declaration_specifiers init_declarator_list SEMICOLON
-- On IDENTIFIER reduce production declaration -> declaration_specifiers init_declarator_list SEMICOLON
-- On GOTO reduce production declaration -> declaration_specifiers init_declarator_list SEMICOLON
-- On FOR reduce production declaration -> declaration_specifiers init_declarator_list SEMICOLON
-- On FLOAT reduce production declaration -> declaration_specifiers init_declarator_list SEMICOLON
-- On EXTERN reduce production declaration -> declaration_specifiers init_declarator_list SEMICOLON
-- On ENUM reduce production declaration -> declaration_specifiers init_declarator_list SEMICOLON
-- On DOUBLE reduce production declaration -> declaration_specifiers init_declarator_list SEMICOLON
-- On DO reduce production declaration -> declaration_specifiers init_declarator_list SEMICOLON
-- On DEFAULT reduce production declaration -> declaration_specifiers init_declarator_list SEMICOLON
-- On DEC_OP reduce production declaration -> declaration_specifiers init_declarator_list SEMICOLON
-- On CONTINUE reduce production declaration -> declaration_specifiers init_declarator_list SEMICOLON
-- On CONSTANT reduce production declaration -> declaration_specifiers init_declarator_list SEMICOLON
-- On CONST reduce production declaration -> declaration_specifiers init_declarator_list SEMICOLON
-- On CHAR reduce production declaration -> declaration_specifiers init_declarator_list SEMICOLON
-- On CASE reduce production declaration -> declaration_specifiers init_declarator_list SEMICOLON
-- On BREAK reduce production declaration -> declaration_specifiers init_declarator_list SEMICOLON
-- On BANG reduce production declaration -> declaration_specifiers init_declarator_list SEMICOLON
-- On AUTO reduce production declaration -> declaration_specifiers init_declarator_list SEMICOLON
-- On AMPERSAND reduce production declaration -> declaration_specifiers init_declarator_list SEMICOLON
-- On # reduce production declaration -> declaration_specifiers init_declarator_list SEMICOLON
** End-of-stream conflict on WHILE VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF TILDE SWITCH STRUCT STRING_LITERAL STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN REGISTER RBRACE PLUS MINUS LPAREN LONG LBRACE INT INC_OP IF IDENTIFIER GOTO FOR FLOAT EXTERN ENUM DOUBLE DO DEFAULT DEC_OP CONTINUE CONSTANT CONST CHAR CASE BREAK BANG AUTO AMPERSAND
**   There is a tension between
**   (1) reducing production declaration -> declaration_specifiers init_declarator_list SEMICOLON
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 319:
init_declarator_list -> init_declarator_list COMMA . init_declarator [ SEMICOLON COMMA ]
-- On STAR shift to state 9
-- On LPAREN shift to state 19
-- On IDENTIFIER shift to state 20
-- On pointer shift to state 21
-- On init_declarator shift to state 320
-- On direct_declarator shift to state 161
-- On declarator shift to state 321

State 320:
init_declarator_list -> init_declarator_list COMMA init_declarator . [ SEMICOLON COMMA ]
-- On SEMICOLON reduce production init_declarator_list -> init_declarator_list COMMA init_declarator
-- On COMMA reduce production init_declarator_list -> init_declarator_list COMMA init_declarator

State 321:
init_declarator -> declarator . [ SEMICOLON COMMA ]
init_declarator -> declarator . EQUAL c_initializer [ SEMICOLON COMMA ]
-- On EQUAL shift to state 322
-- On SEMICOLON reduce production init_declarator -> declarator
-- On COMMA reduce production init_declarator -> declarator

State 322:
init_declarator -> declarator EQUAL . c_initializer [ SEMICOLON COMMA ]
-- On TILDE shift to state 34
-- On STRING_LITERAL shift to state 35
-- On STAR shift to state 36
-- On SIZEOF shift to state 37
-- On PLUS shift to state 38
-- On MINUS shift to state 39
-- On LPAREN shift to state 41
-- On LBRACE shift to state 323
-- On INC_OP shift to state 42
-- On IDENTIFIER shift to state 44
-- On DEC_OP shift to state 45
-- On CONSTANT shift to state 46
-- On BANG shift to state 47
-- On AMPERSAND shift to state 48
-- On unary_operator shift to state 49
-- On unary_expression shift to state 57
-- On shift_expression shift to state 70
-- On relational_expression shift to state 87
-- On primary_expression shift to state 51
-- On postfix_expression shift to state 52
-- On multiplicative_expression shift to state 72
-- On logical_or_expression shift to state 97
-- On logical_and_expression shift to state 99
-- On inclusive_or_expression shift to state 115
-- On exclusive_or_expression shift to state 114
-- On equality_expression shift to state 105
-- On conditional_expression shift to state 118
-- On cast_expression shift to state 79
-- On c_initializer shift to state 331
-- On assignment_expression shift to state 329
-- On and_expression shift to state 113
-- On additive_expression shift to state 90

State 323:
c_initializer -> LBRACE . c_initializer_list RBRACE [ SEMICOLON RBRACE COMMA ]
c_initializer -> LBRACE . c_initializer_list COMMA RBRACE [ SEMICOLON RBRACE COMMA ]
-- On TILDE shift to state 34
-- On STRING_LITERAL shift to state 35
-- On STAR shift to state 36
-- On SIZEOF shift to state 37
-- On PLUS shift to state 38
-- On MINUS shift to state 39
-- On LPAREN shift to state 41
-- On LBRACE shift to state 323
-- On INC_OP shift to state 42
-- On IDENTIFIER shift to state 44
-- On DEC_OP shift to state 45
-- On CONSTANT shift to state 46
-- On BANG shift to state 47
-- On AMPERSAND shift to state 48
-- On unary_operator shift to state 49
-- On unary_expression shift to state 57
-- On shift_expression shift to state 70
-- On relational_expression shift to state 87
-- On primary_expression shift to state 51
-- On postfix_expression shift to state 52
-- On multiplicative_expression shift to state 72
-- On logical_or_expression shift to state 97
-- On logical_and_expression shift to state 99
-- On inclusive_or_expression shift to state 115
-- On exclusive_or_expression shift to state 114
-- On equality_expression shift to state 105
-- On conditional_expression shift to state 118
-- On cast_expression shift to state 79
-- On c_initializer_list shift to state 324
-- On c_initializer shift to state 330
-- On assignment_expression shift to state 329
-- On and_expression shift to state 113
-- On additive_expression shift to state 90

State 324:
c_initializer -> LBRACE c_initializer_list . RBRACE [ SEMICOLON RBRACE COMMA ]
c_initializer -> LBRACE c_initializer_list . COMMA RBRACE [ SEMICOLON RBRACE COMMA ]
c_initializer_list -> c_initializer_list . COMMA c_initializer [ RBRACE COMMA ]
-- On RBRACE shift to state 325
-- On COMMA shift to state 326

State 325:
c_initializer -> LBRACE c_initializer_list RBRACE . [ SEMICOLON RBRACE COMMA ]
-- On SEMICOLON reduce production c_initializer -> LBRACE c_initializer_list RBRACE
-- On RBRACE reduce production c_initializer -> LBRACE c_initializer_list RBRACE
-- On COMMA reduce production c_initializer -> LBRACE c_initializer_list RBRACE

State 326:
c_initializer -> LBRACE c_initializer_list COMMA . RBRACE [ SEMICOLON RBRACE COMMA ]
c_initializer_list -> c_initializer_list COMMA . c_initializer [ RBRACE COMMA ]
-- On TILDE shift to state 34
-- On STRING_LITERAL shift to state 35
-- On STAR shift to state 36
-- On SIZEOF shift to state 37
-- On RBRACE shift to state 327
-- On PLUS shift to state 38
-- On MINUS shift to state 39
-- On LPAREN shift to state 41
-- On LBRACE shift to state 323
-- On INC_OP shift to state 42
-- On IDENTIFIER shift to state 44
-- On DEC_OP shift to state 45
-- On CONSTANT shift to state 46
-- On BANG shift to state 47
-- On AMPERSAND shift to state 48
-- On unary_operator shift to state 49
-- On unary_expression shift to state 57
-- On shift_expression shift to state 70
-- On relational_expression shift to state 87
-- On primary_expression shift to state 51
-- On postfix_expression shift to state 52
-- On multiplicative_expression shift to state 72
-- On logical_or_expression shift to state 97
-- On logical_and_expression shift to state 99
-- On inclusive_or_expression shift to state 115
-- On exclusive_or_expression shift to state 114
-- On equality_expression shift to state 105
-- On conditional_expression shift to state 118
-- On cast_expression shift to state 79
-- On c_initializer shift to state 328
-- On assignment_expression shift to state 329
-- On and_expression shift to state 113
-- On additive_expression shift to state 90

State 327:
c_initializer -> LBRACE c_initializer_list COMMA RBRACE . [ SEMICOLON RBRACE COMMA ]
-- On SEMICOLON reduce production c_initializer -> LBRACE c_initializer_list COMMA RBRACE
-- On RBRACE reduce production c_initializer -> LBRACE c_initializer_list COMMA RBRACE
-- On COMMA reduce production c_initializer -> LBRACE c_initializer_list COMMA RBRACE

State 328:
c_initializer_list -> c_initializer_list COMMA c_initializer . [ RBRACE COMMA ]
-- On RBRACE reduce production c_initializer_list -> c_initializer_list COMMA c_initializer
-- On COMMA reduce production c_initializer_list -> c_initializer_list COMMA c_initializer

State 329:
c_initializer -> assignment_expression . [ SEMICOLON RBRACE COMMA ]
-- On SEMICOLON reduce production c_initializer -> assignment_expression
-- On RBRACE reduce production c_initializer -> assignment_expression
-- On COMMA reduce production c_initializer -> assignment_expression

State 330:
c_initializer_list -> c_initializer . [ RBRACE COMMA ]
-- On RBRACE reduce production c_initializer_list -> c_initializer
-- On COMMA reduce production c_initializer_list -> c_initializer

State 331:
init_declarator -> declarator EQUAL c_initializer . [ SEMICOLON COMMA ]
-- On SEMICOLON reduce production init_declarator -> declarator EQUAL c_initializer
-- On COMMA reduce production init_declarator -> declarator EQUAL c_initializer

State 332:
init_declarator_list -> init_declarator . [ SEMICOLON COMMA ]
-- On SEMICOLON reduce production init_declarator_list -> init_declarator
-- On COMMA reduce production init_declarator_list -> init_declarator

State 333:
compound_statement -> LBRACE declaration_list . RBRACE [ WHILE VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF TILDE SWITCH STRUCT STRING_LITERAL STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN REGISTER RBRACE PLUS MINUS LPAREN LONG LBRACE INT INC_OP IF IDENTIFIER GOTO FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT DEC_OP CONTINUE CONSTANT CONST CHAR CASE BREAK BANG AUTO AMPERSAND # ]
compound_statement -> LBRACE declaration_list . statement_list RBRACE [ WHILE VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF TILDE SWITCH STRUCT STRING_LITERAL STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN REGISTER RBRACE PLUS MINUS LPAREN LONG LBRACE INT INC_OP IF IDENTIFIER GOTO FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT DEC_OP CONTINUE CONSTANT CONST CHAR CASE BREAK BANG AUTO AMPERSAND # ]
declaration_list -> declaration_list . declaration [ WHILE VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF TILDE SWITCH STRUCT STRING_LITERAL STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN REGISTER RBRACE PLUS MINUS LPAREN LONG LBRACE INT INC_OP IF IDENTIFIER GOTO FOR FLOAT EXTERN ENUM DOUBLE DO DEFAULT DEC_OP CONTINUE CONSTANT CONST CHAR CASE BREAK BANG AUTO AMPERSAND ]
-- On WHILE shift to state 247
-- On VOLATILE shift to state 1
-- On VOID shift to state 2
-- On UNSIGNED shift to state 3
-- On UNION shift to state 4
-- On TYPE_NAME shift to state 5
-- On TYPEDEF shift to state 6
-- On TILDE shift to state 34
-- On SWITCH shift to state 251
-- On STRUCT shift to state 7
-- On STRING_LITERAL shift to state 35
-- On STATIC shift to state 8
-- On STAR shift to state 36
-- On SIZEOF shift to state 37
-- On SIGNED shift to state 16
-- On SHORT shift to state 17
-- On SEMICOLON shift to state 255
-- On RETURN shift to state 256
-- On REGISTER shift to state 18
-- On RBRACE shift to state 334
-- On PLUS shift to state 38
-- On MINUS shift to state 39
-- On LPAREN shift to state 41
-- On LONG shift to state 25
-- On LBRACE shift to state 246
-- On INT shift to state 26
-- On INC_OP shift to state 42
-- On IF shift to state 260
-- On IDENTIFIER shift to state 264
-- On GOTO shift to state 266
-- On FOR shift to state 269
-- On FLOAT shift to state 28
-- On EXTERN shift to state 29
-- On ENUM shift to state 30
-- On DOUBLE shift to state 143
-- On DO shift to state 274
-- On DEFAULT shift to state 275
-- On DEC_OP shift to state 45
-- On CONTINUE shift to state 277
-- On CONSTANT shift to state 46
-- On CONST shift to state 10
-- On CHAR shift to state 144
-- On CASE shift to state 279
-- On BREAK shift to state 282
-- On BANG shift to state 47
-- On AUTO shift to state 188
-- On AMPERSAND shift to state 48
-- On unary_operator shift to state 49
-- On unary_expression shift to state 57
-- On type_specifier shift to state 189
-- On type_qualifier shift to state 190
-- On struct_or_union_specifier shift to state 147
-- On struct_or_union shift to state 148
-- On storage_class_specifier shift to state 191
-- On statement_list shift to state 335
-- On statement shift to state 314
-- On shift_expression shift to state 70
-- On selection_statement shift to state 285
-- On relational_expression shift to state 87
-- On primary_expression shift to state 51
-- On postfix_expression shift to state 52
-- On multiplicative_expression shift to state 72
-- On logical_or_expression shift to state 97
-- On logical_and_expression shift to state 99
-- On labeled_statement shift to state 286
-- On jump_statement shift to state 287
-- On iteration_statement shift to state 288
-- On inclusive_or_expression shift to state 115
-- On expression_statement shift to state 289
-- On expression shift to state 290
-- On exclusive_or_expression shift to state 114
-- On equality_expression shift to state 105
-- On enum_specifier shift to state 170
-- On declaration_specifiers shift to state 315
-- On declaration shift to state 337
-- On conditional_expression shift to state 118
-- On compound_statement shift to state 292
-- On cast_expression shift to state 79
-- On assignment_expression shift to state 122
-- On and_expression shift to state 113
-- On additive_expression shift to state 90

State 334:
compound_statement -> LBRACE declaration_list RBRACE . [ WHILE VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF TILDE SWITCH STRUCT STRING_LITERAL STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN REGISTER RBRACE PLUS MINUS LPAREN LONG LBRACE INT INC_OP IF IDENTIFIER GOTO FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT DEC_OP CONTINUE CONSTANT CONST CHAR CASE BREAK BANG AUTO AMPERSAND # ]
-- On WHILE reduce production compound_statement -> LBRACE declaration_list RBRACE
-- On VOLATILE reduce production compound_statement -> LBRACE declaration_list RBRACE
-- On VOID reduce production compound_statement -> LBRACE declaration_list RBRACE
-- On UNSIGNED reduce production compound_statement -> LBRACE declaration_list RBRACE
-- On UNION reduce production compound_statement -> LBRACE declaration_list RBRACE
-- On TYPE_NAME reduce production compound_statement -> LBRACE declaration_list RBRACE
-- On TYPEDEF reduce production compound_statement -> LBRACE declaration_list RBRACE
-- On TILDE reduce production compound_statement -> LBRACE declaration_list RBRACE
-- On SWITCH reduce production compound_statement -> LBRACE declaration_list RBRACE
-- On STRUCT reduce production compound_statement -> LBRACE declaration_list RBRACE
-- On STRING_LITERAL reduce production compound_statement -> LBRACE declaration_list RBRACE
-- On STATIC reduce production compound_statement -> LBRACE declaration_list RBRACE
-- On STAR reduce production compound_statement -> LBRACE declaration_list RBRACE
-- On SIZEOF reduce production compound_statement -> LBRACE declaration_list RBRACE
-- On SIGNED reduce production compound_statement -> LBRACE declaration_list RBRACE
-- On SHORT reduce production compound_statement -> LBRACE declaration_list RBRACE
-- On SEMICOLON reduce production compound_statement -> LBRACE declaration_list RBRACE
-- On RETURN reduce production compound_statement -> LBRACE declaration_list RBRACE
-- On REGISTER reduce production compound_statement -> LBRACE declaration_list RBRACE
-- On RBRACE reduce production compound_statement -> LBRACE declaration_list RBRACE
-- On PLUS reduce production compound_statement -> LBRACE declaration_list RBRACE
-- On MINUS reduce production compound_statement -> LBRACE declaration_list RBRACE
-- On LPAREN reduce production compound_statement -> LBRACE declaration_list RBRACE
-- On LONG reduce production compound_statement -> LBRACE declaration_list RBRACE
-- On LBRACE reduce production compound_statement -> LBRACE declaration_list RBRACE
-- On INT reduce production compound_statement -> LBRACE declaration_list RBRACE
-- On INC_OP reduce production compound_statement -> LBRACE declaration_list RBRACE
-- On IF reduce production compound_statement -> LBRACE declaration_list RBRACE
-- On IDENTIFIER reduce production compound_statement -> LBRACE declaration_list RBRACE
-- On GOTO reduce production compound_statement -> LBRACE declaration_list RBRACE
-- On FOR reduce production compound_statement -> LBRACE declaration_list RBRACE
-- On FLOAT reduce production compound_statement -> LBRACE declaration_list RBRACE
-- On EXTERN reduce production compound_statement -> LBRACE declaration_list RBRACE
-- On ENUM reduce production compound_statement -> LBRACE declaration_list RBRACE
-- On ELSE reduce production compound_statement -> LBRACE declaration_list RBRACE
-- On DOUBLE reduce production compound_statement -> LBRACE declaration_list RBRACE
-- On DO reduce production compound_statement -> LBRACE declaration_list RBRACE
-- On DEFAULT reduce production compound_statement -> LBRACE declaration_list RBRACE
-- On DEC_OP reduce production compound_statement -> LBRACE declaration_list RBRACE
-- On CONTINUE reduce production compound_statement -> LBRACE declaration_list RBRACE
-- On CONSTANT reduce production compound_statement -> LBRACE declaration_list RBRACE
-- On CONST reduce production compound_statement -> LBRACE declaration_list RBRACE
-- On CHAR reduce production compound_statement -> LBRACE declaration_list RBRACE
-- On CASE reduce production compound_statement -> LBRACE declaration_list RBRACE
-- On BREAK reduce production compound_statement -> LBRACE declaration_list RBRACE
-- On BANG reduce production compound_statement -> LBRACE declaration_list RBRACE
-- On AUTO reduce production compound_statement -> LBRACE declaration_list RBRACE
-- On AMPERSAND reduce production compound_statement -> LBRACE declaration_list RBRACE
-- On # reduce production compound_statement -> LBRACE declaration_list RBRACE
** End-of-stream conflict on WHILE VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF TILDE SWITCH STRUCT STRING_LITERAL STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN REGISTER RBRACE PLUS MINUS LPAREN LONG LBRACE INT INC_OP IF IDENTIFIER GOTO FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT DEC_OP CONTINUE CONSTANT CONST CHAR CASE BREAK BANG AUTO AMPERSAND
**   There is a tension between
**   (1) reducing production compound_statement -> LBRACE declaration_list RBRACE
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 335:
compound_statement -> LBRACE declaration_list statement_list . RBRACE [ WHILE VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF TILDE SWITCH STRUCT STRING_LITERAL STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN REGISTER RBRACE PLUS MINUS LPAREN LONG LBRACE INT INC_OP IF IDENTIFIER GOTO FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT DEC_OP CONTINUE CONSTANT CONST CHAR CASE BREAK BANG AUTO AMPERSAND # ]
statement_list -> statement_list . statement [ WHILE TILDE SWITCH STRING_LITERAL STAR SIZEOF SEMICOLON RETURN RBRACE PLUS MINUS LPAREN LBRACE INC_OP IF IDENTIFIER GOTO FOR DO DEFAULT DEC_OP CONTINUE CONSTANT CASE BREAK BANG AMPERSAND ]
-- On WHILE shift to state 247
-- On TILDE shift to state 34
-- On SWITCH shift to state 251
-- On STRING_LITERAL shift to state 35
-- On STAR shift to state 36
-- On SIZEOF shift to state 37
-- On SEMICOLON shift to state 255
-- On RETURN shift to state 256
-- On RBRACE shift to state 336
-- On PLUS shift to state 38
-- On MINUS shift to state 39
-- On LPAREN shift to state 41
-- On LBRACE shift to state 246
-- On INC_OP shift to state 42
-- On IF shift to state 260
-- On IDENTIFIER shift to state 264
-- On GOTO shift to state 266
-- On FOR shift to state 269
-- On DO shift to state 274
-- On DEFAULT shift to state 275
-- On DEC_OP shift to state 45
-- On CONTINUE shift to state 277
-- On CONSTANT shift to state 46
-- On CASE shift to state 279
-- On BREAK shift to state 282
-- On BANG shift to state 47
-- On AMPERSAND shift to state 48
-- On unary_operator shift to state 49
-- On unary_expression shift to state 57
-- On statement shift to state 313
-- On shift_expression shift to state 70
-- On selection_statement shift to state 285
-- On relational_expression shift to state 87
-- On primary_expression shift to state 51
-- On postfix_expression shift to state 52
-- On multiplicative_expression shift to state 72
-- On logical_or_expression shift to state 97
-- On logical_and_expression shift to state 99
-- On labeled_statement shift to state 286
-- On jump_statement shift to state 287
-- On iteration_statement shift to state 288
-- On inclusive_or_expression shift to state 115
-- On expression_statement shift to state 289
-- On expression shift to state 290
-- On exclusive_or_expression shift to state 114
-- On equality_expression shift to state 105
-- On conditional_expression shift to state 118
-- On compound_statement shift to state 292
-- On cast_expression shift to state 79
-- On assignment_expression shift to state 122
-- On and_expression shift to state 113
-- On additive_expression shift to state 90

State 336:
compound_statement -> LBRACE declaration_list statement_list RBRACE . [ WHILE VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF TILDE SWITCH STRUCT STRING_LITERAL STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN REGISTER RBRACE PLUS MINUS LPAREN LONG LBRACE INT INC_OP IF IDENTIFIER GOTO FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT DEC_OP CONTINUE CONSTANT CONST CHAR CASE BREAK BANG AUTO AMPERSAND # ]
-- On WHILE reduce production compound_statement -> LBRACE declaration_list statement_list RBRACE
-- On VOLATILE reduce production compound_statement -> LBRACE declaration_list statement_list RBRACE
-- On VOID reduce production compound_statement -> LBRACE declaration_list statement_list RBRACE
-- On UNSIGNED reduce production compound_statement -> LBRACE declaration_list statement_list RBRACE
-- On UNION reduce production compound_statement -> LBRACE declaration_list statement_list RBRACE
-- On TYPE_NAME reduce production compound_statement -> LBRACE declaration_list statement_list RBRACE
-- On TYPEDEF reduce production compound_statement -> LBRACE declaration_list statement_list RBRACE
-- On TILDE reduce production compound_statement -> LBRACE declaration_list statement_list RBRACE
-- On SWITCH reduce production compound_statement -> LBRACE declaration_list statement_list RBRACE
-- On STRUCT reduce production compound_statement -> LBRACE declaration_list statement_list RBRACE
-- On STRING_LITERAL reduce production compound_statement -> LBRACE declaration_list statement_list RBRACE
-- On STATIC reduce production compound_statement -> LBRACE declaration_list statement_list RBRACE
-- On STAR reduce production compound_statement -> LBRACE declaration_list statement_list RBRACE
-- On SIZEOF reduce production compound_statement -> LBRACE declaration_list statement_list RBRACE
-- On SIGNED reduce production compound_statement -> LBRACE declaration_list statement_list RBRACE
-- On SHORT reduce production compound_statement -> LBRACE declaration_list statement_list RBRACE
-- On SEMICOLON reduce production compound_statement -> LBRACE declaration_list statement_list RBRACE
-- On RETURN reduce production compound_statement -> LBRACE declaration_list statement_list RBRACE
-- On REGISTER reduce production compound_statement -> LBRACE declaration_list statement_list RBRACE
-- On RBRACE reduce production compound_statement -> LBRACE declaration_list statement_list RBRACE
-- On PLUS reduce production compound_statement -> LBRACE declaration_list statement_list RBRACE
-- On MINUS reduce production compound_statement -> LBRACE declaration_list statement_list RBRACE
-- On LPAREN reduce production compound_statement -> LBRACE declaration_list statement_list RBRACE
-- On LONG reduce production compound_statement -> LBRACE declaration_list statement_list RBRACE
-- On LBRACE reduce production compound_statement -> LBRACE declaration_list statement_list RBRACE
-- On INT reduce production compound_statement -> LBRACE declaration_list statement_list RBRACE
-- On INC_OP reduce production compound_statement -> LBRACE declaration_list statement_list RBRACE
-- On IF reduce production compound_statement -> LBRACE declaration_list statement_list RBRACE
-- On IDENTIFIER reduce production compound_statement -> LBRACE declaration_list statement_list RBRACE
-- On GOTO reduce production compound_statement -> LBRACE declaration_list statement_list RBRACE
-- On FOR reduce production compound_statement -> LBRACE declaration_list statement_list RBRACE
-- On FLOAT reduce production compound_statement -> LBRACE declaration_list statement_list RBRACE
-- On EXTERN reduce production compound_statement -> LBRACE declaration_list statement_list RBRACE
-- On ENUM reduce production compound_statement -> LBRACE declaration_list statement_list RBRACE
-- On ELSE reduce production compound_statement -> LBRACE declaration_list statement_list RBRACE
-- On DOUBLE reduce production compound_statement -> LBRACE declaration_list statement_list RBRACE
-- On DO reduce production compound_statement -> LBRACE declaration_list statement_list RBRACE
-- On DEFAULT reduce production compound_statement -> LBRACE declaration_list statement_list RBRACE
-- On DEC_OP reduce production compound_statement -> LBRACE declaration_list statement_list RBRACE
-- On CONTINUE reduce production compound_statement -> LBRACE declaration_list statement_list RBRACE
-- On CONSTANT reduce production compound_statement -> LBRACE declaration_list statement_list RBRACE
-- On CONST reduce production compound_statement -> LBRACE declaration_list statement_list RBRACE
-- On CHAR reduce production compound_statement -> LBRACE declaration_list statement_list RBRACE
-- On CASE reduce production compound_statement -> LBRACE declaration_list statement_list RBRACE
-- On BREAK reduce production compound_statement -> LBRACE declaration_list statement_list RBRACE
-- On BANG reduce production compound_statement -> LBRACE declaration_list statement_list RBRACE
-- On AUTO reduce production compound_statement -> LBRACE declaration_list statement_list RBRACE
-- On AMPERSAND reduce production compound_statement -> LBRACE declaration_list statement_list RBRACE
-- On # reduce production compound_statement -> LBRACE declaration_list statement_list RBRACE
** End-of-stream conflict on WHILE VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF TILDE SWITCH STRUCT STRING_LITERAL STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN REGISTER RBRACE PLUS MINUS LPAREN LONG LBRACE INT INC_OP IF IDENTIFIER GOTO FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT DEC_OP CONTINUE CONSTANT CONST CHAR CASE BREAK BANG AUTO AMPERSAND
**   There is a tension between
**   (1) reducing production compound_statement -> LBRACE declaration_list statement_list RBRACE
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 337:
declaration_list -> declaration_list declaration . [ WHILE VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF TILDE SWITCH STRUCT STRING_LITERAL STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN REGISTER RBRACE PLUS MINUS LPAREN LONG LBRACE INT INC_OP IF IDENTIFIER GOTO FOR FLOAT EXTERN ENUM DOUBLE DO DEFAULT DEC_OP CONTINUE CONSTANT CONST CHAR CASE BREAK BANG AUTO AMPERSAND ]
-- On WHILE reduce production declaration_list -> declaration_list declaration
-- On VOLATILE reduce production declaration_list -> declaration_list declaration
-- On VOID reduce production declaration_list -> declaration_list declaration
-- On UNSIGNED reduce production declaration_list -> declaration_list declaration
-- On UNION reduce production declaration_list -> declaration_list declaration
-- On TYPE_NAME reduce production declaration_list -> declaration_list declaration
-- On TYPEDEF reduce production declaration_list -> declaration_list declaration
-- On TILDE reduce production declaration_list -> declaration_list declaration
-- On SWITCH reduce production declaration_list -> declaration_list declaration
-- On STRUCT reduce production declaration_list -> declaration_list declaration
-- On STRING_LITERAL reduce production declaration_list -> declaration_list declaration
-- On STATIC reduce production declaration_list -> declaration_list declaration
-- On STAR reduce production declaration_list -> declaration_list declaration
-- On SIZEOF reduce production declaration_list -> declaration_list declaration
-- On SIGNED reduce production declaration_list -> declaration_list declaration
-- On SHORT reduce production declaration_list -> declaration_list declaration
-- On SEMICOLON reduce production declaration_list -> declaration_list declaration
-- On RETURN reduce production declaration_list -> declaration_list declaration
-- On REGISTER reduce production declaration_list -> declaration_list declaration
-- On RBRACE reduce production declaration_list -> declaration_list declaration
-- On PLUS reduce production declaration_list -> declaration_list declaration
-- On MINUS reduce production declaration_list -> declaration_list declaration
-- On LPAREN reduce production declaration_list -> declaration_list declaration
-- On LONG reduce production declaration_list -> declaration_list declaration
-- On LBRACE reduce production declaration_list -> declaration_list declaration
-- On INT reduce production declaration_list -> declaration_list declaration
-- On INC_OP reduce production declaration_list -> declaration_list declaration
-- On IF reduce production declaration_list -> declaration_list declaration
-- On IDENTIFIER reduce production declaration_list -> declaration_list declaration
-- On GOTO reduce production declaration_list -> declaration_list declaration
-- On FOR reduce production declaration_list -> declaration_list declaration
-- On FLOAT reduce production declaration_list -> declaration_list declaration
-- On EXTERN reduce production declaration_list -> declaration_list declaration
-- On ENUM reduce production declaration_list -> declaration_list declaration
-- On DOUBLE reduce production declaration_list -> declaration_list declaration
-- On DO reduce production declaration_list -> declaration_list declaration
-- On DEFAULT reduce production declaration_list -> declaration_list declaration
-- On DEC_OP reduce production declaration_list -> declaration_list declaration
-- On CONTINUE reduce production declaration_list -> declaration_list declaration
-- On CONSTANT reduce production declaration_list -> declaration_list declaration
-- On CONST reduce production declaration_list -> declaration_list declaration
-- On CHAR reduce production declaration_list -> declaration_list declaration
-- On CASE reduce production declaration_list -> declaration_list declaration
-- On BREAK reduce production declaration_list -> declaration_list declaration
-- On BANG reduce production declaration_list -> declaration_list declaration
-- On AUTO reduce production declaration_list -> declaration_list declaration
-- On AMPERSAND reduce production declaration_list -> declaration_list declaration

State 338:
declaration_list -> declaration . [ WHILE VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF TILDE SWITCH STRUCT STRING_LITERAL STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN REGISTER RBRACE PLUS MINUS LPAREN LONG LBRACE INT INC_OP IF IDENTIFIER GOTO FOR FLOAT EXTERN ENUM DOUBLE DO DEFAULT DEC_OP CONTINUE CONSTANT CONST CHAR CASE BREAK BANG AUTO AMPERSAND ]
-- On WHILE reduce production declaration_list -> declaration
-- On VOLATILE reduce production declaration_list -> declaration
-- On VOID reduce production declaration_list -> declaration
-- On UNSIGNED reduce production declaration_list -> declaration
-- On UNION reduce production declaration_list -> declaration
-- On TYPE_NAME reduce production declaration_list -> declaration
-- On TYPEDEF reduce production declaration_list -> declaration
-- On TILDE reduce production declaration_list -> declaration
-- On SWITCH reduce production declaration_list -> declaration
-- On STRUCT reduce production declaration_list -> declaration
-- On STRING_LITERAL reduce production declaration_list -> declaration
-- On STATIC reduce production declaration_list -> declaration
-- On STAR reduce production declaration_list -> declaration
-- On SIZEOF reduce production declaration_list -> declaration
-- On SIGNED reduce production declaration_list -> declaration
-- On SHORT reduce production declaration_list -> declaration
-- On SEMICOLON reduce production declaration_list -> declaration
-- On RETURN reduce production declaration_list -> declaration
-- On REGISTER reduce production declaration_list -> declaration
-- On RBRACE reduce production declaration_list -> declaration
-- On PLUS reduce production declaration_list -> declaration
-- On MINUS reduce production declaration_list -> declaration
-- On LPAREN reduce production declaration_list -> declaration
-- On LONG reduce production declaration_list -> declaration
-- On LBRACE reduce production declaration_list -> declaration
-- On INT reduce production declaration_list -> declaration
-- On INC_OP reduce production declaration_list -> declaration
-- On IF reduce production declaration_list -> declaration
-- On IDENTIFIER reduce production declaration_list -> declaration
-- On GOTO reduce production declaration_list -> declaration
-- On FOR reduce production declaration_list -> declaration
-- On FLOAT reduce production declaration_list -> declaration
-- On EXTERN reduce production declaration_list -> declaration
-- On ENUM reduce production declaration_list -> declaration
-- On DOUBLE reduce production declaration_list -> declaration
-- On DO reduce production declaration_list -> declaration
-- On DEFAULT reduce production declaration_list -> declaration
-- On DEC_OP reduce production declaration_list -> declaration
-- On CONTINUE reduce production declaration_list -> declaration
-- On CONSTANT reduce production declaration_list -> declaration
-- On CONST reduce production declaration_list -> declaration
-- On CHAR reduce production declaration_list -> declaration
-- On CASE reduce production declaration_list -> declaration
-- On BREAK reduce production declaration_list -> declaration
-- On BANG reduce production declaration_list -> declaration
-- On AUTO reduce production declaration_list -> declaration
-- On AMPERSAND reduce production declaration_list -> declaration

State 339:
declaration_list -> declaration_list . declaration [ VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF STRUCT STATIC SIGNED SHORT REGISTER LONG LBRACE INT FLOAT EXTERN ENUM DOUBLE CONST CHAR AUTO ]
function_definition -> declarator declaration_list . compound_statement [ VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF STRUCT STATIC STAR SIGNED SHORT REGISTER LPAREN LONG INT IDENTIFIER FLOAT EXTERN ENUM DOUBLE CONST CHAR AUTO # ]
-- On VOLATILE shift to state 1
-- On VOID shift to state 2
-- On UNSIGNED shift to state 3
-- On UNION shift to state 4
-- On TYPE_NAME shift to state 5
-- On TYPEDEF shift to state 6
-- On STRUCT shift to state 7
-- On STATIC shift to state 8
-- On SIGNED shift to state 16
-- On SHORT shift to state 17
-- On REGISTER shift to state 18
-- On LONG shift to state 25
-- On LBRACE shift to state 246
-- On INT shift to state 26
-- On FLOAT shift to state 28
-- On EXTERN shift to state 29
-- On ENUM shift to state 30
-- On DOUBLE shift to state 143
-- On CONST shift to state 10
-- On CHAR shift to state 144
-- On AUTO shift to state 188
-- On type_specifier shift to state 189
-- On type_qualifier shift to state 190
-- On struct_or_union_specifier shift to state 147
-- On struct_or_union shift to state 148
-- On storage_class_specifier shift to state 191
-- On enum_specifier shift to state 170
-- On declaration_specifiers shift to state 315
-- On declaration shift to state 337
-- On compound_statement shift to state 340

State 340:
function_definition -> declarator declaration_list compound_statement . [ VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF STRUCT STATIC STAR SIGNED SHORT REGISTER LPAREN LONG INT IDENTIFIER FLOAT EXTERN ENUM DOUBLE CONST CHAR AUTO # ]
-- On VOLATILE reduce production function_definition -> declarator declaration_list compound_statement
-- On VOID reduce production function_definition -> declarator declaration_list compound_statement
-- On UNSIGNED reduce production function_definition -> declarator declaration_list compound_statement
-- On UNION reduce production function_definition -> declarator declaration_list compound_statement
-- On TYPE_NAME reduce production function_definition -> declarator declaration_list compound_statement
-- On TYPEDEF reduce production function_definition -> declarator declaration_list compound_statement
-- On STRUCT reduce production function_definition -> declarator declaration_list compound_statement
-- On STATIC reduce production function_definition -> declarator declaration_list compound_statement
-- On STAR reduce production function_definition -> declarator declaration_list compound_statement
-- On SIGNED reduce production function_definition -> declarator declaration_list compound_statement
-- On SHORT reduce production function_definition -> declarator declaration_list compound_statement
-- On REGISTER reduce production function_definition -> declarator declaration_list compound_statement
-- On LPAREN reduce production function_definition -> declarator declaration_list compound_statement
-- On LONG reduce production function_definition -> declarator declaration_list compound_statement
-- On INT reduce production function_definition -> declarator declaration_list compound_statement
-- On IDENTIFIER reduce production function_definition -> declarator declaration_list compound_statement
-- On FLOAT reduce production function_definition -> declarator declaration_list compound_statement
-- On EXTERN reduce production function_definition -> declarator declaration_list compound_statement
-- On ENUM reduce production function_definition -> declarator declaration_list compound_statement
-- On DOUBLE reduce production function_definition -> declarator declaration_list compound_statement
-- On CONST reduce production function_definition -> declarator declaration_list compound_statement
-- On CHAR reduce production function_definition -> declarator declaration_list compound_statement
-- On AUTO reduce production function_definition -> declarator declaration_list compound_statement
-- On # reduce production function_definition -> declarator declaration_list compound_statement
** End-of-stream conflict on VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF STRUCT STATIC STAR SIGNED SHORT REGISTER LPAREN LONG INT IDENTIFIER FLOAT EXTERN ENUM DOUBLE CONST CHAR AUTO
**   There is a tension between
**   (1) reducing production function_definition -> declarator declaration_list compound_statement
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 341:
function_definition -> declarator compound_statement . [ VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF STRUCT STATIC STAR SIGNED SHORT REGISTER LPAREN LONG INT IDENTIFIER FLOAT EXTERN ENUM DOUBLE CONST CHAR AUTO # ]
-- On VOLATILE reduce production function_definition -> declarator compound_statement
-- On VOID reduce production function_definition -> declarator compound_statement
-- On UNSIGNED reduce production function_definition -> declarator compound_statement
-- On UNION reduce production function_definition -> declarator compound_statement
-- On TYPE_NAME reduce production function_definition -> declarator compound_statement
-- On TYPEDEF reduce production function_definition -> declarator compound_statement
-- On STRUCT reduce production function_definition -> declarator compound_statement
-- On STATIC reduce production function_definition -> declarator compound_statement
-- On STAR reduce production function_definition -> declarator compound_statement
-- On SIGNED reduce production function_definition -> declarator compound_statement
-- On SHORT reduce production function_definition -> declarator compound_statement
-- On REGISTER reduce production function_definition -> declarator compound_statement
-- On LPAREN reduce production function_definition -> declarator compound_statement
-- On LONG reduce production function_definition -> declarator compound_statement
-- On INT reduce production function_definition -> declarator compound_statement
-- On IDENTIFIER reduce production function_definition -> declarator compound_statement
-- On FLOAT reduce production function_definition -> declarator compound_statement
-- On EXTERN reduce production function_definition -> declarator compound_statement
-- On ENUM reduce production function_definition -> declarator compound_statement
-- On DOUBLE reduce production function_definition -> declarator compound_statement
-- On CONST reduce production function_definition -> declarator compound_statement
-- On CHAR reduce production function_definition -> declarator compound_statement
-- On AUTO reduce production function_definition -> declarator compound_statement
-- On # reduce production function_definition -> declarator compound_statement
** End-of-stream conflict on VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF STRUCT STATIC STAR SIGNED SHORT REGISTER LPAREN LONG INT IDENTIFIER FLOAT EXTERN ENUM DOUBLE CONST CHAR AUTO
**   There is a tension between
**   (1) reducing production function_definition -> declarator compound_statement
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 342:
declaration -> declaration_specifiers . SEMICOLON [ VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF STRUCT STATIC STAR SIGNED SHORT REGISTER LPAREN LONG INT IDENTIFIER FLOAT EXTERN ENUM DOUBLE CONST CHAR AUTO # ]
declaration -> declaration_specifiers . init_declarator_list SEMICOLON [ VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF STRUCT STATIC STAR SIGNED SHORT REGISTER LPAREN LONG INT IDENTIFIER FLOAT EXTERN ENUM DOUBLE CONST CHAR AUTO # ]
function_definition -> declaration_specifiers . declarator declaration_list compound_statement [ VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF STRUCT STATIC STAR SIGNED SHORT REGISTER LPAREN LONG INT IDENTIFIER FLOAT EXTERN ENUM DOUBLE CONST CHAR AUTO # ]
function_definition -> declaration_specifiers . declarator compound_statement [ VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF STRUCT STATIC STAR SIGNED SHORT REGISTER LPAREN LONG INT IDENTIFIER FLOAT EXTERN ENUM DOUBLE CONST CHAR AUTO # ]
-- On STAR shift to state 9
-- On SEMICOLON shift to state 316
-- On LPAREN shift to state 19
-- On IDENTIFIER shift to state 20
-- On pointer shift to state 21
-- On init_declarator_list shift to state 317
-- On init_declarator shift to state 332
-- On direct_declarator shift to state 161
-- On declarator shift to state 343

State 343:
function_definition -> declaration_specifiers declarator . declaration_list compound_statement [ VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF STRUCT STATIC STAR SIGNED SHORT REGISTER LPAREN LONG INT IDENTIFIER FLOAT EXTERN ENUM DOUBLE CONST CHAR AUTO # ]
function_definition -> declaration_specifiers declarator . compound_statement [ VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF STRUCT STATIC STAR SIGNED SHORT REGISTER LPAREN LONG INT IDENTIFIER FLOAT EXTERN ENUM DOUBLE CONST CHAR AUTO # ]
init_declarator -> declarator . [ SEMICOLON COMMA ]
init_declarator -> declarator . EQUAL c_initializer [ SEMICOLON COMMA ]
-- On VOLATILE shift to state 1
-- On VOID shift to state 2
-- On UNSIGNED shift to state 3
-- On UNION shift to state 4
-- On TYPE_NAME shift to state 5
-- On TYPEDEF shift to state 6
-- On STRUCT shift to state 7
-- On STATIC shift to state 8
-- On SIGNED shift to state 16
-- On SHORT shift to state 17
-- On REGISTER shift to state 18
-- On LONG shift to state 25
-- On LBRACE shift to state 246
-- On INT shift to state 26
-- On FLOAT shift to state 28
-- On EXTERN shift to state 29
-- On EQUAL shift to state 322
-- On ENUM shift to state 30
-- On DOUBLE shift to state 143
-- On CONST shift to state 10
-- On CHAR shift to state 144
-- On AUTO shift to state 188
-- On type_specifier shift to state 189
-- On type_qualifier shift to state 190
-- On struct_or_union_specifier shift to state 147
-- On struct_or_union shift to state 148
-- On storage_class_specifier shift to state 191
-- On enum_specifier shift to state 170
-- On declaration_specifiers shift to state 315
-- On declaration_list shift to state 344
-- On declaration shift to state 338
-- On compound_statement shift to state 346
-- On SEMICOLON reduce production init_declarator -> declarator
-- On COMMA reduce production init_declarator -> declarator

State 344:
declaration_list -> declaration_list . declaration [ VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF STRUCT STATIC SIGNED SHORT REGISTER LONG LBRACE INT FLOAT EXTERN ENUM DOUBLE CONST CHAR AUTO ]
function_definition -> declaration_specifiers declarator declaration_list . compound_statement [ VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF STRUCT STATIC STAR SIGNED SHORT REGISTER LPAREN LONG INT IDENTIFIER FLOAT EXTERN ENUM DOUBLE CONST CHAR AUTO # ]
-- On VOLATILE shift to state 1
-- On VOID shift to state 2
-- On UNSIGNED shift to state 3
-- On UNION shift to state 4
-- On TYPE_NAME shift to state 5
-- On TYPEDEF shift to state 6
-- On STRUCT shift to state 7
-- On STATIC shift to state 8
-- On SIGNED shift to state 16
-- On SHORT shift to state 17
-- On REGISTER shift to state 18
-- On LONG shift to state 25
-- On LBRACE shift to state 246
-- On INT shift to state 26
-- On FLOAT shift to state 28
-- On EXTERN shift to state 29
-- On ENUM shift to state 30
-- On DOUBLE shift to state 143
-- On CONST shift to state 10
-- On CHAR shift to state 144
-- On AUTO shift to state 188
-- On type_specifier shift to state 189
-- On type_qualifier shift to state 190
-- On struct_or_union_specifier shift to state 147
-- On struct_or_union shift to state 148
-- On storage_class_specifier shift to state 191
-- On enum_specifier shift to state 170
-- On declaration_specifiers shift to state 315
-- On declaration shift to state 337
-- On compound_statement shift to state 345

State 345:
function_definition -> declaration_specifiers declarator declaration_list compound_statement . [ VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF STRUCT STATIC STAR SIGNED SHORT REGISTER LPAREN LONG INT IDENTIFIER FLOAT EXTERN ENUM DOUBLE CONST CHAR AUTO # ]
-- On VOLATILE reduce production function_definition -> declaration_specifiers declarator declaration_list compound_statement
-- On VOID reduce production function_definition -> declaration_specifiers declarator declaration_list compound_statement
-- On UNSIGNED reduce production function_definition -> declaration_specifiers declarator declaration_list compound_statement
-- On UNION reduce production function_definition -> declaration_specifiers declarator declaration_list compound_statement
-- On TYPE_NAME reduce production function_definition -> declaration_specifiers declarator declaration_list compound_statement
-- On TYPEDEF reduce production function_definition -> declaration_specifiers declarator declaration_list compound_statement
-- On STRUCT reduce production function_definition -> declaration_specifiers declarator declaration_list compound_statement
-- On STATIC reduce production function_definition -> declaration_specifiers declarator declaration_list compound_statement
-- On STAR reduce production function_definition -> declaration_specifiers declarator declaration_list compound_statement
-- On SIGNED reduce production function_definition -> declaration_specifiers declarator declaration_list compound_statement
-- On SHORT reduce production function_definition -> declaration_specifiers declarator declaration_list compound_statement
-- On REGISTER reduce production function_definition -> declaration_specifiers declarator declaration_list compound_statement
-- On LPAREN reduce production function_definition -> declaration_specifiers declarator declaration_list compound_statement
-- On LONG reduce production function_definition -> declaration_specifiers declarator declaration_list compound_statement
-- On INT reduce production function_definition -> declaration_specifiers declarator declaration_list compound_statement
-- On IDENTIFIER reduce production function_definition -> declaration_specifiers declarator declaration_list compound_statement
-- On FLOAT reduce production function_definition -> declaration_specifiers declarator declaration_list compound_statement
-- On EXTERN reduce production function_definition -> declaration_specifiers declarator declaration_list compound_statement
-- On ENUM reduce production function_definition -> declaration_specifiers declarator declaration_list compound_statement
-- On DOUBLE reduce production function_definition -> declaration_specifiers declarator declaration_list compound_statement
-- On CONST reduce production function_definition -> declaration_specifiers declarator declaration_list compound_statement
-- On CHAR reduce production function_definition -> declaration_specifiers declarator declaration_list compound_statement
-- On AUTO reduce production function_definition -> declaration_specifiers declarator declaration_list compound_statement
-- On # reduce production function_definition -> declaration_specifiers declarator declaration_list compound_statement
** End-of-stream conflict on VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF STRUCT STATIC STAR SIGNED SHORT REGISTER LPAREN LONG INT IDENTIFIER FLOAT EXTERN ENUM DOUBLE CONST CHAR AUTO
**   There is a tension between
**   (1) reducing production function_definition -> declaration_specifiers declarator declaration_list compound_statement
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 346:
function_definition -> declaration_specifiers declarator compound_statement . [ VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF STRUCT STATIC STAR SIGNED SHORT REGISTER LPAREN LONG INT IDENTIFIER FLOAT EXTERN ENUM DOUBLE CONST CHAR AUTO # ]
-- On VOLATILE reduce production function_definition -> declaration_specifiers declarator compound_statement
-- On VOID reduce production function_definition -> declaration_specifiers declarator compound_statement
-- On UNSIGNED reduce production function_definition -> declaration_specifiers declarator compound_statement
-- On UNION reduce production function_definition -> declaration_specifiers declarator compound_statement
-- On TYPE_NAME reduce production function_definition -> declaration_specifiers declarator compound_statement
-- On TYPEDEF reduce production function_definition -> declaration_specifiers declarator compound_statement
-- On STRUCT reduce production function_definition -> declaration_specifiers declarator compound_statement
-- On STATIC reduce production function_definition -> declaration_specifiers declarator compound_statement
-- On STAR reduce production function_definition -> declaration_specifiers declarator compound_statement
-- On SIGNED reduce production function_definition -> declaration_specifiers declarator compound_statement
-- On SHORT reduce production function_definition -> declaration_specifiers declarator compound_statement
-- On REGISTER reduce production function_definition -> declaration_specifiers declarator compound_statement
-- On LPAREN reduce production function_definition -> declaration_specifiers declarator compound_statement
-- On LONG reduce production function_definition -> declaration_specifiers declarator compound_statement
-- On INT reduce production function_definition -> declaration_specifiers declarator compound_statement
-- On IDENTIFIER reduce production function_definition -> declaration_specifiers declarator compound_statement
-- On FLOAT reduce production function_definition -> declaration_specifiers declarator compound_statement
-- On EXTERN reduce production function_definition -> declaration_specifiers declarator compound_statement
-- On ENUM reduce production function_definition -> declaration_specifiers declarator compound_statement
-- On DOUBLE reduce production function_definition -> declaration_specifiers declarator compound_statement
-- On CONST reduce production function_definition -> declaration_specifiers declarator compound_statement
-- On CHAR reduce production function_definition -> declaration_specifiers declarator compound_statement
-- On AUTO reduce production function_definition -> declaration_specifiers declarator compound_statement
-- On # reduce production function_definition -> declaration_specifiers declarator compound_statement
** End-of-stream conflict on VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF STRUCT STATIC STAR SIGNED SHORT REGISTER LPAREN LONG INT IDENTIFIER FLOAT EXTERN ENUM DOUBLE CONST CHAR AUTO
**   There is a tension between
**   (1) reducing production function_definition -> declaration_specifiers declarator compound_statement
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 347:
external_declaration -> declaration . [ VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF STRUCT STATIC STAR SIGNED SHORT REGISTER LPAREN LONG INT IDENTIFIER FLOAT EXTERN ENUM DOUBLE CONST CHAR AUTO # ]
-- On VOLATILE reduce production external_declaration -> declaration
-- On VOID reduce production external_declaration -> declaration
-- On UNSIGNED reduce production external_declaration -> declaration
-- On UNION reduce production external_declaration -> declaration
-- On TYPE_NAME reduce production external_declaration -> declaration
-- On TYPEDEF reduce production external_declaration -> declaration
-- On STRUCT reduce production external_declaration -> declaration
-- On STATIC reduce production external_declaration -> declaration
-- On STAR reduce production external_declaration -> declaration
-- On SIGNED reduce production external_declaration -> declaration
-- On SHORT reduce production external_declaration -> declaration
-- On REGISTER reduce production external_declaration -> declaration
-- On LPAREN reduce production external_declaration -> declaration
-- On LONG reduce production external_declaration -> declaration
-- On INT reduce production external_declaration -> declaration
-- On IDENTIFIER reduce production external_declaration -> declaration
-- On FLOAT reduce production external_declaration -> declaration
-- On EXTERN reduce production external_declaration -> declaration
-- On ENUM reduce production external_declaration -> declaration
-- On DOUBLE reduce production external_declaration -> declaration
-- On CONST reduce production external_declaration -> declaration
-- On CHAR reduce production external_declaration -> declaration
-- On AUTO reduce production external_declaration -> declaration
-- On # reduce production external_declaration -> declaration
** End-of-stream conflict on VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF STRUCT STATIC STAR SIGNED SHORT REGISTER LPAREN LONG INT IDENTIFIER FLOAT EXTERN ENUM DOUBLE CONST CHAR AUTO
**   There is a tension between
**   (1) reducing production external_declaration -> declaration
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 348:
translation_unit -> external_declaration . [ VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF STRUCT STATIC STAR SIGNED SHORT REGISTER LPAREN LONG INT IDENTIFIER FLOAT EXTERN ENUM DOUBLE CONST CHAR AUTO # ]
-- On VOLATILE reduce production translation_unit -> external_declaration
-- On VOID reduce production translation_unit -> external_declaration
-- On UNSIGNED reduce production translation_unit -> external_declaration
-- On UNION reduce production translation_unit -> external_declaration
-- On TYPE_NAME reduce production translation_unit -> external_declaration
-- On TYPEDEF reduce production translation_unit -> external_declaration
-- On STRUCT reduce production translation_unit -> external_declaration
-- On STATIC reduce production translation_unit -> external_declaration
-- On STAR reduce production translation_unit -> external_declaration
-- On SIGNED reduce production translation_unit -> external_declaration
-- On SHORT reduce production translation_unit -> external_declaration
-- On REGISTER reduce production translation_unit -> external_declaration
-- On LPAREN reduce production translation_unit -> external_declaration
-- On LONG reduce production translation_unit -> external_declaration
-- On INT reduce production translation_unit -> external_declaration
-- On IDENTIFIER reduce production translation_unit -> external_declaration
-- On FLOAT reduce production translation_unit -> external_declaration
-- On EXTERN reduce production translation_unit -> external_declaration
-- On ENUM reduce production translation_unit -> external_declaration
-- On DOUBLE reduce production translation_unit -> external_declaration
-- On CONST reduce production translation_unit -> external_declaration
-- On CHAR reduce production translation_unit -> external_declaration
-- On AUTO reduce production translation_unit -> external_declaration
-- On # reduce production translation_unit -> external_declaration
** End-of-stream conflict on VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF STRUCT STATIC STAR SIGNED SHORT REGISTER LPAREN LONG INT IDENTIFIER FLOAT EXTERN ENUM DOUBLE CONST CHAR AUTO
**   There is a tension between
**   (1) reducing production translation_unit -> external_declaration
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

