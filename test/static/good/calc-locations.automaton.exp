State 0:
## Known stack suffix:
##
## LR(1) items:
main' -> . main [ # ]
## Transitions:
-- On MINUS shift to state 1
-- On LPAREN shift to state 2
-- On INT shift to state 3
-- On main shift to state 15
-- On expr shift to state 16
## Reductions:

State 1:
## Known stack suffix:
## MINUS
## LR(1) items:
expr -> MINUS . expr [ TIMES RPAREN PLUS MINUS EOL DIV ]
## Transitions:
-- On MINUS shift to state 1
-- On LPAREN shift to state 2
-- On INT shift to state 3
-- On expr shift to state 14
## Reductions:

State 2:
## Known stack suffix:
## LPAREN
## LR(1) items:
expr -> LPAREN . expr RPAREN [ TIMES RPAREN PLUS MINUS EOL DIV ]
## Transitions:
-- On MINUS shift to state 1
-- On LPAREN shift to state 2
-- On INT shift to state 3
-- On expr shift to state 4
## Reductions:

State 3:
## Known stack suffix:
## INT
## LR(1) items:
expr -> INT . [ TIMES RPAREN PLUS MINUS EOL DIV ]
## Transitions:
## Reductions:
-- On TIMES reduce production expr -> INT
-- On RPAREN reduce production expr -> INT
-- On PLUS reduce production expr -> INT
-- On MINUS reduce production expr -> INT
-- On EOL reduce production expr -> INT
-- On DIV reduce production expr -> INT

State 4:
## Known stack suffix:
## LPAREN expr
## LR(1) items:
expr -> LPAREN expr . RPAREN [ TIMES RPAREN PLUS MINUS EOL DIV ]
expr -> expr . PLUS expr [ TIMES RPAREN PLUS MINUS DIV ]
expr -> expr . MINUS expr [ TIMES RPAREN PLUS MINUS DIV ]
expr -> expr . TIMES expr [ TIMES RPAREN PLUS MINUS DIV ]
expr -> expr . DIV expr [ TIMES RPAREN PLUS MINUS DIV ]
## Transitions:
-- On TIMES shift to state 5
-- On RPAREN shift to state 7
-- On PLUS shift to state 8
-- On MINUS shift to state 12
-- On DIV shift to state 10
## Reductions:

State 5:
## Known stack suffix:
## expr TIMES
## LR(1) items:
expr -> expr TIMES . expr [ TIMES RPAREN PLUS MINUS EOL DIV ]
## Transitions:
-- On MINUS shift to state 1
-- On LPAREN shift to state 2
-- On INT shift to state 3
-- On expr shift to state 6
## Reductions:

State 6:
## Known stack suffix:
## expr TIMES expr
## LR(1) items:
expr -> expr . PLUS expr [ TIMES RPAREN PLUS MINUS EOL DIV ]
expr -> expr . MINUS expr [ TIMES RPAREN PLUS MINUS EOL DIV ]
expr -> expr . TIMES expr [ TIMES RPAREN PLUS MINUS EOL DIV ]
expr -> expr TIMES expr . [ TIMES RPAREN PLUS MINUS EOL DIV ]
expr -> expr . DIV expr [ TIMES RPAREN PLUS MINUS EOL DIV ]
## Transitions:
## Reductions:
-- On TIMES reduce production expr -> expr TIMES expr
-- On RPAREN reduce production expr -> expr TIMES expr
-- On PLUS reduce production expr -> expr TIMES expr
-- On MINUS reduce production expr -> expr TIMES expr
-- On EOL reduce production expr -> expr TIMES expr
-- On DIV reduce production expr -> expr TIMES expr

State 7:
## Known stack suffix:
## LPAREN expr RPAREN
## LR(1) items:
expr -> LPAREN expr RPAREN . [ TIMES RPAREN PLUS MINUS EOL DIV ]
## Transitions:
## Reductions:
-- On TIMES reduce production expr -> LPAREN expr RPAREN
-- On RPAREN reduce production expr -> LPAREN expr RPAREN
-- On PLUS reduce production expr -> LPAREN expr RPAREN
-- On MINUS reduce production expr -> LPAREN expr RPAREN
-- On EOL reduce production expr -> LPAREN expr RPAREN
-- On DIV reduce production expr -> LPAREN expr RPAREN

State 8:
## Known stack suffix:
## expr PLUS
## LR(1) items:
expr -> expr PLUS . expr [ TIMES RPAREN PLUS MINUS EOL DIV ]
## Transitions:
-- On MINUS shift to state 1
-- On LPAREN shift to state 2
-- On INT shift to state 3
-- On expr shift to state 9
## Reductions:

State 9:
## Known stack suffix:
## expr PLUS expr
## LR(1) items:
expr -> expr . PLUS expr [ TIMES RPAREN PLUS MINUS EOL DIV ]
expr -> expr PLUS expr . [ TIMES RPAREN PLUS MINUS EOL DIV ]
expr -> expr . MINUS expr [ TIMES RPAREN PLUS MINUS EOL DIV ]
expr -> expr . TIMES expr [ TIMES RPAREN PLUS MINUS EOL DIV ]
expr -> expr . DIV expr [ TIMES RPAREN PLUS MINUS EOL DIV ]
## Transitions:
-- On TIMES shift to state 5
-- On DIV shift to state 10
## Reductions:
-- On RPAREN reduce production expr -> expr PLUS expr
-- On PLUS reduce production expr -> expr PLUS expr
-- On MINUS reduce production expr -> expr PLUS expr
-- On EOL reduce production expr -> expr PLUS expr

State 10:
## Known stack suffix:
## expr DIV
## LR(1) items:
expr -> expr DIV . expr [ TIMES RPAREN PLUS MINUS EOL DIV ]
## Transitions:
-- On MINUS shift to state 1
-- On LPAREN shift to state 2
-- On INT shift to state 3
-- On expr shift to state 11
## Reductions:

State 11:
## Known stack suffix:
## expr DIV expr
## LR(1) items:
expr -> expr . PLUS expr [ TIMES RPAREN PLUS MINUS EOL DIV ]
expr -> expr . MINUS expr [ TIMES RPAREN PLUS MINUS EOL DIV ]
expr -> expr . TIMES expr [ TIMES RPAREN PLUS MINUS EOL DIV ]
expr -> expr . DIV expr [ TIMES RPAREN PLUS MINUS EOL DIV ]
expr -> expr DIV expr . [ TIMES RPAREN PLUS MINUS EOL DIV ]
## Transitions:
## Reductions:
-- On TIMES reduce production expr -> expr DIV expr
-- On RPAREN reduce production expr -> expr DIV expr
-- On PLUS reduce production expr -> expr DIV expr
-- On MINUS reduce production expr -> expr DIV expr
-- On EOL reduce production expr -> expr DIV expr
-- On DIV reduce production expr -> expr DIV expr

State 12:
## Known stack suffix:
## expr MINUS
## LR(1) items:
expr -> expr MINUS . expr [ TIMES RPAREN PLUS MINUS EOL DIV ]
## Transitions:
-- On MINUS shift to state 1
-- On LPAREN shift to state 2
-- On INT shift to state 3
-- On expr shift to state 13
## Reductions:

State 13:
## Known stack suffix:
## expr MINUS expr
## LR(1) items:
expr -> expr . PLUS expr [ TIMES RPAREN PLUS MINUS EOL DIV ]
expr -> expr . MINUS expr [ TIMES RPAREN PLUS MINUS EOL DIV ]
expr -> expr MINUS expr . [ TIMES RPAREN PLUS MINUS EOL DIV ]
expr -> expr . TIMES expr [ TIMES RPAREN PLUS MINUS EOL DIV ]
expr -> expr . DIV expr [ TIMES RPAREN PLUS MINUS EOL DIV ]
## Transitions:
-- On TIMES shift to state 5
-- On DIV shift to state 10
## Reductions:
-- On RPAREN reduce production expr -> expr MINUS expr
-- On PLUS reduce production expr -> expr MINUS expr
-- On MINUS reduce production expr -> expr MINUS expr
-- On EOL reduce production expr -> expr MINUS expr

State 14:
## Known stack suffix:
## MINUS expr
## LR(1) items:
expr -> expr . PLUS expr [ TIMES RPAREN PLUS MINUS EOL DIV ]
expr -> expr . MINUS expr [ TIMES RPAREN PLUS MINUS EOL DIV ]
expr -> expr . TIMES expr [ TIMES RPAREN PLUS MINUS EOL DIV ]
expr -> expr . DIV expr [ TIMES RPAREN PLUS MINUS EOL DIV ]
expr -> MINUS expr . [ TIMES RPAREN PLUS MINUS EOL DIV ]
## Transitions:
## Reductions:
-- On TIMES reduce production expr -> MINUS expr
-- On RPAREN reduce production expr -> MINUS expr
-- On PLUS reduce production expr -> MINUS expr
-- On MINUS reduce production expr -> MINUS expr
-- On EOL reduce production expr -> MINUS expr
-- On DIV reduce production expr -> MINUS expr

State 15:
## Known stack suffix:
## main
## LR(1) items:
main' -> main . [ # ]
## Transitions:
## Reductions:
-- On # accept main

State 16:
## Known stack suffix:
## expr
## LR(1) items:
expr -> expr . PLUS expr [ TIMES PLUS MINUS EOL DIV ]
expr -> expr . MINUS expr [ TIMES PLUS MINUS EOL DIV ]
expr -> expr . TIMES expr [ TIMES PLUS MINUS EOL DIV ]
expr -> expr . DIV expr [ TIMES PLUS MINUS EOL DIV ]
main -> expr . EOL [ # ]
## Transitions:
-- On TIMES shift to state 5
-- On PLUS shift to state 8
-- On MINUS shift to state 12
-- On EOL shift to state 17
-- On DIV shift to state 10
## Reductions:

State 17:
## Known stack suffix:
## expr EOL
## LR(1) items:
main -> expr EOL . [ # ]
## Transitions:
## Reductions:
-- On # reduce production main -> expr EOL

