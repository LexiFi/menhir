State 0:
## Known stack suffix:
##
## LR(1) items:
stylesheet' -> . stylesheet [ # ]
## Transitions:
-- On S shift to state 1
-- On stylesheet shift to state 3
-- On list(S) shift to state 4
## Reductions:
-- On VAR reduce production list(S) ->
-- On SEL_FUNC reduce production list(S) ->
-- On PERIOD reduce production list(S) ->
-- On PAGE reduce production list(S) ->
-- On OPEN_SQUARE reduce production list(S) ->
-- On MEDIA reduce production list(S) ->
-- On KEYFRAMES reduce production list(S) ->
-- On IMPORT reduce production list(S) ->
-- On IDENT reduce production list(S) ->
-- On HASH reduce production list(S) ->
-- On FONTFACE reduce production list(S) ->
-- On EOF reduce production list(S) ->
-- On DOUBLE_COLON reduce production list(S) ->
-- On COLON reduce production list(S) ->
-- On CHARSET reduce production list(S) ->
-- On ASTERISK reduce production list(S) ->

State 1:
## Known stack suffix:
## S
## LR(1) items:
list(S) -> S . list(S) [ VAR SEL_FUNC PERIOD PAGE OPEN_SQUARE MEDIA KEYFRAMES IMPORT IDENT HASH FONTFACE EOF DOUBLE_COLON COLON CHARSET ASTERISK ]
## Transitions:
-- On S shift to state 1
-- On list(S) shift to state 2
## Reductions:
-- On VAR reduce production list(S) ->
-- On SEL_FUNC reduce production list(S) ->
-- On PERIOD reduce production list(S) ->
-- On PAGE reduce production list(S) ->
-- On OPEN_SQUARE reduce production list(S) ->
-- On MEDIA reduce production list(S) ->
-- On KEYFRAMES reduce production list(S) ->
-- On IMPORT reduce production list(S) ->
-- On IDENT reduce production list(S) ->
-- On HASH reduce production list(S) ->
-- On FONTFACE reduce production list(S) ->
-- On EOF reduce production list(S) ->
-- On DOUBLE_COLON reduce production list(S) ->
-- On COLON reduce production list(S) ->
-- On CHARSET reduce production list(S) ->
-- On ASTERISK reduce production list(S) ->

State 2:
## Known stack suffix:
## S list(S)
## LR(1) items:
list(S) -> S list(S) . [ VAR SEL_FUNC PERIOD PAGE OPEN_SQUARE MEDIA KEYFRAMES IMPORT IDENT HASH FONTFACE EOF DOUBLE_COLON COLON CHARSET ASTERISK ]
## Transitions:
## Reductions:
-- On VAR reduce production list(S) -> S list(S)
-- On SEL_FUNC reduce production list(S) -> S list(S)
-- On PERIOD reduce production list(S) -> S list(S)
-- On PAGE reduce production list(S) -> S list(S)
-- On OPEN_SQUARE reduce production list(S) -> S list(S)
-- On MEDIA reduce production list(S) -> S list(S)
-- On KEYFRAMES reduce production list(S) -> S list(S)
-- On IMPORT reduce production list(S) -> S list(S)
-- On IDENT reduce production list(S) -> S list(S)
-- On HASH reduce production list(S) -> S list(S)
-- On FONTFACE reduce production list(S) -> S list(S)
-- On EOF reduce production list(S) -> S list(S)
-- On DOUBLE_COLON reduce production list(S) -> S list(S)
-- On COLON reduce production list(S) -> S list(S)
-- On CHARSET reduce production list(S) -> S list(S)
-- On ASTERISK reduce production list(S) -> S list(S)

State 3:
## Known stack suffix:
## stylesheet
## LR(1) items:
stylesheet' -> stylesheet . [ # ]
## Transitions:
## Reductions:
-- On # accept stylesheet

State 4:
## Known stack suffix:
## list(S)
## LR(1) items:
stylesheet -> list(S) . list(statement) EOF [ # ]
## Transitions:
-- On VAR shift to state 5
-- On SEL_FUNC shift to state 58
-- On PERIOD shift to state 59
-- On PAGE shift to state 91
-- On OPEN_SQUARE shift to state 61
-- On MEDIA shift to state 97
-- On KEYFRAMES shift to state 154
-- On IMPORT shift to state 165
-- On IDENT shift to state 122
-- On HASH shift to state 81
-- On FONTFACE shift to state 175
-- On DOUBLE_COLON shift to state 82
-- On COLON shift to state 84
-- On CHARSET shift to state 177
-- On ASTERISK shift to state 123
-- On statement shift to state 180
-- On simple_selector shift to state 124
-- On separated_nonempty_list(COMMA,selector) shift to state 139
-- On selector_list shift to state 140
-- On selector shift to state 142
-- On rule shift to state 181
-- On qualifier shift to state 86
-- On nonempty_list(qualifier) shift to state 132
-- On list(statement) shift to state 184
-- On element shift to state 133
-- On atrule shift to state 183
## Reductions:
-- On EOF reduce production list(statement) ->

State 5:
## Known stack suffix:
## VAR
## LR(1) items:
statement -> VAR . COLON var_decl [ VAR SEL_FUNC PERIOD PAGE OPEN_SQUARE MEDIA KEYFRAMES IMPORT IDENT HASH FONTFACE EOF DOUBLE_COLON COLON CHARSET ASTERISK ]
## Transitions:
-- On COLON shift to state 6
## Reductions:

State 6:
## Known stack suffix:
## VAR COLON
## LR(1) items:
statement -> VAR COLON . var_decl [ VAR SEL_FUNC PERIOD PAGE OPEN_SQUARE MEDIA KEYFRAMES IMPORT IDENT HASH FONTFACE EOF DOUBLE_COLON COLON CHARSET ASTERISK ]
## Transitions:
-- On VAR shift to state 7
-- On URI shift to state 8
-- On URANGE shift to state 11
-- On TERM_FUNC shift to state 12
-- On STRING shift to state 13
-- On SLASH shift to state 14
-- On QUANTITY shift to state 15
-- On OPEN_ROUND shift to state 16
-- On OPEN_CURLY shift to state 41
-- On IDENT shift to state 27
-- On HASH shift to state 28
-- On var_decl shift to state 54
-- On term shift to state 29
-- On separated_nonempty_list(option(S),term) shift to state 34
-- On separated_nonempty_list(COMMA,sentence) shift to state 35
-- On sentence shift to state 36
-- On expr shift to state 55
-- On declaration_block shift to state 57
-- On calc shift to state 33
## Reductions:

State 7:
## Known stack suffix:
## VAR
## LR(1) items:
calc -> VAR . [ VAR URI URANGE TERM_FUNC STRING SLASH SEMICOLON S QUOTIENT QUANTITY PLUS OPEN_ROUND OPEN_CURLY MINUS IMPORTANT IDENT HASH COMMA CLOSE_ROUND ASTERISK ]
## Transitions:
## Reductions:
-- On VAR reduce production calc -> VAR
-- On URI reduce production calc -> VAR
-- On URANGE reduce production calc -> VAR
-- On TERM_FUNC reduce production calc -> VAR
-- On STRING reduce production calc -> VAR
-- On SLASH reduce production calc -> VAR
-- On SEMICOLON reduce production calc -> VAR
-- On S reduce production calc -> VAR
-- On QUOTIENT reduce production calc -> VAR
-- On QUANTITY reduce production calc -> VAR
-- On PLUS reduce production calc -> VAR
-- On OPEN_ROUND reduce production calc -> VAR
-- On OPEN_CURLY reduce production calc -> VAR
-- On MINUS reduce production calc -> VAR
-- On IMPORTANT reduce production calc -> VAR
-- On IDENT reduce production calc -> VAR
-- On HASH reduce production calc -> VAR
-- On COMMA reduce production calc -> VAR
-- On CLOSE_ROUND reduce production calc -> VAR
-- On ASTERISK reduce production calc -> VAR

State 8:
## Known stack suffix:
## URI
## LR(1) items:
term -> URI . STRING CLOSE_ROUND [ VAR URI URANGE TERM_FUNC STRING SLASH SEMICOLON S QUANTITY OPEN_ROUND IMPORTANT IDENT HASH COMMA CLOSE_ROUND ]
## Transitions:
-- On STRING shift to state 9
## Reductions:

State 9:
## Known stack suffix:
## URI STRING
## LR(1) items:
term -> URI STRING . CLOSE_ROUND [ VAR URI URANGE TERM_FUNC STRING SLASH SEMICOLON S QUANTITY OPEN_ROUND IMPORTANT IDENT HASH COMMA CLOSE_ROUND ]
## Transitions:
-- On CLOSE_ROUND shift to state 10
## Reductions:

State 10:
## Known stack suffix:
## URI STRING CLOSE_ROUND
## LR(1) items:
term -> URI STRING CLOSE_ROUND . [ VAR URI URANGE TERM_FUNC STRING SLASH SEMICOLON S QUANTITY OPEN_ROUND IMPORTANT IDENT HASH COMMA CLOSE_ROUND ]
## Transitions:
## Reductions:
-- On VAR reduce production term -> URI STRING CLOSE_ROUND
-- On URI reduce production term -> URI STRING CLOSE_ROUND
-- On URANGE reduce production term -> URI STRING CLOSE_ROUND
-- On TERM_FUNC reduce production term -> URI STRING CLOSE_ROUND
-- On STRING reduce production term -> URI STRING CLOSE_ROUND
-- On SLASH reduce production term -> URI STRING CLOSE_ROUND
-- On SEMICOLON reduce production term -> URI STRING CLOSE_ROUND
-- On S reduce production term -> URI STRING CLOSE_ROUND
-- On QUANTITY reduce production term -> URI STRING CLOSE_ROUND
-- On OPEN_ROUND reduce production term -> URI STRING CLOSE_ROUND
-- On IMPORTANT reduce production term -> URI STRING CLOSE_ROUND
-- On IDENT reduce production term -> URI STRING CLOSE_ROUND
-- On HASH reduce production term -> URI STRING CLOSE_ROUND
-- On COMMA reduce production term -> URI STRING CLOSE_ROUND
-- On CLOSE_ROUND reduce production term -> URI STRING CLOSE_ROUND

State 11:
## Known stack suffix:
## URANGE
## LR(1) items:
term -> URANGE . [ VAR URI URANGE TERM_FUNC STRING SLASH SEMICOLON S QUANTITY OPEN_ROUND IMPORTANT IDENT HASH COMMA CLOSE_ROUND ]
## Transitions:
## Reductions:
-- On VAR reduce production term -> URANGE
-- On URI reduce production term -> URANGE
-- On URANGE reduce production term -> URANGE
-- On TERM_FUNC reduce production term -> URANGE
-- On STRING reduce production term -> URANGE
-- On SLASH reduce production term -> URANGE
-- On SEMICOLON reduce production term -> URANGE
-- On S reduce production term -> URANGE
-- On QUANTITY reduce production term -> URANGE
-- On OPEN_ROUND reduce production term -> URANGE
-- On IMPORTANT reduce production term -> URANGE
-- On IDENT reduce production term -> URANGE
-- On HASH reduce production term -> URANGE
-- On COMMA reduce production term -> URANGE
-- On CLOSE_ROUND reduce production term -> URANGE

State 12:
## Known stack suffix:
## TERM_FUNC
## LR(1) items:
term -> TERM_FUNC . expr CLOSE_ROUND [ VAR URI URANGE TERM_FUNC STRING SLASH SEMICOLON S QUANTITY OPEN_ROUND IMPORTANT IDENT HASH COMMA CLOSE_ROUND ]
## Transitions:
-- On VAR shift to state 7
-- On URI shift to state 8
-- On URANGE shift to state 11
-- On TERM_FUNC shift to state 12
-- On STRING shift to state 13
-- On SLASH shift to state 14
-- On QUANTITY shift to state 15
-- On OPEN_ROUND shift to state 16
-- On IDENT shift to state 27
-- On HASH shift to state 28
-- On term shift to state 29
-- On separated_nonempty_list(option(S),term) shift to state 34
-- On separated_nonempty_list(COMMA,sentence) shift to state 35
-- On sentence shift to state 36
-- On expr shift to state 39
-- On calc shift to state 33
## Reductions:

State 13:
## Known stack suffix:
## STRING
## LR(1) items:
term -> STRING . [ VAR URI URANGE TERM_FUNC STRING SLASH SEMICOLON S QUANTITY OPEN_ROUND IMPORTANT IDENT HASH COMMA CLOSE_ROUND ]
## Transitions:
## Reductions:
-- On VAR reduce production term -> STRING
-- On URI reduce production term -> STRING
-- On URANGE reduce production term -> STRING
-- On TERM_FUNC reduce production term -> STRING
-- On STRING reduce production term -> STRING
-- On SLASH reduce production term -> STRING
-- On SEMICOLON reduce production term -> STRING
-- On S reduce production term -> STRING
-- On QUANTITY reduce production term -> STRING
-- On OPEN_ROUND reduce production term -> STRING
-- On IMPORTANT reduce production term -> STRING
-- On IDENT reduce production term -> STRING
-- On HASH reduce production term -> STRING
-- On COMMA reduce production term -> STRING
-- On CLOSE_ROUND reduce production term -> STRING

State 14:
## Known stack suffix:
## SLASH
## LR(1) items:
term -> SLASH . [ VAR URI URANGE TERM_FUNC STRING SLASH SEMICOLON S QUANTITY OPEN_ROUND IMPORTANT IDENT HASH COMMA CLOSE_ROUND ]
## Transitions:
## Reductions:
-- On VAR reduce production term -> SLASH
-- On URI reduce production term -> SLASH
-- On URANGE reduce production term -> SLASH
-- On TERM_FUNC reduce production term -> SLASH
-- On STRING reduce production term -> SLASH
-- On SLASH reduce production term -> SLASH
-- On SEMICOLON reduce production term -> SLASH
-- On S reduce production term -> SLASH
-- On QUANTITY reduce production term -> SLASH
-- On OPEN_ROUND reduce production term -> SLASH
-- On IMPORTANT reduce production term -> SLASH
-- On IDENT reduce production term -> SLASH
-- On HASH reduce production term -> SLASH
-- On COMMA reduce production term -> SLASH
-- On CLOSE_ROUND reduce production term -> SLASH

State 15:
## Known stack suffix:
## QUANTITY
## LR(1) items:
calc -> QUANTITY . [ VAR URI URANGE TERM_FUNC STRING SLASH SEMICOLON S QUOTIENT QUANTITY PLUS OPEN_ROUND OPEN_CURLY MINUS IMPORTANT IDENT HASH COMMA CLOSE_ROUND ASTERISK ]
## Transitions:
## Reductions:
-- On VAR reduce production calc -> QUANTITY
-- On URI reduce production calc -> QUANTITY
-- On URANGE reduce production calc -> QUANTITY
-- On TERM_FUNC reduce production calc -> QUANTITY
-- On STRING reduce production calc -> QUANTITY
-- On SLASH reduce production calc -> QUANTITY
-- On SEMICOLON reduce production calc -> QUANTITY
-- On S reduce production calc -> QUANTITY
-- On QUOTIENT reduce production calc -> QUANTITY
-- On QUANTITY reduce production calc -> QUANTITY
-- On PLUS reduce production calc -> QUANTITY
-- On OPEN_ROUND reduce production calc -> QUANTITY
-- On OPEN_CURLY reduce production calc -> QUANTITY
-- On MINUS reduce production calc -> QUANTITY
-- On IMPORTANT reduce production calc -> QUANTITY
-- On IDENT reduce production calc -> QUANTITY
-- On HASH reduce production calc -> QUANTITY
-- On COMMA reduce production calc -> QUANTITY
-- On CLOSE_ROUND reduce production calc -> QUANTITY
-- On ASTERISK reduce production calc -> QUANTITY

State 16:
## Known stack suffix:
## OPEN_ROUND
## LR(1) items:
calc -> OPEN_ROUND . calc CLOSE_ROUND [ VAR URI URANGE TERM_FUNC STRING SLASH SEMICOLON S QUOTIENT QUANTITY PLUS OPEN_ROUND OPEN_CURLY MINUS IMPORTANT IDENT HASH COMMA CLOSE_ROUND ASTERISK ]
## Transitions:
-- On VAR shift to state 7
-- On QUANTITY shift to state 15
-- On OPEN_ROUND shift to state 16
-- On calc shift to state 17
## Reductions:

State 17:
## Known stack suffix:
## OPEN_ROUND calc
## LR(1) items:
calc -> calc . ASTERISK calc [ QUOTIENT PLUS MINUS CLOSE_ROUND ASTERISK ]
calc -> calc . QUOTIENT calc [ QUOTIENT PLUS MINUS CLOSE_ROUND ASTERISK ]
calc -> calc . PLUS calc [ QUOTIENT PLUS MINUS CLOSE_ROUND ASTERISK ]
calc -> calc . MINUS calc [ QUOTIENT PLUS MINUS CLOSE_ROUND ASTERISK ]
calc -> OPEN_ROUND calc . CLOSE_ROUND [ VAR URI URANGE TERM_FUNC STRING SLASH SEMICOLON S QUOTIENT QUANTITY PLUS OPEN_ROUND OPEN_CURLY MINUS IMPORTANT IDENT HASH COMMA CLOSE_ROUND ASTERISK ]
## Transitions:
-- On QUOTIENT shift to state 18
-- On PLUS shift to state 20
-- On MINUS shift to state 24
-- On CLOSE_ROUND shift to state 26
-- On ASTERISK shift to state 22
## Reductions:

State 18:
## Known stack suffix:
## calc QUOTIENT
## LR(1) items:
calc -> calc QUOTIENT . calc [ VAR URI URANGE TERM_FUNC STRING SLASH SEMICOLON S QUOTIENT QUANTITY PLUS OPEN_ROUND OPEN_CURLY MINUS IMPORTANT IDENT HASH COMMA CLOSE_ROUND ASTERISK ]
## Transitions:
-- On VAR shift to state 7
-- On QUANTITY shift to state 15
-- On OPEN_ROUND shift to state 16
-- On calc shift to state 19
## Reductions:

State 19:
## Known stack suffix:
## calc QUOTIENT calc
## LR(1) items:
calc -> calc . ASTERISK calc [ VAR URI URANGE TERM_FUNC STRING SLASH SEMICOLON S QUOTIENT QUANTITY PLUS OPEN_ROUND OPEN_CURLY MINUS IMPORTANT IDENT HASH COMMA CLOSE_ROUND ASTERISK ]
calc -> calc . QUOTIENT calc [ VAR URI URANGE TERM_FUNC STRING SLASH SEMICOLON S QUOTIENT QUANTITY PLUS OPEN_ROUND OPEN_CURLY MINUS IMPORTANT IDENT HASH COMMA CLOSE_ROUND ASTERISK ]
calc -> calc QUOTIENT calc . [ VAR URI URANGE TERM_FUNC STRING SLASH SEMICOLON S QUOTIENT QUANTITY PLUS OPEN_ROUND OPEN_CURLY MINUS IMPORTANT IDENT HASH COMMA CLOSE_ROUND ASTERISK ]
calc -> calc . PLUS calc [ VAR URI URANGE TERM_FUNC STRING SLASH SEMICOLON S QUOTIENT QUANTITY PLUS OPEN_ROUND OPEN_CURLY MINUS IMPORTANT IDENT HASH COMMA CLOSE_ROUND ASTERISK ]
calc -> calc . MINUS calc [ VAR URI URANGE TERM_FUNC STRING SLASH SEMICOLON S QUOTIENT QUANTITY PLUS OPEN_ROUND OPEN_CURLY MINUS IMPORTANT IDENT HASH COMMA CLOSE_ROUND ASTERISK ]
## Transitions:
## Reductions:
-- On VAR reduce production calc -> calc QUOTIENT calc
-- On URI reduce production calc -> calc QUOTIENT calc
-- On URANGE reduce production calc -> calc QUOTIENT calc
-- On TERM_FUNC reduce production calc -> calc QUOTIENT calc
-- On STRING reduce production calc -> calc QUOTIENT calc
-- On SLASH reduce production calc -> calc QUOTIENT calc
-- On SEMICOLON reduce production calc -> calc QUOTIENT calc
-- On S reduce production calc -> calc QUOTIENT calc
-- On QUOTIENT reduce production calc -> calc QUOTIENT calc
-- On QUANTITY reduce production calc -> calc QUOTIENT calc
-- On PLUS reduce production calc -> calc QUOTIENT calc
-- On OPEN_ROUND reduce production calc -> calc QUOTIENT calc
-- On OPEN_CURLY reduce production calc -> calc QUOTIENT calc
-- On MINUS reduce production calc -> calc QUOTIENT calc
-- On IMPORTANT reduce production calc -> calc QUOTIENT calc
-- On IDENT reduce production calc -> calc QUOTIENT calc
-- On HASH reduce production calc -> calc QUOTIENT calc
-- On COMMA reduce production calc -> calc QUOTIENT calc
-- On CLOSE_ROUND reduce production calc -> calc QUOTIENT calc
-- On ASTERISK reduce production calc -> calc QUOTIENT calc

State 20:
## Known stack suffix:
## calc PLUS
## LR(1) items:
calc -> calc PLUS . calc [ VAR URI URANGE TERM_FUNC STRING SLASH SEMICOLON S QUOTIENT QUANTITY PLUS OPEN_ROUND OPEN_CURLY MINUS IMPORTANT IDENT HASH COMMA CLOSE_ROUND ASTERISK ]
## Transitions:
-- On VAR shift to state 7
-- On QUANTITY shift to state 15
-- On OPEN_ROUND shift to state 16
-- On calc shift to state 21
## Reductions:

State 21:
## Known stack suffix:
## calc PLUS calc
## LR(1) items:
calc -> calc . ASTERISK calc [ VAR URI URANGE TERM_FUNC STRING SLASH SEMICOLON S QUOTIENT QUANTITY PLUS OPEN_ROUND OPEN_CURLY MINUS IMPORTANT IDENT HASH COMMA CLOSE_ROUND ASTERISK ]
calc -> calc . QUOTIENT calc [ VAR URI URANGE TERM_FUNC STRING SLASH SEMICOLON S QUOTIENT QUANTITY PLUS OPEN_ROUND OPEN_CURLY MINUS IMPORTANT IDENT HASH COMMA CLOSE_ROUND ASTERISK ]
calc -> calc . PLUS calc [ VAR URI URANGE TERM_FUNC STRING SLASH SEMICOLON S QUOTIENT QUANTITY PLUS OPEN_ROUND OPEN_CURLY MINUS IMPORTANT IDENT HASH COMMA CLOSE_ROUND ASTERISK ]
calc -> calc PLUS calc . [ VAR URI URANGE TERM_FUNC STRING SLASH SEMICOLON S QUOTIENT QUANTITY PLUS OPEN_ROUND OPEN_CURLY MINUS IMPORTANT IDENT HASH COMMA CLOSE_ROUND ASTERISK ]
calc -> calc . MINUS calc [ VAR URI URANGE TERM_FUNC STRING SLASH SEMICOLON S QUOTIENT QUANTITY PLUS OPEN_ROUND OPEN_CURLY MINUS IMPORTANT IDENT HASH COMMA CLOSE_ROUND ASTERISK ]
## Transitions:
-- On QUOTIENT shift to state 18
-- On ASTERISK shift to state 22
## Reductions:
-- On VAR reduce production calc -> calc PLUS calc
-- On URI reduce production calc -> calc PLUS calc
-- On URANGE reduce production calc -> calc PLUS calc
-- On TERM_FUNC reduce production calc -> calc PLUS calc
-- On STRING reduce production calc -> calc PLUS calc
-- On SLASH reduce production calc -> calc PLUS calc
-- On SEMICOLON reduce production calc -> calc PLUS calc
-- On S reduce production calc -> calc PLUS calc
-- On QUANTITY reduce production calc -> calc PLUS calc
-- On PLUS reduce production calc -> calc PLUS calc
-- On OPEN_ROUND reduce production calc -> calc PLUS calc
-- On OPEN_CURLY reduce production calc -> calc PLUS calc
-- On MINUS reduce production calc -> calc PLUS calc
-- On IMPORTANT reduce production calc -> calc PLUS calc
-- On IDENT reduce production calc -> calc PLUS calc
-- On HASH reduce production calc -> calc PLUS calc
-- On COMMA reduce production calc -> calc PLUS calc
-- On CLOSE_ROUND reduce production calc -> calc PLUS calc

State 22:
## Known stack suffix:
## calc ASTERISK
## LR(1) items:
calc -> calc ASTERISK . calc [ VAR URI URANGE TERM_FUNC STRING SLASH SEMICOLON S QUOTIENT QUANTITY PLUS OPEN_ROUND OPEN_CURLY MINUS IMPORTANT IDENT HASH COMMA CLOSE_ROUND ASTERISK ]
## Transitions:
-- On VAR shift to state 7
-- On QUANTITY shift to state 15
-- On OPEN_ROUND shift to state 16
-- On calc shift to state 23
## Reductions:

State 23:
## Known stack suffix:
## calc ASTERISK calc
## LR(1) items:
calc -> calc . ASTERISK calc [ VAR URI URANGE TERM_FUNC STRING SLASH SEMICOLON S QUOTIENT QUANTITY PLUS OPEN_ROUND OPEN_CURLY MINUS IMPORTANT IDENT HASH COMMA CLOSE_ROUND ASTERISK ]
calc -> calc ASTERISK calc . [ VAR URI URANGE TERM_FUNC STRING SLASH SEMICOLON S QUOTIENT QUANTITY PLUS OPEN_ROUND OPEN_CURLY MINUS IMPORTANT IDENT HASH COMMA CLOSE_ROUND ASTERISK ]
calc -> calc . QUOTIENT calc [ VAR URI URANGE TERM_FUNC STRING SLASH SEMICOLON S QUOTIENT QUANTITY PLUS OPEN_ROUND OPEN_CURLY MINUS IMPORTANT IDENT HASH COMMA CLOSE_ROUND ASTERISK ]
calc -> calc . PLUS calc [ VAR URI URANGE TERM_FUNC STRING SLASH SEMICOLON S QUOTIENT QUANTITY PLUS OPEN_ROUND OPEN_CURLY MINUS IMPORTANT IDENT HASH COMMA CLOSE_ROUND ASTERISK ]
calc -> calc . MINUS calc [ VAR URI URANGE TERM_FUNC STRING SLASH SEMICOLON S QUOTIENT QUANTITY PLUS OPEN_ROUND OPEN_CURLY MINUS IMPORTANT IDENT HASH COMMA CLOSE_ROUND ASTERISK ]
## Transitions:
## Reductions:
-- On VAR reduce production calc -> calc ASTERISK calc
-- On URI reduce production calc -> calc ASTERISK calc
-- On URANGE reduce production calc -> calc ASTERISK calc
-- On TERM_FUNC reduce production calc -> calc ASTERISK calc
-- On STRING reduce production calc -> calc ASTERISK calc
-- On SLASH reduce production calc -> calc ASTERISK calc
-- On SEMICOLON reduce production calc -> calc ASTERISK calc
-- On S reduce production calc -> calc ASTERISK calc
-- On QUOTIENT reduce production calc -> calc ASTERISK calc
-- On QUANTITY reduce production calc -> calc ASTERISK calc
-- On PLUS reduce production calc -> calc ASTERISK calc
-- On OPEN_ROUND reduce production calc -> calc ASTERISK calc
-- On OPEN_CURLY reduce production calc -> calc ASTERISK calc
-- On MINUS reduce production calc -> calc ASTERISK calc
-- On IMPORTANT reduce production calc -> calc ASTERISK calc
-- On IDENT reduce production calc -> calc ASTERISK calc
-- On HASH reduce production calc -> calc ASTERISK calc
-- On COMMA reduce production calc -> calc ASTERISK calc
-- On CLOSE_ROUND reduce production calc -> calc ASTERISK calc
-- On ASTERISK reduce production calc -> calc ASTERISK calc

State 24:
## Known stack suffix:
## calc MINUS
## LR(1) items:
calc -> calc MINUS . calc [ VAR URI URANGE TERM_FUNC STRING SLASH SEMICOLON S QUOTIENT QUANTITY PLUS OPEN_ROUND OPEN_CURLY MINUS IMPORTANT IDENT HASH COMMA CLOSE_ROUND ASTERISK ]
## Transitions:
-- On VAR shift to state 7
-- On QUANTITY shift to state 15
-- On OPEN_ROUND shift to state 16
-- On calc shift to state 25
## Reductions:

State 25:
## Known stack suffix:
## calc MINUS calc
## LR(1) items:
calc -> calc . ASTERISK calc [ VAR URI URANGE TERM_FUNC STRING SLASH SEMICOLON S QUOTIENT QUANTITY PLUS OPEN_ROUND OPEN_CURLY MINUS IMPORTANT IDENT HASH COMMA CLOSE_ROUND ASTERISK ]
calc -> calc . QUOTIENT calc [ VAR URI URANGE TERM_FUNC STRING SLASH SEMICOLON S QUOTIENT QUANTITY PLUS OPEN_ROUND OPEN_CURLY MINUS IMPORTANT IDENT HASH COMMA CLOSE_ROUND ASTERISK ]
calc -> calc . PLUS calc [ VAR URI URANGE TERM_FUNC STRING SLASH SEMICOLON S QUOTIENT QUANTITY PLUS OPEN_ROUND OPEN_CURLY MINUS IMPORTANT IDENT HASH COMMA CLOSE_ROUND ASTERISK ]
calc -> calc . MINUS calc [ VAR URI URANGE TERM_FUNC STRING SLASH SEMICOLON S QUOTIENT QUANTITY PLUS OPEN_ROUND OPEN_CURLY MINUS IMPORTANT IDENT HASH COMMA CLOSE_ROUND ASTERISK ]
calc -> calc MINUS calc . [ VAR URI URANGE TERM_FUNC STRING SLASH SEMICOLON S QUOTIENT QUANTITY PLUS OPEN_ROUND OPEN_CURLY MINUS IMPORTANT IDENT HASH COMMA CLOSE_ROUND ASTERISK ]
## Transitions:
-- On QUOTIENT shift to state 18
-- On ASTERISK shift to state 22
## Reductions:
-- On VAR reduce production calc -> calc MINUS calc
-- On URI reduce production calc -> calc MINUS calc
-- On URANGE reduce production calc -> calc MINUS calc
-- On TERM_FUNC reduce production calc -> calc MINUS calc
-- On STRING reduce production calc -> calc MINUS calc
-- On SLASH reduce production calc -> calc MINUS calc
-- On SEMICOLON reduce production calc -> calc MINUS calc
-- On S reduce production calc -> calc MINUS calc
-- On QUANTITY reduce production calc -> calc MINUS calc
-- On PLUS reduce production calc -> calc MINUS calc
-- On OPEN_ROUND reduce production calc -> calc MINUS calc
-- On OPEN_CURLY reduce production calc -> calc MINUS calc
-- On MINUS reduce production calc -> calc MINUS calc
-- On IMPORTANT reduce production calc -> calc MINUS calc
-- On IDENT reduce production calc -> calc MINUS calc
-- On HASH reduce production calc -> calc MINUS calc
-- On COMMA reduce production calc -> calc MINUS calc
-- On CLOSE_ROUND reduce production calc -> calc MINUS calc

State 26:
## Known stack suffix:
## OPEN_ROUND calc CLOSE_ROUND
## LR(1) items:
calc -> OPEN_ROUND calc CLOSE_ROUND . [ VAR URI URANGE TERM_FUNC STRING SLASH SEMICOLON S QUOTIENT QUANTITY PLUS OPEN_ROUND OPEN_CURLY MINUS IMPORTANT IDENT HASH COMMA CLOSE_ROUND ASTERISK ]
## Transitions:
## Reductions:
-- On VAR reduce production calc -> OPEN_ROUND calc CLOSE_ROUND
-- On URI reduce production calc -> OPEN_ROUND calc CLOSE_ROUND
-- On URANGE reduce production calc -> OPEN_ROUND calc CLOSE_ROUND
-- On TERM_FUNC reduce production calc -> OPEN_ROUND calc CLOSE_ROUND
-- On STRING reduce production calc -> OPEN_ROUND calc CLOSE_ROUND
-- On SLASH reduce production calc -> OPEN_ROUND calc CLOSE_ROUND
-- On SEMICOLON reduce production calc -> OPEN_ROUND calc CLOSE_ROUND
-- On S reduce production calc -> OPEN_ROUND calc CLOSE_ROUND
-- On QUOTIENT reduce production calc -> OPEN_ROUND calc CLOSE_ROUND
-- On QUANTITY reduce production calc -> OPEN_ROUND calc CLOSE_ROUND
-- On PLUS reduce production calc -> OPEN_ROUND calc CLOSE_ROUND
-- On OPEN_ROUND reduce production calc -> OPEN_ROUND calc CLOSE_ROUND
-- On OPEN_CURLY reduce production calc -> OPEN_ROUND calc CLOSE_ROUND
-- On MINUS reduce production calc -> OPEN_ROUND calc CLOSE_ROUND
-- On IMPORTANT reduce production calc -> OPEN_ROUND calc CLOSE_ROUND
-- On IDENT reduce production calc -> OPEN_ROUND calc CLOSE_ROUND
-- On HASH reduce production calc -> OPEN_ROUND calc CLOSE_ROUND
-- On COMMA reduce production calc -> OPEN_ROUND calc CLOSE_ROUND
-- On CLOSE_ROUND reduce production calc -> OPEN_ROUND calc CLOSE_ROUND
-- On ASTERISK reduce production calc -> OPEN_ROUND calc CLOSE_ROUND

State 27:
## Known stack suffix:
## IDENT
## LR(1) items:
term -> IDENT . [ VAR URI URANGE TERM_FUNC STRING SLASH SEMICOLON S QUANTITY OPEN_ROUND IMPORTANT IDENT HASH COMMA CLOSE_ROUND ]
## Transitions:
## Reductions:
-- On VAR reduce production term -> IDENT
-- On URI reduce production term -> IDENT
-- On URANGE reduce production term -> IDENT
-- On TERM_FUNC reduce production term -> IDENT
-- On STRING reduce production term -> IDENT
-- On SLASH reduce production term -> IDENT
-- On SEMICOLON reduce production term -> IDENT
-- On S reduce production term -> IDENT
-- On QUANTITY reduce production term -> IDENT
-- On OPEN_ROUND reduce production term -> IDENT
-- On IMPORTANT reduce production term -> IDENT
-- On IDENT reduce production term -> IDENT
-- On HASH reduce production term -> IDENT
-- On COMMA reduce production term -> IDENT
-- On CLOSE_ROUND reduce production term -> IDENT

State 28:
## Known stack suffix:
## HASH
## LR(1) items:
term -> HASH . [ VAR URI URANGE TERM_FUNC STRING SLASH SEMICOLON S QUANTITY OPEN_ROUND IMPORTANT IDENT HASH COMMA CLOSE_ROUND ]
## Transitions:
## Reductions:
-- On VAR reduce production term -> HASH
-- On URI reduce production term -> HASH
-- On URANGE reduce production term -> HASH
-- On TERM_FUNC reduce production term -> HASH
-- On STRING reduce production term -> HASH
-- On SLASH reduce production term -> HASH
-- On SEMICOLON reduce production term -> HASH
-- On S reduce production term -> HASH
-- On QUANTITY reduce production term -> HASH
-- On OPEN_ROUND reduce production term -> HASH
-- On IMPORTANT reduce production term -> HASH
-- On IDENT reduce production term -> HASH
-- On HASH reduce production term -> HASH
-- On COMMA reduce production term -> HASH
-- On CLOSE_ROUND reduce production term -> HASH

State 29:
## Known stack suffix:
## term
## LR(1) items:
separated_nonempty_list(option(S),term) -> term . [ SEMICOLON IMPORTANT COMMA CLOSE_ROUND ]
separated_nonempty_list(option(S),term) -> term . option(S) separated_nonempty_list(option(S),term) [ SEMICOLON IMPORTANT COMMA CLOSE_ROUND ]
## Transitions:
-- On S shift to state 30
-- On option(S) shift to state 31
## Reductions:
-- On VAR reduce production option(S) ->
-- On URI reduce production option(S) ->
-- On URANGE reduce production option(S) ->
-- On TERM_FUNC reduce production option(S) ->
-- On STRING reduce production option(S) ->
-- On SLASH reduce production option(S) ->
-- On SEMICOLON reduce production separated_nonempty_list(option(S),term) -> term
-- On QUANTITY reduce production option(S) ->
-- On OPEN_ROUND reduce production option(S) ->
-- On IMPORTANT reduce production separated_nonempty_list(option(S),term) -> term
-- On IDENT reduce production option(S) ->
-- On HASH reduce production option(S) ->
-- On COMMA reduce production separated_nonempty_list(option(S),term) -> term
-- On CLOSE_ROUND reduce production separated_nonempty_list(option(S),term) -> term

State 30:
## Known stack suffix:
## S
## LR(1) items:
option(S) -> S . [ VAR URI URANGE TERM_FUNC STRING SLASH SEMICOLON QUANTITY OPEN_ROUND ONLY NOT IDENT HASH ]
## Transitions:
## Reductions:
-- On VAR reduce production option(S) -> S
-- On URI reduce production option(S) -> S
-- On URANGE reduce production option(S) -> S
-- On TERM_FUNC reduce production option(S) -> S
-- On STRING reduce production option(S) -> S
-- On SLASH reduce production option(S) -> S
-- On SEMICOLON reduce production option(S) -> S
-- On QUANTITY reduce production option(S) -> S
-- On OPEN_ROUND reduce production option(S) -> S
-- On ONLY reduce production option(S) -> S
-- On NOT reduce production option(S) -> S
-- On IDENT reduce production option(S) -> S
-- On HASH reduce production option(S) -> S

State 31:
## Known stack suffix:
## term option(S)
## LR(1) items:
separated_nonempty_list(option(S),term) -> term option(S) . separated_nonempty_list(option(S),term) [ SEMICOLON IMPORTANT COMMA CLOSE_ROUND ]
## Transitions:
-- On VAR shift to state 7
-- On URI shift to state 8
-- On URANGE shift to state 11
-- On TERM_FUNC shift to state 12
-- On STRING shift to state 13
-- On SLASH shift to state 14
-- On QUANTITY shift to state 15
-- On OPEN_ROUND shift to state 16
-- On IDENT shift to state 27
-- On HASH shift to state 28
-- On term shift to state 29
-- On separated_nonempty_list(option(S),term) shift to state 32
-- On calc shift to state 33
## Reductions:

State 32:
## Known stack suffix:
## term option(S) separated_nonempty_list(option(S),term)
## LR(1) items:
separated_nonempty_list(option(S),term) -> term option(S) separated_nonempty_list(option(S),term) . [ SEMICOLON IMPORTANT COMMA CLOSE_ROUND ]
## Transitions:
## Reductions:
-- On SEMICOLON reduce production separated_nonempty_list(option(S),term) -> term option(S) separated_nonempty_list(option(S),term)
-- On IMPORTANT reduce production separated_nonempty_list(option(S),term) -> term option(S) separated_nonempty_list(option(S),term)
-- On COMMA reduce production separated_nonempty_list(option(S),term) -> term option(S) separated_nonempty_list(option(S),term)
-- On CLOSE_ROUND reduce production separated_nonempty_list(option(S),term) -> term option(S) separated_nonempty_list(option(S),term)

State 33:
## Known stack suffix:
## calc
## LR(1) items:
calc -> calc . ASTERISK calc [ VAR URI URANGE TERM_FUNC STRING SLASH SEMICOLON S QUOTIENT QUANTITY PLUS OPEN_ROUND MINUS IMPORTANT IDENT HASH COMMA CLOSE_ROUND ASTERISK ]
calc -> calc . QUOTIENT calc [ VAR URI URANGE TERM_FUNC STRING SLASH SEMICOLON S QUOTIENT QUANTITY PLUS OPEN_ROUND MINUS IMPORTANT IDENT HASH COMMA CLOSE_ROUND ASTERISK ]
calc -> calc . PLUS calc [ VAR URI URANGE TERM_FUNC STRING SLASH SEMICOLON S QUOTIENT QUANTITY PLUS OPEN_ROUND MINUS IMPORTANT IDENT HASH COMMA CLOSE_ROUND ASTERISK ]
calc -> calc . MINUS calc [ VAR URI URANGE TERM_FUNC STRING SLASH SEMICOLON S QUOTIENT QUANTITY PLUS OPEN_ROUND MINUS IMPORTANT IDENT HASH COMMA CLOSE_ROUND ASTERISK ]
term -> calc . [ VAR URI URANGE TERM_FUNC STRING SLASH SEMICOLON S QUANTITY OPEN_ROUND IMPORTANT IDENT HASH COMMA CLOSE_ROUND ]
## Transitions:
-- On QUOTIENT shift to state 18
-- On PLUS shift to state 20
-- On MINUS shift to state 24
-- On ASTERISK shift to state 22
## Reductions:
-- On VAR reduce production term -> calc
-- On URI reduce production term -> calc
-- On URANGE reduce production term -> calc
-- On TERM_FUNC reduce production term -> calc
-- On STRING reduce production term -> calc
-- On SLASH reduce production term -> calc
-- On SEMICOLON reduce production term -> calc
-- On S reduce production term -> calc
-- On QUANTITY reduce production term -> calc
-- On OPEN_ROUND reduce production term -> calc
-- On IMPORTANT reduce production term -> calc
-- On IDENT reduce production term -> calc
-- On HASH reduce production term -> calc
-- On COMMA reduce production term -> calc
-- On CLOSE_ROUND reduce production term -> calc

State 34:
## Known stack suffix:
## separated_nonempty_list(option(S),term)
## LR(1) items:
sentence -> separated_nonempty_list(option(S),term) . [ SEMICOLON IMPORTANT COMMA CLOSE_ROUND ]
## Transitions:
## Reductions:
-- On SEMICOLON reduce production sentence -> separated_nonempty_list(option(S),term)
-- On IMPORTANT reduce production sentence -> separated_nonempty_list(option(S),term)
-- On COMMA reduce production sentence -> separated_nonempty_list(option(S),term)
-- On CLOSE_ROUND reduce production sentence -> separated_nonempty_list(option(S),term)

State 35:
## Known stack suffix:
## separated_nonempty_list(COMMA,sentence)
## LR(1) items:
expr -> separated_nonempty_list(COMMA,sentence) . [ SEMICOLON IMPORTANT CLOSE_ROUND ]
## Transitions:
## Reductions:
-- On SEMICOLON reduce production expr -> separated_nonempty_list(COMMA,sentence)
-- On IMPORTANT reduce production expr -> separated_nonempty_list(COMMA,sentence)
-- On CLOSE_ROUND reduce production expr -> separated_nonempty_list(COMMA,sentence)

State 36:
## Known stack suffix:
## sentence
## LR(1) items:
separated_nonempty_list(COMMA,sentence) -> sentence . [ SEMICOLON IMPORTANT CLOSE_ROUND ]
separated_nonempty_list(COMMA,sentence) -> sentence . COMMA separated_nonempty_list(COMMA,sentence) [ SEMICOLON IMPORTANT CLOSE_ROUND ]
## Transitions:
-- On COMMA shift to state 37
## Reductions:
-- On SEMICOLON reduce production separated_nonempty_list(COMMA,sentence) -> sentence
-- On IMPORTANT reduce production separated_nonempty_list(COMMA,sentence) -> sentence
-- On CLOSE_ROUND reduce production separated_nonempty_list(COMMA,sentence) -> sentence

State 37:
## Known stack suffix:
## sentence COMMA
## LR(1) items:
separated_nonempty_list(COMMA,sentence) -> sentence COMMA . separated_nonempty_list(COMMA,sentence) [ SEMICOLON IMPORTANT CLOSE_ROUND ]
## Transitions:
-- On VAR shift to state 7
-- On URI shift to state 8
-- On URANGE shift to state 11
-- On TERM_FUNC shift to state 12
-- On STRING shift to state 13
-- On SLASH shift to state 14
-- On QUANTITY shift to state 15
-- On OPEN_ROUND shift to state 16
-- On IDENT shift to state 27
-- On HASH shift to state 28
-- On term shift to state 29
-- On separated_nonempty_list(option(S),term) shift to state 34
-- On separated_nonempty_list(COMMA,sentence) shift to state 38
-- On sentence shift to state 36
-- On calc shift to state 33
## Reductions:

State 38:
## Known stack suffix:
## sentence COMMA separated_nonempty_list(COMMA,sentence)
## LR(1) items:
separated_nonempty_list(COMMA,sentence) -> sentence COMMA separated_nonempty_list(COMMA,sentence) . [ SEMICOLON IMPORTANT CLOSE_ROUND ]
## Transitions:
## Reductions:
-- On SEMICOLON reduce production separated_nonempty_list(COMMA,sentence) -> sentence COMMA separated_nonempty_list(COMMA,sentence)
-- On IMPORTANT reduce production separated_nonempty_list(COMMA,sentence) -> sentence COMMA separated_nonempty_list(COMMA,sentence)
-- On CLOSE_ROUND reduce production separated_nonempty_list(COMMA,sentence) -> sentence COMMA separated_nonempty_list(COMMA,sentence)

State 39:
## Known stack suffix:
## TERM_FUNC expr
## LR(1) items:
term -> TERM_FUNC expr . CLOSE_ROUND [ VAR URI URANGE TERM_FUNC STRING SLASH SEMICOLON S QUANTITY OPEN_ROUND IMPORTANT IDENT HASH COMMA CLOSE_ROUND ]
## Transitions:
-- On CLOSE_ROUND shift to state 40
## Reductions:

State 40:
## Known stack suffix:
## TERM_FUNC expr CLOSE_ROUND
## LR(1) items:
term -> TERM_FUNC expr CLOSE_ROUND . [ VAR URI URANGE TERM_FUNC STRING SLASH SEMICOLON S QUANTITY OPEN_ROUND IMPORTANT IDENT HASH COMMA CLOSE_ROUND ]
## Transitions:
## Reductions:
-- On VAR reduce production term -> TERM_FUNC expr CLOSE_ROUND
-- On URI reduce production term -> TERM_FUNC expr CLOSE_ROUND
-- On URANGE reduce production term -> TERM_FUNC expr CLOSE_ROUND
-- On TERM_FUNC reduce production term -> TERM_FUNC expr CLOSE_ROUND
-- On STRING reduce production term -> TERM_FUNC expr CLOSE_ROUND
-- On SLASH reduce production term -> TERM_FUNC expr CLOSE_ROUND
-- On SEMICOLON reduce production term -> TERM_FUNC expr CLOSE_ROUND
-- On S reduce production term -> TERM_FUNC expr CLOSE_ROUND
-- On QUANTITY reduce production term -> TERM_FUNC expr CLOSE_ROUND
-- On OPEN_ROUND reduce production term -> TERM_FUNC expr CLOSE_ROUND
-- On IMPORTANT reduce production term -> TERM_FUNC expr CLOSE_ROUND
-- On IDENT reduce production term -> TERM_FUNC expr CLOSE_ROUND
-- On HASH reduce production term -> TERM_FUNC expr CLOSE_ROUND
-- On COMMA reduce production term -> TERM_FUNC expr CLOSE_ROUND
-- On CLOSE_ROUND reduce production term -> TERM_FUNC expr CLOSE_ROUND

State 41:
## Known stack suffix:
## OPEN_CURLY
## LR(1) items:
declaration_block -> OPEN_CURLY . nonempty_list(declaration) CLOSE_CURLY [ VAR SEL_FUNC QUANTITY PERIOD PAGE OPEN_SQUARE OPEN_ROUND MEDIA KEYFRAMES IMPORT IDENT HASH FONTFACE EOF DOUBLE_COLON COLON CLOSE_CURLY CHARSET ASTERISK ]
## Transitions:
-- On VAR shift to state 42
-- On IDENT shift to state 44
-- On nonempty_list(declaration) shift to state 50
-- On declaration shift to state 52
## Reductions:

State 42:
## Known stack suffix:
## VAR
## LR(1) items:
declaration -> VAR . SEMICOLON [ VAR IDENT CLOSE_CURLY ]
## Transitions:
-- On SEMICOLON shift to state 43
## Reductions:

State 43:
## Known stack suffix:
## VAR SEMICOLON
## LR(1) items:
declaration -> VAR SEMICOLON . [ VAR IDENT CLOSE_CURLY ]
## Transitions:
## Reductions:
-- On VAR reduce production declaration -> VAR SEMICOLON
-- On IDENT reduce production declaration -> VAR SEMICOLON
-- On CLOSE_CURLY reduce production declaration -> VAR SEMICOLON

State 44:
## Known stack suffix:
## IDENT
## LR(1) items:
declaration -> IDENT . COLON expr boption(IMPORTANT) SEMICOLON [ VAR IDENT CLOSE_CURLY ]
## Transitions:
-- On COLON shift to state 45
## Reductions:

State 45:
## Known stack suffix:
## IDENT COLON
## LR(1) items:
declaration -> IDENT COLON . expr boption(IMPORTANT) SEMICOLON [ VAR IDENT CLOSE_CURLY ]
## Transitions:
-- On VAR shift to state 7
-- On URI shift to state 8
-- On URANGE shift to state 11
-- On TERM_FUNC shift to state 12
-- On STRING shift to state 13
-- On SLASH shift to state 14
-- On QUANTITY shift to state 15
-- On OPEN_ROUND shift to state 16
-- On IDENT shift to state 27
-- On HASH shift to state 28
-- On term shift to state 29
-- On separated_nonempty_list(option(S),term) shift to state 34
-- On separated_nonempty_list(COMMA,sentence) shift to state 35
-- On sentence shift to state 36
-- On expr shift to state 46
-- On calc shift to state 33
## Reductions:

State 46:
## Known stack suffix:
## IDENT COLON expr
## LR(1) items:
declaration -> IDENT COLON expr . boption(IMPORTANT) SEMICOLON [ VAR IDENT CLOSE_CURLY ]
## Transitions:
-- On IMPORTANT shift to state 47
-- On boption(IMPORTANT) shift to state 48
## Reductions:
-- On SEMICOLON reduce production boption(IMPORTANT) ->

State 47:
## Known stack suffix:
## IMPORTANT
## LR(1) items:
boption(IMPORTANT) -> IMPORTANT . [ SEMICOLON ]
## Transitions:
## Reductions:
-- On SEMICOLON reduce production boption(IMPORTANT) -> IMPORTANT

State 48:
## Known stack suffix:
## IDENT COLON expr boption(IMPORTANT)
## LR(1) items:
declaration -> IDENT COLON expr boption(IMPORTANT) . SEMICOLON [ VAR IDENT CLOSE_CURLY ]
## Transitions:
-- On SEMICOLON shift to state 49
## Reductions:

State 49:
## Known stack suffix:
## IDENT COLON expr boption(IMPORTANT) SEMICOLON
## LR(1) items:
declaration -> IDENT COLON expr boption(IMPORTANT) SEMICOLON . [ VAR IDENT CLOSE_CURLY ]
## Transitions:
## Reductions:
-- On VAR reduce production declaration -> IDENT COLON expr boption(IMPORTANT) SEMICOLON
-- On IDENT reduce production declaration -> IDENT COLON expr boption(IMPORTANT) SEMICOLON
-- On CLOSE_CURLY reduce production declaration -> IDENT COLON expr boption(IMPORTANT) SEMICOLON

State 50:
## Known stack suffix:
## OPEN_CURLY nonempty_list(declaration)
## LR(1) items:
declaration_block -> OPEN_CURLY nonempty_list(declaration) . CLOSE_CURLY [ VAR SEL_FUNC QUANTITY PERIOD PAGE OPEN_SQUARE OPEN_ROUND MEDIA KEYFRAMES IMPORT IDENT HASH FONTFACE EOF DOUBLE_COLON COLON CLOSE_CURLY CHARSET ASTERISK ]
## Transitions:
-- On CLOSE_CURLY shift to state 51
## Reductions:

State 51:
## Known stack suffix:
## OPEN_CURLY nonempty_list(declaration) CLOSE_CURLY
## LR(1) items:
declaration_block -> OPEN_CURLY nonempty_list(declaration) CLOSE_CURLY . [ VAR SEL_FUNC QUANTITY PERIOD PAGE OPEN_SQUARE OPEN_ROUND MEDIA KEYFRAMES IMPORT IDENT HASH FONTFACE EOF DOUBLE_COLON COLON CLOSE_CURLY CHARSET ASTERISK ]
## Transitions:
## Reductions:
-- On VAR reduce production declaration_block -> OPEN_CURLY nonempty_list(declaration) CLOSE_CURLY
-- On SEL_FUNC reduce production declaration_block -> OPEN_CURLY nonempty_list(declaration) CLOSE_CURLY
-- On QUANTITY reduce production declaration_block -> OPEN_CURLY nonempty_list(declaration) CLOSE_CURLY
-- On PERIOD reduce production declaration_block -> OPEN_CURLY nonempty_list(declaration) CLOSE_CURLY
-- On PAGE reduce production declaration_block -> OPEN_CURLY nonempty_list(declaration) CLOSE_CURLY
-- On OPEN_SQUARE reduce production declaration_block -> OPEN_CURLY nonempty_list(declaration) CLOSE_CURLY
-- On OPEN_ROUND reduce production declaration_block -> OPEN_CURLY nonempty_list(declaration) CLOSE_CURLY
-- On MEDIA reduce production declaration_block -> OPEN_CURLY nonempty_list(declaration) CLOSE_CURLY
-- On KEYFRAMES reduce production declaration_block -> OPEN_CURLY nonempty_list(declaration) CLOSE_CURLY
-- On IMPORT reduce production declaration_block -> OPEN_CURLY nonempty_list(declaration) CLOSE_CURLY
-- On IDENT reduce production declaration_block -> OPEN_CURLY nonempty_list(declaration) CLOSE_CURLY
-- On HASH reduce production declaration_block -> OPEN_CURLY nonempty_list(declaration) CLOSE_CURLY
-- On FONTFACE reduce production declaration_block -> OPEN_CURLY nonempty_list(declaration) CLOSE_CURLY
-- On EOF reduce production declaration_block -> OPEN_CURLY nonempty_list(declaration) CLOSE_CURLY
-- On DOUBLE_COLON reduce production declaration_block -> OPEN_CURLY nonempty_list(declaration) CLOSE_CURLY
-- On COLON reduce production declaration_block -> OPEN_CURLY nonempty_list(declaration) CLOSE_CURLY
-- On CLOSE_CURLY reduce production declaration_block -> OPEN_CURLY nonempty_list(declaration) CLOSE_CURLY
-- On CHARSET reduce production declaration_block -> OPEN_CURLY nonempty_list(declaration) CLOSE_CURLY
-- On ASTERISK reduce production declaration_block -> OPEN_CURLY nonempty_list(declaration) CLOSE_CURLY

State 52:
## Known stack suffix:
## declaration
## LR(1) items:
nonempty_list(declaration) -> declaration . [ CLOSE_CURLY ]
nonempty_list(declaration) -> declaration . nonempty_list(declaration) [ CLOSE_CURLY ]
## Transitions:
-- On VAR shift to state 42
-- On IDENT shift to state 44
-- On nonempty_list(declaration) shift to state 53
-- On declaration shift to state 52
## Reductions:
-- On CLOSE_CURLY reduce production nonempty_list(declaration) -> declaration

State 53:
## Known stack suffix:
## declaration nonempty_list(declaration)
## LR(1) items:
nonempty_list(declaration) -> declaration nonempty_list(declaration) . [ CLOSE_CURLY ]
## Transitions:
## Reductions:
-- On CLOSE_CURLY reduce production nonempty_list(declaration) -> declaration nonempty_list(declaration)

State 54:
## Known stack suffix:
## VAR COLON var_decl
## LR(1) items:
statement -> VAR COLON var_decl . [ VAR SEL_FUNC PERIOD PAGE OPEN_SQUARE MEDIA KEYFRAMES IMPORT IDENT HASH FONTFACE EOF DOUBLE_COLON COLON CHARSET ASTERISK ]
## Transitions:
## Reductions:
-- On VAR reduce production statement -> VAR COLON var_decl
-- On SEL_FUNC reduce production statement -> VAR COLON var_decl
-- On PERIOD reduce production statement -> VAR COLON var_decl
-- On PAGE reduce production statement -> VAR COLON var_decl
-- On OPEN_SQUARE reduce production statement -> VAR COLON var_decl
-- On MEDIA reduce production statement -> VAR COLON var_decl
-- On KEYFRAMES reduce production statement -> VAR COLON var_decl
-- On IMPORT reduce production statement -> VAR COLON var_decl
-- On IDENT reduce production statement -> VAR COLON var_decl
-- On HASH reduce production statement -> VAR COLON var_decl
-- On FONTFACE reduce production statement -> VAR COLON var_decl
-- On EOF reduce production statement -> VAR COLON var_decl
-- On DOUBLE_COLON reduce production statement -> VAR COLON var_decl
-- On COLON reduce production statement -> VAR COLON var_decl
-- On CHARSET reduce production statement -> VAR COLON var_decl
-- On ASTERISK reduce production statement -> VAR COLON var_decl

State 55:
## Known stack suffix:
## expr
## LR(1) items:
var_decl -> expr . SEMICOLON [ VAR SEL_FUNC PERIOD PAGE OPEN_SQUARE MEDIA KEYFRAMES IMPORT IDENT HASH FONTFACE EOF DOUBLE_COLON COLON CHARSET ASTERISK ]
## Transitions:
-- On SEMICOLON shift to state 56
## Reductions:

State 56:
## Known stack suffix:
## expr SEMICOLON
## LR(1) items:
var_decl -> expr SEMICOLON . [ VAR SEL_FUNC PERIOD PAGE OPEN_SQUARE MEDIA KEYFRAMES IMPORT IDENT HASH FONTFACE EOF DOUBLE_COLON COLON CHARSET ASTERISK ]
## Transitions:
## Reductions:
-- On VAR reduce production var_decl -> expr SEMICOLON
-- On SEL_FUNC reduce production var_decl -> expr SEMICOLON
-- On PERIOD reduce production var_decl -> expr SEMICOLON
-- On PAGE reduce production var_decl -> expr SEMICOLON
-- On OPEN_SQUARE reduce production var_decl -> expr SEMICOLON
-- On MEDIA reduce production var_decl -> expr SEMICOLON
-- On KEYFRAMES reduce production var_decl -> expr SEMICOLON
-- On IMPORT reduce production var_decl -> expr SEMICOLON
-- On IDENT reduce production var_decl -> expr SEMICOLON
-- On HASH reduce production var_decl -> expr SEMICOLON
-- On FONTFACE reduce production var_decl -> expr SEMICOLON
-- On EOF reduce production var_decl -> expr SEMICOLON
-- On DOUBLE_COLON reduce production var_decl -> expr SEMICOLON
-- On COLON reduce production var_decl -> expr SEMICOLON
-- On CHARSET reduce production var_decl -> expr SEMICOLON
-- On ASTERISK reduce production var_decl -> expr SEMICOLON

State 57:
## Known stack suffix:
## declaration_block
## LR(1) items:
var_decl -> declaration_block . [ VAR SEL_FUNC PERIOD PAGE OPEN_SQUARE MEDIA KEYFRAMES IMPORT IDENT HASH FONTFACE EOF DOUBLE_COLON COLON CHARSET ASTERISK ]
## Transitions:
## Reductions:
-- On VAR reduce production var_decl -> declaration_block
-- On SEL_FUNC reduce production var_decl -> declaration_block
-- On PERIOD reduce production var_decl -> declaration_block
-- On PAGE reduce production var_decl -> declaration_block
-- On OPEN_SQUARE reduce production var_decl -> declaration_block
-- On MEDIA reduce production var_decl -> declaration_block
-- On KEYFRAMES reduce production var_decl -> declaration_block
-- On IMPORT reduce production var_decl -> declaration_block
-- On IDENT reduce production var_decl -> declaration_block
-- On HASH reduce production var_decl -> declaration_block
-- On FONTFACE reduce production var_decl -> declaration_block
-- On EOF reduce production var_decl -> declaration_block
-- On DOUBLE_COLON reduce production var_decl -> declaration_block
-- On COLON reduce production var_decl -> declaration_block
-- On CHARSET reduce production var_decl -> declaration_block
-- On ASTERISK reduce production var_decl -> declaration_block

State 58:
## Known stack suffix:
## SEL_FUNC
## LR(1) items:
qualifier -> SEL_FUNC . function_args CLOSE_ROUND [ TILDE SEL_FUNC S PLUS PERIOD OPEN_SQUARE OPEN_CURLY HASH GT DOUBLE_COLON COMMA COLON CLOSE_ROUND ]
## Transitions:
-- On SEL_FUNC shift to state 58
-- On PERIOD shift to state 59
-- On OPEN_SQUARE shift to state 61
-- On NTH shift to state 79
-- On IDENT shift to state 80
-- On HASH shift to state 81
-- On DOUBLE_COLON shift to state 82
-- On COLON shift to state 84
-- On qualifier shift to state 86
-- On nonempty_list(qualifier) shift to state 88
-- On function_args shift to state 89
## Reductions:

State 59:
## Known stack suffix:
## PERIOD
## LR(1) items:
qualifier -> PERIOD . IDENT [ TILDE SEL_FUNC S PLUS PERIOD OPEN_SQUARE OPEN_CURLY HASH GT DOUBLE_COLON COMMA COLON CLOSE_ROUND ]
## Transitions:
-- On IDENT shift to state 60
## Reductions:

State 60:
## Known stack suffix:
## PERIOD IDENT
## LR(1) items:
qualifier -> PERIOD IDENT . [ TILDE SEL_FUNC S PLUS PERIOD OPEN_SQUARE OPEN_CURLY HASH GT DOUBLE_COLON COMMA COLON CLOSE_ROUND ]
## Transitions:
## Reductions:
-- On TILDE reduce production qualifier -> PERIOD IDENT
-- On SEL_FUNC reduce production qualifier -> PERIOD IDENT
-- On S reduce production qualifier -> PERIOD IDENT
-- On PLUS reduce production qualifier -> PERIOD IDENT
-- On PERIOD reduce production qualifier -> PERIOD IDENT
-- On OPEN_SQUARE reduce production qualifier -> PERIOD IDENT
-- On OPEN_CURLY reduce production qualifier -> PERIOD IDENT
-- On HASH reduce production qualifier -> PERIOD IDENT
-- On GT reduce production qualifier -> PERIOD IDENT
-- On DOUBLE_COLON reduce production qualifier -> PERIOD IDENT
-- On COMMA reduce production qualifier -> PERIOD IDENT
-- On COLON reduce production qualifier -> PERIOD IDENT
-- On CLOSE_ROUND reduce production qualifier -> PERIOD IDENT

State 61:
## Known stack suffix:
## OPEN_SQUARE
## LR(1) items:
qualifier -> OPEN_SQUARE . IDENT attr_operation CLOSE_SQUARE [ TILDE SEL_FUNC S PLUS PERIOD OPEN_SQUARE OPEN_CURLY HASH GT DOUBLE_COLON COMMA COLON CLOSE_ROUND ]
## Transitions:
-- On IDENT shift to state 62
## Reductions:

State 62:
## Known stack suffix:
## OPEN_SQUARE IDENT
## LR(1) items:
qualifier -> OPEN_SQUARE IDENT . attr_operation CLOSE_SQUARE [ TILDE SEL_FUNC S PLUS PERIOD OPEN_SQUARE OPEN_CURLY HASH GT DOUBLE_COLON COMMA COLON CLOSE_ROUND ]
## Transitions:
-- On ATTR_SUFFIX shift to state 63
-- On ATTR_SUBSTRING shift to state 67
-- On ATTR_PREFIX shift to state 69
-- On ATTR_INCLUDES shift to state 71
-- On ATTR_EQUALS shift to state 73
-- On ATTR_DASHMATCH shift to state 75
-- On attr_operation shift to state 77
## Reductions:
-- On CLOSE_SQUARE reduce production attr_operation ->

State 63:
## Known stack suffix:
## ATTR_SUFFIX
## LR(1) items:
attr_operation -> ATTR_SUFFIX . attr_operand [ CLOSE_SQUARE ]
## Transitions:
-- On STRING shift to state 64
-- On IDENT shift to state 65
-- On attr_operand shift to state 66
## Reductions:

State 64:
## Known stack suffix:
## STRING
## LR(1) items:
attr_operand -> STRING . [ CLOSE_SQUARE ]
## Transitions:
## Reductions:
-- On CLOSE_SQUARE reduce production attr_operand -> STRING

State 65:
## Known stack suffix:
## IDENT
## LR(1) items:
attr_operand -> IDENT . [ CLOSE_SQUARE ]
## Transitions:
## Reductions:
-- On CLOSE_SQUARE reduce production attr_operand -> IDENT

State 66:
## Known stack suffix:
## ATTR_SUFFIX attr_operand
## LR(1) items:
attr_operation -> ATTR_SUFFIX attr_operand . [ CLOSE_SQUARE ]
## Transitions:
## Reductions:
-- On CLOSE_SQUARE reduce production attr_operation -> ATTR_SUFFIX attr_operand

State 67:
## Known stack suffix:
## ATTR_SUBSTRING
## LR(1) items:
attr_operation -> ATTR_SUBSTRING . attr_operand [ CLOSE_SQUARE ]
## Transitions:
-- On STRING shift to state 64
-- On IDENT shift to state 65
-- On attr_operand shift to state 68
## Reductions:

State 68:
## Known stack suffix:
## ATTR_SUBSTRING attr_operand
## LR(1) items:
attr_operation -> ATTR_SUBSTRING attr_operand . [ CLOSE_SQUARE ]
## Transitions:
## Reductions:
-- On CLOSE_SQUARE reduce production attr_operation -> ATTR_SUBSTRING attr_operand

State 69:
## Known stack suffix:
## ATTR_PREFIX
## LR(1) items:
attr_operation -> ATTR_PREFIX . attr_operand [ CLOSE_SQUARE ]
## Transitions:
-- On STRING shift to state 64
-- On IDENT shift to state 65
-- On attr_operand shift to state 70
## Reductions:

State 70:
## Known stack suffix:
## ATTR_PREFIX attr_operand
## LR(1) items:
attr_operation -> ATTR_PREFIX attr_operand . [ CLOSE_SQUARE ]
## Transitions:
## Reductions:
-- On CLOSE_SQUARE reduce production attr_operation -> ATTR_PREFIX attr_operand

State 71:
## Known stack suffix:
## ATTR_INCLUDES
## LR(1) items:
attr_operation -> ATTR_INCLUDES . attr_operand [ CLOSE_SQUARE ]
## Transitions:
-- On STRING shift to state 64
-- On IDENT shift to state 65
-- On attr_operand shift to state 72
## Reductions:

State 72:
## Known stack suffix:
## ATTR_INCLUDES attr_operand
## LR(1) items:
attr_operation -> ATTR_INCLUDES attr_operand . [ CLOSE_SQUARE ]
## Transitions:
## Reductions:
-- On CLOSE_SQUARE reduce production attr_operation -> ATTR_INCLUDES attr_operand

State 73:
## Known stack suffix:
## ATTR_EQUALS
## LR(1) items:
attr_operation -> ATTR_EQUALS . attr_operand [ CLOSE_SQUARE ]
## Transitions:
-- On STRING shift to state 64
-- On IDENT shift to state 65
-- On attr_operand shift to state 74
## Reductions:

State 74:
## Known stack suffix:
## ATTR_EQUALS attr_operand
## LR(1) items:
attr_operation -> ATTR_EQUALS attr_operand . [ CLOSE_SQUARE ]
## Transitions:
## Reductions:
-- On CLOSE_SQUARE reduce production attr_operation -> ATTR_EQUALS attr_operand

State 75:
## Known stack suffix:
## ATTR_DASHMATCH
## LR(1) items:
attr_operation -> ATTR_DASHMATCH . attr_operand [ CLOSE_SQUARE ]
## Transitions:
-- On STRING shift to state 64
-- On IDENT shift to state 65
-- On attr_operand shift to state 76
## Reductions:

State 76:
## Known stack suffix:
## ATTR_DASHMATCH attr_operand
## LR(1) items:
attr_operation -> ATTR_DASHMATCH attr_operand . [ CLOSE_SQUARE ]
## Transitions:
## Reductions:
-- On CLOSE_SQUARE reduce production attr_operation -> ATTR_DASHMATCH attr_operand

State 77:
## Known stack suffix:
## OPEN_SQUARE IDENT attr_operation
## LR(1) items:
qualifier -> OPEN_SQUARE IDENT attr_operation . CLOSE_SQUARE [ TILDE SEL_FUNC S PLUS PERIOD OPEN_SQUARE OPEN_CURLY HASH GT DOUBLE_COLON COMMA COLON CLOSE_ROUND ]
## Transitions:
-- On CLOSE_SQUARE shift to state 78
## Reductions:

State 78:
## Known stack suffix:
## OPEN_SQUARE IDENT attr_operation CLOSE_SQUARE
## LR(1) items:
qualifier -> OPEN_SQUARE IDENT attr_operation CLOSE_SQUARE . [ TILDE SEL_FUNC S PLUS PERIOD OPEN_SQUARE OPEN_CURLY HASH GT DOUBLE_COLON COMMA COLON CLOSE_ROUND ]
## Transitions:
## Reductions:
-- On TILDE reduce production qualifier -> OPEN_SQUARE IDENT attr_operation CLOSE_SQUARE
-- On SEL_FUNC reduce production qualifier -> OPEN_SQUARE IDENT attr_operation CLOSE_SQUARE
-- On S reduce production qualifier -> OPEN_SQUARE IDENT attr_operation CLOSE_SQUARE
-- On PLUS reduce production qualifier -> OPEN_SQUARE IDENT attr_operation CLOSE_SQUARE
-- On PERIOD reduce production qualifier -> OPEN_SQUARE IDENT attr_operation CLOSE_SQUARE
-- On OPEN_SQUARE reduce production qualifier -> OPEN_SQUARE IDENT attr_operation CLOSE_SQUARE
-- On OPEN_CURLY reduce production qualifier -> OPEN_SQUARE IDENT attr_operation CLOSE_SQUARE
-- On HASH reduce production qualifier -> OPEN_SQUARE IDENT attr_operation CLOSE_SQUARE
-- On GT reduce production qualifier -> OPEN_SQUARE IDENT attr_operation CLOSE_SQUARE
-- On DOUBLE_COLON reduce production qualifier -> OPEN_SQUARE IDENT attr_operation CLOSE_SQUARE
-- On COMMA reduce production qualifier -> OPEN_SQUARE IDENT attr_operation CLOSE_SQUARE
-- On COLON reduce production qualifier -> OPEN_SQUARE IDENT attr_operation CLOSE_SQUARE
-- On CLOSE_ROUND reduce production qualifier -> OPEN_SQUARE IDENT attr_operation CLOSE_SQUARE

State 79:
## Known stack suffix:
## NTH
## LR(1) items:
function_args -> NTH . [ CLOSE_ROUND ]
## Transitions:
## Reductions:
-- On CLOSE_ROUND reduce production function_args -> NTH

State 80:
## Known stack suffix:
## IDENT
## LR(1) items:
function_args -> IDENT . [ CLOSE_ROUND ]
## Transitions:
## Reductions:
-- On CLOSE_ROUND reduce production function_args -> IDENT

State 81:
## Known stack suffix:
## HASH
## LR(1) items:
qualifier -> HASH . [ TILDE SEL_FUNC S PLUS PERIOD OPEN_SQUARE OPEN_CURLY HASH GT DOUBLE_COLON COMMA COLON CLOSE_ROUND ]
## Transitions:
## Reductions:
-- On TILDE reduce production qualifier -> HASH
-- On SEL_FUNC reduce production qualifier -> HASH
-- On S reduce production qualifier -> HASH
-- On PLUS reduce production qualifier -> HASH
-- On PERIOD reduce production qualifier -> HASH
-- On OPEN_SQUARE reduce production qualifier -> HASH
-- On OPEN_CURLY reduce production qualifier -> HASH
-- On HASH reduce production qualifier -> HASH
-- On GT reduce production qualifier -> HASH
-- On DOUBLE_COLON reduce production qualifier -> HASH
-- On COMMA reduce production qualifier -> HASH
-- On COLON reduce production qualifier -> HASH
-- On CLOSE_ROUND reduce production qualifier -> HASH

State 82:
## Known stack suffix:
## DOUBLE_COLON
## LR(1) items:
qualifier -> DOUBLE_COLON . IDENT [ TILDE SEL_FUNC S PLUS PERIOD OPEN_SQUARE OPEN_CURLY HASH GT DOUBLE_COLON COMMA COLON CLOSE_ROUND ]
## Transitions:
-- On IDENT shift to state 83
## Reductions:

State 83:
## Known stack suffix:
## DOUBLE_COLON IDENT
## LR(1) items:
qualifier -> DOUBLE_COLON IDENT . [ TILDE SEL_FUNC S PLUS PERIOD OPEN_SQUARE OPEN_CURLY HASH GT DOUBLE_COLON COMMA COLON CLOSE_ROUND ]
## Transitions:
## Reductions:
-- On TILDE reduce production qualifier -> DOUBLE_COLON IDENT
-- On SEL_FUNC reduce production qualifier -> DOUBLE_COLON IDENT
-- On S reduce production qualifier -> DOUBLE_COLON IDENT
-- On PLUS reduce production qualifier -> DOUBLE_COLON IDENT
-- On PERIOD reduce production qualifier -> DOUBLE_COLON IDENT
-- On OPEN_SQUARE reduce production qualifier -> DOUBLE_COLON IDENT
-- On OPEN_CURLY reduce production qualifier -> DOUBLE_COLON IDENT
-- On HASH reduce production qualifier -> DOUBLE_COLON IDENT
-- On GT reduce production qualifier -> DOUBLE_COLON IDENT
-- On DOUBLE_COLON reduce production qualifier -> DOUBLE_COLON IDENT
-- On COMMA reduce production qualifier -> DOUBLE_COLON IDENT
-- On COLON reduce production qualifier -> DOUBLE_COLON IDENT
-- On CLOSE_ROUND reduce production qualifier -> DOUBLE_COLON IDENT

State 84:
## Known stack suffix:
## COLON
## LR(1) items:
qualifier -> COLON . IDENT [ TILDE SEL_FUNC S PLUS PERIOD OPEN_SQUARE OPEN_CURLY HASH GT DOUBLE_COLON COMMA COLON CLOSE_ROUND ]
## Transitions:
-- On IDENT shift to state 85
## Reductions:

State 85:
## Known stack suffix:
## COLON IDENT
## LR(1) items:
qualifier -> COLON IDENT . [ TILDE SEL_FUNC S PLUS PERIOD OPEN_SQUARE OPEN_CURLY HASH GT DOUBLE_COLON COMMA COLON CLOSE_ROUND ]
## Transitions:
## Reductions:
-- On TILDE reduce production qualifier -> COLON IDENT
-- On SEL_FUNC reduce production qualifier -> COLON IDENT
-- On S reduce production qualifier -> COLON IDENT
-- On PLUS reduce production qualifier -> COLON IDENT
-- On PERIOD reduce production qualifier -> COLON IDENT
-- On OPEN_SQUARE reduce production qualifier -> COLON IDENT
-- On OPEN_CURLY reduce production qualifier -> COLON IDENT
-- On HASH reduce production qualifier -> COLON IDENT
-- On GT reduce production qualifier -> COLON IDENT
-- On DOUBLE_COLON reduce production qualifier -> COLON IDENT
-- On COMMA reduce production qualifier -> COLON IDENT
-- On COLON reduce production qualifier -> COLON IDENT
-- On CLOSE_ROUND reduce production qualifier -> COLON IDENT

State 86:
## Known stack suffix:
## qualifier
## LR(1) items:
nonempty_list(qualifier) -> qualifier . [ TILDE S PLUS OPEN_CURLY GT COMMA CLOSE_ROUND ]
nonempty_list(qualifier) -> qualifier . nonempty_list(qualifier) [ TILDE S PLUS OPEN_CURLY GT COMMA CLOSE_ROUND ]
## Transitions:
-- On SEL_FUNC shift to state 58
-- On PERIOD shift to state 59
-- On OPEN_SQUARE shift to state 61
-- On HASH shift to state 81
-- On DOUBLE_COLON shift to state 82
-- On COLON shift to state 84
-- On qualifier shift to state 86
-- On nonempty_list(qualifier) shift to state 87
## Reductions:
-- On TILDE reduce production nonempty_list(qualifier) -> qualifier
-- On S reduce production nonempty_list(qualifier) -> qualifier
-- On PLUS reduce production nonempty_list(qualifier) -> qualifier
-- On OPEN_CURLY reduce production nonempty_list(qualifier) -> qualifier
-- On GT reduce production nonempty_list(qualifier) -> qualifier
-- On COMMA reduce production nonempty_list(qualifier) -> qualifier
-- On CLOSE_ROUND reduce production nonempty_list(qualifier) -> qualifier

State 87:
## Known stack suffix:
## qualifier nonempty_list(qualifier)
## LR(1) items:
nonempty_list(qualifier) -> qualifier nonempty_list(qualifier) . [ TILDE S PLUS OPEN_CURLY GT COMMA CLOSE_ROUND ]
## Transitions:
## Reductions:
-- On TILDE reduce production nonempty_list(qualifier) -> qualifier nonempty_list(qualifier)
-- On S reduce production nonempty_list(qualifier) -> qualifier nonempty_list(qualifier)
-- On PLUS reduce production nonempty_list(qualifier) -> qualifier nonempty_list(qualifier)
-- On OPEN_CURLY reduce production nonempty_list(qualifier) -> qualifier nonempty_list(qualifier)
-- On GT reduce production nonempty_list(qualifier) -> qualifier nonempty_list(qualifier)
-- On COMMA reduce production nonempty_list(qualifier) -> qualifier nonempty_list(qualifier)
-- On CLOSE_ROUND reduce production nonempty_list(qualifier) -> qualifier nonempty_list(qualifier)

State 88:
## Known stack suffix:
## nonempty_list(qualifier)
## LR(1) items:
function_args -> nonempty_list(qualifier) . [ CLOSE_ROUND ]
## Transitions:
## Reductions:
-- On CLOSE_ROUND reduce production function_args -> nonempty_list(qualifier)

State 89:
## Known stack suffix:
## SEL_FUNC function_args
## LR(1) items:
qualifier -> SEL_FUNC function_args . CLOSE_ROUND [ TILDE SEL_FUNC S PLUS PERIOD OPEN_SQUARE OPEN_CURLY HASH GT DOUBLE_COLON COMMA COLON CLOSE_ROUND ]
## Transitions:
-- On CLOSE_ROUND shift to state 90
## Reductions:

State 90:
## Known stack suffix:
## SEL_FUNC function_args CLOSE_ROUND
## LR(1) items:
qualifier -> SEL_FUNC function_args CLOSE_ROUND . [ TILDE SEL_FUNC S PLUS PERIOD OPEN_SQUARE OPEN_CURLY HASH GT DOUBLE_COLON COMMA COLON CLOSE_ROUND ]
## Transitions:
## Reductions:
-- On TILDE reduce production qualifier -> SEL_FUNC function_args CLOSE_ROUND
-- On SEL_FUNC reduce production qualifier -> SEL_FUNC function_args CLOSE_ROUND
-- On S reduce production qualifier -> SEL_FUNC function_args CLOSE_ROUND
-- On PLUS reduce production qualifier -> SEL_FUNC function_args CLOSE_ROUND
-- On PERIOD reduce production qualifier -> SEL_FUNC function_args CLOSE_ROUND
-- On OPEN_SQUARE reduce production qualifier -> SEL_FUNC function_args CLOSE_ROUND
-- On OPEN_CURLY reduce production qualifier -> SEL_FUNC function_args CLOSE_ROUND
-- On HASH reduce production qualifier -> SEL_FUNC function_args CLOSE_ROUND
-- On GT reduce production qualifier -> SEL_FUNC function_args CLOSE_ROUND
-- On DOUBLE_COLON reduce production qualifier -> SEL_FUNC function_args CLOSE_ROUND
-- On COMMA reduce production qualifier -> SEL_FUNC function_args CLOSE_ROUND
-- On COLON reduce production qualifier -> SEL_FUNC function_args CLOSE_ROUND
-- On CLOSE_ROUND reduce production qualifier -> SEL_FUNC function_args CLOSE_ROUND

State 91:
## Known stack suffix:
## PAGE
## LR(1) items:
atrule -> PAGE . option(pseudo_page) declaration_block [ VAR SEL_FUNC PERIOD PAGE OPEN_SQUARE MEDIA KEYFRAMES IMPORT IDENT HASH FONTFACE EOF DOUBLE_COLON COLON CHARSET ASTERISK ]
## Transitions:
-- On COLON shift to state 92
-- On pseudo_page shift to state 94
-- On option(pseudo_page) shift to state 95
## Reductions:
-- On OPEN_CURLY reduce production option(pseudo_page) ->

State 92:
## Known stack suffix:
## COLON
## LR(1) items:
pseudo_page -> COLON . IDENT [ OPEN_CURLY ]
## Transitions:
-- On IDENT shift to state 93
## Reductions:

State 93:
## Known stack suffix:
## COLON IDENT
## LR(1) items:
pseudo_page -> COLON IDENT . [ OPEN_CURLY ]
## Transitions:
## Reductions:
-- On OPEN_CURLY reduce production pseudo_page -> COLON IDENT

State 94:
## Known stack suffix:
## pseudo_page
## LR(1) items:
option(pseudo_page) -> pseudo_page . [ OPEN_CURLY ]
## Transitions:
## Reductions:
-- On OPEN_CURLY reduce production option(pseudo_page) -> pseudo_page

State 95:
## Known stack suffix:
## PAGE option(pseudo_page)
## LR(1) items:
atrule -> PAGE option(pseudo_page) . declaration_block [ VAR SEL_FUNC PERIOD PAGE OPEN_SQUARE MEDIA KEYFRAMES IMPORT IDENT HASH FONTFACE EOF DOUBLE_COLON COLON CHARSET ASTERISK ]
## Transitions:
-- On OPEN_CURLY shift to state 41
-- On declaration_block shift to state 96
## Reductions:

State 96:
## Known stack suffix:
## PAGE option(pseudo_page) declaration_block
## LR(1) items:
atrule -> PAGE option(pseudo_page) declaration_block . [ VAR SEL_FUNC PERIOD PAGE OPEN_SQUARE MEDIA KEYFRAMES IMPORT IDENT HASH FONTFACE EOF DOUBLE_COLON COLON CHARSET ASTERISK ]
## Transitions:
## Reductions:
-- On VAR reduce production atrule -> PAGE option(pseudo_page) declaration_block
-- On SEL_FUNC reduce production atrule -> PAGE option(pseudo_page) declaration_block
-- On PERIOD reduce production atrule -> PAGE option(pseudo_page) declaration_block
-- On PAGE reduce production atrule -> PAGE option(pseudo_page) declaration_block
-- On OPEN_SQUARE reduce production atrule -> PAGE option(pseudo_page) declaration_block
-- On MEDIA reduce production atrule -> PAGE option(pseudo_page) declaration_block
-- On KEYFRAMES reduce production atrule -> PAGE option(pseudo_page) declaration_block
-- On IMPORT reduce production atrule -> PAGE option(pseudo_page) declaration_block
-- On IDENT reduce production atrule -> PAGE option(pseudo_page) declaration_block
-- On HASH reduce production atrule -> PAGE option(pseudo_page) declaration_block
-- On FONTFACE reduce production atrule -> PAGE option(pseudo_page) declaration_block
-- On EOF reduce production atrule -> PAGE option(pseudo_page) declaration_block
-- On DOUBLE_COLON reduce production atrule -> PAGE option(pseudo_page) declaration_block
-- On COLON reduce production atrule -> PAGE option(pseudo_page) declaration_block
-- On CHARSET reduce production atrule -> PAGE option(pseudo_page) declaration_block
-- On ASTERISK reduce production atrule -> PAGE option(pseudo_page) declaration_block

State 97:
## Known stack suffix:
## MEDIA
## LR(1) items:
atrule -> MEDIA . media_query_list OPEN_CURLY nonempty_list(rule) CLOSE_CURLY [ VAR SEL_FUNC PERIOD PAGE OPEN_SQUARE MEDIA KEYFRAMES IMPORT IDENT HASH FONTFACE EOF DOUBLE_COLON COLON CHARSET ASTERISK ]
## Transitions:
-- On OPEN_ROUND shift to state 98
-- On ONLY shift to state 106
-- On NOT shift to state 107
-- On separated_nonempty_list(COMMA,media_query) shift to state 108
-- On separated_nonempty_list(AND,media_expression) shift to state 109
-- On option(media_prefix) shift to state 110
-- On media_type shift to state 112
-- On media_query_list shift to state 120
-- On media_query shift to state 149
-- On media_prefix shift to state 152
-- On media_expression_nelist shift to state 153
-- On media_expression shift to state 115
## Reductions:
-- On IDENT reduce production option(media_prefix) ->

State 98:
## Known stack suffix:
## OPEN_ROUND
## LR(1) items:
media_expression -> OPEN_ROUND . media_feature option(media_sentence) CLOSE_ROUND [ SEMICOLON OPEN_CURLY COMMA AND ]
## Transitions:
-- On IDENT shift to state 99
-- On media_feature shift to state 100
## Reductions:

State 99:
## Known stack suffix:
## IDENT
## LR(1) items:
media_feature -> IDENT . [ COLON CLOSE_ROUND ]
## Transitions:
## Reductions:
-- On COLON reduce production media_feature -> IDENT
-- On CLOSE_ROUND reduce production media_feature -> IDENT

State 100:
## Known stack suffix:
## OPEN_ROUND media_feature
## LR(1) items:
media_expression -> OPEN_ROUND media_feature . option(media_sentence) CLOSE_ROUND [ SEMICOLON OPEN_CURLY COMMA AND ]
## Transitions:
-- On COLON shift to state 101
-- On option(media_sentence) shift to state 103
-- On media_sentence shift to state 105
## Reductions:
-- On CLOSE_ROUND reduce production option(media_sentence) ->

State 101:
## Known stack suffix:
## COLON
## LR(1) items:
media_sentence -> COLON . sentence [ CLOSE_ROUND ]
## Transitions:
-- On VAR shift to state 7
-- On URI shift to state 8
-- On URANGE shift to state 11
-- On TERM_FUNC shift to state 12
-- On STRING shift to state 13
-- On SLASH shift to state 14
-- On QUANTITY shift to state 15
-- On OPEN_ROUND shift to state 16
-- On IDENT shift to state 27
-- On HASH shift to state 28
-- On term shift to state 29
-- On separated_nonempty_list(option(S),term) shift to state 34
-- On sentence shift to state 102
-- On calc shift to state 33
## Reductions:

State 102:
## Known stack suffix:
## COLON sentence
## LR(1) items:
media_sentence -> COLON sentence . [ CLOSE_ROUND ]
## Transitions:
## Reductions:
-- On CLOSE_ROUND reduce production media_sentence -> COLON sentence

State 103:
## Known stack suffix:
## OPEN_ROUND media_feature option(media_sentence)
## LR(1) items:
media_expression -> OPEN_ROUND media_feature option(media_sentence) . CLOSE_ROUND [ SEMICOLON OPEN_CURLY COMMA AND ]
## Transitions:
-- On CLOSE_ROUND shift to state 104
## Reductions:

State 104:
## Known stack suffix:
## OPEN_ROUND media_feature option(media_sentence) CLOSE_ROUND
## LR(1) items:
media_expression -> OPEN_ROUND media_feature option(media_sentence) CLOSE_ROUND . [ SEMICOLON OPEN_CURLY COMMA AND ]
## Transitions:
## Reductions:
-- On SEMICOLON reduce production media_expression -> OPEN_ROUND media_feature option(media_sentence) CLOSE_ROUND
-- On OPEN_CURLY reduce production media_expression -> OPEN_ROUND media_feature option(media_sentence) CLOSE_ROUND
-- On COMMA reduce production media_expression -> OPEN_ROUND media_feature option(media_sentence) CLOSE_ROUND
-- On AND reduce production media_expression -> OPEN_ROUND media_feature option(media_sentence) CLOSE_ROUND

State 105:
## Known stack suffix:
## media_sentence
## LR(1) items:
option(media_sentence) -> media_sentence . [ CLOSE_ROUND ]
## Transitions:
## Reductions:
-- On CLOSE_ROUND reduce production option(media_sentence) -> media_sentence

State 106:
## Known stack suffix:
## ONLY
## LR(1) items:
media_prefix -> ONLY . [ IDENT ]
## Transitions:
## Reductions:
-- On IDENT reduce production media_prefix -> ONLY

State 107:
## Known stack suffix:
## NOT
## LR(1) items:
media_prefix -> NOT . [ IDENT ]
## Transitions:
## Reductions:
-- On IDENT reduce production media_prefix -> NOT

State 108:
## Known stack suffix:
## separated_nonempty_list(COMMA,media_query)
## LR(1) items:
media_query_list -> separated_nonempty_list(COMMA,media_query) . [ SEMICOLON OPEN_CURLY ]
## Transitions:
## Reductions:
-- On SEMICOLON reduce production media_query_list -> separated_nonempty_list(COMMA,media_query)
-- On OPEN_CURLY reduce production media_query_list -> separated_nonempty_list(COMMA,media_query)

State 109:
## Known stack suffix:
## separated_nonempty_list(AND,media_expression)
## LR(1) items:
media_expression_nelist -> separated_nonempty_list(AND,media_expression) . [ SEMICOLON OPEN_CURLY COMMA ]
## Transitions:
## Reductions:
-- On SEMICOLON reduce production media_expression_nelist -> separated_nonempty_list(AND,media_expression)
-- On OPEN_CURLY reduce production media_expression_nelist -> separated_nonempty_list(AND,media_expression)
-- On COMMA reduce production media_expression_nelist -> separated_nonempty_list(AND,media_expression)

State 110:
## Known stack suffix:
## option(media_prefix)
## LR(1) items:
media_type -> option(media_prefix) . IDENT [ SEMICOLON OPEN_CURLY COMMA AND ]
## Transitions:
-- On IDENT shift to state 111
## Reductions:

State 111:
## Known stack suffix:
## option(media_prefix) IDENT
## LR(1) items:
media_type -> option(media_prefix) IDENT . [ SEMICOLON OPEN_CURLY COMMA AND ]
## Transitions:
## Reductions:
-- On SEMICOLON reduce production media_type -> option(media_prefix) IDENT
-- On OPEN_CURLY reduce production media_type -> option(media_prefix) IDENT
-- On COMMA reduce production media_type -> option(media_prefix) IDENT
-- On AND reduce production media_type -> option(media_prefix) IDENT

State 112:
## Known stack suffix:
## media_type
## LR(1) items:
media_query -> media_type . option(media_expression_list) [ SEMICOLON OPEN_CURLY COMMA ]
## Transitions:
-- On AND shift to state 113
-- On option(media_expression_list) shift to state 118
-- On media_expression_list shift to state 119
## Reductions:
-- On SEMICOLON reduce production option(media_expression_list) ->
-- On OPEN_CURLY reduce production option(media_expression_list) ->
-- On COMMA reduce production option(media_expression_list) ->

State 113:
## Known stack suffix:
## AND
## LR(1) items:
media_expression_list -> AND . separated_nonempty_list(AND,media_expression) [ SEMICOLON OPEN_CURLY COMMA ]
## Transitions:
-- On OPEN_ROUND shift to state 98
-- On separated_nonempty_list(AND,media_expression) shift to state 114
-- On media_expression shift to state 115
## Reductions:

State 114:
## Known stack suffix:
## AND separated_nonempty_list(AND,media_expression)
## LR(1) items:
media_expression_list -> AND separated_nonempty_list(AND,media_expression) . [ SEMICOLON OPEN_CURLY COMMA ]
## Transitions:
## Reductions:
-- On SEMICOLON reduce production media_expression_list -> AND separated_nonempty_list(AND,media_expression)
-- On OPEN_CURLY reduce production media_expression_list -> AND separated_nonempty_list(AND,media_expression)
-- On COMMA reduce production media_expression_list -> AND separated_nonempty_list(AND,media_expression)

State 115:
## Known stack suffix:
## media_expression
## LR(1) items:
separated_nonempty_list(AND,media_expression) -> media_expression . [ SEMICOLON OPEN_CURLY COMMA ]
separated_nonempty_list(AND,media_expression) -> media_expression . AND separated_nonempty_list(AND,media_expression) [ SEMICOLON OPEN_CURLY COMMA ]
## Transitions:
-- On AND shift to state 116
## Reductions:
-- On SEMICOLON reduce production separated_nonempty_list(AND,media_expression) -> media_expression
-- On OPEN_CURLY reduce production separated_nonempty_list(AND,media_expression) -> media_expression
-- On COMMA reduce production separated_nonempty_list(AND,media_expression) -> media_expression

State 116:
## Known stack suffix:
## media_expression AND
## LR(1) items:
separated_nonempty_list(AND,media_expression) -> media_expression AND . separated_nonempty_list(AND,media_expression) [ SEMICOLON OPEN_CURLY COMMA ]
## Transitions:
-- On OPEN_ROUND shift to state 98
-- On separated_nonempty_list(AND,media_expression) shift to state 117
-- On media_expression shift to state 115
## Reductions:

State 117:
## Known stack suffix:
## media_expression AND separated_nonempty_list(AND,media_expression)
## LR(1) items:
separated_nonempty_list(AND,media_expression) -> media_expression AND separated_nonempty_list(AND,media_expression) . [ SEMICOLON OPEN_CURLY COMMA ]
## Transitions:
## Reductions:
-- On SEMICOLON reduce production separated_nonempty_list(AND,media_expression) -> media_expression AND separated_nonempty_list(AND,media_expression)
-- On OPEN_CURLY reduce production separated_nonempty_list(AND,media_expression) -> media_expression AND separated_nonempty_list(AND,media_expression)
-- On COMMA reduce production separated_nonempty_list(AND,media_expression) -> media_expression AND separated_nonempty_list(AND,media_expression)

State 118:
## Known stack suffix:
## media_type option(media_expression_list)
## LR(1) items:
media_query -> media_type option(media_expression_list) . [ SEMICOLON OPEN_CURLY COMMA ]
## Transitions:
## Reductions:
-- On SEMICOLON reduce production media_query -> media_type option(media_expression_list)
-- On OPEN_CURLY reduce production media_query -> media_type option(media_expression_list)
-- On COMMA reduce production media_query -> media_type option(media_expression_list)

State 119:
## Known stack suffix:
## media_expression_list
## LR(1) items:
option(media_expression_list) -> media_expression_list . [ SEMICOLON OPEN_CURLY COMMA ]
## Transitions:
## Reductions:
-- On SEMICOLON reduce production option(media_expression_list) -> media_expression_list
-- On OPEN_CURLY reduce production option(media_expression_list) -> media_expression_list
-- On COMMA reduce production option(media_expression_list) -> media_expression_list

State 120:
## Known stack suffix:
## MEDIA media_query_list
## LR(1) items:
atrule -> MEDIA media_query_list . OPEN_CURLY nonempty_list(rule) CLOSE_CURLY [ VAR SEL_FUNC PERIOD PAGE OPEN_SQUARE MEDIA KEYFRAMES IMPORT IDENT HASH FONTFACE EOF DOUBLE_COLON COLON CHARSET ASTERISK ]
## Transitions:
-- On OPEN_CURLY shift to state 121
## Reductions:

State 121:
## Known stack suffix:
## MEDIA media_query_list OPEN_CURLY
## LR(1) items:
atrule -> MEDIA media_query_list OPEN_CURLY . nonempty_list(rule) CLOSE_CURLY [ VAR SEL_FUNC PERIOD PAGE OPEN_SQUARE MEDIA KEYFRAMES IMPORT IDENT HASH FONTFACE EOF DOUBLE_COLON COLON CHARSET ASTERISK ]
## Transitions:
-- On SEL_FUNC shift to state 58
-- On PERIOD shift to state 59
-- On OPEN_SQUARE shift to state 61
-- On IDENT shift to state 122
-- On HASH shift to state 81
-- On DOUBLE_COLON shift to state 82
-- On COLON shift to state 84
-- On ASTERISK shift to state 123
-- On simple_selector shift to state 124
-- On separated_nonempty_list(COMMA,selector) shift to state 139
-- On selector_list shift to state 140
-- On selector shift to state 142
-- On rule shift to state 145
-- On qualifier shift to state 86
-- On nonempty_list(rule) shift to state 147
-- On nonempty_list(qualifier) shift to state 132
-- On element shift to state 133
## Reductions:

State 122:
## Known stack suffix:
## IDENT
## LR(1) items:
element -> IDENT . [ TILDE SEL_FUNC S PLUS PERIOD OPEN_SQUARE OPEN_CURLY HASH GT DOUBLE_COLON COMMA COLON ]
## Transitions:
## Reductions:
-- On TILDE reduce production element -> IDENT
-- On SEL_FUNC reduce production element -> IDENT
-- On S reduce production element -> IDENT
-- On PLUS reduce production element -> IDENT
-- On PERIOD reduce production element -> IDENT
-- On OPEN_SQUARE reduce production element -> IDENT
-- On OPEN_CURLY reduce production element -> IDENT
-- On HASH reduce production element -> IDENT
-- On GT reduce production element -> IDENT
-- On DOUBLE_COLON reduce production element -> IDENT
-- On COMMA reduce production element -> IDENT
-- On COLON reduce production element -> IDENT

State 123:
## Known stack suffix:
## ASTERISK
## LR(1) items:
element -> ASTERISK . [ TILDE SEL_FUNC S PLUS PERIOD OPEN_SQUARE OPEN_CURLY HASH GT DOUBLE_COLON COMMA COLON ]
## Transitions:
## Reductions:
-- On TILDE reduce production element -> ASTERISK
-- On SEL_FUNC reduce production element -> ASTERISK
-- On S reduce production element -> ASTERISK
-- On PLUS reduce production element -> ASTERISK
-- On PERIOD reduce production element -> ASTERISK
-- On OPEN_SQUARE reduce production element -> ASTERISK
-- On OPEN_CURLY reduce production element -> ASTERISK
-- On HASH reduce production element -> ASTERISK
-- On GT reduce production element -> ASTERISK
-- On DOUBLE_COLON reduce production element -> ASTERISK
-- On COMMA reduce production element -> ASTERISK
-- On COLON reduce production element -> ASTERISK

State 124:
## Known stack suffix:
## simple_selector
## LR(1) items:
selector -> simple_selector . list(combination) [ OPEN_CURLY COMMA ]
## Transitions:
-- On TILDE shift to state 125
-- On S shift to state 126
-- On PLUS shift to state 127
-- On GT shift to state 128
-- On list(combination) shift to state 129
-- On combinator shift to state 130
-- On combination shift to state 137
## Reductions:
-- On OPEN_CURLY reduce production list(combination) ->
-- On COMMA reduce production list(combination) ->

State 125:
## Known stack suffix:
## TILDE
## LR(1) items:
combinator -> TILDE . [ SEL_FUNC PERIOD OPEN_SQUARE IDENT HASH DOUBLE_COLON COLON ASTERISK ]
## Transitions:
## Reductions:
-- On SEL_FUNC reduce production combinator -> TILDE
-- On PERIOD reduce production combinator -> TILDE
-- On OPEN_SQUARE reduce production combinator -> TILDE
-- On IDENT reduce production combinator -> TILDE
-- On HASH reduce production combinator -> TILDE
-- On DOUBLE_COLON reduce production combinator -> TILDE
-- On COLON reduce production combinator -> TILDE
-- On ASTERISK reduce production combinator -> TILDE

State 126:
## Known stack suffix:
## S
## LR(1) items:
combinator -> S . [ SEL_FUNC PERIOD OPEN_SQUARE IDENT HASH DOUBLE_COLON COLON ASTERISK ]
## Transitions:
## Reductions:
-- On SEL_FUNC reduce production combinator -> S
-- On PERIOD reduce production combinator -> S
-- On OPEN_SQUARE reduce production combinator -> S
-- On IDENT reduce production combinator -> S
-- On HASH reduce production combinator -> S
-- On DOUBLE_COLON reduce production combinator -> S
-- On COLON reduce production combinator -> S
-- On ASTERISK reduce production combinator -> S

State 127:
## Known stack suffix:
## PLUS
## LR(1) items:
combinator -> PLUS . [ SEL_FUNC PERIOD OPEN_SQUARE IDENT HASH DOUBLE_COLON COLON ASTERISK ]
## Transitions:
## Reductions:
-- On SEL_FUNC reduce production combinator -> PLUS
-- On PERIOD reduce production combinator -> PLUS
-- On OPEN_SQUARE reduce production combinator -> PLUS
-- On IDENT reduce production combinator -> PLUS
-- On HASH reduce production combinator -> PLUS
-- On DOUBLE_COLON reduce production combinator -> PLUS
-- On COLON reduce production combinator -> PLUS
-- On ASTERISK reduce production combinator -> PLUS

State 128:
## Known stack suffix:
## GT
## LR(1) items:
combinator -> GT . [ SEL_FUNC PERIOD OPEN_SQUARE IDENT HASH DOUBLE_COLON COLON ASTERISK ]
## Transitions:
## Reductions:
-- On SEL_FUNC reduce production combinator -> GT
-- On PERIOD reduce production combinator -> GT
-- On OPEN_SQUARE reduce production combinator -> GT
-- On IDENT reduce production combinator -> GT
-- On HASH reduce production combinator -> GT
-- On DOUBLE_COLON reduce production combinator -> GT
-- On COLON reduce production combinator -> GT
-- On ASTERISK reduce production combinator -> GT

State 129:
## Known stack suffix:
## simple_selector list(combination)
## LR(1) items:
selector -> simple_selector list(combination) . [ OPEN_CURLY COMMA ]
## Transitions:
## Reductions:
-- On OPEN_CURLY reduce production selector -> simple_selector list(combination)
-- On COMMA reduce production selector -> simple_selector list(combination)

State 130:
## Known stack suffix:
## combinator
## LR(1) items:
combination -> combinator . simple_selector [ TILDE S PLUS OPEN_CURLY GT COMMA ]
## Transitions:
-- On SEL_FUNC shift to state 58
-- On PERIOD shift to state 59
-- On OPEN_SQUARE shift to state 61
-- On IDENT shift to state 122
-- On HASH shift to state 81
-- On DOUBLE_COLON shift to state 82
-- On COLON shift to state 84
-- On ASTERISK shift to state 123
-- On simple_selector shift to state 131
-- On qualifier shift to state 86
-- On nonempty_list(qualifier) shift to state 132
-- On element shift to state 133
## Reductions:

State 131:
## Known stack suffix:
## combinator simple_selector
## LR(1) items:
combination -> combinator simple_selector . [ TILDE S PLUS OPEN_CURLY GT COMMA ]
## Transitions:
## Reductions:
-- On TILDE reduce production combination -> combinator simple_selector
-- On S reduce production combination -> combinator simple_selector
-- On PLUS reduce production combination -> combinator simple_selector
-- On OPEN_CURLY reduce production combination -> combinator simple_selector
-- On GT reduce production combination -> combinator simple_selector
-- On COMMA reduce production combination -> combinator simple_selector

State 132:
## Known stack suffix:
## nonempty_list(qualifier)
## LR(1) items:
simple_selector -> nonempty_list(qualifier) . [ TILDE S PLUS OPEN_CURLY GT COMMA ]
## Transitions:
## Reductions:
-- On TILDE reduce production simple_selector -> nonempty_list(qualifier)
-- On S reduce production simple_selector -> nonempty_list(qualifier)
-- On PLUS reduce production simple_selector -> nonempty_list(qualifier)
-- On OPEN_CURLY reduce production simple_selector -> nonempty_list(qualifier)
-- On GT reduce production simple_selector -> nonempty_list(qualifier)
-- On COMMA reduce production simple_selector -> nonempty_list(qualifier)

State 133:
## Known stack suffix:
## element
## LR(1) items:
simple_selector -> element . list(qualifier) [ TILDE S PLUS OPEN_CURLY GT COMMA ]
## Transitions:
-- On SEL_FUNC shift to state 58
-- On PERIOD shift to state 59
-- On OPEN_SQUARE shift to state 61
-- On HASH shift to state 81
-- On DOUBLE_COLON shift to state 82
-- On COLON shift to state 84
-- On qualifier shift to state 134
-- On list(qualifier) shift to state 136
## Reductions:
-- On TILDE reduce production list(qualifier) ->
-- On S reduce production list(qualifier) ->
-- On PLUS reduce production list(qualifier) ->
-- On OPEN_CURLY reduce production list(qualifier) ->
-- On GT reduce production list(qualifier) ->
-- On COMMA reduce production list(qualifier) ->

State 134:
## Known stack suffix:
## qualifier
## LR(1) items:
list(qualifier) -> qualifier . list(qualifier) [ TILDE S PLUS OPEN_CURLY GT COMMA ]
## Transitions:
-- On SEL_FUNC shift to state 58
-- On PERIOD shift to state 59
-- On OPEN_SQUARE shift to state 61
-- On HASH shift to state 81
-- On DOUBLE_COLON shift to state 82
-- On COLON shift to state 84
-- On qualifier shift to state 134
-- On list(qualifier) shift to state 135
## Reductions:
-- On TILDE reduce production list(qualifier) ->
-- On S reduce production list(qualifier) ->
-- On PLUS reduce production list(qualifier) ->
-- On OPEN_CURLY reduce production list(qualifier) ->
-- On GT reduce production list(qualifier) ->
-- On COMMA reduce production list(qualifier) ->

State 135:
## Known stack suffix:
## qualifier list(qualifier)
## LR(1) items:
list(qualifier) -> qualifier list(qualifier) . [ TILDE S PLUS OPEN_CURLY GT COMMA ]
## Transitions:
## Reductions:
-- On TILDE reduce production list(qualifier) -> qualifier list(qualifier)
-- On S reduce production list(qualifier) -> qualifier list(qualifier)
-- On PLUS reduce production list(qualifier) -> qualifier list(qualifier)
-- On OPEN_CURLY reduce production list(qualifier) -> qualifier list(qualifier)
-- On GT reduce production list(qualifier) -> qualifier list(qualifier)
-- On COMMA reduce production list(qualifier) -> qualifier list(qualifier)

State 136:
## Known stack suffix:
## element list(qualifier)
## LR(1) items:
simple_selector -> element list(qualifier) . [ TILDE S PLUS OPEN_CURLY GT COMMA ]
## Transitions:
## Reductions:
-- On TILDE reduce production simple_selector -> element list(qualifier)
-- On S reduce production simple_selector -> element list(qualifier)
-- On PLUS reduce production simple_selector -> element list(qualifier)
-- On OPEN_CURLY reduce production simple_selector -> element list(qualifier)
-- On GT reduce production simple_selector -> element list(qualifier)
-- On COMMA reduce production simple_selector -> element list(qualifier)

State 137:
## Known stack suffix:
## combination
## LR(1) items:
list(combination) -> combination . list(combination) [ OPEN_CURLY COMMA ]
## Transitions:
-- On TILDE shift to state 125
-- On S shift to state 126
-- On PLUS shift to state 127
-- On GT shift to state 128
-- On list(combination) shift to state 138
-- On combinator shift to state 130
-- On combination shift to state 137
## Reductions:
-- On OPEN_CURLY reduce production list(combination) ->
-- On COMMA reduce production list(combination) ->

State 138:
## Known stack suffix:
## combination list(combination)
## LR(1) items:
list(combination) -> combination list(combination) . [ OPEN_CURLY COMMA ]
## Transitions:
## Reductions:
-- On OPEN_CURLY reduce production list(combination) -> combination list(combination)
-- On COMMA reduce production list(combination) -> combination list(combination)

State 139:
## Known stack suffix:
## separated_nonempty_list(COMMA,selector)
## LR(1) items:
selector_list -> separated_nonempty_list(COMMA,selector) . [ OPEN_CURLY ]
## Transitions:
## Reductions:
-- On OPEN_CURLY reduce production selector_list -> separated_nonempty_list(COMMA,selector)

State 140:
## Known stack suffix:
## selector_list
## LR(1) items:
rule -> selector_list . declaration_block [ VAR SEL_FUNC PERIOD PAGE OPEN_SQUARE MEDIA KEYFRAMES IMPORT IDENT HASH FONTFACE EOF DOUBLE_COLON COLON CLOSE_CURLY CHARSET ASTERISK ]
## Transitions:
-- On OPEN_CURLY shift to state 41
-- On declaration_block shift to state 141
## Reductions:

State 141:
## Known stack suffix:
## selector_list declaration_block
## LR(1) items:
rule -> selector_list declaration_block . [ VAR SEL_FUNC PERIOD PAGE OPEN_SQUARE MEDIA KEYFRAMES IMPORT IDENT HASH FONTFACE EOF DOUBLE_COLON COLON CLOSE_CURLY CHARSET ASTERISK ]
## Transitions:
## Reductions:
-- On VAR reduce production rule -> selector_list declaration_block
-- On SEL_FUNC reduce production rule -> selector_list declaration_block
-- On PERIOD reduce production rule -> selector_list declaration_block
-- On PAGE reduce production rule -> selector_list declaration_block
-- On OPEN_SQUARE reduce production rule -> selector_list declaration_block
-- On MEDIA reduce production rule -> selector_list declaration_block
-- On KEYFRAMES reduce production rule -> selector_list declaration_block
-- On IMPORT reduce production rule -> selector_list declaration_block
-- On IDENT reduce production rule -> selector_list declaration_block
-- On HASH reduce production rule -> selector_list declaration_block
-- On FONTFACE reduce production rule -> selector_list declaration_block
-- On EOF reduce production rule -> selector_list declaration_block
-- On DOUBLE_COLON reduce production rule -> selector_list declaration_block
-- On COLON reduce production rule -> selector_list declaration_block
-- On CLOSE_CURLY reduce production rule -> selector_list declaration_block
-- On CHARSET reduce production rule -> selector_list declaration_block
-- On ASTERISK reduce production rule -> selector_list declaration_block

State 142:
## Known stack suffix:
## selector
## LR(1) items:
separated_nonempty_list(COMMA,selector) -> selector . [ OPEN_CURLY ]
separated_nonempty_list(COMMA,selector) -> selector . COMMA separated_nonempty_list(COMMA,selector) [ OPEN_CURLY ]
## Transitions:
-- On COMMA shift to state 143
## Reductions:
-- On OPEN_CURLY reduce production separated_nonempty_list(COMMA,selector) -> selector

State 143:
## Known stack suffix:
## selector COMMA
## LR(1) items:
separated_nonempty_list(COMMA,selector) -> selector COMMA . separated_nonempty_list(COMMA,selector) [ OPEN_CURLY ]
## Transitions:
-- On SEL_FUNC shift to state 58
-- On PERIOD shift to state 59
-- On OPEN_SQUARE shift to state 61
-- On IDENT shift to state 122
-- On HASH shift to state 81
-- On DOUBLE_COLON shift to state 82
-- On COLON shift to state 84
-- On ASTERISK shift to state 123
-- On simple_selector shift to state 124
-- On separated_nonempty_list(COMMA,selector) shift to state 144
-- On selector shift to state 142
-- On qualifier shift to state 86
-- On nonempty_list(qualifier) shift to state 132
-- On element shift to state 133
## Reductions:

State 144:
## Known stack suffix:
## selector COMMA separated_nonempty_list(COMMA,selector)
## LR(1) items:
separated_nonempty_list(COMMA,selector) -> selector COMMA separated_nonempty_list(COMMA,selector) . [ OPEN_CURLY ]
## Transitions:
## Reductions:
-- On OPEN_CURLY reduce production separated_nonempty_list(COMMA,selector) -> selector COMMA separated_nonempty_list(COMMA,selector)

State 145:
## Known stack suffix:
## rule
## LR(1) items:
nonempty_list(rule) -> rule . [ CLOSE_CURLY ]
nonempty_list(rule) -> rule . nonempty_list(rule) [ CLOSE_CURLY ]
## Transitions:
-- On SEL_FUNC shift to state 58
-- On PERIOD shift to state 59
-- On OPEN_SQUARE shift to state 61
-- On IDENT shift to state 122
-- On HASH shift to state 81
-- On DOUBLE_COLON shift to state 82
-- On COLON shift to state 84
-- On ASTERISK shift to state 123
-- On simple_selector shift to state 124
-- On separated_nonempty_list(COMMA,selector) shift to state 139
-- On selector_list shift to state 140
-- On selector shift to state 142
-- On rule shift to state 145
-- On qualifier shift to state 86
-- On nonempty_list(rule) shift to state 146
-- On nonempty_list(qualifier) shift to state 132
-- On element shift to state 133
## Reductions:
-- On CLOSE_CURLY reduce production nonempty_list(rule) -> rule

State 146:
## Known stack suffix:
## rule nonempty_list(rule)
## LR(1) items:
nonempty_list(rule) -> rule nonempty_list(rule) . [ CLOSE_CURLY ]
## Transitions:
## Reductions:
-- On CLOSE_CURLY reduce production nonempty_list(rule) -> rule nonempty_list(rule)

State 147:
## Known stack suffix:
## MEDIA media_query_list OPEN_CURLY nonempty_list(rule)
## LR(1) items:
atrule -> MEDIA media_query_list OPEN_CURLY nonempty_list(rule) . CLOSE_CURLY [ VAR SEL_FUNC PERIOD PAGE OPEN_SQUARE MEDIA KEYFRAMES IMPORT IDENT HASH FONTFACE EOF DOUBLE_COLON COLON CHARSET ASTERISK ]
## Transitions:
-- On CLOSE_CURLY shift to state 148
## Reductions:

State 148:
## Known stack suffix:
## MEDIA media_query_list OPEN_CURLY nonempty_list(rule) CLOSE_CURLY
## LR(1) items:
atrule -> MEDIA media_query_list OPEN_CURLY nonempty_list(rule) CLOSE_CURLY . [ VAR SEL_FUNC PERIOD PAGE OPEN_SQUARE MEDIA KEYFRAMES IMPORT IDENT HASH FONTFACE EOF DOUBLE_COLON COLON CHARSET ASTERISK ]
## Transitions:
## Reductions:
-- On VAR reduce production atrule -> MEDIA media_query_list OPEN_CURLY nonempty_list(rule) CLOSE_CURLY
-- On SEL_FUNC reduce production atrule -> MEDIA media_query_list OPEN_CURLY nonempty_list(rule) CLOSE_CURLY
-- On PERIOD reduce production atrule -> MEDIA media_query_list OPEN_CURLY nonempty_list(rule) CLOSE_CURLY
-- On PAGE reduce production atrule -> MEDIA media_query_list OPEN_CURLY nonempty_list(rule) CLOSE_CURLY
-- On OPEN_SQUARE reduce production atrule -> MEDIA media_query_list OPEN_CURLY nonempty_list(rule) CLOSE_CURLY
-- On MEDIA reduce production atrule -> MEDIA media_query_list OPEN_CURLY nonempty_list(rule) CLOSE_CURLY
-- On KEYFRAMES reduce production atrule -> MEDIA media_query_list OPEN_CURLY nonempty_list(rule) CLOSE_CURLY
-- On IMPORT reduce production atrule -> MEDIA media_query_list OPEN_CURLY nonempty_list(rule) CLOSE_CURLY
-- On IDENT reduce production atrule -> MEDIA media_query_list OPEN_CURLY nonempty_list(rule) CLOSE_CURLY
-- On HASH reduce production atrule -> MEDIA media_query_list OPEN_CURLY nonempty_list(rule) CLOSE_CURLY
-- On FONTFACE reduce production atrule -> MEDIA media_query_list OPEN_CURLY nonempty_list(rule) CLOSE_CURLY
-- On EOF reduce production atrule -> MEDIA media_query_list OPEN_CURLY nonempty_list(rule) CLOSE_CURLY
-- On DOUBLE_COLON reduce production atrule -> MEDIA media_query_list OPEN_CURLY nonempty_list(rule) CLOSE_CURLY
-- On COLON reduce production atrule -> MEDIA media_query_list OPEN_CURLY nonempty_list(rule) CLOSE_CURLY
-- On CHARSET reduce production atrule -> MEDIA media_query_list OPEN_CURLY nonempty_list(rule) CLOSE_CURLY
-- On ASTERISK reduce production atrule -> MEDIA media_query_list OPEN_CURLY nonempty_list(rule) CLOSE_CURLY

State 149:
## Known stack suffix:
## media_query
## LR(1) items:
separated_nonempty_list(COMMA,media_query) -> media_query . [ SEMICOLON OPEN_CURLY ]
separated_nonempty_list(COMMA,media_query) -> media_query . COMMA separated_nonempty_list(COMMA,media_query) [ SEMICOLON OPEN_CURLY ]
## Transitions:
-- On COMMA shift to state 150
## Reductions:
-- On SEMICOLON reduce production separated_nonempty_list(COMMA,media_query) -> media_query
-- On OPEN_CURLY reduce production separated_nonempty_list(COMMA,media_query) -> media_query

State 150:
## Known stack suffix:
## media_query COMMA
## LR(1) items:
separated_nonempty_list(COMMA,media_query) -> media_query COMMA . separated_nonempty_list(COMMA,media_query) [ SEMICOLON OPEN_CURLY ]
## Transitions:
-- On OPEN_ROUND shift to state 98
-- On ONLY shift to state 106
-- On NOT shift to state 107
-- On separated_nonempty_list(COMMA,media_query) shift to state 151
-- On separated_nonempty_list(AND,media_expression) shift to state 109
-- On option(media_prefix) shift to state 110
-- On media_type shift to state 112
-- On media_query shift to state 149
-- On media_prefix shift to state 152
-- On media_expression_nelist shift to state 153
-- On media_expression shift to state 115
## Reductions:
-- On IDENT reduce production option(media_prefix) ->

State 151:
## Known stack suffix:
## media_query COMMA separated_nonempty_list(COMMA,media_query)
## LR(1) items:
separated_nonempty_list(COMMA,media_query) -> media_query COMMA separated_nonempty_list(COMMA,media_query) . [ SEMICOLON OPEN_CURLY ]
## Transitions:
## Reductions:
-- On SEMICOLON reduce production separated_nonempty_list(COMMA,media_query) -> media_query COMMA separated_nonempty_list(COMMA,media_query)
-- On OPEN_CURLY reduce production separated_nonempty_list(COMMA,media_query) -> media_query COMMA separated_nonempty_list(COMMA,media_query)

State 152:
## Known stack suffix:
## media_prefix
## LR(1) items:
option(media_prefix) -> media_prefix . [ IDENT ]
## Transitions:
## Reductions:
-- On IDENT reduce production option(media_prefix) -> media_prefix

State 153:
## Known stack suffix:
## media_expression_nelist
## LR(1) items:
media_query -> media_expression_nelist . [ SEMICOLON OPEN_CURLY COMMA ]
## Transitions:
## Reductions:
-- On SEMICOLON reduce production media_query -> media_expression_nelist
-- On OPEN_CURLY reduce production media_query -> media_expression_nelist
-- On COMMA reduce production media_query -> media_expression_nelist

State 154:
## Known stack suffix:
## KEYFRAMES
## LR(1) items:
atrule -> KEYFRAMES . IDENT OPEN_CURLY nonempty_list(keyframe_block) CLOSE_CURLY [ VAR SEL_FUNC PERIOD PAGE OPEN_SQUARE MEDIA KEYFRAMES IMPORT IDENT HASH FONTFACE EOF DOUBLE_COLON COLON CHARSET ASTERISK ]
## Transitions:
-- On IDENT shift to state 155
## Reductions:

State 155:
## Known stack suffix:
## KEYFRAMES IDENT
## LR(1) items:
atrule -> KEYFRAMES IDENT . OPEN_CURLY nonempty_list(keyframe_block) CLOSE_CURLY [ VAR SEL_FUNC PERIOD PAGE OPEN_SQUARE MEDIA KEYFRAMES IMPORT IDENT HASH FONTFACE EOF DOUBLE_COLON COLON CHARSET ASTERISK ]
## Transitions:
-- On OPEN_CURLY shift to state 156
## Reductions:

State 156:
## Known stack suffix:
## KEYFRAMES IDENT OPEN_CURLY
## LR(1) items:
atrule -> KEYFRAMES IDENT OPEN_CURLY . nonempty_list(keyframe_block) CLOSE_CURLY [ VAR SEL_FUNC PERIOD PAGE OPEN_SQUARE MEDIA KEYFRAMES IMPORT IDENT HASH FONTFACE EOF DOUBLE_COLON COLON CHARSET ASTERISK ]
## Transitions:
-- On VAR shift to state 7
-- On QUANTITY shift to state 15
-- On OPEN_ROUND shift to state 16
-- On IDENT shift to state 157
-- On nonempty_list(keyframe_block) shift to state 158
-- On keyframe_sel shift to state 160
-- On keyframe_block shift to state 162
-- On calc shift to state 164
## Reductions:

State 157:
## Known stack suffix:
## IDENT
## LR(1) items:
keyframe_sel -> IDENT . [ OPEN_CURLY ]
## Transitions:
## Reductions:
-- On OPEN_CURLY reduce production keyframe_sel -> IDENT

State 158:
## Known stack suffix:
## KEYFRAMES IDENT OPEN_CURLY nonempty_list(keyframe_block)
## LR(1) items:
atrule -> KEYFRAMES IDENT OPEN_CURLY nonempty_list(keyframe_block) . CLOSE_CURLY [ VAR SEL_FUNC PERIOD PAGE OPEN_SQUARE MEDIA KEYFRAMES IMPORT IDENT HASH FONTFACE EOF DOUBLE_COLON COLON CHARSET ASTERISK ]
## Transitions:
-- On CLOSE_CURLY shift to state 159
## Reductions:

State 159:
## Known stack suffix:
## KEYFRAMES IDENT OPEN_CURLY nonempty_list(keyframe_block) CLOSE_CURLY
## LR(1) items:
atrule -> KEYFRAMES IDENT OPEN_CURLY nonempty_list(keyframe_block) CLOSE_CURLY . [ VAR SEL_FUNC PERIOD PAGE OPEN_SQUARE MEDIA KEYFRAMES IMPORT IDENT HASH FONTFACE EOF DOUBLE_COLON COLON CHARSET ASTERISK ]
## Transitions:
## Reductions:
-- On VAR reduce production atrule -> KEYFRAMES IDENT OPEN_CURLY nonempty_list(keyframe_block) CLOSE_CURLY
-- On SEL_FUNC reduce production atrule -> KEYFRAMES IDENT OPEN_CURLY nonempty_list(keyframe_block) CLOSE_CURLY
-- On PERIOD reduce production atrule -> KEYFRAMES IDENT OPEN_CURLY nonempty_list(keyframe_block) CLOSE_CURLY
-- On PAGE reduce production atrule -> KEYFRAMES IDENT OPEN_CURLY nonempty_list(keyframe_block) CLOSE_CURLY
-- On OPEN_SQUARE reduce production atrule -> KEYFRAMES IDENT OPEN_CURLY nonempty_list(keyframe_block) CLOSE_CURLY
-- On MEDIA reduce production atrule -> KEYFRAMES IDENT OPEN_CURLY nonempty_list(keyframe_block) CLOSE_CURLY
-- On KEYFRAMES reduce production atrule -> KEYFRAMES IDENT OPEN_CURLY nonempty_list(keyframe_block) CLOSE_CURLY
-- On IMPORT reduce production atrule -> KEYFRAMES IDENT OPEN_CURLY nonempty_list(keyframe_block) CLOSE_CURLY
-- On IDENT reduce production atrule -> KEYFRAMES IDENT OPEN_CURLY nonempty_list(keyframe_block) CLOSE_CURLY
-- On HASH reduce production atrule -> KEYFRAMES IDENT OPEN_CURLY nonempty_list(keyframe_block) CLOSE_CURLY
-- On FONTFACE reduce production atrule -> KEYFRAMES IDENT OPEN_CURLY nonempty_list(keyframe_block) CLOSE_CURLY
-- On EOF reduce production atrule -> KEYFRAMES IDENT OPEN_CURLY nonempty_list(keyframe_block) CLOSE_CURLY
-- On DOUBLE_COLON reduce production atrule -> KEYFRAMES IDENT OPEN_CURLY nonempty_list(keyframe_block) CLOSE_CURLY
-- On COLON reduce production atrule -> KEYFRAMES IDENT OPEN_CURLY nonempty_list(keyframe_block) CLOSE_CURLY
-- On CHARSET reduce production atrule -> KEYFRAMES IDENT OPEN_CURLY nonempty_list(keyframe_block) CLOSE_CURLY
-- On ASTERISK reduce production atrule -> KEYFRAMES IDENT OPEN_CURLY nonempty_list(keyframe_block) CLOSE_CURLY

State 160:
## Known stack suffix:
## keyframe_sel
## LR(1) items:
keyframe_block -> keyframe_sel . declaration_block [ VAR QUANTITY OPEN_ROUND IDENT CLOSE_CURLY ]
## Transitions:
-- On OPEN_CURLY shift to state 41
-- On declaration_block shift to state 161
## Reductions:

State 161:
## Known stack suffix:
## keyframe_sel declaration_block
## LR(1) items:
keyframe_block -> keyframe_sel declaration_block . [ VAR QUANTITY OPEN_ROUND IDENT CLOSE_CURLY ]
## Transitions:
## Reductions:
-- On VAR reduce production keyframe_block -> keyframe_sel declaration_block
-- On QUANTITY reduce production keyframe_block -> keyframe_sel declaration_block
-- On OPEN_ROUND reduce production keyframe_block -> keyframe_sel declaration_block
-- On IDENT reduce production keyframe_block -> keyframe_sel declaration_block
-- On CLOSE_CURLY reduce production keyframe_block -> keyframe_sel declaration_block

State 162:
## Known stack suffix:
## keyframe_block
## LR(1) items:
nonempty_list(keyframe_block) -> keyframe_block . [ CLOSE_CURLY ]
nonempty_list(keyframe_block) -> keyframe_block . nonempty_list(keyframe_block) [ CLOSE_CURLY ]
## Transitions:
-- On VAR shift to state 7
-- On QUANTITY shift to state 15
-- On OPEN_ROUND shift to state 16
-- On IDENT shift to state 157
-- On nonempty_list(keyframe_block) shift to state 163
-- On keyframe_sel shift to state 160
-- On keyframe_block shift to state 162
-- On calc shift to state 164
## Reductions:
-- On CLOSE_CURLY reduce production nonempty_list(keyframe_block) -> keyframe_block

State 163:
## Known stack suffix:
## keyframe_block nonempty_list(keyframe_block)
## LR(1) items:
nonempty_list(keyframe_block) -> keyframe_block nonempty_list(keyframe_block) . [ CLOSE_CURLY ]
## Transitions:
## Reductions:
-- On CLOSE_CURLY reduce production nonempty_list(keyframe_block) -> keyframe_block nonempty_list(keyframe_block)

State 164:
## Known stack suffix:
## calc
## LR(1) items:
calc -> calc . ASTERISK calc [ QUOTIENT PLUS OPEN_CURLY MINUS ASTERISK ]
calc -> calc . QUOTIENT calc [ QUOTIENT PLUS OPEN_CURLY MINUS ASTERISK ]
calc -> calc . PLUS calc [ QUOTIENT PLUS OPEN_CURLY MINUS ASTERISK ]
calc -> calc . MINUS calc [ QUOTIENT PLUS OPEN_CURLY MINUS ASTERISK ]
keyframe_sel -> calc . [ OPEN_CURLY ]
## Transitions:
-- On QUOTIENT shift to state 18
-- On PLUS shift to state 20
-- On MINUS shift to state 24
-- On ASTERISK shift to state 22
## Reductions:
-- On OPEN_CURLY reduce production keyframe_sel -> calc

State 165:
## Known stack suffix:
## IMPORT
## LR(1) items:
atrule -> IMPORT . source option(S) option(media_query_list) SEMICOLON [ VAR SEL_FUNC PERIOD PAGE OPEN_SQUARE MEDIA KEYFRAMES IMPORT IDENT HASH FONTFACE EOF DOUBLE_COLON COLON CHARSET ASTERISK ]
## Transitions:
-- On URI shift to state 166
-- On STRING shift to state 169
-- On source shift to state 170
## Reductions:

State 166:
## Known stack suffix:
## URI
## LR(1) items:
source -> URI . STRING CLOSE_ROUND [ SEMICOLON S OPEN_ROUND ONLY NOT IDENT ]
## Transitions:
-- On STRING shift to state 167
## Reductions:

State 167:
## Known stack suffix:
## URI STRING
## LR(1) items:
source -> URI STRING . CLOSE_ROUND [ SEMICOLON S OPEN_ROUND ONLY NOT IDENT ]
## Transitions:
-- On CLOSE_ROUND shift to state 168
## Reductions:

State 168:
## Known stack suffix:
## URI STRING CLOSE_ROUND
## LR(1) items:
source -> URI STRING CLOSE_ROUND . [ SEMICOLON S OPEN_ROUND ONLY NOT IDENT ]
## Transitions:
## Reductions:
-- On SEMICOLON reduce production source -> URI STRING CLOSE_ROUND
-- On S reduce production source -> URI STRING CLOSE_ROUND
-- On OPEN_ROUND reduce production source -> URI STRING CLOSE_ROUND
-- On ONLY reduce production source -> URI STRING CLOSE_ROUND
-- On NOT reduce production source -> URI STRING CLOSE_ROUND
-- On IDENT reduce production source -> URI STRING CLOSE_ROUND

State 169:
## Known stack suffix:
## STRING
## LR(1) items:
source -> STRING . [ SEMICOLON S OPEN_ROUND ONLY NOT IDENT ]
## Transitions:
## Reductions:
-- On SEMICOLON reduce production source -> STRING
-- On S reduce production source -> STRING
-- On OPEN_ROUND reduce production source -> STRING
-- On ONLY reduce production source -> STRING
-- On NOT reduce production source -> STRING
-- On IDENT reduce production source -> STRING

State 170:
## Known stack suffix:
## IMPORT source
## LR(1) items:
atrule -> IMPORT source . option(S) option(media_query_list) SEMICOLON [ VAR SEL_FUNC PERIOD PAGE OPEN_SQUARE MEDIA KEYFRAMES IMPORT IDENT HASH FONTFACE EOF DOUBLE_COLON COLON CHARSET ASTERISK ]
## Transitions:
-- On S shift to state 30
-- On option(S) shift to state 171
## Reductions:
-- On SEMICOLON reduce production option(S) ->
-- On OPEN_ROUND reduce production option(S) ->
-- On ONLY reduce production option(S) ->
-- On NOT reduce production option(S) ->
-- On IDENT reduce production option(S) ->

State 171:
## Known stack suffix:
## IMPORT source option(S)
## LR(1) items:
atrule -> IMPORT source option(S) . option(media_query_list) SEMICOLON [ VAR SEL_FUNC PERIOD PAGE OPEN_SQUARE MEDIA KEYFRAMES IMPORT IDENT HASH FONTFACE EOF DOUBLE_COLON COLON CHARSET ASTERISK ]
## Transitions:
-- On OPEN_ROUND shift to state 98
-- On ONLY shift to state 106
-- On NOT shift to state 107
-- On separated_nonempty_list(COMMA,media_query) shift to state 108
-- On separated_nonempty_list(AND,media_expression) shift to state 109
-- On option(media_query_list) shift to state 172
-- On option(media_prefix) shift to state 110
-- On media_type shift to state 112
-- On media_query_list shift to state 174
-- On media_query shift to state 149
-- On media_prefix shift to state 152
-- On media_expression_nelist shift to state 153
-- On media_expression shift to state 115
## Reductions:
-- On SEMICOLON reduce production option(media_query_list) ->
-- On IDENT reduce production option(media_prefix) ->

State 172:
## Known stack suffix:
## IMPORT source option(S) option(media_query_list)
## LR(1) items:
atrule -> IMPORT source option(S) option(media_query_list) . SEMICOLON [ VAR SEL_FUNC PERIOD PAGE OPEN_SQUARE MEDIA KEYFRAMES IMPORT IDENT HASH FONTFACE EOF DOUBLE_COLON COLON CHARSET ASTERISK ]
## Transitions:
-- On SEMICOLON shift to state 173
## Reductions:

State 173:
## Known stack suffix:
## IMPORT source option(S) option(media_query_list) SEMICOLON
## LR(1) items:
atrule -> IMPORT source option(S) option(media_query_list) SEMICOLON . [ VAR SEL_FUNC PERIOD PAGE OPEN_SQUARE MEDIA KEYFRAMES IMPORT IDENT HASH FONTFACE EOF DOUBLE_COLON COLON CHARSET ASTERISK ]
## Transitions:
## Reductions:
-- On VAR reduce production atrule -> IMPORT source option(S) option(media_query_list) SEMICOLON
-- On SEL_FUNC reduce production atrule -> IMPORT source option(S) option(media_query_list) SEMICOLON
-- On PERIOD reduce production atrule -> IMPORT source option(S) option(media_query_list) SEMICOLON
-- On PAGE reduce production atrule -> IMPORT source option(S) option(media_query_list) SEMICOLON
-- On OPEN_SQUARE reduce production atrule -> IMPORT source option(S) option(media_query_list) SEMICOLON
-- On MEDIA reduce production atrule -> IMPORT source option(S) option(media_query_list) SEMICOLON
-- On KEYFRAMES reduce production atrule -> IMPORT source option(S) option(media_query_list) SEMICOLON
-- On IMPORT reduce production atrule -> IMPORT source option(S) option(media_query_list) SEMICOLON
-- On IDENT reduce production atrule -> IMPORT source option(S) option(media_query_list) SEMICOLON
-- On HASH reduce production atrule -> IMPORT source option(S) option(media_query_list) SEMICOLON
-- On FONTFACE reduce production atrule -> IMPORT source option(S) option(media_query_list) SEMICOLON
-- On EOF reduce production atrule -> IMPORT source option(S) option(media_query_list) SEMICOLON
-- On DOUBLE_COLON reduce production atrule -> IMPORT source option(S) option(media_query_list) SEMICOLON
-- On COLON reduce production atrule -> IMPORT source option(S) option(media_query_list) SEMICOLON
-- On CHARSET reduce production atrule -> IMPORT source option(S) option(media_query_list) SEMICOLON
-- On ASTERISK reduce production atrule -> IMPORT source option(S) option(media_query_list) SEMICOLON

State 174:
## Known stack suffix:
## media_query_list
## LR(1) items:
option(media_query_list) -> media_query_list . [ SEMICOLON ]
## Transitions:
## Reductions:
-- On SEMICOLON reduce production option(media_query_list) -> media_query_list

State 175:
## Known stack suffix:
## FONTFACE
## LR(1) items:
atrule -> FONTFACE . declaration_block [ VAR SEL_FUNC PERIOD PAGE OPEN_SQUARE MEDIA KEYFRAMES IMPORT IDENT HASH FONTFACE EOF DOUBLE_COLON COLON CHARSET ASTERISK ]
## Transitions:
-- On OPEN_CURLY shift to state 41
-- On declaration_block shift to state 176
## Reductions:

State 176:
## Known stack suffix:
## FONTFACE declaration_block
## LR(1) items:
atrule -> FONTFACE declaration_block . [ VAR SEL_FUNC PERIOD PAGE OPEN_SQUARE MEDIA KEYFRAMES IMPORT IDENT HASH FONTFACE EOF DOUBLE_COLON COLON CHARSET ASTERISK ]
## Transitions:
## Reductions:
-- On VAR reduce production atrule -> FONTFACE declaration_block
-- On SEL_FUNC reduce production atrule -> FONTFACE declaration_block
-- On PERIOD reduce production atrule -> FONTFACE declaration_block
-- On PAGE reduce production atrule -> FONTFACE declaration_block
-- On OPEN_SQUARE reduce production atrule -> FONTFACE declaration_block
-- On MEDIA reduce production atrule -> FONTFACE declaration_block
-- On KEYFRAMES reduce production atrule -> FONTFACE declaration_block
-- On IMPORT reduce production atrule -> FONTFACE declaration_block
-- On IDENT reduce production atrule -> FONTFACE declaration_block
-- On HASH reduce production atrule -> FONTFACE declaration_block
-- On FONTFACE reduce production atrule -> FONTFACE declaration_block
-- On EOF reduce production atrule -> FONTFACE declaration_block
-- On DOUBLE_COLON reduce production atrule -> FONTFACE declaration_block
-- On COLON reduce production atrule -> FONTFACE declaration_block
-- On CHARSET reduce production atrule -> FONTFACE declaration_block
-- On ASTERISK reduce production atrule -> FONTFACE declaration_block

State 177:
## Known stack suffix:
## CHARSET
## LR(1) items:
atrule -> CHARSET . STRING SEMICOLON [ VAR SEL_FUNC PERIOD PAGE OPEN_SQUARE MEDIA KEYFRAMES IMPORT IDENT HASH FONTFACE EOF DOUBLE_COLON COLON CHARSET ASTERISK ]
## Transitions:
-- On STRING shift to state 178
## Reductions:

State 178:
## Known stack suffix:
## CHARSET STRING
## LR(1) items:
atrule -> CHARSET STRING . SEMICOLON [ VAR SEL_FUNC PERIOD PAGE OPEN_SQUARE MEDIA KEYFRAMES IMPORT IDENT HASH FONTFACE EOF DOUBLE_COLON COLON CHARSET ASTERISK ]
## Transitions:
-- On SEMICOLON shift to state 179
## Reductions:

State 179:
## Known stack suffix:
## CHARSET STRING SEMICOLON
## LR(1) items:
atrule -> CHARSET STRING SEMICOLON . [ VAR SEL_FUNC PERIOD PAGE OPEN_SQUARE MEDIA KEYFRAMES IMPORT IDENT HASH FONTFACE EOF DOUBLE_COLON COLON CHARSET ASTERISK ]
## Transitions:
## Reductions:
-- On VAR reduce production atrule -> CHARSET STRING SEMICOLON
-- On SEL_FUNC reduce production atrule -> CHARSET STRING SEMICOLON
-- On PERIOD reduce production atrule -> CHARSET STRING SEMICOLON
-- On PAGE reduce production atrule -> CHARSET STRING SEMICOLON
-- On OPEN_SQUARE reduce production atrule -> CHARSET STRING SEMICOLON
-- On MEDIA reduce production atrule -> CHARSET STRING SEMICOLON
-- On KEYFRAMES reduce production atrule -> CHARSET STRING SEMICOLON
-- On IMPORT reduce production atrule -> CHARSET STRING SEMICOLON
-- On IDENT reduce production atrule -> CHARSET STRING SEMICOLON
-- On HASH reduce production atrule -> CHARSET STRING SEMICOLON
-- On FONTFACE reduce production atrule -> CHARSET STRING SEMICOLON
-- On EOF reduce production atrule -> CHARSET STRING SEMICOLON
-- On DOUBLE_COLON reduce production atrule -> CHARSET STRING SEMICOLON
-- On COLON reduce production atrule -> CHARSET STRING SEMICOLON
-- On CHARSET reduce production atrule -> CHARSET STRING SEMICOLON
-- On ASTERISK reduce production atrule -> CHARSET STRING SEMICOLON

State 180:
## Known stack suffix:
## statement
## LR(1) items:
list(statement) -> statement . list(statement) [ EOF ]
## Transitions:
-- On VAR shift to state 5
-- On SEL_FUNC shift to state 58
-- On PERIOD shift to state 59
-- On PAGE shift to state 91
-- On OPEN_SQUARE shift to state 61
-- On MEDIA shift to state 97
-- On KEYFRAMES shift to state 154
-- On IMPORT shift to state 165
-- On IDENT shift to state 122
-- On HASH shift to state 81
-- On FONTFACE shift to state 175
-- On DOUBLE_COLON shift to state 82
-- On COLON shift to state 84
-- On CHARSET shift to state 177
-- On ASTERISK shift to state 123
-- On statement shift to state 180
-- On simple_selector shift to state 124
-- On separated_nonempty_list(COMMA,selector) shift to state 139
-- On selector_list shift to state 140
-- On selector shift to state 142
-- On rule shift to state 181
-- On qualifier shift to state 86
-- On nonempty_list(qualifier) shift to state 132
-- On list(statement) shift to state 182
-- On element shift to state 133
-- On atrule shift to state 183
## Reductions:
-- On EOF reduce production list(statement) ->

State 181:
## Known stack suffix:
## rule
## LR(1) items:
statement -> rule . [ VAR SEL_FUNC PERIOD PAGE OPEN_SQUARE MEDIA KEYFRAMES IMPORT IDENT HASH FONTFACE EOF DOUBLE_COLON COLON CHARSET ASTERISK ]
## Transitions:
## Reductions:
-- On VAR reduce production statement -> rule
-- On SEL_FUNC reduce production statement -> rule
-- On PERIOD reduce production statement -> rule
-- On PAGE reduce production statement -> rule
-- On OPEN_SQUARE reduce production statement -> rule
-- On MEDIA reduce production statement -> rule
-- On KEYFRAMES reduce production statement -> rule
-- On IMPORT reduce production statement -> rule
-- On IDENT reduce production statement -> rule
-- On HASH reduce production statement -> rule
-- On FONTFACE reduce production statement -> rule
-- On EOF reduce production statement -> rule
-- On DOUBLE_COLON reduce production statement -> rule
-- On COLON reduce production statement -> rule
-- On CHARSET reduce production statement -> rule
-- On ASTERISK reduce production statement -> rule

State 182:
## Known stack suffix:
## statement list(statement)
## LR(1) items:
list(statement) -> statement list(statement) . [ EOF ]
## Transitions:
## Reductions:
-- On EOF reduce production list(statement) -> statement list(statement)

State 183:
## Known stack suffix:
## atrule
## LR(1) items:
statement -> atrule . [ VAR SEL_FUNC PERIOD PAGE OPEN_SQUARE MEDIA KEYFRAMES IMPORT IDENT HASH FONTFACE EOF DOUBLE_COLON COLON CHARSET ASTERISK ]
## Transitions:
## Reductions:
-- On VAR reduce production statement -> atrule
-- On SEL_FUNC reduce production statement -> atrule
-- On PERIOD reduce production statement -> atrule
-- On PAGE reduce production statement -> atrule
-- On OPEN_SQUARE reduce production statement -> atrule
-- On MEDIA reduce production statement -> atrule
-- On KEYFRAMES reduce production statement -> atrule
-- On IMPORT reduce production statement -> atrule
-- On IDENT reduce production statement -> atrule
-- On HASH reduce production statement -> atrule
-- On FONTFACE reduce production statement -> atrule
-- On EOF reduce production statement -> atrule
-- On DOUBLE_COLON reduce production statement -> atrule
-- On COLON reduce production statement -> atrule
-- On CHARSET reduce production statement -> atrule
-- On ASTERISK reduce production statement -> atrule

State 184:
## Known stack suffix:
## list(S) list(statement)
## LR(1) items:
stylesheet -> list(S) list(statement) . EOF [ # ]
## Transitions:
-- On EOF shift to state 185
## Reductions:

State 185:
## Known stack suffix:
## list(S) list(statement) EOF
## LR(1) items:
stylesheet -> list(S) list(statement) EOF . [ # ]
## Transitions:
## Reductions:
-- On # reduce production stylesheet -> list(S) list(statement) EOF

