Grammar has 54 nonterminal symbols, among which 1 start symbols.
Grammar has 46 terminal symbols.
Grammar has 119 productions.
nullable(var_decl) = false
nullable(term) = false
nullable(stylesheet) = false
nullable(statement) = false
nullable(source) = false
nullable(simple_selector) = false
nullable(separated_nonempty_list(option(S),term)) = false
nullable(separated_nonempty_list(COMMA,sentence)) = false
nullable(separated_nonempty_list(COMMA,selector)) = false
nullable(separated_nonempty_list(COMMA,media_query)) = false
nullable(separated_nonempty_list(AND,media_expression)) = false
nullable(sentence) = false
nullable(selector_list) = false
nullable(selector) = false
nullable(rule) = false
nullable(qualifier) = false
nullable(pseudo_page) = false
nullable(option(pseudo_page)) = true
nullable(option(media_sentence)) = true
nullable(option(media_query_list)) = true
nullable(option(media_prefix)) = true
nullable(option(media_expression_list)) = true
nullable(option(S)) = true
nullable(nonempty_list(rule)) = false
nullable(nonempty_list(qualifier)) = false
nullable(nonempty_list(keyframe_block)) = false
nullable(nonempty_list(declaration)) = false
nullable(media_type) = false
nullable(media_sentence) = false
nullable(media_query_list) = false
nullable(media_query) = false
nullable(media_prefix) = false
nullable(media_feature) = false
nullable(media_expression_nelist) = false
nullable(media_expression_list) = false
nullable(media_expression) = false
nullable(list(statement)) = true
nullable(list(qualifier)) = true
nullable(list(combination)) = true
nullable(list(S)) = true
nullable(keyframe_sel) = false
nullable(keyframe_block) = false
nullable(function_args) = false
nullable(expr) = false
nullable(element) = false
nullable(declaration_block) = false
nullable(declaration) = false
nullable(combinator) = false
nullable(combination) = false
nullable(calc) = false
nullable(boption(IMPORTANT)) = true
nullable(attr_operation) = true
nullable(attr_operand) = false
nullable(atrule) = false
first(var_decl) = VAR URI URANGE TERM_FUNC STRING SLASH QUANTITY OPEN_ROUND OPEN_CURLY IDENT HASH
first(term) = VAR URI URANGE TERM_FUNC STRING SLASH QUANTITY OPEN_ROUND IDENT HASH
first(stylesheet) = VAR SEL_FUNC S PERIOD PAGE OPEN_SQUARE MEDIA KEYFRAMES IMPORT IDENT HASH FONTFACE EOF DOUBLE_COLON COLON CHARSET ASTERISK
first(statement) = VAR SEL_FUNC PERIOD PAGE OPEN_SQUARE MEDIA KEYFRAMES IMPORT IDENT HASH FONTFACE DOUBLE_COLON COLON CHARSET ASTERISK
first(source) = URI STRING
first(simple_selector) = SEL_FUNC PERIOD OPEN_SQUARE IDENT HASH DOUBLE_COLON COLON ASTERISK
first(separated_nonempty_list(option(S),term)) = VAR URI URANGE TERM_FUNC STRING SLASH QUANTITY OPEN_ROUND IDENT HASH
first(separated_nonempty_list(COMMA,sentence)) = VAR URI URANGE TERM_FUNC STRING SLASH QUANTITY OPEN_ROUND IDENT HASH
first(separated_nonempty_list(COMMA,selector)) = SEL_FUNC PERIOD OPEN_SQUARE IDENT HASH DOUBLE_COLON COLON ASTERISK
first(separated_nonempty_list(COMMA,media_query)) = OPEN_ROUND ONLY NOT IDENT
first(separated_nonempty_list(AND,media_expression)) = OPEN_ROUND
first(sentence) = VAR URI URANGE TERM_FUNC STRING SLASH QUANTITY OPEN_ROUND IDENT HASH
first(selector_list) = SEL_FUNC PERIOD OPEN_SQUARE IDENT HASH DOUBLE_COLON COLON ASTERISK
first(selector) = SEL_FUNC PERIOD OPEN_SQUARE IDENT HASH DOUBLE_COLON COLON ASTERISK
first(rule) = SEL_FUNC PERIOD OPEN_SQUARE IDENT HASH DOUBLE_COLON COLON ASTERISK
first(qualifier) = SEL_FUNC PERIOD OPEN_SQUARE HASH DOUBLE_COLON COLON
first(pseudo_page) = COLON
first(option(pseudo_page)) = COLON
first(option(media_sentence)) = COLON
first(option(media_query_list)) = OPEN_ROUND ONLY NOT IDENT
first(option(media_prefix)) = ONLY NOT
first(option(media_expression_list)) = AND
first(option(S)) = S
first(nonempty_list(rule)) = SEL_FUNC PERIOD OPEN_SQUARE IDENT HASH DOUBLE_COLON COLON ASTERISK
first(nonempty_list(qualifier)) = SEL_FUNC PERIOD OPEN_SQUARE HASH DOUBLE_COLON COLON
first(nonempty_list(keyframe_block)) = VAR QUANTITY OPEN_ROUND IDENT
first(nonempty_list(declaration)) = VAR IDENT
first(media_type) = ONLY NOT IDENT
first(media_sentence) = COLON
first(media_query_list) = OPEN_ROUND ONLY NOT IDENT
first(media_query) = OPEN_ROUND ONLY NOT IDENT
first(media_prefix) = ONLY NOT
first(media_feature) = IDENT
first(media_expression_nelist) = OPEN_ROUND
first(media_expression_list) = AND
first(media_expression) = OPEN_ROUND
first(list(statement)) = VAR SEL_FUNC PERIOD PAGE OPEN_SQUARE MEDIA KEYFRAMES IMPORT IDENT HASH FONTFACE DOUBLE_COLON COLON CHARSET ASTERISK
first(list(qualifier)) = SEL_FUNC PERIOD OPEN_SQUARE HASH DOUBLE_COLON COLON
first(list(combination)) = TILDE S PLUS GT
first(list(S)) = S
first(keyframe_sel) = VAR QUANTITY OPEN_ROUND IDENT
first(keyframe_block) = VAR QUANTITY OPEN_ROUND IDENT
first(function_args) = SEL_FUNC PERIOD OPEN_SQUARE NTH IDENT HASH DOUBLE_COLON COLON
first(expr) = VAR URI URANGE TERM_FUNC STRING SLASH QUANTITY OPEN_ROUND IDENT HASH
first(element) = IDENT ASTERISK
first(declaration_block) = OPEN_CURLY
first(declaration) = VAR IDENT
first(combinator) = TILDE S PLUS GT
first(combination) = TILDE S PLUS GT
first(calc) = VAR QUANTITY OPEN_ROUND
first(boption(IMPORTANT)) = IMPORTANT
first(attr_operation) = ATTR_SUFFIX ATTR_SUBSTRING ATTR_PREFIX ATTR_INCLUDES ATTR_EQUALS ATTR_DASHMATCH
first(attr_operand) = STRING IDENT
first(atrule) = PAGE MEDIA KEYFRAMES IMPORT FONTFACE CHARSET
minimal(var_decl) = (* 2 *) VAR SEMICOLON
minimal(term) = (* 1 *) VAR
minimal(stylesheet) = (* 1 *) EOF
minimal(statement) = (* 3 *) CHARSET STRING SEMICOLON
minimal(source) = (* 1 *) STRING
minimal(simple_selector) = (* 1 *) IDENT
minimal(separated_nonempty_list(option(S),term)) = (* 1 *) VAR
minimal(separated_nonempty_list(COMMA,sentence)) = (* 1 *) VAR
minimal(separated_nonempty_list(COMMA,selector)) = (* 1 *) IDENT
minimal(separated_nonempty_list(COMMA,media_query)) = (* 1 *) IDENT
minimal(separated_nonempty_list(AND,media_expression)) = (* 3 *) OPEN_ROUND IDENT CLOSE_ROUND
minimal(sentence) = (* 1 *) VAR
minimal(selector_list) = (* 1 *) IDENT
minimal(selector) = (* 1 *) IDENT
minimal(rule) = (* 5 *) IDENT OPEN_CURLY VAR SEMICOLON CLOSE_CURLY
minimal(qualifier) = (* 1 *) HASH
minimal(pseudo_page) = (* 2 *) COLON IDENT
minimal(option(pseudo_page)) = (* 0 *)
minimal(option(media_sentence)) = (* 0 *)
minimal(option(media_query_list)) = (* 0 *)
minimal(option(media_prefix)) = (* 0 *)
minimal(option(media_expression_list)) = (* 0 *)
minimal(option(S)) = (* 0 *)
minimal(nonempty_list(rule)) = (* 5 *) IDENT OPEN_CURLY VAR SEMICOLON CLOSE_CURLY
minimal(nonempty_list(qualifier)) = (* 1 *) HASH
minimal(nonempty_list(keyframe_block)) = (* 5 *) IDENT OPEN_CURLY VAR SEMICOLON CLOSE_CURLY
minimal(nonempty_list(declaration)) = (* 2 *) VAR SEMICOLON
minimal(media_type) = (* 1 *) IDENT
minimal(media_sentence) = (* 2 *) COLON VAR
minimal(media_query_list) = (* 1 *) IDENT
minimal(media_query) = (* 1 *) IDENT
minimal(media_prefix) = (* 1 *) ONLY
minimal(media_feature) = (* 1 *) IDENT
minimal(media_expression_nelist) = (* 3 *) OPEN_ROUND IDENT CLOSE_ROUND
minimal(media_expression_list) = (* 4 *) AND OPEN_ROUND IDENT CLOSE_ROUND
minimal(media_expression) = (* 3 *) OPEN_ROUND IDENT CLOSE_ROUND
minimal(list(statement)) = (* 0 *)
minimal(list(qualifier)) = (* 0 *)
minimal(list(combination)) = (* 0 *)
minimal(list(S)) = (* 0 *)
minimal(keyframe_sel) = (* 1 *) IDENT
minimal(keyframe_block) = (* 5 *) IDENT OPEN_CURLY VAR SEMICOLON CLOSE_CURLY
minimal(function_args) = (* 1 *) NTH
minimal(expr) = (* 1 *) VAR
minimal(element) = (* 1 *) IDENT
minimal(declaration_block) = (* 4 *) OPEN_CURLY VAR SEMICOLON CLOSE_CURLY
minimal(declaration) = (* 2 *) VAR SEMICOLON
minimal(combinator) = (* 1 *) S
minimal(combination) = (* 2 *) S IDENT
minimal(calc) = (* 1 *) VAR
minimal(boption(IMPORTANT)) = (* 0 *)
minimal(attr_operation) = (* 0 *)
minimal(attr_operand) = (* 1 *) IDENT
minimal(atrule) = (* 3 *) CHARSET STRING SEMICOLON
follow(var_decl) = VAR SEL_FUNC PERIOD PAGE OPEN_SQUARE MEDIA KEYFRAMES IMPORT IDENT HASH FONTFACE EOF DOUBLE_COLON COLON CHARSET ASTERISK
follow(term) = VAR URI URANGE TERM_FUNC STRING SLASH SEMICOLON S QUANTITY OPEN_ROUND IMPORTANT IDENT HASH COMMA CLOSE_ROUND
follow(stylesheet) = #
follow(statement) = VAR SEL_FUNC PERIOD PAGE OPEN_SQUARE MEDIA KEYFRAMES IMPORT IDENT HASH FONTFACE EOF DOUBLE_COLON COLON CHARSET ASTERISK
follow(source) = SEMICOLON S OPEN_ROUND ONLY NOT IDENT
follow(simple_selector) = TILDE S PLUS OPEN_CURLY GT COMMA
follow(separated_nonempty_list(option(S),term)) = SEMICOLON IMPORTANT COMMA CLOSE_ROUND
follow(separated_nonempty_list(COMMA,sentence)) = SEMICOLON IMPORTANT CLOSE_ROUND
follow(separated_nonempty_list(COMMA,selector)) = OPEN_CURLY
follow(separated_nonempty_list(COMMA,media_query)) = SEMICOLON OPEN_CURLY
follow(separated_nonempty_list(AND,media_expression)) = SEMICOLON OPEN_CURLY COMMA
follow(sentence) = SEMICOLON IMPORTANT COMMA CLOSE_ROUND
follow(selector_list) = OPEN_CURLY
follow(selector) = OPEN_CURLY COMMA
follow(rule) = VAR SEL_FUNC PERIOD PAGE OPEN_SQUARE MEDIA KEYFRAMES IMPORT IDENT HASH FONTFACE EOF DOUBLE_COLON COLON CLOSE_CURLY CHARSET ASTERISK
follow(qualifier) = TILDE SEL_FUNC S PLUS PERIOD OPEN_SQUARE OPEN_CURLY HASH GT DOUBLE_COLON COMMA COLON CLOSE_ROUND
follow(pseudo_page) = OPEN_CURLY
follow(option(pseudo_page)) = OPEN_CURLY
follow(option(media_sentence)) = CLOSE_ROUND
follow(option(media_query_list)) = SEMICOLON
follow(option(media_prefix)) = IDENT
follow(option(media_expression_list)) = SEMICOLON OPEN_CURLY COMMA
follow(option(S)) = VAR URI URANGE TERM_FUNC STRING SLASH SEMICOLON QUANTITY OPEN_ROUND ONLY NOT IDENT HASH
follow(nonempty_list(rule)) = CLOSE_CURLY
follow(nonempty_list(qualifier)) = TILDE S PLUS OPEN_CURLY GT COMMA CLOSE_ROUND
follow(nonempty_list(keyframe_block)) = CLOSE_CURLY
follow(nonempty_list(declaration)) = CLOSE_CURLY
follow(media_type) = SEMICOLON OPEN_CURLY COMMA AND
follow(media_sentence) = CLOSE_ROUND
follow(media_query_list) = SEMICOLON OPEN_CURLY
follow(media_query) = SEMICOLON OPEN_CURLY COMMA
follow(media_prefix) = IDENT
follow(media_feature) = COLON CLOSE_ROUND
follow(media_expression_nelist) = SEMICOLON OPEN_CURLY COMMA
follow(media_expression_list) = SEMICOLON OPEN_CURLY COMMA
follow(media_expression) = SEMICOLON OPEN_CURLY COMMA AND
follow(list(statement)) = EOF
follow(list(qualifier)) = TILDE S PLUS OPEN_CURLY GT COMMA
follow(list(combination)) = OPEN_CURLY COMMA
follow(list(S)) = VAR SEL_FUNC PERIOD PAGE OPEN_SQUARE MEDIA KEYFRAMES IMPORT IDENT HASH FONTFACE EOF DOUBLE_COLON COLON CHARSET ASTERISK
follow(keyframe_sel) = OPEN_CURLY
follow(keyframe_block) = VAR QUANTITY OPEN_ROUND IDENT CLOSE_CURLY
follow(function_args) = CLOSE_ROUND
follow(expr) = SEMICOLON IMPORTANT CLOSE_ROUND
follow(element) = TILDE SEL_FUNC S PLUS PERIOD OPEN_SQUARE OPEN_CURLY HASH GT DOUBLE_COLON COMMA COLON
follow(declaration_block) = VAR SEL_FUNC QUANTITY PERIOD PAGE OPEN_SQUARE OPEN_ROUND MEDIA KEYFRAMES IMPORT IDENT HASH FONTFACE EOF DOUBLE_COLON COLON CLOSE_CURLY CHARSET ASTERISK
follow(declaration) = VAR IDENT CLOSE_CURLY
follow(combinator) = SEL_FUNC PERIOD OPEN_SQUARE IDENT HASH DOUBLE_COLON COLON ASTERISK
follow(combination) = TILDE S PLUS OPEN_CURLY GT COMMA
follow(calc) = VAR URI URANGE TERM_FUNC STRING SLASH SEMICOLON S QUOTIENT QUANTITY PLUS OPEN_ROUND OPEN_CURLY MINUS IMPORTANT IDENT HASH COMMA CLOSE_ROUND ASTERISK
follow(boption(IMPORTANT)) = SEMICOLON
follow(attr_operation) = CLOSE_SQUARE
follow(attr_operand) = CLOSE_SQUARE
follow(atrule) = VAR SEL_FUNC PERIOD PAGE OPEN_SQUARE MEDIA KEYFRAMES IMPORT IDENT HASH FONTFACE EOF DOUBLE_COLON COLON CHARSET ASTERISK
Built an LR(0) automaton with 186 states.
The grammar is not SLR(1) -- 5 states have a conflict.
The construction mode is pager.
Built an LR(1) automaton with 186 states.
16 shift/reduce conflicts were silently solved.
95 out of 186 states have a default reduction.
46 out of 186 states are represented.
5 out of 103 symbols keep track of their start position.
0 out of 103 symbols keep track of their end position.
84 out of 120 productions exploit shiftreduce optimization.
0 out of 186 states can peek at an error.
552 functions before inlining, 91 functions after inlining.
