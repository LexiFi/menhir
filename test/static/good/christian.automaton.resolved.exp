State 0:
## Known stack suffix:
##
## LR(1) items:
main' -> . main [ # ]
## Transitions:
-- On Upper shift to state 1
-- On moduleIdentifier shift to state 16
-- On moduleDefinition shift to state 854
-- On main shift to state 856
## Reductions:

State 1:
## Known stack suffix:
## Upper
## LR(1) items:
moduleIdentifier -> Upper . definitiveIdentifier [ DEFINITIONS ]
## Transitions:
-- On LeftBrace shift to state 2
-- On definitiveIdentifier shift to state 15
## Reductions:
-- On DEFINITIONS reduce production definitiveIdentifier ->

State 2:
## Known stack suffix:
## LeftBrace
## LR(1) items:
definitiveIdentifier -> LeftBrace . definitiveObjIdComponentList RightBrace [ DEFINITIONS ]
## Transitions:
-- On Number shift to state 3
-- On Lower shift to state 4
-- On nameForm shift to state 8
-- On definitiveObjIdComponentList shift to state 9
-- On definitiveObjIdComponent shift to state 11
-- On definitiveNumberForm shift to state 13
-- On definitiveNameAndNumberForm shift to state 14
## Reductions:

State 3:
## Known stack suffix:
## Number
## LR(1) items:
definitiveNumberForm -> Number . [ RightParen RightBrace Number Lower ]
## Transitions:
## Reductions:
-- On RightParen reduce production definitiveNumberForm -> Number
-- On RightBrace reduce production definitiveNumberForm -> Number
-- On Number reduce production definitiveNumberForm -> Number
-- On Lower reduce production definitiveNumberForm -> Number

State 4:
## Known stack suffix:
## Lower
## LR(1) items:
definitiveNameAndNumberForm -> Lower . LeftParen definitiveNumberForm RightParen [ RightBrace Number Lower ]
nameForm -> Lower . [ RightBrace Number Lower ]
## Transitions:
-- On LeftParen shift to state 5
## Reductions:
-- On RightBrace reduce production nameForm -> Lower
-- On Number reduce production nameForm -> Lower
-- On Lower reduce production nameForm -> Lower

State 5:
## Known stack suffix:
## Lower LeftParen
## LR(1) items:
definitiveNameAndNumberForm -> Lower LeftParen . definitiveNumberForm RightParen [ RightBrace Number Lower ]
## Transitions:
-- On Number shift to state 3
-- On definitiveNumberForm shift to state 6
## Reductions:

State 6:
## Known stack suffix:
## Lower LeftParen definitiveNumberForm
## LR(1) items:
definitiveNameAndNumberForm -> Lower LeftParen definitiveNumberForm . RightParen [ RightBrace Number Lower ]
## Transitions:
-- On RightParen shift to state 7
## Reductions:

State 7:
## Known stack suffix:
## Lower LeftParen definitiveNumberForm RightParen
## LR(1) items:
definitiveNameAndNumberForm -> Lower LeftParen definitiveNumberForm RightParen . [ RightBrace Number Lower ]
## Transitions:
## Reductions:
-- On RightBrace reduce production definitiveNameAndNumberForm -> Lower LeftParen definitiveNumberForm RightParen
-- On Number reduce production definitiveNameAndNumberForm -> Lower LeftParen definitiveNumberForm RightParen
-- On Lower reduce production definitiveNameAndNumberForm -> Lower LeftParen definitiveNumberForm RightParen

State 8:
## Known stack suffix:
## nameForm
## LR(1) items:
definitiveObjIdComponent -> nameForm . [ RightBrace Number Lower ]
## Transitions:
## Reductions:
-- On RightBrace reduce production definitiveObjIdComponent -> nameForm
-- On Number reduce production definitiveObjIdComponent -> nameForm
-- On Lower reduce production definitiveObjIdComponent -> nameForm

State 9:
## Known stack suffix:
## LeftBrace definitiveObjIdComponentList
## LR(1) items:
definitiveIdentifier -> LeftBrace definitiveObjIdComponentList . RightBrace [ DEFINITIONS ]
## Transitions:
-- On RightBrace shift to state 10
## Reductions:

State 10:
## Known stack suffix:
## LeftBrace definitiveObjIdComponentList RightBrace
## LR(1) items:
definitiveIdentifier -> LeftBrace definitiveObjIdComponentList RightBrace . [ DEFINITIONS ]
## Transitions:
## Reductions:
-- On DEFINITIONS reduce production definitiveIdentifier -> LeftBrace definitiveObjIdComponentList RightBrace

State 11:
## Known stack suffix:
## definitiveObjIdComponent
## LR(1) items:
definitiveObjIdComponentList -> definitiveObjIdComponent . [ RightBrace ]
definitiveObjIdComponentList -> definitiveObjIdComponent . definitiveObjIdComponentList [ RightBrace ]
## Transitions:
-- On Number shift to state 3
-- On Lower shift to state 4
-- On nameForm shift to state 8
-- On definitiveObjIdComponentList shift to state 12
-- On definitiveObjIdComponent shift to state 11
-- On definitiveNumberForm shift to state 13
-- On definitiveNameAndNumberForm shift to state 14
## Reductions:
-- On RightBrace reduce production definitiveObjIdComponentList -> definitiveObjIdComponent

State 12:
## Known stack suffix:
## definitiveObjIdComponent definitiveObjIdComponentList
## LR(1) items:
definitiveObjIdComponentList -> definitiveObjIdComponent definitiveObjIdComponentList . [ RightBrace ]
## Transitions:
## Reductions:
-- On RightBrace reduce production definitiveObjIdComponentList -> definitiveObjIdComponent definitiveObjIdComponentList

State 13:
## Known stack suffix:
## definitiveNumberForm
## LR(1) items:
definitiveObjIdComponent -> definitiveNumberForm . [ RightBrace Number Lower ]
## Transitions:
## Reductions:
-- On RightBrace reduce production definitiveObjIdComponent -> definitiveNumberForm
-- On Number reduce production definitiveObjIdComponent -> definitiveNumberForm
-- On Lower reduce production definitiveObjIdComponent -> definitiveNumberForm

State 14:
## Known stack suffix:
## definitiveNameAndNumberForm
## LR(1) items:
definitiveObjIdComponent -> definitiveNameAndNumberForm . [ RightBrace Number Lower ]
## Transitions:
## Reductions:
-- On RightBrace reduce production definitiveObjIdComponent -> definitiveNameAndNumberForm
-- On Number reduce production definitiveObjIdComponent -> definitiveNameAndNumberForm
-- On Lower reduce production definitiveObjIdComponent -> definitiveNameAndNumberForm

State 15:
## Known stack suffix:
## Upper definitiveIdentifier
## LR(1) items:
moduleIdentifier -> Upper definitiveIdentifier . [ DEFINITIONS ]
## Transitions:
## Reductions:
-- On DEFINITIONS reduce production moduleIdentifier -> Upper definitiveIdentifier

State 16:
## Known stack suffix:
## moduleIdentifier
## LR(1) items:
moduleDefinition -> moduleIdentifier . DEFINITIONS tagDefault extensionDefault Assignment BEGIN moduleBody END [ EOF ]
## Transitions:
-- On DEFINITIONS shift to state 17
## Reductions:

State 17:
## Known stack suffix:
## moduleIdentifier DEFINITIONS
## LR(1) items:
moduleDefinition -> moduleIdentifier DEFINITIONS . tagDefault extensionDefault Assignment BEGIN moduleBody END [ EOF ]
## Transitions:
-- On IMPLICIT shift to state 18
-- On EXPLICIT shift to state 20
-- On AUTOMATIC shift to state 22
-- On tagDefault shift to state 24
## Reductions:
-- On EXTENSIBILITY reduce production tagDefault ->
-- On Assignment reduce production tagDefault ->

State 18:
## Known stack suffix:
## IMPLICIT
## LR(1) items:
tagDefault -> IMPLICIT . TAGS [ EXTENSIBILITY Assignment ]
## Transitions:
-- On TAGS shift to state 19
## Reductions:

State 19:
## Known stack suffix:
## IMPLICIT TAGS
## LR(1) items:
tagDefault -> IMPLICIT TAGS . [ EXTENSIBILITY Assignment ]
## Transitions:
## Reductions:
-- On EXTENSIBILITY reduce production tagDefault -> IMPLICIT TAGS
-- On Assignment reduce production tagDefault -> IMPLICIT TAGS

State 20:
## Known stack suffix:
## EXPLICIT
## LR(1) items:
tagDefault -> EXPLICIT . TAGS [ EXTENSIBILITY Assignment ]
## Transitions:
-- On TAGS shift to state 21
## Reductions:

State 21:
## Known stack suffix:
## EXPLICIT TAGS
## LR(1) items:
tagDefault -> EXPLICIT TAGS . [ EXTENSIBILITY Assignment ]
## Transitions:
## Reductions:
-- On EXTENSIBILITY reduce production tagDefault -> EXPLICIT TAGS
-- On Assignment reduce production tagDefault -> EXPLICIT TAGS

State 22:
## Known stack suffix:
## AUTOMATIC
## LR(1) items:
tagDefault -> AUTOMATIC . TAGS [ EXTENSIBILITY Assignment ]
## Transitions:
-- On TAGS shift to state 23
## Reductions:

State 23:
## Known stack suffix:
## AUTOMATIC TAGS
## LR(1) items:
tagDefault -> AUTOMATIC TAGS . [ EXTENSIBILITY Assignment ]
## Transitions:
## Reductions:
-- On EXTENSIBILITY reduce production tagDefault -> AUTOMATIC TAGS
-- On Assignment reduce production tagDefault -> AUTOMATIC TAGS

State 24:
## Known stack suffix:
## moduleIdentifier DEFINITIONS tagDefault
## LR(1) items:
moduleDefinition -> moduleIdentifier DEFINITIONS tagDefault . extensionDefault Assignment BEGIN moduleBody END [ EOF ]
## Transitions:
-- On EXTENSIBILITY shift to state 25
-- On extensionDefault shift to state 27
## Reductions:
-- On Assignment reduce production extensionDefault ->

State 25:
## Known stack suffix:
## EXTENSIBILITY
## LR(1) items:
extensionDefault -> EXTENSIBILITY . IMPLIED [ Assignment ]
## Transitions:
-- On IMPLIED shift to state 26
## Reductions:

State 26:
## Known stack suffix:
## EXTENSIBILITY IMPLIED
## LR(1) items:
extensionDefault -> EXTENSIBILITY IMPLIED . [ Assignment ]
## Transitions:
## Reductions:
-- On Assignment reduce production extensionDefault -> EXTENSIBILITY IMPLIED

State 27:
## Known stack suffix:
## moduleIdentifier DEFINITIONS tagDefault extensionDefault
## LR(1) items:
moduleDefinition -> moduleIdentifier DEFINITIONS tagDefault extensionDefault . Assignment BEGIN moduleBody END [ EOF ]
## Transitions:
-- On Assignment shift to state 28
## Reductions:

State 28:
## Known stack suffix:
## moduleIdentifier DEFINITIONS tagDefault extensionDefault Assignment
## LR(1) items:
moduleDefinition -> moduleIdentifier DEFINITIONS tagDefault extensionDefault Assignment . BEGIN moduleBody END [ EOF ]
## Transitions:
-- On BEGIN shift to state 29
## Reductions:

State 29:
## Known stack suffix:
## moduleIdentifier DEFINITIONS tagDefault extensionDefault Assignment BEGIN
## LR(1) items:
moduleDefinition -> moduleIdentifier DEFINITIONS tagDefault extensionDefault Assignment BEGIN . moduleBody END [ EOF ]
## Transitions:
-- On EXPORTS shift to state 30
-- On moduleBody shift to state 45
-- On exports shift to state 47
## Reductions:
-- On Upper reduce production exports ->
-- On Lower reduce production exports ->
-- On IMPORTS reduce production exports ->
-- On END reduce production moduleBody ->

State 30:
## Known stack suffix:
## EXPORTS
## LR(1) items:
exports -> EXPORTS . symbolsExported SemiColon [ Upper Lower IMPORTS ]
exports -> EXPORTS . ALL SemiColon [ Upper Lower IMPORTS ]
## Transitions:
-- On Upper shift to state 31
-- On Lower shift to state 32
-- On ALL shift to state 33
-- On symbolsExported shift to state 35
-- On symbolList shift to state 37
-- On symbol shift to state 44
-- On reference shift to state 40
-- On parameterizedReference shift to state 43
## Reductions:
-- On SemiColon reduce production symbolsExported ->

State 31:
## Known stack suffix:
## Upper
## LR(1) items:
reference -> Upper . [ SemiColon RightBrace LeftBrace FROM Comma ]
## Transitions:
## Reductions:
-- On SemiColon reduce production reference -> Upper
-- On RightBrace reduce production reference -> Upper
-- On LeftBrace reduce production reference -> Upper
-- On FROM reduce production reference -> Upper
-- On Comma reduce production reference -> Upper

State 32:
## Known stack suffix:
## Lower
## LR(1) items:
reference -> Lower . [ SemiColon RightBrace LeftBrace FROM Comma ]
## Transitions:
## Reductions:
-- On SemiColon reduce production reference -> Lower
-- On RightBrace reduce production reference -> Lower
-- On LeftBrace reduce production reference -> Lower
-- On FROM reduce production reference -> Lower
-- On Comma reduce production reference -> Lower

State 33:
## Known stack suffix:
## EXPORTS ALL
## LR(1) items:
exports -> EXPORTS ALL . SemiColon [ Upper Lower IMPORTS ]
## Transitions:
-- On SemiColon shift to state 34
## Reductions:

State 34:
## Known stack suffix:
## EXPORTS ALL SemiColon
## LR(1) items:
exports -> EXPORTS ALL SemiColon . [ Upper Lower IMPORTS ]
## Transitions:
## Reductions:
-- On Upper reduce production exports -> EXPORTS ALL SemiColon
-- On Lower reduce production exports -> EXPORTS ALL SemiColon
-- On IMPORTS reduce production exports -> EXPORTS ALL SemiColon

State 35:
## Known stack suffix:
## EXPORTS symbolsExported
## LR(1) items:
exports -> EXPORTS symbolsExported . SemiColon [ Upper Lower IMPORTS ]
## Transitions:
-- On SemiColon shift to state 36
## Reductions:

State 36:
## Known stack suffix:
## EXPORTS symbolsExported SemiColon
## LR(1) items:
exports -> EXPORTS symbolsExported SemiColon . [ Upper Lower IMPORTS ]
## Transitions:
## Reductions:
-- On Upper reduce production exports -> EXPORTS symbolsExported SemiColon
-- On Lower reduce production exports -> EXPORTS symbolsExported SemiColon
-- On IMPORTS reduce production exports -> EXPORTS symbolsExported SemiColon

State 37:
## Known stack suffix:
## symbolList
## LR(1) items:
symbolList -> symbolList . Comma symbol [ SemiColon Comma ]
symbolsExported -> symbolList . [ SemiColon ]
## Transitions:
-- On Comma shift to state 38
## Reductions:
-- On SemiColon reduce production symbolsExported -> symbolList

State 38:
## Known stack suffix:
## symbolList Comma
## LR(1) items:
symbolList -> symbolList Comma . symbol [ SemiColon FROM Comma ]
## Transitions:
-- On Upper shift to state 31
-- On Lower shift to state 32
-- On symbol shift to state 39
-- On reference shift to state 40
-- On parameterizedReference shift to state 43
## Reductions:

State 39:
## Known stack suffix:
## symbolList Comma symbol
## LR(1) items:
symbolList -> symbolList Comma symbol . [ SemiColon FROM Comma ]
## Transitions:
## Reductions:
-- On SemiColon reduce production symbolList -> symbolList Comma symbol
-- On FROM reduce production symbolList -> symbolList Comma symbol
-- On Comma reduce production symbolList -> symbolList Comma symbol

State 40:
## Known stack suffix:
## reference
## LR(1) items:
parameterizedReference -> reference . [ SemiColon FROM Comma ]
parameterizedReference -> reference . LeftBrace RightBrace [ SemiColon FROM Comma ]
symbol -> reference . [ SemiColon FROM Comma ]
## Transitions:
-- On LeftBrace shift to state 41
## Reductions:
-- On SemiColon reduce production symbol -> reference
-- On FROM reduce production symbol -> reference
-- On Comma reduce production symbol -> reference

State 41:
## Known stack suffix:
## reference LeftBrace
## LR(1) items:
parameterizedReference -> reference LeftBrace . RightBrace [ SemiColon FROM Comma ]
## Transitions:
-- On RightBrace shift to state 42
## Reductions:

State 42:
## Known stack suffix:
## reference LeftBrace RightBrace
## LR(1) items:
parameterizedReference -> reference LeftBrace RightBrace . [ SemiColon FROM Comma ]
## Transitions:
## Reductions:
-- On SemiColon reduce production parameterizedReference -> reference LeftBrace RightBrace
-- On FROM reduce production parameterizedReference -> reference LeftBrace RightBrace
-- On Comma reduce production parameterizedReference -> reference LeftBrace RightBrace

State 43:
## Known stack suffix:
## parameterizedReference
## LR(1) items:
symbol -> parameterizedReference . [ SemiColon FROM Comma ]
## Transitions:
## Reductions:
-- On SemiColon reduce production symbol -> parameterizedReference
-- On FROM reduce production symbol -> parameterizedReference
-- On Comma reduce production symbol -> parameterizedReference

State 44:
## Known stack suffix:
## symbol
## LR(1) items:
symbolList -> symbol . [ SemiColon FROM Comma ]
## Transitions:
## Reductions:
-- On SemiColon reduce production symbolList -> symbol
-- On FROM reduce production symbolList -> symbol
-- On Comma reduce production symbolList -> symbol

State 45:
## Known stack suffix:
## moduleIdentifier DEFINITIONS tagDefault extensionDefault Assignment BEGIN moduleBody
## LR(1) items:
moduleDefinition -> moduleIdentifier DEFINITIONS tagDefault extensionDefault Assignment BEGIN moduleBody . END [ EOF ]
## Transitions:
-- On END shift to state 46
## Reductions:

State 46:
## Known stack suffix:
## moduleIdentifier DEFINITIONS tagDefault extensionDefault Assignment BEGIN moduleBody END
## LR(1) items:
moduleDefinition -> moduleIdentifier DEFINITIONS tagDefault extensionDefault Assignment BEGIN moduleBody END . [ EOF ]
## Transitions:
## Reductions:
-- On EOF reduce production moduleDefinition -> moduleIdentifier DEFINITIONS tagDefault extensionDefault Assignment BEGIN moduleBody END

State 47:
## Known stack suffix:
## exports
## LR(1) items:
moduleBody -> exports . imports assignmentList [ END ]
## Transitions:
-- On IMPORTS shift to state 48
-- On imports shift to state 701
## Reductions:
-- On Upper reduce production imports ->
-- On Lower reduce production imports ->

State 48:
## Known stack suffix:
## IMPORTS
## LR(1) items:
imports -> IMPORTS . symbolsImported SemiColon [ Upper Lower ]
## Transitions:
-- On Upper shift to state 31
-- On Lower shift to state 32
-- On symbolsImported shift to state 49
-- On symbolsFromModuleList shift to state 51
-- On symbolsFromModule shift to state 700
-- On symbolList shift to state 53
-- On symbol shift to state 44
-- On reference shift to state 40
-- On parameterizedReference shift to state 43
## Reductions:
-- On SemiColon reduce production symbolsImported ->

State 49:
## Known stack suffix:
## IMPORTS symbolsImported
## LR(1) items:
imports -> IMPORTS symbolsImported . SemiColon [ Upper Lower ]
## Transitions:
-- On SemiColon shift to state 50
## Reductions:

State 50:
## Known stack suffix:
## IMPORTS symbolsImported SemiColon
## LR(1) items:
imports -> IMPORTS symbolsImported SemiColon . [ Upper Lower ]
## Transitions:
## Reductions:
-- On Upper reduce production imports -> IMPORTS symbolsImported SemiColon
-- On Lower reduce production imports -> IMPORTS symbolsImported SemiColon

State 51:
## Known stack suffix:
## symbolsFromModuleList
## LR(1) items:
symbolsFromModuleList -> symbolsFromModuleList . symbolsFromModule [ Upper SemiColon Lower ]
symbolsImported -> symbolsFromModuleList . [ SemiColon ]
## Transitions:
-- On Upper shift to state 31
-- On Lower shift to state 32
-- On symbolsFromModule shift to state 52
-- On symbolList shift to state 53
-- On symbol shift to state 44
-- On reference shift to state 40
-- On parameterizedReference shift to state 43
## Reductions:
-- On SemiColon reduce production symbolsImported -> symbolsFromModuleList

State 52:
## Known stack suffix:
## symbolsFromModuleList symbolsFromModule
## LR(1) items:
symbolsFromModuleList -> symbolsFromModuleList symbolsFromModule . [ Upper SemiColon Lower ]
## Transitions:
## Reductions:
-- On Upper reduce production symbolsFromModuleList -> symbolsFromModuleList symbolsFromModule
-- On SemiColon reduce production symbolsFromModuleList -> symbolsFromModuleList symbolsFromModule
-- On Lower reduce production symbolsFromModuleList -> symbolsFromModuleList symbolsFromModule

State 53:
## Known stack suffix:
## symbolList
## LR(1) items:
symbolList -> symbolList . Comma symbol [ FROM Comma ]
symbolsFromModule -> symbolList . FROM globalModuleReference [ Upper SemiColon Lower ]
## Transitions:
-- On FROM shift to state 54
-- On Comma shift to state 38
## Reductions:

State 54:
## Known stack suffix:
## symbolList FROM
## LR(1) items:
symbolsFromModule -> symbolList FROM . globalModuleReference [ Upper SemiColon Lower ]
## Transitions:
-- On Upper shift to state 55
-- On globalModuleReference shift to state 699
## Reductions:

State 55:
## Known stack suffix:
## Upper
## LR(1) items:
globalModuleReference -> Upper . assignedIdentifier [ Upper SemiColon Lower ]
## Transitions:
-- On Upper shift to state 56
-- On Lower shift to state 59
-- On LeftBrace shift to state 60
-- On simpleDefinedValue shift to state 64
-- On parameterizedValue shift to state 135
-- On objectIdentifierValue shift to state 696
-- On externalValueReference shift to state 136
-- On definedValue shift to state 697
-- On assignedIdentifier shift to state 698
## Reductions:
-- On SemiColon reduce production assignedIdentifier ->

State 56:
## Known stack suffix:
## Upper
## LR(1) items:
externalValueReference -> Upper . Dot Lower [ Upper SemiColon RightParen RightBracket RightBrace Number Lower LeftBrace Comma ]
## Transitions:
-- On Dot shift to state 57
## Reductions:

State 57:
## Known stack suffix:
## Upper Dot
## LR(1) items:
externalValueReference -> Upper Dot . Lower [ Upper SemiColon RightParen RightBracket RightBrace Number Lower LeftBrace Comma ]
## Transitions:
-- On Lower shift to state 58
## Reductions:

State 58:
## Known stack suffix:
## Upper Dot Lower
## LR(1) items:
externalValueReference -> Upper Dot Lower . [ Upper SemiColon RightParen RightBracket RightBrace Number Lower LeftBrace Comma ]
## Transitions:
## Reductions:
-- On Upper reduce production externalValueReference -> Upper Dot Lower
-- On SemiColon reduce production externalValueReference -> Upper Dot Lower
-- On RightParen reduce production externalValueReference -> Upper Dot Lower
-- On RightBracket reduce production externalValueReference -> Upper Dot Lower
-- On RightBrace reduce production externalValueReference -> Upper Dot Lower
-- On Number reduce production externalValueReference -> Upper Dot Lower
-- On Lower reduce production externalValueReference -> Upper Dot Lower
-- On LeftBrace reduce production externalValueReference -> Upper Dot Lower
-- On Comma reduce production externalValueReference -> Upper Dot Lower

State 59:
## Known stack suffix:
## Lower
## LR(1) items:
definedValue -> Lower . [ Upper SemiColon RightParen RightBracket RightBrace Lower Comma ]
simpleDefinedValue -> Lower . [ LeftBrace ]
## Transitions:
## Reductions:
-- On Upper reduce production definedValue -> Lower
-- On SemiColon reduce production definedValue -> Lower
-- On RightParen reduce production definedValue -> Lower
-- On RightBracket reduce production definedValue -> Lower
-- On RightBrace reduce production definedValue -> Lower
-- On Lower reduce production definedValue -> Lower
-- On LeftBrace reduce production simpleDefinedValue -> Lower
-- On Comma reduce production definedValue -> Lower

State 60:
## Known stack suffix:
## LeftBrace
## LR(1) items:
objectIdentifierValue -> LeftBrace . objIdComponentsList RightBrace [ Upper SemiColon Lower ]
objectIdentifierValue -> LeftBrace . definedValue objIdComponentsList RightBrace [ Upper SemiColon Lower ]
## Transitions:
-- On Upper shift to state 56
-- On Number shift to state 61
-- On Lower shift to state 62
-- On simpleDefinedValue shift to state 64
-- On parameterizedValue shift to state 135
-- On objIdComponentsList shift to state 374
-- On objIdComponents shift to state 376
-- On numberForm shift to state 378
-- On nameForm shift to state 379
-- On nameAndNumberForm shift to state 380
-- On externalValueReference shift to state 136
-- On definedValue shift to state 695
## Reductions:

State 61:
## Known stack suffix:
## Number
## LR(1) items:
numberForm -> Number . [ Upper RightParen RightBrace Number Lower ]
## Transitions:
## Reductions:
-- On Upper reduce production numberForm -> Number
-- On RightParen reduce production numberForm -> Number
-- On RightBrace reduce production numberForm -> Number
-- On Number reduce production numberForm -> Number
-- On Lower reduce production numberForm -> Number

State 62:
## Known stack suffix:
## Lower
## LR(1) items:
definedValue -> Lower . [ Upper RightBrace Number Lower ]
nameAndNumberForm -> Lower . LeftParen numberForm RightParen [ Upper RightBrace Number Lower ]
nameForm -> Lower . [ Upper RightBrace Number Lower ]
simpleDefinedValue -> Lower . [ LeftBrace ]
## Transitions:
-- On LeftParen shift to state 63
## Reductions:
-- On Upper reduce production definedValue -> Lower
-- On RightBrace reduce production definedValue -> Lower
-- On Number reduce production definedValue -> Lower
-- On Lower reduce production definedValue -> Lower
-- On LeftBrace reduce production simpleDefinedValue -> Lower

State 63:
## Known stack suffix:
## Lower LeftParen
## LR(1) items:
nameAndNumberForm -> Lower LeftParen . numberForm RightParen [ Upper RightBrace Number Lower ]
## Transitions:
-- On Upper shift to state 56
-- On Number shift to state 61
-- On Lower shift to state 59
-- On simpleDefinedValue shift to state 64
-- On parameterizedValue shift to state 135
-- On numberForm shift to state 692
-- On externalValueReference shift to state 136
-- On definedValue shift to state 694
## Reductions:

State 64:
## Known stack suffix:
## simpleDefinedValue
## LR(1) items:
parameterizedValue -> simpleDefinedValue . actualParameterList [ Upper UNION SemiColon RightParen RightDoubleBracket RightBracket RightBrace Number Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
## Transitions:
-- On LeftBrace shift to state 65
-- On actualParameterList shift to state 691
## Reductions:

State 65:
## Known stack suffix:
## LeftBrace
## LR(1) items:
actualParameterList -> LeftBrace . separated_nonempty_list(Comma,actualParameter) RightBrace [ Upper UNIQUE UNION SemiColon RightParen RightDoubleBracket RightBracket RightBrace OPTIONAL Number Middle Lower LessThan LeftParen INTERSECTION EXCEPT END ENCODED DoubleDot Dot DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
-- On VisibleString shift to state 66
-- On VideotexString shift to state 67
-- On Upper shift to state 68
-- On UniversalString shift to state 72
-- On UTF8String shift to state 73
-- On UTCTime shift to state 74
-- On TeletexString shift to state 75
-- On TYPE_IDENTIFIER shift to state 76
-- On TRUE shift to state 77
-- On T61String shift to state 78
-- On SET shift to state 79
-- On SEQUENCE shift to state 111
-- On RealNumber shift to state 296
-- On RELATIVE_OID shift to state 116
-- On REAL shift to state 117
-- On PrintableString shift to state 118
-- On PLUS_INFINITY shift to state 297
-- On ObjectDescriptor shift to state 119
-- On OCTET shift to state 120
-- On OBJECT shift to state 122
-- On NumericString shift to state 124
-- On Number shift to state 145
-- On NULL shift to state 298
-- On MINUS_INFINITY shift to state 299
-- On Lower shift to state 300
-- On LeftBracket shift to state 129
-- On LeftBrace shift to state 502
-- On ISO646String shift to state 140
-- On INTEGER shift to state 141
-- On INSTANCE shift to state 157
-- On IA5String shift to state 166
-- On Hyphen shift to state 306
-- On Hstring shift to state 308
-- On GraphicString shift to state 167
-- On GeneralizedTime shift to state 168
-- On GeneralString shift to state 169
-- On FALSE shift to state 309
-- On EXTERNAL shift to state 170
-- On ENUMERATED shift to state 171
-- On EMBEDDED shift to state 179
-- On DefinedSyntax shift to state 508
-- On Cstring shift to state 310
-- On CONTAINING shift to state 311
-- On CHOICE shift to state 181
-- On CHARACTER shift to state 184
-- On Bstring shift to state 312
-- On BOOLEAN shift to state 186
-- On BMPString shift to state 187
-- On BIT shift to state 188
-- On ABSTRACT_SYNTAX shift to state 162
-- On valueSetFromObjects shift to state 202
-- On valueSet shift to state 680
-- On valueFromObject shift to state 313
-- On value shift to state 681
-- On usefulType shift to state 203
-- On usefulObjectClassReference shift to state 163
-- On unrestrictedCharacterStringValue shift to state 315
-- On unrestrictedCharacterStringType shift to state 204
-- On type_x shift to state 682
-- On typeWithConstraint shift to state 207
-- On typeFromObject shift to state 208
-- On tuple shift to state 319
-- On taggedType shift to state 209
-- On tag shift to state 210
-- On specialRealValue shift to state 320
-- On simpleDefinedValue shift to state 64
-- On simpleDefinedType shift to state 213
-- On signedNumber shift to state 321
-- On setValue shift to state 322
-- On setType shift to state 215
-- On setOfValue shift to state 323
-- On setOfType shift to state 216
-- On sequenceValue shift to state 324
-- On sequenceType shift to state 217
-- On sequenceOfValue shift to state 325
-- On sequenceOfType shift to state 218
-- On separated_nonempty_list(Comma,actualParameter) shift to state 683
-- On selectionType shift to state 219
-- On restrictedCharacterStringValue shift to state 326
-- On restrictedCharacterStringType shift to state 220
-- On relativeOIDValue shift to state 327
-- On relativeOIDType shift to state 221
-- On referencedValue shift to state 328
-- On referencedType shift to state 222
-- On referencedObjects shift to state 587
-- On realValue shift to state 332
-- On realType shift to state 232
-- On quadruple shift to state 333
-- On parameterizedValueSetType shift to state 233
-- On parameterizedValue shift to state 135
-- On parameterizedType shift to state 234
-- On parameterizedObjectSet shift to state 235
-- On parameterizedObject shift to state 524
-- On openTypeFieldVal shift to state 334
-- On octetStringValue shift to state 335
-- On octetStringType shift to state 237
-- On object_x shift to state 685
-- On objectSet shift to state 686
-- On objectIdentifierValue shift to state 336
-- On objectIdentifierType shift to state 238
-- On objectFromObject shift to state 528
-- On objectDefn shift to state 529
-- On objectClassFieldValue shift to state 337
-- On objectClassFieldType shift to state 239
-- On numericRealValue shift to state 338
-- On nullValue shift to state 339
-- On nullType shift to state 240
-- On integerValue shift to state 340
-- On integerType shift to state 241
-- On instanceOfType shift to state 242
-- On fixedTypeFieldVal shift to state 341
-- On externalValueReference shift to state 136
-- On externalValue shift to state 342
-- On externalTypeReference shift to state 243
-- On externalType shift to state 244
-- On externalObjectSetReference shift to state 245
-- On externalObjectReference shift to state 246
-- On externalObjectClassReference shift to state 164
-- On enumeratedValue shift to state 343
-- On enumeratedType shift to state 247
-- On embeddedPDVValue shift to state 344
-- On embeddedPDVType shift to state 248
-- On definedValue shift to state 345
-- On definedType shift to state 249
-- On definedObjectSet shift to state 250
-- On definedObjectClass shift to state 687
-- On definedObject shift to state 545
-- On defaultSyntax shift to state 546
-- On constrainedType shift to state 257
-- On choiceValue shift to state 346
-- On choiceType shift to state 258
-- On characterStringValue shift to state 347
-- On characterStringType shift to state 259
-- On characterStringList shift to state 348
-- On builtinValue shift to state 349
-- On builtinType shift to state 260
-- On booleanValue shift to state 350
-- On booleanType shift to state 261
-- On bitStringValue shift to state 351
-- On bitStringType shift to state 262
-- On actualParameter shift to state 688
## Reductions:

State 66:
## Known stack suffix:
## VisibleString
## LR(1) items:
restrictedCharacterStringType -> VisibleString . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
## Reductions:
-- On Upper reduce production restrictedCharacterStringType -> VisibleString
-- On UNIQUE reduce production restrictedCharacterStringType -> VisibleString
-- On UNION reduce production restrictedCharacterStringType -> VisibleString
-- On RightParen reduce production restrictedCharacterStringType -> VisibleString
-- On RightDoubleBracket reduce production restrictedCharacterStringType -> VisibleString
-- On RightBrace reduce production restrictedCharacterStringType -> VisibleString
-- On OPTIONAL reduce production restrictedCharacterStringType -> VisibleString
-- On Middle reduce production restrictedCharacterStringType -> VisibleString
-- On Lower reduce production restrictedCharacterStringType -> VisibleString
-- On LeftParen reduce production restrictedCharacterStringType -> VisibleString
-- On INTERSECTION reduce production restrictedCharacterStringType -> VisibleString
-- On EXCEPT reduce production restrictedCharacterStringType -> VisibleString
-- On END reduce production restrictedCharacterStringType -> VisibleString
-- On ENCODED reduce production restrictedCharacterStringType -> VisibleString
-- On DEFAULT reduce production restrictedCharacterStringType -> VisibleString
-- On Comma reduce production restrictedCharacterStringType -> VisibleString
-- On Colon reduce production restrictedCharacterStringType -> VisibleString
-- On Circumflex reduce production restrictedCharacterStringType -> VisibleString
-- On Bang reduce production restrictedCharacterStringType -> VisibleString
-- On Assignment reduce production restrictedCharacterStringType -> VisibleString

State 67:
## Known stack suffix:
## VideotexString
## LR(1) items:
restrictedCharacterStringType -> VideotexString . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
## Reductions:
-- On Upper reduce production restrictedCharacterStringType -> VideotexString
-- On UNIQUE reduce production restrictedCharacterStringType -> VideotexString
-- On UNION reduce production restrictedCharacterStringType -> VideotexString
-- On RightParen reduce production restrictedCharacterStringType -> VideotexString
-- On RightDoubleBracket reduce production restrictedCharacterStringType -> VideotexString
-- On RightBrace reduce production restrictedCharacterStringType -> VideotexString
-- On OPTIONAL reduce production restrictedCharacterStringType -> VideotexString
-- On Middle reduce production restrictedCharacterStringType -> VideotexString
-- On Lower reduce production restrictedCharacterStringType -> VideotexString
-- On LeftParen reduce production restrictedCharacterStringType -> VideotexString
-- On INTERSECTION reduce production restrictedCharacterStringType -> VideotexString
-- On EXCEPT reduce production restrictedCharacterStringType -> VideotexString
-- On END reduce production restrictedCharacterStringType -> VideotexString
-- On ENCODED reduce production restrictedCharacterStringType -> VideotexString
-- On DEFAULT reduce production restrictedCharacterStringType -> VideotexString
-- On Comma reduce production restrictedCharacterStringType -> VideotexString
-- On Colon reduce production restrictedCharacterStringType -> VideotexString
-- On Circumflex reduce production restrictedCharacterStringType -> VideotexString
-- On Bang reduce production restrictedCharacterStringType -> VideotexString
-- On Assignment reduce production restrictedCharacterStringType -> VideotexString

State 68:
## Known stack suffix:
## Upper
## LR(1) items:
definedObjectClass -> Upper . [ RightBrace Dot Comma ]
definedObjectSet -> Upper . [ LeftBrace Dot ]
definedType -> Upper . [ RightBrace LeftParen Comma Colon ]
externalObjectClassReference -> Upper . Dot Upper [ RightBrace Dot Comma ]
externalObjectReference -> Upper . Dot Lower [ RightBrace LeftBrace Dot Comma ]
externalObjectSetReference -> Upper . Dot Upper [ LeftBrace Dot ]
externalTypeReference -> Upper . Dot Upper [ RightBrace LeftParen LeftBrace Comma Colon ]
externalValueReference -> Upper . Dot Lower [ RightBrace LeftBrace Comma ]
simpleDefinedType -> Upper . [ LeftBrace ]
## Transitions:
-- On Dot shift to state 69
## Reductions:
-- On RightBrace reduce production definedType -> Upper
-- On LeftParen reduce production definedType -> Upper
-- On LeftBrace reduce production definedObjectSet -> Upper
-- On Comma reduce production definedType -> Upper
-- On Colon reduce production definedType -> Upper

State 69:
## Known stack suffix:
## Upper Dot
## LR(1) items:
externalObjectClassReference -> Upper Dot . Upper [ RightBrace Dot Comma ]
externalObjectReference -> Upper Dot . Lower [ RightBrace LeftBrace Dot Comma ]
externalObjectSetReference -> Upper Dot . Upper [ LeftBrace Dot ]
externalTypeReference -> Upper Dot . Upper [ RightBrace LeftParen LeftBrace Comma Colon ]
externalValueReference -> Upper Dot . Lower [ RightBrace LeftBrace Comma ]
## Transitions:
-- On Upper shift to state 70
-- On Lower shift to state 71
## Reductions:

State 70:
## Known stack suffix:
## Upper Dot Upper
## LR(1) items:
externalObjectClassReference -> Upper Dot Upper . [ Upper RightBrace OPTIONAL Lower END Dot DEFAULT Comma Colon Assignment ]
externalObjectSetReference -> Upper Dot Upper . [ LeftBrace Dot ]
externalTypeReference -> Upper Dot Upper . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen LeftBrace INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
## Reductions:
-- On Upper reduce production externalTypeReference -> Upper Dot Upper
-- On UNIQUE reduce production externalTypeReference -> Upper Dot Upper
-- On UNION reduce production externalTypeReference -> Upper Dot Upper
-- On RightParen reduce production externalTypeReference -> Upper Dot Upper
-- On RightDoubleBracket reduce production externalTypeReference -> Upper Dot Upper
-- On RightBrace reduce production externalTypeReference -> Upper Dot Upper
-- On OPTIONAL reduce production externalTypeReference -> Upper Dot Upper
-- On Middle reduce production externalTypeReference -> Upper Dot Upper
-- On Lower reduce production externalTypeReference -> Upper Dot Upper
-- On LeftParen reduce production externalTypeReference -> Upper Dot Upper
-- On LeftBrace reduce production externalTypeReference -> Upper Dot Upper
-- On INTERSECTION reduce production externalTypeReference -> Upper Dot Upper
-- On EXCEPT reduce production externalTypeReference -> Upper Dot Upper
-- On END reduce production externalTypeReference -> Upper Dot Upper
-- On ENCODED reduce production externalTypeReference -> Upper Dot Upper
-- On Dot reduce production externalObjectClassReference -> Upper Dot Upper
-- On DEFAULT reduce production externalTypeReference -> Upper Dot Upper
-- On Comma reduce production externalTypeReference -> Upper Dot Upper
-- On Colon reduce production externalTypeReference -> Upper Dot Upper
-- On Circumflex reduce production externalTypeReference -> Upper Dot Upper
-- On Bang reduce production externalTypeReference -> Upper Dot Upper
-- On Assignment reduce production externalTypeReference -> Upper Dot Upper

State 71:
## Known stack suffix:
## Upper Dot Lower
## LR(1) items:
externalObjectReference -> Upper Dot Lower . [ UNION RightParen RightBrace Middle LeftBrace INTERSECTION EXCEPT Dot Comma Circumflex Bang ]
externalValueReference -> Upper Dot Lower . [ Upper UNION RightParen RightDoubleBracket RightBrace Number Middle Lower LessThan LeftBrace INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
## Transitions:
## Reductions:
-- On Upper reduce production externalValueReference -> Upper Dot Lower
-- On UNION reduce production externalValueReference -> Upper Dot Lower
-- On RightParen reduce production externalValueReference -> Upper Dot Lower
-- On RightDoubleBracket reduce production externalValueReference -> Upper Dot Lower
-- On RightBrace reduce production externalValueReference -> Upper Dot Lower
-- On Number reduce production externalValueReference -> Upper Dot Lower
-- On Middle reduce production externalValueReference -> Upper Dot Lower
-- On Lower reduce production externalValueReference -> Upper Dot Lower
-- On LessThan reduce production externalValueReference -> Upper Dot Lower
-- On LeftBrace reduce production externalValueReference -> Upper Dot Lower
-- On INTERSECTION reduce production externalValueReference -> Upper Dot Lower
-- On EXCEPT reduce production externalValueReference -> Upper Dot Lower
-- On END reduce production externalValueReference -> Upper Dot Lower
-- On DoubleDot reduce production externalValueReference -> Upper Dot Lower
-- On Dot reduce production externalObjectReference -> Upper Dot Lower
-- On Comma reduce production externalValueReference -> Upper Dot Lower
-- On Circumflex reduce production externalValueReference -> Upper Dot Lower
-- On Bang reduce production externalValueReference -> Upper Dot Lower

State 72:
## Known stack suffix:
## UniversalString
## LR(1) items:
restrictedCharacterStringType -> UniversalString . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
## Reductions:
-- On Upper reduce production restrictedCharacterStringType -> UniversalString
-- On UNIQUE reduce production restrictedCharacterStringType -> UniversalString
-- On UNION reduce production restrictedCharacterStringType -> UniversalString
-- On RightParen reduce production restrictedCharacterStringType -> UniversalString
-- On RightDoubleBracket reduce production restrictedCharacterStringType -> UniversalString
-- On RightBrace reduce production restrictedCharacterStringType -> UniversalString
-- On OPTIONAL reduce production restrictedCharacterStringType -> UniversalString
-- On Middle reduce production restrictedCharacterStringType -> UniversalString
-- On Lower reduce production restrictedCharacterStringType -> UniversalString
-- On LeftParen reduce production restrictedCharacterStringType -> UniversalString
-- On INTERSECTION reduce production restrictedCharacterStringType -> UniversalString
-- On EXCEPT reduce production restrictedCharacterStringType -> UniversalString
-- On END reduce production restrictedCharacterStringType -> UniversalString
-- On ENCODED reduce production restrictedCharacterStringType -> UniversalString
-- On DEFAULT reduce production restrictedCharacterStringType -> UniversalString
-- On Comma reduce production restrictedCharacterStringType -> UniversalString
-- On Colon reduce production restrictedCharacterStringType -> UniversalString
-- On Circumflex reduce production restrictedCharacterStringType -> UniversalString
-- On Bang reduce production restrictedCharacterStringType -> UniversalString
-- On Assignment reduce production restrictedCharacterStringType -> UniversalString

State 73:
## Known stack suffix:
## UTF8String
## LR(1) items:
restrictedCharacterStringType -> UTF8String . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
## Reductions:
-- On Upper reduce production restrictedCharacterStringType -> UTF8String
-- On UNIQUE reduce production restrictedCharacterStringType -> UTF8String
-- On UNION reduce production restrictedCharacterStringType -> UTF8String
-- On RightParen reduce production restrictedCharacterStringType -> UTF8String
-- On RightDoubleBracket reduce production restrictedCharacterStringType -> UTF8String
-- On RightBrace reduce production restrictedCharacterStringType -> UTF8String
-- On OPTIONAL reduce production restrictedCharacterStringType -> UTF8String
-- On Middle reduce production restrictedCharacterStringType -> UTF8String
-- On Lower reduce production restrictedCharacterStringType -> UTF8String
-- On LeftParen reduce production restrictedCharacterStringType -> UTF8String
-- On INTERSECTION reduce production restrictedCharacterStringType -> UTF8String
-- On EXCEPT reduce production restrictedCharacterStringType -> UTF8String
-- On END reduce production restrictedCharacterStringType -> UTF8String
-- On ENCODED reduce production restrictedCharacterStringType -> UTF8String
-- On DEFAULT reduce production restrictedCharacterStringType -> UTF8String
-- On Comma reduce production restrictedCharacterStringType -> UTF8String
-- On Colon reduce production restrictedCharacterStringType -> UTF8String
-- On Circumflex reduce production restrictedCharacterStringType -> UTF8String
-- On Bang reduce production restrictedCharacterStringType -> UTF8String
-- On Assignment reduce production restrictedCharacterStringType -> UTF8String

State 74:
## Known stack suffix:
## UTCTime
## LR(1) items:
usefulType -> UTCTime . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
## Reductions:
-- On Upper reduce production usefulType -> UTCTime
-- On UNIQUE reduce production usefulType -> UTCTime
-- On UNION reduce production usefulType -> UTCTime
-- On RightParen reduce production usefulType -> UTCTime
-- On RightDoubleBracket reduce production usefulType -> UTCTime
-- On RightBrace reduce production usefulType -> UTCTime
-- On OPTIONAL reduce production usefulType -> UTCTime
-- On Middle reduce production usefulType -> UTCTime
-- On Lower reduce production usefulType -> UTCTime
-- On LeftParen reduce production usefulType -> UTCTime
-- On INTERSECTION reduce production usefulType -> UTCTime
-- On EXCEPT reduce production usefulType -> UTCTime
-- On END reduce production usefulType -> UTCTime
-- On ENCODED reduce production usefulType -> UTCTime
-- On DEFAULT reduce production usefulType -> UTCTime
-- On Comma reduce production usefulType -> UTCTime
-- On Colon reduce production usefulType -> UTCTime
-- On Circumflex reduce production usefulType -> UTCTime
-- On Bang reduce production usefulType -> UTCTime
-- On Assignment reduce production usefulType -> UTCTime

State 75:
## Known stack suffix:
## TeletexString
## LR(1) items:
restrictedCharacterStringType -> TeletexString . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
## Reductions:
-- On Upper reduce production restrictedCharacterStringType -> TeletexString
-- On UNIQUE reduce production restrictedCharacterStringType -> TeletexString
-- On UNION reduce production restrictedCharacterStringType -> TeletexString
-- On RightParen reduce production restrictedCharacterStringType -> TeletexString
-- On RightDoubleBracket reduce production restrictedCharacterStringType -> TeletexString
-- On RightBrace reduce production restrictedCharacterStringType -> TeletexString
-- On OPTIONAL reduce production restrictedCharacterStringType -> TeletexString
-- On Middle reduce production restrictedCharacterStringType -> TeletexString
-- On Lower reduce production restrictedCharacterStringType -> TeletexString
-- On LeftParen reduce production restrictedCharacterStringType -> TeletexString
-- On INTERSECTION reduce production restrictedCharacterStringType -> TeletexString
-- On EXCEPT reduce production restrictedCharacterStringType -> TeletexString
-- On END reduce production restrictedCharacterStringType -> TeletexString
-- On ENCODED reduce production restrictedCharacterStringType -> TeletexString
-- On DEFAULT reduce production restrictedCharacterStringType -> TeletexString
-- On Comma reduce production restrictedCharacterStringType -> TeletexString
-- On Colon reduce production restrictedCharacterStringType -> TeletexString
-- On Circumflex reduce production restrictedCharacterStringType -> TeletexString
-- On Bang reduce production restrictedCharacterStringType -> TeletexString
-- On Assignment reduce production restrictedCharacterStringType -> TeletexString

State 76:
## Known stack suffix:
## TYPE_IDENTIFIER
## LR(1) items:
usefulObjectClassReference -> TYPE_IDENTIFIER . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED Dot DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
## Reductions:
-- On Upper reduce production usefulObjectClassReference -> TYPE_IDENTIFIER
-- On UNIQUE reduce production usefulObjectClassReference -> TYPE_IDENTIFIER
-- On UNION reduce production usefulObjectClassReference -> TYPE_IDENTIFIER
-- On RightParen reduce production usefulObjectClassReference -> TYPE_IDENTIFIER
-- On RightDoubleBracket reduce production usefulObjectClassReference -> TYPE_IDENTIFIER
-- On RightBrace reduce production usefulObjectClassReference -> TYPE_IDENTIFIER
-- On OPTIONAL reduce production usefulObjectClassReference -> TYPE_IDENTIFIER
-- On Middle reduce production usefulObjectClassReference -> TYPE_IDENTIFIER
-- On Lower reduce production usefulObjectClassReference -> TYPE_IDENTIFIER
-- On LeftParen reduce production usefulObjectClassReference -> TYPE_IDENTIFIER
-- On INTERSECTION reduce production usefulObjectClassReference -> TYPE_IDENTIFIER
-- On EXCEPT reduce production usefulObjectClassReference -> TYPE_IDENTIFIER
-- On END reduce production usefulObjectClassReference -> TYPE_IDENTIFIER
-- On ENCODED reduce production usefulObjectClassReference -> TYPE_IDENTIFIER
-- On Dot reduce production usefulObjectClassReference -> TYPE_IDENTIFIER
-- On DEFAULT reduce production usefulObjectClassReference -> TYPE_IDENTIFIER
-- On Comma reduce production usefulObjectClassReference -> TYPE_IDENTIFIER
-- On Colon reduce production usefulObjectClassReference -> TYPE_IDENTIFIER
-- On Circumflex reduce production usefulObjectClassReference -> TYPE_IDENTIFIER
-- On Bang reduce production usefulObjectClassReference -> TYPE_IDENTIFIER
-- On Assignment reduce production usefulObjectClassReference -> TYPE_IDENTIFIER

State 77:
## Known stack suffix:
## TRUE
## LR(1) items:
booleanValue -> TRUE . [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
## Transitions:
## Reductions:
-- On Upper reduce production booleanValue -> TRUE
-- On UNION reduce production booleanValue -> TRUE
-- On RightParen reduce production booleanValue -> TRUE
-- On RightDoubleBracket reduce production booleanValue -> TRUE
-- On RightBrace reduce production booleanValue -> TRUE
-- On Middle reduce production booleanValue -> TRUE
-- On Lower reduce production booleanValue -> TRUE
-- On LessThan reduce production booleanValue -> TRUE
-- On INTERSECTION reduce production booleanValue -> TRUE
-- On EXCEPT reduce production booleanValue -> TRUE
-- On END reduce production booleanValue -> TRUE
-- On DoubleDot reduce production booleanValue -> TRUE
-- On Comma reduce production booleanValue -> TRUE
-- On Circumflex reduce production booleanValue -> TRUE
-- On Bang reduce production booleanValue -> TRUE

State 78:
## Known stack suffix:
## T61String
## LR(1) items:
restrictedCharacterStringType -> T61String . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
## Reductions:
-- On Upper reduce production restrictedCharacterStringType -> T61String
-- On UNIQUE reduce production restrictedCharacterStringType -> T61String
-- On UNION reduce production restrictedCharacterStringType -> T61String
-- On RightParen reduce production restrictedCharacterStringType -> T61String
-- On RightDoubleBracket reduce production restrictedCharacterStringType -> T61String
-- On RightBrace reduce production restrictedCharacterStringType -> T61String
-- On OPTIONAL reduce production restrictedCharacterStringType -> T61String
-- On Middle reduce production restrictedCharacterStringType -> T61String
-- On Lower reduce production restrictedCharacterStringType -> T61String
-- On LeftParen reduce production restrictedCharacterStringType -> T61String
-- On INTERSECTION reduce production restrictedCharacterStringType -> T61String
-- On EXCEPT reduce production restrictedCharacterStringType -> T61String
-- On END reduce production restrictedCharacterStringType -> T61String
-- On ENCODED reduce production restrictedCharacterStringType -> T61String
-- On DEFAULT reduce production restrictedCharacterStringType -> T61String
-- On Comma reduce production restrictedCharacterStringType -> T61String
-- On Colon reduce production restrictedCharacterStringType -> T61String
-- On Circumflex reduce production restrictedCharacterStringType -> T61String
-- On Bang reduce production restrictedCharacterStringType -> T61String
-- On Assignment reduce production restrictedCharacterStringType -> T61String

State 79:
## Known stack suffix:
## SET
## LR(1) items:
setOfType -> SET . OF type_x [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
setOfType -> SET . OF namedType [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
setType -> SET . LeftBrace RightBrace [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
setType -> SET . LeftBrace extensionAndException optionalExtensionMarker RightBrace [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
setType -> SET . LeftBrace componentTypeLists RightBrace [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
typeWithConstraint -> SET . constraint_x OF type_x [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
typeWithConstraint -> SET . sizeConstraint OF type_x [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
typeWithConstraint -> SET . constraint_x OF namedType [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
typeWithConstraint -> SET . sizeConstraint OF namedType [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
-- On SIZE shift to state 80
-- On OF shift to state 662
-- On LeftParen shift to state 81
-- On LeftBrace shift to state 665
-- On sizeConstraint shift to state 672
-- On constraint_x shift to state 676
## Reductions:

State 80:
## Known stack suffix:
## SIZE
## LR(1) items:
sizeConstraint -> SIZE . constraint_x [ UNION RightParen RightBrace OF Middle INTERSECTION EXCEPT Comma Circumflex Bang ]
## Transitions:
-- On LeftParen shift to state 81
-- On constraint_x shift to state 661
## Reductions:

State 81:
## Known stack suffix:
## LeftParen
## LR(1) items:
constraint_x -> LeftParen . constraintSpec exceptionSpec RightParen [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace PRESENT OPTIONAL OF Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ABSENT ]
## Transitions:
-- On WITH shift to state 82
-- On VisibleString shift to state 66
-- On VideotexString shift to state 67
-- On Upper shift to state 108
-- On UniversalString shift to state 72
-- On UTF8String shift to state 73
-- On UTCTime shift to state 74
-- On TeletexString shift to state 75
-- On TYPE_IDENTIFIER shift to state 76
-- On TRUE shift to state 77
-- On T61String shift to state 78
-- On SIZE shift to state 80
-- On SET shift to state 79
-- On SEQUENCE shift to state 111
-- On RealNumber shift to state 296
-- On RELATIVE_OID shift to state 116
-- On REAL shift to state 117
-- On PrintableString shift to state 118
-- On PLUS_INFINITY shift to state 297
-- On PATTERN shift to state 495
-- On ObjectDescriptor shift to state 119
-- On OCTET shift to state 120
-- On OBJECT shift to state 122
-- On NumericString shift to state 124
-- On Number shift to state 145
-- On NULL shift to state 298
-- On MINUS_INFINITY shift to state 299
-- On MIN shift to state 497
-- On Lower shift to state 300
-- On LeftParen shift to state 498
-- On LeftBracket shift to state 129
-- On LeftBrace shift to state 594
-- On ISO646String shift to state 140
-- On INTEGER shift to state 141
-- On INSTANCE shift to state 157
-- On INCLUDES shift to state 503
-- On IA5String shift to state 166
-- On Hyphen shift to state 306
-- On Hstring shift to state 308
-- On GraphicString shift to state 167
-- On GeneralizedTime shift to state 168
-- On GeneralString shift to state 169
-- On FROM shift to state 504
-- On FALSE shift to state 309
-- On EXTERNAL shift to state 170
-- On ENUMERATED shift to state 171
-- On ENCODED shift to state 619
-- On EMBEDDED shift to state 179
-- On DefinedSyntax shift to state 508
-- On Cstring shift to state 310
-- On CONTAINING shift to state 622
-- On CONSTRAINED shift to state 627
-- On CHOICE shift to state 181
-- On CHARACTER shift to state 184
-- On Bstring shift to state 312
-- On BOOLEAN shift to state 186
-- On BMPString shift to state 187
-- On BIT shift to state 188
-- On ALL shift to state 509
-- On ABSTRACT_SYNTAX shift to state 162
-- On valueSetFromObjects shift to state 202
-- On valueRange shift to state 511
-- On valueFromObject shift to state 313
-- On value shift to state 512
-- On userDefinedConstraint shift to state 644
-- On usefulType shift to state 203
-- On usefulObjectClassReference shift to state 163
-- On unrestrictedCharacterStringValue shift to state 315
-- On unrestrictedCharacterStringType shift to state 204
-- On unions shift to state 549
-- On uElems shift to state 550
-- On type_x shift to state 513
-- On typeWithConstraint shift to state 207
-- On typeFromObject shift to state 208
-- On typeConstraint shift to state 514
-- On tuple shift to state 319
-- On taggedType shift to state 209
-- On tag shift to state 210
-- On tableConstraint shift to state 645
-- On subtypeElements shift to state 515
-- On subtypeConstraint shift to state 646
-- On specialRealValue shift to state 320
-- On sizeConstraint shift to state 516
-- On singleValue shift to state 517
-- On simpleTableConstraint shift to state 647
-- On simpleDefinedValue shift to state 64
-- On simpleDefinedType shift to state 213
-- On signedNumber shift to state 321
-- On setValue shift to state 322
-- On setType shift to state 215
-- On setOfValue shift to state 323
-- On setOfType shift to state 216
-- On sequenceValue shift to state 324
-- On sequenceType shift to state 217
-- On sequenceOfValue shift to state 325
-- On sequenceOfType shift to state 218
-- On selectionType shift to state 219
-- On rootElementSetSpec shift to state 648
-- On restrictedCharacterStringValue shift to state 326
-- On restrictedCharacterStringType shift to state 220
-- On relativeOIDValue shift to state 327
-- On relativeOIDType shift to state 221
-- On referencedValue shift to state 328
-- On referencedType shift to state 222
-- On referencedObjects shift to state 518
-- On realValue shift to state 332
-- On realType shift to state 232
-- On quadruple shift to state 333
-- On permittedAlphabet shift to state 521
-- On patternConstraint shift to state 522
-- On parameterizedValueSetType shift to state 233
-- On parameterizedValue shift to state 135
-- On parameterizedType shift to state 234
-- On parameterizedObjectSet shift to state 523
-- On parameterizedObject shift to state 524
-- On openTypeFieldVal shift to state 334
-- On octetStringValue shift to state 335
-- On octetStringType shift to state 237
-- On object_x shift to state 525
-- On objectSetFromObjects shift to state 526
-- On objectSetElements shift to state 527
-- On objectSet shift to state 653
-- On objectIdentifierValue shift to state 336
-- On objectIdentifierType shift to state 238
-- On objectFromObject shift to state 528
-- On objectDefn shift to state 529
-- On objectClassFieldValue shift to state 337
-- On objectClassFieldType shift to state 239
-- On numericRealValue shift to state 338
-- On nullValue shift to state 339
-- On nullType shift to state 240
-- On lowerEndValue shift to state 530
-- On lowerEndPoint shift to state 532
-- On intersections shift to state 564
-- On intersectionElements shift to state 555
-- On integerValue shift to state 340
-- On integerType shift to state 241
-- On instanceOfType shift to state 242
-- On innerTypeConstraints shift to state 540
-- On includes shift to state 541
-- On iElems shift to state 556
-- On generalConstraint shift to state 654
-- On fixedTypeFieldVal shift to state 341
-- On externalValueReference shift to state 136
-- On externalValue shift to state 342
-- On externalTypeReference shift to state 243
-- On externalType shift to state 244
-- On externalObjectSetReference shift to state 245
-- On externalObjectReference shift to state 246
-- On externalObjectClassReference shift to state 164
-- On enumeratedValue shift to state 343
-- On enumeratedType shift to state 247
-- On embeddedPDVValue shift to state 344
-- On embeddedPDVType shift to state 248
-- On elems shift to state 561
-- On elements shift to state 563
-- On elementSetSpecs shift to state 655
-- On elementSetSpec shift to state 582
-- On definedValue shift to state 345
-- On definedType shift to state 249
-- On definedObjectSet shift to state 544
-- On definedObjectClass shift to state 252
-- On definedObject shift to state 545
-- On defaultSyntax shift to state 546
-- On contentsConstraint shift to state 656
-- On containedSubtype shift to state 547
-- On constraintSpec shift to state 657
-- On constrainedType shift to state 257
-- On componentRelationConstraint shift to state 660
-- On choiceValue shift to state 346
-- On choiceType shift to state 258
-- On characterStringValue shift to state 347
-- On characterStringType shift to state 259
-- On characterStringList shift to state 348
-- On builtinValue shift to state 349
-- On builtinType shift to state 260
-- On booleanValue shift to state 350
-- On booleanType shift to state 261
-- On bitStringValue shift to state 351
-- On bitStringType shift to state 262
## Reductions:

State 82:
## Known stack suffix:
## WITH
## LR(1) items:
innerTypeConstraints -> WITH . COMPONENT singleTypeConstraint [ UNION RightParen RightBrace Middle INTERSECTION EXCEPT Comma Circumflex Bang ]
innerTypeConstraints -> WITH . COMPONENTS multipleTypeConstraints [ UNION RightParen RightBrace Middle INTERSECTION EXCEPT Comma Circumflex Bang ]
## Transitions:
-- On COMPONENTS shift to state 83
-- On COMPONENT shift to state 105
## Reductions:

State 83:
## Known stack suffix:
## WITH COMPONENTS
## LR(1) items:
innerTypeConstraints -> WITH COMPONENTS . multipleTypeConstraints [ UNION RightParen RightBrace Middle INTERSECTION EXCEPT Comma Circumflex Bang ]
## Transitions:
-- On LeftBrace shift to state 84
-- On partialSpecification shift to state 102
-- On multipleTypeConstraints shift to state 103
-- On fullSpecification shift to state 104
## Reductions:

State 84:
## Known stack suffix:
## LeftBrace
## LR(1) items:
fullSpecification -> LeftBrace . typeConstraints RightBrace [ UNION RightParen RightBrace Middle INTERSECTION EXCEPT Comma Circumflex Bang ]
partialSpecification -> LeftBrace . Ellipsis Comma typeConstraints RightBrace [ UNION RightParen RightBrace Middle INTERSECTION EXCEPT Comma Circumflex Bang ]
## Transitions:
-- On Lower shift to state 85
-- On Ellipsis shift to state 93
-- On typeConstraints shift to state 100
-- On namedConstraint shift to state 97
## Reductions:

State 85:
## Known stack suffix:
## Lower
## LR(1) items:
namedConstraint -> Lower . componentConstraint [ RightBrace Comma ]
## Transitions:
-- On LeftParen shift to state 81
-- On valueConstraint shift to state 86
-- On constraint_x shift to state 91
-- On componentConstraint shift to state 92
## Reductions:
-- On RightBrace reduce production valueConstraint ->
-- On PRESENT reduce production valueConstraint ->
-- On OPTIONAL reduce production valueConstraint ->
-- On Comma reduce production valueConstraint ->
-- On ABSENT reduce production valueConstraint ->

State 86:
## Known stack suffix:
## valueConstraint
## LR(1) items:
componentConstraint -> valueConstraint . presenceConstraint [ RightBrace Comma ]
## Transitions:
-- On PRESENT shift to state 87
-- On OPTIONAL shift to state 88
-- On ABSENT shift to state 89
-- On presenceConstraint shift to state 90
## Reductions:
-- On RightBrace reduce production presenceConstraint ->
-- On Comma reduce production presenceConstraint ->

State 87:
## Known stack suffix:
## PRESENT
## LR(1) items:
presenceConstraint -> PRESENT . [ RightBrace Comma ]
## Transitions:
## Reductions:
-- On RightBrace reduce production presenceConstraint -> PRESENT
-- On Comma reduce production presenceConstraint -> PRESENT

State 88:
## Known stack suffix:
## OPTIONAL
## LR(1) items:
presenceConstraint -> OPTIONAL . [ RightBrace Comma ]
## Transitions:
## Reductions:
-- On RightBrace reduce production presenceConstraint -> OPTIONAL
-- On Comma reduce production presenceConstraint -> OPTIONAL

State 89:
## Known stack suffix:
## ABSENT
## LR(1) items:
presenceConstraint -> ABSENT . [ RightBrace Comma ]
## Transitions:
## Reductions:
-- On RightBrace reduce production presenceConstraint -> ABSENT
-- On Comma reduce production presenceConstraint -> ABSENT

State 90:
## Known stack suffix:
## valueConstraint presenceConstraint
## LR(1) items:
componentConstraint -> valueConstraint presenceConstraint . [ RightBrace Comma ]
## Transitions:
## Reductions:
-- On RightBrace reduce production componentConstraint -> valueConstraint presenceConstraint
-- On Comma reduce production componentConstraint -> valueConstraint presenceConstraint

State 91:
## Known stack suffix:
## constraint_x
## LR(1) items:
valueConstraint -> constraint_x . [ RightBrace PRESENT OPTIONAL Comma ABSENT ]
## Transitions:
## Reductions:
-- On RightBrace reduce production valueConstraint -> constraint_x
-- On PRESENT reduce production valueConstraint -> constraint_x
-- On OPTIONAL reduce production valueConstraint -> constraint_x
-- On Comma reduce production valueConstraint -> constraint_x
-- On ABSENT reduce production valueConstraint -> constraint_x

State 92:
## Known stack suffix:
## Lower componentConstraint
## LR(1) items:
namedConstraint -> Lower componentConstraint . [ RightBrace Comma ]
## Transitions:
## Reductions:
-- On RightBrace reduce production namedConstraint -> Lower componentConstraint
-- On Comma reduce production namedConstraint -> Lower componentConstraint

State 93:
## Known stack suffix:
## LeftBrace Ellipsis
## LR(1) items:
partialSpecification -> LeftBrace Ellipsis . Comma typeConstraints RightBrace [ UNION RightParen RightBrace Middle INTERSECTION EXCEPT Comma Circumflex Bang ]
## Transitions:
-- On Comma shift to state 94
## Reductions:

State 94:
## Known stack suffix:
## LeftBrace Ellipsis Comma
## LR(1) items:
partialSpecification -> LeftBrace Ellipsis Comma . typeConstraints RightBrace [ UNION RightParen RightBrace Middle INTERSECTION EXCEPT Comma Circumflex Bang ]
## Transitions:
-- On Lower shift to state 85
-- On typeConstraints shift to state 95
-- On namedConstraint shift to state 97
## Reductions:

State 95:
## Known stack suffix:
## LeftBrace Ellipsis Comma typeConstraints
## LR(1) items:
partialSpecification -> LeftBrace Ellipsis Comma typeConstraints . RightBrace [ UNION RightParen RightBrace Middle INTERSECTION EXCEPT Comma Circumflex Bang ]
## Transitions:
-- On RightBrace shift to state 96
## Reductions:

State 96:
## Known stack suffix:
## LeftBrace Ellipsis Comma typeConstraints RightBrace
## LR(1) items:
partialSpecification -> LeftBrace Ellipsis Comma typeConstraints RightBrace . [ UNION RightParen RightBrace Middle INTERSECTION EXCEPT Comma Circumflex Bang ]
## Transitions:
## Reductions:
-- On UNION reduce production partialSpecification -> LeftBrace Ellipsis Comma typeConstraints RightBrace
-- On RightParen reduce production partialSpecification -> LeftBrace Ellipsis Comma typeConstraints RightBrace
-- On RightBrace reduce production partialSpecification -> LeftBrace Ellipsis Comma typeConstraints RightBrace
-- On Middle reduce production partialSpecification -> LeftBrace Ellipsis Comma typeConstraints RightBrace
-- On INTERSECTION reduce production partialSpecification -> LeftBrace Ellipsis Comma typeConstraints RightBrace
-- On EXCEPT reduce production partialSpecification -> LeftBrace Ellipsis Comma typeConstraints RightBrace
-- On Comma reduce production partialSpecification -> LeftBrace Ellipsis Comma typeConstraints RightBrace
-- On Circumflex reduce production partialSpecification -> LeftBrace Ellipsis Comma typeConstraints RightBrace
-- On Bang reduce production partialSpecification -> LeftBrace Ellipsis Comma typeConstraints RightBrace

State 97:
## Known stack suffix:
## namedConstraint
## LR(1) items:
typeConstraints -> namedConstraint . [ RightBrace ]
typeConstraints -> namedConstraint . Comma typeConstraints [ RightBrace ]
## Transitions:
-- On Comma shift to state 98
## Reductions:
-- On RightBrace reduce production typeConstraints -> namedConstraint

State 98:
## Known stack suffix:
## namedConstraint Comma
## LR(1) items:
typeConstraints -> namedConstraint Comma . typeConstraints [ RightBrace ]
## Transitions:
-- On Lower shift to state 85
-- On typeConstraints shift to state 99
-- On namedConstraint shift to state 97
## Reductions:

State 99:
## Known stack suffix:
## namedConstraint Comma typeConstraints
## LR(1) items:
typeConstraints -> namedConstraint Comma typeConstraints . [ RightBrace ]
## Transitions:
## Reductions:
-- On RightBrace reduce production typeConstraints -> namedConstraint Comma typeConstraints

State 100:
## Known stack suffix:
## LeftBrace typeConstraints
## LR(1) items:
fullSpecification -> LeftBrace typeConstraints . RightBrace [ UNION RightParen RightBrace Middle INTERSECTION EXCEPT Comma Circumflex Bang ]
## Transitions:
-- On RightBrace shift to state 101
## Reductions:

State 101:
## Known stack suffix:
## LeftBrace typeConstraints RightBrace
## LR(1) items:
fullSpecification -> LeftBrace typeConstraints RightBrace . [ UNION RightParen RightBrace Middle INTERSECTION EXCEPT Comma Circumflex Bang ]
## Transitions:
## Reductions:
-- On UNION reduce production fullSpecification -> LeftBrace typeConstraints RightBrace
-- On RightParen reduce production fullSpecification -> LeftBrace typeConstraints RightBrace
-- On RightBrace reduce production fullSpecification -> LeftBrace typeConstraints RightBrace
-- On Middle reduce production fullSpecification -> LeftBrace typeConstraints RightBrace
-- On INTERSECTION reduce production fullSpecification -> LeftBrace typeConstraints RightBrace
-- On EXCEPT reduce production fullSpecification -> LeftBrace typeConstraints RightBrace
-- On Comma reduce production fullSpecification -> LeftBrace typeConstraints RightBrace
-- On Circumflex reduce production fullSpecification -> LeftBrace typeConstraints RightBrace
-- On Bang reduce production fullSpecification -> LeftBrace typeConstraints RightBrace

State 102:
## Known stack suffix:
## partialSpecification
## LR(1) items:
multipleTypeConstraints -> partialSpecification . [ UNION RightParen RightBrace Middle INTERSECTION EXCEPT Comma Circumflex Bang ]
## Transitions:
## Reductions:
-- On UNION reduce production multipleTypeConstraints -> partialSpecification
-- On RightParen reduce production multipleTypeConstraints -> partialSpecification
-- On RightBrace reduce production multipleTypeConstraints -> partialSpecification
-- On Middle reduce production multipleTypeConstraints -> partialSpecification
-- On INTERSECTION reduce production multipleTypeConstraints -> partialSpecification
-- On EXCEPT reduce production multipleTypeConstraints -> partialSpecification
-- On Comma reduce production multipleTypeConstraints -> partialSpecification
-- On Circumflex reduce production multipleTypeConstraints -> partialSpecification
-- On Bang reduce production multipleTypeConstraints -> partialSpecification

State 103:
## Known stack suffix:
## WITH COMPONENTS multipleTypeConstraints
## LR(1) items:
innerTypeConstraints -> WITH COMPONENTS multipleTypeConstraints . [ UNION RightParen RightBrace Middle INTERSECTION EXCEPT Comma Circumflex Bang ]
## Transitions:
## Reductions:
-- On UNION reduce production innerTypeConstraints -> WITH COMPONENTS multipleTypeConstraints
-- On RightParen reduce production innerTypeConstraints -> WITH COMPONENTS multipleTypeConstraints
-- On RightBrace reduce production innerTypeConstraints -> WITH COMPONENTS multipleTypeConstraints
-- On Middle reduce production innerTypeConstraints -> WITH COMPONENTS multipleTypeConstraints
-- On INTERSECTION reduce production innerTypeConstraints -> WITH COMPONENTS multipleTypeConstraints
-- On EXCEPT reduce production innerTypeConstraints -> WITH COMPONENTS multipleTypeConstraints
-- On Comma reduce production innerTypeConstraints -> WITH COMPONENTS multipleTypeConstraints
-- On Circumflex reduce production innerTypeConstraints -> WITH COMPONENTS multipleTypeConstraints
-- On Bang reduce production innerTypeConstraints -> WITH COMPONENTS multipleTypeConstraints

State 104:
## Known stack suffix:
## fullSpecification
## LR(1) items:
multipleTypeConstraints -> fullSpecification . [ UNION RightParen RightBrace Middle INTERSECTION EXCEPT Comma Circumflex Bang ]
## Transitions:
## Reductions:
-- On UNION reduce production multipleTypeConstraints -> fullSpecification
-- On RightParen reduce production multipleTypeConstraints -> fullSpecification
-- On RightBrace reduce production multipleTypeConstraints -> fullSpecification
-- On Middle reduce production multipleTypeConstraints -> fullSpecification
-- On INTERSECTION reduce production multipleTypeConstraints -> fullSpecification
-- On EXCEPT reduce production multipleTypeConstraints -> fullSpecification
-- On Comma reduce production multipleTypeConstraints -> fullSpecification
-- On Circumflex reduce production multipleTypeConstraints -> fullSpecification
-- On Bang reduce production multipleTypeConstraints -> fullSpecification

State 105:
## Known stack suffix:
## WITH COMPONENT
## LR(1) items:
innerTypeConstraints -> WITH COMPONENT . singleTypeConstraint [ UNION RightParen RightBrace Middle INTERSECTION EXCEPT Comma Circumflex Bang ]
## Transitions:
-- On LeftParen shift to state 81
-- On singleTypeConstraint shift to state 106
-- On constraint_x shift to state 107
## Reductions:

State 106:
## Known stack suffix:
## WITH COMPONENT singleTypeConstraint
## LR(1) items:
innerTypeConstraints -> WITH COMPONENT singleTypeConstraint . [ UNION RightParen RightBrace Middle INTERSECTION EXCEPT Comma Circumflex Bang ]
## Transitions:
## Reductions:
-- On UNION reduce production innerTypeConstraints -> WITH COMPONENT singleTypeConstraint
-- On RightParen reduce production innerTypeConstraints -> WITH COMPONENT singleTypeConstraint
-- On RightBrace reduce production innerTypeConstraints -> WITH COMPONENT singleTypeConstraint
-- On Middle reduce production innerTypeConstraints -> WITH COMPONENT singleTypeConstraint
-- On INTERSECTION reduce production innerTypeConstraints -> WITH COMPONENT singleTypeConstraint
-- On EXCEPT reduce production innerTypeConstraints -> WITH COMPONENT singleTypeConstraint
-- On Comma reduce production innerTypeConstraints -> WITH COMPONENT singleTypeConstraint
-- On Circumflex reduce production innerTypeConstraints -> WITH COMPONENT singleTypeConstraint
-- On Bang reduce production innerTypeConstraints -> WITH COMPONENT singleTypeConstraint

State 107:
## Known stack suffix:
## constraint_x
## LR(1) items:
singleTypeConstraint -> constraint_x . [ UNION RightParen RightBrace Middle INTERSECTION EXCEPT Comma Circumflex Bang ]
## Transitions:
## Reductions:
-- On UNION reduce production singleTypeConstraint -> constraint_x
-- On RightParen reduce production singleTypeConstraint -> constraint_x
-- On RightBrace reduce production singleTypeConstraint -> constraint_x
-- On Middle reduce production singleTypeConstraint -> constraint_x
-- On INTERSECTION reduce production singleTypeConstraint -> constraint_x
-- On EXCEPT reduce production singleTypeConstraint -> constraint_x
-- On Comma reduce production singleTypeConstraint -> constraint_x
-- On Circumflex reduce production singleTypeConstraint -> constraint_x
-- On Bang reduce production singleTypeConstraint -> constraint_x

State 108:
## Known stack suffix:
## Upper
## LR(1) items:
definedObjectClass -> Upper . [ Dot ]
definedObjectSet -> Upper . [ UNION RightParen RightBrace Middle LeftBrace INTERSECTION EXCEPT Dot Comma Circumflex Bang ]
definedType -> Upper . [ UNION RightParen RightBrace Middle LeftParen INTERSECTION EXCEPT ENCODED Comma Colon Circumflex Bang ]
externalObjectClassReference -> Upper . Dot Upper [ Dot ]
externalObjectReference -> Upper . Dot Lower [ UNION RightParen RightBrace Middle LeftBrace INTERSECTION EXCEPT Dot Comma Circumflex Bang ]
externalObjectSetReference -> Upper . Dot Upper [ UNION RightParen RightBrace Middle LeftBrace INTERSECTION EXCEPT Dot Comma Circumflex Bang ]
externalTypeReference -> Upper . Dot Upper [ UNION RightParen RightBrace Middle LeftParen LeftBrace INTERSECTION EXCEPT ENCODED Comma Colon Circumflex Bang ]
externalValueReference -> Upper . Dot Lower [ Upper UNION RightParen RightDoubleBracket RightBrace Number Middle Lower LessThan LeftBrace INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
simpleDefinedType -> Upper . [ LeftBrace ]
## Transitions:
-- On Dot shift to state 109
## Reductions:
-- On UNION reduce production definedType -> Upper
-- On RightParen reduce production definedType -> Upper
-- On RightBrace reduce production definedType -> Upper
-- On Middle reduce production definedType -> Upper
-- On LeftParen reduce production definedType -> Upper
-- On LeftBrace reduce production definedObjectSet -> Upper
-- On INTERSECTION reduce production definedType -> Upper
-- On EXCEPT reduce production definedType -> Upper
-- On ENCODED reduce production definedType -> Upper
-- On Comma reduce production definedType -> Upper
-- On Colon reduce production definedType -> Upper
-- On Circumflex reduce production definedType -> Upper
-- On Bang reduce production definedType -> Upper

State 109:
## Known stack suffix:
## Upper Dot
## LR(1) items:
externalObjectClassReference -> Upper Dot . Upper [ Dot ]
externalObjectReference -> Upper Dot . Lower [ UNION RightParen RightBrace Middle LeftBrace INTERSECTION EXCEPT Dot Comma Circumflex Bang ]
externalObjectSetReference -> Upper Dot . Upper [ UNION RightParen RightBrace Middle LeftBrace INTERSECTION EXCEPT Dot Comma Circumflex Bang ]
externalTypeReference -> Upper Dot . Upper [ UNION RightParen RightBrace Middle LeftParen LeftBrace INTERSECTION EXCEPT ENCODED Comma Colon Circumflex Bang ]
externalValueReference -> Upper Dot . Lower [ Upper UNION RightParen RightDoubleBracket RightBrace Number Middle Lower LessThan LeftBrace INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
## Transitions:
-- On Upper shift to state 110
-- On Lower shift to state 71
## Reductions:

State 110:
## Known stack suffix:
## Upper Dot Upper
## LR(1) items:
externalObjectClassReference -> Upper Dot Upper . [ Dot ]
externalObjectSetReference -> Upper Dot Upper . [ UNION RightParen RightBrace Middle LeftBrace INTERSECTION EXCEPT Dot Comma Circumflex Bang ]
externalTypeReference -> Upper Dot Upper . [ UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle LeftParen LeftBrace INTERSECTION EXCEPT ENCODED DEFAULT Comma Colon Circumflex Bang ]
## Transitions:
## Reductions:
-- On UNION reduce production externalTypeReference -> Upper Dot Upper
-- On RightParen reduce production externalTypeReference -> Upper Dot Upper
-- On RightDoubleBracket reduce production externalTypeReference -> Upper Dot Upper
-- On RightBrace reduce production externalTypeReference -> Upper Dot Upper
-- On OPTIONAL reduce production externalTypeReference -> Upper Dot Upper
-- On Middle reduce production externalTypeReference -> Upper Dot Upper
-- On LeftParen reduce production externalTypeReference -> Upper Dot Upper
-- On LeftBrace reduce production externalTypeReference -> Upper Dot Upper
-- On INTERSECTION reduce production externalTypeReference -> Upper Dot Upper
-- On EXCEPT reduce production externalTypeReference -> Upper Dot Upper
-- On ENCODED reduce production externalTypeReference -> Upper Dot Upper
-- On Dot reduce production externalObjectClassReference -> Upper Dot Upper
-- On DEFAULT reduce production externalTypeReference -> Upper Dot Upper
-- On Comma reduce production externalTypeReference -> Upper Dot Upper
-- On Colon reduce production externalTypeReference -> Upper Dot Upper
-- On Circumflex reduce production externalTypeReference -> Upper Dot Upper
-- On Bang reduce production externalTypeReference -> Upper Dot Upper

State 111:
## Known stack suffix:
## SEQUENCE
## LR(1) items:
sequenceOfType -> SEQUENCE . OF type_x [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
sequenceOfType -> SEQUENCE . OF namedType [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
sequenceType -> SEQUENCE . LeftBrace RightBrace [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
sequenceType -> SEQUENCE . LeftBrace extensionAndException optionalExtensionMarker RightBrace [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
sequenceType -> SEQUENCE . LeftBrace componentTypeLists RightBrace [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
typeWithConstraint -> SEQUENCE . constraint_x OF type_x [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
typeWithConstraint -> SEQUENCE . sizeConstraint OF type_x [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
typeWithConstraint -> SEQUENCE . constraint_x OF namedType [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
typeWithConstraint -> SEQUENCE . sizeConstraint OF namedType [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
-- On SIZE shift to state 80
-- On OF shift to state 112
-- On LeftParen shift to state 81
-- On LeftBrace shift to state 442
-- On sizeConstraint shift to state 487
-- On constraint_x shift to state 491
## Reductions:

State 112:
## Known stack suffix:
## SEQUENCE OF
## LR(1) items:
sequenceOfType -> SEQUENCE OF . type_x [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
sequenceOfType -> SEQUENCE OF . namedType [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
-- On VisibleString shift to state 66
-- On VideotexString shift to state 67
-- On Upper shift to state 113
-- On UniversalString shift to state 72
-- On UTF8String shift to state 73
-- On UTCTime shift to state 74
-- On TeletexString shift to state 75
-- On TYPE_IDENTIFIER shift to state 76
-- On T61String shift to state 78
-- On SET shift to state 79
-- On SEQUENCE shift to state 111
-- On RELATIVE_OID shift to state 116
-- On REAL shift to state 117
-- On PrintableString shift to state 118
-- On ObjectDescriptor shift to state 119
-- On OCTET shift to state 120
-- On OBJECT shift to state 122
-- On NumericString shift to state 124
-- On NULL shift to state 125
-- On Lower shift to state 126
-- On LeftBracket shift to state 129
-- On ISO646String shift to state 140
-- On INTEGER shift to state 141
-- On INSTANCE shift to state 157
-- On IA5String shift to state 166
-- On GraphicString shift to state 167
-- On GeneralizedTime shift to state 168
-- On GeneralString shift to state 169
-- On EXTERNAL shift to state 170
-- On ENUMERATED shift to state 171
-- On EMBEDDED shift to state 179
-- On CHOICE shift to state 181
-- On CHARACTER shift to state 184
-- On BOOLEAN shift to state 186
-- On BMPString shift to state 187
-- On BIT shift to state 188
-- On ABSTRACT_SYNTAX shift to state 162
-- On valueSetFromObjects shift to state 202
-- On usefulType shift to state 203
-- On usefulObjectClassReference shift to state 163
-- On unrestrictedCharacterStringType shift to state 204
-- On type_x shift to state 440
-- On typeWithConstraint shift to state 207
-- On typeFromObject shift to state 208
-- On taggedType shift to state 209
-- On tag shift to state 210
-- On simpleDefinedType shift to state 213
-- On setType shift to state 215
-- On setOfType shift to state 216
-- On sequenceType shift to state 217
-- On sequenceOfType shift to state 218
-- On selectionType shift to state 219
-- On restrictedCharacterStringType shift to state 220
-- On relativeOIDType shift to state 221
-- On referencedType shift to state 222
-- On referencedObjects shift to state 223
-- On realType shift to state 232
-- On parameterizedValueSetType shift to state 233
-- On parameterizedType shift to state 234
-- On parameterizedObjectSet shift to state 235
-- On parameterizedObject shift to state 236
-- On octetStringType shift to state 237
-- On objectIdentifierType shift to state 238
-- On objectClassFieldType shift to state 239
-- On nullType shift to state 240
-- On namedType shift to state 441
-- On integerType shift to state 241
-- On instanceOfType shift to state 242
-- On externalTypeReference shift to state 243
-- On externalType shift to state 244
-- On externalObjectSetReference shift to state 245
-- On externalObjectReference shift to state 246
-- On externalObjectClassReference shift to state 164
-- On enumeratedType shift to state 247
-- On embeddedPDVType shift to state 248
-- On definedType shift to state 249
-- On definedObjectSet shift to state 250
-- On definedObjectClass shift to state 252
-- On definedObject shift to state 255
-- On constrainedType shift to state 257
-- On choiceType shift to state 258
-- On characterStringType shift to state 259
-- On builtinType shift to state 260
-- On booleanType shift to state 261
-- On bitStringType shift to state 262
## Reductions:

State 113:
## Known stack suffix:
## Upper
## LR(1) items:
definedObjectClass -> Upper . [ Upper RightBrace OPTIONAL Lower END Dot DEFAULT Comma Colon Assignment ]
definedObjectSet -> Upper . [ LeftBrace Dot ]
definedType -> Upper . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
externalObjectClassReference -> Upper . Dot Upper [ Upper RightBrace OPTIONAL Lower END Dot DEFAULT Comma Colon Assignment ]
externalObjectReference -> Upper . Dot Lower [ LeftBrace Dot ]
externalObjectSetReference -> Upper . Dot Upper [ LeftBrace Dot ]
externalTypeReference -> Upper . Dot Upper [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen LeftBrace INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
simpleDefinedType -> Upper . [ LeftBrace ]
## Transitions:
-- On Dot shift to state 114
## Reductions:
-- On Upper reduce production definedType -> Upper
-- On UNIQUE reduce production definedType -> Upper
-- On UNION reduce production definedType -> Upper
-- On RightParen reduce production definedType -> Upper
-- On RightDoubleBracket reduce production definedType -> Upper
-- On RightBrace reduce production definedType -> Upper
-- On OPTIONAL reduce production definedType -> Upper
-- On Middle reduce production definedType -> Upper
-- On Lower reduce production definedType -> Upper
-- On LeftParen reduce production definedType -> Upper
-- On LeftBrace reduce production definedObjectSet -> Upper
-- On INTERSECTION reduce production definedType -> Upper
-- On EXCEPT reduce production definedType -> Upper
-- On END reduce production definedType -> Upper
-- On ENCODED reduce production definedType -> Upper
-- On DEFAULT reduce production definedType -> Upper
-- On Comma reduce production definedType -> Upper
-- On Colon reduce production definedType -> Upper
-- On Circumflex reduce production definedType -> Upper
-- On Bang reduce production definedType -> Upper
-- On Assignment reduce production definedType -> Upper

State 114:
## Known stack suffix:
## Upper Dot
## LR(1) items:
externalObjectClassReference -> Upper Dot . Upper [ Upper RightBrace OPTIONAL Lower END Dot DEFAULT Comma Colon Assignment ]
externalObjectReference -> Upper Dot . Lower [ LeftBrace Dot ]
externalObjectSetReference -> Upper Dot . Upper [ LeftBrace Dot ]
externalTypeReference -> Upper Dot . Upper [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen LeftBrace INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
-- On Upper shift to state 70
-- On Lower shift to state 115
## Reductions:

State 115:
## Known stack suffix:
## Upper Dot Lower
## LR(1) items:
externalObjectReference -> Upper Dot Lower . [ Upper RightBrace Lower LeftBrace END Dot Comma ]
## Transitions:
## Reductions:
-- On Upper reduce production externalObjectReference -> Upper Dot Lower
-- On RightBrace reduce production externalObjectReference -> Upper Dot Lower
-- On Lower reduce production externalObjectReference -> Upper Dot Lower
-- On LeftBrace reduce production externalObjectReference -> Upper Dot Lower
-- On END reduce production externalObjectReference -> Upper Dot Lower
-- On Dot reduce production externalObjectReference -> Upper Dot Lower
-- On Comma reduce production externalObjectReference -> Upper Dot Lower

State 116:
## Known stack suffix:
## RELATIVE_OID
## LR(1) items:
relativeOIDType -> RELATIVE_OID . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
## Reductions:
-- On Upper reduce production relativeOIDType -> RELATIVE_OID
-- On UNIQUE reduce production relativeOIDType -> RELATIVE_OID
-- On UNION reduce production relativeOIDType -> RELATIVE_OID
-- On RightParen reduce production relativeOIDType -> RELATIVE_OID
-- On RightDoubleBracket reduce production relativeOIDType -> RELATIVE_OID
-- On RightBrace reduce production relativeOIDType -> RELATIVE_OID
-- On OPTIONAL reduce production relativeOIDType -> RELATIVE_OID
-- On Middle reduce production relativeOIDType -> RELATIVE_OID
-- On Lower reduce production relativeOIDType -> RELATIVE_OID
-- On LeftParen reduce production relativeOIDType -> RELATIVE_OID
-- On INTERSECTION reduce production relativeOIDType -> RELATIVE_OID
-- On EXCEPT reduce production relativeOIDType -> RELATIVE_OID
-- On END reduce production relativeOIDType -> RELATIVE_OID
-- On ENCODED reduce production relativeOIDType -> RELATIVE_OID
-- On DEFAULT reduce production relativeOIDType -> RELATIVE_OID
-- On Comma reduce production relativeOIDType -> RELATIVE_OID
-- On Colon reduce production relativeOIDType -> RELATIVE_OID
-- On Circumflex reduce production relativeOIDType -> RELATIVE_OID
-- On Bang reduce production relativeOIDType -> RELATIVE_OID
-- On Assignment reduce production relativeOIDType -> RELATIVE_OID

State 117:
## Known stack suffix:
## REAL
## LR(1) items:
realType -> REAL . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
## Reductions:
-- On Upper reduce production realType -> REAL
-- On UNIQUE reduce production realType -> REAL
-- On UNION reduce production realType -> REAL
-- On RightParen reduce production realType -> REAL
-- On RightDoubleBracket reduce production realType -> REAL
-- On RightBrace reduce production realType -> REAL
-- On OPTIONAL reduce production realType -> REAL
-- On Middle reduce production realType -> REAL
-- On Lower reduce production realType -> REAL
-- On LeftParen reduce production realType -> REAL
-- On INTERSECTION reduce production realType -> REAL
-- On EXCEPT reduce production realType -> REAL
-- On END reduce production realType -> REAL
-- On ENCODED reduce production realType -> REAL
-- On DEFAULT reduce production realType -> REAL
-- On Comma reduce production realType -> REAL
-- On Colon reduce production realType -> REAL
-- On Circumflex reduce production realType -> REAL
-- On Bang reduce production realType -> REAL
-- On Assignment reduce production realType -> REAL

State 118:
## Known stack suffix:
## PrintableString
## LR(1) items:
restrictedCharacterStringType -> PrintableString . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
## Reductions:
-- On Upper reduce production restrictedCharacterStringType -> PrintableString
-- On UNIQUE reduce production restrictedCharacterStringType -> PrintableString
-- On UNION reduce production restrictedCharacterStringType -> PrintableString
-- On RightParen reduce production restrictedCharacterStringType -> PrintableString
-- On RightDoubleBracket reduce production restrictedCharacterStringType -> PrintableString
-- On RightBrace reduce production restrictedCharacterStringType -> PrintableString
-- On OPTIONAL reduce production restrictedCharacterStringType -> PrintableString
-- On Middle reduce production restrictedCharacterStringType -> PrintableString
-- On Lower reduce production restrictedCharacterStringType -> PrintableString
-- On LeftParen reduce production restrictedCharacterStringType -> PrintableString
-- On INTERSECTION reduce production restrictedCharacterStringType -> PrintableString
-- On EXCEPT reduce production restrictedCharacterStringType -> PrintableString
-- On END reduce production restrictedCharacterStringType -> PrintableString
-- On ENCODED reduce production restrictedCharacterStringType -> PrintableString
-- On DEFAULT reduce production restrictedCharacterStringType -> PrintableString
-- On Comma reduce production restrictedCharacterStringType -> PrintableString
-- On Colon reduce production restrictedCharacterStringType -> PrintableString
-- On Circumflex reduce production restrictedCharacterStringType -> PrintableString
-- On Bang reduce production restrictedCharacterStringType -> PrintableString
-- On Assignment reduce production restrictedCharacterStringType -> PrintableString

State 119:
## Known stack suffix:
## ObjectDescriptor
## LR(1) items:
usefulType -> ObjectDescriptor . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
## Reductions:
-- On Upper reduce production usefulType -> ObjectDescriptor
-- On UNIQUE reduce production usefulType -> ObjectDescriptor
-- On UNION reduce production usefulType -> ObjectDescriptor
-- On RightParen reduce production usefulType -> ObjectDescriptor
-- On RightDoubleBracket reduce production usefulType -> ObjectDescriptor
-- On RightBrace reduce production usefulType -> ObjectDescriptor
-- On OPTIONAL reduce production usefulType -> ObjectDescriptor
-- On Middle reduce production usefulType -> ObjectDescriptor
-- On Lower reduce production usefulType -> ObjectDescriptor
-- On LeftParen reduce production usefulType -> ObjectDescriptor
-- On INTERSECTION reduce production usefulType -> ObjectDescriptor
-- On EXCEPT reduce production usefulType -> ObjectDescriptor
-- On END reduce production usefulType -> ObjectDescriptor
-- On ENCODED reduce production usefulType -> ObjectDescriptor
-- On DEFAULT reduce production usefulType -> ObjectDescriptor
-- On Comma reduce production usefulType -> ObjectDescriptor
-- On Colon reduce production usefulType -> ObjectDescriptor
-- On Circumflex reduce production usefulType -> ObjectDescriptor
-- On Bang reduce production usefulType -> ObjectDescriptor
-- On Assignment reduce production usefulType -> ObjectDescriptor

State 120:
## Known stack suffix:
## OCTET
## LR(1) items:
octetStringType -> OCTET . STRING [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
-- On STRING shift to state 121
## Reductions:

State 121:
## Known stack suffix:
## OCTET STRING
## LR(1) items:
octetStringType -> OCTET STRING . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
## Reductions:
-- On Upper reduce production octetStringType -> OCTET STRING
-- On UNIQUE reduce production octetStringType -> OCTET STRING
-- On UNION reduce production octetStringType -> OCTET STRING
-- On RightParen reduce production octetStringType -> OCTET STRING
-- On RightDoubleBracket reduce production octetStringType -> OCTET STRING
-- On RightBrace reduce production octetStringType -> OCTET STRING
-- On OPTIONAL reduce production octetStringType -> OCTET STRING
-- On Middle reduce production octetStringType -> OCTET STRING
-- On Lower reduce production octetStringType -> OCTET STRING
-- On LeftParen reduce production octetStringType -> OCTET STRING
-- On INTERSECTION reduce production octetStringType -> OCTET STRING
-- On EXCEPT reduce production octetStringType -> OCTET STRING
-- On END reduce production octetStringType -> OCTET STRING
-- On ENCODED reduce production octetStringType -> OCTET STRING
-- On DEFAULT reduce production octetStringType -> OCTET STRING
-- On Comma reduce production octetStringType -> OCTET STRING
-- On Colon reduce production octetStringType -> OCTET STRING
-- On Circumflex reduce production octetStringType -> OCTET STRING
-- On Bang reduce production octetStringType -> OCTET STRING
-- On Assignment reduce production octetStringType -> OCTET STRING

State 122:
## Known stack suffix:
## OBJECT
## LR(1) items:
objectIdentifierType -> OBJECT . IDENTIFIER [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
-- On IDENTIFIER shift to state 123
## Reductions:

State 123:
## Known stack suffix:
## OBJECT IDENTIFIER
## LR(1) items:
objectIdentifierType -> OBJECT IDENTIFIER . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
## Reductions:
-- On Upper reduce production objectIdentifierType -> OBJECT IDENTIFIER
-- On UNIQUE reduce production objectIdentifierType -> OBJECT IDENTIFIER
-- On UNION reduce production objectIdentifierType -> OBJECT IDENTIFIER
-- On RightParen reduce production objectIdentifierType -> OBJECT IDENTIFIER
-- On RightDoubleBracket reduce production objectIdentifierType -> OBJECT IDENTIFIER
-- On RightBrace reduce production objectIdentifierType -> OBJECT IDENTIFIER
-- On OPTIONAL reduce production objectIdentifierType -> OBJECT IDENTIFIER
-- On Middle reduce production objectIdentifierType -> OBJECT IDENTIFIER
-- On Lower reduce production objectIdentifierType -> OBJECT IDENTIFIER
-- On LeftParen reduce production objectIdentifierType -> OBJECT IDENTIFIER
-- On INTERSECTION reduce production objectIdentifierType -> OBJECT IDENTIFIER
-- On EXCEPT reduce production objectIdentifierType -> OBJECT IDENTIFIER
-- On END reduce production objectIdentifierType -> OBJECT IDENTIFIER
-- On ENCODED reduce production objectIdentifierType -> OBJECT IDENTIFIER
-- On DEFAULT reduce production objectIdentifierType -> OBJECT IDENTIFIER
-- On Comma reduce production objectIdentifierType -> OBJECT IDENTIFIER
-- On Colon reduce production objectIdentifierType -> OBJECT IDENTIFIER
-- On Circumflex reduce production objectIdentifierType -> OBJECT IDENTIFIER
-- On Bang reduce production objectIdentifierType -> OBJECT IDENTIFIER
-- On Assignment reduce production objectIdentifierType -> OBJECT IDENTIFIER

State 124:
## Known stack suffix:
## NumericString
## LR(1) items:
restrictedCharacterStringType -> NumericString . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
## Reductions:
-- On Upper reduce production restrictedCharacterStringType -> NumericString
-- On UNIQUE reduce production restrictedCharacterStringType -> NumericString
-- On UNION reduce production restrictedCharacterStringType -> NumericString
-- On RightParen reduce production restrictedCharacterStringType -> NumericString
-- On RightDoubleBracket reduce production restrictedCharacterStringType -> NumericString
-- On RightBrace reduce production restrictedCharacterStringType -> NumericString
-- On OPTIONAL reduce production restrictedCharacterStringType -> NumericString
-- On Middle reduce production restrictedCharacterStringType -> NumericString
-- On Lower reduce production restrictedCharacterStringType -> NumericString
-- On LeftParen reduce production restrictedCharacterStringType -> NumericString
-- On INTERSECTION reduce production restrictedCharacterStringType -> NumericString
-- On EXCEPT reduce production restrictedCharacterStringType -> NumericString
-- On END reduce production restrictedCharacterStringType -> NumericString
-- On ENCODED reduce production restrictedCharacterStringType -> NumericString
-- On DEFAULT reduce production restrictedCharacterStringType -> NumericString
-- On Comma reduce production restrictedCharacterStringType -> NumericString
-- On Colon reduce production restrictedCharacterStringType -> NumericString
-- On Circumflex reduce production restrictedCharacterStringType -> NumericString
-- On Bang reduce production restrictedCharacterStringType -> NumericString
-- On Assignment reduce production restrictedCharacterStringType -> NumericString

State 125:
## Known stack suffix:
## NULL
## LR(1) items:
nullType -> NULL . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
## Reductions:
-- On Upper reduce production nullType -> NULL
-- On UNIQUE reduce production nullType -> NULL
-- On UNION reduce production nullType -> NULL
-- On RightParen reduce production nullType -> NULL
-- On RightDoubleBracket reduce production nullType -> NULL
-- On RightBrace reduce production nullType -> NULL
-- On OPTIONAL reduce production nullType -> NULL
-- On Middle reduce production nullType -> NULL
-- On Lower reduce production nullType -> NULL
-- On LeftParen reduce production nullType -> NULL
-- On INTERSECTION reduce production nullType -> NULL
-- On EXCEPT reduce production nullType -> NULL
-- On END reduce production nullType -> NULL
-- On ENCODED reduce production nullType -> NULL
-- On DEFAULT reduce production nullType -> NULL
-- On Comma reduce production nullType -> NULL
-- On Colon reduce production nullType -> NULL
-- On Circumflex reduce production nullType -> NULL
-- On Bang reduce production nullType -> NULL
-- On Assignment reduce production nullType -> NULL

State 126:
## Known stack suffix:
## Lower
## LR(1) items:
definedObject -> Lower . [ LeftBrace Dot ]
namedType -> Lower . type_x [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
selectionType -> Lower . LessThan type_x [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
-- On VisibleString shift to state 66
-- On VideotexString shift to state 67
-- On Upper shift to state 113
-- On UniversalString shift to state 72
-- On UTF8String shift to state 73
-- On UTCTime shift to state 74
-- On TeletexString shift to state 75
-- On TYPE_IDENTIFIER shift to state 76
-- On T61String shift to state 78
-- On SET shift to state 79
-- On SEQUENCE shift to state 111
-- On RELATIVE_OID shift to state 116
-- On REAL shift to state 117
-- On PrintableString shift to state 118
-- On ObjectDescriptor shift to state 119
-- On OCTET shift to state 120
-- On OBJECT shift to state 122
-- On NumericString shift to state 124
-- On NULL shift to state 125
-- On Lower shift to state 127
-- On LessThan shift to state 128
-- On LeftBracket shift to state 129
-- On ISO646String shift to state 140
-- On INTEGER shift to state 141
-- On INSTANCE shift to state 157
-- On IA5String shift to state 166
-- On GraphicString shift to state 167
-- On GeneralizedTime shift to state 168
-- On GeneralString shift to state 169
-- On EXTERNAL shift to state 170
-- On ENUMERATED shift to state 171
-- On EMBEDDED shift to state 179
-- On CHOICE shift to state 181
-- On CHARACTER shift to state 184
-- On BOOLEAN shift to state 186
-- On BMPString shift to state 187
-- On BIT shift to state 188
-- On ABSTRACT_SYNTAX shift to state 162
-- On valueSetFromObjects shift to state 202
-- On usefulType shift to state 203
-- On usefulObjectClassReference shift to state 163
-- On unrestrictedCharacterStringType shift to state 204
-- On type_x shift to state 205
-- On typeWithConstraint shift to state 207
-- On typeFromObject shift to state 208
-- On taggedType shift to state 209
-- On tag shift to state 210
-- On simpleDefinedType shift to state 213
-- On setType shift to state 215
-- On setOfType shift to state 216
-- On sequenceType shift to state 217
-- On sequenceOfType shift to state 218
-- On selectionType shift to state 219
-- On restrictedCharacterStringType shift to state 220
-- On relativeOIDType shift to state 221
-- On referencedType shift to state 222
-- On referencedObjects shift to state 223
-- On realType shift to state 232
-- On parameterizedValueSetType shift to state 233
-- On parameterizedType shift to state 234
-- On parameterizedObjectSet shift to state 235
-- On parameterizedObject shift to state 236
-- On octetStringType shift to state 237
-- On objectIdentifierType shift to state 238
-- On objectClassFieldType shift to state 239
-- On nullType shift to state 240
-- On integerType shift to state 241
-- On instanceOfType shift to state 242
-- On externalTypeReference shift to state 243
-- On externalType shift to state 244
-- On externalObjectSetReference shift to state 245
-- On externalObjectReference shift to state 246
-- On externalObjectClassReference shift to state 164
-- On enumeratedType shift to state 247
-- On embeddedPDVType shift to state 248
-- On definedType shift to state 249
-- On definedObjectSet shift to state 250
-- On definedObjectClass shift to state 252
-- On definedObject shift to state 255
-- On constrainedType shift to state 257
-- On choiceType shift to state 258
-- On characterStringType shift to state 259
-- On builtinType shift to state 260
-- On booleanType shift to state 261
-- On bitStringType shift to state 262
## Reductions:
-- On LeftBrace reduce production definedObject -> Lower
-- On Dot reduce production definedObject -> Lower

State 127:
## Known stack suffix:
## Lower
## LR(1) items:
definedObject -> Lower . [ LeftBrace Dot ]
selectionType -> Lower . LessThan type_x [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
-- On LessThan shift to state 128
## Reductions:
-- On LeftBrace reduce production definedObject -> Lower
-- On Dot reduce production definedObject -> Lower

State 128:
## Known stack suffix:
## Lower LessThan
## LR(1) items:
selectionType -> Lower LessThan . type_x [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
-- On VisibleString shift to state 66
-- On VideotexString shift to state 67
-- On Upper shift to state 113
-- On UniversalString shift to state 72
-- On UTF8String shift to state 73
-- On UTCTime shift to state 74
-- On TeletexString shift to state 75
-- On TYPE_IDENTIFIER shift to state 76
-- On T61String shift to state 78
-- On SET shift to state 79
-- On SEQUENCE shift to state 111
-- On RELATIVE_OID shift to state 116
-- On REAL shift to state 117
-- On PrintableString shift to state 118
-- On ObjectDescriptor shift to state 119
-- On OCTET shift to state 120
-- On OBJECT shift to state 122
-- On NumericString shift to state 124
-- On NULL shift to state 125
-- On Lower shift to state 127
-- On LeftBracket shift to state 129
-- On ISO646String shift to state 140
-- On INTEGER shift to state 141
-- On INSTANCE shift to state 157
-- On IA5String shift to state 166
-- On GraphicString shift to state 167
-- On GeneralizedTime shift to state 168
-- On GeneralString shift to state 169
-- On EXTERNAL shift to state 170
-- On ENUMERATED shift to state 171
-- On EMBEDDED shift to state 179
-- On CHOICE shift to state 181
-- On CHARACTER shift to state 184
-- On BOOLEAN shift to state 186
-- On BMPString shift to state 187
-- On BIT shift to state 188
-- On ABSTRACT_SYNTAX shift to state 162
-- On valueSetFromObjects shift to state 202
-- On usefulType shift to state 203
-- On usefulObjectClassReference shift to state 163
-- On unrestrictedCharacterStringType shift to state 204
-- On type_x shift to state 439
-- On typeWithConstraint shift to state 207
-- On typeFromObject shift to state 208
-- On taggedType shift to state 209
-- On tag shift to state 210
-- On simpleDefinedType shift to state 213
-- On setType shift to state 215
-- On setOfType shift to state 216
-- On sequenceType shift to state 217
-- On sequenceOfType shift to state 218
-- On selectionType shift to state 219
-- On restrictedCharacterStringType shift to state 220
-- On relativeOIDType shift to state 221
-- On referencedType shift to state 222
-- On referencedObjects shift to state 223
-- On realType shift to state 232
-- On parameterizedValueSetType shift to state 233
-- On parameterizedType shift to state 234
-- On parameterizedObjectSet shift to state 235
-- On parameterizedObject shift to state 236
-- On octetStringType shift to state 237
-- On objectIdentifierType shift to state 238
-- On objectClassFieldType shift to state 239
-- On nullType shift to state 240
-- On integerType shift to state 241
-- On instanceOfType shift to state 242
-- On externalTypeReference shift to state 243
-- On externalType shift to state 244
-- On externalObjectSetReference shift to state 245
-- On externalObjectReference shift to state 246
-- On externalObjectClassReference shift to state 164
-- On enumeratedType shift to state 247
-- On embeddedPDVType shift to state 248
-- On definedType shift to state 249
-- On definedObjectSet shift to state 250
-- On definedObjectClass shift to state 252
-- On definedObject shift to state 255
-- On constrainedType shift to state 257
-- On choiceType shift to state 258
-- On characterStringType shift to state 259
-- On builtinType shift to state 260
-- On booleanType shift to state 261
-- On bitStringType shift to state 262
## Reductions:

State 129:
## Known stack suffix:
## LeftBracket
## LR(1) items:
tag -> LeftBracket . class_x classNumber RightBracket [ VisibleString VideotexString Upper UniversalString UTF8String UTCTime TeletexString TYPE_IDENTIFIER T61String SET SEQUENCE RELATIVE_OID REAL PrintableString ObjectDescriptor OCTET OBJECT NumericString NULL Lower LeftBracket ISO646String INTEGER INSTANCE IMPLICIT IA5String GraphicString GeneralizedTime GeneralString EXTERNAL EXPLICIT ENUMERATED EMBEDDED CHOICE CHARACTER BOOLEAN BMPString BIT ABSTRACT_SYNTAX ]
## Transitions:
-- On UNIVERSAL shift to state 130
-- On PRIVATE shift to state 131
-- On APPLICATION shift to state 132
-- On class_x shift to state 133
## Reductions:
-- On Upper reduce production class_x ->
-- On Number reduce production class_x ->
-- On Lower reduce production class_x ->

State 130:
## Known stack suffix:
## UNIVERSAL
## LR(1) items:
class_x -> UNIVERSAL . [ Upper Number Lower ]
## Transitions:
## Reductions:
-- On Upper reduce production class_x -> UNIVERSAL
-- On Number reduce production class_x -> UNIVERSAL
-- On Lower reduce production class_x -> UNIVERSAL

State 131:
## Known stack suffix:
## PRIVATE
## LR(1) items:
class_x -> PRIVATE . [ Upper Number Lower ]
## Transitions:
## Reductions:
-- On Upper reduce production class_x -> PRIVATE
-- On Number reduce production class_x -> PRIVATE
-- On Lower reduce production class_x -> PRIVATE

State 132:
## Known stack suffix:
## APPLICATION
## LR(1) items:
class_x -> APPLICATION . [ Upper Number Lower ]
## Transitions:
## Reductions:
-- On Upper reduce production class_x -> APPLICATION
-- On Number reduce production class_x -> APPLICATION
-- On Lower reduce production class_x -> APPLICATION

State 133:
## Known stack suffix:
## LeftBracket class_x
## LR(1) items:
tag -> LeftBracket class_x . classNumber RightBracket [ VisibleString VideotexString Upper UniversalString UTF8String UTCTime TeletexString TYPE_IDENTIFIER T61String SET SEQUENCE RELATIVE_OID REAL PrintableString ObjectDescriptor OCTET OBJECT NumericString NULL Lower LeftBracket ISO646String INTEGER INSTANCE IMPLICIT IA5String GraphicString GeneralizedTime GeneralString EXTERNAL EXPLICIT ENUMERATED EMBEDDED CHOICE CHARACTER BOOLEAN BMPString BIT ABSTRACT_SYNTAX ]
## Transitions:
-- On Upper shift to state 56
-- On Number shift to state 134
-- On Lower shift to state 59
-- On simpleDefinedValue shift to state 64
-- On parameterizedValue shift to state 135
-- On externalValueReference shift to state 136
-- On definedValue shift to state 137
-- On classNumber shift to state 138
## Reductions:

State 134:
## Known stack suffix:
## Number
## LR(1) items:
classNumber -> Number . [ RightBracket ]
## Transitions:
## Reductions:
-- On RightBracket reduce production classNumber -> Number

State 135:
## Known stack suffix:
## parameterizedValue
## LR(1) items:
definedValue -> parameterizedValue . [ Upper UNION SemiColon RightParen RightDoubleBracket RightBracket RightBrace Number Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
## Transitions:
## Reductions:
-- On Upper reduce production definedValue -> parameterizedValue
-- On UNION reduce production definedValue -> parameterizedValue
-- On SemiColon reduce production definedValue -> parameterizedValue
-- On RightParen reduce production definedValue -> parameterizedValue
-- On RightDoubleBracket reduce production definedValue -> parameterizedValue
-- On RightBracket reduce production definedValue -> parameterizedValue
-- On RightBrace reduce production definedValue -> parameterizedValue
-- On Number reduce production definedValue -> parameterizedValue
-- On Middle reduce production definedValue -> parameterizedValue
-- On Lower reduce production definedValue -> parameterizedValue
-- On LessThan reduce production definedValue -> parameterizedValue
-- On INTERSECTION reduce production definedValue -> parameterizedValue
-- On EXCEPT reduce production definedValue -> parameterizedValue
-- On END reduce production definedValue -> parameterizedValue
-- On DoubleDot reduce production definedValue -> parameterizedValue
-- On Comma reduce production definedValue -> parameterizedValue
-- On Circumflex reduce production definedValue -> parameterizedValue
-- On Bang reduce production definedValue -> parameterizedValue

State 136:
## Known stack suffix:
## externalValueReference
## LR(1) items:
definedValue -> externalValueReference . [ Upper UNION SemiColon RightParen RightDoubleBracket RightBracket RightBrace Number Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
simpleDefinedValue -> externalValueReference . [ LeftBrace ]
## Transitions:
## Reductions:
-- On Upper reduce production definedValue -> externalValueReference
-- On UNION reduce production definedValue -> externalValueReference
-- On SemiColon reduce production definedValue -> externalValueReference
-- On RightParen reduce production definedValue -> externalValueReference
-- On RightDoubleBracket reduce production definedValue -> externalValueReference
-- On RightBracket reduce production definedValue -> externalValueReference
-- On RightBrace reduce production definedValue -> externalValueReference
-- On Number reduce production definedValue -> externalValueReference
-- On Middle reduce production definedValue -> externalValueReference
-- On Lower reduce production definedValue -> externalValueReference
-- On LessThan reduce production definedValue -> externalValueReference
-- On LeftBrace reduce production simpleDefinedValue -> externalValueReference
-- On INTERSECTION reduce production definedValue -> externalValueReference
-- On EXCEPT reduce production definedValue -> externalValueReference
-- On END reduce production definedValue -> externalValueReference
-- On DoubleDot reduce production definedValue -> externalValueReference
-- On Comma reduce production definedValue -> externalValueReference
-- On Circumflex reduce production definedValue -> externalValueReference
-- On Bang reduce production definedValue -> externalValueReference

State 137:
## Known stack suffix:
## definedValue
## LR(1) items:
classNumber -> definedValue . [ RightBracket ]
## Transitions:
## Reductions:
-- On RightBracket reduce production classNumber -> definedValue

State 138:
## Known stack suffix:
## LeftBracket class_x classNumber
## LR(1) items:
tag -> LeftBracket class_x classNumber . RightBracket [ VisibleString VideotexString Upper UniversalString UTF8String UTCTime TeletexString TYPE_IDENTIFIER T61String SET SEQUENCE RELATIVE_OID REAL PrintableString ObjectDescriptor OCTET OBJECT NumericString NULL Lower LeftBracket ISO646String INTEGER INSTANCE IMPLICIT IA5String GraphicString GeneralizedTime GeneralString EXTERNAL EXPLICIT ENUMERATED EMBEDDED CHOICE CHARACTER BOOLEAN BMPString BIT ABSTRACT_SYNTAX ]
## Transitions:
-- On RightBracket shift to state 139
## Reductions:

State 139:
## Known stack suffix:
## LeftBracket class_x classNumber RightBracket
## LR(1) items:
tag -> LeftBracket class_x classNumber RightBracket . [ VisibleString VideotexString Upper UniversalString UTF8String UTCTime TeletexString TYPE_IDENTIFIER T61String SET SEQUENCE RELATIVE_OID REAL PrintableString ObjectDescriptor OCTET OBJECT NumericString NULL Lower LeftBracket ISO646String INTEGER INSTANCE IMPLICIT IA5String GraphicString GeneralizedTime GeneralString EXTERNAL EXPLICIT ENUMERATED EMBEDDED CHOICE CHARACTER BOOLEAN BMPString BIT ABSTRACT_SYNTAX ]
## Transitions:
## Reductions:
-- On VisibleString reduce production tag -> LeftBracket class_x classNumber RightBracket
-- On VideotexString reduce production tag -> LeftBracket class_x classNumber RightBracket
-- On Upper reduce production tag -> LeftBracket class_x classNumber RightBracket
-- On UniversalString reduce production tag -> LeftBracket class_x classNumber RightBracket
-- On UTF8String reduce production tag -> LeftBracket class_x classNumber RightBracket
-- On UTCTime reduce production tag -> LeftBracket class_x classNumber RightBracket
-- On TeletexString reduce production tag -> LeftBracket class_x classNumber RightBracket
-- On TYPE_IDENTIFIER reduce production tag -> LeftBracket class_x classNumber RightBracket
-- On T61String reduce production tag -> LeftBracket class_x classNumber RightBracket
-- On SET reduce production tag -> LeftBracket class_x classNumber RightBracket
-- On SEQUENCE reduce production tag -> LeftBracket class_x classNumber RightBracket
-- On RELATIVE_OID reduce production tag -> LeftBracket class_x classNumber RightBracket
-- On REAL reduce production tag -> LeftBracket class_x classNumber RightBracket
-- On PrintableString reduce production tag -> LeftBracket class_x classNumber RightBracket
-- On ObjectDescriptor reduce production tag -> LeftBracket class_x classNumber RightBracket
-- On OCTET reduce production tag -> LeftBracket class_x classNumber RightBracket
-- On OBJECT reduce production tag -> LeftBracket class_x classNumber RightBracket
-- On NumericString reduce production tag -> LeftBracket class_x classNumber RightBracket
-- On NULL reduce production tag -> LeftBracket class_x classNumber RightBracket
-- On Lower reduce production tag -> LeftBracket class_x classNumber RightBracket
-- On LeftBracket reduce production tag -> LeftBracket class_x classNumber RightBracket
-- On ISO646String reduce production tag -> LeftBracket class_x classNumber RightBracket
-- On INTEGER reduce production tag -> LeftBracket class_x classNumber RightBracket
-- On INSTANCE reduce production tag -> LeftBracket class_x classNumber RightBracket
-- On IMPLICIT reduce production tag -> LeftBracket class_x classNumber RightBracket
-- On IA5String reduce production tag -> LeftBracket class_x classNumber RightBracket
-- On GraphicString reduce production tag -> LeftBracket class_x classNumber RightBracket
-- On GeneralizedTime reduce production tag -> LeftBracket class_x classNumber RightBracket
-- On GeneralString reduce production tag -> LeftBracket class_x classNumber RightBracket
-- On EXTERNAL reduce production tag -> LeftBracket class_x classNumber RightBracket
-- On EXPLICIT reduce production tag -> LeftBracket class_x classNumber RightBracket
-- On ENUMERATED reduce production tag -> LeftBracket class_x classNumber RightBracket
-- On EMBEDDED reduce production tag -> LeftBracket class_x classNumber RightBracket
-- On CHOICE reduce production tag -> LeftBracket class_x classNumber RightBracket
-- On CHARACTER reduce production tag -> LeftBracket class_x classNumber RightBracket
-- On BOOLEAN reduce production tag -> LeftBracket class_x classNumber RightBracket
-- On BMPString reduce production tag -> LeftBracket class_x classNumber RightBracket
-- On BIT reduce production tag -> LeftBracket class_x classNumber RightBracket
-- On ABSTRACT_SYNTAX reduce production tag -> LeftBracket class_x classNumber RightBracket

State 140:
## Known stack suffix:
## ISO646String
## LR(1) items:
restrictedCharacterStringType -> ISO646String . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
## Reductions:
-- On Upper reduce production restrictedCharacterStringType -> ISO646String
-- On UNIQUE reduce production restrictedCharacterStringType -> ISO646String
-- On UNION reduce production restrictedCharacterStringType -> ISO646String
-- On RightParen reduce production restrictedCharacterStringType -> ISO646String
-- On RightDoubleBracket reduce production restrictedCharacterStringType -> ISO646String
-- On RightBrace reduce production restrictedCharacterStringType -> ISO646String
-- On OPTIONAL reduce production restrictedCharacterStringType -> ISO646String
-- On Middle reduce production restrictedCharacterStringType -> ISO646String
-- On Lower reduce production restrictedCharacterStringType -> ISO646String
-- On LeftParen reduce production restrictedCharacterStringType -> ISO646String
-- On INTERSECTION reduce production restrictedCharacterStringType -> ISO646String
-- On EXCEPT reduce production restrictedCharacterStringType -> ISO646String
-- On END reduce production restrictedCharacterStringType -> ISO646String
-- On ENCODED reduce production restrictedCharacterStringType -> ISO646String
-- On DEFAULT reduce production restrictedCharacterStringType -> ISO646String
-- On Comma reduce production restrictedCharacterStringType -> ISO646String
-- On Colon reduce production restrictedCharacterStringType -> ISO646String
-- On Circumflex reduce production restrictedCharacterStringType -> ISO646String
-- On Bang reduce production restrictedCharacterStringType -> ISO646String
-- On Assignment reduce production restrictedCharacterStringType -> ISO646String

State 141:
## Known stack suffix:
## INTEGER
## LR(1) items:
integerType -> INTEGER . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
integerType -> INTEGER . LeftBrace namedNumberList RightBrace [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
-- On LeftBrace shift to state 142
## Reductions:
-- On Upper reduce production integerType -> INTEGER
-- On UNIQUE reduce production integerType -> INTEGER
-- On UNION reduce production integerType -> INTEGER
-- On RightParen reduce production integerType -> INTEGER
-- On RightDoubleBracket reduce production integerType -> INTEGER
-- On RightBrace reduce production integerType -> INTEGER
-- On OPTIONAL reduce production integerType -> INTEGER
-- On Middle reduce production integerType -> INTEGER
-- On Lower reduce production integerType -> INTEGER
-- On LeftParen reduce production integerType -> INTEGER
-- On INTERSECTION reduce production integerType -> INTEGER
-- On EXCEPT reduce production integerType -> INTEGER
-- On END reduce production integerType -> INTEGER
-- On ENCODED reduce production integerType -> INTEGER
-- On DEFAULT reduce production integerType -> INTEGER
-- On Comma reduce production integerType -> INTEGER
-- On Colon reduce production integerType -> INTEGER
-- On Circumflex reduce production integerType -> INTEGER
-- On Bang reduce production integerType -> INTEGER
-- On Assignment reduce production integerType -> INTEGER

State 142:
## Known stack suffix:
## INTEGER LeftBrace
## LR(1) items:
integerType -> INTEGER LeftBrace . namedNumberList RightBrace [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
-- On Lower shift to state 143
-- On namedNumberList shift to state 152
-- On namedNumber shift to state 156
## Reductions:

State 143:
## Known stack suffix:
## Lower
## LR(1) items:
namedNumber -> Lower . LeftParen signedNumber RightParen [ RightBrace Comma ]
namedNumber -> Lower . LeftParen definedValue RightParen [ RightBrace Comma ]
## Transitions:
-- On LeftParen shift to state 144
## Reductions:

State 144:
## Known stack suffix:
## Lower LeftParen
## LR(1) items:
namedNumber -> Lower LeftParen . signedNumber RightParen [ RightBrace Comma ]
namedNumber -> Lower LeftParen . definedValue RightParen [ RightBrace Comma ]
## Transitions:
-- On Upper shift to state 56
-- On Number shift to state 145
-- On Lower shift to state 59
-- On Hyphen shift to state 146
-- On simpleDefinedValue shift to state 64
-- On signedNumber shift to state 148
-- On parameterizedValue shift to state 135
-- On externalValueReference shift to state 136
-- On definedValue shift to state 150
## Reductions:

State 145:
## Known stack suffix:
## Number
## LR(1) items:
signedNumber -> Number . [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
## Transitions:
## Reductions:
-- On Upper reduce production signedNumber -> Number
-- On UNION reduce production signedNumber -> Number
-- On RightParen reduce production signedNumber -> Number
-- On RightDoubleBracket reduce production signedNumber -> Number
-- On RightBrace reduce production signedNumber -> Number
-- On Middle reduce production signedNumber -> Number
-- On Lower reduce production signedNumber -> Number
-- On LessThan reduce production signedNumber -> Number
-- On INTERSECTION reduce production signedNumber -> Number
-- On EXCEPT reduce production signedNumber -> Number
-- On END reduce production signedNumber -> Number
-- On DoubleDot reduce production signedNumber -> Number
-- On Comma reduce production signedNumber -> Number
-- On Circumflex reduce production signedNumber -> Number
-- On Bang reduce production signedNumber -> Number

State 146:
## Known stack suffix:
## Hyphen
## LR(1) items:
signedNumber -> Hyphen . Number [ RightParen RightBrace Comma ]
## Transitions:
-- On Number shift to state 147
## Reductions:

State 147:
## Known stack suffix:
## Hyphen Number
## LR(1) items:
signedNumber -> Hyphen Number . [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
## Transitions:
## Reductions:
-- On Upper reduce production signedNumber -> Hyphen Number
-- On UNION reduce production signedNumber -> Hyphen Number
-- On RightParen reduce production signedNumber -> Hyphen Number
-- On RightDoubleBracket reduce production signedNumber -> Hyphen Number
-- On RightBrace reduce production signedNumber -> Hyphen Number
-- On Middle reduce production signedNumber -> Hyphen Number
-- On Lower reduce production signedNumber -> Hyphen Number
-- On LessThan reduce production signedNumber -> Hyphen Number
-- On INTERSECTION reduce production signedNumber -> Hyphen Number
-- On EXCEPT reduce production signedNumber -> Hyphen Number
-- On END reduce production signedNumber -> Hyphen Number
-- On DoubleDot reduce production signedNumber -> Hyphen Number
-- On Comma reduce production signedNumber -> Hyphen Number
-- On Circumflex reduce production signedNumber -> Hyphen Number
-- On Bang reduce production signedNumber -> Hyphen Number

State 148:
## Known stack suffix:
## Lower LeftParen signedNumber
## LR(1) items:
namedNumber -> Lower LeftParen signedNumber . RightParen [ RightBrace Comma ]
## Transitions:
-- On RightParen shift to state 149
## Reductions:

State 149:
## Known stack suffix:
## Lower LeftParen signedNumber RightParen
## LR(1) items:
namedNumber -> Lower LeftParen signedNumber RightParen . [ RightBrace Comma ]
## Transitions:
## Reductions:
-- On RightBrace reduce production namedNumber -> Lower LeftParen signedNumber RightParen
-- On Comma reduce production namedNumber -> Lower LeftParen signedNumber RightParen

State 150:
## Known stack suffix:
## Lower LeftParen definedValue
## LR(1) items:
namedNumber -> Lower LeftParen definedValue . RightParen [ RightBrace Comma ]
## Transitions:
-- On RightParen shift to state 151
## Reductions:

State 151:
## Known stack suffix:
## Lower LeftParen definedValue RightParen
## LR(1) items:
namedNumber -> Lower LeftParen definedValue RightParen . [ RightBrace Comma ]
## Transitions:
## Reductions:
-- On RightBrace reduce production namedNumber -> Lower LeftParen definedValue RightParen
-- On Comma reduce production namedNumber -> Lower LeftParen definedValue RightParen

State 152:
## Known stack suffix:
## INTEGER LeftBrace namedNumberList
## LR(1) items:
integerType -> INTEGER LeftBrace namedNumberList . RightBrace [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
namedNumberList -> namedNumberList . Comma namedNumber [ RightBrace Comma ]
## Transitions:
-- On RightBrace shift to state 153
-- On Comma shift to state 154
## Reductions:

State 153:
## Known stack suffix:
## INTEGER LeftBrace namedNumberList RightBrace
## LR(1) items:
integerType -> INTEGER LeftBrace namedNumberList RightBrace . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
## Reductions:
-- On Upper reduce production integerType -> INTEGER LeftBrace namedNumberList RightBrace
-- On UNIQUE reduce production integerType -> INTEGER LeftBrace namedNumberList RightBrace
-- On UNION reduce production integerType -> INTEGER LeftBrace namedNumberList RightBrace
-- On RightParen reduce production integerType -> INTEGER LeftBrace namedNumberList RightBrace
-- On RightDoubleBracket reduce production integerType -> INTEGER LeftBrace namedNumberList RightBrace
-- On RightBrace reduce production integerType -> INTEGER LeftBrace namedNumberList RightBrace
-- On OPTIONAL reduce production integerType -> INTEGER LeftBrace namedNumberList RightBrace
-- On Middle reduce production integerType -> INTEGER LeftBrace namedNumberList RightBrace
-- On Lower reduce production integerType -> INTEGER LeftBrace namedNumberList RightBrace
-- On LeftParen reduce production integerType -> INTEGER LeftBrace namedNumberList RightBrace
-- On INTERSECTION reduce production integerType -> INTEGER LeftBrace namedNumberList RightBrace
-- On EXCEPT reduce production integerType -> INTEGER LeftBrace namedNumberList RightBrace
-- On END reduce production integerType -> INTEGER LeftBrace namedNumberList RightBrace
-- On ENCODED reduce production integerType -> INTEGER LeftBrace namedNumberList RightBrace
-- On DEFAULT reduce production integerType -> INTEGER LeftBrace namedNumberList RightBrace
-- On Comma reduce production integerType -> INTEGER LeftBrace namedNumberList RightBrace
-- On Colon reduce production integerType -> INTEGER LeftBrace namedNumberList RightBrace
-- On Circumflex reduce production integerType -> INTEGER LeftBrace namedNumberList RightBrace
-- On Bang reduce production integerType -> INTEGER LeftBrace namedNumberList RightBrace
-- On Assignment reduce production integerType -> INTEGER LeftBrace namedNumberList RightBrace

State 154:
## Known stack suffix:
## namedNumberList Comma
## LR(1) items:
namedNumberList -> namedNumberList Comma . namedNumber [ RightBrace Comma ]
## Transitions:
-- On Lower shift to state 143
-- On namedNumber shift to state 155
## Reductions:

State 155:
## Known stack suffix:
## namedNumberList Comma namedNumber
## LR(1) items:
namedNumberList -> namedNumberList Comma namedNumber . [ RightBrace Comma ]
## Transitions:
## Reductions:
-- On RightBrace reduce production namedNumberList -> namedNumberList Comma namedNumber
-- On Comma reduce production namedNumberList -> namedNumberList Comma namedNumber

State 156:
## Known stack suffix:
## namedNumber
## LR(1) items:
namedNumberList -> namedNumber . [ RightBrace Comma ]
## Transitions:
## Reductions:
-- On RightBrace reduce production namedNumberList -> namedNumber
-- On Comma reduce production namedNumberList -> namedNumber

State 157:
## Known stack suffix:
## INSTANCE
## LR(1) items:
instanceOfType -> INSTANCE . OF definedObjectClass [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
-- On OF shift to state 158
## Reductions:

State 158:
## Known stack suffix:
## INSTANCE OF
## LR(1) items:
instanceOfType -> INSTANCE OF . definedObjectClass [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
-- On Upper shift to state 159
-- On TYPE_IDENTIFIER shift to state 76
-- On ABSTRACT_SYNTAX shift to state 162
-- On usefulObjectClassReference shift to state 163
-- On externalObjectClassReference shift to state 164
-- On definedObjectClass shift to state 165
## Reductions:

State 159:
## Known stack suffix:
## Upper
## LR(1) items:
definedObjectClass -> Upper . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
externalObjectClassReference -> Upper . Dot Upper [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
-- On Dot shift to state 160
## Reductions:
-- On Upper reduce production definedObjectClass -> Upper
-- On UNIQUE reduce production definedObjectClass -> Upper
-- On UNION reduce production definedObjectClass -> Upper
-- On RightParen reduce production definedObjectClass -> Upper
-- On RightDoubleBracket reduce production definedObjectClass -> Upper
-- On RightBrace reduce production definedObjectClass -> Upper
-- On OPTIONAL reduce production definedObjectClass -> Upper
-- On Middle reduce production definedObjectClass -> Upper
-- On Lower reduce production definedObjectClass -> Upper
-- On LeftParen reduce production definedObjectClass -> Upper
-- On INTERSECTION reduce production definedObjectClass -> Upper
-- On EXCEPT reduce production definedObjectClass -> Upper
-- On END reduce production definedObjectClass -> Upper
-- On ENCODED reduce production definedObjectClass -> Upper
-- On DEFAULT reduce production definedObjectClass -> Upper
-- On Comma reduce production definedObjectClass -> Upper
-- On Colon reduce production definedObjectClass -> Upper
-- On Circumflex reduce production definedObjectClass -> Upper
-- On Bang reduce production definedObjectClass -> Upper
-- On Assignment reduce production definedObjectClass -> Upper

State 160:
## Known stack suffix:
## Upper Dot
## LR(1) items:
externalObjectClassReference -> Upper Dot . Upper [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
-- On Upper shift to state 161
## Reductions:

State 161:
## Known stack suffix:
## Upper Dot Upper
## LR(1) items:
externalObjectClassReference -> Upper Dot Upper . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
## Reductions:
-- On Upper reduce production externalObjectClassReference -> Upper Dot Upper
-- On UNIQUE reduce production externalObjectClassReference -> Upper Dot Upper
-- On UNION reduce production externalObjectClassReference -> Upper Dot Upper
-- On RightParen reduce production externalObjectClassReference -> Upper Dot Upper
-- On RightDoubleBracket reduce production externalObjectClassReference -> Upper Dot Upper
-- On RightBrace reduce production externalObjectClassReference -> Upper Dot Upper
-- On OPTIONAL reduce production externalObjectClassReference -> Upper Dot Upper
-- On Middle reduce production externalObjectClassReference -> Upper Dot Upper
-- On Lower reduce production externalObjectClassReference -> Upper Dot Upper
-- On LeftParen reduce production externalObjectClassReference -> Upper Dot Upper
-- On INTERSECTION reduce production externalObjectClassReference -> Upper Dot Upper
-- On EXCEPT reduce production externalObjectClassReference -> Upper Dot Upper
-- On END reduce production externalObjectClassReference -> Upper Dot Upper
-- On ENCODED reduce production externalObjectClassReference -> Upper Dot Upper
-- On DEFAULT reduce production externalObjectClassReference -> Upper Dot Upper
-- On Comma reduce production externalObjectClassReference -> Upper Dot Upper
-- On Colon reduce production externalObjectClassReference -> Upper Dot Upper
-- On Circumflex reduce production externalObjectClassReference -> Upper Dot Upper
-- On Bang reduce production externalObjectClassReference -> Upper Dot Upper
-- On Assignment reduce production externalObjectClassReference -> Upper Dot Upper

State 162:
## Known stack suffix:
## ABSTRACT_SYNTAX
## LR(1) items:
usefulObjectClassReference -> ABSTRACT_SYNTAX . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED Dot DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
## Reductions:
-- On Upper reduce production usefulObjectClassReference -> ABSTRACT_SYNTAX
-- On UNIQUE reduce production usefulObjectClassReference -> ABSTRACT_SYNTAX
-- On UNION reduce production usefulObjectClassReference -> ABSTRACT_SYNTAX
-- On RightParen reduce production usefulObjectClassReference -> ABSTRACT_SYNTAX
-- On RightDoubleBracket reduce production usefulObjectClassReference -> ABSTRACT_SYNTAX
-- On RightBrace reduce production usefulObjectClassReference -> ABSTRACT_SYNTAX
-- On OPTIONAL reduce production usefulObjectClassReference -> ABSTRACT_SYNTAX
-- On Middle reduce production usefulObjectClassReference -> ABSTRACT_SYNTAX
-- On Lower reduce production usefulObjectClassReference -> ABSTRACT_SYNTAX
-- On LeftParen reduce production usefulObjectClassReference -> ABSTRACT_SYNTAX
-- On INTERSECTION reduce production usefulObjectClassReference -> ABSTRACT_SYNTAX
-- On EXCEPT reduce production usefulObjectClassReference -> ABSTRACT_SYNTAX
-- On END reduce production usefulObjectClassReference -> ABSTRACT_SYNTAX
-- On ENCODED reduce production usefulObjectClassReference -> ABSTRACT_SYNTAX
-- On Dot reduce production usefulObjectClassReference -> ABSTRACT_SYNTAX
-- On DEFAULT reduce production usefulObjectClassReference -> ABSTRACT_SYNTAX
-- On Comma reduce production usefulObjectClassReference -> ABSTRACT_SYNTAX
-- On Colon reduce production usefulObjectClassReference -> ABSTRACT_SYNTAX
-- On Circumflex reduce production usefulObjectClassReference -> ABSTRACT_SYNTAX
-- On Bang reduce production usefulObjectClassReference -> ABSTRACT_SYNTAX
-- On Assignment reduce production usefulObjectClassReference -> ABSTRACT_SYNTAX

State 163:
## Known stack suffix:
## usefulObjectClassReference
## LR(1) items:
definedObjectClass -> usefulObjectClassReference . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED Dot DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
## Reductions:
-- On Upper reduce production definedObjectClass -> usefulObjectClassReference
-- On UNIQUE reduce production definedObjectClass -> usefulObjectClassReference
-- On UNION reduce production definedObjectClass -> usefulObjectClassReference
-- On RightParen reduce production definedObjectClass -> usefulObjectClassReference
-- On RightDoubleBracket reduce production definedObjectClass -> usefulObjectClassReference
-- On RightBrace reduce production definedObjectClass -> usefulObjectClassReference
-- On OPTIONAL reduce production definedObjectClass -> usefulObjectClassReference
-- On Middle reduce production definedObjectClass -> usefulObjectClassReference
-- On Lower reduce production definedObjectClass -> usefulObjectClassReference
-- On LeftParen reduce production definedObjectClass -> usefulObjectClassReference
-- On INTERSECTION reduce production definedObjectClass -> usefulObjectClassReference
-- On EXCEPT reduce production definedObjectClass -> usefulObjectClassReference
-- On END reduce production definedObjectClass -> usefulObjectClassReference
-- On ENCODED reduce production definedObjectClass -> usefulObjectClassReference
-- On Dot reduce production definedObjectClass -> usefulObjectClassReference
-- On DEFAULT reduce production definedObjectClass -> usefulObjectClassReference
-- On Comma reduce production definedObjectClass -> usefulObjectClassReference
-- On Colon reduce production definedObjectClass -> usefulObjectClassReference
-- On Circumflex reduce production definedObjectClass -> usefulObjectClassReference
-- On Bang reduce production definedObjectClass -> usefulObjectClassReference
-- On Assignment reduce production definedObjectClass -> usefulObjectClassReference

State 164:
## Known stack suffix:
## externalObjectClassReference
## LR(1) items:
definedObjectClass -> externalObjectClassReference . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED Dot DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
## Reductions:
-- On Upper reduce production definedObjectClass -> externalObjectClassReference
-- On UNIQUE reduce production definedObjectClass -> externalObjectClassReference
-- On UNION reduce production definedObjectClass -> externalObjectClassReference
-- On RightParen reduce production definedObjectClass -> externalObjectClassReference
-- On RightDoubleBracket reduce production definedObjectClass -> externalObjectClassReference
-- On RightBrace reduce production definedObjectClass -> externalObjectClassReference
-- On OPTIONAL reduce production definedObjectClass -> externalObjectClassReference
-- On Middle reduce production definedObjectClass -> externalObjectClassReference
-- On Lower reduce production definedObjectClass -> externalObjectClassReference
-- On LeftParen reduce production definedObjectClass -> externalObjectClassReference
-- On INTERSECTION reduce production definedObjectClass -> externalObjectClassReference
-- On EXCEPT reduce production definedObjectClass -> externalObjectClassReference
-- On END reduce production definedObjectClass -> externalObjectClassReference
-- On ENCODED reduce production definedObjectClass -> externalObjectClassReference
-- On Dot reduce production definedObjectClass -> externalObjectClassReference
-- On DEFAULT reduce production definedObjectClass -> externalObjectClassReference
-- On Comma reduce production definedObjectClass -> externalObjectClassReference
-- On Colon reduce production definedObjectClass -> externalObjectClassReference
-- On Circumflex reduce production definedObjectClass -> externalObjectClassReference
-- On Bang reduce production definedObjectClass -> externalObjectClassReference
-- On Assignment reduce production definedObjectClass -> externalObjectClassReference

State 165:
## Known stack suffix:
## INSTANCE OF definedObjectClass
## LR(1) items:
instanceOfType -> INSTANCE OF definedObjectClass . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
## Reductions:
-- On Upper reduce production instanceOfType -> INSTANCE OF definedObjectClass
-- On UNIQUE reduce production instanceOfType -> INSTANCE OF definedObjectClass
-- On UNION reduce production instanceOfType -> INSTANCE OF definedObjectClass
-- On RightParen reduce production instanceOfType -> INSTANCE OF definedObjectClass
-- On RightDoubleBracket reduce production instanceOfType -> INSTANCE OF definedObjectClass
-- On RightBrace reduce production instanceOfType -> INSTANCE OF definedObjectClass
-- On OPTIONAL reduce production instanceOfType -> INSTANCE OF definedObjectClass
-- On Middle reduce production instanceOfType -> INSTANCE OF definedObjectClass
-- On Lower reduce production instanceOfType -> INSTANCE OF definedObjectClass
-- On LeftParen reduce production instanceOfType -> INSTANCE OF definedObjectClass
-- On INTERSECTION reduce production instanceOfType -> INSTANCE OF definedObjectClass
-- On EXCEPT reduce production instanceOfType -> INSTANCE OF definedObjectClass
-- On END reduce production instanceOfType -> INSTANCE OF definedObjectClass
-- On ENCODED reduce production instanceOfType -> INSTANCE OF definedObjectClass
-- On DEFAULT reduce production instanceOfType -> INSTANCE OF definedObjectClass
-- On Comma reduce production instanceOfType -> INSTANCE OF definedObjectClass
-- On Colon reduce production instanceOfType -> INSTANCE OF definedObjectClass
-- On Circumflex reduce production instanceOfType -> INSTANCE OF definedObjectClass
-- On Bang reduce production instanceOfType -> INSTANCE OF definedObjectClass
-- On Assignment reduce production instanceOfType -> INSTANCE OF definedObjectClass

State 166:
## Known stack suffix:
## IA5String
## LR(1) items:
restrictedCharacterStringType -> IA5String . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
## Reductions:
-- On Upper reduce production restrictedCharacterStringType -> IA5String
-- On UNIQUE reduce production restrictedCharacterStringType -> IA5String
-- On UNION reduce production restrictedCharacterStringType -> IA5String
-- On RightParen reduce production restrictedCharacterStringType -> IA5String
-- On RightDoubleBracket reduce production restrictedCharacterStringType -> IA5String
-- On RightBrace reduce production restrictedCharacterStringType -> IA5String
-- On OPTIONAL reduce production restrictedCharacterStringType -> IA5String
-- On Middle reduce production restrictedCharacterStringType -> IA5String
-- On Lower reduce production restrictedCharacterStringType -> IA5String
-- On LeftParen reduce production restrictedCharacterStringType -> IA5String
-- On INTERSECTION reduce production restrictedCharacterStringType -> IA5String
-- On EXCEPT reduce production restrictedCharacterStringType -> IA5String
-- On END reduce production restrictedCharacterStringType -> IA5String
-- On ENCODED reduce production restrictedCharacterStringType -> IA5String
-- On DEFAULT reduce production restrictedCharacterStringType -> IA5String
-- On Comma reduce production restrictedCharacterStringType -> IA5String
-- On Colon reduce production restrictedCharacterStringType -> IA5String
-- On Circumflex reduce production restrictedCharacterStringType -> IA5String
-- On Bang reduce production restrictedCharacterStringType -> IA5String
-- On Assignment reduce production restrictedCharacterStringType -> IA5String

State 167:
## Known stack suffix:
## GraphicString
## LR(1) items:
restrictedCharacterStringType -> GraphicString . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
## Reductions:
-- On Upper reduce production restrictedCharacterStringType -> GraphicString
-- On UNIQUE reduce production restrictedCharacterStringType -> GraphicString
-- On UNION reduce production restrictedCharacterStringType -> GraphicString
-- On RightParen reduce production restrictedCharacterStringType -> GraphicString
-- On RightDoubleBracket reduce production restrictedCharacterStringType -> GraphicString
-- On RightBrace reduce production restrictedCharacterStringType -> GraphicString
-- On OPTIONAL reduce production restrictedCharacterStringType -> GraphicString
-- On Middle reduce production restrictedCharacterStringType -> GraphicString
-- On Lower reduce production restrictedCharacterStringType -> GraphicString
-- On LeftParen reduce production restrictedCharacterStringType -> GraphicString
-- On INTERSECTION reduce production restrictedCharacterStringType -> GraphicString
-- On EXCEPT reduce production restrictedCharacterStringType -> GraphicString
-- On END reduce production restrictedCharacterStringType -> GraphicString
-- On ENCODED reduce production restrictedCharacterStringType -> GraphicString
-- On DEFAULT reduce production restrictedCharacterStringType -> GraphicString
-- On Comma reduce production restrictedCharacterStringType -> GraphicString
-- On Colon reduce production restrictedCharacterStringType -> GraphicString
-- On Circumflex reduce production restrictedCharacterStringType -> GraphicString
-- On Bang reduce production restrictedCharacterStringType -> GraphicString
-- On Assignment reduce production restrictedCharacterStringType -> GraphicString

State 168:
## Known stack suffix:
## GeneralizedTime
## LR(1) items:
usefulType -> GeneralizedTime . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
## Reductions:
-- On Upper reduce production usefulType -> GeneralizedTime
-- On UNIQUE reduce production usefulType -> GeneralizedTime
-- On UNION reduce production usefulType -> GeneralizedTime
-- On RightParen reduce production usefulType -> GeneralizedTime
-- On RightDoubleBracket reduce production usefulType -> GeneralizedTime
-- On RightBrace reduce production usefulType -> GeneralizedTime
-- On OPTIONAL reduce production usefulType -> GeneralizedTime
-- On Middle reduce production usefulType -> GeneralizedTime
-- On Lower reduce production usefulType -> GeneralizedTime
-- On LeftParen reduce production usefulType -> GeneralizedTime
-- On INTERSECTION reduce production usefulType -> GeneralizedTime
-- On EXCEPT reduce production usefulType -> GeneralizedTime
-- On END reduce production usefulType -> GeneralizedTime
-- On ENCODED reduce production usefulType -> GeneralizedTime
-- On DEFAULT reduce production usefulType -> GeneralizedTime
-- On Comma reduce production usefulType -> GeneralizedTime
-- On Colon reduce production usefulType -> GeneralizedTime
-- On Circumflex reduce production usefulType -> GeneralizedTime
-- On Bang reduce production usefulType -> GeneralizedTime
-- On Assignment reduce production usefulType -> GeneralizedTime

State 169:
## Known stack suffix:
## GeneralString
## LR(1) items:
restrictedCharacterStringType -> GeneralString . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
## Reductions:
-- On Upper reduce production restrictedCharacterStringType -> GeneralString
-- On UNIQUE reduce production restrictedCharacterStringType -> GeneralString
-- On UNION reduce production restrictedCharacterStringType -> GeneralString
-- On RightParen reduce production restrictedCharacterStringType -> GeneralString
-- On RightDoubleBracket reduce production restrictedCharacterStringType -> GeneralString
-- On RightBrace reduce production restrictedCharacterStringType -> GeneralString
-- On OPTIONAL reduce production restrictedCharacterStringType -> GeneralString
-- On Middle reduce production restrictedCharacterStringType -> GeneralString
-- On Lower reduce production restrictedCharacterStringType -> GeneralString
-- On LeftParen reduce production restrictedCharacterStringType -> GeneralString
-- On INTERSECTION reduce production restrictedCharacterStringType -> GeneralString
-- On EXCEPT reduce production restrictedCharacterStringType -> GeneralString
-- On END reduce production restrictedCharacterStringType -> GeneralString
-- On ENCODED reduce production restrictedCharacterStringType -> GeneralString
-- On DEFAULT reduce production restrictedCharacterStringType -> GeneralString
-- On Comma reduce production restrictedCharacterStringType -> GeneralString
-- On Colon reduce production restrictedCharacterStringType -> GeneralString
-- On Circumflex reduce production restrictedCharacterStringType -> GeneralString
-- On Bang reduce production restrictedCharacterStringType -> GeneralString
-- On Assignment reduce production restrictedCharacterStringType -> GeneralString

State 170:
## Known stack suffix:
## EXTERNAL
## LR(1) items:
externalType -> EXTERNAL . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
## Reductions:
-- On Upper reduce production externalType -> EXTERNAL
-- On UNIQUE reduce production externalType -> EXTERNAL
-- On UNION reduce production externalType -> EXTERNAL
-- On RightParen reduce production externalType -> EXTERNAL
-- On RightDoubleBracket reduce production externalType -> EXTERNAL
-- On RightBrace reduce production externalType -> EXTERNAL
-- On OPTIONAL reduce production externalType -> EXTERNAL
-- On Middle reduce production externalType -> EXTERNAL
-- On Lower reduce production externalType -> EXTERNAL
-- On LeftParen reduce production externalType -> EXTERNAL
-- On INTERSECTION reduce production externalType -> EXTERNAL
-- On EXCEPT reduce production externalType -> EXTERNAL
-- On END reduce production externalType -> EXTERNAL
-- On ENCODED reduce production externalType -> EXTERNAL
-- On DEFAULT reduce production externalType -> EXTERNAL
-- On Comma reduce production externalType -> EXTERNAL
-- On Colon reduce production externalType -> EXTERNAL
-- On Circumflex reduce production externalType -> EXTERNAL
-- On Bang reduce production externalType -> EXTERNAL
-- On Assignment reduce production externalType -> EXTERNAL

State 171:
## Known stack suffix:
## ENUMERATED
## LR(1) items:
enumeratedType -> ENUMERATED . LeftBrace enumerations RightBrace [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
-- On LeftBrace shift to state 172
## Reductions:

State 172:
## Known stack suffix:
## ENUMERATED LeftBrace
## LR(1) items:
enumeratedType -> ENUMERATED LeftBrace . enumerations RightBrace [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
-- On Lower shift to state 173
-- On rootEnumeration shift to state 174
-- On namedNumber shift to state 430
-- On enumerations shift to state 436
-- On enumerationItem shift to state 431
-- On enumeration shift to state 438
## Reductions:

State 173:
## Known stack suffix:
## Lower
## LR(1) items:
enumerationItem -> Lower . [ RightBrace Comma ]
namedNumber -> Lower . LeftParen signedNumber RightParen [ RightBrace Comma ]
namedNumber -> Lower . LeftParen definedValue RightParen [ RightBrace Comma ]
## Transitions:
-- On LeftParen shift to state 144
## Reductions:
-- On RightBrace reduce production enumerationItem -> Lower
-- On Comma reduce production enumerationItem -> Lower

State 174:
## Known stack suffix:
## rootEnumeration
## LR(1) items:
enumerations -> rootEnumeration . [ RightBrace ]
enumerations -> rootEnumeration . Comma Ellipsis exceptionSpec [ RightBrace ]
enumerations -> rootEnumeration . Comma Ellipsis exceptionSpec Comma additionalEnumeration [ RightBrace ]
## Transitions:
-- On Comma shift to state 175
## Reductions:
-- On RightBrace reduce production enumerations -> rootEnumeration

State 175:
## Known stack suffix:
## rootEnumeration Comma
## LR(1) items:
enumerations -> rootEnumeration Comma . Ellipsis exceptionSpec [ RightBrace ]
enumerations -> rootEnumeration Comma . Ellipsis exceptionSpec Comma additionalEnumeration [ RightBrace ]
## Transitions:
-- On Ellipsis shift to state 176
## Reductions:

State 176:
## Known stack suffix:
## rootEnumeration Comma Ellipsis
## LR(1) items:
enumerations -> rootEnumeration Comma Ellipsis . exceptionSpec [ RightBrace ]
enumerations -> rootEnumeration Comma Ellipsis . exceptionSpec Comma additionalEnumeration [ RightBrace ]
## Transitions:
-- On Bang shift to state 177
-- On exceptionSpec shift to state 428
## Reductions:
-- On RightBrace reduce production exceptionSpec ->
-- On Comma reduce production exceptionSpec ->

State 177:
## Known stack suffix:
## Bang
## LR(1) items:
exceptionSpec -> Bang . exceptionIdentification [ RightParen RightBrace Comma ]
## Transitions:
-- On VisibleString shift to state 66
-- On VideotexString shift to state 67
-- On Upper shift to state 108
-- On UniversalString shift to state 72
-- On UTF8String shift to state 73
-- On UTCTime shift to state 74
-- On TeletexString shift to state 75
-- On TYPE_IDENTIFIER shift to state 76
-- On T61String shift to state 78
-- On SET shift to state 79
-- On SEQUENCE shift to state 111
-- On RELATIVE_OID shift to state 116
-- On REAL shift to state 117
-- On PrintableString shift to state 118
-- On ObjectDescriptor shift to state 119
-- On OCTET shift to state 120
-- On OBJECT shift to state 122
-- On NumericString shift to state 124
-- On Number shift to state 145
-- On NULL shift to state 125
-- On Lower shift to state 178
-- On LeftBracket shift to state 129
-- On ISO646String shift to state 140
-- On INTEGER shift to state 141
-- On INSTANCE shift to state 157
-- On IA5String shift to state 166
-- On Hyphen shift to state 146
-- On GraphicString shift to state 167
-- On GeneralizedTime shift to state 168
-- On GeneralString shift to state 169
-- On EXTERNAL shift to state 170
-- On ENUMERATED shift to state 171
-- On EMBEDDED shift to state 179
-- On CHOICE shift to state 181
-- On CHARACTER shift to state 184
-- On BOOLEAN shift to state 186
-- On BMPString shift to state 187
-- On BIT shift to state 188
-- On ABSTRACT_SYNTAX shift to state 162
-- On valueSetFromObjects shift to state 202
-- On usefulType shift to state 203
-- On usefulObjectClassReference shift to state 163
-- On unrestrictedCharacterStringType shift to state 204
-- On type_x shift to state 294
-- On typeWithConstraint shift to state 207
-- On typeFromObject shift to state 208
-- On taggedType shift to state 209
-- On tag shift to state 210
-- On simpleDefinedValue shift to state 64
-- On simpleDefinedType shift to state 213
-- On signedNumber shift to state 425
-- On setType shift to state 215
-- On setOfType shift to state 216
-- On sequenceType shift to state 217
-- On sequenceOfType shift to state 218
-- On selectionType shift to state 219
-- On restrictedCharacterStringType shift to state 220
-- On relativeOIDType shift to state 221
-- On referencedType shift to state 222
-- On referencedObjects shift to state 223
-- On realType shift to state 232
-- On parameterizedValueSetType shift to state 233
-- On parameterizedValue shift to state 135
-- On parameterizedType shift to state 234
-- On parameterizedObjectSet shift to state 235
-- On parameterizedObject shift to state 236
-- On octetStringType shift to state 237
-- On objectIdentifierType shift to state 238
-- On objectClassFieldType shift to state 239
-- On nullType shift to state 240
-- On integerType shift to state 241
-- On instanceOfType shift to state 242
-- On externalValueReference shift to state 136
-- On externalTypeReference shift to state 243
-- On externalType shift to state 244
-- On externalObjectSetReference shift to state 245
-- On externalObjectReference shift to state 246
-- On externalObjectClassReference shift to state 164
-- On exceptionIdentification shift to state 426
-- On enumeratedType shift to state 247
-- On embeddedPDVType shift to state 248
-- On definedValue shift to state 427
-- On definedType shift to state 249
-- On definedObjectSet shift to state 250
-- On definedObjectClass shift to state 252
-- On definedObject shift to state 255
-- On constrainedType shift to state 257
-- On choiceType shift to state 258
-- On characterStringType shift to state 259
-- On builtinType shift to state 260
-- On booleanType shift to state 261
-- On bitStringType shift to state 262
## Reductions:

State 178:
## Known stack suffix:
## Lower
## LR(1) items:
definedObject -> Lower . [ LeftBrace Dot ]
definedValue -> Lower . [ RightParen RightBrace Comma ]
selectionType -> Lower . LessThan type_x [ LeftParen Colon ]
simpleDefinedValue -> Lower . [ LeftBrace ]
## Transitions:
-- On LessThan shift to state 128
## Reductions:
-- On RightParen reduce production definedValue -> Lower
-- On RightBrace reduce production definedValue -> Lower
-- On LeftBrace reduce production definedObject -> Lower
-- On Dot reduce production definedObject -> Lower
-- On Comma reduce production definedValue -> Lower

State 179:
## Known stack suffix:
## EMBEDDED
## LR(1) items:
embeddedPDVType -> EMBEDDED . PDV [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
-- On PDV shift to state 180
## Reductions:

State 180:
## Known stack suffix:
## EMBEDDED PDV
## LR(1) items:
embeddedPDVType -> EMBEDDED PDV . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
## Reductions:
-- On Upper reduce production embeddedPDVType -> EMBEDDED PDV
-- On UNIQUE reduce production embeddedPDVType -> EMBEDDED PDV
-- On UNION reduce production embeddedPDVType -> EMBEDDED PDV
-- On RightParen reduce production embeddedPDVType -> EMBEDDED PDV
-- On RightDoubleBracket reduce production embeddedPDVType -> EMBEDDED PDV
-- On RightBrace reduce production embeddedPDVType -> EMBEDDED PDV
-- On OPTIONAL reduce production embeddedPDVType -> EMBEDDED PDV
-- On Middle reduce production embeddedPDVType -> EMBEDDED PDV
-- On Lower reduce production embeddedPDVType -> EMBEDDED PDV
-- On LeftParen reduce production embeddedPDVType -> EMBEDDED PDV
-- On INTERSECTION reduce production embeddedPDVType -> EMBEDDED PDV
-- On EXCEPT reduce production embeddedPDVType -> EMBEDDED PDV
-- On END reduce production embeddedPDVType -> EMBEDDED PDV
-- On ENCODED reduce production embeddedPDVType -> EMBEDDED PDV
-- On DEFAULT reduce production embeddedPDVType -> EMBEDDED PDV
-- On Comma reduce production embeddedPDVType -> EMBEDDED PDV
-- On Colon reduce production embeddedPDVType -> EMBEDDED PDV
-- On Circumflex reduce production embeddedPDVType -> EMBEDDED PDV
-- On Bang reduce production embeddedPDVType -> EMBEDDED PDV
-- On Assignment reduce production embeddedPDVType -> EMBEDDED PDV

State 181:
## Known stack suffix:
## CHOICE
## LR(1) items:
choiceType -> CHOICE . LeftBrace alternativeTypeLists RightBrace [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
-- On LeftBrace shift to state 182
## Reductions:

State 182:
## Known stack suffix:
## CHOICE LeftBrace
## LR(1) items:
choiceType -> CHOICE LeftBrace . alternativeTypeLists RightBrace [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
-- On Lower shift to state 183
-- On rootAlternativeTypeList shift to state 266
-- On namedType shift to state 276
-- On alternativeTypeLists shift to state 291
-- On alternativeTypeList shift to state 293
## Reductions:

State 183:
## Known stack suffix:
## Lower
## LR(1) items:
namedType -> Lower . type_x [ RightDoubleBracket RightBrace OPTIONAL DEFAULT Comma ]
## Transitions:
-- On VisibleString shift to state 66
-- On VideotexString shift to state 67
-- On Upper shift to state 113
-- On UniversalString shift to state 72
-- On UTF8String shift to state 73
-- On UTCTime shift to state 74
-- On TeletexString shift to state 75
-- On TYPE_IDENTIFIER shift to state 76
-- On T61String shift to state 78
-- On SET shift to state 79
-- On SEQUENCE shift to state 111
-- On RELATIVE_OID shift to state 116
-- On REAL shift to state 117
-- On PrintableString shift to state 118
-- On ObjectDescriptor shift to state 119
-- On OCTET shift to state 120
-- On OBJECT shift to state 122
-- On NumericString shift to state 124
-- On NULL shift to state 125
-- On Lower shift to state 127
-- On LeftBracket shift to state 129
-- On ISO646String shift to state 140
-- On INTEGER shift to state 141
-- On INSTANCE shift to state 157
-- On IA5String shift to state 166
-- On GraphicString shift to state 167
-- On GeneralizedTime shift to state 168
-- On GeneralString shift to state 169
-- On EXTERNAL shift to state 170
-- On ENUMERATED shift to state 171
-- On EMBEDDED shift to state 179
-- On CHOICE shift to state 181
-- On CHARACTER shift to state 184
-- On BOOLEAN shift to state 186
-- On BMPString shift to state 187
-- On BIT shift to state 188
-- On ABSTRACT_SYNTAX shift to state 162
-- On valueSetFromObjects shift to state 202
-- On usefulType shift to state 203
-- On usefulObjectClassReference shift to state 163
-- On unrestrictedCharacterStringType shift to state 204
-- On type_x shift to state 205
-- On typeWithConstraint shift to state 207
-- On typeFromObject shift to state 208
-- On taggedType shift to state 209
-- On tag shift to state 210
-- On simpleDefinedType shift to state 213
-- On setType shift to state 215
-- On setOfType shift to state 216
-- On sequenceType shift to state 217
-- On sequenceOfType shift to state 218
-- On selectionType shift to state 219
-- On restrictedCharacterStringType shift to state 220
-- On relativeOIDType shift to state 221
-- On referencedType shift to state 222
-- On referencedObjects shift to state 223
-- On realType shift to state 232
-- On parameterizedValueSetType shift to state 233
-- On parameterizedType shift to state 234
-- On parameterizedObjectSet shift to state 235
-- On parameterizedObject shift to state 236
-- On octetStringType shift to state 237
-- On objectIdentifierType shift to state 238
-- On objectClassFieldType shift to state 239
-- On nullType shift to state 240
-- On integerType shift to state 241
-- On instanceOfType shift to state 242
-- On externalTypeReference shift to state 243
-- On externalType shift to state 244
-- On externalObjectSetReference shift to state 245
-- On externalObjectReference shift to state 246
-- On externalObjectClassReference shift to state 164
-- On enumeratedType shift to state 247
-- On embeddedPDVType shift to state 248
-- On definedType shift to state 249
-- On definedObjectSet shift to state 250
-- On definedObjectClass shift to state 252
-- On definedObject shift to state 255
-- On constrainedType shift to state 257
-- On choiceType shift to state 258
-- On characterStringType shift to state 259
-- On builtinType shift to state 260
-- On booleanType shift to state 261
-- On bitStringType shift to state 262
## Reductions:

State 184:
## Known stack suffix:
## CHARACTER
## LR(1) items:
unrestrictedCharacterStringType -> CHARACTER . STRING [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
-- On STRING shift to state 185
## Reductions:

State 185:
## Known stack suffix:
## CHARACTER STRING
## LR(1) items:
unrestrictedCharacterStringType -> CHARACTER STRING . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
## Reductions:
-- On Upper reduce production unrestrictedCharacterStringType -> CHARACTER STRING
-- On UNIQUE reduce production unrestrictedCharacterStringType -> CHARACTER STRING
-- On UNION reduce production unrestrictedCharacterStringType -> CHARACTER STRING
-- On RightParen reduce production unrestrictedCharacterStringType -> CHARACTER STRING
-- On RightDoubleBracket reduce production unrestrictedCharacterStringType -> CHARACTER STRING
-- On RightBrace reduce production unrestrictedCharacterStringType -> CHARACTER STRING
-- On OPTIONAL reduce production unrestrictedCharacterStringType -> CHARACTER STRING
-- On Middle reduce production unrestrictedCharacterStringType -> CHARACTER STRING
-- On Lower reduce production unrestrictedCharacterStringType -> CHARACTER STRING
-- On LeftParen reduce production unrestrictedCharacterStringType -> CHARACTER STRING
-- On INTERSECTION reduce production unrestrictedCharacterStringType -> CHARACTER STRING
-- On EXCEPT reduce production unrestrictedCharacterStringType -> CHARACTER STRING
-- On END reduce production unrestrictedCharacterStringType -> CHARACTER STRING
-- On ENCODED reduce production unrestrictedCharacterStringType -> CHARACTER STRING
-- On DEFAULT reduce production unrestrictedCharacterStringType -> CHARACTER STRING
-- On Comma reduce production unrestrictedCharacterStringType -> CHARACTER STRING
-- On Colon reduce production unrestrictedCharacterStringType -> CHARACTER STRING
-- On Circumflex reduce production unrestrictedCharacterStringType -> CHARACTER STRING
-- On Bang reduce production unrestrictedCharacterStringType -> CHARACTER STRING
-- On Assignment reduce production unrestrictedCharacterStringType -> CHARACTER STRING

State 186:
## Known stack suffix:
## BOOLEAN
## LR(1) items:
booleanType -> BOOLEAN . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
## Reductions:
-- On Upper reduce production booleanType -> BOOLEAN
-- On UNIQUE reduce production booleanType -> BOOLEAN
-- On UNION reduce production booleanType -> BOOLEAN
-- On RightParen reduce production booleanType -> BOOLEAN
-- On RightDoubleBracket reduce production booleanType -> BOOLEAN
-- On RightBrace reduce production booleanType -> BOOLEAN
-- On OPTIONAL reduce production booleanType -> BOOLEAN
-- On Middle reduce production booleanType -> BOOLEAN
-- On Lower reduce production booleanType -> BOOLEAN
-- On LeftParen reduce production booleanType -> BOOLEAN
-- On INTERSECTION reduce production booleanType -> BOOLEAN
-- On EXCEPT reduce production booleanType -> BOOLEAN
-- On END reduce production booleanType -> BOOLEAN
-- On ENCODED reduce production booleanType -> BOOLEAN
-- On DEFAULT reduce production booleanType -> BOOLEAN
-- On Comma reduce production booleanType -> BOOLEAN
-- On Colon reduce production booleanType -> BOOLEAN
-- On Circumflex reduce production booleanType -> BOOLEAN
-- On Bang reduce production booleanType -> BOOLEAN
-- On Assignment reduce production booleanType -> BOOLEAN

State 187:
## Known stack suffix:
## BMPString
## LR(1) items:
restrictedCharacterStringType -> BMPString . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
## Reductions:
-- On Upper reduce production restrictedCharacterStringType -> BMPString
-- On UNIQUE reduce production restrictedCharacterStringType -> BMPString
-- On UNION reduce production restrictedCharacterStringType -> BMPString
-- On RightParen reduce production restrictedCharacterStringType -> BMPString
-- On RightDoubleBracket reduce production restrictedCharacterStringType -> BMPString
-- On RightBrace reduce production restrictedCharacterStringType -> BMPString
-- On OPTIONAL reduce production restrictedCharacterStringType -> BMPString
-- On Middle reduce production restrictedCharacterStringType -> BMPString
-- On Lower reduce production restrictedCharacterStringType -> BMPString
-- On LeftParen reduce production restrictedCharacterStringType -> BMPString
-- On INTERSECTION reduce production restrictedCharacterStringType -> BMPString
-- On EXCEPT reduce production restrictedCharacterStringType -> BMPString
-- On END reduce production restrictedCharacterStringType -> BMPString
-- On ENCODED reduce production restrictedCharacterStringType -> BMPString
-- On DEFAULT reduce production restrictedCharacterStringType -> BMPString
-- On Comma reduce production restrictedCharacterStringType -> BMPString
-- On Colon reduce production restrictedCharacterStringType -> BMPString
-- On Circumflex reduce production restrictedCharacterStringType -> BMPString
-- On Bang reduce production restrictedCharacterStringType -> BMPString
-- On Assignment reduce production restrictedCharacterStringType -> BMPString

State 188:
## Known stack suffix:
## BIT
## LR(1) items:
bitStringType -> BIT . STRING [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
bitStringType -> BIT . STRING LeftBrace namedBitList RightBrace [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
-- On STRING shift to state 189
## Reductions:

State 189:
## Known stack suffix:
## BIT STRING
## LR(1) items:
bitStringType -> BIT STRING . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
bitStringType -> BIT STRING . LeftBrace namedBitList RightBrace [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
-- On LeftBrace shift to state 190
## Reductions:
-- On Upper reduce production bitStringType -> BIT STRING
-- On UNIQUE reduce production bitStringType -> BIT STRING
-- On UNION reduce production bitStringType -> BIT STRING
-- On RightParen reduce production bitStringType -> BIT STRING
-- On RightDoubleBracket reduce production bitStringType -> BIT STRING
-- On RightBrace reduce production bitStringType -> BIT STRING
-- On OPTIONAL reduce production bitStringType -> BIT STRING
-- On Middle reduce production bitStringType -> BIT STRING
-- On Lower reduce production bitStringType -> BIT STRING
-- On LeftParen reduce production bitStringType -> BIT STRING
-- On INTERSECTION reduce production bitStringType -> BIT STRING
-- On EXCEPT reduce production bitStringType -> BIT STRING
-- On END reduce production bitStringType -> BIT STRING
-- On ENCODED reduce production bitStringType -> BIT STRING
-- On DEFAULT reduce production bitStringType -> BIT STRING
-- On Comma reduce production bitStringType -> BIT STRING
-- On Colon reduce production bitStringType -> BIT STRING
-- On Circumflex reduce production bitStringType -> BIT STRING
-- On Bang reduce production bitStringType -> BIT STRING
-- On Assignment reduce production bitStringType -> BIT STRING

State 190:
## Known stack suffix:
## BIT STRING LeftBrace
## LR(1) items:
bitStringType -> BIT STRING LeftBrace . namedBitList RightBrace [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
-- On Lower shift to state 191
-- On namedBitList shift to state 197
-- On namedBit shift to state 201
## Reductions:

State 191:
## Known stack suffix:
## Lower
## LR(1) items:
namedBit -> Lower . LeftParen Number RightParen [ RightBrace Comma ]
namedBit -> Lower . LeftParen definedValue RightParen [ RightBrace Comma ]
## Transitions:
-- On LeftParen shift to state 192
## Reductions:

State 192:
## Known stack suffix:
## Lower LeftParen
## LR(1) items:
namedBit -> Lower LeftParen . Number RightParen [ RightBrace Comma ]
namedBit -> Lower LeftParen . definedValue RightParen [ RightBrace Comma ]
## Transitions:
-- On Upper shift to state 56
-- On Number shift to state 193
-- On Lower shift to state 59
-- On simpleDefinedValue shift to state 64
-- On parameterizedValue shift to state 135
-- On externalValueReference shift to state 136
-- On definedValue shift to state 195
## Reductions:

State 193:
## Known stack suffix:
## Lower LeftParen Number
## LR(1) items:
namedBit -> Lower LeftParen Number . RightParen [ RightBrace Comma ]
## Transitions:
-- On RightParen shift to state 194
## Reductions:

State 194:
## Known stack suffix:
## Lower LeftParen Number RightParen
## LR(1) items:
namedBit -> Lower LeftParen Number RightParen . [ RightBrace Comma ]
## Transitions:
## Reductions:
-- On RightBrace reduce production namedBit -> Lower LeftParen Number RightParen
-- On Comma reduce production namedBit -> Lower LeftParen Number RightParen

State 195:
## Known stack suffix:
## Lower LeftParen definedValue
## LR(1) items:
namedBit -> Lower LeftParen definedValue . RightParen [ RightBrace Comma ]
## Transitions:
-- On RightParen shift to state 196
## Reductions:

State 196:
## Known stack suffix:
## Lower LeftParen definedValue RightParen
## LR(1) items:
namedBit -> Lower LeftParen definedValue RightParen . [ RightBrace Comma ]
## Transitions:
## Reductions:
-- On RightBrace reduce production namedBit -> Lower LeftParen definedValue RightParen
-- On Comma reduce production namedBit -> Lower LeftParen definedValue RightParen

State 197:
## Known stack suffix:
## BIT STRING LeftBrace namedBitList
## LR(1) items:
bitStringType -> BIT STRING LeftBrace namedBitList . RightBrace [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
namedBitList -> namedBitList . Comma namedBit [ RightBrace Comma ]
## Transitions:
-- On RightBrace shift to state 198
-- On Comma shift to state 199
## Reductions:

State 198:
## Known stack suffix:
## BIT STRING LeftBrace namedBitList RightBrace
## LR(1) items:
bitStringType -> BIT STRING LeftBrace namedBitList RightBrace . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
## Reductions:
-- On Upper reduce production bitStringType -> BIT STRING LeftBrace namedBitList RightBrace
-- On UNIQUE reduce production bitStringType -> BIT STRING LeftBrace namedBitList RightBrace
-- On UNION reduce production bitStringType -> BIT STRING LeftBrace namedBitList RightBrace
-- On RightParen reduce production bitStringType -> BIT STRING LeftBrace namedBitList RightBrace
-- On RightDoubleBracket reduce production bitStringType -> BIT STRING LeftBrace namedBitList RightBrace
-- On RightBrace reduce production bitStringType -> BIT STRING LeftBrace namedBitList RightBrace
-- On OPTIONAL reduce production bitStringType -> BIT STRING LeftBrace namedBitList RightBrace
-- On Middle reduce production bitStringType -> BIT STRING LeftBrace namedBitList RightBrace
-- On Lower reduce production bitStringType -> BIT STRING LeftBrace namedBitList RightBrace
-- On LeftParen reduce production bitStringType -> BIT STRING LeftBrace namedBitList RightBrace
-- On INTERSECTION reduce production bitStringType -> BIT STRING LeftBrace namedBitList RightBrace
-- On EXCEPT reduce production bitStringType -> BIT STRING LeftBrace namedBitList RightBrace
-- On END reduce production bitStringType -> BIT STRING LeftBrace namedBitList RightBrace
-- On ENCODED reduce production bitStringType -> BIT STRING LeftBrace namedBitList RightBrace
-- On DEFAULT reduce production bitStringType -> BIT STRING LeftBrace namedBitList RightBrace
-- On Comma reduce production bitStringType -> BIT STRING LeftBrace namedBitList RightBrace
-- On Colon reduce production bitStringType -> BIT STRING LeftBrace namedBitList RightBrace
-- On Circumflex reduce production bitStringType -> BIT STRING LeftBrace namedBitList RightBrace
-- On Bang reduce production bitStringType -> BIT STRING LeftBrace namedBitList RightBrace
-- On Assignment reduce production bitStringType -> BIT STRING LeftBrace namedBitList RightBrace

State 199:
## Known stack suffix:
## namedBitList Comma
## LR(1) items:
namedBitList -> namedBitList Comma . namedBit [ RightBrace Comma ]
## Transitions:
-- On Lower shift to state 191
-- On namedBit shift to state 200
## Reductions:

State 200:
## Known stack suffix:
## namedBitList Comma namedBit
## LR(1) items:
namedBitList -> namedBitList Comma namedBit . [ RightBrace Comma ]
## Transitions:
## Reductions:
-- On RightBrace reduce production namedBitList -> namedBitList Comma namedBit
-- On Comma reduce production namedBitList -> namedBitList Comma namedBit

State 201:
## Known stack suffix:
## namedBit
## LR(1) items:
namedBitList -> namedBit . [ RightBrace Comma ]
## Transitions:
## Reductions:
-- On RightBrace reduce production namedBitList -> namedBit
-- On Comma reduce production namedBitList -> namedBit

State 202:
## Known stack suffix:
## valueSetFromObjects
## LR(1) items:
referencedType -> valueSetFromObjects . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
## Reductions:
-- On Upper reduce production referencedType -> valueSetFromObjects
-- On UNIQUE reduce production referencedType -> valueSetFromObjects
-- On UNION reduce production referencedType -> valueSetFromObjects
-- On RightParen reduce production referencedType -> valueSetFromObjects
-- On RightDoubleBracket reduce production referencedType -> valueSetFromObjects
-- On RightBrace reduce production referencedType -> valueSetFromObjects
-- On OPTIONAL reduce production referencedType -> valueSetFromObjects
-- On Middle reduce production referencedType -> valueSetFromObjects
-- On Lower reduce production referencedType -> valueSetFromObjects
-- On LeftParen reduce production referencedType -> valueSetFromObjects
-- On INTERSECTION reduce production referencedType -> valueSetFromObjects
-- On EXCEPT reduce production referencedType -> valueSetFromObjects
-- On END reduce production referencedType -> valueSetFromObjects
-- On ENCODED reduce production referencedType -> valueSetFromObjects
-- On DEFAULT reduce production referencedType -> valueSetFromObjects
-- On Comma reduce production referencedType -> valueSetFromObjects
-- On Colon reduce production referencedType -> valueSetFromObjects
-- On Circumflex reduce production referencedType -> valueSetFromObjects
-- On Bang reduce production referencedType -> valueSetFromObjects
-- On Assignment reduce production referencedType -> valueSetFromObjects

State 203:
## Known stack suffix:
## usefulType
## LR(1) items:
referencedType -> usefulType . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
## Reductions:
-- On Upper reduce production referencedType -> usefulType
-- On UNIQUE reduce production referencedType -> usefulType
-- On UNION reduce production referencedType -> usefulType
-- On RightParen reduce production referencedType -> usefulType
-- On RightDoubleBracket reduce production referencedType -> usefulType
-- On RightBrace reduce production referencedType -> usefulType
-- On OPTIONAL reduce production referencedType -> usefulType
-- On Middle reduce production referencedType -> usefulType
-- On Lower reduce production referencedType -> usefulType
-- On LeftParen reduce production referencedType -> usefulType
-- On INTERSECTION reduce production referencedType -> usefulType
-- On EXCEPT reduce production referencedType -> usefulType
-- On END reduce production referencedType -> usefulType
-- On ENCODED reduce production referencedType -> usefulType
-- On DEFAULT reduce production referencedType -> usefulType
-- On Comma reduce production referencedType -> usefulType
-- On Colon reduce production referencedType -> usefulType
-- On Circumflex reduce production referencedType -> usefulType
-- On Bang reduce production referencedType -> usefulType
-- On Assignment reduce production referencedType -> usefulType

State 204:
## Known stack suffix:
## unrestrictedCharacterStringType
## LR(1) items:
characterStringType -> unrestrictedCharacterStringType . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
## Reductions:
-- On Upper reduce production characterStringType -> unrestrictedCharacterStringType
-- On UNIQUE reduce production characterStringType -> unrestrictedCharacterStringType
-- On UNION reduce production characterStringType -> unrestrictedCharacterStringType
-- On RightParen reduce production characterStringType -> unrestrictedCharacterStringType
-- On RightDoubleBracket reduce production characterStringType -> unrestrictedCharacterStringType
-- On RightBrace reduce production characterStringType -> unrestrictedCharacterStringType
-- On OPTIONAL reduce production characterStringType -> unrestrictedCharacterStringType
-- On Middle reduce production characterStringType -> unrestrictedCharacterStringType
-- On Lower reduce production characterStringType -> unrestrictedCharacterStringType
-- On LeftParen reduce production characterStringType -> unrestrictedCharacterStringType
-- On INTERSECTION reduce production characterStringType -> unrestrictedCharacterStringType
-- On EXCEPT reduce production characterStringType -> unrestrictedCharacterStringType
-- On END reduce production characterStringType -> unrestrictedCharacterStringType
-- On ENCODED reduce production characterStringType -> unrestrictedCharacterStringType
-- On DEFAULT reduce production characterStringType -> unrestrictedCharacterStringType
-- On Comma reduce production characterStringType -> unrestrictedCharacterStringType
-- On Colon reduce production characterStringType -> unrestrictedCharacterStringType
-- On Circumflex reduce production characterStringType -> unrestrictedCharacterStringType
-- On Bang reduce production characterStringType -> unrestrictedCharacterStringType
-- On Assignment reduce production characterStringType -> unrestrictedCharacterStringType

State 205:
## Known stack suffix:
## Lower type_x
## LR(1) items:
constrainedType -> type_x . constraint_x [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
namedType -> Lower type_x . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
-- On LeftParen shift to state 81
-- On constraint_x shift to state 206
## Reductions:
-- On Upper reduce production namedType -> Lower type_x
-- On UNIQUE reduce production namedType -> Lower type_x
-- On UNION reduce production namedType -> Lower type_x
-- On RightParen reduce production namedType -> Lower type_x
-- On RightDoubleBracket reduce production namedType -> Lower type_x
-- On RightBrace reduce production namedType -> Lower type_x
-- On OPTIONAL reduce production namedType -> Lower type_x
-- On Middle reduce production namedType -> Lower type_x
-- On Lower reduce production namedType -> Lower type_x
-- On INTERSECTION reduce production namedType -> Lower type_x
-- On EXCEPT reduce production namedType -> Lower type_x
-- On END reduce production namedType -> Lower type_x
-- On ENCODED reduce production namedType -> Lower type_x
-- On DEFAULT reduce production namedType -> Lower type_x
-- On Comma reduce production namedType -> Lower type_x
-- On Colon reduce production namedType -> Lower type_x
-- On Circumflex reduce production namedType -> Lower type_x
-- On Bang reduce production namedType -> Lower type_x
-- On Assignment reduce production namedType -> Lower type_x

State 206:
## Known stack suffix:
## type_x constraint_x
## LR(1) items:
constrainedType -> type_x constraint_x . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
## Reductions:
-- On Upper reduce production constrainedType -> type_x constraint_x
-- On UNIQUE reduce production constrainedType -> type_x constraint_x
-- On UNION reduce production constrainedType -> type_x constraint_x
-- On RightParen reduce production constrainedType -> type_x constraint_x
-- On RightDoubleBracket reduce production constrainedType -> type_x constraint_x
-- On RightBrace reduce production constrainedType -> type_x constraint_x
-- On OPTIONAL reduce production constrainedType -> type_x constraint_x
-- On Middle reduce production constrainedType -> type_x constraint_x
-- On Lower reduce production constrainedType -> type_x constraint_x
-- On LeftParen reduce production constrainedType -> type_x constraint_x
-- On INTERSECTION reduce production constrainedType -> type_x constraint_x
-- On EXCEPT reduce production constrainedType -> type_x constraint_x
-- On END reduce production constrainedType -> type_x constraint_x
-- On ENCODED reduce production constrainedType -> type_x constraint_x
-- On DEFAULT reduce production constrainedType -> type_x constraint_x
-- On Comma reduce production constrainedType -> type_x constraint_x
-- On Colon reduce production constrainedType -> type_x constraint_x
-- On Circumflex reduce production constrainedType -> type_x constraint_x
-- On Bang reduce production constrainedType -> type_x constraint_x
-- On Assignment reduce production constrainedType -> type_x constraint_x

State 207:
## Known stack suffix:
## typeWithConstraint
## LR(1) items:
constrainedType -> typeWithConstraint . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
## Reductions:
-- On Upper reduce production constrainedType -> typeWithConstraint
-- On UNIQUE reduce production constrainedType -> typeWithConstraint
-- On UNION reduce production constrainedType -> typeWithConstraint
-- On RightParen reduce production constrainedType -> typeWithConstraint
-- On RightDoubleBracket reduce production constrainedType -> typeWithConstraint
-- On RightBrace reduce production constrainedType -> typeWithConstraint
-- On OPTIONAL reduce production constrainedType -> typeWithConstraint
-- On Middle reduce production constrainedType -> typeWithConstraint
-- On Lower reduce production constrainedType -> typeWithConstraint
-- On LeftParen reduce production constrainedType -> typeWithConstraint
-- On INTERSECTION reduce production constrainedType -> typeWithConstraint
-- On EXCEPT reduce production constrainedType -> typeWithConstraint
-- On END reduce production constrainedType -> typeWithConstraint
-- On ENCODED reduce production constrainedType -> typeWithConstraint
-- On DEFAULT reduce production constrainedType -> typeWithConstraint
-- On Comma reduce production constrainedType -> typeWithConstraint
-- On Colon reduce production constrainedType -> typeWithConstraint
-- On Circumflex reduce production constrainedType -> typeWithConstraint
-- On Bang reduce production constrainedType -> typeWithConstraint
-- On Assignment reduce production constrainedType -> typeWithConstraint

State 208:
## Known stack suffix:
## typeFromObject
## LR(1) items:
referencedType -> typeFromObject . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
## Reductions:
-- On Upper reduce production referencedType -> typeFromObject
-- On UNIQUE reduce production referencedType -> typeFromObject
-- On UNION reduce production referencedType -> typeFromObject
-- On RightParen reduce production referencedType -> typeFromObject
-- On RightDoubleBracket reduce production referencedType -> typeFromObject
-- On RightBrace reduce production referencedType -> typeFromObject
-- On OPTIONAL reduce production referencedType -> typeFromObject
-- On Middle reduce production referencedType -> typeFromObject
-- On Lower reduce production referencedType -> typeFromObject
-- On LeftParen reduce production referencedType -> typeFromObject
-- On INTERSECTION reduce production referencedType -> typeFromObject
-- On EXCEPT reduce production referencedType -> typeFromObject
-- On END reduce production referencedType -> typeFromObject
-- On ENCODED reduce production referencedType -> typeFromObject
-- On DEFAULT reduce production referencedType -> typeFromObject
-- On Comma reduce production referencedType -> typeFromObject
-- On Colon reduce production referencedType -> typeFromObject
-- On Circumflex reduce production referencedType -> typeFromObject
-- On Bang reduce production referencedType -> typeFromObject
-- On Assignment reduce production referencedType -> typeFromObject

State 209:
## Known stack suffix:
## taggedType
## LR(1) items:
builtinType -> taggedType . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
## Reductions:
-- On Upper reduce production builtinType -> taggedType
-- On UNIQUE reduce production builtinType -> taggedType
-- On UNION reduce production builtinType -> taggedType
-- On RightParen reduce production builtinType -> taggedType
-- On RightDoubleBracket reduce production builtinType -> taggedType
-- On RightBrace reduce production builtinType -> taggedType
-- On OPTIONAL reduce production builtinType -> taggedType
-- On Middle reduce production builtinType -> taggedType
-- On Lower reduce production builtinType -> taggedType
-- On LeftParen reduce production builtinType -> taggedType
-- On INTERSECTION reduce production builtinType -> taggedType
-- On EXCEPT reduce production builtinType -> taggedType
-- On END reduce production builtinType -> taggedType
-- On ENCODED reduce production builtinType -> taggedType
-- On DEFAULT reduce production builtinType -> taggedType
-- On Comma reduce production builtinType -> taggedType
-- On Colon reduce production builtinType -> taggedType
-- On Circumflex reduce production builtinType -> taggedType
-- On Bang reduce production builtinType -> taggedType
-- On Assignment reduce production builtinType -> taggedType

State 210:
## Known stack suffix:
## tag
## LR(1) items:
taggedType -> tag . type_x [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
taggedType -> tag . IMPLICIT type_x [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
taggedType -> tag . EXPLICIT type_x [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
-- On VisibleString shift to state 66
-- On VideotexString shift to state 67
-- On Upper shift to state 113
-- On UniversalString shift to state 72
-- On UTF8String shift to state 73
-- On UTCTime shift to state 74
-- On TeletexString shift to state 75
-- On TYPE_IDENTIFIER shift to state 76
-- On T61String shift to state 78
-- On SET shift to state 79
-- On SEQUENCE shift to state 111
-- On RELATIVE_OID shift to state 116
-- On REAL shift to state 117
-- On PrintableString shift to state 118
-- On ObjectDescriptor shift to state 119
-- On OCTET shift to state 120
-- On OBJECT shift to state 122
-- On NumericString shift to state 124
-- On NULL shift to state 125
-- On Lower shift to state 127
-- On LeftBracket shift to state 129
-- On ISO646String shift to state 140
-- On INTEGER shift to state 141
-- On INSTANCE shift to state 157
-- On IMPLICIT shift to state 211
-- On IA5String shift to state 166
-- On GraphicString shift to state 167
-- On GeneralizedTime shift to state 168
-- On GeneralString shift to state 169
-- On EXTERNAL shift to state 170
-- On EXPLICIT shift to state 263
-- On ENUMERATED shift to state 171
-- On EMBEDDED shift to state 179
-- On CHOICE shift to state 181
-- On CHARACTER shift to state 184
-- On BOOLEAN shift to state 186
-- On BMPString shift to state 187
-- On BIT shift to state 188
-- On ABSTRACT_SYNTAX shift to state 162
-- On valueSetFromObjects shift to state 202
-- On usefulType shift to state 203
-- On usefulObjectClassReference shift to state 163
-- On unrestrictedCharacterStringType shift to state 204
-- On type_x shift to state 265
-- On typeWithConstraint shift to state 207
-- On typeFromObject shift to state 208
-- On taggedType shift to state 209
-- On tag shift to state 210
-- On simpleDefinedType shift to state 213
-- On setType shift to state 215
-- On setOfType shift to state 216
-- On sequenceType shift to state 217
-- On sequenceOfType shift to state 218
-- On selectionType shift to state 219
-- On restrictedCharacterStringType shift to state 220
-- On relativeOIDType shift to state 221
-- On referencedType shift to state 222
-- On referencedObjects shift to state 223
-- On realType shift to state 232
-- On parameterizedValueSetType shift to state 233
-- On parameterizedType shift to state 234
-- On parameterizedObjectSet shift to state 235
-- On parameterizedObject shift to state 236
-- On octetStringType shift to state 237
-- On objectIdentifierType shift to state 238
-- On objectClassFieldType shift to state 239
-- On nullType shift to state 240
-- On integerType shift to state 241
-- On instanceOfType shift to state 242
-- On externalTypeReference shift to state 243
-- On externalType shift to state 244
-- On externalObjectSetReference shift to state 245
-- On externalObjectReference shift to state 246
-- On externalObjectClassReference shift to state 164
-- On enumeratedType shift to state 247
-- On embeddedPDVType shift to state 248
-- On definedType shift to state 249
-- On definedObjectSet shift to state 250
-- On definedObjectClass shift to state 252
-- On definedObject shift to state 255
-- On constrainedType shift to state 257
-- On choiceType shift to state 258
-- On characterStringType shift to state 259
-- On builtinType shift to state 260
-- On booleanType shift to state 261
-- On bitStringType shift to state 262
## Reductions:

State 211:
## Known stack suffix:
## tag IMPLICIT
## LR(1) items:
taggedType -> tag IMPLICIT . type_x [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
-- On VisibleString shift to state 66
-- On VideotexString shift to state 67
-- On Upper shift to state 113
-- On UniversalString shift to state 72
-- On UTF8String shift to state 73
-- On UTCTime shift to state 74
-- On TeletexString shift to state 75
-- On TYPE_IDENTIFIER shift to state 76
-- On T61String shift to state 78
-- On SET shift to state 79
-- On SEQUENCE shift to state 111
-- On RELATIVE_OID shift to state 116
-- On REAL shift to state 117
-- On PrintableString shift to state 118
-- On ObjectDescriptor shift to state 119
-- On OCTET shift to state 120
-- On OBJECT shift to state 122
-- On NumericString shift to state 124
-- On NULL shift to state 125
-- On Lower shift to state 127
-- On LeftBracket shift to state 129
-- On ISO646String shift to state 140
-- On INTEGER shift to state 141
-- On INSTANCE shift to state 157
-- On IA5String shift to state 166
-- On GraphicString shift to state 167
-- On GeneralizedTime shift to state 168
-- On GeneralString shift to state 169
-- On EXTERNAL shift to state 170
-- On ENUMERATED shift to state 171
-- On EMBEDDED shift to state 179
-- On CHOICE shift to state 181
-- On CHARACTER shift to state 184
-- On BOOLEAN shift to state 186
-- On BMPString shift to state 187
-- On BIT shift to state 188
-- On ABSTRACT_SYNTAX shift to state 162
-- On valueSetFromObjects shift to state 202
-- On usefulType shift to state 203
-- On usefulObjectClassReference shift to state 163
-- On unrestrictedCharacterStringType shift to state 204
-- On type_x shift to state 212
-- On typeWithConstraint shift to state 207
-- On typeFromObject shift to state 208
-- On taggedType shift to state 209
-- On tag shift to state 210
-- On simpleDefinedType shift to state 213
-- On setType shift to state 215
-- On setOfType shift to state 216
-- On sequenceType shift to state 217
-- On sequenceOfType shift to state 218
-- On selectionType shift to state 219
-- On restrictedCharacterStringType shift to state 220
-- On relativeOIDType shift to state 221
-- On referencedType shift to state 222
-- On referencedObjects shift to state 223
-- On realType shift to state 232
-- On parameterizedValueSetType shift to state 233
-- On parameterizedType shift to state 234
-- On parameterizedObjectSet shift to state 235
-- On parameterizedObject shift to state 236
-- On octetStringType shift to state 237
-- On objectIdentifierType shift to state 238
-- On objectClassFieldType shift to state 239
-- On nullType shift to state 240
-- On integerType shift to state 241
-- On instanceOfType shift to state 242
-- On externalTypeReference shift to state 243
-- On externalType shift to state 244
-- On externalObjectSetReference shift to state 245
-- On externalObjectReference shift to state 246
-- On externalObjectClassReference shift to state 164
-- On enumeratedType shift to state 247
-- On embeddedPDVType shift to state 248
-- On definedType shift to state 249
-- On definedObjectSet shift to state 250
-- On definedObjectClass shift to state 252
-- On definedObject shift to state 255
-- On constrainedType shift to state 257
-- On choiceType shift to state 258
-- On characterStringType shift to state 259
-- On builtinType shift to state 260
-- On booleanType shift to state 261
-- On bitStringType shift to state 262
## Reductions:

State 212:
## Known stack suffix:
## tag IMPLICIT type_x
## LR(1) items:
constrainedType -> type_x . constraint_x [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
taggedType -> tag IMPLICIT type_x . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
-- On LeftParen shift to state 81
-- On constraint_x shift to state 206
## Reductions:
-- On Upper reduce production taggedType -> tag IMPLICIT type_x
-- On UNIQUE reduce production taggedType -> tag IMPLICIT type_x
-- On UNION reduce production taggedType -> tag IMPLICIT type_x
-- On RightParen reduce production taggedType -> tag IMPLICIT type_x
-- On RightDoubleBracket reduce production taggedType -> tag IMPLICIT type_x
-- On RightBrace reduce production taggedType -> tag IMPLICIT type_x
-- On OPTIONAL reduce production taggedType -> tag IMPLICIT type_x
-- On Middle reduce production taggedType -> tag IMPLICIT type_x
-- On Lower reduce production taggedType -> tag IMPLICIT type_x
-- On INTERSECTION reduce production taggedType -> tag IMPLICIT type_x
-- On EXCEPT reduce production taggedType -> tag IMPLICIT type_x
-- On END reduce production taggedType -> tag IMPLICIT type_x
-- On ENCODED reduce production taggedType -> tag IMPLICIT type_x
-- On DEFAULT reduce production taggedType -> tag IMPLICIT type_x
-- On Comma reduce production taggedType -> tag IMPLICIT type_x
-- On Colon reduce production taggedType -> tag IMPLICIT type_x
-- On Circumflex reduce production taggedType -> tag IMPLICIT type_x
-- On Bang reduce production taggedType -> tag IMPLICIT type_x
-- On Assignment reduce production taggedType -> tag IMPLICIT type_x

State 213:
## Known stack suffix:
## simpleDefinedType
## LR(1) items:
parameterizedType -> simpleDefinedType . actualParameterList [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
parameterizedValueSetType -> simpleDefinedType . actualParameterList [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
-- On LeftBrace shift to state 65
-- On actualParameterList shift to state 214
## Reductions:

State 214:
## Known stack suffix:
## simpleDefinedType actualParameterList
## LR(1) items:
parameterizedType -> simpleDefinedType actualParameterList . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
parameterizedValueSetType -> simpleDefinedType actualParameterList . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
## Reductions:
-- On Upper reduce production parameterizedType -> simpleDefinedType actualParameterList
-- On UNIQUE reduce production parameterizedType -> simpleDefinedType actualParameterList
-- On UNION reduce production parameterizedType -> simpleDefinedType actualParameterList
-- On RightParen reduce production parameterizedType -> simpleDefinedType actualParameterList
-- On RightDoubleBracket reduce production parameterizedType -> simpleDefinedType actualParameterList
-- On RightBrace reduce production parameterizedType -> simpleDefinedType actualParameterList
-- On OPTIONAL reduce production parameterizedType -> simpleDefinedType actualParameterList
-- On Middle reduce production parameterizedType -> simpleDefinedType actualParameterList
-- On Lower reduce production parameterizedType -> simpleDefinedType actualParameterList
-- On LeftParen reduce production parameterizedType -> simpleDefinedType actualParameterList
-- On INTERSECTION reduce production parameterizedType -> simpleDefinedType actualParameterList
-- On EXCEPT reduce production parameterizedType -> simpleDefinedType actualParameterList
-- On END reduce production parameterizedType -> simpleDefinedType actualParameterList
-- On ENCODED reduce production parameterizedType -> simpleDefinedType actualParameterList
-- On DEFAULT reduce production parameterizedType -> simpleDefinedType actualParameterList
-- On Comma reduce production parameterizedType -> simpleDefinedType actualParameterList
-- On Colon reduce production parameterizedType -> simpleDefinedType actualParameterList
-- On Circumflex reduce production parameterizedType -> simpleDefinedType actualParameterList
-- On Bang reduce production parameterizedType -> simpleDefinedType actualParameterList
-- On Assignment reduce production parameterizedType -> simpleDefinedType actualParameterList

State 215:
## Known stack suffix:
## setType
## LR(1) items:
builtinType -> setType . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
## Reductions:
-- On Upper reduce production builtinType -> setType
-- On UNIQUE reduce production builtinType -> setType
-- On UNION reduce production builtinType -> setType
-- On RightParen reduce production builtinType -> setType
-- On RightDoubleBracket reduce production builtinType -> setType
-- On RightBrace reduce production builtinType -> setType
-- On OPTIONAL reduce production builtinType -> setType
-- On Middle reduce production builtinType -> setType
-- On Lower reduce production builtinType -> setType
-- On LeftParen reduce production builtinType -> setType
-- On INTERSECTION reduce production builtinType -> setType
-- On EXCEPT reduce production builtinType -> setType
-- On END reduce production builtinType -> setType
-- On ENCODED reduce production builtinType -> setType
-- On DEFAULT reduce production builtinType -> setType
-- On Comma reduce production builtinType -> setType
-- On Colon reduce production builtinType -> setType
-- On Circumflex reduce production builtinType -> setType
-- On Bang reduce production builtinType -> setType
-- On Assignment reduce production builtinType -> setType

State 216:
## Known stack suffix:
## setOfType
## LR(1) items:
builtinType -> setOfType . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
## Reductions:
-- On Upper reduce production builtinType -> setOfType
-- On UNIQUE reduce production builtinType -> setOfType
-- On UNION reduce production builtinType -> setOfType
-- On RightParen reduce production builtinType -> setOfType
-- On RightDoubleBracket reduce production builtinType -> setOfType
-- On RightBrace reduce production builtinType -> setOfType
-- On OPTIONAL reduce production builtinType -> setOfType
-- On Middle reduce production builtinType -> setOfType
-- On Lower reduce production builtinType -> setOfType
-- On LeftParen reduce production builtinType -> setOfType
-- On INTERSECTION reduce production builtinType -> setOfType
-- On EXCEPT reduce production builtinType -> setOfType
-- On END reduce production builtinType -> setOfType
-- On ENCODED reduce production builtinType -> setOfType
-- On DEFAULT reduce production builtinType -> setOfType
-- On Comma reduce production builtinType -> setOfType
-- On Colon reduce production builtinType -> setOfType
-- On Circumflex reduce production builtinType -> setOfType
-- On Bang reduce production builtinType -> setOfType
-- On Assignment reduce production builtinType -> setOfType

State 217:
## Known stack suffix:
## sequenceType
## LR(1) items:
builtinType -> sequenceType . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
## Reductions:
-- On Upper reduce production builtinType -> sequenceType
-- On UNIQUE reduce production builtinType -> sequenceType
-- On UNION reduce production builtinType -> sequenceType
-- On RightParen reduce production builtinType -> sequenceType
-- On RightDoubleBracket reduce production builtinType -> sequenceType
-- On RightBrace reduce production builtinType -> sequenceType
-- On OPTIONAL reduce production builtinType -> sequenceType
-- On Middle reduce production builtinType -> sequenceType
-- On Lower reduce production builtinType -> sequenceType
-- On LeftParen reduce production builtinType -> sequenceType
-- On INTERSECTION reduce production builtinType -> sequenceType
-- On EXCEPT reduce production builtinType -> sequenceType
-- On END reduce production builtinType -> sequenceType
-- On ENCODED reduce production builtinType -> sequenceType
-- On DEFAULT reduce production builtinType -> sequenceType
-- On Comma reduce production builtinType -> sequenceType
-- On Colon reduce production builtinType -> sequenceType
-- On Circumflex reduce production builtinType -> sequenceType
-- On Bang reduce production builtinType -> sequenceType
-- On Assignment reduce production builtinType -> sequenceType

State 218:
## Known stack suffix:
## sequenceOfType
## LR(1) items:
builtinType -> sequenceOfType . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
## Reductions:
-- On Upper reduce production builtinType -> sequenceOfType
-- On UNIQUE reduce production builtinType -> sequenceOfType
-- On UNION reduce production builtinType -> sequenceOfType
-- On RightParen reduce production builtinType -> sequenceOfType
-- On RightDoubleBracket reduce production builtinType -> sequenceOfType
-- On RightBrace reduce production builtinType -> sequenceOfType
-- On OPTIONAL reduce production builtinType -> sequenceOfType
-- On Middle reduce production builtinType -> sequenceOfType
-- On Lower reduce production builtinType -> sequenceOfType
-- On LeftParen reduce production builtinType -> sequenceOfType
-- On INTERSECTION reduce production builtinType -> sequenceOfType
-- On EXCEPT reduce production builtinType -> sequenceOfType
-- On END reduce production builtinType -> sequenceOfType
-- On ENCODED reduce production builtinType -> sequenceOfType
-- On DEFAULT reduce production builtinType -> sequenceOfType
-- On Comma reduce production builtinType -> sequenceOfType
-- On Colon reduce production builtinType -> sequenceOfType
-- On Circumflex reduce production builtinType -> sequenceOfType
-- On Bang reduce production builtinType -> sequenceOfType
-- On Assignment reduce production builtinType -> sequenceOfType

State 219:
## Known stack suffix:
## selectionType
## LR(1) items:
referencedType -> selectionType . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
## Reductions:
-- On Upper reduce production referencedType -> selectionType
-- On UNIQUE reduce production referencedType -> selectionType
-- On UNION reduce production referencedType -> selectionType
-- On RightParen reduce production referencedType -> selectionType
-- On RightDoubleBracket reduce production referencedType -> selectionType
-- On RightBrace reduce production referencedType -> selectionType
-- On OPTIONAL reduce production referencedType -> selectionType
-- On Middle reduce production referencedType -> selectionType
-- On Lower reduce production referencedType -> selectionType
-- On LeftParen reduce production referencedType -> selectionType
-- On INTERSECTION reduce production referencedType -> selectionType
-- On EXCEPT reduce production referencedType -> selectionType
-- On END reduce production referencedType -> selectionType
-- On ENCODED reduce production referencedType -> selectionType
-- On DEFAULT reduce production referencedType -> selectionType
-- On Comma reduce production referencedType -> selectionType
-- On Colon reduce production referencedType -> selectionType
-- On Circumflex reduce production referencedType -> selectionType
-- On Bang reduce production referencedType -> selectionType
-- On Assignment reduce production referencedType -> selectionType

State 220:
## Known stack suffix:
## restrictedCharacterStringType
## LR(1) items:
characterStringType -> restrictedCharacterStringType . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
## Reductions:
-- On Upper reduce production characterStringType -> restrictedCharacterStringType
-- On UNIQUE reduce production characterStringType -> restrictedCharacterStringType
-- On UNION reduce production characterStringType -> restrictedCharacterStringType
-- On RightParen reduce production characterStringType -> restrictedCharacterStringType
-- On RightDoubleBracket reduce production characterStringType -> restrictedCharacterStringType
-- On RightBrace reduce production characterStringType -> restrictedCharacterStringType
-- On OPTIONAL reduce production characterStringType -> restrictedCharacterStringType
-- On Middle reduce production characterStringType -> restrictedCharacterStringType
-- On Lower reduce production characterStringType -> restrictedCharacterStringType
-- On LeftParen reduce production characterStringType -> restrictedCharacterStringType
-- On INTERSECTION reduce production characterStringType -> restrictedCharacterStringType
-- On EXCEPT reduce production characterStringType -> restrictedCharacterStringType
-- On END reduce production characterStringType -> restrictedCharacterStringType
-- On ENCODED reduce production characterStringType -> restrictedCharacterStringType
-- On DEFAULT reduce production characterStringType -> restrictedCharacterStringType
-- On Comma reduce production characterStringType -> restrictedCharacterStringType
-- On Colon reduce production characterStringType -> restrictedCharacterStringType
-- On Circumflex reduce production characterStringType -> restrictedCharacterStringType
-- On Bang reduce production characterStringType -> restrictedCharacterStringType
-- On Assignment reduce production characterStringType -> restrictedCharacterStringType

State 221:
## Known stack suffix:
## relativeOIDType
## LR(1) items:
builtinType -> relativeOIDType . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
## Reductions:
-- On Upper reduce production builtinType -> relativeOIDType
-- On UNIQUE reduce production builtinType -> relativeOIDType
-- On UNION reduce production builtinType -> relativeOIDType
-- On RightParen reduce production builtinType -> relativeOIDType
-- On RightDoubleBracket reduce production builtinType -> relativeOIDType
-- On RightBrace reduce production builtinType -> relativeOIDType
-- On OPTIONAL reduce production builtinType -> relativeOIDType
-- On Middle reduce production builtinType -> relativeOIDType
-- On Lower reduce production builtinType -> relativeOIDType
-- On LeftParen reduce production builtinType -> relativeOIDType
-- On INTERSECTION reduce production builtinType -> relativeOIDType
-- On EXCEPT reduce production builtinType -> relativeOIDType
-- On END reduce production builtinType -> relativeOIDType
-- On ENCODED reduce production builtinType -> relativeOIDType
-- On DEFAULT reduce production builtinType -> relativeOIDType
-- On Comma reduce production builtinType -> relativeOIDType
-- On Colon reduce production builtinType -> relativeOIDType
-- On Circumflex reduce production builtinType -> relativeOIDType
-- On Bang reduce production builtinType -> relativeOIDType
-- On Assignment reduce production builtinType -> relativeOIDType

State 222:
## Known stack suffix:
## referencedType
## LR(1) items:
type_x -> referencedType . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
## Reductions:
-- On Upper reduce production type_x -> referencedType
-- On UNIQUE reduce production type_x -> referencedType
-- On UNION reduce production type_x -> referencedType
-- On RightParen reduce production type_x -> referencedType
-- On RightDoubleBracket reduce production type_x -> referencedType
-- On RightBrace reduce production type_x -> referencedType
-- On OPTIONAL reduce production type_x -> referencedType
-- On Middle reduce production type_x -> referencedType
-- On Lower reduce production type_x -> referencedType
-- On LeftParen reduce production type_x -> referencedType
-- On INTERSECTION reduce production type_x -> referencedType
-- On EXCEPT reduce production type_x -> referencedType
-- On END reduce production type_x -> referencedType
-- On ENCODED reduce production type_x -> referencedType
-- On DEFAULT reduce production type_x -> referencedType
-- On Comma reduce production type_x -> referencedType
-- On Colon reduce production type_x -> referencedType
-- On Circumflex reduce production type_x -> referencedType
-- On Bang reduce production type_x -> referencedType
-- On Assignment reduce production type_x -> referencedType

State 223:
## Known stack suffix:
## referencedObjects
## LR(1) items:
typeFromObject -> referencedObjects . Dot fieldName [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
valueSetFromObjects -> referencedObjects . Dot fieldName [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
-- On Dot shift to state 224
## Reductions:

State 224:
## Known stack suffix:
## referencedObjects Dot
## LR(1) items:
typeFromObject -> referencedObjects Dot . fieldName [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
valueSetFromObjects -> referencedObjects Dot . fieldName [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
-- On UpperField shift to state 225
-- On LowerField shift to state 226
-- On separated_nonempty_list(Dot,primitiveFieldName) shift to state 227
-- On primitiveFieldName shift to state 228
-- On fieldName shift to state 231
## Reductions:

State 225:
## Known stack suffix:
## UpperField
## LR(1) items:
primitiveFieldName -> UpperField . [ VisibleString VideotexString UpperField Upper UniversalString UTF8String UTCTime UNIQUE UNION TeletexString TYPE_IDENTIFIER TRUE T61String SET SEQUENCE RightParen RightDoubleBracket RightBrace RealNumber RELATIVE_OID REAL PrintableString PLUS_INFINITY ObjectDescriptor OPTIONAL OCTET OBJECT NumericString Number NULL Middle MINUS_INFINITY LowerField Lower LessThan LeftParen LeftBracket LeftBrace ISO646String INTERSECTION INTEGER INSTANCE IA5String Hyphen Hstring GraphicString GeneralizedTime GeneralString FALSE EXTERNAL EXCEPT ENUMERATED END ENCODED EMBEDDED DoubleDot Dot DefinedSyntax DEFAULT Cstring Comma Colon Circumflex CONTAINING CHOICE CHARACTER Bstring Bang BOOLEAN BMPString BIT Assignment ABSTRACT_SYNTAX ]
## Transitions:
## Reductions:
-- On VisibleString reduce production primitiveFieldName -> UpperField
-- On VideotexString reduce production primitiveFieldName -> UpperField
-- On UpperField reduce production primitiveFieldName -> UpperField
-- On Upper reduce production primitiveFieldName -> UpperField
-- On UniversalString reduce production primitiveFieldName -> UpperField
-- On UTF8String reduce production primitiveFieldName -> UpperField
-- On UTCTime reduce production primitiveFieldName -> UpperField
-- On UNIQUE reduce production primitiveFieldName -> UpperField
-- On UNION reduce production primitiveFieldName -> UpperField
-- On TeletexString reduce production primitiveFieldName -> UpperField
-- On TYPE_IDENTIFIER reduce production primitiveFieldName -> UpperField
-- On TRUE reduce production primitiveFieldName -> UpperField
-- On T61String reduce production primitiveFieldName -> UpperField
-- On SET reduce production primitiveFieldName -> UpperField
-- On SEQUENCE reduce production primitiveFieldName -> UpperField
-- On RightParen reduce production primitiveFieldName -> UpperField
-- On RightDoubleBracket reduce production primitiveFieldName -> UpperField
-- On RightBrace reduce production primitiveFieldName -> UpperField
-- On RealNumber reduce production primitiveFieldName -> UpperField
-- On RELATIVE_OID reduce production primitiveFieldName -> UpperField
-- On REAL reduce production primitiveFieldName -> UpperField
-- On PrintableString reduce production primitiveFieldName -> UpperField
-- On PLUS_INFINITY reduce production primitiveFieldName -> UpperField
-- On ObjectDescriptor reduce production primitiveFieldName -> UpperField
-- On OPTIONAL reduce production primitiveFieldName -> UpperField
-- On OCTET reduce production primitiveFieldName -> UpperField
-- On OBJECT reduce production primitiveFieldName -> UpperField
-- On NumericString reduce production primitiveFieldName -> UpperField
-- On Number reduce production primitiveFieldName -> UpperField
-- On NULL reduce production primitiveFieldName -> UpperField
-- On Middle reduce production primitiveFieldName -> UpperField
-- On MINUS_INFINITY reduce production primitiveFieldName -> UpperField
-- On LowerField reduce production primitiveFieldName -> UpperField
-- On Lower reduce production primitiveFieldName -> UpperField
-- On LessThan reduce production primitiveFieldName -> UpperField
-- On LeftParen reduce production primitiveFieldName -> UpperField
-- On LeftBracket reduce production primitiveFieldName -> UpperField
-- On LeftBrace reduce production primitiveFieldName -> UpperField
-- On ISO646String reduce production primitiveFieldName -> UpperField
-- On INTERSECTION reduce production primitiveFieldName -> UpperField
-- On INTEGER reduce production primitiveFieldName -> UpperField
-- On INSTANCE reduce production primitiveFieldName -> UpperField
-- On IA5String reduce production primitiveFieldName -> UpperField
-- On Hyphen reduce production primitiveFieldName -> UpperField
-- On Hstring reduce production primitiveFieldName -> UpperField
-- On GraphicString reduce production primitiveFieldName -> UpperField
-- On GeneralizedTime reduce production primitiveFieldName -> UpperField
-- On GeneralString reduce production primitiveFieldName -> UpperField
-- On FALSE reduce production primitiveFieldName -> UpperField
-- On EXTERNAL reduce production primitiveFieldName -> UpperField
-- On EXCEPT reduce production primitiveFieldName -> UpperField
-- On ENUMERATED reduce production primitiveFieldName -> UpperField
-- On END reduce production primitiveFieldName -> UpperField
-- On ENCODED reduce production primitiveFieldName -> UpperField
-- On EMBEDDED reduce production primitiveFieldName -> UpperField
-- On DoubleDot reduce production primitiveFieldName -> UpperField
-- On Dot reduce production primitiveFieldName -> UpperField
-- On DefinedSyntax reduce production primitiveFieldName -> UpperField
-- On DEFAULT reduce production primitiveFieldName -> UpperField
-- On Cstring reduce production primitiveFieldName -> UpperField
-- On Comma reduce production primitiveFieldName -> UpperField
-- On Colon reduce production primitiveFieldName -> UpperField
-- On Circumflex reduce production primitiveFieldName -> UpperField
-- On CONTAINING reduce production primitiveFieldName -> UpperField
-- On CHOICE reduce production primitiveFieldName -> UpperField
-- On CHARACTER reduce production primitiveFieldName -> UpperField
-- On Bstring reduce production primitiveFieldName -> UpperField
-- On Bang reduce production primitiveFieldName -> UpperField
-- On BOOLEAN reduce production primitiveFieldName -> UpperField
-- On BMPString reduce production primitiveFieldName -> UpperField
-- On BIT reduce production primitiveFieldName -> UpperField
-- On Assignment reduce production primitiveFieldName -> UpperField
-- On ABSTRACT_SYNTAX reduce production primitiveFieldName -> UpperField

State 226:
## Known stack suffix:
## LowerField
## LR(1) items:
primitiveFieldName -> LowerField . [ VisibleString VideotexString UpperField Upper UniversalString UTF8String UTCTime UNIQUE UNION TeletexString TYPE_IDENTIFIER TRUE T61String SET SEQUENCE RightParen RightDoubleBracket RightBrace RealNumber RELATIVE_OID REAL PrintableString PLUS_INFINITY ObjectDescriptor OPTIONAL OCTET OBJECT NumericString Number NULL Middle MINUS_INFINITY LowerField Lower LessThan LeftParen LeftBracket LeftBrace ISO646String INTERSECTION INTEGER INSTANCE IA5String Hyphen Hstring GraphicString GeneralizedTime GeneralString FALSE EXTERNAL EXCEPT ENUMERATED END ENCODED EMBEDDED DoubleDot Dot DefinedSyntax DEFAULT Cstring Comma Colon Circumflex CONTAINING CHOICE CHARACTER Bstring Bang BOOLEAN BMPString BIT Assignment ABSTRACT_SYNTAX ]
## Transitions:
## Reductions:
-- On VisibleString reduce production primitiveFieldName -> LowerField
-- On VideotexString reduce production primitiveFieldName -> LowerField
-- On UpperField reduce production primitiveFieldName -> LowerField
-- On Upper reduce production primitiveFieldName -> LowerField
-- On UniversalString reduce production primitiveFieldName -> LowerField
-- On UTF8String reduce production primitiveFieldName -> LowerField
-- On UTCTime reduce production primitiveFieldName -> LowerField
-- On UNIQUE reduce production primitiveFieldName -> LowerField
-- On UNION reduce production primitiveFieldName -> LowerField
-- On TeletexString reduce production primitiveFieldName -> LowerField
-- On TYPE_IDENTIFIER reduce production primitiveFieldName -> LowerField
-- On TRUE reduce production primitiveFieldName -> LowerField
-- On T61String reduce production primitiveFieldName -> LowerField
-- On SET reduce production primitiveFieldName -> LowerField
-- On SEQUENCE reduce production primitiveFieldName -> LowerField
-- On RightParen reduce production primitiveFieldName -> LowerField
-- On RightDoubleBracket reduce production primitiveFieldName -> LowerField
-- On RightBrace reduce production primitiveFieldName -> LowerField
-- On RealNumber reduce production primitiveFieldName -> LowerField
-- On RELATIVE_OID reduce production primitiveFieldName -> LowerField
-- On REAL reduce production primitiveFieldName -> LowerField
-- On PrintableString reduce production primitiveFieldName -> LowerField
-- On PLUS_INFINITY reduce production primitiveFieldName -> LowerField
-- On ObjectDescriptor reduce production primitiveFieldName -> LowerField
-- On OPTIONAL reduce production primitiveFieldName -> LowerField
-- On OCTET reduce production primitiveFieldName -> LowerField
-- On OBJECT reduce production primitiveFieldName -> LowerField
-- On NumericString reduce production primitiveFieldName -> LowerField
-- On Number reduce production primitiveFieldName -> LowerField
-- On NULL reduce production primitiveFieldName -> LowerField
-- On Middle reduce production primitiveFieldName -> LowerField
-- On MINUS_INFINITY reduce production primitiveFieldName -> LowerField
-- On LowerField reduce production primitiveFieldName -> LowerField
-- On Lower reduce production primitiveFieldName -> LowerField
-- On LessThan reduce production primitiveFieldName -> LowerField
-- On LeftParen reduce production primitiveFieldName -> LowerField
-- On LeftBracket reduce production primitiveFieldName -> LowerField
-- On LeftBrace reduce production primitiveFieldName -> LowerField
-- On ISO646String reduce production primitiveFieldName -> LowerField
-- On INTERSECTION reduce production primitiveFieldName -> LowerField
-- On INTEGER reduce production primitiveFieldName -> LowerField
-- On INSTANCE reduce production primitiveFieldName -> LowerField
-- On IA5String reduce production primitiveFieldName -> LowerField
-- On Hyphen reduce production primitiveFieldName -> LowerField
-- On Hstring reduce production primitiveFieldName -> LowerField
-- On GraphicString reduce production primitiveFieldName -> LowerField
-- On GeneralizedTime reduce production primitiveFieldName -> LowerField
-- On GeneralString reduce production primitiveFieldName -> LowerField
-- On FALSE reduce production primitiveFieldName -> LowerField
-- On EXTERNAL reduce production primitiveFieldName -> LowerField
-- On EXCEPT reduce production primitiveFieldName -> LowerField
-- On ENUMERATED reduce production primitiveFieldName -> LowerField
-- On END reduce production primitiveFieldName -> LowerField
-- On ENCODED reduce production primitiveFieldName -> LowerField
-- On EMBEDDED reduce production primitiveFieldName -> LowerField
-- On DoubleDot reduce production primitiveFieldName -> LowerField
-- On Dot reduce production primitiveFieldName -> LowerField
-- On DefinedSyntax reduce production primitiveFieldName -> LowerField
-- On DEFAULT reduce production primitiveFieldName -> LowerField
-- On Cstring reduce production primitiveFieldName -> LowerField
-- On Comma reduce production primitiveFieldName -> LowerField
-- On Colon reduce production primitiveFieldName -> LowerField
-- On Circumflex reduce production primitiveFieldName -> LowerField
-- On CONTAINING reduce production primitiveFieldName -> LowerField
-- On CHOICE reduce production primitiveFieldName -> LowerField
-- On CHARACTER reduce production primitiveFieldName -> LowerField
-- On Bstring reduce production primitiveFieldName -> LowerField
-- On Bang reduce production primitiveFieldName -> LowerField
-- On BOOLEAN reduce production primitiveFieldName -> LowerField
-- On BMPString reduce production primitiveFieldName -> LowerField
-- On BIT reduce production primitiveFieldName -> LowerField
-- On Assignment reduce production primitiveFieldName -> LowerField
-- On ABSTRACT_SYNTAX reduce production primitiveFieldName -> LowerField

State 227:
## Known stack suffix:
## separated_nonempty_list(Dot,primitiveFieldName)
## LR(1) items:
fieldName -> separated_nonempty_list(Dot,primitiveFieldName) . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LessThan LeftParen INTERSECTION EXCEPT END ENCODED DoubleDot DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
## Reductions:
-- On Upper reduce production fieldName -> separated_nonempty_list(Dot,primitiveFieldName)
-- On UNIQUE reduce production fieldName -> separated_nonempty_list(Dot,primitiveFieldName)
-- On UNION reduce production fieldName -> separated_nonempty_list(Dot,primitiveFieldName)
-- On RightParen reduce production fieldName -> separated_nonempty_list(Dot,primitiveFieldName)
-- On RightDoubleBracket reduce production fieldName -> separated_nonempty_list(Dot,primitiveFieldName)
-- On RightBrace reduce production fieldName -> separated_nonempty_list(Dot,primitiveFieldName)
-- On OPTIONAL reduce production fieldName -> separated_nonempty_list(Dot,primitiveFieldName)
-- On Middle reduce production fieldName -> separated_nonempty_list(Dot,primitiveFieldName)
-- On Lower reduce production fieldName -> separated_nonempty_list(Dot,primitiveFieldName)
-- On LessThan reduce production fieldName -> separated_nonempty_list(Dot,primitiveFieldName)
-- On LeftParen reduce production fieldName -> separated_nonempty_list(Dot,primitiveFieldName)
-- On INTERSECTION reduce production fieldName -> separated_nonempty_list(Dot,primitiveFieldName)
-- On EXCEPT reduce production fieldName -> separated_nonempty_list(Dot,primitiveFieldName)
-- On END reduce production fieldName -> separated_nonempty_list(Dot,primitiveFieldName)
-- On ENCODED reduce production fieldName -> separated_nonempty_list(Dot,primitiveFieldName)
-- On DoubleDot reduce production fieldName -> separated_nonempty_list(Dot,primitiveFieldName)
-- On DEFAULT reduce production fieldName -> separated_nonempty_list(Dot,primitiveFieldName)
-- On Comma reduce production fieldName -> separated_nonempty_list(Dot,primitiveFieldName)
-- On Colon reduce production fieldName -> separated_nonempty_list(Dot,primitiveFieldName)
-- On Circumflex reduce production fieldName -> separated_nonempty_list(Dot,primitiveFieldName)
-- On Bang reduce production fieldName -> separated_nonempty_list(Dot,primitiveFieldName)
-- On Assignment reduce production fieldName -> separated_nonempty_list(Dot,primitiveFieldName)

State 228:
## Known stack suffix:
## primitiveFieldName
## LR(1) items:
separated_nonempty_list(Dot,primitiveFieldName) -> primitiveFieldName . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LessThan LeftParen INTERSECTION EXCEPT END ENCODED DoubleDot DEFAULT Comma Colon Circumflex Bang Assignment ]
separated_nonempty_list(Dot,primitiveFieldName) -> primitiveFieldName . Dot separated_nonempty_list(Dot,primitiveFieldName) [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LessThan LeftParen INTERSECTION EXCEPT END ENCODED DoubleDot DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
-- On Dot shift to state 229
## Reductions:
-- On Upper reduce production separated_nonempty_list(Dot,primitiveFieldName) -> primitiveFieldName
-- On UNIQUE reduce production separated_nonempty_list(Dot,primitiveFieldName) -> primitiveFieldName
-- On UNION reduce production separated_nonempty_list(Dot,primitiveFieldName) -> primitiveFieldName
-- On RightParen reduce production separated_nonempty_list(Dot,primitiveFieldName) -> primitiveFieldName
-- On RightDoubleBracket reduce production separated_nonempty_list(Dot,primitiveFieldName) -> primitiveFieldName
-- On RightBrace reduce production separated_nonempty_list(Dot,primitiveFieldName) -> primitiveFieldName
-- On OPTIONAL reduce production separated_nonempty_list(Dot,primitiveFieldName) -> primitiveFieldName
-- On Middle reduce production separated_nonempty_list(Dot,primitiveFieldName) -> primitiveFieldName
-- On Lower reduce production separated_nonempty_list(Dot,primitiveFieldName) -> primitiveFieldName
-- On LessThan reduce production separated_nonempty_list(Dot,primitiveFieldName) -> primitiveFieldName
-- On LeftParen reduce production separated_nonempty_list(Dot,primitiveFieldName) -> primitiveFieldName
-- On INTERSECTION reduce production separated_nonempty_list(Dot,primitiveFieldName) -> primitiveFieldName
-- On EXCEPT reduce production separated_nonempty_list(Dot,primitiveFieldName) -> primitiveFieldName
-- On END reduce production separated_nonempty_list(Dot,primitiveFieldName) -> primitiveFieldName
-- On ENCODED reduce production separated_nonempty_list(Dot,primitiveFieldName) -> primitiveFieldName
-- On DoubleDot reduce production separated_nonempty_list(Dot,primitiveFieldName) -> primitiveFieldName
-- On DEFAULT reduce production separated_nonempty_list(Dot,primitiveFieldName) -> primitiveFieldName
-- On Comma reduce production separated_nonempty_list(Dot,primitiveFieldName) -> primitiveFieldName
-- On Colon reduce production separated_nonempty_list(Dot,primitiveFieldName) -> primitiveFieldName
-- On Circumflex reduce production separated_nonempty_list(Dot,primitiveFieldName) -> primitiveFieldName
-- On Bang reduce production separated_nonempty_list(Dot,primitiveFieldName) -> primitiveFieldName
-- On Assignment reduce production separated_nonempty_list(Dot,primitiveFieldName) -> primitiveFieldName

State 229:
## Known stack suffix:
## primitiveFieldName Dot
## LR(1) items:
separated_nonempty_list(Dot,primitiveFieldName) -> primitiveFieldName Dot . separated_nonempty_list(Dot,primitiveFieldName) [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LessThan LeftParen INTERSECTION EXCEPT END ENCODED DoubleDot DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
-- On UpperField shift to state 225
-- On LowerField shift to state 226
-- On separated_nonempty_list(Dot,primitiveFieldName) shift to state 230
-- On primitiveFieldName shift to state 228
## Reductions:

State 230:
## Known stack suffix:
## primitiveFieldName Dot separated_nonempty_list(Dot,primitiveFieldName)
## LR(1) items:
separated_nonempty_list(Dot,primitiveFieldName) -> primitiveFieldName Dot separated_nonempty_list(Dot,primitiveFieldName) . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LessThan LeftParen INTERSECTION EXCEPT END ENCODED DoubleDot DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
## Reductions:
-- On Upper reduce production separated_nonempty_list(Dot,primitiveFieldName) -> primitiveFieldName Dot separated_nonempty_list(Dot,primitiveFieldName)
-- On UNIQUE reduce production separated_nonempty_list(Dot,primitiveFieldName) -> primitiveFieldName Dot separated_nonempty_list(Dot,primitiveFieldName)
-- On UNION reduce production separated_nonempty_list(Dot,primitiveFieldName) -> primitiveFieldName Dot separated_nonempty_list(Dot,primitiveFieldName)
-- On RightParen reduce production separated_nonempty_list(Dot,primitiveFieldName) -> primitiveFieldName Dot separated_nonempty_list(Dot,primitiveFieldName)
-- On RightDoubleBracket reduce production separated_nonempty_list(Dot,primitiveFieldName) -> primitiveFieldName Dot separated_nonempty_list(Dot,primitiveFieldName)
-- On RightBrace reduce production separated_nonempty_list(Dot,primitiveFieldName) -> primitiveFieldName Dot separated_nonempty_list(Dot,primitiveFieldName)
-- On OPTIONAL reduce production separated_nonempty_list(Dot,primitiveFieldName) -> primitiveFieldName Dot separated_nonempty_list(Dot,primitiveFieldName)
-- On Middle reduce production separated_nonempty_list(Dot,primitiveFieldName) -> primitiveFieldName Dot separated_nonempty_list(Dot,primitiveFieldName)
-- On Lower reduce production separated_nonempty_list(Dot,primitiveFieldName) -> primitiveFieldName Dot separated_nonempty_list(Dot,primitiveFieldName)
-- On LessThan reduce production separated_nonempty_list(Dot,primitiveFieldName) -> primitiveFieldName Dot separated_nonempty_list(Dot,primitiveFieldName)
-- On LeftParen reduce production separated_nonempty_list(Dot,primitiveFieldName) -> primitiveFieldName Dot separated_nonempty_list(Dot,primitiveFieldName)
-- On INTERSECTION reduce production separated_nonempty_list(Dot,primitiveFieldName) -> primitiveFieldName Dot separated_nonempty_list(Dot,primitiveFieldName)
-- On EXCEPT reduce production separated_nonempty_list(Dot,primitiveFieldName) -> primitiveFieldName Dot separated_nonempty_list(Dot,primitiveFieldName)
-- On END reduce production separated_nonempty_list(Dot,primitiveFieldName) -> primitiveFieldName Dot separated_nonempty_list(Dot,primitiveFieldName)
-- On ENCODED reduce production separated_nonempty_list(Dot,primitiveFieldName) -> primitiveFieldName Dot separated_nonempty_list(Dot,primitiveFieldName)
-- On DoubleDot reduce production separated_nonempty_list(Dot,primitiveFieldName) -> primitiveFieldName Dot separated_nonempty_list(Dot,primitiveFieldName)
-- On DEFAULT reduce production separated_nonempty_list(Dot,primitiveFieldName) -> primitiveFieldName Dot separated_nonempty_list(Dot,primitiveFieldName)
-- On Comma reduce production separated_nonempty_list(Dot,primitiveFieldName) -> primitiveFieldName Dot separated_nonempty_list(Dot,primitiveFieldName)
-- On Colon reduce production separated_nonempty_list(Dot,primitiveFieldName) -> primitiveFieldName Dot separated_nonempty_list(Dot,primitiveFieldName)
-- On Circumflex reduce production separated_nonempty_list(Dot,primitiveFieldName) -> primitiveFieldName Dot separated_nonempty_list(Dot,primitiveFieldName)
-- On Bang reduce production separated_nonempty_list(Dot,primitiveFieldName) -> primitiveFieldName Dot separated_nonempty_list(Dot,primitiveFieldName)
-- On Assignment reduce production separated_nonempty_list(Dot,primitiveFieldName) -> primitiveFieldName Dot separated_nonempty_list(Dot,primitiveFieldName)

State 231:
## Known stack suffix:
## referencedObjects Dot fieldName
## LR(1) items:
typeFromObject -> referencedObjects Dot fieldName . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
valueSetFromObjects -> referencedObjects Dot fieldName . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
## Reductions:
-- On Upper reduce production valueSetFromObjects -> referencedObjects Dot fieldName
-- On UNIQUE reduce production valueSetFromObjects -> referencedObjects Dot fieldName
-- On UNION reduce production valueSetFromObjects -> referencedObjects Dot fieldName
-- On RightParen reduce production valueSetFromObjects -> referencedObjects Dot fieldName
-- On RightDoubleBracket reduce production valueSetFromObjects -> referencedObjects Dot fieldName
-- On RightBrace reduce production valueSetFromObjects -> referencedObjects Dot fieldName
-- On OPTIONAL reduce production valueSetFromObjects -> referencedObjects Dot fieldName
-- On Middle reduce production valueSetFromObjects -> referencedObjects Dot fieldName
-- On Lower reduce production valueSetFromObjects -> referencedObjects Dot fieldName
-- On LeftParen reduce production valueSetFromObjects -> referencedObjects Dot fieldName
-- On INTERSECTION reduce production valueSetFromObjects -> referencedObjects Dot fieldName
-- On EXCEPT reduce production valueSetFromObjects -> referencedObjects Dot fieldName
-- On END reduce production valueSetFromObjects -> referencedObjects Dot fieldName
-- On ENCODED reduce production valueSetFromObjects -> referencedObjects Dot fieldName
-- On DEFAULT reduce production valueSetFromObjects -> referencedObjects Dot fieldName
-- On Comma reduce production valueSetFromObjects -> referencedObjects Dot fieldName
-- On Colon reduce production valueSetFromObjects -> referencedObjects Dot fieldName
-- On Circumflex reduce production valueSetFromObjects -> referencedObjects Dot fieldName
-- On Bang reduce production valueSetFromObjects -> referencedObjects Dot fieldName
-- On Assignment reduce production valueSetFromObjects -> referencedObjects Dot fieldName

State 232:
## Known stack suffix:
## realType
## LR(1) items:
builtinType -> realType . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
## Reductions:
-- On Upper reduce production builtinType -> realType
-- On UNIQUE reduce production builtinType -> realType
-- On UNION reduce production builtinType -> realType
-- On RightParen reduce production builtinType -> realType
-- On RightDoubleBracket reduce production builtinType -> realType
-- On RightBrace reduce production builtinType -> realType
-- On OPTIONAL reduce production builtinType -> realType
-- On Middle reduce production builtinType -> realType
-- On Lower reduce production builtinType -> realType
-- On LeftParen reduce production builtinType -> realType
-- On INTERSECTION reduce production builtinType -> realType
-- On EXCEPT reduce production builtinType -> realType
-- On END reduce production builtinType -> realType
-- On ENCODED reduce production builtinType -> realType
-- On DEFAULT reduce production builtinType -> realType
-- On Comma reduce production builtinType -> realType
-- On Colon reduce production builtinType -> realType
-- On Circumflex reduce production builtinType -> realType
-- On Bang reduce production builtinType -> realType
-- On Assignment reduce production builtinType -> realType

State 233:
## Known stack suffix:
## parameterizedValueSetType
## LR(1) items:
definedType -> parameterizedValueSetType . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
## Reductions:
-- On Upper reduce production definedType -> parameterizedValueSetType
-- On UNIQUE reduce production definedType -> parameterizedValueSetType
-- On UNION reduce production definedType -> parameterizedValueSetType
-- On RightParen reduce production definedType -> parameterizedValueSetType
-- On RightDoubleBracket reduce production definedType -> parameterizedValueSetType
-- On RightBrace reduce production definedType -> parameterizedValueSetType
-- On OPTIONAL reduce production definedType -> parameterizedValueSetType
-- On Middle reduce production definedType -> parameterizedValueSetType
-- On Lower reduce production definedType -> parameterizedValueSetType
-- On LeftParen reduce production definedType -> parameterizedValueSetType
-- On INTERSECTION reduce production definedType -> parameterizedValueSetType
-- On EXCEPT reduce production definedType -> parameterizedValueSetType
-- On END reduce production definedType -> parameterizedValueSetType
-- On ENCODED reduce production definedType -> parameterizedValueSetType
-- On DEFAULT reduce production definedType -> parameterizedValueSetType
-- On Comma reduce production definedType -> parameterizedValueSetType
-- On Colon reduce production definedType -> parameterizedValueSetType
-- On Circumflex reduce production definedType -> parameterizedValueSetType
-- On Bang reduce production definedType -> parameterizedValueSetType
-- On Assignment reduce production definedType -> parameterizedValueSetType

State 234:
## Known stack suffix:
## parameterizedType
## LR(1) items:
definedType -> parameterizedType . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
## Reductions:
-- On Upper reduce production definedType -> parameterizedType
-- On UNIQUE reduce production definedType -> parameterizedType
-- On UNION reduce production definedType -> parameterizedType
-- On RightParen reduce production definedType -> parameterizedType
-- On RightDoubleBracket reduce production definedType -> parameterizedType
-- On RightBrace reduce production definedType -> parameterizedType
-- On OPTIONAL reduce production definedType -> parameterizedType
-- On Middle reduce production definedType -> parameterizedType
-- On Lower reduce production definedType -> parameterizedType
-- On LeftParen reduce production definedType -> parameterizedType
-- On INTERSECTION reduce production definedType -> parameterizedType
-- On EXCEPT reduce production definedType -> parameterizedType
-- On END reduce production definedType -> parameterizedType
-- On ENCODED reduce production definedType -> parameterizedType
-- On DEFAULT reduce production definedType -> parameterizedType
-- On Comma reduce production definedType -> parameterizedType
-- On Colon reduce production definedType -> parameterizedType
-- On Circumflex reduce production definedType -> parameterizedType
-- On Bang reduce production definedType -> parameterizedType
-- On Assignment reduce production definedType -> parameterizedType

State 235:
## Known stack suffix:
## parameterizedObjectSet
## LR(1) items:
referencedObjects -> parameterizedObjectSet . [ Dot ]
## Transitions:
## Reductions:
-- On Dot reduce production referencedObjects -> parameterizedObjectSet

State 236:
## Known stack suffix:
## parameterizedObject
## LR(1) items:
referencedObjects -> parameterizedObject . [ Dot ]
## Transitions:
## Reductions:
-- On Dot reduce production referencedObjects -> parameterizedObject

State 237:
## Known stack suffix:
## octetStringType
## LR(1) items:
builtinType -> octetStringType . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
## Reductions:
-- On Upper reduce production builtinType -> octetStringType
-- On UNIQUE reduce production builtinType -> octetStringType
-- On UNION reduce production builtinType -> octetStringType
-- On RightParen reduce production builtinType -> octetStringType
-- On RightDoubleBracket reduce production builtinType -> octetStringType
-- On RightBrace reduce production builtinType -> octetStringType
-- On OPTIONAL reduce production builtinType -> octetStringType
-- On Middle reduce production builtinType -> octetStringType
-- On Lower reduce production builtinType -> octetStringType
-- On LeftParen reduce production builtinType -> octetStringType
-- On INTERSECTION reduce production builtinType -> octetStringType
-- On EXCEPT reduce production builtinType -> octetStringType
-- On END reduce production builtinType -> octetStringType
-- On ENCODED reduce production builtinType -> octetStringType
-- On DEFAULT reduce production builtinType -> octetStringType
-- On Comma reduce production builtinType -> octetStringType
-- On Colon reduce production builtinType -> octetStringType
-- On Circumflex reduce production builtinType -> octetStringType
-- On Bang reduce production builtinType -> octetStringType
-- On Assignment reduce production builtinType -> octetStringType

State 238:
## Known stack suffix:
## objectIdentifierType
## LR(1) items:
builtinType -> objectIdentifierType . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
## Reductions:
-- On Upper reduce production builtinType -> objectIdentifierType
-- On UNIQUE reduce production builtinType -> objectIdentifierType
-- On UNION reduce production builtinType -> objectIdentifierType
-- On RightParen reduce production builtinType -> objectIdentifierType
-- On RightDoubleBracket reduce production builtinType -> objectIdentifierType
-- On RightBrace reduce production builtinType -> objectIdentifierType
-- On OPTIONAL reduce production builtinType -> objectIdentifierType
-- On Middle reduce production builtinType -> objectIdentifierType
-- On Lower reduce production builtinType -> objectIdentifierType
-- On LeftParen reduce production builtinType -> objectIdentifierType
-- On INTERSECTION reduce production builtinType -> objectIdentifierType
-- On EXCEPT reduce production builtinType -> objectIdentifierType
-- On END reduce production builtinType -> objectIdentifierType
-- On ENCODED reduce production builtinType -> objectIdentifierType
-- On DEFAULT reduce production builtinType -> objectIdentifierType
-- On Comma reduce production builtinType -> objectIdentifierType
-- On Colon reduce production builtinType -> objectIdentifierType
-- On Circumflex reduce production builtinType -> objectIdentifierType
-- On Bang reduce production builtinType -> objectIdentifierType
-- On Assignment reduce production builtinType -> objectIdentifierType

State 239:
## Known stack suffix:
## objectClassFieldType
## LR(1) items:
builtinType -> objectClassFieldType . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
## Reductions:
-- On Upper reduce production builtinType -> objectClassFieldType
-- On UNIQUE reduce production builtinType -> objectClassFieldType
-- On UNION reduce production builtinType -> objectClassFieldType
-- On RightParen reduce production builtinType -> objectClassFieldType
-- On RightDoubleBracket reduce production builtinType -> objectClassFieldType
-- On RightBrace reduce production builtinType -> objectClassFieldType
-- On OPTIONAL reduce production builtinType -> objectClassFieldType
-- On Middle reduce production builtinType -> objectClassFieldType
-- On Lower reduce production builtinType -> objectClassFieldType
-- On LeftParen reduce production builtinType -> objectClassFieldType
-- On INTERSECTION reduce production builtinType -> objectClassFieldType
-- On EXCEPT reduce production builtinType -> objectClassFieldType
-- On END reduce production builtinType -> objectClassFieldType
-- On ENCODED reduce production builtinType -> objectClassFieldType
-- On DEFAULT reduce production builtinType -> objectClassFieldType
-- On Comma reduce production builtinType -> objectClassFieldType
-- On Colon reduce production builtinType -> objectClassFieldType
-- On Circumflex reduce production builtinType -> objectClassFieldType
-- On Bang reduce production builtinType -> objectClassFieldType
-- On Assignment reduce production builtinType -> objectClassFieldType

State 240:
## Known stack suffix:
## nullType
## LR(1) items:
builtinType -> nullType . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
## Reductions:
-- On Upper reduce production builtinType -> nullType
-- On UNIQUE reduce production builtinType -> nullType
-- On UNION reduce production builtinType -> nullType
-- On RightParen reduce production builtinType -> nullType
-- On RightDoubleBracket reduce production builtinType -> nullType
-- On RightBrace reduce production builtinType -> nullType
-- On OPTIONAL reduce production builtinType -> nullType
-- On Middle reduce production builtinType -> nullType
-- On Lower reduce production builtinType -> nullType
-- On LeftParen reduce production builtinType -> nullType
-- On INTERSECTION reduce production builtinType -> nullType
-- On EXCEPT reduce production builtinType -> nullType
-- On END reduce production builtinType -> nullType
-- On ENCODED reduce production builtinType -> nullType
-- On DEFAULT reduce production builtinType -> nullType
-- On Comma reduce production builtinType -> nullType
-- On Colon reduce production builtinType -> nullType
-- On Circumflex reduce production builtinType -> nullType
-- On Bang reduce production builtinType -> nullType
-- On Assignment reduce production builtinType -> nullType

State 241:
## Known stack suffix:
## integerType
## LR(1) items:
builtinType -> integerType . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
## Reductions:
-- On Upper reduce production builtinType -> integerType
-- On UNIQUE reduce production builtinType -> integerType
-- On UNION reduce production builtinType -> integerType
-- On RightParen reduce production builtinType -> integerType
-- On RightDoubleBracket reduce production builtinType -> integerType
-- On RightBrace reduce production builtinType -> integerType
-- On OPTIONAL reduce production builtinType -> integerType
-- On Middle reduce production builtinType -> integerType
-- On Lower reduce production builtinType -> integerType
-- On LeftParen reduce production builtinType -> integerType
-- On INTERSECTION reduce production builtinType -> integerType
-- On EXCEPT reduce production builtinType -> integerType
-- On END reduce production builtinType -> integerType
-- On ENCODED reduce production builtinType -> integerType
-- On DEFAULT reduce production builtinType -> integerType
-- On Comma reduce production builtinType -> integerType
-- On Colon reduce production builtinType -> integerType
-- On Circumflex reduce production builtinType -> integerType
-- On Bang reduce production builtinType -> integerType
-- On Assignment reduce production builtinType -> integerType

State 242:
## Known stack suffix:
## instanceOfType
## LR(1) items:
builtinType -> instanceOfType . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
## Reductions:
-- On Upper reduce production builtinType -> instanceOfType
-- On UNIQUE reduce production builtinType -> instanceOfType
-- On UNION reduce production builtinType -> instanceOfType
-- On RightParen reduce production builtinType -> instanceOfType
-- On RightDoubleBracket reduce production builtinType -> instanceOfType
-- On RightBrace reduce production builtinType -> instanceOfType
-- On OPTIONAL reduce production builtinType -> instanceOfType
-- On Middle reduce production builtinType -> instanceOfType
-- On Lower reduce production builtinType -> instanceOfType
-- On LeftParen reduce production builtinType -> instanceOfType
-- On INTERSECTION reduce production builtinType -> instanceOfType
-- On EXCEPT reduce production builtinType -> instanceOfType
-- On END reduce production builtinType -> instanceOfType
-- On ENCODED reduce production builtinType -> instanceOfType
-- On DEFAULT reduce production builtinType -> instanceOfType
-- On Comma reduce production builtinType -> instanceOfType
-- On Colon reduce production builtinType -> instanceOfType
-- On Circumflex reduce production builtinType -> instanceOfType
-- On Bang reduce production builtinType -> instanceOfType
-- On Assignment reduce production builtinType -> instanceOfType

State 243:
## Known stack suffix:
## externalTypeReference
## LR(1) items:
definedType -> externalTypeReference . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
simpleDefinedType -> externalTypeReference . [ LeftBrace ]
## Transitions:
## Reductions:
-- On Upper reduce production definedType -> externalTypeReference
-- On UNIQUE reduce production definedType -> externalTypeReference
-- On UNION reduce production definedType -> externalTypeReference
-- On RightParen reduce production definedType -> externalTypeReference
-- On RightDoubleBracket reduce production definedType -> externalTypeReference
-- On RightBrace reduce production definedType -> externalTypeReference
-- On OPTIONAL reduce production definedType -> externalTypeReference
-- On Middle reduce production definedType -> externalTypeReference
-- On Lower reduce production definedType -> externalTypeReference
-- On LeftParen reduce production definedType -> externalTypeReference
-- On LeftBrace reduce production simpleDefinedType -> externalTypeReference
-- On INTERSECTION reduce production definedType -> externalTypeReference
-- On EXCEPT reduce production definedType -> externalTypeReference
-- On END reduce production definedType -> externalTypeReference
-- On ENCODED reduce production definedType -> externalTypeReference
-- On DEFAULT reduce production definedType -> externalTypeReference
-- On Comma reduce production definedType -> externalTypeReference
-- On Colon reduce production definedType -> externalTypeReference
-- On Circumflex reduce production definedType -> externalTypeReference
-- On Bang reduce production definedType -> externalTypeReference
-- On Assignment reduce production definedType -> externalTypeReference

State 244:
## Known stack suffix:
## externalType
## LR(1) items:
builtinType -> externalType . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
## Reductions:
-- On Upper reduce production builtinType -> externalType
-- On UNIQUE reduce production builtinType -> externalType
-- On UNION reduce production builtinType -> externalType
-- On RightParen reduce production builtinType -> externalType
-- On RightDoubleBracket reduce production builtinType -> externalType
-- On RightBrace reduce production builtinType -> externalType
-- On OPTIONAL reduce production builtinType -> externalType
-- On Middle reduce production builtinType -> externalType
-- On Lower reduce production builtinType -> externalType
-- On LeftParen reduce production builtinType -> externalType
-- On INTERSECTION reduce production builtinType -> externalType
-- On EXCEPT reduce production builtinType -> externalType
-- On END reduce production builtinType -> externalType
-- On ENCODED reduce production builtinType -> externalType
-- On DEFAULT reduce production builtinType -> externalType
-- On Comma reduce production builtinType -> externalType
-- On Colon reduce production builtinType -> externalType
-- On Circumflex reduce production builtinType -> externalType
-- On Bang reduce production builtinType -> externalType
-- On Assignment reduce production builtinType -> externalType

State 245:
## Known stack suffix:
## externalObjectSetReference
## LR(1) items:
definedObjectSet -> externalObjectSetReference . [ UNION RightParen RightBrace Middle LeftBrace INTERSECTION EXCEPT Dot Comma Circumflex Bang ]
## Transitions:
## Reductions:
-- On UNION reduce production definedObjectSet -> externalObjectSetReference
-- On RightParen reduce production definedObjectSet -> externalObjectSetReference
-- On RightBrace reduce production definedObjectSet -> externalObjectSetReference
-- On Middle reduce production definedObjectSet -> externalObjectSetReference
-- On LeftBrace reduce production definedObjectSet -> externalObjectSetReference
-- On INTERSECTION reduce production definedObjectSet -> externalObjectSetReference
-- On EXCEPT reduce production definedObjectSet -> externalObjectSetReference
-- On Dot reduce production definedObjectSet -> externalObjectSetReference
-- On Comma reduce production definedObjectSet -> externalObjectSetReference
-- On Circumflex reduce production definedObjectSet -> externalObjectSetReference
-- On Bang reduce production definedObjectSet -> externalObjectSetReference

State 246:
## Known stack suffix:
## externalObjectReference
## LR(1) items:
definedObject -> externalObjectReference . [ Upper UNION RightParen RightBrace Middle Lower LeftBrace INTERSECTION EXCEPT END Dot Comma Circumflex Bang ]
## Transitions:
## Reductions:
-- On Upper reduce production definedObject -> externalObjectReference
-- On UNION reduce production definedObject -> externalObjectReference
-- On RightParen reduce production definedObject -> externalObjectReference
-- On RightBrace reduce production definedObject -> externalObjectReference
-- On Middle reduce production definedObject -> externalObjectReference
-- On Lower reduce production definedObject -> externalObjectReference
-- On LeftBrace reduce production definedObject -> externalObjectReference
-- On INTERSECTION reduce production definedObject -> externalObjectReference
-- On EXCEPT reduce production definedObject -> externalObjectReference
-- On END reduce production definedObject -> externalObjectReference
-- On Dot reduce production definedObject -> externalObjectReference
-- On Comma reduce production definedObject -> externalObjectReference
-- On Circumflex reduce production definedObject -> externalObjectReference
-- On Bang reduce production definedObject -> externalObjectReference

State 247:
## Known stack suffix:
## enumeratedType
## LR(1) items:
builtinType -> enumeratedType . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
## Reductions:
-- On Upper reduce production builtinType -> enumeratedType
-- On UNIQUE reduce production builtinType -> enumeratedType
-- On UNION reduce production builtinType -> enumeratedType
-- On RightParen reduce production builtinType -> enumeratedType
-- On RightDoubleBracket reduce production builtinType -> enumeratedType
-- On RightBrace reduce production builtinType -> enumeratedType
-- On OPTIONAL reduce production builtinType -> enumeratedType
-- On Middle reduce production builtinType -> enumeratedType
-- On Lower reduce production builtinType -> enumeratedType
-- On LeftParen reduce production builtinType -> enumeratedType
-- On INTERSECTION reduce production builtinType -> enumeratedType
-- On EXCEPT reduce production builtinType -> enumeratedType
-- On END reduce production builtinType -> enumeratedType
-- On ENCODED reduce production builtinType -> enumeratedType
-- On DEFAULT reduce production builtinType -> enumeratedType
-- On Comma reduce production builtinType -> enumeratedType
-- On Colon reduce production builtinType -> enumeratedType
-- On Circumflex reduce production builtinType -> enumeratedType
-- On Bang reduce production builtinType -> enumeratedType
-- On Assignment reduce production builtinType -> enumeratedType

State 248:
## Known stack suffix:
## embeddedPDVType
## LR(1) items:
builtinType -> embeddedPDVType . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
## Reductions:
-- On Upper reduce production builtinType -> embeddedPDVType
-- On UNIQUE reduce production builtinType -> embeddedPDVType
-- On UNION reduce production builtinType -> embeddedPDVType
-- On RightParen reduce production builtinType -> embeddedPDVType
-- On RightDoubleBracket reduce production builtinType -> embeddedPDVType
-- On RightBrace reduce production builtinType -> embeddedPDVType
-- On OPTIONAL reduce production builtinType -> embeddedPDVType
-- On Middle reduce production builtinType -> embeddedPDVType
-- On Lower reduce production builtinType -> embeddedPDVType
-- On LeftParen reduce production builtinType -> embeddedPDVType
-- On INTERSECTION reduce production builtinType -> embeddedPDVType
-- On EXCEPT reduce production builtinType -> embeddedPDVType
-- On END reduce production builtinType -> embeddedPDVType
-- On ENCODED reduce production builtinType -> embeddedPDVType
-- On DEFAULT reduce production builtinType -> embeddedPDVType
-- On Comma reduce production builtinType -> embeddedPDVType
-- On Colon reduce production builtinType -> embeddedPDVType
-- On Circumflex reduce production builtinType -> embeddedPDVType
-- On Bang reduce production builtinType -> embeddedPDVType
-- On Assignment reduce production builtinType -> embeddedPDVType

State 249:
## Known stack suffix:
## definedType
## LR(1) items:
referencedType -> definedType . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
## Reductions:
-- On Upper reduce production referencedType -> definedType
-- On UNIQUE reduce production referencedType -> definedType
-- On UNION reduce production referencedType -> definedType
-- On RightParen reduce production referencedType -> definedType
-- On RightDoubleBracket reduce production referencedType -> definedType
-- On RightBrace reduce production referencedType -> definedType
-- On OPTIONAL reduce production referencedType -> definedType
-- On Middle reduce production referencedType -> definedType
-- On Lower reduce production referencedType -> definedType
-- On LeftParen reduce production referencedType -> definedType
-- On INTERSECTION reduce production referencedType -> definedType
-- On EXCEPT reduce production referencedType -> definedType
-- On END reduce production referencedType -> definedType
-- On ENCODED reduce production referencedType -> definedType
-- On DEFAULT reduce production referencedType -> definedType
-- On Comma reduce production referencedType -> definedType
-- On Colon reduce production referencedType -> definedType
-- On Circumflex reduce production referencedType -> definedType
-- On Bang reduce production referencedType -> definedType
-- On Assignment reduce production referencedType -> definedType

State 250:
## Known stack suffix:
## definedObjectSet
## LR(1) items:
parameterizedObjectSet -> definedObjectSet . actualParameterList [ Dot ]
referencedObjects -> definedObjectSet . [ Dot ]
## Transitions:
-- On LeftBrace shift to state 65
-- On actualParameterList shift to state 251
## Reductions:
-- On Dot reduce production referencedObjects -> definedObjectSet

State 251:
## Known stack suffix:
## definedObjectSet actualParameterList
## LR(1) items:
parameterizedObjectSet -> definedObjectSet actualParameterList . [ UNION RightParen RightBrace Middle INTERSECTION EXCEPT Dot Comma Circumflex Bang ]
## Transitions:
## Reductions:
-- On UNION reduce production parameterizedObjectSet -> definedObjectSet actualParameterList
-- On RightParen reduce production parameterizedObjectSet -> definedObjectSet actualParameterList
-- On RightBrace reduce production parameterizedObjectSet -> definedObjectSet actualParameterList
-- On Middle reduce production parameterizedObjectSet -> definedObjectSet actualParameterList
-- On INTERSECTION reduce production parameterizedObjectSet -> definedObjectSet actualParameterList
-- On EXCEPT reduce production parameterizedObjectSet -> definedObjectSet actualParameterList
-- On Dot reduce production parameterizedObjectSet -> definedObjectSet actualParameterList
-- On Comma reduce production parameterizedObjectSet -> definedObjectSet actualParameterList
-- On Circumflex reduce production parameterizedObjectSet -> definedObjectSet actualParameterList
-- On Bang reduce production parameterizedObjectSet -> definedObjectSet actualParameterList

State 252:
## Known stack suffix:
## definedObjectClass
## LR(1) items:
objectClassFieldType -> definedObjectClass . Dot fieldName [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
-- On Dot shift to state 253
## Reductions:

State 253:
## Known stack suffix:
## definedObjectClass Dot
## LR(1) items:
objectClassFieldType -> definedObjectClass Dot . fieldName [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
-- On UpperField shift to state 225
-- On LowerField shift to state 226
-- On separated_nonempty_list(Dot,primitiveFieldName) shift to state 227
-- On primitiveFieldName shift to state 228
-- On fieldName shift to state 254
## Reductions:

State 254:
## Known stack suffix:
## definedObjectClass Dot fieldName
## LR(1) items:
objectClassFieldType -> definedObjectClass Dot fieldName . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
## Reductions:
-- On Upper reduce production objectClassFieldType -> definedObjectClass Dot fieldName
-- On UNIQUE reduce production objectClassFieldType -> definedObjectClass Dot fieldName
-- On UNION reduce production objectClassFieldType -> definedObjectClass Dot fieldName
-- On RightParen reduce production objectClassFieldType -> definedObjectClass Dot fieldName
-- On RightDoubleBracket reduce production objectClassFieldType -> definedObjectClass Dot fieldName
-- On RightBrace reduce production objectClassFieldType -> definedObjectClass Dot fieldName
-- On OPTIONAL reduce production objectClassFieldType -> definedObjectClass Dot fieldName
-- On Middle reduce production objectClassFieldType -> definedObjectClass Dot fieldName
-- On Lower reduce production objectClassFieldType -> definedObjectClass Dot fieldName
-- On LeftParen reduce production objectClassFieldType -> definedObjectClass Dot fieldName
-- On INTERSECTION reduce production objectClassFieldType -> definedObjectClass Dot fieldName
-- On EXCEPT reduce production objectClassFieldType -> definedObjectClass Dot fieldName
-- On END reduce production objectClassFieldType -> definedObjectClass Dot fieldName
-- On ENCODED reduce production objectClassFieldType -> definedObjectClass Dot fieldName
-- On DEFAULT reduce production objectClassFieldType -> definedObjectClass Dot fieldName
-- On Comma reduce production objectClassFieldType -> definedObjectClass Dot fieldName
-- On Colon reduce production objectClassFieldType -> definedObjectClass Dot fieldName
-- On Circumflex reduce production objectClassFieldType -> definedObjectClass Dot fieldName
-- On Bang reduce production objectClassFieldType -> definedObjectClass Dot fieldName
-- On Assignment reduce production objectClassFieldType -> definedObjectClass Dot fieldName

State 255:
## Known stack suffix:
## definedObject
## LR(1) items:
parameterizedObject -> definedObject . actualParameterList [ Dot ]
referencedObjects -> definedObject . [ Dot ]
## Transitions:
-- On LeftBrace shift to state 65
-- On actualParameterList shift to state 256
## Reductions:
-- On Dot reduce production referencedObjects -> definedObject

State 256:
## Known stack suffix:
## definedObject actualParameterList
## LR(1) items:
parameterizedObject -> definedObject actualParameterList . [ Upper UNION RightParen RightBrace Middle Lower INTERSECTION EXCEPT END Dot Comma Circumflex Bang ]
## Transitions:
## Reductions:
-- On Upper reduce production parameterizedObject -> definedObject actualParameterList
-- On UNION reduce production parameterizedObject -> definedObject actualParameterList
-- On RightParen reduce production parameterizedObject -> definedObject actualParameterList
-- On RightBrace reduce production parameterizedObject -> definedObject actualParameterList
-- On Middle reduce production parameterizedObject -> definedObject actualParameterList
-- On Lower reduce production parameterizedObject -> definedObject actualParameterList
-- On INTERSECTION reduce production parameterizedObject -> definedObject actualParameterList
-- On EXCEPT reduce production parameterizedObject -> definedObject actualParameterList
-- On END reduce production parameterizedObject -> definedObject actualParameterList
-- On Dot reduce production parameterizedObject -> definedObject actualParameterList
-- On Comma reduce production parameterizedObject -> definedObject actualParameterList
-- On Circumflex reduce production parameterizedObject -> definedObject actualParameterList
-- On Bang reduce production parameterizedObject -> definedObject actualParameterList

State 257:
## Known stack suffix:
## constrainedType
## LR(1) items:
type_x -> constrainedType . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
## Reductions:
-- On Upper reduce production type_x -> constrainedType
-- On UNIQUE reduce production type_x -> constrainedType
-- On UNION reduce production type_x -> constrainedType
-- On RightParen reduce production type_x -> constrainedType
-- On RightDoubleBracket reduce production type_x -> constrainedType
-- On RightBrace reduce production type_x -> constrainedType
-- On OPTIONAL reduce production type_x -> constrainedType
-- On Middle reduce production type_x -> constrainedType
-- On Lower reduce production type_x -> constrainedType
-- On LeftParen reduce production type_x -> constrainedType
-- On INTERSECTION reduce production type_x -> constrainedType
-- On EXCEPT reduce production type_x -> constrainedType
-- On END reduce production type_x -> constrainedType
-- On ENCODED reduce production type_x -> constrainedType
-- On DEFAULT reduce production type_x -> constrainedType
-- On Comma reduce production type_x -> constrainedType
-- On Colon reduce production type_x -> constrainedType
-- On Circumflex reduce production type_x -> constrainedType
-- On Bang reduce production type_x -> constrainedType
-- On Assignment reduce production type_x -> constrainedType

State 258:
## Known stack suffix:
## choiceType
## LR(1) items:
builtinType -> choiceType . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
## Reductions:
-- On Upper reduce production builtinType -> choiceType
-- On UNIQUE reduce production builtinType -> choiceType
-- On UNION reduce production builtinType -> choiceType
-- On RightParen reduce production builtinType -> choiceType
-- On RightDoubleBracket reduce production builtinType -> choiceType
-- On RightBrace reduce production builtinType -> choiceType
-- On OPTIONAL reduce production builtinType -> choiceType
-- On Middle reduce production builtinType -> choiceType
-- On Lower reduce production builtinType -> choiceType
-- On LeftParen reduce production builtinType -> choiceType
-- On INTERSECTION reduce production builtinType -> choiceType
-- On EXCEPT reduce production builtinType -> choiceType
-- On END reduce production builtinType -> choiceType
-- On ENCODED reduce production builtinType -> choiceType
-- On DEFAULT reduce production builtinType -> choiceType
-- On Comma reduce production builtinType -> choiceType
-- On Colon reduce production builtinType -> choiceType
-- On Circumflex reduce production builtinType -> choiceType
-- On Bang reduce production builtinType -> choiceType
-- On Assignment reduce production builtinType -> choiceType

State 259:
## Known stack suffix:
## characterStringType
## LR(1) items:
builtinType -> characterStringType . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
## Reductions:
-- On Upper reduce production builtinType -> characterStringType
-- On UNIQUE reduce production builtinType -> characterStringType
-- On UNION reduce production builtinType -> characterStringType
-- On RightParen reduce production builtinType -> characterStringType
-- On RightDoubleBracket reduce production builtinType -> characterStringType
-- On RightBrace reduce production builtinType -> characterStringType
-- On OPTIONAL reduce production builtinType -> characterStringType
-- On Middle reduce production builtinType -> characterStringType
-- On Lower reduce production builtinType -> characterStringType
-- On LeftParen reduce production builtinType -> characterStringType
-- On INTERSECTION reduce production builtinType -> characterStringType
-- On EXCEPT reduce production builtinType -> characterStringType
-- On END reduce production builtinType -> characterStringType
-- On ENCODED reduce production builtinType -> characterStringType
-- On DEFAULT reduce production builtinType -> characterStringType
-- On Comma reduce production builtinType -> characterStringType
-- On Colon reduce production builtinType -> characterStringType
-- On Circumflex reduce production builtinType -> characterStringType
-- On Bang reduce production builtinType -> characterStringType
-- On Assignment reduce production builtinType -> characterStringType

State 260:
## Known stack suffix:
## builtinType
## LR(1) items:
type_x -> builtinType . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
## Reductions:
-- On Upper reduce production type_x -> builtinType
-- On UNIQUE reduce production type_x -> builtinType
-- On UNION reduce production type_x -> builtinType
-- On RightParen reduce production type_x -> builtinType
-- On RightDoubleBracket reduce production type_x -> builtinType
-- On RightBrace reduce production type_x -> builtinType
-- On OPTIONAL reduce production type_x -> builtinType
-- On Middle reduce production type_x -> builtinType
-- On Lower reduce production type_x -> builtinType
-- On LeftParen reduce production type_x -> builtinType
-- On INTERSECTION reduce production type_x -> builtinType
-- On EXCEPT reduce production type_x -> builtinType
-- On END reduce production type_x -> builtinType
-- On ENCODED reduce production type_x -> builtinType
-- On DEFAULT reduce production type_x -> builtinType
-- On Comma reduce production type_x -> builtinType
-- On Colon reduce production type_x -> builtinType
-- On Circumflex reduce production type_x -> builtinType
-- On Bang reduce production type_x -> builtinType
-- On Assignment reduce production type_x -> builtinType

State 261:
## Known stack suffix:
## booleanType
## LR(1) items:
builtinType -> booleanType . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
## Reductions:
-- On Upper reduce production builtinType -> booleanType
-- On UNIQUE reduce production builtinType -> booleanType
-- On UNION reduce production builtinType -> booleanType
-- On RightParen reduce production builtinType -> booleanType
-- On RightDoubleBracket reduce production builtinType -> booleanType
-- On RightBrace reduce production builtinType -> booleanType
-- On OPTIONAL reduce production builtinType -> booleanType
-- On Middle reduce production builtinType -> booleanType
-- On Lower reduce production builtinType -> booleanType
-- On LeftParen reduce production builtinType -> booleanType
-- On INTERSECTION reduce production builtinType -> booleanType
-- On EXCEPT reduce production builtinType -> booleanType
-- On END reduce production builtinType -> booleanType
-- On ENCODED reduce production builtinType -> booleanType
-- On DEFAULT reduce production builtinType -> booleanType
-- On Comma reduce production builtinType -> booleanType
-- On Colon reduce production builtinType -> booleanType
-- On Circumflex reduce production builtinType -> booleanType
-- On Bang reduce production builtinType -> booleanType
-- On Assignment reduce production builtinType -> booleanType

State 262:
## Known stack suffix:
## bitStringType
## LR(1) items:
builtinType -> bitStringType . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
## Reductions:
-- On Upper reduce production builtinType -> bitStringType
-- On UNIQUE reduce production builtinType -> bitStringType
-- On UNION reduce production builtinType -> bitStringType
-- On RightParen reduce production builtinType -> bitStringType
-- On RightDoubleBracket reduce production builtinType -> bitStringType
-- On RightBrace reduce production builtinType -> bitStringType
-- On OPTIONAL reduce production builtinType -> bitStringType
-- On Middle reduce production builtinType -> bitStringType
-- On Lower reduce production builtinType -> bitStringType
-- On LeftParen reduce production builtinType -> bitStringType
-- On INTERSECTION reduce production builtinType -> bitStringType
-- On EXCEPT reduce production builtinType -> bitStringType
-- On END reduce production builtinType -> bitStringType
-- On ENCODED reduce production builtinType -> bitStringType
-- On DEFAULT reduce production builtinType -> bitStringType
-- On Comma reduce production builtinType -> bitStringType
-- On Colon reduce production builtinType -> bitStringType
-- On Circumflex reduce production builtinType -> bitStringType
-- On Bang reduce production builtinType -> bitStringType
-- On Assignment reduce production builtinType -> bitStringType

State 263:
## Known stack suffix:
## tag EXPLICIT
## LR(1) items:
taggedType -> tag EXPLICIT . type_x [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
-- On VisibleString shift to state 66
-- On VideotexString shift to state 67
-- On Upper shift to state 113
-- On UniversalString shift to state 72
-- On UTF8String shift to state 73
-- On UTCTime shift to state 74
-- On TeletexString shift to state 75
-- On TYPE_IDENTIFIER shift to state 76
-- On T61String shift to state 78
-- On SET shift to state 79
-- On SEQUENCE shift to state 111
-- On RELATIVE_OID shift to state 116
-- On REAL shift to state 117
-- On PrintableString shift to state 118
-- On ObjectDescriptor shift to state 119
-- On OCTET shift to state 120
-- On OBJECT shift to state 122
-- On NumericString shift to state 124
-- On NULL shift to state 125
-- On Lower shift to state 127
-- On LeftBracket shift to state 129
-- On ISO646String shift to state 140
-- On INTEGER shift to state 141
-- On INSTANCE shift to state 157
-- On IA5String shift to state 166
-- On GraphicString shift to state 167
-- On GeneralizedTime shift to state 168
-- On GeneralString shift to state 169
-- On EXTERNAL shift to state 170
-- On ENUMERATED shift to state 171
-- On EMBEDDED shift to state 179
-- On CHOICE shift to state 181
-- On CHARACTER shift to state 184
-- On BOOLEAN shift to state 186
-- On BMPString shift to state 187
-- On BIT shift to state 188
-- On ABSTRACT_SYNTAX shift to state 162
-- On valueSetFromObjects shift to state 202
-- On usefulType shift to state 203
-- On usefulObjectClassReference shift to state 163
-- On unrestrictedCharacterStringType shift to state 204
-- On type_x shift to state 264
-- On typeWithConstraint shift to state 207
-- On typeFromObject shift to state 208
-- On taggedType shift to state 209
-- On tag shift to state 210
-- On simpleDefinedType shift to state 213
-- On setType shift to state 215
-- On setOfType shift to state 216
-- On sequenceType shift to state 217
-- On sequenceOfType shift to state 218
-- On selectionType shift to state 219
-- On restrictedCharacterStringType shift to state 220
-- On relativeOIDType shift to state 221
-- On referencedType shift to state 222
-- On referencedObjects shift to state 223
-- On realType shift to state 232
-- On parameterizedValueSetType shift to state 233
-- On parameterizedType shift to state 234
-- On parameterizedObjectSet shift to state 235
-- On parameterizedObject shift to state 236
-- On octetStringType shift to state 237
-- On objectIdentifierType shift to state 238
-- On objectClassFieldType shift to state 239
-- On nullType shift to state 240
-- On integerType shift to state 241
-- On instanceOfType shift to state 242
-- On externalTypeReference shift to state 243
-- On externalType shift to state 244
-- On externalObjectSetReference shift to state 245
-- On externalObjectReference shift to state 246
-- On externalObjectClassReference shift to state 164
-- On enumeratedType shift to state 247
-- On embeddedPDVType shift to state 248
-- On definedType shift to state 249
-- On definedObjectSet shift to state 250
-- On definedObjectClass shift to state 252
-- On definedObject shift to state 255
-- On constrainedType shift to state 257
-- On choiceType shift to state 258
-- On characterStringType shift to state 259
-- On builtinType shift to state 260
-- On booleanType shift to state 261
-- On bitStringType shift to state 262
## Reductions:

State 264:
## Known stack suffix:
## tag EXPLICIT type_x
## LR(1) items:
constrainedType -> type_x . constraint_x [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
taggedType -> tag EXPLICIT type_x . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
-- On LeftParen shift to state 81
-- On constraint_x shift to state 206
## Reductions:
-- On Upper reduce production taggedType -> tag EXPLICIT type_x
-- On UNIQUE reduce production taggedType -> tag EXPLICIT type_x
-- On UNION reduce production taggedType -> tag EXPLICIT type_x
-- On RightParen reduce production taggedType -> tag EXPLICIT type_x
-- On RightDoubleBracket reduce production taggedType -> tag EXPLICIT type_x
-- On RightBrace reduce production taggedType -> tag EXPLICIT type_x
-- On OPTIONAL reduce production taggedType -> tag EXPLICIT type_x
-- On Middle reduce production taggedType -> tag EXPLICIT type_x
-- On Lower reduce production taggedType -> tag EXPLICIT type_x
-- On INTERSECTION reduce production taggedType -> tag EXPLICIT type_x
-- On EXCEPT reduce production taggedType -> tag EXPLICIT type_x
-- On END reduce production taggedType -> tag EXPLICIT type_x
-- On ENCODED reduce production taggedType -> tag EXPLICIT type_x
-- On DEFAULT reduce production taggedType -> tag EXPLICIT type_x
-- On Comma reduce production taggedType -> tag EXPLICIT type_x
-- On Colon reduce production taggedType -> tag EXPLICIT type_x
-- On Circumflex reduce production taggedType -> tag EXPLICIT type_x
-- On Bang reduce production taggedType -> tag EXPLICIT type_x
-- On Assignment reduce production taggedType -> tag EXPLICIT type_x

State 265:
## Known stack suffix:
## tag type_x
## LR(1) items:
constrainedType -> type_x . constraint_x [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
taggedType -> tag type_x . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
-- On LeftParen shift to state 81
-- On constraint_x shift to state 206
## Reductions:
-- On Upper reduce production taggedType -> tag type_x
-- On UNIQUE reduce production taggedType -> tag type_x
-- On UNION reduce production taggedType -> tag type_x
-- On RightParen reduce production taggedType -> tag type_x
-- On RightDoubleBracket reduce production taggedType -> tag type_x
-- On RightBrace reduce production taggedType -> tag type_x
-- On OPTIONAL reduce production taggedType -> tag type_x
-- On Middle reduce production taggedType -> tag type_x
-- On Lower reduce production taggedType -> tag type_x
-- On INTERSECTION reduce production taggedType -> tag type_x
-- On EXCEPT reduce production taggedType -> tag type_x
-- On END reduce production taggedType -> tag type_x
-- On ENCODED reduce production taggedType -> tag type_x
-- On DEFAULT reduce production taggedType -> tag type_x
-- On Comma reduce production taggedType -> tag type_x
-- On Colon reduce production taggedType -> tag type_x
-- On Circumflex reduce production taggedType -> tag type_x
-- On Bang reduce production taggedType -> tag type_x
-- On Assignment reduce production taggedType -> tag type_x

State 266:
## Known stack suffix:
## rootAlternativeTypeList
## LR(1) items:
alternativeTypeLists -> rootAlternativeTypeList . [ RightBrace ]
alternativeTypeLists -> rootAlternativeTypeList . Comma extensionAndException extensionAdditionAlternatives optionalExtensionMarker [ RightBrace ]
## Transitions:
-- On Comma shift to state 267
## Reductions:
-- On RightBrace reduce production alternativeTypeLists -> rootAlternativeTypeList

State 267:
## Known stack suffix:
## rootAlternativeTypeList Comma
## LR(1) items:
alternativeTypeLists -> rootAlternativeTypeList Comma . extensionAndException extensionAdditionAlternatives optionalExtensionMarker [ RightBrace ]
## Transitions:
-- On Ellipsis shift to state 268
-- On extensionAndException shift to state 270
## Reductions:

State 268:
## Known stack suffix:
## Ellipsis
## LR(1) items:
extensionAndException -> Ellipsis . [ RightBrace Comma ]
extensionAndException -> Ellipsis . exceptionSpec [ RightBrace Comma ]
## Transitions:
-- On Bang shift to state 177
-- On exceptionSpec shift to state 269
## Reductions:
-- On RightBrace reduce production extensionAndException -> Ellipsis
-- On Comma reduce production extensionAndException -> Ellipsis

State 269:
## Known stack suffix:
## Ellipsis exceptionSpec
## LR(1) items:
extensionAndException -> Ellipsis exceptionSpec . [ RightBrace Comma ]
## Transitions:
## Reductions:
-- On RightBrace reduce production extensionAndException -> Ellipsis exceptionSpec
-- On Comma reduce production extensionAndException -> Ellipsis exceptionSpec

State 270:
## Known stack suffix:
## rootAlternativeTypeList Comma extensionAndException
## LR(1) items:
alternativeTypeLists -> rootAlternativeTypeList Comma extensionAndException . extensionAdditionAlternatives optionalExtensionMarker [ RightBrace ]
## Transitions:
-- On Comma shift to state 271
-- On extensionAdditionAlternatives shift to state 287
## Reductions:
-- On RightBrace reduce production extensionAdditionAlternatives ->

State 271:
## Known stack suffix:
## Comma
## LR(1) items:
extensionAdditionAlternatives -> Comma . extensionAdditionAlternativesList [ RightBrace Comma ]
## Transitions:
-- On Lower shift to state 183
-- On LeftDoubleBracket shift to state 272
-- On namedType shift to state 281
-- On extensionAdditionAlternativesList shift to state 282
-- On extensionAdditionAlternativesGroup shift to state 284
-- On extensionAdditionAlternative shift to state 286
## Reductions:

State 272:
## Known stack suffix:
## LeftDoubleBracket
## LR(1) items:
extensionAdditionAlternativesGroup -> LeftDoubleBracket . versionNumber alternativeTypeList RightDoubleBracket [ RightBrace Comma ]
## Transitions:
-- On Number shift to state 273
-- On versionNumber shift to state 275
## Reductions:
-- On Lower reduce production versionNumber ->

State 273:
## Known stack suffix:
## Number
## LR(1) items:
versionNumber -> Number . Colon [ Lower COMPONENTS ]
## Transitions:
-- On Colon shift to state 274
## Reductions:

State 274:
## Known stack suffix:
## Number Colon
## LR(1) items:
versionNumber -> Number Colon . [ Lower COMPONENTS ]
## Transitions:
## Reductions:
-- On Lower reduce production versionNumber -> Number Colon
-- On COMPONENTS reduce production versionNumber -> Number Colon

State 275:
## Known stack suffix:
## LeftDoubleBracket versionNumber
## LR(1) items:
extensionAdditionAlternativesGroup -> LeftDoubleBracket versionNumber . alternativeTypeList RightDoubleBracket [ RightBrace Comma ]
## Transitions:
-- On Lower shift to state 183
-- On namedType shift to state 276
-- On alternativeTypeList shift to state 277
## Reductions:

State 276:
## Known stack suffix:
## namedType
## LR(1) items:
alternativeTypeList -> namedType . [ RightDoubleBracket RightBrace Comma ]
## Transitions:
## Reductions:
-- On RightDoubleBracket reduce production alternativeTypeList -> namedType
-- On RightBrace reduce production alternativeTypeList -> namedType
-- On Comma reduce production alternativeTypeList -> namedType

State 277:
## Known stack suffix:
## LeftDoubleBracket versionNumber alternativeTypeList
## LR(1) items:
alternativeTypeList -> alternativeTypeList . Comma namedType [ RightDoubleBracket Comma ]
extensionAdditionAlternativesGroup -> LeftDoubleBracket versionNumber alternativeTypeList . RightDoubleBracket [ RightBrace Comma ]
## Transitions:
-- On RightDoubleBracket shift to state 278
-- On Comma shift to state 279
## Reductions:

State 278:
## Known stack suffix:
## LeftDoubleBracket versionNumber alternativeTypeList RightDoubleBracket
## LR(1) items:
extensionAdditionAlternativesGroup -> LeftDoubleBracket versionNumber alternativeTypeList RightDoubleBracket . [ RightBrace Comma ]
## Transitions:
## Reductions:
-- On RightBrace reduce production extensionAdditionAlternativesGroup -> LeftDoubleBracket versionNumber alternativeTypeList RightDoubleBracket
-- On Comma reduce production extensionAdditionAlternativesGroup -> LeftDoubleBracket versionNumber alternativeTypeList RightDoubleBracket

State 279:
## Known stack suffix:
## alternativeTypeList Comma
## LR(1) items:
alternativeTypeList -> alternativeTypeList Comma . namedType [ RightDoubleBracket RightBrace Comma ]
## Transitions:
-- On Lower shift to state 183
-- On namedType shift to state 280
## Reductions:

State 280:
## Known stack suffix:
## alternativeTypeList Comma namedType
## LR(1) items:
alternativeTypeList -> alternativeTypeList Comma namedType . [ RightDoubleBracket RightBrace Comma ]
## Transitions:
## Reductions:
-- On RightDoubleBracket reduce production alternativeTypeList -> alternativeTypeList Comma namedType
-- On RightBrace reduce production alternativeTypeList -> alternativeTypeList Comma namedType
-- On Comma reduce production alternativeTypeList -> alternativeTypeList Comma namedType

State 281:
## Known stack suffix:
## namedType
## LR(1) items:
extensionAdditionAlternative -> namedType . [ RightBrace Comma ]
## Transitions:
## Reductions:
-- On RightBrace reduce production extensionAdditionAlternative -> namedType
-- On Comma reduce production extensionAdditionAlternative -> namedType

State 282:
## Known stack suffix:
## Comma extensionAdditionAlternativesList
## LR(1) items:
extensionAdditionAlternatives -> Comma extensionAdditionAlternativesList . [ RightBrace Comma ]
extensionAdditionAlternativesList -> extensionAdditionAlternativesList . Comma extensionAdditionAlternative [ RightBrace Comma ]
## Transitions:
-- On Comma shift to state 283
## Reductions:
-- On RightBrace reduce production extensionAdditionAlternatives -> Comma extensionAdditionAlternativesList

State 283:
## Known stack suffix:
## extensionAdditionAlternativesList Comma
## LR(1) items:
extensionAdditionAlternativesList -> extensionAdditionAlternativesList Comma . extensionAdditionAlternative [ RightBrace Comma ]
## Transitions:
-- On Lower shift to state 183
-- On LeftDoubleBracket shift to state 272
-- On namedType shift to state 281
-- On extensionAdditionAlternativesGroup shift to state 284
-- On extensionAdditionAlternative shift to state 285
## Reductions:

State 284:
## Known stack suffix:
## extensionAdditionAlternativesGroup
## LR(1) items:
extensionAdditionAlternative -> extensionAdditionAlternativesGroup . [ RightBrace Comma ]
## Transitions:
## Reductions:
-- On RightBrace reduce production extensionAdditionAlternative -> extensionAdditionAlternativesGroup
-- On Comma reduce production extensionAdditionAlternative -> extensionAdditionAlternativesGroup

State 285:
## Known stack suffix:
## extensionAdditionAlternativesList Comma extensionAdditionAlternative
## LR(1) items:
extensionAdditionAlternativesList -> extensionAdditionAlternativesList Comma extensionAdditionAlternative . [ RightBrace Comma ]
## Transitions:
## Reductions:
-- On RightBrace reduce production extensionAdditionAlternativesList -> extensionAdditionAlternativesList Comma extensionAdditionAlternative
-- On Comma reduce production extensionAdditionAlternativesList -> extensionAdditionAlternativesList Comma extensionAdditionAlternative

State 286:
## Known stack suffix:
## extensionAdditionAlternative
## LR(1) items:
extensionAdditionAlternativesList -> extensionAdditionAlternative . [ RightBrace Comma ]
## Transitions:
## Reductions:
-- On RightBrace reduce production extensionAdditionAlternativesList -> extensionAdditionAlternative
-- On Comma reduce production extensionAdditionAlternativesList -> extensionAdditionAlternative

State 287:
## Known stack suffix:
## rootAlternativeTypeList Comma extensionAndException extensionAdditionAlternatives
## LR(1) items:
alternativeTypeLists -> rootAlternativeTypeList Comma extensionAndException extensionAdditionAlternatives . optionalExtensionMarker [ RightBrace ]
## Transitions:
-- On Comma shift to state 288
-- On optionalExtensionMarker shift to state 290
## Reductions:
-- On RightBrace reduce production optionalExtensionMarker ->

State 288:
## Known stack suffix:
## Comma
## LR(1) items:
optionalExtensionMarker -> Comma . Ellipsis [ RightBrace ]
## Transitions:
-- On Ellipsis shift to state 289
## Reductions:

State 289:
## Known stack suffix:
## Comma Ellipsis
## LR(1) items:
optionalExtensionMarker -> Comma Ellipsis . [ RightBrace ]
## Transitions:
## Reductions:
-- On RightBrace reduce production optionalExtensionMarker -> Comma Ellipsis

State 290:
## Known stack suffix:
## rootAlternativeTypeList Comma extensionAndException extensionAdditionAlternatives optionalExtensionMarker
## LR(1) items:
alternativeTypeLists -> rootAlternativeTypeList Comma extensionAndException extensionAdditionAlternatives optionalExtensionMarker . [ RightBrace ]
## Transitions:
## Reductions:
-- On RightBrace reduce production alternativeTypeLists -> rootAlternativeTypeList Comma extensionAndException extensionAdditionAlternatives optionalExtensionMarker

State 291:
## Known stack suffix:
## CHOICE LeftBrace alternativeTypeLists
## LR(1) items:
choiceType -> CHOICE LeftBrace alternativeTypeLists . RightBrace [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
-- On RightBrace shift to state 292
## Reductions:

State 292:
## Known stack suffix:
## CHOICE LeftBrace alternativeTypeLists RightBrace
## LR(1) items:
choiceType -> CHOICE LeftBrace alternativeTypeLists RightBrace . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
## Reductions:
-- On Upper reduce production choiceType -> CHOICE LeftBrace alternativeTypeLists RightBrace
-- On UNIQUE reduce production choiceType -> CHOICE LeftBrace alternativeTypeLists RightBrace
-- On UNION reduce production choiceType -> CHOICE LeftBrace alternativeTypeLists RightBrace
-- On RightParen reduce production choiceType -> CHOICE LeftBrace alternativeTypeLists RightBrace
-- On RightDoubleBracket reduce production choiceType -> CHOICE LeftBrace alternativeTypeLists RightBrace
-- On RightBrace reduce production choiceType -> CHOICE LeftBrace alternativeTypeLists RightBrace
-- On OPTIONAL reduce production choiceType -> CHOICE LeftBrace alternativeTypeLists RightBrace
-- On Middle reduce production choiceType -> CHOICE LeftBrace alternativeTypeLists RightBrace
-- On Lower reduce production choiceType -> CHOICE LeftBrace alternativeTypeLists RightBrace
-- On LeftParen reduce production choiceType -> CHOICE LeftBrace alternativeTypeLists RightBrace
-- On INTERSECTION reduce production choiceType -> CHOICE LeftBrace alternativeTypeLists RightBrace
-- On EXCEPT reduce production choiceType -> CHOICE LeftBrace alternativeTypeLists RightBrace
-- On END reduce production choiceType -> CHOICE LeftBrace alternativeTypeLists RightBrace
-- On ENCODED reduce production choiceType -> CHOICE LeftBrace alternativeTypeLists RightBrace
-- On DEFAULT reduce production choiceType -> CHOICE LeftBrace alternativeTypeLists RightBrace
-- On Comma reduce production choiceType -> CHOICE LeftBrace alternativeTypeLists RightBrace
-- On Colon reduce production choiceType -> CHOICE LeftBrace alternativeTypeLists RightBrace
-- On Circumflex reduce production choiceType -> CHOICE LeftBrace alternativeTypeLists RightBrace
-- On Bang reduce production choiceType -> CHOICE LeftBrace alternativeTypeLists RightBrace
-- On Assignment reduce production choiceType -> CHOICE LeftBrace alternativeTypeLists RightBrace

State 293:
## Known stack suffix:
## alternativeTypeList
## LR(1) items:
alternativeTypeList -> alternativeTypeList . Comma namedType [ RightBrace Comma ]
rootAlternativeTypeList -> alternativeTypeList . [ RightBrace Comma ]
## Transitions:
-- On Comma shift to state 279
## Reductions:
-- On RightBrace reduce production rootAlternativeTypeList -> alternativeTypeList

State 294:
## Known stack suffix:
## type_x
## LR(1) items:
constrainedType -> type_x . constraint_x [ LeftParen Colon ]
exceptionIdentification -> type_x . Colon value [ RightParen RightBrace Comma ]
## Transitions:
-- On LeftParen shift to state 81
-- On Colon shift to state 295
-- On constraint_x shift to state 206
## Reductions:

State 295:
## Known stack suffix:
## type_x Colon
## LR(1) items:
exceptionIdentification -> type_x Colon . value [ RightParen RightBrace Comma ]
## Transitions:
-- On VisibleString shift to state 66
-- On VideotexString shift to state 67
-- On Upper shift to state 108
-- On UniversalString shift to state 72
-- On UTF8String shift to state 73
-- On UTCTime shift to state 74
-- On TeletexString shift to state 75
-- On TYPE_IDENTIFIER shift to state 76
-- On TRUE shift to state 77
-- On T61String shift to state 78
-- On SET shift to state 79
-- On SEQUENCE shift to state 111
-- On RealNumber shift to state 296
-- On RELATIVE_OID shift to state 116
-- On REAL shift to state 117
-- On PrintableString shift to state 118
-- On PLUS_INFINITY shift to state 297
-- On ObjectDescriptor shift to state 119
-- On OCTET shift to state 120
-- On OBJECT shift to state 122
-- On NumericString shift to state 124
-- On Number shift to state 145
-- On NULL shift to state 298
-- On MINUS_INFINITY shift to state 299
-- On Lower shift to state 300
-- On LeftBracket shift to state 129
-- On LeftBrace shift to state 302
-- On ISO646String shift to state 140
-- On INTEGER shift to state 141
-- On INSTANCE shift to state 157
-- On IA5String shift to state 166
-- On Hyphen shift to state 306
-- On Hstring shift to state 308
-- On GraphicString shift to state 167
-- On GeneralizedTime shift to state 168
-- On GeneralString shift to state 169
-- On FALSE shift to state 309
-- On EXTERNAL shift to state 170
-- On ENUMERATED shift to state 171
-- On EMBEDDED shift to state 179
-- On Cstring shift to state 310
-- On CONTAINING shift to state 311
-- On CHOICE shift to state 181
-- On CHARACTER shift to state 184
-- On Bstring shift to state 312
-- On BOOLEAN shift to state 186
-- On BMPString shift to state 187
-- On BIT shift to state 188
-- On ABSTRACT_SYNTAX shift to state 162
-- On valueSetFromObjects shift to state 202
-- On valueFromObject shift to state 313
-- On value shift to state 424
-- On usefulType shift to state 203
-- On usefulObjectClassReference shift to state 163
-- On unrestrictedCharacterStringValue shift to state 315
-- On unrestrictedCharacterStringType shift to state 204
-- On type_x shift to state 316
-- On typeWithConstraint shift to state 207
-- On typeFromObject shift to state 208
-- On tuple shift to state 319
-- On taggedType shift to state 209
-- On tag shift to state 210
-- On specialRealValue shift to state 320
-- On simpleDefinedValue shift to state 64
-- On simpleDefinedType shift to state 213
-- On signedNumber shift to state 321
-- On setValue shift to state 322
-- On setType shift to state 215
-- On setOfValue shift to state 323
-- On setOfType shift to state 216
-- On sequenceValue shift to state 324
-- On sequenceType shift to state 217
-- On sequenceOfValue shift to state 325
-- On sequenceOfType shift to state 218
-- On selectionType shift to state 219
-- On restrictedCharacterStringValue shift to state 326
-- On restrictedCharacterStringType shift to state 220
-- On relativeOIDValue shift to state 327
-- On relativeOIDType shift to state 221
-- On referencedValue shift to state 328
-- On referencedType shift to state 222
-- On referencedObjects shift to state 329
-- On realValue shift to state 332
-- On realType shift to state 232
-- On quadruple shift to state 333
-- On parameterizedValueSetType shift to state 233
-- On parameterizedValue shift to state 135
-- On parameterizedType shift to state 234
-- On parameterizedObjectSet shift to state 235
-- On parameterizedObject shift to state 236
-- On openTypeFieldVal shift to state 334
-- On octetStringValue shift to state 335
-- On octetStringType shift to state 237
-- On objectIdentifierValue shift to state 336
-- On objectIdentifierType shift to state 238
-- On objectClassFieldValue shift to state 337
-- On objectClassFieldType shift to state 239
-- On numericRealValue shift to state 338
-- On nullValue shift to state 339
-- On nullType shift to state 240
-- On integerValue shift to state 340
-- On integerType shift to state 241
-- On instanceOfType shift to state 242
-- On fixedTypeFieldVal shift to state 341
-- On externalValueReference shift to state 136
-- On externalValue shift to state 342
-- On externalTypeReference shift to state 243
-- On externalType shift to state 244
-- On externalObjectSetReference shift to state 245
-- On externalObjectReference shift to state 246
-- On externalObjectClassReference shift to state 164
-- On enumeratedValue shift to state 343
-- On enumeratedType shift to state 247
-- On embeddedPDVValue shift to state 344
-- On embeddedPDVType shift to state 248
-- On definedValue shift to state 345
-- On definedType shift to state 249
-- On definedObjectSet shift to state 250
-- On definedObjectClass shift to state 252
-- On definedObject shift to state 255
-- On constrainedType shift to state 257
-- On choiceValue shift to state 346
-- On choiceType shift to state 258
-- On characterStringValue shift to state 347
-- On characterStringType shift to state 259
-- On characterStringList shift to state 348
-- On builtinValue shift to state 349
-- On builtinType shift to state 260
-- On booleanValue shift to state 350
-- On booleanType shift to state 261
-- On bitStringValue shift to state 351
-- On bitStringType shift to state 262
## Reductions:

State 296:
## Known stack suffix:
## RealNumber
## LR(1) items:
numericRealValue -> RealNumber . [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
## Transitions:
## Reductions:
-- On Upper reduce production numericRealValue -> RealNumber
-- On UNION reduce production numericRealValue -> RealNumber
-- On RightParen reduce production numericRealValue -> RealNumber
-- On RightDoubleBracket reduce production numericRealValue -> RealNumber
-- On RightBrace reduce production numericRealValue -> RealNumber
-- On Middle reduce production numericRealValue -> RealNumber
-- On Lower reduce production numericRealValue -> RealNumber
-- On LessThan reduce production numericRealValue -> RealNumber
-- On INTERSECTION reduce production numericRealValue -> RealNumber
-- On EXCEPT reduce production numericRealValue -> RealNumber
-- On END reduce production numericRealValue -> RealNumber
-- On DoubleDot reduce production numericRealValue -> RealNumber
-- On Comma reduce production numericRealValue -> RealNumber
-- On Circumflex reduce production numericRealValue -> RealNumber
-- On Bang reduce production numericRealValue -> RealNumber

State 297:
## Known stack suffix:
## PLUS_INFINITY
## LR(1) items:
specialRealValue -> PLUS_INFINITY . [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
## Transitions:
## Reductions:
-- On Upper reduce production specialRealValue -> PLUS_INFINITY
-- On UNION reduce production specialRealValue -> PLUS_INFINITY
-- On RightParen reduce production specialRealValue -> PLUS_INFINITY
-- On RightDoubleBracket reduce production specialRealValue -> PLUS_INFINITY
-- On RightBrace reduce production specialRealValue -> PLUS_INFINITY
-- On Middle reduce production specialRealValue -> PLUS_INFINITY
-- On Lower reduce production specialRealValue -> PLUS_INFINITY
-- On LessThan reduce production specialRealValue -> PLUS_INFINITY
-- On INTERSECTION reduce production specialRealValue -> PLUS_INFINITY
-- On EXCEPT reduce production specialRealValue -> PLUS_INFINITY
-- On END reduce production specialRealValue -> PLUS_INFINITY
-- On DoubleDot reduce production specialRealValue -> PLUS_INFINITY
-- On Comma reduce production specialRealValue -> PLUS_INFINITY
-- On Circumflex reduce production specialRealValue -> PLUS_INFINITY
-- On Bang reduce production specialRealValue -> PLUS_INFINITY

State 298:
## Known stack suffix:
## NULL
## LR(1) items:
nullType -> NULL . [ UNION RightParen RightBrace Middle LeftParen INTERSECTION EXCEPT ENCODED Comma Colon Circumflex Bang ]
nullValue -> NULL . [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
## Transitions:
## Reductions:
-- On Upper reduce production nullValue -> NULL
-- On UNION reduce production nullType -> NULL
-- On RightParen reduce production nullType -> NULL
-- On RightDoubleBracket reduce production nullValue -> NULL
-- On RightBrace reduce production nullType -> NULL
-- On Middle reduce production nullType -> NULL
-- On Lower reduce production nullValue -> NULL
-- On LessThan reduce production nullValue -> NULL
-- On LeftParen reduce production nullType -> NULL
-- On INTERSECTION reduce production nullType -> NULL
-- On EXCEPT reduce production nullType -> NULL
-- On END reduce production nullValue -> NULL
-- On ENCODED reduce production nullType -> NULL
-- On DoubleDot reduce production nullValue -> NULL
-- On Comma reduce production nullType -> NULL
-- On Colon reduce production nullType -> NULL
-- On Circumflex reduce production nullType -> NULL
-- On Bang reduce production nullType -> NULL

State 299:
## Known stack suffix:
## MINUS_INFINITY
## LR(1) items:
specialRealValue -> MINUS_INFINITY . [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
## Transitions:
## Reductions:
-- On Upper reduce production specialRealValue -> MINUS_INFINITY
-- On UNION reduce production specialRealValue -> MINUS_INFINITY
-- On RightParen reduce production specialRealValue -> MINUS_INFINITY
-- On RightDoubleBracket reduce production specialRealValue -> MINUS_INFINITY
-- On RightBrace reduce production specialRealValue -> MINUS_INFINITY
-- On Middle reduce production specialRealValue -> MINUS_INFINITY
-- On Lower reduce production specialRealValue -> MINUS_INFINITY
-- On LessThan reduce production specialRealValue -> MINUS_INFINITY
-- On INTERSECTION reduce production specialRealValue -> MINUS_INFINITY
-- On EXCEPT reduce production specialRealValue -> MINUS_INFINITY
-- On END reduce production specialRealValue -> MINUS_INFINITY
-- On DoubleDot reduce production specialRealValue -> MINUS_INFINITY
-- On Comma reduce production specialRealValue -> MINUS_INFINITY
-- On Circumflex reduce production specialRealValue -> MINUS_INFINITY
-- On Bang reduce production specialRealValue -> MINUS_INFINITY

State 300:
## Known stack suffix:
## Lower
## LR(1) items:
choiceValue -> Lower . Colon value [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
definedObject -> Lower . [ UNION RightParen RightBrace Middle LeftBrace INTERSECTION EXCEPT Dot Comma Circumflex Bang ]
definedValue -> Lower . [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
enumeratedValue -> Lower . [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
integerValue -> Lower . [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
selectionType -> Lower . LessThan type_x [ UNION RightParen RightBrace Middle LeftParen INTERSECTION EXCEPT ENCODED Comma Colon Circumflex Bang ]
simpleDefinedValue -> Lower . [ LeftBrace ]
## Transitions:
-- On LessThan shift to state 128
-- On Colon shift to state 301
## Reductions:
-- On Upper reduce production definedValue -> Lower
-- On UNION reduce production definedValue -> Lower
-- On RightParen reduce production definedValue -> Lower
-- On RightDoubleBracket reduce production definedValue -> Lower
-- On RightBrace reduce production definedValue -> Lower
-- On Middle reduce production definedValue -> Lower
-- On Lower reduce production definedValue -> Lower
-- On LeftBrace reduce production definedObject -> Lower
-- On INTERSECTION reduce production definedValue -> Lower
-- On EXCEPT reduce production definedValue -> Lower
-- On END reduce production definedValue -> Lower
-- On DoubleDot reduce production definedValue -> Lower
-- On Dot reduce production definedObject -> Lower
-- On Comma reduce production definedValue -> Lower
-- On Circumflex reduce production definedValue -> Lower
-- On Bang reduce production definedValue -> Lower

State 301:
## Known stack suffix:
## Lower Colon
## LR(1) items:
choiceValue -> Lower Colon . value [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
## Transitions:
-- On VisibleString shift to state 66
-- On VideotexString shift to state 67
-- On Upper shift to state 108
-- On UniversalString shift to state 72
-- On UTF8String shift to state 73
-- On UTCTime shift to state 74
-- On TeletexString shift to state 75
-- On TYPE_IDENTIFIER shift to state 76
-- On TRUE shift to state 77
-- On T61String shift to state 78
-- On SET shift to state 79
-- On SEQUENCE shift to state 111
-- On RealNumber shift to state 296
-- On RELATIVE_OID shift to state 116
-- On REAL shift to state 117
-- On PrintableString shift to state 118
-- On PLUS_INFINITY shift to state 297
-- On ObjectDescriptor shift to state 119
-- On OCTET shift to state 120
-- On OBJECT shift to state 122
-- On NumericString shift to state 124
-- On Number shift to state 145
-- On NULL shift to state 298
-- On MINUS_INFINITY shift to state 299
-- On Lower shift to state 300
-- On LeftBracket shift to state 129
-- On LeftBrace shift to state 302
-- On ISO646String shift to state 140
-- On INTEGER shift to state 141
-- On INSTANCE shift to state 157
-- On IA5String shift to state 166
-- On Hyphen shift to state 306
-- On Hstring shift to state 308
-- On GraphicString shift to state 167
-- On GeneralizedTime shift to state 168
-- On GeneralString shift to state 169
-- On FALSE shift to state 309
-- On EXTERNAL shift to state 170
-- On ENUMERATED shift to state 171
-- On EMBEDDED shift to state 179
-- On Cstring shift to state 310
-- On CONTAINING shift to state 311
-- On CHOICE shift to state 181
-- On CHARACTER shift to state 184
-- On Bstring shift to state 312
-- On BOOLEAN shift to state 186
-- On BMPString shift to state 187
-- On BIT shift to state 188
-- On ABSTRACT_SYNTAX shift to state 162
-- On valueSetFromObjects shift to state 202
-- On valueFromObject shift to state 313
-- On value shift to state 423
-- On usefulType shift to state 203
-- On usefulObjectClassReference shift to state 163
-- On unrestrictedCharacterStringValue shift to state 315
-- On unrestrictedCharacterStringType shift to state 204
-- On type_x shift to state 316
-- On typeWithConstraint shift to state 207
-- On typeFromObject shift to state 208
-- On tuple shift to state 319
-- On taggedType shift to state 209
-- On tag shift to state 210
-- On specialRealValue shift to state 320
-- On simpleDefinedValue shift to state 64
-- On simpleDefinedType shift to state 213
-- On signedNumber shift to state 321
-- On setValue shift to state 322
-- On setType shift to state 215
-- On setOfValue shift to state 323
-- On setOfType shift to state 216
-- On sequenceValue shift to state 324
-- On sequenceType shift to state 217
-- On sequenceOfValue shift to state 325
-- On sequenceOfType shift to state 218
-- On selectionType shift to state 219
-- On restrictedCharacterStringValue shift to state 326
-- On restrictedCharacterStringType shift to state 220
-- On relativeOIDValue shift to state 327
-- On relativeOIDType shift to state 221
-- On referencedValue shift to state 328
-- On referencedType shift to state 222
-- On referencedObjects shift to state 329
-- On realValue shift to state 332
-- On realType shift to state 232
-- On quadruple shift to state 333
-- On parameterizedValueSetType shift to state 233
-- On parameterizedValue shift to state 135
-- On parameterizedType shift to state 234
-- On parameterizedObjectSet shift to state 235
-- On parameterizedObject shift to state 236
-- On openTypeFieldVal shift to state 334
-- On octetStringValue shift to state 335
-- On octetStringType shift to state 237
-- On objectIdentifierValue shift to state 336
-- On objectIdentifierType shift to state 238
-- On objectClassFieldValue shift to state 337
-- On objectClassFieldType shift to state 239
-- On numericRealValue shift to state 338
-- On nullValue shift to state 339
-- On nullType shift to state 240
-- On integerValue shift to state 340
-- On integerType shift to state 241
-- On instanceOfType shift to state 242
-- On fixedTypeFieldVal shift to state 341
-- On externalValueReference shift to state 136
-- On externalValue shift to state 342
-- On externalTypeReference shift to state 243
-- On externalType shift to state 244
-- On externalObjectSetReference shift to state 245
-- On externalObjectReference shift to state 246
-- On externalObjectClassReference shift to state 164
-- On enumeratedValue shift to state 343
-- On enumeratedType shift to state 247
-- On embeddedPDVValue shift to state 344
-- On embeddedPDVType shift to state 248
-- On definedValue shift to state 345
-- On definedType shift to state 249
-- On definedObjectSet shift to state 250
-- On definedObjectClass shift to state 252
-- On definedObject shift to state 255
-- On constrainedType shift to state 257
-- On choiceValue shift to state 346
-- On choiceType shift to state 258
-- On characterStringValue shift to state 347
-- On characterStringType shift to state 259
-- On characterStringList shift to state 348
-- On builtinValue shift to state 349
-- On builtinType shift to state 260
-- On booleanValue shift to state 350
-- On booleanType shift to state 261
-- On bitStringValue shift to state 351
-- On bitStringType shift to state 262
## Reductions:

State 302:
## Known stack suffix:
## LeftBrace
## LR(1) items:
bitStringValue -> LeftBrace . identifierList RightBrace [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
bitStringValue -> LeftBrace . RightBrace [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
characterStringList -> LeftBrace . charSyms RightBrace [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
objectIdentifierValue -> LeftBrace . objIdComponentsList RightBrace [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
objectIdentifierValue -> LeftBrace . definedValue objIdComponentsList RightBrace [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
quadruple -> LeftBrace . group Comma plane Comma row Comma cell RightBrace [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
relativeOIDValue -> LeftBrace . relativeOIDComponentsList RightBrace [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
sequenceOfValue -> LeftBrace . valueList RightBrace [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
sequenceOfValue -> LeftBrace . namedValueList RightBrace [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
sequenceOfValue -> LeftBrace . RightBrace [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
sequenceValue -> LeftBrace . componentValueList RightBrace [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
sequenceValue -> LeftBrace . RightBrace [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
setOfValue -> LeftBrace . valueList RightBrace [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
setOfValue -> LeftBrace . namedValueList RightBrace [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
setOfValue -> LeftBrace . RightBrace [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
setValue -> LeftBrace . componentValueList RightBrace [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
setValue -> LeftBrace . RightBrace [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
tuple -> LeftBrace . tableColumn Comma tableRow RightBrace [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
## Transitions:
-- On VisibleString shift to state 66
-- On VideotexString shift to state 67
-- On Upper shift to state 108
-- On UniversalString shift to state 72
-- On UTF8String shift to state 73
-- On UTCTime shift to state 74
-- On TeletexString shift to state 75
-- On TYPE_IDENTIFIER shift to state 76
-- On TRUE shift to state 77
-- On T61String shift to state 78
-- On SET shift to state 79
-- On SEQUENCE shift to state 111
-- On RightBrace shift to state 303
-- On RealNumber shift to state 296
-- On RELATIVE_OID shift to state 116
-- On REAL shift to state 117
-- On PrintableString shift to state 118
-- On PLUS_INFINITY shift to state 297
-- On ObjectDescriptor shift to state 119
-- On OCTET shift to state 120
-- On OBJECT shift to state 122
-- On NumericString shift to state 124
-- On Number shift to state 304
-- On NULL shift to state 298
-- On MINUS_INFINITY shift to state 299
-- On Lower shift to state 305
-- On LeftBracket shift to state 129
-- On LeftBrace shift to state 302
-- On ISO646String shift to state 140
-- On INTEGER shift to state 141
-- On INSTANCE shift to state 157
-- On IA5String shift to state 166
-- On Hyphen shift to state 306
-- On Hstring shift to state 308
-- On GraphicString shift to state 167
-- On GeneralizedTime shift to state 168
-- On GeneralString shift to state 169
-- On FALSE shift to state 309
-- On EXTERNAL shift to state 170
-- On ENUMERATED shift to state 171
-- On EMBEDDED shift to state 179
-- On Cstring shift to state 353
-- On CONTAINING shift to state 311
-- On CHOICE shift to state 181
-- On CHARACTER shift to state 184
-- On Bstring shift to state 312
-- On BOOLEAN shift to state 186
-- On BMPString shift to state 187
-- On BIT shift to state 188
-- On ABSTRACT_SYNTAX shift to state 162
-- On valueSetFromObjects shift to state 202
-- On valueList shift to state 354
-- On valueFromObject shift to state 313
-- On value shift to state 358
-- On usefulType shift to state 203
-- On usefulObjectClassReference shift to state 163
-- On unrestrictedCharacterStringValue shift to state 315
-- On unrestrictedCharacterStringType shift to state 204
-- On type_x shift to state 316
-- On typeWithConstraint shift to state 207
-- On typeFromObject shift to state 208
-- On tuple shift to state 359
-- On taggedType shift to state 209
-- On tag shift to state 210
-- On tableColumn shift to state 360
-- On specialRealValue shift to state 320
-- On simpleDefinedValue shift to state 64
-- On simpleDefinedType shift to state 213
-- On signedNumber shift to state 321
-- On setValue shift to state 322
-- On setType shift to state 215
-- On setOfValue shift to state 323
-- On setOfType shift to state 216
-- On sequenceValue shift to state 324
-- On sequenceType shift to state 217
-- On sequenceOfValue shift to state 325
-- On sequenceOfType shift to state 218
-- On selectionType shift to state 219
-- On restrictedCharacterStringValue shift to state 326
-- On restrictedCharacterStringType shift to state 220
-- On relativeOIDValue shift to state 327
-- On relativeOIDType shift to state 221
-- On relativeOIDComponentsList shift to state 365
-- On relativeOIDComponents shift to state 367
-- On referencedValue shift to state 328
-- On referencedType shift to state 222
-- On referencedObjects shift to state 329
-- On realValue shift to state 332
-- On realType shift to state 232
-- On quadruple shift to state 373
-- On parameterizedValueSetType shift to state 233
-- On parameterizedValue shift to state 135
-- On parameterizedType shift to state 234
-- On parameterizedObjectSet shift to state 235
-- On parameterizedObject shift to state 236
-- On openTypeFieldVal shift to state 334
-- On octetStringValue shift to state 335
-- On octetStringType shift to state 237
-- On objectIdentifierValue shift to state 336
-- On objectIdentifierType shift to state 238
-- On objectClassFieldValue shift to state 337
-- On objectClassFieldType shift to state 239
-- On objIdComponentsList shift to state 374
-- On objIdComponents shift to state 376
-- On numericRealValue shift to state 338
-- On numberForm shift to state 382
-- On nullValue shift to state 339
-- On nullType shift to state 240
-- On namedValueList shift to state 383
-- On namedValue shift to state 388
-- On nameForm shift to state 379
-- On nameAndNumberForm shift to state 389
-- On integerValue shift to state 340
-- On integerType shift to state 241
-- On instanceOfType shift to state 242
-- On identifierList shift to state 390
-- On group shift to state 394
-- On fixedTypeFieldVal shift to state 341
-- On externalValueReference shift to state 136
-- On externalValue shift to state 342
-- On externalTypeReference shift to state 243
-- On externalType shift to state 244
-- On externalObjectSetReference shift to state 245
-- On externalObjectReference shift to state 246
-- On externalObjectClassReference shift to state 164
-- On enumeratedValue shift to state 343
-- On enumeratedType shift to state 247
-- On embeddedPDVValue shift to state 344
-- On embeddedPDVType shift to state 248
-- On definedValue shift to state 405
-- On definedType shift to state 249
-- On definedObjectSet shift to state 250
-- On definedObjectClass shift to state 252
-- On definedObject shift to state 255
-- On constrainedType shift to state 257
-- On componentValueList shift to state 408
-- On choiceValue shift to state 346
-- On choiceType shift to state 258
-- On charsDefn shift to state 412
-- On characterStringValue shift to state 347
-- On characterStringType shift to state 259
-- On characterStringList shift to state 348
-- On charSyms shift to state 413
-- On builtinValue shift to state 349
-- On builtinType shift to state 260
-- On booleanValue shift to state 350
-- On booleanType shift to state 261
-- On bitStringValue shift to state 351
-- On bitStringType shift to state 262
## Reductions:

State 303:
## Known stack suffix:
## LeftBrace RightBrace
## LR(1) items:
bitStringValue -> LeftBrace RightBrace . [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
sequenceOfValue -> LeftBrace RightBrace . [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
sequenceValue -> LeftBrace RightBrace . [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
setOfValue -> LeftBrace RightBrace . [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
setValue -> LeftBrace RightBrace . [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
## Transitions:
## Reductions:
-- On Upper reduce production bitStringValue -> LeftBrace RightBrace
-- On UNION reduce production bitStringValue -> LeftBrace RightBrace
-- On RightParen reduce production bitStringValue -> LeftBrace RightBrace
-- On RightDoubleBracket reduce production bitStringValue -> LeftBrace RightBrace
-- On RightBrace reduce production bitStringValue -> LeftBrace RightBrace
-- On Middle reduce production bitStringValue -> LeftBrace RightBrace
-- On Lower reduce production bitStringValue -> LeftBrace RightBrace
-- On LessThan reduce production bitStringValue -> LeftBrace RightBrace
-- On INTERSECTION reduce production bitStringValue -> LeftBrace RightBrace
-- On EXCEPT reduce production bitStringValue -> LeftBrace RightBrace
-- On END reduce production bitStringValue -> LeftBrace RightBrace
-- On DoubleDot reduce production bitStringValue -> LeftBrace RightBrace
-- On Comma reduce production bitStringValue -> LeftBrace RightBrace
-- On Circumflex reduce production bitStringValue -> LeftBrace RightBrace
-- On Bang reduce production bitStringValue -> LeftBrace RightBrace

State 304:
## Known stack suffix:
## Number
## LR(1) items:
group -> Number . [ Comma ]
numberForm -> Number . [ Upper RightBrace Number Lower ]
signedNumber -> Number . [ UNION RightBrace Middle LessThan INTERSECTION EXCEPT DoubleDot Comma Circumflex ]
tableColumn -> Number . [ Comma ]
## Transitions:
## Reductions:
-- On Upper reduce production numberForm -> Number
-- On UNION reduce production signedNumber -> Number
-- On RightBrace reduce production signedNumber -> Number
-- On Number reduce production numberForm -> Number
-- On Middle reduce production signedNumber -> Number
-- On Lower reduce production numberForm -> Number
-- On LessThan reduce production signedNumber -> Number
-- On INTERSECTION reduce production signedNumber -> Number
-- On EXCEPT reduce production signedNumber -> Number
-- On DoubleDot reduce production signedNumber -> Number
-- On Comma reduce production signedNumber -> Number
-- On Circumflex reduce production signedNumber -> Number

State 305:
## Known stack suffix:
## Lower
## LR(1) items:
choiceValue -> Lower . Colon value [ UNION RightBrace Middle LessThan INTERSECTION EXCEPT DoubleDot Comma Circumflex ]
definedObject -> Lower . [ UNION RightBrace Middle LeftBrace INTERSECTION EXCEPT Dot Comma Circumflex ]
definedValue -> Lower . [ Upper UNION RightBrace Number Middle Lower LessThan INTERSECTION EXCEPT DoubleDot Comma Circumflex ]
enumeratedValue -> Lower . [ UNION RightBrace Middle LessThan INTERSECTION EXCEPT DoubleDot Comma Circumflex ]
identifierList -> Lower . [ RightBrace Comma ]
integerValue -> Lower . [ UNION RightBrace Middle LessThan INTERSECTION EXCEPT DoubleDot Comma Circumflex ]
nameAndNumberForm -> Lower . LeftParen numberForm RightParen [ Upper RightBrace Number Lower ]
nameForm -> Lower . [ Upper RightBrace Number Lower ]
namedValue -> Lower . value [ RightBrace Comma ]
selectionType -> Lower . LessThan type_x [ UNION RightBrace Middle LeftParen INTERSECTION EXCEPT Comma Colon Circumflex ]
simpleDefinedValue -> Lower . [ LeftBrace ]
## Transitions:
-- On VisibleString shift to state 66
-- On VideotexString shift to state 67
-- On Upper shift to state 108
-- On UniversalString shift to state 72
-- On UTF8String shift to state 73
-- On UTCTime shift to state 74
-- On TeletexString shift to state 75
-- On TYPE_IDENTIFIER shift to state 76
-- On TRUE shift to state 77
-- On T61String shift to state 78
-- On SET shift to state 79
-- On SEQUENCE shift to state 111
-- On RealNumber shift to state 296
-- On RELATIVE_OID shift to state 116
-- On REAL shift to state 117
-- On PrintableString shift to state 118
-- On PLUS_INFINITY shift to state 297
-- On ObjectDescriptor shift to state 119
-- On OCTET shift to state 120
-- On OBJECT shift to state 122
-- On NumericString shift to state 124
-- On Number shift to state 145
-- On NULL shift to state 298
-- On MINUS_INFINITY shift to state 299
-- On Lower shift to state 300
-- On LessThan shift to state 128
-- On LeftParen shift to state 63
-- On LeftBracket shift to state 129
-- On LeftBrace shift to state 302
-- On ISO646String shift to state 140
-- On INTEGER shift to state 141
-- On INSTANCE shift to state 157
-- On IA5String shift to state 166
-- On Hyphen shift to state 306
-- On Hstring shift to state 308
-- On GraphicString shift to state 167
-- On GeneralizedTime shift to state 168
-- On GeneralString shift to state 169
-- On FALSE shift to state 309
-- On EXTERNAL shift to state 170
-- On ENUMERATED shift to state 171
-- On EMBEDDED shift to state 179
-- On Cstring shift to state 310
-- On Colon shift to state 301
-- On CONTAINING shift to state 311
-- On CHOICE shift to state 181
-- On CHARACTER shift to state 184
-- On Bstring shift to state 312
-- On BOOLEAN shift to state 186
-- On BMPString shift to state 187
-- On BIT shift to state 188
-- On ABSTRACT_SYNTAX shift to state 162
-- On valueSetFromObjects shift to state 202
-- On valueFromObject shift to state 313
-- On value shift to state 352
-- On usefulType shift to state 203
-- On usefulObjectClassReference shift to state 163
-- On unrestrictedCharacterStringValue shift to state 315
-- On unrestrictedCharacterStringType shift to state 204
-- On type_x shift to state 316
-- On typeWithConstraint shift to state 207
-- On typeFromObject shift to state 208
-- On tuple shift to state 319
-- On taggedType shift to state 209
-- On tag shift to state 210
-- On specialRealValue shift to state 320
-- On simpleDefinedValue shift to state 64
-- On simpleDefinedType shift to state 213
-- On signedNumber shift to state 321
-- On setValue shift to state 322
-- On setType shift to state 215
-- On setOfValue shift to state 323
-- On setOfType shift to state 216
-- On sequenceValue shift to state 324
-- On sequenceType shift to state 217
-- On sequenceOfValue shift to state 325
-- On sequenceOfType shift to state 218
-- On selectionType shift to state 219
-- On restrictedCharacterStringValue shift to state 326
-- On restrictedCharacterStringType shift to state 220
-- On relativeOIDValue shift to state 327
-- On relativeOIDType shift to state 221
-- On referencedValue shift to state 328
-- On referencedType shift to state 222
-- On referencedObjects shift to state 329
-- On realValue shift to state 332
-- On realType shift to state 232
-- On quadruple shift to state 333
-- On parameterizedValueSetType shift to state 233
-- On parameterizedValue shift to state 135
-- On parameterizedType shift to state 234
-- On parameterizedObjectSet shift to state 235
-- On parameterizedObject shift to state 236
-- On openTypeFieldVal shift to state 334
-- On octetStringValue shift to state 335
-- On octetStringType shift to state 237
-- On objectIdentifierValue shift to state 336
-- On objectIdentifierType shift to state 238
-- On objectClassFieldValue shift to state 337
-- On objectClassFieldType shift to state 239
-- On numericRealValue shift to state 338
-- On nullValue shift to state 339
-- On nullType shift to state 240
-- On integerValue shift to state 340
-- On integerType shift to state 241
-- On instanceOfType shift to state 242
-- On fixedTypeFieldVal shift to state 341
-- On externalValueReference shift to state 136
-- On externalValue shift to state 342
-- On externalTypeReference shift to state 243
-- On externalType shift to state 244
-- On externalObjectSetReference shift to state 245
-- On externalObjectReference shift to state 246
-- On externalObjectClassReference shift to state 164
-- On enumeratedValue shift to state 343
-- On enumeratedType shift to state 247
-- On embeddedPDVValue shift to state 344
-- On embeddedPDVType shift to state 248
-- On definedValue shift to state 345
-- On definedType shift to state 249
-- On definedObjectSet shift to state 250
-- On definedObjectClass shift to state 252
-- On definedObject shift to state 255
-- On constrainedType shift to state 257
-- On choiceValue shift to state 346
-- On choiceType shift to state 258
-- On characterStringValue shift to state 347
-- On characterStringType shift to state 259
-- On characterStringList shift to state 348
-- On builtinValue shift to state 349
-- On builtinType shift to state 260
-- On booleanValue shift to state 350
-- On booleanType shift to state 261
-- On bitStringValue shift to state 351
-- On bitStringType shift to state 262
## Reductions:
-- On UNION reduce production definedValue -> Lower
-- On RightBrace reduce production definedValue -> Lower
-- On Middle reduce production definedValue -> Lower
-- On INTERSECTION reduce production definedValue -> Lower
-- On EXCEPT reduce production definedValue -> Lower
-- On DoubleDot reduce production definedValue -> Lower
-- On Dot reduce production definedObject -> Lower
-- On Comma reduce production definedValue -> Lower
-- On Circumflex reduce production definedValue -> Lower

State 306:
## Known stack suffix:
## Hyphen
## LR(1) items:
numericRealValue -> Hyphen . RealNumber [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
signedNumber -> Hyphen . Number [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
## Transitions:
-- On RealNumber shift to state 307
-- On Number shift to state 147
## Reductions:

State 307:
## Known stack suffix:
## Hyphen RealNumber
## LR(1) items:
numericRealValue -> Hyphen RealNumber . [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
## Transitions:
## Reductions:
-- On Upper reduce production numericRealValue -> Hyphen RealNumber
-- On UNION reduce production numericRealValue -> Hyphen RealNumber
-- On RightParen reduce production numericRealValue -> Hyphen RealNumber
-- On RightDoubleBracket reduce production numericRealValue -> Hyphen RealNumber
-- On RightBrace reduce production numericRealValue -> Hyphen RealNumber
-- On Middle reduce production numericRealValue -> Hyphen RealNumber
-- On Lower reduce production numericRealValue -> Hyphen RealNumber
-- On LessThan reduce production numericRealValue -> Hyphen RealNumber
-- On INTERSECTION reduce production numericRealValue -> Hyphen RealNumber
-- On EXCEPT reduce production numericRealValue -> Hyphen RealNumber
-- On END reduce production numericRealValue -> Hyphen RealNumber
-- On DoubleDot reduce production numericRealValue -> Hyphen RealNumber
-- On Comma reduce production numericRealValue -> Hyphen RealNumber
-- On Circumflex reduce production numericRealValue -> Hyphen RealNumber
-- On Bang reduce production numericRealValue -> Hyphen RealNumber

State 308:
## Known stack suffix:
## Hstring
## LR(1) items:
bitStringValue -> Hstring . [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
octetStringValue -> Hstring . [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
## Transitions:
## Reductions:
-- On Upper reduce production bitStringValue -> Hstring
-- On UNION reduce production bitStringValue -> Hstring
-- On RightParen reduce production bitStringValue -> Hstring
-- On RightDoubleBracket reduce production bitStringValue -> Hstring
-- On RightBrace reduce production bitStringValue -> Hstring
-- On Middle reduce production bitStringValue -> Hstring
-- On Lower reduce production bitStringValue -> Hstring
-- On LessThan reduce production bitStringValue -> Hstring
-- On INTERSECTION reduce production bitStringValue -> Hstring
-- On EXCEPT reduce production bitStringValue -> Hstring
-- On END reduce production bitStringValue -> Hstring
-- On DoubleDot reduce production bitStringValue -> Hstring
-- On Comma reduce production bitStringValue -> Hstring
-- On Circumflex reduce production bitStringValue -> Hstring
-- On Bang reduce production bitStringValue -> Hstring

State 309:
## Known stack suffix:
## FALSE
## LR(1) items:
booleanValue -> FALSE . [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
## Transitions:
## Reductions:
-- On Upper reduce production booleanValue -> FALSE
-- On UNION reduce production booleanValue -> FALSE
-- On RightParen reduce production booleanValue -> FALSE
-- On RightDoubleBracket reduce production booleanValue -> FALSE
-- On RightBrace reduce production booleanValue -> FALSE
-- On Middle reduce production booleanValue -> FALSE
-- On Lower reduce production booleanValue -> FALSE
-- On LessThan reduce production booleanValue -> FALSE
-- On INTERSECTION reduce production booleanValue -> FALSE
-- On EXCEPT reduce production booleanValue -> FALSE
-- On END reduce production booleanValue -> FALSE
-- On DoubleDot reduce production booleanValue -> FALSE
-- On Comma reduce production booleanValue -> FALSE
-- On Circumflex reduce production booleanValue -> FALSE
-- On Bang reduce production booleanValue -> FALSE

State 310:
## Known stack suffix:
## Cstring
## LR(1) items:
restrictedCharacterStringValue -> Cstring . [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
## Transitions:
## Reductions:
-- On Upper reduce production restrictedCharacterStringValue -> Cstring
-- On UNION reduce production restrictedCharacterStringValue -> Cstring
-- On RightParen reduce production restrictedCharacterStringValue -> Cstring
-- On RightDoubleBracket reduce production restrictedCharacterStringValue -> Cstring
-- On RightBrace reduce production restrictedCharacterStringValue -> Cstring
-- On Middle reduce production restrictedCharacterStringValue -> Cstring
-- On Lower reduce production restrictedCharacterStringValue -> Cstring
-- On LessThan reduce production restrictedCharacterStringValue -> Cstring
-- On INTERSECTION reduce production restrictedCharacterStringValue -> Cstring
-- On EXCEPT reduce production restrictedCharacterStringValue -> Cstring
-- On END reduce production restrictedCharacterStringValue -> Cstring
-- On DoubleDot reduce production restrictedCharacterStringValue -> Cstring
-- On Comma reduce production restrictedCharacterStringValue -> Cstring
-- On Circumflex reduce production restrictedCharacterStringValue -> Cstring
-- On Bang reduce production restrictedCharacterStringValue -> Cstring

State 311:
## Known stack suffix:
## CONTAINING
## LR(1) items:
bitStringValue -> CONTAINING . value [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
octetStringValue -> CONTAINING . value [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
## Transitions:
-- On VisibleString shift to state 66
-- On VideotexString shift to state 67
-- On Upper shift to state 108
-- On UniversalString shift to state 72
-- On UTF8String shift to state 73
-- On UTCTime shift to state 74
-- On TeletexString shift to state 75
-- On TYPE_IDENTIFIER shift to state 76
-- On TRUE shift to state 77
-- On T61String shift to state 78
-- On SET shift to state 79
-- On SEQUENCE shift to state 111
-- On RealNumber shift to state 296
-- On RELATIVE_OID shift to state 116
-- On REAL shift to state 117
-- On PrintableString shift to state 118
-- On PLUS_INFINITY shift to state 297
-- On ObjectDescriptor shift to state 119
-- On OCTET shift to state 120
-- On OBJECT shift to state 122
-- On NumericString shift to state 124
-- On Number shift to state 145
-- On NULL shift to state 298
-- On MINUS_INFINITY shift to state 299
-- On Lower shift to state 300
-- On LeftBracket shift to state 129
-- On LeftBrace shift to state 302
-- On ISO646String shift to state 140
-- On INTEGER shift to state 141
-- On INSTANCE shift to state 157
-- On IA5String shift to state 166
-- On Hyphen shift to state 306
-- On Hstring shift to state 308
-- On GraphicString shift to state 167
-- On GeneralizedTime shift to state 168
-- On GeneralString shift to state 169
-- On FALSE shift to state 309
-- On EXTERNAL shift to state 170
-- On ENUMERATED shift to state 171
-- On EMBEDDED shift to state 179
-- On Cstring shift to state 310
-- On CONTAINING shift to state 311
-- On CHOICE shift to state 181
-- On CHARACTER shift to state 184
-- On Bstring shift to state 312
-- On BOOLEAN shift to state 186
-- On BMPString shift to state 187
-- On BIT shift to state 188
-- On ABSTRACT_SYNTAX shift to state 162
-- On valueSetFromObjects shift to state 202
-- On valueFromObject shift to state 313
-- On value shift to state 314
-- On usefulType shift to state 203
-- On usefulObjectClassReference shift to state 163
-- On unrestrictedCharacterStringValue shift to state 315
-- On unrestrictedCharacterStringType shift to state 204
-- On type_x shift to state 316
-- On typeWithConstraint shift to state 207
-- On typeFromObject shift to state 208
-- On tuple shift to state 319
-- On taggedType shift to state 209
-- On tag shift to state 210
-- On specialRealValue shift to state 320
-- On simpleDefinedValue shift to state 64
-- On simpleDefinedType shift to state 213
-- On signedNumber shift to state 321
-- On setValue shift to state 322
-- On setType shift to state 215
-- On setOfValue shift to state 323
-- On setOfType shift to state 216
-- On sequenceValue shift to state 324
-- On sequenceType shift to state 217
-- On sequenceOfValue shift to state 325
-- On sequenceOfType shift to state 218
-- On selectionType shift to state 219
-- On restrictedCharacterStringValue shift to state 326
-- On restrictedCharacterStringType shift to state 220
-- On relativeOIDValue shift to state 327
-- On relativeOIDType shift to state 221
-- On referencedValue shift to state 328
-- On referencedType shift to state 222
-- On referencedObjects shift to state 329
-- On realValue shift to state 332
-- On realType shift to state 232
-- On quadruple shift to state 333
-- On parameterizedValueSetType shift to state 233
-- On parameterizedValue shift to state 135
-- On parameterizedType shift to state 234
-- On parameterizedObjectSet shift to state 235
-- On parameterizedObject shift to state 236
-- On openTypeFieldVal shift to state 334
-- On octetStringValue shift to state 335
-- On octetStringType shift to state 237
-- On objectIdentifierValue shift to state 336
-- On objectIdentifierType shift to state 238
-- On objectClassFieldValue shift to state 337
-- On objectClassFieldType shift to state 239
-- On numericRealValue shift to state 338
-- On nullValue shift to state 339
-- On nullType shift to state 240
-- On integerValue shift to state 340
-- On integerType shift to state 241
-- On instanceOfType shift to state 242
-- On fixedTypeFieldVal shift to state 341
-- On externalValueReference shift to state 136
-- On externalValue shift to state 342
-- On externalTypeReference shift to state 243
-- On externalType shift to state 244
-- On externalObjectSetReference shift to state 245
-- On externalObjectReference shift to state 246
-- On externalObjectClassReference shift to state 164
-- On enumeratedValue shift to state 343
-- On enumeratedType shift to state 247
-- On embeddedPDVValue shift to state 344
-- On embeddedPDVType shift to state 248
-- On definedValue shift to state 345
-- On definedType shift to state 249
-- On definedObjectSet shift to state 250
-- On definedObjectClass shift to state 252
-- On definedObject shift to state 255
-- On constrainedType shift to state 257
-- On choiceValue shift to state 346
-- On choiceType shift to state 258
-- On characterStringValue shift to state 347
-- On characterStringType shift to state 259
-- On characterStringList shift to state 348
-- On builtinValue shift to state 349
-- On builtinType shift to state 260
-- On booleanValue shift to state 350
-- On booleanType shift to state 261
-- On bitStringValue shift to state 351
-- On bitStringType shift to state 262
## Reductions:

State 312:
## Known stack suffix:
## Bstring
## LR(1) items:
bitStringValue -> Bstring . [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
octetStringValue -> Bstring . [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
## Transitions:
## Reductions:
-- On Upper reduce production bitStringValue -> Bstring
-- On UNION reduce production bitStringValue -> Bstring
-- On RightParen reduce production bitStringValue -> Bstring
-- On RightDoubleBracket reduce production bitStringValue -> Bstring
-- On RightBrace reduce production bitStringValue -> Bstring
-- On Middle reduce production bitStringValue -> Bstring
-- On Lower reduce production bitStringValue -> Bstring
-- On LessThan reduce production bitStringValue -> Bstring
-- On INTERSECTION reduce production bitStringValue -> Bstring
-- On EXCEPT reduce production bitStringValue -> Bstring
-- On END reduce production bitStringValue -> Bstring
-- On DoubleDot reduce production bitStringValue -> Bstring
-- On Comma reduce production bitStringValue -> Bstring
-- On Circumflex reduce production bitStringValue -> Bstring
-- On Bang reduce production bitStringValue -> Bstring

State 313:
## Known stack suffix:
## valueFromObject
## LR(1) items:
referencedValue -> valueFromObject . [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
## Transitions:
## Reductions:
-- On Upper reduce production referencedValue -> valueFromObject
-- On UNION reduce production referencedValue -> valueFromObject
-- On RightParen reduce production referencedValue -> valueFromObject
-- On RightDoubleBracket reduce production referencedValue -> valueFromObject
-- On RightBrace reduce production referencedValue -> valueFromObject
-- On Middle reduce production referencedValue -> valueFromObject
-- On Lower reduce production referencedValue -> valueFromObject
-- On LessThan reduce production referencedValue -> valueFromObject
-- On INTERSECTION reduce production referencedValue -> valueFromObject
-- On EXCEPT reduce production referencedValue -> valueFromObject
-- On END reduce production referencedValue -> valueFromObject
-- On DoubleDot reduce production referencedValue -> valueFromObject
-- On Comma reduce production referencedValue -> valueFromObject
-- On Circumflex reduce production referencedValue -> valueFromObject
-- On Bang reduce production referencedValue -> valueFromObject

State 314:
## Known stack suffix:
## CONTAINING value
## LR(1) items:
bitStringValue -> CONTAINING value . [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
octetStringValue -> CONTAINING value . [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
## Transitions:
## Reductions:
-- On Upper reduce production bitStringValue -> CONTAINING value
-- On UNION reduce production bitStringValue -> CONTAINING value
-- On RightParen reduce production bitStringValue -> CONTAINING value
-- On RightDoubleBracket reduce production bitStringValue -> CONTAINING value
-- On RightBrace reduce production bitStringValue -> CONTAINING value
-- On Middle reduce production bitStringValue -> CONTAINING value
-- On Lower reduce production bitStringValue -> CONTAINING value
-- On LessThan reduce production bitStringValue -> CONTAINING value
-- On INTERSECTION reduce production bitStringValue -> CONTAINING value
-- On EXCEPT reduce production bitStringValue -> CONTAINING value
-- On END reduce production bitStringValue -> CONTAINING value
-- On DoubleDot reduce production bitStringValue -> CONTAINING value
-- On Comma reduce production bitStringValue -> CONTAINING value
-- On Circumflex reduce production bitStringValue -> CONTAINING value
-- On Bang reduce production bitStringValue -> CONTAINING value

State 315:
## Known stack suffix:
## unrestrictedCharacterStringValue
## LR(1) items:
characterStringValue -> unrestrictedCharacterStringValue . [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
## Transitions:
## Reductions:
-- On Upper reduce production characterStringValue -> unrestrictedCharacterStringValue
-- On UNION reduce production characterStringValue -> unrestrictedCharacterStringValue
-- On RightParen reduce production characterStringValue -> unrestrictedCharacterStringValue
-- On RightDoubleBracket reduce production characterStringValue -> unrestrictedCharacterStringValue
-- On RightBrace reduce production characterStringValue -> unrestrictedCharacterStringValue
-- On Middle reduce production characterStringValue -> unrestrictedCharacterStringValue
-- On Lower reduce production characterStringValue -> unrestrictedCharacterStringValue
-- On LessThan reduce production characterStringValue -> unrestrictedCharacterStringValue
-- On INTERSECTION reduce production characterStringValue -> unrestrictedCharacterStringValue
-- On EXCEPT reduce production characterStringValue -> unrestrictedCharacterStringValue
-- On END reduce production characterStringValue -> unrestrictedCharacterStringValue
-- On DoubleDot reduce production characterStringValue -> unrestrictedCharacterStringValue
-- On Comma reduce production characterStringValue -> unrestrictedCharacterStringValue
-- On Circumflex reduce production characterStringValue -> unrestrictedCharacterStringValue
-- On Bang reduce production characterStringValue -> unrestrictedCharacterStringValue

State 316:
## Known stack suffix:
## type_x
## LR(1) items:
constrainedType -> type_x . constraint_x [ LeftParen Colon ]
openTypeFieldVal -> type_x . Colon value [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
## Transitions:
-- On LeftParen shift to state 81
-- On Colon shift to state 317
-- On constraint_x shift to state 206
## Reductions:

State 317:
## Known stack suffix:
## type_x Colon
## LR(1) items:
openTypeFieldVal -> type_x Colon . value [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
## Transitions:
-- On VisibleString shift to state 66
-- On VideotexString shift to state 67
-- On Upper shift to state 108
-- On UniversalString shift to state 72
-- On UTF8String shift to state 73
-- On UTCTime shift to state 74
-- On TeletexString shift to state 75
-- On TYPE_IDENTIFIER shift to state 76
-- On TRUE shift to state 77
-- On T61String shift to state 78
-- On SET shift to state 79
-- On SEQUENCE shift to state 111
-- On RealNumber shift to state 296
-- On RELATIVE_OID shift to state 116
-- On REAL shift to state 117
-- On PrintableString shift to state 118
-- On PLUS_INFINITY shift to state 297
-- On ObjectDescriptor shift to state 119
-- On OCTET shift to state 120
-- On OBJECT shift to state 122
-- On NumericString shift to state 124
-- On Number shift to state 145
-- On NULL shift to state 298
-- On MINUS_INFINITY shift to state 299
-- On Lower shift to state 300
-- On LeftBracket shift to state 129
-- On LeftBrace shift to state 302
-- On ISO646String shift to state 140
-- On INTEGER shift to state 141
-- On INSTANCE shift to state 157
-- On IA5String shift to state 166
-- On Hyphen shift to state 306
-- On Hstring shift to state 308
-- On GraphicString shift to state 167
-- On GeneralizedTime shift to state 168
-- On GeneralString shift to state 169
-- On FALSE shift to state 309
-- On EXTERNAL shift to state 170
-- On ENUMERATED shift to state 171
-- On EMBEDDED shift to state 179
-- On Cstring shift to state 310
-- On CONTAINING shift to state 311
-- On CHOICE shift to state 181
-- On CHARACTER shift to state 184
-- On Bstring shift to state 312
-- On BOOLEAN shift to state 186
-- On BMPString shift to state 187
-- On BIT shift to state 188
-- On ABSTRACT_SYNTAX shift to state 162
-- On valueSetFromObjects shift to state 202
-- On valueFromObject shift to state 313
-- On value shift to state 318
-- On usefulType shift to state 203
-- On usefulObjectClassReference shift to state 163
-- On unrestrictedCharacterStringValue shift to state 315
-- On unrestrictedCharacterStringType shift to state 204
-- On type_x shift to state 316
-- On typeWithConstraint shift to state 207
-- On typeFromObject shift to state 208
-- On tuple shift to state 319
-- On taggedType shift to state 209
-- On tag shift to state 210
-- On specialRealValue shift to state 320
-- On simpleDefinedValue shift to state 64
-- On simpleDefinedType shift to state 213
-- On signedNumber shift to state 321
-- On setValue shift to state 322
-- On setType shift to state 215
-- On setOfValue shift to state 323
-- On setOfType shift to state 216
-- On sequenceValue shift to state 324
-- On sequenceType shift to state 217
-- On sequenceOfValue shift to state 325
-- On sequenceOfType shift to state 218
-- On selectionType shift to state 219
-- On restrictedCharacterStringValue shift to state 326
-- On restrictedCharacterStringType shift to state 220
-- On relativeOIDValue shift to state 327
-- On relativeOIDType shift to state 221
-- On referencedValue shift to state 328
-- On referencedType shift to state 222
-- On referencedObjects shift to state 329
-- On realValue shift to state 332
-- On realType shift to state 232
-- On quadruple shift to state 333
-- On parameterizedValueSetType shift to state 233
-- On parameterizedValue shift to state 135
-- On parameterizedType shift to state 234
-- On parameterizedObjectSet shift to state 235
-- On parameterizedObject shift to state 236
-- On openTypeFieldVal shift to state 334
-- On octetStringValue shift to state 335
-- On octetStringType shift to state 237
-- On objectIdentifierValue shift to state 336
-- On objectIdentifierType shift to state 238
-- On objectClassFieldValue shift to state 337
-- On objectClassFieldType shift to state 239
-- On numericRealValue shift to state 338
-- On nullValue shift to state 339
-- On nullType shift to state 240
-- On integerValue shift to state 340
-- On integerType shift to state 241
-- On instanceOfType shift to state 242
-- On fixedTypeFieldVal shift to state 341
-- On externalValueReference shift to state 136
-- On externalValue shift to state 342
-- On externalTypeReference shift to state 243
-- On externalType shift to state 244
-- On externalObjectSetReference shift to state 245
-- On externalObjectReference shift to state 246
-- On externalObjectClassReference shift to state 164
-- On enumeratedValue shift to state 343
-- On enumeratedType shift to state 247
-- On embeddedPDVValue shift to state 344
-- On embeddedPDVType shift to state 248
-- On definedValue shift to state 345
-- On definedType shift to state 249
-- On definedObjectSet shift to state 250
-- On definedObjectClass shift to state 252
-- On definedObject shift to state 255
-- On constrainedType shift to state 257
-- On choiceValue shift to state 346
-- On choiceType shift to state 258
-- On characterStringValue shift to state 347
-- On characterStringType shift to state 259
-- On characterStringList shift to state 348
-- On builtinValue shift to state 349
-- On builtinType shift to state 260
-- On booleanValue shift to state 350
-- On booleanType shift to state 261
-- On bitStringValue shift to state 351
-- On bitStringType shift to state 262
## Reductions:

State 318:
## Known stack suffix:
## type_x Colon value
## LR(1) items:
openTypeFieldVal -> type_x Colon value . [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
## Transitions:
## Reductions:
-- On Upper reduce production openTypeFieldVal -> type_x Colon value
-- On UNION reduce production openTypeFieldVal -> type_x Colon value
-- On RightParen reduce production openTypeFieldVal -> type_x Colon value
-- On RightDoubleBracket reduce production openTypeFieldVal -> type_x Colon value
-- On RightBrace reduce production openTypeFieldVal -> type_x Colon value
-- On Middle reduce production openTypeFieldVal -> type_x Colon value
-- On Lower reduce production openTypeFieldVal -> type_x Colon value
-- On LessThan reduce production openTypeFieldVal -> type_x Colon value
-- On INTERSECTION reduce production openTypeFieldVal -> type_x Colon value
-- On EXCEPT reduce production openTypeFieldVal -> type_x Colon value
-- On END reduce production openTypeFieldVal -> type_x Colon value
-- On DoubleDot reduce production openTypeFieldVal -> type_x Colon value
-- On Comma reduce production openTypeFieldVal -> type_x Colon value
-- On Circumflex reduce production openTypeFieldVal -> type_x Colon value
-- On Bang reduce production openTypeFieldVal -> type_x Colon value

State 319:
## Known stack suffix:
## tuple
## LR(1) items:
restrictedCharacterStringValue -> tuple . [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
## Transitions:
## Reductions:
-- On Upper reduce production restrictedCharacterStringValue -> tuple
-- On UNION reduce production restrictedCharacterStringValue -> tuple
-- On RightParen reduce production restrictedCharacterStringValue -> tuple
-- On RightDoubleBracket reduce production restrictedCharacterStringValue -> tuple
-- On RightBrace reduce production restrictedCharacterStringValue -> tuple
-- On Middle reduce production restrictedCharacterStringValue -> tuple
-- On Lower reduce production restrictedCharacterStringValue -> tuple
-- On LessThan reduce production restrictedCharacterStringValue -> tuple
-- On INTERSECTION reduce production restrictedCharacterStringValue -> tuple
-- On EXCEPT reduce production restrictedCharacterStringValue -> tuple
-- On END reduce production restrictedCharacterStringValue -> tuple
-- On DoubleDot reduce production restrictedCharacterStringValue -> tuple
-- On Comma reduce production restrictedCharacterStringValue -> tuple
-- On Circumflex reduce production restrictedCharacterStringValue -> tuple
-- On Bang reduce production restrictedCharacterStringValue -> tuple

State 320:
## Known stack suffix:
## specialRealValue
## LR(1) items:
realValue -> specialRealValue . [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
## Transitions:
## Reductions:
-- On Upper reduce production realValue -> specialRealValue
-- On UNION reduce production realValue -> specialRealValue
-- On RightParen reduce production realValue -> specialRealValue
-- On RightDoubleBracket reduce production realValue -> specialRealValue
-- On RightBrace reduce production realValue -> specialRealValue
-- On Middle reduce production realValue -> specialRealValue
-- On Lower reduce production realValue -> specialRealValue
-- On LessThan reduce production realValue -> specialRealValue
-- On INTERSECTION reduce production realValue -> specialRealValue
-- On EXCEPT reduce production realValue -> specialRealValue
-- On END reduce production realValue -> specialRealValue
-- On DoubleDot reduce production realValue -> specialRealValue
-- On Comma reduce production realValue -> specialRealValue
-- On Circumflex reduce production realValue -> specialRealValue
-- On Bang reduce production realValue -> specialRealValue

State 321:
## Known stack suffix:
## signedNumber
## LR(1) items:
integerValue -> signedNumber . [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
## Transitions:
## Reductions:
-- On Upper reduce production integerValue -> signedNumber
-- On UNION reduce production integerValue -> signedNumber
-- On RightParen reduce production integerValue -> signedNumber
-- On RightDoubleBracket reduce production integerValue -> signedNumber
-- On RightBrace reduce production integerValue -> signedNumber
-- On Middle reduce production integerValue -> signedNumber
-- On Lower reduce production integerValue -> signedNumber
-- On LessThan reduce production integerValue -> signedNumber
-- On INTERSECTION reduce production integerValue -> signedNumber
-- On EXCEPT reduce production integerValue -> signedNumber
-- On END reduce production integerValue -> signedNumber
-- On DoubleDot reduce production integerValue -> signedNumber
-- On Comma reduce production integerValue -> signedNumber
-- On Circumflex reduce production integerValue -> signedNumber
-- On Bang reduce production integerValue -> signedNumber

State 322:
## Known stack suffix:
## setValue
## LR(1) items:
builtinValue -> setValue . [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
## Transitions:
## Reductions:
-- On Upper reduce production builtinValue -> setValue
-- On UNION reduce production builtinValue -> setValue
-- On RightParen reduce production builtinValue -> setValue
-- On RightDoubleBracket reduce production builtinValue -> setValue
-- On RightBrace reduce production builtinValue -> setValue
-- On Middle reduce production builtinValue -> setValue
-- On Lower reduce production builtinValue -> setValue
-- On LessThan reduce production builtinValue -> setValue
-- On INTERSECTION reduce production builtinValue -> setValue
-- On EXCEPT reduce production builtinValue -> setValue
-- On END reduce production builtinValue -> setValue
-- On DoubleDot reduce production builtinValue -> setValue
-- On Comma reduce production builtinValue -> setValue
-- On Circumflex reduce production builtinValue -> setValue
-- On Bang reduce production builtinValue -> setValue

State 323:
## Known stack suffix:
## setOfValue
## LR(1) items:
builtinValue -> setOfValue . [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
## Transitions:
## Reductions:
-- On Upper reduce production builtinValue -> setOfValue
-- On UNION reduce production builtinValue -> setOfValue
-- On RightParen reduce production builtinValue -> setOfValue
-- On RightDoubleBracket reduce production builtinValue -> setOfValue
-- On RightBrace reduce production builtinValue -> setOfValue
-- On Middle reduce production builtinValue -> setOfValue
-- On Lower reduce production builtinValue -> setOfValue
-- On LessThan reduce production builtinValue -> setOfValue
-- On INTERSECTION reduce production builtinValue -> setOfValue
-- On EXCEPT reduce production builtinValue -> setOfValue
-- On END reduce production builtinValue -> setOfValue
-- On DoubleDot reduce production builtinValue -> setOfValue
-- On Comma reduce production builtinValue -> setOfValue
-- On Circumflex reduce production builtinValue -> setOfValue
-- On Bang reduce production builtinValue -> setOfValue

State 324:
## Known stack suffix:
## sequenceValue
## LR(1) items:
builtinValue -> sequenceValue . [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
embeddedPDVValue -> sequenceValue . [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
externalValue -> sequenceValue . [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
numericRealValue -> sequenceValue . [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
unrestrictedCharacterStringValue -> sequenceValue . [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
## Transitions:
## Reductions:
-- On Upper reduce production builtinValue -> sequenceValue
-- On UNION reduce production builtinValue -> sequenceValue
-- On RightParen reduce production builtinValue -> sequenceValue
-- On RightDoubleBracket reduce production builtinValue -> sequenceValue
-- On RightBrace reduce production builtinValue -> sequenceValue
-- On Middle reduce production builtinValue -> sequenceValue
-- On Lower reduce production builtinValue -> sequenceValue
-- On LessThan reduce production builtinValue -> sequenceValue
-- On INTERSECTION reduce production builtinValue -> sequenceValue
-- On EXCEPT reduce production builtinValue -> sequenceValue
-- On END reduce production builtinValue -> sequenceValue
-- On DoubleDot reduce production builtinValue -> sequenceValue
-- On Comma reduce production builtinValue -> sequenceValue
-- On Circumflex reduce production builtinValue -> sequenceValue
-- On Bang reduce production builtinValue -> sequenceValue

State 325:
## Known stack suffix:
## sequenceOfValue
## LR(1) items:
builtinValue -> sequenceOfValue . [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
## Transitions:
## Reductions:
-- On Upper reduce production builtinValue -> sequenceOfValue
-- On UNION reduce production builtinValue -> sequenceOfValue
-- On RightParen reduce production builtinValue -> sequenceOfValue
-- On RightDoubleBracket reduce production builtinValue -> sequenceOfValue
-- On RightBrace reduce production builtinValue -> sequenceOfValue
-- On Middle reduce production builtinValue -> sequenceOfValue
-- On Lower reduce production builtinValue -> sequenceOfValue
-- On LessThan reduce production builtinValue -> sequenceOfValue
-- On INTERSECTION reduce production builtinValue -> sequenceOfValue
-- On EXCEPT reduce production builtinValue -> sequenceOfValue
-- On END reduce production builtinValue -> sequenceOfValue
-- On DoubleDot reduce production builtinValue -> sequenceOfValue
-- On Comma reduce production builtinValue -> sequenceOfValue
-- On Circumflex reduce production builtinValue -> sequenceOfValue
-- On Bang reduce production builtinValue -> sequenceOfValue

State 326:
## Known stack suffix:
## restrictedCharacterStringValue
## LR(1) items:
characterStringValue -> restrictedCharacterStringValue . [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
## Transitions:
## Reductions:
-- On Upper reduce production characterStringValue -> restrictedCharacterStringValue
-- On UNION reduce production characterStringValue -> restrictedCharacterStringValue
-- On RightParen reduce production characterStringValue -> restrictedCharacterStringValue
-- On RightDoubleBracket reduce production characterStringValue -> restrictedCharacterStringValue
-- On RightBrace reduce production characterStringValue -> restrictedCharacterStringValue
-- On Middle reduce production characterStringValue -> restrictedCharacterStringValue
-- On Lower reduce production characterStringValue -> restrictedCharacterStringValue
-- On LessThan reduce production characterStringValue -> restrictedCharacterStringValue
-- On INTERSECTION reduce production characterStringValue -> restrictedCharacterStringValue
-- On EXCEPT reduce production characterStringValue -> restrictedCharacterStringValue
-- On END reduce production characterStringValue -> restrictedCharacterStringValue
-- On DoubleDot reduce production characterStringValue -> restrictedCharacterStringValue
-- On Comma reduce production characterStringValue -> restrictedCharacterStringValue
-- On Circumflex reduce production characterStringValue -> restrictedCharacterStringValue
-- On Bang reduce production characterStringValue -> restrictedCharacterStringValue

State 327:
## Known stack suffix:
## relativeOIDValue
## LR(1) items:
builtinValue -> relativeOIDValue . [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
## Transitions:
## Reductions:
-- On Upper reduce production builtinValue -> relativeOIDValue
-- On UNION reduce production builtinValue -> relativeOIDValue
-- On RightParen reduce production builtinValue -> relativeOIDValue
-- On RightDoubleBracket reduce production builtinValue -> relativeOIDValue
-- On RightBrace reduce production builtinValue -> relativeOIDValue
-- On Middle reduce production builtinValue -> relativeOIDValue
-- On Lower reduce production builtinValue -> relativeOIDValue
-- On LessThan reduce production builtinValue -> relativeOIDValue
-- On INTERSECTION reduce production builtinValue -> relativeOIDValue
-- On EXCEPT reduce production builtinValue -> relativeOIDValue
-- On END reduce production builtinValue -> relativeOIDValue
-- On DoubleDot reduce production builtinValue -> relativeOIDValue
-- On Comma reduce production builtinValue -> relativeOIDValue
-- On Circumflex reduce production builtinValue -> relativeOIDValue
-- On Bang reduce production builtinValue -> relativeOIDValue

State 328:
## Known stack suffix:
## referencedValue
## LR(1) items:
fixedTypeFieldVal -> referencedValue . [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
value -> referencedValue . [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
## Transitions:
## Reductions:
-- On Upper reduce production value -> referencedValue
-- On UNION reduce production value -> referencedValue
-- On RightParen reduce production value -> referencedValue
-- On RightDoubleBracket reduce production value -> referencedValue
-- On RightBrace reduce production value -> referencedValue
-- On Middle reduce production value -> referencedValue
-- On Lower reduce production value -> referencedValue
-- On LessThan reduce production value -> referencedValue
-- On INTERSECTION reduce production value -> referencedValue
-- On EXCEPT reduce production value -> referencedValue
-- On END reduce production value -> referencedValue
-- On DoubleDot reduce production value -> referencedValue
-- On Comma reduce production value -> referencedValue
-- On Circumflex reduce production value -> referencedValue
-- On Bang reduce production value -> referencedValue

State 329:
## Known stack suffix:
## referencedObjects
## LR(1) items:
typeFromObject -> referencedObjects . Dot fieldName [ RightParen LeftParen ENCODED Colon Bang ]
valueFromObject -> referencedObjects . Dot fieldName [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
valueSetFromObjects -> referencedObjects . Dot fieldName [ RightParen LeftParen ENCODED Colon Bang ]
## Transitions:
-- On Dot shift to state 330
## Reductions:

State 330:
## Known stack suffix:
## referencedObjects Dot
## LR(1) items:
typeFromObject -> referencedObjects Dot . fieldName [ RightParen LeftParen ENCODED Colon Bang ]
valueFromObject -> referencedObjects Dot . fieldName [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
valueSetFromObjects -> referencedObjects Dot . fieldName [ RightParen LeftParen ENCODED Colon Bang ]
## Transitions:
-- On UpperField shift to state 225
-- On LowerField shift to state 226
-- On separated_nonempty_list(Dot,primitiveFieldName) shift to state 227
-- On primitiveFieldName shift to state 228
-- On fieldName shift to state 331
## Reductions:

State 331:
## Known stack suffix:
## referencedObjects Dot fieldName
## LR(1) items:
typeFromObject -> referencedObjects Dot fieldName . [ RightParen LeftParen ENCODED Colon Bang ]
valueFromObject -> referencedObjects Dot fieldName . [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
valueSetFromObjects -> referencedObjects Dot fieldName . [ RightParen LeftParen ENCODED Colon Bang ]
## Transitions:
## Reductions:
-- On Upper reduce production valueFromObject -> referencedObjects Dot fieldName
-- On UNION reduce production valueFromObject -> referencedObjects Dot fieldName
-- On RightParen reduce production valueFromObject -> referencedObjects Dot fieldName
-- On RightDoubleBracket reduce production valueFromObject -> referencedObjects Dot fieldName
-- On RightBrace reduce production valueFromObject -> referencedObjects Dot fieldName
-- On Middle reduce production valueFromObject -> referencedObjects Dot fieldName
-- On Lower reduce production valueFromObject -> referencedObjects Dot fieldName
-- On LessThan reduce production valueFromObject -> referencedObjects Dot fieldName
-- On LeftParen reduce production valueSetFromObjects -> referencedObjects Dot fieldName
-- On INTERSECTION reduce production valueFromObject -> referencedObjects Dot fieldName
-- On EXCEPT reduce production valueFromObject -> referencedObjects Dot fieldName
-- On END reduce production valueFromObject -> referencedObjects Dot fieldName
-- On ENCODED reduce production valueSetFromObjects -> referencedObjects Dot fieldName
-- On DoubleDot reduce production valueFromObject -> referencedObjects Dot fieldName
-- On Comma reduce production valueFromObject -> referencedObjects Dot fieldName
-- On Colon reduce production valueSetFromObjects -> referencedObjects Dot fieldName
-- On Circumflex reduce production valueFromObject -> referencedObjects Dot fieldName
-- On Bang reduce production valueFromObject -> referencedObjects Dot fieldName

State 332:
## Known stack suffix:
## realValue
## LR(1) items:
builtinValue -> realValue . [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
## Transitions:
## Reductions:
-- On Upper reduce production builtinValue -> realValue
-- On UNION reduce production builtinValue -> realValue
-- On RightParen reduce production builtinValue -> realValue
-- On RightDoubleBracket reduce production builtinValue -> realValue
-- On RightBrace reduce production builtinValue -> realValue
-- On Middle reduce production builtinValue -> realValue
-- On Lower reduce production builtinValue -> realValue
-- On LessThan reduce production builtinValue -> realValue
-- On INTERSECTION reduce production builtinValue -> realValue
-- On EXCEPT reduce production builtinValue -> realValue
-- On END reduce production builtinValue -> realValue
-- On DoubleDot reduce production builtinValue -> realValue
-- On Comma reduce production builtinValue -> realValue
-- On Circumflex reduce production builtinValue -> realValue
-- On Bang reduce production builtinValue -> realValue

State 333:
## Known stack suffix:
## quadruple
## LR(1) items:
restrictedCharacterStringValue -> quadruple . [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
## Transitions:
## Reductions:
-- On Upper reduce production restrictedCharacterStringValue -> quadruple
-- On UNION reduce production restrictedCharacterStringValue -> quadruple
-- On RightParen reduce production restrictedCharacterStringValue -> quadruple
-- On RightDoubleBracket reduce production restrictedCharacterStringValue -> quadruple
-- On RightBrace reduce production restrictedCharacterStringValue -> quadruple
-- On Middle reduce production restrictedCharacterStringValue -> quadruple
-- On Lower reduce production restrictedCharacterStringValue -> quadruple
-- On LessThan reduce production restrictedCharacterStringValue -> quadruple
-- On INTERSECTION reduce production restrictedCharacterStringValue -> quadruple
-- On EXCEPT reduce production restrictedCharacterStringValue -> quadruple
-- On END reduce production restrictedCharacterStringValue -> quadruple
-- On DoubleDot reduce production restrictedCharacterStringValue -> quadruple
-- On Comma reduce production restrictedCharacterStringValue -> quadruple
-- On Circumflex reduce production restrictedCharacterStringValue -> quadruple
-- On Bang reduce production restrictedCharacterStringValue -> quadruple

State 334:
## Known stack suffix:
## openTypeFieldVal
## LR(1) items:
objectClassFieldValue -> openTypeFieldVal . [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
## Transitions:
## Reductions:
-- On Upper reduce production objectClassFieldValue -> openTypeFieldVal
-- On UNION reduce production objectClassFieldValue -> openTypeFieldVal
-- On RightParen reduce production objectClassFieldValue -> openTypeFieldVal
-- On RightDoubleBracket reduce production objectClassFieldValue -> openTypeFieldVal
-- On RightBrace reduce production objectClassFieldValue -> openTypeFieldVal
-- On Middle reduce production objectClassFieldValue -> openTypeFieldVal
-- On Lower reduce production objectClassFieldValue -> openTypeFieldVal
-- On LessThan reduce production objectClassFieldValue -> openTypeFieldVal
-- On INTERSECTION reduce production objectClassFieldValue -> openTypeFieldVal
-- On EXCEPT reduce production objectClassFieldValue -> openTypeFieldVal
-- On END reduce production objectClassFieldValue -> openTypeFieldVal
-- On DoubleDot reduce production objectClassFieldValue -> openTypeFieldVal
-- On Comma reduce production objectClassFieldValue -> openTypeFieldVal
-- On Circumflex reduce production objectClassFieldValue -> openTypeFieldVal
-- On Bang reduce production objectClassFieldValue -> openTypeFieldVal

State 335:
## Known stack suffix:
## octetStringValue
## LR(1) items:
builtinValue -> octetStringValue . [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
## Transitions:
## Reductions:
-- On Upper reduce production builtinValue -> octetStringValue
-- On UNION reduce production builtinValue -> octetStringValue
-- On RightParen reduce production builtinValue -> octetStringValue
-- On RightDoubleBracket reduce production builtinValue -> octetStringValue
-- On RightBrace reduce production builtinValue -> octetStringValue
-- On Middle reduce production builtinValue -> octetStringValue
-- On Lower reduce production builtinValue -> octetStringValue
-- On LessThan reduce production builtinValue -> octetStringValue
-- On INTERSECTION reduce production builtinValue -> octetStringValue
-- On EXCEPT reduce production builtinValue -> octetStringValue
-- On END reduce production builtinValue -> octetStringValue
-- On DoubleDot reduce production builtinValue -> octetStringValue
-- On Comma reduce production builtinValue -> octetStringValue
-- On Circumflex reduce production builtinValue -> octetStringValue
-- On Bang reduce production builtinValue -> octetStringValue

State 336:
## Known stack suffix:
## objectIdentifierValue
## LR(1) items:
builtinValue -> objectIdentifierValue . [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
## Transitions:
## Reductions:
-- On Upper reduce production builtinValue -> objectIdentifierValue
-- On UNION reduce production builtinValue -> objectIdentifierValue
-- On RightParen reduce production builtinValue -> objectIdentifierValue
-- On RightDoubleBracket reduce production builtinValue -> objectIdentifierValue
-- On RightBrace reduce production builtinValue -> objectIdentifierValue
-- On Middle reduce production builtinValue -> objectIdentifierValue
-- On Lower reduce production builtinValue -> objectIdentifierValue
-- On LessThan reduce production builtinValue -> objectIdentifierValue
-- On INTERSECTION reduce production builtinValue -> objectIdentifierValue
-- On EXCEPT reduce production builtinValue -> objectIdentifierValue
-- On END reduce production builtinValue -> objectIdentifierValue
-- On DoubleDot reduce production builtinValue -> objectIdentifierValue
-- On Comma reduce production builtinValue -> objectIdentifierValue
-- On Circumflex reduce production builtinValue -> objectIdentifierValue
-- On Bang reduce production builtinValue -> objectIdentifierValue

State 337:
## Known stack suffix:
## objectClassFieldValue
## LR(1) items:
value -> objectClassFieldValue . [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
## Transitions:
## Reductions:
-- On Upper reduce production value -> objectClassFieldValue
-- On UNION reduce production value -> objectClassFieldValue
-- On RightParen reduce production value -> objectClassFieldValue
-- On RightDoubleBracket reduce production value -> objectClassFieldValue
-- On RightBrace reduce production value -> objectClassFieldValue
-- On Middle reduce production value -> objectClassFieldValue
-- On Lower reduce production value -> objectClassFieldValue
-- On LessThan reduce production value -> objectClassFieldValue
-- On INTERSECTION reduce production value -> objectClassFieldValue
-- On EXCEPT reduce production value -> objectClassFieldValue
-- On END reduce production value -> objectClassFieldValue
-- On DoubleDot reduce production value -> objectClassFieldValue
-- On Comma reduce production value -> objectClassFieldValue
-- On Circumflex reduce production value -> objectClassFieldValue
-- On Bang reduce production value -> objectClassFieldValue

State 338:
## Known stack suffix:
## numericRealValue
## LR(1) items:
realValue -> numericRealValue . [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
## Transitions:
## Reductions:
-- On Upper reduce production realValue -> numericRealValue
-- On UNION reduce production realValue -> numericRealValue
-- On RightParen reduce production realValue -> numericRealValue
-- On RightDoubleBracket reduce production realValue -> numericRealValue
-- On RightBrace reduce production realValue -> numericRealValue
-- On Middle reduce production realValue -> numericRealValue
-- On Lower reduce production realValue -> numericRealValue
-- On LessThan reduce production realValue -> numericRealValue
-- On INTERSECTION reduce production realValue -> numericRealValue
-- On EXCEPT reduce production realValue -> numericRealValue
-- On END reduce production realValue -> numericRealValue
-- On DoubleDot reduce production realValue -> numericRealValue
-- On Comma reduce production realValue -> numericRealValue
-- On Circumflex reduce production realValue -> numericRealValue
-- On Bang reduce production realValue -> numericRealValue

State 339:
## Known stack suffix:
## nullValue
## LR(1) items:
builtinValue -> nullValue . [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
## Transitions:
## Reductions:
-- On Upper reduce production builtinValue -> nullValue
-- On UNION reduce production builtinValue -> nullValue
-- On RightParen reduce production builtinValue -> nullValue
-- On RightDoubleBracket reduce production builtinValue -> nullValue
-- On RightBrace reduce production builtinValue -> nullValue
-- On Middle reduce production builtinValue -> nullValue
-- On Lower reduce production builtinValue -> nullValue
-- On LessThan reduce production builtinValue -> nullValue
-- On INTERSECTION reduce production builtinValue -> nullValue
-- On EXCEPT reduce production builtinValue -> nullValue
-- On END reduce production builtinValue -> nullValue
-- On DoubleDot reduce production builtinValue -> nullValue
-- On Comma reduce production builtinValue -> nullValue
-- On Circumflex reduce production builtinValue -> nullValue
-- On Bang reduce production builtinValue -> nullValue

State 340:
## Known stack suffix:
## integerValue
## LR(1) items:
builtinValue -> integerValue . [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
## Transitions:
## Reductions:
-- On Upper reduce production builtinValue -> integerValue
-- On UNION reduce production builtinValue -> integerValue
-- On RightParen reduce production builtinValue -> integerValue
-- On RightDoubleBracket reduce production builtinValue -> integerValue
-- On RightBrace reduce production builtinValue -> integerValue
-- On Middle reduce production builtinValue -> integerValue
-- On Lower reduce production builtinValue -> integerValue
-- On LessThan reduce production builtinValue -> integerValue
-- On INTERSECTION reduce production builtinValue -> integerValue
-- On EXCEPT reduce production builtinValue -> integerValue
-- On END reduce production builtinValue -> integerValue
-- On DoubleDot reduce production builtinValue -> integerValue
-- On Comma reduce production builtinValue -> integerValue
-- On Circumflex reduce production builtinValue -> integerValue
-- On Bang reduce production builtinValue -> integerValue

State 341:
## Known stack suffix:
## fixedTypeFieldVal
## LR(1) items:
objectClassFieldValue -> fixedTypeFieldVal . [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
## Transitions:
## Reductions:
-- On Upper reduce production objectClassFieldValue -> fixedTypeFieldVal
-- On UNION reduce production objectClassFieldValue -> fixedTypeFieldVal
-- On RightParen reduce production objectClassFieldValue -> fixedTypeFieldVal
-- On RightDoubleBracket reduce production objectClassFieldValue -> fixedTypeFieldVal
-- On RightBrace reduce production objectClassFieldValue -> fixedTypeFieldVal
-- On Middle reduce production objectClassFieldValue -> fixedTypeFieldVal
-- On Lower reduce production objectClassFieldValue -> fixedTypeFieldVal
-- On LessThan reduce production objectClassFieldValue -> fixedTypeFieldVal
-- On INTERSECTION reduce production objectClassFieldValue -> fixedTypeFieldVal
-- On EXCEPT reduce production objectClassFieldValue -> fixedTypeFieldVal
-- On END reduce production objectClassFieldValue -> fixedTypeFieldVal
-- On DoubleDot reduce production objectClassFieldValue -> fixedTypeFieldVal
-- On Comma reduce production objectClassFieldValue -> fixedTypeFieldVal
-- On Circumflex reduce production objectClassFieldValue -> fixedTypeFieldVal
-- On Bang reduce production objectClassFieldValue -> fixedTypeFieldVal

State 342:
## Known stack suffix:
## externalValue
## LR(1) items:
builtinValue -> externalValue . [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
## Transitions:
## Reductions:
-- On Upper reduce production builtinValue -> externalValue
-- On UNION reduce production builtinValue -> externalValue
-- On RightParen reduce production builtinValue -> externalValue
-- On RightDoubleBracket reduce production builtinValue -> externalValue
-- On RightBrace reduce production builtinValue -> externalValue
-- On Middle reduce production builtinValue -> externalValue
-- On Lower reduce production builtinValue -> externalValue
-- On LessThan reduce production builtinValue -> externalValue
-- On INTERSECTION reduce production builtinValue -> externalValue
-- On EXCEPT reduce production builtinValue -> externalValue
-- On END reduce production builtinValue -> externalValue
-- On DoubleDot reduce production builtinValue -> externalValue
-- On Comma reduce production builtinValue -> externalValue
-- On Circumflex reduce production builtinValue -> externalValue
-- On Bang reduce production builtinValue -> externalValue

State 343:
## Known stack suffix:
## enumeratedValue
## LR(1) items:
builtinValue -> enumeratedValue . [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
## Transitions:
## Reductions:
-- On Upper reduce production builtinValue -> enumeratedValue
-- On UNION reduce production builtinValue -> enumeratedValue
-- On RightParen reduce production builtinValue -> enumeratedValue
-- On RightDoubleBracket reduce production builtinValue -> enumeratedValue
-- On RightBrace reduce production builtinValue -> enumeratedValue
-- On Middle reduce production builtinValue -> enumeratedValue
-- On Lower reduce production builtinValue -> enumeratedValue
-- On LessThan reduce production builtinValue -> enumeratedValue
-- On INTERSECTION reduce production builtinValue -> enumeratedValue
-- On EXCEPT reduce production builtinValue -> enumeratedValue
-- On END reduce production builtinValue -> enumeratedValue
-- On DoubleDot reduce production builtinValue -> enumeratedValue
-- On Comma reduce production builtinValue -> enumeratedValue
-- On Circumflex reduce production builtinValue -> enumeratedValue
-- On Bang reduce production builtinValue -> enumeratedValue

State 344:
## Known stack suffix:
## embeddedPDVValue
## LR(1) items:
builtinValue -> embeddedPDVValue . [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
## Transitions:
## Reductions:
-- On Upper reduce production builtinValue -> embeddedPDVValue
-- On UNION reduce production builtinValue -> embeddedPDVValue
-- On RightParen reduce production builtinValue -> embeddedPDVValue
-- On RightDoubleBracket reduce production builtinValue -> embeddedPDVValue
-- On RightBrace reduce production builtinValue -> embeddedPDVValue
-- On Middle reduce production builtinValue -> embeddedPDVValue
-- On Lower reduce production builtinValue -> embeddedPDVValue
-- On LessThan reduce production builtinValue -> embeddedPDVValue
-- On INTERSECTION reduce production builtinValue -> embeddedPDVValue
-- On EXCEPT reduce production builtinValue -> embeddedPDVValue
-- On END reduce production builtinValue -> embeddedPDVValue
-- On DoubleDot reduce production builtinValue -> embeddedPDVValue
-- On Comma reduce production builtinValue -> embeddedPDVValue
-- On Circumflex reduce production builtinValue -> embeddedPDVValue
-- On Bang reduce production builtinValue -> embeddedPDVValue

State 345:
## Known stack suffix:
## definedValue
## LR(1) items:
referencedValue -> definedValue . [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
## Transitions:
## Reductions:
-- On Upper reduce production referencedValue -> definedValue
-- On UNION reduce production referencedValue -> definedValue
-- On RightParen reduce production referencedValue -> definedValue
-- On RightDoubleBracket reduce production referencedValue -> definedValue
-- On RightBrace reduce production referencedValue -> definedValue
-- On Middle reduce production referencedValue -> definedValue
-- On Lower reduce production referencedValue -> definedValue
-- On LessThan reduce production referencedValue -> definedValue
-- On INTERSECTION reduce production referencedValue -> definedValue
-- On EXCEPT reduce production referencedValue -> definedValue
-- On END reduce production referencedValue -> definedValue
-- On DoubleDot reduce production referencedValue -> definedValue
-- On Comma reduce production referencedValue -> definedValue
-- On Circumflex reduce production referencedValue -> definedValue
-- On Bang reduce production referencedValue -> definedValue

State 346:
## Known stack suffix:
## choiceValue
## LR(1) items:
builtinValue -> choiceValue . [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
## Transitions:
## Reductions:
-- On Upper reduce production builtinValue -> choiceValue
-- On UNION reduce production builtinValue -> choiceValue
-- On RightParen reduce production builtinValue -> choiceValue
-- On RightDoubleBracket reduce production builtinValue -> choiceValue
-- On RightBrace reduce production builtinValue -> choiceValue
-- On Middle reduce production builtinValue -> choiceValue
-- On Lower reduce production builtinValue -> choiceValue
-- On LessThan reduce production builtinValue -> choiceValue
-- On INTERSECTION reduce production builtinValue -> choiceValue
-- On EXCEPT reduce production builtinValue -> choiceValue
-- On END reduce production builtinValue -> choiceValue
-- On DoubleDot reduce production builtinValue -> choiceValue
-- On Comma reduce production builtinValue -> choiceValue
-- On Circumflex reduce production builtinValue -> choiceValue
-- On Bang reduce production builtinValue -> choiceValue

State 347:
## Known stack suffix:
## characterStringValue
## LR(1) items:
builtinValue -> characterStringValue . [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
## Transitions:
## Reductions:
-- On Upper reduce production builtinValue -> characterStringValue
-- On UNION reduce production builtinValue -> characterStringValue
-- On RightParen reduce production builtinValue -> characterStringValue
-- On RightDoubleBracket reduce production builtinValue -> characterStringValue
-- On RightBrace reduce production builtinValue -> characterStringValue
-- On Middle reduce production builtinValue -> characterStringValue
-- On Lower reduce production builtinValue -> characterStringValue
-- On LessThan reduce production builtinValue -> characterStringValue
-- On INTERSECTION reduce production builtinValue -> characterStringValue
-- On EXCEPT reduce production builtinValue -> characterStringValue
-- On END reduce production builtinValue -> characterStringValue
-- On DoubleDot reduce production builtinValue -> characterStringValue
-- On Comma reduce production builtinValue -> characterStringValue
-- On Circumflex reduce production builtinValue -> characterStringValue
-- On Bang reduce production builtinValue -> characterStringValue

State 348:
## Known stack suffix:
## characterStringList
## LR(1) items:
restrictedCharacterStringValue -> characterStringList . [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
## Transitions:
## Reductions:
-- On Upper reduce production restrictedCharacterStringValue -> characterStringList
-- On UNION reduce production restrictedCharacterStringValue -> characterStringList
-- On RightParen reduce production restrictedCharacterStringValue -> characterStringList
-- On RightDoubleBracket reduce production restrictedCharacterStringValue -> characterStringList
-- On RightBrace reduce production restrictedCharacterStringValue -> characterStringList
-- On Middle reduce production restrictedCharacterStringValue -> characterStringList
-- On Lower reduce production restrictedCharacterStringValue -> characterStringList
-- On LessThan reduce production restrictedCharacterStringValue -> characterStringList
-- On INTERSECTION reduce production restrictedCharacterStringValue -> characterStringList
-- On EXCEPT reduce production restrictedCharacterStringValue -> characterStringList
-- On END reduce production restrictedCharacterStringValue -> characterStringList
-- On DoubleDot reduce production restrictedCharacterStringValue -> characterStringList
-- On Comma reduce production restrictedCharacterStringValue -> characterStringList
-- On Circumflex reduce production restrictedCharacterStringValue -> characterStringList
-- On Bang reduce production restrictedCharacterStringValue -> characterStringList

State 349:
## Known stack suffix:
## builtinValue
## LR(1) items:
fixedTypeFieldVal -> builtinValue . [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
value -> builtinValue . [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
## Transitions:
## Reductions:
-- On Upper reduce production value -> builtinValue
-- On UNION reduce production value -> builtinValue
-- On RightParen reduce production value -> builtinValue
-- On RightDoubleBracket reduce production value -> builtinValue
-- On RightBrace reduce production value -> builtinValue
-- On Middle reduce production value -> builtinValue
-- On Lower reduce production value -> builtinValue
-- On LessThan reduce production value -> builtinValue
-- On INTERSECTION reduce production value -> builtinValue
-- On EXCEPT reduce production value -> builtinValue
-- On END reduce production value -> builtinValue
-- On DoubleDot reduce production value -> builtinValue
-- On Comma reduce production value -> builtinValue
-- On Circumflex reduce production value -> builtinValue
-- On Bang reduce production value -> builtinValue

State 350:
## Known stack suffix:
## booleanValue
## LR(1) items:
builtinValue -> booleanValue . [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
## Transitions:
## Reductions:
-- On Upper reduce production builtinValue -> booleanValue
-- On UNION reduce production builtinValue -> booleanValue
-- On RightParen reduce production builtinValue -> booleanValue
-- On RightDoubleBracket reduce production builtinValue -> booleanValue
-- On RightBrace reduce production builtinValue -> booleanValue
-- On Middle reduce production builtinValue -> booleanValue
-- On Lower reduce production builtinValue -> booleanValue
-- On LessThan reduce production builtinValue -> booleanValue
-- On INTERSECTION reduce production builtinValue -> booleanValue
-- On EXCEPT reduce production builtinValue -> booleanValue
-- On END reduce production builtinValue -> booleanValue
-- On DoubleDot reduce production builtinValue -> booleanValue
-- On Comma reduce production builtinValue -> booleanValue
-- On Circumflex reduce production builtinValue -> booleanValue
-- On Bang reduce production builtinValue -> booleanValue

State 351:
## Known stack suffix:
## bitStringValue
## LR(1) items:
builtinValue -> bitStringValue . [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
## Transitions:
## Reductions:
-- On Upper reduce production builtinValue -> bitStringValue
-- On UNION reduce production builtinValue -> bitStringValue
-- On RightParen reduce production builtinValue -> bitStringValue
-- On RightDoubleBracket reduce production builtinValue -> bitStringValue
-- On RightBrace reduce production builtinValue -> bitStringValue
-- On Middle reduce production builtinValue -> bitStringValue
-- On Lower reduce production builtinValue -> bitStringValue
-- On LessThan reduce production builtinValue -> bitStringValue
-- On INTERSECTION reduce production builtinValue -> bitStringValue
-- On EXCEPT reduce production builtinValue -> bitStringValue
-- On END reduce production builtinValue -> bitStringValue
-- On DoubleDot reduce production builtinValue -> bitStringValue
-- On Comma reduce production builtinValue -> bitStringValue
-- On Circumflex reduce production builtinValue -> bitStringValue
-- On Bang reduce production builtinValue -> bitStringValue

State 352:
## Known stack suffix:
## Lower value
## LR(1) items:
namedValue -> Lower value . [ RightBrace Comma ]
## Transitions:
## Reductions:
-- On RightBrace reduce production namedValue -> Lower value
-- On Comma reduce production namedValue -> Lower value

State 353:
## Known stack suffix:
## Cstring
## LR(1) items:
charsDefn -> Cstring . [ RightBrace Comma ]
restrictedCharacterStringValue -> Cstring . [ UNION RightBrace Middle LessThan INTERSECTION EXCEPT DoubleDot Comma Circumflex ]
## Transitions:
## Reductions:
-- On UNION reduce production restrictedCharacterStringValue -> Cstring
-- On RightBrace reduce production restrictedCharacterStringValue -> Cstring
-- On Middle reduce production restrictedCharacterStringValue -> Cstring
-- On LessThan reduce production restrictedCharacterStringValue -> Cstring
-- On INTERSECTION reduce production restrictedCharacterStringValue -> Cstring
-- On EXCEPT reduce production restrictedCharacterStringValue -> Cstring
-- On DoubleDot reduce production restrictedCharacterStringValue -> Cstring
-- On Comma reduce production restrictedCharacterStringValue -> Cstring
-- On Circumflex reduce production restrictedCharacterStringValue -> Cstring

State 354:
## Known stack suffix:
## LeftBrace valueList
## LR(1) items:
sequenceOfValue -> LeftBrace valueList . RightBrace [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
setOfValue -> LeftBrace valueList . RightBrace [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
valueList -> valueList . Comma value [ RightBrace Comma ]
## Transitions:
-- On RightBrace shift to state 355
-- On Comma shift to state 356
## Reductions:

State 355:
## Known stack suffix:
## LeftBrace valueList RightBrace
## LR(1) items:
sequenceOfValue -> LeftBrace valueList RightBrace . [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
setOfValue -> LeftBrace valueList RightBrace . [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
## Transitions:
## Reductions:
-- On Upper reduce production sequenceOfValue -> LeftBrace valueList RightBrace
-- On UNION reduce production sequenceOfValue -> LeftBrace valueList RightBrace
-- On RightParen reduce production sequenceOfValue -> LeftBrace valueList RightBrace
-- On RightDoubleBracket reduce production sequenceOfValue -> LeftBrace valueList RightBrace
-- On RightBrace reduce production sequenceOfValue -> LeftBrace valueList RightBrace
-- On Middle reduce production sequenceOfValue -> LeftBrace valueList RightBrace
-- On Lower reduce production sequenceOfValue -> LeftBrace valueList RightBrace
-- On LessThan reduce production sequenceOfValue -> LeftBrace valueList RightBrace
-- On INTERSECTION reduce production sequenceOfValue -> LeftBrace valueList RightBrace
-- On EXCEPT reduce production sequenceOfValue -> LeftBrace valueList RightBrace
-- On END reduce production sequenceOfValue -> LeftBrace valueList RightBrace
-- On DoubleDot reduce production sequenceOfValue -> LeftBrace valueList RightBrace
-- On Comma reduce production sequenceOfValue -> LeftBrace valueList RightBrace
-- On Circumflex reduce production sequenceOfValue -> LeftBrace valueList RightBrace
-- On Bang reduce production sequenceOfValue -> LeftBrace valueList RightBrace

State 356:
## Known stack suffix:
## valueList Comma
## LR(1) items:
valueList -> valueList Comma . value [ RightBrace Comma ]
## Transitions:
-- On VisibleString shift to state 66
-- On VideotexString shift to state 67
-- On Upper shift to state 108
-- On UniversalString shift to state 72
-- On UTF8String shift to state 73
-- On UTCTime shift to state 74
-- On TeletexString shift to state 75
-- On TYPE_IDENTIFIER shift to state 76
-- On TRUE shift to state 77
-- On T61String shift to state 78
-- On SET shift to state 79
-- On SEQUENCE shift to state 111
-- On RealNumber shift to state 296
-- On RELATIVE_OID shift to state 116
-- On REAL shift to state 117
-- On PrintableString shift to state 118
-- On PLUS_INFINITY shift to state 297
-- On ObjectDescriptor shift to state 119
-- On OCTET shift to state 120
-- On OBJECT shift to state 122
-- On NumericString shift to state 124
-- On Number shift to state 145
-- On NULL shift to state 298
-- On MINUS_INFINITY shift to state 299
-- On Lower shift to state 300
-- On LeftBracket shift to state 129
-- On LeftBrace shift to state 302
-- On ISO646String shift to state 140
-- On INTEGER shift to state 141
-- On INSTANCE shift to state 157
-- On IA5String shift to state 166
-- On Hyphen shift to state 306
-- On Hstring shift to state 308
-- On GraphicString shift to state 167
-- On GeneralizedTime shift to state 168
-- On GeneralString shift to state 169
-- On FALSE shift to state 309
-- On EXTERNAL shift to state 170
-- On ENUMERATED shift to state 171
-- On EMBEDDED shift to state 179
-- On Cstring shift to state 310
-- On CONTAINING shift to state 311
-- On CHOICE shift to state 181
-- On CHARACTER shift to state 184
-- On Bstring shift to state 312
-- On BOOLEAN shift to state 186
-- On BMPString shift to state 187
-- On BIT shift to state 188
-- On ABSTRACT_SYNTAX shift to state 162
-- On valueSetFromObjects shift to state 202
-- On valueFromObject shift to state 313
-- On value shift to state 357
-- On usefulType shift to state 203
-- On usefulObjectClassReference shift to state 163
-- On unrestrictedCharacterStringValue shift to state 315
-- On unrestrictedCharacterStringType shift to state 204
-- On type_x shift to state 316
-- On typeWithConstraint shift to state 207
-- On typeFromObject shift to state 208
-- On tuple shift to state 319
-- On taggedType shift to state 209
-- On tag shift to state 210
-- On specialRealValue shift to state 320
-- On simpleDefinedValue shift to state 64
-- On simpleDefinedType shift to state 213
-- On signedNumber shift to state 321
-- On setValue shift to state 322
-- On setType shift to state 215
-- On setOfValue shift to state 323
-- On setOfType shift to state 216
-- On sequenceValue shift to state 324
-- On sequenceType shift to state 217
-- On sequenceOfValue shift to state 325
-- On sequenceOfType shift to state 218
-- On selectionType shift to state 219
-- On restrictedCharacterStringValue shift to state 326
-- On restrictedCharacterStringType shift to state 220
-- On relativeOIDValue shift to state 327
-- On relativeOIDType shift to state 221
-- On referencedValue shift to state 328
-- On referencedType shift to state 222
-- On referencedObjects shift to state 329
-- On realValue shift to state 332
-- On realType shift to state 232
-- On quadruple shift to state 333
-- On parameterizedValueSetType shift to state 233
-- On parameterizedValue shift to state 135
-- On parameterizedType shift to state 234
-- On parameterizedObjectSet shift to state 235
-- On parameterizedObject shift to state 236
-- On openTypeFieldVal shift to state 334
-- On octetStringValue shift to state 335
-- On octetStringType shift to state 237
-- On objectIdentifierValue shift to state 336
-- On objectIdentifierType shift to state 238
-- On objectClassFieldValue shift to state 337
-- On objectClassFieldType shift to state 239
-- On numericRealValue shift to state 338
-- On nullValue shift to state 339
-- On nullType shift to state 240
-- On integerValue shift to state 340
-- On integerType shift to state 241
-- On instanceOfType shift to state 242
-- On fixedTypeFieldVal shift to state 341
-- On externalValueReference shift to state 136
-- On externalValue shift to state 342
-- On externalTypeReference shift to state 243
-- On externalType shift to state 244
-- On externalObjectSetReference shift to state 245
-- On externalObjectReference shift to state 246
-- On externalObjectClassReference shift to state 164
-- On enumeratedValue shift to state 343
-- On enumeratedType shift to state 247
-- On embeddedPDVValue shift to state 344
-- On embeddedPDVType shift to state 248
-- On definedValue shift to state 345
-- On definedType shift to state 249
-- On definedObjectSet shift to state 250
-- On definedObjectClass shift to state 252
-- On definedObject shift to state 255
-- On constrainedType shift to state 257
-- On choiceValue shift to state 346
-- On choiceType shift to state 258
-- On characterStringValue shift to state 347
-- On characterStringType shift to state 259
-- On characterStringList shift to state 348
-- On builtinValue shift to state 349
-- On builtinType shift to state 260
-- On booleanValue shift to state 350
-- On booleanType shift to state 261
-- On bitStringValue shift to state 351
-- On bitStringType shift to state 262
## Reductions:

State 357:
## Known stack suffix:
## valueList Comma value
## LR(1) items:
valueList -> valueList Comma value . [ RightBrace Comma ]
## Transitions:
## Reductions:
-- On RightBrace reduce production valueList -> valueList Comma value
-- On Comma reduce production valueList -> valueList Comma value

State 358:
## Known stack suffix:
## value
## LR(1) items:
valueList -> value . [ RightBrace Comma ]
## Transitions:
## Reductions:
-- On RightBrace reduce production valueList -> value
-- On Comma reduce production valueList -> value

State 359:
## Known stack suffix:
## tuple
## LR(1) items:
charsDefn -> tuple . [ RightBrace Comma ]
restrictedCharacterStringValue -> tuple . [ UNION RightBrace Middle LessThan INTERSECTION EXCEPT DoubleDot Comma Circumflex ]
## Transitions:
## Reductions:
-- On UNION reduce production restrictedCharacterStringValue -> tuple
-- On RightBrace reduce production restrictedCharacterStringValue -> tuple
-- On Middle reduce production restrictedCharacterStringValue -> tuple
-- On LessThan reduce production restrictedCharacterStringValue -> tuple
-- On INTERSECTION reduce production restrictedCharacterStringValue -> tuple
-- On EXCEPT reduce production restrictedCharacterStringValue -> tuple
-- On DoubleDot reduce production restrictedCharacterStringValue -> tuple
-- On Comma reduce production restrictedCharacterStringValue -> tuple
-- On Circumflex reduce production restrictedCharacterStringValue -> tuple

State 360:
## Known stack suffix:
## LeftBrace tableColumn
## LR(1) items:
tuple -> LeftBrace tableColumn . Comma tableRow RightBrace [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
## Transitions:
-- On Comma shift to state 361
## Reductions:

State 361:
## Known stack suffix:
## LeftBrace tableColumn Comma
## LR(1) items:
tuple -> LeftBrace tableColumn Comma . tableRow RightBrace [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
## Transitions:
-- On Number shift to state 362
-- On tableRow shift to state 363
## Reductions:

State 362:
## Known stack suffix:
## Number
## LR(1) items:
tableRow -> Number . [ RightBrace ]
## Transitions:
## Reductions:
-- On RightBrace reduce production tableRow -> Number

State 363:
## Known stack suffix:
## LeftBrace tableColumn Comma tableRow
## LR(1) items:
tuple -> LeftBrace tableColumn Comma tableRow . RightBrace [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
## Transitions:
-- On RightBrace shift to state 364
## Reductions:

State 364:
## Known stack suffix:
## LeftBrace tableColumn Comma tableRow RightBrace
## LR(1) items:
tuple -> LeftBrace tableColumn Comma tableRow RightBrace . [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
## Transitions:
## Reductions:
-- On Upper reduce production tuple -> LeftBrace tableColumn Comma tableRow RightBrace
-- On UNION reduce production tuple -> LeftBrace tableColumn Comma tableRow RightBrace
-- On RightParen reduce production tuple -> LeftBrace tableColumn Comma tableRow RightBrace
-- On RightDoubleBracket reduce production tuple -> LeftBrace tableColumn Comma tableRow RightBrace
-- On RightBrace reduce production tuple -> LeftBrace tableColumn Comma tableRow RightBrace
-- On Middle reduce production tuple -> LeftBrace tableColumn Comma tableRow RightBrace
-- On Lower reduce production tuple -> LeftBrace tableColumn Comma tableRow RightBrace
-- On LessThan reduce production tuple -> LeftBrace tableColumn Comma tableRow RightBrace
-- On INTERSECTION reduce production tuple -> LeftBrace tableColumn Comma tableRow RightBrace
-- On EXCEPT reduce production tuple -> LeftBrace tableColumn Comma tableRow RightBrace
-- On END reduce production tuple -> LeftBrace tableColumn Comma tableRow RightBrace
-- On DoubleDot reduce production tuple -> LeftBrace tableColumn Comma tableRow RightBrace
-- On Comma reduce production tuple -> LeftBrace tableColumn Comma tableRow RightBrace
-- On Circumflex reduce production tuple -> LeftBrace tableColumn Comma tableRow RightBrace
-- On Bang reduce production tuple -> LeftBrace tableColumn Comma tableRow RightBrace

State 365:
## Known stack suffix:
## LeftBrace relativeOIDComponentsList
## LR(1) items:
relativeOIDValue -> LeftBrace relativeOIDComponentsList . RightBrace [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
## Transitions:
-- On RightBrace shift to state 366
## Reductions:

State 366:
## Known stack suffix:
## LeftBrace relativeOIDComponentsList RightBrace
## LR(1) items:
relativeOIDValue -> LeftBrace relativeOIDComponentsList RightBrace . [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
## Transitions:
## Reductions:
-- On Upper reduce production relativeOIDValue -> LeftBrace relativeOIDComponentsList RightBrace
-- On UNION reduce production relativeOIDValue -> LeftBrace relativeOIDComponentsList RightBrace
-- On RightParen reduce production relativeOIDValue -> LeftBrace relativeOIDComponentsList RightBrace
-- On RightDoubleBracket reduce production relativeOIDValue -> LeftBrace relativeOIDComponentsList RightBrace
-- On RightBrace reduce production relativeOIDValue -> LeftBrace relativeOIDComponentsList RightBrace
-- On Middle reduce production relativeOIDValue -> LeftBrace relativeOIDComponentsList RightBrace
-- On Lower reduce production relativeOIDValue -> LeftBrace relativeOIDComponentsList RightBrace
-- On LessThan reduce production relativeOIDValue -> LeftBrace relativeOIDComponentsList RightBrace
-- On INTERSECTION reduce production relativeOIDValue -> LeftBrace relativeOIDComponentsList RightBrace
-- On EXCEPT reduce production relativeOIDValue -> LeftBrace relativeOIDComponentsList RightBrace
-- On END reduce production relativeOIDValue -> LeftBrace relativeOIDComponentsList RightBrace
-- On DoubleDot reduce production relativeOIDValue -> LeftBrace relativeOIDComponentsList RightBrace
-- On Comma reduce production relativeOIDValue -> LeftBrace relativeOIDComponentsList RightBrace
-- On Circumflex reduce production relativeOIDValue -> LeftBrace relativeOIDComponentsList RightBrace
-- On Bang reduce production relativeOIDValue -> LeftBrace relativeOIDComponentsList RightBrace

State 367:
## Known stack suffix:
## relativeOIDComponents
## LR(1) items:
relativeOIDComponentsList -> relativeOIDComponents . [ RightBrace ]
relativeOIDComponentsList -> relativeOIDComponents . relativeOIDComponentsList [ RightBrace ]
## Transitions:
-- On Upper shift to state 56
-- On Number shift to state 61
-- On Lower shift to state 368
-- On simpleDefinedValue shift to state 64
-- On relativeOIDComponentsList shift to state 369
-- On relativeOIDComponents shift to state 367
-- On parameterizedValue shift to state 135
-- On numberForm shift to state 370
-- On nameAndNumberForm shift to state 371
-- On externalValueReference shift to state 136
-- On definedValue shift to state 372
## Reductions:
-- On RightBrace reduce production relativeOIDComponentsList -> relativeOIDComponents

State 368:
## Known stack suffix:
## Lower
## LR(1) items:
definedValue -> Lower . [ Upper RightBrace Number Lower ]
nameAndNumberForm -> Lower . LeftParen numberForm RightParen [ Upper RightBrace Number Lower ]
simpleDefinedValue -> Lower . [ LeftBrace ]
## Transitions:
-- On LeftParen shift to state 63
## Reductions:
-- On Upper reduce production definedValue -> Lower
-- On RightBrace reduce production definedValue -> Lower
-- On Number reduce production definedValue -> Lower
-- On Lower reduce production definedValue -> Lower
-- On LeftBrace reduce production simpleDefinedValue -> Lower

State 369:
## Known stack suffix:
## relativeOIDComponents relativeOIDComponentsList
## LR(1) items:
relativeOIDComponentsList -> relativeOIDComponents relativeOIDComponentsList . [ RightBrace ]
## Transitions:
## Reductions:
-- On RightBrace reduce production relativeOIDComponentsList -> relativeOIDComponents relativeOIDComponentsList

State 370:
## Known stack suffix:
## numberForm
## LR(1) items:
relativeOIDComponents -> numberForm . [ Upper RightBrace Number Lower ]
## Transitions:
## Reductions:
-- On Upper reduce production relativeOIDComponents -> numberForm
-- On RightBrace reduce production relativeOIDComponents -> numberForm
-- On Number reduce production relativeOIDComponents -> numberForm
-- On Lower reduce production relativeOIDComponents -> numberForm

State 371:
## Known stack suffix:
## nameAndNumberForm
## LR(1) items:
relativeOIDComponents -> nameAndNumberForm . [ Upper RightBrace Number Lower ]
## Transitions:
## Reductions:
-- On Upper reduce production relativeOIDComponents -> nameAndNumberForm
-- On RightBrace reduce production relativeOIDComponents -> nameAndNumberForm
-- On Number reduce production relativeOIDComponents -> nameAndNumberForm
-- On Lower reduce production relativeOIDComponents -> nameAndNumberForm

State 372:
## Known stack suffix:
## definedValue
## LR(1) items:
numberForm -> definedValue . [ Upper RightBrace Number Lower ]
relativeOIDComponents -> definedValue . [ Upper RightBrace Number Lower ]
## Transitions:
## Reductions:
-- On Upper reduce production numberForm -> definedValue
-- On RightBrace reduce production numberForm -> definedValue
-- On Number reduce production numberForm -> definedValue
-- On Lower reduce production numberForm -> definedValue

State 373:
## Known stack suffix:
## quadruple
## LR(1) items:
charsDefn -> quadruple . [ RightBrace Comma ]
restrictedCharacterStringValue -> quadruple . [ UNION RightBrace Middle LessThan INTERSECTION EXCEPT DoubleDot Comma Circumflex ]
## Transitions:
## Reductions:
-- On UNION reduce production restrictedCharacterStringValue -> quadruple
-- On RightBrace reduce production restrictedCharacterStringValue -> quadruple
-- On Middle reduce production restrictedCharacterStringValue -> quadruple
-- On LessThan reduce production restrictedCharacterStringValue -> quadruple
-- On INTERSECTION reduce production restrictedCharacterStringValue -> quadruple
-- On EXCEPT reduce production restrictedCharacterStringValue -> quadruple
-- On DoubleDot reduce production restrictedCharacterStringValue -> quadruple
-- On Comma reduce production restrictedCharacterStringValue -> quadruple
-- On Circumflex reduce production restrictedCharacterStringValue -> quadruple

State 374:
## Known stack suffix:
## LeftBrace objIdComponentsList
## LR(1) items:
objectIdentifierValue -> LeftBrace objIdComponentsList . RightBrace [ Upper UNION SemiColon RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
## Transitions:
-- On RightBrace shift to state 375
## Reductions:

State 375:
## Known stack suffix:
## LeftBrace objIdComponentsList RightBrace
## LR(1) items:
objectIdentifierValue -> LeftBrace objIdComponentsList RightBrace . [ Upper UNION SemiColon RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
## Transitions:
## Reductions:
-- On Upper reduce production objectIdentifierValue -> LeftBrace objIdComponentsList RightBrace
-- On UNION reduce production objectIdentifierValue -> LeftBrace objIdComponentsList RightBrace
-- On SemiColon reduce production objectIdentifierValue -> LeftBrace objIdComponentsList RightBrace
-- On RightParen reduce production objectIdentifierValue -> LeftBrace objIdComponentsList RightBrace
-- On RightDoubleBracket reduce production objectIdentifierValue -> LeftBrace objIdComponentsList RightBrace
-- On RightBrace reduce production objectIdentifierValue -> LeftBrace objIdComponentsList RightBrace
-- On Middle reduce production objectIdentifierValue -> LeftBrace objIdComponentsList RightBrace
-- On Lower reduce production objectIdentifierValue -> LeftBrace objIdComponentsList RightBrace
-- On LessThan reduce production objectIdentifierValue -> LeftBrace objIdComponentsList RightBrace
-- On INTERSECTION reduce production objectIdentifierValue -> LeftBrace objIdComponentsList RightBrace
-- On EXCEPT reduce production objectIdentifierValue -> LeftBrace objIdComponentsList RightBrace
-- On END reduce production objectIdentifierValue -> LeftBrace objIdComponentsList RightBrace
-- On DoubleDot reduce production objectIdentifierValue -> LeftBrace objIdComponentsList RightBrace
-- On Comma reduce production objectIdentifierValue -> LeftBrace objIdComponentsList RightBrace
-- On Circumflex reduce production objectIdentifierValue -> LeftBrace objIdComponentsList RightBrace
-- On Bang reduce production objectIdentifierValue -> LeftBrace objIdComponentsList RightBrace

State 376:
## Known stack suffix:
## objIdComponents
## LR(1) items:
objIdComponentsList -> objIdComponents . [ RightBrace ]
objIdComponentsList -> objIdComponents . objIdComponentsList [ RightBrace ]
## Transitions:
-- On Upper shift to state 56
-- On Number shift to state 61
-- On Lower shift to state 62
-- On simpleDefinedValue shift to state 64
-- On parameterizedValue shift to state 135
-- On objIdComponentsList shift to state 377
-- On objIdComponents shift to state 376
-- On numberForm shift to state 378
-- On nameForm shift to state 379
-- On nameAndNumberForm shift to state 380
-- On externalValueReference shift to state 136
-- On definedValue shift to state 381
## Reductions:
-- On RightBrace reduce production objIdComponentsList -> objIdComponents

State 377:
## Known stack suffix:
## objIdComponents objIdComponentsList
## LR(1) items:
objIdComponentsList -> objIdComponents objIdComponentsList . [ RightBrace ]
## Transitions:
## Reductions:
-- On RightBrace reduce production objIdComponentsList -> objIdComponents objIdComponentsList

State 378:
## Known stack suffix:
## numberForm
## LR(1) items:
objIdComponents -> numberForm . [ Upper RightBrace Number Lower ]
## Transitions:
## Reductions:
-- On Upper reduce production objIdComponents -> numberForm
-- On RightBrace reduce production objIdComponents -> numberForm
-- On Number reduce production objIdComponents -> numberForm
-- On Lower reduce production objIdComponents -> numberForm

State 379:
## Known stack suffix:
## nameForm
## LR(1) items:
objIdComponents -> nameForm . [ Upper RightBrace Number Lower ]
## Transitions:
## Reductions:
-- On Upper reduce production objIdComponents -> nameForm
-- On RightBrace reduce production objIdComponents -> nameForm
-- On Number reduce production objIdComponents -> nameForm
-- On Lower reduce production objIdComponents -> nameForm

State 380:
## Known stack suffix:
## nameAndNumberForm
## LR(1) items:
objIdComponents -> nameAndNumberForm . [ Upper RightBrace Number Lower ]
## Transitions:
## Reductions:
-- On Upper reduce production objIdComponents -> nameAndNumberForm
-- On RightBrace reduce production objIdComponents -> nameAndNumberForm
-- On Number reduce production objIdComponents -> nameAndNumberForm
-- On Lower reduce production objIdComponents -> nameAndNumberForm

State 381:
## Known stack suffix:
## definedValue
## LR(1) items:
numberForm -> definedValue . [ Upper RightBrace Number Lower ]
objIdComponents -> definedValue . [ Upper RightBrace Number Lower ]
## Transitions:
## Reductions:
-- On Upper reduce production objIdComponents -> definedValue
-- On RightBrace reduce production objIdComponents -> definedValue
-- On Number reduce production objIdComponents -> definedValue
-- On Lower reduce production objIdComponents -> definedValue

State 382:
## Known stack suffix:
## numberForm
## LR(1) items:
objIdComponents -> numberForm . [ Upper RightBrace Number Lower ]
relativeOIDComponents -> numberForm . [ Upper RightBrace Number Lower ]
## Transitions:
## Reductions:
-- On Upper reduce production objIdComponents -> numberForm
-- On RightBrace reduce production objIdComponents -> numberForm
-- On Number reduce production objIdComponents -> numberForm
-- On Lower reduce production objIdComponents -> numberForm

State 383:
## Known stack suffix:
## LeftBrace namedValueList
## LR(1) items:
namedValueList -> namedValueList . Comma namedValue [ RightBrace Comma ]
sequenceOfValue -> LeftBrace namedValueList . RightBrace [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
setOfValue -> LeftBrace namedValueList . RightBrace [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
## Transitions:
-- On RightBrace shift to state 384
-- On Comma shift to state 385
## Reductions:

State 384:
## Known stack suffix:
## LeftBrace namedValueList RightBrace
## LR(1) items:
sequenceOfValue -> LeftBrace namedValueList RightBrace . [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
setOfValue -> LeftBrace namedValueList RightBrace . [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
## Transitions:
## Reductions:
-- On Upper reduce production sequenceOfValue -> LeftBrace namedValueList RightBrace
-- On UNION reduce production sequenceOfValue -> LeftBrace namedValueList RightBrace
-- On RightParen reduce production sequenceOfValue -> LeftBrace namedValueList RightBrace
-- On RightDoubleBracket reduce production sequenceOfValue -> LeftBrace namedValueList RightBrace
-- On RightBrace reduce production sequenceOfValue -> LeftBrace namedValueList RightBrace
-- On Middle reduce production sequenceOfValue -> LeftBrace namedValueList RightBrace
-- On Lower reduce production sequenceOfValue -> LeftBrace namedValueList RightBrace
-- On LessThan reduce production sequenceOfValue -> LeftBrace namedValueList RightBrace
-- On INTERSECTION reduce production sequenceOfValue -> LeftBrace namedValueList RightBrace
-- On EXCEPT reduce production sequenceOfValue -> LeftBrace namedValueList RightBrace
-- On END reduce production sequenceOfValue -> LeftBrace namedValueList RightBrace
-- On DoubleDot reduce production sequenceOfValue -> LeftBrace namedValueList RightBrace
-- On Comma reduce production sequenceOfValue -> LeftBrace namedValueList RightBrace
-- On Circumflex reduce production sequenceOfValue -> LeftBrace namedValueList RightBrace
-- On Bang reduce production sequenceOfValue -> LeftBrace namedValueList RightBrace

State 385:
## Known stack suffix:
## namedValueList Comma
## LR(1) items:
namedValueList -> namedValueList Comma . namedValue [ RightBrace Comma ]
## Transitions:
-- On Lower shift to state 386
-- On namedValue shift to state 387
## Reductions:

State 386:
## Known stack suffix:
## Lower
## LR(1) items:
namedValue -> Lower . value [ RightBrace Comma ]
## Transitions:
-- On VisibleString shift to state 66
-- On VideotexString shift to state 67
-- On Upper shift to state 108
-- On UniversalString shift to state 72
-- On UTF8String shift to state 73
-- On UTCTime shift to state 74
-- On TeletexString shift to state 75
-- On TYPE_IDENTIFIER shift to state 76
-- On TRUE shift to state 77
-- On T61String shift to state 78
-- On SET shift to state 79
-- On SEQUENCE shift to state 111
-- On RealNumber shift to state 296
-- On RELATIVE_OID shift to state 116
-- On REAL shift to state 117
-- On PrintableString shift to state 118
-- On PLUS_INFINITY shift to state 297
-- On ObjectDescriptor shift to state 119
-- On OCTET shift to state 120
-- On OBJECT shift to state 122
-- On NumericString shift to state 124
-- On Number shift to state 145
-- On NULL shift to state 298
-- On MINUS_INFINITY shift to state 299
-- On Lower shift to state 300
-- On LeftBracket shift to state 129
-- On LeftBrace shift to state 302
-- On ISO646String shift to state 140
-- On INTEGER shift to state 141
-- On INSTANCE shift to state 157
-- On IA5String shift to state 166
-- On Hyphen shift to state 306
-- On Hstring shift to state 308
-- On GraphicString shift to state 167
-- On GeneralizedTime shift to state 168
-- On GeneralString shift to state 169
-- On FALSE shift to state 309
-- On EXTERNAL shift to state 170
-- On ENUMERATED shift to state 171
-- On EMBEDDED shift to state 179
-- On Cstring shift to state 310
-- On CONTAINING shift to state 311
-- On CHOICE shift to state 181
-- On CHARACTER shift to state 184
-- On Bstring shift to state 312
-- On BOOLEAN shift to state 186
-- On BMPString shift to state 187
-- On BIT shift to state 188
-- On ABSTRACT_SYNTAX shift to state 162
-- On valueSetFromObjects shift to state 202
-- On valueFromObject shift to state 313
-- On value shift to state 352
-- On usefulType shift to state 203
-- On usefulObjectClassReference shift to state 163
-- On unrestrictedCharacterStringValue shift to state 315
-- On unrestrictedCharacterStringType shift to state 204
-- On type_x shift to state 316
-- On typeWithConstraint shift to state 207
-- On typeFromObject shift to state 208
-- On tuple shift to state 319
-- On taggedType shift to state 209
-- On tag shift to state 210
-- On specialRealValue shift to state 320
-- On simpleDefinedValue shift to state 64
-- On simpleDefinedType shift to state 213
-- On signedNumber shift to state 321
-- On setValue shift to state 322
-- On setType shift to state 215
-- On setOfValue shift to state 323
-- On setOfType shift to state 216
-- On sequenceValue shift to state 324
-- On sequenceType shift to state 217
-- On sequenceOfValue shift to state 325
-- On sequenceOfType shift to state 218
-- On selectionType shift to state 219
-- On restrictedCharacterStringValue shift to state 326
-- On restrictedCharacterStringType shift to state 220
-- On relativeOIDValue shift to state 327
-- On relativeOIDType shift to state 221
-- On referencedValue shift to state 328
-- On referencedType shift to state 222
-- On referencedObjects shift to state 329
-- On realValue shift to state 332
-- On realType shift to state 232
-- On quadruple shift to state 333
-- On parameterizedValueSetType shift to state 233
-- On parameterizedValue shift to state 135
-- On parameterizedType shift to state 234
-- On parameterizedObjectSet shift to state 235
-- On parameterizedObject shift to state 236
-- On openTypeFieldVal shift to state 334
-- On octetStringValue shift to state 335
-- On octetStringType shift to state 237
-- On objectIdentifierValue shift to state 336
-- On objectIdentifierType shift to state 238
-- On objectClassFieldValue shift to state 337
-- On objectClassFieldType shift to state 239
-- On numericRealValue shift to state 338
-- On nullValue shift to state 339
-- On nullType shift to state 240
-- On integerValue shift to state 340
-- On integerType shift to state 241
-- On instanceOfType shift to state 242
-- On fixedTypeFieldVal shift to state 341
-- On externalValueReference shift to state 136
-- On externalValue shift to state 342
-- On externalTypeReference shift to state 243
-- On externalType shift to state 244
-- On externalObjectSetReference shift to state 245
-- On externalObjectReference shift to state 246
-- On externalObjectClassReference shift to state 164
-- On enumeratedValue shift to state 343
-- On enumeratedType shift to state 247
-- On embeddedPDVValue shift to state 344
-- On embeddedPDVType shift to state 248
-- On definedValue shift to state 345
-- On definedType shift to state 249
-- On definedObjectSet shift to state 250
-- On definedObjectClass shift to state 252
-- On definedObject shift to state 255
-- On constrainedType shift to state 257
-- On choiceValue shift to state 346
-- On choiceType shift to state 258
-- On characterStringValue shift to state 347
-- On characterStringType shift to state 259
-- On characterStringList shift to state 348
-- On builtinValue shift to state 349
-- On builtinType shift to state 260
-- On booleanValue shift to state 350
-- On booleanType shift to state 261
-- On bitStringValue shift to state 351
-- On bitStringType shift to state 262
## Reductions:

State 387:
## Known stack suffix:
## namedValueList Comma namedValue
## LR(1) items:
namedValueList -> namedValueList Comma namedValue . [ RightBrace Comma ]
## Transitions:
## Reductions:
-- On RightBrace reduce production namedValueList -> namedValueList Comma namedValue
-- On Comma reduce production namedValueList -> namedValueList Comma namedValue

State 388:
## Known stack suffix:
## namedValue
## LR(1) items:
componentValueList -> namedValue . [ RightBrace Comma ]
namedValueList -> namedValue . [ RightBrace Comma ]
## Transitions:
## Reductions:
-- On RightBrace reduce production componentValueList -> namedValue
-- On Comma reduce production componentValueList -> namedValue

State 389:
## Known stack suffix:
## nameAndNumberForm
## LR(1) items:
objIdComponents -> nameAndNumberForm . [ Upper RightBrace Number Lower ]
relativeOIDComponents -> nameAndNumberForm . [ Upper RightBrace Number Lower ]
## Transitions:
## Reductions:
-- On Upper reduce production objIdComponents -> nameAndNumberForm
-- On RightBrace reduce production objIdComponents -> nameAndNumberForm
-- On Number reduce production objIdComponents -> nameAndNumberForm
-- On Lower reduce production objIdComponents -> nameAndNumberForm

State 390:
## Known stack suffix:
## LeftBrace identifierList
## LR(1) items:
bitStringValue -> LeftBrace identifierList . RightBrace [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
identifierList -> identifierList . Comma Lower [ RightBrace Comma ]
## Transitions:
-- On RightBrace shift to state 391
-- On Comma shift to state 392
## Reductions:

State 391:
## Known stack suffix:
## LeftBrace identifierList RightBrace
## LR(1) items:
bitStringValue -> LeftBrace identifierList RightBrace . [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
## Transitions:
## Reductions:
-- On Upper reduce production bitStringValue -> LeftBrace identifierList RightBrace
-- On UNION reduce production bitStringValue -> LeftBrace identifierList RightBrace
-- On RightParen reduce production bitStringValue -> LeftBrace identifierList RightBrace
-- On RightDoubleBracket reduce production bitStringValue -> LeftBrace identifierList RightBrace
-- On RightBrace reduce production bitStringValue -> LeftBrace identifierList RightBrace
-- On Middle reduce production bitStringValue -> LeftBrace identifierList RightBrace
-- On Lower reduce production bitStringValue -> LeftBrace identifierList RightBrace
-- On LessThan reduce production bitStringValue -> LeftBrace identifierList RightBrace
-- On INTERSECTION reduce production bitStringValue -> LeftBrace identifierList RightBrace
-- On EXCEPT reduce production bitStringValue -> LeftBrace identifierList RightBrace
-- On END reduce production bitStringValue -> LeftBrace identifierList RightBrace
-- On DoubleDot reduce production bitStringValue -> LeftBrace identifierList RightBrace
-- On Comma reduce production bitStringValue -> LeftBrace identifierList RightBrace
-- On Circumflex reduce production bitStringValue -> LeftBrace identifierList RightBrace
-- On Bang reduce production bitStringValue -> LeftBrace identifierList RightBrace

State 392:
## Known stack suffix:
## identifierList Comma
## LR(1) items:
identifierList -> identifierList Comma . Lower [ RightBrace Comma ]
## Transitions:
-- On Lower shift to state 393
## Reductions:

State 393:
## Known stack suffix:
## identifierList Comma Lower
## LR(1) items:
identifierList -> identifierList Comma Lower . [ RightBrace Comma ]
## Transitions:
## Reductions:
-- On RightBrace reduce production identifierList -> identifierList Comma Lower
-- On Comma reduce production identifierList -> identifierList Comma Lower

State 394:
## Known stack suffix:
## LeftBrace group
## LR(1) items:
quadruple -> LeftBrace group . Comma plane Comma row Comma cell RightBrace [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
## Transitions:
-- On Comma shift to state 395
## Reductions:

State 395:
## Known stack suffix:
## LeftBrace group Comma
## LR(1) items:
quadruple -> LeftBrace group Comma . plane Comma row Comma cell RightBrace [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
## Transitions:
-- On Number shift to state 396
-- On plane shift to state 397
## Reductions:

State 396:
## Known stack suffix:
## Number
## LR(1) items:
plane -> Number . [ Comma ]
## Transitions:
## Reductions:
-- On Comma reduce production plane -> Number

State 397:
## Known stack suffix:
## LeftBrace group Comma plane
## LR(1) items:
quadruple -> LeftBrace group Comma plane . Comma row Comma cell RightBrace [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
## Transitions:
-- On Comma shift to state 398
## Reductions:

State 398:
## Known stack suffix:
## LeftBrace group Comma plane Comma
## LR(1) items:
quadruple -> LeftBrace group Comma plane Comma . row Comma cell RightBrace [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
## Transitions:
-- On Number shift to state 399
-- On row shift to state 400
## Reductions:

State 399:
## Known stack suffix:
## Number
## LR(1) items:
row -> Number . [ Comma ]
## Transitions:
## Reductions:
-- On Comma reduce production row -> Number

State 400:
## Known stack suffix:
## LeftBrace group Comma plane Comma row
## LR(1) items:
quadruple -> LeftBrace group Comma plane Comma row . Comma cell RightBrace [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
## Transitions:
-- On Comma shift to state 401
## Reductions:

State 401:
## Known stack suffix:
## LeftBrace group Comma plane Comma row Comma
## LR(1) items:
quadruple -> LeftBrace group Comma plane Comma row Comma . cell RightBrace [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
## Transitions:
-- On Number shift to state 402
-- On cell shift to state 403
## Reductions:

State 402:
## Known stack suffix:
## Number
## LR(1) items:
cell -> Number . [ RightBrace ]
## Transitions:
## Reductions:
-- On RightBrace reduce production cell -> Number

State 403:
## Known stack suffix:
## LeftBrace group Comma plane Comma row Comma cell
## LR(1) items:
quadruple -> LeftBrace group Comma plane Comma row Comma cell . RightBrace [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
## Transitions:
-- On RightBrace shift to state 404
## Reductions:

State 404:
## Known stack suffix:
## LeftBrace group Comma plane Comma row Comma cell RightBrace
## LR(1) items:
quadruple -> LeftBrace group Comma plane Comma row Comma cell RightBrace . [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
## Transitions:
## Reductions:
-- On Upper reduce production quadruple -> LeftBrace group Comma plane Comma row Comma cell RightBrace
-- On UNION reduce production quadruple -> LeftBrace group Comma plane Comma row Comma cell RightBrace
-- On RightParen reduce production quadruple -> LeftBrace group Comma plane Comma row Comma cell RightBrace
-- On RightDoubleBracket reduce production quadruple -> LeftBrace group Comma plane Comma row Comma cell RightBrace
-- On RightBrace reduce production quadruple -> LeftBrace group Comma plane Comma row Comma cell RightBrace
-- On Middle reduce production quadruple -> LeftBrace group Comma plane Comma row Comma cell RightBrace
-- On Lower reduce production quadruple -> LeftBrace group Comma plane Comma row Comma cell RightBrace
-- On LessThan reduce production quadruple -> LeftBrace group Comma plane Comma row Comma cell RightBrace
-- On INTERSECTION reduce production quadruple -> LeftBrace group Comma plane Comma row Comma cell RightBrace
-- On EXCEPT reduce production quadruple -> LeftBrace group Comma plane Comma row Comma cell RightBrace
-- On END reduce production quadruple -> LeftBrace group Comma plane Comma row Comma cell RightBrace
-- On DoubleDot reduce production quadruple -> LeftBrace group Comma plane Comma row Comma cell RightBrace
-- On Comma reduce production quadruple -> LeftBrace group Comma plane Comma row Comma cell RightBrace
-- On Circumflex reduce production quadruple -> LeftBrace group Comma plane Comma row Comma cell RightBrace
-- On Bang reduce production quadruple -> LeftBrace group Comma plane Comma row Comma cell RightBrace

State 405:
## Known stack suffix:
## LeftBrace definedValue
## LR(1) items:
charsDefn -> definedValue . [ RightBrace Comma ]
numberForm -> definedValue . [ Upper RightBrace Number Lower ]
objIdComponents -> definedValue . [ Upper RightBrace Number Lower ]
objectIdentifierValue -> LeftBrace definedValue . objIdComponentsList RightBrace [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
referencedValue -> definedValue . [ UNION RightBrace Middle LessThan INTERSECTION EXCEPT DoubleDot Comma Circumflex ]
relativeOIDComponents -> definedValue . [ Upper RightBrace Number Lower ]
## Transitions:
-- On Upper shift to state 56
-- On Number shift to state 61
-- On Lower shift to state 62
-- On simpleDefinedValue shift to state 64
-- On parameterizedValue shift to state 135
-- On objIdComponentsList shift to state 406
-- On objIdComponents shift to state 376
-- On numberForm shift to state 378
-- On nameForm shift to state 379
-- On nameAndNumberForm shift to state 380
-- On externalValueReference shift to state 136
-- On definedValue shift to state 381
## Reductions:
-- On UNION reduce production referencedValue -> definedValue
-- On RightBrace reduce production referencedValue -> definedValue
-- On Middle reduce production referencedValue -> definedValue
-- On LessThan reduce production referencedValue -> definedValue
-- On INTERSECTION reduce production referencedValue -> definedValue
-- On EXCEPT reduce production referencedValue -> definedValue
-- On DoubleDot reduce production referencedValue -> definedValue
-- On Comma reduce production referencedValue -> definedValue
-- On Circumflex reduce production referencedValue -> definedValue

State 406:
## Known stack suffix:
## LeftBrace definedValue objIdComponentsList
## LR(1) items:
objectIdentifierValue -> LeftBrace definedValue objIdComponentsList . RightBrace [ Upper UNION SemiColon RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
## Transitions:
-- On RightBrace shift to state 407
## Reductions:

State 407:
## Known stack suffix:
## LeftBrace definedValue objIdComponentsList RightBrace
## LR(1) items:
objectIdentifierValue -> LeftBrace definedValue objIdComponentsList RightBrace . [ Upper UNION SemiColon RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
## Transitions:
## Reductions:
-- On Upper reduce production objectIdentifierValue -> LeftBrace definedValue objIdComponentsList RightBrace
-- On UNION reduce production objectIdentifierValue -> LeftBrace definedValue objIdComponentsList RightBrace
-- On SemiColon reduce production objectIdentifierValue -> LeftBrace definedValue objIdComponentsList RightBrace
-- On RightParen reduce production objectIdentifierValue -> LeftBrace definedValue objIdComponentsList RightBrace
-- On RightDoubleBracket reduce production objectIdentifierValue -> LeftBrace definedValue objIdComponentsList RightBrace
-- On RightBrace reduce production objectIdentifierValue -> LeftBrace definedValue objIdComponentsList RightBrace
-- On Middle reduce production objectIdentifierValue -> LeftBrace definedValue objIdComponentsList RightBrace
-- On Lower reduce production objectIdentifierValue -> LeftBrace definedValue objIdComponentsList RightBrace
-- On LessThan reduce production objectIdentifierValue -> LeftBrace definedValue objIdComponentsList RightBrace
-- On INTERSECTION reduce production objectIdentifierValue -> LeftBrace definedValue objIdComponentsList RightBrace
-- On EXCEPT reduce production objectIdentifierValue -> LeftBrace definedValue objIdComponentsList RightBrace
-- On END reduce production objectIdentifierValue -> LeftBrace definedValue objIdComponentsList RightBrace
-- On DoubleDot reduce production objectIdentifierValue -> LeftBrace definedValue objIdComponentsList RightBrace
-- On Comma reduce production objectIdentifierValue -> LeftBrace definedValue objIdComponentsList RightBrace
-- On Circumflex reduce production objectIdentifierValue -> LeftBrace definedValue objIdComponentsList RightBrace
-- On Bang reduce production objectIdentifierValue -> LeftBrace definedValue objIdComponentsList RightBrace

State 408:
## Known stack suffix:
## LeftBrace componentValueList
## LR(1) items:
componentValueList -> componentValueList . Comma namedValue [ RightBrace Comma ]
sequenceValue -> LeftBrace componentValueList . RightBrace [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
setValue -> LeftBrace componentValueList . RightBrace [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
## Transitions:
-- On RightBrace shift to state 409
-- On Comma shift to state 410
## Reductions:

State 409:
## Known stack suffix:
## LeftBrace componentValueList RightBrace
## LR(1) items:
sequenceValue -> LeftBrace componentValueList RightBrace . [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
setValue -> LeftBrace componentValueList RightBrace . [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
## Transitions:
## Reductions:
-- On Upper reduce production sequenceValue -> LeftBrace componentValueList RightBrace
-- On UNION reduce production sequenceValue -> LeftBrace componentValueList RightBrace
-- On RightParen reduce production sequenceValue -> LeftBrace componentValueList RightBrace
-- On RightDoubleBracket reduce production sequenceValue -> LeftBrace componentValueList RightBrace
-- On RightBrace reduce production sequenceValue -> LeftBrace componentValueList RightBrace
-- On Middle reduce production sequenceValue -> LeftBrace componentValueList RightBrace
-- On Lower reduce production sequenceValue -> LeftBrace componentValueList RightBrace
-- On LessThan reduce production sequenceValue -> LeftBrace componentValueList RightBrace
-- On INTERSECTION reduce production sequenceValue -> LeftBrace componentValueList RightBrace
-- On EXCEPT reduce production sequenceValue -> LeftBrace componentValueList RightBrace
-- On END reduce production sequenceValue -> LeftBrace componentValueList RightBrace
-- On DoubleDot reduce production sequenceValue -> LeftBrace componentValueList RightBrace
-- On Comma reduce production sequenceValue -> LeftBrace componentValueList RightBrace
-- On Circumflex reduce production sequenceValue -> LeftBrace componentValueList RightBrace
-- On Bang reduce production sequenceValue -> LeftBrace componentValueList RightBrace

State 410:
## Known stack suffix:
## componentValueList Comma
## LR(1) items:
componentValueList -> componentValueList Comma . namedValue [ RightBrace Comma ]
## Transitions:
-- On Lower shift to state 386
-- On namedValue shift to state 411
## Reductions:

State 411:
## Known stack suffix:
## componentValueList Comma namedValue
## LR(1) items:
componentValueList -> componentValueList Comma namedValue . [ RightBrace Comma ]
## Transitions:
## Reductions:
-- On RightBrace reduce production componentValueList -> componentValueList Comma namedValue
-- On Comma reduce production componentValueList -> componentValueList Comma namedValue

State 412:
## Known stack suffix:
## charsDefn
## LR(1) items:
charSyms -> charsDefn . [ RightBrace Comma ]
## Transitions:
## Reductions:
-- On RightBrace reduce production charSyms -> charsDefn
-- On Comma reduce production charSyms -> charsDefn

State 413:
## Known stack suffix:
## LeftBrace charSyms
## LR(1) items:
charSyms -> charSyms . Comma charsDefn [ RightBrace Comma ]
characterStringList -> LeftBrace charSyms . RightBrace [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
## Transitions:
-- On RightBrace shift to state 414
-- On Comma shift to state 415
## Reductions:

State 414:
## Known stack suffix:
## LeftBrace charSyms RightBrace
## LR(1) items:
characterStringList -> LeftBrace charSyms RightBrace . [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
## Transitions:
## Reductions:
-- On Upper reduce production characterStringList -> LeftBrace charSyms RightBrace
-- On UNION reduce production characterStringList -> LeftBrace charSyms RightBrace
-- On RightParen reduce production characterStringList -> LeftBrace charSyms RightBrace
-- On RightDoubleBracket reduce production characterStringList -> LeftBrace charSyms RightBrace
-- On RightBrace reduce production characterStringList -> LeftBrace charSyms RightBrace
-- On Middle reduce production characterStringList -> LeftBrace charSyms RightBrace
-- On Lower reduce production characterStringList -> LeftBrace charSyms RightBrace
-- On LessThan reduce production characterStringList -> LeftBrace charSyms RightBrace
-- On INTERSECTION reduce production characterStringList -> LeftBrace charSyms RightBrace
-- On EXCEPT reduce production characterStringList -> LeftBrace charSyms RightBrace
-- On END reduce production characterStringList -> LeftBrace charSyms RightBrace
-- On DoubleDot reduce production characterStringList -> LeftBrace charSyms RightBrace
-- On Comma reduce production characterStringList -> LeftBrace charSyms RightBrace
-- On Circumflex reduce production characterStringList -> LeftBrace charSyms RightBrace
-- On Bang reduce production characterStringList -> LeftBrace charSyms RightBrace

State 415:
## Known stack suffix:
## charSyms Comma
## LR(1) items:
charSyms -> charSyms Comma . charsDefn [ RightBrace Comma ]
## Transitions:
-- On Upper shift to state 56
-- On Lower shift to state 59
-- On LeftBrace shift to state 416
-- On Cstring shift to state 418
-- On tuple shift to state 419
-- On simpleDefinedValue shift to state 64
-- On quadruple shift to state 420
-- On parameterizedValue shift to state 135
-- On externalValueReference shift to state 136
-- On definedValue shift to state 421
-- On charsDefn shift to state 422
## Reductions:

State 416:
## Known stack suffix:
## LeftBrace
## LR(1) items:
quadruple -> LeftBrace . group Comma plane Comma row Comma cell RightBrace [ RightBrace Comma ]
tuple -> LeftBrace . tableColumn Comma tableRow RightBrace [ RightBrace Comma ]
## Transitions:
-- On Number shift to state 417
-- On tableColumn shift to state 360
-- On group shift to state 394
## Reductions:

State 417:
## Known stack suffix:
## Number
## LR(1) items:
group -> Number . [ Comma ]
tableColumn -> Number . [ Comma ]
## Transitions:
## Reductions:
-- On Comma reduce production group -> Number

State 418:
## Known stack suffix:
## Cstring
## LR(1) items:
charsDefn -> Cstring . [ RightBrace Comma ]
## Transitions:
## Reductions:
-- On RightBrace reduce production charsDefn -> Cstring
-- On Comma reduce production charsDefn -> Cstring

State 419:
## Known stack suffix:
## tuple
## LR(1) items:
charsDefn -> tuple . [ RightBrace Comma ]
## Transitions:
## Reductions:
-- On RightBrace reduce production charsDefn -> tuple
-- On Comma reduce production charsDefn -> tuple

State 420:
## Known stack suffix:
## quadruple
## LR(1) items:
charsDefn -> quadruple . [ RightBrace Comma ]
## Transitions:
## Reductions:
-- On RightBrace reduce production charsDefn -> quadruple
-- On Comma reduce production charsDefn -> quadruple

State 421:
## Known stack suffix:
## definedValue
## LR(1) items:
charsDefn -> definedValue . [ RightBrace Comma ]
## Transitions:
## Reductions:
-- On RightBrace reduce production charsDefn -> definedValue
-- On Comma reduce production charsDefn -> definedValue

State 422:
## Known stack suffix:
## charSyms Comma charsDefn
## LR(1) items:
charSyms -> charSyms Comma charsDefn . [ RightBrace Comma ]
## Transitions:
## Reductions:
-- On RightBrace reduce production charSyms -> charSyms Comma charsDefn
-- On Comma reduce production charSyms -> charSyms Comma charsDefn

State 423:
## Known stack suffix:
## Lower Colon value
## LR(1) items:
choiceValue -> Lower Colon value . [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
## Transitions:
## Reductions:
-- On Upper reduce production choiceValue -> Lower Colon value
-- On UNION reduce production choiceValue -> Lower Colon value
-- On RightParen reduce production choiceValue -> Lower Colon value
-- On RightDoubleBracket reduce production choiceValue -> Lower Colon value
-- On RightBrace reduce production choiceValue -> Lower Colon value
-- On Middle reduce production choiceValue -> Lower Colon value
-- On Lower reduce production choiceValue -> Lower Colon value
-- On LessThan reduce production choiceValue -> Lower Colon value
-- On INTERSECTION reduce production choiceValue -> Lower Colon value
-- On EXCEPT reduce production choiceValue -> Lower Colon value
-- On END reduce production choiceValue -> Lower Colon value
-- On DoubleDot reduce production choiceValue -> Lower Colon value
-- On Comma reduce production choiceValue -> Lower Colon value
-- On Circumflex reduce production choiceValue -> Lower Colon value
-- On Bang reduce production choiceValue -> Lower Colon value

State 424:
## Known stack suffix:
## type_x Colon value
## LR(1) items:
exceptionIdentification -> type_x Colon value . [ RightParen RightBrace Comma ]
## Transitions:
## Reductions:
-- On RightParen reduce production exceptionIdentification -> type_x Colon value
-- On RightBrace reduce production exceptionIdentification -> type_x Colon value
-- On Comma reduce production exceptionIdentification -> type_x Colon value

State 425:
## Known stack suffix:
## signedNumber
## LR(1) items:
exceptionIdentification -> signedNumber . [ RightParen RightBrace Comma ]
## Transitions:
## Reductions:
-- On RightParen reduce production exceptionIdentification -> signedNumber
-- On RightBrace reduce production exceptionIdentification -> signedNumber
-- On Comma reduce production exceptionIdentification -> signedNumber

State 426:
## Known stack suffix:
## Bang exceptionIdentification
## LR(1) items:
exceptionSpec -> Bang exceptionIdentification . [ RightParen RightBrace Comma ]
## Transitions:
## Reductions:
-- On RightParen reduce production exceptionSpec -> Bang exceptionIdentification
-- On RightBrace reduce production exceptionSpec -> Bang exceptionIdentification
-- On Comma reduce production exceptionSpec -> Bang exceptionIdentification

State 427:
## Known stack suffix:
## definedValue
## LR(1) items:
exceptionIdentification -> definedValue . [ RightParen RightBrace Comma ]
## Transitions:
## Reductions:
-- On RightParen reduce production exceptionIdentification -> definedValue
-- On RightBrace reduce production exceptionIdentification -> definedValue
-- On Comma reduce production exceptionIdentification -> definedValue

State 428:
## Known stack suffix:
## rootEnumeration Comma Ellipsis exceptionSpec
## LR(1) items:
enumerations -> rootEnumeration Comma Ellipsis exceptionSpec . [ RightBrace ]
enumerations -> rootEnumeration Comma Ellipsis exceptionSpec . Comma additionalEnumeration [ RightBrace ]
## Transitions:
-- On Comma shift to state 429
## Reductions:
-- On RightBrace reduce production enumerations -> rootEnumeration Comma Ellipsis exceptionSpec

State 429:
## Known stack suffix:
## rootEnumeration Comma Ellipsis exceptionSpec Comma
## LR(1) items:
enumerations -> rootEnumeration Comma Ellipsis exceptionSpec Comma . additionalEnumeration [ RightBrace ]
## Transitions:
-- On Lower shift to state 173
-- On namedNumber shift to state 430
-- On enumerationItem shift to state 431
-- On enumeration shift to state 434
-- On additionalEnumeration shift to state 435
## Reductions:

State 430:
## Known stack suffix:
## namedNumber
## LR(1) items:
enumerationItem -> namedNumber . [ RightBrace Comma ]
## Transitions:
## Reductions:
-- On RightBrace reduce production enumerationItem -> namedNumber
-- On Comma reduce production enumerationItem -> namedNumber

State 431:
## Known stack suffix:
## enumerationItem
## LR(1) items:
enumeration -> enumerationItem . [ RightBrace Comma ]
enumeration -> enumerationItem . Comma enumeration [ RightBrace Comma ]
## Transitions:
-- On Comma shift to state 432
## Reductions:
-- On RightBrace reduce production enumeration -> enumerationItem

State 432:
## Known stack suffix:
## enumerationItem Comma
## LR(1) items:
enumeration -> enumerationItem Comma . enumeration [ RightBrace Comma ]
## Transitions:
-- On Lower shift to state 173
-- On namedNumber shift to state 430
-- On enumerationItem shift to state 431
-- On enumeration shift to state 433
## Reductions:

State 433:
## Known stack suffix:
## enumerationItem Comma enumeration
## LR(1) items:
enumeration -> enumerationItem Comma enumeration . [ RightBrace Comma ]
## Transitions:
## Reductions:
-- On RightBrace reduce production enumeration -> enumerationItem Comma enumeration
-- On Comma reduce production enumeration -> enumerationItem Comma enumeration

State 434:
## Known stack suffix:
## enumeration
## LR(1) items:
additionalEnumeration -> enumeration . [ RightBrace ]
## Transitions:
## Reductions:
-- On RightBrace reduce production additionalEnumeration -> enumeration

State 435:
## Known stack suffix:
## rootEnumeration Comma Ellipsis exceptionSpec Comma additionalEnumeration
## LR(1) items:
enumerations -> rootEnumeration Comma Ellipsis exceptionSpec Comma additionalEnumeration . [ RightBrace ]
## Transitions:
## Reductions:
-- On RightBrace reduce production enumerations -> rootEnumeration Comma Ellipsis exceptionSpec Comma additionalEnumeration

State 436:
## Known stack suffix:
## ENUMERATED LeftBrace enumerations
## LR(1) items:
enumeratedType -> ENUMERATED LeftBrace enumerations . RightBrace [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
-- On RightBrace shift to state 437
## Reductions:

State 437:
## Known stack suffix:
## ENUMERATED LeftBrace enumerations RightBrace
## LR(1) items:
enumeratedType -> ENUMERATED LeftBrace enumerations RightBrace . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
## Reductions:
-- On Upper reduce production enumeratedType -> ENUMERATED LeftBrace enumerations RightBrace
-- On UNIQUE reduce production enumeratedType -> ENUMERATED LeftBrace enumerations RightBrace
-- On UNION reduce production enumeratedType -> ENUMERATED LeftBrace enumerations RightBrace
-- On RightParen reduce production enumeratedType -> ENUMERATED LeftBrace enumerations RightBrace
-- On RightDoubleBracket reduce production enumeratedType -> ENUMERATED LeftBrace enumerations RightBrace
-- On RightBrace reduce production enumeratedType -> ENUMERATED LeftBrace enumerations RightBrace
-- On OPTIONAL reduce production enumeratedType -> ENUMERATED LeftBrace enumerations RightBrace
-- On Middle reduce production enumeratedType -> ENUMERATED LeftBrace enumerations RightBrace
-- On Lower reduce production enumeratedType -> ENUMERATED LeftBrace enumerations RightBrace
-- On LeftParen reduce production enumeratedType -> ENUMERATED LeftBrace enumerations RightBrace
-- On INTERSECTION reduce production enumeratedType -> ENUMERATED LeftBrace enumerations RightBrace
-- On EXCEPT reduce production enumeratedType -> ENUMERATED LeftBrace enumerations RightBrace
-- On END reduce production enumeratedType -> ENUMERATED LeftBrace enumerations RightBrace
-- On ENCODED reduce production enumeratedType -> ENUMERATED LeftBrace enumerations RightBrace
-- On DEFAULT reduce production enumeratedType -> ENUMERATED LeftBrace enumerations RightBrace
-- On Comma reduce production enumeratedType -> ENUMERATED LeftBrace enumerations RightBrace
-- On Colon reduce production enumeratedType -> ENUMERATED LeftBrace enumerations RightBrace
-- On Circumflex reduce production enumeratedType -> ENUMERATED LeftBrace enumerations RightBrace
-- On Bang reduce production enumeratedType -> ENUMERATED LeftBrace enumerations RightBrace
-- On Assignment reduce production enumeratedType -> ENUMERATED LeftBrace enumerations RightBrace

State 438:
## Known stack suffix:
## enumeration
## LR(1) items:
rootEnumeration -> enumeration . [ RightBrace Comma ]
## Transitions:
## Reductions:
-- On RightBrace reduce production rootEnumeration -> enumeration
-- On Comma reduce production rootEnumeration -> enumeration

State 439:
## Known stack suffix:
## Lower LessThan type_x
## LR(1) items:
constrainedType -> type_x . constraint_x [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
selectionType -> Lower LessThan type_x . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
-- On LeftParen shift to state 81
-- On constraint_x shift to state 206
## Reductions:
-- On Upper reduce production selectionType -> Lower LessThan type_x
-- On UNIQUE reduce production selectionType -> Lower LessThan type_x
-- On UNION reduce production selectionType -> Lower LessThan type_x
-- On RightParen reduce production selectionType -> Lower LessThan type_x
-- On RightDoubleBracket reduce production selectionType -> Lower LessThan type_x
-- On RightBrace reduce production selectionType -> Lower LessThan type_x
-- On OPTIONAL reduce production selectionType -> Lower LessThan type_x
-- On Middle reduce production selectionType -> Lower LessThan type_x
-- On Lower reduce production selectionType -> Lower LessThan type_x
-- On INTERSECTION reduce production selectionType -> Lower LessThan type_x
-- On EXCEPT reduce production selectionType -> Lower LessThan type_x
-- On END reduce production selectionType -> Lower LessThan type_x
-- On ENCODED reduce production selectionType -> Lower LessThan type_x
-- On DEFAULT reduce production selectionType -> Lower LessThan type_x
-- On Comma reduce production selectionType -> Lower LessThan type_x
-- On Colon reduce production selectionType -> Lower LessThan type_x
-- On Circumflex reduce production selectionType -> Lower LessThan type_x
-- On Bang reduce production selectionType -> Lower LessThan type_x
-- On Assignment reduce production selectionType -> Lower LessThan type_x

State 440:
## Known stack suffix:
## SEQUENCE OF type_x
## LR(1) items:
constrainedType -> type_x . constraint_x [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
sequenceOfType -> SEQUENCE OF type_x . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
-- On LeftParen shift to state 81
-- On constraint_x shift to state 206
## Reductions:
-- On Upper reduce production sequenceOfType -> SEQUENCE OF type_x
-- On UNIQUE reduce production sequenceOfType -> SEQUENCE OF type_x
-- On UNION reduce production sequenceOfType -> SEQUENCE OF type_x
-- On RightParen reduce production sequenceOfType -> SEQUENCE OF type_x
-- On RightDoubleBracket reduce production sequenceOfType -> SEQUENCE OF type_x
-- On RightBrace reduce production sequenceOfType -> SEQUENCE OF type_x
-- On OPTIONAL reduce production sequenceOfType -> SEQUENCE OF type_x
-- On Middle reduce production sequenceOfType -> SEQUENCE OF type_x
-- On Lower reduce production sequenceOfType -> SEQUENCE OF type_x
-- On INTERSECTION reduce production sequenceOfType -> SEQUENCE OF type_x
-- On EXCEPT reduce production sequenceOfType -> SEQUENCE OF type_x
-- On END reduce production sequenceOfType -> SEQUENCE OF type_x
-- On ENCODED reduce production sequenceOfType -> SEQUENCE OF type_x
-- On DEFAULT reduce production sequenceOfType -> SEQUENCE OF type_x
-- On Comma reduce production sequenceOfType -> SEQUENCE OF type_x
-- On Colon reduce production sequenceOfType -> SEQUENCE OF type_x
-- On Circumflex reduce production sequenceOfType -> SEQUENCE OF type_x
-- On Bang reduce production sequenceOfType -> SEQUENCE OF type_x
-- On Assignment reduce production sequenceOfType -> SEQUENCE OF type_x

State 441:
## Known stack suffix:
## SEQUENCE OF namedType
## LR(1) items:
sequenceOfType -> SEQUENCE OF namedType . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
## Reductions:
-- On Upper reduce production sequenceOfType -> SEQUENCE OF namedType
-- On UNIQUE reduce production sequenceOfType -> SEQUENCE OF namedType
-- On UNION reduce production sequenceOfType -> SEQUENCE OF namedType
-- On RightParen reduce production sequenceOfType -> SEQUENCE OF namedType
-- On RightDoubleBracket reduce production sequenceOfType -> SEQUENCE OF namedType
-- On RightBrace reduce production sequenceOfType -> SEQUENCE OF namedType
-- On OPTIONAL reduce production sequenceOfType -> SEQUENCE OF namedType
-- On Middle reduce production sequenceOfType -> SEQUENCE OF namedType
-- On Lower reduce production sequenceOfType -> SEQUENCE OF namedType
-- On LeftParen reduce production sequenceOfType -> SEQUENCE OF namedType
-- On INTERSECTION reduce production sequenceOfType -> SEQUENCE OF namedType
-- On EXCEPT reduce production sequenceOfType -> SEQUENCE OF namedType
-- On END reduce production sequenceOfType -> SEQUENCE OF namedType
-- On ENCODED reduce production sequenceOfType -> SEQUENCE OF namedType
-- On DEFAULT reduce production sequenceOfType -> SEQUENCE OF namedType
-- On Comma reduce production sequenceOfType -> SEQUENCE OF namedType
-- On Colon reduce production sequenceOfType -> SEQUENCE OF namedType
-- On Circumflex reduce production sequenceOfType -> SEQUENCE OF namedType
-- On Bang reduce production sequenceOfType -> SEQUENCE OF namedType
-- On Assignment reduce production sequenceOfType -> SEQUENCE OF namedType

State 442:
## Known stack suffix:
## SEQUENCE LeftBrace
## LR(1) items:
sequenceType -> SEQUENCE LeftBrace . RightBrace [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
sequenceType -> SEQUENCE LeftBrace . extensionAndException optionalExtensionMarker RightBrace [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
sequenceType -> SEQUENCE LeftBrace . componentTypeLists RightBrace [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
-- On RightBrace shift to state 443
-- On Lower shift to state 183
-- On Ellipsis shift to state 268
-- On COMPONENTS shift to state 444
-- On rootComponentTypeList shift to state 447
-- On namedType shift to state 453
-- On extensionAndException shift to state 476
-- On componentTypeLists shift to state 485
-- On componentTypeList shift to state 475
-- On componentType shift to state 461
## Reductions:

State 443:
## Known stack suffix:
## SEQUENCE LeftBrace RightBrace
## LR(1) items:
sequenceType -> SEQUENCE LeftBrace RightBrace . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
## Reductions:
-- On Upper reduce production sequenceType -> SEQUENCE LeftBrace RightBrace
-- On UNIQUE reduce production sequenceType -> SEQUENCE LeftBrace RightBrace
-- On UNION reduce production sequenceType -> SEQUENCE LeftBrace RightBrace
-- On RightParen reduce production sequenceType -> SEQUENCE LeftBrace RightBrace
-- On RightDoubleBracket reduce production sequenceType -> SEQUENCE LeftBrace RightBrace
-- On RightBrace reduce production sequenceType -> SEQUENCE LeftBrace RightBrace
-- On OPTIONAL reduce production sequenceType -> SEQUENCE LeftBrace RightBrace
-- On Middle reduce production sequenceType -> SEQUENCE LeftBrace RightBrace
-- On Lower reduce production sequenceType -> SEQUENCE LeftBrace RightBrace
-- On LeftParen reduce production sequenceType -> SEQUENCE LeftBrace RightBrace
-- On INTERSECTION reduce production sequenceType -> SEQUENCE LeftBrace RightBrace
-- On EXCEPT reduce production sequenceType -> SEQUENCE LeftBrace RightBrace
-- On END reduce production sequenceType -> SEQUENCE LeftBrace RightBrace
-- On ENCODED reduce production sequenceType -> SEQUENCE LeftBrace RightBrace
-- On DEFAULT reduce production sequenceType -> SEQUENCE LeftBrace RightBrace
-- On Comma reduce production sequenceType -> SEQUENCE LeftBrace RightBrace
-- On Colon reduce production sequenceType -> SEQUENCE LeftBrace RightBrace
-- On Circumflex reduce production sequenceType -> SEQUENCE LeftBrace RightBrace
-- On Bang reduce production sequenceType -> SEQUENCE LeftBrace RightBrace
-- On Assignment reduce production sequenceType -> SEQUENCE LeftBrace RightBrace

State 444:
## Known stack suffix:
## COMPONENTS
## LR(1) items:
componentType -> COMPONENTS . OF type_x [ RightDoubleBracket RightBrace Comma ]
## Transitions:
-- On OF shift to state 445
## Reductions:

State 445:
## Known stack suffix:
## COMPONENTS OF
## LR(1) items:
componentType -> COMPONENTS OF . type_x [ RightDoubleBracket RightBrace Comma ]
## Transitions:
-- On VisibleString shift to state 66
-- On VideotexString shift to state 67
-- On Upper shift to state 113
-- On UniversalString shift to state 72
-- On UTF8String shift to state 73
-- On UTCTime shift to state 74
-- On TeletexString shift to state 75
-- On TYPE_IDENTIFIER shift to state 76
-- On T61String shift to state 78
-- On SET shift to state 79
-- On SEQUENCE shift to state 111
-- On RELATIVE_OID shift to state 116
-- On REAL shift to state 117
-- On PrintableString shift to state 118
-- On ObjectDescriptor shift to state 119
-- On OCTET shift to state 120
-- On OBJECT shift to state 122
-- On NumericString shift to state 124
-- On NULL shift to state 125
-- On Lower shift to state 127
-- On LeftBracket shift to state 129
-- On ISO646String shift to state 140
-- On INTEGER shift to state 141
-- On INSTANCE shift to state 157
-- On IA5String shift to state 166
-- On GraphicString shift to state 167
-- On GeneralizedTime shift to state 168
-- On GeneralString shift to state 169
-- On EXTERNAL shift to state 170
-- On ENUMERATED shift to state 171
-- On EMBEDDED shift to state 179
-- On CHOICE shift to state 181
-- On CHARACTER shift to state 184
-- On BOOLEAN shift to state 186
-- On BMPString shift to state 187
-- On BIT shift to state 188
-- On ABSTRACT_SYNTAX shift to state 162
-- On valueSetFromObjects shift to state 202
-- On usefulType shift to state 203
-- On usefulObjectClassReference shift to state 163
-- On unrestrictedCharacterStringType shift to state 204
-- On type_x shift to state 446
-- On typeWithConstraint shift to state 207
-- On typeFromObject shift to state 208
-- On taggedType shift to state 209
-- On tag shift to state 210
-- On simpleDefinedType shift to state 213
-- On setType shift to state 215
-- On setOfType shift to state 216
-- On sequenceType shift to state 217
-- On sequenceOfType shift to state 218
-- On selectionType shift to state 219
-- On restrictedCharacterStringType shift to state 220
-- On relativeOIDType shift to state 221
-- On referencedType shift to state 222
-- On referencedObjects shift to state 223
-- On realType shift to state 232
-- On parameterizedValueSetType shift to state 233
-- On parameterizedType shift to state 234
-- On parameterizedObjectSet shift to state 235
-- On parameterizedObject shift to state 236
-- On octetStringType shift to state 237
-- On objectIdentifierType shift to state 238
-- On objectClassFieldType shift to state 239
-- On nullType shift to state 240
-- On integerType shift to state 241
-- On instanceOfType shift to state 242
-- On externalTypeReference shift to state 243
-- On externalType shift to state 244
-- On externalObjectSetReference shift to state 245
-- On externalObjectReference shift to state 246
-- On externalObjectClassReference shift to state 164
-- On enumeratedType shift to state 247
-- On embeddedPDVType shift to state 248
-- On definedType shift to state 249
-- On definedObjectSet shift to state 250
-- On definedObjectClass shift to state 252
-- On definedObject shift to state 255
-- On constrainedType shift to state 257
-- On choiceType shift to state 258
-- On characterStringType shift to state 259
-- On builtinType shift to state 260
-- On booleanType shift to state 261
-- On bitStringType shift to state 262
## Reductions:

State 446:
## Known stack suffix:
## COMPONENTS OF type_x
## LR(1) items:
componentType -> COMPONENTS OF type_x . [ RightDoubleBracket RightBrace Comma ]
constrainedType -> type_x . constraint_x [ RightDoubleBracket RightBrace LeftParen Comma ]
## Transitions:
-- On LeftParen shift to state 81
-- On constraint_x shift to state 206
## Reductions:
-- On RightDoubleBracket reduce production componentType -> COMPONENTS OF type_x
-- On RightBrace reduce production componentType -> COMPONENTS OF type_x
-- On Comma reduce production componentType -> COMPONENTS OF type_x

State 447:
## Known stack suffix:
## rootComponentTypeList
## LR(1) items:
componentTypeLists -> rootComponentTypeList . [ RightBrace ]
componentTypeLists -> rootComponentTypeList . Comma extensionAndException extensionAdditions optionalExtensionMarker [ RightBrace ]
componentTypeLists -> rootComponentTypeList . Comma extensionAndException extensionAdditions extensionEndMarker Comma rootComponentTypeList [ RightBrace ]
## Transitions:
-- On Comma shift to state 448
## Reductions:
-- On RightBrace reduce production componentTypeLists -> rootComponentTypeList

State 448:
## Known stack suffix:
## rootComponentTypeList Comma
## LR(1) items:
componentTypeLists -> rootComponentTypeList Comma . extensionAndException extensionAdditions optionalExtensionMarker [ RightBrace ]
componentTypeLists -> rootComponentTypeList Comma . extensionAndException extensionAdditions extensionEndMarker Comma rootComponentTypeList [ RightBrace ]
## Transitions:
-- On Ellipsis shift to state 268
-- On extensionAndException shift to state 449
## Reductions:

State 449:
## Known stack suffix:
## rootComponentTypeList Comma extensionAndException
## LR(1) items:
componentTypeLists -> rootComponentTypeList Comma extensionAndException . extensionAdditions optionalExtensionMarker [ RightBrace ]
componentTypeLists -> rootComponentTypeList Comma extensionAndException . extensionAdditions extensionEndMarker Comma rootComponentTypeList [ RightBrace ]
## Transitions:
-- On Comma shift to state 450
-- On extensionAdditions shift to state 468
## Reductions:
-- On RightBrace reduce production extensionAdditions ->

State 450:
## Known stack suffix:
## Comma
## LR(1) items:
extensionAdditions -> Comma . extensionAdditionList [ RightBrace Comma ]
## Transitions:
-- On Lower shift to state 183
-- On LeftDoubleBracket shift to state 451
-- On COMPONENTS shift to state 444
-- On namedType shift to state 453
-- On extensionAdditionList shift to state 462
-- On extensionAdditionGroup shift to state 464
-- On extensionAddition shift to state 467
-- On componentType shift to state 466
## Reductions:

State 451:
## Known stack suffix:
## LeftDoubleBracket
## LR(1) items:
extensionAdditionGroup -> LeftDoubleBracket . versionNumber componentTypeList RightDoubleBracket [ RightBrace Comma ]
## Transitions:
-- On Number shift to state 273
-- On versionNumber shift to state 452
## Reductions:
-- On Lower reduce production versionNumber ->
-- On COMPONENTS reduce production versionNumber ->

State 452:
## Known stack suffix:
## LeftDoubleBracket versionNumber
## LR(1) items:
extensionAdditionGroup -> LeftDoubleBracket versionNumber . componentTypeList RightDoubleBracket [ RightBrace Comma ]
## Transitions:
-- On Lower shift to state 183
-- On COMPONENTS shift to state 444
-- On namedType shift to state 453
-- On componentTypeList shift to state 457
-- On componentType shift to state 461
## Reductions:

State 453:
## Known stack suffix:
## namedType
## LR(1) items:
componentType -> namedType . [ RightDoubleBracket RightBrace Comma ]
componentType -> namedType . OPTIONAL [ RightDoubleBracket RightBrace Comma ]
componentType -> namedType . DEFAULT value [ RightDoubleBracket RightBrace Comma ]
## Transitions:
-- On OPTIONAL shift to state 454
-- On DEFAULT shift to state 455
## Reductions:
-- On RightDoubleBracket reduce production componentType -> namedType
-- On RightBrace reduce production componentType -> namedType
-- On Comma reduce production componentType -> namedType

State 454:
## Known stack suffix:
## namedType OPTIONAL
## LR(1) items:
componentType -> namedType OPTIONAL . [ RightDoubleBracket RightBrace Comma ]
## Transitions:
## Reductions:
-- On RightDoubleBracket reduce production componentType -> namedType OPTIONAL
-- On RightBrace reduce production componentType -> namedType OPTIONAL
-- On Comma reduce production componentType -> namedType OPTIONAL

State 455:
## Known stack suffix:
## namedType DEFAULT
## LR(1) items:
componentType -> namedType DEFAULT . value [ RightDoubleBracket RightBrace Comma ]
## Transitions:
-- On VisibleString shift to state 66
-- On VideotexString shift to state 67
-- On Upper shift to state 108
-- On UniversalString shift to state 72
-- On UTF8String shift to state 73
-- On UTCTime shift to state 74
-- On TeletexString shift to state 75
-- On TYPE_IDENTIFIER shift to state 76
-- On TRUE shift to state 77
-- On T61String shift to state 78
-- On SET shift to state 79
-- On SEQUENCE shift to state 111
-- On RealNumber shift to state 296
-- On RELATIVE_OID shift to state 116
-- On REAL shift to state 117
-- On PrintableString shift to state 118
-- On PLUS_INFINITY shift to state 297
-- On ObjectDescriptor shift to state 119
-- On OCTET shift to state 120
-- On OBJECT shift to state 122
-- On NumericString shift to state 124
-- On Number shift to state 145
-- On NULL shift to state 298
-- On MINUS_INFINITY shift to state 299
-- On Lower shift to state 300
-- On LeftBracket shift to state 129
-- On LeftBrace shift to state 302
-- On ISO646String shift to state 140
-- On INTEGER shift to state 141
-- On INSTANCE shift to state 157
-- On IA5String shift to state 166
-- On Hyphen shift to state 306
-- On Hstring shift to state 308
-- On GraphicString shift to state 167
-- On GeneralizedTime shift to state 168
-- On GeneralString shift to state 169
-- On FALSE shift to state 309
-- On EXTERNAL shift to state 170
-- On ENUMERATED shift to state 171
-- On EMBEDDED shift to state 179
-- On Cstring shift to state 310
-- On CONTAINING shift to state 311
-- On CHOICE shift to state 181
-- On CHARACTER shift to state 184
-- On Bstring shift to state 312
-- On BOOLEAN shift to state 186
-- On BMPString shift to state 187
-- On BIT shift to state 188
-- On ABSTRACT_SYNTAX shift to state 162
-- On valueSetFromObjects shift to state 202
-- On valueFromObject shift to state 313
-- On value shift to state 456
-- On usefulType shift to state 203
-- On usefulObjectClassReference shift to state 163
-- On unrestrictedCharacterStringValue shift to state 315
-- On unrestrictedCharacterStringType shift to state 204
-- On type_x shift to state 316
-- On typeWithConstraint shift to state 207
-- On typeFromObject shift to state 208
-- On tuple shift to state 319
-- On taggedType shift to state 209
-- On tag shift to state 210
-- On specialRealValue shift to state 320
-- On simpleDefinedValue shift to state 64
-- On simpleDefinedType shift to state 213
-- On signedNumber shift to state 321
-- On setValue shift to state 322
-- On setType shift to state 215
-- On setOfValue shift to state 323
-- On setOfType shift to state 216
-- On sequenceValue shift to state 324
-- On sequenceType shift to state 217
-- On sequenceOfValue shift to state 325
-- On sequenceOfType shift to state 218
-- On selectionType shift to state 219
-- On restrictedCharacterStringValue shift to state 326
-- On restrictedCharacterStringType shift to state 220
-- On relativeOIDValue shift to state 327
-- On relativeOIDType shift to state 221
-- On referencedValue shift to state 328
-- On referencedType shift to state 222
-- On referencedObjects shift to state 329
-- On realValue shift to state 332
-- On realType shift to state 232
-- On quadruple shift to state 333
-- On parameterizedValueSetType shift to state 233
-- On parameterizedValue shift to state 135
-- On parameterizedType shift to state 234
-- On parameterizedObjectSet shift to state 235
-- On parameterizedObject shift to state 236
-- On openTypeFieldVal shift to state 334
-- On octetStringValue shift to state 335
-- On octetStringType shift to state 237
-- On objectIdentifierValue shift to state 336
-- On objectIdentifierType shift to state 238
-- On objectClassFieldValue shift to state 337
-- On objectClassFieldType shift to state 239
-- On numericRealValue shift to state 338
-- On nullValue shift to state 339
-- On nullType shift to state 240
-- On integerValue shift to state 340
-- On integerType shift to state 241
-- On instanceOfType shift to state 242
-- On fixedTypeFieldVal shift to state 341
-- On externalValueReference shift to state 136
-- On externalValue shift to state 342
-- On externalTypeReference shift to state 243
-- On externalType shift to state 244
-- On externalObjectSetReference shift to state 245
-- On externalObjectReference shift to state 246
-- On externalObjectClassReference shift to state 164
-- On enumeratedValue shift to state 343
-- On enumeratedType shift to state 247
-- On embeddedPDVValue shift to state 344
-- On embeddedPDVType shift to state 248
-- On definedValue shift to state 345
-- On definedType shift to state 249
-- On definedObjectSet shift to state 250
-- On definedObjectClass shift to state 252
-- On definedObject shift to state 255
-- On constrainedType shift to state 257
-- On choiceValue shift to state 346
-- On choiceType shift to state 258
-- On characterStringValue shift to state 347
-- On characterStringType shift to state 259
-- On characterStringList shift to state 348
-- On builtinValue shift to state 349
-- On builtinType shift to state 260
-- On booleanValue shift to state 350
-- On booleanType shift to state 261
-- On bitStringValue shift to state 351
-- On bitStringType shift to state 262
## Reductions:

State 456:
## Known stack suffix:
## namedType DEFAULT value
## LR(1) items:
componentType -> namedType DEFAULT value . [ RightDoubleBracket RightBrace Comma ]
## Transitions:
## Reductions:
-- On RightDoubleBracket reduce production componentType -> namedType DEFAULT value
-- On RightBrace reduce production componentType -> namedType DEFAULT value
-- On Comma reduce production componentType -> namedType DEFAULT value

State 457:
## Known stack suffix:
## LeftDoubleBracket versionNumber componentTypeList
## LR(1) items:
componentTypeList -> componentTypeList . Comma componentType [ RightDoubleBracket Comma ]
extensionAdditionGroup -> LeftDoubleBracket versionNumber componentTypeList . RightDoubleBracket [ RightBrace Comma ]
## Transitions:
-- On RightDoubleBracket shift to state 458
-- On Comma shift to state 459
## Reductions:

State 458:
## Known stack suffix:
## LeftDoubleBracket versionNumber componentTypeList RightDoubleBracket
## LR(1) items:
extensionAdditionGroup -> LeftDoubleBracket versionNumber componentTypeList RightDoubleBracket . [ RightBrace Comma ]
## Transitions:
## Reductions:
-- On RightBrace reduce production extensionAdditionGroup -> LeftDoubleBracket versionNumber componentTypeList RightDoubleBracket
-- On Comma reduce production extensionAdditionGroup -> LeftDoubleBracket versionNumber componentTypeList RightDoubleBracket

State 459:
## Known stack suffix:
## componentTypeList Comma
## LR(1) items:
componentTypeList -> componentTypeList Comma . componentType [ RightDoubleBracket RightBrace Comma ]
## Transitions:
-- On Lower shift to state 183
-- On COMPONENTS shift to state 444
-- On namedType shift to state 453
-- On componentType shift to state 460
## Reductions:

State 460:
## Known stack suffix:
## componentTypeList Comma componentType
## LR(1) items:
componentTypeList -> componentTypeList Comma componentType . [ RightDoubleBracket RightBrace Comma ]
## Transitions:
## Reductions:
-- On RightDoubleBracket reduce production componentTypeList -> componentTypeList Comma componentType
-- On RightBrace reduce production componentTypeList -> componentTypeList Comma componentType
-- On Comma reduce production componentTypeList -> componentTypeList Comma componentType

State 461:
## Known stack suffix:
## componentType
## LR(1) items:
componentTypeList -> componentType . [ RightDoubleBracket RightBrace Comma ]
## Transitions:
## Reductions:
-- On RightDoubleBracket reduce production componentTypeList -> componentType
-- On RightBrace reduce production componentTypeList -> componentType
-- On Comma reduce production componentTypeList -> componentType

State 462:
## Known stack suffix:
## Comma extensionAdditionList
## LR(1) items:
extensionAdditionList -> extensionAdditionList . Comma extensionAddition [ RightBrace Comma ]
extensionAdditions -> Comma extensionAdditionList . [ RightBrace Comma ]
## Transitions:
-- On Comma shift to state 463
## Reductions:
-- On RightBrace reduce production extensionAdditions -> Comma extensionAdditionList

State 463:
## Known stack suffix:
## extensionAdditionList Comma
## LR(1) items:
extensionAdditionList -> extensionAdditionList Comma . extensionAddition [ RightBrace Comma ]
## Transitions:
-- On Lower shift to state 183
-- On LeftDoubleBracket shift to state 451
-- On COMPONENTS shift to state 444
-- On namedType shift to state 453
-- On extensionAdditionGroup shift to state 464
-- On extensionAddition shift to state 465
-- On componentType shift to state 466
## Reductions:

State 464:
## Known stack suffix:
## extensionAdditionGroup
## LR(1) items:
extensionAddition -> extensionAdditionGroup . [ RightBrace Comma ]
## Transitions:
## Reductions:
-- On RightBrace reduce production extensionAddition -> extensionAdditionGroup
-- On Comma reduce production extensionAddition -> extensionAdditionGroup

State 465:
## Known stack suffix:
## extensionAdditionList Comma extensionAddition
## LR(1) items:
extensionAdditionList -> extensionAdditionList Comma extensionAddition . [ RightBrace Comma ]
## Transitions:
## Reductions:
-- On RightBrace reduce production extensionAdditionList -> extensionAdditionList Comma extensionAddition
-- On Comma reduce production extensionAdditionList -> extensionAdditionList Comma extensionAddition

State 466:
## Known stack suffix:
## componentType
## LR(1) items:
extensionAddition -> componentType . [ RightBrace Comma ]
## Transitions:
## Reductions:
-- On RightBrace reduce production extensionAddition -> componentType
-- On Comma reduce production extensionAddition -> componentType

State 467:
## Known stack suffix:
## extensionAddition
## LR(1) items:
extensionAdditionList -> extensionAddition . [ RightBrace Comma ]
## Transitions:
## Reductions:
-- On RightBrace reduce production extensionAdditionList -> extensionAddition
-- On Comma reduce production extensionAdditionList -> extensionAddition

State 468:
## Known stack suffix:
## rootComponentTypeList Comma extensionAndException extensionAdditions
## LR(1) items:
componentTypeLists -> rootComponentTypeList Comma extensionAndException extensionAdditions . optionalExtensionMarker [ RightBrace ]
componentTypeLists -> rootComponentTypeList Comma extensionAndException extensionAdditions . extensionEndMarker Comma rootComponentTypeList [ RightBrace ]
## Transitions:
-- On Comma shift to state 469
-- On optionalExtensionMarker shift to state 471
-- On extensionEndMarker shift to state 472
## Reductions:
-- On RightBrace reduce production optionalExtensionMarker ->

State 469:
## Known stack suffix:
## Comma
## LR(1) items:
extensionEndMarker -> Comma . Ellipsis [ Comma ]
optionalExtensionMarker -> Comma . Ellipsis [ RightBrace ]
## Transitions:
-- On Ellipsis shift to state 470
## Reductions:

State 470:
## Known stack suffix:
## Comma Ellipsis
## LR(1) items:
extensionEndMarker -> Comma Ellipsis . [ Comma ]
optionalExtensionMarker -> Comma Ellipsis . [ RightBrace ]
## Transitions:
## Reductions:
-- On RightBrace reduce production optionalExtensionMarker -> Comma Ellipsis
-- On Comma reduce production extensionEndMarker -> Comma Ellipsis

State 471:
## Known stack suffix:
## rootComponentTypeList Comma extensionAndException extensionAdditions optionalExtensionMarker
## LR(1) items:
componentTypeLists -> rootComponentTypeList Comma extensionAndException extensionAdditions optionalExtensionMarker . [ RightBrace ]
## Transitions:
## Reductions:
-- On RightBrace reduce production componentTypeLists -> rootComponentTypeList Comma extensionAndException extensionAdditions optionalExtensionMarker

State 472:
## Known stack suffix:
## rootComponentTypeList Comma extensionAndException extensionAdditions extensionEndMarker
## LR(1) items:
componentTypeLists -> rootComponentTypeList Comma extensionAndException extensionAdditions extensionEndMarker . Comma rootComponentTypeList [ RightBrace ]
## Transitions:
-- On Comma shift to state 473
## Reductions:

State 473:
## Known stack suffix:
## rootComponentTypeList Comma extensionAndException extensionAdditions extensionEndMarker Comma
## LR(1) items:
componentTypeLists -> rootComponentTypeList Comma extensionAndException extensionAdditions extensionEndMarker Comma . rootComponentTypeList [ RightBrace ]
## Transitions:
-- On Lower shift to state 183
-- On COMPONENTS shift to state 444
-- On rootComponentTypeList shift to state 474
-- On namedType shift to state 453
-- On componentTypeList shift to state 475
-- On componentType shift to state 461
## Reductions:

State 474:
## Known stack suffix:
## rootComponentTypeList Comma extensionAndException extensionAdditions extensionEndMarker Comma rootComponentTypeList
## LR(1) items:
componentTypeLists -> rootComponentTypeList Comma extensionAndException extensionAdditions extensionEndMarker Comma rootComponentTypeList . [ RightBrace ]
## Transitions:
## Reductions:
-- On RightBrace reduce production componentTypeLists -> rootComponentTypeList Comma extensionAndException extensionAdditions extensionEndMarker Comma rootComponentTypeList

State 475:
## Known stack suffix:
## componentTypeList
## LR(1) items:
componentTypeList -> componentTypeList . Comma componentType [ RightBrace Comma ]
rootComponentTypeList -> componentTypeList . [ RightBrace Comma ]
## Transitions:
-- On Comma shift to state 459
## Reductions:
-- On RightBrace reduce production rootComponentTypeList -> componentTypeList

State 476:
## Known stack suffix:
## SEQUENCE LeftBrace extensionAndException
## LR(1) items:
componentTypeLists -> extensionAndException . extensionAdditions extensionEndMarker Comma rootComponentTypeList [ RightBrace ]
componentTypeLists -> extensionAndException . extensionAdditions optionalExtensionMarker [ RightBrace ]
sequenceType -> SEQUENCE LeftBrace extensionAndException . optionalExtensionMarker RightBrace [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
-- On Comma shift to state 477
-- On optionalExtensionMarker shift to state 478
-- On extensionAdditions shift to state 480
## Reductions:
-- On RightBrace reduce production optionalExtensionMarker ->

State 477:
## Known stack suffix:
## Comma
## LR(1) items:
extensionAdditions -> Comma . extensionAdditionList [ RightBrace Comma ]
optionalExtensionMarker -> Comma . Ellipsis [ RightBrace ]
## Transitions:
-- On Lower shift to state 183
-- On LeftDoubleBracket shift to state 451
-- On Ellipsis shift to state 289
-- On COMPONENTS shift to state 444
-- On namedType shift to state 453
-- On extensionAdditionList shift to state 462
-- On extensionAdditionGroup shift to state 464
-- On extensionAddition shift to state 467
-- On componentType shift to state 466
## Reductions:

State 478:
## Known stack suffix:
## SEQUENCE LeftBrace extensionAndException optionalExtensionMarker
## LR(1) items:
sequenceType -> SEQUENCE LeftBrace extensionAndException optionalExtensionMarker . RightBrace [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
-- On RightBrace shift to state 479
## Reductions:

State 479:
## Known stack suffix:
## SEQUENCE LeftBrace extensionAndException optionalExtensionMarker RightBrace
## LR(1) items:
sequenceType -> SEQUENCE LeftBrace extensionAndException optionalExtensionMarker RightBrace . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
## Reductions:
-- On Upper reduce production sequenceType -> SEQUENCE LeftBrace extensionAndException optionalExtensionMarker RightBrace
-- On UNIQUE reduce production sequenceType -> SEQUENCE LeftBrace extensionAndException optionalExtensionMarker RightBrace
-- On UNION reduce production sequenceType -> SEQUENCE LeftBrace extensionAndException optionalExtensionMarker RightBrace
-- On RightParen reduce production sequenceType -> SEQUENCE LeftBrace extensionAndException optionalExtensionMarker RightBrace
-- On RightDoubleBracket reduce production sequenceType -> SEQUENCE LeftBrace extensionAndException optionalExtensionMarker RightBrace
-- On RightBrace reduce production sequenceType -> SEQUENCE LeftBrace extensionAndException optionalExtensionMarker RightBrace
-- On OPTIONAL reduce production sequenceType -> SEQUENCE LeftBrace extensionAndException optionalExtensionMarker RightBrace
-- On Middle reduce production sequenceType -> SEQUENCE LeftBrace extensionAndException optionalExtensionMarker RightBrace
-- On Lower reduce production sequenceType -> SEQUENCE LeftBrace extensionAndException optionalExtensionMarker RightBrace
-- On LeftParen reduce production sequenceType -> SEQUENCE LeftBrace extensionAndException optionalExtensionMarker RightBrace
-- On INTERSECTION reduce production sequenceType -> SEQUENCE LeftBrace extensionAndException optionalExtensionMarker RightBrace
-- On EXCEPT reduce production sequenceType -> SEQUENCE LeftBrace extensionAndException optionalExtensionMarker RightBrace
-- On END reduce production sequenceType -> SEQUENCE LeftBrace extensionAndException optionalExtensionMarker RightBrace
-- On ENCODED reduce production sequenceType -> SEQUENCE LeftBrace extensionAndException optionalExtensionMarker RightBrace
-- On DEFAULT reduce production sequenceType -> SEQUENCE LeftBrace extensionAndException optionalExtensionMarker RightBrace
-- On Comma reduce production sequenceType -> SEQUENCE LeftBrace extensionAndException optionalExtensionMarker RightBrace
-- On Colon reduce production sequenceType -> SEQUENCE LeftBrace extensionAndException optionalExtensionMarker RightBrace
-- On Circumflex reduce production sequenceType -> SEQUENCE LeftBrace extensionAndException optionalExtensionMarker RightBrace
-- On Bang reduce production sequenceType -> SEQUENCE LeftBrace extensionAndException optionalExtensionMarker RightBrace
-- On Assignment reduce production sequenceType -> SEQUENCE LeftBrace extensionAndException optionalExtensionMarker RightBrace

State 480:
## Known stack suffix:
## extensionAndException extensionAdditions
## LR(1) items:
componentTypeLists -> extensionAndException extensionAdditions . extensionEndMarker Comma rootComponentTypeList [ RightBrace ]
componentTypeLists -> extensionAndException extensionAdditions . optionalExtensionMarker [ RightBrace ]
## Transitions:
-- On Comma shift to state 469
-- On optionalExtensionMarker shift to state 481
-- On extensionEndMarker shift to state 482
## Reductions:
-- On RightBrace reduce production optionalExtensionMarker ->

State 481:
## Known stack suffix:
## extensionAndException extensionAdditions optionalExtensionMarker
## LR(1) items:
componentTypeLists -> extensionAndException extensionAdditions optionalExtensionMarker . [ RightBrace ]
## Transitions:
## Reductions:
-- On RightBrace reduce production componentTypeLists -> extensionAndException extensionAdditions optionalExtensionMarker

State 482:
## Known stack suffix:
## extensionAndException extensionAdditions extensionEndMarker
## LR(1) items:
componentTypeLists -> extensionAndException extensionAdditions extensionEndMarker . Comma rootComponentTypeList [ RightBrace ]
## Transitions:
-- On Comma shift to state 483
## Reductions:

State 483:
## Known stack suffix:
## extensionAndException extensionAdditions extensionEndMarker Comma
## LR(1) items:
componentTypeLists -> extensionAndException extensionAdditions extensionEndMarker Comma . rootComponentTypeList [ RightBrace ]
## Transitions:
-- On Lower shift to state 183
-- On COMPONENTS shift to state 444
-- On rootComponentTypeList shift to state 484
-- On namedType shift to state 453
-- On componentTypeList shift to state 475
-- On componentType shift to state 461
## Reductions:

State 484:
## Known stack suffix:
## extensionAndException extensionAdditions extensionEndMarker Comma rootComponentTypeList
## LR(1) items:
componentTypeLists -> extensionAndException extensionAdditions extensionEndMarker Comma rootComponentTypeList . [ RightBrace ]
## Transitions:
## Reductions:
-- On RightBrace reduce production componentTypeLists -> extensionAndException extensionAdditions extensionEndMarker Comma rootComponentTypeList

State 485:
## Known stack suffix:
## SEQUENCE LeftBrace componentTypeLists
## LR(1) items:
sequenceType -> SEQUENCE LeftBrace componentTypeLists . RightBrace [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
-- On RightBrace shift to state 486
## Reductions:

State 486:
## Known stack suffix:
## SEQUENCE LeftBrace componentTypeLists RightBrace
## LR(1) items:
sequenceType -> SEQUENCE LeftBrace componentTypeLists RightBrace . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
## Reductions:
-- On Upper reduce production sequenceType -> SEQUENCE LeftBrace componentTypeLists RightBrace
-- On UNIQUE reduce production sequenceType -> SEQUENCE LeftBrace componentTypeLists RightBrace
-- On UNION reduce production sequenceType -> SEQUENCE LeftBrace componentTypeLists RightBrace
-- On RightParen reduce production sequenceType -> SEQUENCE LeftBrace componentTypeLists RightBrace
-- On RightDoubleBracket reduce production sequenceType -> SEQUENCE LeftBrace componentTypeLists RightBrace
-- On RightBrace reduce production sequenceType -> SEQUENCE LeftBrace componentTypeLists RightBrace
-- On OPTIONAL reduce production sequenceType -> SEQUENCE LeftBrace componentTypeLists RightBrace
-- On Middle reduce production sequenceType -> SEQUENCE LeftBrace componentTypeLists RightBrace
-- On Lower reduce production sequenceType -> SEQUENCE LeftBrace componentTypeLists RightBrace
-- On LeftParen reduce production sequenceType -> SEQUENCE LeftBrace componentTypeLists RightBrace
-- On INTERSECTION reduce production sequenceType -> SEQUENCE LeftBrace componentTypeLists RightBrace
-- On EXCEPT reduce production sequenceType -> SEQUENCE LeftBrace componentTypeLists RightBrace
-- On END reduce production sequenceType -> SEQUENCE LeftBrace componentTypeLists RightBrace
-- On ENCODED reduce production sequenceType -> SEQUENCE LeftBrace componentTypeLists RightBrace
-- On DEFAULT reduce production sequenceType -> SEQUENCE LeftBrace componentTypeLists RightBrace
-- On Comma reduce production sequenceType -> SEQUENCE LeftBrace componentTypeLists RightBrace
-- On Colon reduce production sequenceType -> SEQUENCE LeftBrace componentTypeLists RightBrace
-- On Circumflex reduce production sequenceType -> SEQUENCE LeftBrace componentTypeLists RightBrace
-- On Bang reduce production sequenceType -> SEQUENCE LeftBrace componentTypeLists RightBrace
-- On Assignment reduce production sequenceType -> SEQUENCE LeftBrace componentTypeLists RightBrace

State 487:
## Known stack suffix:
## SEQUENCE sizeConstraint
## LR(1) items:
typeWithConstraint -> SEQUENCE sizeConstraint . OF type_x [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
typeWithConstraint -> SEQUENCE sizeConstraint . OF namedType [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
-- On OF shift to state 488
## Reductions:

State 488:
## Known stack suffix:
## SEQUENCE sizeConstraint OF
## LR(1) items:
typeWithConstraint -> SEQUENCE sizeConstraint OF . type_x [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
typeWithConstraint -> SEQUENCE sizeConstraint OF . namedType [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
-- On VisibleString shift to state 66
-- On VideotexString shift to state 67
-- On Upper shift to state 113
-- On UniversalString shift to state 72
-- On UTF8String shift to state 73
-- On UTCTime shift to state 74
-- On TeletexString shift to state 75
-- On TYPE_IDENTIFIER shift to state 76
-- On T61String shift to state 78
-- On SET shift to state 79
-- On SEQUENCE shift to state 111
-- On RELATIVE_OID shift to state 116
-- On REAL shift to state 117
-- On PrintableString shift to state 118
-- On ObjectDescriptor shift to state 119
-- On OCTET shift to state 120
-- On OBJECT shift to state 122
-- On NumericString shift to state 124
-- On NULL shift to state 125
-- On Lower shift to state 126
-- On LeftBracket shift to state 129
-- On ISO646String shift to state 140
-- On INTEGER shift to state 141
-- On INSTANCE shift to state 157
-- On IA5String shift to state 166
-- On GraphicString shift to state 167
-- On GeneralizedTime shift to state 168
-- On GeneralString shift to state 169
-- On EXTERNAL shift to state 170
-- On ENUMERATED shift to state 171
-- On EMBEDDED shift to state 179
-- On CHOICE shift to state 181
-- On CHARACTER shift to state 184
-- On BOOLEAN shift to state 186
-- On BMPString shift to state 187
-- On BIT shift to state 188
-- On ABSTRACT_SYNTAX shift to state 162
-- On valueSetFromObjects shift to state 202
-- On usefulType shift to state 203
-- On usefulObjectClassReference shift to state 163
-- On unrestrictedCharacterStringType shift to state 204
-- On type_x shift to state 489
-- On typeWithConstraint shift to state 207
-- On typeFromObject shift to state 208
-- On taggedType shift to state 209
-- On tag shift to state 210
-- On simpleDefinedType shift to state 213
-- On setType shift to state 215
-- On setOfType shift to state 216
-- On sequenceType shift to state 217
-- On sequenceOfType shift to state 218
-- On selectionType shift to state 219
-- On restrictedCharacterStringType shift to state 220
-- On relativeOIDType shift to state 221
-- On referencedType shift to state 222
-- On referencedObjects shift to state 223
-- On realType shift to state 232
-- On parameterizedValueSetType shift to state 233
-- On parameterizedType shift to state 234
-- On parameterizedObjectSet shift to state 235
-- On parameterizedObject shift to state 236
-- On octetStringType shift to state 237
-- On objectIdentifierType shift to state 238
-- On objectClassFieldType shift to state 239
-- On nullType shift to state 240
-- On namedType shift to state 490
-- On integerType shift to state 241
-- On instanceOfType shift to state 242
-- On externalTypeReference shift to state 243
-- On externalType shift to state 244
-- On externalObjectSetReference shift to state 245
-- On externalObjectReference shift to state 246
-- On externalObjectClassReference shift to state 164
-- On enumeratedType shift to state 247
-- On embeddedPDVType shift to state 248
-- On definedType shift to state 249
-- On definedObjectSet shift to state 250
-- On definedObjectClass shift to state 252
-- On definedObject shift to state 255
-- On constrainedType shift to state 257
-- On choiceType shift to state 258
-- On characterStringType shift to state 259
-- On builtinType shift to state 260
-- On booleanType shift to state 261
-- On bitStringType shift to state 262
## Reductions:

State 489:
## Known stack suffix:
## SEQUENCE sizeConstraint OF type_x
## LR(1) items:
constrainedType -> type_x . constraint_x [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
typeWithConstraint -> SEQUENCE sizeConstraint OF type_x . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
-- On LeftParen shift to state 81
-- On constraint_x shift to state 206
## Reductions:
-- On Upper reduce production typeWithConstraint -> SEQUENCE sizeConstraint OF type_x
-- On UNIQUE reduce production typeWithConstraint -> SEQUENCE sizeConstraint OF type_x
-- On UNION reduce production typeWithConstraint -> SEQUENCE sizeConstraint OF type_x
-- On RightParen reduce production typeWithConstraint -> SEQUENCE sizeConstraint OF type_x
-- On RightDoubleBracket reduce production typeWithConstraint -> SEQUENCE sizeConstraint OF type_x
-- On RightBrace reduce production typeWithConstraint -> SEQUENCE sizeConstraint OF type_x
-- On OPTIONAL reduce production typeWithConstraint -> SEQUENCE sizeConstraint OF type_x
-- On Middle reduce production typeWithConstraint -> SEQUENCE sizeConstraint OF type_x
-- On Lower reduce production typeWithConstraint -> SEQUENCE sizeConstraint OF type_x
-- On INTERSECTION reduce production typeWithConstraint -> SEQUENCE sizeConstraint OF type_x
-- On EXCEPT reduce production typeWithConstraint -> SEQUENCE sizeConstraint OF type_x
-- On END reduce production typeWithConstraint -> SEQUENCE sizeConstraint OF type_x
-- On ENCODED reduce production typeWithConstraint -> SEQUENCE sizeConstraint OF type_x
-- On DEFAULT reduce production typeWithConstraint -> SEQUENCE sizeConstraint OF type_x
-- On Comma reduce production typeWithConstraint -> SEQUENCE sizeConstraint OF type_x
-- On Colon reduce production typeWithConstraint -> SEQUENCE sizeConstraint OF type_x
-- On Circumflex reduce production typeWithConstraint -> SEQUENCE sizeConstraint OF type_x
-- On Bang reduce production typeWithConstraint -> SEQUENCE sizeConstraint OF type_x
-- On Assignment reduce production typeWithConstraint -> SEQUENCE sizeConstraint OF type_x

State 490:
## Known stack suffix:
## SEQUENCE sizeConstraint OF namedType
## LR(1) items:
typeWithConstraint -> SEQUENCE sizeConstraint OF namedType . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
## Reductions:
-- On Upper reduce production typeWithConstraint -> SEQUENCE sizeConstraint OF namedType
-- On UNIQUE reduce production typeWithConstraint -> SEQUENCE sizeConstraint OF namedType
-- On UNION reduce production typeWithConstraint -> SEQUENCE sizeConstraint OF namedType
-- On RightParen reduce production typeWithConstraint -> SEQUENCE sizeConstraint OF namedType
-- On RightDoubleBracket reduce production typeWithConstraint -> SEQUENCE sizeConstraint OF namedType
-- On RightBrace reduce production typeWithConstraint -> SEQUENCE sizeConstraint OF namedType
-- On OPTIONAL reduce production typeWithConstraint -> SEQUENCE sizeConstraint OF namedType
-- On Middle reduce production typeWithConstraint -> SEQUENCE sizeConstraint OF namedType
-- On Lower reduce production typeWithConstraint -> SEQUENCE sizeConstraint OF namedType
-- On LeftParen reduce production typeWithConstraint -> SEQUENCE sizeConstraint OF namedType
-- On INTERSECTION reduce production typeWithConstraint -> SEQUENCE sizeConstraint OF namedType
-- On EXCEPT reduce production typeWithConstraint -> SEQUENCE sizeConstraint OF namedType
-- On END reduce production typeWithConstraint -> SEQUENCE sizeConstraint OF namedType
-- On ENCODED reduce production typeWithConstraint -> SEQUENCE sizeConstraint OF namedType
-- On DEFAULT reduce production typeWithConstraint -> SEQUENCE sizeConstraint OF namedType
-- On Comma reduce production typeWithConstraint -> SEQUENCE sizeConstraint OF namedType
-- On Colon reduce production typeWithConstraint -> SEQUENCE sizeConstraint OF namedType
-- On Circumflex reduce production typeWithConstraint -> SEQUENCE sizeConstraint OF namedType
-- On Bang reduce production typeWithConstraint -> SEQUENCE sizeConstraint OF namedType
-- On Assignment reduce production typeWithConstraint -> SEQUENCE sizeConstraint OF namedType

State 491:
## Known stack suffix:
## SEQUENCE constraint_x
## LR(1) items:
typeWithConstraint -> SEQUENCE constraint_x . OF type_x [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
typeWithConstraint -> SEQUENCE constraint_x . OF namedType [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
-- On OF shift to state 492
## Reductions:

State 492:
## Known stack suffix:
## SEQUENCE constraint_x OF
## LR(1) items:
typeWithConstraint -> SEQUENCE constraint_x OF . type_x [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
typeWithConstraint -> SEQUENCE constraint_x OF . namedType [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
-- On VisibleString shift to state 66
-- On VideotexString shift to state 67
-- On Upper shift to state 113
-- On UniversalString shift to state 72
-- On UTF8String shift to state 73
-- On UTCTime shift to state 74
-- On TeletexString shift to state 75
-- On TYPE_IDENTIFIER shift to state 76
-- On T61String shift to state 78
-- On SET shift to state 79
-- On SEQUENCE shift to state 111
-- On RELATIVE_OID shift to state 116
-- On REAL shift to state 117
-- On PrintableString shift to state 118
-- On ObjectDescriptor shift to state 119
-- On OCTET shift to state 120
-- On OBJECT shift to state 122
-- On NumericString shift to state 124
-- On NULL shift to state 125
-- On Lower shift to state 126
-- On LeftBracket shift to state 129
-- On ISO646String shift to state 140
-- On INTEGER shift to state 141
-- On INSTANCE shift to state 157
-- On IA5String shift to state 166
-- On GraphicString shift to state 167
-- On GeneralizedTime shift to state 168
-- On GeneralString shift to state 169
-- On EXTERNAL shift to state 170
-- On ENUMERATED shift to state 171
-- On EMBEDDED shift to state 179
-- On CHOICE shift to state 181
-- On CHARACTER shift to state 184
-- On BOOLEAN shift to state 186
-- On BMPString shift to state 187
-- On BIT shift to state 188
-- On ABSTRACT_SYNTAX shift to state 162
-- On valueSetFromObjects shift to state 202
-- On usefulType shift to state 203
-- On usefulObjectClassReference shift to state 163
-- On unrestrictedCharacterStringType shift to state 204
-- On type_x shift to state 493
-- On typeWithConstraint shift to state 207
-- On typeFromObject shift to state 208
-- On taggedType shift to state 209
-- On tag shift to state 210
-- On simpleDefinedType shift to state 213
-- On setType shift to state 215
-- On setOfType shift to state 216
-- On sequenceType shift to state 217
-- On sequenceOfType shift to state 218
-- On selectionType shift to state 219
-- On restrictedCharacterStringType shift to state 220
-- On relativeOIDType shift to state 221
-- On referencedType shift to state 222
-- On referencedObjects shift to state 223
-- On realType shift to state 232
-- On parameterizedValueSetType shift to state 233
-- On parameterizedType shift to state 234
-- On parameterizedObjectSet shift to state 235
-- On parameterizedObject shift to state 236
-- On octetStringType shift to state 237
-- On objectIdentifierType shift to state 238
-- On objectClassFieldType shift to state 239
-- On nullType shift to state 240
-- On namedType shift to state 494
-- On integerType shift to state 241
-- On instanceOfType shift to state 242
-- On externalTypeReference shift to state 243
-- On externalType shift to state 244
-- On externalObjectSetReference shift to state 245
-- On externalObjectReference shift to state 246
-- On externalObjectClassReference shift to state 164
-- On enumeratedType shift to state 247
-- On embeddedPDVType shift to state 248
-- On definedType shift to state 249
-- On definedObjectSet shift to state 250
-- On definedObjectClass shift to state 252
-- On definedObject shift to state 255
-- On constrainedType shift to state 257
-- On choiceType shift to state 258
-- On characterStringType shift to state 259
-- On builtinType shift to state 260
-- On booleanType shift to state 261
-- On bitStringType shift to state 262
## Reductions:

State 493:
## Known stack suffix:
## SEQUENCE constraint_x OF type_x
## LR(1) items:
constrainedType -> type_x . constraint_x [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
typeWithConstraint -> SEQUENCE constraint_x OF type_x . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
-- On LeftParen shift to state 81
-- On constraint_x shift to state 206
## Reductions:
-- On Upper reduce production typeWithConstraint -> SEQUENCE constraint_x OF type_x
-- On UNIQUE reduce production typeWithConstraint -> SEQUENCE constraint_x OF type_x
-- On UNION reduce production typeWithConstraint -> SEQUENCE constraint_x OF type_x
-- On RightParen reduce production typeWithConstraint -> SEQUENCE constraint_x OF type_x
-- On RightDoubleBracket reduce production typeWithConstraint -> SEQUENCE constraint_x OF type_x
-- On RightBrace reduce production typeWithConstraint -> SEQUENCE constraint_x OF type_x
-- On OPTIONAL reduce production typeWithConstraint -> SEQUENCE constraint_x OF type_x
-- On Middle reduce production typeWithConstraint -> SEQUENCE constraint_x OF type_x
-- On Lower reduce production typeWithConstraint -> SEQUENCE constraint_x OF type_x
-- On INTERSECTION reduce production typeWithConstraint -> SEQUENCE constraint_x OF type_x
-- On EXCEPT reduce production typeWithConstraint -> SEQUENCE constraint_x OF type_x
-- On END reduce production typeWithConstraint -> SEQUENCE constraint_x OF type_x
-- On ENCODED reduce production typeWithConstraint -> SEQUENCE constraint_x OF type_x
-- On DEFAULT reduce production typeWithConstraint -> SEQUENCE constraint_x OF type_x
-- On Comma reduce production typeWithConstraint -> SEQUENCE constraint_x OF type_x
-- On Colon reduce production typeWithConstraint -> SEQUENCE constraint_x OF type_x
-- On Circumflex reduce production typeWithConstraint -> SEQUENCE constraint_x OF type_x
-- On Bang reduce production typeWithConstraint -> SEQUENCE constraint_x OF type_x
-- On Assignment reduce production typeWithConstraint -> SEQUENCE constraint_x OF type_x

State 494:
## Known stack suffix:
## SEQUENCE constraint_x OF namedType
## LR(1) items:
typeWithConstraint -> SEQUENCE constraint_x OF namedType . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
## Reductions:
-- On Upper reduce production typeWithConstraint -> SEQUENCE constraint_x OF namedType
-- On UNIQUE reduce production typeWithConstraint -> SEQUENCE constraint_x OF namedType
-- On UNION reduce production typeWithConstraint -> SEQUENCE constraint_x OF namedType
-- On RightParen reduce production typeWithConstraint -> SEQUENCE constraint_x OF namedType
-- On RightDoubleBracket reduce production typeWithConstraint -> SEQUENCE constraint_x OF namedType
-- On RightBrace reduce production typeWithConstraint -> SEQUENCE constraint_x OF namedType
-- On OPTIONAL reduce production typeWithConstraint -> SEQUENCE constraint_x OF namedType
-- On Middle reduce production typeWithConstraint -> SEQUENCE constraint_x OF namedType
-- On Lower reduce production typeWithConstraint -> SEQUENCE constraint_x OF namedType
-- On LeftParen reduce production typeWithConstraint -> SEQUENCE constraint_x OF namedType
-- On INTERSECTION reduce production typeWithConstraint -> SEQUENCE constraint_x OF namedType
-- On EXCEPT reduce production typeWithConstraint -> SEQUENCE constraint_x OF namedType
-- On END reduce production typeWithConstraint -> SEQUENCE constraint_x OF namedType
-- On ENCODED reduce production typeWithConstraint -> SEQUENCE constraint_x OF namedType
-- On DEFAULT reduce production typeWithConstraint -> SEQUENCE constraint_x OF namedType
-- On Comma reduce production typeWithConstraint -> SEQUENCE constraint_x OF namedType
-- On Colon reduce production typeWithConstraint -> SEQUENCE constraint_x OF namedType
-- On Circumflex reduce production typeWithConstraint -> SEQUENCE constraint_x OF namedType
-- On Bang reduce production typeWithConstraint -> SEQUENCE constraint_x OF namedType
-- On Assignment reduce production typeWithConstraint -> SEQUENCE constraint_x OF namedType

State 495:
## Known stack suffix:
## PATTERN
## LR(1) items:
patternConstraint -> PATTERN . value [ UNION RightParen RightBrace Middle INTERSECTION EXCEPT Comma Circumflex Bang ]
## Transitions:
-- On VisibleString shift to state 66
-- On VideotexString shift to state 67
-- On Upper shift to state 108
-- On UniversalString shift to state 72
-- On UTF8String shift to state 73
-- On UTCTime shift to state 74
-- On TeletexString shift to state 75
-- On TYPE_IDENTIFIER shift to state 76
-- On TRUE shift to state 77
-- On T61String shift to state 78
-- On SET shift to state 79
-- On SEQUENCE shift to state 111
-- On RealNumber shift to state 296
-- On RELATIVE_OID shift to state 116
-- On REAL shift to state 117
-- On PrintableString shift to state 118
-- On PLUS_INFINITY shift to state 297
-- On ObjectDescriptor shift to state 119
-- On OCTET shift to state 120
-- On OBJECT shift to state 122
-- On NumericString shift to state 124
-- On Number shift to state 145
-- On NULL shift to state 298
-- On MINUS_INFINITY shift to state 299
-- On Lower shift to state 300
-- On LeftBracket shift to state 129
-- On LeftBrace shift to state 302
-- On ISO646String shift to state 140
-- On INTEGER shift to state 141
-- On INSTANCE shift to state 157
-- On IA5String shift to state 166
-- On Hyphen shift to state 306
-- On Hstring shift to state 308
-- On GraphicString shift to state 167
-- On GeneralizedTime shift to state 168
-- On GeneralString shift to state 169
-- On FALSE shift to state 309
-- On EXTERNAL shift to state 170
-- On ENUMERATED shift to state 171
-- On EMBEDDED shift to state 179
-- On Cstring shift to state 310
-- On CONTAINING shift to state 311
-- On CHOICE shift to state 181
-- On CHARACTER shift to state 184
-- On Bstring shift to state 312
-- On BOOLEAN shift to state 186
-- On BMPString shift to state 187
-- On BIT shift to state 188
-- On ABSTRACT_SYNTAX shift to state 162
-- On valueSetFromObjects shift to state 202
-- On valueFromObject shift to state 313
-- On value shift to state 496
-- On usefulType shift to state 203
-- On usefulObjectClassReference shift to state 163
-- On unrestrictedCharacterStringValue shift to state 315
-- On unrestrictedCharacterStringType shift to state 204
-- On type_x shift to state 316
-- On typeWithConstraint shift to state 207
-- On typeFromObject shift to state 208
-- On tuple shift to state 319
-- On taggedType shift to state 209
-- On tag shift to state 210
-- On specialRealValue shift to state 320
-- On simpleDefinedValue shift to state 64
-- On simpleDefinedType shift to state 213
-- On signedNumber shift to state 321
-- On setValue shift to state 322
-- On setType shift to state 215
-- On setOfValue shift to state 323
-- On setOfType shift to state 216
-- On sequenceValue shift to state 324
-- On sequenceType shift to state 217
-- On sequenceOfValue shift to state 325
-- On sequenceOfType shift to state 218
-- On selectionType shift to state 219
-- On restrictedCharacterStringValue shift to state 326
-- On restrictedCharacterStringType shift to state 220
-- On relativeOIDValue shift to state 327
-- On relativeOIDType shift to state 221
-- On referencedValue shift to state 328
-- On referencedType shift to state 222
-- On referencedObjects shift to state 329
-- On realValue shift to state 332
-- On realType shift to state 232
-- On quadruple shift to state 333
-- On parameterizedValueSetType shift to state 233
-- On parameterizedValue shift to state 135
-- On parameterizedType shift to state 234
-- On parameterizedObjectSet shift to state 235
-- On parameterizedObject shift to state 236
-- On openTypeFieldVal shift to state 334
-- On octetStringValue shift to state 335
-- On octetStringType shift to state 237
-- On objectIdentifierValue shift to state 336
-- On objectIdentifierType shift to state 238
-- On objectClassFieldValue shift to state 337
-- On objectClassFieldType shift to state 239
-- On numericRealValue shift to state 338
-- On nullValue shift to state 339
-- On nullType shift to state 240
-- On integerValue shift to state 340
-- On integerType shift to state 241
-- On instanceOfType shift to state 242
-- On fixedTypeFieldVal shift to state 341
-- On externalValueReference shift to state 136
-- On externalValue shift to state 342
-- On externalTypeReference shift to state 243
-- On externalType shift to state 244
-- On externalObjectSetReference shift to state 245
-- On externalObjectReference shift to state 246
-- On externalObjectClassReference shift to state 164
-- On enumeratedValue shift to state 343
-- On enumeratedType shift to state 247
-- On embeddedPDVValue shift to state 344
-- On embeddedPDVType shift to state 248
-- On definedValue shift to state 345
-- On definedType shift to state 249
-- On definedObjectSet shift to state 250
-- On definedObjectClass shift to state 252
-- On definedObject shift to state 255
-- On constrainedType shift to state 257
-- On choiceValue shift to state 346
-- On choiceType shift to state 258
-- On characterStringValue shift to state 347
-- On characterStringType shift to state 259
-- On characterStringList shift to state 348
-- On builtinValue shift to state 349
-- On builtinType shift to state 260
-- On booleanValue shift to state 350
-- On booleanType shift to state 261
-- On bitStringValue shift to state 351
-- On bitStringType shift to state 262
## Reductions:

State 496:
## Known stack suffix:
## PATTERN value
## LR(1) items:
patternConstraint -> PATTERN value . [ UNION RightParen RightBrace Middle INTERSECTION EXCEPT Comma Circumflex Bang ]
## Transitions:
## Reductions:
-- On UNION reduce production patternConstraint -> PATTERN value
-- On RightParen reduce production patternConstraint -> PATTERN value
-- On RightBrace reduce production patternConstraint -> PATTERN value
-- On Middle reduce production patternConstraint -> PATTERN value
-- On INTERSECTION reduce production patternConstraint -> PATTERN value
-- On EXCEPT reduce production patternConstraint -> PATTERN value
-- On Comma reduce production patternConstraint -> PATTERN value
-- On Circumflex reduce production patternConstraint -> PATTERN value
-- On Bang reduce production patternConstraint -> PATTERN value

State 497:
## Known stack suffix:
## MIN
## LR(1) items:
lowerEndValue -> MIN . [ LessThan DoubleDot ]
## Transitions:
## Reductions:
-- On LessThan reduce production lowerEndValue -> MIN
-- On DoubleDot reduce production lowerEndValue -> MIN

State 498:
## Known stack suffix:
## LeftParen
## LR(1) items:
elements -> LeftParen . elementSetSpec RightParen [ UNION RightParen RightBrace Middle INTERSECTION EXCEPT Comma Circumflex Bang ]
## Transitions:
-- On WITH shift to state 82
-- On VisibleString shift to state 66
-- On VideotexString shift to state 67
-- On Upper shift to state 108
-- On UniversalString shift to state 72
-- On UTF8String shift to state 73
-- On UTCTime shift to state 74
-- On TeletexString shift to state 75
-- On TYPE_IDENTIFIER shift to state 76
-- On TRUE shift to state 77
-- On T61String shift to state 78
-- On SIZE shift to state 80
-- On SET shift to state 79
-- On SEQUENCE shift to state 111
-- On RealNumber shift to state 296
-- On RELATIVE_OID shift to state 116
-- On REAL shift to state 117
-- On PrintableString shift to state 118
-- On PLUS_INFINITY shift to state 297
-- On PATTERN shift to state 495
-- On ObjectDescriptor shift to state 119
-- On OCTET shift to state 120
-- On OBJECT shift to state 122
-- On NumericString shift to state 124
-- On Number shift to state 145
-- On NULL shift to state 298
-- On MINUS_INFINITY shift to state 299
-- On MIN shift to state 497
-- On Lower shift to state 300
-- On LeftParen shift to state 498
-- On LeftBracket shift to state 129
-- On LeftBrace shift to state 499
-- On ISO646String shift to state 140
-- On INTEGER shift to state 141
-- On INSTANCE shift to state 157
-- On INCLUDES shift to state 503
-- On IA5String shift to state 166
-- On Hyphen shift to state 306
-- On Hstring shift to state 308
-- On GraphicString shift to state 167
-- On GeneralizedTime shift to state 168
-- On GeneralString shift to state 169
-- On FROM shift to state 504
-- On FALSE shift to state 309
-- On EXTERNAL shift to state 170
-- On ENUMERATED shift to state 171
-- On EMBEDDED shift to state 179
-- On DefinedSyntax shift to state 508
-- On Cstring shift to state 310
-- On CONTAINING shift to state 311
-- On CHOICE shift to state 181
-- On CHARACTER shift to state 184
-- On Bstring shift to state 312
-- On BOOLEAN shift to state 186
-- On BMPString shift to state 187
-- On BIT shift to state 188
-- On ALL shift to state 509
-- On ABSTRACT_SYNTAX shift to state 162
-- On valueSetFromObjects shift to state 202
-- On valueRange shift to state 511
-- On valueFromObject shift to state 313
-- On value shift to state 512
-- On usefulType shift to state 203
-- On usefulObjectClassReference shift to state 163
-- On unrestrictedCharacterStringValue shift to state 315
-- On unrestrictedCharacterStringType shift to state 204
-- On unions shift to state 549
-- On uElems shift to state 550
-- On type_x shift to state 513
-- On typeWithConstraint shift to state 207
-- On typeFromObject shift to state 208
-- On typeConstraint shift to state 514
-- On tuple shift to state 319
-- On taggedType shift to state 209
-- On tag shift to state 210
-- On subtypeElements shift to state 515
-- On specialRealValue shift to state 320
-- On sizeConstraint shift to state 516
-- On singleValue shift to state 517
-- On simpleDefinedValue shift to state 64
-- On simpleDefinedType shift to state 213
-- On signedNumber shift to state 321
-- On setValue shift to state 322
-- On setType shift to state 215
-- On setOfValue shift to state 323
-- On setOfType shift to state 216
-- On sequenceValue shift to state 324
-- On sequenceType shift to state 217
-- On sequenceOfValue shift to state 325
-- On sequenceOfType shift to state 218
-- On selectionType shift to state 219
-- On restrictedCharacterStringValue shift to state 326
-- On restrictedCharacterStringType shift to state 220
-- On relativeOIDValue shift to state 327
-- On relativeOIDType shift to state 221
-- On referencedValue shift to state 328
-- On referencedType shift to state 222
-- On referencedObjects shift to state 518
-- On realValue shift to state 332
-- On realType shift to state 232
-- On quadruple shift to state 333
-- On permittedAlphabet shift to state 521
-- On patternConstraint shift to state 522
-- On parameterizedValueSetType shift to state 233
-- On parameterizedValue shift to state 135
-- On parameterizedType shift to state 234
-- On parameterizedObjectSet shift to state 523
-- On parameterizedObject shift to state 524
-- On openTypeFieldVal shift to state 334
-- On octetStringValue shift to state 335
-- On octetStringType shift to state 237
-- On object_x shift to state 525
-- On objectSetFromObjects shift to state 526
-- On objectSetElements shift to state 527
-- On objectIdentifierValue shift to state 336
-- On objectIdentifierType shift to state 238
-- On objectFromObject shift to state 528
-- On objectDefn shift to state 529
-- On objectClassFieldValue shift to state 337
-- On objectClassFieldType shift to state 239
-- On numericRealValue shift to state 338
-- On nullValue shift to state 339
-- On nullType shift to state 240
-- On lowerEndValue shift to state 530
-- On lowerEndPoint shift to state 532
-- On intersections shift to state 564
-- On intersectionElements shift to state 555
-- On integerValue shift to state 340
-- On integerType shift to state 241
-- On instanceOfType shift to state 242
-- On innerTypeConstraints shift to state 540
-- On includes shift to state 541
-- On iElems shift to state 556
-- On fixedTypeFieldVal shift to state 341
-- On externalValueReference shift to state 136
-- On externalValue shift to state 342
-- On externalTypeReference shift to state 243
-- On externalType shift to state 244
-- On externalObjectSetReference shift to state 245
-- On externalObjectReference shift to state 246
-- On externalObjectClassReference shift to state 164
-- On enumeratedValue shift to state 343
-- On enumeratedType shift to state 247
-- On embeddedPDVValue shift to state 344
-- On embeddedPDVType shift to state 248
-- On elems shift to state 561
-- On elements shift to state 563
-- On elementSetSpec shift to state 592
-- On definedValue shift to state 345
-- On definedType shift to state 249
-- On definedObjectSet shift to state 544
-- On definedObjectClass shift to state 252
-- On definedObject shift to state 545
-- On defaultSyntax shift to state 546
-- On containedSubtype shift to state 547
-- On constrainedType shift to state 257
-- On choiceValue shift to state 346
-- On choiceType shift to state 258
-- On characterStringValue shift to state 347
-- On characterStringType shift to state 259
-- On characterStringList shift to state 348
-- On builtinValue shift to state 349
-- On builtinType shift to state 260
-- On booleanValue shift to state 350
-- On booleanType shift to state 261
-- On bitStringValue shift to state 351
-- On bitStringType shift to state 262
## Reductions:

State 499:
## Known stack suffix:
## LeftBrace
## LR(1) items:
bitStringValue -> LeftBrace . identifierList RightBrace [ UNION RightParen RightBrace Middle LessThan INTERSECTION EXCEPT DoubleDot Comma Circumflex Bang ]
bitStringValue -> LeftBrace . RightBrace [ UNION RightParen RightBrace Middle LessThan INTERSECTION EXCEPT DoubleDot Comma Circumflex Bang ]
characterStringList -> LeftBrace . charSyms RightBrace [ UNION RightParen RightBrace Middle LessThan INTERSECTION EXCEPT DoubleDot Comma Circumflex Bang ]
defaultSyntax -> LeftBrace . loption(separated_nonempty_list(Comma,fieldSetting)) RightBrace [ UNION RightParen RightBrace Middle INTERSECTION EXCEPT Comma Circumflex Bang ]
objectIdentifierValue -> LeftBrace . objIdComponentsList RightBrace [ UNION RightParen RightBrace Middle LessThan INTERSECTION EXCEPT DoubleDot Comma Circumflex Bang ]
objectIdentifierValue -> LeftBrace . definedValue objIdComponentsList RightBrace [ UNION RightParen RightBrace Middle LessThan INTERSECTION EXCEPT DoubleDot Comma Circumflex Bang ]
quadruple -> LeftBrace . group Comma plane Comma row Comma cell RightBrace [ UNION RightParen RightBrace Middle LessThan INTERSECTION EXCEPT DoubleDot Comma Circumflex Bang ]
relativeOIDValue -> LeftBrace . relativeOIDComponentsList RightBrace [ UNION RightParen RightBrace Middle LessThan INTERSECTION EXCEPT DoubleDot Comma Circumflex Bang ]
sequenceOfValue -> LeftBrace . valueList RightBrace [ UNION RightParen RightBrace Middle LessThan INTERSECTION EXCEPT DoubleDot Comma Circumflex Bang ]
sequenceOfValue -> LeftBrace . namedValueList RightBrace [ UNION RightParen RightBrace Middle LessThan INTERSECTION EXCEPT DoubleDot Comma Circumflex Bang ]
sequenceOfValue -> LeftBrace . RightBrace [ UNION RightParen RightBrace Middle LessThan INTERSECTION EXCEPT DoubleDot Comma Circumflex Bang ]
sequenceValue -> LeftBrace . componentValueList RightBrace [ UNION RightParen RightBrace Middle LessThan INTERSECTION EXCEPT DoubleDot Comma Circumflex Bang ]
sequenceValue -> LeftBrace . RightBrace [ UNION RightParen RightBrace Middle LessThan INTERSECTION EXCEPT DoubleDot Comma Circumflex Bang ]
setOfValue -> LeftBrace . valueList RightBrace [ UNION RightParen RightBrace Middle LessThan INTERSECTION EXCEPT DoubleDot Comma Circumflex Bang ]
setOfValue -> LeftBrace . namedValueList RightBrace [ UNION RightParen RightBrace Middle LessThan INTERSECTION EXCEPT DoubleDot Comma Circumflex Bang ]
setOfValue -> LeftBrace . RightBrace [ UNION RightParen RightBrace Middle LessThan INTERSECTION EXCEPT DoubleDot Comma Circumflex Bang ]
setValue -> LeftBrace . componentValueList RightBrace [ UNION RightParen RightBrace Middle LessThan INTERSECTION EXCEPT DoubleDot Comma Circumflex Bang ]
setValue -> LeftBrace . RightBrace [ UNION RightParen RightBrace Middle LessThan INTERSECTION EXCEPT DoubleDot Comma Circumflex Bang ]
tuple -> LeftBrace . tableColumn Comma tableRow RightBrace [ UNION RightParen RightBrace Middle LessThan INTERSECTION EXCEPT DoubleDot Comma Circumflex Bang ]
## Transitions:
-- On VisibleString shift to state 66
-- On VideotexString shift to state 67
-- On UpperField shift to state 225
-- On Upper shift to state 108
-- On UniversalString shift to state 72
-- On UTF8String shift to state 73
-- On UTCTime shift to state 74
-- On TeletexString shift to state 75
-- On TYPE_IDENTIFIER shift to state 76
-- On TRUE shift to state 77
-- On T61String shift to state 78
-- On SET shift to state 79
-- On SEQUENCE shift to state 111
-- On RightBrace shift to state 303
-- On RealNumber shift to state 296
-- On RELATIVE_OID shift to state 116
-- On REAL shift to state 117
-- On PrintableString shift to state 118
-- On PLUS_INFINITY shift to state 297
-- On ObjectDescriptor shift to state 119
-- On OCTET shift to state 120
-- On OBJECT shift to state 122
-- On NumericString shift to state 124
-- On Number shift to state 304
-- On NULL shift to state 298
-- On MINUS_INFINITY shift to state 299
-- On LowerField shift to state 226
-- On Lower shift to state 305
-- On LeftBracket shift to state 129
-- On LeftBrace shift to state 302
-- On ISO646String shift to state 140
-- On INTEGER shift to state 141
-- On INSTANCE shift to state 157
-- On IA5String shift to state 166
-- On Hyphen shift to state 306
-- On Hstring shift to state 308
-- On GraphicString shift to state 167
-- On GeneralizedTime shift to state 168
-- On GeneralString shift to state 169
-- On FALSE shift to state 309
-- On EXTERNAL shift to state 170
-- On ENUMERATED shift to state 171
-- On EMBEDDED shift to state 179
-- On Cstring shift to state 353
-- On CONTAINING shift to state 311
-- On CHOICE shift to state 181
-- On CHARACTER shift to state 184
-- On Bstring shift to state 312
-- On BOOLEAN shift to state 186
-- On BMPString shift to state 187
-- On BIT shift to state 188
-- On ABSTRACT_SYNTAX shift to state 162
-- On valueSetFromObjects shift to state 202
-- On valueList shift to state 354
-- On valueFromObject shift to state 313
-- On value shift to state 358
-- On usefulType shift to state 203
-- On usefulObjectClassReference shift to state 163
-- On unrestrictedCharacterStringValue shift to state 315
-- On unrestrictedCharacterStringType shift to state 204
-- On type_x shift to state 316
-- On typeWithConstraint shift to state 207
-- On typeFromObject shift to state 208
-- On tuple shift to state 359
-- On taggedType shift to state 209
-- On tag shift to state 210
-- On tableColumn shift to state 360
-- On specialRealValue shift to state 320
-- On simpleDefinedValue shift to state 64
-- On simpleDefinedType shift to state 213
-- On signedNumber shift to state 321
-- On setValue shift to state 322
-- On setType shift to state 215
-- On setOfValue shift to state 323
-- On setOfType shift to state 216
-- On sequenceValue shift to state 324
-- On sequenceType shift to state 217
-- On sequenceOfValue shift to state 325
-- On sequenceOfType shift to state 218
-- On separated_nonempty_list(Comma,fieldSetting) shift to state 500
-- On selectionType shift to state 219
-- On restrictedCharacterStringValue shift to state 326
-- On restrictedCharacterStringType shift to state 220
-- On relativeOIDValue shift to state 327
-- On relativeOIDType shift to state 221
-- On relativeOIDComponentsList shift to state 365
-- On relativeOIDComponents shift to state 367
-- On referencedValue shift to state 328
-- On referencedType shift to state 222
-- On referencedObjects shift to state 329
-- On realValue shift to state 332
-- On realType shift to state 232
-- On quadruple shift to state 373
-- On primitiveFieldName shift to state 501
-- On parameterizedValueSetType shift to state 233
-- On parameterizedValue shift to state 135
-- On parameterizedType shift to state 234
-- On parameterizedObjectSet shift to state 235
-- On parameterizedObject shift to state 236
-- On openTypeFieldVal shift to state 334
-- On octetStringValue shift to state 335
-- On octetStringType shift to state 237
-- On objectIdentifierValue shift to state 336
-- On objectIdentifierType shift to state 238
-- On objectClassFieldValue shift to state 337
-- On objectClassFieldType shift to state 239
-- On objIdComponentsList shift to state 374
-- On objIdComponents shift to state 376
-- On numericRealValue shift to state 338
-- On numberForm shift to state 382
-- On nullValue shift to state 339
-- On nullType shift to state 240
-- On namedValueList shift to state 383
-- On namedValue shift to state 388
-- On nameForm shift to state 379
-- On nameAndNumberForm shift to state 389
-- On loption(separated_nonempty_list(Comma,fieldSetting)) shift to state 575
-- On integerValue shift to state 340
-- On integerType shift to state 241
-- On instanceOfType shift to state 242
-- On identifierList shift to state 390
-- On group shift to state 394
-- On fixedTypeFieldVal shift to state 341
-- On fieldSetting shift to state 577
-- On externalValueReference shift to state 136
-- On externalValue shift to state 342
-- On externalTypeReference shift to state 243
-- On externalType shift to state 244
-- On externalObjectSetReference shift to state 245
-- On externalObjectReference shift to state 246
-- On externalObjectClassReference shift to state 164
-- On enumeratedValue shift to state 343
-- On enumeratedType shift to state 247
-- On embeddedPDVValue shift to state 344
-- On embeddedPDVType shift to state 248
-- On definedValue shift to state 405
-- On definedType shift to state 249
-- On definedObjectSet shift to state 250
-- On definedObjectClass shift to state 252
-- On definedObject shift to state 255
-- On constrainedType shift to state 257
-- On componentValueList shift to state 408
-- On choiceValue shift to state 346
-- On choiceType shift to state 258
-- On charsDefn shift to state 412
-- On characterStringValue shift to state 347
-- On characterStringType shift to state 259
-- On characterStringList shift to state 348
-- On charSyms shift to state 413
-- On builtinValue shift to state 349
-- On builtinType shift to state 260
-- On booleanValue shift to state 350
-- On booleanType shift to state 261
-- On bitStringValue shift to state 351
-- On bitStringType shift to state 262
## Reductions:

State 500:
## Known stack suffix:
## separated_nonempty_list(Comma,fieldSetting)
## LR(1) items:
loption(separated_nonempty_list(Comma,fieldSetting)) -> separated_nonempty_list(Comma,fieldSetting) . [ RightBrace ]
## Transitions:
## Reductions:
-- On RightBrace reduce production loption(separated_nonempty_list(Comma,fieldSetting)) -> separated_nonempty_list(Comma,fieldSetting)

State 501:
## Known stack suffix:
## primitiveFieldName
## LR(1) items:
fieldSetting -> primitiveFieldName . setting [ RightBrace Comma ]
## Transitions:
-- On VisibleString shift to state 66
-- On VideotexString shift to state 67
-- On Upper shift to state 108
-- On UniversalString shift to state 72
-- On UTF8String shift to state 73
-- On UTCTime shift to state 74
-- On TeletexString shift to state 75
-- On TYPE_IDENTIFIER shift to state 76
-- On TRUE shift to state 77
-- On T61String shift to state 78
-- On SET shift to state 79
-- On SEQUENCE shift to state 111
-- On RealNumber shift to state 296
-- On RELATIVE_OID shift to state 116
-- On REAL shift to state 117
-- On PrintableString shift to state 118
-- On PLUS_INFINITY shift to state 297
-- On ObjectDescriptor shift to state 119
-- On OCTET shift to state 120
-- On OBJECT shift to state 122
-- On NumericString shift to state 124
-- On Number shift to state 145
-- On NULL shift to state 298
-- On MINUS_INFINITY shift to state 299
-- On Lower shift to state 300
-- On LeftBracket shift to state 129
-- On LeftBrace shift to state 502
-- On ISO646String shift to state 140
-- On INTEGER shift to state 141
-- On INSTANCE shift to state 157
-- On IA5String shift to state 166
-- On Hyphen shift to state 306
-- On Hstring shift to state 308
-- On GraphicString shift to state 167
-- On GeneralizedTime shift to state 168
-- On GeneralString shift to state 169
-- On FALSE shift to state 309
-- On EXTERNAL shift to state 170
-- On ENUMERATED shift to state 171
-- On EMBEDDED shift to state 179
-- On DefinedSyntax shift to state 508
-- On Cstring shift to state 310
-- On CONTAINING shift to state 311
-- On CHOICE shift to state 181
-- On CHARACTER shift to state 184
-- On Bstring shift to state 312
-- On BOOLEAN shift to state 186
-- On BMPString shift to state 187
-- On BIT shift to state 188
-- On ABSTRACT_SYNTAX shift to state 162
-- On valueSetFromObjects shift to state 202
-- On valueSet shift to state 583
-- On valueFromObject shift to state 313
-- On value shift to state 584
-- On usefulType shift to state 203
-- On usefulObjectClassReference shift to state 163
-- On unrestrictedCharacterStringValue shift to state 315
-- On unrestrictedCharacterStringType shift to state 204
-- On type_x shift to state 585
-- On typeWithConstraint shift to state 207
-- On typeFromObject shift to state 208
-- On tuple shift to state 319
-- On taggedType shift to state 209
-- On tag shift to state 210
-- On specialRealValue shift to state 320
-- On simpleDefinedValue shift to state 64
-- On simpleDefinedType shift to state 213
-- On signedNumber shift to state 321
-- On setting shift to state 586
-- On setValue shift to state 322
-- On setType shift to state 215
-- On setOfValue shift to state 323
-- On setOfType shift to state 216
-- On sequenceValue shift to state 324
-- On sequenceType shift to state 217
-- On sequenceOfValue shift to state 325
-- On sequenceOfType shift to state 218
-- On selectionType shift to state 219
-- On restrictedCharacterStringValue shift to state 326
-- On restrictedCharacterStringType shift to state 220
-- On relativeOIDValue shift to state 327
-- On relativeOIDType shift to state 221
-- On referencedValue shift to state 328
-- On referencedType shift to state 222
-- On referencedObjects shift to state 587
-- On realValue shift to state 332
-- On realType shift to state 232
-- On quadruple shift to state 333
-- On parameterizedValueSetType shift to state 233
-- On parameterizedValue shift to state 135
-- On parameterizedType shift to state 234
-- On parameterizedObjectSet shift to state 235
-- On parameterizedObject shift to state 524
-- On openTypeFieldVal shift to state 334
-- On octetStringValue shift to state 335
-- On octetStringType shift to state 237
-- On object_x shift to state 590
-- On objectSet shift to state 591
-- On objectIdentifierValue shift to state 336
-- On objectIdentifierType shift to state 238
-- On objectFromObject shift to state 528
-- On objectDefn shift to state 529
-- On objectClassFieldValue shift to state 337
-- On objectClassFieldType shift to state 239
-- On numericRealValue shift to state 338
-- On nullValue shift to state 339
-- On nullType shift to state 240
-- On integerValue shift to state 340
-- On integerType shift to state 241
-- On instanceOfType shift to state 242
-- On fixedTypeFieldVal shift to state 341
-- On externalValueReference shift to state 136
-- On externalValue shift to state 342
-- On externalTypeReference shift to state 243
-- On externalType shift to state 244
-- On externalObjectSetReference shift to state 245
-- On externalObjectReference shift to state 246
-- On externalObjectClassReference shift to state 164
-- On enumeratedValue shift to state 343
-- On enumeratedType shift to state 247
-- On embeddedPDVValue shift to state 344
-- On embeddedPDVType shift to state 248
-- On definedValue shift to state 345
-- On definedType shift to state 249
-- On definedObjectSet shift to state 250
-- On definedObjectClass shift to state 252
-- On definedObject shift to state 545
-- On defaultSyntax shift to state 546
-- On constrainedType shift to state 257
-- On choiceValue shift to state 346
-- On choiceType shift to state 258
-- On characterStringValue shift to state 347
-- On characterStringType shift to state 259
-- On characterStringList shift to state 348
-- On builtinValue shift to state 349
-- On builtinType shift to state 260
-- On booleanValue shift to state 350
-- On booleanType shift to state 261
-- On bitStringValue shift to state 351
-- On bitStringType shift to state 262
## Reductions:

State 502:
## Known stack suffix:
## LeftBrace
## LR(1) items:
bitStringValue -> LeftBrace . identifierList RightBrace [ RightBrace Comma ]
bitStringValue -> LeftBrace . RightBrace [ RightBrace Comma ]
characterStringList -> LeftBrace . charSyms RightBrace [ RightBrace Comma ]
defaultSyntax -> LeftBrace . loption(separated_nonempty_list(Comma,fieldSetting)) RightBrace [ RightBrace Comma ]
objectIdentifierValue -> LeftBrace . objIdComponentsList RightBrace [ RightBrace Comma ]
objectIdentifierValue -> LeftBrace . definedValue objIdComponentsList RightBrace [ RightBrace Comma ]
objectSet -> LeftBrace . objectSetSpec RightBrace [ RightBrace Comma ]
quadruple -> LeftBrace . group Comma plane Comma row Comma cell RightBrace [ RightBrace Comma ]
relativeOIDValue -> LeftBrace . relativeOIDComponentsList RightBrace [ RightBrace Comma ]
sequenceOfValue -> LeftBrace . valueList RightBrace [ RightBrace Comma ]
sequenceOfValue -> LeftBrace . namedValueList RightBrace [ RightBrace Comma ]
sequenceOfValue -> LeftBrace . RightBrace [ RightBrace Comma ]
sequenceValue -> LeftBrace . componentValueList RightBrace [ RightBrace Comma ]
sequenceValue -> LeftBrace . RightBrace [ RightBrace Comma ]
setOfValue -> LeftBrace . valueList RightBrace [ RightBrace Comma ]
setOfValue -> LeftBrace . namedValueList RightBrace [ RightBrace Comma ]
setOfValue -> LeftBrace . RightBrace [ RightBrace Comma ]
setValue -> LeftBrace . componentValueList RightBrace [ RightBrace Comma ]
setValue -> LeftBrace . RightBrace [ RightBrace Comma ]
tuple -> LeftBrace . tableColumn Comma tableRow RightBrace [ RightBrace Comma ]
valueSet -> LeftBrace . elementSetSpecs RightBrace [ RightBrace Comma ]
## Transitions:
-- On WITH shift to state 82
-- On VisibleString shift to state 66
-- On VideotexString shift to state 67
-- On UpperField shift to state 225
-- On Upper shift to state 108
-- On UniversalString shift to state 72
-- On UTF8String shift to state 73
-- On UTCTime shift to state 74
-- On TeletexString shift to state 75
-- On TYPE_IDENTIFIER shift to state 76
-- On TRUE shift to state 77
-- On T61String shift to state 78
-- On SIZE shift to state 80
-- On SET shift to state 79
-- On SEQUENCE shift to state 111
-- On RightBrace shift to state 303
-- On RealNumber shift to state 296
-- On RELATIVE_OID shift to state 116
-- On REAL shift to state 117
-- On PrintableString shift to state 118
-- On PLUS_INFINITY shift to state 297
-- On PATTERN shift to state 495
-- On ObjectDescriptor shift to state 119
-- On OCTET shift to state 120
-- On OBJECT shift to state 122
-- On NumericString shift to state 124
-- On Number shift to state 304
-- On NULL shift to state 298
-- On MINUS_INFINITY shift to state 299
-- On MIN shift to state 497
-- On LowerField shift to state 226
-- On Lower shift to state 305
-- On LeftParen shift to state 498
-- On LeftBracket shift to state 129
-- On LeftBrace shift to state 499
-- On ISO646String shift to state 140
-- On INTEGER shift to state 141
-- On INSTANCE shift to state 157
-- On INCLUDES shift to state 503
-- On IA5String shift to state 166
-- On Hyphen shift to state 306
-- On Hstring shift to state 308
-- On GraphicString shift to state 167
-- On GeneralizedTime shift to state 168
-- On GeneralString shift to state 169
-- On FROM shift to state 504
-- On FALSE shift to state 309
-- On Ellipsis shift to state 506
-- On EXTERNAL shift to state 170
-- On ENUMERATED shift to state 171
-- On EMBEDDED shift to state 179
-- On DefinedSyntax shift to state 508
-- On Cstring shift to state 353
-- On CONTAINING shift to state 311
-- On CHOICE shift to state 181
-- On CHARACTER shift to state 184
-- On Bstring shift to state 312
-- On BOOLEAN shift to state 186
-- On BMPString shift to state 187
-- On BIT shift to state 188
-- On ALL shift to state 509
-- On ABSTRACT_SYNTAX shift to state 162
-- On valueSetFromObjects shift to state 202
-- On valueRange shift to state 511
-- On valueList shift to state 354
-- On valueFromObject shift to state 313
-- On value shift to state 567
-- On usefulType shift to state 203
-- On usefulObjectClassReference shift to state 163
-- On unrestrictedCharacterStringValue shift to state 315
-- On unrestrictedCharacterStringType shift to state 204
-- On unions shift to state 549
-- On uElems shift to state 550
-- On type_x shift to state 513
-- On typeWithConstraint shift to state 207
-- On typeFromObject shift to state 208
-- On typeConstraint shift to state 514
-- On tuple shift to state 359
-- On taggedType shift to state 209
-- On tag shift to state 210
-- On tableColumn shift to state 360
-- On subtypeElements shift to state 515
-- On specialRealValue shift to state 320
-- On sizeConstraint shift to state 516
-- On singleValue shift to state 517
-- On simpleDefinedValue shift to state 64
-- On simpleDefinedType shift to state 213
-- On signedNumber shift to state 321
-- On setValue shift to state 322
-- On setType shift to state 215
-- On setOfValue shift to state 323
-- On setOfType shift to state 216
-- On sequenceValue shift to state 324
-- On sequenceType shift to state 217
-- On sequenceOfValue shift to state 325
-- On sequenceOfType shift to state 218
-- On separated_nonempty_list(Comma,fieldSetting) shift to state 500
-- On selectionType shift to state 219
-- On rootElementSetSpec shift to state 568
-- On restrictedCharacterStringValue shift to state 326
-- On restrictedCharacterStringType shift to state 220
-- On relativeOIDValue shift to state 327
-- On relativeOIDType shift to state 221
-- On relativeOIDComponentsList shift to state 365
-- On relativeOIDComponents shift to state 367
-- On referencedValue shift to state 328
-- On referencedType shift to state 222
-- On referencedObjects shift to state 518
-- On realValue shift to state 332
-- On realType shift to state 232
-- On quadruple shift to state 373
-- On primitiveFieldName shift to state 501
-- On permittedAlphabet shift to state 521
-- On patternConstraint shift to state 522
-- On parameterizedValueSetType shift to state 233
-- On parameterizedValue shift to state 135
-- On parameterizedType shift to state 234
-- On parameterizedObjectSet shift to state 523
-- On parameterizedObject shift to state 524
-- On openTypeFieldVal shift to state 334
-- On octetStringValue shift to state 335
-- On octetStringType shift to state 237
-- On object_x shift to state 525
-- On objectSetSpec shift to state 573
-- On objectSetFromObjects shift to state 526
-- On objectSetElements shift to state 527
-- On objectIdentifierValue shift to state 336
-- On objectIdentifierType shift to state 238
-- On objectFromObject shift to state 528
-- On objectDefn shift to state 529
-- On objectClassFieldValue shift to state 337
-- On objectClassFieldType shift to state 239
-- On objIdComponentsList shift to state 374
-- On objIdComponents shift to state 376
-- On numericRealValue shift to state 338
-- On numberForm shift to state 382
-- On nullValue shift to state 339
-- On nullType shift to state 240
-- On namedValueList shift to state 383
-- On namedValue shift to state 388
-- On nameForm shift to state 379
-- On nameAndNumberForm shift to state 389
-- On lowerEndValue shift to state 530
-- On lowerEndPoint shift to state 532
-- On loption(separated_nonempty_list(Comma,fieldSetting)) shift to state 575
-- On intersections shift to state 564
-- On intersectionElements shift to state 555
-- On integerValue shift to state 340
-- On integerType shift to state 241
-- On instanceOfType shift to state 242
-- On innerTypeConstraints shift to state 540
-- On includes shift to state 541
-- On identifierList shift to state 390
-- On iElems shift to state 556
-- On group shift to state 394
-- On fixedTypeFieldVal shift to state 341
-- On fieldSetting shift to state 577
-- On externalValueReference shift to state 136
-- On externalValue shift to state 342
-- On externalTypeReference shift to state 243
-- On externalType shift to state 244
-- On externalObjectSetReference shift to state 245
-- On externalObjectReference shift to state 246
-- On externalObjectClassReference shift to state 164
-- On enumeratedValue shift to state 343
-- On enumeratedType shift to state 247
-- On embeddedPDVValue shift to state 344
-- On embeddedPDVType shift to state 248
-- On elems shift to state 561
-- On elements shift to state 563
-- On elementSetSpecs shift to state 580
-- On elementSetSpec shift to state 582
-- On definedValue shift to state 405
-- On definedType shift to state 249
-- On definedObjectSet shift to state 544
-- On definedObjectClass shift to state 252
-- On definedObject shift to state 545
-- On defaultSyntax shift to state 546
-- On containedSubtype shift to state 547
-- On constrainedType shift to state 257
-- On componentValueList shift to state 408
-- On choiceValue shift to state 346
-- On choiceType shift to state 258
-- On charsDefn shift to state 412
-- On characterStringValue shift to state 347
-- On characterStringType shift to state 259
-- On characterStringList shift to state 348
-- On charSyms shift to state 413
-- On builtinValue shift to state 349
-- On builtinType shift to state 260
-- On booleanValue shift to state 350
-- On booleanType shift to state 261
-- On bitStringValue shift to state 351
-- On bitStringType shift to state 262
## Reductions:

State 503:
## Known stack suffix:
## INCLUDES
## LR(1) items:
includes -> INCLUDES . [ VisibleString VideotexString Upper UniversalString UTF8String UTCTime TeletexString TYPE_IDENTIFIER T61String SET SEQUENCE RELATIVE_OID REAL PrintableString ObjectDescriptor OCTET OBJECT NumericString NULL Lower LeftBracket ISO646String INTEGER INSTANCE IA5String GraphicString GeneralizedTime GeneralString EXTERNAL ENUMERATED EMBEDDED CHOICE CHARACTER BOOLEAN BMPString BIT ABSTRACT_SYNTAX ]
## Transitions:
## Reductions:
-- On VisibleString reduce production includes -> INCLUDES
-- On VideotexString reduce production includes -> INCLUDES
-- On Upper reduce production includes -> INCLUDES
-- On UniversalString reduce production includes -> INCLUDES
-- On UTF8String reduce production includes -> INCLUDES
-- On UTCTime reduce production includes -> INCLUDES
-- On TeletexString reduce production includes -> INCLUDES
-- On TYPE_IDENTIFIER reduce production includes -> INCLUDES
-- On T61String reduce production includes -> INCLUDES
-- On SET reduce production includes -> INCLUDES
-- On SEQUENCE reduce production includes -> INCLUDES
-- On RELATIVE_OID reduce production includes -> INCLUDES
-- On REAL reduce production includes -> INCLUDES
-- On PrintableString reduce production includes -> INCLUDES
-- On ObjectDescriptor reduce production includes -> INCLUDES
-- On OCTET reduce production includes -> INCLUDES
-- On OBJECT reduce production includes -> INCLUDES
-- On NumericString reduce production includes -> INCLUDES
-- On NULL reduce production includes -> INCLUDES
-- On Lower reduce production includes -> INCLUDES
-- On LeftBracket reduce production includes -> INCLUDES
-- On ISO646String reduce production includes -> INCLUDES
-- On INTEGER reduce production includes -> INCLUDES
-- On INSTANCE reduce production includes -> INCLUDES
-- On IA5String reduce production includes -> INCLUDES
-- On GraphicString reduce production includes -> INCLUDES
-- On GeneralizedTime reduce production includes -> INCLUDES
-- On GeneralString reduce production includes -> INCLUDES
-- On EXTERNAL reduce production includes -> INCLUDES
-- On ENUMERATED reduce production includes -> INCLUDES
-- On EMBEDDED reduce production includes -> INCLUDES
-- On CHOICE reduce production includes -> INCLUDES
-- On CHARACTER reduce production includes -> INCLUDES
-- On BOOLEAN reduce production includes -> INCLUDES
-- On BMPString reduce production includes -> INCLUDES
-- On BIT reduce production includes -> INCLUDES
-- On ABSTRACT_SYNTAX reduce production includes -> INCLUDES

State 504:
## Known stack suffix:
## FROM
## LR(1) items:
permittedAlphabet -> FROM . constraint_x [ UNION RightParen RightBrace Middle INTERSECTION EXCEPT Comma Circumflex Bang ]
## Transitions:
-- On LeftParen shift to state 81
-- On constraint_x shift to state 505
## Reductions:

State 505:
## Known stack suffix:
## FROM constraint_x
## LR(1) items:
permittedAlphabet -> FROM constraint_x . [ UNION RightParen RightBrace Middle INTERSECTION EXCEPT Comma Circumflex Bang ]
## Transitions:
## Reductions:
-- On UNION reduce production permittedAlphabet -> FROM constraint_x
-- On RightParen reduce production permittedAlphabet -> FROM constraint_x
-- On RightBrace reduce production permittedAlphabet -> FROM constraint_x
-- On Middle reduce production permittedAlphabet -> FROM constraint_x
-- On INTERSECTION reduce production permittedAlphabet -> FROM constraint_x
-- On EXCEPT reduce production permittedAlphabet -> FROM constraint_x
-- On Comma reduce production permittedAlphabet -> FROM constraint_x
-- On Circumflex reduce production permittedAlphabet -> FROM constraint_x
-- On Bang reduce production permittedAlphabet -> FROM constraint_x

State 506:
## Known stack suffix:
## Ellipsis
## LR(1) items:
objectSetSpec -> Ellipsis . [ RightBrace ]
objectSetSpec -> Ellipsis . Comma additionalElementSetSpec [ RightBrace ]
## Transitions:
-- On Comma shift to state 507
## Reductions:
-- On RightBrace reduce production objectSetSpec -> Ellipsis

State 507:
## Known stack suffix:
## Ellipsis Comma
## LR(1) items:
objectSetSpec -> Ellipsis Comma . additionalElementSetSpec [ RightBrace ]
## Transitions:
-- On WITH shift to state 82
-- On VisibleString shift to state 66
-- On VideotexString shift to state 67
-- On Upper shift to state 108
-- On UniversalString shift to state 72
-- On UTF8String shift to state 73
-- On UTCTime shift to state 74
-- On TeletexString shift to state 75
-- On TYPE_IDENTIFIER shift to state 76
-- On TRUE shift to state 77
-- On T61String shift to state 78
-- On SIZE shift to state 80
-- On SET shift to state 79
-- On SEQUENCE shift to state 111
-- On RealNumber shift to state 296
-- On RELATIVE_OID shift to state 116
-- On REAL shift to state 117
-- On PrintableString shift to state 118
-- On PLUS_INFINITY shift to state 297
-- On PATTERN shift to state 495
-- On ObjectDescriptor shift to state 119
-- On OCTET shift to state 120
-- On OBJECT shift to state 122
-- On NumericString shift to state 124
-- On Number shift to state 145
-- On NULL shift to state 298
-- On MINUS_INFINITY shift to state 299
-- On MIN shift to state 497
-- On Lower shift to state 300
-- On LeftParen shift to state 498
-- On LeftBracket shift to state 129
-- On LeftBrace shift to state 499
-- On ISO646String shift to state 140
-- On INTEGER shift to state 141
-- On INSTANCE shift to state 157
-- On INCLUDES shift to state 503
-- On IA5String shift to state 166
-- On Hyphen shift to state 306
-- On Hstring shift to state 308
-- On GraphicString shift to state 167
-- On GeneralizedTime shift to state 168
-- On GeneralString shift to state 169
-- On FROM shift to state 504
-- On FALSE shift to state 309
-- On EXTERNAL shift to state 170
-- On ENUMERATED shift to state 171
-- On EMBEDDED shift to state 179
-- On DefinedSyntax shift to state 508
-- On Cstring shift to state 310
-- On CONTAINING shift to state 311
-- On CHOICE shift to state 181
-- On CHARACTER shift to state 184
-- On Bstring shift to state 312
-- On BOOLEAN shift to state 186
-- On BMPString shift to state 187
-- On BIT shift to state 188
-- On ALL shift to state 509
-- On ABSTRACT_SYNTAX shift to state 162
-- On valueSetFromObjects shift to state 202
-- On valueRange shift to state 511
-- On valueFromObject shift to state 313
-- On value shift to state 512
-- On usefulType shift to state 203
-- On usefulObjectClassReference shift to state 163
-- On unrestrictedCharacterStringValue shift to state 315
-- On unrestrictedCharacterStringType shift to state 204
-- On unions shift to state 549
-- On uElems shift to state 550
-- On type_x shift to state 513
-- On typeWithConstraint shift to state 207
-- On typeFromObject shift to state 208
-- On typeConstraint shift to state 514
-- On tuple shift to state 319
-- On taggedType shift to state 209
-- On tag shift to state 210
-- On subtypeElements shift to state 515
-- On specialRealValue shift to state 320
-- On sizeConstraint shift to state 516
-- On singleValue shift to state 517
-- On simpleDefinedValue shift to state 64
-- On simpleDefinedType shift to state 213
-- On signedNumber shift to state 321
-- On setValue shift to state 322
-- On setType shift to state 215
-- On setOfValue shift to state 323
-- On setOfType shift to state 216
-- On sequenceValue shift to state 324
-- On sequenceType shift to state 217
-- On sequenceOfValue shift to state 325
-- On sequenceOfType shift to state 218
-- On selectionType shift to state 219
-- On restrictedCharacterStringValue shift to state 326
-- On restrictedCharacterStringType shift to state 220
-- On relativeOIDValue shift to state 327
-- On relativeOIDType shift to state 221
-- On referencedValue shift to state 328
-- On referencedType shift to state 222
-- On referencedObjects shift to state 518
-- On realValue shift to state 332
-- On realType shift to state 232
-- On quadruple shift to state 333
-- On permittedAlphabet shift to state 521
-- On patternConstraint shift to state 522
-- On parameterizedValueSetType shift to state 233
-- On parameterizedValue shift to state 135
-- On parameterizedType shift to state 234
-- On parameterizedObjectSet shift to state 523
-- On parameterizedObject shift to state 524
-- On openTypeFieldVal shift to state 334
-- On octetStringValue shift to state 335
-- On octetStringType shift to state 237
-- On object_x shift to state 525
-- On objectSetFromObjects shift to state 526
-- On objectSetElements shift to state 527
-- On objectIdentifierValue shift to state 336
-- On objectIdentifierType shift to state 238
-- On objectFromObject shift to state 528
-- On objectDefn shift to state 529
-- On objectClassFieldValue shift to state 337
-- On objectClassFieldType shift to state 239
-- On numericRealValue shift to state 338
-- On nullValue shift to state 339
-- On nullType shift to state 240
-- On lowerEndValue shift to state 530
-- On lowerEndPoint shift to state 532
-- On intersections shift to state 564
-- On intersectionElements shift to state 555
-- On integerValue shift to state 340
-- On integerType shift to state 241
-- On instanceOfType shift to state 242
-- On innerTypeConstraints shift to state 540
-- On includes shift to state 541
-- On iElems shift to state 556
-- On fixedTypeFieldVal shift to state 341
-- On externalValueReference shift to state 136
-- On externalValue shift to state 342
-- On externalTypeReference shift to state 243
-- On externalType shift to state 244
-- On externalObjectSetReference shift to state 245
-- On externalObjectReference shift to state 246
-- On externalObjectClassReference shift to state 164
-- On enumeratedValue shift to state 343
-- On enumeratedType shift to state 247
-- On embeddedPDVValue shift to state 344
-- On embeddedPDVType shift to state 248
-- On elems shift to state 561
-- On elements shift to state 563
-- On elementSetSpec shift to state 565
-- On definedValue shift to state 345
-- On definedType shift to state 249
-- On definedObjectSet shift to state 544
-- On definedObjectClass shift to state 252
-- On definedObject shift to state 545
-- On defaultSyntax shift to state 546
-- On containedSubtype shift to state 547
-- On constrainedType shift to state 257
-- On choiceValue shift to state 346
-- On choiceType shift to state 258
-- On characterStringValue shift to state 347
-- On characterStringType shift to state 259
-- On characterStringList shift to state 348
-- On builtinValue shift to state 349
-- On builtinType shift to state 260
-- On booleanValue shift to state 350
-- On booleanType shift to state 261
-- On bitStringValue shift to state 351
-- On bitStringType shift to state 262
-- On additionalElementSetSpec shift to state 566
## Reductions:

State 508:
## Known stack suffix:
## DefinedSyntax
## LR(1) items:
objectDefn -> DefinedSyntax . [ Upper UNION RightParen RightBrace Middle Lower INTERSECTION EXCEPT END Comma Circumflex Bang ]
## Transitions:
## Reductions:
-- On Upper reduce production objectDefn -> DefinedSyntax
-- On UNION reduce production objectDefn -> DefinedSyntax
-- On RightParen reduce production objectDefn -> DefinedSyntax
-- On RightBrace reduce production objectDefn -> DefinedSyntax
-- On Middle reduce production objectDefn -> DefinedSyntax
-- On Lower reduce production objectDefn -> DefinedSyntax
-- On INTERSECTION reduce production objectDefn -> DefinedSyntax
-- On EXCEPT reduce production objectDefn -> DefinedSyntax
-- On END reduce production objectDefn -> DefinedSyntax
-- On Comma reduce production objectDefn -> DefinedSyntax
-- On Circumflex reduce production objectDefn -> DefinedSyntax
-- On Bang reduce production objectDefn -> DefinedSyntax

State 509:
## Known stack suffix:
## ALL
## LR(1) items:
elementSetSpec -> ALL . exclusions [ RightParen RightBrace Comma Bang ]
## Transitions:
-- On EXCEPT shift to state 510
-- On exclusions shift to state 548
## Reductions:

State 510:
## Known stack suffix:
## EXCEPT
## LR(1) items:
exclusions -> EXCEPT . elements [ UNION RightParen RightBrace Middle INTERSECTION Comma Circumflex Bang ]
## Transitions:
-- On WITH shift to state 82
-- On VisibleString shift to state 66
-- On VideotexString shift to state 67
-- On Upper shift to state 108
-- On UniversalString shift to state 72
-- On UTF8String shift to state 73
-- On UTCTime shift to state 74
-- On TeletexString shift to state 75
-- On TYPE_IDENTIFIER shift to state 76
-- On TRUE shift to state 77
-- On T61String shift to state 78
-- On SIZE shift to state 80
-- On SET shift to state 79
-- On SEQUENCE shift to state 111
-- On RealNumber shift to state 296
-- On RELATIVE_OID shift to state 116
-- On REAL shift to state 117
-- On PrintableString shift to state 118
-- On PLUS_INFINITY shift to state 297
-- On PATTERN shift to state 495
-- On ObjectDescriptor shift to state 119
-- On OCTET shift to state 120
-- On OBJECT shift to state 122
-- On NumericString shift to state 124
-- On Number shift to state 145
-- On NULL shift to state 298
-- On MINUS_INFINITY shift to state 299
-- On MIN shift to state 497
-- On Lower shift to state 300
-- On LeftParen shift to state 498
-- On LeftBracket shift to state 129
-- On LeftBrace shift to state 499
-- On ISO646String shift to state 140
-- On INTEGER shift to state 141
-- On INSTANCE shift to state 157
-- On INCLUDES shift to state 503
-- On IA5String shift to state 166
-- On Hyphen shift to state 306
-- On Hstring shift to state 308
-- On GraphicString shift to state 167
-- On GeneralizedTime shift to state 168
-- On GeneralString shift to state 169
-- On FROM shift to state 504
-- On FALSE shift to state 309
-- On EXTERNAL shift to state 170
-- On ENUMERATED shift to state 171
-- On EMBEDDED shift to state 179
-- On DefinedSyntax shift to state 508
-- On Cstring shift to state 310
-- On CONTAINING shift to state 311
-- On CHOICE shift to state 181
-- On CHARACTER shift to state 184
-- On Bstring shift to state 312
-- On BOOLEAN shift to state 186
-- On BMPString shift to state 187
-- On BIT shift to state 188
-- On ABSTRACT_SYNTAX shift to state 162
-- On valueSetFromObjects shift to state 202
-- On valueRange shift to state 511
-- On valueFromObject shift to state 313
-- On value shift to state 512
-- On usefulType shift to state 203
-- On usefulObjectClassReference shift to state 163
-- On unrestrictedCharacterStringValue shift to state 315
-- On unrestrictedCharacterStringType shift to state 204
-- On type_x shift to state 513
-- On typeWithConstraint shift to state 207
-- On typeFromObject shift to state 208
-- On typeConstraint shift to state 514
-- On tuple shift to state 319
-- On taggedType shift to state 209
-- On tag shift to state 210
-- On subtypeElements shift to state 515
-- On specialRealValue shift to state 320
-- On sizeConstraint shift to state 516
-- On singleValue shift to state 517
-- On simpleDefinedValue shift to state 64
-- On simpleDefinedType shift to state 213
-- On signedNumber shift to state 321
-- On setValue shift to state 322
-- On setType shift to state 215
-- On setOfValue shift to state 323
-- On setOfType shift to state 216
-- On sequenceValue shift to state 324
-- On sequenceType shift to state 217
-- On sequenceOfValue shift to state 325
-- On sequenceOfType shift to state 218
-- On selectionType shift to state 219
-- On restrictedCharacterStringValue shift to state 326
-- On restrictedCharacterStringType shift to state 220
-- On relativeOIDValue shift to state 327
-- On relativeOIDType shift to state 221
-- On referencedValue shift to state 328
-- On referencedType shift to state 222
-- On referencedObjects shift to state 518
-- On realValue shift to state 332
-- On realType shift to state 232
-- On quadruple shift to state 333
-- On permittedAlphabet shift to state 521
-- On patternConstraint shift to state 522
-- On parameterizedValueSetType shift to state 233
-- On parameterizedValue shift to state 135
-- On parameterizedType shift to state 234
-- On parameterizedObjectSet shift to state 523
-- On parameterizedObject shift to state 524
-- On openTypeFieldVal shift to state 334
-- On octetStringValue shift to state 335
-- On octetStringType shift to state 237
-- On object_x shift to state 525
-- On objectSetFromObjects shift to state 526
-- On objectSetElements shift to state 527
-- On objectIdentifierValue shift to state 336
-- On objectIdentifierType shift to state 238
-- On objectFromObject shift to state 528
-- On objectDefn shift to state 529
-- On objectClassFieldValue shift to state 337
-- On objectClassFieldType shift to state 239
-- On numericRealValue shift to state 338
-- On nullValue shift to state 339
-- On nullType shift to state 240
-- On lowerEndValue shift to state 530
-- On lowerEndPoint shift to state 532
-- On integerValue shift to state 340
-- On integerType shift to state 241
-- On instanceOfType shift to state 242
-- On innerTypeConstraints shift to state 540
-- On includes shift to state 541
-- On fixedTypeFieldVal shift to state 341
-- On externalValueReference shift to state 136
-- On externalValue shift to state 342
-- On externalTypeReference shift to state 243
-- On externalType shift to state 244
-- On externalObjectSetReference shift to state 245
-- On externalObjectReference shift to state 246
-- On externalObjectClassReference shift to state 164
-- On enumeratedValue shift to state 343
-- On enumeratedType shift to state 247
-- On embeddedPDVValue shift to state 344
-- On embeddedPDVType shift to state 248
-- On elements shift to state 543
-- On definedValue shift to state 345
-- On definedType shift to state 249
-- On definedObjectSet shift to state 544
-- On definedObjectClass shift to state 252
-- On definedObject shift to state 545
-- On defaultSyntax shift to state 546
-- On containedSubtype shift to state 547
-- On constrainedType shift to state 257
-- On choiceValue shift to state 346
-- On choiceType shift to state 258
-- On characterStringValue shift to state 347
-- On characterStringType shift to state 259
-- On characterStringList shift to state 348
-- On builtinValue shift to state 349
-- On builtinType shift to state 260
-- On booleanValue shift to state 350
-- On booleanType shift to state 261
-- On bitStringValue shift to state 351
-- On bitStringType shift to state 262
## Reductions:

State 511:
## Known stack suffix:
## valueRange
## LR(1) items:
subtypeElements -> valueRange . [ UNION RightParen RightBrace Middle INTERSECTION EXCEPT Comma Circumflex Bang ]
## Transitions:
## Reductions:
-- On UNION reduce production subtypeElements -> valueRange
-- On RightParen reduce production subtypeElements -> valueRange
-- On RightBrace reduce production subtypeElements -> valueRange
-- On Middle reduce production subtypeElements -> valueRange
-- On INTERSECTION reduce production subtypeElements -> valueRange
-- On EXCEPT reduce production subtypeElements -> valueRange
-- On Comma reduce production subtypeElements -> valueRange
-- On Circumflex reduce production subtypeElements -> valueRange
-- On Bang reduce production subtypeElements -> valueRange

State 512:
## Known stack suffix:
## value
## LR(1) items:
lowerEndValue -> value . [ LessThan DoubleDot ]
singleValue -> value . [ UNION RightParen RightBrace Middle INTERSECTION EXCEPT Comma Circumflex Bang ]
## Transitions:
## Reductions:
-- On UNION reduce production singleValue -> value
-- On RightParen reduce production singleValue -> value
-- On RightBrace reduce production singleValue -> value
-- On Middle reduce production singleValue -> value
-- On LessThan reduce production lowerEndValue -> value
-- On INTERSECTION reduce production singleValue -> value
-- On EXCEPT reduce production singleValue -> value
-- On DoubleDot reduce production lowerEndValue -> value
-- On Comma reduce production singleValue -> value
-- On Circumflex reduce production singleValue -> value
-- On Bang reduce production singleValue -> value

State 513:
## Known stack suffix:
## type_x
## LR(1) items:
constrainedType -> type_x . constraint_x [ UNION RightParen RightBrace Middle LeftParen INTERSECTION EXCEPT Comma Colon Circumflex Bang ]
openTypeFieldVal -> type_x . Colon value [ UNION RightParen RightBrace Middle LessThan INTERSECTION EXCEPT DoubleDot Comma Circumflex Bang ]
typeConstraint -> type_x . [ UNION RightParen RightBrace Middle INTERSECTION EXCEPT Comma Circumflex Bang ]
## Transitions:
-- On LeftParen shift to state 81
-- On Colon shift to state 317
-- On constraint_x shift to state 206
## Reductions:
-- On UNION reduce production typeConstraint -> type_x
-- On RightParen reduce production typeConstraint -> type_x
-- On RightBrace reduce production typeConstraint -> type_x
-- On Middle reduce production typeConstraint -> type_x
-- On INTERSECTION reduce production typeConstraint -> type_x
-- On EXCEPT reduce production typeConstraint -> type_x
-- On Comma reduce production typeConstraint -> type_x
-- On Circumflex reduce production typeConstraint -> type_x
-- On Bang reduce production typeConstraint -> type_x

State 514:
## Known stack suffix:
## typeConstraint
## LR(1) items:
subtypeElements -> typeConstraint . [ UNION RightParen RightBrace Middle INTERSECTION EXCEPT Comma Circumflex Bang ]
## Transitions:
## Reductions:
-- On UNION reduce production subtypeElements -> typeConstraint
-- On RightParen reduce production subtypeElements -> typeConstraint
-- On RightBrace reduce production subtypeElements -> typeConstraint
-- On Middle reduce production subtypeElements -> typeConstraint
-- On INTERSECTION reduce production subtypeElements -> typeConstraint
-- On EXCEPT reduce production subtypeElements -> typeConstraint
-- On Comma reduce production subtypeElements -> typeConstraint
-- On Circumflex reduce production subtypeElements -> typeConstraint
-- On Bang reduce production subtypeElements -> typeConstraint

State 515:
## Known stack suffix:
## subtypeElements
## LR(1) items:
elements -> subtypeElements . [ UNION RightParen RightBrace Middle INTERSECTION EXCEPT Comma Circumflex Bang ]
## Transitions:
## Reductions:
-- On UNION reduce production elements -> subtypeElements
-- On RightParen reduce production elements -> subtypeElements
-- On RightBrace reduce production elements -> subtypeElements
-- On Middle reduce production elements -> subtypeElements
-- On INTERSECTION reduce production elements -> subtypeElements
-- On EXCEPT reduce production elements -> subtypeElements
-- On Comma reduce production elements -> subtypeElements
-- On Circumflex reduce production elements -> subtypeElements
-- On Bang reduce production elements -> subtypeElements

State 516:
## Known stack suffix:
## sizeConstraint
## LR(1) items:
subtypeElements -> sizeConstraint . [ UNION RightParen RightBrace Middle INTERSECTION EXCEPT Comma Circumflex Bang ]
## Transitions:
## Reductions:
-- On UNION reduce production subtypeElements -> sizeConstraint
-- On RightParen reduce production subtypeElements -> sizeConstraint
-- On RightBrace reduce production subtypeElements -> sizeConstraint
-- On Middle reduce production subtypeElements -> sizeConstraint
-- On INTERSECTION reduce production subtypeElements -> sizeConstraint
-- On EXCEPT reduce production subtypeElements -> sizeConstraint
-- On Comma reduce production subtypeElements -> sizeConstraint
-- On Circumflex reduce production subtypeElements -> sizeConstraint
-- On Bang reduce production subtypeElements -> sizeConstraint

State 517:
## Known stack suffix:
## singleValue
## LR(1) items:
subtypeElements -> singleValue . [ UNION RightParen RightBrace Middle INTERSECTION EXCEPT Comma Circumflex Bang ]
## Transitions:
## Reductions:
-- On UNION reduce production subtypeElements -> singleValue
-- On RightParen reduce production subtypeElements -> singleValue
-- On RightBrace reduce production subtypeElements -> singleValue
-- On Middle reduce production subtypeElements -> singleValue
-- On INTERSECTION reduce production subtypeElements -> singleValue
-- On EXCEPT reduce production subtypeElements -> singleValue
-- On Comma reduce production subtypeElements -> singleValue
-- On Circumflex reduce production subtypeElements -> singleValue
-- On Bang reduce production subtypeElements -> singleValue

State 518:
## Known stack suffix:
## referencedObjects
## LR(1) items:
objectFromObject -> referencedObjects . Dot fieldName [ UNION RightParen RightBrace Middle INTERSECTION EXCEPT Comma Circumflex Bang ]
objectSetFromObjects -> referencedObjects . Dot fieldName [ UNION RightParen RightBrace Middle INTERSECTION EXCEPT Comma Circumflex Bang ]
typeFromObject -> referencedObjects . Dot fieldName [ UNION RightParen RightBrace Middle LeftParen INTERSECTION EXCEPT Comma Colon Circumflex Bang ]
valueFromObject -> referencedObjects . Dot fieldName [ UNION RightParen RightBrace Middle LessThan INTERSECTION EXCEPT DoubleDot Comma Circumflex Bang ]
valueSetFromObjects -> referencedObjects . Dot fieldName [ UNION RightParen RightBrace Middle LeftParen INTERSECTION EXCEPT Comma Colon Circumflex Bang ]
## Transitions:
-- On Dot shift to state 519
## Reductions:

State 519:
## Known stack suffix:
## referencedObjects Dot
## LR(1) items:
objectFromObject -> referencedObjects Dot . fieldName [ UNION RightParen RightBrace Middle INTERSECTION EXCEPT Comma Circumflex Bang ]
objectSetFromObjects -> referencedObjects Dot . fieldName [ UNION RightParen RightBrace Middle INTERSECTION EXCEPT Comma Circumflex Bang ]
typeFromObject -> referencedObjects Dot . fieldName [ UNION RightParen RightBrace Middle LeftParen INTERSECTION EXCEPT Comma Colon Circumflex Bang ]
valueFromObject -> referencedObjects Dot . fieldName [ UNION RightParen RightBrace Middle LessThan INTERSECTION EXCEPT DoubleDot Comma Circumflex Bang ]
valueSetFromObjects -> referencedObjects Dot . fieldName [ UNION RightParen RightBrace Middle LeftParen INTERSECTION EXCEPT Comma Colon Circumflex Bang ]
## Transitions:
-- On UpperField shift to state 225
-- On LowerField shift to state 226
-- On separated_nonempty_list(Dot,primitiveFieldName) shift to state 227
-- On primitiveFieldName shift to state 228
-- On fieldName shift to state 520
## Reductions:

State 520:
## Known stack suffix:
## referencedObjects Dot fieldName
## LR(1) items:
objectFromObject -> referencedObjects Dot fieldName . [ UNION RightParen RightBrace Middle INTERSECTION EXCEPT Comma Circumflex Bang ]
objectSetFromObjects -> referencedObjects Dot fieldName . [ UNION RightParen RightBrace Middle INTERSECTION EXCEPT Comma Circumflex Bang ]
typeFromObject -> referencedObjects Dot fieldName . [ UNION RightParen RightBrace Middle LeftParen INTERSECTION EXCEPT Comma Colon Circumflex Bang ]
valueFromObject -> referencedObjects Dot fieldName . [ UNION RightParen RightBrace Middle LessThan INTERSECTION EXCEPT DoubleDot Comma Circumflex Bang ]
valueSetFromObjects -> referencedObjects Dot fieldName . [ UNION RightParen RightBrace Middle LeftParen INTERSECTION EXCEPT Comma Colon Circumflex Bang ]
## Transitions:
## Reductions:
-- On UNION reduce production valueFromObject -> referencedObjects Dot fieldName
-- On RightParen reduce production valueFromObject -> referencedObjects Dot fieldName
-- On RightBrace reduce production valueFromObject -> referencedObjects Dot fieldName
-- On Middle reduce production valueFromObject -> referencedObjects Dot fieldName
-- On LessThan reduce production valueFromObject -> referencedObjects Dot fieldName
-- On LeftParen reduce production valueSetFromObjects -> referencedObjects Dot fieldName
-- On INTERSECTION reduce production valueFromObject -> referencedObjects Dot fieldName
-- On EXCEPT reduce production valueFromObject -> referencedObjects Dot fieldName
-- On DoubleDot reduce production valueFromObject -> referencedObjects Dot fieldName
-- On Comma reduce production valueFromObject -> referencedObjects Dot fieldName
-- On Colon reduce production valueSetFromObjects -> referencedObjects Dot fieldName
-- On Circumflex reduce production valueFromObject -> referencedObjects Dot fieldName
-- On Bang reduce production valueFromObject -> referencedObjects Dot fieldName

State 521:
## Known stack suffix:
## permittedAlphabet
## LR(1) items:
subtypeElements -> permittedAlphabet . [ UNION RightParen RightBrace Middle INTERSECTION EXCEPT Comma Circumflex Bang ]
## Transitions:
## Reductions:
-- On UNION reduce production subtypeElements -> permittedAlphabet
-- On RightParen reduce production subtypeElements -> permittedAlphabet
-- On RightBrace reduce production subtypeElements -> permittedAlphabet
-- On Middle reduce production subtypeElements -> permittedAlphabet
-- On INTERSECTION reduce production subtypeElements -> permittedAlphabet
-- On EXCEPT reduce production subtypeElements -> permittedAlphabet
-- On Comma reduce production subtypeElements -> permittedAlphabet
-- On Circumflex reduce production subtypeElements -> permittedAlphabet
-- On Bang reduce production subtypeElements -> permittedAlphabet

State 522:
## Known stack suffix:
## patternConstraint
## LR(1) items:
subtypeElements -> patternConstraint . [ UNION RightParen RightBrace Middle INTERSECTION EXCEPT Comma Circumflex Bang ]
## Transitions:
## Reductions:
-- On UNION reduce production subtypeElements -> patternConstraint
-- On RightParen reduce production subtypeElements -> patternConstraint
-- On RightBrace reduce production subtypeElements -> patternConstraint
-- On Middle reduce production subtypeElements -> patternConstraint
-- On INTERSECTION reduce production subtypeElements -> patternConstraint
-- On EXCEPT reduce production subtypeElements -> patternConstraint
-- On Comma reduce production subtypeElements -> patternConstraint
-- On Circumflex reduce production subtypeElements -> patternConstraint
-- On Bang reduce production subtypeElements -> patternConstraint

State 523:
## Known stack suffix:
## parameterizedObjectSet
## LR(1) items:
objectSetElements -> parameterizedObjectSet . [ UNION RightParen RightBrace Middle INTERSECTION EXCEPT Comma Circumflex Bang ]
referencedObjects -> parameterizedObjectSet . [ Dot ]
## Transitions:
## Reductions:
-- On UNION reduce production objectSetElements -> parameterizedObjectSet
-- On RightParen reduce production objectSetElements -> parameterizedObjectSet
-- On RightBrace reduce production objectSetElements -> parameterizedObjectSet
-- On Middle reduce production objectSetElements -> parameterizedObjectSet
-- On INTERSECTION reduce production objectSetElements -> parameterizedObjectSet
-- On EXCEPT reduce production objectSetElements -> parameterizedObjectSet
-- On Dot reduce production referencedObjects -> parameterizedObjectSet
-- On Comma reduce production objectSetElements -> parameterizedObjectSet
-- On Circumflex reduce production objectSetElements -> parameterizedObjectSet
-- On Bang reduce production objectSetElements -> parameterizedObjectSet

State 524:
## Known stack suffix:
## parameterizedObject
## LR(1) items:
object_x -> parameterizedObject . [ Upper UNION RightParen RightBrace Middle Lower INTERSECTION EXCEPT END Comma Circumflex Bang ]
referencedObjects -> parameterizedObject . [ Dot ]
## Transitions:
## Reductions:
-- On Upper reduce production object_x -> parameterizedObject
-- On UNION reduce production object_x -> parameterizedObject
-- On RightParen reduce production object_x -> parameterizedObject
-- On RightBrace reduce production object_x -> parameterizedObject
-- On Middle reduce production object_x -> parameterizedObject
-- On Lower reduce production object_x -> parameterizedObject
-- On INTERSECTION reduce production object_x -> parameterizedObject
-- On EXCEPT reduce production object_x -> parameterizedObject
-- On END reduce production object_x -> parameterizedObject
-- On Dot reduce production referencedObjects -> parameterizedObject
-- On Comma reduce production object_x -> parameterizedObject
-- On Circumflex reduce production object_x -> parameterizedObject
-- On Bang reduce production object_x -> parameterizedObject

State 525:
## Known stack suffix:
## object_x
## LR(1) items:
objectSetElements -> object_x . [ UNION RightParen RightBrace Middle INTERSECTION EXCEPT Comma Circumflex Bang ]
## Transitions:
## Reductions:
-- On UNION reduce production objectSetElements -> object_x
-- On RightParen reduce production objectSetElements -> object_x
-- On RightBrace reduce production objectSetElements -> object_x
-- On Middle reduce production objectSetElements -> object_x
-- On INTERSECTION reduce production objectSetElements -> object_x
-- On EXCEPT reduce production objectSetElements -> object_x
-- On Comma reduce production objectSetElements -> object_x
-- On Circumflex reduce production objectSetElements -> object_x
-- On Bang reduce production objectSetElements -> object_x

State 526:
## Known stack suffix:
## objectSetFromObjects
## LR(1) items:
objectSetElements -> objectSetFromObjects . [ UNION RightParen RightBrace Middle INTERSECTION EXCEPT Comma Circumflex Bang ]
## Transitions:
## Reductions:
-- On UNION reduce production objectSetElements -> objectSetFromObjects
-- On RightParen reduce production objectSetElements -> objectSetFromObjects
-- On RightBrace reduce production objectSetElements -> objectSetFromObjects
-- On Middle reduce production objectSetElements -> objectSetFromObjects
-- On INTERSECTION reduce production objectSetElements -> objectSetFromObjects
-- On EXCEPT reduce production objectSetElements -> objectSetFromObjects
-- On Comma reduce production objectSetElements -> objectSetFromObjects
-- On Circumflex reduce production objectSetElements -> objectSetFromObjects
-- On Bang reduce production objectSetElements -> objectSetFromObjects

State 527:
## Known stack suffix:
## objectSetElements
## LR(1) items:
elements -> objectSetElements . [ UNION RightParen RightBrace Middle INTERSECTION EXCEPT Comma Circumflex Bang ]
## Transitions:
## Reductions:
-- On UNION reduce production elements -> objectSetElements
-- On RightParen reduce production elements -> objectSetElements
-- On RightBrace reduce production elements -> objectSetElements
-- On Middle reduce production elements -> objectSetElements
-- On INTERSECTION reduce production elements -> objectSetElements
-- On EXCEPT reduce production elements -> objectSetElements
-- On Comma reduce production elements -> objectSetElements
-- On Circumflex reduce production elements -> objectSetElements
-- On Bang reduce production elements -> objectSetElements

State 528:
## Known stack suffix:
## objectFromObject
## LR(1) items:
object_x -> objectFromObject . [ Upper UNION RightParen RightBrace Middle Lower INTERSECTION EXCEPT END Comma Circumflex Bang ]
## Transitions:
## Reductions:
-- On Upper reduce production object_x -> objectFromObject
-- On UNION reduce production object_x -> objectFromObject
-- On RightParen reduce production object_x -> objectFromObject
-- On RightBrace reduce production object_x -> objectFromObject
-- On Middle reduce production object_x -> objectFromObject
-- On Lower reduce production object_x -> objectFromObject
-- On INTERSECTION reduce production object_x -> objectFromObject
-- On EXCEPT reduce production object_x -> objectFromObject
-- On END reduce production object_x -> objectFromObject
-- On Comma reduce production object_x -> objectFromObject
-- On Circumflex reduce production object_x -> objectFromObject
-- On Bang reduce production object_x -> objectFromObject

State 529:
## Known stack suffix:
## objectDefn
## LR(1) items:
object_x -> objectDefn . [ Upper UNION RightParen RightBrace Middle Lower INTERSECTION EXCEPT END Comma Circumflex Bang ]
## Transitions:
## Reductions:
-- On Upper reduce production object_x -> objectDefn
-- On UNION reduce production object_x -> objectDefn
-- On RightParen reduce production object_x -> objectDefn
-- On RightBrace reduce production object_x -> objectDefn
-- On Middle reduce production object_x -> objectDefn
-- On Lower reduce production object_x -> objectDefn
-- On INTERSECTION reduce production object_x -> objectDefn
-- On EXCEPT reduce production object_x -> objectDefn
-- On END reduce production object_x -> objectDefn
-- On Comma reduce production object_x -> objectDefn
-- On Circumflex reduce production object_x -> objectDefn
-- On Bang reduce production object_x -> objectDefn

State 530:
## Known stack suffix:
## lowerEndValue
## LR(1) items:
lowerEndPoint -> lowerEndValue . [ DoubleDot ]
lowerEndPoint -> lowerEndValue . LessThan [ DoubleDot ]
## Transitions:
-- On LessThan shift to state 531
## Reductions:
-- On DoubleDot reduce production lowerEndPoint -> lowerEndValue

State 531:
## Known stack suffix:
## lowerEndValue LessThan
## LR(1) items:
lowerEndPoint -> lowerEndValue LessThan . [ DoubleDot ]
## Transitions:
## Reductions:
-- On DoubleDot reduce production lowerEndPoint -> lowerEndValue LessThan

State 532:
## Known stack suffix:
## lowerEndPoint
## LR(1) items:
valueRange -> lowerEndPoint . DoubleDot upperEndPoint [ UNION RightParen RightBrace Middle INTERSECTION EXCEPT Comma Circumflex Bang ]
## Transitions:
-- On DoubleDot shift to state 533
## Reductions:

State 533:
## Known stack suffix:
## lowerEndPoint DoubleDot
## LR(1) items:
valueRange -> lowerEndPoint DoubleDot . upperEndPoint [ UNION RightParen RightBrace Middle INTERSECTION EXCEPT Comma Circumflex Bang ]
## Transitions:
-- On VisibleString shift to state 66
-- On VideotexString shift to state 67
-- On Upper shift to state 108
-- On UniversalString shift to state 72
-- On UTF8String shift to state 73
-- On UTCTime shift to state 74
-- On TeletexString shift to state 75
-- On TYPE_IDENTIFIER shift to state 76
-- On TRUE shift to state 77
-- On T61String shift to state 78
-- On SET shift to state 79
-- On SEQUENCE shift to state 111
-- On RealNumber shift to state 296
-- On RELATIVE_OID shift to state 116
-- On REAL shift to state 117
-- On PrintableString shift to state 118
-- On PLUS_INFINITY shift to state 297
-- On ObjectDescriptor shift to state 119
-- On OCTET shift to state 120
-- On OBJECT shift to state 122
-- On NumericString shift to state 124
-- On Number shift to state 145
-- On NULL shift to state 298
-- On MINUS_INFINITY shift to state 299
-- On MAX shift to state 534
-- On Lower shift to state 300
-- On LessThan shift to state 535
-- On LeftBracket shift to state 129
-- On LeftBrace shift to state 302
-- On ISO646String shift to state 140
-- On INTEGER shift to state 141
-- On INSTANCE shift to state 157
-- On IA5String shift to state 166
-- On Hyphen shift to state 306
-- On Hstring shift to state 308
-- On GraphicString shift to state 167
-- On GeneralizedTime shift to state 168
-- On GeneralString shift to state 169
-- On FALSE shift to state 309
-- On EXTERNAL shift to state 170
-- On ENUMERATED shift to state 171
-- On EMBEDDED shift to state 179
-- On Cstring shift to state 310
-- On CONTAINING shift to state 311
-- On CHOICE shift to state 181
-- On CHARACTER shift to state 184
-- On Bstring shift to state 312
-- On BOOLEAN shift to state 186
-- On BMPString shift to state 187
-- On BIT shift to state 188
-- On ABSTRACT_SYNTAX shift to state 162
-- On valueSetFromObjects shift to state 202
-- On valueFromObject shift to state 313
-- On value shift to state 536
-- On usefulType shift to state 203
-- On usefulObjectClassReference shift to state 163
-- On upperEndValue shift to state 538
-- On upperEndPoint shift to state 539
-- On unrestrictedCharacterStringValue shift to state 315
-- On unrestrictedCharacterStringType shift to state 204
-- On type_x shift to state 316
-- On typeWithConstraint shift to state 207
-- On typeFromObject shift to state 208
-- On tuple shift to state 319
-- On taggedType shift to state 209
-- On tag shift to state 210
-- On specialRealValue shift to state 320
-- On simpleDefinedValue shift to state 64
-- On simpleDefinedType shift to state 213
-- On signedNumber shift to state 321
-- On setValue shift to state 322
-- On setType shift to state 215
-- On setOfValue shift to state 323
-- On setOfType shift to state 216
-- On sequenceValue shift to state 324
-- On sequenceType shift to state 217
-- On sequenceOfValue shift to state 325
-- On sequenceOfType shift to state 218
-- On selectionType shift to state 219
-- On restrictedCharacterStringValue shift to state 326
-- On restrictedCharacterStringType shift to state 220
-- On relativeOIDValue shift to state 327
-- On relativeOIDType shift to state 221
-- On referencedValue shift to state 328
-- On referencedType shift to state 222
-- On referencedObjects shift to state 329
-- On realValue shift to state 332
-- On realType shift to state 232
-- On quadruple shift to state 333
-- On parameterizedValueSetType shift to state 233
-- On parameterizedValue shift to state 135
-- On parameterizedType shift to state 234
-- On parameterizedObjectSet shift to state 235
-- On parameterizedObject shift to state 236
-- On openTypeFieldVal shift to state 334
-- On octetStringValue shift to state 335
-- On octetStringType shift to state 237
-- On objectIdentifierValue shift to state 336
-- On objectIdentifierType shift to state 238
-- On objectClassFieldValue shift to state 337
-- On objectClassFieldType shift to state 239
-- On numericRealValue shift to state 338
-- On nullValue shift to state 339
-- On nullType shift to state 240
-- On integerValue shift to state 340
-- On integerType shift to state 241
-- On instanceOfType shift to state 242
-- On fixedTypeFieldVal shift to state 341
-- On externalValueReference shift to state 136
-- On externalValue shift to state 342
-- On externalTypeReference shift to state 243
-- On externalType shift to state 244
-- On externalObjectSetReference shift to state 245
-- On externalObjectReference shift to state 246
-- On externalObjectClassReference shift to state 164
-- On enumeratedValue shift to state 343
-- On enumeratedType shift to state 247
-- On embeddedPDVValue shift to state 344
-- On embeddedPDVType shift to state 248
-- On definedValue shift to state 345
-- On definedType shift to state 249
-- On definedObjectSet shift to state 250
-- On definedObjectClass shift to state 252
-- On definedObject shift to state 255
-- On constrainedType shift to state 257
-- On choiceValue shift to state 346
-- On choiceType shift to state 258
-- On characterStringValue shift to state 347
-- On characterStringType shift to state 259
-- On characterStringList shift to state 348
-- On builtinValue shift to state 349
-- On builtinType shift to state 260
-- On booleanValue shift to state 350
-- On booleanType shift to state 261
-- On bitStringValue shift to state 351
-- On bitStringType shift to state 262
## Reductions:

State 534:
## Known stack suffix:
## MAX
## LR(1) items:
upperEndValue -> MAX . [ UNION RightParen RightBrace Middle INTERSECTION EXCEPT Comma Circumflex Bang ]
## Transitions:
## Reductions:
-- On UNION reduce production upperEndValue -> MAX
-- On RightParen reduce production upperEndValue -> MAX
-- On RightBrace reduce production upperEndValue -> MAX
-- On Middle reduce production upperEndValue -> MAX
-- On INTERSECTION reduce production upperEndValue -> MAX
-- On EXCEPT reduce production upperEndValue -> MAX
-- On Comma reduce production upperEndValue -> MAX
-- On Circumflex reduce production upperEndValue -> MAX
-- On Bang reduce production upperEndValue -> MAX

State 535:
## Known stack suffix:
## LessThan
## LR(1) items:
upperEndPoint -> LessThan . upperEndValue [ UNION RightParen RightBrace Middle INTERSECTION EXCEPT Comma Circumflex Bang ]
## Transitions:
-- On VisibleString shift to state 66
-- On VideotexString shift to state 67
-- On Upper shift to state 108
-- On UniversalString shift to state 72
-- On UTF8String shift to state 73
-- On UTCTime shift to state 74
-- On TeletexString shift to state 75
-- On TYPE_IDENTIFIER shift to state 76
-- On TRUE shift to state 77
-- On T61String shift to state 78
-- On SET shift to state 79
-- On SEQUENCE shift to state 111
-- On RealNumber shift to state 296
-- On RELATIVE_OID shift to state 116
-- On REAL shift to state 117
-- On PrintableString shift to state 118
-- On PLUS_INFINITY shift to state 297
-- On ObjectDescriptor shift to state 119
-- On OCTET shift to state 120
-- On OBJECT shift to state 122
-- On NumericString shift to state 124
-- On Number shift to state 145
-- On NULL shift to state 298
-- On MINUS_INFINITY shift to state 299
-- On MAX shift to state 534
-- On Lower shift to state 300
-- On LeftBracket shift to state 129
-- On LeftBrace shift to state 302
-- On ISO646String shift to state 140
-- On INTEGER shift to state 141
-- On INSTANCE shift to state 157
-- On IA5String shift to state 166
-- On Hyphen shift to state 306
-- On Hstring shift to state 308
-- On GraphicString shift to state 167
-- On GeneralizedTime shift to state 168
-- On GeneralString shift to state 169
-- On FALSE shift to state 309
-- On EXTERNAL shift to state 170
-- On ENUMERATED shift to state 171
-- On EMBEDDED shift to state 179
-- On Cstring shift to state 310
-- On CONTAINING shift to state 311
-- On CHOICE shift to state 181
-- On CHARACTER shift to state 184
-- On Bstring shift to state 312
-- On BOOLEAN shift to state 186
-- On BMPString shift to state 187
-- On BIT shift to state 188
-- On ABSTRACT_SYNTAX shift to state 162
-- On valueSetFromObjects shift to state 202
-- On valueFromObject shift to state 313
-- On value shift to state 536
-- On usefulType shift to state 203
-- On usefulObjectClassReference shift to state 163
-- On upperEndValue shift to state 537
-- On unrestrictedCharacterStringValue shift to state 315
-- On unrestrictedCharacterStringType shift to state 204
-- On type_x shift to state 316
-- On typeWithConstraint shift to state 207
-- On typeFromObject shift to state 208
-- On tuple shift to state 319
-- On taggedType shift to state 209
-- On tag shift to state 210
-- On specialRealValue shift to state 320
-- On simpleDefinedValue shift to state 64
-- On simpleDefinedType shift to state 213
-- On signedNumber shift to state 321
-- On setValue shift to state 322
-- On setType shift to state 215
-- On setOfValue shift to state 323
-- On setOfType shift to state 216
-- On sequenceValue shift to state 324
-- On sequenceType shift to state 217
-- On sequenceOfValue shift to state 325
-- On sequenceOfType shift to state 218
-- On selectionType shift to state 219
-- On restrictedCharacterStringValue shift to state 326
-- On restrictedCharacterStringType shift to state 220
-- On relativeOIDValue shift to state 327
-- On relativeOIDType shift to state 221
-- On referencedValue shift to state 328
-- On referencedType shift to state 222
-- On referencedObjects shift to state 329
-- On realValue shift to state 332
-- On realType shift to state 232
-- On quadruple shift to state 333
-- On parameterizedValueSetType shift to state 233
-- On parameterizedValue shift to state 135
-- On parameterizedType shift to state 234
-- On parameterizedObjectSet shift to state 235
-- On parameterizedObject shift to state 236
-- On openTypeFieldVal shift to state 334
-- On octetStringValue shift to state 335
-- On octetStringType shift to state 237
-- On objectIdentifierValue shift to state 336
-- On objectIdentifierType shift to state 238
-- On objectClassFieldValue shift to state 337
-- On objectClassFieldType shift to state 239
-- On numericRealValue shift to state 338
-- On nullValue shift to state 339
-- On nullType shift to state 240
-- On integerValue shift to state 340
-- On integerType shift to state 241
-- On instanceOfType shift to state 242
-- On fixedTypeFieldVal shift to state 341
-- On externalValueReference shift to state 136
-- On externalValue shift to state 342
-- On externalTypeReference shift to state 243
-- On externalType shift to state 244
-- On externalObjectSetReference shift to state 245
-- On externalObjectReference shift to state 246
-- On externalObjectClassReference shift to state 164
-- On enumeratedValue shift to state 343
-- On enumeratedType shift to state 247
-- On embeddedPDVValue shift to state 344
-- On embeddedPDVType shift to state 248
-- On definedValue shift to state 345
-- On definedType shift to state 249
-- On definedObjectSet shift to state 250
-- On definedObjectClass shift to state 252
-- On definedObject shift to state 255
-- On constrainedType shift to state 257
-- On choiceValue shift to state 346
-- On choiceType shift to state 258
-- On characterStringValue shift to state 347
-- On characterStringType shift to state 259
-- On characterStringList shift to state 348
-- On builtinValue shift to state 349
-- On builtinType shift to state 260
-- On booleanValue shift to state 350
-- On booleanType shift to state 261
-- On bitStringValue shift to state 351
-- On bitStringType shift to state 262
## Reductions:

State 536:
## Known stack suffix:
## value
## LR(1) items:
upperEndValue -> value . [ UNION RightParen RightBrace Middle INTERSECTION EXCEPT Comma Circumflex Bang ]
## Transitions:
## Reductions:
-- On UNION reduce production upperEndValue -> value
-- On RightParen reduce production upperEndValue -> value
-- On RightBrace reduce production upperEndValue -> value
-- On Middle reduce production upperEndValue -> value
-- On INTERSECTION reduce production upperEndValue -> value
-- On EXCEPT reduce production upperEndValue -> value
-- On Comma reduce production upperEndValue -> value
-- On Circumflex reduce production upperEndValue -> value
-- On Bang reduce production upperEndValue -> value

State 537:
## Known stack suffix:
## LessThan upperEndValue
## LR(1) items:
upperEndPoint -> LessThan upperEndValue . [ UNION RightParen RightBrace Middle INTERSECTION EXCEPT Comma Circumflex Bang ]
## Transitions:
## Reductions:
-- On UNION reduce production upperEndPoint -> LessThan upperEndValue
-- On RightParen reduce production upperEndPoint -> LessThan upperEndValue
-- On RightBrace reduce production upperEndPoint -> LessThan upperEndValue
-- On Middle reduce production upperEndPoint -> LessThan upperEndValue
-- On INTERSECTION reduce production upperEndPoint -> LessThan upperEndValue
-- On EXCEPT reduce production upperEndPoint -> LessThan upperEndValue
-- On Comma reduce production upperEndPoint -> LessThan upperEndValue
-- On Circumflex reduce production upperEndPoint -> LessThan upperEndValue
-- On Bang reduce production upperEndPoint -> LessThan upperEndValue

State 538:
## Known stack suffix:
## upperEndValue
## LR(1) items:
upperEndPoint -> upperEndValue . [ UNION RightParen RightBrace Middle INTERSECTION EXCEPT Comma Circumflex Bang ]
## Transitions:
## Reductions:
-- On UNION reduce production upperEndPoint -> upperEndValue
-- On RightParen reduce production upperEndPoint -> upperEndValue
-- On RightBrace reduce production upperEndPoint -> upperEndValue
-- On Middle reduce production upperEndPoint -> upperEndValue
-- On INTERSECTION reduce production upperEndPoint -> upperEndValue
-- On EXCEPT reduce production upperEndPoint -> upperEndValue
-- On Comma reduce production upperEndPoint -> upperEndValue
-- On Circumflex reduce production upperEndPoint -> upperEndValue
-- On Bang reduce production upperEndPoint -> upperEndValue

State 539:
## Known stack suffix:
## lowerEndPoint DoubleDot upperEndPoint
## LR(1) items:
valueRange -> lowerEndPoint DoubleDot upperEndPoint . [ UNION RightParen RightBrace Middle INTERSECTION EXCEPT Comma Circumflex Bang ]
## Transitions:
## Reductions:
-- On UNION reduce production valueRange -> lowerEndPoint DoubleDot upperEndPoint
-- On RightParen reduce production valueRange -> lowerEndPoint DoubleDot upperEndPoint
-- On RightBrace reduce production valueRange -> lowerEndPoint DoubleDot upperEndPoint
-- On Middle reduce production valueRange -> lowerEndPoint DoubleDot upperEndPoint
-- On INTERSECTION reduce production valueRange -> lowerEndPoint DoubleDot upperEndPoint
-- On EXCEPT reduce production valueRange -> lowerEndPoint DoubleDot upperEndPoint
-- On Comma reduce production valueRange -> lowerEndPoint DoubleDot upperEndPoint
-- On Circumflex reduce production valueRange -> lowerEndPoint DoubleDot upperEndPoint
-- On Bang reduce production valueRange -> lowerEndPoint DoubleDot upperEndPoint

State 540:
## Known stack suffix:
## innerTypeConstraints
## LR(1) items:
subtypeElements -> innerTypeConstraints . [ UNION RightParen RightBrace Middle INTERSECTION EXCEPT Comma Circumflex Bang ]
## Transitions:
## Reductions:
-- On UNION reduce production subtypeElements -> innerTypeConstraints
-- On RightParen reduce production subtypeElements -> innerTypeConstraints
-- On RightBrace reduce production subtypeElements -> innerTypeConstraints
-- On Middle reduce production subtypeElements -> innerTypeConstraints
-- On INTERSECTION reduce production subtypeElements -> innerTypeConstraints
-- On EXCEPT reduce production subtypeElements -> innerTypeConstraints
-- On Comma reduce production subtypeElements -> innerTypeConstraints
-- On Circumflex reduce production subtypeElements -> innerTypeConstraints
-- On Bang reduce production subtypeElements -> innerTypeConstraints

State 541:
## Known stack suffix:
## includes
## LR(1) items:
containedSubtype -> includes . type_x [ UNION RightParen RightBrace Middle INTERSECTION EXCEPT Comma Circumflex Bang ]
## Transitions:
-- On VisibleString shift to state 66
-- On VideotexString shift to state 67
-- On Upper shift to state 113
-- On UniversalString shift to state 72
-- On UTF8String shift to state 73
-- On UTCTime shift to state 74
-- On TeletexString shift to state 75
-- On TYPE_IDENTIFIER shift to state 76
-- On T61String shift to state 78
-- On SET shift to state 79
-- On SEQUENCE shift to state 111
-- On RELATIVE_OID shift to state 116
-- On REAL shift to state 117
-- On PrintableString shift to state 118
-- On ObjectDescriptor shift to state 119
-- On OCTET shift to state 120
-- On OBJECT shift to state 122
-- On NumericString shift to state 124
-- On NULL shift to state 125
-- On Lower shift to state 127
-- On LeftBracket shift to state 129
-- On ISO646String shift to state 140
-- On INTEGER shift to state 141
-- On INSTANCE shift to state 157
-- On IA5String shift to state 166
-- On GraphicString shift to state 167
-- On GeneralizedTime shift to state 168
-- On GeneralString shift to state 169
-- On EXTERNAL shift to state 170
-- On ENUMERATED shift to state 171
-- On EMBEDDED shift to state 179
-- On CHOICE shift to state 181
-- On CHARACTER shift to state 184
-- On BOOLEAN shift to state 186
-- On BMPString shift to state 187
-- On BIT shift to state 188
-- On ABSTRACT_SYNTAX shift to state 162
-- On valueSetFromObjects shift to state 202
-- On usefulType shift to state 203
-- On usefulObjectClassReference shift to state 163
-- On unrestrictedCharacterStringType shift to state 204
-- On type_x shift to state 542
-- On typeWithConstraint shift to state 207
-- On typeFromObject shift to state 208
-- On taggedType shift to state 209
-- On tag shift to state 210
-- On simpleDefinedType shift to state 213
-- On setType shift to state 215
-- On setOfType shift to state 216
-- On sequenceType shift to state 217
-- On sequenceOfType shift to state 218
-- On selectionType shift to state 219
-- On restrictedCharacterStringType shift to state 220
-- On relativeOIDType shift to state 221
-- On referencedType shift to state 222
-- On referencedObjects shift to state 223
-- On realType shift to state 232
-- On parameterizedValueSetType shift to state 233
-- On parameterizedType shift to state 234
-- On parameterizedObjectSet shift to state 235
-- On parameterizedObject shift to state 236
-- On octetStringType shift to state 237
-- On objectIdentifierType shift to state 238
-- On objectClassFieldType shift to state 239
-- On nullType shift to state 240
-- On integerType shift to state 241
-- On instanceOfType shift to state 242
-- On externalTypeReference shift to state 243
-- On externalType shift to state 244
-- On externalObjectSetReference shift to state 245
-- On externalObjectReference shift to state 246
-- On externalObjectClassReference shift to state 164
-- On enumeratedType shift to state 247
-- On embeddedPDVType shift to state 248
-- On definedType shift to state 249
-- On definedObjectSet shift to state 250
-- On definedObjectClass shift to state 252
-- On definedObject shift to state 255
-- On constrainedType shift to state 257
-- On choiceType shift to state 258
-- On characterStringType shift to state 259
-- On builtinType shift to state 260
-- On booleanType shift to state 261
-- On bitStringType shift to state 262
## Reductions:

State 542:
## Known stack suffix:
## includes type_x
## LR(1) items:
constrainedType -> type_x . constraint_x [ UNION RightParen RightBrace Middle LeftParen INTERSECTION EXCEPT Comma Circumflex Bang ]
containedSubtype -> includes type_x . [ UNION RightParen RightBrace Middle INTERSECTION EXCEPT Comma Circumflex Bang ]
## Transitions:
-- On LeftParen shift to state 81
-- On constraint_x shift to state 206
## Reductions:
-- On UNION reduce production containedSubtype -> includes type_x
-- On RightParen reduce production containedSubtype -> includes type_x
-- On RightBrace reduce production containedSubtype -> includes type_x
-- On Middle reduce production containedSubtype -> includes type_x
-- On INTERSECTION reduce production containedSubtype -> includes type_x
-- On EXCEPT reduce production containedSubtype -> includes type_x
-- On Comma reduce production containedSubtype -> includes type_x
-- On Circumflex reduce production containedSubtype -> includes type_x
-- On Bang reduce production containedSubtype -> includes type_x

State 543:
## Known stack suffix:
## EXCEPT elements
## LR(1) items:
exclusions -> EXCEPT elements . [ UNION RightParen RightBrace Middle INTERSECTION Comma Circumflex Bang ]
## Transitions:
## Reductions:
-- On UNION reduce production exclusions -> EXCEPT elements
-- On RightParen reduce production exclusions -> EXCEPT elements
-- On RightBrace reduce production exclusions -> EXCEPT elements
-- On Middle reduce production exclusions -> EXCEPT elements
-- On INTERSECTION reduce production exclusions -> EXCEPT elements
-- On Comma reduce production exclusions -> EXCEPT elements
-- On Circumflex reduce production exclusions -> EXCEPT elements
-- On Bang reduce production exclusions -> EXCEPT elements

State 544:
## Known stack suffix:
## definedObjectSet
## LR(1) items:
objectSetElements -> definedObjectSet . [ UNION RightParen RightBrace Middle INTERSECTION EXCEPT Comma Circumflex Bang ]
parameterizedObjectSet -> definedObjectSet . actualParameterList [ UNION RightParen RightBrace Middle INTERSECTION EXCEPT Dot Comma Circumflex Bang ]
referencedObjects -> definedObjectSet . [ Dot ]
## Transitions:
-- On LeftBrace shift to state 65
-- On actualParameterList shift to state 251
## Reductions:
-- On UNION reduce production objectSetElements -> definedObjectSet
-- On RightParen reduce production objectSetElements -> definedObjectSet
-- On RightBrace reduce production objectSetElements -> definedObjectSet
-- On Middle reduce production objectSetElements -> definedObjectSet
-- On INTERSECTION reduce production objectSetElements -> definedObjectSet
-- On EXCEPT reduce production objectSetElements -> definedObjectSet
-- On Dot reduce production referencedObjects -> definedObjectSet
-- On Comma reduce production objectSetElements -> definedObjectSet
-- On Circumflex reduce production objectSetElements -> definedObjectSet
-- On Bang reduce production objectSetElements -> definedObjectSet

State 545:
## Known stack suffix:
## definedObject
## LR(1) items:
object_x -> definedObject . [ Upper UNION RightParen RightBrace Middle Lower INTERSECTION EXCEPT END Comma Circumflex Bang ]
parameterizedObject -> definedObject . actualParameterList [ Upper UNION RightParen RightBrace Middle Lower INTERSECTION EXCEPT END Dot Comma Circumflex Bang ]
referencedObjects -> definedObject . [ Dot ]
## Transitions:
-- On LeftBrace shift to state 65
-- On actualParameterList shift to state 256
## Reductions:
-- On Upper reduce production object_x -> definedObject
-- On UNION reduce production object_x -> definedObject
-- On RightParen reduce production object_x -> definedObject
-- On RightBrace reduce production object_x -> definedObject
-- On Middle reduce production object_x -> definedObject
-- On Lower reduce production object_x -> definedObject
-- On INTERSECTION reduce production object_x -> definedObject
-- On EXCEPT reduce production object_x -> definedObject
-- On END reduce production object_x -> definedObject
-- On Dot reduce production referencedObjects -> definedObject
-- On Comma reduce production object_x -> definedObject
-- On Circumflex reduce production object_x -> definedObject
-- On Bang reduce production object_x -> definedObject

State 546:
## Known stack suffix:
## defaultSyntax
## LR(1) items:
objectDefn -> defaultSyntax . [ Upper UNION RightParen RightBrace Middle Lower INTERSECTION EXCEPT END Comma Circumflex Bang ]
## Transitions:
## Reductions:
-- On Upper reduce production objectDefn -> defaultSyntax
-- On UNION reduce production objectDefn -> defaultSyntax
-- On RightParen reduce production objectDefn -> defaultSyntax
-- On RightBrace reduce production objectDefn -> defaultSyntax
-- On Middle reduce production objectDefn -> defaultSyntax
-- On Lower reduce production objectDefn -> defaultSyntax
-- On INTERSECTION reduce production objectDefn -> defaultSyntax
-- On EXCEPT reduce production objectDefn -> defaultSyntax
-- On END reduce production objectDefn -> defaultSyntax
-- On Comma reduce production objectDefn -> defaultSyntax
-- On Circumflex reduce production objectDefn -> defaultSyntax
-- On Bang reduce production objectDefn -> defaultSyntax

State 547:
## Known stack suffix:
## containedSubtype
## LR(1) items:
subtypeElements -> containedSubtype . [ UNION RightParen RightBrace Middle INTERSECTION EXCEPT Comma Circumflex Bang ]
## Transitions:
## Reductions:
-- On UNION reduce production subtypeElements -> containedSubtype
-- On RightParen reduce production subtypeElements -> containedSubtype
-- On RightBrace reduce production subtypeElements -> containedSubtype
-- On Middle reduce production subtypeElements -> containedSubtype
-- On INTERSECTION reduce production subtypeElements -> containedSubtype
-- On EXCEPT reduce production subtypeElements -> containedSubtype
-- On Comma reduce production subtypeElements -> containedSubtype
-- On Circumflex reduce production subtypeElements -> containedSubtype
-- On Bang reduce production subtypeElements -> containedSubtype

State 548:
## Known stack suffix:
## ALL exclusions
## LR(1) items:
elementSetSpec -> ALL exclusions . [ RightParen RightBrace Comma Bang ]
## Transitions:
## Reductions:
-- On RightParen reduce production elementSetSpec -> ALL exclusions
-- On RightBrace reduce production elementSetSpec -> ALL exclusions
-- On Comma reduce production elementSetSpec -> ALL exclusions
-- On Bang reduce production elementSetSpec -> ALL exclusions

State 549:
## Known stack suffix:
## unions
## LR(1) items:
elementSetSpec -> unions . [ RightParen RightBrace Comma Bang ]
uElems -> unions . [ UNION Middle ]
## Transitions:
## Reductions:
-- On UNION reduce production uElems -> unions
-- On RightParen reduce production elementSetSpec -> unions
-- On RightBrace reduce production elementSetSpec -> unions
-- On Middle reduce production uElems -> unions
-- On Comma reduce production elementSetSpec -> unions
-- On Bang reduce production elementSetSpec -> unions

State 550:
## Known stack suffix:
## uElems
## LR(1) items:
unions -> uElems . unionMark intersections [ UNION RightParen RightBrace Middle Comma Bang ]
## Transitions:
-- On UNION shift to state 551
-- On Middle shift to state 552
-- On unionMark shift to state 553
## Reductions:

State 551:
## Known stack suffix:
## UNION
## LR(1) items:
unionMark -> UNION . [ WITH VisibleString VideotexString Upper UniversalString UTF8String UTCTime TeletexString TYPE_IDENTIFIER TRUE T61String SIZE SET SEQUENCE RealNumber RELATIVE_OID REAL PrintableString PLUS_INFINITY PATTERN ObjectDescriptor OCTET OBJECT NumericString Number NULL MINUS_INFINITY MIN Lower LeftParen LeftBracket LeftBrace ISO646String INTEGER INSTANCE INCLUDES IA5String Hyphen Hstring GraphicString GeneralizedTime GeneralString FROM FALSE EXTERNAL ENUMERATED EMBEDDED DefinedSyntax Cstring CONTAINING CHOICE CHARACTER Bstring BOOLEAN BMPString BIT ABSTRACT_SYNTAX ]
## Transitions:
## Reductions:
-- On WITH reduce production unionMark -> UNION
-- On VisibleString reduce production unionMark -> UNION
-- On VideotexString reduce production unionMark -> UNION
-- On Upper reduce production unionMark -> UNION
-- On UniversalString reduce production unionMark -> UNION
-- On UTF8String reduce production unionMark -> UNION
-- On UTCTime reduce production unionMark -> UNION
-- On TeletexString reduce production unionMark -> UNION
-- On TYPE_IDENTIFIER reduce production unionMark -> UNION
-- On TRUE reduce production unionMark -> UNION
-- On T61String reduce production unionMark -> UNION
-- On SIZE reduce production unionMark -> UNION
-- On SET reduce production unionMark -> UNION
-- On SEQUENCE reduce production unionMark -> UNION
-- On RealNumber reduce production unionMark -> UNION
-- On RELATIVE_OID reduce production unionMark -> UNION
-- On REAL reduce production unionMark -> UNION
-- On PrintableString reduce production unionMark -> UNION
-- On PLUS_INFINITY reduce production unionMark -> UNION
-- On PATTERN reduce production unionMark -> UNION
-- On ObjectDescriptor reduce production unionMark -> UNION
-- On OCTET reduce production unionMark -> UNION
-- On OBJECT reduce production unionMark -> UNION
-- On NumericString reduce production unionMark -> UNION
-- On Number reduce production unionMark -> UNION
-- On NULL reduce production unionMark -> UNION
-- On MINUS_INFINITY reduce production unionMark -> UNION
-- On MIN reduce production unionMark -> UNION
-- On Lower reduce production unionMark -> UNION
-- On LeftParen reduce production unionMark -> UNION
-- On LeftBracket reduce production unionMark -> UNION
-- On LeftBrace reduce production unionMark -> UNION
-- On ISO646String reduce production unionMark -> UNION
-- On INTEGER reduce production unionMark -> UNION
-- On INSTANCE reduce production unionMark -> UNION
-- On INCLUDES reduce production unionMark -> UNION
-- On IA5String reduce production unionMark -> UNION
-- On Hyphen reduce production unionMark -> UNION
-- On Hstring reduce production unionMark -> UNION
-- On GraphicString reduce production unionMark -> UNION
-- On GeneralizedTime reduce production unionMark -> UNION
-- On GeneralString reduce production unionMark -> UNION
-- On FROM reduce production unionMark -> UNION
-- On FALSE reduce production unionMark -> UNION
-- On EXTERNAL reduce production unionMark -> UNION
-- On ENUMERATED reduce production unionMark -> UNION
-- On EMBEDDED reduce production unionMark -> UNION
-- On DefinedSyntax reduce production unionMark -> UNION
-- On Cstring reduce production unionMark -> UNION
-- On CONTAINING reduce production unionMark -> UNION
-- On CHOICE reduce production unionMark -> UNION
-- On CHARACTER reduce production unionMark -> UNION
-- On Bstring reduce production unionMark -> UNION
-- On BOOLEAN reduce production unionMark -> UNION
-- On BMPString reduce production unionMark -> UNION
-- On BIT reduce production unionMark -> UNION
-- On ABSTRACT_SYNTAX reduce production unionMark -> UNION

State 552:
## Known stack suffix:
## Middle
## LR(1) items:
unionMark -> Middle . [ WITH VisibleString VideotexString Upper UniversalString UTF8String UTCTime TeletexString TYPE_IDENTIFIER TRUE T61String SIZE SET SEQUENCE RealNumber RELATIVE_OID REAL PrintableString PLUS_INFINITY PATTERN ObjectDescriptor OCTET OBJECT NumericString Number NULL MINUS_INFINITY MIN Lower LeftParen LeftBracket LeftBrace ISO646String INTEGER INSTANCE INCLUDES IA5String Hyphen Hstring GraphicString GeneralizedTime GeneralString FROM FALSE EXTERNAL ENUMERATED EMBEDDED DefinedSyntax Cstring CONTAINING CHOICE CHARACTER Bstring BOOLEAN BMPString BIT ABSTRACT_SYNTAX ]
## Transitions:
## Reductions:
-- On WITH reduce production unionMark -> Middle
-- On VisibleString reduce production unionMark -> Middle
-- On VideotexString reduce production unionMark -> Middle
-- On Upper reduce production unionMark -> Middle
-- On UniversalString reduce production unionMark -> Middle
-- On UTF8String reduce production unionMark -> Middle
-- On UTCTime reduce production unionMark -> Middle
-- On TeletexString reduce production unionMark -> Middle
-- On TYPE_IDENTIFIER reduce production unionMark -> Middle
-- On TRUE reduce production unionMark -> Middle
-- On T61String reduce production unionMark -> Middle
-- On SIZE reduce production unionMark -> Middle
-- On SET reduce production unionMark -> Middle
-- On SEQUENCE reduce production unionMark -> Middle
-- On RealNumber reduce production unionMark -> Middle
-- On RELATIVE_OID reduce production unionMark -> Middle
-- On REAL reduce production unionMark -> Middle
-- On PrintableString reduce production unionMark -> Middle
-- On PLUS_INFINITY reduce production unionMark -> Middle
-- On PATTERN reduce production unionMark -> Middle
-- On ObjectDescriptor reduce production unionMark -> Middle
-- On OCTET reduce production unionMark -> Middle
-- On OBJECT reduce production unionMark -> Middle
-- On NumericString reduce production unionMark -> Middle
-- On Number reduce production unionMark -> Middle
-- On NULL reduce production unionMark -> Middle
-- On MINUS_INFINITY reduce production unionMark -> Middle
-- On MIN reduce production unionMark -> Middle
-- On Lower reduce production unionMark -> Middle
-- On LeftParen reduce production unionMark -> Middle
-- On LeftBracket reduce production unionMark -> Middle
-- On LeftBrace reduce production unionMark -> Middle
-- On ISO646String reduce production unionMark -> Middle
-- On INTEGER reduce production unionMark -> Middle
-- On INSTANCE reduce production unionMark -> Middle
-- On INCLUDES reduce production unionMark -> Middle
-- On IA5String reduce production unionMark -> Middle
-- On Hyphen reduce production unionMark -> Middle
-- On Hstring reduce production unionMark -> Middle
-- On GraphicString reduce production unionMark -> Middle
-- On GeneralizedTime reduce production unionMark -> Middle
-- On GeneralString reduce production unionMark -> Middle
-- On FROM reduce production unionMark -> Middle
-- On FALSE reduce production unionMark -> Middle
-- On EXTERNAL reduce production unionMark -> Middle
-- On ENUMERATED reduce production unionMark -> Middle
-- On EMBEDDED reduce production unionMark -> Middle
-- On DefinedSyntax reduce production unionMark -> Middle
-- On Cstring reduce production unionMark -> Middle
-- On CONTAINING reduce production unionMark -> Middle
-- On CHOICE reduce production unionMark -> Middle
-- On CHARACTER reduce production unionMark -> Middle
-- On Bstring reduce production unionMark -> Middle
-- On BOOLEAN reduce production unionMark -> Middle
-- On BMPString reduce production unionMark -> Middle
-- On BIT reduce production unionMark -> Middle
-- On ABSTRACT_SYNTAX reduce production unionMark -> Middle

State 553:
## Known stack suffix:
## uElems unionMark
## LR(1) items:
unions -> uElems unionMark . intersections [ UNION RightParen RightBrace Middle Comma Bang ]
## Transitions:
-- On WITH shift to state 82
-- On VisibleString shift to state 66
-- On VideotexString shift to state 67
-- On Upper shift to state 108
-- On UniversalString shift to state 72
-- On UTF8String shift to state 73
-- On UTCTime shift to state 74
-- On TeletexString shift to state 75
-- On TYPE_IDENTIFIER shift to state 76
-- On TRUE shift to state 77
-- On T61String shift to state 78
-- On SIZE shift to state 80
-- On SET shift to state 79
-- On SEQUENCE shift to state 111
-- On RealNumber shift to state 296
-- On RELATIVE_OID shift to state 116
-- On REAL shift to state 117
-- On PrintableString shift to state 118
-- On PLUS_INFINITY shift to state 297
-- On PATTERN shift to state 495
-- On ObjectDescriptor shift to state 119
-- On OCTET shift to state 120
-- On OBJECT shift to state 122
-- On NumericString shift to state 124
-- On Number shift to state 145
-- On NULL shift to state 298
-- On MINUS_INFINITY shift to state 299
-- On MIN shift to state 497
-- On Lower shift to state 300
-- On LeftParen shift to state 498
-- On LeftBracket shift to state 129
-- On LeftBrace shift to state 499
-- On ISO646String shift to state 140
-- On INTEGER shift to state 141
-- On INSTANCE shift to state 157
-- On INCLUDES shift to state 503
-- On IA5String shift to state 166
-- On Hyphen shift to state 306
-- On Hstring shift to state 308
-- On GraphicString shift to state 167
-- On GeneralizedTime shift to state 168
-- On GeneralString shift to state 169
-- On FROM shift to state 504
-- On FALSE shift to state 309
-- On EXTERNAL shift to state 170
-- On ENUMERATED shift to state 171
-- On EMBEDDED shift to state 179
-- On DefinedSyntax shift to state 508
-- On Cstring shift to state 310
-- On CONTAINING shift to state 311
-- On CHOICE shift to state 181
-- On CHARACTER shift to state 184
-- On Bstring shift to state 312
-- On BOOLEAN shift to state 186
-- On BMPString shift to state 187
-- On BIT shift to state 188
-- On ABSTRACT_SYNTAX shift to state 162
-- On valueSetFromObjects shift to state 202
-- On valueRange shift to state 511
-- On valueFromObject shift to state 313
-- On value shift to state 512
-- On usefulType shift to state 203
-- On usefulObjectClassReference shift to state 163
-- On unrestrictedCharacterStringValue shift to state 315
-- On unrestrictedCharacterStringType shift to state 204
-- On type_x shift to state 513
-- On typeWithConstraint shift to state 207
-- On typeFromObject shift to state 208
-- On typeConstraint shift to state 514
-- On tuple shift to state 319
-- On taggedType shift to state 209
-- On tag shift to state 210
-- On subtypeElements shift to state 515
-- On specialRealValue shift to state 320
-- On sizeConstraint shift to state 516
-- On singleValue shift to state 517
-- On simpleDefinedValue shift to state 64
-- On simpleDefinedType shift to state 213
-- On signedNumber shift to state 321
-- On setValue shift to state 322
-- On setType shift to state 215
-- On setOfValue shift to state 323
-- On setOfType shift to state 216
-- On sequenceValue shift to state 324
-- On sequenceType shift to state 217
-- On sequenceOfValue shift to state 325
-- On sequenceOfType shift to state 218
-- On selectionType shift to state 219
-- On restrictedCharacterStringValue shift to state 326
-- On restrictedCharacterStringType shift to state 220
-- On relativeOIDValue shift to state 327
-- On relativeOIDType shift to state 221
-- On referencedValue shift to state 328
-- On referencedType shift to state 222
-- On referencedObjects shift to state 518
-- On realValue shift to state 332
-- On realType shift to state 232
-- On quadruple shift to state 333
-- On permittedAlphabet shift to state 521
-- On patternConstraint shift to state 522
-- On parameterizedValueSetType shift to state 233
-- On parameterizedValue shift to state 135
-- On parameterizedType shift to state 234
-- On parameterizedObjectSet shift to state 523
-- On parameterizedObject shift to state 524
-- On openTypeFieldVal shift to state 334
-- On octetStringValue shift to state 335
-- On octetStringType shift to state 237
-- On object_x shift to state 525
-- On objectSetFromObjects shift to state 526
-- On objectSetElements shift to state 527
-- On objectIdentifierValue shift to state 336
-- On objectIdentifierType shift to state 238
-- On objectFromObject shift to state 528
-- On objectDefn shift to state 529
-- On objectClassFieldValue shift to state 337
-- On objectClassFieldType shift to state 239
-- On numericRealValue shift to state 338
-- On nullValue shift to state 339
-- On nullType shift to state 240
-- On lowerEndValue shift to state 530
-- On lowerEndPoint shift to state 532
-- On intersections shift to state 554
-- On intersectionElements shift to state 555
-- On integerValue shift to state 340
-- On integerType shift to state 241
-- On instanceOfType shift to state 242
-- On innerTypeConstraints shift to state 540
-- On includes shift to state 541
-- On iElems shift to state 556
-- On fixedTypeFieldVal shift to state 341
-- On externalValueReference shift to state 136
-- On externalValue shift to state 342
-- On externalTypeReference shift to state 243
-- On externalType shift to state 244
-- On externalObjectSetReference shift to state 245
-- On externalObjectReference shift to state 246
-- On externalObjectClassReference shift to state 164
-- On enumeratedValue shift to state 343
-- On enumeratedType shift to state 247
-- On embeddedPDVValue shift to state 344
-- On embeddedPDVType shift to state 248
-- On elems shift to state 561
-- On elements shift to state 563
-- On definedValue shift to state 345
-- On definedType shift to state 249
-- On definedObjectSet shift to state 544
-- On definedObjectClass shift to state 252
-- On definedObject shift to state 545
-- On defaultSyntax shift to state 546
-- On containedSubtype shift to state 547
-- On constrainedType shift to state 257
-- On choiceValue shift to state 346
-- On choiceType shift to state 258
-- On characterStringValue shift to state 347
-- On characterStringType shift to state 259
-- On characterStringList shift to state 348
-- On builtinValue shift to state 349
-- On builtinType shift to state 260
-- On booleanValue shift to state 350
-- On booleanType shift to state 261
-- On bitStringValue shift to state 351
-- On bitStringType shift to state 262
## Reductions:

State 554:
## Known stack suffix:
## uElems unionMark intersections
## LR(1) items:
iElems -> intersections . [ INTERSECTION Circumflex ]
unions -> uElems unionMark intersections . [ UNION RightParen RightBrace Middle Comma Bang ]
## Transitions:
## Reductions:
-- On UNION reduce production unions -> uElems unionMark intersections
-- On RightParen reduce production unions -> uElems unionMark intersections
-- On RightBrace reduce production unions -> uElems unionMark intersections
-- On Middle reduce production unions -> uElems unionMark intersections
-- On INTERSECTION reduce production iElems -> intersections
-- On Comma reduce production unions -> uElems unionMark intersections
-- On Circumflex reduce production iElems -> intersections
-- On Bang reduce production unions -> uElems unionMark intersections

State 555:
## Known stack suffix:
## intersectionElements
## LR(1) items:
intersections -> intersectionElements . [ UNION RightParen RightBrace Middle INTERSECTION Comma Circumflex Bang ]
## Transitions:
## Reductions:
-- On UNION reduce production intersections -> intersectionElements
-- On RightParen reduce production intersections -> intersectionElements
-- On RightBrace reduce production intersections -> intersectionElements
-- On Middle reduce production intersections -> intersectionElements
-- On INTERSECTION reduce production intersections -> intersectionElements
-- On Comma reduce production intersections -> intersectionElements
-- On Circumflex reduce production intersections -> intersectionElements
-- On Bang reduce production intersections -> intersectionElements

State 556:
## Known stack suffix:
## iElems
## LR(1) items:
intersections -> iElems . intersectionMark intersectionElements [ UNION RightParen RightBrace Middle INTERSECTION Comma Circumflex Bang ]
## Transitions:
-- On INTERSECTION shift to state 557
-- On Circumflex shift to state 558
-- On intersectionMark shift to state 559
## Reductions:

State 557:
## Known stack suffix:
## INTERSECTION
## LR(1) items:
intersectionMark -> INTERSECTION . [ WITH VisibleString VideotexString Upper UniversalString UTF8String UTCTime TeletexString TYPE_IDENTIFIER TRUE T61String SIZE SET SEQUENCE RealNumber RELATIVE_OID REAL PrintableString PLUS_INFINITY PATTERN ObjectDescriptor OCTET OBJECT NumericString Number NULL MINUS_INFINITY MIN Lower LeftParen LeftBracket LeftBrace ISO646String INTEGER INSTANCE INCLUDES IA5String Hyphen Hstring GraphicString GeneralizedTime GeneralString FROM FALSE EXTERNAL ENUMERATED EMBEDDED DefinedSyntax Cstring CONTAINING CHOICE CHARACTER Bstring BOOLEAN BMPString BIT ABSTRACT_SYNTAX ]
## Transitions:
## Reductions:
-- On WITH reduce production intersectionMark -> INTERSECTION
-- On VisibleString reduce production intersectionMark -> INTERSECTION
-- On VideotexString reduce production intersectionMark -> INTERSECTION
-- On Upper reduce production intersectionMark -> INTERSECTION
-- On UniversalString reduce production intersectionMark -> INTERSECTION
-- On UTF8String reduce production intersectionMark -> INTERSECTION
-- On UTCTime reduce production intersectionMark -> INTERSECTION
-- On TeletexString reduce production intersectionMark -> INTERSECTION
-- On TYPE_IDENTIFIER reduce production intersectionMark -> INTERSECTION
-- On TRUE reduce production intersectionMark -> INTERSECTION
-- On T61String reduce production intersectionMark -> INTERSECTION
-- On SIZE reduce production intersectionMark -> INTERSECTION
-- On SET reduce production intersectionMark -> INTERSECTION
-- On SEQUENCE reduce production intersectionMark -> INTERSECTION
-- On RealNumber reduce production intersectionMark -> INTERSECTION
-- On RELATIVE_OID reduce production intersectionMark -> INTERSECTION
-- On REAL reduce production intersectionMark -> INTERSECTION
-- On PrintableString reduce production intersectionMark -> INTERSECTION
-- On PLUS_INFINITY reduce production intersectionMark -> INTERSECTION
-- On PATTERN reduce production intersectionMark -> INTERSECTION
-- On ObjectDescriptor reduce production intersectionMark -> INTERSECTION
-- On OCTET reduce production intersectionMark -> INTERSECTION
-- On OBJECT reduce production intersectionMark -> INTERSECTION
-- On NumericString reduce production intersectionMark -> INTERSECTION
-- On Number reduce production intersectionMark -> INTERSECTION
-- On NULL reduce production intersectionMark -> INTERSECTION
-- On MINUS_INFINITY reduce production intersectionMark -> INTERSECTION
-- On MIN reduce production intersectionMark -> INTERSECTION
-- On Lower reduce production intersectionMark -> INTERSECTION
-- On LeftParen reduce production intersectionMark -> INTERSECTION
-- On LeftBracket reduce production intersectionMark -> INTERSECTION
-- On LeftBrace reduce production intersectionMark -> INTERSECTION
-- On ISO646String reduce production intersectionMark -> INTERSECTION
-- On INTEGER reduce production intersectionMark -> INTERSECTION
-- On INSTANCE reduce production intersectionMark -> INTERSECTION
-- On INCLUDES reduce production intersectionMark -> INTERSECTION
-- On IA5String reduce production intersectionMark -> INTERSECTION
-- On Hyphen reduce production intersectionMark -> INTERSECTION
-- On Hstring reduce production intersectionMark -> INTERSECTION
-- On GraphicString reduce production intersectionMark -> INTERSECTION
-- On GeneralizedTime reduce production intersectionMark -> INTERSECTION
-- On GeneralString reduce production intersectionMark -> INTERSECTION
-- On FROM reduce production intersectionMark -> INTERSECTION
-- On FALSE reduce production intersectionMark -> INTERSECTION
-- On EXTERNAL reduce production intersectionMark -> INTERSECTION
-- On ENUMERATED reduce production intersectionMark -> INTERSECTION
-- On EMBEDDED reduce production intersectionMark -> INTERSECTION
-- On DefinedSyntax reduce production intersectionMark -> INTERSECTION
-- On Cstring reduce production intersectionMark -> INTERSECTION
-- On CONTAINING reduce production intersectionMark -> INTERSECTION
-- On CHOICE reduce production intersectionMark -> INTERSECTION
-- On CHARACTER reduce production intersectionMark -> INTERSECTION
-- On Bstring reduce production intersectionMark -> INTERSECTION
-- On BOOLEAN reduce production intersectionMark -> INTERSECTION
-- On BMPString reduce production intersectionMark -> INTERSECTION
-- On BIT reduce production intersectionMark -> INTERSECTION
-- On ABSTRACT_SYNTAX reduce production intersectionMark -> INTERSECTION

State 558:
## Known stack suffix:
## Circumflex
## LR(1) items:
intersectionMark -> Circumflex . [ WITH VisibleString VideotexString Upper UniversalString UTF8String UTCTime TeletexString TYPE_IDENTIFIER TRUE T61String SIZE SET SEQUENCE RealNumber RELATIVE_OID REAL PrintableString PLUS_INFINITY PATTERN ObjectDescriptor OCTET OBJECT NumericString Number NULL MINUS_INFINITY MIN Lower LeftParen LeftBracket LeftBrace ISO646String INTEGER INSTANCE INCLUDES IA5String Hyphen Hstring GraphicString GeneralizedTime GeneralString FROM FALSE EXTERNAL ENUMERATED EMBEDDED DefinedSyntax Cstring CONTAINING CHOICE CHARACTER Bstring BOOLEAN BMPString BIT ABSTRACT_SYNTAX ]
## Transitions:
## Reductions:
-- On WITH reduce production intersectionMark -> Circumflex
-- On VisibleString reduce production intersectionMark -> Circumflex
-- On VideotexString reduce production intersectionMark -> Circumflex
-- On Upper reduce production intersectionMark -> Circumflex
-- On UniversalString reduce production intersectionMark -> Circumflex
-- On UTF8String reduce production intersectionMark -> Circumflex
-- On UTCTime reduce production intersectionMark -> Circumflex
-- On TeletexString reduce production intersectionMark -> Circumflex
-- On TYPE_IDENTIFIER reduce production intersectionMark -> Circumflex
-- On TRUE reduce production intersectionMark -> Circumflex
-- On T61String reduce production intersectionMark -> Circumflex
-- On SIZE reduce production intersectionMark -> Circumflex
-- On SET reduce production intersectionMark -> Circumflex
-- On SEQUENCE reduce production intersectionMark -> Circumflex
-- On RealNumber reduce production intersectionMark -> Circumflex
-- On RELATIVE_OID reduce production intersectionMark -> Circumflex
-- On REAL reduce production intersectionMark -> Circumflex
-- On PrintableString reduce production intersectionMark -> Circumflex
-- On PLUS_INFINITY reduce production intersectionMark -> Circumflex
-- On PATTERN reduce production intersectionMark -> Circumflex
-- On ObjectDescriptor reduce production intersectionMark -> Circumflex
-- On OCTET reduce production intersectionMark -> Circumflex
-- On OBJECT reduce production intersectionMark -> Circumflex
-- On NumericString reduce production intersectionMark -> Circumflex
-- On Number reduce production intersectionMark -> Circumflex
-- On NULL reduce production intersectionMark -> Circumflex
-- On MINUS_INFINITY reduce production intersectionMark -> Circumflex
-- On MIN reduce production intersectionMark -> Circumflex
-- On Lower reduce production intersectionMark -> Circumflex
-- On LeftParen reduce production intersectionMark -> Circumflex
-- On LeftBracket reduce production intersectionMark -> Circumflex
-- On LeftBrace reduce production intersectionMark -> Circumflex
-- On ISO646String reduce production intersectionMark -> Circumflex
-- On INTEGER reduce production intersectionMark -> Circumflex
-- On INSTANCE reduce production intersectionMark -> Circumflex
-- On INCLUDES reduce production intersectionMark -> Circumflex
-- On IA5String reduce production intersectionMark -> Circumflex
-- On Hyphen reduce production intersectionMark -> Circumflex
-- On Hstring reduce production intersectionMark -> Circumflex
-- On GraphicString reduce production intersectionMark -> Circumflex
-- On GeneralizedTime reduce production intersectionMark -> Circumflex
-- On GeneralString reduce production intersectionMark -> Circumflex
-- On FROM reduce production intersectionMark -> Circumflex
-- On FALSE reduce production intersectionMark -> Circumflex
-- On EXTERNAL reduce production intersectionMark -> Circumflex
-- On ENUMERATED reduce production intersectionMark -> Circumflex
-- On EMBEDDED reduce production intersectionMark -> Circumflex
-- On DefinedSyntax reduce production intersectionMark -> Circumflex
-- On Cstring reduce production intersectionMark -> Circumflex
-- On CONTAINING reduce production intersectionMark -> Circumflex
-- On CHOICE reduce production intersectionMark -> Circumflex
-- On CHARACTER reduce production intersectionMark -> Circumflex
-- On Bstring reduce production intersectionMark -> Circumflex
-- On BOOLEAN reduce production intersectionMark -> Circumflex
-- On BMPString reduce production intersectionMark -> Circumflex
-- On BIT reduce production intersectionMark -> Circumflex
-- On ABSTRACT_SYNTAX reduce production intersectionMark -> Circumflex

State 559:
## Known stack suffix:
## iElems intersectionMark
## LR(1) items:
intersections -> iElems intersectionMark . intersectionElements [ UNION RightParen RightBrace Middle INTERSECTION Comma Circumflex Bang ]
## Transitions:
-- On WITH shift to state 82
-- On VisibleString shift to state 66
-- On VideotexString shift to state 67
-- On Upper shift to state 108
-- On UniversalString shift to state 72
-- On UTF8String shift to state 73
-- On UTCTime shift to state 74
-- On TeletexString shift to state 75
-- On TYPE_IDENTIFIER shift to state 76
-- On TRUE shift to state 77
-- On T61String shift to state 78
-- On SIZE shift to state 80
-- On SET shift to state 79
-- On SEQUENCE shift to state 111
-- On RealNumber shift to state 296
-- On RELATIVE_OID shift to state 116
-- On REAL shift to state 117
-- On PrintableString shift to state 118
-- On PLUS_INFINITY shift to state 297
-- On PATTERN shift to state 495
-- On ObjectDescriptor shift to state 119
-- On OCTET shift to state 120
-- On OBJECT shift to state 122
-- On NumericString shift to state 124
-- On Number shift to state 145
-- On NULL shift to state 298
-- On MINUS_INFINITY shift to state 299
-- On MIN shift to state 497
-- On Lower shift to state 300
-- On LeftParen shift to state 498
-- On LeftBracket shift to state 129
-- On LeftBrace shift to state 499
-- On ISO646String shift to state 140
-- On INTEGER shift to state 141
-- On INSTANCE shift to state 157
-- On INCLUDES shift to state 503
-- On IA5String shift to state 166
-- On Hyphen shift to state 306
-- On Hstring shift to state 308
-- On GraphicString shift to state 167
-- On GeneralizedTime shift to state 168
-- On GeneralString shift to state 169
-- On FROM shift to state 504
-- On FALSE shift to state 309
-- On EXTERNAL shift to state 170
-- On ENUMERATED shift to state 171
-- On EMBEDDED shift to state 179
-- On DefinedSyntax shift to state 508
-- On Cstring shift to state 310
-- On CONTAINING shift to state 311
-- On CHOICE shift to state 181
-- On CHARACTER shift to state 184
-- On Bstring shift to state 312
-- On BOOLEAN shift to state 186
-- On BMPString shift to state 187
-- On BIT shift to state 188
-- On ABSTRACT_SYNTAX shift to state 162
-- On valueSetFromObjects shift to state 202
-- On valueRange shift to state 511
-- On valueFromObject shift to state 313
-- On value shift to state 512
-- On usefulType shift to state 203
-- On usefulObjectClassReference shift to state 163
-- On unrestrictedCharacterStringValue shift to state 315
-- On unrestrictedCharacterStringType shift to state 204
-- On type_x shift to state 513
-- On typeWithConstraint shift to state 207
-- On typeFromObject shift to state 208
-- On typeConstraint shift to state 514
-- On tuple shift to state 319
-- On taggedType shift to state 209
-- On tag shift to state 210
-- On subtypeElements shift to state 515
-- On specialRealValue shift to state 320
-- On sizeConstraint shift to state 516
-- On singleValue shift to state 517
-- On simpleDefinedValue shift to state 64
-- On simpleDefinedType shift to state 213
-- On signedNumber shift to state 321
-- On setValue shift to state 322
-- On setType shift to state 215
-- On setOfValue shift to state 323
-- On setOfType shift to state 216
-- On sequenceValue shift to state 324
-- On sequenceType shift to state 217
-- On sequenceOfValue shift to state 325
-- On sequenceOfType shift to state 218
-- On selectionType shift to state 219
-- On restrictedCharacterStringValue shift to state 326
-- On restrictedCharacterStringType shift to state 220
-- On relativeOIDValue shift to state 327
-- On relativeOIDType shift to state 221
-- On referencedValue shift to state 328
-- On referencedType shift to state 222
-- On referencedObjects shift to state 518
-- On realValue shift to state 332
-- On realType shift to state 232
-- On quadruple shift to state 333
-- On permittedAlphabet shift to state 521
-- On patternConstraint shift to state 522
-- On parameterizedValueSetType shift to state 233
-- On parameterizedValue shift to state 135
-- On parameterizedType shift to state 234
-- On parameterizedObjectSet shift to state 523
-- On parameterizedObject shift to state 524
-- On openTypeFieldVal shift to state 334
-- On octetStringValue shift to state 335
-- On octetStringType shift to state 237
-- On object_x shift to state 525
-- On objectSetFromObjects shift to state 526
-- On objectSetElements shift to state 527
-- On objectIdentifierValue shift to state 336
-- On objectIdentifierType shift to state 238
-- On objectFromObject shift to state 528
-- On objectDefn shift to state 529
-- On objectClassFieldValue shift to state 337
-- On objectClassFieldType shift to state 239
-- On numericRealValue shift to state 338
-- On nullValue shift to state 339
-- On nullType shift to state 240
-- On lowerEndValue shift to state 530
-- On lowerEndPoint shift to state 532
-- On intersectionElements shift to state 560
-- On integerValue shift to state 340
-- On integerType shift to state 241
-- On instanceOfType shift to state 242
-- On innerTypeConstraints shift to state 540
-- On includes shift to state 541
-- On fixedTypeFieldVal shift to state 341
-- On externalValueReference shift to state 136
-- On externalValue shift to state 342
-- On externalTypeReference shift to state 243
-- On externalType shift to state 244
-- On externalObjectSetReference shift to state 245
-- On externalObjectReference shift to state 246
-- On externalObjectClassReference shift to state 164
-- On enumeratedValue shift to state 343
-- On enumeratedType shift to state 247
-- On embeddedPDVValue shift to state 344
-- On embeddedPDVType shift to state 248
-- On elems shift to state 561
-- On elements shift to state 563
-- On definedValue shift to state 345
-- On definedType shift to state 249
-- On definedObjectSet shift to state 544
-- On definedObjectClass shift to state 252
-- On definedObject shift to state 545
-- On defaultSyntax shift to state 546
-- On containedSubtype shift to state 547
-- On constrainedType shift to state 257
-- On choiceValue shift to state 346
-- On choiceType shift to state 258
-- On characterStringValue shift to state 347
-- On characterStringType shift to state 259
-- On characterStringList shift to state 348
-- On builtinValue shift to state 349
-- On builtinType shift to state 260
-- On booleanValue shift to state 350
-- On booleanType shift to state 261
-- On bitStringValue shift to state 351
-- On bitStringType shift to state 262
## Reductions:

State 560:
## Known stack suffix:
## iElems intersectionMark intersectionElements
## LR(1) items:
intersections -> iElems intersectionMark intersectionElements . [ UNION RightParen RightBrace Middle INTERSECTION Comma Circumflex Bang ]
## Transitions:
## Reductions:
-- On UNION reduce production intersections -> iElems intersectionMark intersectionElements
-- On RightParen reduce production intersections -> iElems intersectionMark intersectionElements
-- On RightBrace reduce production intersections -> iElems intersectionMark intersectionElements
-- On Middle reduce production intersections -> iElems intersectionMark intersectionElements
-- On INTERSECTION reduce production intersections -> iElems intersectionMark intersectionElements
-- On Comma reduce production intersections -> iElems intersectionMark intersectionElements
-- On Circumflex reduce production intersections -> iElems intersectionMark intersectionElements
-- On Bang reduce production intersections -> iElems intersectionMark intersectionElements

State 561:
## Known stack suffix:
## elems
## LR(1) items:
intersectionElements -> elems . exclusions [ UNION RightParen RightBrace Middle INTERSECTION Comma Circumflex Bang ]
## Transitions:
-- On EXCEPT shift to state 510
-- On exclusions shift to state 562
## Reductions:

State 562:
## Known stack suffix:
## elems exclusions
## LR(1) items:
intersectionElements -> elems exclusions . [ UNION RightParen RightBrace Middle INTERSECTION Comma Circumflex Bang ]
## Transitions:
## Reductions:
-- On UNION reduce production intersectionElements -> elems exclusions
-- On RightParen reduce production intersectionElements -> elems exclusions
-- On RightBrace reduce production intersectionElements -> elems exclusions
-- On Middle reduce production intersectionElements -> elems exclusions
-- On INTERSECTION reduce production intersectionElements -> elems exclusions
-- On Comma reduce production intersectionElements -> elems exclusions
-- On Circumflex reduce production intersectionElements -> elems exclusions
-- On Bang reduce production intersectionElements -> elems exclusions

State 563:
## Known stack suffix:
## elements
## LR(1) items:
elems -> elements . [ EXCEPT ]
intersectionElements -> elements . [ UNION RightParen RightBrace Middle INTERSECTION Comma Circumflex Bang ]
## Transitions:
## Reductions:
-- On UNION reduce production intersectionElements -> elements
-- On RightParen reduce production intersectionElements -> elements
-- On RightBrace reduce production intersectionElements -> elements
-- On Middle reduce production intersectionElements -> elements
-- On INTERSECTION reduce production intersectionElements -> elements
-- On EXCEPT reduce production elems -> elements
-- On Comma reduce production intersectionElements -> elements
-- On Circumflex reduce production intersectionElements -> elements
-- On Bang reduce production intersectionElements -> elements

State 564:
## Known stack suffix:
## intersections
## LR(1) items:
iElems -> intersections . [ INTERSECTION Circumflex ]
unions -> intersections . [ UNION RightParen RightBrace Middle Comma Bang ]
## Transitions:
## Reductions:
-- On UNION reduce production unions -> intersections
-- On RightParen reduce production unions -> intersections
-- On RightBrace reduce production unions -> intersections
-- On Middle reduce production unions -> intersections
-- On INTERSECTION reduce production iElems -> intersections
-- On Comma reduce production unions -> intersections
-- On Circumflex reduce production iElems -> intersections
-- On Bang reduce production unions -> intersections

State 565:
## Known stack suffix:
## elementSetSpec
## LR(1) items:
additionalElementSetSpec -> elementSetSpec . [ RightParen RightBrace Bang ]
## Transitions:
## Reductions:
-- On RightParen reduce production additionalElementSetSpec -> elementSetSpec
-- On RightBrace reduce production additionalElementSetSpec -> elementSetSpec
-- On Bang reduce production additionalElementSetSpec -> elementSetSpec

State 566:
## Known stack suffix:
## Ellipsis Comma additionalElementSetSpec
## LR(1) items:
objectSetSpec -> Ellipsis Comma additionalElementSetSpec . [ RightBrace ]
## Transitions:
## Reductions:
-- On RightBrace reduce production objectSetSpec -> Ellipsis Comma additionalElementSetSpec

State 567:
## Known stack suffix:
## value
## LR(1) items:
lowerEndValue -> value . [ LessThan DoubleDot ]
singleValue -> value . [ UNION RightBrace Middle INTERSECTION EXCEPT Comma Circumflex ]
valueList -> value . [ RightBrace Comma ]
## Transitions:
## Reductions:
-- On UNION reduce production singleValue -> value
-- On RightBrace reduce production valueList -> value
-- On Middle reduce production singleValue -> value
-- On LessThan reduce production lowerEndValue -> value
-- On INTERSECTION reduce production singleValue -> value
-- On EXCEPT reduce production singleValue -> value
-- On DoubleDot reduce production lowerEndValue -> value
-- On Comma reduce production valueList -> value
-- On Circumflex reduce production singleValue -> value

State 568:
## Known stack suffix:
## rootElementSetSpec
## LR(1) items:
elementSetSpecs -> rootElementSetSpec . [ RightBrace ]
elementSetSpecs -> rootElementSetSpec . Comma Ellipsis [ RightBrace ]
elementSetSpecs -> rootElementSetSpec . Comma Ellipsis Comma additionalElementSetSpec [ RightBrace ]
objectSetSpec -> rootElementSetSpec . [ RightBrace ]
objectSetSpec -> rootElementSetSpec . Comma Ellipsis [ RightBrace ]
objectSetSpec -> rootElementSetSpec . Comma Ellipsis Comma additionalElementSetSpec [ RightBrace ]
## Transitions:
-- On Comma shift to state 569
## Reductions:
-- On RightBrace reduce production elementSetSpecs -> rootElementSetSpec

State 569:
## Known stack suffix:
## rootElementSetSpec Comma
## LR(1) items:
elementSetSpecs -> rootElementSetSpec Comma . Ellipsis [ RightBrace ]
elementSetSpecs -> rootElementSetSpec Comma . Ellipsis Comma additionalElementSetSpec [ RightBrace ]
objectSetSpec -> rootElementSetSpec Comma . Ellipsis [ RightBrace ]
objectSetSpec -> rootElementSetSpec Comma . Ellipsis Comma additionalElementSetSpec [ RightBrace ]
## Transitions:
-- On Ellipsis shift to state 570
## Reductions:

State 570:
## Known stack suffix:
## rootElementSetSpec Comma Ellipsis
## LR(1) items:
elementSetSpecs -> rootElementSetSpec Comma Ellipsis . [ RightBrace ]
elementSetSpecs -> rootElementSetSpec Comma Ellipsis . Comma additionalElementSetSpec [ RightBrace ]
objectSetSpec -> rootElementSetSpec Comma Ellipsis . [ RightBrace ]
objectSetSpec -> rootElementSetSpec Comma Ellipsis . Comma additionalElementSetSpec [ RightBrace ]
## Transitions:
-- On Comma shift to state 571
## Reductions:
-- On RightBrace reduce production elementSetSpecs -> rootElementSetSpec Comma Ellipsis

State 571:
## Known stack suffix:
## rootElementSetSpec Comma Ellipsis Comma
## LR(1) items:
elementSetSpecs -> rootElementSetSpec Comma Ellipsis Comma . additionalElementSetSpec [ RightBrace ]
objectSetSpec -> rootElementSetSpec Comma Ellipsis Comma . additionalElementSetSpec [ RightBrace ]
## Transitions:
-- On WITH shift to state 82
-- On VisibleString shift to state 66
-- On VideotexString shift to state 67
-- On Upper shift to state 108
-- On UniversalString shift to state 72
-- On UTF8String shift to state 73
-- On UTCTime shift to state 74
-- On TeletexString shift to state 75
-- On TYPE_IDENTIFIER shift to state 76
-- On TRUE shift to state 77
-- On T61String shift to state 78
-- On SIZE shift to state 80
-- On SET shift to state 79
-- On SEQUENCE shift to state 111
-- On RealNumber shift to state 296
-- On RELATIVE_OID shift to state 116
-- On REAL shift to state 117
-- On PrintableString shift to state 118
-- On PLUS_INFINITY shift to state 297
-- On PATTERN shift to state 495
-- On ObjectDescriptor shift to state 119
-- On OCTET shift to state 120
-- On OBJECT shift to state 122
-- On NumericString shift to state 124
-- On Number shift to state 145
-- On NULL shift to state 298
-- On MINUS_INFINITY shift to state 299
-- On MIN shift to state 497
-- On Lower shift to state 300
-- On LeftParen shift to state 498
-- On LeftBracket shift to state 129
-- On LeftBrace shift to state 499
-- On ISO646String shift to state 140
-- On INTEGER shift to state 141
-- On INSTANCE shift to state 157
-- On INCLUDES shift to state 503
-- On IA5String shift to state 166
-- On Hyphen shift to state 306
-- On Hstring shift to state 308
-- On GraphicString shift to state 167
-- On GeneralizedTime shift to state 168
-- On GeneralString shift to state 169
-- On FROM shift to state 504
-- On FALSE shift to state 309
-- On EXTERNAL shift to state 170
-- On ENUMERATED shift to state 171
-- On EMBEDDED shift to state 179
-- On DefinedSyntax shift to state 508
-- On Cstring shift to state 310
-- On CONTAINING shift to state 311
-- On CHOICE shift to state 181
-- On CHARACTER shift to state 184
-- On Bstring shift to state 312
-- On BOOLEAN shift to state 186
-- On BMPString shift to state 187
-- On BIT shift to state 188
-- On ALL shift to state 509
-- On ABSTRACT_SYNTAX shift to state 162
-- On valueSetFromObjects shift to state 202
-- On valueRange shift to state 511
-- On valueFromObject shift to state 313
-- On value shift to state 512
-- On usefulType shift to state 203
-- On usefulObjectClassReference shift to state 163
-- On unrestrictedCharacterStringValue shift to state 315
-- On unrestrictedCharacterStringType shift to state 204
-- On unions shift to state 549
-- On uElems shift to state 550
-- On type_x shift to state 513
-- On typeWithConstraint shift to state 207
-- On typeFromObject shift to state 208
-- On typeConstraint shift to state 514
-- On tuple shift to state 319
-- On taggedType shift to state 209
-- On tag shift to state 210
-- On subtypeElements shift to state 515
-- On specialRealValue shift to state 320
-- On sizeConstraint shift to state 516
-- On singleValue shift to state 517
-- On simpleDefinedValue shift to state 64
-- On simpleDefinedType shift to state 213
-- On signedNumber shift to state 321
-- On setValue shift to state 322
-- On setType shift to state 215
-- On setOfValue shift to state 323
-- On setOfType shift to state 216
-- On sequenceValue shift to state 324
-- On sequenceType shift to state 217
-- On sequenceOfValue shift to state 325
-- On sequenceOfType shift to state 218
-- On selectionType shift to state 219
-- On restrictedCharacterStringValue shift to state 326
-- On restrictedCharacterStringType shift to state 220
-- On relativeOIDValue shift to state 327
-- On relativeOIDType shift to state 221
-- On referencedValue shift to state 328
-- On referencedType shift to state 222
-- On referencedObjects shift to state 518
-- On realValue shift to state 332
-- On realType shift to state 232
-- On quadruple shift to state 333
-- On permittedAlphabet shift to state 521
-- On patternConstraint shift to state 522
-- On parameterizedValueSetType shift to state 233
-- On parameterizedValue shift to state 135
-- On parameterizedType shift to state 234
-- On parameterizedObjectSet shift to state 523
-- On parameterizedObject shift to state 524
-- On openTypeFieldVal shift to state 334
-- On octetStringValue shift to state 335
-- On octetStringType shift to state 237
-- On object_x shift to state 525
-- On objectSetFromObjects shift to state 526
-- On objectSetElements shift to state 527
-- On objectIdentifierValue shift to state 336
-- On objectIdentifierType shift to state 238
-- On objectFromObject shift to state 528
-- On objectDefn shift to state 529
-- On objectClassFieldValue shift to state 337
-- On objectClassFieldType shift to state 239
-- On numericRealValue shift to state 338
-- On nullValue shift to state 339
-- On nullType shift to state 240
-- On lowerEndValue shift to state 530
-- On lowerEndPoint shift to state 532
-- On intersections shift to state 564
-- On intersectionElements shift to state 555
-- On integerValue shift to state 340
-- On integerType shift to state 241
-- On instanceOfType shift to state 242
-- On innerTypeConstraints shift to state 540
-- On includes shift to state 541
-- On iElems shift to state 556
-- On fixedTypeFieldVal shift to state 341
-- On externalValueReference shift to state 136
-- On externalValue shift to state 342
-- On externalTypeReference shift to state 243
-- On externalType shift to state 244
-- On externalObjectSetReference shift to state 245
-- On externalObjectReference shift to state 246
-- On externalObjectClassReference shift to state 164
-- On enumeratedValue shift to state 343
-- On enumeratedType shift to state 247
-- On embeddedPDVValue shift to state 344
-- On embeddedPDVType shift to state 248
-- On elems shift to state 561
-- On elements shift to state 563
-- On elementSetSpec shift to state 565
-- On definedValue shift to state 345
-- On definedType shift to state 249
-- On definedObjectSet shift to state 544
-- On definedObjectClass shift to state 252
-- On definedObject shift to state 545
-- On defaultSyntax shift to state 546
-- On containedSubtype shift to state 547
-- On constrainedType shift to state 257
-- On choiceValue shift to state 346
-- On choiceType shift to state 258
-- On characterStringValue shift to state 347
-- On characterStringType shift to state 259
-- On characterStringList shift to state 348
-- On builtinValue shift to state 349
-- On builtinType shift to state 260
-- On booleanValue shift to state 350
-- On booleanType shift to state 261
-- On bitStringValue shift to state 351
-- On bitStringType shift to state 262
-- On additionalElementSetSpec shift to state 572
## Reductions:

State 572:
## Known stack suffix:
## rootElementSetSpec Comma Ellipsis Comma additionalElementSetSpec
## LR(1) items:
elementSetSpecs -> rootElementSetSpec Comma Ellipsis Comma additionalElementSetSpec . [ RightBrace ]
objectSetSpec -> rootElementSetSpec Comma Ellipsis Comma additionalElementSetSpec . [ RightBrace ]
## Transitions:
## Reductions:
-- On RightBrace reduce production elementSetSpecs -> rootElementSetSpec Comma Ellipsis Comma additionalElementSetSpec

State 573:
## Known stack suffix:
## LeftBrace objectSetSpec
## LR(1) items:
objectSet -> LeftBrace objectSetSpec . RightBrace [ Upper RightParen RightBrace Lower END Comma Bang ]
## Transitions:
-- On RightBrace shift to state 574
## Reductions:

State 574:
## Known stack suffix:
## LeftBrace objectSetSpec RightBrace
## LR(1) items:
objectSet -> LeftBrace objectSetSpec RightBrace . [ Upper RightParen RightBrace Lower END Comma Bang ]
## Transitions:
## Reductions:
-- On Upper reduce production objectSet -> LeftBrace objectSetSpec RightBrace
-- On RightParen reduce production objectSet -> LeftBrace objectSetSpec RightBrace
-- On RightBrace reduce production objectSet -> LeftBrace objectSetSpec RightBrace
-- On Lower reduce production objectSet -> LeftBrace objectSetSpec RightBrace
-- On END reduce production objectSet -> LeftBrace objectSetSpec RightBrace
-- On Comma reduce production objectSet -> LeftBrace objectSetSpec RightBrace
-- On Bang reduce production objectSet -> LeftBrace objectSetSpec RightBrace

State 575:
## Known stack suffix:
## LeftBrace loption(separated_nonempty_list(Comma,fieldSetting))
## LR(1) items:
defaultSyntax -> LeftBrace loption(separated_nonempty_list(Comma,fieldSetting)) . RightBrace [ Upper UNION RightParen RightBrace Middle Lower INTERSECTION EXCEPT END Comma Circumflex Bang ]
## Transitions:
-- On RightBrace shift to state 576
## Reductions:

State 576:
## Known stack suffix:
## LeftBrace loption(separated_nonempty_list(Comma,fieldSetting)) RightBrace
## LR(1) items:
defaultSyntax -> LeftBrace loption(separated_nonempty_list(Comma,fieldSetting)) RightBrace . [ Upper UNION RightParen RightBrace Middle Lower INTERSECTION EXCEPT END Comma Circumflex Bang ]
## Transitions:
## Reductions:
-- On Upper reduce production defaultSyntax -> LeftBrace loption(separated_nonempty_list(Comma,fieldSetting)) RightBrace
-- On UNION reduce production defaultSyntax -> LeftBrace loption(separated_nonempty_list(Comma,fieldSetting)) RightBrace
-- On RightParen reduce production defaultSyntax -> LeftBrace loption(separated_nonempty_list(Comma,fieldSetting)) RightBrace
-- On RightBrace reduce production defaultSyntax -> LeftBrace loption(separated_nonempty_list(Comma,fieldSetting)) RightBrace
-- On Middle reduce production defaultSyntax -> LeftBrace loption(separated_nonempty_list(Comma,fieldSetting)) RightBrace
-- On Lower reduce production defaultSyntax -> LeftBrace loption(separated_nonempty_list(Comma,fieldSetting)) RightBrace
-- On INTERSECTION reduce production defaultSyntax -> LeftBrace loption(separated_nonempty_list(Comma,fieldSetting)) RightBrace
-- On EXCEPT reduce production defaultSyntax -> LeftBrace loption(separated_nonempty_list(Comma,fieldSetting)) RightBrace
-- On END reduce production defaultSyntax -> LeftBrace loption(separated_nonempty_list(Comma,fieldSetting)) RightBrace
-- On Comma reduce production defaultSyntax -> LeftBrace loption(separated_nonempty_list(Comma,fieldSetting)) RightBrace
-- On Circumflex reduce production defaultSyntax -> LeftBrace loption(separated_nonempty_list(Comma,fieldSetting)) RightBrace
-- On Bang reduce production defaultSyntax -> LeftBrace loption(separated_nonempty_list(Comma,fieldSetting)) RightBrace

State 577:
## Known stack suffix:
## fieldSetting
## LR(1) items:
separated_nonempty_list(Comma,fieldSetting) -> fieldSetting . [ RightBrace ]
separated_nonempty_list(Comma,fieldSetting) -> fieldSetting . Comma separated_nonempty_list(Comma,fieldSetting) [ RightBrace ]
## Transitions:
-- On Comma shift to state 578
## Reductions:
-- On RightBrace reduce production separated_nonempty_list(Comma,fieldSetting) -> fieldSetting

State 578:
## Known stack suffix:
## fieldSetting Comma
## LR(1) items:
separated_nonempty_list(Comma,fieldSetting) -> fieldSetting Comma . separated_nonempty_list(Comma,fieldSetting) [ RightBrace ]
## Transitions:
-- On UpperField shift to state 225
-- On LowerField shift to state 226
-- On separated_nonempty_list(Comma,fieldSetting) shift to state 579
-- On primitiveFieldName shift to state 501
-- On fieldSetting shift to state 577
## Reductions:

State 579:
## Known stack suffix:
## fieldSetting Comma separated_nonempty_list(Comma,fieldSetting)
## LR(1) items:
separated_nonempty_list(Comma,fieldSetting) -> fieldSetting Comma separated_nonempty_list(Comma,fieldSetting) . [ RightBrace ]
## Transitions:
## Reductions:
-- On RightBrace reduce production separated_nonempty_list(Comma,fieldSetting) -> fieldSetting Comma separated_nonempty_list(Comma,fieldSetting)

State 580:
## Known stack suffix:
## LeftBrace elementSetSpecs
## LR(1) items:
valueSet -> LeftBrace elementSetSpecs . RightBrace [ Upper RightBrace Lower END Comma ]
## Transitions:
-- On RightBrace shift to state 581
## Reductions:

State 581:
## Known stack suffix:
## LeftBrace elementSetSpecs RightBrace
## LR(1) items:
valueSet -> LeftBrace elementSetSpecs RightBrace . [ Upper RightBrace Lower END Comma ]
## Transitions:
## Reductions:
-- On Upper reduce production valueSet -> LeftBrace elementSetSpecs RightBrace
-- On RightBrace reduce production valueSet -> LeftBrace elementSetSpecs RightBrace
-- On Lower reduce production valueSet -> LeftBrace elementSetSpecs RightBrace
-- On END reduce production valueSet -> LeftBrace elementSetSpecs RightBrace
-- On Comma reduce production valueSet -> LeftBrace elementSetSpecs RightBrace

State 582:
## Known stack suffix:
## elementSetSpec
## LR(1) items:
rootElementSetSpec -> elementSetSpec . [ RightParen RightBrace Comma Bang ]
## Transitions:
## Reductions:
-- On RightParen reduce production rootElementSetSpec -> elementSetSpec
-- On RightBrace reduce production rootElementSetSpec -> elementSetSpec
-- On Comma reduce production rootElementSetSpec -> elementSetSpec
-- On Bang reduce production rootElementSetSpec -> elementSetSpec

State 583:
## Known stack suffix:
## valueSet
## LR(1) items:
setting -> valueSet . [ RightBrace Comma ]
## Transitions:
## Reductions:
-- On RightBrace reduce production setting -> valueSet
-- On Comma reduce production setting -> valueSet

State 584:
## Known stack suffix:
## value
## LR(1) items:
setting -> value . [ RightBrace Comma ]
## Transitions:
## Reductions:
-- On RightBrace reduce production setting -> value
-- On Comma reduce production setting -> value

State 585:
## Known stack suffix:
## type_x
## LR(1) items:
constrainedType -> type_x . constraint_x [ RightBrace LeftParen Comma Colon ]
openTypeFieldVal -> type_x . Colon value [ RightBrace Comma ]
setting -> type_x . [ RightBrace Comma ]
## Transitions:
-- On LeftParen shift to state 81
-- On Colon shift to state 317
-- On constraint_x shift to state 206
## Reductions:
-- On RightBrace reduce production setting -> type_x
-- On Comma reduce production setting -> type_x

State 586:
## Known stack suffix:
## primitiveFieldName setting
## LR(1) items:
fieldSetting -> primitiveFieldName setting . [ RightBrace Comma ]
## Transitions:
## Reductions:
-- On RightBrace reduce production fieldSetting -> primitiveFieldName setting
-- On Comma reduce production fieldSetting -> primitiveFieldName setting

State 587:
## Known stack suffix:
## referencedObjects
## LR(1) items:
objectFromObject -> referencedObjects . Dot fieldName [ RightBrace Comma ]
typeFromObject -> referencedObjects . Dot fieldName [ RightBrace LeftParen Comma Colon ]
valueFromObject -> referencedObjects . Dot fieldName [ RightBrace Comma ]
valueSetFromObjects -> referencedObjects . Dot fieldName [ RightBrace LeftParen Comma Colon ]
## Transitions:
-- On Dot shift to state 588
## Reductions:

State 588:
## Known stack suffix:
## referencedObjects Dot
## LR(1) items:
objectFromObject -> referencedObjects Dot . fieldName [ RightBrace Comma ]
typeFromObject -> referencedObjects Dot . fieldName [ RightBrace LeftParen Comma Colon ]
valueFromObject -> referencedObjects Dot . fieldName [ RightBrace Comma ]
valueSetFromObjects -> referencedObjects Dot . fieldName [ RightBrace LeftParen Comma Colon ]
## Transitions:
-- On UpperField shift to state 225
-- On LowerField shift to state 226
-- On separated_nonempty_list(Dot,primitiveFieldName) shift to state 227
-- On primitiveFieldName shift to state 228
-- On fieldName shift to state 589
## Reductions:

State 589:
## Known stack suffix:
## referencedObjects Dot fieldName
## LR(1) items:
objectFromObject -> referencedObjects Dot fieldName . [ RightBrace Comma ]
typeFromObject -> referencedObjects Dot fieldName . [ RightBrace LeftParen Comma Colon ]
valueFromObject -> referencedObjects Dot fieldName . [ RightBrace Comma ]
valueSetFromObjects -> referencedObjects Dot fieldName . [ RightBrace LeftParen Comma Colon ]
## Transitions:
## Reductions:
-- On RightBrace reduce production valueFromObject -> referencedObjects Dot fieldName
-- On LeftParen reduce production valueSetFromObjects -> referencedObjects Dot fieldName
-- On Comma reduce production valueFromObject -> referencedObjects Dot fieldName
-- On Colon reduce production valueSetFromObjects -> referencedObjects Dot fieldName

State 590:
## Known stack suffix:
## object_x
## LR(1) items:
setting -> object_x . [ RightBrace Comma ]
## Transitions:
## Reductions:
-- On RightBrace reduce production setting -> object_x
-- On Comma reduce production setting -> object_x

State 591:
## Known stack suffix:
## objectSet
## LR(1) items:
setting -> objectSet . [ RightBrace Comma ]
## Transitions:
## Reductions:
-- On RightBrace reduce production setting -> objectSet
-- On Comma reduce production setting -> objectSet

State 592:
## Known stack suffix:
## LeftParen elementSetSpec
## LR(1) items:
elements -> LeftParen elementSetSpec . RightParen [ UNION RightParen RightBrace Middle INTERSECTION EXCEPT Comma Circumflex Bang ]
## Transitions:
-- On RightParen shift to state 593
## Reductions:

State 593:
## Known stack suffix:
## LeftParen elementSetSpec RightParen
## LR(1) items:
elements -> LeftParen elementSetSpec RightParen . [ UNION RightParen RightBrace Middle INTERSECTION EXCEPT Comma Circumflex Bang ]
## Transitions:
## Reductions:
-- On UNION reduce production elements -> LeftParen elementSetSpec RightParen
-- On RightParen reduce production elements -> LeftParen elementSetSpec RightParen
-- On RightBrace reduce production elements -> LeftParen elementSetSpec RightParen
-- On Middle reduce production elements -> LeftParen elementSetSpec RightParen
-- On INTERSECTION reduce production elements -> LeftParen elementSetSpec RightParen
-- On EXCEPT reduce production elements -> LeftParen elementSetSpec RightParen
-- On Comma reduce production elements -> LeftParen elementSetSpec RightParen
-- On Circumflex reduce production elements -> LeftParen elementSetSpec RightParen
-- On Bang reduce production elements -> LeftParen elementSetSpec RightParen

State 594:
## Known stack suffix:
## LeftBrace
## LR(1) items:
bitStringValue -> LeftBrace . identifierList RightBrace [ UNION RightParen Middle LessThan INTERSECTION EXCEPT DoubleDot Comma Circumflex Bang ]
bitStringValue -> LeftBrace . RightBrace [ UNION RightParen Middle LessThan INTERSECTION EXCEPT DoubleDot Comma Circumflex Bang ]
characterStringList -> LeftBrace . charSyms RightBrace [ UNION RightParen Middle LessThan INTERSECTION EXCEPT DoubleDot Comma Circumflex Bang ]
componentRelationConstraint -> LeftBrace . definedObjectSet RightBrace LeftBrace separated_nonempty_list(Comma,atNotation) RightBrace [ RightParen Bang ]
defaultSyntax -> LeftBrace . loption(separated_nonempty_list(Comma,fieldSetting)) RightBrace [ UNION RightParen Middle INTERSECTION EXCEPT Comma Circumflex Bang ]
objectIdentifierValue -> LeftBrace . objIdComponentsList RightBrace [ UNION RightParen Middle LessThan INTERSECTION EXCEPT DoubleDot Comma Circumflex Bang ]
objectIdentifierValue -> LeftBrace . definedValue objIdComponentsList RightBrace [ UNION RightParen Middle LessThan INTERSECTION EXCEPT DoubleDot Comma Circumflex Bang ]
objectSet -> LeftBrace . objectSetSpec RightBrace [ RightParen Bang ]
quadruple -> LeftBrace . group Comma plane Comma row Comma cell RightBrace [ UNION RightParen Middle LessThan INTERSECTION EXCEPT DoubleDot Comma Circumflex Bang ]
relativeOIDValue -> LeftBrace . relativeOIDComponentsList RightBrace [ UNION RightParen Middle LessThan INTERSECTION EXCEPT DoubleDot Comma Circumflex Bang ]
sequenceOfValue -> LeftBrace . valueList RightBrace [ UNION RightParen Middle LessThan INTERSECTION EXCEPT DoubleDot Comma Circumflex Bang ]
sequenceOfValue -> LeftBrace . namedValueList RightBrace [ UNION RightParen Middle LessThan INTERSECTION EXCEPT DoubleDot Comma Circumflex Bang ]
sequenceOfValue -> LeftBrace . RightBrace [ UNION RightParen Middle LessThan INTERSECTION EXCEPT DoubleDot Comma Circumflex Bang ]
sequenceValue -> LeftBrace . componentValueList RightBrace [ UNION RightParen Middle LessThan INTERSECTION EXCEPT DoubleDot Comma Circumflex Bang ]
sequenceValue -> LeftBrace . RightBrace [ UNION RightParen Middle LessThan INTERSECTION EXCEPT DoubleDot Comma Circumflex Bang ]
setOfValue -> LeftBrace . valueList RightBrace [ UNION RightParen Middle LessThan INTERSECTION EXCEPT DoubleDot Comma Circumflex Bang ]
setOfValue -> LeftBrace . namedValueList RightBrace [ UNION RightParen Middle LessThan INTERSECTION EXCEPT DoubleDot Comma Circumflex Bang ]
setOfValue -> LeftBrace . RightBrace [ UNION RightParen Middle LessThan INTERSECTION EXCEPT DoubleDot Comma Circumflex Bang ]
setValue -> LeftBrace . componentValueList RightBrace [ UNION RightParen Middle LessThan INTERSECTION EXCEPT DoubleDot Comma Circumflex Bang ]
setValue -> LeftBrace . RightBrace [ UNION RightParen Middle LessThan INTERSECTION EXCEPT DoubleDot Comma Circumflex Bang ]
tuple -> LeftBrace . tableColumn Comma tableRow RightBrace [ UNION RightParen Middle LessThan INTERSECTION EXCEPT DoubleDot Comma Circumflex Bang ]
## Transitions:
-- On WITH shift to state 82
-- On VisibleString shift to state 66
-- On VideotexString shift to state 67
-- On UpperField shift to state 225
-- On Upper shift to state 108
-- On UniversalString shift to state 72
-- On UTF8String shift to state 73
-- On UTCTime shift to state 74
-- On TeletexString shift to state 75
-- On TYPE_IDENTIFIER shift to state 76
-- On TRUE shift to state 77
-- On T61String shift to state 78
-- On SIZE shift to state 80
-- On SET shift to state 79
-- On SEQUENCE shift to state 111
-- On RightBrace shift to state 303
-- On RealNumber shift to state 296
-- On RELATIVE_OID shift to state 116
-- On REAL shift to state 117
-- On PrintableString shift to state 118
-- On PLUS_INFINITY shift to state 297
-- On PATTERN shift to state 495
-- On ObjectDescriptor shift to state 119
-- On OCTET shift to state 120
-- On OBJECT shift to state 122
-- On NumericString shift to state 124
-- On Number shift to state 304
-- On NULL shift to state 298
-- On MINUS_INFINITY shift to state 299
-- On MIN shift to state 497
-- On LowerField shift to state 226
-- On Lower shift to state 305
-- On LeftParen shift to state 498
-- On LeftBracket shift to state 129
-- On LeftBrace shift to state 499
-- On ISO646String shift to state 140
-- On INTEGER shift to state 141
-- On INSTANCE shift to state 157
-- On INCLUDES shift to state 503
-- On IA5String shift to state 166
-- On Hyphen shift to state 306
-- On Hstring shift to state 308
-- On GraphicString shift to state 167
-- On GeneralizedTime shift to state 168
-- On GeneralString shift to state 169
-- On FROM shift to state 504
-- On FALSE shift to state 309
-- On Ellipsis shift to state 506
-- On EXTERNAL shift to state 170
-- On ENUMERATED shift to state 171
-- On EMBEDDED shift to state 179
-- On DefinedSyntax shift to state 508
-- On Cstring shift to state 353
-- On CONTAINING shift to state 311
-- On CHOICE shift to state 181
-- On CHARACTER shift to state 184
-- On Bstring shift to state 312
-- On BOOLEAN shift to state 186
-- On BMPString shift to state 187
-- On BIT shift to state 188
-- On ALL shift to state 509
-- On ABSTRACT_SYNTAX shift to state 162
-- On valueSetFromObjects shift to state 202
-- On valueRange shift to state 511
-- On valueList shift to state 354
-- On valueFromObject shift to state 313
-- On value shift to state 567
-- On usefulType shift to state 203
-- On usefulObjectClassReference shift to state 163
-- On unrestrictedCharacterStringValue shift to state 315
-- On unrestrictedCharacterStringType shift to state 204
-- On unions shift to state 549
-- On uElems shift to state 550
-- On type_x shift to state 513
-- On typeWithConstraint shift to state 207
-- On typeFromObject shift to state 208
-- On typeConstraint shift to state 514
-- On tuple shift to state 359
-- On taggedType shift to state 209
-- On tag shift to state 210
-- On tableColumn shift to state 360
-- On subtypeElements shift to state 515
-- On specialRealValue shift to state 320
-- On sizeConstraint shift to state 516
-- On singleValue shift to state 517
-- On simpleDefinedValue shift to state 64
-- On simpleDefinedType shift to state 213
-- On signedNumber shift to state 321
-- On setValue shift to state 322
-- On setType shift to state 215
-- On setOfValue shift to state 323
-- On setOfType shift to state 216
-- On sequenceValue shift to state 324
-- On sequenceType shift to state 217
-- On sequenceOfValue shift to state 325
-- On sequenceOfType shift to state 218
-- On separated_nonempty_list(Comma,fieldSetting) shift to state 500
-- On selectionType shift to state 219
-- On rootElementSetSpec shift to state 595
-- On restrictedCharacterStringValue shift to state 326
-- On restrictedCharacterStringType shift to state 220
-- On relativeOIDValue shift to state 327
-- On relativeOIDType shift to state 221
-- On relativeOIDComponentsList shift to state 365
-- On relativeOIDComponents shift to state 367
-- On referencedValue shift to state 328
-- On referencedType shift to state 222
-- On referencedObjects shift to state 518
-- On realValue shift to state 332
-- On realType shift to state 232
-- On quadruple shift to state 373
-- On primitiveFieldName shift to state 501
-- On permittedAlphabet shift to state 521
-- On patternConstraint shift to state 522
-- On parameterizedValueSetType shift to state 233
-- On parameterizedValue shift to state 135
-- On parameterizedType shift to state 234
-- On parameterizedObjectSet shift to state 523
-- On parameterizedObject shift to state 524
-- On openTypeFieldVal shift to state 334
-- On octetStringValue shift to state 335
-- On octetStringType shift to state 237
-- On object_x shift to state 525
-- On objectSetSpec shift to state 573
-- On objectSetFromObjects shift to state 526
-- On objectSetElements shift to state 527
-- On objectIdentifierValue shift to state 336
-- On objectIdentifierType shift to state 238
-- On objectFromObject shift to state 528
-- On objectDefn shift to state 529
-- On objectClassFieldValue shift to state 337
-- On objectClassFieldType shift to state 239
-- On objIdComponentsList shift to state 374
-- On objIdComponents shift to state 376
-- On numericRealValue shift to state 338
-- On numberForm shift to state 382
-- On nullValue shift to state 339
-- On nullType shift to state 240
-- On namedValueList shift to state 383
-- On namedValue shift to state 388
-- On nameForm shift to state 379
-- On nameAndNumberForm shift to state 389
-- On lowerEndValue shift to state 530
-- On lowerEndPoint shift to state 532
-- On loption(separated_nonempty_list(Comma,fieldSetting)) shift to state 575
-- On intersections shift to state 564
-- On intersectionElements shift to state 555
-- On integerValue shift to state 340
-- On integerType shift to state 241
-- On instanceOfType shift to state 242
-- On innerTypeConstraints shift to state 540
-- On includes shift to state 541
-- On identifierList shift to state 390
-- On iElems shift to state 556
-- On group shift to state 394
-- On fixedTypeFieldVal shift to state 341
-- On fieldSetting shift to state 577
-- On externalValueReference shift to state 136
-- On externalValue shift to state 342
-- On externalTypeReference shift to state 243
-- On externalType shift to state 244
-- On externalObjectSetReference shift to state 245
-- On externalObjectReference shift to state 246
-- On externalObjectClassReference shift to state 164
-- On enumeratedValue shift to state 343
-- On enumeratedType shift to state 247
-- On embeddedPDVValue shift to state 344
-- On embeddedPDVType shift to state 248
-- On elems shift to state 561
-- On elements shift to state 563
-- On elementSetSpec shift to state 582
-- On definedValue shift to state 405
-- On definedType shift to state 249
-- On definedObjectSet shift to state 600
-- On definedObjectClass shift to state 252
-- On definedObject shift to state 545
-- On defaultSyntax shift to state 546
-- On containedSubtype shift to state 547
-- On constrainedType shift to state 257
-- On componentValueList shift to state 408
-- On choiceValue shift to state 346
-- On choiceType shift to state 258
-- On charsDefn shift to state 412
-- On characterStringValue shift to state 347
-- On characterStringType shift to state 259
-- On characterStringList shift to state 348
-- On charSyms shift to state 413
-- On builtinValue shift to state 349
-- On builtinType shift to state 260
-- On booleanValue shift to state 350
-- On booleanType shift to state 261
-- On bitStringValue shift to state 351
-- On bitStringType shift to state 262
## Reductions:

State 595:
## Known stack suffix:
## rootElementSetSpec
## LR(1) items:
objectSetSpec -> rootElementSetSpec . [ RightBrace ]
objectSetSpec -> rootElementSetSpec . Comma Ellipsis [ RightBrace ]
objectSetSpec -> rootElementSetSpec . Comma Ellipsis Comma additionalElementSetSpec [ RightBrace ]
## Transitions:
-- On Comma shift to state 596
## Reductions:
-- On RightBrace reduce production objectSetSpec -> rootElementSetSpec

State 596:
## Known stack suffix:
## rootElementSetSpec Comma
## LR(1) items:
objectSetSpec -> rootElementSetSpec Comma . Ellipsis [ RightBrace ]
objectSetSpec -> rootElementSetSpec Comma . Ellipsis Comma additionalElementSetSpec [ RightBrace ]
## Transitions:
-- On Ellipsis shift to state 597
## Reductions:

State 597:
## Known stack suffix:
## rootElementSetSpec Comma Ellipsis
## LR(1) items:
objectSetSpec -> rootElementSetSpec Comma Ellipsis . [ RightBrace ]
objectSetSpec -> rootElementSetSpec Comma Ellipsis . Comma additionalElementSetSpec [ RightBrace ]
## Transitions:
-- On Comma shift to state 598
## Reductions:
-- On RightBrace reduce production objectSetSpec -> rootElementSetSpec Comma Ellipsis

State 598:
## Known stack suffix:
## rootElementSetSpec Comma Ellipsis Comma
## LR(1) items:
objectSetSpec -> rootElementSetSpec Comma Ellipsis Comma . additionalElementSetSpec [ RightBrace ]
## Transitions:
-- On WITH shift to state 82
-- On VisibleString shift to state 66
-- On VideotexString shift to state 67
-- On Upper shift to state 108
-- On UniversalString shift to state 72
-- On UTF8String shift to state 73
-- On UTCTime shift to state 74
-- On TeletexString shift to state 75
-- On TYPE_IDENTIFIER shift to state 76
-- On TRUE shift to state 77
-- On T61String shift to state 78
-- On SIZE shift to state 80
-- On SET shift to state 79
-- On SEQUENCE shift to state 111
-- On RealNumber shift to state 296
-- On RELATIVE_OID shift to state 116
-- On REAL shift to state 117
-- On PrintableString shift to state 118
-- On PLUS_INFINITY shift to state 297
-- On PATTERN shift to state 495
-- On ObjectDescriptor shift to state 119
-- On OCTET shift to state 120
-- On OBJECT shift to state 122
-- On NumericString shift to state 124
-- On Number shift to state 145
-- On NULL shift to state 298
-- On MINUS_INFINITY shift to state 299
-- On MIN shift to state 497
-- On Lower shift to state 300
-- On LeftParen shift to state 498
-- On LeftBracket shift to state 129
-- On LeftBrace shift to state 499
-- On ISO646String shift to state 140
-- On INTEGER shift to state 141
-- On INSTANCE shift to state 157
-- On INCLUDES shift to state 503
-- On IA5String shift to state 166
-- On Hyphen shift to state 306
-- On Hstring shift to state 308
-- On GraphicString shift to state 167
-- On GeneralizedTime shift to state 168
-- On GeneralString shift to state 169
-- On FROM shift to state 504
-- On FALSE shift to state 309
-- On EXTERNAL shift to state 170
-- On ENUMERATED shift to state 171
-- On EMBEDDED shift to state 179
-- On DefinedSyntax shift to state 508
-- On Cstring shift to state 310
-- On CONTAINING shift to state 311
-- On CHOICE shift to state 181
-- On CHARACTER shift to state 184
-- On Bstring shift to state 312
-- On BOOLEAN shift to state 186
-- On BMPString shift to state 187
-- On BIT shift to state 188
-- On ALL shift to state 509
-- On ABSTRACT_SYNTAX shift to state 162
-- On valueSetFromObjects shift to state 202
-- On valueRange shift to state 511
-- On valueFromObject shift to state 313
-- On value shift to state 512
-- On usefulType shift to state 203
-- On usefulObjectClassReference shift to state 163
-- On unrestrictedCharacterStringValue shift to state 315
-- On unrestrictedCharacterStringType shift to state 204
-- On unions shift to state 549
-- On uElems shift to state 550
-- On type_x shift to state 513
-- On typeWithConstraint shift to state 207
-- On typeFromObject shift to state 208
-- On typeConstraint shift to state 514
-- On tuple shift to state 319
-- On taggedType shift to state 209
-- On tag shift to state 210
-- On subtypeElements shift to state 515
-- On specialRealValue shift to state 320
-- On sizeConstraint shift to state 516
-- On singleValue shift to state 517
-- On simpleDefinedValue shift to state 64
-- On simpleDefinedType shift to state 213
-- On signedNumber shift to state 321
-- On setValue shift to state 322
-- On setType shift to state 215
-- On setOfValue shift to state 323
-- On setOfType shift to state 216
-- On sequenceValue shift to state 324
-- On sequenceType shift to state 217
-- On sequenceOfValue shift to state 325
-- On sequenceOfType shift to state 218
-- On selectionType shift to state 219
-- On restrictedCharacterStringValue shift to state 326
-- On restrictedCharacterStringType shift to state 220
-- On relativeOIDValue shift to state 327
-- On relativeOIDType shift to state 221
-- On referencedValue shift to state 328
-- On referencedType shift to state 222
-- On referencedObjects shift to state 518
-- On realValue shift to state 332
-- On realType shift to state 232
-- On quadruple shift to state 333
-- On permittedAlphabet shift to state 521
-- On patternConstraint shift to state 522
-- On parameterizedValueSetType shift to state 233
-- On parameterizedValue shift to state 135
-- On parameterizedType shift to state 234
-- On parameterizedObjectSet shift to state 523
-- On parameterizedObject shift to state 524
-- On openTypeFieldVal shift to state 334
-- On octetStringValue shift to state 335
-- On octetStringType shift to state 237
-- On object_x shift to state 525
-- On objectSetFromObjects shift to state 526
-- On objectSetElements shift to state 527
-- On objectIdentifierValue shift to state 336
-- On objectIdentifierType shift to state 238
-- On objectFromObject shift to state 528
-- On objectDefn shift to state 529
-- On objectClassFieldValue shift to state 337
-- On objectClassFieldType shift to state 239
-- On numericRealValue shift to state 338
-- On nullValue shift to state 339
-- On nullType shift to state 240
-- On lowerEndValue shift to state 530
-- On lowerEndPoint shift to state 532
-- On intersections shift to state 564
-- On intersectionElements shift to state 555
-- On integerValue shift to state 340
-- On integerType shift to state 241
-- On instanceOfType shift to state 242
-- On innerTypeConstraints shift to state 540
-- On includes shift to state 541
-- On iElems shift to state 556
-- On fixedTypeFieldVal shift to state 341
-- On externalValueReference shift to state 136
-- On externalValue shift to state 342
-- On externalTypeReference shift to state 243
-- On externalType shift to state 244
-- On externalObjectSetReference shift to state 245
-- On externalObjectReference shift to state 246
-- On externalObjectClassReference shift to state 164
-- On enumeratedValue shift to state 343
-- On enumeratedType shift to state 247
-- On embeddedPDVValue shift to state 344
-- On embeddedPDVType shift to state 248
-- On elems shift to state 561
-- On elements shift to state 563
-- On elementSetSpec shift to state 565
-- On definedValue shift to state 345
-- On definedType shift to state 249
-- On definedObjectSet shift to state 544
-- On definedObjectClass shift to state 252
-- On definedObject shift to state 545
-- On defaultSyntax shift to state 546
-- On containedSubtype shift to state 547
-- On constrainedType shift to state 257
-- On choiceValue shift to state 346
-- On choiceType shift to state 258
-- On characterStringValue shift to state 347
-- On characterStringType shift to state 259
-- On characterStringList shift to state 348
-- On builtinValue shift to state 349
-- On builtinType shift to state 260
-- On booleanValue shift to state 350
-- On booleanType shift to state 261
-- On bitStringValue shift to state 351
-- On bitStringType shift to state 262
-- On additionalElementSetSpec shift to state 599
## Reductions:

State 599:
## Known stack suffix:
## rootElementSetSpec Comma Ellipsis Comma additionalElementSetSpec
## LR(1) items:
objectSetSpec -> rootElementSetSpec Comma Ellipsis Comma additionalElementSetSpec . [ RightBrace ]
## Transitions:
## Reductions:
-- On RightBrace reduce production objectSetSpec -> rootElementSetSpec Comma Ellipsis Comma additionalElementSetSpec

State 600:
## Known stack suffix:
## LeftBrace definedObjectSet
## LR(1) items:
componentRelationConstraint -> LeftBrace definedObjectSet . RightBrace LeftBrace separated_nonempty_list(Comma,atNotation) RightBrace [ RightParen Bang ]
objectSetElements -> definedObjectSet . [ UNION RightBrace Middle INTERSECTION EXCEPT Comma Circumflex ]
parameterizedObjectSet -> definedObjectSet . actualParameterList [ UNION RightBrace Middle INTERSECTION EXCEPT Dot Comma Circumflex ]
referencedObjects -> definedObjectSet . [ Dot ]
## Transitions:
-- On RightBrace shift to state 601
-- On LeftBrace shift to state 65
-- On actualParameterList shift to state 251
## Reductions:
-- On UNION reduce production objectSetElements -> definedObjectSet
-- On Middle reduce production objectSetElements -> definedObjectSet
-- On INTERSECTION reduce production objectSetElements -> definedObjectSet
-- On EXCEPT reduce production objectSetElements -> definedObjectSet
-- On Dot reduce production referencedObjects -> definedObjectSet
-- On Comma reduce production objectSetElements -> definedObjectSet
-- On Circumflex reduce production objectSetElements -> definedObjectSet

State 601:
## Known stack suffix:
## LeftBrace definedObjectSet RightBrace
## LR(1) items:
componentRelationConstraint -> LeftBrace definedObjectSet RightBrace . LeftBrace separated_nonempty_list(Comma,atNotation) RightBrace [ RightParen Bang ]
## Transitions:
-- On LeftBrace shift to state 602
## Reductions:

State 602:
## Known stack suffix:
## LeftBrace definedObjectSet RightBrace LeftBrace
## LR(1) items:
componentRelationConstraint -> LeftBrace definedObjectSet RightBrace LeftBrace . separated_nonempty_list(Comma,atNotation) RightBrace [ RightParen Bang ]
## Transitions:
-- On AtDot shift to state 603
-- On At shift to state 612
-- On separated_nonempty_list(Comma,atNotation) shift to state 614
-- On atNotation shift to state 616
## Reductions:

State 603:
## Known stack suffix:
## AtDot
## LR(1) items:
atNotation -> AtDot . level componentIdList [ RightBrace Comma ]
## Transitions:
-- On Dot shift to state 604
-- On level shift to state 606
## Reductions:
-- On Lower reduce production level ->

State 604:
## Known stack suffix:
## Dot
## LR(1) items:
level -> Dot . level [ Lower ]
## Transitions:
-- On Dot shift to state 604
-- On level shift to state 605
## Reductions:
-- On Lower reduce production level ->

State 605:
## Known stack suffix:
## Dot level
## LR(1) items:
level -> Dot level . [ Lower ]
## Transitions:
## Reductions:
-- On Lower reduce production level -> Dot level

State 606:
## Known stack suffix:
## AtDot level
## LR(1) items:
atNotation -> AtDot level . componentIdList [ RightBrace Comma ]
## Transitions:
-- On Lower shift to state 607
-- On separated_nonempty_list(Dot,Lower) shift to state 610
-- On componentIdList shift to state 611
## Reductions:

State 607:
## Known stack suffix:
## Lower
## LR(1) items:
separated_nonempty_list(Dot,Lower) -> Lower . [ RightBrace Comma ]
separated_nonempty_list(Dot,Lower) -> Lower . Dot separated_nonempty_list(Dot,Lower) [ RightBrace Comma ]
## Transitions:
-- On Dot shift to state 608
## Reductions:
-- On RightBrace reduce production separated_nonempty_list(Dot,Lower) -> Lower
-- On Comma reduce production separated_nonempty_list(Dot,Lower) -> Lower

State 608:
## Known stack suffix:
## Lower Dot
## LR(1) items:
separated_nonempty_list(Dot,Lower) -> Lower Dot . separated_nonempty_list(Dot,Lower) [ RightBrace Comma ]
## Transitions:
-- On Lower shift to state 607
-- On separated_nonempty_list(Dot,Lower) shift to state 609
## Reductions:

State 609:
## Known stack suffix:
## Lower Dot separated_nonempty_list(Dot,Lower)
## LR(1) items:
separated_nonempty_list(Dot,Lower) -> Lower Dot separated_nonempty_list(Dot,Lower) . [ RightBrace Comma ]
## Transitions:
## Reductions:
-- On RightBrace reduce production separated_nonempty_list(Dot,Lower) -> Lower Dot separated_nonempty_list(Dot,Lower)
-- On Comma reduce production separated_nonempty_list(Dot,Lower) -> Lower Dot separated_nonempty_list(Dot,Lower)

State 610:
## Known stack suffix:
## separated_nonempty_list(Dot,Lower)
## LR(1) items:
componentIdList -> separated_nonempty_list(Dot,Lower) . [ RightBrace Comma ]
## Transitions:
## Reductions:
-- On RightBrace reduce production componentIdList -> separated_nonempty_list(Dot,Lower)
-- On Comma reduce production componentIdList -> separated_nonempty_list(Dot,Lower)

State 611:
## Known stack suffix:
## AtDot level componentIdList
## LR(1) items:
atNotation -> AtDot level componentIdList . [ RightBrace Comma ]
## Transitions:
## Reductions:
-- On RightBrace reduce production atNotation -> AtDot level componentIdList
-- On Comma reduce production atNotation -> AtDot level componentIdList

State 612:
## Known stack suffix:
## At
## LR(1) items:
atNotation -> At . componentIdList [ RightBrace Comma ]
## Transitions:
-- On Lower shift to state 607
-- On separated_nonempty_list(Dot,Lower) shift to state 610
-- On componentIdList shift to state 613
## Reductions:

State 613:
## Known stack suffix:
## At componentIdList
## LR(1) items:
atNotation -> At componentIdList . [ RightBrace Comma ]
## Transitions:
## Reductions:
-- On RightBrace reduce production atNotation -> At componentIdList
-- On Comma reduce production atNotation -> At componentIdList

State 614:
## Known stack suffix:
## LeftBrace definedObjectSet RightBrace LeftBrace separated_nonempty_list(Comma,atNotation)
## LR(1) items:
componentRelationConstraint -> LeftBrace definedObjectSet RightBrace LeftBrace separated_nonempty_list(Comma,atNotation) . RightBrace [ RightParen Bang ]
## Transitions:
-- On RightBrace shift to state 615
## Reductions:

State 615:
## Known stack suffix:
## LeftBrace definedObjectSet RightBrace LeftBrace separated_nonempty_list(Comma,atNotation) RightBrace
## LR(1) items:
componentRelationConstraint -> LeftBrace definedObjectSet RightBrace LeftBrace separated_nonempty_list(Comma,atNotation) RightBrace . [ RightParen Bang ]
## Transitions:
## Reductions:
-- On RightParen reduce production componentRelationConstraint -> LeftBrace definedObjectSet RightBrace LeftBrace separated_nonempty_list(Comma,atNotation) RightBrace
-- On Bang reduce production componentRelationConstraint -> LeftBrace definedObjectSet RightBrace LeftBrace separated_nonempty_list(Comma,atNotation) RightBrace

State 616:
## Known stack suffix:
## atNotation
## LR(1) items:
separated_nonempty_list(Comma,atNotation) -> atNotation . [ RightBrace ]
separated_nonempty_list(Comma,atNotation) -> atNotation . Comma separated_nonempty_list(Comma,atNotation) [ RightBrace ]
## Transitions:
-- On Comma shift to state 617
## Reductions:
-- On RightBrace reduce production separated_nonempty_list(Comma,atNotation) -> atNotation

State 617:
## Known stack suffix:
## atNotation Comma
## LR(1) items:
separated_nonempty_list(Comma,atNotation) -> atNotation Comma . separated_nonempty_list(Comma,atNotation) [ RightBrace ]
## Transitions:
-- On AtDot shift to state 603
-- On At shift to state 612
-- On separated_nonempty_list(Comma,atNotation) shift to state 618
-- On atNotation shift to state 616
## Reductions:

State 618:
## Known stack suffix:
## atNotation Comma separated_nonempty_list(Comma,atNotation)
## LR(1) items:
separated_nonempty_list(Comma,atNotation) -> atNotation Comma separated_nonempty_list(Comma,atNotation) . [ RightBrace ]
## Transitions:
## Reductions:
-- On RightBrace reduce production separated_nonempty_list(Comma,atNotation) -> atNotation Comma separated_nonempty_list(Comma,atNotation)

State 619:
## Known stack suffix:
## ENCODED
## LR(1) items:
contentsConstraint -> ENCODED . BY value [ RightParen Bang ]
## Transitions:
-- On BY shift to state 620
## Reductions:

State 620:
## Known stack suffix:
## ENCODED BY
## LR(1) items:
contentsConstraint -> ENCODED BY . value [ RightParen Bang ]
## Transitions:
-- On VisibleString shift to state 66
-- On VideotexString shift to state 67
-- On Upper shift to state 108
-- On UniversalString shift to state 72
-- On UTF8String shift to state 73
-- On UTCTime shift to state 74
-- On TeletexString shift to state 75
-- On TYPE_IDENTIFIER shift to state 76
-- On TRUE shift to state 77
-- On T61String shift to state 78
-- On SET shift to state 79
-- On SEQUENCE shift to state 111
-- On RealNumber shift to state 296
-- On RELATIVE_OID shift to state 116
-- On REAL shift to state 117
-- On PrintableString shift to state 118
-- On PLUS_INFINITY shift to state 297
-- On ObjectDescriptor shift to state 119
-- On OCTET shift to state 120
-- On OBJECT shift to state 122
-- On NumericString shift to state 124
-- On Number shift to state 145
-- On NULL shift to state 298
-- On MINUS_INFINITY shift to state 299
-- On Lower shift to state 300
-- On LeftBracket shift to state 129
-- On LeftBrace shift to state 302
-- On ISO646String shift to state 140
-- On INTEGER shift to state 141
-- On INSTANCE shift to state 157
-- On IA5String shift to state 166
-- On Hyphen shift to state 306
-- On Hstring shift to state 308
-- On GraphicString shift to state 167
-- On GeneralizedTime shift to state 168
-- On GeneralString shift to state 169
-- On FALSE shift to state 309
-- On EXTERNAL shift to state 170
-- On ENUMERATED shift to state 171
-- On EMBEDDED shift to state 179
-- On Cstring shift to state 310
-- On CONTAINING shift to state 311
-- On CHOICE shift to state 181
-- On CHARACTER shift to state 184
-- On Bstring shift to state 312
-- On BOOLEAN shift to state 186
-- On BMPString shift to state 187
-- On BIT shift to state 188
-- On ABSTRACT_SYNTAX shift to state 162
-- On valueSetFromObjects shift to state 202
-- On valueFromObject shift to state 313
-- On value shift to state 621
-- On usefulType shift to state 203
-- On usefulObjectClassReference shift to state 163
-- On unrestrictedCharacterStringValue shift to state 315
-- On unrestrictedCharacterStringType shift to state 204
-- On type_x shift to state 316
-- On typeWithConstraint shift to state 207
-- On typeFromObject shift to state 208
-- On tuple shift to state 319
-- On taggedType shift to state 209
-- On tag shift to state 210
-- On specialRealValue shift to state 320
-- On simpleDefinedValue shift to state 64
-- On simpleDefinedType shift to state 213
-- On signedNumber shift to state 321
-- On setValue shift to state 322
-- On setType shift to state 215
-- On setOfValue shift to state 323
-- On setOfType shift to state 216
-- On sequenceValue shift to state 324
-- On sequenceType shift to state 217
-- On sequenceOfValue shift to state 325
-- On sequenceOfType shift to state 218
-- On selectionType shift to state 219
-- On restrictedCharacterStringValue shift to state 326
-- On restrictedCharacterStringType shift to state 220
-- On relativeOIDValue shift to state 327
-- On relativeOIDType shift to state 221
-- On referencedValue shift to state 328
-- On referencedType shift to state 222
-- On referencedObjects shift to state 329
-- On realValue shift to state 332
-- On realType shift to state 232
-- On quadruple shift to state 333
-- On parameterizedValueSetType shift to state 233
-- On parameterizedValue shift to state 135
-- On parameterizedType shift to state 234
-- On parameterizedObjectSet shift to state 235
-- On parameterizedObject shift to state 236
-- On openTypeFieldVal shift to state 334
-- On octetStringValue shift to state 335
-- On octetStringType shift to state 237
-- On objectIdentifierValue shift to state 336
-- On objectIdentifierType shift to state 238
-- On objectClassFieldValue shift to state 337
-- On objectClassFieldType shift to state 239
-- On numericRealValue shift to state 338
-- On nullValue shift to state 339
-- On nullType shift to state 240
-- On integerValue shift to state 340
-- On integerType shift to state 241
-- On instanceOfType shift to state 242
-- On fixedTypeFieldVal shift to state 341
-- On externalValueReference shift to state 136
-- On externalValue shift to state 342
-- On externalTypeReference shift to state 243
-- On externalType shift to state 244
-- On externalObjectSetReference shift to state 245
-- On externalObjectReference shift to state 246
-- On externalObjectClassReference shift to state 164
-- On enumeratedValue shift to state 343
-- On enumeratedType shift to state 247
-- On embeddedPDVValue shift to state 344
-- On embeddedPDVType shift to state 248
-- On definedValue shift to state 345
-- On definedType shift to state 249
-- On definedObjectSet shift to state 250
-- On definedObjectClass shift to state 252
-- On definedObject shift to state 255
-- On constrainedType shift to state 257
-- On choiceValue shift to state 346
-- On choiceType shift to state 258
-- On characterStringValue shift to state 347
-- On characterStringType shift to state 259
-- On characterStringList shift to state 348
-- On builtinValue shift to state 349
-- On builtinType shift to state 260
-- On booleanValue shift to state 350
-- On booleanType shift to state 261
-- On bitStringValue shift to state 351
-- On bitStringType shift to state 262
## Reductions:

State 621:
## Known stack suffix:
## ENCODED BY value
## LR(1) items:
contentsConstraint -> ENCODED BY value . [ RightParen Bang ]
## Transitions:
## Reductions:
-- On RightParen reduce production contentsConstraint -> ENCODED BY value
-- On Bang reduce production contentsConstraint -> ENCODED BY value

State 622:
## Known stack suffix:
## CONTAINING
## LR(1) items:
bitStringValue -> CONTAINING . value [ UNION RightParen Middle LessThan INTERSECTION EXCEPT DoubleDot Comma Circumflex Bang ]
contentsConstraint -> CONTAINING . type_x [ RightParen Bang ]
contentsConstraint -> CONTAINING . type_x ENCODED BY value [ RightParen Bang ]
octetStringValue -> CONTAINING . value [ UNION RightParen Middle LessThan INTERSECTION EXCEPT DoubleDot Comma Circumflex Bang ]
## Transitions:
-- On VisibleString shift to state 66
-- On VideotexString shift to state 67
-- On Upper shift to state 108
-- On UniversalString shift to state 72
-- On UTF8String shift to state 73
-- On UTCTime shift to state 74
-- On TeletexString shift to state 75
-- On TYPE_IDENTIFIER shift to state 76
-- On TRUE shift to state 77
-- On T61String shift to state 78
-- On SET shift to state 79
-- On SEQUENCE shift to state 111
-- On RealNumber shift to state 296
-- On RELATIVE_OID shift to state 116
-- On REAL shift to state 117
-- On PrintableString shift to state 118
-- On PLUS_INFINITY shift to state 297
-- On ObjectDescriptor shift to state 119
-- On OCTET shift to state 120
-- On OBJECT shift to state 122
-- On NumericString shift to state 124
-- On Number shift to state 145
-- On NULL shift to state 298
-- On MINUS_INFINITY shift to state 299
-- On Lower shift to state 300
-- On LeftBracket shift to state 129
-- On LeftBrace shift to state 302
-- On ISO646String shift to state 140
-- On INTEGER shift to state 141
-- On INSTANCE shift to state 157
-- On IA5String shift to state 166
-- On Hyphen shift to state 306
-- On Hstring shift to state 308
-- On GraphicString shift to state 167
-- On GeneralizedTime shift to state 168
-- On GeneralString shift to state 169
-- On FALSE shift to state 309
-- On EXTERNAL shift to state 170
-- On ENUMERATED shift to state 171
-- On EMBEDDED shift to state 179
-- On Cstring shift to state 310
-- On CONTAINING shift to state 311
-- On CHOICE shift to state 181
-- On CHARACTER shift to state 184
-- On Bstring shift to state 312
-- On BOOLEAN shift to state 186
-- On BMPString shift to state 187
-- On BIT shift to state 188
-- On ABSTRACT_SYNTAX shift to state 162
-- On valueSetFromObjects shift to state 202
-- On valueFromObject shift to state 313
-- On value shift to state 314
-- On usefulType shift to state 203
-- On usefulObjectClassReference shift to state 163
-- On unrestrictedCharacterStringValue shift to state 315
-- On unrestrictedCharacterStringType shift to state 204
-- On type_x shift to state 623
-- On typeWithConstraint shift to state 207
-- On typeFromObject shift to state 208
-- On tuple shift to state 319
-- On taggedType shift to state 209
-- On tag shift to state 210
-- On specialRealValue shift to state 320
-- On simpleDefinedValue shift to state 64
-- On simpleDefinedType shift to state 213
-- On signedNumber shift to state 321
-- On setValue shift to state 322
-- On setType shift to state 215
-- On setOfValue shift to state 323
-- On setOfType shift to state 216
-- On sequenceValue shift to state 324
-- On sequenceType shift to state 217
-- On sequenceOfValue shift to state 325
-- On sequenceOfType shift to state 218
-- On selectionType shift to state 219
-- On restrictedCharacterStringValue shift to state 326
-- On restrictedCharacterStringType shift to state 220
-- On relativeOIDValue shift to state 327
-- On relativeOIDType shift to state 221
-- On referencedValue shift to state 328
-- On referencedType shift to state 222
-- On referencedObjects shift to state 329
-- On realValue shift to state 332
-- On realType shift to state 232
-- On quadruple shift to state 333
-- On parameterizedValueSetType shift to state 233
-- On parameterizedValue shift to state 135
-- On parameterizedType shift to state 234
-- On parameterizedObjectSet shift to state 235
-- On parameterizedObject shift to state 236
-- On openTypeFieldVal shift to state 334
-- On octetStringValue shift to state 335
-- On octetStringType shift to state 237
-- On objectIdentifierValue shift to state 336
-- On objectIdentifierType shift to state 238
-- On objectClassFieldValue shift to state 337
-- On objectClassFieldType shift to state 239
-- On numericRealValue shift to state 338
-- On nullValue shift to state 339
-- On nullType shift to state 240
-- On integerValue shift to state 340
-- On integerType shift to state 241
-- On instanceOfType shift to state 242
-- On fixedTypeFieldVal shift to state 341
-- On externalValueReference shift to state 136
-- On externalValue shift to state 342
-- On externalTypeReference shift to state 243
-- On externalType shift to state 244
-- On externalObjectSetReference shift to state 245
-- On externalObjectReference shift to state 246
-- On externalObjectClassReference shift to state 164
-- On enumeratedValue shift to state 343
-- On enumeratedType shift to state 247
-- On embeddedPDVValue shift to state 344
-- On embeddedPDVType shift to state 248
-- On definedValue shift to state 345
-- On definedType shift to state 249
-- On definedObjectSet shift to state 250
-- On definedObjectClass shift to state 252
-- On definedObject shift to state 255
-- On constrainedType shift to state 257
-- On choiceValue shift to state 346
-- On choiceType shift to state 258
-- On characterStringValue shift to state 347
-- On characterStringType shift to state 259
-- On characterStringList shift to state 348
-- On builtinValue shift to state 349
-- On builtinType shift to state 260
-- On booleanValue shift to state 350
-- On booleanType shift to state 261
-- On bitStringValue shift to state 351
-- On bitStringType shift to state 262
## Reductions:

State 623:
## Known stack suffix:
## CONTAINING type_x
## LR(1) items:
constrainedType -> type_x . constraint_x [ RightParen LeftParen ENCODED Colon Bang ]
contentsConstraint -> CONTAINING type_x . [ RightParen Bang ]
contentsConstraint -> CONTAINING type_x . ENCODED BY value [ RightParen Bang ]
openTypeFieldVal -> type_x . Colon value [ UNION RightParen Middle LessThan INTERSECTION EXCEPT DoubleDot Comma Circumflex Bang ]
## Transitions:
-- On LeftParen shift to state 81
-- On ENCODED shift to state 624
-- On Colon shift to state 317
-- On constraint_x shift to state 206
## Reductions:
-- On RightParen reduce production contentsConstraint -> CONTAINING type_x
-- On Bang reduce production contentsConstraint -> CONTAINING type_x

State 624:
## Known stack suffix:
## CONTAINING type_x ENCODED
## LR(1) items:
contentsConstraint -> CONTAINING type_x ENCODED . BY value [ RightParen Bang ]
## Transitions:
-- On BY shift to state 625
## Reductions:

State 625:
## Known stack suffix:
## CONTAINING type_x ENCODED BY
## LR(1) items:
contentsConstraint -> CONTAINING type_x ENCODED BY . value [ RightParen Bang ]
## Transitions:
-- On VisibleString shift to state 66
-- On VideotexString shift to state 67
-- On Upper shift to state 108
-- On UniversalString shift to state 72
-- On UTF8String shift to state 73
-- On UTCTime shift to state 74
-- On TeletexString shift to state 75
-- On TYPE_IDENTIFIER shift to state 76
-- On TRUE shift to state 77
-- On T61String shift to state 78
-- On SET shift to state 79
-- On SEQUENCE shift to state 111
-- On RealNumber shift to state 296
-- On RELATIVE_OID shift to state 116
-- On REAL shift to state 117
-- On PrintableString shift to state 118
-- On PLUS_INFINITY shift to state 297
-- On ObjectDescriptor shift to state 119
-- On OCTET shift to state 120
-- On OBJECT shift to state 122
-- On NumericString shift to state 124
-- On Number shift to state 145
-- On NULL shift to state 298
-- On MINUS_INFINITY shift to state 299
-- On Lower shift to state 300
-- On LeftBracket shift to state 129
-- On LeftBrace shift to state 302
-- On ISO646String shift to state 140
-- On INTEGER shift to state 141
-- On INSTANCE shift to state 157
-- On IA5String shift to state 166
-- On Hyphen shift to state 306
-- On Hstring shift to state 308
-- On GraphicString shift to state 167
-- On GeneralizedTime shift to state 168
-- On GeneralString shift to state 169
-- On FALSE shift to state 309
-- On EXTERNAL shift to state 170
-- On ENUMERATED shift to state 171
-- On EMBEDDED shift to state 179
-- On Cstring shift to state 310
-- On CONTAINING shift to state 311
-- On CHOICE shift to state 181
-- On CHARACTER shift to state 184
-- On Bstring shift to state 312
-- On BOOLEAN shift to state 186
-- On BMPString shift to state 187
-- On BIT shift to state 188
-- On ABSTRACT_SYNTAX shift to state 162
-- On valueSetFromObjects shift to state 202
-- On valueFromObject shift to state 313
-- On value shift to state 626
-- On usefulType shift to state 203
-- On usefulObjectClassReference shift to state 163
-- On unrestrictedCharacterStringValue shift to state 315
-- On unrestrictedCharacterStringType shift to state 204
-- On type_x shift to state 316
-- On typeWithConstraint shift to state 207
-- On typeFromObject shift to state 208
-- On tuple shift to state 319
-- On taggedType shift to state 209
-- On tag shift to state 210
-- On specialRealValue shift to state 320
-- On simpleDefinedValue shift to state 64
-- On simpleDefinedType shift to state 213
-- On signedNumber shift to state 321
-- On setValue shift to state 322
-- On setType shift to state 215
-- On setOfValue shift to state 323
-- On setOfType shift to state 216
-- On sequenceValue shift to state 324
-- On sequenceType shift to state 217
-- On sequenceOfValue shift to state 325
-- On sequenceOfType shift to state 218
-- On selectionType shift to state 219
-- On restrictedCharacterStringValue shift to state 326
-- On restrictedCharacterStringType shift to state 220
-- On relativeOIDValue shift to state 327
-- On relativeOIDType shift to state 221
-- On referencedValue shift to state 328
-- On referencedType shift to state 222
-- On referencedObjects shift to state 329
-- On realValue shift to state 332
-- On realType shift to state 232
-- On quadruple shift to state 333
-- On parameterizedValueSetType shift to state 233
-- On parameterizedValue shift to state 135
-- On parameterizedType shift to state 234
-- On parameterizedObjectSet shift to state 235
-- On parameterizedObject shift to state 236
-- On openTypeFieldVal shift to state 334
-- On octetStringValue shift to state 335
-- On octetStringType shift to state 237
-- On objectIdentifierValue shift to state 336
-- On objectIdentifierType shift to state 238
-- On objectClassFieldValue shift to state 337
-- On objectClassFieldType shift to state 239
-- On numericRealValue shift to state 338
-- On nullValue shift to state 339
-- On nullType shift to state 240
-- On integerValue shift to state 340
-- On integerType shift to state 241
-- On instanceOfType shift to state 242
-- On fixedTypeFieldVal shift to state 341
-- On externalValueReference shift to state 136
-- On externalValue shift to state 342
-- On externalTypeReference shift to state 243
-- On externalType shift to state 244
-- On externalObjectSetReference shift to state 245
-- On externalObjectReference shift to state 246
-- On externalObjectClassReference shift to state 164
-- On enumeratedValue shift to state 343
-- On enumeratedType shift to state 247
-- On embeddedPDVValue shift to state 344
-- On embeddedPDVType shift to state 248
-- On definedValue shift to state 345
-- On definedType shift to state 249
-- On definedObjectSet shift to state 250
-- On definedObjectClass shift to state 252
-- On definedObject shift to state 255
-- On constrainedType shift to state 257
-- On choiceValue shift to state 346
-- On choiceType shift to state 258
-- On characterStringValue shift to state 347
-- On characterStringType shift to state 259
-- On characterStringList shift to state 348
-- On builtinValue shift to state 349
-- On builtinType shift to state 260
-- On booleanValue shift to state 350
-- On booleanType shift to state 261
-- On bitStringValue shift to state 351
-- On bitStringType shift to state 262
## Reductions:

State 626:
## Known stack suffix:
## CONTAINING type_x ENCODED BY value
## LR(1) items:
contentsConstraint -> CONTAINING type_x ENCODED BY value . [ RightParen Bang ]
## Transitions:
## Reductions:
-- On RightParen reduce production contentsConstraint -> CONTAINING type_x ENCODED BY value
-- On Bang reduce production contentsConstraint -> CONTAINING type_x ENCODED BY value

State 627:
## Known stack suffix:
## CONSTRAINED
## LR(1) items:
userDefinedConstraint -> CONSTRAINED . BY LeftBrace loption(separated_nonempty_list(Comma,userDefinedConstraintParameter)) RightBrace [ RightParen Bang ]
## Transitions:
-- On BY shift to state 628
## Reductions:

State 628:
## Known stack suffix:
## CONSTRAINED BY
## LR(1) items:
userDefinedConstraint -> CONSTRAINED BY . LeftBrace loption(separated_nonempty_list(Comma,userDefinedConstraintParameter)) RightBrace [ RightParen Bang ]
## Transitions:
-- On LeftBrace shift to state 629
## Reductions:

State 629:
## Known stack suffix:
## CONSTRAINED BY LeftBrace
## LR(1) items:
userDefinedConstraint -> CONSTRAINED BY LeftBrace . loption(separated_nonempty_list(Comma,userDefinedConstraintParameter)) RightBrace [ RightParen Bang ]
## Transitions:
-- On VisibleString shift to state 66
-- On VideotexString shift to state 67
-- On Upper shift to state 113
-- On UniversalString shift to state 72
-- On UTF8String shift to state 73
-- On UTCTime shift to state 74
-- On TeletexString shift to state 75
-- On TYPE_IDENTIFIER shift to state 76
-- On T61String shift to state 78
-- On SET shift to state 79
-- On SEQUENCE shift to state 111
-- On RELATIVE_OID shift to state 116
-- On REAL shift to state 117
-- On PrintableString shift to state 118
-- On ObjectDescriptor shift to state 119
-- On OCTET shift to state 120
-- On OBJECT shift to state 122
-- On NumericString shift to state 124
-- On NULL shift to state 125
-- On Lower shift to state 127
-- On LeftBracket shift to state 129
-- On ISO646String shift to state 140
-- On INTEGER shift to state 141
-- On INSTANCE shift to state 157
-- On IA5String shift to state 166
-- On GraphicString shift to state 167
-- On GeneralizedTime shift to state 168
-- On GeneralString shift to state 169
-- On EXTERNAL shift to state 170
-- On ENUMERATED shift to state 171
-- On EMBEDDED shift to state 179
-- On CHOICE shift to state 181
-- On CHARACTER shift to state 184
-- On BOOLEAN shift to state 186
-- On BMPString shift to state 187
-- On BIT shift to state 188
-- On ABSTRACT_SYNTAX shift to state 162
-- On valueSetFromObjects shift to state 202
-- On userDefinedConstraintParameter shift to state 630
-- On usefulType shift to state 203
-- On usefulObjectClassReference shift to state 163
-- On unrestrictedCharacterStringType shift to state 204
-- On type_x shift to state 632
-- On typeWithConstraint shift to state 207
-- On typeFromObject shift to state 208
-- On taggedType shift to state 209
-- On tag shift to state 210
-- On simpleDefinedType shift to state 213
-- On setType shift to state 215
-- On setOfType shift to state 216
-- On sequenceType shift to state 217
-- On sequenceOfType shift to state 218
-- On separated_nonempty_list(Comma,userDefinedConstraintParameter) shift to state 641
-- On selectionType shift to state 219
-- On restrictedCharacterStringType shift to state 220
-- On relativeOIDType shift to state 221
-- On referencedType shift to state 222
-- On referencedObjects shift to state 223
-- On realType shift to state 232
-- On parameterizedValueSetType shift to state 233
-- On parameterizedType shift to state 234
-- On parameterizedObjectSet shift to state 235
-- On parameterizedObject shift to state 236
-- On octetStringType shift to state 237
-- On objectIdentifierType shift to state 238
-- On objectClassFieldType shift to state 239
-- On nullType shift to state 240
-- On loption(separated_nonempty_list(Comma,userDefinedConstraintParameter)) shift to state 642
-- On integerType shift to state 241
-- On instanceOfType shift to state 242
-- On governor shift to state 634
-- On externalTypeReference shift to state 243
-- On externalType shift to state 244
-- On externalObjectSetReference shift to state 245
-- On externalObjectReference shift to state 246
-- On externalObjectClassReference shift to state 164
-- On enumeratedType shift to state 247
-- On embeddedPDVType shift to state 248
-- On definedType shift to state 249
-- On definedObjectSet shift to state 250
-- On definedObjectClass shift to state 640
-- On definedObject shift to state 255
-- On constrainedType shift to state 257
-- On choiceType shift to state 258
-- On characterStringType shift to state 259
-- On builtinType shift to state 260
-- On booleanType shift to state 261
-- On bitStringType shift to state 262
## Reductions:
-- On RightBrace reduce production loption(separated_nonempty_list(Comma,userDefinedConstraintParameter)) ->

State 630:
## Known stack suffix:
## userDefinedConstraintParameter
## LR(1) items:
separated_nonempty_list(Comma,userDefinedConstraintParameter) -> userDefinedConstraintParameter . [ RightBrace ]
separated_nonempty_list(Comma,userDefinedConstraintParameter) -> userDefinedConstraintParameter . Comma separated_nonempty_list(Comma,userDefinedConstraintParameter) [ RightBrace ]
## Transitions:
-- On Comma shift to state 631
## Reductions:
-- On RightBrace reduce production separated_nonempty_list(Comma,userDefinedConstraintParameter) -> userDefinedConstraintParameter

State 631:
## Known stack suffix:
## userDefinedConstraintParameter Comma
## LR(1) items:
separated_nonempty_list(Comma,userDefinedConstraintParameter) -> userDefinedConstraintParameter Comma . separated_nonempty_list(Comma,userDefinedConstraintParameter) [ RightBrace ]
## Transitions:
-- On VisibleString shift to state 66
-- On VideotexString shift to state 67
-- On Upper shift to state 113
-- On UniversalString shift to state 72
-- On UTF8String shift to state 73
-- On UTCTime shift to state 74
-- On TeletexString shift to state 75
-- On TYPE_IDENTIFIER shift to state 76
-- On T61String shift to state 78
-- On SET shift to state 79
-- On SEQUENCE shift to state 111
-- On RELATIVE_OID shift to state 116
-- On REAL shift to state 117
-- On PrintableString shift to state 118
-- On ObjectDescriptor shift to state 119
-- On OCTET shift to state 120
-- On OBJECT shift to state 122
-- On NumericString shift to state 124
-- On NULL shift to state 125
-- On Lower shift to state 127
-- On LeftBracket shift to state 129
-- On ISO646String shift to state 140
-- On INTEGER shift to state 141
-- On INSTANCE shift to state 157
-- On IA5String shift to state 166
-- On GraphicString shift to state 167
-- On GeneralizedTime shift to state 168
-- On GeneralString shift to state 169
-- On EXTERNAL shift to state 170
-- On ENUMERATED shift to state 171
-- On EMBEDDED shift to state 179
-- On CHOICE shift to state 181
-- On CHARACTER shift to state 184
-- On BOOLEAN shift to state 186
-- On BMPString shift to state 187
-- On BIT shift to state 188
-- On ABSTRACT_SYNTAX shift to state 162
-- On valueSetFromObjects shift to state 202
-- On userDefinedConstraintParameter shift to state 630
-- On usefulType shift to state 203
-- On usefulObjectClassReference shift to state 163
-- On unrestrictedCharacterStringType shift to state 204
-- On type_x shift to state 632
-- On typeWithConstraint shift to state 207
-- On typeFromObject shift to state 208
-- On taggedType shift to state 209
-- On tag shift to state 210
-- On simpleDefinedType shift to state 213
-- On setType shift to state 215
-- On setOfType shift to state 216
-- On sequenceType shift to state 217
-- On sequenceOfType shift to state 218
-- On separated_nonempty_list(Comma,userDefinedConstraintParameter) shift to state 633
-- On selectionType shift to state 219
-- On restrictedCharacterStringType shift to state 220
-- On relativeOIDType shift to state 221
-- On referencedType shift to state 222
-- On referencedObjects shift to state 223
-- On realType shift to state 232
-- On parameterizedValueSetType shift to state 233
-- On parameterizedType shift to state 234
-- On parameterizedObjectSet shift to state 235
-- On parameterizedObject shift to state 236
-- On octetStringType shift to state 237
-- On objectIdentifierType shift to state 238
-- On objectClassFieldType shift to state 239
-- On nullType shift to state 240
-- On integerType shift to state 241
-- On instanceOfType shift to state 242
-- On governor shift to state 634
-- On externalTypeReference shift to state 243
-- On externalType shift to state 244
-- On externalObjectSetReference shift to state 245
-- On externalObjectReference shift to state 246
-- On externalObjectClassReference shift to state 164
-- On enumeratedType shift to state 247
-- On embeddedPDVType shift to state 248
-- On definedType shift to state 249
-- On definedObjectSet shift to state 250
-- On definedObjectClass shift to state 640
-- On definedObject shift to state 255
-- On constrainedType shift to state 257
-- On choiceType shift to state 258
-- On characterStringType shift to state 259
-- On builtinType shift to state 260
-- On booleanType shift to state 261
-- On bitStringType shift to state 262
## Reductions:

State 632:
## Known stack suffix:
## type_x
## LR(1) items:
constrainedType -> type_x . constraint_x [ RightBrace LeftParen Comma Colon ]
governor -> type_x . [ Colon ]
userDefinedConstraintParameter -> type_x . [ RightBrace Comma ]
## Transitions:
-- On LeftParen shift to state 81
-- On constraint_x shift to state 206
## Reductions:
-- On RightBrace reduce production userDefinedConstraintParameter -> type_x
-- On Comma reduce production userDefinedConstraintParameter -> type_x
-- On Colon reduce production governor -> type_x

State 633:
## Known stack suffix:
## userDefinedConstraintParameter Comma separated_nonempty_list(Comma,userDefinedConstraintParameter)
## LR(1) items:
separated_nonempty_list(Comma,userDefinedConstraintParameter) -> userDefinedConstraintParameter Comma separated_nonempty_list(Comma,userDefinedConstraintParameter) . [ RightBrace ]
## Transitions:
## Reductions:
-- On RightBrace reduce production separated_nonempty_list(Comma,userDefinedConstraintParameter) -> userDefinedConstraintParameter Comma separated_nonempty_list(Comma,userDefinedConstraintParameter)

State 634:
## Known stack suffix:
## governor
## LR(1) items:
userDefinedConstraintParameter -> governor . Colon value [ RightBrace Comma ]
userDefinedConstraintParameter -> governor . Colon valueSet [ RightBrace Comma ]
userDefinedConstraintParameter -> governor . Colon object_x [ RightBrace Comma ]
userDefinedConstraintParameter -> governor . Colon objectSet [ RightBrace Comma ]
## Transitions:
-- On Colon shift to state 635
## Reductions:

State 635:
## Known stack suffix:
## governor Colon
## LR(1) items:
userDefinedConstraintParameter -> governor Colon . value [ RightBrace Comma ]
userDefinedConstraintParameter -> governor Colon . valueSet [ RightBrace Comma ]
userDefinedConstraintParameter -> governor Colon . object_x [ RightBrace Comma ]
userDefinedConstraintParameter -> governor Colon . objectSet [ RightBrace Comma ]
## Transitions:
-- On VisibleString shift to state 66
-- On VideotexString shift to state 67
-- On Upper shift to state 108
-- On UniversalString shift to state 72
-- On UTF8String shift to state 73
-- On UTCTime shift to state 74
-- On TeletexString shift to state 75
-- On TYPE_IDENTIFIER shift to state 76
-- On TRUE shift to state 77
-- On T61String shift to state 78
-- On SET shift to state 79
-- On SEQUENCE shift to state 111
-- On RealNumber shift to state 296
-- On RELATIVE_OID shift to state 116
-- On REAL shift to state 117
-- On PrintableString shift to state 118
-- On PLUS_INFINITY shift to state 297
-- On ObjectDescriptor shift to state 119
-- On OCTET shift to state 120
-- On OBJECT shift to state 122
-- On NumericString shift to state 124
-- On Number shift to state 145
-- On NULL shift to state 298
-- On MINUS_INFINITY shift to state 299
-- On Lower shift to state 300
-- On LeftBracket shift to state 129
-- On LeftBrace shift to state 502
-- On ISO646String shift to state 140
-- On INTEGER shift to state 141
-- On INSTANCE shift to state 157
-- On IA5String shift to state 166
-- On Hyphen shift to state 306
-- On Hstring shift to state 308
-- On GraphicString shift to state 167
-- On GeneralizedTime shift to state 168
-- On GeneralString shift to state 169
-- On FALSE shift to state 309
-- On EXTERNAL shift to state 170
-- On ENUMERATED shift to state 171
-- On EMBEDDED shift to state 179
-- On DefinedSyntax shift to state 508
-- On Cstring shift to state 310
-- On CONTAINING shift to state 311
-- On CHOICE shift to state 181
-- On CHARACTER shift to state 184
-- On Bstring shift to state 312
-- On BOOLEAN shift to state 186
-- On BMPString shift to state 187
-- On BIT shift to state 188
-- On ABSTRACT_SYNTAX shift to state 162
-- On valueSetFromObjects shift to state 202
-- On valueSet shift to state 636
-- On valueFromObject shift to state 313
-- On value shift to state 637
-- On usefulType shift to state 203
-- On usefulObjectClassReference shift to state 163
-- On unrestrictedCharacterStringValue shift to state 315
-- On unrestrictedCharacterStringType shift to state 204
-- On type_x shift to state 316
-- On typeWithConstraint shift to state 207
-- On typeFromObject shift to state 208
-- On tuple shift to state 319
-- On taggedType shift to state 209
-- On tag shift to state 210
-- On specialRealValue shift to state 320
-- On simpleDefinedValue shift to state 64
-- On simpleDefinedType shift to state 213
-- On signedNumber shift to state 321
-- On setValue shift to state 322
-- On setType shift to state 215
-- On setOfValue shift to state 323
-- On setOfType shift to state 216
-- On sequenceValue shift to state 324
-- On sequenceType shift to state 217
-- On sequenceOfValue shift to state 325
-- On sequenceOfType shift to state 218
-- On selectionType shift to state 219
-- On restrictedCharacterStringValue shift to state 326
-- On restrictedCharacterStringType shift to state 220
-- On relativeOIDValue shift to state 327
-- On relativeOIDType shift to state 221
-- On referencedValue shift to state 328
-- On referencedType shift to state 222
-- On referencedObjects shift to state 587
-- On realValue shift to state 332
-- On realType shift to state 232
-- On quadruple shift to state 333
-- On parameterizedValueSetType shift to state 233
-- On parameterizedValue shift to state 135
-- On parameterizedType shift to state 234
-- On parameterizedObjectSet shift to state 235
-- On parameterizedObject shift to state 524
-- On openTypeFieldVal shift to state 334
-- On octetStringValue shift to state 335
-- On octetStringType shift to state 237
-- On object_x shift to state 638
-- On objectSet shift to state 639
-- On objectIdentifierValue shift to state 336
-- On objectIdentifierType shift to state 238
-- On objectFromObject shift to state 528
-- On objectDefn shift to state 529
-- On objectClassFieldValue shift to state 337
-- On objectClassFieldType shift to state 239
-- On numericRealValue shift to state 338
-- On nullValue shift to state 339
-- On nullType shift to state 240
-- On integerValue shift to state 340
-- On integerType shift to state 241
-- On instanceOfType shift to state 242
-- On fixedTypeFieldVal shift to state 341
-- On externalValueReference shift to state 136
-- On externalValue shift to state 342
-- On externalTypeReference shift to state 243
-- On externalType shift to state 244
-- On externalObjectSetReference shift to state 245
-- On externalObjectReference shift to state 246
-- On externalObjectClassReference shift to state 164
-- On enumeratedValue shift to state 343
-- On enumeratedType shift to state 247
-- On embeddedPDVValue shift to state 344
-- On embeddedPDVType shift to state 248
-- On definedValue shift to state 345
-- On definedType shift to state 249
-- On definedObjectSet shift to state 250
-- On definedObjectClass shift to state 252
-- On definedObject shift to state 545
-- On defaultSyntax shift to state 546
-- On constrainedType shift to state 257
-- On choiceValue shift to state 346
-- On choiceType shift to state 258
-- On characterStringValue shift to state 347
-- On characterStringType shift to state 259
-- On characterStringList shift to state 348
-- On builtinValue shift to state 349
-- On builtinType shift to state 260
-- On booleanValue shift to state 350
-- On booleanType shift to state 261
-- On bitStringValue shift to state 351
-- On bitStringType shift to state 262
## Reductions:

State 636:
## Known stack suffix:
## governor Colon valueSet
## LR(1) items:
userDefinedConstraintParameter -> governor Colon valueSet . [ RightBrace Comma ]
## Transitions:
## Reductions:
-- On RightBrace reduce production userDefinedConstraintParameter -> governor Colon valueSet
-- On Comma reduce production userDefinedConstraintParameter -> governor Colon valueSet

State 637:
## Known stack suffix:
## governor Colon value
## LR(1) items:
userDefinedConstraintParameter -> governor Colon value . [ RightBrace Comma ]
## Transitions:
## Reductions:
-- On RightBrace reduce production userDefinedConstraintParameter -> governor Colon value
-- On Comma reduce production userDefinedConstraintParameter -> governor Colon value

State 638:
## Known stack suffix:
## governor Colon object_x
## LR(1) items:
userDefinedConstraintParameter -> governor Colon object_x . [ RightBrace Comma ]
## Transitions:
## Reductions:
-- On RightBrace reduce production userDefinedConstraintParameter -> governor Colon object_x
-- On Comma reduce production userDefinedConstraintParameter -> governor Colon object_x

State 639:
## Known stack suffix:
## governor Colon objectSet
## LR(1) items:
userDefinedConstraintParameter -> governor Colon objectSet . [ RightBrace Comma ]
## Transitions:
## Reductions:
-- On RightBrace reduce production userDefinedConstraintParameter -> governor Colon objectSet
-- On Comma reduce production userDefinedConstraintParameter -> governor Colon objectSet

State 640:
## Known stack suffix:
## definedObjectClass
## LR(1) items:
governor -> definedObjectClass . [ Colon ]
objectClassFieldType -> definedObjectClass . Dot fieldName [ RightBrace LeftParen Comma Colon ]
userDefinedConstraintParameter -> definedObjectClass . [ RightBrace Comma ]
## Transitions:
-- On Dot shift to state 253
## Reductions:
-- On RightBrace reduce production userDefinedConstraintParameter -> definedObjectClass
-- On Comma reduce production userDefinedConstraintParameter -> definedObjectClass
-- On Colon reduce production governor -> definedObjectClass

State 641:
## Known stack suffix:
## separated_nonempty_list(Comma,userDefinedConstraintParameter)
## LR(1) items:
loption(separated_nonempty_list(Comma,userDefinedConstraintParameter)) -> separated_nonempty_list(Comma,userDefinedConstraintParameter) . [ RightBrace ]
## Transitions:
## Reductions:
-- On RightBrace reduce production loption(separated_nonempty_list(Comma,userDefinedConstraintParameter)) -> separated_nonempty_list(Comma,userDefinedConstraintParameter)

State 642:
## Known stack suffix:
## CONSTRAINED BY LeftBrace loption(separated_nonempty_list(Comma,userDefinedConstraintParameter))
## LR(1) items:
userDefinedConstraint -> CONSTRAINED BY LeftBrace loption(separated_nonempty_list(Comma,userDefinedConstraintParameter)) . RightBrace [ RightParen Bang ]
## Transitions:
-- On RightBrace shift to state 643
## Reductions:

State 643:
## Known stack suffix:
## CONSTRAINED BY LeftBrace loption(separated_nonempty_list(Comma,userDefinedConstraintParameter)) RightBrace
## LR(1) items:
userDefinedConstraint -> CONSTRAINED BY LeftBrace loption(separated_nonempty_list(Comma,userDefinedConstraintParameter)) RightBrace . [ RightParen Bang ]
## Transitions:
## Reductions:
-- On RightParen reduce production userDefinedConstraint -> CONSTRAINED BY LeftBrace loption(separated_nonempty_list(Comma,userDefinedConstraintParameter)) RightBrace
-- On Bang reduce production userDefinedConstraint -> CONSTRAINED BY LeftBrace loption(separated_nonempty_list(Comma,userDefinedConstraintParameter)) RightBrace

State 644:
## Known stack suffix:
## userDefinedConstraint
## LR(1) items:
generalConstraint -> userDefinedConstraint . [ RightParen Bang ]
## Transitions:
## Reductions:
-- On RightParen reduce production generalConstraint -> userDefinedConstraint
-- On Bang reduce production generalConstraint -> userDefinedConstraint

State 645:
## Known stack suffix:
## tableConstraint
## LR(1) items:
generalConstraint -> tableConstraint . [ RightParen Bang ]
## Transitions:
## Reductions:
-- On RightParen reduce production generalConstraint -> tableConstraint
-- On Bang reduce production generalConstraint -> tableConstraint

State 646:
## Known stack suffix:
## subtypeConstraint
## LR(1) items:
constraintSpec -> subtypeConstraint . [ RightParen Bang ]
## Transitions:
## Reductions:
-- On RightParen reduce production constraintSpec -> subtypeConstraint
-- On Bang reduce production constraintSpec -> subtypeConstraint

State 647:
## Known stack suffix:
## simpleTableConstraint
## LR(1) items:
tableConstraint -> simpleTableConstraint . [ RightParen Bang ]
## Transitions:
## Reductions:
-- On RightParen reduce production tableConstraint -> simpleTableConstraint
-- On Bang reduce production tableConstraint -> simpleTableConstraint

State 648:
## Known stack suffix:
## rootElementSetSpec
## LR(1) items:
elementSetSpecs -> rootElementSetSpec . [ RightParen RightBrace Bang ]
elementSetSpecs -> rootElementSetSpec . Comma Ellipsis [ RightParen RightBrace Bang ]
elementSetSpecs -> rootElementSetSpec . Comma Ellipsis Comma additionalElementSetSpec [ RightParen RightBrace Bang ]
## Transitions:
-- On Comma shift to state 649
## Reductions:
-- On RightParen reduce production elementSetSpecs -> rootElementSetSpec
-- On RightBrace reduce production elementSetSpecs -> rootElementSetSpec
-- On Bang reduce production elementSetSpecs -> rootElementSetSpec

State 649:
## Known stack suffix:
## rootElementSetSpec Comma
## LR(1) items:
elementSetSpecs -> rootElementSetSpec Comma . Ellipsis [ RightParen RightBrace Bang ]
elementSetSpecs -> rootElementSetSpec Comma . Ellipsis Comma additionalElementSetSpec [ RightParen RightBrace Bang ]
## Transitions:
-- On Ellipsis shift to state 650
## Reductions:

State 650:
## Known stack suffix:
## rootElementSetSpec Comma Ellipsis
## LR(1) items:
elementSetSpecs -> rootElementSetSpec Comma Ellipsis . [ RightParen RightBrace Bang ]
elementSetSpecs -> rootElementSetSpec Comma Ellipsis . Comma additionalElementSetSpec [ RightParen RightBrace Bang ]
## Transitions:
-- On Comma shift to state 651
## Reductions:
-- On RightParen reduce production elementSetSpecs -> rootElementSetSpec Comma Ellipsis
-- On RightBrace reduce production elementSetSpecs -> rootElementSetSpec Comma Ellipsis
-- On Bang reduce production elementSetSpecs -> rootElementSetSpec Comma Ellipsis

State 651:
## Known stack suffix:
## rootElementSetSpec Comma Ellipsis Comma
## LR(1) items:
elementSetSpecs -> rootElementSetSpec Comma Ellipsis Comma . additionalElementSetSpec [ RightParen RightBrace Bang ]
## Transitions:
-- On WITH shift to state 82
-- On VisibleString shift to state 66
-- On VideotexString shift to state 67
-- On Upper shift to state 108
-- On UniversalString shift to state 72
-- On UTF8String shift to state 73
-- On UTCTime shift to state 74
-- On TeletexString shift to state 75
-- On TYPE_IDENTIFIER shift to state 76
-- On TRUE shift to state 77
-- On T61String shift to state 78
-- On SIZE shift to state 80
-- On SET shift to state 79
-- On SEQUENCE shift to state 111
-- On RealNumber shift to state 296
-- On RELATIVE_OID shift to state 116
-- On REAL shift to state 117
-- On PrintableString shift to state 118
-- On PLUS_INFINITY shift to state 297
-- On PATTERN shift to state 495
-- On ObjectDescriptor shift to state 119
-- On OCTET shift to state 120
-- On OBJECT shift to state 122
-- On NumericString shift to state 124
-- On Number shift to state 145
-- On NULL shift to state 298
-- On MINUS_INFINITY shift to state 299
-- On MIN shift to state 497
-- On Lower shift to state 300
-- On LeftParen shift to state 498
-- On LeftBracket shift to state 129
-- On LeftBrace shift to state 499
-- On ISO646String shift to state 140
-- On INTEGER shift to state 141
-- On INSTANCE shift to state 157
-- On INCLUDES shift to state 503
-- On IA5String shift to state 166
-- On Hyphen shift to state 306
-- On Hstring shift to state 308
-- On GraphicString shift to state 167
-- On GeneralizedTime shift to state 168
-- On GeneralString shift to state 169
-- On FROM shift to state 504
-- On FALSE shift to state 309
-- On EXTERNAL shift to state 170
-- On ENUMERATED shift to state 171
-- On EMBEDDED shift to state 179
-- On DefinedSyntax shift to state 508
-- On Cstring shift to state 310
-- On CONTAINING shift to state 311
-- On CHOICE shift to state 181
-- On CHARACTER shift to state 184
-- On Bstring shift to state 312
-- On BOOLEAN shift to state 186
-- On BMPString shift to state 187
-- On BIT shift to state 188
-- On ALL shift to state 509
-- On ABSTRACT_SYNTAX shift to state 162
-- On valueSetFromObjects shift to state 202
-- On valueRange shift to state 511
-- On valueFromObject shift to state 313
-- On value shift to state 512
-- On usefulType shift to state 203
-- On usefulObjectClassReference shift to state 163
-- On unrestrictedCharacterStringValue shift to state 315
-- On unrestrictedCharacterStringType shift to state 204
-- On unions shift to state 549
-- On uElems shift to state 550
-- On type_x shift to state 513
-- On typeWithConstraint shift to state 207
-- On typeFromObject shift to state 208
-- On typeConstraint shift to state 514
-- On tuple shift to state 319
-- On taggedType shift to state 209
-- On tag shift to state 210
-- On subtypeElements shift to state 515
-- On specialRealValue shift to state 320
-- On sizeConstraint shift to state 516
-- On singleValue shift to state 517
-- On simpleDefinedValue shift to state 64
-- On simpleDefinedType shift to state 213
-- On signedNumber shift to state 321
-- On setValue shift to state 322
-- On setType shift to state 215
-- On setOfValue shift to state 323
-- On setOfType shift to state 216
-- On sequenceValue shift to state 324
-- On sequenceType shift to state 217
-- On sequenceOfValue shift to state 325
-- On sequenceOfType shift to state 218
-- On selectionType shift to state 219
-- On restrictedCharacterStringValue shift to state 326
-- On restrictedCharacterStringType shift to state 220
-- On relativeOIDValue shift to state 327
-- On relativeOIDType shift to state 221
-- On referencedValue shift to state 328
-- On referencedType shift to state 222
-- On referencedObjects shift to state 518
-- On realValue shift to state 332
-- On realType shift to state 232
-- On quadruple shift to state 333
-- On permittedAlphabet shift to state 521
-- On patternConstraint shift to state 522
-- On parameterizedValueSetType shift to state 233
-- On parameterizedValue shift to state 135
-- On parameterizedType shift to state 234
-- On parameterizedObjectSet shift to state 523
-- On parameterizedObject shift to state 524
-- On openTypeFieldVal shift to state 334
-- On octetStringValue shift to state 335
-- On octetStringType shift to state 237
-- On object_x shift to state 525
-- On objectSetFromObjects shift to state 526
-- On objectSetElements shift to state 527
-- On objectIdentifierValue shift to state 336
-- On objectIdentifierType shift to state 238
-- On objectFromObject shift to state 528
-- On objectDefn shift to state 529
-- On objectClassFieldValue shift to state 337
-- On objectClassFieldType shift to state 239
-- On numericRealValue shift to state 338
-- On nullValue shift to state 339
-- On nullType shift to state 240
-- On lowerEndValue shift to state 530
-- On lowerEndPoint shift to state 532
-- On intersections shift to state 564
-- On intersectionElements shift to state 555
-- On integerValue shift to state 340
-- On integerType shift to state 241
-- On instanceOfType shift to state 242
-- On innerTypeConstraints shift to state 540
-- On includes shift to state 541
-- On iElems shift to state 556
-- On fixedTypeFieldVal shift to state 341
-- On externalValueReference shift to state 136
-- On externalValue shift to state 342
-- On externalTypeReference shift to state 243
-- On externalType shift to state 244
-- On externalObjectSetReference shift to state 245
-- On externalObjectReference shift to state 246
-- On externalObjectClassReference shift to state 164
-- On enumeratedValue shift to state 343
-- On enumeratedType shift to state 247
-- On embeddedPDVValue shift to state 344
-- On embeddedPDVType shift to state 248
-- On elems shift to state 561
-- On elements shift to state 563
-- On elementSetSpec shift to state 565
-- On definedValue shift to state 345
-- On definedType shift to state 249
-- On definedObjectSet shift to state 544
-- On definedObjectClass shift to state 252
-- On definedObject shift to state 545
-- On defaultSyntax shift to state 546
-- On containedSubtype shift to state 547
-- On constrainedType shift to state 257
-- On choiceValue shift to state 346
-- On choiceType shift to state 258
-- On characterStringValue shift to state 347
-- On characterStringType shift to state 259
-- On characterStringList shift to state 348
-- On builtinValue shift to state 349
-- On builtinType shift to state 260
-- On booleanValue shift to state 350
-- On booleanType shift to state 261
-- On bitStringValue shift to state 351
-- On bitStringType shift to state 262
-- On additionalElementSetSpec shift to state 652
## Reductions:

State 652:
## Known stack suffix:
## rootElementSetSpec Comma Ellipsis Comma additionalElementSetSpec
## LR(1) items:
elementSetSpecs -> rootElementSetSpec Comma Ellipsis Comma additionalElementSetSpec . [ RightParen RightBrace Bang ]
## Transitions:
## Reductions:
-- On RightParen reduce production elementSetSpecs -> rootElementSetSpec Comma Ellipsis Comma additionalElementSetSpec
-- On RightBrace reduce production elementSetSpecs -> rootElementSetSpec Comma Ellipsis Comma additionalElementSetSpec
-- On Bang reduce production elementSetSpecs -> rootElementSetSpec Comma Ellipsis Comma additionalElementSetSpec

State 653:
## Known stack suffix:
## objectSet
## LR(1) items:
simpleTableConstraint -> objectSet . [ RightParen Bang ]
## Transitions:
## Reductions:
-- On RightParen reduce production simpleTableConstraint -> objectSet
-- On Bang reduce production simpleTableConstraint -> objectSet

State 654:
## Known stack suffix:
## generalConstraint
## LR(1) items:
constraintSpec -> generalConstraint . [ RightParen Bang ]
## Transitions:
## Reductions:
-- On RightParen reduce production constraintSpec -> generalConstraint
-- On Bang reduce production constraintSpec -> generalConstraint

State 655:
## Known stack suffix:
## elementSetSpecs
## LR(1) items:
subtypeConstraint -> elementSetSpecs . [ RightParen Bang ]
## Transitions:
## Reductions:
-- On RightParen reduce production subtypeConstraint -> elementSetSpecs
-- On Bang reduce production subtypeConstraint -> elementSetSpecs

State 656:
## Known stack suffix:
## contentsConstraint
## LR(1) items:
generalConstraint -> contentsConstraint . [ RightParen Bang ]
## Transitions:
## Reductions:
-- On RightParen reduce production generalConstraint -> contentsConstraint
-- On Bang reduce production generalConstraint -> contentsConstraint

State 657:
## Known stack suffix:
## LeftParen constraintSpec
## LR(1) items:
constraint_x -> LeftParen constraintSpec . exceptionSpec RightParen [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace PRESENT OPTIONAL OF Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ABSENT ]
## Transitions:
-- On Bang shift to state 177
-- On exceptionSpec shift to state 658
## Reductions:
-- On RightParen reduce production exceptionSpec ->

State 658:
## Known stack suffix:
## LeftParen constraintSpec exceptionSpec
## LR(1) items:
constraint_x -> LeftParen constraintSpec exceptionSpec . RightParen [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace PRESENT OPTIONAL OF Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ABSENT ]
## Transitions:
-- On RightParen shift to state 659
## Reductions:

State 659:
## Known stack suffix:
## LeftParen constraintSpec exceptionSpec RightParen
## LR(1) items:
constraint_x -> LeftParen constraintSpec exceptionSpec RightParen . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace PRESENT OPTIONAL OF Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ABSENT ]
## Transitions:
## Reductions:
-- On Upper reduce production constraint_x -> LeftParen constraintSpec exceptionSpec RightParen
-- On UNIQUE reduce production constraint_x -> LeftParen constraintSpec exceptionSpec RightParen
-- On UNION reduce production constraint_x -> LeftParen constraintSpec exceptionSpec RightParen
-- On RightParen reduce production constraint_x -> LeftParen constraintSpec exceptionSpec RightParen
-- On RightDoubleBracket reduce production constraint_x -> LeftParen constraintSpec exceptionSpec RightParen
-- On RightBrace reduce production constraint_x -> LeftParen constraintSpec exceptionSpec RightParen
-- On PRESENT reduce production constraint_x -> LeftParen constraintSpec exceptionSpec RightParen
-- On OPTIONAL reduce production constraint_x -> LeftParen constraintSpec exceptionSpec RightParen
-- On OF reduce production constraint_x -> LeftParen constraintSpec exceptionSpec RightParen
-- On Middle reduce production constraint_x -> LeftParen constraintSpec exceptionSpec RightParen
-- On Lower reduce production constraint_x -> LeftParen constraintSpec exceptionSpec RightParen
-- On LeftParen reduce production constraint_x -> LeftParen constraintSpec exceptionSpec RightParen
-- On INTERSECTION reduce production constraint_x -> LeftParen constraintSpec exceptionSpec RightParen
-- On EXCEPT reduce production constraint_x -> LeftParen constraintSpec exceptionSpec RightParen
-- On END reduce production constraint_x -> LeftParen constraintSpec exceptionSpec RightParen
-- On ENCODED reduce production constraint_x -> LeftParen constraintSpec exceptionSpec RightParen
-- On DEFAULT reduce production constraint_x -> LeftParen constraintSpec exceptionSpec RightParen
-- On Comma reduce production constraint_x -> LeftParen constraintSpec exceptionSpec RightParen
-- On Colon reduce production constraint_x -> LeftParen constraintSpec exceptionSpec RightParen
-- On Circumflex reduce production constraint_x -> LeftParen constraintSpec exceptionSpec RightParen
-- On Bang reduce production constraint_x -> LeftParen constraintSpec exceptionSpec RightParen
-- On Assignment reduce production constraint_x -> LeftParen constraintSpec exceptionSpec RightParen
-- On ABSENT reduce production constraint_x -> LeftParen constraintSpec exceptionSpec RightParen

State 660:
## Known stack suffix:
## componentRelationConstraint
## LR(1) items:
tableConstraint -> componentRelationConstraint . [ RightParen Bang ]
## Transitions:
## Reductions:
-- On RightParen reduce production tableConstraint -> componentRelationConstraint
-- On Bang reduce production tableConstraint -> componentRelationConstraint

State 661:
## Known stack suffix:
## SIZE constraint_x
## LR(1) items:
sizeConstraint -> SIZE constraint_x . [ UNION RightParen RightBrace OF Middle INTERSECTION EXCEPT Comma Circumflex Bang ]
## Transitions:
## Reductions:
-- On UNION reduce production sizeConstraint -> SIZE constraint_x
-- On RightParen reduce production sizeConstraint -> SIZE constraint_x
-- On RightBrace reduce production sizeConstraint -> SIZE constraint_x
-- On OF reduce production sizeConstraint -> SIZE constraint_x
-- On Middle reduce production sizeConstraint -> SIZE constraint_x
-- On INTERSECTION reduce production sizeConstraint -> SIZE constraint_x
-- On EXCEPT reduce production sizeConstraint -> SIZE constraint_x
-- On Comma reduce production sizeConstraint -> SIZE constraint_x
-- On Circumflex reduce production sizeConstraint -> SIZE constraint_x
-- On Bang reduce production sizeConstraint -> SIZE constraint_x

State 662:
## Known stack suffix:
## SET OF
## LR(1) items:
setOfType -> SET OF . type_x [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
setOfType -> SET OF . namedType [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
-- On VisibleString shift to state 66
-- On VideotexString shift to state 67
-- On Upper shift to state 113
-- On UniversalString shift to state 72
-- On UTF8String shift to state 73
-- On UTCTime shift to state 74
-- On TeletexString shift to state 75
-- On TYPE_IDENTIFIER shift to state 76
-- On T61String shift to state 78
-- On SET shift to state 79
-- On SEQUENCE shift to state 111
-- On RELATIVE_OID shift to state 116
-- On REAL shift to state 117
-- On PrintableString shift to state 118
-- On ObjectDescriptor shift to state 119
-- On OCTET shift to state 120
-- On OBJECT shift to state 122
-- On NumericString shift to state 124
-- On NULL shift to state 125
-- On Lower shift to state 126
-- On LeftBracket shift to state 129
-- On ISO646String shift to state 140
-- On INTEGER shift to state 141
-- On INSTANCE shift to state 157
-- On IA5String shift to state 166
-- On GraphicString shift to state 167
-- On GeneralizedTime shift to state 168
-- On GeneralString shift to state 169
-- On EXTERNAL shift to state 170
-- On ENUMERATED shift to state 171
-- On EMBEDDED shift to state 179
-- On CHOICE shift to state 181
-- On CHARACTER shift to state 184
-- On BOOLEAN shift to state 186
-- On BMPString shift to state 187
-- On BIT shift to state 188
-- On ABSTRACT_SYNTAX shift to state 162
-- On valueSetFromObjects shift to state 202
-- On usefulType shift to state 203
-- On usefulObjectClassReference shift to state 163
-- On unrestrictedCharacterStringType shift to state 204
-- On type_x shift to state 663
-- On typeWithConstraint shift to state 207
-- On typeFromObject shift to state 208
-- On taggedType shift to state 209
-- On tag shift to state 210
-- On simpleDefinedType shift to state 213
-- On setType shift to state 215
-- On setOfType shift to state 216
-- On sequenceType shift to state 217
-- On sequenceOfType shift to state 218
-- On selectionType shift to state 219
-- On restrictedCharacterStringType shift to state 220
-- On relativeOIDType shift to state 221
-- On referencedType shift to state 222
-- On referencedObjects shift to state 223
-- On realType shift to state 232
-- On parameterizedValueSetType shift to state 233
-- On parameterizedType shift to state 234
-- On parameterizedObjectSet shift to state 235
-- On parameterizedObject shift to state 236
-- On octetStringType shift to state 237
-- On objectIdentifierType shift to state 238
-- On objectClassFieldType shift to state 239
-- On nullType shift to state 240
-- On namedType shift to state 664
-- On integerType shift to state 241
-- On instanceOfType shift to state 242
-- On externalTypeReference shift to state 243
-- On externalType shift to state 244
-- On externalObjectSetReference shift to state 245
-- On externalObjectReference shift to state 246
-- On externalObjectClassReference shift to state 164
-- On enumeratedType shift to state 247
-- On embeddedPDVType shift to state 248
-- On definedType shift to state 249
-- On definedObjectSet shift to state 250
-- On definedObjectClass shift to state 252
-- On definedObject shift to state 255
-- On constrainedType shift to state 257
-- On choiceType shift to state 258
-- On characterStringType shift to state 259
-- On builtinType shift to state 260
-- On booleanType shift to state 261
-- On bitStringType shift to state 262
## Reductions:

State 663:
## Known stack suffix:
## SET OF type_x
## LR(1) items:
constrainedType -> type_x . constraint_x [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
setOfType -> SET OF type_x . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
-- On LeftParen shift to state 81
-- On constraint_x shift to state 206
## Reductions:
-- On Upper reduce production setOfType -> SET OF type_x
-- On UNIQUE reduce production setOfType -> SET OF type_x
-- On UNION reduce production setOfType -> SET OF type_x
-- On RightParen reduce production setOfType -> SET OF type_x
-- On RightDoubleBracket reduce production setOfType -> SET OF type_x
-- On RightBrace reduce production setOfType -> SET OF type_x
-- On OPTIONAL reduce production setOfType -> SET OF type_x
-- On Middle reduce production setOfType -> SET OF type_x
-- On Lower reduce production setOfType -> SET OF type_x
-- On INTERSECTION reduce production setOfType -> SET OF type_x
-- On EXCEPT reduce production setOfType -> SET OF type_x
-- On END reduce production setOfType -> SET OF type_x
-- On ENCODED reduce production setOfType -> SET OF type_x
-- On DEFAULT reduce production setOfType -> SET OF type_x
-- On Comma reduce production setOfType -> SET OF type_x
-- On Colon reduce production setOfType -> SET OF type_x
-- On Circumflex reduce production setOfType -> SET OF type_x
-- On Bang reduce production setOfType -> SET OF type_x
-- On Assignment reduce production setOfType -> SET OF type_x

State 664:
## Known stack suffix:
## SET OF namedType
## LR(1) items:
setOfType -> SET OF namedType . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
## Reductions:
-- On Upper reduce production setOfType -> SET OF namedType
-- On UNIQUE reduce production setOfType -> SET OF namedType
-- On UNION reduce production setOfType -> SET OF namedType
-- On RightParen reduce production setOfType -> SET OF namedType
-- On RightDoubleBracket reduce production setOfType -> SET OF namedType
-- On RightBrace reduce production setOfType -> SET OF namedType
-- On OPTIONAL reduce production setOfType -> SET OF namedType
-- On Middle reduce production setOfType -> SET OF namedType
-- On Lower reduce production setOfType -> SET OF namedType
-- On LeftParen reduce production setOfType -> SET OF namedType
-- On INTERSECTION reduce production setOfType -> SET OF namedType
-- On EXCEPT reduce production setOfType -> SET OF namedType
-- On END reduce production setOfType -> SET OF namedType
-- On ENCODED reduce production setOfType -> SET OF namedType
-- On DEFAULT reduce production setOfType -> SET OF namedType
-- On Comma reduce production setOfType -> SET OF namedType
-- On Colon reduce production setOfType -> SET OF namedType
-- On Circumflex reduce production setOfType -> SET OF namedType
-- On Bang reduce production setOfType -> SET OF namedType
-- On Assignment reduce production setOfType -> SET OF namedType

State 665:
## Known stack suffix:
## SET LeftBrace
## LR(1) items:
setType -> SET LeftBrace . RightBrace [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
setType -> SET LeftBrace . extensionAndException optionalExtensionMarker RightBrace [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
setType -> SET LeftBrace . componentTypeLists RightBrace [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
-- On RightBrace shift to state 666
-- On Lower shift to state 183
-- On Ellipsis shift to state 268
-- On COMPONENTS shift to state 444
-- On rootComponentTypeList shift to state 447
-- On namedType shift to state 453
-- On extensionAndException shift to state 667
-- On componentTypeLists shift to state 670
-- On componentTypeList shift to state 475
-- On componentType shift to state 461
## Reductions:

State 666:
## Known stack suffix:
## SET LeftBrace RightBrace
## LR(1) items:
setType -> SET LeftBrace RightBrace . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
## Reductions:
-- On Upper reduce production setType -> SET LeftBrace RightBrace
-- On UNIQUE reduce production setType -> SET LeftBrace RightBrace
-- On UNION reduce production setType -> SET LeftBrace RightBrace
-- On RightParen reduce production setType -> SET LeftBrace RightBrace
-- On RightDoubleBracket reduce production setType -> SET LeftBrace RightBrace
-- On RightBrace reduce production setType -> SET LeftBrace RightBrace
-- On OPTIONAL reduce production setType -> SET LeftBrace RightBrace
-- On Middle reduce production setType -> SET LeftBrace RightBrace
-- On Lower reduce production setType -> SET LeftBrace RightBrace
-- On LeftParen reduce production setType -> SET LeftBrace RightBrace
-- On INTERSECTION reduce production setType -> SET LeftBrace RightBrace
-- On EXCEPT reduce production setType -> SET LeftBrace RightBrace
-- On END reduce production setType -> SET LeftBrace RightBrace
-- On ENCODED reduce production setType -> SET LeftBrace RightBrace
-- On DEFAULT reduce production setType -> SET LeftBrace RightBrace
-- On Comma reduce production setType -> SET LeftBrace RightBrace
-- On Colon reduce production setType -> SET LeftBrace RightBrace
-- On Circumflex reduce production setType -> SET LeftBrace RightBrace
-- On Bang reduce production setType -> SET LeftBrace RightBrace
-- On Assignment reduce production setType -> SET LeftBrace RightBrace

State 667:
## Known stack suffix:
## SET LeftBrace extensionAndException
## LR(1) items:
componentTypeLists -> extensionAndException . extensionAdditions extensionEndMarker Comma rootComponentTypeList [ RightBrace ]
componentTypeLists -> extensionAndException . extensionAdditions optionalExtensionMarker [ RightBrace ]
setType -> SET LeftBrace extensionAndException . optionalExtensionMarker RightBrace [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
-- On Comma shift to state 477
-- On optionalExtensionMarker shift to state 668
-- On extensionAdditions shift to state 480
## Reductions:
-- On RightBrace reduce production optionalExtensionMarker ->

State 668:
## Known stack suffix:
## SET LeftBrace extensionAndException optionalExtensionMarker
## LR(1) items:
setType -> SET LeftBrace extensionAndException optionalExtensionMarker . RightBrace [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
-- On RightBrace shift to state 669
## Reductions:

State 669:
## Known stack suffix:
## SET LeftBrace extensionAndException optionalExtensionMarker RightBrace
## LR(1) items:
setType -> SET LeftBrace extensionAndException optionalExtensionMarker RightBrace . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
## Reductions:
-- On Upper reduce production setType -> SET LeftBrace extensionAndException optionalExtensionMarker RightBrace
-- On UNIQUE reduce production setType -> SET LeftBrace extensionAndException optionalExtensionMarker RightBrace
-- On UNION reduce production setType -> SET LeftBrace extensionAndException optionalExtensionMarker RightBrace
-- On RightParen reduce production setType -> SET LeftBrace extensionAndException optionalExtensionMarker RightBrace
-- On RightDoubleBracket reduce production setType -> SET LeftBrace extensionAndException optionalExtensionMarker RightBrace
-- On RightBrace reduce production setType -> SET LeftBrace extensionAndException optionalExtensionMarker RightBrace
-- On OPTIONAL reduce production setType -> SET LeftBrace extensionAndException optionalExtensionMarker RightBrace
-- On Middle reduce production setType -> SET LeftBrace extensionAndException optionalExtensionMarker RightBrace
-- On Lower reduce production setType -> SET LeftBrace extensionAndException optionalExtensionMarker RightBrace
-- On LeftParen reduce production setType -> SET LeftBrace extensionAndException optionalExtensionMarker RightBrace
-- On INTERSECTION reduce production setType -> SET LeftBrace extensionAndException optionalExtensionMarker RightBrace
-- On EXCEPT reduce production setType -> SET LeftBrace extensionAndException optionalExtensionMarker RightBrace
-- On END reduce production setType -> SET LeftBrace extensionAndException optionalExtensionMarker RightBrace
-- On ENCODED reduce production setType -> SET LeftBrace extensionAndException optionalExtensionMarker RightBrace
-- On DEFAULT reduce production setType -> SET LeftBrace extensionAndException optionalExtensionMarker RightBrace
-- On Comma reduce production setType -> SET LeftBrace extensionAndException optionalExtensionMarker RightBrace
-- On Colon reduce production setType -> SET LeftBrace extensionAndException optionalExtensionMarker RightBrace
-- On Circumflex reduce production setType -> SET LeftBrace extensionAndException optionalExtensionMarker RightBrace
-- On Bang reduce production setType -> SET LeftBrace extensionAndException optionalExtensionMarker RightBrace
-- On Assignment reduce production setType -> SET LeftBrace extensionAndException optionalExtensionMarker RightBrace

State 670:
## Known stack suffix:
## SET LeftBrace componentTypeLists
## LR(1) items:
setType -> SET LeftBrace componentTypeLists . RightBrace [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
-- On RightBrace shift to state 671
## Reductions:

State 671:
## Known stack suffix:
## SET LeftBrace componentTypeLists RightBrace
## LR(1) items:
setType -> SET LeftBrace componentTypeLists RightBrace . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
## Reductions:
-- On Upper reduce production setType -> SET LeftBrace componentTypeLists RightBrace
-- On UNIQUE reduce production setType -> SET LeftBrace componentTypeLists RightBrace
-- On UNION reduce production setType -> SET LeftBrace componentTypeLists RightBrace
-- On RightParen reduce production setType -> SET LeftBrace componentTypeLists RightBrace
-- On RightDoubleBracket reduce production setType -> SET LeftBrace componentTypeLists RightBrace
-- On RightBrace reduce production setType -> SET LeftBrace componentTypeLists RightBrace
-- On OPTIONAL reduce production setType -> SET LeftBrace componentTypeLists RightBrace
-- On Middle reduce production setType -> SET LeftBrace componentTypeLists RightBrace
-- On Lower reduce production setType -> SET LeftBrace componentTypeLists RightBrace
-- On LeftParen reduce production setType -> SET LeftBrace componentTypeLists RightBrace
-- On INTERSECTION reduce production setType -> SET LeftBrace componentTypeLists RightBrace
-- On EXCEPT reduce production setType -> SET LeftBrace componentTypeLists RightBrace
-- On END reduce production setType -> SET LeftBrace componentTypeLists RightBrace
-- On ENCODED reduce production setType -> SET LeftBrace componentTypeLists RightBrace
-- On DEFAULT reduce production setType -> SET LeftBrace componentTypeLists RightBrace
-- On Comma reduce production setType -> SET LeftBrace componentTypeLists RightBrace
-- On Colon reduce production setType -> SET LeftBrace componentTypeLists RightBrace
-- On Circumflex reduce production setType -> SET LeftBrace componentTypeLists RightBrace
-- On Bang reduce production setType -> SET LeftBrace componentTypeLists RightBrace
-- On Assignment reduce production setType -> SET LeftBrace componentTypeLists RightBrace

State 672:
## Known stack suffix:
## SET sizeConstraint
## LR(1) items:
typeWithConstraint -> SET sizeConstraint . OF type_x [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
typeWithConstraint -> SET sizeConstraint . OF namedType [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
-- On OF shift to state 673
## Reductions:

State 673:
## Known stack suffix:
## SET sizeConstraint OF
## LR(1) items:
typeWithConstraint -> SET sizeConstraint OF . type_x [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
typeWithConstraint -> SET sizeConstraint OF . namedType [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
-- On VisibleString shift to state 66
-- On VideotexString shift to state 67
-- On Upper shift to state 113
-- On UniversalString shift to state 72
-- On UTF8String shift to state 73
-- On UTCTime shift to state 74
-- On TeletexString shift to state 75
-- On TYPE_IDENTIFIER shift to state 76
-- On T61String shift to state 78
-- On SET shift to state 79
-- On SEQUENCE shift to state 111
-- On RELATIVE_OID shift to state 116
-- On REAL shift to state 117
-- On PrintableString shift to state 118
-- On ObjectDescriptor shift to state 119
-- On OCTET shift to state 120
-- On OBJECT shift to state 122
-- On NumericString shift to state 124
-- On NULL shift to state 125
-- On Lower shift to state 126
-- On LeftBracket shift to state 129
-- On ISO646String shift to state 140
-- On INTEGER shift to state 141
-- On INSTANCE shift to state 157
-- On IA5String shift to state 166
-- On GraphicString shift to state 167
-- On GeneralizedTime shift to state 168
-- On GeneralString shift to state 169
-- On EXTERNAL shift to state 170
-- On ENUMERATED shift to state 171
-- On EMBEDDED shift to state 179
-- On CHOICE shift to state 181
-- On CHARACTER shift to state 184
-- On BOOLEAN shift to state 186
-- On BMPString shift to state 187
-- On BIT shift to state 188
-- On ABSTRACT_SYNTAX shift to state 162
-- On valueSetFromObjects shift to state 202
-- On usefulType shift to state 203
-- On usefulObjectClassReference shift to state 163
-- On unrestrictedCharacterStringType shift to state 204
-- On type_x shift to state 674
-- On typeWithConstraint shift to state 207
-- On typeFromObject shift to state 208
-- On taggedType shift to state 209
-- On tag shift to state 210
-- On simpleDefinedType shift to state 213
-- On setType shift to state 215
-- On setOfType shift to state 216
-- On sequenceType shift to state 217
-- On sequenceOfType shift to state 218
-- On selectionType shift to state 219
-- On restrictedCharacterStringType shift to state 220
-- On relativeOIDType shift to state 221
-- On referencedType shift to state 222
-- On referencedObjects shift to state 223
-- On realType shift to state 232
-- On parameterizedValueSetType shift to state 233
-- On parameterizedType shift to state 234
-- On parameterizedObjectSet shift to state 235
-- On parameterizedObject shift to state 236
-- On octetStringType shift to state 237
-- On objectIdentifierType shift to state 238
-- On objectClassFieldType shift to state 239
-- On nullType shift to state 240
-- On namedType shift to state 675
-- On integerType shift to state 241
-- On instanceOfType shift to state 242
-- On externalTypeReference shift to state 243
-- On externalType shift to state 244
-- On externalObjectSetReference shift to state 245
-- On externalObjectReference shift to state 246
-- On externalObjectClassReference shift to state 164
-- On enumeratedType shift to state 247
-- On embeddedPDVType shift to state 248
-- On definedType shift to state 249
-- On definedObjectSet shift to state 250
-- On definedObjectClass shift to state 252
-- On definedObject shift to state 255
-- On constrainedType shift to state 257
-- On choiceType shift to state 258
-- On characterStringType shift to state 259
-- On builtinType shift to state 260
-- On booleanType shift to state 261
-- On bitStringType shift to state 262
## Reductions:

State 674:
## Known stack suffix:
## SET sizeConstraint OF type_x
## LR(1) items:
constrainedType -> type_x . constraint_x [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
typeWithConstraint -> SET sizeConstraint OF type_x . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
-- On LeftParen shift to state 81
-- On constraint_x shift to state 206
## Reductions:
-- On Upper reduce production typeWithConstraint -> SET sizeConstraint OF type_x
-- On UNIQUE reduce production typeWithConstraint -> SET sizeConstraint OF type_x
-- On UNION reduce production typeWithConstraint -> SET sizeConstraint OF type_x
-- On RightParen reduce production typeWithConstraint -> SET sizeConstraint OF type_x
-- On RightDoubleBracket reduce production typeWithConstraint -> SET sizeConstraint OF type_x
-- On RightBrace reduce production typeWithConstraint -> SET sizeConstraint OF type_x
-- On OPTIONAL reduce production typeWithConstraint -> SET sizeConstraint OF type_x
-- On Middle reduce production typeWithConstraint -> SET sizeConstraint OF type_x
-- On Lower reduce production typeWithConstraint -> SET sizeConstraint OF type_x
-- On INTERSECTION reduce production typeWithConstraint -> SET sizeConstraint OF type_x
-- On EXCEPT reduce production typeWithConstraint -> SET sizeConstraint OF type_x
-- On END reduce production typeWithConstraint -> SET sizeConstraint OF type_x
-- On ENCODED reduce production typeWithConstraint -> SET sizeConstraint OF type_x
-- On DEFAULT reduce production typeWithConstraint -> SET sizeConstraint OF type_x
-- On Comma reduce production typeWithConstraint -> SET sizeConstraint OF type_x
-- On Colon reduce production typeWithConstraint -> SET sizeConstraint OF type_x
-- On Circumflex reduce production typeWithConstraint -> SET sizeConstraint OF type_x
-- On Bang reduce production typeWithConstraint -> SET sizeConstraint OF type_x
-- On Assignment reduce production typeWithConstraint -> SET sizeConstraint OF type_x

State 675:
## Known stack suffix:
## SET sizeConstraint OF namedType
## LR(1) items:
typeWithConstraint -> SET sizeConstraint OF namedType . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
## Reductions:
-- On Upper reduce production typeWithConstraint -> SET sizeConstraint OF namedType
-- On UNIQUE reduce production typeWithConstraint -> SET sizeConstraint OF namedType
-- On UNION reduce production typeWithConstraint -> SET sizeConstraint OF namedType
-- On RightParen reduce production typeWithConstraint -> SET sizeConstraint OF namedType
-- On RightDoubleBracket reduce production typeWithConstraint -> SET sizeConstraint OF namedType
-- On RightBrace reduce production typeWithConstraint -> SET sizeConstraint OF namedType
-- On OPTIONAL reduce production typeWithConstraint -> SET sizeConstraint OF namedType
-- On Middle reduce production typeWithConstraint -> SET sizeConstraint OF namedType
-- On Lower reduce production typeWithConstraint -> SET sizeConstraint OF namedType
-- On LeftParen reduce production typeWithConstraint -> SET sizeConstraint OF namedType
-- On INTERSECTION reduce production typeWithConstraint -> SET sizeConstraint OF namedType
-- On EXCEPT reduce production typeWithConstraint -> SET sizeConstraint OF namedType
-- On END reduce production typeWithConstraint -> SET sizeConstraint OF namedType
-- On ENCODED reduce production typeWithConstraint -> SET sizeConstraint OF namedType
-- On DEFAULT reduce production typeWithConstraint -> SET sizeConstraint OF namedType
-- On Comma reduce production typeWithConstraint -> SET sizeConstraint OF namedType
-- On Colon reduce production typeWithConstraint -> SET sizeConstraint OF namedType
-- On Circumflex reduce production typeWithConstraint -> SET sizeConstraint OF namedType
-- On Bang reduce production typeWithConstraint -> SET sizeConstraint OF namedType
-- On Assignment reduce production typeWithConstraint -> SET sizeConstraint OF namedType

State 676:
## Known stack suffix:
## SET constraint_x
## LR(1) items:
typeWithConstraint -> SET constraint_x . OF type_x [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
typeWithConstraint -> SET constraint_x . OF namedType [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
-- On OF shift to state 677
## Reductions:

State 677:
## Known stack suffix:
## SET constraint_x OF
## LR(1) items:
typeWithConstraint -> SET constraint_x OF . type_x [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
typeWithConstraint -> SET constraint_x OF . namedType [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
-- On VisibleString shift to state 66
-- On VideotexString shift to state 67
-- On Upper shift to state 113
-- On UniversalString shift to state 72
-- On UTF8String shift to state 73
-- On UTCTime shift to state 74
-- On TeletexString shift to state 75
-- On TYPE_IDENTIFIER shift to state 76
-- On T61String shift to state 78
-- On SET shift to state 79
-- On SEQUENCE shift to state 111
-- On RELATIVE_OID shift to state 116
-- On REAL shift to state 117
-- On PrintableString shift to state 118
-- On ObjectDescriptor shift to state 119
-- On OCTET shift to state 120
-- On OBJECT shift to state 122
-- On NumericString shift to state 124
-- On NULL shift to state 125
-- On Lower shift to state 126
-- On LeftBracket shift to state 129
-- On ISO646String shift to state 140
-- On INTEGER shift to state 141
-- On INSTANCE shift to state 157
-- On IA5String shift to state 166
-- On GraphicString shift to state 167
-- On GeneralizedTime shift to state 168
-- On GeneralString shift to state 169
-- On EXTERNAL shift to state 170
-- On ENUMERATED shift to state 171
-- On EMBEDDED shift to state 179
-- On CHOICE shift to state 181
-- On CHARACTER shift to state 184
-- On BOOLEAN shift to state 186
-- On BMPString shift to state 187
-- On BIT shift to state 188
-- On ABSTRACT_SYNTAX shift to state 162
-- On valueSetFromObjects shift to state 202
-- On usefulType shift to state 203
-- On usefulObjectClassReference shift to state 163
-- On unrestrictedCharacterStringType shift to state 204
-- On type_x shift to state 678
-- On typeWithConstraint shift to state 207
-- On typeFromObject shift to state 208
-- On taggedType shift to state 209
-- On tag shift to state 210
-- On simpleDefinedType shift to state 213
-- On setType shift to state 215
-- On setOfType shift to state 216
-- On sequenceType shift to state 217
-- On sequenceOfType shift to state 218
-- On selectionType shift to state 219
-- On restrictedCharacterStringType shift to state 220
-- On relativeOIDType shift to state 221
-- On referencedType shift to state 222
-- On referencedObjects shift to state 223
-- On realType shift to state 232
-- On parameterizedValueSetType shift to state 233
-- On parameterizedType shift to state 234
-- On parameterizedObjectSet shift to state 235
-- On parameterizedObject shift to state 236
-- On octetStringType shift to state 237
-- On objectIdentifierType shift to state 238
-- On objectClassFieldType shift to state 239
-- On nullType shift to state 240
-- On namedType shift to state 679
-- On integerType shift to state 241
-- On instanceOfType shift to state 242
-- On externalTypeReference shift to state 243
-- On externalType shift to state 244
-- On externalObjectSetReference shift to state 245
-- On externalObjectReference shift to state 246
-- On externalObjectClassReference shift to state 164
-- On enumeratedType shift to state 247
-- On embeddedPDVType shift to state 248
-- On definedType shift to state 249
-- On definedObjectSet shift to state 250
-- On definedObjectClass shift to state 252
-- On definedObject shift to state 255
-- On constrainedType shift to state 257
-- On choiceType shift to state 258
-- On characterStringType shift to state 259
-- On builtinType shift to state 260
-- On booleanType shift to state 261
-- On bitStringType shift to state 262
## Reductions:

State 678:
## Known stack suffix:
## SET constraint_x OF type_x
## LR(1) items:
constrainedType -> type_x . constraint_x [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
typeWithConstraint -> SET constraint_x OF type_x . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
-- On LeftParen shift to state 81
-- On constraint_x shift to state 206
## Reductions:
-- On Upper reduce production typeWithConstraint -> SET constraint_x OF type_x
-- On UNIQUE reduce production typeWithConstraint -> SET constraint_x OF type_x
-- On UNION reduce production typeWithConstraint -> SET constraint_x OF type_x
-- On RightParen reduce production typeWithConstraint -> SET constraint_x OF type_x
-- On RightDoubleBracket reduce production typeWithConstraint -> SET constraint_x OF type_x
-- On RightBrace reduce production typeWithConstraint -> SET constraint_x OF type_x
-- On OPTIONAL reduce production typeWithConstraint -> SET constraint_x OF type_x
-- On Middle reduce production typeWithConstraint -> SET constraint_x OF type_x
-- On Lower reduce production typeWithConstraint -> SET constraint_x OF type_x
-- On INTERSECTION reduce production typeWithConstraint -> SET constraint_x OF type_x
-- On EXCEPT reduce production typeWithConstraint -> SET constraint_x OF type_x
-- On END reduce production typeWithConstraint -> SET constraint_x OF type_x
-- On ENCODED reduce production typeWithConstraint -> SET constraint_x OF type_x
-- On DEFAULT reduce production typeWithConstraint -> SET constraint_x OF type_x
-- On Comma reduce production typeWithConstraint -> SET constraint_x OF type_x
-- On Colon reduce production typeWithConstraint -> SET constraint_x OF type_x
-- On Circumflex reduce production typeWithConstraint -> SET constraint_x OF type_x
-- On Bang reduce production typeWithConstraint -> SET constraint_x OF type_x
-- On Assignment reduce production typeWithConstraint -> SET constraint_x OF type_x

State 679:
## Known stack suffix:
## SET constraint_x OF namedType
## LR(1) items:
typeWithConstraint -> SET constraint_x OF namedType . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
## Reductions:
-- On Upper reduce production typeWithConstraint -> SET constraint_x OF namedType
-- On UNIQUE reduce production typeWithConstraint -> SET constraint_x OF namedType
-- On UNION reduce production typeWithConstraint -> SET constraint_x OF namedType
-- On RightParen reduce production typeWithConstraint -> SET constraint_x OF namedType
-- On RightDoubleBracket reduce production typeWithConstraint -> SET constraint_x OF namedType
-- On RightBrace reduce production typeWithConstraint -> SET constraint_x OF namedType
-- On OPTIONAL reduce production typeWithConstraint -> SET constraint_x OF namedType
-- On Middle reduce production typeWithConstraint -> SET constraint_x OF namedType
-- On Lower reduce production typeWithConstraint -> SET constraint_x OF namedType
-- On LeftParen reduce production typeWithConstraint -> SET constraint_x OF namedType
-- On INTERSECTION reduce production typeWithConstraint -> SET constraint_x OF namedType
-- On EXCEPT reduce production typeWithConstraint -> SET constraint_x OF namedType
-- On END reduce production typeWithConstraint -> SET constraint_x OF namedType
-- On ENCODED reduce production typeWithConstraint -> SET constraint_x OF namedType
-- On DEFAULT reduce production typeWithConstraint -> SET constraint_x OF namedType
-- On Comma reduce production typeWithConstraint -> SET constraint_x OF namedType
-- On Colon reduce production typeWithConstraint -> SET constraint_x OF namedType
-- On Circumflex reduce production typeWithConstraint -> SET constraint_x OF namedType
-- On Bang reduce production typeWithConstraint -> SET constraint_x OF namedType
-- On Assignment reduce production typeWithConstraint -> SET constraint_x OF namedType

State 680:
## Known stack suffix:
## valueSet
## LR(1) items:
actualParameter -> valueSet . [ RightBrace Comma ]
## Transitions:
## Reductions:
-- On RightBrace reduce production actualParameter -> valueSet
-- On Comma reduce production actualParameter -> valueSet

State 681:
## Known stack suffix:
## value
## LR(1) items:
actualParameter -> value . [ RightBrace Comma ]
## Transitions:
## Reductions:
-- On RightBrace reduce production actualParameter -> value
-- On Comma reduce production actualParameter -> value

State 682:
## Known stack suffix:
## type_x
## LR(1) items:
actualParameter -> type_x . [ RightBrace Comma ]
constrainedType -> type_x . constraint_x [ RightBrace LeftParen Comma Colon ]
openTypeFieldVal -> type_x . Colon value [ RightBrace Comma ]
## Transitions:
-- On LeftParen shift to state 81
-- On Colon shift to state 317
-- On constraint_x shift to state 206
## Reductions:
-- On RightBrace reduce production actualParameter -> type_x
-- On Comma reduce production actualParameter -> type_x

State 683:
## Known stack suffix:
## LeftBrace separated_nonempty_list(Comma,actualParameter)
## LR(1) items:
actualParameterList -> LeftBrace separated_nonempty_list(Comma,actualParameter) . RightBrace [ Upper UNIQUE UNION SemiColon RightParen RightDoubleBracket RightBracket RightBrace OPTIONAL Number Middle Lower LessThan LeftParen INTERSECTION EXCEPT END ENCODED DoubleDot Dot DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
-- On RightBrace shift to state 684
## Reductions:

State 684:
## Known stack suffix:
## LeftBrace separated_nonempty_list(Comma,actualParameter) RightBrace
## LR(1) items:
actualParameterList -> LeftBrace separated_nonempty_list(Comma,actualParameter) RightBrace . [ Upper UNIQUE UNION SemiColon RightParen RightDoubleBracket RightBracket RightBrace OPTIONAL Number Middle Lower LessThan LeftParen INTERSECTION EXCEPT END ENCODED DoubleDot Dot DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
## Reductions:
-- On Upper reduce production actualParameterList -> LeftBrace separated_nonempty_list(Comma,actualParameter) RightBrace
-- On UNIQUE reduce production actualParameterList -> LeftBrace separated_nonempty_list(Comma,actualParameter) RightBrace
-- On UNION reduce production actualParameterList -> LeftBrace separated_nonempty_list(Comma,actualParameter) RightBrace
-- On SemiColon reduce production actualParameterList -> LeftBrace separated_nonempty_list(Comma,actualParameter) RightBrace
-- On RightParen reduce production actualParameterList -> LeftBrace separated_nonempty_list(Comma,actualParameter) RightBrace
-- On RightDoubleBracket reduce production actualParameterList -> LeftBrace separated_nonempty_list(Comma,actualParameter) RightBrace
-- On RightBracket reduce production actualParameterList -> LeftBrace separated_nonempty_list(Comma,actualParameter) RightBrace
-- On RightBrace reduce production actualParameterList -> LeftBrace separated_nonempty_list(Comma,actualParameter) RightBrace
-- On OPTIONAL reduce production actualParameterList -> LeftBrace separated_nonempty_list(Comma,actualParameter) RightBrace
-- On Number reduce production actualParameterList -> LeftBrace separated_nonempty_list(Comma,actualParameter) RightBrace
-- On Middle reduce production actualParameterList -> LeftBrace separated_nonempty_list(Comma,actualParameter) RightBrace
-- On Lower reduce production actualParameterList -> LeftBrace separated_nonempty_list(Comma,actualParameter) RightBrace
-- On LessThan reduce production actualParameterList -> LeftBrace separated_nonempty_list(Comma,actualParameter) RightBrace
-- On LeftParen reduce production actualParameterList -> LeftBrace separated_nonempty_list(Comma,actualParameter) RightBrace
-- On INTERSECTION reduce production actualParameterList -> LeftBrace separated_nonempty_list(Comma,actualParameter) RightBrace
-- On EXCEPT reduce production actualParameterList -> LeftBrace separated_nonempty_list(Comma,actualParameter) RightBrace
-- On END reduce production actualParameterList -> LeftBrace separated_nonempty_list(Comma,actualParameter) RightBrace
-- On ENCODED reduce production actualParameterList -> LeftBrace separated_nonempty_list(Comma,actualParameter) RightBrace
-- On DoubleDot reduce production actualParameterList -> LeftBrace separated_nonempty_list(Comma,actualParameter) RightBrace
-- On Dot reduce production actualParameterList -> LeftBrace separated_nonempty_list(Comma,actualParameter) RightBrace
-- On DEFAULT reduce production actualParameterList -> LeftBrace separated_nonempty_list(Comma,actualParameter) RightBrace
-- On Comma reduce production actualParameterList -> LeftBrace separated_nonempty_list(Comma,actualParameter) RightBrace
-- On Colon reduce production actualParameterList -> LeftBrace separated_nonempty_list(Comma,actualParameter) RightBrace
-- On Circumflex reduce production actualParameterList -> LeftBrace separated_nonempty_list(Comma,actualParameter) RightBrace
-- On Bang reduce production actualParameterList -> LeftBrace separated_nonempty_list(Comma,actualParameter) RightBrace
-- On Assignment reduce production actualParameterList -> LeftBrace separated_nonempty_list(Comma,actualParameter) RightBrace

State 685:
## Known stack suffix:
## object_x
## LR(1) items:
actualParameter -> object_x . [ RightBrace Comma ]
## Transitions:
## Reductions:
-- On RightBrace reduce production actualParameter -> object_x
-- On Comma reduce production actualParameter -> object_x

State 686:
## Known stack suffix:
## objectSet
## LR(1) items:
actualParameter -> objectSet . [ RightBrace Comma ]
## Transitions:
## Reductions:
-- On RightBrace reduce production actualParameter -> objectSet
-- On Comma reduce production actualParameter -> objectSet

State 687:
## Known stack suffix:
## definedObjectClass
## LR(1) items:
actualParameter -> definedObjectClass . [ RightBrace Comma ]
objectClassFieldType -> definedObjectClass . Dot fieldName [ RightBrace LeftParen Comma Colon ]
## Transitions:
-- On Dot shift to state 253
## Reductions:
-- On RightBrace reduce production actualParameter -> definedObjectClass
-- On Comma reduce production actualParameter -> definedObjectClass

State 688:
## Known stack suffix:
## actualParameter
## LR(1) items:
separated_nonempty_list(Comma,actualParameter) -> actualParameter . [ RightBrace ]
separated_nonempty_list(Comma,actualParameter) -> actualParameter . Comma separated_nonempty_list(Comma,actualParameter) [ RightBrace ]
## Transitions:
-- On Comma shift to state 689
## Reductions:
-- On RightBrace reduce production separated_nonempty_list(Comma,actualParameter) -> actualParameter

State 689:
## Known stack suffix:
## actualParameter Comma
## LR(1) items:
separated_nonempty_list(Comma,actualParameter) -> actualParameter Comma . separated_nonempty_list(Comma,actualParameter) [ RightBrace ]
## Transitions:
-- On VisibleString shift to state 66
-- On VideotexString shift to state 67
-- On Upper shift to state 68
-- On UniversalString shift to state 72
-- On UTF8String shift to state 73
-- On UTCTime shift to state 74
-- On TeletexString shift to state 75
-- On TYPE_IDENTIFIER shift to state 76
-- On TRUE shift to state 77
-- On T61String shift to state 78
-- On SET shift to state 79
-- On SEQUENCE shift to state 111
-- On RealNumber shift to state 296
-- On RELATIVE_OID shift to state 116
-- On REAL shift to state 117
-- On PrintableString shift to state 118
-- On PLUS_INFINITY shift to state 297
-- On ObjectDescriptor shift to state 119
-- On OCTET shift to state 120
-- On OBJECT shift to state 122
-- On NumericString shift to state 124
-- On Number shift to state 145
-- On NULL shift to state 298
-- On MINUS_INFINITY shift to state 299
-- On Lower shift to state 300
-- On LeftBracket shift to state 129
-- On LeftBrace shift to state 502
-- On ISO646String shift to state 140
-- On INTEGER shift to state 141
-- On INSTANCE shift to state 157
-- On IA5String shift to state 166
-- On Hyphen shift to state 306
-- On Hstring shift to state 308
-- On GraphicString shift to state 167
-- On GeneralizedTime shift to state 168
-- On GeneralString shift to state 169
-- On FALSE shift to state 309
-- On EXTERNAL shift to state 170
-- On ENUMERATED shift to state 171
-- On EMBEDDED shift to state 179
-- On DefinedSyntax shift to state 508
-- On Cstring shift to state 310
-- On CONTAINING shift to state 311
-- On CHOICE shift to state 181
-- On CHARACTER shift to state 184
-- On Bstring shift to state 312
-- On BOOLEAN shift to state 186
-- On BMPString shift to state 187
-- On BIT shift to state 188
-- On ABSTRACT_SYNTAX shift to state 162
-- On valueSetFromObjects shift to state 202
-- On valueSet shift to state 680
-- On valueFromObject shift to state 313
-- On value shift to state 681
-- On usefulType shift to state 203
-- On usefulObjectClassReference shift to state 163
-- On unrestrictedCharacterStringValue shift to state 315
-- On unrestrictedCharacterStringType shift to state 204
-- On type_x shift to state 682
-- On typeWithConstraint shift to state 207
-- On typeFromObject shift to state 208
-- On tuple shift to state 319
-- On taggedType shift to state 209
-- On tag shift to state 210
-- On specialRealValue shift to state 320
-- On simpleDefinedValue shift to state 64
-- On simpleDefinedType shift to state 213
-- On signedNumber shift to state 321
-- On setValue shift to state 322
-- On setType shift to state 215
-- On setOfValue shift to state 323
-- On setOfType shift to state 216
-- On sequenceValue shift to state 324
-- On sequenceType shift to state 217
-- On sequenceOfValue shift to state 325
-- On sequenceOfType shift to state 218
-- On separated_nonempty_list(Comma,actualParameter) shift to state 690
-- On selectionType shift to state 219
-- On restrictedCharacterStringValue shift to state 326
-- On restrictedCharacterStringType shift to state 220
-- On relativeOIDValue shift to state 327
-- On relativeOIDType shift to state 221
-- On referencedValue shift to state 328
-- On referencedType shift to state 222
-- On referencedObjects shift to state 587
-- On realValue shift to state 332
-- On realType shift to state 232
-- On quadruple shift to state 333
-- On parameterizedValueSetType shift to state 233
-- On parameterizedValue shift to state 135
-- On parameterizedType shift to state 234
-- On parameterizedObjectSet shift to state 235
-- On parameterizedObject shift to state 524
-- On openTypeFieldVal shift to state 334
-- On octetStringValue shift to state 335
-- On octetStringType shift to state 237
-- On object_x shift to state 685
-- On objectSet shift to state 686
-- On objectIdentifierValue shift to state 336
-- On objectIdentifierType shift to state 238
-- On objectFromObject shift to state 528
-- On objectDefn shift to state 529
-- On objectClassFieldValue shift to state 337
-- On objectClassFieldType shift to state 239
-- On numericRealValue shift to state 338
-- On nullValue shift to state 339
-- On nullType shift to state 240
-- On integerValue shift to state 340
-- On integerType shift to state 241
-- On instanceOfType shift to state 242
-- On fixedTypeFieldVal shift to state 341
-- On externalValueReference shift to state 136
-- On externalValue shift to state 342
-- On externalTypeReference shift to state 243
-- On externalType shift to state 244
-- On externalObjectSetReference shift to state 245
-- On externalObjectReference shift to state 246
-- On externalObjectClassReference shift to state 164
-- On enumeratedValue shift to state 343
-- On enumeratedType shift to state 247
-- On embeddedPDVValue shift to state 344
-- On embeddedPDVType shift to state 248
-- On definedValue shift to state 345
-- On definedType shift to state 249
-- On definedObjectSet shift to state 250
-- On definedObjectClass shift to state 687
-- On definedObject shift to state 545
-- On defaultSyntax shift to state 546
-- On constrainedType shift to state 257
-- On choiceValue shift to state 346
-- On choiceType shift to state 258
-- On characterStringValue shift to state 347
-- On characterStringType shift to state 259
-- On characterStringList shift to state 348
-- On builtinValue shift to state 349
-- On builtinType shift to state 260
-- On booleanValue shift to state 350
-- On booleanType shift to state 261
-- On bitStringValue shift to state 351
-- On bitStringType shift to state 262
-- On actualParameter shift to state 688
## Reductions:

State 690:
## Known stack suffix:
## actualParameter Comma separated_nonempty_list(Comma,actualParameter)
## LR(1) items:
separated_nonempty_list(Comma,actualParameter) -> actualParameter Comma separated_nonempty_list(Comma,actualParameter) . [ RightBrace ]
## Transitions:
## Reductions:
-- On RightBrace reduce production separated_nonempty_list(Comma,actualParameter) -> actualParameter Comma separated_nonempty_list(Comma,actualParameter)

State 691:
## Known stack suffix:
## simpleDefinedValue actualParameterList
## LR(1) items:
parameterizedValue -> simpleDefinedValue actualParameterList . [ Upper UNION SemiColon RightParen RightDoubleBracket RightBracket RightBrace Number Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
## Transitions:
## Reductions:
-- On Upper reduce production parameterizedValue -> simpleDefinedValue actualParameterList
-- On UNION reduce production parameterizedValue -> simpleDefinedValue actualParameterList
-- On SemiColon reduce production parameterizedValue -> simpleDefinedValue actualParameterList
-- On RightParen reduce production parameterizedValue -> simpleDefinedValue actualParameterList
-- On RightDoubleBracket reduce production parameterizedValue -> simpleDefinedValue actualParameterList
-- On RightBracket reduce production parameterizedValue -> simpleDefinedValue actualParameterList
-- On RightBrace reduce production parameterizedValue -> simpleDefinedValue actualParameterList
-- On Number reduce production parameterizedValue -> simpleDefinedValue actualParameterList
-- On Middle reduce production parameterizedValue -> simpleDefinedValue actualParameterList
-- On Lower reduce production parameterizedValue -> simpleDefinedValue actualParameterList
-- On LessThan reduce production parameterizedValue -> simpleDefinedValue actualParameterList
-- On INTERSECTION reduce production parameterizedValue -> simpleDefinedValue actualParameterList
-- On EXCEPT reduce production parameterizedValue -> simpleDefinedValue actualParameterList
-- On END reduce production parameterizedValue -> simpleDefinedValue actualParameterList
-- On DoubleDot reduce production parameterizedValue -> simpleDefinedValue actualParameterList
-- On Comma reduce production parameterizedValue -> simpleDefinedValue actualParameterList
-- On Circumflex reduce production parameterizedValue -> simpleDefinedValue actualParameterList
-- On Bang reduce production parameterizedValue -> simpleDefinedValue actualParameterList

State 692:
## Known stack suffix:
## Lower LeftParen numberForm
## LR(1) items:
nameAndNumberForm -> Lower LeftParen numberForm . RightParen [ Upper RightBrace Number Lower ]
## Transitions:
-- On RightParen shift to state 693
## Reductions:

State 693:
## Known stack suffix:
## Lower LeftParen numberForm RightParen
## LR(1) items:
nameAndNumberForm -> Lower LeftParen numberForm RightParen . [ Upper RightBrace Number Lower ]
## Transitions:
## Reductions:
-- On Upper reduce production nameAndNumberForm -> Lower LeftParen numberForm RightParen
-- On RightBrace reduce production nameAndNumberForm -> Lower LeftParen numberForm RightParen
-- On Number reduce production nameAndNumberForm -> Lower LeftParen numberForm RightParen
-- On Lower reduce production nameAndNumberForm -> Lower LeftParen numberForm RightParen

State 694:
## Known stack suffix:
## definedValue
## LR(1) items:
numberForm -> definedValue . [ RightParen ]
## Transitions:
## Reductions:
-- On RightParen reduce production numberForm -> definedValue

State 695:
## Known stack suffix:
## LeftBrace definedValue
## LR(1) items:
numberForm -> definedValue . [ Upper RightBrace Number Lower ]
objIdComponents -> definedValue . [ Upper RightBrace Number Lower ]
objectIdentifierValue -> LeftBrace definedValue . objIdComponentsList RightBrace [ Upper SemiColon Lower ]
## Transitions:
-- On Upper shift to state 56
-- On Number shift to state 61
-- On Lower shift to state 62
-- On simpleDefinedValue shift to state 64
-- On parameterizedValue shift to state 135
-- On objIdComponentsList shift to state 406
-- On objIdComponents shift to state 376
-- On numberForm shift to state 378
-- On nameForm shift to state 379
-- On nameAndNumberForm shift to state 380
-- On externalValueReference shift to state 136
-- On definedValue shift to state 381
## Reductions:
-- On RightBrace reduce production objIdComponents -> definedValue

State 696:
## Known stack suffix:
## objectIdentifierValue
## LR(1) items:
assignedIdentifier -> objectIdentifierValue . [ Upper SemiColon Lower ]
## Transitions:
## Reductions:
-- On Upper reduce production assignedIdentifier -> objectIdentifierValue
-- On SemiColon reduce production assignedIdentifier -> objectIdentifierValue
-- On Lower reduce production assignedIdentifier -> objectIdentifierValue

State 697:
## Known stack suffix:
## definedValue
## LR(1) items:
assignedIdentifier -> definedValue . [ Upper SemiColon Lower ]
## Transitions:
## Reductions:
-- On Upper reduce production assignedIdentifier -> definedValue
-- On SemiColon reduce production assignedIdentifier -> definedValue
-- On Lower reduce production assignedIdentifier -> definedValue

State 698:
## Known stack suffix:
## Upper assignedIdentifier
## LR(1) items:
globalModuleReference -> Upper assignedIdentifier . [ Upper SemiColon Lower ]
## Transitions:
## Reductions:
-- On Upper reduce production globalModuleReference -> Upper assignedIdentifier
-- On SemiColon reduce production globalModuleReference -> Upper assignedIdentifier
-- On Lower reduce production globalModuleReference -> Upper assignedIdentifier

State 699:
## Known stack suffix:
## symbolList FROM globalModuleReference
## LR(1) items:
symbolsFromModule -> symbolList FROM globalModuleReference . [ Upper SemiColon Lower ]
## Transitions:
## Reductions:
-- On Upper reduce production symbolsFromModule -> symbolList FROM globalModuleReference
-- On SemiColon reduce production symbolsFromModule -> symbolList FROM globalModuleReference
-- On Lower reduce production symbolsFromModule -> symbolList FROM globalModuleReference

State 700:
## Known stack suffix:
## symbolsFromModule
## LR(1) items:
symbolsFromModuleList -> symbolsFromModule . [ Upper SemiColon Lower ]
## Transitions:
## Reductions:
-- On Upper reduce production symbolsFromModuleList -> symbolsFromModule
-- On SemiColon reduce production symbolsFromModuleList -> symbolsFromModule
-- On Lower reduce production symbolsFromModuleList -> symbolsFromModule

State 701:
## Known stack suffix:
## exports imports
## LR(1) items:
moduleBody -> exports imports . assignmentList [ END ]
## Transitions:
-- On Upper shift to state 702
-- On Lower shift to state 824
-- On valueSetTypeAssignment shift to state 838
-- On valueAssignment shift to state 839
-- On typeAssignment shift to state 840
-- On parameterizedValueSetTypeAssignment shift to state 841
-- On parameterizedValueAssignment shift to state 842
-- On parameterizedTypeAssignment shift to state 843
-- On parameterizedObjectSetAssignment shift to state 844
-- On parameterizedObjectClassAssignment shift to state 845
-- On parameterizedObjectAssignment shift to state 846
-- On parameterizedAssignment shift to state 847
-- On objectSetAssignment shift to state 848
-- On objectClassAssignment shift to state 849
-- On objectAssignment shift to state 850
-- On assignmentList shift to state 851
-- On assignment shift to state 853
## Reductions:

State 702:
## Known stack suffix:
## Upper
## LR(1) items:
objectClassAssignment -> Upper . Assignment objectClass [ Upper Lower END ]
objectSetAssignment -> Upper . definedObjectClass Assignment objectSet [ Upper Lower END ]
parameterizedObjectClassAssignment -> Upper . parameterList Assignment objectClass [ Upper Lower END ]
parameterizedObjectSetAssignment -> Upper . parameterList definedObjectClass Assignment objectSet [ Upper Lower END ]
parameterizedTypeAssignment -> Upper . parameterList Assignment type_x [ Upper Lower END ]
parameterizedValueSetTypeAssignment -> Upper . parameterList type_x Assignment valueSet [ Upper Lower END ]
typeAssignment -> Upper . Assignment type_x [ Upper Lower END ]
valueSetTypeAssignment -> Upper . type_x Assignment valueSet [ Upper Lower END ]
## Transitions:
-- On VisibleString shift to state 66
-- On VideotexString shift to state 67
-- On Upper shift to state 113
-- On UniversalString shift to state 72
-- On UTF8String shift to state 73
-- On UTCTime shift to state 74
-- On TeletexString shift to state 75
-- On TYPE_IDENTIFIER shift to state 76
-- On T61String shift to state 78
-- On SET shift to state 79
-- On SEQUENCE shift to state 111
-- On RELATIVE_OID shift to state 116
-- On REAL shift to state 117
-- On PrintableString shift to state 118
-- On ObjectDescriptor shift to state 119
-- On OCTET shift to state 120
-- On OBJECT shift to state 122
-- On NumericString shift to state 124
-- On NULL shift to state 125
-- On Lower shift to state 127
-- On LeftBracket shift to state 129
-- On LeftBrace shift to state 703
-- On ISO646String shift to state 140
-- On INTEGER shift to state 141
-- On INSTANCE shift to state 157
-- On IA5String shift to state 166
-- On GraphicString shift to state 167
-- On GeneralizedTime shift to state 168
-- On GeneralString shift to state 169
-- On EXTERNAL shift to state 170
-- On ENUMERATED shift to state 171
-- On EMBEDDED shift to state 179
-- On CHOICE shift to state 181
-- On CHARACTER shift to state 184
-- On BOOLEAN shift to state 186
-- On BMPString shift to state 187
-- On BIT shift to state 188
-- On Assignment shift to state 720
-- On ABSTRACT_SYNTAX shift to state 162
-- On valueSetFromObjects shift to state 202
-- On usefulType shift to state 203
-- On usefulObjectClassReference shift to state 163
-- On unrestrictedCharacterStringType shift to state 204
-- On type_x shift to state 808
-- On typeWithConstraint shift to state 207
-- On typeFromObject shift to state 208
-- On taggedType shift to state 209
-- On tag shift to state 210
-- On simpleDefinedType shift to state 213
-- On setType shift to state 215
-- On setOfType shift to state 216
-- On sequenceType shift to state 217
-- On sequenceOfType shift to state 218
-- On selectionType shift to state 219
-- On restrictedCharacterStringType shift to state 220
-- On relativeOIDType shift to state 221
-- On referencedType shift to state 222
-- On referencedObjects shift to state 223
-- On realType shift to state 232
-- On parameterizedValueSetType shift to state 233
-- On parameterizedType shift to state 234
-- On parameterizedObjectSet shift to state 235
-- On parameterizedObject shift to state 236
-- On parameterList shift to state 811
-- On octetStringType shift to state 237
-- On objectIdentifierType shift to state 238
-- On objectClassFieldType shift to state 239
-- On nullType shift to state 240
-- On integerType shift to state 241
-- On instanceOfType shift to state 242
-- On externalTypeReference shift to state 243
-- On externalType shift to state 244
-- On externalObjectSetReference shift to state 245
-- On externalObjectReference shift to state 246
-- On externalObjectClassReference shift to state 164
-- On enumeratedType shift to state 247
-- On embeddedPDVType shift to state 248
-- On definedType shift to state 249
-- On definedObjectSet shift to state 250
-- On definedObjectClass shift to state 821
-- On definedObject shift to state 255
-- On constrainedType shift to state 257
-- On choiceType shift to state 258
-- On characterStringType shift to state 259
-- On builtinType shift to state 260
-- On booleanType shift to state 261
-- On bitStringType shift to state 262
## Reductions:

State 703:
## Known stack suffix:
## LeftBrace
## LR(1) items:
parameterList -> LeftBrace . separated_nonempty_list(Comma,parameter) RightBrace [ VisibleString VideotexString Upper UniversalString UTF8String UTCTime TeletexString TYPE_IDENTIFIER T61String SET SEQUENCE RELATIVE_OID REAL PrintableString ObjectDescriptor OCTET OBJECT NumericString NULL Lower LeftBracket ISO646String INTEGER INSTANCE IA5String GraphicString GeneralizedTime GeneralString EXTERNAL ENUMERATED EMBEDDED CHOICE CHARACTER BOOLEAN BMPString BIT Assignment ABSTRACT_SYNTAX ]
## Transitions:
-- On VisibleString shift to state 66
-- On VideotexString shift to state 67
-- On Upper shift to state 704
-- On UniversalString shift to state 72
-- On UTF8String shift to state 73
-- On UTCTime shift to state 74
-- On TeletexString shift to state 75
-- On TYPE_IDENTIFIER shift to state 76
-- On T61String shift to state 78
-- On SET shift to state 79
-- On SEQUENCE shift to state 111
-- On RELATIVE_OID shift to state 116
-- On REAL shift to state 117
-- On PrintableString shift to state 118
-- On ObjectDescriptor shift to state 119
-- On OCTET shift to state 120
-- On OBJECT shift to state 122
-- On NumericString shift to state 124
-- On NULL shift to state 125
-- On Lower shift to state 705
-- On LeftBracket shift to state 129
-- On ISO646String shift to state 140
-- On INTEGER shift to state 141
-- On INSTANCE shift to state 157
-- On IA5String shift to state 166
-- On GraphicString shift to state 167
-- On GeneralizedTime shift to state 168
-- On GeneralString shift to state 169
-- On EXTERNAL shift to state 170
-- On ENUMERATED shift to state 171
-- On EMBEDDED shift to state 179
-- On CHOICE shift to state 181
-- On CHARACTER shift to state 184
-- On BOOLEAN shift to state 186
-- On BMPString shift to state 187
-- On BIT shift to state 188
-- On ABSTRACT_SYNTAX shift to state 162
-- On valueSetFromObjects shift to state 202
-- On usefulType shift to state 203
-- On usefulObjectClassReference shift to state 163
-- On unrestrictedCharacterStringType shift to state 204
-- On type_x shift to state 706
-- On typeWithConstraint shift to state 207
-- On typeFromObject shift to state 208
-- On taggedType shift to state 209
-- On tag shift to state 210
-- On simpleDefinedType shift to state 213
-- On setType shift to state 215
-- On setOfType shift to state 216
-- On sequenceType shift to state 217
-- On sequenceOfType shift to state 218
-- On separated_nonempty_list(Comma,parameter) shift to state 707
-- On selectionType shift to state 219
-- On restrictedCharacterStringType shift to state 220
-- On relativeOIDType shift to state 221
-- On referencedType shift to state 222
-- On referencedObjects shift to state 223
-- On reference shift to state 709
-- On realType shift to state 232
-- On parameterizedValueSetType shift to state 233
-- On parameterizedType shift to state 234
-- On parameterizedObjectSet shift to state 235
-- On parameterizedObject shift to state 236
-- On parameter shift to state 710
-- On paramGovernor shift to state 713
-- On octetStringType shift to state 237
-- On objectIdentifierType shift to state 238
-- On objectClassFieldType shift to state 239
-- On nullType shift to state 240
-- On integerType shift to state 241
-- On instanceOfType shift to state 242
-- On governor shift to state 716
-- On externalTypeReference shift to state 243
-- On externalType shift to state 244
-- On externalObjectSetReference shift to state 245
-- On externalObjectReference shift to state 246
-- On externalObjectClassReference shift to state 164
-- On enumeratedType shift to state 247
-- On embeddedPDVType shift to state 248
-- On dummyReference shift to state 717
-- On dummyGovernor shift to state 718
-- On definedType shift to state 249
-- On definedObjectSet shift to state 250
-- On definedObjectClass shift to state 719
-- On definedObject shift to state 255
-- On constrainedType shift to state 257
-- On choiceType shift to state 258
-- On characterStringType shift to state 259
-- On builtinType shift to state 260
-- On booleanType shift to state 261
-- On bitStringType shift to state 262
## Reductions:

State 704:
## Known stack suffix:
## Upper
## LR(1) items:
definedObjectClass -> Upper . [ Dot Colon ]
definedObjectSet -> Upper . [ LeftBrace Dot ]
definedType -> Upper . [ LeftParen Colon ]
externalObjectClassReference -> Upper . Dot Upper [ Dot Colon ]
externalObjectReference -> Upper . Dot Lower [ LeftBrace Dot ]
externalObjectSetReference -> Upper . Dot Upper [ LeftBrace Dot ]
externalTypeReference -> Upper . Dot Upper [ LeftParen LeftBrace Colon ]
reference -> Upper . [ RightBrace Comma Colon ]
simpleDefinedType -> Upper . [ LeftBrace ]
## Transitions:
-- On Dot shift to state 114
## Reductions:
-- On RightBrace reduce production reference -> Upper
-- On LeftParen reduce production definedType -> Upper
-- On LeftBrace reduce production definedObjectSet -> Upper
-- On Comma reduce production reference -> Upper
-- On Colon reduce production reference -> Upper

State 705:
## Known stack suffix:
## Lower
## LR(1) items:
definedObject -> Lower . [ LeftBrace Dot ]
reference -> Lower . [ RightBrace Comma Colon ]
selectionType -> Lower . LessThan type_x [ LeftParen Colon ]
## Transitions:
-- On LessThan shift to state 128
## Reductions:
-- On RightBrace reduce production reference -> Lower
-- On LeftBrace reduce production definedObject -> Lower
-- On Dot reduce production definedObject -> Lower
-- On Comma reduce production reference -> Lower
-- On Colon reduce production reference -> Lower

State 706:
## Known stack suffix:
## type_x
## LR(1) items:
constrainedType -> type_x . constraint_x [ LeftParen Colon ]
governor -> type_x . [ Colon ]
## Transitions:
-- On LeftParen shift to state 81
-- On constraint_x shift to state 206
## Reductions:
-- On Colon reduce production governor -> type_x

State 707:
## Known stack suffix:
## LeftBrace separated_nonempty_list(Comma,parameter)
## LR(1) items:
parameterList -> LeftBrace separated_nonempty_list(Comma,parameter) . RightBrace [ VisibleString VideotexString Upper UniversalString UTF8String UTCTime TeletexString TYPE_IDENTIFIER T61String SET SEQUENCE RELATIVE_OID REAL PrintableString ObjectDescriptor OCTET OBJECT NumericString NULL Lower LeftBracket ISO646String INTEGER INSTANCE IA5String GraphicString GeneralizedTime GeneralString EXTERNAL ENUMERATED EMBEDDED CHOICE CHARACTER BOOLEAN BMPString BIT Assignment ABSTRACT_SYNTAX ]
## Transitions:
-- On RightBrace shift to state 708
## Reductions:

State 708:
## Known stack suffix:
## LeftBrace separated_nonempty_list(Comma,parameter) RightBrace
## LR(1) items:
parameterList -> LeftBrace separated_nonempty_list(Comma,parameter) RightBrace . [ VisibleString VideotexString Upper UniversalString UTF8String UTCTime TeletexString TYPE_IDENTIFIER T61String SET SEQUENCE RELATIVE_OID REAL PrintableString ObjectDescriptor OCTET OBJECT NumericString NULL Lower LeftBracket ISO646String INTEGER INSTANCE IA5String GraphicString GeneralizedTime GeneralString EXTERNAL ENUMERATED EMBEDDED CHOICE CHARACTER BOOLEAN BMPString BIT Assignment ABSTRACT_SYNTAX ]
## Transitions:
## Reductions:
-- On VisibleString reduce production parameterList -> LeftBrace separated_nonempty_list(Comma,parameter) RightBrace
-- On VideotexString reduce production parameterList -> LeftBrace separated_nonempty_list(Comma,parameter) RightBrace
-- On Upper reduce production parameterList -> LeftBrace separated_nonempty_list(Comma,parameter) RightBrace
-- On UniversalString reduce production parameterList -> LeftBrace separated_nonempty_list(Comma,parameter) RightBrace
-- On UTF8String reduce production parameterList -> LeftBrace separated_nonempty_list(Comma,parameter) RightBrace
-- On UTCTime reduce production parameterList -> LeftBrace separated_nonempty_list(Comma,parameter) RightBrace
-- On TeletexString reduce production parameterList -> LeftBrace separated_nonempty_list(Comma,parameter) RightBrace
-- On TYPE_IDENTIFIER reduce production parameterList -> LeftBrace separated_nonempty_list(Comma,parameter) RightBrace
-- On T61String reduce production parameterList -> LeftBrace separated_nonempty_list(Comma,parameter) RightBrace
-- On SET reduce production parameterList -> LeftBrace separated_nonempty_list(Comma,parameter) RightBrace
-- On SEQUENCE reduce production parameterList -> LeftBrace separated_nonempty_list(Comma,parameter) RightBrace
-- On RELATIVE_OID reduce production parameterList -> LeftBrace separated_nonempty_list(Comma,parameter) RightBrace
-- On REAL reduce production parameterList -> LeftBrace separated_nonempty_list(Comma,parameter) RightBrace
-- On PrintableString reduce production parameterList -> LeftBrace separated_nonempty_list(Comma,parameter) RightBrace
-- On ObjectDescriptor reduce production parameterList -> LeftBrace separated_nonempty_list(Comma,parameter) RightBrace
-- On OCTET reduce production parameterList -> LeftBrace separated_nonempty_list(Comma,parameter) RightBrace
-- On OBJECT reduce production parameterList -> LeftBrace separated_nonempty_list(Comma,parameter) RightBrace
-- On NumericString reduce production parameterList -> LeftBrace separated_nonempty_list(Comma,parameter) RightBrace
-- On NULL reduce production parameterList -> LeftBrace separated_nonempty_list(Comma,parameter) RightBrace
-- On Lower reduce production parameterList -> LeftBrace separated_nonempty_list(Comma,parameter) RightBrace
-- On LeftBracket reduce production parameterList -> LeftBrace separated_nonempty_list(Comma,parameter) RightBrace
-- On ISO646String reduce production parameterList -> LeftBrace separated_nonempty_list(Comma,parameter) RightBrace
-- On INTEGER reduce production parameterList -> LeftBrace separated_nonempty_list(Comma,parameter) RightBrace
-- On INSTANCE reduce production parameterList -> LeftBrace separated_nonempty_list(Comma,parameter) RightBrace
-- On IA5String reduce production parameterList -> LeftBrace separated_nonempty_list(Comma,parameter) RightBrace
-- On GraphicString reduce production parameterList -> LeftBrace separated_nonempty_list(Comma,parameter) RightBrace
-- On GeneralizedTime reduce production parameterList -> LeftBrace separated_nonempty_list(Comma,parameter) RightBrace
-- On GeneralString reduce production parameterList -> LeftBrace separated_nonempty_list(Comma,parameter) RightBrace
-- On EXTERNAL reduce production parameterList -> LeftBrace separated_nonempty_list(Comma,parameter) RightBrace
-- On ENUMERATED reduce production parameterList -> LeftBrace separated_nonempty_list(Comma,parameter) RightBrace
-- On EMBEDDED reduce production parameterList -> LeftBrace separated_nonempty_list(Comma,parameter) RightBrace
-- On CHOICE reduce production parameterList -> LeftBrace separated_nonempty_list(Comma,parameter) RightBrace
-- On CHARACTER reduce production parameterList -> LeftBrace separated_nonempty_list(Comma,parameter) RightBrace
-- On BOOLEAN reduce production parameterList -> LeftBrace separated_nonempty_list(Comma,parameter) RightBrace
-- On BMPString reduce production parameterList -> LeftBrace separated_nonempty_list(Comma,parameter) RightBrace
-- On BIT reduce production parameterList -> LeftBrace separated_nonempty_list(Comma,parameter) RightBrace
-- On Assignment reduce production parameterList -> LeftBrace separated_nonempty_list(Comma,parameter) RightBrace
-- On ABSTRACT_SYNTAX reduce production parameterList -> LeftBrace separated_nonempty_list(Comma,parameter) RightBrace

State 709:
## Known stack suffix:
## reference
## LR(1) items:
dummyReference -> reference . [ RightBrace Comma Colon ]
## Transitions:
## Reductions:
-- On RightBrace reduce production dummyReference -> reference
-- On Comma reduce production dummyReference -> reference
-- On Colon reduce production dummyReference -> reference

State 710:
## Known stack suffix:
## parameter
## LR(1) items:
separated_nonempty_list(Comma,parameter) -> parameter . [ RightBrace ]
separated_nonempty_list(Comma,parameter) -> parameter . Comma separated_nonempty_list(Comma,parameter) [ RightBrace ]
## Transitions:
-- On Comma shift to state 711
## Reductions:
-- On RightBrace reduce production separated_nonempty_list(Comma,parameter) -> parameter

State 711:
## Known stack suffix:
## parameter Comma
## LR(1) items:
separated_nonempty_list(Comma,parameter) -> parameter Comma . separated_nonempty_list(Comma,parameter) [ RightBrace ]
## Transitions:
-- On VisibleString shift to state 66
-- On VideotexString shift to state 67
-- On Upper shift to state 704
-- On UniversalString shift to state 72
-- On UTF8String shift to state 73
-- On UTCTime shift to state 74
-- On TeletexString shift to state 75
-- On TYPE_IDENTIFIER shift to state 76
-- On T61String shift to state 78
-- On SET shift to state 79
-- On SEQUENCE shift to state 111
-- On RELATIVE_OID shift to state 116
-- On REAL shift to state 117
-- On PrintableString shift to state 118
-- On ObjectDescriptor shift to state 119
-- On OCTET shift to state 120
-- On OBJECT shift to state 122
-- On NumericString shift to state 124
-- On NULL shift to state 125
-- On Lower shift to state 705
-- On LeftBracket shift to state 129
-- On ISO646String shift to state 140
-- On INTEGER shift to state 141
-- On INSTANCE shift to state 157
-- On IA5String shift to state 166
-- On GraphicString shift to state 167
-- On GeneralizedTime shift to state 168
-- On GeneralString shift to state 169
-- On EXTERNAL shift to state 170
-- On ENUMERATED shift to state 171
-- On EMBEDDED shift to state 179
-- On CHOICE shift to state 181
-- On CHARACTER shift to state 184
-- On BOOLEAN shift to state 186
-- On BMPString shift to state 187
-- On BIT shift to state 188
-- On ABSTRACT_SYNTAX shift to state 162
-- On valueSetFromObjects shift to state 202
-- On usefulType shift to state 203
-- On usefulObjectClassReference shift to state 163
-- On unrestrictedCharacterStringType shift to state 204
-- On type_x shift to state 706
-- On typeWithConstraint shift to state 207
-- On typeFromObject shift to state 208
-- On taggedType shift to state 209
-- On tag shift to state 210
-- On simpleDefinedType shift to state 213
-- On setType shift to state 215
-- On setOfType shift to state 216
-- On sequenceType shift to state 217
-- On sequenceOfType shift to state 218
-- On separated_nonempty_list(Comma,parameter) shift to state 712
-- On selectionType shift to state 219
-- On restrictedCharacterStringType shift to state 220
-- On relativeOIDType shift to state 221
-- On referencedType shift to state 222
-- On referencedObjects shift to state 223
-- On reference shift to state 709
-- On realType shift to state 232
-- On parameterizedValueSetType shift to state 233
-- On parameterizedType shift to state 234
-- On parameterizedObjectSet shift to state 235
-- On parameterizedObject shift to state 236
-- On parameter shift to state 710
-- On paramGovernor shift to state 713
-- On octetStringType shift to state 237
-- On objectIdentifierType shift to state 238
-- On objectClassFieldType shift to state 239
-- On nullType shift to state 240
-- On integerType shift to state 241
-- On instanceOfType shift to state 242
-- On governor shift to state 716
-- On externalTypeReference shift to state 243
-- On externalType shift to state 244
-- On externalObjectSetReference shift to state 245
-- On externalObjectReference shift to state 246
-- On externalObjectClassReference shift to state 164
-- On enumeratedType shift to state 247
-- On embeddedPDVType shift to state 248
-- On dummyReference shift to state 717
-- On dummyGovernor shift to state 718
-- On definedType shift to state 249
-- On definedObjectSet shift to state 250
-- On definedObjectClass shift to state 719
-- On definedObject shift to state 255
-- On constrainedType shift to state 257
-- On choiceType shift to state 258
-- On characterStringType shift to state 259
-- On builtinType shift to state 260
-- On booleanType shift to state 261
-- On bitStringType shift to state 262
## Reductions:

State 712:
## Known stack suffix:
## parameter Comma separated_nonempty_list(Comma,parameter)
## LR(1) items:
separated_nonempty_list(Comma,parameter) -> parameter Comma separated_nonempty_list(Comma,parameter) . [ RightBrace ]
## Transitions:
## Reductions:
-- On RightBrace reduce production separated_nonempty_list(Comma,parameter) -> parameter Comma separated_nonempty_list(Comma,parameter)

State 713:
## Known stack suffix:
## paramGovernor
## LR(1) items:
parameter -> paramGovernor . Colon dummyReference [ RightBrace Comma ]
## Transitions:
-- On Colon shift to state 714
## Reductions:

State 714:
## Known stack suffix:
## paramGovernor Colon
## LR(1) items:
parameter -> paramGovernor Colon . dummyReference [ RightBrace Comma ]
## Transitions:
-- On Upper shift to state 31
-- On Lower shift to state 32
-- On reference shift to state 709
-- On dummyReference shift to state 715
## Reductions:

State 715:
## Known stack suffix:
## paramGovernor Colon dummyReference
## LR(1) items:
parameter -> paramGovernor Colon dummyReference . [ RightBrace Comma ]
## Transitions:
## Reductions:
-- On RightBrace reduce production parameter -> paramGovernor Colon dummyReference
-- On Comma reduce production parameter -> paramGovernor Colon dummyReference

State 716:
## Known stack suffix:
## governor
## LR(1) items:
paramGovernor -> governor . [ Colon ]
## Transitions:
## Reductions:
-- On Colon reduce production paramGovernor -> governor

State 717:
## Known stack suffix:
## dummyReference
## LR(1) items:
dummyGovernor -> dummyReference . [ Colon ]
parameter -> dummyReference . [ RightBrace Comma ]
## Transitions:
## Reductions:
-- On RightBrace reduce production parameter -> dummyReference
-- On Comma reduce production parameter -> dummyReference
-- On Colon reduce production dummyGovernor -> dummyReference

State 718:
## Known stack suffix:
## dummyGovernor
## LR(1) items:
paramGovernor -> dummyGovernor . [ Colon ]
## Transitions:
## Reductions:
-- On Colon reduce production paramGovernor -> dummyGovernor

State 719:
## Known stack suffix:
## definedObjectClass
## LR(1) items:
governor -> definedObjectClass . [ Colon ]
objectClassFieldType -> definedObjectClass . Dot fieldName [ LeftParen Colon ]
## Transitions:
-- On Dot shift to state 253
## Reductions:
-- On Colon reduce production governor -> definedObjectClass

State 720:
## Known stack suffix:
## Upper Assignment
## LR(1) items:
objectClassAssignment -> Upper Assignment . objectClass [ Upper Lower END ]
typeAssignment -> Upper Assignment . type_x [ Upper Lower END ]
## Transitions:
-- On VisibleString shift to state 66
-- On VideotexString shift to state 67
-- On Upper shift to state 113
-- On UniversalString shift to state 72
-- On UTF8String shift to state 73
-- On UTCTime shift to state 74
-- On TeletexString shift to state 75
-- On TYPE_IDENTIFIER shift to state 76
-- On T61String shift to state 78
-- On SET shift to state 79
-- On SEQUENCE shift to state 111
-- On RELATIVE_OID shift to state 116
-- On REAL shift to state 117
-- On PrintableString shift to state 118
-- On ObjectDescriptor shift to state 119
-- On OCTET shift to state 120
-- On OBJECT shift to state 122
-- On NumericString shift to state 124
-- On NULL shift to state 125
-- On Lower shift to state 127
-- On LeftBracket shift to state 129
-- On ISO646String shift to state 140
-- On INTEGER shift to state 141
-- On INSTANCE shift to state 157
-- On IA5String shift to state 166
-- On GraphicString shift to state 167
-- On GeneralizedTime shift to state 168
-- On GeneralString shift to state 169
-- On EXTERNAL shift to state 170
-- On ENUMERATED shift to state 171
-- On EMBEDDED shift to state 179
-- On CLASS shift to state 721
-- On CHOICE shift to state 181
-- On CHARACTER shift to state 184
-- On BOOLEAN shift to state 186
-- On BMPString shift to state 187
-- On BIT shift to state 188
-- On ABSTRACT_SYNTAX shift to state 162
-- On valueSetFromObjects shift to state 202
-- On usefulType shift to state 203
-- On usefulObjectClassReference shift to state 163
-- On unrestrictedCharacterStringType shift to state 204
-- On type_x shift to state 801
-- On typeWithConstraint shift to state 207
-- On typeFromObject shift to state 208
-- On taggedType shift to state 209
-- On tag shift to state 210
-- On simpleDefinedType shift to state 213
-- On setType shift to state 215
-- On setOfType shift to state 216
-- On sequenceType shift to state 217
-- On sequenceOfType shift to state 218
-- On selectionType shift to state 219
-- On restrictedCharacterStringType shift to state 220
-- On relativeOIDType shift to state 221
-- On referencedType shift to state 222
-- On referencedObjects shift to state 223
-- On realType shift to state 232
-- On parameterizedValueSetType shift to state 233
-- On parameterizedType shift to state 234
-- On parameterizedObjectSet shift to state 235
-- On parameterizedObjectClass shift to state 802
-- On parameterizedObject shift to state 236
-- On octetStringType shift to state 237
-- On objectIdentifierType shift to state 238
-- On objectClassFieldType shift to state 239
-- On objectClassDefn shift to state 803
-- On objectClass shift to state 804
-- On nullType shift to state 240
-- On integerType shift to state 241
-- On instanceOfType shift to state 242
-- On externalTypeReference shift to state 243
-- On externalType shift to state 244
-- On externalObjectSetReference shift to state 245
-- On externalObjectReference shift to state 246
-- On externalObjectClassReference shift to state 164
-- On enumeratedType shift to state 247
-- On embeddedPDVType shift to state 248
-- On definedType shift to state 249
-- On definedObjectSet shift to state 805
-- On definedObjectClass shift to state 807
-- On definedObject shift to state 255
-- On constrainedType shift to state 257
-- On choiceType shift to state 258
-- On characterStringType shift to state 259
-- On builtinType shift to state 260
-- On booleanType shift to state 261
-- On bitStringType shift to state 262
## Reductions:

State 721:
## Known stack suffix:
## CLASS
## LR(1) items:
objectClassDefn -> CLASS . LeftBrace separated_nonempty_list(Comma,fieldSpec) RightBrace option(withSyntaxSpec) [ Upper Lower END ]
## Transitions:
-- On LeftBrace shift to state 722
## Reductions:

State 722:
## Known stack suffix:
## CLASS LeftBrace
## LR(1) items:
objectClassDefn -> CLASS LeftBrace . separated_nonempty_list(Comma,fieldSpec) RightBrace option(withSyntaxSpec) [ Upper Lower END ]
## Transitions:
-- On UpperField shift to state 723
-- On LowerField shift to state 745
-- On variableTypeValueSetFieldSpec shift to state 770
-- On variableTypeValueFieldSpec shift to state 771
-- On typeFieldSpec shift to state 772
-- On separated_nonempty_list(Comma,fieldSpec) shift to state 773
-- On objectSetFieldSpec shift to state 794
-- On objectFieldSpec shift to state 795
-- On fixedTypeValueSetFieldSpec shift to state 796
-- On fixedTypeValueFieldSpec shift to state 797
-- On fieldSpec shift to state 798
## Reductions:

State 723:
## Known stack suffix:
## UpperField
## LR(1) items:
fixedTypeValueSetFieldSpec -> UpperField . type_x option(valueSetOptionalitySpec) [ RightBrace Comma ]
objectSetFieldSpec -> UpperField . definedObjectClass option(objectSetOptionalitySpec) [ RightBrace Comma ]
typeFieldSpec -> UpperField . option(typeOptionalitySpec) [ RightBrace Comma ]
variableTypeValueSetFieldSpec -> UpperField . fieldName option(valueSetOptionalitySpec) [ RightBrace Comma ]
## Transitions:
-- On VisibleString shift to state 66
-- On VideotexString shift to state 67
-- On UpperField shift to state 225
-- On Upper shift to state 113
-- On UniversalString shift to state 72
-- On UTF8String shift to state 73
-- On UTCTime shift to state 74
-- On TeletexString shift to state 75
-- On TYPE_IDENTIFIER shift to state 76
-- On T61String shift to state 78
-- On SET shift to state 79
-- On SEQUENCE shift to state 111
-- On RELATIVE_OID shift to state 116
-- On REAL shift to state 117
-- On PrintableString shift to state 118
-- On ObjectDescriptor shift to state 119
-- On OPTIONAL shift to state 724
-- On OCTET shift to state 120
-- On OBJECT shift to state 122
-- On NumericString shift to state 124
-- On NULL shift to state 125
-- On LowerField shift to state 226
-- On Lower shift to state 127
-- On LeftBracket shift to state 129
-- On ISO646String shift to state 140
-- On INTEGER shift to state 141
-- On INSTANCE shift to state 157
-- On IA5String shift to state 166
-- On GraphicString shift to state 167
-- On GeneralizedTime shift to state 168
-- On GeneralString shift to state 169
-- On EXTERNAL shift to state 170
-- On ENUMERATED shift to state 171
-- On EMBEDDED shift to state 179
-- On DEFAULT shift to state 725
-- On CHOICE shift to state 181
-- On CHARACTER shift to state 184
-- On BOOLEAN shift to state 186
-- On BMPString shift to state 187
-- On BIT shift to state 188
-- On ABSTRACT_SYNTAX shift to state 162
-- On valueSetFromObjects shift to state 202
-- On usefulType shift to state 203
-- On usefulObjectClassReference shift to state 163
-- On unrestrictedCharacterStringType shift to state 204
-- On type_x shift to state 727
-- On typeWithConstraint shift to state 207
-- On typeOptionalitySpec shift to state 734
-- On typeFromObject shift to state 208
-- On taggedType shift to state 209
-- On tag shift to state 210
-- On simpleDefinedType shift to state 213
-- On setType shift to state 215
-- On setOfType shift to state 216
-- On sequenceType shift to state 217
-- On sequenceOfType shift to state 218
-- On separated_nonempty_list(Dot,primitiveFieldName) shift to state 227
-- On selectionType shift to state 219
-- On restrictedCharacterStringType shift to state 220
-- On relativeOIDType shift to state 221
-- On referencedType shift to state 222
-- On referencedObjects shift to state 223
-- On realType shift to state 232
-- On primitiveFieldName shift to state 228
-- On parameterizedValueSetType shift to state 233
-- On parameterizedType shift to state 234
-- On parameterizedObjectSet shift to state 235
-- On parameterizedObject shift to state 236
-- On option(typeOptionalitySpec) shift to state 735
-- On octetStringType shift to state 237
-- On objectIdentifierType shift to state 238
-- On objectClassFieldType shift to state 239
-- On nullType shift to state 240
-- On integerType shift to state 241
-- On instanceOfType shift to state 242
-- On fieldName shift to state 736
-- On externalTypeReference shift to state 243
-- On externalType shift to state 244
-- On externalObjectSetReference shift to state 245
-- On externalObjectReference shift to state 246
-- On externalObjectClassReference shift to state 164
-- On enumeratedType shift to state 247
-- On embeddedPDVType shift to state 248
-- On definedType shift to state 249
-- On definedObjectSet shift to state 250
-- On definedObjectClass shift to state 738
-- On definedObject shift to state 255
-- On constrainedType shift to state 257
-- On choiceType shift to state 258
-- On characterStringType shift to state 259
-- On builtinType shift to state 260
-- On booleanType shift to state 261
-- On bitStringType shift to state 262
## Reductions:
-- On RightBrace reduce production option(typeOptionalitySpec) ->
-- On Comma reduce production option(typeOptionalitySpec) ->

State 724:
## Known stack suffix:
## OPTIONAL
## LR(1) items:
typeOptionalitySpec -> OPTIONAL . [ RightBrace Comma ]
## Transitions:
## Reductions:
-- On RightBrace reduce production typeOptionalitySpec -> OPTIONAL
-- On Comma reduce production typeOptionalitySpec -> OPTIONAL

State 725:
## Known stack suffix:
## DEFAULT
## LR(1) items:
typeOptionalitySpec -> DEFAULT . type_x [ RightBrace Comma ]
## Transitions:
-- On VisibleString shift to state 66
-- On VideotexString shift to state 67
-- On Upper shift to state 113
-- On UniversalString shift to state 72
-- On UTF8String shift to state 73
-- On UTCTime shift to state 74
-- On TeletexString shift to state 75
-- On TYPE_IDENTIFIER shift to state 76
-- On T61String shift to state 78
-- On SET shift to state 79
-- On SEQUENCE shift to state 111
-- On RELATIVE_OID shift to state 116
-- On REAL shift to state 117
-- On PrintableString shift to state 118
-- On ObjectDescriptor shift to state 119
-- On OCTET shift to state 120
-- On OBJECT shift to state 122
-- On NumericString shift to state 124
-- On NULL shift to state 125
-- On Lower shift to state 127
-- On LeftBracket shift to state 129
-- On ISO646String shift to state 140
-- On INTEGER shift to state 141
-- On INSTANCE shift to state 157
-- On IA5String shift to state 166
-- On GraphicString shift to state 167
-- On GeneralizedTime shift to state 168
-- On GeneralString shift to state 169
-- On EXTERNAL shift to state 170
-- On ENUMERATED shift to state 171
-- On EMBEDDED shift to state 179
-- On CHOICE shift to state 181
-- On CHARACTER shift to state 184
-- On BOOLEAN shift to state 186
-- On BMPString shift to state 187
-- On BIT shift to state 188
-- On ABSTRACT_SYNTAX shift to state 162
-- On valueSetFromObjects shift to state 202
-- On usefulType shift to state 203
-- On usefulObjectClassReference shift to state 163
-- On unrestrictedCharacterStringType shift to state 204
-- On type_x shift to state 726
-- On typeWithConstraint shift to state 207
-- On typeFromObject shift to state 208
-- On taggedType shift to state 209
-- On tag shift to state 210
-- On simpleDefinedType shift to state 213
-- On setType shift to state 215
-- On setOfType shift to state 216
-- On sequenceType shift to state 217
-- On sequenceOfType shift to state 218
-- On selectionType shift to state 219
-- On restrictedCharacterStringType shift to state 220
-- On relativeOIDType shift to state 221
-- On referencedType shift to state 222
-- On referencedObjects shift to state 223
-- On realType shift to state 232
-- On parameterizedValueSetType shift to state 233
-- On parameterizedType shift to state 234
-- On parameterizedObjectSet shift to state 235
-- On parameterizedObject shift to state 236
-- On octetStringType shift to state 237
-- On objectIdentifierType shift to state 238
-- On objectClassFieldType shift to state 239
-- On nullType shift to state 240
-- On integerType shift to state 241
-- On instanceOfType shift to state 242
-- On externalTypeReference shift to state 243
-- On externalType shift to state 244
-- On externalObjectSetReference shift to state 245
-- On externalObjectReference shift to state 246
-- On externalObjectClassReference shift to state 164
-- On enumeratedType shift to state 247
-- On embeddedPDVType shift to state 248
-- On definedType shift to state 249
-- On definedObjectSet shift to state 250
-- On definedObjectClass shift to state 252
-- On definedObject shift to state 255
-- On constrainedType shift to state 257
-- On choiceType shift to state 258
-- On characterStringType shift to state 259
-- On builtinType shift to state 260
-- On booleanType shift to state 261
-- On bitStringType shift to state 262
## Reductions:

State 726:
## Known stack suffix:
## DEFAULT type_x
## LR(1) items:
constrainedType -> type_x . constraint_x [ RightBrace LeftParen Comma ]
typeOptionalitySpec -> DEFAULT type_x . [ RightBrace Comma ]
## Transitions:
-- On LeftParen shift to state 81
-- On constraint_x shift to state 206
## Reductions:
-- On RightBrace reduce production typeOptionalitySpec -> DEFAULT type_x
-- On Comma reduce production typeOptionalitySpec -> DEFAULT type_x

State 727:
## Known stack suffix:
## UpperField type_x
## LR(1) items:
constrainedType -> type_x . constraint_x [ RightBrace OPTIONAL LeftParen DEFAULT Comma ]
fixedTypeValueSetFieldSpec -> UpperField type_x . option(valueSetOptionalitySpec) [ RightBrace Comma ]
## Transitions:
-- On OPTIONAL shift to state 728
-- On LeftParen shift to state 81
-- On DEFAULT shift to state 729
-- On valueSetOptionalitySpec shift to state 732
-- On option(valueSetOptionalitySpec) shift to state 733
-- On constraint_x shift to state 206
## Reductions:
-- On RightBrace reduce production option(valueSetOptionalitySpec) ->
-- On Comma reduce production option(valueSetOptionalitySpec) ->

State 728:
## Known stack suffix:
## OPTIONAL
## LR(1) items:
valueSetOptionalitySpec -> OPTIONAL . [ RightBrace Comma ]
## Transitions:
## Reductions:
-- On RightBrace reduce production valueSetOptionalitySpec -> OPTIONAL
-- On Comma reduce production valueSetOptionalitySpec -> OPTIONAL

State 729:
## Known stack suffix:
## DEFAULT
## LR(1) items:
valueSetOptionalitySpec -> DEFAULT . valueSet [ RightBrace Comma ]
## Transitions:
-- On LeftBrace shift to state 730
-- On valueSet shift to state 731
## Reductions:

State 730:
## Known stack suffix:
## LeftBrace
## LR(1) items:
valueSet -> LeftBrace . elementSetSpecs RightBrace [ Upper RightBrace Lower END Comma ]
## Transitions:
-- On WITH shift to state 82
-- On VisibleString shift to state 66
-- On VideotexString shift to state 67
-- On Upper shift to state 108
-- On UniversalString shift to state 72
-- On UTF8String shift to state 73
-- On UTCTime shift to state 74
-- On TeletexString shift to state 75
-- On TYPE_IDENTIFIER shift to state 76
-- On TRUE shift to state 77
-- On T61String shift to state 78
-- On SIZE shift to state 80
-- On SET shift to state 79
-- On SEQUENCE shift to state 111
-- On RealNumber shift to state 296
-- On RELATIVE_OID shift to state 116
-- On REAL shift to state 117
-- On PrintableString shift to state 118
-- On PLUS_INFINITY shift to state 297
-- On PATTERN shift to state 495
-- On ObjectDescriptor shift to state 119
-- On OCTET shift to state 120
-- On OBJECT shift to state 122
-- On NumericString shift to state 124
-- On Number shift to state 145
-- On NULL shift to state 298
-- On MINUS_INFINITY shift to state 299
-- On MIN shift to state 497
-- On Lower shift to state 300
-- On LeftParen shift to state 498
-- On LeftBracket shift to state 129
-- On LeftBrace shift to state 499
-- On ISO646String shift to state 140
-- On INTEGER shift to state 141
-- On INSTANCE shift to state 157
-- On INCLUDES shift to state 503
-- On IA5String shift to state 166
-- On Hyphen shift to state 306
-- On Hstring shift to state 308
-- On GraphicString shift to state 167
-- On GeneralizedTime shift to state 168
-- On GeneralString shift to state 169
-- On FROM shift to state 504
-- On FALSE shift to state 309
-- On EXTERNAL shift to state 170
-- On ENUMERATED shift to state 171
-- On EMBEDDED shift to state 179
-- On DefinedSyntax shift to state 508
-- On Cstring shift to state 310
-- On CONTAINING shift to state 311
-- On CHOICE shift to state 181
-- On CHARACTER shift to state 184
-- On Bstring shift to state 312
-- On BOOLEAN shift to state 186
-- On BMPString shift to state 187
-- On BIT shift to state 188
-- On ALL shift to state 509
-- On ABSTRACT_SYNTAX shift to state 162
-- On valueSetFromObjects shift to state 202
-- On valueRange shift to state 511
-- On valueFromObject shift to state 313
-- On value shift to state 512
-- On usefulType shift to state 203
-- On usefulObjectClassReference shift to state 163
-- On unrestrictedCharacterStringValue shift to state 315
-- On unrestrictedCharacterStringType shift to state 204
-- On unions shift to state 549
-- On uElems shift to state 550
-- On type_x shift to state 513
-- On typeWithConstraint shift to state 207
-- On typeFromObject shift to state 208
-- On typeConstraint shift to state 514
-- On tuple shift to state 319
-- On taggedType shift to state 209
-- On tag shift to state 210
-- On subtypeElements shift to state 515
-- On specialRealValue shift to state 320
-- On sizeConstraint shift to state 516
-- On singleValue shift to state 517
-- On simpleDefinedValue shift to state 64
-- On simpleDefinedType shift to state 213
-- On signedNumber shift to state 321
-- On setValue shift to state 322
-- On setType shift to state 215
-- On setOfValue shift to state 323
-- On setOfType shift to state 216
-- On sequenceValue shift to state 324
-- On sequenceType shift to state 217
-- On sequenceOfValue shift to state 325
-- On sequenceOfType shift to state 218
-- On selectionType shift to state 219
-- On rootElementSetSpec shift to state 648
-- On restrictedCharacterStringValue shift to state 326
-- On restrictedCharacterStringType shift to state 220
-- On relativeOIDValue shift to state 327
-- On relativeOIDType shift to state 221
-- On referencedValue shift to state 328
-- On referencedType shift to state 222
-- On referencedObjects shift to state 518
-- On realValue shift to state 332
-- On realType shift to state 232
-- On quadruple shift to state 333
-- On permittedAlphabet shift to state 521
-- On patternConstraint shift to state 522
-- On parameterizedValueSetType shift to state 233
-- On parameterizedValue shift to state 135
-- On parameterizedType shift to state 234
-- On parameterizedObjectSet shift to state 523
-- On parameterizedObject shift to state 524
-- On openTypeFieldVal shift to state 334
-- On octetStringValue shift to state 335
-- On octetStringType shift to state 237
-- On object_x shift to state 525
-- On objectSetFromObjects shift to state 526
-- On objectSetElements shift to state 527
-- On objectIdentifierValue shift to state 336
-- On objectIdentifierType shift to state 238
-- On objectFromObject shift to state 528
-- On objectDefn shift to state 529
-- On objectClassFieldValue shift to state 337
-- On objectClassFieldType shift to state 239
-- On numericRealValue shift to state 338
-- On nullValue shift to state 339
-- On nullType shift to state 240
-- On lowerEndValue shift to state 530
-- On lowerEndPoint shift to state 532
-- On intersections shift to state 564
-- On intersectionElements shift to state 555
-- On integerValue shift to state 340
-- On integerType shift to state 241
-- On instanceOfType shift to state 242
-- On innerTypeConstraints shift to state 540
-- On includes shift to state 541
-- On iElems shift to state 556
-- On fixedTypeFieldVal shift to state 341
-- On externalValueReference shift to state 136
-- On externalValue shift to state 342
-- On externalTypeReference shift to state 243
-- On externalType shift to state 244
-- On externalObjectSetReference shift to state 245
-- On externalObjectReference shift to state 246
-- On externalObjectClassReference shift to state 164
-- On enumeratedValue shift to state 343
-- On enumeratedType shift to state 247
-- On embeddedPDVValue shift to state 344
-- On embeddedPDVType shift to state 248
-- On elems shift to state 561
-- On elements shift to state 563
-- On elementSetSpecs shift to state 580
-- On elementSetSpec shift to state 582
-- On definedValue shift to state 345
-- On definedType shift to state 249
-- On definedObjectSet shift to state 544
-- On definedObjectClass shift to state 252
-- On definedObject shift to state 545
-- On defaultSyntax shift to state 546
-- On containedSubtype shift to state 547
-- On constrainedType shift to state 257
-- On choiceValue shift to state 346
-- On choiceType shift to state 258
-- On characterStringValue shift to state 347
-- On characterStringType shift to state 259
-- On characterStringList shift to state 348
-- On builtinValue shift to state 349
-- On builtinType shift to state 260
-- On booleanValue shift to state 350
-- On booleanType shift to state 261
-- On bitStringValue shift to state 351
-- On bitStringType shift to state 262
## Reductions:

State 731:
## Known stack suffix:
## DEFAULT valueSet
## LR(1) items:
valueSetOptionalitySpec -> DEFAULT valueSet . [ RightBrace Comma ]
## Transitions:
## Reductions:
-- On RightBrace reduce production valueSetOptionalitySpec -> DEFAULT valueSet
-- On Comma reduce production valueSetOptionalitySpec -> DEFAULT valueSet

State 732:
## Known stack suffix:
## valueSetOptionalitySpec
## LR(1) items:
option(valueSetOptionalitySpec) -> valueSetOptionalitySpec . [ RightBrace Comma ]
## Transitions:
## Reductions:
-- On RightBrace reduce production option(valueSetOptionalitySpec) -> valueSetOptionalitySpec
-- On Comma reduce production option(valueSetOptionalitySpec) -> valueSetOptionalitySpec

State 733:
## Known stack suffix:
## UpperField type_x option(valueSetOptionalitySpec)
## LR(1) items:
fixedTypeValueSetFieldSpec -> UpperField type_x option(valueSetOptionalitySpec) . [ RightBrace Comma ]
## Transitions:
## Reductions:
-- On RightBrace reduce production fixedTypeValueSetFieldSpec -> UpperField type_x option(valueSetOptionalitySpec)
-- On Comma reduce production fixedTypeValueSetFieldSpec -> UpperField type_x option(valueSetOptionalitySpec)

State 734:
## Known stack suffix:
## typeOptionalitySpec
## LR(1) items:
option(typeOptionalitySpec) -> typeOptionalitySpec . [ RightBrace Comma ]
## Transitions:
## Reductions:
-- On RightBrace reduce production option(typeOptionalitySpec) -> typeOptionalitySpec
-- On Comma reduce production option(typeOptionalitySpec) -> typeOptionalitySpec

State 735:
## Known stack suffix:
## UpperField option(typeOptionalitySpec)
## LR(1) items:
typeFieldSpec -> UpperField option(typeOptionalitySpec) . [ RightBrace Comma ]
## Transitions:
## Reductions:
-- On RightBrace reduce production typeFieldSpec -> UpperField option(typeOptionalitySpec)
-- On Comma reduce production typeFieldSpec -> UpperField option(typeOptionalitySpec)

State 736:
## Known stack suffix:
## UpperField fieldName
## LR(1) items:
variableTypeValueSetFieldSpec -> UpperField fieldName . option(valueSetOptionalitySpec) [ RightBrace Comma ]
## Transitions:
-- On OPTIONAL shift to state 728
-- On DEFAULT shift to state 729
-- On valueSetOptionalitySpec shift to state 732
-- On option(valueSetOptionalitySpec) shift to state 737
## Reductions:
-- On RightBrace reduce production option(valueSetOptionalitySpec) ->
-- On Comma reduce production option(valueSetOptionalitySpec) ->

State 737:
## Known stack suffix:
## UpperField fieldName option(valueSetOptionalitySpec)
## LR(1) items:
variableTypeValueSetFieldSpec -> UpperField fieldName option(valueSetOptionalitySpec) . [ RightBrace Comma ]
## Transitions:
## Reductions:
-- On RightBrace reduce production variableTypeValueSetFieldSpec -> UpperField fieldName option(valueSetOptionalitySpec)
-- On Comma reduce production variableTypeValueSetFieldSpec -> UpperField fieldName option(valueSetOptionalitySpec)

State 738:
## Known stack suffix:
## UpperField definedObjectClass
## LR(1) items:
objectClassFieldType -> definedObjectClass . Dot fieldName [ RightBrace OPTIONAL LeftParen DEFAULT Comma ]
objectSetFieldSpec -> UpperField definedObjectClass . option(objectSetOptionalitySpec) [ RightBrace Comma ]
## Transitions:
-- On OPTIONAL shift to state 739
-- On Dot shift to state 253
-- On DEFAULT shift to state 740
-- On option(objectSetOptionalitySpec) shift to state 743
-- On objectSetOptionalitySpec shift to state 744
## Reductions:
-- On RightBrace reduce production option(objectSetOptionalitySpec) ->
-- On Comma reduce production option(objectSetOptionalitySpec) ->

State 739:
## Known stack suffix:
## OPTIONAL
## LR(1) items:
objectSetOptionalitySpec -> OPTIONAL . [ RightBrace Comma ]
## Transitions:
## Reductions:
-- On RightBrace reduce production objectSetOptionalitySpec -> OPTIONAL
-- On Comma reduce production objectSetOptionalitySpec -> OPTIONAL

State 740:
## Known stack suffix:
## DEFAULT
## LR(1) items:
objectSetOptionalitySpec -> DEFAULT . objectSet [ RightBrace Comma ]
## Transitions:
-- On LeftBrace shift to state 741
-- On objectSet shift to state 742
## Reductions:

State 741:
## Known stack suffix:
## LeftBrace
## LR(1) items:
objectSet -> LeftBrace . objectSetSpec RightBrace [ Upper RightBrace Lower END Comma ]
## Transitions:
-- On WITH shift to state 82
-- On VisibleString shift to state 66
-- On VideotexString shift to state 67
-- On Upper shift to state 108
-- On UniversalString shift to state 72
-- On UTF8String shift to state 73
-- On UTCTime shift to state 74
-- On TeletexString shift to state 75
-- On TYPE_IDENTIFIER shift to state 76
-- On TRUE shift to state 77
-- On T61String shift to state 78
-- On SIZE shift to state 80
-- On SET shift to state 79
-- On SEQUENCE shift to state 111
-- On RealNumber shift to state 296
-- On RELATIVE_OID shift to state 116
-- On REAL shift to state 117
-- On PrintableString shift to state 118
-- On PLUS_INFINITY shift to state 297
-- On PATTERN shift to state 495
-- On ObjectDescriptor shift to state 119
-- On OCTET shift to state 120
-- On OBJECT shift to state 122
-- On NumericString shift to state 124
-- On Number shift to state 145
-- On NULL shift to state 298
-- On MINUS_INFINITY shift to state 299
-- On MIN shift to state 497
-- On Lower shift to state 300
-- On LeftParen shift to state 498
-- On LeftBracket shift to state 129
-- On LeftBrace shift to state 499
-- On ISO646String shift to state 140
-- On INTEGER shift to state 141
-- On INSTANCE shift to state 157
-- On INCLUDES shift to state 503
-- On IA5String shift to state 166
-- On Hyphen shift to state 306
-- On Hstring shift to state 308
-- On GraphicString shift to state 167
-- On GeneralizedTime shift to state 168
-- On GeneralString shift to state 169
-- On FROM shift to state 504
-- On FALSE shift to state 309
-- On Ellipsis shift to state 506
-- On EXTERNAL shift to state 170
-- On ENUMERATED shift to state 171
-- On EMBEDDED shift to state 179
-- On DefinedSyntax shift to state 508
-- On Cstring shift to state 310
-- On CONTAINING shift to state 311
-- On CHOICE shift to state 181
-- On CHARACTER shift to state 184
-- On Bstring shift to state 312
-- On BOOLEAN shift to state 186
-- On BMPString shift to state 187
-- On BIT shift to state 188
-- On ALL shift to state 509
-- On ABSTRACT_SYNTAX shift to state 162
-- On valueSetFromObjects shift to state 202
-- On valueRange shift to state 511
-- On valueFromObject shift to state 313
-- On value shift to state 512
-- On usefulType shift to state 203
-- On usefulObjectClassReference shift to state 163
-- On unrestrictedCharacterStringValue shift to state 315
-- On unrestrictedCharacterStringType shift to state 204
-- On unions shift to state 549
-- On uElems shift to state 550
-- On type_x shift to state 513
-- On typeWithConstraint shift to state 207
-- On typeFromObject shift to state 208
-- On typeConstraint shift to state 514
-- On tuple shift to state 319
-- On taggedType shift to state 209
-- On tag shift to state 210
-- On subtypeElements shift to state 515
-- On specialRealValue shift to state 320
-- On sizeConstraint shift to state 516
-- On singleValue shift to state 517
-- On simpleDefinedValue shift to state 64
-- On simpleDefinedType shift to state 213
-- On signedNumber shift to state 321
-- On setValue shift to state 322
-- On setType shift to state 215
-- On setOfValue shift to state 323
-- On setOfType shift to state 216
-- On sequenceValue shift to state 324
-- On sequenceType shift to state 217
-- On sequenceOfValue shift to state 325
-- On sequenceOfType shift to state 218
-- On selectionType shift to state 219
-- On rootElementSetSpec shift to state 595
-- On restrictedCharacterStringValue shift to state 326
-- On restrictedCharacterStringType shift to state 220
-- On relativeOIDValue shift to state 327
-- On relativeOIDType shift to state 221
-- On referencedValue shift to state 328
-- On referencedType shift to state 222
-- On referencedObjects shift to state 518
-- On realValue shift to state 332
-- On realType shift to state 232
-- On quadruple shift to state 333
-- On permittedAlphabet shift to state 521
-- On patternConstraint shift to state 522
-- On parameterizedValueSetType shift to state 233
-- On parameterizedValue shift to state 135
-- On parameterizedType shift to state 234
-- On parameterizedObjectSet shift to state 523
-- On parameterizedObject shift to state 524
-- On openTypeFieldVal shift to state 334
-- On octetStringValue shift to state 335
-- On octetStringType shift to state 237
-- On object_x shift to state 525
-- On objectSetSpec shift to state 573
-- On objectSetFromObjects shift to state 526
-- On objectSetElements shift to state 527
-- On objectIdentifierValue shift to state 336
-- On objectIdentifierType shift to state 238
-- On objectFromObject shift to state 528
-- On objectDefn shift to state 529
-- On objectClassFieldValue shift to state 337
-- On objectClassFieldType shift to state 239
-- On numericRealValue shift to state 338
-- On nullValue shift to state 339
-- On nullType shift to state 240
-- On lowerEndValue shift to state 530
-- On lowerEndPoint shift to state 532
-- On intersections shift to state 564
-- On intersectionElements shift to state 555
-- On integerValue shift to state 340
-- On integerType shift to state 241
-- On instanceOfType shift to state 242
-- On innerTypeConstraints shift to state 540
-- On includes shift to state 541
-- On iElems shift to state 556
-- On fixedTypeFieldVal shift to state 341
-- On externalValueReference shift to state 136
-- On externalValue shift to state 342
-- On externalTypeReference shift to state 243
-- On externalType shift to state 244
-- On externalObjectSetReference shift to state 245
-- On externalObjectReference shift to state 246
-- On externalObjectClassReference shift to state 164
-- On enumeratedValue shift to state 343
-- On enumeratedType shift to state 247
-- On embeddedPDVValue shift to state 344
-- On embeddedPDVType shift to state 248
-- On elems shift to state 561
-- On elements shift to state 563
-- On elementSetSpec shift to state 582
-- On definedValue shift to state 345
-- On definedType shift to state 249
-- On definedObjectSet shift to state 544
-- On definedObjectClass shift to state 252
-- On definedObject shift to state 545
-- On defaultSyntax shift to state 546
-- On containedSubtype shift to state 547
-- On constrainedType shift to state 257
-- On choiceValue shift to state 346
-- On choiceType shift to state 258
-- On characterStringValue shift to state 347
-- On characterStringType shift to state 259
-- On characterStringList shift to state 348
-- On builtinValue shift to state 349
-- On builtinType shift to state 260
-- On booleanValue shift to state 350
-- On booleanType shift to state 261
-- On bitStringValue shift to state 351
-- On bitStringType shift to state 262
## Reductions:

State 742:
## Known stack suffix:
## DEFAULT objectSet
## LR(1) items:
objectSetOptionalitySpec -> DEFAULT objectSet . [ RightBrace Comma ]
## Transitions:
## Reductions:
-- On RightBrace reduce production objectSetOptionalitySpec -> DEFAULT objectSet
-- On Comma reduce production objectSetOptionalitySpec -> DEFAULT objectSet

State 743:
## Known stack suffix:
## UpperField definedObjectClass option(objectSetOptionalitySpec)
## LR(1) items:
objectSetFieldSpec -> UpperField definedObjectClass option(objectSetOptionalitySpec) . [ RightBrace Comma ]
## Transitions:
## Reductions:
-- On RightBrace reduce production objectSetFieldSpec -> UpperField definedObjectClass option(objectSetOptionalitySpec)
-- On Comma reduce production objectSetFieldSpec -> UpperField definedObjectClass option(objectSetOptionalitySpec)

State 744:
## Known stack suffix:
## objectSetOptionalitySpec
## LR(1) items:
option(objectSetOptionalitySpec) -> objectSetOptionalitySpec . [ RightBrace Comma ]
## Transitions:
## Reductions:
-- On RightBrace reduce production option(objectSetOptionalitySpec) -> objectSetOptionalitySpec
-- On Comma reduce production option(objectSetOptionalitySpec) -> objectSetOptionalitySpec

State 745:
## Known stack suffix:
## LowerField
## LR(1) items:
fixedTypeValueFieldSpec -> LowerField . type_x option(UNIQUE) option(valueOptionalitySpec) [ RightBrace Comma ]
objectFieldSpec -> LowerField . definedObjectClass option(objectOptionalitySpec) [ RightBrace Comma ]
variableTypeValueFieldSpec -> LowerField . fieldName option(valueOptionalitySpec) [ RightBrace Comma ]
## Transitions:
-- On VisibleString shift to state 66
-- On VideotexString shift to state 67
-- On UpperField shift to state 225
-- On Upper shift to state 113
-- On UniversalString shift to state 72
-- On UTF8String shift to state 73
-- On UTCTime shift to state 74
-- On TeletexString shift to state 75
-- On TYPE_IDENTIFIER shift to state 76
-- On T61String shift to state 78
-- On SET shift to state 79
-- On SEQUENCE shift to state 111
-- On RELATIVE_OID shift to state 116
-- On REAL shift to state 117
-- On PrintableString shift to state 118
-- On ObjectDescriptor shift to state 119
-- On OCTET shift to state 120
-- On OBJECT shift to state 122
-- On NumericString shift to state 124
-- On NULL shift to state 125
-- On LowerField shift to state 226
-- On Lower shift to state 127
-- On LeftBracket shift to state 129
-- On ISO646String shift to state 140
-- On INTEGER shift to state 141
-- On INSTANCE shift to state 157
-- On IA5String shift to state 166
-- On GraphicString shift to state 167
-- On GeneralizedTime shift to state 168
-- On GeneralString shift to state 169
-- On EXTERNAL shift to state 170
-- On ENUMERATED shift to state 171
-- On EMBEDDED shift to state 179
-- On CHOICE shift to state 181
-- On CHARACTER shift to state 184
-- On BOOLEAN shift to state 186
-- On BMPString shift to state 187
-- On BIT shift to state 188
-- On ABSTRACT_SYNTAX shift to state 162
-- On valueSetFromObjects shift to state 202
-- On usefulType shift to state 203
-- On usefulObjectClassReference shift to state 163
-- On unrestrictedCharacterStringType shift to state 204
-- On type_x shift to state 746
-- On typeWithConstraint shift to state 207
-- On typeFromObject shift to state 208
-- On taggedType shift to state 209
-- On tag shift to state 210
-- On simpleDefinedType shift to state 213
-- On setType shift to state 215
-- On setOfType shift to state 216
-- On sequenceType shift to state 217
-- On sequenceOfType shift to state 218
-- On separated_nonempty_list(Dot,primitiveFieldName) shift to state 227
-- On selectionType shift to state 219
-- On restrictedCharacterStringType shift to state 220
-- On relativeOIDType shift to state 221
-- On referencedType shift to state 222
-- On referencedObjects shift to state 223
-- On realType shift to state 232
-- On primitiveFieldName shift to state 228
-- On parameterizedValueSetType shift to state 233
-- On parameterizedType shift to state 234
-- On parameterizedObjectSet shift to state 235
-- On parameterizedObject shift to state 236
-- On octetStringType shift to state 237
-- On objectIdentifierType shift to state 238
-- On objectClassFieldType shift to state 239
-- On nullType shift to state 240
-- On integerType shift to state 241
-- On instanceOfType shift to state 242
-- On fieldName shift to state 754
-- On externalTypeReference shift to state 243
-- On externalType shift to state 244
-- On externalObjectSetReference shift to state 245
-- On externalObjectReference shift to state 246
-- On externalObjectClassReference shift to state 164
-- On enumeratedType shift to state 247
-- On embeddedPDVType shift to state 248
-- On definedType shift to state 249
-- On definedObjectSet shift to state 250
-- On definedObjectClass shift to state 756
-- On definedObject shift to state 255
-- On constrainedType shift to state 257
-- On choiceType shift to state 258
-- On characterStringType shift to state 259
-- On builtinType shift to state 260
-- On booleanType shift to state 261
-- On bitStringType shift to state 262
## Reductions:

State 746:
## Known stack suffix:
## LowerField type_x
## LR(1) items:
constrainedType -> type_x . constraint_x [ UNIQUE RightBrace OPTIONAL LeftParen DEFAULT Comma ]
fixedTypeValueFieldSpec -> LowerField type_x . option(UNIQUE) option(valueOptionalitySpec) [ RightBrace Comma ]
## Transitions:
-- On UNIQUE shift to state 747
-- On LeftParen shift to state 81
-- On option(UNIQUE) shift to state 748
-- On constraint_x shift to state 206
## Reductions:
-- On RightBrace reduce production option(UNIQUE) ->
-- On OPTIONAL reduce production option(UNIQUE) ->
-- On DEFAULT reduce production option(UNIQUE) ->
-- On Comma reduce production option(UNIQUE) ->

State 747:
## Known stack suffix:
## UNIQUE
## LR(1) items:
option(UNIQUE) -> UNIQUE . [ RightBrace OPTIONAL DEFAULT Comma ]
## Transitions:
## Reductions:
-- On RightBrace reduce production option(UNIQUE) -> UNIQUE
-- On OPTIONAL reduce production option(UNIQUE) -> UNIQUE
-- On DEFAULT reduce production option(UNIQUE) -> UNIQUE
-- On Comma reduce production option(UNIQUE) -> UNIQUE

State 748:
## Known stack suffix:
## LowerField type_x option(UNIQUE)
## LR(1) items:
fixedTypeValueFieldSpec -> LowerField type_x option(UNIQUE) . option(valueOptionalitySpec) [ RightBrace Comma ]
## Transitions:
-- On OPTIONAL shift to state 749
-- On DEFAULT shift to state 750
-- On valueOptionalitySpec shift to state 752
-- On option(valueOptionalitySpec) shift to state 753
## Reductions:
-- On RightBrace reduce production option(valueOptionalitySpec) ->
-- On Comma reduce production option(valueOptionalitySpec) ->

State 749:
## Known stack suffix:
## OPTIONAL
## LR(1) items:
valueOptionalitySpec -> OPTIONAL . [ RightBrace Comma ]
## Transitions:
## Reductions:
-- On RightBrace reduce production valueOptionalitySpec -> OPTIONAL
-- On Comma reduce production valueOptionalitySpec -> OPTIONAL

State 750:
## Known stack suffix:
## DEFAULT
## LR(1) items:
valueOptionalitySpec -> DEFAULT . value [ RightBrace Comma ]
## Transitions:
-- On VisibleString shift to state 66
-- On VideotexString shift to state 67
-- On Upper shift to state 108
-- On UniversalString shift to state 72
-- On UTF8String shift to state 73
-- On UTCTime shift to state 74
-- On TeletexString shift to state 75
-- On TYPE_IDENTIFIER shift to state 76
-- On TRUE shift to state 77
-- On T61String shift to state 78
-- On SET shift to state 79
-- On SEQUENCE shift to state 111
-- On RealNumber shift to state 296
-- On RELATIVE_OID shift to state 116
-- On REAL shift to state 117
-- On PrintableString shift to state 118
-- On PLUS_INFINITY shift to state 297
-- On ObjectDescriptor shift to state 119
-- On OCTET shift to state 120
-- On OBJECT shift to state 122
-- On NumericString shift to state 124
-- On Number shift to state 145
-- On NULL shift to state 298
-- On MINUS_INFINITY shift to state 299
-- On Lower shift to state 300
-- On LeftBracket shift to state 129
-- On LeftBrace shift to state 302
-- On ISO646String shift to state 140
-- On INTEGER shift to state 141
-- On INSTANCE shift to state 157
-- On IA5String shift to state 166
-- On Hyphen shift to state 306
-- On Hstring shift to state 308
-- On GraphicString shift to state 167
-- On GeneralizedTime shift to state 168
-- On GeneralString shift to state 169
-- On FALSE shift to state 309
-- On EXTERNAL shift to state 170
-- On ENUMERATED shift to state 171
-- On EMBEDDED shift to state 179
-- On Cstring shift to state 310
-- On CONTAINING shift to state 311
-- On CHOICE shift to state 181
-- On CHARACTER shift to state 184
-- On Bstring shift to state 312
-- On BOOLEAN shift to state 186
-- On BMPString shift to state 187
-- On BIT shift to state 188
-- On ABSTRACT_SYNTAX shift to state 162
-- On valueSetFromObjects shift to state 202
-- On valueFromObject shift to state 313
-- On value shift to state 751
-- On usefulType shift to state 203
-- On usefulObjectClassReference shift to state 163
-- On unrestrictedCharacterStringValue shift to state 315
-- On unrestrictedCharacterStringType shift to state 204
-- On type_x shift to state 316
-- On typeWithConstraint shift to state 207
-- On typeFromObject shift to state 208
-- On tuple shift to state 319
-- On taggedType shift to state 209
-- On tag shift to state 210
-- On specialRealValue shift to state 320
-- On simpleDefinedValue shift to state 64
-- On simpleDefinedType shift to state 213
-- On signedNumber shift to state 321
-- On setValue shift to state 322
-- On setType shift to state 215
-- On setOfValue shift to state 323
-- On setOfType shift to state 216
-- On sequenceValue shift to state 324
-- On sequenceType shift to state 217
-- On sequenceOfValue shift to state 325
-- On sequenceOfType shift to state 218
-- On selectionType shift to state 219
-- On restrictedCharacterStringValue shift to state 326
-- On restrictedCharacterStringType shift to state 220
-- On relativeOIDValue shift to state 327
-- On relativeOIDType shift to state 221
-- On referencedValue shift to state 328
-- On referencedType shift to state 222
-- On referencedObjects shift to state 329
-- On realValue shift to state 332
-- On realType shift to state 232
-- On quadruple shift to state 333
-- On parameterizedValueSetType shift to state 233
-- On parameterizedValue shift to state 135
-- On parameterizedType shift to state 234
-- On parameterizedObjectSet shift to state 235
-- On parameterizedObject shift to state 236
-- On openTypeFieldVal shift to state 334
-- On octetStringValue shift to state 335
-- On octetStringType shift to state 237
-- On objectIdentifierValue shift to state 336
-- On objectIdentifierType shift to state 238
-- On objectClassFieldValue shift to state 337
-- On objectClassFieldType shift to state 239
-- On numericRealValue shift to state 338
-- On nullValue shift to state 339
-- On nullType shift to state 240
-- On integerValue shift to state 340
-- On integerType shift to state 241
-- On instanceOfType shift to state 242
-- On fixedTypeFieldVal shift to state 341
-- On externalValueReference shift to state 136
-- On externalValue shift to state 342
-- On externalTypeReference shift to state 243
-- On externalType shift to state 244
-- On externalObjectSetReference shift to state 245
-- On externalObjectReference shift to state 246
-- On externalObjectClassReference shift to state 164
-- On enumeratedValue shift to state 343
-- On enumeratedType shift to state 247
-- On embeddedPDVValue shift to state 344
-- On embeddedPDVType shift to state 248
-- On definedValue shift to state 345
-- On definedType shift to state 249
-- On definedObjectSet shift to state 250
-- On definedObjectClass shift to state 252
-- On definedObject shift to state 255
-- On constrainedType shift to state 257
-- On choiceValue shift to state 346
-- On choiceType shift to state 258
-- On characterStringValue shift to state 347
-- On characterStringType shift to state 259
-- On characterStringList shift to state 348
-- On builtinValue shift to state 349
-- On builtinType shift to state 260
-- On booleanValue shift to state 350
-- On booleanType shift to state 261
-- On bitStringValue shift to state 351
-- On bitStringType shift to state 262
## Reductions:

State 751:
## Known stack suffix:
## DEFAULT value
## LR(1) items:
valueOptionalitySpec -> DEFAULT value . [ RightBrace Comma ]
## Transitions:
## Reductions:
-- On RightBrace reduce production valueOptionalitySpec -> DEFAULT value
-- On Comma reduce production valueOptionalitySpec -> DEFAULT value

State 752:
## Known stack suffix:
## valueOptionalitySpec
## LR(1) items:
option(valueOptionalitySpec) -> valueOptionalitySpec . [ RightBrace Comma ]
## Transitions:
## Reductions:
-- On RightBrace reduce production option(valueOptionalitySpec) -> valueOptionalitySpec
-- On Comma reduce production option(valueOptionalitySpec) -> valueOptionalitySpec

State 753:
## Known stack suffix:
## LowerField type_x option(UNIQUE) option(valueOptionalitySpec)
## LR(1) items:
fixedTypeValueFieldSpec -> LowerField type_x option(UNIQUE) option(valueOptionalitySpec) . [ RightBrace Comma ]
## Transitions:
## Reductions:
-- On RightBrace reduce production fixedTypeValueFieldSpec -> LowerField type_x option(UNIQUE) option(valueOptionalitySpec)
-- On Comma reduce production fixedTypeValueFieldSpec -> LowerField type_x option(UNIQUE) option(valueOptionalitySpec)

State 754:
## Known stack suffix:
## LowerField fieldName
## LR(1) items:
variableTypeValueFieldSpec -> LowerField fieldName . option(valueOptionalitySpec) [ RightBrace Comma ]
## Transitions:
-- On OPTIONAL shift to state 749
-- On DEFAULT shift to state 750
-- On valueOptionalitySpec shift to state 752
-- On option(valueOptionalitySpec) shift to state 755
## Reductions:
-- On RightBrace reduce production option(valueOptionalitySpec) ->
-- On Comma reduce production option(valueOptionalitySpec) ->

State 755:
## Known stack suffix:
## LowerField fieldName option(valueOptionalitySpec)
## LR(1) items:
variableTypeValueFieldSpec -> LowerField fieldName option(valueOptionalitySpec) . [ RightBrace Comma ]
## Transitions:
## Reductions:
-- On RightBrace reduce production variableTypeValueFieldSpec -> LowerField fieldName option(valueOptionalitySpec)
-- On Comma reduce production variableTypeValueFieldSpec -> LowerField fieldName option(valueOptionalitySpec)

State 756:
## Known stack suffix:
## LowerField definedObjectClass
## LR(1) items:
objectClassFieldType -> definedObjectClass . Dot fieldName [ UNIQUE RightBrace OPTIONAL LeftParen DEFAULT Comma ]
objectFieldSpec -> LowerField definedObjectClass . option(objectOptionalitySpec) [ RightBrace Comma ]
## Transitions:
-- On OPTIONAL shift to state 757
-- On Dot shift to state 253
-- On DEFAULT shift to state 758
-- On option(objectOptionalitySpec) shift to state 768
-- On objectOptionalitySpec shift to state 769
## Reductions:
-- On RightBrace reduce production option(objectOptionalitySpec) ->
-- On Comma reduce production option(objectOptionalitySpec) ->

State 757:
## Known stack suffix:
## OPTIONAL
## LR(1) items:
objectOptionalitySpec -> OPTIONAL . [ RightBrace Comma ]
## Transitions:
## Reductions:
-- On RightBrace reduce production objectOptionalitySpec -> OPTIONAL
-- On Comma reduce production objectOptionalitySpec -> OPTIONAL

State 758:
## Known stack suffix:
## DEFAULT
## LR(1) items:
objectOptionalitySpec -> DEFAULT . object_x [ RightBrace Comma ]
## Transitions:
-- On Upper shift to state 759
-- On Lower shift to state 762
-- On LeftBrace shift to state 763
-- On DefinedSyntax shift to state 508
-- On referencedObjects shift to state 764
-- On parameterizedObjectSet shift to state 235
-- On parameterizedObject shift to state 524
-- On object_x shift to state 767
-- On objectFromObject shift to state 528
-- On objectDefn shift to state 529
-- On externalObjectSetReference shift to state 245
-- On externalObjectReference shift to state 246
-- On definedObjectSet shift to state 250
-- On definedObject shift to state 545
-- On defaultSyntax shift to state 546
## Reductions:

State 759:
## Known stack suffix:
## Upper
## LR(1) items:
definedObjectSet -> Upper . [ LeftBrace Dot ]
externalObjectReference -> Upper . Dot Lower [ Upper RightBrace Lower LeftBrace END Dot Comma ]
externalObjectSetReference -> Upper . Dot Upper [ LeftBrace Dot ]
## Transitions:
-- On Dot shift to state 760
## Reductions:
-- On LeftBrace reduce production definedObjectSet -> Upper

State 760:
## Known stack suffix:
## Upper Dot
## LR(1) items:
externalObjectReference -> Upper Dot . Lower [ Upper RightBrace Lower LeftBrace END Dot Comma ]
externalObjectSetReference -> Upper Dot . Upper [ LeftBrace Dot ]
## Transitions:
-- On Upper shift to state 761
-- On Lower shift to state 115
## Reductions:

State 761:
## Known stack suffix:
## Upper Dot Upper
## LR(1) items:
externalObjectSetReference -> Upper Dot Upper . [ LeftBrace Dot ]
## Transitions:
## Reductions:
-- On LeftBrace reduce production externalObjectSetReference -> Upper Dot Upper
-- On Dot reduce production externalObjectSetReference -> Upper Dot Upper

State 762:
## Known stack suffix:
## Lower
## LR(1) items:
definedObject -> Lower . [ Upper RightBrace Lower LeftBrace END Dot Comma ]
## Transitions:
## Reductions:
-- On Upper reduce production definedObject -> Lower
-- On RightBrace reduce production definedObject -> Lower
-- On Lower reduce production definedObject -> Lower
-- On LeftBrace reduce production definedObject -> Lower
-- On END reduce production definedObject -> Lower
-- On Dot reduce production definedObject -> Lower
-- On Comma reduce production definedObject -> Lower

State 763:
## Known stack suffix:
## LeftBrace
## LR(1) items:
defaultSyntax -> LeftBrace . loption(separated_nonempty_list(Comma,fieldSetting)) RightBrace [ Upper RightBrace Lower END Comma ]
## Transitions:
-- On UpperField shift to state 225
-- On LowerField shift to state 226
-- On separated_nonempty_list(Comma,fieldSetting) shift to state 500
-- On primitiveFieldName shift to state 501
-- On loption(separated_nonempty_list(Comma,fieldSetting)) shift to state 575
-- On fieldSetting shift to state 577
## Reductions:
-- On RightBrace reduce production loption(separated_nonempty_list(Comma,fieldSetting)) ->

State 764:
## Known stack suffix:
## referencedObjects
## LR(1) items:
objectFromObject -> referencedObjects . Dot fieldName [ Upper RightBrace Lower END Comma ]
## Transitions:
-- On Dot shift to state 765
## Reductions:

State 765:
## Known stack suffix:
## referencedObjects Dot
## LR(1) items:
objectFromObject -> referencedObjects Dot . fieldName [ Upper RightBrace Lower END Comma ]
## Transitions:
-- On UpperField shift to state 225
-- On LowerField shift to state 226
-- On separated_nonempty_list(Dot,primitiveFieldName) shift to state 227
-- On primitiveFieldName shift to state 228
-- On fieldName shift to state 766
## Reductions:

State 766:
## Known stack suffix:
## referencedObjects Dot fieldName
## LR(1) items:
objectFromObject -> referencedObjects Dot fieldName . [ Upper RightBrace Lower END Comma ]
## Transitions:
## Reductions:
-- On Upper reduce production objectFromObject -> referencedObjects Dot fieldName
-- On RightBrace reduce production objectFromObject -> referencedObjects Dot fieldName
-- On Lower reduce production objectFromObject -> referencedObjects Dot fieldName
-- On END reduce production objectFromObject -> referencedObjects Dot fieldName
-- On Comma reduce production objectFromObject -> referencedObjects Dot fieldName

State 767:
## Known stack suffix:
## DEFAULT object_x
## LR(1) items:
objectOptionalitySpec -> DEFAULT object_x . [ RightBrace Comma ]
## Transitions:
## Reductions:
-- On RightBrace reduce production objectOptionalitySpec -> DEFAULT object_x
-- On Comma reduce production objectOptionalitySpec -> DEFAULT object_x

State 768:
## Known stack suffix:
## LowerField definedObjectClass option(objectOptionalitySpec)
## LR(1) items:
objectFieldSpec -> LowerField definedObjectClass option(objectOptionalitySpec) . [ RightBrace Comma ]
## Transitions:
## Reductions:
-- On RightBrace reduce production objectFieldSpec -> LowerField definedObjectClass option(objectOptionalitySpec)
-- On Comma reduce production objectFieldSpec -> LowerField definedObjectClass option(objectOptionalitySpec)

State 769:
## Known stack suffix:
## objectOptionalitySpec
## LR(1) items:
option(objectOptionalitySpec) -> objectOptionalitySpec . [ RightBrace Comma ]
## Transitions:
## Reductions:
-- On RightBrace reduce production option(objectOptionalitySpec) -> objectOptionalitySpec
-- On Comma reduce production option(objectOptionalitySpec) -> objectOptionalitySpec

State 770:
## Known stack suffix:
## variableTypeValueSetFieldSpec
## LR(1) items:
fieldSpec -> variableTypeValueSetFieldSpec . [ RightBrace Comma ]
## Transitions:
## Reductions:
-- On RightBrace reduce production fieldSpec -> variableTypeValueSetFieldSpec
-- On Comma reduce production fieldSpec -> variableTypeValueSetFieldSpec

State 771:
## Known stack suffix:
## variableTypeValueFieldSpec
## LR(1) items:
fieldSpec -> variableTypeValueFieldSpec . [ RightBrace Comma ]
## Transitions:
## Reductions:
-- On RightBrace reduce production fieldSpec -> variableTypeValueFieldSpec
-- On Comma reduce production fieldSpec -> variableTypeValueFieldSpec

State 772:
## Known stack suffix:
## typeFieldSpec
## LR(1) items:
fieldSpec -> typeFieldSpec . [ RightBrace Comma ]
## Transitions:
## Reductions:
-- On RightBrace reduce production fieldSpec -> typeFieldSpec
-- On Comma reduce production fieldSpec -> typeFieldSpec

State 773:
## Known stack suffix:
## CLASS LeftBrace separated_nonempty_list(Comma,fieldSpec)
## LR(1) items:
objectClassDefn -> CLASS LeftBrace separated_nonempty_list(Comma,fieldSpec) . RightBrace option(withSyntaxSpec) [ Upper Lower END ]
## Transitions:
-- On RightBrace shift to state 774
## Reductions:

State 774:
## Known stack suffix:
## CLASS LeftBrace separated_nonempty_list(Comma,fieldSpec) RightBrace
## LR(1) items:
objectClassDefn -> CLASS LeftBrace separated_nonempty_list(Comma,fieldSpec) RightBrace . option(withSyntaxSpec) [ Upper Lower END ]
## Transitions:
-- On WITH shift to state 775
-- On withSyntaxSpec shift to state 792
-- On option(withSyntaxSpec) shift to state 793
## Reductions:
-- On Upper reduce production option(withSyntaxSpec) ->
-- On Lower reduce production option(withSyntaxSpec) ->
-- On END reduce production option(withSyntaxSpec) ->

State 775:
## Known stack suffix:
## WITH
## LR(1) items:
withSyntaxSpec -> WITH . SYNTAX syntaxList [ Upper Lower END ]
## Transitions:
-- On SYNTAX shift to state 776
## Reductions:

State 776:
## Known stack suffix:
## WITH SYNTAX
## LR(1) items:
withSyntaxSpec -> WITH SYNTAX . syntaxList [ Upper Lower END ]
## Transitions:
-- On LeftBrace shift to state 777
-- On syntaxList shift to state 791
## Reductions:

State 777:
## Known stack suffix:
## LeftBrace
## LR(1) items:
syntaxList -> LeftBrace . nonempty_list(tokenOrGroupSpec) RightBrace [ Upper Lower END ]
## Transitions:
-- On UpperField shift to state 225
-- On Upper shift to state 778
-- On LowerField shift to state 226
-- On LeftBracket shift to state 779
-- On Comma shift to state 780
-- On tokenOrGroupSpec shift to state 781
-- On requiredToken shift to state 782
-- On primitiveFieldName shift to state 783
-- On optionalGroup shift to state 784
-- On nonempty_list(tokenOrGroupSpec) shift to state 789
-- On literal shift to state 786
## Reductions:

State 778:
## Known stack suffix:
## Upper
## LR(1) items:
literal -> Upper . [ UpperField Upper RightBrace LowerField LeftBracket Comma ]
## Transitions:
## Reductions:
-- On UpperField reduce production literal -> Upper
-- On Upper reduce production literal -> Upper
-- On RightBrace reduce production literal -> Upper
-- On LowerField reduce production literal -> Upper
-- On LeftBracket reduce production literal -> Upper
-- On Comma reduce production literal -> Upper

State 779:
## Known stack suffix:
## LeftBracket
## LR(1) items:
optionalGroup -> LeftBracket . nonempty_list(tokenOrGroupSpec) RightBrace [ UpperField Upper RightBrace LowerField LeftBracket Comma ]
## Transitions:
-- On UpperField shift to state 225
-- On Upper shift to state 778
-- On LowerField shift to state 226
-- On LeftBracket shift to state 779
-- On Comma shift to state 780
-- On tokenOrGroupSpec shift to state 781
-- On requiredToken shift to state 782
-- On primitiveFieldName shift to state 783
-- On optionalGroup shift to state 784
-- On nonempty_list(tokenOrGroupSpec) shift to state 787
-- On literal shift to state 786
## Reductions:

State 780:
## Known stack suffix:
## Comma
## LR(1) items:
literal -> Comma . [ UpperField Upper RightBrace LowerField LeftBracket Comma ]
## Transitions:
## Reductions:
-- On UpperField reduce production literal -> Comma
-- On Upper reduce production literal -> Comma
-- On RightBrace reduce production literal -> Comma
-- On LowerField reduce production literal -> Comma
-- On LeftBracket reduce production literal -> Comma
-- On Comma reduce production literal -> Comma

State 781:
## Known stack suffix:
## tokenOrGroupSpec
## LR(1) items:
nonempty_list(tokenOrGroupSpec) -> tokenOrGroupSpec . [ RightBrace ]
nonempty_list(tokenOrGroupSpec) -> tokenOrGroupSpec . nonempty_list(tokenOrGroupSpec) [ RightBrace ]
## Transitions:
-- On UpperField shift to state 225
-- On Upper shift to state 778
-- On LowerField shift to state 226
-- On LeftBracket shift to state 779
-- On Comma shift to state 780
-- On tokenOrGroupSpec shift to state 781
-- On requiredToken shift to state 782
-- On primitiveFieldName shift to state 783
-- On optionalGroup shift to state 784
-- On nonempty_list(tokenOrGroupSpec) shift to state 785
-- On literal shift to state 786
## Reductions:
-- On RightBrace reduce production nonempty_list(tokenOrGroupSpec) -> tokenOrGroupSpec

State 782:
## Known stack suffix:
## requiredToken
## LR(1) items:
tokenOrGroupSpec -> requiredToken . [ UpperField Upper RightBrace LowerField LeftBracket Comma ]
## Transitions:
## Reductions:
-- On UpperField reduce production tokenOrGroupSpec -> requiredToken
-- On Upper reduce production tokenOrGroupSpec -> requiredToken
-- On RightBrace reduce production tokenOrGroupSpec -> requiredToken
-- On LowerField reduce production tokenOrGroupSpec -> requiredToken
-- On LeftBracket reduce production tokenOrGroupSpec -> requiredToken
-- On Comma reduce production tokenOrGroupSpec -> requiredToken

State 783:
## Known stack suffix:
## primitiveFieldName
## LR(1) items:
requiredToken -> primitiveFieldName . [ UpperField Upper RightBrace LowerField LeftBracket Comma ]
## Transitions:
## Reductions:
-- On UpperField reduce production requiredToken -> primitiveFieldName
-- On Upper reduce production requiredToken -> primitiveFieldName
-- On RightBrace reduce production requiredToken -> primitiveFieldName
-- On LowerField reduce production requiredToken -> primitiveFieldName
-- On LeftBracket reduce production requiredToken -> primitiveFieldName
-- On Comma reduce production requiredToken -> primitiveFieldName

State 784:
## Known stack suffix:
## optionalGroup
## LR(1) items:
tokenOrGroupSpec -> optionalGroup . [ UpperField Upper RightBrace LowerField LeftBracket Comma ]
## Transitions:
## Reductions:
-- On UpperField reduce production tokenOrGroupSpec -> optionalGroup
-- On Upper reduce production tokenOrGroupSpec -> optionalGroup
-- On RightBrace reduce production tokenOrGroupSpec -> optionalGroup
-- On LowerField reduce production tokenOrGroupSpec -> optionalGroup
-- On LeftBracket reduce production tokenOrGroupSpec -> optionalGroup
-- On Comma reduce production tokenOrGroupSpec -> optionalGroup

State 785:
## Known stack suffix:
## tokenOrGroupSpec nonempty_list(tokenOrGroupSpec)
## LR(1) items:
nonempty_list(tokenOrGroupSpec) -> tokenOrGroupSpec nonempty_list(tokenOrGroupSpec) . [ RightBrace ]
## Transitions:
## Reductions:
-- On RightBrace reduce production nonempty_list(tokenOrGroupSpec) -> tokenOrGroupSpec nonempty_list(tokenOrGroupSpec)

State 786:
## Known stack suffix:
## literal
## LR(1) items:
requiredToken -> literal . [ UpperField Upper RightBrace LowerField LeftBracket Comma ]
## Transitions:
## Reductions:
-- On UpperField reduce production requiredToken -> literal
-- On Upper reduce production requiredToken -> literal
-- On RightBrace reduce production requiredToken -> literal
-- On LowerField reduce production requiredToken -> literal
-- On LeftBracket reduce production requiredToken -> literal
-- On Comma reduce production requiredToken -> literal

State 787:
## Known stack suffix:
## LeftBracket nonempty_list(tokenOrGroupSpec)
## LR(1) items:
optionalGroup -> LeftBracket nonempty_list(tokenOrGroupSpec) . RightBrace [ UpperField Upper RightBrace LowerField LeftBracket Comma ]
## Transitions:
-- On RightBrace shift to state 788
## Reductions:

State 788:
## Known stack suffix:
## LeftBracket nonempty_list(tokenOrGroupSpec) RightBrace
## LR(1) items:
optionalGroup -> LeftBracket nonempty_list(tokenOrGroupSpec) RightBrace . [ UpperField Upper RightBrace LowerField LeftBracket Comma ]
## Transitions:
## Reductions:
-- On UpperField reduce production optionalGroup -> LeftBracket nonempty_list(tokenOrGroupSpec) RightBrace
-- On Upper reduce production optionalGroup -> LeftBracket nonempty_list(tokenOrGroupSpec) RightBrace
-- On RightBrace reduce production optionalGroup -> LeftBracket nonempty_list(tokenOrGroupSpec) RightBrace
-- On LowerField reduce production optionalGroup -> LeftBracket nonempty_list(tokenOrGroupSpec) RightBrace
-- On LeftBracket reduce production optionalGroup -> LeftBracket nonempty_list(tokenOrGroupSpec) RightBrace
-- On Comma reduce production optionalGroup -> LeftBracket nonempty_list(tokenOrGroupSpec) RightBrace

State 789:
## Known stack suffix:
## LeftBrace nonempty_list(tokenOrGroupSpec)
## LR(1) items:
syntaxList -> LeftBrace nonempty_list(tokenOrGroupSpec) . RightBrace [ Upper Lower END ]
## Transitions:
-- On RightBrace shift to state 790
## Reductions:

State 790:
## Known stack suffix:
## LeftBrace nonempty_list(tokenOrGroupSpec) RightBrace
## LR(1) items:
syntaxList -> LeftBrace nonempty_list(tokenOrGroupSpec) RightBrace . [ Upper Lower END ]
## Transitions:
## Reductions:
-- On Upper reduce production syntaxList -> LeftBrace nonempty_list(tokenOrGroupSpec) RightBrace
-- On Lower reduce production syntaxList -> LeftBrace nonempty_list(tokenOrGroupSpec) RightBrace
-- On END reduce production syntaxList -> LeftBrace nonempty_list(tokenOrGroupSpec) RightBrace

State 791:
## Known stack suffix:
## WITH SYNTAX syntaxList
## LR(1) items:
withSyntaxSpec -> WITH SYNTAX syntaxList . [ Upper Lower END ]
## Transitions:
## Reductions:
-- On Upper reduce production withSyntaxSpec -> WITH SYNTAX syntaxList
-- On Lower reduce production withSyntaxSpec -> WITH SYNTAX syntaxList
-- On END reduce production withSyntaxSpec -> WITH SYNTAX syntaxList

State 792:
## Known stack suffix:
## withSyntaxSpec
## LR(1) items:
option(withSyntaxSpec) -> withSyntaxSpec . [ Upper Lower END ]
## Transitions:
## Reductions:
-- On Upper reduce production option(withSyntaxSpec) -> withSyntaxSpec
-- On Lower reduce production option(withSyntaxSpec) -> withSyntaxSpec
-- On END reduce production option(withSyntaxSpec) -> withSyntaxSpec

State 793:
## Known stack suffix:
## CLASS LeftBrace separated_nonempty_list(Comma,fieldSpec) RightBrace option(withSyntaxSpec)
## LR(1) items:
objectClassDefn -> CLASS LeftBrace separated_nonempty_list(Comma,fieldSpec) RightBrace option(withSyntaxSpec) . [ Upper Lower END ]
## Transitions:
## Reductions:
-- On Upper reduce production objectClassDefn -> CLASS LeftBrace separated_nonempty_list(Comma,fieldSpec) RightBrace option(withSyntaxSpec)
-- On Lower reduce production objectClassDefn -> CLASS LeftBrace separated_nonempty_list(Comma,fieldSpec) RightBrace option(withSyntaxSpec)
-- On END reduce production objectClassDefn -> CLASS LeftBrace separated_nonempty_list(Comma,fieldSpec) RightBrace option(withSyntaxSpec)

State 794:
## Known stack suffix:
## objectSetFieldSpec
## LR(1) items:
fieldSpec -> objectSetFieldSpec . [ RightBrace Comma ]
## Transitions:
## Reductions:
-- On RightBrace reduce production fieldSpec -> objectSetFieldSpec
-- On Comma reduce production fieldSpec -> objectSetFieldSpec

State 795:
## Known stack suffix:
## objectFieldSpec
## LR(1) items:
fieldSpec -> objectFieldSpec . [ RightBrace Comma ]
## Transitions:
## Reductions:
-- On RightBrace reduce production fieldSpec -> objectFieldSpec
-- On Comma reduce production fieldSpec -> objectFieldSpec

State 796:
## Known stack suffix:
## fixedTypeValueSetFieldSpec
## LR(1) items:
fieldSpec -> fixedTypeValueSetFieldSpec . [ RightBrace Comma ]
## Transitions:
## Reductions:
-- On RightBrace reduce production fieldSpec -> fixedTypeValueSetFieldSpec
-- On Comma reduce production fieldSpec -> fixedTypeValueSetFieldSpec

State 797:
## Known stack suffix:
## fixedTypeValueFieldSpec
## LR(1) items:
fieldSpec -> fixedTypeValueFieldSpec . [ RightBrace Comma ]
## Transitions:
## Reductions:
-- On RightBrace reduce production fieldSpec -> fixedTypeValueFieldSpec
-- On Comma reduce production fieldSpec -> fixedTypeValueFieldSpec

State 798:
## Known stack suffix:
## fieldSpec
## LR(1) items:
separated_nonempty_list(Comma,fieldSpec) -> fieldSpec . [ RightBrace ]
separated_nonempty_list(Comma,fieldSpec) -> fieldSpec . Comma separated_nonempty_list(Comma,fieldSpec) [ RightBrace ]
## Transitions:
-- On Comma shift to state 799
## Reductions:
-- On RightBrace reduce production separated_nonempty_list(Comma,fieldSpec) -> fieldSpec

State 799:
## Known stack suffix:
## fieldSpec Comma
## LR(1) items:
separated_nonempty_list(Comma,fieldSpec) -> fieldSpec Comma . separated_nonempty_list(Comma,fieldSpec) [ RightBrace ]
## Transitions:
-- On UpperField shift to state 723
-- On LowerField shift to state 745
-- On variableTypeValueSetFieldSpec shift to state 770
-- On variableTypeValueFieldSpec shift to state 771
-- On typeFieldSpec shift to state 772
-- On separated_nonempty_list(Comma,fieldSpec) shift to state 800
-- On objectSetFieldSpec shift to state 794
-- On objectFieldSpec shift to state 795
-- On fixedTypeValueSetFieldSpec shift to state 796
-- On fixedTypeValueFieldSpec shift to state 797
-- On fieldSpec shift to state 798
## Reductions:

State 800:
## Known stack suffix:
## fieldSpec Comma separated_nonempty_list(Comma,fieldSpec)
## LR(1) items:
separated_nonempty_list(Comma,fieldSpec) -> fieldSpec Comma separated_nonempty_list(Comma,fieldSpec) . [ RightBrace ]
## Transitions:
## Reductions:
-- On RightBrace reduce production separated_nonempty_list(Comma,fieldSpec) -> fieldSpec Comma separated_nonempty_list(Comma,fieldSpec)

State 801:
## Known stack suffix:
## Upper Assignment type_x
## LR(1) items:
constrainedType -> type_x . constraint_x [ Upper Lower LeftParen END ]
typeAssignment -> Upper Assignment type_x . [ Upper Lower END ]
## Transitions:
-- On LeftParen shift to state 81
-- On constraint_x shift to state 206
## Reductions:
-- On Upper reduce production typeAssignment -> Upper Assignment type_x
-- On Lower reduce production typeAssignment -> Upper Assignment type_x
-- On END reduce production typeAssignment -> Upper Assignment type_x

State 802:
## Known stack suffix:
## parameterizedObjectClass
## LR(1) items:
objectClass -> parameterizedObjectClass . [ Upper Lower END ]
## Transitions:
## Reductions:
-- On Upper reduce production objectClass -> parameterizedObjectClass
-- On Lower reduce production objectClass -> parameterizedObjectClass
-- On END reduce production objectClass -> parameterizedObjectClass

State 803:
## Known stack suffix:
## objectClassDefn
## LR(1) items:
objectClass -> objectClassDefn . [ Upper Lower END ]
## Transitions:
## Reductions:
-- On Upper reduce production objectClass -> objectClassDefn
-- On Lower reduce production objectClass -> objectClassDefn
-- On END reduce production objectClass -> objectClassDefn

State 804:
## Known stack suffix:
## Upper Assignment objectClass
## LR(1) items:
objectClassAssignment -> Upper Assignment objectClass . [ Upper Lower END ]
## Transitions:
## Reductions:
-- On Upper reduce production objectClassAssignment -> Upper Assignment objectClass
-- On Lower reduce production objectClassAssignment -> Upper Assignment objectClass
-- On END reduce production objectClassAssignment -> Upper Assignment objectClass

State 805:
## Known stack suffix:
## definedObjectSet
## LR(1) items:
parameterizedObjectClass -> definedObjectSet . actualParameterList [ Upper Lower END ]
parameterizedObjectSet -> definedObjectSet . actualParameterList [ Dot ]
referencedObjects -> definedObjectSet . [ Dot ]
## Transitions:
-- On LeftBrace shift to state 65
-- On actualParameterList shift to state 806
## Reductions:
-- On Dot reduce production referencedObjects -> definedObjectSet

State 806:
## Known stack suffix:
## definedObjectSet actualParameterList
## LR(1) items:
parameterizedObjectClass -> definedObjectSet actualParameterList . [ Upper Lower END ]
parameterizedObjectSet -> definedObjectSet actualParameterList . [ Dot ]
## Transitions:
## Reductions:
-- On Upper reduce production parameterizedObjectClass -> definedObjectSet actualParameterList
-- On Lower reduce production parameterizedObjectClass -> definedObjectSet actualParameterList
-- On END reduce production parameterizedObjectClass -> definedObjectSet actualParameterList
-- On Dot reduce production parameterizedObjectSet -> definedObjectSet actualParameterList

State 807:
## Known stack suffix:
## definedObjectClass
## LR(1) items:
objectClass -> definedObjectClass . [ Upper Lower END ]
objectClassFieldType -> definedObjectClass . Dot fieldName [ Upper Lower LeftParen END ]
## Transitions:
-- On Dot shift to state 253
## Reductions:
-- On Upper reduce production objectClass -> definedObjectClass
-- On Lower reduce production objectClass -> definedObjectClass
-- On END reduce production objectClass -> definedObjectClass

State 808:
## Known stack suffix:
## Upper type_x
## LR(1) items:
constrainedType -> type_x . constraint_x [ LeftParen Assignment ]
valueSetTypeAssignment -> Upper type_x . Assignment valueSet [ Upper Lower END ]
## Transitions:
-- On LeftParen shift to state 81
-- On Assignment shift to state 809
-- On constraint_x shift to state 206
## Reductions:

State 809:
## Known stack suffix:
## Upper type_x Assignment
## LR(1) items:
valueSetTypeAssignment -> Upper type_x Assignment . valueSet [ Upper Lower END ]
## Transitions:
-- On LeftBrace shift to state 730
-- On valueSet shift to state 810
## Reductions:

State 810:
## Known stack suffix:
## Upper type_x Assignment valueSet
## LR(1) items:
valueSetTypeAssignment -> Upper type_x Assignment valueSet . [ Upper Lower END ]
## Transitions:
## Reductions:
-- On Upper reduce production valueSetTypeAssignment -> Upper type_x Assignment valueSet
-- On Lower reduce production valueSetTypeAssignment -> Upper type_x Assignment valueSet
-- On END reduce production valueSetTypeAssignment -> Upper type_x Assignment valueSet

State 811:
## Known stack suffix:
## Upper parameterList
## LR(1) items:
parameterizedObjectClassAssignment -> Upper parameterList . Assignment objectClass [ Upper Lower END ]
parameterizedObjectSetAssignment -> Upper parameterList . definedObjectClass Assignment objectSet [ Upper Lower END ]
parameterizedTypeAssignment -> Upper parameterList . Assignment type_x [ Upper Lower END ]
parameterizedValueSetTypeAssignment -> Upper parameterList . type_x Assignment valueSet [ Upper Lower END ]
## Transitions:
-- On VisibleString shift to state 66
-- On VideotexString shift to state 67
-- On Upper shift to state 113
-- On UniversalString shift to state 72
-- On UTF8String shift to state 73
-- On UTCTime shift to state 74
-- On TeletexString shift to state 75
-- On TYPE_IDENTIFIER shift to state 76
-- On T61String shift to state 78
-- On SET shift to state 79
-- On SEQUENCE shift to state 111
-- On RELATIVE_OID shift to state 116
-- On REAL shift to state 117
-- On PrintableString shift to state 118
-- On ObjectDescriptor shift to state 119
-- On OCTET shift to state 120
-- On OBJECT shift to state 122
-- On NumericString shift to state 124
-- On NULL shift to state 125
-- On Lower shift to state 127
-- On LeftBracket shift to state 129
-- On ISO646String shift to state 140
-- On INTEGER shift to state 141
-- On INSTANCE shift to state 157
-- On IA5String shift to state 166
-- On GraphicString shift to state 167
-- On GeneralizedTime shift to state 168
-- On GeneralString shift to state 169
-- On EXTERNAL shift to state 170
-- On ENUMERATED shift to state 171
-- On EMBEDDED shift to state 179
-- On CHOICE shift to state 181
-- On CHARACTER shift to state 184
-- On BOOLEAN shift to state 186
-- On BMPString shift to state 187
-- On BIT shift to state 188
-- On Assignment shift to state 812
-- On ABSTRACT_SYNTAX shift to state 162
-- On valueSetFromObjects shift to state 202
-- On usefulType shift to state 203
-- On usefulObjectClassReference shift to state 163
-- On unrestrictedCharacterStringType shift to state 204
-- On type_x shift to state 815
-- On typeWithConstraint shift to state 207
-- On typeFromObject shift to state 208
-- On taggedType shift to state 209
-- On tag shift to state 210
-- On simpleDefinedType shift to state 213
-- On setType shift to state 215
-- On setOfType shift to state 216
-- On sequenceType shift to state 217
-- On sequenceOfType shift to state 218
-- On selectionType shift to state 219
-- On restrictedCharacterStringType shift to state 220
-- On relativeOIDType shift to state 221
-- On referencedType shift to state 222
-- On referencedObjects shift to state 223
-- On realType shift to state 232
-- On parameterizedValueSetType shift to state 233
-- On parameterizedType shift to state 234
-- On parameterizedObjectSet shift to state 235
-- On parameterizedObject shift to state 236
-- On octetStringType shift to state 237
-- On objectIdentifierType shift to state 238
-- On objectClassFieldType shift to state 239
-- On nullType shift to state 240
-- On integerType shift to state 241
-- On instanceOfType shift to state 242
-- On externalTypeReference shift to state 243
-- On externalType shift to state 244
-- On externalObjectSetReference shift to state 245
-- On externalObjectReference shift to state 246
-- On externalObjectClassReference shift to state 164
-- On enumeratedType shift to state 247
-- On embeddedPDVType shift to state 248
-- On definedType shift to state 249
-- On definedObjectSet shift to state 250
-- On definedObjectClass shift to state 818
-- On definedObject shift to state 255
-- On constrainedType shift to state 257
-- On choiceType shift to state 258
-- On characterStringType shift to state 259
-- On builtinType shift to state 260
-- On booleanType shift to state 261
-- On bitStringType shift to state 262
## Reductions:

State 812:
## Known stack suffix:
## Upper parameterList Assignment
## LR(1) items:
parameterizedObjectClassAssignment -> Upper parameterList Assignment . objectClass [ Upper Lower END ]
parameterizedTypeAssignment -> Upper parameterList Assignment . type_x [ Upper Lower END ]
## Transitions:
-- On VisibleString shift to state 66
-- On VideotexString shift to state 67
-- On Upper shift to state 113
-- On UniversalString shift to state 72
-- On UTF8String shift to state 73
-- On UTCTime shift to state 74
-- On TeletexString shift to state 75
-- On TYPE_IDENTIFIER shift to state 76
-- On T61String shift to state 78
-- On SET shift to state 79
-- On SEQUENCE shift to state 111
-- On RELATIVE_OID shift to state 116
-- On REAL shift to state 117
-- On PrintableString shift to state 118
-- On ObjectDescriptor shift to state 119
-- On OCTET shift to state 120
-- On OBJECT shift to state 122
-- On NumericString shift to state 124
-- On NULL shift to state 125
-- On Lower shift to state 127
-- On LeftBracket shift to state 129
-- On ISO646String shift to state 140
-- On INTEGER shift to state 141
-- On INSTANCE shift to state 157
-- On IA5String shift to state 166
-- On GraphicString shift to state 167
-- On GeneralizedTime shift to state 168
-- On GeneralString shift to state 169
-- On EXTERNAL shift to state 170
-- On ENUMERATED shift to state 171
-- On EMBEDDED shift to state 179
-- On CLASS shift to state 721
-- On CHOICE shift to state 181
-- On CHARACTER shift to state 184
-- On BOOLEAN shift to state 186
-- On BMPString shift to state 187
-- On BIT shift to state 188
-- On ABSTRACT_SYNTAX shift to state 162
-- On valueSetFromObjects shift to state 202
-- On usefulType shift to state 203
-- On usefulObjectClassReference shift to state 163
-- On unrestrictedCharacterStringType shift to state 204
-- On type_x shift to state 813
-- On typeWithConstraint shift to state 207
-- On typeFromObject shift to state 208
-- On taggedType shift to state 209
-- On tag shift to state 210
-- On simpleDefinedType shift to state 213
-- On setType shift to state 215
-- On setOfType shift to state 216
-- On sequenceType shift to state 217
-- On sequenceOfType shift to state 218
-- On selectionType shift to state 219
-- On restrictedCharacterStringType shift to state 220
-- On relativeOIDType shift to state 221
-- On referencedType shift to state 222
-- On referencedObjects shift to state 223
-- On realType shift to state 232
-- On parameterizedValueSetType shift to state 233
-- On parameterizedType shift to state 234
-- On parameterizedObjectSet shift to state 235
-- On parameterizedObjectClass shift to state 802
-- On parameterizedObject shift to state 236
-- On octetStringType shift to state 237
-- On objectIdentifierType shift to state 238
-- On objectClassFieldType shift to state 239
-- On objectClassDefn shift to state 803
-- On objectClass shift to state 814
-- On nullType shift to state 240
-- On integerType shift to state 241
-- On instanceOfType shift to state 242
-- On externalTypeReference shift to state 243
-- On externalType shift to state 244
-- On externalObjectSetReference shift to state 245
-- On externalObjectReference shift to state 246
-- On externalObjectClassReference shift to state 164
-- On enumeratedType shift to state 247
-- On embeddedPDVType shift to state 248
-- On definedType shift to state 249
-- On definedObjectSet shift to state 805
-- On definedObjectClass shift to state 807
-- On definedObject shift to state 255
-- On constrainedType shift to state 257
-- On choiceType shift to state 258
-- On characterStringType shift to state 259
-- On builtinType shift to state 260
-- On booleanType shift to state 261
-- On bitStringType shift to state 262
## Reductions:

State 813:
## Known stack suffix:
## Upper parameterList Assignment type_x
## LR(1) items:
constrainedType -> type_x . constraint_x [ Upper Lower LeftParen END ]
parameterizedTypeAssignment -> Upper parameterList Assignment type_x . [ Upper Lower END ]
## Transitions:
-- On LeftParen shift to state 81
-- On constraint_x shift to state 206
## Reductions:
-- On Upper reduce production parameterizedTypeAssignment -> Upper parameterList Assignment type_x
-- On Lower reduce production parameterizedTypeAssignment -> Upper parameterList Assignment type_x
-- On END reduce production parameterizedTypeAssignment -> Upper parameterList Assignment type_x

State 814:
## Known stack suffix:
## Upper parameterList Assignment objectClass
## LR(1) items:
parameterizedObjectClassAssignment -> Upper parameterList Assignment objectClass . [ Upper Lower END ]
## Transitions:
## Reductions:
-- On Upper reduce production parameterizedObjectClassAssignment -> Upper parameterList Assignment objectClass
-- On Lower reduce production parameterizedObjectClassAssignment -> Upper parameterList Assignment objectClass
-- On END reduce production parameterizedObjectClassAssignment -> Upper parameterList Assignment objectClass

State 815:
## Known stack suffix:
## Upper parameterList type_x
## LR(1) items:
constrainedType -> type_x . constraint_x [ LeftParen Assignment ]
parameterizedValueSetTypeAssignment -> Upper parameterList type_x . Assignment valueSet [ Upper Lower END ]
## Transitions:
-- On LeftParen shift to state 81
-- On Assignment shift to state 816
-- On constraint_x shift to state 206
## Reductions:

State 816:
## Known stack suffix:
## Upper parameterList type_x Assignment
## LR(1) items:
parameterizedValueSetTypeAssignment -> Upper parameterList type_x Assignment . valueSet [ Upper Lower END ]
## Transitions:
-- On LeftBrace shift to state 730
-- On valueSet shift to state 817
## Reductions:

State 817:
## Known stack suffix:
## Upper parameterList type_x Assignment valueSet
## LR(1) items:
parameterizedValueSetTypeAssignment -> Upper parameterList type_x Assignment valueSet . [ Upper Lower END ]
## Transitions:
## Reductions:
-- On Upper reduce production parameterizedValueSetTypeAssignment -> Upper parameterList type_x Assignment valueSet
-- On Lower reduce production parameterizedValueSetTypeAssignment -> Upper parameterList type_x Assignment valueSet
-- On END reduce production parameterizedValueSetTypeAssignment -> Upper parameterList type_x Assignment valueSet

State 818:
## Known stack suffix:
## Upper parameterList definedObjectClass
## LR(1) items:
objectClassFieldType -> definedObjectClass . Dot fieldName [ LeftParen Assignment ]
parameterizedObjectSetAssignment -> Upper parameterList definedObjectClass . Assignment objectSet [ Upper Lower END ]
## Transitions:
-- On Dot shift to state 253
-- On Assignment shift to state 819
## Reductions:

State 819:
## Known stack suffix:
## Upper parameterList definedObjectClass Assignment
## LR(1) items:
parameterizedObjectSetAssignment -> Upper parameterList definedObjectClass Assignment . objectSet [ Upper Lower END ]
## Transitions:
-- On LeftBrace shift to state 741
-- On objectSet shift to state 820
## Reductions:

State 820:
## Known stack suffix:
## Upper parameterList definedObjectClass Assignment objectSet
## LR(1) items:
parameterizedObjectSetAssignment -> Upper parameterList definedObjectClass Assignment objectSet . [ Upper Lower END ]
## Transitions:
## Reductions:
-- On Upper reduce production parameterizedObjectSetAssignment -> Upper parameterList definedObjectClass Assignment objectSet
-- On Lower reduce production parameterizedObjectSetAssignment -> Upper parameterList definedObjectClass Assignment objectSet
-- On END reduce production parameterizedObjectSetAssignment -> Upper parameterList definedObjectClass Assignment objectSet

State 821:
## Known stack suffix:
## Upper definedObjectClass
## LR(1) items:
objectClassFieldType -> definedObjectClass . Dot fieldName [ LeftParen Assignment ]
objectSetAssignment -> Upper definedObjectClass . Assignment objectSet [ Upper Lower END ]
## Transitions:
-- On Dot shift to state 253
-- On Assignment shift to state 822
## Reductions:

State 822:
## Known stack suffix:
## Upper definedObjectClass Assignment
## LR(1) items:
objectSetAssignment -> Upper definedObjectClass Assignment . objectSet [ Upper Lower END ]
## Transitions:
-- On LeftBrace shift to state 741
-- On objectSet shift to state 823
## Reductions:

State 823:
## Known stack suffix:
## Upper definedObjectClass Assignment objectSet
## LR(1) items:
objectSetAssignment -> Upper definedObjectClass Assignment objectSet . [ Upper Lower END ]
## Transitions:
## Reductions:
-- On Upper reduce production objectSetAssignment -> Upper definedObjectClass Assignment objectSet
-- On Lower reduce production objectSetAssignment -> Upper definedObjectClass Assignment objectSet
-- On END reduce production objectSetAssignment -> Upper definedObjectClass Assignment objectSet

State 824:
## Known stack suffix:
## Lower
## LR(1) items:
objectAssignment -> Lower . definedObjectClass Assignment object_x [ Upper Lower END ]
parameterizedObjectAssignment -> Lower . parameterList definedObjectClass Assignment object_x [ Upper Lower END ]
parameterizedValueAssignment -> Lower . parameterList type_x Assignment value [ Upper Lower END ]
valueAssignment -> Lower . type_x Assignment value [ Upper Lower END ]
## Transitions:
-- On VisibleString shift to state 66
-- On VideotexString shift to state 67
-- On Upper shift to state 113
-- On UniversalString shift to state 72
-- On UTF8String shift to state 73
-- On UTCTime shift to state 74
-- On TeletexString shift to state 75
-- On TYPE_IDENTIFIER shift to state 76
-- On T61String shift to state 78
-- On SET shift to state 79
-- On SEQUENCE shift to state 111
-- On RELATIVE_OID shift to state 116
-- On REAL shift to state 117
-- On PrintableString shift to state 118
-- On ObjectDescriptor shift to state 119
-- On OCTET shift to state 120
-- On OBJECT shift to state 122
-- On NumericString shift to state 124
-- On NULL shift to state 125
-- On Lower shift to state 127
-- On LeftBracket shift to state 129
-- On LeftBrace shift to state 703
-- On ISO646String shift to state 140
-- On INTEGER shift to state 141
-- On INSTANCE shift to state 157
-- On IA5String shift to state 166
-- On GraphicString shift to state 167
-- On GeneralizedTime shift to state 168
-- On GeneralString shift to state 169
-- On EXTERNAL shift to state 170
-- On ENUMERATED shift to state 171
-- On EMBEDDED shift to state 179
-- On CHOICE shift to state 181
-- On CHARACTER shift to state 184
-- On BOOLEAN shift to state 186
-- On BMPString shift to state 187
-- On BIT shift to state 188
-- On ABSTRACT_SYNTAX shift to state 162
-- On valueSetFromObjects shift to state 202
-- On usefulType shift to state 203
-- On usefulObjectClassReference shift to state 163
-- On unrestrictedCharacterStringType shift to state 204
-- On type_x shift to state 825
-- On typeWithConstraint shift to state 207
-- On typeFromObject shift to state 208
-- On taggedType shift to state 209
-- On tag shift to state 210
-- On simpleDefinedType shift to state 213
-- On setType shift to state 215
-- On setOfType shift to state 216
-- On sequenceType shift to state 217
-- On sequenceOfType shift to state 218
-- On selectionType shift to state 219
-- On restrictedCharacterStringType shift to state 220
-- On relativeOIDType shift to state 221
-- On referencedType shift to state 222
-- On referencedObjects shift to state 223
-- On realType shift to state 232
-- On parameterizedValueSetType shift to state 233
-- On parameterizedType shift to state 234
-- On parameterizedObjectSet shift to state 235
-- On parameterizedObject shift to state 236
-- On parameterList shift to state 828
-- On octetStringType shift to state 237
-- On objectIdentifierType shift to state 238
-- On objectClassFieldType shift to state 239
-- On nullType shift to state 240
-- On integerType shift to state 241
-- On instanceOfType shift to state 242
-- On externalTypeReference shift to state 243
-- On externalType shift to state 244
-- On externalObjectSetReference shift to state 245
-- On externalObjectReference shift to state 246
-- On externalObjectClassReference shift to state 164
-- On enumeratedType shift to state 247
-- On embeddedPDVType shift to state 248
-- On definedType shift to state 249
-- On definedObjectSet shift to state 250
-- On definedObjectClass shift to state 835
-- On definedObject shift to state 255
-- On constrainedType shift to state 257
-- On choiceType shift to state 258
-- On characterStringType shift to state 259
-- On builtinType shift to state 260
-- On booleanType shift to state 261
-- On bitStringType shift to state 262
## Reductions:

State 825:
## Known stack suffix:
## Lower type_x
## LR(1) items:
constrainedType -> type_x . constraint_x [ LeftParen Assignment ]
valueAssignment -> Lower type_x . Assignment value [ Upper Lower END ]
## Transitions:
-- On LeftParen shift to state 81
-- On Assignment shift to state 826
-- On constraint_x shift to state 206
## Reductions:

State 826:
## Known stack suffix:
## Lower type_x Assignment
## LR(1) items:
valueAssignment -> Lower type_x Assignment . value [ Upper Lower END ]
## Transitions:
-- On VisibleString shift to state 66
-- On VideotexString shift to state 67
-- On Upper shift to state 108
-- On UniversalString shift to state 72
-- On UTF8String shift to state 73
-- On UTCTime shift to state 74
-- On TeletexString shift to state 75
-- On TYPE_IDENTIFIER shift to state 76
-- On TRUE shift to state 77
-- On T61String shift to state 78
-- On SET shift to state 79
-- On SEQUENCE shift to state 111
-- On RealNumber shift to state 296
-- On RELATIVE_OID shift to state 116
-- On REAL shift to state 117
-- On PrintableString shift to state 118
-- On PLUS_INFINITY shift to state 297
-- On ObjectDescriptor shift to state 119
-- On OCTET shift to state 120
-- On OBJECT shift to state 122
-- On NumericString shift to state 124
-- On Number shift to state 145
-- On NULL shift to state 298
-- On MINUS_INFINITY shift to state 299
-- On Lower shift to state 300
-- On LeftBracket shift to state 129
-- On LeftBrace shift to state 302
-- On ISO646String shift to state 140
-- On INTEGER shift to state 141
-- On INSTANCE shift to state 157
-- On IA5String shift to state 166
-- On Hyphen shift to state 306
-- On Hstring shift to state 308
-- On GraphicString shift to state 167
-- On GeneralizedTime shift to state 168
-- On GeneralString shift to state 169
-- On FALSE shift to state 309
-- On EXTERNAL shift to state 170
-- On ENUMERATED shift to state 171
-- On EMBEDDED shift to state 179
-- On Cstring shift to state 310
-- On CONTAINING shift to state 311
-- On CHOICE shift to state 181
-- On CHARACTER shift to state 184
-- On Bstring shift to state 312
-- On BOOLEAN shift to state 186
-- On BMPString shift to state 187
-- On BIT shift to state 188
-- On ABSTRACT_SYNTAX shift to state 162
-- On valueSetFromObjects shift to state 202
-- On valueFromObject shift to state 313
-- On value shift to state 827
-- On usefulType shift to state 203
-- On usefulObjectClassReference shift to state 163
-- On unrestrictedCharacterStringValue shift to state 315
-- On unrestrictedCharacterStringType shift to state 204
-- On type_x shift to state 316
-- On typeWithConstraint shift to state 207
-- On typeFromObject shift to state 208
-- On tuple shift to state 319
-- On taggedType shift to state 209
-- On tag shift to state 210
-- On specialRealValue shift to state 320
-- On simpleDefinedValue shift to state 64
-- On simpleDefinedType shift to state 213
-- On signedNumber shift to state 321
-- On setValue shift to state 322
-- On setType shift to state 215
-- On setOfValue shift to state 323
-- On setOfType shift to state 216
-- On sequenceValue shift to state 324
-- On sequenceType shift to state 217
-- On sequenceOfValue shift to state 325
-- On sequenceOfType shift to state 218
-- On selectionType shift to state 219
-- On restrictedCharacterStringValue shift to state 326
-- On restrictedCharacterStringType shift to state 220
-- On relativeOIDValue shift to state 327
-- On relativeOIDType shift to state 221
-- On referencedValue shift to state 328
-- On referencedType shift to state 222
-- On referencedObjects shift to state 329
-- On realValue shift to state 332
-- On realType shift to state 232
-- On quadruple shift to state 333
-- On parameterizedValueSetType shift to state 233
-- On parameterizedValue shift to state 135
-- On parameterizedType shift to state 234
-- On parameterizedObjectSet shift to state 235
-- On parameterizedObject shift to state 236
-- On openTypeFieldVal shift to state 334
-- On octetStringValue shift to state 335
-- On octetStringType shift to state 237
-- On objectIdentifierValue shift to state 336
-- On objectIdentifierType shift to state 238
-- On objectClassFieldValue shift to state 337
-- On objectClassFieldType shift to state 239
-- On numericRealValue shift to state 338
-- On nullValue shift to state 339
-- On nullType shift to state 240
-- On integerValue shift to state 340
-- On integerType shift to state 241
-- On instanceOfType shift to state 242
-- On fixedTypeFieldVal shift to state 341
-- On externalValueReference shift to state 136
-- On externalValue shift to state 342
-- On externalTypeReference shift to state 243
-- On externalType shift to state 244
-- On externalObjectSetReference shift to state 245
-- On externalObjectReference shift to state 246
-- On externalObjectClassReference shift to state 164
-- On enumeratedValue shift to state 343
-- On enumeratedType shift to state 247
-- On embeddedPDVValue shift to state 344
-- On embeddedPDVType shift to state 248
-- On definedValue shift to state 345
-- On definedType shift to state 249
-- On definedObjectSet shift to state 250
-- On definedObjectClass shift to state 252
-- On definedObject shift to state 255
-- On constrainedType shift to state 257
-- On choiceValue shift to state 346
-- On choiceType shift to state 258
-- On characterStringValue shift to state 347
-- On characterStringType shift to state 259
-- On characterStringList shift to state 348
-- On builtinValue shift to state 349
-- On builtinType shift to state 260
-- On booleanValue shift to state 350
-- On booleanType shift to state 261
-- On bitStringValue shift to state 351
-- On bitStringType shift to state 262
## Reductions:

State 827:
## Known stack suffix:
## Lower type_x Assignment value
## LR(1) items:
valueAssignment -> Lower type_x Assignment value . [ Upper Lower END ]
## Transitions:
## Reductions:
-- On Upper reduce production valueAssignment -> Lower type_x Assignment value
-- On Lower reduce production valueAssignment -> Lower type_x Assignment value
-- On END reduce production valueAssignment -> Lower type_x Assignment value

State 828:
## Known stack suffix:
## Lower parameterList
## LR(1) items:
parameterizedObjectAssignment -> Lower parameterList . definedObjectClass Assignment object_x [ Upper Lower END ]
parameterizedValueAssignment -> Lower parameterList . type_x Assignment value [ Upper Lower END ]
## Transitions:
-- On VisibleString shift to state 66
-- On VideotexString shift to state 67
-- On Upper shift to state 113
-- On UniversalString shift to state 72
-- On UTF8String shift to state 73
-- On UTCTime shift to state 74
-- On TeletexString shift to state 75
-- On TYPE_IDENTIFIER shift to state 76
-- On T61String shift to state 78
-- On SET shift to state 79
-- On SEQUENCE shift to state 111
-- On RELATIVE_OID shift to state 116
-- On REAL shift to state 117
-- On PrintableString shift to state 118
-- On ObjectDescriptor shift to state 119
-- On OCTET shift to state 120
-- On OBJECT shift to state 122
-- On NumericString shift to state 124
-- On NULL shift to state 125
-- On Lower shift to state 127
-- On LeftBracket shift to state 129
-- On ISO646String shift to state 140
-- On INTEGER shift to state 141
-- On INSTANCE shift to state 157
-- On IA5String shift to state 166
-- On GraphicString shift to state 167
-- On GeneralizedTime shift to state 168
-- On GeneralString shift to state 169
-- On EXTERNAL shift to state 170
-- On ENUMERATED shift to state 171
-- On EMBEDDED shift to state 179
-- On CHOICE shift to state 181
-- On CHARACTER shift to state 184
-- On BOOLEAN shift to state 186
-- On BMPString shift to state 187
-- On BIT shift to state 188
-- On ABSTRACT_SYNTAX shift to state 162
-- On valueSetFromObjects shift to state 202
-- On usefulType shift to state 203
-- On usefulObjectClassReference shift to state 163
-- On unrestrictedCharacterStringType shift to state 204
-- On type_x shift to state 829
-- On typeWithConstraint shift to state 207
-- On typeFromObject shift to state 208
-- On taggedType shift to state 209
-- On tag shift to state 210
-- On simpleDefinedType shift to state 213
-- On setType shift to state 215
-- On setOfType shift to state 216
-- On sequenceType shift to state 217
-- On sequenceOfType shift to state 218
-- On selectionType shift to state 219
-- On restrictedCharacterStringType shift to state 220
-- On relativeOIDType shift to state 221
-- On referencedType shift to state 222
-- On referencedObjects shift to state 223
-- On realType shift to state 232
-- On parameterizedValueSetType shift to state 233
-- On parameterizedType shift to state 234
-- On parameterizedObjectSet shift to state 235
-- On parameterizedObject shift to state 236
-- On octetStringType shift to state 237
-- On objectIdentifierType shift to state 238
-- On objectClassFieldType shift to state 239
-- On nullType shift to state 240
-- On integerType shift to state 241
-- On instanceOfType shift to state 242
-- On externalTypeReference shift to state 243
-- On externalType shift to state 244
-- On externalObjectSetReference shift to state 245
-- On externalObjectReference shift to state 246
-- On externalObjectClassReference shift to state 164
-- On enumeratedType shift to state 247
-- On embeddedPDVType shift to state 248
-- On definedType shift to state 249
-- On definedObjectSet shift to state 250
-- On definedObjectClass shift to state 832
-- On definedObject shift to state 255
-- On constrainedType shift to state 257
-- On choiceType shift to state 258
-- On characterStringType shift to state 259
-- On builtinType shift to state 260
-- On booleanType shift to state 261
-- On bitStringType shift to state 262
## Reductions:

State 829:
## Known stack suffix:
## Lower parameterList type_x
## LR(1) items:
constrainedType -> type_x . constraint_x [ LeftParen Assignment ]
parameterizedValueAssignment -> Lower parameterList type_x . Assignment value [ Upper Lower END ]
## Transitions:
-- On LeftParen shift to state 81
-- On Assignment shift to state 830
-- On constraint_x shift to state 206
## Reductions:

State 830:
## Known stack suffix:
## Lower parameterList type_x Assignment
## LR(1) items:
parameterizedValueAssignment -> Lower parameterList type_x Assignment . value [ Upper Lower END ]
## Transitions:
-- On VisibleString shift to state 66
-- On VideotexString shift to state 67
-- On Upper shift to state 108
-- On UniversalString shift to state 72
-- On UTF8String shift to state 73
-- On UTCTime shift to state 74
-- On TeletexString shift to state 75
-- On TYPE_IDENTIFIER shift to state 76
-- On TRUE shift to state 77
-- On T61String shift to state 78
-- On SET shift to state 79
-- On SEQUENCE shift to state 111
-- On RealNumber shift to state 296
-- On RELATIVE_OID shift to state 116
-- On REAL shift to state 117
-- On PrintableString shift to state 118
-- On PLUS_INFINITY shift to state 297
-- On ObjectDescriptor shift to state 119
-- On OCTET shift to state 120
-- On OBJECT shift to state 122
-- On NumericString shift to state 124
-- On Number shift to state 145
-- On NULL shift to state 298
-- On MINUS_INFINITY shift to state 299
-- On Lower shift to state 300
-- On LeftBracket shift to state 129
-- On LeftBrace shift to state 302
-- On ISO646String shift to state 140
-- On INTEGER shift to state 141
-- On INSTANCE shift to state 157
-- On IA5String shift to state 166
-- On Hyphen shift to state 306
-- On Hstring shift to state 308
-- On GraphicString shift to state 167
-- On GeneralizedTime shift to state 168
-- On GeneralString shift to state 169
-- On FALSE shift to state 309
-- On EXTERNAL shift to state 170
-- On ENUMERATED shift to state 171
-- On EMBEDDED shift to state 179
-- On Cstring shift to state 310
-- On CONTAINING shift to state 311
-- On CHOICE shift to state 181
-- On CHARACTER shift to state 184
-- On Bstring shift to state 312
-- On BOOLEAN shift to state 186
-- On BMPString shift to state 187
-- On BIT shift to state 188
-- On ABSTRACT_SYNTAX shift to state 162
-- On valueSetFromObjects shift to state 202
-- On valueFromObject shift to state 313
-- On value shift to state 831
-- On usefulType shift to state 203
-- On usefulObjectClassReference shift to state 163
-- On unrestrictedCharacterStringValue shift to state 315
-- On unrestrictedCharacterStringType shift to state 204
-- On type_x shift to state 316
-- On typeWithConstraint shift to state 207
-- On typeFromObject shift to state 208
-- On tuple shift to state 319
-- On taggedType shift to state 209
-- On tag shift to state 210
-- On specialRealValue shift to state 320
-- On simpleDefinedValue shift to state 64
-- On simpleDefinedType shift to state 213
-- On signedNumber shift to state 321
-- On setValue shift to state 322
-- On setType shift to state 215
-- On setOfValue shift to state 323
-- On setOfType shift to state 216
-- On sequenceValue shift to state 324
-- On sequenceType shift to state 217
-- On sequenceOfValue shift to state 325
-- On sequenceOfType shift to state 218
-- On selectionType shift to state 219
-- On restrictedCharacterStringValue shift to state 326
-- On restrictedCharacterStringType shift to state 220
-- On relativeOIDValue shift to state 327
-- On relativeOIDType shift to state 221
-- On referencedValue shift to state 328
-- On referencedType shift to state 222
-- On referencedObjects shift to state 329
-- On realValue shift to state 332
-- On realType shift to state 232
-- On quadruple shift to state 333
-- On parameterizedValueSetType shift to state 233
-- On parameterizedValue shift to state 135
-- On parameterizedType shift to state 234
-- On parameterizedObjectSet shift to state 235
-- On parameterizedObject shift to state 236
-- On openTypeFieldVal shift to state 334
-- On octetStringValue shift to state 335
-- On octetStringType shift to state 237
-- On objectIdentifierValue shift to state 336
-- On objectIdentifierType shift to state 238
-- On objectClassFieldValue shift to state 337
-- On objectClassFieldType shift to state 239
-- On numericRealValue shift to state 338
-- On nullValue shift to state 339
-- On nullType shift to state 240
-- On integerValue shift to state 340
-- On integerType shift to state 241
-- On instanceOfType shift to state 242
-- On fixedTypeFieldVal shift to state 341
-- On externalValueReference shift to state 136
-- On externalValue shift to state 342
-- On externalTypeReference shift to state 243
-- On externalType shift to state 244
-- On externalObjectSetReference shift to state 245
-- On externalObjectReference shift to state 246
-- On externalObjectClassReference shift to state 164
-- On enumeratedValue shift to state 343
-- On enumeratedType shift to state 247
-- On embeddedPDVValue shift to state 344
-- On embeddedPDVType shift to state 248
-- On definedValue shift to state 345
-- On definedType shift to state 249
-- On definedObjectSet shift to state 250
-- On definedObjectClass shift to state 252
-- On definedObject shift to state 255
-- On constrainedType shift to state 257
-- On choiceValue shift to state 346
-- On choiceType shift to state 258
-- On characterStringValue shift to state 347
-- On characterStringType shift to state 259
-- On characterStringList shift to state 348
-- On builtinValue shift to state 349
-- On builtinType shift to state 260
-- On booleanValue shift to state 350
-- On booleanType shift to state 261
-- On bitStringValue shift to state 351
-- On bitStringType shift to state 262
## Reductions:

State 831:
## Known stack suffix:
## Lower parameterList type_x Assignment value
## LR(1) items:
parameterizedValueAssignment -> Lower parameterList type_x Assignment value . [ Upper Lower END ]
## Transitions:
## Reductions:
-- On Upper reduce production parameterizedValueAssignment -> Lower parameterList type_x Assignment value
-- On Lower reduce production parameterizedValueAssignment -> Lower parameterList type_x Assignment value
-- On END reduce production parameterizedValueAssignment -> Lower parameterList type_x Assignment value

State 832:
## Known stack suffix:
## Lower parameterList definedObjectClass
## LR(1) items:
objectClassFieldType -> definedObjectClass . Dot fieldName [ LeftParen Assignment ]
parameterizedObjectAssignment -> Lower parameterList definedObjectClass . Assignment object_x [ Upper Lower END ]
## Transitions:
-- On Dot shift to state 253
-- On Assignment shift to state 833
## Reductions:

State 833:
## Known stack suffix:
## Lower parameterList definedObjectClass Assignment
## LR(1) items:
parameterizedObjectAssignment -> Lower parameterList definedObjectClass Assignment . object_x [ Upper Lower END ]
## Transitions:
-- On Upper shift to state 759
-- On Lower shift to state 762
-- On LeftBrace shift to state 763
-- On DefinedSyntax shift to state 508
-- On referencedObjects shift to state 764
-- On parameterizedObjectSet shift to state 235
-- On parameterizedObject shift to state 524
-- On object_x shift to state 834
-- On objectFromObject shift to state 528
-- On objectDefn shift to state 529
-- On externalObjectSetReference shift to state 245
-- On externalObjectReference shift to state 246
-- On definedObjectSet shift to state 250
-- On definedObject shift to state 545
-- On defaultSyntax shift to state 546
## Reductions:

State 834:
## Known stack suffix:
## Lower parameterList definedObjectClass Assignment object_x
## LR(1) items:
parameterizedObjectAssignment -> Lower parameterList definedObjectClass Assignment object_x . [ Upper Lower END ]
## Transitions:
## Reductions:
-- On Upper reduce production parameterizedObjectAssignment -> Lower parameterList definedObjectClass Assignment object_x
-- On Lower reduce production parameterizedObjectAssignment -> Lower parameterList definedObjectClass Assignment object_x
-- On END reduce production parameterizedObjectAssignment -> Lower parameterList definedObjectClass Assignment object_x

State 835:
## Known stack suffix:
## Lower definedObjectClass
## LR(1) items:
objectAssignment -> Lower definedObjectClass . Assignment object_x [ Upper Lower END ]
objectClassFieldType -> definedObjectClass . Dot fieldName [ LeftParen Assignment ]
## Transitions:
-- On Dot shift to state 253
-- On Assignment shift to state 836
## Reductions:

State 836:
## Known stack suffix:
## Lower definedObjectClass Assignment
## LR(1) items:
objectAssignment -> Lower definedObjectClass Assignment . object_x [ Upper Lower END ]
## Transitions:
-- On Upper shift to state 759
-- On Lower shift to state 762
-- On LeftBrace shift to state 763
-- On DefinedSyntax shift to state 508
-- On referencedObjects shift to state 764
-- On parameterizedObjectSet shift to state 235
-- On parameterizedObject shift to state 524
-- On object_x shift to state 837
-- On objectFromObject shift to state 528
-- On objectDefn shift to state 529
-- On externalObjectSetReference shift to state 245
-- On externalObjectReference shift to state 246
-- On definedObjectSet shift to state 250
-- On definedObject shift to state 545
-- On defaultSyntax shift to state 546
## Reductions:

State 837:
## Known stack suffix:
## Lower definedObjectClass Assignment object_x
## LR(1) items:
objectAssignment -> Lower definedObjectClass Assignment object_x . [ Upper Lower END ]
## Transitions:
## Reductions:
-- On Upper reduce production objectAssignment -> Lower definedObjectClass Assignment object_x
-- On Lower reduce production objectAssignment -> Lower definedObjectClass Assignment object_x
-- On END reduce production objectAssignment -> Lower definedObjectClass Assignment object_x

State 838:
## Known stack suffix:
## valueSetTypeAssignment
## LR(1) items:
assignment -> valueSetTypeAssignment . [ Upper Lower END ]
## Transitions:
## Reductions:
-- On Upper reduce production assignment -> valueSetTypeAssignment
-- On Lower reduce production assignment -> valueSetTypeAssignment
-- On END reduce production assignment -> valueSetTypeAssignment

State 839:
## Known stack suffix:
## valueAssignment
## LR(1) items:
assignment -> valueAssignment . [ Upper Lower END ]
## Transitions:
## Reductions:
-- On Upper reduce production assignment -> valueAssignment
-- On Lower reduce production assignment -> valueAssignment
-- On END reduce production assignment -> valueAssignment

State 840:
## Known stack suffix:
## typeAssignment
## LR(1) items:
assignment -> typeAssignment . [ Upper Lower END ]
## Transitions:
## Reductions:
-- On Upper reduce production assignment -> typeAssignment
-- On Lower reduce production assignment -> typeAssignment
-- On END reduce production assignment -> typeAssignment

State 841:
## Known stack suffix:
## parameterizedValueSetTypeAssignment
## LR(1) items:
parameterizedAssignment -> parameterizedValueSetTypeAssignment . [ Upper Lower END ]
## Transitions:
## Reductions:
-- On Upper reduce production parameterizedAssignment -> parameterizedValueSetTypeAssignment
-- On Lower reduce production parameterizedAssignment -> parameterizedValueSetTypeAssignment
-- On END reduce production parameterizedAssignment -> parameterizedValueSetTypeAssignment

State 842:
## Known stack suffix:
## parameterizedValueAssignment
## LR(1) items:
parameterizedAssignment -> parameterizedValueAssignment . [ Upper Lower END ]
## Transitions:
## Reductions:
-- On Upper reduce production parameterizedAssignment -> parameterizedValueAssignment
-- On Lower reduce production parameterizedAssignment -> parameterizedValueAssignment
-- On END reduce production parameterizedAssignment -> parameterizedValueAssignment

State 843:
## Known stack suffix:
## parameterizedTypeAssignment
## LR(1) items:
parameterizedAssignment -> parameterizedTypeAssignment . [ Upper Lower END ]
## Transitions:
## Reductions:
-- On Upper reduce production parameterizedAssignment -> parameterizedTypeAssignment
-- On Lower reduce production parameterizedAssignment -> parameterizedTypeAssignment
-- On END reduce production parameterizedAssignment -> parameterizedTypeAssignment

State 844:
## Known stack suffix:
## parameterizedObjectSetAssignment
## LR(1) items:
parameterizedAssignment -> parameterizedObjectSetAssignment . [ Upper Lower END ]
## Transitions:
## Reductions:
-- On Upper reduce production parameterizedAssignment -> parameterizedObjectSetAssignment
-- On Lower reduce production parameterizedAssignment -> parameterizedObjectSetAssignment
-- On END reduce production parameterizedAssignment -> parameterizedObjectSetAssignment

State 845:
## Known stack suffix:
## parameterizedObjectClassAssignment
## LR(1) items:
parameterizedAssignment -> parameterizedObjectClassAssignment . [ Upper Lower END ]
## Transitions:
## Reductions:
-- On Upper reduce production parameterizedAssignment -> parameterizedObjectClassAssignment
-- On Lower reduce production parameterizedAssignment -> parameterizedObjectClassAssignment
-- On END reduce production parameterizedAssignment -> parameterizedObjectClassAssignment

State 846:
## Known stack suffix:
## parameterizedObjectAssignment
## LR(1) items:
parameterizedAssignment -> parameterizedObjectAssignment . [ Upper Lower END ]
## Transitions:
## Reductions:
-- On Upper reduce production parameterizedAssignment -> parameterizedObjectAssignment
-- On Lower reduce production parameterizedAssignment -> parameterizedObjectAssignment
-- On END reduce production parameterizedAssignment -> parameterizedObjectAssignment

State 847:
## Known stack suffix:
## parameterizedAssignment
## LR(1) items:
assignment -> parameterizedAssignment . [ Upper Lower END ]
## Transitions:
## Reductions:
-- On Upper reduce production assignment -> parameterizedAssignment
-- On Lower reduce production assignment -> parameterizedAssignment
-- On END reduce production assignment -> parameterizedAssignment

State 848:
## Known stack suffix:
## objectSetAssignment
## LR(1) items:
assignment -> objectSetAssignment . [ Upper Lower END ]
## Transitions:
## Reductions:
-- On Upper reduce production assignment -> objectSetAssignment
-- On Lower reduce production assignment -> objectSetAssignment
-- On END reduce production assignment -> objectSetAssignment

State 849:
## Known stack suffix:
## objectClassAssignment
## LR(1) items:
assignment -> objectClassAssignment . [ Upper Lower END ]
## Transitions:
## Reductions:
-- On Upper reduce production assignment -> objectClassAssignment
-- On Lower reduce production assignment -> objectClassAssignment
-- On END reduce production assignment -> objectClassAssignment

State 850:
## Known stack suffix:
## objectAssignment
## LR(1) items:
assignment -> objectAssignment . [ Upper Lower END ]
## Transitions:
## Reductions:
-- On Upper reduce production assignment -> objectAssignment
-- On Lower reduce production assignment -> objectAssignment
-- On END reduce production assignment -> objectAssignment

State 851:
## Known stack suffix:
## exports imports assignmentList
## LR(1) items:
assignmentList -> assignmentList . assignment [ Upper Lower END ]
moduleBody -> exports imports assignmentList . [ END ]
## Transitions:
-- On Upper shift to state 702
-- On Lower shift to state 824
-- On valueSetTypeAssignment shift to state 838
-- On valueAssignment shift to state 839
-- On typeAssignment shift to state 840
-- On parameterizedValueSetTypeAssignment shift to state 841
-- On parameterizedValueAssignment shift to state 842
-- On parameterizedTypeAssignment shift to state 843
-- On parameterizedObjectSetAssignment shift to state 844
-- On parameterizedObjectClassAssignment shift to state 845
-- On parameterizedObjectAssignment shift to state 846
-- On parameterizedAssignment shift to state 847
-- On objectSetAssignment shift to state 848
-- On objectClassAssignment shift to state 849
-- On objectAssignment shift to state 850
-- On assignment shift to state 852
## Reductions:
-- On END reduce production moduleBody -> exports imports assignmentList

State 852:
## Known stack suffix:
## assignmentList assignment
## LR(1) items:
assignmentList -> assignmentList assignment . [ Upper Lower END ]
## Transitions:
## Reductions:
-- On Upper reduce production assignmentList -> assignmentList assignment
-- On Lower reduce production assignmentList -> assignmentList assignment
-- On END reduce production assignmentList -> assignmentList assignment

State 853:
## Known stack suffix:
## assignment
## LR(1) items:
assignmentList -> assignment . [ Upper Lower END ]
## Transitions:
## Reductions:
-- On Upper reduce production assignmentList -> assignment
-- On Lower reduce production assignmentList -> assignment
-- On END reduce production assignmentList -> assignment

State 854:
## Known stack suffix:
## moduleDefinition
## LR(1) items:
main -> moduleDefinition . EOF [ # ]
## Transitions:
-- On EOF shift to state 855
## Reductions:

State 855:
## Known stack suffix:
## moduleDefinition EOF
## LR(1) items:
main -> moduleDefinition EOF . [ # ]
## Transitions:
## Reductions:
-- On # reduce production main -> moduleDefinition EOF

State 856:
## Known stack suffix:
## main
## LR(1) items:
main' -> main . [ # ]
## Transitions:
## Reductions:
-- On # accept main

