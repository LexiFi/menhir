State 0:
## Known stack suffix:
##
## LR(1) items:
main' -> . main [ # ]
## Transitions:
-- On Upper shift to state 1
-- On moduleIdentifier shift to state 16
-- On moduleDefinition shift to state 854
-- On main shift to state 856
## Reductions:

State 1:
## Known stack suffix:
## Upper
## LR(1) items:
moduleIdentifier -> Upper . definitiveIdentifier [ DEFINITIONS ]
## Transitions:
-- On LeftBrace shift to state 2
-- On definitiveIdentifier shift to state 15
## Reductions:
-- On DEFINITIONS reduce production definitiveIdentifier ->

State 2:
## Known stack suffix:
## LeftBrace
## LR(1) items:
definitiveIdentifier -> LeftBrace . definitiveObjIdComponentList RightBrace [ DEFINITIONS ]
## Transitions:
-- On Number shift to state 3
-- On Lower shift to state 4
-- On nameForm shift to state 8
-- On definitiveObjIdComponentList shift to state 9
-- On definitiveObjIdComponent shift to state 11
-- On definitiveNumberForm shift to state 13
-- On definitiveNameAndNumberForm shift to state 14
## Reductions:

State 3:
## Known stack suffix:
## Number
## LR(1) items:
definitiveNumberForm -> Number . [ RightParen RightBrace Number Lower ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production definitiveNumberForm -> Number

State 4:
## Known stack suffix:
## Lower
## LR(1) items:
definitiveNameAndNumberForm -> Lower . LeftParen definitiveNumberForm RightParen [ RightBrace Number Lower ]
nameForm -> Lower . [ RightBrace Number Lower ]
## Transitions:
-- On LeftParen shift to state 5
## Reductions:
-- On RightBrace reduce production nameForm -> Lower
-- On Number reduce production nameForm -> Lower
-- On Lower reduce production nameForm -> Lower

State 5:
## Known stack suffix:
## Lower LeftParen
## LR(1) items:
definitiveNameAndNumberForm -> Lower LeftParen . definitiveNumberForm RightParen [ RightBrace Number Lower ]
## Transitions:
-- On Number shift to state 3
-- On definitiveNumberForm shift to state 6
## Reductions:

State 6:
## Known stack suffix:
## Lower LeftParen definitiveNumberForm
## LR(1) items:
definitiveNameAndNumberForm -> Lower LeftParen definitiveNumberForm . RightParen [ RightBrace Number Lower ]
## Transitions:
-- On RightParen shift to state 7
## Reductions:

State 7:
## Known stack suffix:
## Lower LeftParen definitiveNumberForm RightParen
## LR(1) items:
definitiveNameAndNumberForm -> Lower LeftParen definitiveNumberForm RightParen . [ RightBrace Number Lower ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production definitiveNameAndNumberForm -> Lower LeftParen definitiveNumberForm RightParen

State 8:
## Known stack suffix:
## nameForm
## LR(1) items:
definitiveObjIdComponent -> nameForm . [ RightBrace Number Lower ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production definitiveObjIdComponent -> nameForm

State 9:
## Known stack suffix:
## LeftBrace definitiveObjIdComponentList
## LR(1) items:
definitiveIdentifier -> LeftBrace definitiveObjIdComponentList . RightBrace [ DEFINITIONS ]
## Transitions:
-- On RightBrace shift to state 10
## Reductions:

State 10:
## Known stack suffix:
## LeftBrace definitiveObjIdComponentList RightBrace
## LR(1) items:
definitiveIdentifier -> LeftBrace definitiveObjIdComponentList RightBrace . [ DEFINITIONS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production definitiveIdentifier -> LeftBrace definitiveObjIdComponentList RightBrace

State 11:
## Known stack suffix:
## definitiveObjIdComponent
## LR(1) items:
definitiveObjIdComponentList -> definitiveObjIdComponent . [ RightBrace ]
definitiveObjIdComponentList -> definitiveObjIdComponent . definitiveObjIdComponentList [ RightBrace ]
## Transitions:
-- On Number shift to state 3
-- On Lower shift to state 4
-- On nameForm shift to state 8
-- On definitiveObjIdComponentList shift to state 12
-- On definitiveObjIdComponent shift to state 11
-- On definitiveNumberForm shift to state 13
-- On definitiveNameAndNumberForm shift to state 14
## Reductions:
-- On RightBrace reduce production definitiveObjIdComponentList -> definitiveObjIdComponent

State 12:
## Known stack suffix:
## definitiveObjIdComponent definitiveObjIdComponentList
## LR(1) items:
definitiveObjIdComponentList -> definitiveObjIdComponent definitiveObjIdComponentList . [ RightBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production definitiveObjIdComponentList -> definitiveObjIdComponent definitiveObjIdComponentList

State 13:
## Known stack suffix:
## definitiveNumberForm
## LR(1) items:
definitiveObjIdComponent -> definitiveNumberForm . [ RightBrace Number Lower ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production definitiveObjIdComponent -> definitiveNumberForm

State 14:
## Known stack suffix:
## definitiveNameAndNumberForm
## LR(1) items:
definitiveObjIdComponent -> definitiveNameAndNumberForm . [ RightBrace Number Lower ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production definitiveObjIdComponent -> definitiveNameAndNumberForm

State 15:
## Known stack suffix:
## Upper definitiveIdentifier
## LR(1) items:
moduleIdentifier -> Upper definitiveIdentifier . [ DEFINITIONS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production moduleIdentifier -> Upper definitiveIdentifier

State 16:
## Known stack suffix:
## moduleIdentifier
## LR(1) items:
moduleDefinition -> moduleIdentifier . DEFINITIONS tagDefault extensionDefault Assignment BEGIN moduleBody END [ EOF ]
## Transitions:
-- On DEFINITIONS shift to state 17
## Reductions:

State 17:
## Known stack suffix:
## moduleIdentifier DEFINITIONS
## LR(1) items:
moduleDefinition -> moduleIdentifier DEFINITIONS . tagDefault extensionDefault Assignment BEGIN moduleBody END [ EOF ]
## Transitions:
-- On IMPLICIT shift to state 18
-- On EXPLICIT shift to state 20
-- On AUTOMATIC shift to state 22
-- On tagDefault shift to state 24
## Reductions:
-- On EXTENSIBILITY reduce production tagDefault ->
-- On Assignment reduce production tagDefault ->

State 18:
## Known stack suffix:
## IMPLICIT
## LR(1) items:
tagDefault -> IMPLICIT . TAGS [ EXTENSIBILITY Assignment ]
## Transitions:
-- On TAGS shift to state 19
## Reductions:

State 19:
## Known stack suffix:
## IMPLICIT TAGS
## LR(1) items:
tagDefault -> IMPLICIT TAGS . [ EXTENSIBILITY Assignment ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production tagDefault -> IMPLICIT TAGS

State 20:
## Known stack suffix:
## EXPLICIT
## LR(1) items:
tagDefault -> EXPLICIT . TAGS [ EXTENSIBILITY Assignment ]
## Transitions:
-- On TAGS shift to state 21
## Reductions:

State 21:
## Known stack suffix:
## EXPLICIT TAGS
## LR(1) items:
tagDefault -> EXPLICIT TAGS . [ EXTENSIBILITY Assignment ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production tagDefault -> EXPLICIT TAGS

State 22:
## Known stack suffix:
## AUTOMATIC
## LR(1) items:
tagDefault -> AUTOMATIC . TAGS [ EXTENSIBILITY Assignment ]
## Transitions:
-- On TAGS shift to state 23
## Reductions:

State 23:
## Known stack suffix:
## AUTOMATIC TAGS
## LR(1) items:
tagDefault -> AUTOMATIC TAGS . [ EXTENSIBILITY Assignment ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production tagDefault -> AUTOMATIC TAGS

State 24:
## Known stack suffix:
## moduleIdentifier DEFINITIONS tagDefault
## LR(1) items:
moduleDefinition -> moduleIdentifier DEFINITIONS tagDefault . extensionDefault Assignment BEGIN moduleBody END [ EOF ]
## Transitions:
-- On EXTENSIBILITY shift to state 25
-- On extensionDefault shift to state 27
## Reductions:
-- On Assignment reduce production extensionDefault ->

State 25:
## Known stack suffix:
## EXTENSIBILITY
## LR(1) items:
extensionDefault -> EXTENSIBILITY . IMPLIED [ Assignment ]
## Transitions:
-- On IMPLIED shift to state 26
## Reductions:

State 26:
## Known stack suffix:
## EXTENSIBILITY IMPLIED
## LR(1) items:
extensionDefault -> EXTENSIBILITY IMPLIED . [ Assignment ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extensionDefault -> EXTENSIBILITY IMPLIED

State 27:
## Known stack suffix:
## moduleIdentifier DEFINITIONS tagDefault extensionDefault
## LR(1) items:
moduleDefinition -> moduleIdentifier DEFINITIONS tagDefault extensionDefault . Assignment BEGIN moduleBody END [ EOF ]
## Transitions:
-- On Assignment shift to state 28
## Reductions:

State 28:
## Known stack suffix:
## moduleIdentifier DEFINITIONS tagDefault extensionDefault Assignment
## LR(1) items:
moduleDefinition -> moduleIdentifier DEFINITIONS tagDefault extensionDefault Assignment . BEGIN moduleBody END [ EOF ]
## Transitions:
-- On BEGIN shift to state 29
## Reductions:

State 29:
## Known stack suffix:
## moduleIdentifier DEFINITIONS tagDefault extensionDefault Assignment BEGIN
## LR(1) items:
moduleDefinition -> moduleIdentifier DEFINITIONS tagDefault extensionDefault Assignment BEGIN . moduleBody END [ EOF ]
## Transitions:
-- On EXPORTS shift to state 30
-- On moduleBody shift to state 45
-- On exports shift to state 47
## Reductions:
-- On Upper reduce production exports ->
-- On Lower reduce production exports ->
-- On IMPORTS reduce production exports ->
-- On END reduce production moduleBody ->

State 30:
## Known stack suffix:
## EXPORTS
## LR(1) items:
exports -> EXPORTS . symbolsExported SemiColon [ Upper Lower IMPORTS ]
exports -> EXPORTS . ALL SemiColon [ Upper Lower IMPORTS ]
## Transitions:
-- On Upper shift to state 31
-- On Lower shift to state 32
-- On ALL shift to state 33
-- On symbolsExported shift to state 35
-- On symbolList shift to state 37
-- On symbol shift to state 44
-- On reference shift to state 40
-- On parameterizedReference shift to state 43
## Reductions:
-- On SemiColon reduce production symbolsExported ->

State 31:
## Known stack suffix:
## Upper
## LR(1) items:
reference -> Upper . [ SemiColon RightBrace LeftBrace FROM Comma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production reference -> Upper

State 32:
## Known stack suffix:
## Lower
## LR(1) items:
reference -> Lower . [ SemiColon RightBrace LeftBrace FROM Comma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production reference -> Lower

State 33:
## Known stack suffix:
## EXPORTS ALL
## LR(1) items:
exports -> EXPORTS ALL . SemiColon [ Upper Lower IMPORTS ]
## Transitions:
-- On SemiColon shift to state 34
## Reductions:

State 34:
## Known stack suffix:
## EXPORTS ALL SemiColon
## LR(1) items:
exports -> EXPORTS ALL SemiColon . [ Upper Lower IMPORTS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production exports -> EXPORTS ALL SemiColon

State 35:
## Known stack suffix:
## EXPORTS symbolsExported
## LR(1) items:
exports -> EXPORTS symbolsExported . SemiColon [ Upper Lower IMPORTS ]
## Transitions:
-- On SemiColon shift to state 36
## Reductions:

State 36:
## Known stack suffix:
## EXPORTS symbolsExported SemiColon
## LR(1) items:
exports -> EXPORTS symbolsExported SemiColon . [ Upper Lower IMPORTS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production exports -> EXPORTS symbolsExported SemiColon

State 37:
## Known stack suffix:
## symbolList
## LR(1) items:
symbolList -> symbolList . Comma symbol [ SemiColon Comma ]
symbolsExported -> symbolList . [ SemiColon ]
## Transitions:
-- On Comma shift to state 38
## Reductions:
-- On SemiColon reduce production symbolsExported -> symbolList

State 38:
## Known stack suffix:
## symbolList Comma
## LR(1) items:
symbolList -> symbolList Comma . symbol [ SemiColon FROM Comma ]
## Transitions:
-- On Upper shift to state 31
-- On Lower shift to state 32
-- On symbol shift to state 39
-- On reference shift to state 40
-- On parameterizedReference shift to state 43
## Reductions:

State 39:
## Known stack suffix:
## symbolList Comma symbol
## LR(1) items:
symbolList -> symbolList Comma symbol . [ SemiColon FROM Comma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production symbolList -> symbolList Comma symbol

State 40:
## Known stack suffix:
## reference
## LR(1) items:
parameterizedReference -> reference . [ SemiColon FROM Comma ]
parameterizedReference -> reference . LeftBrace RightBrace [ SemiColon FROM Comma ]
symbol -> reference . [ SemiColon FROM Comma ]
## Transitions:
-- On LeftBrace shift to state 41
## Reductions:
-- On SemiColon reduce production symbol -> reference
-- On FROM reduce production symbol -> reference
-- On Comma reduce production symbol -> reference

State 41:
## Known stack suffix:
## reference LeftBrace
## LR(1) items:
parameterizedReference -> reference LeftBrace . RightBrace [ SemiColon FROM Comma ]
## Transitions:
-- On RightBrace shift to state 42
## Reductions:

State 42:
## Known stack suffix:
## reference LeftBrace RightBrace
## LR(1) items:
parameterizedReference -> reference LeftBrace RightBrace . [ SemiColon FROM Comma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production parameterizedReference -> reference LeftBrace RightBrace

State 43:
## Known stack suffix:
## parameterizedReference
## LR(1) items:
symbol -> parameterizedReference . [ SemiColon FROM Comma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production symbol -> parameterizedReference

State 44:
## Known stack suffix:
## symbol
## LR(1) items:
symbolList -> symbol . [ SemiColon FROM Comma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production symbolList -> symbol

State 45:
## Known stack suffix:
## moduleIdentifier DEFINITIONS tagDefault extensionDefault Assignment BEGIN moduleBody
## LR(1) items:
moduleDefinition -> moduleIdentifier DEFINITIONS tagDefault extensionDefault Assignment BEGIN moduleBody . END [ EOF ]
## Transitions:
-- On END shift to state 46
## Reductions:

State 46:
## Known stack suffix:
## moduleIdentifier DEFINITIONS tagDefault extensionDefault Assignment BEGIN moduleBody END
## LR(1) items:
moduleDefinition -> moduleIdentifier DEFINITIONS tagDefault extensionDefault Assignment BEGIN moduleBody END . [ EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production moduleDefinition -> moduleIdentifier DEFINITIONS tagDefault extensionDefault Assignment BEGIN moduleBody END

State 47:
## Known stack suffix:
## exports
## LR(1) items:
moduleBody -> exports . imports assignmentList [ END ]
## Transitions:
-- On IMPORTS shift to state 48
-- On imports shift to state 701
## Reductions:
-- On Upper reduce production imports ->
-- On Lower reduce production imports ->

State 48:
## Known stack suffix:
## IMPORTS
## LR(1) items:
imports -> IMPORTS . symbolsImported SemiColon [ Upper Lower ]
## Transitions:
-- On Upper shift to state 31
-- On Lower shift to state 32
-- On symbolsImported shift to state 49
-- On symbolsFromModuleList shift to state 51
-- On symbolsFromModule shift to state 700
-- On symbolList shift to state 53
-- On symbol shift to state 44
-- On reference shift to state 40
-- On parameterizedReference shift to state 43
## Reductions:
-- On SemiColon reduce production symbolsImported ->

State 49:
## Known stack suffix:
## IMPORTS symbolsImported
## LR(1) items:
imports -> IMPORTS symbolsImported . SemiColon [ Upper Lower ]
## Transitions:
-- On SemiColon shift to state 50
## Reductions:

State 50:
## Known stack suffix:
## IMPORTS symbolsImported SemiColon
## LR(1) items:
imports -> IMPORTS symbolsImported SemiColon . [ Upper Lower ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production imports -> IMPORTS symbolsImported SemiColon

State 51:
## Known stack suffix:
## symbolsFromModuleList
## LR(1) items:
symbolsFromModuleList -> symbolsFromModuleList . symbolsFromModule [ Upper SemiColon Lower ]
symbolsImported -> symbolsFromModuleList . [ SemiColon ]
## Transitions:
-- On Upper shift to state 31
-- On Lower shift to state 32
-- On symbolsFromModule shift to state 52
-- On symbolList shift to state 53
-- On symbol shift to state 44
-- On reference shift to state 40
-- On parameterizedReference shift to state 43
## Reductions:
-- On SemiColon reduce production symbolsImported -> symbolsFromModuleList

State 52:
## Known stack suffix:
## symbolsFromModuleList symbolsFromModule
## LR(1) items:
symbolsFromModuleList -> symbolsFromModuleList symbolsFromModule . [ Upper SemiColon Lower ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production symbolsFromModuleList -> symbolsFromModuleList symbolsFromModule

State 53:
## Known stack suffix:
## symbolList
## LR(1) items:
symbolList -> symbolList . Comma symbol [ FROM Comma ]
symbolsFromModule -> symbolList . FROM globalModuleReference [ Upper SemiColon Lower ]
## Transitions:
-- On FROM shift to state 54
-- On Comma shift to state 38
## Reductions:

State 54:
## Known stack suffix:
## symbolList FROM
## LR(1) items:
symbolsFromModule -> symbolList FROM . globalModuleReference [ Upper SemiColon Lower ]
## Transitions:
-- On Upper shift to state 55
-- On globalModuleReference shift to state 699
## Reductions:

State 55:
## Known stack suffix:
## Upper
## LR(1) items:
globalModuleReference -> Upper . assignedIdentifier [ Upper SemiColon Lower ]
## Transitions:
-- On Upper shift to state 56
-- On Lower shift to state 59
-- On LeftBrace shift to state 60
-- On simpleDefinedValue shift to state 64
-- On parameterizedValue shift to state 135
-- On objectIdentifierValue shift to state 696
-- On externalValueReference shift to state 136
-- On definedValue shift to state 697
-- On assignedIdentifier shift to state 698
## Reductions:
-- On SemiColon reduce production assignedIdentifier ->

State 56:
## Known stack suffix:
## Upper
## LR(1) items:
externalValueReference -> Upper . Dot Lower [ Upper SemiColon RightParen RightBracket RightBrace Number Lower LeftBrace Comma ]
## Transitions:
-- On Dot shift to state 57
## Reductions:

State 57:
## Known stack suffix:
## Upper Dot
## LR(1) items:
externalValueReference -> Upper Dot . Lower [ Upper SemiColon RightParen RightBracket RightBrace Number Lower LeftBrace Comma ]
## Transitions:
-- On Lower shift to state 58
## Reductions:

State 58:
## Known stack suffix:
## Upper Dot Lower
## LR(1) items:
externalValueReference -> Upper Dot Lower . [ Upper SemiColon RightParen RightBracket RightBrace Number Lower LeftBrace Comma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production externalValueReference -> Upper Dot Lower

State 59:
## Known stack suffix:
## Lower
## LR(1) items:
definedValue -> Lower . [ Upper SemiColon RightParen RightBracket RightBrace Lower Comma ]
simpleDefinedValue -> Lower . [ LeftBrace ]
## Transitions:
## Reductions:
-- On Upper reduce production definedValue -> Lower
-- On SemiColon reduce production definedValue -> Lower
-- On RightParen reduce production definedValue -> Lower
-- On RightBracket reduce production definedValue -> Lower
-- On RightBrace reduce production definedValue -> Lower
-- On Lower reduce production definedValue -> Lower
-- On LeftBrace reduce production simpleDefinedValue -> Lower
-- On Comma reduce production definedValue -> Lower

State 60:
## Known stack suffix:
## LeftBrace
## LR(1) items:
objectIdentifierValue -> LeftBrace . objIdComponentsList RightBrace [ Upper SemiColon Lower ]
objectIdentifierValue -> LeftBrace . definedValue objIdComponentsList RightBrace [ Upper SemiColon Lower ]
## Transitions:
-- On Upper shift to state 56
-- On Number shift to state 61
-- On Lower shift to state 62
-- On simpleDefinedValue shift to state 64
-- On parameterizedValue shift to state 135
-- On objIdComponentsList shift to state 374
-- On objIdComponents shift to state 376
-- On numberForm shift to state 378
-- On nameForm shift to state 379
-- On nameAndNumberForm shift to state 380
-- On externalValueReference shift to state 136
-- On definedValue shift to state 695
## Reductions:

State 61:
## Known stack suffix:
## Number
## LR(1) items:
numberForm -> Number . [ Upper RightParen RightBrace Number Lower ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production numberForm -> Number

State 62:
## Known stack suffix:
## Lower
## LR(1) items:
definedValue -> Lower . [ Upper RightBrace Number Lower ]
nameAndNumberForm -> Lower . LeftParen numberForm RightParen [ Upper RightBrace Number Lower ]
nameForm -> Lower . [ Upper RightBrace Number Lower ]
simpleDefinedValue -> Lower . [ LeftBrace ]
## Transitions:
-- On LeftParen shift to state 63
## Reductions:
-- On Upper reduce production definedValue -> Lower
-- On RightBrace reduce production definedValue -> Lower
-- On Number reduce production definedValue -> Lower
-- On Lower reduce production definedValue -> Lower
-- On LeftBrace reduce production simpleDefinedValue -> Lower

State 63:
## Known stack suffix:
## Lower LeftParen
## LR(1) items:
nameAndNumberForm -> Lower LeftParen . numberForm RightParen [ Upper RightBrace Number Lower ]
## Transitions:
-- On Upper shift to state 56
-- On Number shift to state 61
-- On Lower shift to state 59
-- On simpleDefinedValue shift to state 64
-- On parameterizedValue shift to state 135
-- On numberForm shift to state 692
-- On externalValueReference shift to state 136
-- On definedValue shift to state 694
## Reductions:

State 64:
## Known stack suffix:
## simpleDefinedValue
## LR(1) items:
parameterizedValue -> simpleDefinedValue . actualParameterList [ Upper UNION SemiColon RightParen RightDoubleBracket RightBracket RightBrace Number Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
## Transitions:
-- On LeftBrace shift to state 65
-- On actualParameterList shift to state 691
## Reductions:

State 65:
## Known stack suffix:
## LeftBrace
## LR(1) items:
actualParameterList -> LeftBrace . separated_nonempty_list(Comma,actualParameter) RightBrace [ Upper UNIQUE UNION SemiColon RightParen RightDoubleBracket RightBracket RightBrace OPTIONAL Number Middle Lower LessThan LeftParen INTERSECTION EXCEPT END ENCODED DoubleDot Dot DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
-- On VisibleString shift to state 66
-- On VideotexString shift to state 67
-- On Upper shift to state 68
-- On UniversalString shift to state 72
-- On UTF8String shift to state 73
-- On UTCTime shift to state 74
-- On TeletexString shift to state 75
-- On TYPE_IDENTIFIER shift to state 76
-- On TRUE shift to state 77
-- On T61String shift to state 78
-- On SET shift to state 79
-- On SEQUENCE shift to state 111
-- On RealNumber shift to state 296
-- On RELATIVE_OID shift to state 116
-- On REAL shift to state 117
-- On PrintableString shift to state 118
-- On PLUS_INFINITY shift to state 297
-- On ObjectDescriptor shift to state 119
-- On OCTET shift to state 120
-- On OBJECT shift to state 122
-- On NumericString shift to state 124
-- On Number shift to state 145
-- On NULL shift to state 298
-- On MINUS_INFINITY shift to state 299
-- On Lower shift to state 300
-- On LeftBracket shift to state 129
-- On LeftBrace shift to state 502
-- On ISO646String shift to state 140
-- On INTEGER shift to state 141
-- On INSTANCE shift to state 157
-- On IA5String shift to state 166
-- On Hyphen shift to state 306
-- On Hstring shift to state 308
-- On GraphicString shift to state 167
-- On GeneralizedTime shift to state 168
-- On GeneralString shift to state 169
-- On FALSE shift to state 309
-- On EXTERNAL shift to state 170
-- On ENUMERATED shift to state 171
-- On EMBEDDED shift to state 179
-- On DefinedSyntax shift to state 508
-- On Cstring shift to state 310
-- On CONTAINING shift to state 311
-- On CHOICE shift to state 181
-- On CHARACTER shift to state 184
-- On Bstring shift to state 312
-- On BOOLEAN shift to state 186
-- On BMPString shift to state 187
-- On BIT shift to state 188
-- On ABSTRACT_SYNTAX shift to state 162
-- On valueSetFromObjects shift to state 202
-- On valueSet shift to state 680
-- On valueFromObject shift to state 313
-- On value shift to state 681
-- On usefulType shift to state 203
-- On usefulObjectClassReference shift to state 163
-- On unrestrictedCharacterStringValue shift to state 315
-- On unrestrictedCharacterStringType shift to state 204
-- On type_x shift to state 682
-- On typeWithConstraint shift to state 207
-- On typeFromObject shift to state 208
-- On tuple shift to state 319
-- On taggedType shift to state 209
-- On tag shift to state 210
-- On specialRealValue shift to state 320
-- On simpleDefinedValue shift to state 64
-- On simpleDefinedType shift to state 213
-- On signedNumber shift to state 321
-- On setValue shift to state 322
-- On setType shift to state 215
-- On setOfValue shift to state 323
-- On setOfType shift to state 216
-- On sequenceValue shift to state 324
-- On sequenceType shift to state 217
-- On sequenceOfValue shift to state 325
-- On sequenceOfType shift to state 218
-- On separated_nonempty_list(Comma,actualParameter) shift to state 683
-- On selectionType shift to state 219
-- On restrictedCharacterStringValue shift to state 326
-- On restrictedCharacterStringType shift to state 220
-- On relativeOIDValue shift to state 327
-- On relativeOIDType shift to state 221
-- On referencedValue shift to state 328
-- On referencedType shift to state 222
-- On referencedObjects shift to state 587
-- On realValue shift to state 332
-- On realType shift to state 232
-- On quadruple shift to state 333
-- On parameterizedValueSetType shift to state 233
-- On parameterizedValue shift to state 135
-- On parameterizedType shift to state 234
-- On parameterizedObjectSet shift to state 235
-- On parameterizedObject shift to state 524
-- On openTypeFieldVal shift to state 334
-- On octetStringValue shift to state 335
-- On octetStringType shift to state 237
-- On object_x shift to state 685
-- On objectSet shift to state 686
-- On objectIdentifierValue shift to state 336
-- On objectIdentifierType shift to state 238
-- On objectFromObject shift to state 528
-- On objectDefn shift to state 529
-- On objectClassFieldValue shift to state 337
-- On objectClassFieldType shift to state 239
-- On numericRealValue shift to state 338
-- On nullValue shift to state 339
-- On nullType shift to state 240
-- On integerValue shift to state 340
-- On integerType shift to state 241
-- On instanceOfType shift to state 242
-- On fixedTypeFieldVal shift to state 341
-- On externalValueReference shift to state 136
-- On externalValue shift to state 342
-- On externalTypeReference shift to state 243
-- On externalType shift to state 244
-- On externalObjectSetReference shift to state 245
-- On externalObjectReference shift to state 246
-- On externalObjectClassReference shift to state 164
-- On enumeratedValue shift to state 343
-- On enumeratedType shift to state 247
-- On embeddedPDVValue shift to state 344
-- On embeddedPDVType shift to state 248
-- On definedValue shift to state 345
-- On definedType shift to state 249
-- On definedObjectSet shift to state 250
-- On definedObjectClass shift to state 687
-- On definedObject shift to state 545
-- On defaultSyntax shift to state 546
-- On constrainedType shift to state 257
-- On choiceValue shift to state 346
-- On choiceType shift to state 258
-- On characterStringValue shift to state 347
-- On characterStringType shift to state 259
-- On characterStringList shift to state 348
-- On builtinValue shift to state 349
-- On builtinType shift to state 260
-- On booleanValue shift to state 350
-- On booleanType shift to state 261
-- On bitStringValue shift to state 351
-- On bitStringType shift to state 262
-- On actualParameter shift to state 688
## Reductions:

State 66:
## Known stack suffix:
## VisibleString
## LR(1) items:
restrictedCharacterStringType -> VisibleString . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production restrictedCharacterStringType -> VisibleString

State 67:
## Known stack suffix:
## VideotexString
## LR(1) items:
restrictedCharacterStringType -> VideotexString . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production restrictedCharacterStringType -> VideotexString

State 68:
## Known stack suffix:
## Upper
## LR(1) items:
definedObjectClass -> Upper . [ RightBrace Dot Comma ]
definedObjectSet -> Upper . [ LeftBrace Dot ]
definedType -> Upper . [ RightBrace LeftParen Comma Colon ]
externalObjectClassReference -> Upper . Dot Upper [ RightBrace Dot Comma ]
externalObjectReference -> Upper . Dot Lower [ RightBrace LeftBrace Dot Comma ]
externalObjectSetReference -> Upper . Dot Upper [ LeftBrace Dot ]
externalTypeReference -> Upper . Dot Upper [ RightBrace LeftParen LeftBrace Comma Colon ]
externalValueReference -> Upper . Dot Lower [ RightBrace LeftBrace Comma ]
simpleDefinedType -> Upper . [ LeftBrace ]
## Transitions:
-- On Dot shift to state 69
## Reductions:
-- On RightBrace reduce production definedType -> Upper
-- On LeftParen reduce production definedType -> Upper
-- On LeftBrace reduce production definedObjectSet -> Upper
-- On Comma reduce production definedType -> Upper
-- On Colon reduce production definedType -> Upper

State 69:
## Known stack suffix:
## Upper Dot
## LR(1) items:
externalObjectClassReference -> Upper Dot . Upper [ RightBrace Dot Comma ]
externalObjectReference -> Upper Dot . Lower [ RightBrace LeftBrace Dot Comma ]
externalObjectSetReference -> Upper Dot . Upper [ LeftBrace Dot ]
externalTypeReference -> Upper Dot . Upper [ RightBrace LeftParen LeftBrace Comma Colon ]
externalValueReference -> Upper Dot . Lower [ RightBrace LeftBrace Comma ]
## Transitions:
-- On Upper shift to state 70
-- On Lower shift to state 71
## Reductions:

State 70:
## Known stack suffix:
## Upper Dot Upper
## LR(1) items:
externalObjectClassReference -> Upper Dot Upper . [ Upper RightBrace OPTIONAL Lower END Dot DEFAULT Comma Colon Assignment ]
externalObjectSetReference -> Upper Dot Upper . [ LeftBrace Dot ]
externalTypeReference -> Upper Dot Upper . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen LeftBrace INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
## Reductions:
-- On Upper reduce production externalTypeReference -> Upper Dot Upper
-- On UNIQUE reduce production externalTypeReference -> Upper Dot Upper
-- On UNION reduce production externalTypeReference -> Upper Dot Upper
-- On RightParen reduce production externalTypeReference -> Upper Dot Upper
-- On RightDoubleBracket reduce production externalTypeReference -> Upper Dot Upper
-- On RightBrace reduce production externalTypeReference -> Upper Dot Upper
-- On OPTIONAL reduce production externalTypeReference -> Upper Dot Upper
-- On Middle reduce production externalTypeReference -> Upper Dot Upper
-- On Lower reduce production externalTypeReference -> Upper Dot Upper
-- On LeftParen reduce production externalTypeReference -> Upper Dot Upper
-- On LeftBrace reduce production externalTypeReference -> Upper Dot Upper
-- On INTERSECTION reduce production externalTypeReference -> Upper Dot Upper
-- On EXCEPT reduce production externalTypeReference -> Upper Dot Upper
-- On END reduce production externalTypeReference -> Upper Dot Upper
-- On ENCODED reduce production externalTypeReference -> Upper Dot Upper
-- On Dot reduce production externalObjectClassReference -> Upper Dot Upper
-- On DEFAULT reduce production externalTypeReference -> Upper Dot Upper
-- On Comma reduce production externalTypeReference -> Upper Dot Upper
-- On Colon reduce production externalTypeReference -> Upper Dot Upper
-- On Circumflex reduce production externalTypeReference -> Upper Dot Upper
-- On Bang reduce production externalTypeReference -> Upper Dot Upper
-- On Assignment reduce production externalTypeReference -> Upper Dot Upper

State 71:
## Known stack suffix:
## Upper Dot Lower
## LR(1) items:
externalObjectReference -> Upper Dot Lower . [ UNION RightParen RightBrace Middle LeftBrace INTERSECTION EXCEPT Dot Comma Circumflex Bang ]
externalValueReference -> Upper Dot Lower . [ Upper UNION RightParen RightDoubleBracket RightBrace Number Middle Lower LessThan LeftBrace INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
## Transitions:
## Reductions:
-- On Upper reduce production externalValueReference -> Upper Dot Lower
-- On UNION reduce production externalValueReference -> Upper Dot Lower
-- On RightParen reduce production externalValueReference -> Upper Dot Lower
-- On RightDoubleBracket reduce production externalValueReference -> Upper Dot Lower
-- On RightBrace reduce production externalValueReference -> Upper Dot Lower
-- On Number reduce production externalValueReference -> Upper Dot Lower
-- On Middle reduce production externalValueReference -> Upper Dot Lower
-- On Lower reduce production externalValueReference -> Upper Dot Lower
-- On LessThan reduce production externalValueReference -> Upper Dot Lower
-- On LeftBrace reduce production externalValueReference -> Upper Dot Lower
-- On INTERSECTION reduce production externalValueReference -> Upper Dot Lower
-- On EXCEPT reduce production externalValueReference -> Upper Dot Lower
-- On END reduce production externalValueReference -> Upper Dot Lower
-- On DoubleDot reduce production externalValueReference -> Upper Dot Lower
-- On Dot reduce production externalObjectReference -> Upper Dot Lower
-- On Comma reduce production externalValueReference -> Upper Dot Lower
-- On Circumflex reduce production externalValueReference -> Upper Dot Lower
-- On Bang reduce production externalValueReference -> Upper Dot Lower

State 72:
## Known stack suffix:
## UniversalString
## LR(1) items:
restrictedCharacterStringType -> UniversalString . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production restrictedCharacterStringType -> UniversalString

State 73:
## Known stack suffix:
## UTF8String
## LR(1) items:
restrictedCharacterStringType -> UTF8String . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production restrictedCharacterStringType -> UTF8String

State 74:
## Known stack suffix:
## UTCTime
## LR(1) items:
usefulType -> UTCTime . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production usefulType -> UTCTime

State 75:
## Known stack suffix:
## TeletexString
## LR(1) items:
restrictedCharacterStringType -> TeletexString . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production restrictedCharacterStringType -> TeletexString

State 76:
## Known stack suffix:
## TYPE_IDENTIFIER
## LR(1) items:
usefulObjectClassReference -> TYPE_IDENTIFIER . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED Dot DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production usefulObjectClassReference -> TYPE_IDENTIFIER

State 77:
## Known stack suffix:
## TRUE
## LR(1) items:
booleanValue -> TRUE . [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production booleanValue -> TRUE

State 78:
## Known stack suffix:
## T61String
## LR(1) items:
restrictedCharacterStringType -> T61String . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production restrictedCharacterStringType -> T61String

State 79:
## Known stack suffix:
## SET
## LR(1) items:
setOfType -> SET . OF type_x [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
setOfType -> SET . OF namedType [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
setType -> SET . LeftBrace RightBrace [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
setType -> SET . LeftBrace extensionAndException optionalExtensionMarker RightBrace [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
setType -> SET . LeftBrace componentTypeLists RightBrace [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
typeWithConstraint -> SET . constraint_x OF type_x [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
typeWithConstraint -> SET . sizeConstraint OF type_x [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
typeWithConstraint -> SET . constraint_x OF namedType [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
typeWithConstraint -> SET . sizeConstraint OF namedType [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
-- On SIZE shift to state 80
-- On OF shift to state 662
-- On LeftParen shift to state 81
-- On LeftBrace shift to state 665
-- On sizeConstraint shift to state 672
-- On constraint_x shift to state 676
## Reductions:

State 80:
## Known stack suffix:
## SIZE
## LR(1) items:
sizeConstraint -> SIZE . constraint_x [ UNION RightParen RightBrace OF Middle INTERSECTION EXCEPT Comma Circumflex Bang ]
## Transitions:
-- On LeftParen shift to state 81
-- On constraint_x shift to state 661
## Reductions:

State 81:
## Known stack suffix:
## LeftParen
## LR(1) items:
constraint_x -> LeftParen . constraintSpec exceptionSpec RightParen [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace PRESENT OPTIONAL OF Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ABSENT ]
## Transitions:
-- On WITH shift to state 82
-- On VisibleString shift to state 66
-- On VideotexString shift to state 67
-- On Upper shift to state 108
-- On UniversalString shift to state 72
-- On UTF8String shift to state 73
-- On UTCTime shift to state 74
-- On TeletexString shift to state 75
-- On TYPE_IDENTIFIER shift to state 76
-- On TRUE shift to state 77
-- On T61String shift to state 78
-- On SIZE shift to state 80
-- On SET shift to state 79
-- On SEQUENCE shift to state 111
-- On RealNumber shift to state 296
-- On RELATIVE_OID shift to state 116
-- On REAL shift to state 117
-- On PrintableString shift to state 118
-- On PLUS_INFINITY shift to state 297
-- On PATTERN shift to state 495
-- On ObjectDescriptor shift to state 119
-- On OCTET shift to state 120
-- On OBJECT shift to state 122
-- On NumericString shift to state 124
-- On Number shift to state 145
-- On NULL shift to state 298
-- On MINUS_INFINITY shift to state 299
-- On MIN shift to state 497
-- On Lower shift to state 300
-- On LeftParen shift to state 498
-- On LeftBracket shift to state 129
-- On LeftBrace shift to state 594
-- On ISO646String shift to state 140
-- On INTEGER shift to state 141
-- On INSTANCE shift to state 157
-- On INCLUDES shift to state 503
-- On IA5String shift to state 166
-- On Hyphen shift to state 306
-- On Hstring shift to state 308
-- On GraphicString shift to state 167
-- On GeneralizedTime shift to state 168
-- On GeneralString shift to state 169
-- On FROM shift to state 504
-- On FALSE shift to state 309
-- On EXTERNAL shift to state 170
-- On ENUMERATED shift to state 171
-- On ENCODED shift to state 619
-- On EMBEDDED shift to state 179
-- On DefinedSyntax shift to state 508
-- On Cstring shift to state 310
-- On CONTAINING shift to state 622
-- On CONSTRAINED shift to state 627
-- On CHOICE shift to state 181
-- On CHARACTER shift to state 184
-- On Bstring shift to state 312
-- On BOOLEAN shift to state 186
-- On BMPString shift to state 187
-- On BIT shift to state 188
-- On ALL shift to state 509
-- On ABSTRACT_SYNTAX shift to state 162
-- On valueSetFromObjects shift to state 202
-- On valueRange shift to state 511
-- On valueFromObject shift to state 313
-- On value shift to state 512
-- On userDefinedConstraint shift to state 644
-- On usefulType shift to state 203
-- On usefulObjectClassReference shift to state 163
-- On unrestrictedCharacterStringValue shift to state 315
-- On unrestrictedCharacterStringType shift to state 204
-- On unions shift to state 549
-- On uElems shift to state 550
-- On type_x shift to state 513
-- On typeWithConstraint shift to state 207
-- On typeFromObject shift to state 208
-- On typeConstraint shift to state 514
-- On tuple shift to state 319
-- On taggedType shift to state 209
-- On tag shift to state 210
-- On tableConstraint shift to state 645
-- On subtypeElements shift to state 515
-- On subtypeConstraint shift to state 646
-- On specialRealValue shift to state 320
-- On sizeConstraint shift to state 516
-- On singleValue shift to state 517
-- On simpleTableConstraint shift to state 647
-- On simpleDefinedValue shift to state 64
-- On simpleDefinedType shift to state 213
-- On signedNumber shift to state 321
-- On setValue shift to state 322
-- On setType shift to state 215
-- On setOfValue shift to state 323
-- On setOfType shift to state 216
-- On sequenceValue shift to state 324
-- On sequenceType shift to state 217
-- On sequenceOfValue shift to state 325
-- On sequenceOfType shift to state 218
-- On selectionType shift to state 219
-- On rootElementSetSpec shift to state 648
-- On restrictedCharacterStringValue shift to state 326
-- On restrictedCharacterStringType shift to state 220
-- On relativeOIDValue shift to state 327
-- On relativeOIDType shift to state 221
-- On referencedValue shift to state 328
-- On referencedType shift to state 222
-- On referencedObjects shift to state 518
-- On realValue shift to state 332
-- On realType shift to state 232
-- On quadruple shift to state 333
-- On permittedAlphabet shift to state 521
-- On patternConstraint shift to state 522
-- On parameterizedValueSetType shift to state 233
-- On parameterizedValue shift to state 135
-- On parameterizedType shift to state 234
-- On parameterizedObjectSet shift to state 523
-- On parameterizedObject shift to state 524
-- On openTypeFieldVal shift to state 334
-- On octetStringValue shift to state 335
-- On octetStringType shift to state 237
-- On object_x shift to state 525
-- On objectSetFromObjects shift to state 526
-- On objectSetElements shift to state 527
-- On objectSet shift to state 653
-- On objectIdentifierValue shift to state 336
-- On objectIdentifierType shift to state 238
-- On objectFromObject shift to state 528
-- On objectDefn shift to state 529
-- On objectClassFieldValue shift to state 337
-- On objectClassFieldType shift to state 239
-- On numericRealValue shift to state 338
-- On nullValue shift to state 339
-- On nullType shift to state 240
-- On lowerEndValue shift to state 530
-- On lowerEndPoint shift to state 532
-- On intersections shift to state 564
-- On intersectionElements shift to state 555
-- On integerValue shift to state 340
-- On integerType shift to state 241
-- On instanceOfType shift to state 242
-- On innerTypeConstraints shift to state 540
-- On includes shift to state 541
-- On iElems shift to state 556
-- On generalConstraint shift to state 654
-- On fixedTypeFieldVal shift to state 341
-- On externalValueReference shift to state 136
-- On externalValue shift to state 342
-- On externalTypeReference shift to state 243
-- On externalType shift to state 244
-- On externalObjectSetReference shift to state 245
-- On externalObjectReference shift to state 246
-- On externalObjectClassReference shift to state 164
-- On enumeratedValue shift to state 343
-- On enumeratedType shift to state 247
-- On embeddedPDVValue shift to state 344
-- On embeddedPDVType shift to state 248
-- On elems shift to state 561
-- On elements shift to state 563
-- On elementSetSpecs shift to state 655
-- On elementSetSpec shift to state 582
-- On definedValue shift to state 345
-- On definedType shift to state 249
-- On definedObjectSet shift to state 544
-- On definedObjectClass shift to state 252
-- On definedObject shift to state 545
-- On defaultSyntax shift to state 546
-- On contentsConstraint shift to state 656
-- On containedSubtype shift to state 547
-- On constraintSpec shift to state 657
-- On constrainedType shift to state 257
-- On componentRelationConstraint shift to state 660
-- On choiceValue shift to state 346
-- On choiceType shift to state 258
-- On characterStringValue shift to state 347
-- On characterStringType shift to state 259
-- On characterStringList shift to state 348
-- On builtinValue shift to state 349
-- On builtinType shift to state 260
-- On booleanValue shift to state 350
-- On booleanType shift to state 261
-- On bitStringValue shift to state 351
-- On bitStringType shift to state 262
## Reductions:

State 82:
## Known stack suffix:
## WITH
## LR(1) items:
innerTypeConstraints -> WITH . COMPONENT singleTypeConstraint [ UNION RightParen RightBrace Middle INTERSECTION EXCEPT Comma Circumflex Bang ]
innerTypeConstraints -> WITH . COMPONENTS multipleTypeConstraints [ UNION RightParen RightBrace Middle INTERSECTION EXCEPT Comma Circumflex Bang ]
## Transitions:
-- On COMPONENTS shift to state 83
-- On COMPONENT shift to state 105
## Reductions:

State 83:
## Known stack suffix:
## WITH COMPONENTS
## LR(1) items:
innerTypeConstraints -> WITH COMPONENTS . multipleTypeConstraints [ UNION RightParen RightBrace Middle INTERSECTION EXCEPT Comma Circumflex Bang ]
## Transitions:
-- On LeftBrace shift to state 84
-- On partialSpecification shift to state 102
-- On multipleTypeConstraints shift to state 103
-- On fullSpecification shift to state 104
## Reductions:

State 84:
## Known stack suffix:
## LeftBrace
## LR(1) items:
fullSpecification -> LeftBrace . typeConstraints RightBrace [ UNION RightParen RightBrace Middle INTERSECTION EXCEPT Comma Circumflex Bang ]
partialSpecification -> LeftBrace . Ellipsis Comma typeConstraints RightBrace [ UNION RightParen RightBrace Middle INTERSECTION EXCEPT Comma Circumflex Bang ]
## Transitions:
-- On Lower shift to state 85
-- On Ellipsis shift to state 93
-- On typeConstraints shift to state 100
-- On namedConstraint shift to state 97
## Reductions:

State 85:
## Known stack suffix:
## Lower
## LR(1) items:
namedConstraint -> Lower . componentConstraint [ RightBrace Comma ]
## Transitions:
-- On LeftParen shift to state 81
-- On valueConstraint shift to state 86
-- On constraint_x shift to state 91
-- On componentConstraint shift to state 92
## Reductions:
-- On RightBrace reduce production valueConstraint ->
-- On PRESENT reduce production valueConstraint ->
-- On OPTIONAL reduce production valueConstraint ->
-- On Comma reduce production valueConstraint ->
-- On ABSENT reduce production valueConstraint ->

State 86:
## Known stack suffix:
## valueConstraint
## LR(1) items:
componentConstraint -> valueConstraint . presenceConstraint [ RightBrace Comma ]
## Transitions:
-- On PRESENT shift to state 87
-- On OPTIONAL shift to state 88
-- On ABSENT shift to state 89
-- On presenceConstraint shift to state 90
## Reductions:
-- On RightBrace reduce production presenceConstraint ->
-- On Comma reduce production presenceConstraint ->

State 87:
## Known stack suffix:
## PRESENT
## LR(1) items:
presenceConstraint -> PRESENT . [ RightBrace Comma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production presenceConstraint -> PRESENT

State 88:
## Known stack suffix:
## OPTIONAL
## LR(1) items:
presenceConstraint -> OPTIONAL . [ RightBrace Comma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production presenceConstraint -> OPTIONAL

State 89:
## Known stack suffix:
## ABSENT
## LR(1) items:
presenceConstraint -> ABSENT . [ RightBrace Comma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production presenceConstraint -> ABSENT

State 90:
## Known stack suffix:
## valueConstraint presenceConstraint
## LR(1) items:
componentConstraint -> valueConstraint presenceConstraint . [ RightBrace Comma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production componentConstraint -> valueConstraint presenceConstraint

State 91:
## Known stack suffix:
## constraint_x
## LR(1) items:
valueConstraint -> constraint_x . [ RightBrace PRESENT OPTIONAL Comma ABSENT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production valueConstraint -> constraint_x

State 92:
## Known stack suffix:
## Lower componentConstraint
## LR(1) items:
namedConstraint -> Lower componentConstraint . [ RightBrace Comma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production namedConstraint -> Lower componentConstraint

State 93:
## Known stack suffix:
## LeftBrace Ellipsis
## LR(1) items:
partialSpecification -> LeftBrace Ellipsis . Comma typeConstraints RightBrace [ UNION RightParen RightBrace Middle INTERSECTION EXCEPT Comma Circumflex Bang ]
## Transitions:
-- On Comma shift to state 94
## Reductions:

State 94:
## Known stack suffix:
## LeftBrace Ellipsis Comma
## LR(1) items:
partialSpecification -> LeftBrace Ellipsis Comma . typeConstraints RightBrace [ UNION RightParen RightBrace Middle INTERSECTION EXCEPT Comma Circumflex Bang ]
## Transitions:
-- On Lower shift to state 85
-- On typeConstraints shift to state 95
-- On namedConstraint shift to state 97
## Reductions:

State 95:
## Known stack suffix:
## LeftBrace Ellipsis Comma typeConstraints
## LR(1) items:
partialSpecification -> LeftBrace Ellipsis Comma typeConstraints . RightBrace [ UNION RightParen RightBrace Middle INTERSECTION EXCEPT Comma Circumflex Bang ]
## Transitions:
-- On RightBrace shift to state 96
## Reductions:

State 96:
## Known stack suffix:
## LeftBrace Ellipsis Comma typeConstraints RightBrace
## LR(1) items:
partialSpecification -> LeftBrace Ellipsis Comma typeConstraints RightBrace . [ UNION RightParen RightBrace Middle INTERSECTION EXCEPT Comma Circumflex Bang ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production partialSpecification -> LeftBrace Ellipsis Comma typeConstraints RightBrace

State 97:
## Known stack suffix:
## namedConstraint
## LR(1) items:
typeConstraints -> namedConstraint . [ RightBrace ]
typeConstraints -> namedConstraint . Comma typeConstraints [ RightBrace ]
## Transitions:
-- On Comma shift to state 98
## Reductions:
-- On RightBrace reduce production typeConstraints -> namedConstraint

State 98:
## Known stack suffix:
## namedConstraint Comma
## LR(1) items:
typeConstraints -> namedConstraint Comma . typeConstraints [ RightBrace ]
## Transitions:
-- On Lower shift to state 85
-- On typeConstraints shift to state 99
-- On namedConstraint shift to state 97
## Reductions:

State 99:
## Known stack suffix:
## namedConstraint Comma typeConstraints
## LR(1) items:
typeConstraints -> namedConstraint Comma typeConstraints . [ RightBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production typeConstraints -> namedConstraint Comma typeConstraints

State 100:
## Known stack suffix:
## LeftBrace typeConstraints
## LR(1) items:
fullSpecification -> LeftBrace typeConstraints . RightBrace [ UNION RightParen RightBrace Middle INTERSECTION EXCEPT Comma Circumflex Bang ]
## Transitions:
-- On RightBrace shift to state 101
## Reductions:

State 101:
## Known stack suffix:
## LeftBrace typeConstraints RightBrace
## LR(1) items:
fullSpecification -> LeftBrace typeConstraints RightBrace . [ UNION RightParen RightBrace Middle INTERSECTION EXCEPT Comma Circumflex Bang ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production fullSpecification -> LeftBrace typeConstraints RightBrace

State 102:
## Known stack suffix:
## partialSpecification
## LR(1) items:
multipleTypeConstraints -> partialSpecification . [ UNION RightParen RightBrace Middle INTERSECTION EXCEPT Comma Circumflex Bang ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production multipleTypeConstraints -> partialSpecification

State 103:
## Known stack suffix:
## WITH COMPONENTS multipleTypeConstraints
## LR(1) items:
innerTypeConstraints -> WITH COMPONENTS multipleTypeConstraints . [ UNION RightParen RightBrace Middle INTERSECTION EXCEPT Comma Circumflex Bang ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production innerTypeConstraints -> WITH COMPONENTS multipleTypeConstraints

State 104:
## Known stack suffix:
## fullSpecification
## LR(1) items:
multipleTypeConstraints -> fullSpecification . [ UNION RightParen RightBrace Middle INTERSECTION EXCEPT Comma Circumflex Bang ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production multipleTypeConstraints -> fullSpecification

State 105:
## Known stack suffix:
## WITH COMPONENT
## LR(1) items:
innerTypeConstraints -> WITH COMPONENT . singleTypeConstraint [ UNION RightParen RightBrace Middle INTERSECTION EXCEPT Comma Circumflex Bang ]
## Transitions:
-- On LeftParen shift to state 81
-- On singleTypeConstraint shift to state 106
-- On constraint_x shift to state 107
## Reductions:

State 106:
## Known stack suffix:
## WITH COMPONENT singleTypeConstraint
## LR(1) items:
innerTypeConstraints -> WITH COMPONENT singleTypeConstraint . [ UNION RightParen RightBrace Middle INTERSECTION EXCEPT Comma Circumflex Bang ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production innerTypeConstraints -> WITH COMPONENT singleTypeConstraint

State 107:
## Known stack suffix:
## constraint_x
## LR(1) items:
singleTypeConstraint -> constraint_x . [ UNION RightParen RightBrace Middle INTERSECTION EXCEPT Comma Circumflex Bang ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production singleTypeConstraint -> constraint_x

State 108:
## Known stack suffix:
## Upper
## LR(1) items:
definedObjectClass -> Upper . [ Dot ]
definedObjectSet -> Upper . [ UNION RightParen RightBrace Middle LeftBrace INTERSECTION EXCEPT Dot Comma Circumflex Bang ]
definedType -> Upper . [ UNION RightParen RightBrace Middle LeftParen INTERSECTION EXCEPT ENCODED Comma Colon Circumflex Bang ]
externalObjectClassReference -> Upper . Dot Upper [ Dot ]
externalObjectReference -> Upper . Dot Lower [ UNION RightParen RightBrace Middle LeftBrace INTERSECTION EXCEPT Dot Comma Circumflex Bang ]
externalObjectSetReference -> Upper . Dot Upper [ UNION RightParen RightBrace Middle LeftBrace INTERSECTION EXCEPT Dot Comma Circumflex Bang ]
externalTypeReference -> Upper . Dot Upper [ UNION RightParen RightBrace Middle LeftParen LeftBrace INTERSECTION EXCEPT ENCODED Comma Colon Circumflex Bang ]
externalValueReference -> Upper . Dot Lower [ Upper UNION RightParen RightDoubleBracket RightBrace Number Middle Lower LessThan LeftBrace INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
simpleDefinedType -> Upper . [ LeftBrace ]
## Transitions:
-- On Dot shift to state 109
## Reductions:
-- On UNION reduce production definedType -> Upper
-- On RightParen reduce production definedType -> Upper
-- On RightBrace reduce production definedType -> Upper
-- On Middle reduce production definedType -> Upper
-- On LeftParen reduce production definedType -> Upper
-- On LeftBrace reduce production definedObjectSet -> Upper
-- On INTERSECTION reduce production definedType -> Upper
-- On EXCEPT reduce production definedType -> Upper
-- On ENCODED reduce production definedType -> Upper
-- On Comma reduce production definedType -> Upper
-- On Colon reduce production definedType -> Upper
-- On Circumflex reduce production definedType -> Upper
-- On Bang reduce production definedType -> Upper

State 109:
## Known stack suffix:
## Upper Dot
## LR(1) items:
externalObjectClassReference -> Upper Dot . Upper [ Dot ]
externalObjectReference -> Upper Dot . Lower [ UNION RightParen RightBrace Middle LeftBrace INTERSECTION EXCEPT Dot Comma Circumflex Bang ]
externalObjectSetReference -> Upper Dot . Upper [ UNION RightParen RightBrace Middle LeftBrace INTERSECTION EXCEPT Dot Comma Circumflex Bang ]
externalTypeReference -> Upper Dot . Upper [ UNION RightParen RightBrace Middle LeftParen LeftBrace INTERSECTION EXCEPT ENCODED Comma Colon Circumflex Bang ]
externalValueReference -> Upper Dot . Lower [ Upper UNION RightParen RightDoubleBracket RightBrace Number Middle Lower LessThan LeftBrace INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
## Transitions:
-- On Upper shift to state 110
-- On Lower shift to state 71
## Reductions:

State 110:
## Known stack suffix:
## Upper Dot Upper
## LR(1) items:
externalObjectClassReference -> Upper Dot Upper . [ Dot ]
externalObjectSetReference -> Upper Dot Upper . [ UNION RightParen RightBrace Middle LeftBrace INTERSECTION EXCEPT Dot Comma Circumflex Bang ]
externalTypeReference -> Upper Dot Upper . [ UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle LeftParen LeftBrace INTERSECTION EXCEPT ENCODED DEFAULT Comma Colon Circumflex Bang ]
## Transitions:
## Reductions:
-- On UNION reduce production externalTypeReference -> Upper Dot Upper
-- On RightParen reduce production externalTypeReference -> Upper Dot Upper
-- On RightDoubleBracket reduce production externalTypeReference -> Upper Dot Upper
-- On RightBrace reduce production externalTypeReference -> Upper Dot Upper
-- On OPTIONAL reduce production externalTypeReference -> Upper Dot Upper
-- On Middle reduce production externalTypeReference -> Upper Dot Upper
-- On LeftParen reduce production externalTypeReference -> Upper Dot Upper
-- On LeftBrace reduce production externalTypeReference -> Upper Dot Upper
-- On INTERSECTION reduce production externalTypeReference -> Upper Dot Upper
-- On EXCEPT reduce production externalTypeReference -> Upper Dot Upper
-- On ENCODED reduce production externalTypeReference -> Upper Dot Upper
-- On Dot reduce production externalObjectClassReference -> Upper Dot Upper
-- On DEFAULT reduce production externalTypeReference -> Upper Dot Upper
-- On Comma reduce production externalTypeReference -> Upper Dot Upper
-- On Colon reduce production externalTypeReference -> Upper Dot Upper
-- On Circumflex reduce production externalTypeReference -> Upper Dot Upper
-- On Bang reduce production externalTypeReference -> Upper Dot Upper

State 111:
## Known stack suffix:
## SEQUENCE
## LR(1) items:
sequenceOfType -> SEQUENCE . OF type_x [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
sequenceOfType -> SEQUENCE . OF namedType [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
sequenceType -> SEQUENCE . LeftBrace RightBrace [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
sequenceType -> SEQUENCE . LeftBrace extensionAndException optionalExtensionMarker RightBrace [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
sequenceType -> SEQUENCE . LeftBrace componentTypeLists RightBrace [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
typeWithConstraint -> SEQUENCE . constraint_x OF type_x [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
typeWithConstraint -> SEQUENCE . sizeConstraint OF type_x [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
typeWithConstraint -> SEQUENCE . constraint_x OF namedType [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
typeWithConstraint -> SEQUENCE . sizeConstraint OF namedType [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
-- On SIZE shift to state 80
-- On OF shift to state 112
-- On LeftParen shift to state 81
-- On LeftBrace shift to state 442
-- On sizeConstraint shift to state 487
-- On constraint_x shift to state 491
## Reductions:

State 112:
## Known stack suffix:
## SEQUENCE OF
## LR(1) items:
sequenceOfType -> SEQUENCE OF . type_x [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
sequenceOfType -> SEQUENCE OF . namedType [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
-- On VisibleString shift to state 66
-- On VideotexString shift to state 67
-- On Upper shift to state 113
-- On UniversalString shift to state 72
-- On UTF8String shift to state 73
-- On UTCTime shift to state 74
-- On TeletexString shift to state 75
-- On TYPE_IDENTIFIER shift to state 76
-- On T61String shift to state 78
-- On SET shift to state 79
-- On SEQUENCE shift to state 111
-- On RELATIVE_OID shift to state 116
-- On REAL shift to state 117
-- On PrintableString shift to state 118
-- On ObjectDescriptor shift to state 119
-- On OCTET shift to state 120
-- On OBJECT shift to state 122
-- On NumericString shift to state 124
-- On NULL shift to state 125
-- On Lower shift to state 126
-- On LeftBracket shift to state 129
-- On ISO646String shift to state 140
-- On INTEGER shift to state 141
-- On INSTANCE shift to state 157
-- On IA5String shift to state 166
-- On GraphicString shift to state 167
-- On GeneralizedTime shift to state 168
-- On GeneralString shift to state 169
-- On EXTERNAL shift to state 170
-- On ENUMERATED shift to state 171
-- On EMBEDDED shift to state 179
-- On CHOICE shift to state 181
-- On CHARACTER shift to state 184
-- On BOOLEAN shift to state 186
-- On BMPString shift to state 187
-- On BIT shift to state 188
-- On ABSTRACT_SYNTAX shift to state 162
-- On valueSetFromObjects shift to state 202
-- On usefulType shift to state 203
-- On usefulObjectClassReference shift to state 163
-- On unrestrictedCharacterStringType shift to state 204
-- On type_x shift to state 440
-- On typeWithConstraint shift to state 207
-- On typeFromObject shift to state 208
-- On taggedType shift to state 209
-- On tag shift to state 210
-- On simpleDefinedType shift to state 213
-- On setType shift to state 215
-- On setOfType shift to state 216
-- On sequenceType shift to state 217
-- On sequenceOfType shift to state 218
-- On selectionType shift to state 219
-- On restrictedCharacterStringType shift to state 220
-- On relativeOIDType shift to state 221
-- On referencedType shift to state 222
-- On referencedObjects shift to state 223
-- On realType shift to state 232
-- On parameterizedValueSetType shift to state 233
-- On parameterizedType shift to state 234
-- On parameterizedObjectSet shift to state 235
-- On parameterizedObject shift to state 236
-- On octetStringType shift to state 237
-- On objectIdentifierType shift to state 238
-- On objectClassFieldType shift to state 239
-- On nullType shift to state 240
-- On namedType shift to state 441
-- On integerType shift to state 241
-- On instanceOfType shift to state 242
-- On externalTypeReference shift to state 243
-- On externalType shift to state 244
-- On externalObjectSetReference shift to state 245
-- On externalObjectReference shift to state 246
-- On externalObjectClassReference shift to state 164
-- On enumeratedType shift to state 247
-- On embeddedPDVType shift to state 248
-- On definedType shift to state 249
-- On definedObjectSet shift to state 250
-- On definedObjectClass shift to state 252
-- On definedObject shift to state 255
-- On constrainedType shift to state 257
-- On choiceType shift to state 258
-- On characterStringType shift to state 259
-- On builtinType shift to state 260
-- On booleanType shift to state 261
-- On bitStringType shift to state 262
## Reductions:

State 113:
## Known stack suffix:
## Upper
## LR(1) items:
definedObjectClass -> Upper . [ Upper RightBrace OPTIONAL Lower END Dot DEFAULT Comma Colon Assignment ]
definedObjectSet -> Upper . [ LeftBrace Dot ]
definedType -> Upper . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
externalObjectClassReference -> Upper . Dot Upper [ Upper RightBrace OPTIONAL Lower END Dot DEFAULT Comma Colon Assignment ]
externalObjectReference -> Upper . Dot Lower [ LeftBrace Dot ]
externalObjectSetReference -> Upper . Dot Upper [ LeftBrace Dot ]
externalTypeReference -> Upper . Dot Upper [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen LeftBrace INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
simpleDefinedType -> Upper . [ LeftBrace ]
## Transitions:
-- On Dot shift to state 114
## Reductions:
-- On Upper reduce production definedType -> Upper
-- On UNIQUE reduce production definedType -> Upper
-- On UNION reduce production definedType -> Upper
-- On RightParen reduce production definedType -> Upper
-- On RightDoubleBracket reduce production definedType -> Upper
-- On RightBrace reduce production definedType -> Upper
-- On OPTIONAL reduce production definedType -> Upper
-- On Middle reduce production definedType -> Upper
-- On Lower reduce production definedType -> Upper
-- On LeftParen reduce production definedType -> Upper
-- On LeftBrace reduce production definedObjectSet -> Upper
-- On INTERSECTION reduce production definedType -> Upper
-- On EXCEPT reduce production definedType -> Upper
-- On END reduce production definedType -> Upper
-- On ENCODED reduce production definedType -> Upper
-- On DEFAULT reduce production definedType -> Upper
-- On Comma reduce production definedType -> Upper
-- On Colon reduce production definedType -> Upper
-- On Circumflex reduce production definedType -> Upper
-- On Bang reduce production definedType -> Upper
-- On Assignment reduce production definedType -> Upper

State 114:
## Known stack suffix:
## Upper Dot
## LR(1) items:
externalObjectClassReference -> Upper Dot . Upper [ Upper RightBrace OPTIONAL Lower END Dot DEFAULT Comma Colon Assignment ]
externalObjectReference -> Upper Dot . Lower [ LeftBrace Dot ]
externalObjectSetReference -> Upper Dot . Upper [ LeftBrace Dot ]
externalTypeReference -> Upper Dot . Upper [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen LeftBrace INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
-- On Upper shift to state 70
-- On Lower shift to state 115
## Reductions:

State 115:
## Known stack suffix:
## Upper Dot Lower
## LR(1) items:
externalObjectReference -> Upper Dot Lower . [ Upper RightBrace Lower LeftBrace END Dot Comma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production externalObjectReference -> Upper Dot Lower

State 116:
## Known stack suffix:
## RELATIVE_OID
## LR(1) items:
relativeOIDType -> RELATIVE_OID . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production relativeOIDType -> RELATIVE_OID

State 117:
## Known stack suffix:
## REAL
## LR(1) items:
realType -> REAL . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production realType -> REAL

State 118:
## Known stack suffix:
## PrintableString
## LR(1) items:
restrictedCharacterStringType -> PrintableString . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production restrictedCharacterStringType -> PrintableString

State 119:
## Known stack suffix:
## ObjectDescriptor
## LR(1) items:
usefulType -> ObjectDescriptor . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production usefulType -> ObjectDescriptor

State 120:
## Known stack suffix:
## OCTET
## LR(1) items:
octetStringType -> OCTET . STRING [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
-- On STRING shift to state 121
## Reductions:

State 121:
## Known stack suffix:
## OCTET STRING
## LR(1) items:
octetStringType -> OCTET STRING . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production octetStringType -> OCTET STRING

State 122:
## Known stack suffix:
## OBJECT
## LR(1) items:
objectIdentifierType -> OBJECT . IDENTIFIER [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
-- On IDENTIFIER shift to state 123
## Reductions:

State 123:
## Known stack suffix:
## OBJECT IDENTIFIER
## LR(1) items:
objectIdentifierType -> OBJECT IDENTIFIER . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production objectIdentifierType -> OBJECT IDENTIFIER

State 124:
## Known stack suffix:
## NumericString
## LR(1) items:
restrictedCharacterStringType -> NumericString . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production restrictedCharacterStringType -> NumericString

State 125:
## Known stack suffix:
## NULL
## LR(1) items:
nullType -> NULL . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production nullType -> NULL

State 126:
## Known stack suffix:
## Lower
## LR(1) items:
definedObject -> Lower . [ LeftBrace Dot ]
namedType -> Lower . type_x [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
selectionType -> Lower . LessThan type_x [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
-- On VisibleString shift to state 66
-- On VideotexString shift to state 67
-- On Upper shift to state 113
-- On UniversalString shift to state 72
-- On UTF8String shift to state 73
-- On UTCTime shift to state 74
-- On TeletexString shift to state 75
-- On TYPE_IDENTIFIER shift to state 76
-- On T61String shift to state 78
-- On SET shift to state 79
-- On SEQUENCE shift to state 111
-- On RELATIVE_OID shift to state 116
-- On REAL shift to state 117
-- On PrintableString shift to state 118
-- On ObjectDescriptor shift to state 119
-- On OCTET shift to state 120
-- On OBJECT shift to state 122
-- On NumericString shift to state 124
-- On NULL shift to state 125
-- On Lower shift to state 127
-- On LessThan shift to state 128
-- On LeftBracket shift to state 129
-- On ISO646String shift to state 140
-- On INTEGER shift to state 141
-- On INSTANCE shift to state 157
-- On IA5String shift to state 166
-- On GraphicString shift to state 167
-- On GeneralizedTime shift to state 168
-- On GeneralString shift to state 169
-- On EXTERNAL shift to state 170
-- On ENUMERATED shift to state 171
-- On EMBEDDED shift to state 179
-- On CHOICE shift to state 181
-- On CHARACTER shift to state 184
-- On BOOLEAN shift to state 186
-- On BMPString shift to state 187
-- On BIT shift to state 188
-- On ABSTRACT_SYNTAX shift to state 162
-- On valueSetFromObjects shift to state 202
-- On usefulType shift to state 203
-- On usefulObjectClassReference shift to state 163
-- On unrestrictedCharacterStringType shift to state 204
-- On type_x shift to state 205
-- On typeWithConstraint shift to state 207
-- On typeFromObject shift to state 208
-- On taggedType shift to state 209
-- On tag shift to state 210
-- On simpleDefinedType shift to state 213
-- On setType shift to state 215
-- On setOfType shift to state 216
-- On sequenceType shift to state 217
-- On sequenceOfType shift to state 218
-- On selectionType shift to state 219
-- On restrictedCharacterStringType shift to state 220
-- On relativeOIDType shift to state 221
-- On referencedType shift to state 222
-- On referencedObjects shift to state 223
-- On realType shift to state 232
-- On parameterizedValueSetType shift to state 233
-- On parameterizedType shift to state 234
-- On parameterizedObjectSet shift to state 235
-- On parameterizedObject shift to state 236
-- On octetStringType shift to state 237
-- On objectIdentifierType shift to state 238
-- On objectClassFieldType shift to state 239
-- On nullType shift to state 240
-- On integerType shift to state 241
-- On instanceOfType shift to state 242
-- On externalTypeReference shift to state 243
-- On externalType shift to state 244
-- On externalObjectSetReference shift to state 245
-- On externalObjectReference shift to state 246
-- On externalObjectClassReference shift to state 164
-- On enumeratedType shift to state 247
-- On embeddedPDVType shift to state 248
-- On definedType shift to state 249
-- On definedObjectSet shift to state 250
-- On definedObjectClass shift to state 252
-- On definedObject shift to state 255
-- On constrainedType shift to state 257
-- On choiceType shift to state 258
-- On characterStringType shift to state 259
-- On builtinType shift to state 260
-- On booleanType shift to state 261
-- On bitStringType shift to state 262
## Reductions:
-- On LeftBrace reduce production definedObject -> Lower
-- On Dot reduce production definedObject -> Lower

State 127:
## Known stack suffix:
## Lower
## LR(1) items:
definedObject -> Lower . [ LeftBrace Dot ]
selectionType -> Lower . LessThan type_x [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
-- On LessThan shift to state 128
## Reductions:
-- On LeftBrace reduce production definedObject -> Lower
-- On Dot reduce production definedObject -> Lower

State 128:
## Known stack suffix:
## Lower LessThan
## LR(1) items:
selectionType -> Lower LessThan . type_x [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
-- On VisibleString shift to state 66
-- On VideotexString shift to state 67
-- On Upper shift to state 113
-- On UniversalString shift to state 72
-- On UTF8String shift to state 73
-- On UTCTime shift to state 74
-- On TeletexString shift to state 75
-- On TYPE_IDENTIFIER shift to state 76
-- On T61String shift to state 78
-- On SET shift to state 79
-- On SEQUENCE shift to state 111
-- On RELATIVE_OID shift to state 116
-- On REAL shift to state 117
-- On PrintableString shift to state 118
-- On ObjectDescriptor shift to state 119
-- On OCTET shift to state 120
-- On OBJECT shift to state 122
-- On NumericString shift to state 124
-- On NULL shift to state 125
-- On Lower shift to state 127
-- On LeftBracket shift to state 129
-- On ISO646String shift to state 140
-- On INTEGER shift to state 141
-- On INSTANCE shift to state 157
-- On IA5String shift to state 166
-- On GraphicString shift to state 167
-- On GeneralizedTime shift to state 168
-- On GeneralString shift to state 169
-- On EXTERNAL shift to state 170
-- On ENUMERATED shift to state 171
-- On EMBEDDED shift to state 179
-- On CHOICE shift to state 181
-- On CHARACTER shift to state 184
-- On BOOLEAN shift to state 186
-- On BMPString shift to state 187
-- On BIT shift to state 188
-- On ABSTRACT_SYNTAX shift to state 162
-- On valueSetFromObjects shift to state 202
-- On usefulType shift to state 203
-- On usefulObjectClassReference shift to state 163
-- On unrestrictedCharacterStringType shift to state 204
-- On type_x shift to state 439
-- On typeWithConstraint shift to state 207
-- On typeFromObject shift to state 208
-- On taggedType shift to state 209
-- On tag shift to state 210
-- On simpleDefinedType shift to state 213
-- On setType shift to state 215
-- On setOfType shift to state 216
-- On sequenceType shift to state 217
-- On sequenceOfType shift to state 218
-- On selectionType shift to state 219
-- On restrictedCharacterStringType shift to state 220
-- On relativeOIDType shift to state 221
-- On referencedType shift to state 222
-- On referencedObjects shift to state 223
-- On realType shift to state 232
-- On parameterizedValueSetType shift to state 233
-- On parameterizedType shift to state 234
-- On parameterizedObjectSet shift to state 235
-- On parameterizedObject shift to state 236
-- On octetStringType shift to state 237
-- On objectIdentifierType shift to state 238
-- On objectClassFieldType shift to state 239
-- On nullType shift to state 240
-- On integerType shift to state 241
-- On instanceOfType shift to state 242
-- On externalTypeReference shift to state 243
-- On externalType shift to state 244
-- On externalObjectSetReference shift to state 245
-- On externalObjectReference shift to state 246
-- On externalObjectClassReference shift to state 164
-- On enumeratedType shift to state 247
-- On embeddedPDVType shift to state 248
-- On definedType shift to state 249
-- On definedObjectSet shift to state 250
-- On definedObjectClass shift to state 252
-- On definedObject shift to state 255
-- On constrainedType shift to state 257
-- On choiceType shift to state 258
-- On characterStringType shift to state 259
-- On builtinType shift to state 260
-- On booleanType shift to state 261
-- On bitStringType shift to state 262
## Reductions:

State 129:
## Known stack suffix:
## LeftBracket
## LR(1) items:
tag -> LeftBracket . class_x classNumber RightBracket [ VisibleString VideotexString Upper UniversalString UTF8String UTCTime TeletexString TYPE_IDENTIFIER T61String SET SEQUENCE RELATIVE_OID REAL PrintableString ObjectDescriptor OCTET OBJECT NumericString NULL Lower LeftBracket ISO646String INTEGER INSTANCE IMPLICIT IA5String GraphicString GeneralizedTime GeneralString EXTERNAL EXPLICIT ENUMERATED EMBEDDED CHOICE CHARACTER BOOLEAN BMPString BIT ABSTRACT_SYNTAX ]
## Transitions:
-- On UNIVERSAL shift to state 130
-- On PRIVATE shift to state 131
-- On APPLICATION shift to state 132
-- On class_x shift to state 133
## Reductions:
-- On Upper reduce production class_x ->
-- On Number reduce production class_x ->
-- On Lower reduce production class_x ->

State 130:
## Known stack suffix:
## UNIVERSAL
## LR(1) items:
class_x -> UNIVERSAL . [ Upper Number Lower ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production class_x -> UNIVERSAL

State 131:
## Known stack suffix:
## PRIVATE
## LR(1) items:
class_x -> PRIVATE . [ Upper Number Lower ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production class_x -> PRIVATE

State 132:
## Known stack suffix:
## APPLICATION
## LR(1) items:
class_x -> APPLICATION . [ Upper Number Lower ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production class_x -> APPLICATION

State 133:
## Known stack suffix:
## LeftBracket class_x
## LR(1) items:
tag -> LeftBracket class_x . classNumber RightBracket [ VisibleString VideotexString Upper UniversalString UTF8String UTCTime TeletexString TYPE_IDENTIFIER T61String SET SEQUENCE RELATIVE_OID REAL PrintableString ObjectDescriptor OCTET OBJECT NumericString NULL Lower LeftBracket ISO646String INTEGER INSTANCE IMPLICIT IA5String GraphicString GeneralizedTime GeneralString EXTERNAL EXPLICIT ENUMERATED EMBEDDED CHOICE CHARACTER BOOLEAN BMPString BIT ABSTRACT_SYNTAX ]
## Transitions:
-- On Upper shift to state 56
-- On Number shift to state 134
-- On Lower shift to state 59
-- On simpleDefinedValue shift to state 64
-- On parameterizedValue shift to state 135
-- On externalValueReference shift to state 136
-- On definedValue shift to state 137
-- On classNumber shift to state 138
## Reductions:

State 134:
## Known stack suffix:
## Number
## LR(1) items:
classNumber -> Number . [ RightBracket ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production classNumber -> Number

State 135:
## Known stack suffix:
## parameterizedValue
## LR(1) items:
definedValue -> parameterizedValue . [ Upper UNION SemiColon RightParen RightDoubleBracket RightBracket RightBrace Number Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production definedValue -> parameterizedValue

State 136:
## Known stack suffix:
## externalValueReference
## LR(1) items:
definedValue -> externalValueReference . [ Upper UNION SemiColon RightParen RightDoubleBracket RightBracket RightBrace Number Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
simpleDefinedValue -> externalValueReference . [ LeftBrace ]
## Transitions:
## Reductions:
-- On Upper reduce production definedValue -> externalValueReference
-- On UNION reduce production definedValue -> externalValueReference
-- On SemiColon reduce production definedValue -> externalValueReference
-- On RightParen reduce production definedValue -> externalValueReference
-- On RightDoubleBracket reduce production definedValue -> externalValueReference
-- On RightBracket reduce production definedValue -> externalValueReference
-- On RightBrace reduce production definedValue -> externalValueReference
-- On Number reduce production definedValue -> externalValueReference
-- On Middle reduce production definedValue -> externalValueReference
-- On Lower reduce production definedValue -> externalValueReference
-- On LessThan reduce production definedValue -> externalValueReference
-- On LeftBrace reduce production simpleDefinedValue -> externalValueReference
-- On INTERSECTION reduce production definedValue -> externalValueReference
-- On EXCEPT reduce production definedValue -> externalValueReference
-- On END reduce production definedValue -> externalValueReference
-- On DoubleDot reduce production definedValue -> externalValueReference
-- On Comma reduce production definedValue -> externalValueReference
-- On Circumflex reduce production definedValue -> externalValueReference
-- On Bang reduce production definedValue -> externalValueReference

State 137:
## Known stack suffix:
## definedValue
## LR(1) items:
classNumber -> definedValue . [ RightBracket ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production classNumber -> definedValue

State 138:
## Known stack suffix:
## LeftBracket class_x classNumber
## LR(1) items:
tag -> LeftBracket class_x classNumber . RightBracket [ VisibleString VideotexString Upper UniversalString UTF8String UTCTime TeletexString TYPE_IDENTIFIER T61String SET SEQUENCE RELATIVE_OID REAL PrintableString ObjectDescriptor OCTET OBJECT NumericString NULL Lower LeftBracket ISO646String INTEGER INSTANCE IMPLICIT IA5String GraphicString GeneralizedTime GeneralString EXTERNAL EXPLICIT ENUMERATED EMBEDDED CHOICE CHARACTER BOOLEAN BMPString BIT ABSTRACT_SYNTAX ]
## Transitions:
-- On RightBracket shift to state 139
## Reductions:

State 139:
## Known stack suffix:
## LeftBracket class_x classNumber RightBracket
## LR(1) items:
tag -> LeftBracket class_x classNumber RightBracket . [ VisibleString VideotexString Upper UniversalString UTF8String UTCTime TeletexString TYPE_IDENTIFIER T61String SET SEQUENCE RELATIVE_OID REAL PrintableString ObjectDescriptor OCTET OBJECT NumericString NULL Lower LeftBracket ISO646String INTEGER INSTANCE IMPLICIT IA5String GraphicString GeneralizedTime GeneralString EXTERNAL EXPLICIT ENUMERATED EMBEDDED CHOICE CHARACTER BOOLEAN BMPString BIT ABSTRACT_SYNTAX ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production tag -> LeftBracket class_x classNumber RightBracket

State 140:
## Known stack suffix:
## ISO646String
## LR(1) items:
restrictedCharacterStringType -> ISO646String . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production restrictedCharacterStringType -> ISO646String

State 141:
## Known stack suffix:
## INTEGER
## LR(1) items:
integerType -> INTEGER . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
integerType -> INTEGER . LeftBrace namedNumberList RightBrace [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
-- On LeftBrace shift to state 142
## Reductions:
-- On Upper reduce production integerType -> INTEGER
-- On UNIQUE reduce production integerType -> INTEGER
-- On UNION reduce production integerType -> INTEGER
-- On RightParen reduce production integerType -> INTEGER
-- On RightDoubleBracket reduce production integerType -> INTEGER
-- On RightBrace reduce production integerType -> INTEGER
-- On OPTIONAL reduce production integerType -> INTEGER
-- On Middle reduce production integerType -> INTEGER
-- On Lower reduce production integerType -> INTEGER
-- On LeftParen reduce production integerType -> INTEGER
-- On INTERSECTION reduce production integerType -> INTEGER
-- On EXCEPT reduce production integerType -> INTEGER
-- On END reduce production integerType -> INTEGER
-- On ENCODED reduce production integerType -> INTEGER
-- On DEFAULT reduce production integerType -> INTEGER
-- On Comma reduce production integerType -> INTEGER
-- On Colon reduce production integerType -> INTEGER
-- On Circumflex reduce production integerType -> INTEGER
-- On Bang reduce production integerType -> INTEGER
-- On Assignment reduce production integerType -> INTEGER

State 142:
## Known stack suffix:
## INTEGER LeftBrace
## LR(1) items:
integerType -> INTEGER LeftBrace . namedNumberList RightBrace [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
-- On Lower shift to state 143
-- On namedNumberList shift to state 152
-- On namedNumber shift to state 156
## Reductions:

State 143:
## Known stack suffix:
## Lower
## LR(1) items:
namedNumber -> Lower . LeftParen signedNumber RightParen [ RightBrace Comma ]
namedNumber -> Lower . LeftParen definedValue RightParen [ RightBrace Comma ]
## Transitions:
-- On LeftParen shift to state 144
## Reductions:

State 144:
## Known stack suffix:
## Lower LeftParen
## LR(1) items:
namedNumber -> Lower LeftParen . signedNumber RightParen [ RightBrace Comma ]
namedNumber -> Lower LeftParen . definedValue RightParen [ RightBrace Comma ]
## Transitions:
-- On Upper shift to state 56
-- On Number shift to state 145
-- On Lower shift to state 59
-- On Hyphen shift to state 146
-- On simpleDefinedValue shift to state 64
-- On signedNumber shift to state 148
-- On parameterizedValue shift to state 135
-- On externalValueReference shift to state 136
-- On definedValue shift to state 150
## Reductions:

State 145:
## Known stack suffix:
## Number
## LR(1) items:
signedNumber -> Number . [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production signedNumber -> Number

State 146:
## Known stack suffix:
## Hyphen
## LR(1) items:
signedNumber -> Hyphen . Number [ RightParen RightBrace Comma ]
## Transitions:
-- On Number shift to state 147
## Reductions:

State 147:
## Known stack suffix:
## Hyphen Number
## LR(1) items:
signedNumber -> Hyphen Number . [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production signedNumber -> Hyphen Number

State 148:
## Known stack suffix:
## Lower LeftParen signedNumber
## LR(1) items:
namedNumber -> Lower LeftParen signedNumber . RightParen [ RightBrace Comma ]
## Transitions:
-- On RightParen shift to state 149
## Reductions:

State 149:
## Known stack suffix:
## Lower LeftParen signedNumber RightParen
## LR(1) items:
namedNumber -> Lower LeftParen signedNumber RightParen . [ RightBrace Comma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production namedNumber -> Lower LeftParen signedNumber RightParen

State 150:
## Known stack suffix:
## Lower LeftParen definedValue
## LR(1) items:
namedNumber -> Lower LeftParen definedValue . RightParen [ RightBrace Comma ]
## Transitions:
-- On RightParen shift to state 151
## Reductions:

State 151:
## Known stack suffix:
## Lower LeftParen definedValue RightParen
## LR(1) items:
namedNumber -> Lower LeftParen definedValue RightParen . [ RightBrace Comma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production namedNumber -> Lower LeftParen definedValue RightParen

State 152:
## Known stack suffix:
## INTEGER LeftBrace namedNumberList
## LR(1) items:
integerType -> INTEGER LeftBrace namedNumberList . RightBrace [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
namedNumberList -> namedNumberList . Comma namedNumber [ RightBrace Comma ]
## Transitions:
-- On RightBrace shift to state 153
-- On Comma shift to state 154
## Reductions:

State 153:
## Known stack suffix:
## INTEGER LeftBrace namedNumberList RightBrace
## LR(1) items:
integerType -> INTEGER LeftBrace namedNumberList RightBrace . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production integerType -> INTEGER LeftBrace namedNumberList RightBrace

State 154:
## Known stack suffix:
## namedNumberList Comma
## LR(1) items:
namedNumberList -> namedNumberList Comma . namedNumber [ RightBrace Comma ]
## Transitions:
-- On Lower shift to state 143
-- On namedNumber shift to state 155
## Reductions:

State 155:
## Known stack suffix:
## namedNumberList Comma namedNumber
## LR(1) items:
namedNumberList -> namedNumberList Comma namedNumber . [ RightBrace Comma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production namedNumberList -> namedNumberList Comma namedNumber

State 156:
## Known stack suffix:
## namedNumber
## LR(1) items:
namedNumberList -> namedNumber . [ RightBrace Comma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production namedNumberList -> namedNumber

State 157:
## Known stack suffix:
## INSTANCE
## LR(1) items:
instanceOfType -> INSTANCE . OF definedObjectClass [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
-- On OF shift to state 158
## Reductions:

State 158:
## Known stack suffix:
## INSTANCE OF
## LR(1) items:
instanceOfType -> INSTANCE OF . definedObjectClass [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
-- On Upper shift to state 159
-- On TYPE_IDENTIFIER shift to state 76
-- On ABSTRACT_SYNTAX shift to state 162
-- On usefulObjectClassReference shift to state 163
-- On externalObjectClassReference shift to state 164
-- On definedObjectClass shift to state 165
## Reductions:

State 159:
## Known stack suffix:
## Upper
## LR(1) items:
definedObjectClass -> Upper . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
externalObjectClassReference -> Upper . Dot Upper [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
-- On Dot shift to state 160
## Reductions:
-- On Upper reduce production definedObjectClass -> Upper
-- On UNIQUE reduce production definedObjectClass -> Upper
-- On UNION reduce production definedObjectClass -> Upper
-- On RightParen reduce production definedObjectClass -> Upper
-- On RightDoubleBracket reduce production definedObjectClass -> Upper
-- On RightBrace reduce production definedObjectClass -> Upper
-- On OPTIONAL reduce production definedObjectClass -> Upper
-- On Middle reduce production definedObjectClass -> Upper
-- On Lower reduce production definedObjectClass -> Upper
-- On LeftParen reduce production definedObjectClass -> Upper
-- On INTERSECTION reduce production definedObjectClass -> Upper
-- On EXCEPT reduce production definedObjectClass -> Upper
-- On END reduce production definedObjectClass -> Upper
-- On ENCODED reduce production definedObjectClass -> Upper
-- On DEFAULT reduce production definedObjectClass -> Upper
-- On Comma reduce production definedObjectClass -> Upper
-- On Colon reduce production definedObjectClass -> Upper
-- On Circumflex reduce production definedObjectClass -> Upper
-- On Bang reduce production definedObjectClass -> Upper
-- On Assignment reduce production definedObjectClass -> Upper

State 160:
## Known stack suffix:
## Upper Dot
## LR(1) items:
externalObjectClassReference -> Upper Dot . Upper [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
-- On Upper shift to state 161
## Reductions:

State 161:
## Known stack suffix:
## Upper Dot Upper
## LR(1) items:
externalObjectClassReference -> Upper Dot Upper . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production externalObjectClassReference -> Upper Dot Upper

State 162:
## Known stack suffix:
## ABSTRACT_SYNTAX
## LR(1) items:
usefulObjectClassReference -> ABSTRACT_SYNTAX . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED Dot DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production usefulObjectClassReference -> ABSTRACT_SYNTAX

State 163:
## Known stack suffix:
## usefulObjectClassReference
## LR(1) items:
definedObjectClass -> usefulObjectClassReference . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED Dot DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production definedObjectClass -> usefulObjectClassReference

State 164:
## Known stack suffix:
## externalObjectClassReference
## LR(1) items:
definedObjectClass -> externalObjectClassReference . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED Dot DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production definedObjectClass -> externalObjectClassReference

State 165:
## Known stack suffix:
## INSTANCE OF definedObjectClass
## LR(1) items:
instanceOfType -> INSTANCE OF definedObjectClass . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production instanceOfType -> INSTANCE OF definedObjectClass

State 166:
## Known stack suffix:
## IA5String
## LR(1) items:
restrictedCharacterStringType -> IA5String . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production restrictedCharacterStringType -> IA5String

State 167:
## Known stack suffix:
## GraphicString
## LR(1) items:
restrictedCharacterStringType -> GraphicString . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production restrictedCharacterStringType -> GraphicString

State 168:
## Known stack suffix:
## GeneralizedTime
## LR(1) items:
usefulType -> GeneralizedTime . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production usefulType -> GeneralizedTime

State 169:
## Known stack suffix:
## GeneralString
## LR(1) items:
restrictedCharacterStringType -> GeneralString . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production restrictedCharacterStringType -> GeneralString

State 170:
## Known stack suffix:
## EXTERNAL
## LR(1) items:
externalType -> EXTERNAL . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production externalType -> EXTERNAL

State 171:
## Known stack suffix:
## ENUMERATED
## LR(1) items:
enumeratedType -> ENUMERATED . LeftBrace enumerations RightBrace [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
-- On LeftBrace shift to state 172
## Reductions:

State 172:
## Known stack suffix:
## ENUMERATED LeftBrace
## LR(1) items:
enumeratedType -> ENUMERATED LeftBrace . enumerations RightBrace [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
-- On Lower shift to state 173
-- On rootEnumeration shift to state 174
-- On namedNumber shift to state 430
-- On enumerations shift to state 436
-- On enumerationItem shift to state 431
-- On enumeration shift to state 438
## Reductions:

State 173:
## Known stack suffix:
## Lower
## LR(1) items:
enumerationItem -> Lower . [ RightBrace Comma ]
namedNumber -> Lower . LeftParen signedNumber RightParen [ RightBrace Comma ]
namedNumber -> Lower . LeftParen definedValue RightParen [ RightBrace Comma ]
## Transitions:
-- On LeftParen shift to state 144
## Reductions:
-- On RightBrace reduce production enumerationItem -> Lower
-- On Comma reduce production enumerationItem -> Lower

State 174:
## Known stack suffix:
## rootEnumeration
## LR(1) items:
enumerations -> rootEnumeration . [ RightBrace ]
enumerations -> rootEnumeration . Comma Ellipsis exceptionSpec [ RightBrace ]
enumerations -> rootEnumeration . Comma Ellipsis exceptionSpec Comma additionalEnumeration [ RightBrace ]
## Transitions:
-- On Comma shift to state 175
## Reductions:
-- On RightBrace reduce production enumerations -> rootEnumeration

State 175:
## Known stack suffix:
## rootEnumeration Comma
## LR(1) items:
enumerations -> rootEnumeration Comma . Ellipsis exceptionSpec [ RightBrace ]
enumerations -> rootEnumeration Comma . Ellipsis exceptionSpec Comma additionalEnumeration [ RightBrace ]
## Transitions:
-- On Ellipsis shift to state 176
## Reductions:

State 176:
## Known stack suffix:
## rootEnumeration Comma Ellipsis
## LR(1) items:
enumerations -> rootEnumeration Comma Ellipsis . exceptionSpec [ RightBrace ]
enumerations -> rootEnumeration Comma Ellipsis . exceptionSpec Comma additionalEnumeration [ RightBrace ]
## Transitions:
-- On Bang shift to state 177
-- On exceptionSpec shift to state 428
## Reductions:
-- On RightBrace reduce production exceptionSpec ->
-- On Comma reduce production exceptionSpec ->

State 177:
## Known stack suffix:
## Bang
## LR(1) items:
exceptionSpec -> Bang . exceptionIdentification [ RightParen RightBrace Comma ]
## Transitions:
-- On VisibleString shift to state 66
-- On VideotexString shift to state 67
-- On Upper shift to state 108
-- On UniversalString shift to state 72
-- On UTF8String shift to state 73
-- On UTCTime shift to state 74
-- On TeletexString shift to state 75
-- On TYPE_IDENTIFIER shift to state 76
-- On T61String shift to state 78
-- On SET shift to state 79
-- On SEQUENCE shift to state 111
-- On RELATIVE_OID shift to state 116
-- On REAL shift to state 117
-- On PrintableString shift to state 118
-- On ObjectDescriptor shift to state 119
-- On OCTET shift to state 120
-- On OBJECT shift to state 122
-- On NumericString shift to state 124
-- On Number shift to state 145
-- On NULL shift to state 125
-- On Lower shift to state 178
-- On LeftBracket shift to state 129
-- On ISO646String shift to state 140
-- On INTEGER shift to state 141
-- On INSTANCE shift to state 157
-- On IA5String shift to state 166
-- On Hyphen shift to state 146
-- On GraphicString shift to state 167
-- On GeneralizedTime shift to state 168
-- On GeneralString shift to state 169
-- On EXTERNAL shift to state 170
-- On ENUMERATED shift to state 171
-- On EMBEDDED shift to state 179
-- On CHOICE shift to state 181
-- On CHARACTER shift to state 184
-- On BOOLEAN shift to state 186
-- On BMPString shift to state 187
-- On BIT shift to state 188
-- On ABSTRACT_SYNTAX shift to state 162
-- On valueSetFromObjects shift to state 202
-- On usefulType shift to state 203
-- On usefulObjectClassReference shift to state 163
-- On unrestrictedCharacterStringType shift to state 204
-- On type_x shift to state 294
-- On typeWithConstraint shift to state 207
-- On typeFromObject shift to state 208
-- On taggedType shift to state 209
-- On tag shift to state 210
-- On simpleDefinedValue shift to state 64
-- On simpleDefinedType shift to state 213
-- On signedNumber shift to state 425
-- On setType shift to state 215
-- On setOfType shift to state 216
-- On sequenceType shift to state 217
-- On sequenceOfType shift to state 218
-- On selectionType shift to state 219
-- On restrictedCharacterStringType shift to state 220
-- On relativeOIDType shift to state 221
-- On referencedType shift to state 222
-- On referencedObjects shift to state 223
-- On realType shift to state 232
-- On parameterizedValueSetType shift to state 233
-- On parameterizedValue shift to state 135
-- On parameterizedType shift to state 234
-- On parameterizedObjectSet shift to state 235
-- On parameterizedObject shift to state 236
-- On octetStringType shift to state 237
-- On objectIdentifierType shift to state 238
-- On objectClassFieldType shift to state 239
-- On nullType shift to state 240
-- On integerType shift to state 241
-- On instanceOfType shift to state 242
-- On externalValueReference shift to state 136
-- On externalTypeReference shift to state 243
-- On externalType shift to state 244
-- On externalObjectSetReference shift to state 245
-- On externalObjectReference shift to state 246
-- On externalObjectClassReference shift to state 164
-- On exceptionIdentification shift to state 426
-- On enumeratedType shift to state 247
-- On embeddedPDVType shift to state 248
-- On definedValue shift to state 427
-- On definedType shift to state 249
-- On definedObjectSet shift to state 250
-- On definedObjectClass shift to state 252
-- On definedObject shift to state 255
-- On constrainedType shift to state 257
-- On choiceType shift to state 258
-- On characterStringType shift to state 259
-- On builtinType shift to state 260
-- On booleanType shift to state 261
-- On bitStringType shift to state 262
## Reductions:

State 178:
## Known stack suffix:
## Lower
## LR(1) items:
definedObject -> Lower . [ LeftBrace Dot ]
definedValue -> Lower . [ RightParen RightBrace Comma ]
selectionType -> Lower . LessThan type_x [ LeftParen Colon ]
simpleDefinedValue -> Lower . [ LeftBrace ]
## Transitions:
-- On LessThan shift to state 128
## Reductions:
-- On RightParen reduce production definedValue -> Lower
-- On RightBrace reduce production definedValue -> Lower
-- On LeftBrace reduce production definedObject -> Lower
-- On Dot reduce production definedObject -> Lower
-- On Comma reduce production definedValue -> Lower

State 179:
## Known stack suffix:
## EMBEDDED
## LR(1) items:
embeddedPDVType -> EMBEDDED . PDV [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
-- On PDV shift to state 180
## Reductions:

State 180:
## Known stack suffix:
## EMBEDDED PDV
## LR(1) items:
embeddedPDVType -> EMBEDDED PDV . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production embeddedPDVType -> EMBEDDED PDV

State 181:
## Known stack suffix:
## CHOICE
## LR(1) items:
choiceType -> CHOICE . LeftBrace alternativeTypeLists RightBrace [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
-- On LeftBrace shift to state 182
## Reductions:

State 182:
## Known stack suffix:
## CHOICE LeftBrace
## LR(1) items:
choiceType -> CHOICE LeftBrace . alternativeTypeLists RightBrace [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
-- On Lower shift to state 183
-- On rootAlternativeTypeList shift to state 266
-- On namedType shift to state 276
-- On alternativeTypeLists shift to state 291
-- On alternativeTypeList shift to state 293
## Reductions:

State 183:
## Known stack suffix:
## Lower
## LR(1) items:
namedType -> Lower . type_x [ RightDoubleBracket RightBrace OPTIONAL DEFAULT Comma ]
## Transitions:
-- On VisibleString shift to state 66
-- On VideotexString shift to state 67
-- On Upper shift to state 113
-- On UniversalString shift to state 72
-- On UTF8String shift to state 73
-- On UTCTime shift to state 74
-- On TeletexString shift to state 75
-- On TYPE_IDENTIFIER shift to state 76
-- On T61String shift to state 78
-- On SET shift to state 79
-- On SEQUENCE shift to state 111
-- On RELATIVE_OID shift to state 116
-- On REAL shift to state 117
-- On PrintableString shift to state 118
-- On ObjectDescriptor shift to state 119
-- On OCTET shift to state 120
-- On OBJECT shift to state 122
-- On NumericString shift to state 124
-- On NULL shift to state 125
-- On Lower shift to state 127
-- On LeftBracket shift to state 129
-- On ISO646String shift to state 140
-- On INTEGER shift to state 141
-- On INSTANCE shift to state 157
-- On IA5String shift to state 166
-- On GraphicString shift to state 167
-- On GeneralizedTime shift to state 168
-- On GeneralString shift to state 169
-- On EXTERNAL shift to state 170
-- On ENUMERATED shift to state 171
-- On EMBEDDED shift to state 179
-- On CHOICE shift to state 181
-- On CHARACTER shift to state 184
-- On BOOLEAN shift to state 186
-- On BMPString shift to state 187
-- On BIT shift to state 188
-- On ABSTRACT_SYNTAX shift to state 162
-- On valueSetFromObjects shift to state 202
-- On usefulType shift to state 203
-- On usefulObjectClassReference shift to state 163
-- On unrestrictedCharacterStringType shift to state 204
-- On type_x shift to state 205
-- On typeWithConstraint shift to state 207
-- On typeFromObject shift to state 208
-- On taggedType shift to state 209
-- On tag shift to state 210
-- On simpleDefinedType shift to state 213
-- On setType shift to state 215
-- On setOfType shift to state 216
-- On sequenceType shift to state 217
-- On sequenceOfType shift to state 218
-- On selectionType shift to state 219
-- On restrictedCharacterStringType shift to state 220
-- On relativeOIDType shift to state 221
-- On referencedType shift to state 222
-- On referencedObjects shift to state 223
-- On realType shift to state 232
-- On parameterizedValueSetType shift to state 233
-- On parameterizedType shift to state 234
-- On parameterizedObjectSet shift to state 235
-- On parameterizedObject shift to state 236
-- On octetStringType shift to state 237
-- On objectIdentifierType shift to state 238
-- On objectClassFieldType shift to state 239
-- On nullType shift to state 240
-- On integerType shift to state 241
-- On instanceOfType shift to state 242
-- On externalTypeReference shift to state 243
-- On externalType shift to state 244
-- On externalObjectSetReference shift to state 245
-- On externalObjectReference shift to state 246
-- On externalObjectClassReference shift to state 164
-- On enumeratedType shift to state 247
-- On embeddedPDVType shift to state 248
-- On definedType shift to state 249
-- On definedObjectSet shift to state 250
-- On definedObjectClass shift to state 252
-- On definedObject shift to state 255
-- On constrainedType shift to state 257
-- On choiceType shift to state 258
-- On characterStringType shift to state 259
-- On builtinType shift to state 260
-- On booleanType shift to state 261
-- On bitStringType shift to state 262
## Reductions:

State 184:
## Known stack suffix:
## CHARACTER
## LR(1) items:
unrestrictedCharacterStringType -> CHARACTER . STRING [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
-- On STRING shift to state 185
## Reductions:

State 185:
## Known stack suffix:
## CHARACTER STRING
## LR(1) items:
unrestrictedCharacterStringType -> CHARACTER STRING . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production unrestrictedCharacterStringType -> CHARACTER STRING

State 186:
## Known stack suffix:
## BOOLEAN
## LR(1) items:
booleanType -> BOOLEAN . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production booleanType -> BOOLEAN

State 187:
## Known stack suffix:
## BMPString
## LR(1) items:
restrictedCharacterStringType -> BMPString . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production restrictedCharacterStringType -> BMPString

State 188:
## Known stack suffix:
## BIT
## LR(1) items:
bitStringType -> BIT . STRING [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
bitStringType -> BIT . STRING LeftBrace namedBitList RightBrace [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
-- On STRING shift to state 189
## Reductions:

State 189:
## Known stack suffix:
## BIT STRING
## LR(1) items:
bitStringType -> BIT STRING . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
bitStringType -> BIT STRING . LeftBrace namedBitList RightBrace [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
-- On LeftBrace shift to state 190
## Reductions:
-- On Upper reduce production bitStringType -> BIT STRING
-- On UNIQUE reduce production bitStringType -> BIT STRING
-- On UNION reduce production bitStringType -> BIT STRING
-- On RightParen reduce production bitStringType -> BIT STRING
-- On RightDoubleBracket reduce production bitStringType -> BIT STRING
-- On RightBrace reduce production bitStringType -> BIT STRING
-- On OPTIONAL reduce production bitStringType -> BIT STRING
-- On Middle reduce production bitStringType -> BIT STRING
-- On Lower reduce production bitStringType -> BIT STRING
-- On LeftParen reduce production bitStringType -> BIT STRING
-- On INTERSECTION reduce production bitStringType -> BIT STRING
-- On EXCEPT reduce production bitStringType -> BIT STRING
-- On END reduce production bitStringType -> BIT STRING
-- On ENCODED reduce production bitStringType -> BIT STRING
-- On DEFAULT reduce production bitStringType -> BIT STRING
-- On Comma reduce production bitStringType -> BIT STRING
-- On Colon reduce production bitStringType -> BIT STRING
-- On Circumflex reduce production bitStringType -> BIT STRING
-- On Bang reduce production bitStringType -> BIT STRING
-- On Assignment reduce production bitStringType -> BIT STRING

State 190:
## Known stack suffix:
## BIT STRING LeftBrace
## LR(1) items:
bitStringType -> BIT STRING LeftBrace . namedBitList RightBrace [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
-- On Lower shift to state 191
-- On namedBitList shift to state 197
-- On namedBit shift to state 201
## Reductions:

State 191:
## Known stack suffix:
## Lower
## LR(1) items:
namedBit -> Lower . LeftParen Number RightParen [ RightBrace Comma ]
namedBit -> Lower . LeftParen definedValue RightParen [ RightBrace Comma ]
## Transitions:
-- On LeftParen shift to state 192
## Reductions:

State 192:
## Known stack suffix:
## Lower LeftParen
## LR(1) items:
namedBit -> Lower LeftParen . Number RightParen [ RightBrace Comma ]
namedBit -> Lower LeftParen . definedValue RightParen [ RightBrace Comma ]
## Transitions:
-- On Upper shift to state 56
-- On Number shift to state 193
-- On Lower shift to state 59
-- On simpleDefinedValue shift to state 64
-- On parameterizedValue shift to state 135
-- On externalValueReference shift to state 136
-- On definedValue shift to state 195
## Reductions:

State 193:
## Known stack suffix:
## Lower LeftParen Number
## LR(1) items:
namedBit -> Lower LeftParen Number . RightParen [ RightBrace Comma ]
## Transitions:
-- On RightParen shift to state 194
## Reductions:

State 194:
## Known stack suffix:
## Lower LeftParen Number RightParen
## LR(1) items:
namedBit -> Lower LeftParen Number RightParen . [ RightBrace Comma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production namedBit -> Lower LeftParen Number RightParen

State 195:
## Known stack suffix:
## Lower LeftParen definedValue
## LR(1) items:
namedBit -> Lower LeftParen definedValue . RightParen [ RightBrace Comma ]
## Transitions:
-- On RightParen shift to state 196
## Reductions:

State 196:
## Known stack suffix:
## Lower LeftParen definedValue RightParen
## LR(1) items:
namedBit -> Lower LeftParen definedValue RightParen . [ RightBrace Comma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production namedBit -> Lower LeftParen definedValue RightParen

State 197:
## Known stack suffix:
## BIT STRING LeftBrace namedBitList
## LR(1) items:
bitStringType -> BIT STRING LeftBrace namedBitList . RightBrace [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
namedBitList -> namedBitList . Comma namedBit [ RightBrace Comma ]
## Transitions:
-- On RightBrace shift to state 198
-- On Comma shift to state 199
## Reductions:

State 198:
## Known stack suffix:
## BIT STRING LeftBrace namedBitList RightBrace
## LR(1) items:
bitStringType -> BIT STRING LeftBrace namedBitList RightBrace . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production bitStringType -> BIT STRING LeftBrace namedBitList RightBrace

State 199:
## Known stack suffix:
## namedBitList Comma
## LR(1) items:
namedBitList -> namedBitList Comma . namedBit [ RightBrace Comma ]
## Transitions:
-- On Lower shift to state 191
-- On namedBit shift to state 200
## Reductions:

State 200:
## Known stack suffix:
## namedBitList Comma namedBit
## LR(1) items:
namedBitList -> namedBitList Comma namedBit . [ RightBrace Comma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production namedBitList -> namedBitList Comma namedBit

State 201:
## Known stack suffix:
## namedBit
## LR(1) items:
namedBitList -> namedBit . [ RightBrace Comma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production namedBitList -> namedBit

State 202:
## Known stack suffix:
## valueSetFromObjects
## LR(1) items:
referencedType -> valueSetFromObjects . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production referencedType -> valueSetFromObjects

State 203:
## Known stack suffix:
## usefulType
## LR(1) items:
referencedType -> usefulType . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production referencedType -> usefulType

State 204:
## Known stack suffix:
## unrestrictedCharacterStringType
## LR(1) items:
characterStringType -> unrestrictedCharacterStringType . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production characterStringType -> unrestrictedCharacterStringType

State 205:
## Known stack suffix:
## Lower type_x
## LR(1) items:
constrainedType -> type_x . constraint_x [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
namedType -> Lower type_x . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
-- On LeftParen shift to state 81
-- On constraint_x shift to state 206
## Reductions:
-- On Upper reduce production namedType -> Lower type_x
-- On UNIQUE reduce production namedType -> Lower type_x
-- On UNION reduce production namedType -> Lower type_x
-- On RightParen reduce production namedType -> Lower type_x
-- On RightDoubleBracket reduce production namedType -> Lower type_x
-- On RightBrace reduce production namedType -> Lower type_x
-- On OPTIONAL reduce production namedType -> Lower type_x
-- On Middle reduce production namedType -> Lower type_x
-- On Lower reduce production namedType -> Lower type_x
-- On INTERSECTION reduce production namedType -> Lower type_x
-- On EXCEPT reduce production namedType -> Lower type_x
-- On END reduce production namedType -> Lower type_x
-- On ENCODED reduce production namedType -> Lower type_x
-- On DEFAULT reduce production namedType -> Lower type_x
-- On Comma reduce production namedType -> Lower type_x
-- On Colon reduce production namedType -> Lower type_x
-- On Circumflex reduce production namedType -> Lower type_x
-- On Bang reduce production namedType -> Lower type_x
-- On Assignment reduce production namedType -> Lower type_x

State 206:
## Known stack suffix:
## type_x constraint_x
## LR(1) items:
constrainedType -> type_x constraint_x . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production constrainedType -> type_x constraint_x

State 207:
## Known stack suffix:
## typeWithConstraint
## LR(1) items:
constrainedType -> typeWithConstraint . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production constrainedType -> typeWithConstraint

State 208:
## Known stack suffix:
## typeFromObject
## LR(1) items:
referencedType -> typeFromObject . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production referencedType -> typeFromObject

State 209:
## Known stack suffix:
## taggedType
## LR(1) items:
builtinType -> taggedType . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production builtinType -> taggedType

State 210:
## Known stack suffix:
## tag
## LR(1) items:
taggedType -> tag . type_x [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
taggedType -> tag . IMPLICIT type_x [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
taggedType -> tag . EXPLICIT type_x [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
-- On VisibleString shift to state 66
-- On VideotexString shift to state 67
-- On Upper shift to state 113
-- On UniversalString shift to state 72
-- On UTF8String shift to state 73
-- On UTCTime shift to state 74
-- On TeletexString shift to state 75
-- On TYPE_IDENTIFIER shift to state 76
-- On T61String shift to state 78
-- On SET shift to state 79
-- On SEQUENCE shift to state 111
-- On RELATIVE_OID shift to state 116
-- On REAL shift to state 117
-- On PrintableString shift to state 118
-- On ObjectDescriptor shift to state 119
-- On OCTET shift to state 120
-- On OBJECT shift to state 122
-- On NumericString shift to state 124
-- On NULL shift to state 125
-- On Lower shift to state 127
-- On LeftBracket shift to state 129
-- On ISO646String shift to state 140
-- On INTEGER shift to state 141
-- On INSTANCE shift to state 157
-- On IMPLICIT shift to state 211
-- On IA5String shift to state 166
-- On GraphicString shift to state 167
-- On GeneralizedTime shift to state 168
-- On GeneralString shift to state 169
-- On EXTERNAL shift to state 170
-- On EXPLICIT shift to state 263
-- On ENUMERATED shift to state 171
-- On EMBEDDED shift to state 179
-- On CHOICE shift to state 181
-- On CHARACTER shift to state 184
-- On BOOLEAN shift to state 186
-- On BMPString shift to state 187
-- On BIT shift to state 188
-- On ABSTRACT_SYNTAX shift to state 162
-- On valueSetFromObjects shift to state 202
-- On usefulType shift to state 203
-- On usefulObjectClassReference shift to state 163
-- On unrestrictedCharacterStringType shift to state 204
-- On type_x shift to state 265
-- On typeWithConstraint shift to state 207
-- On typeFromObject shift to state 208
-- On taggedType shift to state 209
-- On tag shift to state 210
-- On simpleDefinedType shift to state 213
-- On setType shift to state 215
-- On setOfType shift to state 216
-- On sequenceType shift to state 217
-- On sequenceOfType shift to state 218
-- On selectionType shift to state 219
-- On restrictedCharacterStringType shift to state 220
-- On relativeOIDType shift to state 221
-- On referencedType shift to state 222
-- On referencedObjects shift to state 223
-- On realType shift to state 232
-- On parameterizedValueSetType shift to state 233
-- On parameterizedType shift to state 234
-- On parameterizedObjectSet shift to state 235
-- On parameterizedObject shift to state 236
-- On octetStringType shift to state 237
-- On objectIdentifierType shift to state 238
-- On objectClassFieldType shift to state 239
-- On nullType shift to state 240
-- On integerType shift to state 241
-- On instanceOfType shift to state 242
-- On externalTypeReference shift to state 243
-- On externalType shift to state 244
-- On externalObjectSetReference shift to state 245
-- On externalObjectReference shift to state 246
-- On externalObjectClassReference shift to state 164
-- On enumeratedType shift to state 247
-- On embeddedPDVType shift to state 248
-- On definedType shift to state 249
-- On definedObjectSet shift to state 250
-- On definedObjectClass shift to state 252
-- On definedObject shift to state 255
-- On constrainedType shift to state 257
-- On choiceType shift to state 258
-- On characterStringType shift to state 259
-- On builtinType shift to state 260
-- On booleanType shift to state 261
-- On bitStringType shift to state 262
## Reductions:

State 211:
## Known stack suffix:
## tag IMPLICIT
## LR(1) items:
taggedType -> tag IMPLICIT . type_x [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
-- On VisibleString shift to state 66
-- On VideotexString shift to state 67
-- On Upper shift to state 113
-- On UniversalString shift to state 72
-- On UTF8String shift to state 73
-- On UTCTime shift to state 74
-- On TeletexString shift to state 75
-- On TYPE_IDENTIFIER shift to state 76
-- On T61String shift to state 78
-- On SET shift to state 79
-- On SEQUENCE shift to state 111
-- On RELATIVE_OID shift to state 116
-- On REAL shift to state 117
-- On PrintableString shift to state 118
-- On ObjectDescriptor shift to state 119
-- On OCTET shift to state 120
-- On OBJECT shift to state 122
-- On NumericString shift to state 124
-- On NULL shift to state 125
-- On Lower shift to state 127
-- On LeftBracket shift to state 129
-- On ISO646String shift to state 140
-- On INTEGER shift to state 141
-- On INSTANCE shift to state 157
-- On IA5String shift to state 166
-- On GraphicString shift to state 167
-- On GeneralizedTime shift to state 168
-- On GeneralString shift to state 169
-- On EXTERNAL shift to state 170
-- On ENUMERATED shift to state 171
-- On EMBEDDED shift to state 179
-- On CHOICE shift to state 181
-- On CHARACTER shift to state 184
-- On BOOLEAN shift to state 186
-- On BMPString shift to state 187
-- On BIT shift to state 188
-- On ABSTRACT_SYNTAX shift to state 162
-- On valueSetFromObjects shift to state 202
-- On usefulType shift to state 203
-- On usefulObjectClassReference shift to state 163
-- On unrestrictedCharacterStringType shift to state 204
-- On type_x shift to state 212
-- On typeWithConstraint shift to state 207
-- On typeFromObject shift to state 208
-- On taggedType shift to state 209
-- On tag shift to state 210
-- On simpleDefinedType shift to state 213
-- On setType shift to state 215
-- On setOfType shift to state 216
-- On sequenceType shift to state 217
-- On sequenceOfType shift to state 218
-- On selectionType shift to state 219
-- On restrictedCharacterStringType shift to state 220
-- On relativeOIDType shift to state 221
-- On referencedType shift to state 222
-- On referencedObjects shift to state 223
-- On realType shift to state 232
-- On parameterizedValueSetType shift to state 233
-- On parameterizedType shift to state 234
-- On parameterizedObjectSet shift to state 235
-- On parameterizedObject shift to state 236
-- On octetStringType shift to state 237
-- On objectIdentifierType shift to state 238
-- On objectClassFieldType shift to state 239
-- On nullType shift to state 240
-- On integerType shift to state 241
-- On instanceOfType shift to state 242
-- On externalTypeReference shift to state 243
-- On externalType shift to state 244
-- On externalObjectSetReference shift to state 245
-- On externalObjectReference shift to state 246
-- On externalObjectClassReference shift to state 164
-- On enumeratedType shift to state 247
-- On embeddedPDVType shift to state 248
-- On definedType shift to state 249
-- On definedObjectSet shift to state 250
-- On definedObjectClass shift to state 252
-- On definedObject shift to state 255
-- On constrainedType shift to state 257
-- On choiceType shift to state 258
-- On characterStringType shift to state 259
-- On builtinType shift to state 260
-- On booleanType shift to state 261
-- On bitStringType shift to state 262
## Reductions:

State 212:
## Known stack suffix:
## tag IMPLICIT type_x
## LR(1) items:
constrainedType -> type_x . constraint_x [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
taggedType -> tag IMPLICIT type_x . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
-- On LeftParen shift to state 81
-- On constraint_x shift to state 206
## Reductions:
-- On Upper reduce production taggedType -> tag IMPLICIT type_x
-- On UNIQUE reduce production taggedType -> tag IMPLICIT type_x
-- On UNION reduce production taggedType -> tag IMPLICIT type_x
-- On RightParen reduce production taggedType -> tag IMPLICIT type_x
-- On RightDoubleBracket reduce production taggedType -> tag IMPLICIT type_x
-- On RightBrace reduce production taggedType -> tag IMPLICIT type_x
-- On OPTIONAL reduce production taggedType -> tag IMPLICIT type_x
-- On Middle reduce production taggedType -> tag IMPLICIT type_x
-- On Lower reduce production taggedType -> tag IMPLICIT type_x
-- On INTERSECTION reduce production taggedType -> tag IMPLICIT type_x
-- On EXCEPT reduce production taggedType -> tag IMPLICIT type_x
-- On END reduce production taggedType -> tag IMPLICIT type_x
-- On ENCODED reduce production taggedType -> tag IMPLICIT type_x
-- On DEFAULT reduce production taggedType -> tag IMPLICIT type_x
-- On Comma reduce production taggedType -> tag IMPLICIT type_x
-- On Colon reduce production taggedType -> tag IMPLICIT type_x
-- On Circumflex reduce production taggedType -> tag IMPLICIT type_x
-- On Bang reduce production taggedType -> tag IMPLICIT type_x
-- On Assignment reduce production taggedType -> tag IMPLICIT type_x

State 213:
## Known stack suffix:
## simpleDefinedType
## LR(1) items:
parameterizedType -> simpleDefinedType . actualParameterList [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
parameterizedValueSetType -> simpleDefinedType . actualParameterList [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
-- On LeftBrace shift to state 65
-- On actualParameterList shift to state 214
## Reductions:

State 214:
## Known stack suffix:
## simpleDefinedType actualParameterList
## LR(1) items:
parameterizedType -> simpleDefinedType actualParameterList . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
parameterizedValueSetType -> simpleDefinedType actualParameterList . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production parameterizedType -> simpleDefinedType actualParameterList

State 215:
## Known stack suffix:
## setType
## LR(1) items:
builtinType -> setType . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production builtinType -> setType

State 216:
## Known stack suffix:
## setOfType
## LR(1) items:
builtinType -> setOfType . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production builtinType -> setOfType

State 217:
## Known stack suffix:
## sequenceType
## LR(1) items:
builtinType -> sequenceType . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production builtinType -> sequenceType

State 218:
## Known stack suffix:
## sequenceOfType
## LR(1) items:
builtinType -> sequenceOfType . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production builtinType -> sequenceOfType

State 219:
## Known stack suffix:
## selectionType
## LR(1) items:
referencedType -> selectionType . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production referencedType -> selectionType

State 220:
## Known stack suffix:
## restrictedCharacterStringType
## LR(1) items:
characterStringType -> restrictedCharacterStringType . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production characterStringType -> restrictedCharacterStringType

State 221:
## Known stack suffix:
## relativeOIDType
## LR(1) items:
builtinType -> relativeOIDType . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production builtinType -> relativeOIDType

State 222:
## Known stack suffix:
## referencedType
## LR(1) items:
type_x -> referencedType . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production type_x -> referencedType

State 223:
## Known stack suffix:
## referencedObjects
## LR(1) items:
typeFromObject -> referencedObjects . Dot fieldName [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
valueSetFromObjects -> referencedObjects . Dot fieldName [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
-- On Dot shift to state 224
## Reductions:

State 224:
## Known stack suffix:
## referencedObjects Dot
## LR(1) items:
typeFromObject -> referencedObjects Dot . fieldName [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
valueSetFromObjects -> referencedObjects Dot . fieldName [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
-- On UpperField shift to state 225
-- On LowerField shift to state 226
-- On separated_nonempty_list(Dot,primitiveFieldName) shift to state 227
-- On primitiveFieldName shift to state 228
-- On fieldName shift to state 231
## Reductions:

State 225:
## Known stack suffix:
## UpperField
## LR(1) items:
primitiveFieldName -> UpperField . [ VisibleString VideotexString UpperField Upper UniversalString UTF8String UTCTime UNIQUE UNION TeletexString TYPE_IDENTIFIER TRUE T61String SET SEQUENCE RightParen RightDoubleBracket RightBrace RealNumber RELATIVE_OID REAL PrintableString PLUS_INFINITY ObjectDescriptor OPTIONAL OCTET OBJECT NumericString Number NULL Middle MINUS_INFINITY LowerField Lower LessThan LeftParen LeftBracket LeftBrace ISO646String INTERSECTION INTEGER INSTANCE IA5String Hyphen Hstring GraphicString GeneralizedTime GeneralString FALSE EXTERNAL EXCEPT ENUMERATED END ENCODED EMBEDDED DoubleDot Dot DefinedSyntax DEFAULT Cstring Comma Colon Circumflex CONTAINING CHOICE CHARACTER Bstring Bang BOOLEAN BMPString BIT Assignment ABSTRACT_SYNTAX ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production primitiveFieldName -> UpperField

State 226:
## Known stack suffix:
## LowerField
## LR(1) items:
primitiveFieldName -> LowerField . [ VisibleString VideotexString UpperField Upper UniversalString UTF8String UTCTime UNIQUE UNION TeletexString TYPE_IDENTIFIER TRUE T61String SET SEQUENCE RightParen RightDoubleBracket RightBrace RealNumber RELATIVE_OID REAL PrintableString PLUS_INFINITY ObjectDescriptor OPTIONAL OCTET OBJECT NumericString Number NULL Middle MINUS_INFINITY LowerField Lower LessThan LeftParen LeftBracket LeftBrace ISO646String INTERSECTION INTEGER INSTANCE IA5String Hyphen Hstring GraphicString GeneralizedTime GeneralString FALSE EXTERNAL EXCEPT ENUMERATED END ENCODED EMBEDDED DoubleDot Dot DefinedSyntax DEFAULT Cstring Comma Colon Circumflex CONTAINING CHOICE CHARACTER Bstring Bang BOOLEAN BMPString BIT Assignment ABSTRACT_SYNTAX ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production primitiveFieldName -> LowerField

State 227:
## Known stack suffix:
## separated_nonempty_list(Dot,primitiveFieldName)
## LR(1) items:
fieldName -> separated_nonempty_list(Dot,primitiveFieldName) . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LessThan LeftParen INTERSECTION EXCEPT END ENCODED DoubleDot DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production fieldName -> separated_nonempty_list(Dot,primitiveFieldName)

State 228:
## Known stack suffix:
## primitiveFieldName
## LR(1) items:
separated_nonempty_list(Dot,primitiveFieldName) -> primitiveFieldName . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LessThan LeftParen INTERSECTION EXCEPT END ENCODED DoubleDot DEFAULT Comma Colon Circumflex Bang Assignment ]
separated_nonempty_list(Dot,primitiveFieldName) -> primitiveFieldName . Dot separated_nonempty_list(Dot,primitiveFieldName) [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LessThan LeftParen INTERSECTION EXCEPT END ENCODED DoubleDot DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
-- On Dot shift to state 229
## Reductions:
-- On Upper reduce production separated_nonempty_list(Dot,primitiveFieldName) -> primitiveFieldName
-- On UNIQUE reduce production separated_nonempty_list(Dot,primitiveFieldName) -> primitiveFieldName
-- On UNION reduce production separated_nonempty_list(Dot,primitiveFieldName) -> primitiveFieldName
-- On RightParen reduce production separated_nonempty_list(Dot,primitiveFieldName) -> primitiveFieldName
-- On RightDoubleBracket reduce production separated_nonempty_list(Dot,primitiveFieldName) -> primitiveFieldName
-- On RightBrace reduce production separated_nonempty_list(Dot,primitiveFieldName) -> primitiveFieldName
-- On OPTIONAL reduce production separated_nonempty_list(Dot,primitiveFieldName) -> primitiveFieldName
-- On Middle reduce production separated_nonempty_list(Dot,primitiveFieldName) -> primitiveFieldName
-- On Lower reduce production separated_nonempty_list(Dot,primitiveFieldName) -> primitiveFieldName
-- On LessThan reduce production separated_nonempty_list(Dot,primitiveFieldName) -> primitiveFieldName
-- On LeftParen reduce production separated_nonempty_list(Dot,primitiveFieldName) -> primitiveFieldName
-- On INTERSECTION reduce production separated_nonempty_list(Dot,primitiveFieldName) -> primitiveFieldName
-- On EXCEPT reduce production separated_nonempty_list(Dot,primitiveFieldName) -> primitiveFieldName
-- On END reduce production separated_nonempty_list(Dot,primitiveFieldName) -> primitiveFieldName
-- On ENCODED reduce production separated_nonempty_list(Dot,primitiveFieldName) -> primitiveFieldName
-- On DoubleDot reduce production separated_nonempty_list(Dot,primitiveFieldName) -> primitiveFieldName
-- On DEFAULT reduce production separated_nonempty_list(Dot,primitiveFieldName) -> primitiveFieldName
-- On Comma reduce production separated_nonempty_list(Dot,primitiveFieldName) -> primitiveFieldName
-- On Colon reduce production separated_nonempty_list(Dot,primitiveFieldName) -> primitiveFieldName
-- On Circumflex reduce production separated_nonempty_list(Dot,primitiveFieldName) -> primitiveFieldName
-- On Bang reduce production separated_nonempty_list(Dot,primitiveFieldName) -> primitiveFieldName
-- On Assignment reduce production separated_nonempty_list(Dot,primitiveFieldName) -> primitiveFieldName

State 229:
## Known stack suffix:
## primitiveFieldName Dot
## LR(1) items:
separated_nonempty_list(Dot,primitiveFieldName) -> primitiveFieldName Dot . separated_nonempty_list(Dot,primitiveFieldName) [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LessThan LeftParen INTERSECTION EXCEPT END ENCODED DoubleDot DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
-- On UpperField shift to state 225
-- On LowerField shift to state 226
-- On separated_nonempty_list(Dot,primitiveFieldName) shift to state 230
-- On primitiveFieldName shift to state 228
## Reductions:

State 230:
## Known stack suffix:
## primitiveFieldName Dot separated_nonempty_list(Dot,primitiveFieldName)
## LR(1) items:
separated_nonempty_list(Dot,primitiveFieldName) -> primitiveFieldName Dot separated_nonempty_list(Dot,primitiveFieldName) . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LessThan LeftParen INTERSECTION EXCEPT END ENCODED DoubleDot DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production separated_nonempty_list(Dot,primitiveFieldName) -> primitiveFieldName Dot separated_nonempty_list(Dot,primitiveFieldName)

State 231:
## Known stack suffix:
## referencedObjects Dot fieldName
## LR(1) items:
typeFromObject -> referencedObjects Dot fieldName . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
valueSetFromObjects -> referencedObjects Dot fieldName . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production valueSetFromObjects -> referencedObjects Dot fieldName

State 232:
## Known stack suffix:
## realType
## LR(1) items:
builtinType -> realType . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production builtinType -> realType

State 233:
## Known stack suffix:
## parameterizedValueSetType
## LR(1) items:
definedType -> parameterizedValueSetType . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production definedType -> parameterizedValueSetType

State 234:
## Known stack suffix:
## parameterizedType
## LR(1) items:
definedType -> parameterizedType . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production definedType -> parameterizedType

State 235:
## Known stack suffix:
## parameterizedObjectSet
## LR(1) items:
referencedObjects -> parameterizedObjectSet . [ Dot ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production referencedObjects -> parameterizedObjectSet

State 236:
## Known stack suffix:
## parameterizedObject
## LR(1) items:
referencedObjects -> parameterizedObject . [ Dot ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production referencedObjects -> parameterizedObject

State 237:
## Known stack suffix:
## octetStringType
## LR(1) items:
builtinType -> octetStringType . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production builtinType -> octetStringType

State 238:
## Known stack suffix:
## objectIdentifierType
## LR(1) items:
builtinType -> objectIdentifierType . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production builtinType -> objectIdentifierType

State 239:
## Known stack suffix:
## objectClassFieldType
## LR(1) items:
builtinType -> objectClassFieldType . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production builtinType -> objectClassFieldType

State 240:
## Known stack suffix:
## nullType
## LR(1) items:
builtinType -> nullType . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production builtinType -> nullType

State 241:
## Known stack suffix:
## integerType
## LR(1) items:
builtinType -> integerType . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production builtinType -> integerType

State 242:
## Known stack suffix:
## instanceOfType
## LR(1) items:
builtinType -> instanceOfType . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production builtinType -> instanceOfType

State 243:
## Known stack suffix:
## externalTypeReference
## LR(1) items:
definedType -> externalTypeReference . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
simpleDefinedType -> externalTypeReference . [ LeftBrace ]
## Transitions:
## Reductions:
-- On Upper reduce production definedType -> externalTypeReference
-- On UNIQUE reduce production definedType -> externalTypeReference
-- On UNION reduce production definedType -> externalTypeReference
-- On RightParen reduce production definedType -> externalTypeReference
-- On RightDoubleBracket reduce production definedType -> externalTypeReference
-- On RightBrace reduce production definedType -> externalTypeReference
-- On OPTIONAL reduce production definedType -> externalTypeReference
-- On Middle reduce production definedType -> externalTypeReference
-- On Lower reduce production definedType -> externalTypeReference
-- On LeftParen reduce production definedType -> externalTypeReference
-- On LeftBrace reduce production simpleDefinedType -> externalTypeReference
-- On INTERSECTION reduce production definedType -> externalTypeReference
-- On EXCEPT reduce production definedType -> externalTypeReference
-- On END reduce production definedType -> externalTypeReference
-- On ENCODED reduce production definedType -> externalTypeReference
-- On DEFAULT reduce production definedType -> externalTypeReference
-- On Comma reduce production definedType -> externalTypeReference
-- On Colon reduce production definedType -> externalTypeReference
-- On Circumflex reduce production definedType -> externalTypeReference
-- On Bang reduce production definedType -> externalTypeReference
-- On Assignment reduce production definedType -> externalTypeReference

State 244:
## Known stack suffix:
## externalType
## LR(1) items:
builtinType -> externalType . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production builtinType -> externalType

State 245:
## Known stack suffix:
## externalObjectSetReference
## LR(1) items:
definedObjectSet -> externalObjectSetReference . [ UNION RightParen RightBrace Middle LeftBrace INTERSECTION EXCEPT Dot Comma Circumflex Bang ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production definedObjectSet -> externalObjectSetReference

State 246:
## Known stack suffix:
## externalObjectReference
## LR(1) items:
definedObject -> externalObjectReference . [ Upper UNION RightParen RightBrace Middle Lower LeftBrace INTERSECTION EXCEPT END Dot Comma Circumflex Bang ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production definedObject -> externalObjectReference

State 247:
## Known stack suffix:
## enumeratedType
## LR(1) items:
builtinType -> enumeratedType . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production builtinType -> enumeratedType

State 248:
## Known stack suffix:
## embeddedPDVType
## LR(1) items:
builtinType -> embeddedPDVType . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production builtinType -> embeddedPDVType

State 249:
## Known stack suffix:
## definedType
## LR(1) items:
referencedType -> definedType . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production referencedType -> definedType

State 250:
## Known stack suffix:
## definedObjectSet
## LR(1) items:
parameterizedObjectSet -> definedObjectSet . actualParameterList [ Dot ]
referencedObjects -> definedObjectSet . [ Dot ]
## Transitions:
-- On LeftBrace shift to state 65
-- On actualParameterList shift to state 251
## Reductions:
-- On Dot reduce production referencedObjects -> definedObjectSet

State 251:
## Known stack suffix:
## definedObjectSet actualParameterList
## LR(1) items:
parameterizedObjectSet -> definedObjectSet actualParameterList . [ UNION RightParen RightBrace Middle INTERSECTION EXCEPT Dot Comma Circumflex Bang ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production parameterizedObjectSet -> definedObjectSet actualParameterList

State 252:
## Known stack suffix:
## definedObjectClass
## LR(1) items:
objectClassFieldType -> definedObjectClass . Dot fieldName [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
-- On Dot shift to state 253
## Reductions:

State 253:
## Known stack suffix:
## definedObjectClass Dot
## LR(1) items:
objectClassFieldType -> definedObjectClass Dot . fieldName [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
-- On UpperField shift to state 225
-- On LowerField shift to state 226
-- On separated_nonempty_list(Dot,primitiveFieldName) shift to state 227
-- On primitiveFieldName shift to state 228
-- On fieldName shift to state 254
## Reductions:

State 254:
## Known stack suffix:
## definedObjectClass Dot fieldName
## LR(1) items:
objectClassFieldType -> definedObjectClass Dot fieldName . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production objectClassFieldType -> definedObjectClass Dot fieldName

State 255:
## Known stack suffix:
## definedObject
## LR(1) items:
parameterizedObject -> definedObject . actualParameterList [ Dot ]
referencedObjects -> definedObject . [ Dot ]
## Transitions:
-- On LeftBrace shift to state 65
-- On actualParameterList shift to state 256
## Reductions:
-- On Dot reduce production referencedObjects -> definedObject

State 256:
## Known stack suffix:
## definedObject actualParameterList
## LR(1) items:
parameterizedObject -> definedObject actualParameterList . [ Upper UNION RightParen RightBrace Middle Lower INTERSECTION EXCEPT END Dot Comma Circumflex Bang ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production parameterizedObject -> definedObject actualParameterList

State 257:
## Known stack suffix:
## constrainedType
## LR(1) items:
type_x -> constrainedType . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production type_x -> constrainedType

State 258:
## Known stack suffix:
## choiceType
## LR(1) items:
builtinType -> choiceType . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production builtinType -> choiceType

State 259:
## Known stack suffix:
## characterStringType
## LR(1) items:
builtinType -> characterStringType . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production builtinType -> characterStringType

State 260:
## Known stack suffix:
## builtinType
## LR(1) items:
type_x -> builtinType . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production type_x -> builtinType

State 261:
## Known stack suffix:
## booleanType
## LR(1) items:
builtinType -> booleanType . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production builtinType -> booleanType

State 262:
## Known stack suffix:
## bitStringType
## LR(1) items:
builtinType -> bitStringType . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production builtinType -> bitStringType

State 263:
## Known stack suffix:
## tag EXPLICIT
## LR(1) items:
taggedType -> tag EXPLICIT . type_x [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
-- On VisibleString shift to state 66
-- On VideotexString shift to state 67
-- On Upper shift to state 113
-- On UniversalString shift to state 72
-- On UTF8String shift to state 73
-- On UTCTime shift to state 74
-- On TeletexString shift to state 75
-- On TYPE_IDENTIFIER shift to state 76
-- On T61String shift to state 78
-- On SET shift to state 79
-- On SEQUENCE shift to state 111
-- On RELATIVE_OID shift to state 116
-- On REAL shift to state 117
-- On PrintableString shift to state 118
-- On ObjectDescriptor shift to state 119
-- On OCTET shift to state 120
-- On OBJECT shift to state 122
-- On NumericString shift to state 124
-- On NULL shift to state 125
-- On Lower shift to state 127
-- On LeftBracket shift to state 129
-- On ISO646String shift to state 140
-- On INTEGER shift to state 141
-- On INSTANCE shift to state 157
-- On IA5String shift to state 166
-- On GraphicString shift to state 167
-- On GeneralizedTime shift to state 168
-- On GeneralString shift to state 169
-- On EXTERNAL shift to state 170
-- On ENUMERATED shift to state 171
-- On EMBEDDED shift to state 179
-- On CHOICE shift to state 181
-- On CHARACTER shift to state 184
-- On BOOLEAN shift to state 186
-- On BMPString shift to state 187
-- On BIT shift to state 188
-- On ABSTRACT_SYNTAX shift to state 162
-- On valueSetFromObjects shift to state 202
-- On usefulType shift to state 203
-- On usefulObjectClassReference shift to state 163
-- On unrestrictedCharacterStringType shift to state 204
-- On type_x shift to state 264
-- On typeWithConstraint shift to state 207
-- On typeFromObject shift to state 208
-- On taggedType shift to state 209
-- On tag shift to state 210
-- On simpleDefinedType shift to state 213
-- On setType shift to state 215
-- On setOfType shift to state 216
-- On sequenceType shift to state 217
-- On sequenceOfType shift to state 218
-- On selectionType shift to state 219
-- On restrictedCharacterStringType shift to state 220
-- On relativeOIDType shift to state 221
-- On referencedType shift to state 222
-- On referencedObjects shift to state 223
-- On realType shift to state 232
-- On parameterizedValueSetType shift to state 233
-- On parameterizedType shift to state 234
-- On parameterizedObjectSet shift to state 235
-- On parameterizedObject shift to state 236
-- On octetStringType shift to state 237
-- On objectIdentifierType shift to state 238
-- On objectClassFieldType shift to state 239
-- On nullType shift to state 240
-- On integerType shift to state 241
-- On instanceOfType shift to state 242
-- On externalTypeReference shift to state 243
-- On externalType shift to state 244
-- On externalObjectSetReference shift to state 245
-- On externalObjectReference shift to state 246
-- On externalObjectClassReference shift to state 164
-- On enumeratedType shift to state 247
-- On embeddedPDVType shift to state 248
-- On definedType shift to state 249
-- On definedObjectSet shift to state 250
-- On definedObjectClass shift to state 252
-- On definedObject shift to state 255
-- On constrainedType shift to state 257
-- On choiceType shift to state 258
-- On characterStringType shift to state 259
-- On builtinType shift to state 260
-- On booleanType shift to state 261
-- On bitStringType shift to state 262
## Reductions:

State 264:
## Known stack suffix:
## tag EXPLICIT type_x
## LR(1) items:
constrainedType -> type_x . constraint_x [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
taggedType -> tag EXPLICIT type_x . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
-- On LeftParen shift to state 81
-- On constraint_x shift to state 206
## Reductions:
-- On Upper reduce production taggedType -> tag EXPLICIT type_x
-- On UNIQUE reduce production taggedType -> tag EXPLICIT type_x
-- On UNION reduce production taggedType -> tag EXPLICIT type_x
-- On RightParen reduce production taggedType -> tag EXPLICIT type_x
-- On RightDoubleBracket reduce production taggedType -> tag EXPLICIT type_x
-- On RightBrace reduce production taggedType -> tag EXPLICIT type_x
-- On OPTIONAL reduce production taggedType -> tag EXPLICIT type_x
-- On Middle reduce production taggedType -> tag EXPLICIT type_x
-- On Lower reduce production taggedType -> tag EXPLICIT type_x
-- On INTERSECTION reduce production taggedType -> tag EXPLICIT type_x
-- On EXCEPT reduce production taggedType -> tag EXPLICIT type_x
-- On END reduce production taggedType -> tag EXPLICIT type_x
-- On ENCODED reduce production taggedType -> tag EXPLICIT type_x
-- On DEFAULT reduce production taggedType -> tag EXPLICIT type_x
-- On Comma reduce production taggedType -> tag EXPLICIT type_x
-- On Colon reduce production taggedType -> tag EXPLICIT type_x
-- On Circumflex reduce production taggedType -> tag EXPLICIT type_x
-- On Bang reduce production taggedType -> tag EXPLICIT type_x
-- On Assignment reduce production taggedType -> tag EXPLICIT type_x

State 265:
## Known stack suffix:
## tag type_x
## LR(1) items:
constrainedType -> type_x . constraint_x [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
taggedType -> tag type_x . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
-- On LeftParen shift to state 81
-- On constraint_x shift to state 206
## Reductions:
-- On Upper reduce production taggedType -> tag type_x
-- On UNIQUE reduce production taggedType -> tag type_x
-- On UNION reduce production taggedType -> tag type_x
-- On RightParen reduce production taggedType -> tag type_x
-- On RightDoubleBracket reduce production taggedType -> tag type_x
-- On RightBrace reduce production taggedType -> tag type_x
-- On OPTIONAL reduce production taggedType -> tag type_x
-- On Middle reduce production taggedType -> tag type_x
-- On Lower reduce production taggedType -> tag type_x
-- On INTERSECTION reduce production taggedType -> tag type_x
-- On EXCEPT reduce production taggedType -> tag type_x
-- On END reduce production taggedType -> tag type_x
-- On ENCODED reduce production taggedType -> tag type_x
-- On DEFAULT reduce production taggedType -> tag type_x
-- On Comma reduce production taggedType -> tag type_x
-- On Colon reduce production taggedType -> tag type_x
-- On Circumflex reduce production taggedType -> tag type_x
-- On Bang reduce production taggedType -> tag type_x
-- On Assignment reduce production taggedType -> tag type_x

State 266:
## Known stack suffix:
## rootAlternativeTypeList
## LR(1) items:
alternativeTypeLists -> rootAlternativeTypeList . [ RightBrace ]
alternativeTypeLists -> rootAlternativeTypeList . Comma extensionAndException extensionAdditionAlternatives optionalExtensionMarker [ RightBrace ]
## Transitions:
-- On Comma shift to state 267
## Reductions:
-- On RightBrace reduce production alternativeTypeLists -> rootAlternativeTypeList

State 267:
## Known stack suffix:
## rootAlternativeTypeList Comma
## LR(1) items:
alternativeTypeLists -> rootAlternativeTypeList Comma . extensionAndException extensionAdditionAlternatives optionalExtensionMarker [ RightBrace ]
## Transitions:
-- On Ellipsis shift to state 268
-- On extensionAndException shift to state 270
## Reductions:

State 268:
## Known stack suffix:
## Ellipsis
## LR(1) items:
extensionAndException -> Ellipsis . [ RightBrace Comma ]
extensionAndException -> Ellipsis . exceptionSpec [ RightBrace Comma ]
## Transitions:
-- On Bang shift to state 177
-- On exceptionSpec shift to state 269
## Reductions:
-- On RightBrace reduce production extensionAndException -> Ellipsis
-- On Comma reduce production extensionAndException -> Ellipsis

State 269:
## Known stack suffix:
## Ellipsis exceptionSpec
## LR(1) items:
extensionAndException -> Ellipsis exceptionSpec . [ RightBrace Comma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extensionAndException -> Ellipsis exceptionSpec

State 270:
## Known stack suffix:
## rootAlternativeTypeList Comma extensionAndException
## LR(1) items:
alternativeTypeLists -> rootAlternativeTypeList Comma extensionAndException . extensionAdditionAlternatives optionalExtensionMarker [ RightBrace ]
## Transitions:
-- On Comma shift to state 271
-- On extensionAdditionAlternatives shift to state 287
## Reductions:
-- On RightBrace reduce production extensionAdditionAlternatives ->

State 271:
## Known stack suffix:
## Comma
## LR(1) items:
extensionAdditionAlternatives -> Comma . extensionAdditionAlternativesList [ RightBrace Comma ]
## Transitions:
-- On Lower shift to state 183
-- On LeftDoubleBracket shift to state 272
-- On namedType shift to state 281
-- On extensionAdditionAlternativesList shift to state 282
-- On extensionAdditionAlternativesGroup shift to state 284
-- On extensionAdditionAlternative shift to state 286
## Reductions:

State 272:
## Known stack suffix:
## LeftDoubleBracket
## LR(1) items:
extensionAdditionAlternativesGroup -> LeftDoubleBracket . versionNumber alternativeTypeList RightDoubleBracket [ RightBrace Comma ]
## Transitions:
-- On Number shift to state 273
-- On versionNumber shift to state 275
## Reductions:
-- On Lower reduce production versionNumber ->

State 273:
## Known stack suffix:
## Number
## LR(1) items:
versionNumber -> Number . Colon [ Lower COMPONENTS ]
## Transitions:
-- On Colon shift to state 274
## Reductions:

State 274:
## Known stack suffix:
## Number Colon
## LR(1) items:
versionNumber -> Number Colon . [ Lower COMPONENTS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production versionNumber -> Number Colon

State 275:
## Known stack suffix:
## LeftDoubleBracket versionNumber
## LR(1) items:
extensionAdditionAlternativesGroup -> LeftDoubleBracket versionNumber . alternativeTypeList RightDoubleBracket [ RightBrace Comma ]
## Transitions:
-- On Lower shift to state 183
-- On namedType shift to state 276
-- On alternativeTypeList shift to state 277
## Reductions:

State 276:
## Known stack suffix:
## namedType
## LR(1) items:
alternativeTypeList -> namedType . [ RightDoubleBracket RightBrace Comma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production alternativeTypeList -> namedType

State 277:
## Known stack suffix:
## LeftDoubleBracket versionNumber alternativeTypeList
## LR(1) items:
alternativeTypeList -> alternativeTypeList . Comma namedType [ RightDoubleBracket Comma ]
extensionAdditionAlternativesGroup -> LeftDoubleBracket versionNumber alternativeTypeList . RightDoubleBracket [ RightBrace Comma ]
## Transitions:
-- On RightDoubleBracket shift to state 278
-- On Comma shift to state 279
## Reductions:

State 278:
## Known stack suffix:
## LeftDoubleBracket versionNumber alternativeTypeList RightDoubleBracket
## LR(1) items:
extensionAdditionAlternativesGroup -> LeftDoubleBracket versionNumber alternativeTypeList RightDoubleBracket . [ RightBrace Comma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extensionAdditionAlternativesGroup -> LeftDoubleBracket versionNumber alternativeTypeList RightDoubleBracket

State 279:
## Known stack suffix:
## alternativeTypeList Comma
## LR(1) items:
alternativeTypeList -> alternativeTypeList Comma . namedType [ RightDoubleBracket RightBrace Comma ]
## Transitions:
-- On Lower shift to state 183
-- On namedType shift to state 280
## Reductions:

State 280:
## Known stack suffix:
## alternativeTypeList Comma namedType
## LR(1) items:
alternativeTypeList -> alternativeTypeList Comma namedType . [ RightDoubleBracket RightBrace Comma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production alternativeTypeList -> alternativeTypeList Comma namedType

State 281:
## Known stack suffix:
## namedType
## LR(1) items:
extensionAdditionAlternative -> namedType . [ RightBrace Comma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extensionAdditionAlternative -> namedType

State 282:
## Known stack suffix:
## Comma extensionAdditionAlternativesList
## LR(1) items:
extensionAdditionAlternatives -> Comma extensionAdditionAlternativesList . [ RightBrace Comma ]
extensionAdditionAlternativesList -> extensionAdditionAlternativesList . Comma extensionAdditionAlternative [ RightBrace Comma ]
## Transitions:
-- On Comma shift to state 283
## Reductions:
-- On RightBrace reduce production extensionAdditionAlternatives -> Comma extensionAdditionAlternativesList

State 283:
## Known stack suffix:
## extensionAdditionAlternativesList Comma
## LR(1) items:
extensionAdditionAlternativesList -> extensionAdditionAlternativesList Comma . extensionAdditionAlternative [ RightBrace Comma ]
## Transitions:
-- On Lower shift to state 183
-- On LeftDoubleBracket shift to state 272
-- On namedType shift to state 281
-- On extensionAdditionAlternativesGroup shift to state 284
-- On extensionAdditionAlternative shift to state 285
## Reductions:

State 284:
## Known stack suffix:
## extensionAdditionAlternativesGroup
## LR(1) items:
extensionAdditionAlternative -> extensionAdditionAlternativesGroup . [ RightBrace Comma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extensionAdditionAlternative -> extensionAdditionAlternativesGroup

State 285:
## Known stack suffix:
## extensionAdditionAlternativesList Comma extensionAdditionAlternative
## LR(1) items:
extensionAdditionAlternativesList -> extensionAdditionAlternativesList Comma extensionAdditionAlternative . [ RightBrace Comma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extensionAdditionAlternativesList -> extensionAdditionAlternativesList Comma extensionAdditionAlternative

State 286:
## Known stack suffix:
## extensionAdditionAlternative
## LR(1) items:
extensionAdditionAlternativesList -> extensionAdditionAlternative . [ RightBrace Comma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extensionAdditionAlternativesList -> extensionAdditionAlternative

State 287:
## Known stack suffix:
## rootAlternativeTypeList Comma extensionAndException extensionAdditionAlternatives
## LR(1) items:
alternativeTypeLists -> rootAlternativeTypeList Comma extensionAndException extensionAdditionAlternatives . optionalExtensionMarker [ RightBrace ]
## Transitions:
-- On Comma shift to state 288
-- On optionalExtensionMarker shift to state 290
## Reductions:
-- On RightBrace reduce production optionalExtensionMarker ->

State 288:
## Known stack suffix:
## Comma
## LR(1) items:
optionalExtensionMarker -> Comma . Ellipsis [ RightBrace ]
## Transitions:
-- On Ellipsis shift to state 289
## Reductions:

State 289:
## Known stack suffix:
## Comma Ellipsis
## LR(1) items:
optionalExtensionMarker -> Comma Ellipsis . [ RightBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production optionalExtensionMarker -> Comma Ellipsis

State 290:
## Known stack suffix:
## rootAlternativeTypeList Comma extensionAndException extensionAdditionAlternatives optionalExtensionMarker
## LR(1) items:
alternativeTypeLists -> rootAlternativeTypeList Comma extensionAndException extensionAdditionAlternatives optionalExtensionMarker . [ RightBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production alternativeTypeLists -> rootAlternativeTypeList Comma extensionAndException extensionAdditionAlternatives optionalExtensionMarker

State 291:
## Known stack suffix:
## CHOICE LeftBrace alternativeTypeLists
## LR(1) items:
choiceType -> CHOICE LeftBrace alternativeTypeLists . RightBrace [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
-- On RightBrace shift to state 292
## Reductions:

State 292:
## Known stack suffix:
## CHOICE LeftBrace alternativeTypeLists RightBrace
## LR(1) items:
choiceType -> CHOICE LeftBrace alternativeTypeLists RightBrace . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production choiceType -> CHOICE LeftBrace alternativeTypeLists RightBrace

State 293:
## Known stack suffix:
## alternativeTypeList
## LR(1) items:
alternativeTypeList -> alternativeTypeList . Comma namedType [ RightBrace Comma ]
rootAlternativeTypeList -> alternativeTypeList . [ RightBrace Comma ]
## Transitions:
-- On Comma shift to state 279
## Reductions:
-- On RightBrace reduce production rootAlternativeTypeList -> alternativeTypeList

State 294:
## Known stack suffix:
## type_x
## LR(1) items:
constrainedType -> type_x . constraint_x [ LeftParen Colon ]
exceptionIdentification -> type_x . Colon value [ RightParen RightBrace Comma ]
## Transitions:
-- On LeftParen shift to state 81
-- On Colon shift to state 295
-- On constraint_x shift to state 206
## Reductions:

State 295:
## Known stack suffix:
## type_x Colon
## LR(1) items:
exceptionIdentification -> type_x Colon . value [ RightParen RightBrace Comma ]
## Transitions:
-- On VisibleString shift to state 66
-- On VideotexString shift to state 67
-- On Upper shift to state 108
-- On UniversalString shift to state 72
-- On UTF8String shift to state 73
-- On UTCTime shift to state 74
-- On TeletexString shift to state 75
-- On TYPE_IDENTIFIER shift to state 76
-- On TRUE shift to state 77
-- On T61String shift to state 78
-- On SET shift to state 79
-- On SEQUENCE shift to state 111
-- On RealNumber shift to state 296
-- On RELATIVE_OID shift to state 116
-- On REAL shift to state 117
-- On PrintableString shift to state 118
-- On PLUS_INFINITY shift to state 297
-- On ObjectDescriptor shift to state 119
-- On OCTET shift to state 120
-- On OBJECT shift to state 122
-- On NumericString shift to state 124
-- On Number shift to state 145
-- On NULL shift to state 298
-- On MINUS_INFINITY shift to state 299
-- On Lower shift to state 300
-- On LeftBracket shift to state 129
-- On LeftBrace shift to state 302
-- On ISO646String shift to state 140
-- On INTEGER shift to state 141
-- On INSTANCE shift to state 157
-- On IA5String shift to state 166
-- On Hyphen shift to state 306
-- On Hstring shift to state 308
-- On GraphicString shift to state 167
-- On GeneralizedTime shift to state 168
-- On GeneralString shift to state 169
-- On FALSE shift to state 309
-- On EXTERNAL shift to state 170
-- On ENUMERATED shift to state 171
-- On EMBEDDED shift to state 179
-- On Cstring shift to state 310
-- On CONTAINING shift to state 311
-- On CHOICE shift to state 181
-- On CHARACTER shift to state 184
-- On Bstring shift to state 312
-- On BOOLEAN shift to state 186
-- On BMPString shift to state 187
-- On BIT shift to state 188
-- On ABSTRACT_SYNTAX shift to state 162
-- On valueSetFromObjects shift to state 202
-- On valueFromObject shift to state 313
-- On value shift to state 424
-- On usefulType shift to state 203
-- On usefulObjectClassReference shift to state 163
-- On unrestrictedCharacterStringValue shift to state 315
-- On unrestrictedCharacterStringType shift to state 204
-- On type_x shift to state 316
-- On typeWithConstraint shift to state 207
-- On typeFromObject shift to state 208
-- On tuple shift to state 319
-- On taggedType shift to state 209
-- On tag shift to state 210
-- On specialRealValue shift to state 320
-- On simpleDefinedValue shift to state 64
-- On simpleDefinedType shift to state 213
-- On signedNumber shift to state 321
-- On setValue shift to state 322
-- On setType shift to state 215
-- On setOfValue shift to state 323
-- On setOfType shift to state 216
-- On sequenceValue shift to state 324
-- On sequenceType shift to state 217
-- On sequenceOfValue shift to state 325
-- On sequenceOfType shift to state 218
-- On selectionType shift to state 219
-- On restrictedCharacterStringValue shift to state 326
-- On restrictedCharacterStringType shift to state 220
-- On relativeOIDValue shift to state 327
-- On relativeOIDType shift to state 221
-- On referencedValue shift to state 328
-- On referencedType shift to state 222
-- On referencedObjects shift to state 329
-- On realValue shift to state 332
-- On realType shift to state 232
-- On quadruple shift to state 333
-- On parameterizedValueSetType shift to state 233
-- On parameterizedValue shift to state 135
-- On parameterizedType shift to state 234
-- On parameterizedObjectSet shift to state 235
-- On parameterizedObject shift to state 236
-- On openTypeFieldVal shift to state 334
-- On octetStringValue shift to state 335
-- On octetStringType shift to state 237
-- On objectIdentifierValue shift to state 336
-- On objectIdentifierType shift to state 238
-- On objectClassFieldValue shift to state 337
-- On objectClassFieldType shift to state 239
-- On numericRealValue shift to state 338
-- On nullValue shift to state 339
-- On nullType shift to state 240
-- On integerValue shift to state 340
-- On integerType shift to state 241
-- On instanceOfType shift to state 242
-- On fixedTypeFieldVal shift to state 341
-- On externalValueReference shift to state 136
-- On externalValue shift to state 342
-- On externalTypeReference shift to state 243
-- On externalType shift to state 244
-- On externalObjectSetReference shift to state 245
-- On externalObjectReference shift to state 246
-- On externalObjectClassReference shift to state 164
-- On enumeratedValue shift to state 343
-- On enumeratedType shift to state 247
-- On embeddedPDVValue shift to state 344
-- On embeddedPDVType shift to state 248
-- On definedValue shift to state 345
-- On definedType shift to state 249
-- On definedObjectSet shift to state 250
-- On definedObjectClass shift to state 252
-- On definedObject shift to state 255
-- On constrainedType shift to state 257
-- On choiceValue shift to state 346
-- On choiceType shift to state 258
-- On characterStringValue shift to state 347
-- On characterStringType shift to state 259
-- On characterStringList shift to state 348
-- On builtinValue shift to state 349
-- On builtinType shift to state 260
-- On booleanValue shift to state 350
-- On booleanType shift to state 261
-- On bitStringValue shift to state 351
-- On bitStringType shift to state 262
## Reductions:

State 296:
## Known stack suffix:
## RealNumber
## LR(1) items:
numericRealValue -> RealNumber . [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production numericRealValue -> RealNumber

State 297:
## Known stack suffix:
## PLUS_INFINITY
## LR(1) items:
specialRealValue -> PLUS_INFINITY . [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production specialRealValue -> PLUS_INFINITY

State 298:
## Known stack suffix:
## NULL
## LR(1) items:
nullType -> NULL . [ UNION RightParen RightBrace Middle LeftParen INTERSECTION EXCEPT ENCODED Comma Colon Circumflex Bang ]
nullValue -> NULL . [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
## Transitions:
## Reductions:
-- On Upper reduce production nullValue -> NULL
-- On UNION reduce production nullType -> NULL
-- On RightParen reduce production nullType -> NULL
-- On RightDoubleBracket reduce production nullValue -> NULL
-- On RightBrace reduce production nullType -> NULL
-- On Middle reduce production nullType -> NULL
-- On Lower reduce production nullValue -> NULL
-- On LessThan reduce production nullValue -> NULL
-- On LeftParen reduce production nullType -> NULL
-- On INTERSECTION reduce production nullType -> NULL
-- On EXCEPT reduce production nullType -> NULL
-- On END reduce production nullValue -> NULL
-- On ENCODED reduce production nullType -> NULL
-- On DoubleDot reduce production nullValue -> NULL
-- On Comma reduce production nullType -> NULL
-- On Colon reduce production nullType -> NULL
-- On Circumflex reduce production nullType -> NULL
-- On Bang reduce production nullType -> NULL

State 299:
## Known stack suffix:
## MINUS_INFINITY
## LR(1) items:
specialRealValue -> MINUS_INFINITY . [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production specialRealValue -> MINUS_INFINITY

State 300:
## Known stack suffix:
## Lower
## LR(1) items:
choiceValue -> Lower . Colon value [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
definedObject -> Lower . [ UNION RightParen RightBrace Middle LeftBrace INTERSECTION EXCEPT Dot Comma Circumflex Bang ]
definedValue -> Lower . [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
enumeratedValue -> Lower . [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
integerValue -> Lower . [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
selectionType -> Lower . LessThan type_x [ UNION RightParen RightBrace Middle LeftParen INTERSECTION EXCEPT ENCODED Comma Colon Circumflex Bang ]
simpleDefinedValue -> Lower . [ LeftBrace ]
## Transitions:
-- On LessThan shift to state 128
-- On Colon shift to state 301
## Reductions:
-- On Upper reduce production definedValue -> Lower
-- On UNION reduce production definedValue -> Lower
-- On RightParen reduce production definedValue -> Lower
-- On RightDoubleBracket reduce production definedValue -> Lower
-- On RightBrace reduce production definedValue -> Lower
-- On Middle reduce production definedValue -> Lower
-- On Lower reduce production definedValue -> Lower
-- On LeftBrace reduce production definedObject -> Lower
-- On INTERSECTION reduce production definedValue -> Lower
-- On EXCEPT reduce production definedValue -> Lower
-- On END reduce production definedValue -> Lower
-- On DoubleDot reduce production definedValue -> Lower
-- On Dot reduce production definedObject -> Lower
-- On Comma reduce production definedValue -> Lower
-- On Circumflex reduce production definedValue -> Lower
-- On Bang reduce production definedValue -> Lower

State 301:
## Known stack suffix:
## Lower Colon
## LR(1) items:
choiceValue -> Lower Colon . value [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
## Transitions:
-- On VisibleString shift to state 66
-- On VideotexString shift to state 67
-- On Upper shift to state 108
-- On UniversalString shift to state 72
-- On UTF8String shift to state 73
-- On UTCTime shift to state 74
-- On TeletexString shift to state 75
-- On TYPE_IDENTIFIER shift to state 76
-- On TRUE shift to state 77
-- On T61String shift to state 78
-- On SET shift to state 79
-- On SEQUENCE shift to state 111
-- On RealNumber shift to state 296
-- On RELATIVE_OID shift to state 116
-- On REAL shift to state 117
-- On PrintableString shift to state 118
-- On PLUS_INFINITY shift to state 297
-- On ObjectDescriptor shift to state 119
-- On OCTET shift to state 120
-- On OBJECT shift to state 122
-- On NumericString shift to state 124
-- On Number shift to state 145
-- On NULL shift to state 298
-- On MINUS_INFINITY shift to state 299
-- On Lower shift to state 300
-- On LeftBracket shift to state 129
-- On LeftBrace shift to state 302
-- On ISO646String shift to state 140
-- On INTEGER shift to state 141
-- On INSTANCE shift to state 157
-- On IA5String shift to state 166
-- On Hyphen shift to state 306
-- On Hstring shift to state 308
-- On GraphicString shift to state 167
-- On GeneralizedTime shift to state 168
-- On GeneralString shift to state 169
-- On FALSE shift to state 309
-- On EXTERNAL shift to state 170
-- On ENUMERATED shift to state 171
-- On EMBEDDED shift to state 179
-- On Cstring shift to state 310
-- On CONTAINING shift to state 311
-- On CHOICE shift to state 181
-- On CHARACTER shift to state 184
-- On Bstring shift to state 312
-- On BOOLEAN shift to state 186
-- On BMPString shift to state 187
-- On BIT shift to state 188
-- On ABSTRACT_SYNTAX shift to state 162
-- On valueSetFromObjects shift to state 202
-- On valueFromObject shift to state 313
-- On value shift to state 423
-- On usefulType shift to state 203
-- On usefulObjectClassReference shift to state 163
-- On unrestrictedCharacterStringValue shift to state 315
-- On unrestrictedCharacterStringType shift to state 204
-- On type_x shift to state 316
-- On typeWithConstraint shift to state 207
-- On typeFromObject shift to state 208
-- On tuple shift to state 319
-- On taggedType shift to state 209
-- On tag shift to state 210
-- On specialRealValue shift to state 320
-- On simpleDefinedValue shift to state 64
-- On simpleDefinedType shift to state 213
-- On signedNumber shift to state 321
-- On setValue shift to state 322
-- On setType shift to state 215
-- On setOfValue shift to state 323
-- On setOfType shift to state 216
-- On sequenceValue shift to state 324
-- On sequenceType shift to state 217
-- On sequenceOfValue shift to state 325
-- On sequenceOfType shift to state 218
-- On selectionType shift to state 219
-- On restrictedCharacterStringValue shift to state 326
-- On restrictedCharacterStringType shift to state 220
-- On relativeOIDValue shift to state 327
-- On relativeOIDType shift to state 221
-- On referencedValue shift to state 328
-- On referencedType shift to state 222
-- On referencedObjects shift to state 329
-- On realValue shift to state 332
-- On realType shift to state 232
-- On quadruple shift to state 333
-- On parameterizedValueSetType shift to state 233
-- On parameterizedValue shift to state 135
-- On parameterizedType shift to state 234
-- On parameterizedObjectSet shift to state 235
-- On parameterizedObject shift to state 236
-- On openTypeFieldVal shift to state 334
-- On octetStringValue shift to state 335
-- On octetStringType shift to state 237
-- On objectIdentifierValue shift to state 336
-- On objectIdentifierType shift to state 238
-- On objectClassFieldValue shift to state 337
-- On objectClassFieldType shift to state 239
-- On numericRealValue shift to state 338
-- On nullValue shift to state 339
-- On nullType shift to state 240
-- On integerValue shift to state 340
-- On integerType shift to state 241
-- On instanceOfType shift to state 242
-- On fixedTypeFieldVal shift to state 341
-- On externalValueReference shift to state 136
-- On externalValue shift to state 342
-- On externalTypeReference shift to state 243
-- On externalType shift to state 244
-- On externalObjectSetReference shift to state 245
-- On externalObjectReference shift to state 246
-- On externalObjectClassReference shift to state 164
-- On enumeratedValue shift to state 343
-- On enumeratedType shift to state 247
-- On embeddedPDVValue shift to state 344
-- On embeddedPDVType shift to state 248
-- On definedValue shift to state 345
-- On definedType shift to state 249
-- On definedObjectSet shift to state 250
-- On definedObjectClass shift to state 252
-- On definedObject shift to state 255
-- On constrainedType shift to state 257
-- On choiceValue shift to state 346
-- On choiceType shift to state 258
-- On characterStringValue shift to state 347
-- On characterStringType shift to state 259
-- On characterStringList shift to state 348
-- On builtinValue shift to state 349
-- On builtinType shift to state 260
-- On booleanValue shift to state 350
-- On booleanType shift to state 261
-- On bitStringValue shift to state 351
-- On bitStringType shift to state 262
## Reductions:

State 302:
## Known stack suffix:
## LeftBrace
## LR(1) items:
bitStringValue -> LeftBrace . identifierList RightBrace [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
bitStringValue -> LeftBrace . RightBrace [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
characterStringList -> LeftBrace . charSyms RightBrace [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
objectIdentifierValue -> LeftBrace . objIdComponentsList RightBrace [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
objectIdentifierValue -> LeftBrace . definedValue objIdComponentsList RightBrace [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
quadruple -> LeftBrace . group Comma plane Comma row Comma cell RightBrace [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
relativeOIDValue -> LeftBrace . relativeOIDComponentsList RightBrace [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
sequenceOfValue -> LeftBrace . valueList RightBrace [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
sequenceOfValue -> LeftBrace . namedValueList RightBrace [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
sequenceOfValue -> LeftBrace . RightBrace [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
sequenceValue -> LeftBrace . componentValueList RightBrace [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
sequenceValue -> LeftBrace . RightBrace [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
setOfValue -> LeftBrace . valueList RightBrace [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
setOfValue -> LeftBrace . namedValueList RightBrace [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
setOfValue -> LeftBrace . RightBrace [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
setValue -> LeftBrace . componentValueList RightBrace [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
setValue -> LeftBrace . RightBrace [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
tuple -> LeftBrace . tableColumn Comma tableRow RightBrace [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
## Transitions:
-- On VisibleString shift to state 66
-- On VideotexString shift to state 67
-- On Upper shift to state 108
-- On UniversalString shift to state 72
-- On UTF8String shift to state 73
-- On UTCTime shift to state 74
-- On TeletexString shift to state 75
-- On TYPE_IDENTIFIER shift to state 76
-- On TRUE shift to state 77
-- On T61String shift to state 78
-- On SET shift to state 79
-- On SEQUENCE shift to state 111
-- On RightBrace shift to state 303
-- On RealNumber shift to state 296
-- On RELATIVE_OID shift to state 116
-- On REAL shift to state 117
-- On PrintableString shift to state 118
-- On PLUS_INFINITY shift to state 297
-- On ObjectDescriptor shift to state 119
-- On OCTET shift to state 120
-- On OBJECT shift to state 122
-- On NumericString shift to state 124
-- On Number shift to state 304
-- On NULL shift to state 298
-- On MINUS_INFINITY shift to state 299
-- On Lower shift to state 305
-- On LeftBracket shift to state 129
-- On LeftBrace shift to state 302
-- On ISO646String shift to state 140
-- On INTEGER shift to state 141
-- On INSTANCE shift to state 157
-- On IA5String shift to state 166
-- On Hyphen shift to state 306
-- On Hstring shift to state 308
-- On GraphicString shift to state 167
-- On GeneralizedTime shift to state 168
-- On GeneralString shift to state 169
-- On FALSE shift to state 309
-- On EXTERNAL shift to state 170
-- On ENUMERATED shift to state 171
-- On EMBEDDED shift to state 179
-- On Cstring shift to state 353
-- On CONTAINING shift to state 311
-- On CHOICE shift to state 181
-- On CHARACTER shift to state 184
-- On Bstring shift to state 312
-- On BOOLEAN shift to state 186
-- On BMPString shift to state 187
-- On BIT shift to state 188
-- On ABSTRACT_SYNTAX shift to state 162
-- On valueSetFromObjects shift to state 202
-- On valueList shift to state 354
-- On valueFromObject shift to state 313
-- On value shift to state 358
-- On usefulType shift to state 203
-- On usefulObjectClassReference shift to state 163
-- On unrestrictedCharacterStringValue shift to state 315
-- On unrestrictedCharacterStringType shift to state 204
-- On type_x shift to state 316
-- On typeWithConstraint shift to state 207
-- On typeFromObject shift to state 208
-- On tuple shift to state 359
-- On taggedType shift to state 209
-- On tag shift to state 210
-- On tableColumn shift to state 360
-- On specialRealValue shift to state 320
-- On simpleDefinedValue shift to state 64
-- On simpleDefinedType shift to state 213
-- On signedNumber shift to state 321
-- On setValue shift to state 322
-- On setType shift to state 215
-- On setOfValue shift to state 323
-- On setOfType shift to state 216
-- On sequenceValue shift to state 324
-- On sequenceType shift to state 217
-- On sequenceOfValue shift to state 325
-- On sequenceOfType shift to state 218
-- On selectionType shift to state 219
-- On restrictedCharacterStringValue shift to state 326
-- On restrictedCharacterStringType shift to state 220
-- On relativeOIDValue shift to state 327
-- On relativeOIDType shift to state 221
-- On relativeOIDComponentsList shift to state 365
-- On relativeOIDComponents shift to state 367
-- On referencedValue shift to state 328
-- On referencedType shift to state 222
-- On referencedObjects shift to state 329
-- On realValue shift to state 332
-- On realType shift to state 232
-- On quadruple shift to state 373
-- On parameterizedValueSetType shift to state 233
-- On parameterizedValue shift to state 135
-- On parameterizedType shift to state 234
-- On parameterizedObjectSet shift to state 235
-- On parameterizedObject shift to state 236
-- On openTypeFieldVal shift to state 334
-- On octetStringValue shift to state 335
-- On octetStringType shift to state 237
-- On objectIdentifierValue shift to state 336
-- On objectIdentifierType shift to state 238
-- On objectClassFieldValue shift to state 337
-- On objectClassFieldType shift to state 239
-- On objIdComponentsList shift to state 374
-- On objIdComponents shift to state 376
-- On numericRealValue shift to state 338
-- On numberForm shift to state 382
-- On nullValue shift to state 339
-- On nullType shift to state 240
-- On namedValueList shift to state 383
-- On namedValue shift to state 388
-- On nameForm shift to state 379
-- On nameAndNumberForm shift to state 389
-- On integerValue shift to state 340
-- On integerType shift to state 241
-- On instanceOfType shift to state 242
-- On identifierList shift to state 390
-- On group shift to state 394
-- On fixedTypeFieldVal shift to state 341
-- On externalValueReference shift to state 136
-- On externalValue shift to state 342
-- On externalTypeReference shift to state 243
-- On externalType shift to state 244
-- On externalObjectSetReference shift to state 245
-- On externalObjectReference shift to state 246
-- On externalObjectClassReference shift to state 164
-- On enumeratedValue shift to state 343
-- On enumeratedType shift to state 247
-- On embeddedPDVValue shift to state 344
-- On embeddedPDVType shift to state 248
-- On definedValue shift to state 405
-- On definedType shift to state 249
-- On definedObjectSet shift to state 250
-- On definedObjectClass shift to state 252
-- On definedObject shift to state 255
-- On constrainedType shift to state 257
-- On componentValueList shift to state 408
-- On choiceValue shift to state 346
-- On choiceType shift to state 258
-- On charsDefn shift to state 412
-- On characterStringValue shift to state 347
-- On characterStringType shift to state 259
-- On characterStringList shift to state 348
-- On charSyms shift to state 413
-- On builtinValue shift to state 349
-- On builtinType shift to state 260
-- On booleanValue shift to state 350
-- On booleanType shift to state 261
-- On bitStringValue shift to state 351
-- On bitStringType shift to state 262
## Reductions:

State 303:
## Known stack suffix:
## LeftBrace RightBrace
## LR(1) items:
bitStringValue -> LeftBrace RightBrace . [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
sequenceOfValue -> LeftBrace RightBrace . [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
sequenceValue -> LeftBrace RightBrace . [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
setOfValue -> LeftBrace RightBrace . [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
setValue -> LeftBrace RightBrace . [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production bitStringValue -> LeftBrace RightBrace

State 304:
## Known stack suffix:
## Number
## LR(1) items:
group -> Number . [ Comma ]
numberForm -> Number . [ Upper RightBrace Number Lower ]
signedNumber -> Number . [ UNION RightBrace Middle LessThan INTERSECTION EXCEPT DoubleDot Comma Circumflex ]
tableColumn -> Number . [ Comma ]
## Transitions:
## Reductions:
-- On Upper reduce production numberForm -> Number
-- On UNION reduce production signedNumber -> Number
-- On RightBrace reduce production signedNumber -> Number
-- On Number reduce production numberForm -> Number
-- On Middle reduce production signedNumber -> Number
-- On Lower reduce production numberForm -> Number
-- On LessThan reduce production signedNumber -> Number
-- On INTERSECTION reduce production signedNumber -> Number
-- On EXCEPT reduce production signedNumber -> Number
-- On DoubleDot reduce production signedNumber -> Number
-- On Comma reduce production signedNumber -> Number
-- On Circumflex reduce production signedNumber -> Number

State 305:
## Known stack suffix:
## Lower
## LR(1) items:
choiceValue -> Lower . Colon value [ UNION RightBrace Middle LessThan INTERSECTION EXCEPT DoubleDot Comma Circumflex ]
definedObject -> Lower . [ UNION RightBrace Middle LeftBrace INTERSECTION EXCEPT Dot Comma Circumflex ]
definedValue -> Lower . [ Upper UNION RightBrace Number Middle Lower LessThan INTERSECTION EXCEPT DoubleDot Comma Circumflex ]
enumeratedValue -> Lower . [ UNION RightBrace Middle LessThan INTERSECTION EXCEPT DoubleDot Comma Circumflex ]
identifierList -> Lower . [ RightBrace Comma ]
integerValue -> Lower . [ UNION RightBrace Middle LessThan INTERSECTION EXCEPT DoubleDot Comma Circumflex ]
nameAndNumberForm -> Lower . LeftParen numberForm RightParen [ Upper RightBrace Number Lower ]
nameForm -> Lower . [ Upper RightBrace Number Lower ]
namedValue -> Lower . value [ RightBrace Comma ]
selectionType -> Lower . LessThan type_x [ UNION RightBrace Middle LeftParen INTERSECTION EXCEPT Comma Colon Circumflex ]
simpleDefinedValue -> Lower . [ LeftBrace ]
## Transitions:
-- On VisibleString shift to state 66
-- On VideotexString shift to state 67
-- On Upper shift to state 108
-- On UniversalString shift to state 72
-- On UTF8String shift to state 73
-- On UTCTime shift to state 74
-- On TeletexString shift to state 75
-- On TYPE_IDENTIFIER shift to state 76
-- On TRUE shift to state 77
-- On T61String shift to state 78
-- On SET shift to state 79
-- On SEQUENCE shift to state 111
-- On RealNumber shift to state 296
-- On RELATIVE_OID shift to state 116
-- On REAL shift to state 117
-- On PrintableString shift to state 118
-- On PLUS_INFINITY shift to state 297
-- On ObjectDescriptor shift to state 119
-- On OCTET shift to state 120
-- On OBJECT shift to state 122
-- On NumericString shift to state 124
-- On Number shift to state 145
-- On NULL shift to state 298
-- On MINUS_INFINITY shift to state 299
-- On Lower shift to state 300
-- On LessThan shift to state 128
-- On LeftParen shift to state 63
-- On LeftBracket shift to state 129
-- On LeftBrace shift to state 302
-- On ISO646String shift to state 140
-- On INTEGER shift to state 141
-- On INSTANCE shift to state 157
-- On IA5String shift to state 166
-- On Hyphen shift to state 306
-- On Hstring shift to state 308
-- On GraphicString shift to state 167
-- On GeneralizedTime shift to state 168
-- On GeneralString shift to state 169
-- On FALSE shift to state 309
-- On EXTERNAL shift to state 170
-- On ENUMERATED shift to state 171
-- On EMBEDDED shift to state 179
-- On Cstring shift to state 310
-- On Colon shift to state 301
-- On CONTAINING shift to state 311
-- On CHOICE shift to state 181
-- On CHARACTER shift to state 184
-- On Bstring shift to state 312
-- On BOOLEAN shift to state 186
-- On BMPString shift to state 187
-- On BIT shift to state 188
-- On ABSTRACT_SYNTAX shift to state 162
-- On valueSetFromObjects shift to state 202
-- On valueFromObject shift to state 313
-- On value shift to state 352
-- On usefulType shift to state 203
-- On usefulObjectClassReference shift to state 163
-- On unrestrictedCharacterStringValue shift to state 315
-- On unrestrictedCharacterStringType shift to state 204
-- On type_x shift to state 316
-- On typeWithConstraint shift to state 207
-- On typeFromObject shift to state 208
-- On tuple shift to state 319
-- On taggedType shift to state 209
-- On tag shift to state 210
-- On specialRealValue shift to state 320
-- On simpleDefinedValue shift to state 64
-- On simpleDefinedType shift to state 213
-- On signedNumber shift to state 321
-- On setValue shift to state 322
-- On setType shift to state 215
-- On setOfValue shift to state 323
-- On setOfType shift to state 216
-- On sequenceValue shift to state 324
-- On sequenceType shift to state 217
-- On sequenceOfValue shift to state 325
-- On sequenceOfType shift to state 218
-- On selectionType shift to state 219
-- On restrictedCharacterStringValue shift to state 326
-- On restrictedCharacterStringType shift to state 220
-- On relativeOIDValue shift to state 327
-- On relativeOIDType shift to state 221
-- On referencedValue shift to state 328
-- On referencedType shift to state 222
-- On referencedObjects shift to state 329
-- On realValue shift to state 332
-- On realType shift to state 232
-- On quadruple shift to state 333
-- On parameterizedValueSetType shift to state 233
-- On parameterizedValue shift to state 135
-- On parameterizedType shift to state 234
-- On parameterizedObjectSet shift to state 235
-- On parameterizedObject shift to state 236
-- On openTypeFieldVal shift to state 334
-- On octetStringValue shift to state 335
-- On octetStringType shift to state 237
-- On objectIdentifierValue shift to state 336
-- On objectIdentifierType shift to state 238
-- On objectClassFieldValue shift to state 337
-- On objectClassFieldType shift to state 239
-- On numericRealValue shift to state 338
-- On nullValue shift to state 339
-- On nullType shift to state 240
-- On integerValue shift to state 340
-- On integerType shift to state 241
-- On instanceOfType shift to state 242
-- On fixedTypeFieldVal shift to state 341
-- On externalValueReference shift to state 136
-- On externalValue shift to state 342
-- On externalTypeReference shift to state 243
-- On externalType shift to state 244
-- On externalObjectSetReference shift to state 245
-- On externalObjectReference shift to state 246
-- On externalObjectClassReference shift to state 164
-- On enumeratedValue shift to state 343
-- On enumeratedType shift to state 247
-- On embeddedPDVValue shift to state 344
-- On embeddedPDVType shift to state 248
-- On definedValue shift to state 345
-- On definedType shift to state 249
-- On definedObjectSet shift to state 250
-- On definedObjectClass shift to state 252
-- On definedObject shift to state 255
-- On constrainedType shift to state 257
-- On choiceValue shift to state 346
-- On choiceType shift to state 258
-- On characterStringValue shift to state 347
-- On characterStringType shift to state 259
-- On characterStringList shift to state 348
-- On builtinValue shift to state 349
-- On builtinType shift to state 260
-- On booleanValue shift to state 350
-- On booleanType shift to state 261
-- On bitStringValue shift to state 351
-- On bitStringType shift to state 262
## Reductions:
-- On UNION reduce production definedValue -> Lower
-- On RightBrace reduce production definedValue -> Lower
-- On Middle reduce production definedValue -> Lower
-- On INTERSECTION reduce production definedValue -> Lower
-- On EXCEPT reduce production definedValue -> Lower
-- On DoubleDot reduce production definedValue -> Lower
-- On Dot reduce production definedObject -> Lower
-- On Comma reduce production definedValue -> Lower
-- On Circumflex reduce production definedValue -> Lower

State 306:
## Known stack suffix:
## Hyphen
## LR(1) items:
numericRealValue -> Hyphen . RealNumber [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
signedNumber -> Hyphen . Number [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
## Transitions:
-- On RealNumber shift to state 307
-- On Number shift to state 147
## Reductions:

State 307:
## Known stack suffix:
## Hyphen RealNumber
## LR(1) items:
numericRealValue -> Hyphen RealNumber . [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production numericRealValue -> Hyphen RealNumber

State 308:
## Known stack suffix:
## Hstring
## LR(1) items:
bitStringValue -> Hstring . [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
octetStringValue -> Hstring . [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production bitStringValue -> Hstring

State 309:
## Known stack suffix:
## FALSE
## LR(1) items:
booleanValue -> FALSE . [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production booleanValue -> FALSE

State 310:
## Known stack suffix:
## Cstring
## LR(1) items:
restrictedCharacterStringValue -> Cstring . [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production restrictedCharacterStringValue -> Cstring

State 311:
## Known stack suffix:
## CONTAINING
## LR(1) items:
bitStringValue -> CONTAINING . value [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
octetStringValue -> CONTAINING . value [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
## Transitions:
-- On VisibleString shift to state 66
-- On VideotexString shift to state 67
-- On Upper shift to state 108
-- On UniversalString shift to state 72
-- On UTF8String shift to state 73
-- On UTCTime shift to state 74
-- On TeletexString shift to state 75
-- On TYPE_IDENTIFIER shift to state 76
-- On TRUE shift to state 77
-- On T61String shift to state 78
-- On SET shift to state 79
-- On SEQUENCE shift to state 111
-- On RealNumber shift to state 296
-- On RELATIVE_OID shift to state 116
-- On REAL shift to state 117
-- On PrintableString shift to state 118
-- On PLUS_INFINITY shift to state 297
-- On ObjectDescriptor shift to state 119
-- On OCTET shift to state 120
-- On OBJECT shift to state 122
-- On NumericString shift to state 124
-- On Number shift to state 145
-- On NULL shift to state 298
-- On MINUS_INFINITY shift to state 299
-- On Lower shift to state 300
-- On LeftBracket shift to state 129
-- On LeftBrace shift to state 302
-- On ISO646String shift to state 140
-- On INTEGER shift to state 141
-- On INSTANCE shift to state 157
-- On IA5String shift to state 166
-- On Hyphen shift to state 306
-- On Hstring shift to state 308
-- On GraphicString shift to state 167
-- On GeneralizedTime shift to state 168
-- On GeneralString shift to state 169
-- On FALSE shift to state 309
-- On EXTERNAL shift to state 170
-- On ENUMERATED shift to state 171
-- On EMBEDDED shift to state 179
-- On Cstring shift to state 310
-- On CONTAINING shift to state 311
-- On CHOICE shift to state 181
-- On CHARACTER shift to state 184
-- On Bstring shift to state 312
-- On BOOLEAN shift to state 186
-- On BMPString shift to state 187
-- On BIT shift to state 188
-- On ABSTRACT_SYNTAX shift to state 162
-- On valueSetFromObjects shift to state 202
-- On valueFromObject shift to state 313
-- On value shift to state 314
-- On usefulType shift to state 203
-- On usefulObjectClassReference shift to state 163
-- On unrestrictedCharacterStringValue shift to state 315
-- On unrestrictedCharacterStringType shift to state 204
-- On type_x shift to state 316
-- On typeWithConstraint shift to state 207
-- On typeFromObject shift to state 208
-- On tuple shift to state 319
-- On taggedType shift to state 209
-- On tag shift to state 210
-- On specialRealValue shift to state 320
-- On simpleDefinedValue shift to state 64
-- On simpleDefinedType shift to state 213
-- On signedNumber shift to state 321
-- On setValue shift to state 322
-- On setType shift to state 215
-- On setOfValue shift to state 323
-- On setOfType shift to state 216
-- On sequenceValue shift to state 324
-- On sequenceType shift to state 217
-- On sequenceOfValue shift to state 325
-- On sequenceOfType shift to state 218
-- On selectionType shift to state 219
-- On restrictedCharacterStringValue shift to state 326
-- On restrictedCharacterStringType shift to state 220
-- On relativeOIDValue shift to state 327
-- On relativeOIDType shift to state 221
-- On referencedValue shift to state 328
-- On referencedType shift to state 222
-- On referencedObjects shift to state 329
-- On realValue shift to state 332
-- On realType shift to state 232
-- On quadruple shift to state 333
-- On parameterizedValueSetType shift to state 233
-- On parameterizedValue shift to state 135
-- On parameterizedType shift to state 234
-- On parameterizedObjectSet shift to state 235
-- On parameterizedObject shift to state 236
-- On openTypeFieldVal shift to state 334
-- On octetStringValue shift to state 335
-- On octetStringType shift to state 237
-- On objectIdentifierValue shift to state 336
-- On objectIdentifierType shift to state 238
-- On objectClassFieldValue shift to state 337
-- On objectClassFieldType shift to state 239
-- On numericRealValue shift to state 338
-- On nullValue shift to state 339
-- On nullType shift to state 240
-- On integerValue shift to state 340
-- On integerType shift to state 241
-- On instanceOfType shift to state 242
-- On fixedTypeFieldVal shift to state 341
-- On externalValueReference shift to state 136
-- On externalValue shift to state 342
-- On externalTypeReference shift to state 243
-- On externalType shift to state 244
-- On externalObjectSetReference shift to state 245
-- On externalObjectReference shift to state 246
-- On externalObjectClassReference shift to state 164
-- On enumeratedValue shift to state 343
-- On enumeratedType shift to state 247
-- On embeddedPDVValue shift to state 344
-- On embeddedPDVType shift to state 248
-- On definedValue shift to state 345
-- On definedType shift to state 249
-- On definedObjectSet shift to state 250
-- On definedObjectClass shift to state 252
-- On definedObject shift to state 255
-- On constrainedType shift to state 257
-- On choiceValue shift to state 346
-- On choiceType shift to state 258
-- On characterStringValue shift to state 347
-- On characterStringType shift to state 259
-- On characterStringList shift to state 348
-- On builtinValue shift to state 349
-- On builtinType shift to state 260
-- On booleanValue shift to state 350
-- On booleanType shift to state 261
-- On bitStringValue shift to state 351
-- On bitStringType shift to state 262
## Reductions:

State 312:
## Known stack suffix:
## Bstring
## LR(1) items:
bitStringValue -> Bstring . [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
octetStringValue -> Bstring . [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production bitStringValue -> Bstring

State 313:
## Known stack suffix:
## valueFromObject
## LR(1) items:
referencedValue -> valueFromObject . [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production referencedValue -> valueFromObject

State 314:
## Known stack suffix:
## CONTAINING value
## LR(1) items:
bitStringValue -> CONTAINING value . [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
octetStringValue -> CONTAINING value . [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production bitStringValue -> CONTAINING value

State 315:
## Known stack suffix:
## unrestrictedCharacterStringValue
## LR(1) items:
characterStringValue -> unrestrictedCharacterStringValue . [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production characterStringValue -> unrestrictedCharacterStringValue

State 316:
## Known stack suffix:
## type_x
## LR(1) items:
constrainedType -> type_x . constraint_x [ LeftParen Colon ]
openTypeFieldVal -> type_x . Colon value [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
## Transitions:
-- On LeftParen shift to state 81
-- On Colon shift to state 317
-- On constraint_x shift to state 206
## Reductions:

State 317:
## Known stack suffix:
## type_x Colon
## LR(1) items:
openTypeFieldVal -> type_x Colon . value [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
## Transitions:
-- On VisibleString shift to state 66
-- On VideotexString shift to state 67
-- On Upper shift to state 108
-- On UniversalString shift to state 72
-- On UTF8String shift to state 73
-- On UTCTime shift to state 74
-- On TeletexString shift to state 75
-- On TYPE_IDENTIFIER shift to state 76
-- On TRUE shift to state 77
-- On T61String shift to state 78
-- On SET shift to state 79
-- On SEQUENCE shift to state 111
-- On RealNumber shift to state 296
-- On RELATIVE_OID shift to state 116
-- On REAL shift to state 117
-- On PrintableString shift to state 118
-- On PLUS_INFINITY shift to state 297
-- On ObjectDescriptor shift to state 119
-- On OCTET shift to state 120
-- On OBJECT shift to state 122
-- On NumericString shift to state 124
-- On Number shift to state 145
-- On NULL shift to state 298
-- On MINUS_INFINITY shift to state 299
-- On Lower shift to state 300
-- On LeftBracket shift to state 129
-- On LeftBrace shift to state 302
-- On ISO646String shift to state 140
-- On INTEGER shift to state 141
-- On INSTANCE shift to state 157
-- On IA5String shift to state 166
-- On Hyphen shift to state 306
-- On Hstring shift to state 308
-- On GraphicString shift to state 167
-- On GeneralizedTime shift to state 168
-- On GeneralString shift to state 169
-- On FALSE shift to state 309
-- On EXTERNAL shift to state 170
-- On ENUMERATED shift to state 171
-- On EMBEDDED shift to state 179
-- On Cstring shift to state 310
-- On CONTAINING shift to state 311
-- On CHOICE shift to state 181
-- On CHARACTER shift to state 184
-- On Bstring shift to state 312
-- On BOOLEAN shift to state 186
-- On BMPString shift to state 187
-- On BIT shift to state 188
-- On ABSTRACT_SYNTAX shift to state 162
-- On valueSetFromObjects shift to state 202
-- On valueFromObject shift to state 313
-- On value shift to state 318
-- On usefulType shift to state 203
-- On usefulObjectClassReference shift to state 163
-- On unrestrictedCharacterStringValue shift to state 315
-- On unrestrictedCharacterStringType shift to state 204
-- On type_x shift to state 316
-- On typeWithConstraint shift to state 207
-- On typeFromObject shift to state 208
-- On tuple shift to state 319
-- On taggedType shift to state 209
-- On tag shift to state 210
-- On specialRealValue shift to state 320
-- On simpleDefinedValue shift to state 64
-- On simpleDefinedType shift to state 213
-- On signedNumber shift to state 321
-- On setValue shift to state 322
-- On setType shift to state 215
-- On setOfValue shift to state 323
-- On setOfType shift to state 216
-- On sequenceValue shift to state 324
-- On sequenceType shift to state 217
-- On sequenceOfValue shift to state 325
-- On sequenceOfType shift to state 218
-- On selectionType shift to state 219
-- On restrictedCharacterStringValue shift to state 326
-- On restrictedCharacterStringType shift to state 220
-- On relativeOIDValue shift to state 327
-- On relativeOIDType shift to state 221
-- On referencedValue shift to state 328
-- On referencedType shift to state 222
-- On referencedObjects shift to state 329
-- On realValue shift to state 332
-- On realType shift to state 232
-- On quadruple shift to state 333
-- On parameterizedValueSetType shift to state 233
-- On parameterizedValue shift to state 135
-- On parameterizedType shift to state 234
-- On parameterizedObjectSet shift to state 235
-- On parameterizedObject shift to state 236
-- On openTypeFieldVal shift to state 334
-- On octetStringValue shift to state 335
-- On octetStringType shift to state 237
-- On objectIdentifierValue shift to state 336
-- On objectIdentifierType shift to state 238
-- On objectClassFieldValue shift to state 337
-- On objectClassFieldType shift to state 239
-- On numericRealValue shift to state 338
-- On nullValue shift to state 339
-- On nullType shift to state 240
-- On integerValue shift to state 340
-- On integerType shift to state 241
-- On instanceOfType shift to state 242
-- On fixedTypeFieldVal shift to state 341
-- On externalValueReference shift to state 136
-- On externalValue shift to state 342
-- On externalTypeReference shift to state 243
-- On externalType shift to state 244
-- On externalObjectSetReference shift to state 245
-- On externalObjectReference shift to state 246
-- On externalObjectClassReference shift to state 164
-- On enumeratedValue shift to state 343
-- On enumeratedType shift to state 247
-- On embeddedPDVValue shift to state 344
-- On embeddedPDVType shift to state 248
-- On definedValue shift to state 345
-- On definedType shift to state 249
-- On definedObjectSet shift to state 250
-- On definedObjectClass shift to state 252
-- On definedObject shift to state 255
-- On constrainedType shift to state 257
-- On choiceValue shift to state 346
-- On choiceType shift to state 258
-- On characterStringValue shift to state 347
-- On characterStringType shift to state 259
-- On characterStringList shift to state 348
-- On builtinValue shift to state 349
-- On builtinType shift to state 260
-- On booleanValue shift to state 350
-- On booleanType shift to state 261
-- On bitStringValue shift to state 351
-- On bitStringType shift to state 262
## Reductions:

State 318:
## Known stack suffix:
## type_x Colon value
## LR(1) items:
openTypeFieldVal -> type_x Colon value . [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production openTypeFieldVal -> type_x Colon value

State 319:
## Known stack suffix:
## tuple
## LR(1) items:
restrictedCharacterStringValue -> tuple . [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production restrictedCharacterStringValue -> tuple

State 320:
## Known stack suffix:
## specialRealValue
## LR(1) items:
realValue -> specialRealValue . [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production realValue -> specialRealValue

State 321:
## Known stack suffix:
## signedNumber
## LR(1) items:
integerValue -> signedNumber . [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production integerValue -> signedNumber

State 322:
## Known stack suffix:
## setValue
## LR(1) items:
builtinValue -> setValue . [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production builtinValue -> setValue

State 323:
## Known stack suffix:
## setOfValue
## LR(1) items:
builtinValue -> setOfValue . [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production builtinValue -> setOfValue

State 324:
## Known stack suffix:
## sequenceValue
## LR(1) items:
builtinValue -> sequenceValue . [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
embeddedPDVValue -> sequenceValue . [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
externalValue -> sequenceValue . [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
numericRealValue -> sequenceValue . [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
unrestrictedCharacterStringValue -> sequenceValue . [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production builtinValue -> sequenceValue

State 325:
## Known stack suffix:
## sequenceOfValue
## LR(1) items:
builtinValue -> sequenceOfValue . [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production builtinValue -> sequenceOfValue

State 326:
## Known stack suffix:
## restrictedCharacterStringValue
## LR(1) items:
characterStringValue -> restrictedCharacterStringValue . [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production characterStringValue -> restrictedCharacterStringValue

State 327:
## Known stack suffix:
## relativeOIDValue
## LR(1) items:
builtinValue -> relativeOIDValue . [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production builtinValue -> relativeOIDValue

State 328:
## Known stack suffix:
## referencedValue
## LR(1) items:
fixedTypeFieldVal -> referencedValue . [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
value -> referencedValue . [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production value -> referencedValue

State 329:
## Known stack suffix:
## referencedObjects
## LR(1) items:
typeFromObject -> referencedObjects . Dot fieldName [ RightParen LeftParen ENCODED Colon Bang ]
valueFromObject -> referencedObjects . Dot fieldName [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
valueSetFromObjects -> referencedObjects . Dot fieldName [ RightParen LeftParen ENCODED Colon Bang ]
## Transitions:
-- On Dot shift to state 330
## Reductions:

State 330:
## Known stack suffix:
## referencedObjects Dot
## LR(1) items:
typeFromObject -> referencedObjects Dot . fieldName [ RightParen LeftParen ENCODED Colon Bang ]
valueFromObject -> referencedObjects Dot . fieldName [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
valueSetFromObjects -> referencedObjects Dot . fieldName [ RightParen LeftParen ENCODED Colon Bang ]
## Transitions:
-- On UpperField shift to state 225
-- On LowerField shift to state 226
-- On separated_nonempty_list(Dot,primitiveFieldName) shift to state 227
-- On primitiveFieldName shift to state 228
-- On fieldName shift to state 331
## Reductions:

State 331:
## Known stack suffix:
## referencedObjects Dot fieldName
## LR(1) items:
typeFromObject -> referencedObjects Dot fieldName . [ RightParen LeftParen ENCODED Colon Bang ]
valueFromObject -> referencedObjects Dot fieldName . [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
valueSetFromObjects -> referencedObjects Dot fieldName . [ RightParen LeftParen ENCODED Colon Bang ]
## Transitions:
## Reductions:
-- On Upper reduce production valueFromObject -> referencedObjects Dot fieldName
-- On UNION reduce production valueFromObject -> referencedObjects Dot fieldName
-- On RightParen reduce production valueFromObject -> referencedObjects Dot fieldName
-- On RightDoubleBracket reduce production valueFromObject -> referencedObjects Dot fieldName
-- On RightBrace reduce production valueFromObject -> referencedObjects Dot fieldName
-- On Middle reduce production valueFromObject -> referencedObjects Dot fieldName
-- On Lower reduce production valueFromObject -> referencedObjects Dot fieldName
-- On LessThan reduce production valueFromObject -> referencedObjects Dot fieldName
-- On LeftParen reduce production valueSetFromObjects -> referencedObjects Dot fieldName
-- On INTERSECTION reduce production valueFromObject -> referencedObjects Dot fieldName
-- On EXCEPT reduce production valueFromObject -> referencedObjects Dot fieldName
-- On END reduce production valueFromObject -> referencedObjects Dot fieldName
-- On ENCODED reduce production valueSetFromObjects -> referencedObjects Dot fieldName
-- On DoubleDot reduce production valueFromObject -> referencedObjects Dot fieldName
-- On Comma reduce production valueFromObject -> referencedObjects Dot fieldName
-- On Colon reduce production valueSetFromObjects -> referencedObjects Dot fieldName
-- On Circumflex reduce production valueFromObject -> referencedObjects Dot fieldName
-- On Bang reduce production valueFromObject -> referencedObjects Dot fieldName

State 332:
## Known stack suffix:
## realValue
## LR(1) items:
builtinValue -> realValue . [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production builtinValue -> realValue

State 333:
## Known stack suffix:
## quadruple
## LR(1) items:
restrictedCharacterStringValue -> quadruple . [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production restrictedCharacterStringValue -> quadruple

State 334:
## Known stack suffix:
## openTypeFieldVal
## LR(1) items:
objectClassFieldValue -> openTypeFieldVal . [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production objectClassFieldValue -> openTypeFieldVal

State 335:
## Known stack suffix:
## octetStringValue
## LR(1) items:
builtinValue -> octetStringValue . [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production builtinValue -> octetStringValue

State 336:
## Known stack suffix:
## objectIdentifierValue
## LR(1) items:
builtinValue -> objectIdentifierValue . [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production builtinValue -> objectIdentifierValue

State 337:
## Known stack suffix:
## objectClassFieldValue
## LR(1) items:
value -> objectClassFieldValue . [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production value -> objectClassFieldValue

State 338:
## Known stack suffix:
## numericRealValue
## LR(1) items:
realValue -> numericRealValue . [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production realValue -> numericRealValue

State 339:
## Known stack suffix:
## nullValue
## LR(1) items:
builtinValue -> nullValue . [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production builtinValue -> nullValue

State 340:
## Known stack suffix:
## integerValue
## LR(1) items:
builtinValue -> integerValue . [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production builtinValue -> integerValue

State 341:
## Known stack suffix:
## fixedTypeFieldVal
## LR(1) items:
objectClassFieldValue -> fixedTypeFieldVal . [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production objectClassFieldValue -> fixedTypeFieldVal

State 342:
## Known stack suffix:
## externalValue
## LR(1) items:
builtinValue -> externalValue . [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production builtinValue -> externalValue

State 343:
## Known stack suffix:
## enumeratedValue
## LR(1) items:
builtinValue -> enumeratedValue . [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production builtinValue -> enumeratedValue

State 344:
## Known stack suffix:
## embeddedPDVValue
## LR(1) items:
builtinValue -> embeddedPDVValue . [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production builtinValue -> embeddedPDVValue

State 345:
## Known stack suffix:
## definedValue
## LR(1) items:
referencedValue -> definedValue . [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production referencedValue -> definedValue

State 346:
## Known stack suffix:
## choiceValue
## LR(1) items:
builtinValue -> choiceValue . [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production builtinValue -> choiceValue

State 347:
## Known stack suffix:
## characterStringValue
## LR(1) items:
builtinValue -> characterStringValue . [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production builtinValue -> characterStringValue

State 348:
## Known stack suffix:
## characterStringList
## LR(1) items:
restrictedCharacterStringValue -> characterStringList . [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production restrictedCharacterStringValue -> characterStringList

State 349:
## Known stack suffix:
## builtinValue
## LR(1) items:
fixedTypeFieldVal -> builtinValue . [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
value -> builtinValue . [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production value -> builtinValue

State 350:
## Known stack suffix:
## booleanValue
## LR(1) items:
builtinValue -> booleanValue . [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production builtinValue -> booleanValue

State 351:
## Known stack suffix:
## bitStringValue
## LR(1) items:
builtinValue -> bitStringValue . [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production builtinValue -> bitStringValue

State 352:
## Known stack suffix:
## Lower value
## LR(1) items:
namedValue -> Lower value . [ RightBrace Comma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production namedValue -> Lower value

State 353:
## Known stack suffix:
## Cstring
## LR(1) items:
charsDefn -> Cstring . [ RightBrace Comma ]
restrictedCharacterStringValue -> Cstring . [ UNION RightBrace Middle LessThan INTERSECTION EXCEPT DoubleDot Comma Circumflex ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production restrictedCharacterStringValue -> Cstring

State 354:
## Known stack suffix:
## LeftBrace valueList
## LR(1) items:
sequenceOfValue -> LeftBrace valueList . RightBrace [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
setOfValue -> LeftBrace valueList . RightBrace [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
valueList -> valueList . Comma value [ RightBrace Comma ]
## Transitions:
-- On RightBrace shift to state 355
-- On Comma shift to state 356
## Reductions:

State 355:
## Known stack suffix:
## LeftBrace valueList RightBrace
## LR(1) items:
sequenceOfValue -> LeftBrace valueList RightBrace . [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
setOfValue -> LeftBrace valueList RightBrace . [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production sequenceOfValue -> LeftBrace valueList RightBrace

State 356:
## Known stack suffix:
## valueList Comma
## LR(1) items:
valueList -> valueList Comma . value [ RightBrace Comma ]
## Transitions:
-- On VisibleString shift to state 66
-- On VideotexString shift to state 67
-- On Upper shift to state 108
-- On UniversalString shift to state 72
-- On UTF8String shift to state 73
-- On UTCTime shift to state 74
-- On TeletexString shift to state 75
-- On TYPE_IDENTIFIER shift to state 76
-- On TRUE shift to state 77
-- On T61String shift to state 78
-- On SET shift to state 79
-- On SEQUENCE shift to state 111
-- On RealNumber shift to state 296
-- On RELATIVE_OID shift to state 116
-- On REAL shift to state 117
-- On PrintableString shift to state 118
-- On PLUS_INFINITY shift to state 297
-- On ObjectDescriptor shift to state 119
-- On OCTET shift to state 120
-- On OBJECT shift to state 122
-- On NumericString shift to state 124
-- On Number shift to state 145
-- On NULL shift to state 298
-- On MINUS_INFINITY shift to state 299
-- On Lower shift to state 300
-- On LeftBracket shift to state 129
-- On LeftBrace shift to state 302
-- On ISO646String shift to state 140
-- On INTEGER shift to state 141
-- On INSTANCE shift to state 157
-- On IA5String shift to state 166
-- On Hyphen shift to state 306
-- On Hstring shift to state 308
-- On GraphicString shift to state 167
-- On GeneralizedTime shift to state 168
-- On GeneralString shift to state 169
-- On FALSE shift to state 309
-- On EXTERNAL shift to state 170
-- On ENUMERATED shift to state 171
-- On EMBEDDED shift to state 179
-- On Cstring shift to state 310
-- On CONTAINING shift to state 311
-- On CHOICE shift to state 181
-- On CHARACTER shift to state 184
-- On Bstring shift to state 312
-- On BOOLEAN shift to state 186
-- On BMPString shift to state 187
-- On BIT shift to state 188
-- On ABSTRACT_SYNTAX shift to state 162
-- On valueSetFromObjects shift to state 202
-- On valueFromObject shift to state 313
-- On value shift to state 357
-- On usefulType shift to state 203
-- On usefulObjectClassReference shift to state 163
-- On unrestrictedCharacterStringValue shift to state 315
-- On unrestrictedCharacterStringType shift to state 204
-- On type_x shift to state 316
-- On typeWithConstraint shift to state 207
-- On typeFromObject shift to state 208
-- On tuple shift to state 319
-- On taggedType shift to state 209
-- On tag shift to state 210
-- On specialRealValue shift to state 320
-- On simpleDefinedValue shift to state 64
-- On simpleDefinedType shift to state 213
-- On signedNumber shift to state 321
-- On setValue shift to state 322
-- On setType shift to state 215
-- On setOfValue shift to state 323
-- On setOfType shift to state 216
-- On sequenceValue shift to state 324
-- On sequenceType shift to state 217
-- On sequenceOfValue shift to state 325
-- On sequenceOfType shift to state 218
-- On selectionType shift to state 219
-- On restrictedCharacterStringValue shift to state 326
-- On restrictedCharacterStringType shift to state 220
-- On relativeOIDValue shift to state 327
-- On relativeOIDType shift to state 221
-- On referencedValue shift to state 328
-- On referencedType shift to state 222
-- On referencedObjects shift to state 329
-- On realValue shift to state 332
-- On realType shift to state 232
-- On quadruple shift to state 333
-- On parameterizedValueSetType shift to state 233
-- On parameterizedValue shift to state 135
-- On parameterizedType shift to state 234
-- On parameterizedObjectSet shift to state 235
-- On parameterizedObject shift to state 236
-- On openTypeFieldVal shift to state 334
-- On octetStringValue shift to state 335
-- On octetStringType shift to state 237
-- On objectIdentifierValue shift to state 336
-- On objectIdentifierType shift to state 238
-- On objectClassFieldValue shift to state 337
-- On objectClassFieldType shift to state 239
-- On numericRealValue shift to state 338
-- On nullValue shift to state 339
-- On nullType shift to state 240
-- On integerValue shift to state 340
-- On integerType shift to state 241
-- On instanceOfType shift to state 242
-- On fixedTypeFieldVal shift to state 341
-- On externalValueReference shift to state 136
-- On externalValue shift to state 342
-- On externalTypeReference shift to state 243
-- On externalType shift to state 244
-- On externalObjectSetReference shift to state 245
-- On externalObjectReference shift to state 246
-- On externalObjectClassReference shift to state 164
-- On enumeratedValue shift to state 343
-- On enumeratedType shift to state 247
-- On embeddedPDVValue shift to state 344
-- On embeddedPDVType shift to state 248
-- On definedValue shift to state 345
-- On definedType shift to state 249
-- On definedObjectSet shift to state 250
-- On definedObjectClass shift to state 252
-- On definedObject shift to state 255
-- On constrainedType shift to state 257
-- On choiceValue shift to state 346
-- On choiceType shift to state 258
-- On characterStringValue shift to state 347
-- On characterStringType shift to state 259
-- On characterStringList shift to state 348
-- On builtinValue shift to state 349
-- On builtinType shift to state 260
-- On booleanValue shift to state 350
-- On booleanType shift to state 261
-- On bitStringValue shift to state 351
-- On bitStringType shift to state 262
## Reductions:

State 357:
## Known stack suffix:
## valueList Comma value
## LR(1) items:
valueList -> valueList Comma value . [ RightBrace Comma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production valueList -> valueList Comma value

State 358:
## Known stack suffix:
## value
## LR(1) items:
valueList -> value . [ RightBrace Comma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production valueList -> value

State 359:
## Known stack suffix:
## tuple
## LR(1) items:
charsDefn -> tuple . [ RightBrace Comma ]
restrictedCharacterStringValue -> tuple . [ UNION RightBrace Middle LessThan INTERSECTION EXCEPT DoubleDot Comma Circumflex ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production restrictedCharacterStringValue -> tuple

State 360:
## Known stack suffix:
## LeftBrace tableColumn
## LR(1) items:
tuple -> LeftBrace tableColumn . Comma tableRow RightBrace [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
## Transitions:
-- On Comma shift to state 361
## Reductions:

State 361:
## Known stack suffix:
## LeftBrace tableColumn Comma
## LR(1) items:
tuple -> LeftBrace tableColumn Comma . tableRow RightBrace [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
## Transitions:
-- On Number shift to state 362
-- On tableRow shift to state 363
## Reductions:

State 362:
## Known stack suffix:
## Number
## LR(1) items:
tableRow -> Number . [ RightBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production tableRow -> Number

State 363:
## Known stack suffix:
## LeftBrace tableColumn Comma tableRow
## LR(1) items:
tuple -> LeftBrace tableColumn Comma tableRow . RightBrace [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
## Transitions:
-- On RightBrace shift to state 364
## Reductions:

State 364:
## Known stack suffix:
## LeftBrace tableColumn Comma tableRow RightBrace
## LR(1) items:
tuple -> LeftBrace tableColumn Comma tableRow RightBrace . [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production tuple -> LeftBrace tableColumn Comma tableRow RightBrace

State 365:
## Known stack suffix:
## LeftBrace relativeOIDComponentsList
## LR(1) items:
relativeOIDValue -> LeftBrace relativeOIDComponentsList . RightBrace [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
## Transitions:
-- On RightBrace shift to state 366
## Reductions:

State 366:
## Known stack suffix:
## LeftBrace relativeOIDComponentsList RightBrace
## LR(1) items:
relativeOIDValue -> LeftBrace relativeOIDComponentsList RightBrace . [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production relativeOIDValue -> LeftBrace relativeOIDComponentsList RightBrace

State 367:
## Known stack suffix:
## relativeOIDComponents
## LR(1) items:
relativeOIDComponentsList -> relativeOIDComponents . [ RightBrace ]
relativeOIDComponentsList -> relativeOIDComponents . relativeOIDComponentsList [ RightBrace ]
## Transitions:
-- On Upper shift to state 56
-- On Number shift to state 61
-- On Lower shift to state 368
-- On simpleDefinedValue shift to state 64
-- On relativeOIDComponentsList shift to state 369
-- On relativeOIDComponents shift to state 367
-- On parameterizedValue shift to state 135
-- On numberForm shift to state 370
-- On nameAndNumberForm shift to state 371
-- On externalValueReference shift to state 136
-- On definedValue shift to state 372
## Reductions:
-- On RightBrace reduce production relativeOIDComponentsList -> relativeOIDComponents

State 368:
## Known stack suffix:
## Lower
## LR(1) items:
definedValue -> Lower . [ Upper RightBrace Number Lower ]
nameAndNumberForm -> Lower . LeftParen numberForm RightParen [ Upper RightBrace Number Lower ]
simpleDefinedValue -> Lower . [ LeftBrace ]
## Transitions:
-- On LeftParen shift to state 63
## Reductions:
-- On Upper reduce production definedValue -> Lower
-- On RightBrace reduce production definedValue -> Lower
-- On Number reduce production definedValue -> Lower
-- On Lower reduce production definedValue -> Lower
-- On LeftBrace reduce production simpleDefinedValue -> Lower

State 369:
## Known stack suffix:
## relativeOIDComponents relativeOIDComponentsList
## LR(1) items:
relativeOIDComponentsList -> relativeOIDComponents relativeOIDComponentsList . [ RightBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production relativeOIDComponentsList -> relativeOIDComponents relativeOIDComponentsList

State 370:
## Known stack suffix:
## numberForm
## LR(1) items:
relativeOIDComponents -> numberForm . [ Upper RightBrace Number Lower ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production relativeOIDComponents -> numberForm

State 371:
## Known stack suffix:
## nameAndNumberForm
## LR(1) items:
relativeOIDComponents -> nameAndNumberForm . [ Upper RightBrace Number Lower ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production relativeOIDComponents -> nameAndNumberForm

State 372:
## Known stack suffix:
## definedValue
## LR(1) items:
numberForm -> definedValue . [ Upper RightBrace Number Lower ]
relativeOIDComponents -> definedValue . [ Upper RightBrace Number Lower ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production numberForm -> definedValue

State 373:
## Known stack suffix:
## quadruple
## LR(1) items:
charsDefn -> quadruple . [ RightBrace Comma ]
restrictedCharacterStringValue -> quadruple . [ UNION RightBrace Middle LessThan INTERSECTION EXCEPT DoubleDot Comma Circumflex ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production restrictedCharacterStringValue -> quadruple

State 374:
## Known stack suffix:
## LeftBrace objIdComponentsList
## LR(1) items:
objectIdentifierValue -> LeftBrace objIdComponentsList . RightBrace [ Upper UNION SemiColon RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
## Transitions:
-- On RightBrace shift to state 375
## Reductions:

State 375:
## Known stack suffix:
## LeftBrace objIdComponentsList RightBrace
## LR(1) items:
objectIdentifierValue -> LeftBrace objIdComponentsList RightBrace . [ Upper UNION SemiColon RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production objectIdentifierValue -> LeftBrace objIdComponentsList RightBrace

State 376:
## Known stack suffix:
## objIdComponents
## LR(1) items:
objIdComponentsList -> objIdComponents . [ RightBrace ]
objIdComponentsList -> objIdComponents . objIdComponentsList [ RightBrace ]
## Transitions:
-- On Upper shift to state 56
-- On Number shift to state 61
-- On Lower shift to state 62
-- On simpleDefinedValue shift to state 64
-- On parameterizedValue shift to state 135
-- On objIdComponentsList shift to state 377
-- On objIdComponents shift to state 376
-- On numberForm shift to state 378
-- On nameForm shift to state 379
-- On nameAndNumberForm shift to state 380
-- On externalValueReference shift to state 136
-- On definedValue shift to state 381
## Reductions:
-- On RightBrace reduce production objIdComponentsList -> objIdComponents

State 377:
## Known stack suffix:
## objIdComponents objIdComponentsList
## LR(1) items:
objIdComponentsList -> objIdComponents objIdComponentsList . [ RightBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production objIdComponentsList -> objIdComponents objIdComponentsList

State 378:
## Known stack suffix:
## numberForm
## LR(1) items:
objIdComponents -> numberForm . [ Upper RightBrace Number Lower ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production objIdComponents -> numberForm

State 379:
## Known stack suffix:
## nameForm
## LR(1) items:
objIdComponents -> nameForm . [ Upper RightBrace Number Lower ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production objIdComponents -> nameForm

State 380:
## Known stack suffix:
## nameAndNumberForm
## LR(1) items:
objIdComponents -> nameAndNumberForm . [ Upper RightBrace Number Lower ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production objIdComponents -> nameAndNumberForm

State 381:
## Known stack suffix:
## definedValue
## LR(1) items:
numberForm -> definedValue . [ Upper RightBrace Number Lower ]
objIdComponents -> definedValue . [ Upper RightBrace Number Lower ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production objIdComponents -> definedValue

State 382:
## Known stack suffix:
## numberForm
## LR(1) items:
objIdComponents -> numberForm . [ Upper RightBrace Number Lower ]
relativeOIDComponents -> numberForm . [ Upper RightBrace Number Lower ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production objIdComponents -> numberForm

State 383:
## Known stack suffix:
## LeftBrace namedValueList
## LR(1) items:
namedValueList -> namedValueList . Comma namedValue [ RightBrace Comma ]
sequenceOfValue -> LeftBrace namedValueList . RightBrace [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
setOfValue -> LeftBrace namedValueList . RightBrace [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
## Transitions:
-- On RightBrace shift to state 384
-- On Comma shift to state 385
## Reductions:

State 384:
## Known stack suffix:
## LeftBrace namedValueList RightBrace
## LR(1) items:
sequenceOfValue -> LeftBrace namedValueList RightBrace . [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
setOfValue -> LeftBrace namedValueList RightBrace . [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production sequenceOfValue -> LeftBrace namedValueList RightBrace

State 385:
## Known stack suffix:
## namedValueList Comma
## LR(1) items:
namedValueList -> namedValueList Comma . namedValue [ RightBrace Comma ]
## Transitions:
-- On Lower shift to state 386
-- On namedValue shift to state 387
## Reductions:

State 386:
## Known stack suffix:
## Lower
## LR(1) items:
namedValue -> Lower . value [ RightBrace Comma ]
## Transitions:
-- On VisibleString shift to state 66
-- On VideotexString shift to state 67
-- On Upper shift to state 108
-- On UniversalString shift to state 72
-- On UTF8String shift to state 73
-- On UTCTime shift to state 74
-- On TeletexString shift to state 75
-- On TYPE_IDENTIFIER shift to state 76
-- On TRUE shift to state 77
-- On T61String shift to state 78
-- On SET shift to state 79
-- On SEQUENCE shift to state 111
-- On RealNumber shift to state 296
-- On RELATIVE_OID shift to state 116
-- On REAL shift to state 117
-- On PrintableString shift to state 118
-- On PLUS_INFINITY shift to state 297
-- On ObjectDescriptor shift to state 119
-- On OCTET shift to state 120
-- On OBJECT shift to state 122
-- On NumericString shift to state 124
-- On Number shift to state 145
-- On NULL shift to state 298
-- On MINUS_INFINITY shift to state 299
-- On Lower shift to state 300
-- On LeftBracket shift to state 129
-- On LeftBrace shift to state 302
-- On ISO646String shift to state 140
-- On INTEGER shift to state 141
-- On INSTANCE shift to state 157
-- On IA5String shift to state 166
-- On Hyphen shift to state 306
-- On Hstring shift to state 308
-- On GraphicString shift to state 167
-- On GeneralizedTime shift to state 168
-- On GeneralString shift to state 169
-- On FALSE shift to state 309
-- On EXTERNAL shift to state 170
-- On ENUMERATED shift to state 171
-- On EMBEDDED shift to state 179
-- On Cstring shift to state 310
-- On CONTAINING shift to state 311
-- On CHOICE shift to state 181
-- On CHARACTER shift to state 184
-- On Bstring shift to state 312
-- On BOOLEAN shift to state 186
-- On BMPString shift to state 187
-- On BIT shift to state 188
-- On ABSTRACT_SYNTAX shift to state 162
-- On valueSetFromObjects shift to state 202
-- On valueFromObject shift to state 313
-- On value shift to state 352
-- On usefulType shift to state 203
-- On usefulObjectClassReference shift to state 163
-- On unrestrictedCharacterStringValue shift to state 315
-- On unrestrictedCharacterStringType shift to state 204
-- On type_x shift to state 316
-- On typeWithConstraint shift to state 207
-- On typeFromObject shift to state 208
-- On tuple shift to state 319
-- On taggedType shift to state 209
-- On tag shift to state 210
-- On specialRealValue shift to state 320
-- On simpleDefinedValue shift to state 64
-- On simpleDefinedType shift to state 213
-- On signedNumber shift to state 321
-- On setValue shift to state 322
-- On setType shift to state 215
-- On setOfValue shift to state 323
-- On setOfType shift to state 216
-- On sequenceValue shift to state 324
-- On sequenceType shift to state 217
-- On sequenceOfValue shift to state 325
-- On sequenceOfType shift to state 218
-- On selectionType shift to state 219
-- On restrictedCharacterStringValue shift to state 326
-- On restrictedCharacterStringType shift to state 220
-- On relativeOIDValue shift to state 327
-- On relativeOIDType shift to state 221
-- On referencedValue shift to state 328
-- On referencedType shift to state 222
-- On referencedObjects shift to state 329
-- On realValue shift to state 332
-- On realType shift to state 232
-- On quadruple shift to state 333
-- On parameterizedValueSetType shift to state 233
-- On parameterizedValue shift to state 135
-- On parameterizedType shift to state 234
-- On parameterizedObjectSet shift to state 235
-- On parameterizedObject shift to state 236
-- On openTypeFieldVal shift to state 334
-- On octetStringValue shift to state 335
-- On octetStringType shift to state 237
-- On objectIdentifierValue shift to state 336
-- On objectIdentifierType shift to state 238
-- On objectClassFieldValue shift to state 337
-- On objectClassFieldType shift to state 239
-- On numericRealValue shift to state 338
-- On nullValue shift to state 339
-- On nullType shift to state 240
-- On integerValue shift to state 340
-- On integerType shift to state 241
-- On instanceOfType shift to state 242
-- On fixedTypeFieldVal shift to state 341
-- On externalValueReference shift to state 136
-- On externalValue shift to state 342
-- On externalTypeReference shift to state 243
-- On externalType shift to state 244
-- On externalObjectSetReference shift to state 245
-- On externalObjectReference shift to state 246
-- On externalObjectClassReference shift to state 164
-- On enumeratedValue shift to state 343
-- On enumeratedType shift to state 247
-- On embeddedPDVValue shift to state 344
-- On embeddedPDVType shift to state 248
-- On definedValue shift to state 345
-- On definedType shift to state 249
-- On definedObjectSet shift to state 250
-- On definedObjectClass shift to state 252
-- On definedObject shift to state 255
-- On constrainedType shift to state 257
-- On choiceValue shift to state 346
-- On choiceType shift to state 258
-- On characterStringValue shift to state 347
-- On characterStringType shift to state 259
-- On characterStringList shift to state 348
-- On builtinValue shift to state 349
-- On builtinType shift to state 260
-- On booleanValue shift to state 350
-- On booleanType shift to state 261
-- On bitStringValue shift to state 351
-- On bitStringType shift to state 262
## Reductions:

State 387:
## Known stack suffix:
## namedValueList Comma namedValue
## LR(1) items:
namedValueList -> namedValueList Comma namedValue . [ RightBrace Comma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production namedValueList -> namedValueList Comma namedValue

State 388:
## Known stack suffix:
## namedValue
## LR(1) items:
componentValueList -> namedValue . [ RightBrace Comma ]
namedValueList -> namedValue . [ RightBrace Comma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production componentValueList -> namedValue

State 389:
## Known stack suffix:
## nameAndNumberForm
## LR(1) items:
objIdComponents -> nameAndNumberForm . [ Upper RightBrace Number Lower ]
relativeOIDComponents -> nameAndNumberForm . [ Upper RightBrace Number Lower ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production objIdComponents -> nameAndNumberForm

State 390:
## Known stack suffix:
## LeftBrace identifierList
## LR(1) items:
bitStringValue -> LeftBrace identifierList . RightBrace [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
identifierList -> identifierList . Comma Lower [ RightBrace Comma ]
## Transitions:
-- On RightBrace shift to state 391
-- On Comma shift to state 392
## Reductions:

State 391:
## Known stack suffix:
## LeftBrace identifierList RightBrace
## LR(1) items:
bitStringValue -> LeftBrace identifierList RightBrace . [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production bitStringValue -> LeftBrace identifierList RightBrace

State 392:
## Known stack suffix:
## identifierList Comma
## LR(1) items:
identifierList -> identifierList Comma . Lower [ RightBrace Comma ]
## Transitions:
-- On Lower shift to state 393
## Reductions:

State 393:
## Known stack suffix:
## identifierList Comma Lower
## LR(1) items:
identifierList -> identifierList Comma Lower . [ RightBrace Comma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production identifierList -> identifierList Comma Lower

State 394:
## Known stack suffix:
## LeftBrace group
## LR(1) items:
quadruple -> LeftBrace group . Comma plane Comma row Comma cell RightBrace [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
## Transitions:
-- On Comma shift to state 395
## Reductions:

State 395:
## Known stack suffix:
## LeftBrace group Comma
## LR(1) items:
quadruple -> LeftBrace group Comma . plane Comma row Comma cell RightBrace [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
## Transitions:
-- On Number shift to state 396
-- On plane shift to state 397
## Reductions:

State 396:
## Known stack suffix:
## Number
## LR(1) items:
plane -> Number . [ Comma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production plane -> Number

State 397:
## Known stack suffix:
## LeftBrace group Comma plane
## LR(1) items:
quadruple -> LeftBrace group Comma plane . Comma row Comma cell RightBrace [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
## Transitions:
-- On Comma shift to state 398
## Reductions:

State 398:
## Known stack suffix:
## LeftBrace group Comma plane Comma
## LR(1) items:
quadruple -> LeftBrace group Comma plane Comma . row Comma cell RightBrace [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
## Transitions:
-- On Number shift to state 399
-- On row shift to state 400
## Reductions:

State 399:
## Known stack suffix:
## Number
## LR(1) items:
row -> Number . [ Comma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production row -> Number

State 400:
## Known stack suffix:
## LeftBrace group Comma plane Comma row
## LR(1) items:
quadruple -> LeftBrace group Comma plane Comma row . Comma cell RightBrace [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
## Transitions:
-- On Comma shift to state 401
## Reductions:

State 401:
## Known stack suffix:
## LeftBrace group Comma plane Comma row Comma
## LR(1) items:
quadruple -> LeftBrace group Comma plane Comma row Comma . cell RightBrace [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
## Transitions:
-- On Number shift to state 402
-- On cell shift to state 403
## Reductions:

State 402:
## Known stack suffix:
## Number
## LR(1) items:
cell -> Number . [ RightBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production cell -> Number

State 403:
## Known stack suffix:
## LeftBrace group Comma plane Comma row Comma cell
## LR(1) items:
quadruple -> LeftBrace group Comma plane Comma row Comma cell . RightBrace [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
## Transitions:
-- On RightBrace shift to state 404
## Reductions:

State 404:
## Known stack suffix:
## LeftBrace group Comma plane Comma row Comma cell RightBrace
## LR(1) items:
quadruple -> LeftBrace group Comma plane Comma row Comma cell RightBrace . [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production quadruple -> LeftBrace group Comma plane Comma row Comma cell RightBrace

State 405:
## Known stack suffix:
## LeftBrace definedValue
## LR(1) items:
charsDefn -> definedValue . [ RightBrace Comma ]
numberForm -> definedValue . [ Upper RightBrace Number Lower ]
objIdComponents -> definedValue . [ Upper RightBrace Number Lower ]
objectIdentifierValue -> LeftBrace definedValue . objIdComponentsList RightBrace [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
referencedValue -> definedValue . [ UNION RightBrace Middle LessThan INTERSECTION EXCEPT DoubleDot Comma Circumflex ]
relativeOIDComponents -> definedValue . [ Upper RightBrace Number Lower ]
## Transitions:
-- On Upper shift to state 56
-- On Number shift to state 61
-- On Lower shift to state 62
-- On simpleDefinedValue shift to state 64
-- On parameterizedValue shift to state 135
-- On objIdComponentsList shift to state 406
-- On objIdComponents shift to state 376
-- On numberForm shift to state 378
-- On nameForm shift to state 379
-- On nameAndNumberForm shift to state 380
-- On externalValueReference shift to state 136
-- On definedValue shift to state 381
## Reductions:
-- On UNION reduce production referencedValue -> definedValue
-- On RightBrace reduce production referencedValue -> definedValue
-- On Middle reduce production referencedValue -> definedValue
-- On LessThan reduce production referencedValue -> definedValue
-- On INTERSECTION reduce production referencedValue -> definedValue
-- On EXCEPT reduce production referencedValue -> definedValue
-- On DoubleDot reduce production referencedValue -> definedValue
-- On Comma reduce production referencedValue -> definedValue
-- On Circumflex reduce production referencedValue -> definedValue

State 406:
## Known stack suffix:
## LeftBrace definedValue objIdComponentsList
## LR(1) items:
objectIdentifierValue -> LeftBrace definedValue objIdComponentsList . RightBrace [ Upper UNION SemiColon RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
## Transitions:
-- On RightBrace shift to state 407
## Reductions:

State 407:
## Known stack suffix:
## LeftBrace definedValue objIdComponentsList RightBrace
## LR(1) items:
objectIdentifierValue -> LeftBrace definedValue objIdComponentsList RightBrace . [ Upper UNION SemiColon RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production objectIdentifierValue -> LeftBrace definedValue objIdComponentsList RightBrace

State 408:
## Known stack suffix:
## LeftBrace componentValueList
## LR(1) items:
componentValueList -> componentValueList . Comma namedValue [ RightBrace Comma ]
sequenceValue -> LeftBrace componentValueList . RightBrace [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
setValue -> LeftBrace componentValueList . RightBrace [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
## Transitions:
-- On RightBrace shift to state 409
-- On Comma shift to state 410
## Reductions:

State 409:
## Known stack suffix:
## LeftBrace componentValueList RightBrace
## LR(1) items:
sequenceValue -> LeftBrace componentValueList RightBrace . [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
setValue -> LeftBrace componentValueList RightBrace . [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production sequenceValue -> LeftBrace componentValueList RightBrace

State 410:
## Known stack suffix:
## componentValueList Comma
## LR(1) items:
componentValueList -> componentValueList Comma . namedValue [ RightBrace Comma ]
## Transitions:
-- On Lower shift to state 386
-- On namedValue shift to state 411
## Reductions:

State 411:
## Known stack suffix:
## componentValueList Comma namedValue
## LR(1) items:
componentValueList -> componentValueList Comma namedValue . [ RightBrace Comma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production componentValueList -> componentValueList Comma namedValue

State 412:
## Known stack suffix:
## charsDefn
## LR(1) items:
charSyms -> charsDefn . [ RightBrace Comma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production charSyms -> charsDefn

State 413:
## Known stack suffix:
## LeftBrace charSyms
## LR(1) items:
charSyms -> charSyms . Comma charsDefn [ RightBrace Comma ]
characterStringList -> LeftBrace charSyms . RightBrace [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
## Transitions:
-- On RightBrace shift to state 414
-- On Comma shift to state 415
## Reductions:

State 414:
## Known stack suffix:
## LeftBrace charSyms RightBrace
## LR(1) items:
characterStringList -> LeftBrace charSyms RightBrace . [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production characterStringList -> LeftBrace charSyms RightBrace

State 415:
## Known stack suffix:
## charSyms Comma
## LR(1) items:
charSyms -> charSyms Comma . charsDefn [ RightBrace Comma ]
## Transitions:
-- On Upper shift to state 56
-- On Lower shift to state 59
-- On LeftBrace shift to state 416
-- On Cstring shift to state 418
-- On tuple shift to state 419
-- On simpleDefinedValue shift to state 64
-- On quadruple shift to state 420
-- On parameterizedValue shift to state 135
-- On externalValueReference shift to state 136
-- On definedValue shift to state 421
-- On charsDefn shift to state 422
## Reductions:

State 416:
## Known stack suffix:
## LeftBrace
## LR(1) items:
quadruple -> LeftBrace . group Comma plane Comma row Comma cell RightBrace [ RightBrace Comma ]
tuple -> LeftBrace . tableColumn Comma tableRow RightBrace [ RightBrace Comma ]
## Transitions:
-- On Number shift to state 417
-- On tableColumn shift to state 360
-- On group shift to state 394
## Reductions:

State 417:
## Known stack suffix:
## Number
## LR(1) items:
group -> Number . [ Comma ]
tableColumn -> Number . [ Comma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production group -> Number

State 418:
## Known stack suffix:
## Cstring
## LR(1) items:
charsDefn -> Cstring . [ RightBrace Comma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production charsDefn -> Cstring

State 419:
## Known stack suffix:
## tuple
## LR(1) items:
charsDefn -> tuple . [ RightBrace Comma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production charsDefn -> tuple

State 420:
## Known stack suffix:
## quadruple
## LR(1) items:
charsDefn -> quadruple . [ RightBrace Comma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production charsDefn -> quadruple

State 421:
## Known stack suffix:
## definedValue
## LR(1) items:
charsDefn -> definedValue . [ RightBrace Comma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production charsDefn -> definedValue

State 422:
## Known stack suffix:
## charSyms Comma charsDefn
## LR(1) items:
charSyms -> charSyms Comma charsDefn . [ RightBrace Comma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production charSyms -> charSyms Comma charsDefn

State 423:
## Known stack suffix:
## Lower Colon value
## LR(1) items:
choiceValue -> Lower Colon value . [ Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production choiceValue -> Lower Colon value

State 424:
## Known stack suffix:
## type_x Colon value
## LR(1) items:
exceptionIdentification -> type_x Colon value . [ RightParen RightBrace Comma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production exceptionIdentification -> type_x Colon value

State 425:
## Known stack suffix:
## signedNumber
## LR(1) items:
exceptionIdentification -> signedNumber . [ RightParen RightBrace Comma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production exceptionIdentification -> signedNumber

State 426:
## Known stack suffix:
## Bang exceptionIdentification
## LR(1) items:
exceptionSpec -> Bang exceptionIdentification . [ RightParen RightBrace Comma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production exceptionSpec -> Bang exceptionIdentification

State 427:
## Known stack suffix:
## definedValue
## LR(1) items:
exceptionIdentification -> definedValue . [ RightParen RightBrace Comma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production exceptionIdentification -> definedValue

State 428:
## Known stack suffix:
## rootEnumeration Comma Ellipsis exceptionSpec
## LR(1) items:
enumerations -> rootEnumeration Comma Ellipsis exceptionSpec . [ RightBrace ]
enumerations -> rootEnumeration Comma Ellipsis exceptionSpec . Comma additionalEnumeration [ RightBrace ]
## Transitions:
-- On Comma shift to state 429
## Reductions:
-- On RightBrace reduce production enumerations -> rootEnumeration Comma Ellipsis exceptionSpec

State 429:
## Known stack suffix:
## rootEnumeration Comma Ellipsis exceptionSpec Comma
## LR(1) items:
enumerations -> rootEnumeration Comma Ellipsis exceptionSpec Comma . additionalEnumeration [ RightBrace ]
## Transitions:
-- On Lower shift to state 173
-- On namedNumber shift to state 430
-- On enumerationItem shift to state 431
-- On enumeration shift to state 434
-- On additionalEnumeration shift to state 435
## Reductions:

State 430:
## Known stack suffix:
## namedNumber
## LR(1) items:
enumerationItem -> namedNumber . [ RightBrace Comma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production enumerationItem -> namedNumber

State 431:
## Known stack suffix:
## enumerationItem
## LR(1) items:
enumeration -> enumerationItem . [ RightBrace Comma ]
enumeration -> enumerationItem . Comma enumeration [ RightBrace Comma ]
## Transitions:
-- On Comma shift to state 432
## Reductions:
-- On RightBrace reduce production enumeration -> enumerationItem

State 432:
## Known stack suffix:
## enumerationItem Comma
## LR(1) items:
enumeration -> enumerationItem Comma . enumeration [ RightBrace Comma ]
## Transitions:
-- On Lower shift to state 173
-- On namedNumber shift to state 430
-- On enumerationItem shift to state 431
-- On enumeration shift to state 433
## Reductions:

State 433:
## Known stack suffix:
## enumerationItem Comma enumeration
## LR(1) items:
enumeration -> enumerationItem Comma enumeration . [ RightBrace Comma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production enumeration -> enumerationItem Comma enumeration

State 434:
## Known stack suffix:
## enumeration
## LR(1) items:
additionalEnumeration -> enumeration . [ RightBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production additionalEnumeration -> enumeration

State 435:
## Known stack suffix:
## rootEnumeration Comma Ellipsis exceptionSpec Comma additionalEnumeration
## LR(1) items:
enumerations -> rootEnumeration Comma Ellipsis exceptionSpec Comma additionalEnumeration . [ RightBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production enumerations -> rootEnumeration Comma Ellipsis exceptionSpec Comma additionalEnumeration

State 436:
## Known stack suffix:
## ENUMERATED LeftBrace enumerations
## LR(1) items:
enumeratedType -> ENUMERATED LeftBrace enumerations . RightBrace [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
-- On RightBrace shift to state 437
## Reductions:

State 437:
## Known stack suffix:
## ENUMERATED LeftBrace enumerations RightBrace
## LR(1) items:
enumeratedType -> ENUMERATED LeftBrace enumerations RightBrace . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production enumeratedType -> ENUMERATED LeftBrace enumerations RightBrace

State 438:
## Known stack suffix:
## enumeration
## LR(1) items:
rootEnumeration -> enumeration . [ RightBrace Comma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production rootEnumeration -> enumeration

State 439:
## Known stack suffix:
## Lower LessThan type_x
## LR(1) items:
constrainedType -> type_x . constraint_x [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
selectionType -> Lower LessThan type_x . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
-- On LeftParen shift to state 81
-- On constraint_x shift to state 206
## Reductions:
-- On Upper reduce production selectionType -> Lower LessThan type_x
-- On UNIQUE reduce production selectionType -> Lower LessThan type_x
-- On UNION reduce production selectionType -> Lower LessThan type_x
-- On RightParen reduce production selectionType -> Lower LessThan type_x
-- On RightDoubleBracket reduce production selectionType -> Lower LessThan type_x
-- On RightBrace reduce production selectionType -> Lower LessThan type_x
-- On OPTIONAL reduce production selectionType -> Lower LessThan type_x
-- On Middle reduce production selectionType -> Lower LessThan type_x
-- On Lower reduce production selectionType -> Lower LessThan type_x
-- On INTERSECTION reduce production selectionType -> Lower LessThan type_x
-- On EXCEPT reduce production selectionType -> Lower LessThan type_x
-- On END reduce production selectionType -> Lower LessThan type_x
-- On ENCODED reduce production selectionType -> Lower LessThan type_x
-- On DEFAULT reduce production selectionType -> Lower LessThan type_x
-- On Comma reduce production selectionType -> Lower LessThan type_x
-- On Colon reduce production selectionType -> Lower LessThan type_x
-- On Circumflex reduce production selectionType -> Lower LessThan type_x
-- On Bang reduce production selectionType -> Lower LessThan type_x
-- On Assignment reduce production selectionType -> Lower LessThan type_x

State 440:
## Known stack suffix:
## SEQUENCE OF type_x
## LR(1) items:
constrainedType -> type_x . constraint_x [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
sequenceOfType -> SEQUENCE OF type_x . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
-- On LeftParen shift to state 81
-- On constraint_x shift to state 206
## Reductions:
-- On Upper reduce production sequenceOfType -> SEQUENCE OF type_x
-- On UNIQUE reduce production sequenceOfType -> SEQUENCE OF type_x
-- On UNION reduce production sequenceOfType -> SEQUENCE OF type_x
-- On RightParen reduce production sequenceOfType -> SEQUENCE OF type_x
-- On RightDoubleBracket reduce production sequenceOfType -> SEQUENCE OF type_x
-- On RightBrace reduce production sequenceOfType -> SEQUENCE OF type_x
-- On OPTIONAL reduce production sequenceOfType -> SEQUENCE OF type_x
-- On Middle reduce production sequenceOfType -> SEQUENCE OF type_x
-- On Lower reduce production sequenceOfType -> SEQUENCE OF type_x
-- On INTERSECTION reduce production sequenceOfType -> SEQUENCE OF type_x
-- On EXCEPT reduce production sequenceOfType -> SEQUENCE OF type_x
-- On END reduce production sequenceOfType -> SEQUENCE OF type_x
-- On ENCODED reduce production sequenceOfType -> SEQUENCE OF type_x
-- On DEFAULT reduce production sequenceOfType -> SEQUENCE OF type_x
-- On Comma reduce production sequenceOfType -> SEQUENCE OF type_x
-- On Colon reduce production sequenceOfType -> SEQUENCE OF type_x
-- On Circumflex reduce production sequenceOfType -> SEQUENCE OF type_x
-- On Bang reduce production sequenceOfType -> SEQUENCE OF type_x
-- On Assignment reduce production sequenceOfType -> SEQUENCE OF type_x

State 441:
## Known stack suffix:
## SEQUENCE OF namedType
## LR(1) items:
sequenceOfType -> SEQUENCE OF namedType . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production sequenceOfType -> SEQUENCE OF namedType

State 442:
## Known stack suffix:
## SEQUENCE LeftBrace
## LR(1) items:
sequenceType -> SEQUENCE LeftBrace . RightBrace [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
sequenceType -> SEQUENCE LeftBrace . extensionAndException optionalExtensionMarker RightBrace [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
sequenceType -> SEQUENCE LeftBrace . componentTypeLists RightBrace [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
-- On RightBrace shift to state 443
-- On Lower shift to state 183
-- On Ellipsis shift to state 268
-- On COMPONENTS shift to state 444
-- On rootComponentTypeList shift to state 447
-- On namedType shift to state 453
-- On extensionAndException shift to state 476
-- On componentTypeLists shift to state 485
-- On componentTypeList shift to state 475
-- On componentType shift to state 461
## Reductions:

State 443:
## Known stack suffix:
## SEQUENCE LeftBrace RightBrace
## LR(1) items:
sequenceType -> SEQUENCE LeftBrace RightBrace . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production sequenceType -> SEQUENCE LeftBrace RightBrace

State 444:
## Known stack suffix:
## COMPONENTS
## LR(1) items:
componentType -> COMPONENTS . OF type_x [ RightDoubleBracket RightBrace Comma ]
## Transitions:
-- On OF shift to state 445
## Reductions:

State 445:
## Known stack suffix:
## COMPONENTS OF
## LR(1) items:
componentType -> COMPONENTS OF . type_x [ RightDoubleBracket RightBrace Comma ]
## Transitions:
-- On VisibleString shift to state 66
-- On VideotexString shift to state 67
-- On Upper shift to state 113
-- On UniversalString shift to state 72
-- On UTF8String shift to state 73
-- On UTCTime shift to state 74
-- On TeletexString shift to state 75
-- On TYPE_IDENTIFIER shift to state 76
-- On T61String shift to state 78
-- On SET shift to state 79
-- On SEQUENCE shift to state 111
-- On RELATIVE_OID shift to state 116
-- On REAL shift to state 117
-- On PrintableString shift to state 118
-- On ObjectDescriptor shift to state 119
-- On OCTET shift to state 120
-- On OBJECT shift to state 122
-- On NumericString shift to state 124
-- On NULL shift to state 125
-- On Lower shift to state 127
-- On LeftBracket shift to state 129
-- On ISO646String shift to state 140
-- On INTEGER shift to state 141
-- On INSTANCE shift to state 157
-- On IA5String shift to state 166
-- On GraphicString shift to state 167
-- On GeneralizedTime shift to state 168
-- On GeneralString shift to state 169
-- On EXTERNAL shift to state 170
-- On ENUMERATED shift to state 171
-- On EMBEDDED shift to state 179
-- On CHOICE shift to state 181
-- On CHARACTER shift to state 184
-- On BOOLEAN shift to state 186
-- On BMPString shift to state 187
-- On BIT shift to state 188
-- On ABSTRACT_SYNTAX shift to state 162
-- On valueSetFromObjects shift to state 202
-- On usefulType shift to state 203
-- On usefulObjectClassReference shift to state 163
-- On unrestrictedCharacterStringType shift to state 204
-- On type_x shift to state 446
-- On typeWithConstraint shift to state 207
-- On typeFromObject shift to state 208
-- On taggedType shift to state 209
-- On tag shift to state 210
-- On simpleDefinedType shift to state 213
-- On setType shift to state 215
-- On setOfType shift to state 216
-- On sequenceType shift to state 217
-- On sequenceOfType shift to state 218
-- On selectionType shift to state 219
-- On restrictedCharacterStringType shift to state 220
-- On relativeOIDType shift to state 221
-- On referencedType shift to state 222
-- On referencedObjects shift to state 223
-- On realType shift to state 232
-- On parameterizedValueSetType shift to state 233
-- On parameterizedType shift to state 234
-- On parameterizedObjectSet shift to state 235
-- On parameterizedObject shift to state 236
-- On octetStringType shift to state 237
-- On objectIdentifierType shift to state 238
-- On objectClassFieldType shift to state 239
-- On nullType shift to state 240
-- On integerType shift to state 241
-- On instanceOfType shift to state 242
-- On externalTypeReference shift to state 243
-- On externalType shift to state 244
-- On externalObjectSetReference shift to state 245
-- On externalObjectReference shift to state 246
-- On externalObjectClassReference shift to state 164
-- On enumeratedType shift to state 247
-- On embeddedPDVType shift to state 248
-- On definedType shift to state 249
-- On definedObjectSet shift to state 250
-- On definedObjectClass shift to state 252
-- On definedObject shift to state 255
-- On constrainedType shift to state 257
-- On choiceType shift to state 258
-- On characterStringType shift to state 259
-- On builtinType shift to state 260
-- On booleanType shift to state 261
-- On bitStringType shift to state 262
## Reductions:

State 446:
## Known stack suffix:
## COMPONENTS OF type_x
## LR(1) items:
componentType -> COMPONENTS OF type_x . [ RightDoubleBracket RightBrace Comma ]
constrainedType -> type_x . constraint_x [ RightDoubleBracket RightBrace LeftParen Comma ]
## Transitions:
-- On LeftParen shift to state 81
-- On constraint_x shift to state 206
## Reductions:
-- On RightDoubleBracket reduce production componentType -> COMPONENTS OF type_x
-- On RightBrace reduce production componentType -> COMPONENTS OF type_x
-- On Comma reduce production componentType -> COMPONENTS OF type_x

State 447:
## Known stack suffix:
## rootComponentTypeList
## LR(1) items:
componentTypeLists -> rootComponentTypeList . [ RightBrace ]
componentTypeLists -> rootComponentTypeList . Comma extensionAndException extensionAdditions optionalExtensionMarker [ RightBrace ]
componentTypeLists -> rootComponentTypeList . Comma extensionAndException extensionAdditions extensionEndMarker Comma rootComponentTypeList [ RightBrace ]
## Transitions:
-- On Comma shift to state 448
## Reductions:
-- On RightBrace reduce production componentTypeLists -> rootComponentTypeList

State 448:
## Known stack suffix:
## rootComponentTypeList Comma
## LR(1) items:
componentTypeLists -> rootComponentTypeList Comma . extensionAndException extensionAdditions optionalExtensionMarker [ RightBrace ]
componentTypeLists -> rootComponentTypeList Comma . extensionAndException extensionAdditions extensionEndMarker Comma rootComponentTypeList [ RightBrace ]
## Transitions:
-- On Ellipsis shift to state 268
-- On extensionAndException shift to state 449
## Reductions:

State 449:
## Known stack suffix:
## rootComponentTypeList Comma extensionAndException
## LR(1) items:
componentTypeLists -> rootComponentTypeList Comma extensionAndException . extensionAdditions optionalExtensionMarker [ RightBrace ]
componentTypeLists -> rootComponentTypeList Comma extensionAndException . extensionAdditions extensionEndMarker Comma rootComponentTypeList [ RightBrace ]
## Transitions:
-- On Comma shift to state 450
-- On extensionAdditions shift to state 468
## Reductions:
-- On RightBrace reduce production extensionAdditions ->

State 450:
## Known stack suffix:
## Comma
## LR(1) items:
extensionAdditions -> Comma . extensionAdditionList [ RightBrace Comma ]
## Transitions:
-- On Lower shift to state 183
-- On LeftDoubleBracket shift to state 451
-- On COMPONENTS shift to state 444
-- On namedType shift to state 453
-- On extensionAdditionList shift to state 462
-- On extensionAdditionGroup shift to state 464
-- On extensionAddition shift to state 467
-- On componentType shift to state 466
## Reductions:

State 451:
## Known stack suffix:
## LeftDoubleBracket
## LR(1) items:
extensionAdditionGroup -> LeftDoubleBracket . versionNumber componentTypeList RightDoubleBracket [ RightBrace Comma ]
## Transitions:
-- On Number shift to state 273
-- On versionNumber shift to state 452
## Reductions:
-- On Lower reduce production versionNumber ->
-- On COMPONENTS reduce production versionNumber ->

State 452:
## Known stack suffix:
## LeftDoubleBracket versionNumber
## LR(1) items:
extensionAdditionGroup -> LeftDoubleBracket versionNumber . componentTypeList RightDoubleBracket [ RightBrace Comma ]
## Transitions:
-- On Lower shift to state 183
-- On COMPONENTS shift to state 444
-- On namedType shift to state 453
-- On componentTypeList shift to state 457
-- On componentType shift to state 461
## Reductions:

State 453:
## Known stack suffix:
## namedType
## LR(1) items:
componentType -> namedType . [ RightDoubleBracket RightBrace Comma ]
componentType -> namedType . OPTIONAL [ RightDoubleBracket RightBrace Comma ]
componentType -> namedType . DEFAULT value [ RightDoubleBracket RightBrace Comma ]
## Transitions:
-- On OPTIONAL shift to state 454
-- On DEFAULT shift to state 455
## Reductions:
-- On RightDoubleBracket reduce production componentType -> namedType
-- On RightBrace reduce production componentType -> namedType
-- On Comma reduce production componentType -> namedType

State 454:
## Known stack suffix:
## namedType OPTIONAL
## LR(1) items:
componentType -> namedType OPTIONAL . [ RightDoubleBracket RightBrace Comma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production componentType -> namedType OPTIONAL

State 455:
## Known stack suffix:
## namedType DEFAULT
## LR(1) items:
componentType -> namedType DEFAULT . value [ RightDoubleBracket RightBrace Comma ]
## Transitions:
-- On VisibleString shift to state 66
-- On VideotexString shift to state 67
-- On Upper shift to state 108
-- On UniversalString shift to state 72
-- On UTF8String shift to state 73
-- On UTCTime shift to state 74
-- On TeletexString shift to state 75
-- On TYPE_IDENTIFIER shift to state 76
-- On TRUE shift to state 77
-- On T61String shift to state 78
-- On SET shift to state 79
-- On SEQUENCE shift to state 111
-- On RealNumber shift to state 296
-- On RELATIVE_OID shift to state 116
-- On REAL shift to state 117
-- On PrintableString shift to state 118
-- On PLUS_INFINITY shift to state 297
-- On ObjectDescriptor shift to state 119
-- On OCTET shift to state 120
-- On OBJECT shift to state 122
-- On NumericString shift to state 124
-- On Number shift to state 145
-- On NULL shift to state 298
-- On MINUS_INFINITY shift to state 299
-- On Lower shift to state 300
-- On LeftBracket shift to state 129
-- On LeftBrace shift to state 302
-- On ISO646String shift to state 140
-- On INTEGER shift to state 141
-- On INSTANCE shift to state 157
-- On IA5String shift to state 166
-- On Hyphen shift to state 306
-- On Hstring shift to state 308
-- On GraphicString shift to state 167
-- On GeneralizedTime shift to state 168
-- On GeneralString shift to state 169
-- On FALSE shift to state 309
-- On EXTERNAL shift to state 170
-- On ENUMERATED shift to state 171
-- On EMBEDDED shift to state 179
-- On Cstring shift to state 310
-- On CONTAINING shift to state 311
-- On CHOICE shift to state 181
-- On CHARACTER shift to state 184
-- On Bstring shift to state 312
-- On BOOLEAN shift to state 186
-- On BMPString shift to state 187
-- On BIT shift to state 188
-- On ABSTRACT_SYNTAX shift to state 162
-- On valueSetFromObjects shift to state 202
-- On valueFromObject shift to state 313
-- On value shift to state 456
-- On usefulType shift to state 203
-- On usefulObjectClassReference shift to state 163
-- On unrestrictedCharacterStringValue shift to state 315
-- On unrestrictedCharacterStringType shift to state 204
-- On type_x shift to state 316
-- On typeWithConstraint shift to state 207
-- On typeFromObject shift to state 208
-- On tuple shift to state 319
-- On taggedType shift to state 209
-- On tag shift to state 210
-- On specialRealValue shift to state 320
-- On simpleDefinedValue shift to state 64
-- On simpleDefinedType shift to state 213
-- On signedNumber shift to state 321
-- On setValue shift to state 322
-- On setType shift to state 215
-- On setOfValue shift to state 323
-- On setOfType shift to state 216
-- On sequenceValue shift to state 324
-- On sequenceType shift to state 217
-- On sequenceOfValue shift to state 325
-- On sequenceOfType shift to state 218
-- On selectionType shift to state 219
-- On restrictedCharacterStringValue shift to state 326
-- On restrictedCharacterStringType shift to state 220
-- On relativeOIDValue shift to state 327
-- On relativeOIDType shift to state 221
-- On referencedValue shift to state 328
-- On referencedType shift to state 222
-- On referencedObjects shift to state 329
-- On realValue shift to state 332
-- On realType shift to state 232
-- On quadruple shift to state 333
-- On parameterizedValueSetType shift to state 233
-- On parameterizedValue shift to state 135
-- On parameterizedType shift to state 234
-- On parameterizedObjectSet shift to state 235
-- On parameterizedObject shift to state 236
-- On openTypeFieldVal shift to state 334
-- On octetStringValue shift to state 335
-- On octetStringType shift to state 237
-- On objectIdentifierValue shift to state 336
-- On objectIdentifierType shift to state 238
-- On objectClassFieldValue shift to state 337
-- On objectClassFieldType shift to state 239
-- On numericRealValue shift to state 338
-- On nullValue shift to state 339
-- On nullType shift to state 240
-- On integerValue shift to state 340
-- On integerType shift to state 241
-- On instanceOfType shift to state 242
-- On fixedTypeFieldVal shift to state 341
-- On externalValueReference shift to state 136
-- On externalValue shift to state 342
-- On externalTypeReference shift to state 243
-- On externalType shift to state 244
-- On externalObjectSetReference shift to state 245
-- On externalObjectReference shift to state 246
-- On externalObjectClassReference shift to state 164
-- On enumeratedValue shift to state 343
-- On enumeratedType shift to state 247
-- On embeddedPDVValue shift to state 344
-- On embeddedPDVType shift to state 248
-- On definedValue shift to state 345
-- On definedType shift to state 249
-- On definedObjectSet shift to state 250
-- On definedObjectClass shift to state 252
-- On definedObject shift to state 255
-- On constrainedType shift to state 257
-- On choiceValue shift to state 346
-- On choiceType shift to state 258
-- On characterStringValue shift to state 347
-- On characterStringType shift to state 259
-- On characterStringList shift to state 348
-- On builtinValue shift to state 349
-- On builtinType shift to state 260
-- On booleanValue shift to state 350
-- On booleanType shift to state 261
-- On bitStringValue shift to state 351
-- On bitStringType shift to state 262
## Reductions:

State 456:
## Known stack suffix:
## namedType DEFAULT value
## LR(1) items:
componentType -> namedType DEFAULT value . [ RightDoubleBracket RightBrace Comma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production componentType -> namedType DEFAULT value

State 457:
## Known stack suffix:
## LeftDoubleBracket versionNumber componentTypeList
## LR(1) items:
componentTypeList -> componentTypeList . Comma componentType [ RightDoubleBracket Comma ]
extensionAdditionGroup -> LeftDoubleBracket versionNumber componentTypeList . RightDoubleBracket [ RightBrace Comma ]
## Transitions:
-- On RightDoubleBracket shift to state 458
-- On Comma shift to state 459
## Reductions:

State 458:
## Known stack suffix:
## LeftDoubleBracket versionNumber componentTypeList RightDoubleBracket
## LR(1) items:
extensionAdditionGroup -> LeftDoubleBracket versionNumber componentTypeList RightDoubleBracket . [ RightBrace Comma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extensionAdditionGroup -> LeftDoubleBracket versionNumber componentTypeList RightDoubleBracket

State 459:
## Known stack suffix:
## componentTypeList Comma
## LR(1) items:
componentTypeList -> componentTypeList Comma . componentType [ RightDoubleBracket RightBrace Comma ]
## Transitions:
-- On Lower shift to state 183
-- On COMPONENTS shift to state 444
-- On namedType shift to state 453
-- On componentType shift to state 460
## Reductions:

State 460:
## Known stack suffix:
## componentTypeList Comma componentType
## LR(1) items:
componentTypeList -> componentTypeList Comma componentType . [ RightDoubleBracket RightBrace Comma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production componentTypeList -> componentTypeList Comma componentType

State 461:
## Known stack suffix:
## componentType
## LR(1) items:
componentTypeList -> componentType . [ RightDoubleBracket RightBrace Comma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production componentTypeList -> componentType

State 462:
## Known stack suffix:
## Comma extensionAdditionList
## LR(1) items:
extensionAdditionList -> extensionAdditionList . Comma extensionAddition [ RightBrace Comma ]
extensionAdditions -> Comma extensionAdditionList . [ RightBrace Comma ]
## Transitions:
-- On Comma shift to state 463
## Reductions:
-- On RightBrace reduce production extensionAdditions -> Comma extensionAdditionList

State 463:
## Known stack suffix:
## extensionAdditionList Comma
## LR(1) items:
extensionAdditionList -> extensionAdditionList Comma . extensionAddition [ RightBrace Comma ]
## Transitions:
-- On Lower shift to state 183
-- On LeftDoubleBracket shift to state 451
-- On COMPONENTS shift to state 444
-- On namedType shift to state 453
-- On extensionAdditionGroup shift to state 464
-- On extensionAddition shift to state 465
-- On componentType shift to state 466
## Reductions:

State 464:
## Known stack suffix:
## extensionAdditionGroup
## LR(1) items:
extensionAddition -> extensionAdditionGroup . [ RightBrace Comma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extensionAddition -> extensionAdditionGroup

State 465:
## Known stack suffix:
## extensionAdditionList Comma extensionAddition
## LR(1) items:
extensionAdditionList -> extensionAdditionList Comma extensionAddition . [ RightBrace Comma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extensionAdditionList -> extensionAdditionList Comma extensionAddition

State 466:
## Known stack suffix:
## componentType
## LR(1) items:
extensionAddition -> componentType . [ RightBrace Comma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extensionAddition -> componentType

State 467:
## Known stack suffix:
## extensionAddition
## LR(1) items:
extensionAdditionList -> extensionAddition . [ RightBrace Comma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extensionAdditionList -> extensionAddition

State 468:
## Known stack suffix:
## rootComponentTypeList Comma extensionAndException extensionAdditions
## LR(1) items:
componentTypeLists -> rootComponentTypeList Comma extensionAndException extensionAdditions . optionalExtensionMarker [ RightBrace ]
componentTypeLists -> rootComponentTypeList Comma extensionAndException extensionAdditions . extensionEndMarker Comma rootComponentTypeList [ RightBrace ]
## Transitions:
-- On Comma shift to state 469
-- On optionalExtensionMarker shift to state 471
-- On extensionEndMarker shift to state 472
## Reductions:
-- On RightBrace reduce production optionalExtensionMarker ->

State 469:
## Known stack suffix:
## Comma
## LR(1) items:
extensionEndMarker -> Comma . Ellipsis [ Comma ]
optionalExtensionMarker -> Comma . Ellipsis [ RightBrace ]
## Transitions:
-- On Ellipsis shift to state 470
## Reductions:

State 470:
## Known stack suffix:
## Comma Ellipsis
## LR(1) items:
extensionEndMarker -> Comma Ellipsis . [ Comma ]
optionalExtensionMarker -> Comma Ellipsis . [ RightBrace ]
## Transitions:
## Reductions:
-- On RightBrace reduce production optionalExtensionMarker -> Comma Ellipsis
-- On Comma reduce production extensionEndMarker -> Comma Ellipsis

State 471:
## Known stack suffix:
## rootComponentTypeList Comma extensionAndException extensionAdditions optionalExtensionMarker
## LR(1) items:
componentTypeLists -> rootComponentTypeList Comma extensionAndException extensionAdditions optionalExtensionMarker . [ RightBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production componentTypeLists -> rootComponentTypeList Comma extensionAndException extensionAdditions optionalExtensionMarker

State 472:
## Known stack suffix:
## rootComponentTypeList Comma extensionAndException extensionAdditions extensionEndMarker
## LR(1) items:
componentTypeLists -> rootComponentTypeList Comma extensionAndException extensionAdditions extensionEndMarker . Comma rootComponentTypeList [ RightBrace ]
## Transitions:
-- On Comma shift to state 473
## Reductions:

State 473:
## Known stack suffix:
## rootComponentTypeList Comma extensionAndException extensionAdditions extensionEndMarker Comma
## LR(1) items:
componentTypeLists -> rootComponentTypeList Comma extensionAndException extensionAdditions extensionEndMarker Comma . rootComponentTypeList [ RightBrace ]
## Transitions:
-- On Lower shift to state 183
-- On COMPONENTS shift to state 444
-- On rootComponentTypeList shift to state 474
-- On namedType shift to state 453
-- On componentTypeList shift to state 475
-- On componentType shift to state 461
## Reductions:

State 474:
## Known stack suffix:
## rootComponentTypeList Comma extensionAndException extensionAdditions extensionEndMarker Comma rootComponentTypeList
## LR(1) items:
componentTypeLists -> rootComponentTypeList Comma extensionAndException extensionAdditions extensionEndMarker Comma rootComponentTypeList . [ RightBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production componentTypeLists -> rootComponentTypeList Comma extensionAndException extensionAdditions extensionEndMarker Comma rootComponentTypeList

State 475:
## Known stack suffix:
## componentTypeList
## LR(1) items:
componentTypeList -> componentTypeList . Comma componentType [ RightBrace Comma ]
rootComponentTypeList -> componentTypeList . [ RightBrace Comma ]
## Transitions:
-- On Comma shift to state 459
## Reductions:
-- On RightBrace reduce production rootComponentTypeList -> componentTypeList

State 476:
## Known stack suffix:
## SEQUENCE LeftBrace extensionAndException
## LR(1) items:
componentTypeLists -> extensionAndException . extensionAdditions extensionEndMarker Comma rootComponentTypeList [ RightBrace ]
componentTypeLists -> extensionAndException . extensionAdditions optionalExtensionMarker [ RightBrace ]
sequenceType -> SEQUENCE LeftBrace extensionAndException . optionalExtensionMarker RightBrace [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
-- On Comma shift to state 477
-- On optionalExtensionMarker shift to state 478
-- On extensionAdditions shift to state 480
## Reductions:
-- On RightBrace reduce production optionalExtensionMarker ->

State 477:
## Known stack suffix:
## Comma
## LR(1) items:
extensionAdditions -> Comma . extensionAdditionList [ RightBrace Comma ]
optionalExtensionMarker -> Comma . Ellipsis [ RightBrace ]
## Transitions:
-- On Lower shift to state 183
-- On LeftDoubleBracket shift to state 451
-- On Ellipsis shift to state 289
-- On COMPONENTS shift to state 444
-- On namedType shift to state 453
-- On extensionAdditionList shift to state 462
-- On extensionAdditionGroup shift to state 464
-- On extensionAddition shift to state 467
-- On componentType shift to state 466
## Reductions:

State 478:
## Known stack suffix:
## SEQUENCE LeftBrace extensionAndException optionalExtensionMarker
## LR(1) items:
sequenceType -> SEQUENCE LeftBrace extensionAndException optionalExtensionMarker . RightBrace [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
-- On RightBrace shift to state 479
## Reductions:

State 479:
## Known stack suffix:
## SEQUENCE LeftBrace extensionAndException optionalExtensionMarker RightBrace
## LR(1) items:
sequenceType -> SEQUENCE LeftBrace extensionAndException optionalExtensionMarker RightBrace . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production sequenceType -> SEQUENCE LeftBrace extensionAndException optionalExtensionMarker RightBrace

State 480:
## Known stack suffix:
## extensionAndException extensionAdditions
## LR(1) items:
componentTypeLists -> extensionAndException extensionAdditions . extensionEndMarker Comma rootComponentTypeList [ RightBrace ]
componentTypeLists -> extensionAndException extensionAdditions . optionalExtensionMarker [ RightBrace ]
## Transitions:
-- On Comma shift to state 469
-- On optionalExtensionMarker shift to state 481
-- On extensionEndMarker shift to state 482
## Reductions:
-- On RightBrace reduce production optionalExtensionMarker ->

State 481:
## Known stack suffix:
## extensionAndException extensionAdditions optionalExtensionMarker
## LR(1) items:
componentTypeLists -> extensionAndException extensionAdditions optionalExtensionMarker . [ RightBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production componentTypeLists -> extensionAndException extensionAdditions optionalExtensionMarker

State 482:
## Known stack suffix:
## extensionAndException extensionAdditions extensionEndMarker
## LR(1) items:
componentTypeLists -> extensionAndException extensionAdditions extensionEndMarker . Comma rootComponentTypeList [ RightBrace ]
## Transitions:
-- On Comma shift to state 483
## Reductions:

State 483:
## Known stack suffix:
## extensionAndException extensionAdditions extensionEndMarker Comma
## LR(1) items:
componentTypeLists -> extensionAndException extensionAdditions extensionEndMarker Comma . rootComponentTypeList [ RightBrace ]
## Transitions:
-- On Lower shift to state 183
-- On COMPONENTS shift to state 444
-- On rootComponentTypeList shift to state 484
-- On namedType shift to state 453
-- On componentTypeList shift to state 475
-- On componentType shift to state 461
## Reductions:

State 484:
## Known stack suffix:
## extensionAndException extensionAdditions extensionEndMarker Comma rootComponentTypeList
## LR(1) items:
componentTypeLists -> extensionAndException extensionAdditions extensionEndMarker Comma rootComponentTypeList . [ RightBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production componentTypeLists -> extensionAndException extensionAdditions extensionEndMarker Comma rootComponentTypeList

State 485:
## Known stack suffix:
## SEQUENCE LeftBrace componentTypeLists
## LR(1) items:
sequenceType -> SEQUENCE LeftBrace componentTypeLists . RightBrace [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
-- On RightBrace shift to state 486
## Reductions:

State 486:
## Known stack suffix:
## SEQUENCE LeftBrace componentTypeLists RightBrace
## LR(1) items:
sequenceType -> SEQUENCE LeftBrace componentTypeLists RightBrace . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production sequenceType -> SEQUENCE LeftBrace componentTypeLists RightBrace

State 487:
## Known stack suffix:
## SEQUENCE sizeConstraint
## LR(1) items:
typeWithConstraint -> SEQUENCE sizeConstraint . OF type_x [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
typeWithConstraint -> SEQUENCE sizeConstraint . OF namedType [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
-- On OF shift to state 488
## Reductions:

State 488:
## Known stack suffix:
## SEQUENCE sizeConstraint OF
## LR(1) items:
typeWithConstraint -> SEQUENCE sizeConstraint OF . type_x [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
typeWithConstraint -> SEQUENCE sizeConstraint OF . namedType [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
-- On VisibleString shift to state 66
-- On VideotexString shift to state 67
-- On Upper shift to state 113
-- On UniversalString shift to state 72
-- On UTF8String shift to state 73
-- On UTCTime shift to state 74
-- On TeletexString shift to state 75
-- On TYPE_IDENTIFIER shift to state 76
-- On T61String shift to state 78
-- On SET shift to state 79
-- On SEQUENCE shift to state 111
-- On RELATIVE_OID shift to state 116
-- On REAL shift to state 117
-- On PrintableString shift to state 118
-- On ObjectDescriptor shift to state 119
-- On OCTET shift to state 120
-- On OBJECT shift to state 122
-- On NumericString shift to state 124
-- On NULL shift to state 125
-- On Lower shift to state 126
-- On LeftBracket shift to state 129
-- On ISO646String shift to state 140
-- On INTEGER shift to state 141
-- On INSTANCE shift to state 157
-- On IA5String shift to state 166
-- On GraphicString shift to state 167
-- On GeneralizedTime shift to state 168
-- On GeneralString shift to state 169
-- On EXTERNAL shift to state 170
-- On ENUMERATED shift to state 171
-- On EMBEDDED shift to state 179
-- On CHOICE shift to state 181
-- On CHARACTER shift to state 184
-- On BOOLEAN shift to state 186
-- On BMPString shift to state 187
-- On BIT shift to state 188
-- On ABSTRACT_SYNTAX shift to state 162
-- On valueSetFromObjects shift to state 202
-- On usefulType shift to state 203
-- On usefulObjectClassReference shift to state 163
-- On unrestrictedCharacterStringType shift to state 204
-- On type_x shift to state 489
-- On typeWithConstraint shift to state 207
-- On typeFromObject shift to state 208
-- On taggedType shift to state 209
-- On tag shift to state 210
-- On simpleDefinedType shift to state 213
-- On setType shift to state 215
-- On setOfType shift to state 216
-- On sequenceType shift to state 217
-- On sequenceOfType shift to state 218
-- On selectionType shift to state 219
-- On restrictedCharacterStringType shift to state 220
-- On relativeOIDType shift to state 221
-- On referencedType shift to state 222
-- On referencedObjects shift to state 223
-- On realType shift to state 232
-- On parameterizedValueSetType shift to state 233
-- On parameterizedType shift to state 234
-- On parameterizedObjectSet shift to state 235
-- On parameterizedObject shift to state 236
-- On octetStringType shift to state 237
-- On objectIdentifierType shift to state 238
-- On objectClassFieldType shift to state 239
-- On nullType shift to state 240
-- On namedType shift to state 490
-- On integerType shift to state 241
-- On instanceOfType shift to state 242
-- On externalTypeReference shift to state 243
-- On externalType shift to state 244
-- On externalObjectSetReference shift to state 245
-- On externalObjectReference shift to state 246
-- On externalObjectClassReference shift to state 164
-- On enumeratedType shift to state 247
-- On embeddedPDVType shift to state 248
-- On definedType shift to state 249
-- On definedObjectSet shift to state 250
-- On definedObjectClass shift to state 252
-- On definedObject shift to state 255
-- On constrainedType shift to state 257
-- On choiceType shift to state 258
-- On characterStringType shift to state 259
-- On builtinType shift to state 260
-- On booleanType shift to state 261
-- On bitStringType shift to state 262
## Reductions:

State 489:
## Known stack suffix:
## SEQUENCE sizeConstraint OF type_x
## LR(1) items:
constrainedType -> type_x . constraint_x [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
typeWithConstraint -> SEQUENCE sizeConstraint OF type_x . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
-- On LeftParen shift to state 81
-- On constraint_x shift to state 206
## Reductions:
-- On Upper reduce production typeWithConstraint -> SEQUENCE sizeConstraint OF type_x
-- On UNIQUE reduce production typeWithConstraint -> SEQUENCE sizeConstraint OF type_x
-- On UNION reduce production typeWithConstraint -> SEQUENCE sizeConstraint OF type_x
-- On RightParen reduce production typeWithConstraint -> SEQUENCE sizeConstraint OF type_x
-- On RightDoubleBracket reduce production typeWithConstraint -> SEQUENCE sizeConstraint OF type_x
-- On RightBrace reduce production typeWithConstraint -> SEQUENCE sizeConstraint OF type_x
-- On OPTIONAL reduce production typeWithConstraint -> SEQUENCE sizeConstraint OF type_x
-- On Middle reduce production typeWithConstraint -> SEQUENCE sizeConstraint OF type_x
-- On Lower reduce production typeWithConstraint -> SEQUENCE sizeConstraint OF type_x
-- On INTERSECTION reduce production typeWithConstraint -> SEQUENCE sizeConstraint OF type_x
-- On EXCEPT reduce production typeWithConstraint -> SEQUENCE sizeConstraint OF type_x
-- On END reduce production typeWithConstraint -> SEQUENCE sizeConstraint OF type_x
-- On ENCODED reduce production typeWithConstraint -> SEQUENCE sizeConstraint OF type_x
-- On DEFAULT reduce production typeWithConstraint -> SEQUENCE sizeConstraint OF type_x
-- On Comma reduce production typeWithConstraint -> SEQUENCE sizeConstraint OF type_x
-- On Colon reduce production typeWithConstraint -> SEQUENCE sizeConstraint OF type_x
-- On Circumflex reduce production typeWithConstraint -> SEQUENCE sizeConstraint OF type_x
-- On Bang reduce production typeWithConstraint -> SEQUENCE sizeConstraint OF type_x
-- On Assignment reduce production typeWithConstraint -> SEQUENCE sizeConstraint OF type_x

State 490:
## Known stack suffix:
## SEQUENCE sizeConstraint OF namedType
## LR(1) items:
typeWithConstraint -> SEQUENCE sizeConstraint OF namedType . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production typeWithConstraint -> SEQUENCE sizeConstraint OF namedType

State 491:
## Known stack suffix:
## SEQUENCE constraint_x
## LR(1) items:
typeWithConstraint -> SEQUENCE constraint_x . OF type_x [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
typeWithConstraint -> SEQUENCE constraint_x . OF namedType [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
-- On OF shift to state 492
## Reductions:

State 492:
## Known stack suffix:
## SEQUENCE constraint_x OF
## LR(1) items:
typeWithConstraint -> SEQUENCE constraint_x OF . type_x [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
typeWithConstraint -> SEQUENCE constraint_x OF . namedType [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
-- On VisibleString shift to state 66
-- On VideotexString shift to state 67
-- On Upper shift to state 113
-- On UniversalString shift to state 72
-- On UTF8String shift to state 73
-- On UTCTime shift to state 74
-- On TeletexString shift to state 75
-- On TYPE_IDENTIFIER shift to state 76
-- On T61String shift to state 78
-- On SET shift to state 79
-- On SEQUENCE shift to state 111
-- On RELATIVE_OID shift to state 116
-- On REAL shift to state 117
-- On PrintableString shift to state 118
-- On ObjectDescriptor shift to state 119
-- On OCTET shift to state 120
-- On OBJECT shift to state 122
-- On NumericString shift to state 124
-- On NULL shift to state 125
-- On Lower shift to state 126
-- On LeftBracket shift to state 129
-- On ISO646String shift to state 140
-- On INTEGER shift to state 141
-- On INSTANCE shift to state 157
-- On IA5String shift to state 166
-- On GraphicString shift to state 167
-- On GeneralizedTime shift to state 168
-- On GeneralString shift to state 169
-- On EXTERNAL shift to state 170
-- On ENUMERATED shift to state 171
-- On EMBEDDED shift to state 179
-- On CHOICE shift to state 181
-- On CHARACTER shift to state 184
-- On BOOLEAN shift to state 186
-- On BMPString shift to state 187
-- On BIT shift to state 188
-- On ABSTRACT_SYNTAX shift to state 162
-- On valueSetFromObjects shift to state 202
-- On usefulType shift to state 203
-- On usefulObjectClassReference shift to state 163
-- On unrestrictedCharacterStringType shift to state 204
-- On type_x shift to state 493
-- On typeWithConstraint shift to state 207
-- On typeFromObject shift to state 208
-- On taggedType shift to state 209
-- On tag shift to state 210
-- On simpleDefinedType shift to state 213
-- On setType shift to state 215
-- On setOfType shift to state 216
-- On sequenceType shift to state 217
-- On sequenceOfType shift to state 218
-- On selectionType shift to state 219
-- On restrictedCharacterStringType shift to state 220
-- On relativeOIDType shift to state 221
-- On referencedType shift to state 222
-- On referencedObjects shift to state 223
-- On realType shift to state 232
-- On parameterizedValueSetType shift to state 233
-- On parameterizedType shift to state 234
-- On parameterizedObjectSet shift to state 235
-- On parameterizedObject shift to state 236
-- On octetStringType shift to state 237
-- On objectIdentifierType shift to state 238
-- On objectClassFieldType shift to state 239
-- On nullType shift to state 240
-- On namedType shift to state 494
-- On integerType shift to state 241
-- On instanceOfType shift to state 242
-- On externalTypeReference shift to state 243
-- On externalType shift to state 244
-- On externalObjectSetReference shift to state 245
-- On externalObjectReference shift to state 246
-- On externalObjectClassReference shift to state 164
-- On enumeratedType shift to state 247
-- On embeddedPDVType shift to state 248
-- On definedType shift to state 249
-- On definedObjectSet shift to state 250
-- On definedObjectClass shift to state 252
-- On definedObject shift to state 255
-- On constrainedType shift to state 257
-- On choiceType shift to state 258
-- On characterStringType shift to state 259
-- On builtinType shift to state 260
-- On booleanType shift to state 261
-- On bitStringType shift to state 262
## Reductions:

State 493:
## Known stack suffix:
## SEQUENCE constraint_x OF type_x
## LR(1) items:
constrainedType -> type_x . constraint_x [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
typeWithConstraint -> SEQUENCE constraint_x OF type_x . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
-- On LeftParen shift to state 81
-- On constraint_x shift to state 206
## Reductions:
-- On Upper reduce production typeWithConstraint -> SEQUENCE constraint_x OF type_x
-- On UNIQUE reduce production typeWithConstraint -> SEQUENCE constraint_x OF type_x
-- On UNION reduce production typeWithConstraint -> SEQUENCE constraint_x OF type_x
-- On RightParen reduce production typeWithConstraint -> SEQUENCE constraint_x OF type_x
-- On RightDoubleBracket reduce production typeWithConstraint -> SEQUENCE constraint_x OF type_x
-- On RightBrace reduce production typeWithConstraint -> SEQUENCE constraint_x OF type_x
-- On OPTIONAL reduce production typeWithConstraint -> SEQUENCE constraint_x OF type_x
-- On Middle reduce production typeWithConstraint -> SEQUENCE constraint_x OF type_x
-- On Lower reduce production typeWithConstraint -> SEQUENCE constraint_x OF type_x
-- On INTERSECTION reduce production typeWithConstraint -> SEQUENCE constraint_x OF type_x
-- On EXCEPT reduce production typeWithConstraint -> SEQUENCE constraint_x OF type_x
-- On END reduce production typeWithConstraint -> SEQUENCE constraint_x OF type_x
-- On ENCODED reduce production typeWithConstraint -> SEQUENCE constraint_x OF type_x
-- On DEFAULT reduce production typeWithConstraint -> SEQUENCE constraint_x OF type_x
-- On Comma reduce production typeWithConstraint -> SEQUENCE constraint_x OF type_x
-- On Colon reduce production typeWithConstraint -> SEQUENCE constraint_x OF type_x
-- On Circumflex reduce production typeWithConstraint -> SEQUENCE constraint_x OF type_x
-- On Bang reduce production typeWithConstraint -> SEQUENCE constraint_x OF type_x
-- On Assignment reduce production typeWithConstraint -> SEQUENCE constraint_x OF type_x

State 494:
## Known stack suffix:
## SEQUENCE constraint_x OF namedType
## LR(1) items:
typeWithConstraint -> SEQUENCE constraint_x OF namedType . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production typeWithConstraint -> SEQUENCE constraint_x OF namedType

State 495:
## Known stack suffix:
## PATTERN
## LR(1) items:
patternConstraint -> PATTERN . value [ UNION RightParen RightBrace Middle INTERSECTION EXCEPT Comma Circumflex Bang ]
## Transitions:
-- On VisibleString shift to state 66
-- On VideotexString shift to state 67
-- On Upper shift to state 108
-- On UniversalString shift to state 72
-- On UTF8String shift to state 73
-- On UTCTime shift to state 74
-- On TeletexString shift to state 75
-- On TYPE_IDENTIFIER shift to state 76
-- On TRUE shift to state 77
-- On T61String shift to state 78
-- On SET shift to state 79
-- On SEQUENCE shift to state 111
-- On RealNumber shift to state 296
-- On RELATIVE_OID shift to state 116
-- On REAL shift to state 117
-- On PrintableString shift to state 118
-- On PLUS_INFINITY shift to state 297
-- On ObjectDescriptor shift to state 119
-- On OCTET shift to state 120
-- On OBJECT shift to state 122
-- On NumericString shift to state 124
-- On Number shift to state 145
-- On NULL shift to state 298
-- On MINUS_INFINITY shift to state 299
-- On Lower shift to state 300
-- On LeftBracket shift to state 129
-- On LeftBrace shift to state 302
-- On ISO646String shift to state 140
-- On INTEGER shift to state 141
-- On INSTANCE shift to state 157
-- On IA5String shift to state 166
-- On Hyphen shift to state 306
-- On Hstring shift to state 308
-- On GraphicString shift to state 167
-- On GeneralizedTime shift to state 168
-- On GeneralString shift to state 169
-- On FALSE shift to state 309
-- On EXTERNAL shift to state 170
-- On ENUMERATED shift to state 171
-- On EMBEDDED shift to state 179
-- On Cstring shift to state 310
-- On CONTAINING shift to state 311
-- On CHOICE shift to state 181
-- On CHARACTER shift to state 184
-- On Bstring shift to state 312
-- On BOOLEAN shift to state 186
-- On BMPString shift to state 187
-- On BIT shift to state 188
-- On ABSTRACT_SYNTAX shift to state 162
-- On valueSetFromObjects shift to state 202
-- On valueFromObject shift to state 313
-- On value shift to state 496
-- On usefulType shift to state 203
-- On usefulObjectClassReference shift to state 163
-- On unrestrictedCharacterStringValue shift to state 315
-- On unrestrictedCharacterStringType shift to state 204
-- On type_x shift to state 316
-- On typeWithConstraint shift to state 207
-- On typeFromObject shift to state 208
-- On tuple shift to state 319
-- On taggedType shift to state 209
-- On tag shift to state 210
-- On specialRealValue shift to state 320
-- On simpleDefinedValue shift to state 64
-- On simpleDefinedType shift to state 213
-- On signedNumber shift to state 321
-- On setValue shift to state 322
-- On setType shift to state 215
-- On setOfValue shift to state 323
-- On setOfType shift to state 216
-- On sequenceValue shift to state 324
-- On sequenceType shift to state 217
-- On sequenceOfValue shift to state 325
-- On sequenceOfType shift to state 218
-- On selectionType shift to state 219
-- On restrictedCharacterStringValue shift to state 326
-- On restrictedCharacterStringType shift to state 220
-- On relativeOIDValue shift to state 327
-- On relativeOIDType shift to state 221
-- On referencedValue shift to state 328
-- On referencedType shift to state 222
-- On referencedObjects shift to state 329
-- On realValue shift to state 332
-- On realType shift to state 232
-- On quadruple shift to state 333
-- On parameterizedValueSetType shift to state 233
-- On parameterizedValue shift to state 135
-- On parameterizedType shift to state 234
-- On parameterizedObjectSet shift to state 235
-- On parameterizedObject shift to state 236
-- On openTypeFieldVal shift to state 334
-- On octetStringValue shift to state 335
-- On octetStringType shift to state 237
-- On objectIdentifierValue shift to state 336
-- On objectIdentifierType shift to state 238
-- On objectClassFieldValue shift to state 337
-- On objectClassFieldType shift to state 239
-- On numericRealValue shift to state 338
-- On nullValue shift to state 339
-- On nullType shift to state 240
-- On integerValue shift to state 340
-- On integerType shift to state 241
-- On instanceOfType shift to state 242
-- On fixedTypeFieldVal shift to state 341
-- On externalValueReference shift to state 136
-- On externalValue shift to state 342
-- On externalTypeReference shift to state 243
-- On externalType shift to state 244
-- On externalObjectSetReference shift to state 245
-- On externalObjectReference shift to state 246
-- On externalObjectClassReference shift to state 164
-- On enumeratedValue shift to state 343
-- On enumeratedType shift to state 247
-- On embeddedPDVValue shift to state 344
-- On embeddedPDVType shift to state 248
-- On definedValue shift to state 345
-- On definedType shift to state 249
-- On definedObjectSet shift to state 250
-- On definedObjectClass shift to state 252
-- On definedObject shift to state 255
-- On constrainedType shift to state 257
-- On choiceValue shift to state 346
-- On choiceType shift to state 258
-- On characterStringValue shift to state 347
-- On characterStringType shift to state 259
-- On characterStringList shift to state 348
-- On builtinValue shift to state 349
-- On builtinType shift to state 260
-- On booleanValue shift to state 350
-- On booleanType shift to state 261
-- On bitStringValue shift to state 351
-- On bitStringType shift to state 262
## Reductions:

State 496:
## Known stack suffix:
## PATTERN value
## LR(1) items:
patternConstraint -> PATTERN value . [ UNION RightParen RightBrace Middle INTERSECTION EXCEPT Comma Circumflex Bang ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production patternConstraint -> PATTERN value

State 497:
## Known stack suffix:
## MIN
## LR(1) items:
lowerEndValue -> MIN . [ LessThan DoubleDot ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production lowerEndValue -> MIN

State 498:
## Known stack suffix:
## LeftParen
## LR(1) items:
elements -> LeftParen . elementSetSpec RightParen [ UNION RightParen RightBrace Middle INTERSECTION EXCEPT Comma Circumflex Bang ]
## Transitions:
-- On WITH shift to state 82
-- On VisibleString shift to state 66
-- On VideotexString shift to state 67
-- On Upper shift to state 108
-- On UniversalString shift to state 72
-- On UTF8String shift to state 73
-- On UTCTime shift to state 74
-- On TeletexString shift to state 75
-- On TYPE_IDENTIFIER shift to state 76
-- On TRUE shift to state 77
-- On T61String shift to state 78
-- On SIZE shift to state 80
-- On SET shift to state 79
-- On SEQUENCE shift to state 111
-- On RealNumber shift to state 296
-- On RELATIVE_OID shift to state 116
-- On REAL shift to state 117
-- On PrintableString shift to state 118
-- On PLUS_INFINITY shift to state 297
-- On PATTERN shift to state 495
-- On ObjectDescriptor shift to state 119
-- On OCTET shift to state 120
-- On OBJECT shift to state 122
-- On NumericString shift to state 124
-- On Number shift to state 145
-- On NULL shift to state 298
-- On MINUS_INFINITY shift to state 299
-- On MIN shift to state 497
-- On Lower shift to state 300
-- On LeftParen shift to state 498
-- On LeftBracket shift to state 129
-- On LeftBrace shift to state 499
-- On ISO646String shift to state 140
-- On INTEGER shift to state 141
-- On INSTANCE shift to state 157
-- On INCLUDES shift to state 503
-- On IA5String shift to state 166
-- On Hyphen shift to state 306
-- On Hstring shift to state 308
-- On GraphicString shift to state 167
-- On GeneralizedTime shift to state 168
-- On GeneralString shift to state 169
-- On FROM shift to state 504
-- On FALSE shift to state 309
-- On EXTERNAL shift to state 170
-- On ENUMERATED shift to state 171
-- On EMBEDDED shift to state 179
-- On DefinedSyntax shift to state 508
-- On Cstring shift to state 310
-- On CONTAINING shift to state 311
-- On CHOICE shift to state 181
-- On CHARACTER shift to state 184
-- On Bstring shift to state 312
-- On BOOLEAN shift to state 186
-- On BMPString shift to state 187
-- On BIT shift to state 188
-- On ALL shift to state 509
-- On ABSTRACT_SYNTAX shift to state 162
-- On valueSetFromObjects shift to state 202
-- On valueRange shift to state 511
-- On valueFromObject shift to state 313
-- On value shift to state 512
-- On usefulType shift to state 203
-- On usefulObjectClassReference shift to state 163
-- On unrestrictedCharacterStringValue shift to state 315
-- On unrestrictedCharacterStringType shift to state 204
-- On unions shift to state 549
-- On uElems shift to state 550
-- On type_x shift to state 513
-- On typeWithConstraint shift to state 207
-- On typeFromObject shift to state 208
-- On typeConstraint shift to state 514
-- On tuple shift to state 319
-- On taggedType shift to state 209
-- On tag shift to state 210
-- On subtypeElements shift to state 515
-- On specialRealValue shift to state 320
-- On sizeConstraint shift to state 516
-- On singleValue shift to state 517
-- On simpleDefinedValue shift to state 64
-- On simpleDefinedType shift to state 213
-- On signedNumber shift to state 321
-- On setValue shift to state 322
-- On setType shift to state 215
-- On setOfValue shift to state 323
-- On setOfType shift to state 216
-- On sequenceValue shift to state 324
-- On sequenceType shift to state 217
-- On sequenceOfValue shift to state 325
-- On sequenceOfType shift to state 218
-- On selectionType shift to state 219
-- On restrictedCharacterStringValue shift to state 326
-- On restrictedCharacterStringType shift to state 220
-- On relativeOIDValue shift to state 327
-- On relativeOIDType shift to state 221
-- On referencedValue shift to state 328
-- On referencedType shift to state 222
-- On referencedObjects shift to state 518
-- On realValue shift to state 332
-- On realType shift to state 232
-- On quadruple shift to state 333
-- On permittedAlphabet shift to state 521
-- On patternConstraint shift to state 522
-- On parameterizedValueSetType shift to state 233
-- On parameterizedValue shift to state 135
-- On parameterizedType shift to state 234
-- On parameterizedObjectSet shift to state 523
-- On parameterizedObject shift to state 524
-- On openTypeFieldVal shift to state 334
-- On octetStringValue shift to state 335
-- On octetStringType shift to state 237
-- On object_x shift to state 525
-- On objectSetFromObjects shift to state 526
-- On objectSetElements shift to state 527
-- On objectIdentifierValue shift to state 336
-- On objectIdentifierType shift to state 238
-- On objectFromObject shift to state 528
-- On objectDefn shift to state 529
-- On objectClassFieldValue shift to state 337
-- On objectClassFieldType shift to state 239
-- On numericRealValue shift to state 338
-- On nullValue shift to state 339
-- On nullType shift to state 240
-- On lowerEndValue shift to state 530
-- On lowerEndPoint shift to state 532
-- On intersections shift to state 564
-- On intersectionElements shift to state 555
-- On integerValue shift to state 340
-- On integerType shift to state 241
-- On instanceOfType shift to state 242
-- On innerTypeConstraints shift to state 540
-- On includes shift to state 541
-- On iElems shift to state 556
-- On fixedTypeFieldVal shift to state 341
-- On externalValueReference shift to state 136
-- On externalValue shift to state 342
-- On externalTypeReference shift to state 243
-- On externalType shift to state 244
-- On externalObjectSetReference shift to state 245
-- On externalObjectReference shift to state 246
-- On externalObjectClassReference shift to state 164
-- On enumeratedValue shift to state 343
-- On enumeratedType shift to state 247
-- On embeddedPDVValue shift to state 344
-- On embeddedPDVType shift to state 248
-- On elems shift to state 561
-- On elements shift to state 563
-- On elementSetSpec shift to state 592
-- On definedValue shift to state 345
-- On definedType shift to state 249
-- On definedObjectSet shift to state 544
-- On definedObjectClass shift to state 252
-- On definedObject shift to state 545
-- On defaultSyntax shift to state 546
-- On containedSubtype shift to state 547
-- On constrainedType shift to state 257
-- On choiceValue shift to state 346
-- On choiceType shift to state 258
-- On characterStringValue shift to state 347
-- On characterStringType shift to state 259
-- On characterStringList shift to state 348
-- On builtinValue shift to state 349
-- On builtinType shift to state 260
-- On booleanValue shift to state 350
-- On booleanType shift to state 261
-- On bitStringValue shift to state 351
-- On bitStringType shift to state 262
## Reductions:

State 499:
## Known stack suffix:
## LeftBrace
## LR(1) items:
bitStringValue -> LeftBrace . identifierList RightBrace [ UNION RightParen RightBrace Middle LessThan INTERSECTION EXCEPT DoubleDot Comma Circumflex Bang ]
bitStringValue -> LeftBrace . RightBrace [ UNION RightParen RightBrace Middle LessThan INTERSECTION EXCEPT DoubleDot Comma Circumflex Bang ]
characterStringList -> LeftBrace . charSyms RightBrace [ UNION RightParen RightBrace Middle LessThan INTERSECTION EXCEPT DoubleDot Comma Circumflex Bang ]
defaultSyntax -> LeftBrace . loption(separated_nonempty_list(Comma,fieldSetting)) RightBrace [ UNION RightParen RightBrace Middle INTERSECTION EXCEPT Comma Circumflex Bang ]
objectIdentifierValue -> LeftBrace . objIdComponentsList RightBrace [ UNION RightParen RightBrace Middle LessThan INTERSECTION EXCEPT DoubleDot Comma Circumflex Bang ]
objectIdentifierValue -> LeftBrace . definedValue objIdComponentsList RightBrace [ UNION RightParen RightBrace Middle LessThan INTERSECTION EXCEPT DoubleDot Comma Circumflex Bang ]
quadruple -> LeftBrace . group Comma plane Comma row Comma cell RightBrace [ UNION RightParen RightBrace Middle LessThan INTERSECTION EXCEPT DoubleDot Comma Circumflex Bang ]
relativeOIDValue -> LeftBrace . relativeOIDComponentsList RightBrace [ UNION RightParen RightBrace Middle LessThan INTERSECTION EXCEPT DoubleDot Comma Circumflex Bang ]
sequenceOfValue -> LeftBrace . valueList RightBrace [ UNION RightParen RightBrace Middle LessThan INTERSECTION EXCEPT DoubleDot Comma Circumflex Bang ]
sequenceOfValue -> LeftBrace . namedValueList RightBrace [ UNION RightParen RightBrace Middle LessThan INTERSECTION EXCEPT DoubleDot Comma Circumflex Bang ]
sequenceOfValue -> LeftBrace . RightBrace [ UNION RightParen RightBrace Middle LessThan INTERSECTION EXCEPT DoubleDot Comma Circumflex Bang ]
sequenceValue -> LeftBrace . componentValueList RightBrace [ UNION RightParen RightBrace Middle LessThan INTERSECTION EXCEPT DoubleDot Comma Circumflex Bang ]
sequenceValue -> LeftBrace . RightBrace [ UNION RightParen RightBrace Middle LessThan INTERSECTION EXCEPT DoubleDot Comma Circumflex Bang ]
setOfValue -> LeftBrace . valueList RightBrace [ UNION RightParen RightBrace Middle LessThan INTERSECTION EXCEPT DoubleDot Comma Circumflex Bang ]
setOfValue -> LeftBrace . namedValueList RightBrace [ UNION RightParen RightBrace Middle LessThan INTERSECTION EXCEPT DoubleDot Comma Circumflex Bang ]
setOfValue -> LeftBrace . RightBrace [ UNION RightParen RightBrace Middle LessThan INTERSECTION EXCEPT DoubleDot Comma Circumflex Bang ]
setValue -> LeftBrace . componentValueList RightBrace [ UNION RightParen RightBrace Middle LessThan INTERSECTION EXCEPT DoubleDot Comma Circumflex Bang ]
setValue -> LeftBrace . RightBrace [ UNION RightParen RightBrace Middle LessThan INTERSECTION EXCEPT DoubleDot Comma Circumflex Bang ]
tuple -> LeftBrace . tableColumn Comma tableRow RightBrace [ UNION RightParen RightBrace Middle LessThan INTERSECTION EXCEPT DoubleDot Comma Circumflex Bang ]
## Transitions:
-- On VisibleString shift to state 66
-- On VideotexString shift to state 67
-- On UpperField shift to state 225
-- On Upper shift to state 108
-- On UniversalString shift to state 72
-- On UTF8String shift to state 73
-- On UTCTime shift to state 74
-- On TeletexString shift to state 75
-- On TYPE_IDENTIFIER shift to state 76
-- On TRUE shift to state 77
-- On T61String shift to state 78
-- On SET shift to state 79
-- On SEQUENCE shift to state 111
-- On RightBrace shift to state 303
-- On RealNumber shift to state 296
-- On RELATIVE_OID shift to state 116
-- On REAL shift to state 117
-- On PrintableString shift to state 118
-- On PLUS_INFINITY shift to state 297
-- On ObjectDescriptor shift to state 119
-- On OCTET shift to state 120
-- On OBJECT shift to state 122
-- On NumericString shift to state 124
-- On Number shift to state 304
-- On NULL shift to state 298
-- On MINUS_INFINITY shift to state 299
-- On LowerField shift to state 226
-- On Lower shift to state 305
-- On LeftBracket shift to state 129
-- On LeftBrace shift to state 302
-- On ISO646String shift to state 140
-- On INTEGER shift to state 141
-- On INSTANCE shift to state 157
-- On IA5String shift to state 166
-- On Hyphen shift to state 306
-- On Hstring shift to state 308
-- On GraphicString shift to state 167
-- On GeneralizedTime shift to state 168
-- On GeneralString shift to state 169
-- On FALSE shift to state 309
-- On EXTERNAL shift to state 170
-- On ENUMERATED shift to state 171
-- On EMBEDDED shift to state 179
-- On Cstring shift to state 353
-- On CONTAINING shift to state 311
-- On CHOICE shift to state 181
-- On CHARACTER shift to state 184
-- On Bstring shift to state 312
-- On BOOLEAN shift to state 186
-- On BMPString shift to state 187
-- On BIT shift to state 188
-- On ABSTRACT_SYNTAX shift to state 162
-- On valueSetFromObjects shift to state 202
-- On valueList shift to state 354
-- On valueFromObject shift to state 313
-- On value shift to state 358
-- On usefulType shift to state 203
-- On usefulObjectClassReference shift to state 163
-- On unrestrictedCharacterStringValue shift to state 315
-- On unrestrictedCharacterStringType shift to state 204
-- On type_x shift to state 316
-- On typeWithConstraint shift to state 207
-- On typeFromObject shift to state 208
-- On tuple shift to state 359
-- On taggedType shift to state 209
-- On tag shift to state 210
-- On tableColumn shift to state 360
-- On specialRealValue shift to state 320
-- On simpleDefinedValue shift to state 64
-- On simpleDefinedType shift to state 213
-- On signedNumber shift to state 321
-- On setValue shift to state 322
-- On setType shift to state 215
-- On setOfValue shift to state 323
-- On setOfType shift to state 216
-- On sequenceValue shift to state 324
-- On sequenceType shift to state 217
-- On sequenceOfValue shift to state 325
-- On sequenceOfType shift to state 218
-- On separated_nonempty_list(Comma,fieldSetting) shift to state 500
-- On selectionType shift to state 219
-- On restrictedCharacterStringValue shift to state 326
-- On restrictedCharacterStringType shift to state 220
-- On relativeOIDValue shift to state 327
-- On relativeOIDType shift to state 221
-- On relativeOIDComponentsList shift to state 365
-- On relativeOIDComponents shift to state 367
-- On referencedValue shift to state 328
-- On referencedType shift to state 222
-- On referencedObjects shift to state 329
-- On realValue shift to state 332
-- On realType shift to state 232
-- On quadruple shift to state 373
-- On primitiveFieldName shift to state 501
-- On parameterizedValueSetType shift to state 233
-- On parameterizedValue shift to state 135
-- On parameterizedType shift to state 234
-- On parameterizedObjectSet shift to state 235
-- On parameterizedObject shift to state 236
-- On openTypeFieldVal shift to state 334
-- On octetStringValue shift to state 335
-- On octetStringType shift to state 237
-- On objectIdentifierValue shift to state 336
-- On objectIdentifierType shift to state 238
-- On objectClassFieldValue shift to state 337
-- On objectClassFieldType shift to state 239
-- On objIdComponentsList shift to state 374
-- On objIdComponents shift to state 376
-- On numericRealValue shift to state 338
-- On numberForm shift to state 382
-- On nullValue shift to state 339
-- On nullType shift to state 240
-- On namedValueList shift to state 383
-- On namedValue shift to state 388
-- On nameForm shift to state 379
-- On nameAndNumberForm shift to state 389
-- On loption(separated_nonempty_list(Comma,fieldSetting)) shift to state 575
-- On integerValue shift to state 340
-- On integerType shift to state 241
-- On instanceOfType shift to state 242
-- On identifierList shift to state 390
-- On group shift to state 394
-- On fixedTypeFieldVal shift to state 341
-- On fieldSetting shift to state 577
-- On externalValueReference shift to state 136
-- On externalValue shift to state 342
-- On externalTypeReference shift to state 243
-- On externalType shift to state 244
-- On externalObjectSetReference shift to state 245
-- On externalObjectReference shift to state 246
-- On externalObjectClassReference shift to state 164
-- On enumeratedValue shift to state 343
-- On enumeratedType shift to state 247
-- On embeddedPDVValue shift to state 344
-- On embeddedPDVType shift to state 248
-- On definedValue shift to state 405
-- On definedType shift to state 249
-- On definedObjectSet shift to state 250
-- On definedObjectClass shift to state 252
-- On definedObject shift to state 255
-- On constrainedType shift to state 257
-- On componentValueList shift to state 408
-- On choiceValue shift to state 346
-- On choiceType shift to state 258
-- On charsDefn shift to state 412
-- On characterStringValue shift to state 347
-- On characterStringType shift to state 259
-- On characterStringList shift to state 348
-- On charSyms shift to state 413
-- On builtinValue shift to state 349
-- On builtinType shift to state 260
-- On booleanValue shift to state 350
-- On booleanType shift to state 261
-- On bitStringValue shift to state 351
-- On bitStringType shift to state 262
## Reductions:

State 500:
## Known stack suffix:
## separated_nonempty_list(Comma,fieldSetting)
## LR(1) items:
loption(separated_nonempty_list(Comma,fieldSetting)) -> separated_nonempty_list(Comma,fieldSetting) . [ RightBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production loption(separated_nonempty_list(Comma,fieldSetting)) -> separated_nonempty_list(Comma,fieldSetting)

State 501:
## Known stack suffix:
## primitiveFieldName
## LR(1) items:
fieldSetting -> primitiveFieldName . setting [ RightBrace Comma ]
## Transitions:
-- On VisibleString shift to state 66
-- On VideotexString shift to state 67
-- On Upper shift to state 108
-- On UniversalString shift to state 72
-- On UTF8String shift to state 73
-- On UTCTime shift to state 74
-- On TeletexString shift to state 75
-- On TYPE_IDENTIFIER shift to state 76
-- On TRUE shift to state 77
-- On T61String shift to state 78
-- On SET shift to state 79
-- On SEQUENCE shift to state 111
-- On RealNumber shift to state 296
-- On RELATIVE_OID shift to state 116
-- On REAL shift to state 117
-- On PrintableString shift to state 118
-- On PLUS_INFINITY shift to state 297
-- On ObjectDescriptor shift to state 119
-- On OCTET shift to state 120
-- On OBJECT shift to state 122
-- On NumericString shift to state 124
-- On Number shift to state 145
-- On NULL shift to state 298
-- On MINUS_INFINITY shift to state 299
-- On Lower shift to state 300
-- On LeftBracket shift to state 129
-- On LeftBrace shift to state 502
-- On ISO646String shift to state 140
-- On INTEGER shift to state 141
-- On INSTANCE shift to state 157
-- On IA5String shift to state 166
-- On Hyphen shift to state 306
-- On Hstring shift to state 308
-- On GraphicString shift to state 167
-- On GeneralizedTime shift to state 168
-- On GeneralString shift to state 169
-- On FALSE shift to state 309
-- On EXTERNAL shift to state 170
-- On ENUMERATED shift to state 171
-- On EMBEDDED shift to state 179
-- On DefinedSyntax shift to state 508
-- On Cstring shift to state 310
-- On CONTAINING shift to state 311
-- On CHOICE shift to state 181
-- On CHARACTER shift to state 184
-- On Bstring shift to state 312
-- On BOOLEAN shift to state 186
-- On BMPString shift to state 187
-- On BIT shift to state 188
-- On ABSTRACT_SYNTAX shift to state 162
-- On valueSetFromObjects shift to state 202
-- On valueSet shift to state 583
-- On valueFromObject shift to state 313
-- On value shift to state 584
-- On usefulType shift to state 203
-- On usefulObjectClassReference shift to state 163
-- On unrestrictedCharacterStringValue shift to state 315
-- On unrestrictedCharacterStringType shift to state 204
-- On type_x shift to state 585
-- On typeWithConstraint shift to state 207
-- On typeFromObject shift to state 208
-- On tuple shift to state 319
-- On taggedType shift to state 209
-- On tag shift to state 210
-- On specialRealValue shift to state 320
-- On simpleDefinedValue shift to state 64
-- On simpleDefinedType shift to state 213
-- On signedNumber shift to state 321
-- On setting shift to state 586
-- On setValue shift to state 322
-- On setType shift to state 215
-- On setOfValue shift to state 323
-- On setOfType shift to state 216
-- On sequenceValue shift to state 324
-- On sequenceType shift to state 217
-- On sequenceOfValue shift to state 325
-- On sequenceOfType shift to state 218
-- On selectionType shift to state 219
-- On restrictedCharacterStringValue shift to state 326
-- On restrictedCharacterStringType shift to state 220
-- On relativeOIDValue shift to state 327
-- On relativeOIDType shift to state 221
-- On referencedValue shift to state 328
-- On referencedType shift to state 222
-- On referencedObjects shift to state 587
-- On realValue shift to state 332
-- On realType shift to state 232
-- On quadruple shift to state 333
-- On parameterizedValueSetType shift to state 233
-- On parameterizedValue shift to state 135
-- On parameterizedType shift to state 234
-- On parameterizedObjectSet shift to state 235
-- On parameterizedObject shift to state 524
-- On openTypeFieldVal shift to state 334
-- On octetStringValue shift to state 335
-- On octetStringType shift to state 237
-- On object_x shift to state 590
-- On objectSet shift to state 591
-- On objectIdentifierValue shift to state 336
-- On objectIdentifierType shift to state 238
-- On objectFromObject shift to state 528
-- On objectDefn shift to state 529
-- On objectClassFieldValue shift to state 337
-- On objectClassFieldType shift to state 239
-- On numericRealValue shift to state 338
-- On nullValue shift to state 339
-- On nullType shift to state 240
-- On integerValue shift to state 340
-- On integerType shift to state 241
-- On instanceOfType shift to state 242
-- On fixedTypeFieldVal shift to state 341
-- On externalValueReference shift to state 136
-- On externalValue shift to state 342
-- On externalTypeReference shift to state 243
-- On externalType shift to state 244
-- On externalObjectSetReference shift to state 245
-- On externalObjectReference shift to state 246
-- On externalObjectClassReference shift to state 164
-- On enumeratedValue shift to state 343
-- On enumeratedType shift to state 247
-- On embeddedPDVValue shift to state 344
-- On embeddedPDVType shift to state 248
-- On definedValue shift to state 345
-- On definedType shift to state 249
-- On definedObjectSet shift to state 250
-- On definedObjectClass shift to state 252
-- On definedObject shift to state 545
-- On defaultSyntax shift to state 546
-- On constrainedType shift to state 257
-- On choiceValue shift to state 346
-- On choiceType shift to state 258
-- On characterStringValue shift to state 347
-- On characterStringType shift to state 259
-- On characterStringList shift to state 348
-- On builtinValue shift to state 349
-- On builtinType shift to state 260
-- On booleanValue shift to state 350
-- On booleanType shift to state 261
-- On bitStringValue shift to state 351
-- On bitStringType shift to state 262
## Reductions:

State 502:
## Known stack suffix:
## LeftBrace
## LR(1) items:
bitStringValue -> LeftBrace . identifierList RightBrace [ RightBrace Comma ]
bitStringValue -> LeftBrace . RightBrace [ RightBrace Comma ]
characterStringList -> LeftBrace . charSyms RightBrace [ RightBrace Comma ]
defaultSyntax -> LeftBrace . loption(separated_nonempty_list(Comma,fieldSetting)) RightBrace [ RightBrace Comma ]
objectIdentifierValue -> LeftBrace . objIdComponentsList RightBrace [ RightBrace Comma ]
objectIdentifierValue -> LeftBrace . definedValue objIdComponentsList RightBrace [ RightBrace Comma ]
objectSet -> LeftBrace . objectSetSpec RightBrace [ RightBrace Comma ]
quadruple -> LeftBrace . group Comma plane Comma row Comma cell RightBrace [ RightBrace Comma ]
relativeOIDValue -> LeftBrace . relativeOIDComponentsList RightBrace [ RightBrace Comma ]
sequenceOfValue -> LeftBrace . valueList RightBrace [ RightBrace Comma ]
sequenceOfValue -> LeftBrace . namedValueList RightBrace [ RightBrace Comma ]
sequenceOfValue -> LeftBrace . RightBrace [ RightBrace Comma ]
sequenceValue -> LeftBrace . componentValueList RightBrace [ RightBrace Comma ]
sequenceValue -> LeftBrace . RightBrace [ RightBrace Comma ]
setOfValue -> LeftBrace . valueList RightBrace [ RightBrace Comma ]
setOfValue -> LeftBrace . namedValueList RightBrace [ RightBrace Comma ]
setOfValue -> LeftBrace . RightBrace [ RightBrace Comma ]
setValue -> LeftBrace . componentValueList RightBrace [ RightBrace Comma ]
setValue -> LeftBrace . RightBrace [ RightBrace Comma ]
tuple -> LeftBrace . tableColumn Comma tableRow RightBrace [ RightBrace Comma ]
valueSet -> LeftBrace . elementSetSpecs RightBrace [ RightBrace Comma ]
## Transitions:
-- On WITH shift to state 82
-- On VisibleString shift to state 66
-- On VideotexString shift to state 67
-- On UpperField shift to state 225
-- On Upper shift to state 108
-- On UniversalString shift to state 72
-- On UTF8String shift to state 73
-- On UTCTime shift to state 74
-- On TeletexString shift to state 75
-- On TYPE_IDENTIFIER shift to state 76
-- On TRUE shift to state 77
-- On T61String shift to state 78
-- On SIZE shift to state 80
-- On SET shift to state 79
-- On SEQUENCE shift to state 111
-- On RightBrace shift to state 303
-- On RealNumber shift to state 296
-- On RELATIVE_OID shift to state 116
-- On REAL shift to state 117
-- On PrintableString shift to state 118
-- On PLUS_INFINITY shift to state 297
-- On PATTERN shift to state 495
-- On ObjectDescriptor shift to state 119
-- On OCTET shift to state 120
-- On OBJECT shift to state 122
-- On NumericString shift to state 124
-- On Number shift to state 304
-- On NULL shift to state 298
-- On MINUS_INFINITY shift to state 299
-- On MIN shift to state 497
-- On LowerField shift to state 226
-- On Lower shift to state 305
-- On LeftParen shift to state 498
-- On LeftBracket shift to state 129
-- On LeftBrace shift to state 499
-- On ISO646String shift to state 140
-- On INTEGER shift to state 141
-- On INSTANCE shift to state 157
-- On INCLUDES shift to state 503
-- On IA5String shift to state 166
-- On Hyphen shift to state 306
-- On Hstring shift to state 308
-- On GraphicString shift to state 167
-- On GeneralizedTime shift to state 168
-- On GeneralString shift to state 169
-- On FROM shift to state 504
-- On FALSE shift to state 309
-- On Ellipsis shift to state 506
-- On EXTERNAL shift to state 170
-- On ENUMERATED shift to state 171
-- On EMBEDDED shift to state 179
-- On DefinedSyntax shift to state 508
-- On Cstring shift to state 353
-- On CONTAINING shift to state 311
-- On CHOICE shift to state 181
-- On CHARACTER shift to state 184
-- On Bstring shift to state 312
-- On BOOLEAN shift to state 186
-- On BMPString shift to state 187
-- On BIT shift to state 188
-- On ALL shift to state 509
-- On ABSTRACT_SYNTAX shift to state 162
-- On valueSetFromObjects shift to state 202
-- On valueRange shift to state 511
-- On valueList shift to state 354
-- On valueFromObject shift to state 313
-- On value shift to state 567
-- On usefulType shift to state 203
-- On usefulObjectClassReference shift to state 163
-- On unrestrictedCharacterStringValue shift to state 315
-- On unrestrictedCharacterStringType shift to state 204
-- On unions shift to state 549
-- On uElems shift to state 550
-- On type_x shift to state 513
-- On typeWithConstraint shift to state 207
-- On typeFromObject shift to state 208
-- On typeConstraint shift to state 514
-- On tuple shift to state 359
-- On taggedType shift to state 209
-- On tag shift to state 210
-- On tableColumn shift to state 360
-- On subtypeElements shift to state 515
-- On specialRealValue shift to state 320
-- On sizeConstraint shift to state 516
-- On singleValue shift to state 517
-- On simpleDefinedValue shift to state 64
-- On simpleDefinedType shift to state 213
-- On signedNumber shift to state 321
-- On setValue shift to state 322
-- On setType shift to state 215
-- On setOfValue shift to state 323
-- On setOfType shift to state 216
-- On sequenceValue shift to state 324
-- On sequenceType shift to state 217
-- On sequenceOfValue shift to state 325
-- On sequenceOfType shift to state 218
-- On separated_nonempty_list(Comma,fieldSetting) shift to state 500
-- On selectionType shift to state 219
-- On rootElementSetSpec shift to state 568
-- On restrictedCharacterStringValue shift to state 326
-- On restrictedCharacterStringType shift to state 220
-- On relativeOIDValue shift to state 327
-- On relativeOIDType shift to state 221
-- On relativeOIDComponentsList shift to state 365
-- On relativeOIDComponents shift to state 367
-- On referencedValue shift to state 328
-- On referencedType shift to state 222
-- On referencedObjects shift to state 518
-- On realValue shift to state 332
-- On realType shift to state 232
-- On quadruple shift to state 373
-- On primitiveFieldName shift to state 501
-- On permittedAlphabet shift to state 521
-- On patternConstraint shift to state 522
-- On parameterizedValueSetType shift to state 233
-- On parameterizedValue shift to state 135
-- On parameterizedType shift to state 234
-- On parameterizedObjectSet shift to state 523
-- On parameterizedObject shift to state 524
-- On openTypeFieldVal shift to state 334
-- On octetStringValue shift to state 335
-- On octetStringType shift to state 237
-- On object_x shift to state 525
-- On objectSetSpec shift to state 573
-- On objectSetFromObjects shift to state 526
-- On objectSetElements shift to state 527
-- On objectIdentifierValue shift to state 336
-- On objectIdentifierType shift to state 238
-- On objectFromObject shift to state 528
-- On objectDefn shift to state 529
-- On objectClassFieldValue shift to state 337
-- On objectClassFieldType shift to state 239
-- On objIdComponentsList shift to state 374
-- On objIdComponents shift to state 376
-- On numericRealValue shift to state 338
-- On numberForm shift to state 382
-- On nullValue shift to state 339
-- On nullType shift to state 240
-- On namedValueList shift to state 383
-- On namedValue shift to state 388
-- On nameForm shift to state 379
-- On nameAndNumberForm shift to state 389
-- On lowerEndValue shift to state 530
-- On lowerEndPoint shift to state 532
-- On loption(separated_nonempty_list(Comma,fieldSetting)) shift to state 575
-- On intersections shift to state 564
-- On intersectionElements shift to state 555
-- On integerValue shift to state 340
-- On integerType shift to state 241
-- On instanceOfType shift to state 242
-- On innerTypeConstraints shift to state 540
-- On includes shift to state 541
-- On identifierList shift to state 390
-- On iElems shift to state 556
-- On group shift to state 394
-- On fixedTypeFieldVal shift to state 341
-- On fieldSetting shift to state 577
-- On externalValueReference shift to state 136
-- On externalValue shift to state 342
-- On externalTypeReference shift to state 243
-- On externalType shift to state 244
-- On externalObjectSetReference shift to state 245
-- On externalObjectReference shift to state 246
-- On externalObjectClassReference shift to state 164
-- On enumeratedValue shift to state 343
-- On enumeratedType shift to state 247
-- On embeddedPDVValue shift to state 344
-- On embeddedPDVType shift to state 248
-- On elems shift to state 561
-- On elements shift to state 563
-- On elementSetSpecs shift to state 580
-- On elementSetSpec shift to state 582
-- On definedValue shift to state 405
-- On definedType shift to state 249
-- On definedObjectSet shift to state 544
-- On definedObjectClass shift to state 252
-- On definedObject shift to state 545
-- On defaultSyntax shift to state 546
-- On containedSubtype shift to state 547
-- On constrainedType shift to state 257
-- On componentValueList shift to state 408
-- On choiceValue shift to state 346
-- On choiceType shift to state 258
-- On charsDefn shift to state 412
-- On characterStringValue shift to state 347
-- On characterStringType shift to state 259
-- On characterStringList shift to state 348
-- On charSyms shift to state 413
-- On builtinValue shift to state 349
-- On builtinType shift to state 260
-- On booleanValue shift to state 350
-- On booleanType shift to state 261
-- On bitStringValue shift to state 351
-- On bitStringType shift to state 262
## Reductions:

State 503:
## Known stack suffix:
## INCLUDES
## LR(1) items:
includes -> INCLUDES . [ VisibleString VideotexString Upper UniversalString UTF8String UTCTime TeletexString TYPE_IDENTIFIER T61String SET SEQUENCE RELATIVE_OID REAL PrintableString ObjectDescriptor OCTET OBJECT NumericString NULL Lower LeftBracket ISO646String INTEGER INSTANCE IA5String GraphicString GeneralizedTime GeneralString EXTERNAL ENUMERATED EMBEDDED CHOICE CHARACTER BOOLEAN BMPString BIT ABSTRACT_SYNTAX ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production includes -> INCLUDES

State 504:
## Known stack suffix:
## FROM
## LR(1) items:
permittedAlphabet -> FROM . constraint_x [ UNION RightParen RightBrace Middle INTERSECTION EXCEPT Comma Circumflex Bang ]
## Transitions:
-- On LeftParen shift to state 81
-- On constraint_x shift to state 505
## Reductions:

State 505:
## Known stack suffix:
## FROM constraint_x
## LR(1) items:
permittedAlphabet -> FROM constraint_x . [ UNION RightParen RightBrace Middle INTERSECTION EXCEPT Comma Circumflex Bang ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production permittedAlphabet -> FROM constraint_x

State 506:
## Known stack suffix:
## Ellipsis
## LR(1) items:
objectSetSpec -> Ellipsis . [ RightBrace ]
objectSetSpec -> Ellipsis . Comma additionalElementSetSpec [ RightBrace ]
## Transitions:
-- On Comma shift to state 507
## Reductions:
-- On RightBrace reduce production objectSetSpec -> Ellipsis

State 507:
## Known stack suffix:
## Ellipsis Comma
## LR(1) items:
objectSetSpec -> Ellipsis Comma . additionalElementSetSpec [ RightBrace ]
## Transitions:
-- On WITH shift to state 82
-- On VisibleString shift to state 66
-- On VideotexString shift to state 67
-- On Upper shift to state 108
-- On UniversalString shift to state 72
-- On UTF8String shift to state 73
-- On UTCTime shift to state 74
-- On TeletexString shift to state 75
-- On TYPE_IDENTIFIER shift to state 76
-- On TRUE shift to state 77
-- On T61String shift to state 78
-- On SIZE shift to state 80
-- On SET shift to state 79
-- On SEQUENCE shift to state 111
-- On RealNumber shift to state 296
-- On RELATIVE_OID shift to state 116
-- On REAL shift to state 117
-- On PrintableString shift to state 118
-- On PLUS_INFINITY shift to state 297
-- On PATTERN shift to state 495
-- On ObjectDescriptor shift to state 119
-- On OCTET shift to state 120
-- On OBJECT shift to state 122
-- On NumericString shift to state 124
-- On Number shift to state 145
-- On NULL shift to state 298
-- On MINUS_INFINITY shift to state 299
-- On MIN shift to state 497
-- On Lower shift to state 300
-- On LeftParen shift to state 498
-- On LeftBracket shift to state 129
-- On LeftBrace shift to state 499
-- On ISO646String shift to state 140
-- On INTEGER shift to state 141
-- On INSTANCE shift to state 157
-- On INCLUDES shift to state 503
-- On IA5String shift to state 166
-- On Hyphen shift to state 306
-- On Hstring shift to state 308
-- On GraphicString shift to state 167
-- On GeneralizedTime shift to state 168
-- On GeneralString shift to state 169
-- On FROM shift to state 504
-- On FALSE shift to state 309
-- On EXTERNAL shift to state 170
-- On ENUMERATED shift to state 171
-- On EMBEDDED shift to state 179
-- On DefinedSyntax shift to state 508
-- On Cstring shift to state 310
-- On CONTAINING shift to state 311
-- On CHOICE shift to state 181
-- On CHARACTER shift to state 184
-- On Bstring shift to state 312
-- On BOOLEAN shift to state 186
-- On BMPString shift to state 187
-- On BIT shift to state 188
-- On ALL shift to state 509
-- On ABSTRACT_SYNTAX shift to state 162
-- On valueSetFromObjects shift to state 202
-- On valueRange shift to state 511
-- On valueFromObject shift to state 313
-- On value shift to state 512
-- On usefulType shift to state 203
-- On usefulObjectClassReference shift to state 163
-- On unrestrictedCharacterStringValue shift to state 315
-- On unrestrictedCharacterStringType shift to state 204
-- On unions shift to state 549
-- On uElems shift to state 550
-- On type_x shift to state 513
-- On typeWithConstraint shift to state 207
-- On typeFromObject shift to state 208
-- On typeConstraint shift to state 514
-- On tuple shift to state 319
-- On taggedType shift to state 209
-- On tag shift to state 210
-- On subtypeElements shift to state 515
-- On specialRealValue shift to state 320
-- On sizeConstraint shift to state 516
-- On singleValue shift to state 517
-- On simpleDefinedValue shift to state 64
-- On simpleDefinedType shift to state 213
-- On signedNumber shift to state 321
-- On setValue shift to state 322
-- On setType shift to state 215
-- On setOfValue shift to state 323
-- On setOfType shift to state 216
-- On sequenceValue shift to state 324
-- On sequenceType shift to state 217
-- On sequenceOfValue shift to state 325
-- On sequenceOfType shift to state 218
-- On selectionType shift to state 219
-- On restrictedCharacterStringValue shift to state 326
-- On restrictedCharacterStringType shift to state 220
-- On relativeOIDValue shift to state 327
-- On relativeOIDType shift to state 221
-- On referencedValue shift to state 328
-- On referencedType shift to state 222
-- On referencedObjects shift to state 518
-- On realValue shift to state 332
-- On realType shift to state 232
-- On quadruple shift to state 333
-- On permittedAlphabet shift to state 521
-- On patternConstraint shift to state 522
-- On parameterizedValueSetType shift to state 233
-- On parameterizedValue shift to state 135
-- On parameterizedType shift to state 234
-- On parameterizedObjectSet shift to state 523
-- On parameterizedObject shift to state 524
-- On openTypeFieldVal shift to state 334
-- On octetStringValue shift to state 335
-- On octetStringType shift to state 237
-- On object_x shift to state 525
-- On objectSetFromObjects shift to state 526
-- On objectSetElements shift to state 527
-- On objectIdentifierValue shift to state 336
-- On objectIdentifierType shift to state 238
-- On objectFromObject shift to state 528
-- On objectDefn shift to state 529
-- On objectClassFieldValue shift to state 337
-- On objectClassFieldType shift to state 239
-- On numericRealValue shift to state 338
-- On nullValue shift to state 339
-- On nullType shift to state 240
-- On lowerEndValue shift to state 530
-- On lowerEndPoint shift to state 532
-- On intersections shift to state 564
-- On intersectionElements shift to state 555
-- On integerValue shift to state 340
-- On integerType shift to state 241
-- On instanceOfType shift to state 242
-- On innerTypeConstraints shift to state 540
-- On includes shift to state 541
-- On iElems shift to state 556
-- On fixedTypeFieldVal shift to state 341
-- On externalValueReference shift to state 136
-- On externalValue shift to state 342
-- On externalTypeReference shift to state 243
-- On externalType shift to state 244
-- On externalObjectSetReference shift to state 245
-- On externalObjectReference shift to state 246
-- On externalObjectClassReference shift to state 164
-- On enumeratedValue shift to state 343
-- On enumeratedType shift to state 247
-- On embeddedPDVValue shift to state 344
-- On embeddedPDVType shift to state 248
-- On elems shift to state 561
-- On elements shift to state 563
-- On elementSetSpec shift to state 565
-- On definedValue shift to state 345
-- On definedType shift to state 249
-- On definedObjectSet shift to state 544
-- On definedObjectClass shift to state 252
-- On definedObject shift to state 545
-- On defaultSyntax shift to state 546
-- On containedSubtype shift to state 547
-- On constrainedType shift to state 257
-- On choiceValue shift to state 346
-- On choiceType shift to state 258
-- On characterStringValue shift to state 347
-- On characterStringType shift to state 259
-- On characterStringList shift to state 348
-- On builtinValue shift to state 349
-- On builtinType shift to state 260
-- On booleanValue shift to state 350
-- On booleanType shift to state 261
-- On bitStringValue shift to state 351
-- On bitStringType shift to state 262
-- On additionalElementSetSpec shift to state 566
## Reductions:

State 508:
## Known stack suffix:
## DefinedSyntax
## LR(1) items:
objectDefn -> DefinedSyntax . [ Upper UNION RightParen RightBrace Middle Lower INTERSECTION EXCEPT END Comma Circumflex Bang ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production objectDefn -> DefinedSyntax

State 509:
## Known stack suffix:
## ALL
## LR(1) items:
elementSetSpec -> ALL . exclusions [ RightParen RightBrace Comma Bang ]
## Transitions:
-- On EXCEPT shift to state 510
-- On exclusions shift to state 548
## Reductions:

State 510:
## Known stack suffix:
## EXCEPT
## LR(1) items:
exclusions -> EXCEPT . elements [ UNION RightParen RightBrace Middle INTERSECTION Comma Circumflex Bang ]
## Transitions:
-- On WITH shift to state 82
-- On VisibleString shift to state 66
-- On VideotexString shift to state 67
-- On Upper shift to state 108
-- On UniversalString shift to state 72
-- On UTF8String shift to state 73
-- On UTCTime shift to state 74
-- On TeletexString shift to state 75
-- On TYPE_IDENTIFIER shift to state 76
-- On TRUE shift to state 77
-- On T61String shift to state 78
-- On SIZE shift to state 80
-- On SET shift to state 79
-- On SEQUENCE shift to state 111
-- On RealNumber shift to state 296
-- On RELATIVE_OID shift to state 116
-- On REAL shift to state 117
-- On PrintableString shift to state 118
-- On PLUS_INFINITY shift to state 297
-- On PATTERN shift to state 495
-- On ObjectDescriptor shift to state 119
-- On OCTET shift to state 120
-- On OBJECT shift to state 122
-- On NumericString shift to state 124
-- On Number shift to state 145
-- On NULL shift to state 298
-- On MINUS_INFINITY shift to state 299
-- On MIN shift to state 497
-- On Lower shift to state 300
-- On LeftParen shift to state 498
-- On LeftBracket shift to state 129
-- On LeftBrace shift to state 499
-- On ISO646String shift to state 140
-- On INTEGER shift to state 141
-- On INSTANCE shift to state 157
-- On INCLUDES shift to state 503
-- On IA5String shift to state 166
-- On Hyphen shift to state 306
-- On Hstring shift to state 308
-- On GraphicString shift to state 167
-- On GeneralizedTime shift to state 168
-- On GeneralString shift to state 169
-- On FROM shift to state 504
-- On FALSE shift to state 309
-- On EXTERNAL shift to state 170
-- On ENUMERATED shift to state 171
-- On EMBEDDED shift to state 179
-- On DefinedSyntax shift to state 508
-- On Cstring shift to state 310
-- On CONTAINING shift to state 311
-- On CHOICE shift to state 181
-- On CHARACTER shift to state 184
-- On Bstring shift to state 312
-- On BOOLEAN shift to state 186
-- On BMPString shift to state 187
-- On BIT shift to state 188
-- On ABSTRACT_SYNTAX shift to state 162
-- On valueSetFromObjects shift to state 202
-- On valueRange shift to state 511
-- On valueFromObject shift to state 313
-- On value shift to state 512
-- On usefulType shift to state 203
-- On usefulObjectClassReference shift to state 163
-- On unrestrictedCharacterStringValue shift to state 315
-- On unrestrictedCharacterStringType shift to state 204
-- On type_x shift to state 513
-- On typeWithConstraint shift to state 207
-- On typeFromObject shift to state 208
-- On typeConstraint shift to state 514
-- On tuple shift to state 319
-- On taggedType shift to state 209
-- On tag shift to state 210
-- On subtypeElements shift to state 515
-- On specialRealValue shift to state 320
-- On sizeConstraint shift to state 516
-- On singleValue shift to state 517
-- On simpleDefinedValue shift to state 64
-- On simpleDefinedType shift to state 213
-- On signedNumber shift to state 321
-- On setValue shift to state 322
-- On setType shift to state 215
-- On setOfValue shift to state 323
-- On setOfType shift to state 216
-- On sequenceValue shift to state 324
-- On sequenceType shift to state 217
-- On sequenceOfValue shift to state 325
-- On sequenceOfType shift to state 218
-- On selectionType shift to state 219
-- On restrictedCharacterStringValue shift to state 326
-- On restrictedCharacterStringType shift to state 220
-- On relativeOIDValue shift to state 327
-- On relativeOIDType shift to state 221
-- On referencedValue shift to state 328
-- On referencedType shift to state 222
-- On referencedObjects shift to state 518
-- On realValue shift to state 332
-- On realType shift to state 232
-- On quadruple shift to state 333
-- On permittedAlphabet shift to state 521
-- On patternConstraint shift to state 522
-- On parameterizedValueSetType shift to state 233
-- On parameterizedValue shift to state 135
-- On parameterizedType shift to state 234
-- On parameterizedObjectSet shift to state 523
-- On parameterizedObject shift to state 524
-- On openTypeFieldVal shift to state 334
-- On octetStringValue shift to state 335
-- On octetStringType shift to state 237
-- On object_x shift to state 525
-- On objectSetFromObjects shift to state 526
-- On objectSetElements shift to state 527
-- On objectIdentifierValue shift to state 336
-- On objectIdentifierType shift to state 238
-- On objectFromObject shift to state 528
-- On objectDefn shift to state 529
-- On objectClassFieldValue shift to state 337
-- On objectClassFieldType shift to state 239
-- On numericRealValue shift to state 338
-- On nullValue shift to state 339
-- On nullType shift to state 240
-- On lowerEndValue shift to state 530
-- On lowerEndPoint shift to state 532
-- On integerValue shift to state 340
-- On integerType shift to state 241
-- On instanceOfType shift to state 242
-- On innerTypeConstraints shift to state 540
-- On includes shift to state 541
-- On fixedTypeFieldVal shift to state 341
-- On externalValueReference shift to state 136
-- On externalValue shift to state 342
-- On externalTypeReference shift to state 243
-- On externalType shift to state 244
-- On externalObjectSetReference shift to state 245
-- On externalObjectReference shift to state 246
-- On externalObjectClassReference shift to state 164
-- On enumeratedValue shift to state 343
-- On enumeratedType shift to state 247
-- On embeddedPDVValue shift to state 344
-- On embeddedPDVType shift to state 248
-- On elements shift to state 543
-- On definedValue shift to state 345
-- On definedType shift to state 249
-- On definedObjectSet shift to state 544
-- On definedObjectClass shift to state 252
-- On definedObject shift to state 545
-- On defaultSyntax shift to state 546
-- On containedSubtype shift to state 547
-- On constrainedType shift to state 257
-- On choiceValue shift to state 346
-- On choiceType shift to state 258
-- On characterStringValue shift to state 347
-- On characterStringType shift to state 259
-- On characterStringList shift to state 348
-- On builtinValue shift to state 349
-- On builtinType shift to state 260
-- On booleanValue shift to state 350
-- On booleanType shift to state 261
-- On bitStringValue shift to state 351
-- On bitStringType shift to state 262
## Reductions:

State 511:
## Known stack suffix:
## valueRange
## LR(1) items:
subtypeElements -> valueRange . [ UNION RightParen RightBrace Middle INTERSECTION EXCEPT Comma Circumflex Bang ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production subtypeElements -> valueRange

State 512:
## Known stack suffix:
## value
## LR(1) items:
lowerEndValue -> value . [ LessThan DoubleDot ]
singleValue -> value . [ UNION RightParen RightBrace Middle INTERSECTION EXCEPT Comma Circumflex Bang ]
## Transitions:
## Reductions:
-- On UNION reduce production singleValue -> value
-- On RightParen reduce production singleValue -> value
-- On RightBrace reduce production singleValue -> value
-- On Middle reduce production singleValue -> value
-- On LessThan reduce production lowerEndValue -> value
-- On INTERSECTION reduce production singleValue -> value
-- On EXCEPT reduce production singleValue -> value
-- On DoubleDot reduce production lowerEndValue -> value
-- On Comma reduce production singleValue -> value
-- On Circumflex reduce production singleValue -> value
-- On Bang reduce production singleValue -> value

State 513:
## Known stack suffix:
## type_x
## LR(1) items:
constrainedType -> type_x . constraint_x [ UNION RightParen RightBrace Middle LeftParen INTERSECTION EXCEPT Comma Colon Circumflex Bang ]
openTypeFieldVal -> type_x . Colon value [ UNION RightParen RightBrace Middle LessThan INTERSECTION EXCEPT DoubleDot Comma Circumflex Bang ]
typeConstraint -> type_x . [ UNION RightParen RightBrace Middle INTERSECTION EXCEPT Comma Circumflex Bang ]
## Transitions:
-- On LeftParen shift to state 81
-- On Colon shift to state 317
-- On constraint_x shift to state 206
## Reductions:
-- On UNION reduce production typeConstraint -> type_x
-- On RightParen reduce production typeConstraint -> type_x
-- On RightBrace reduce production typeConstraint -> type_x
-- On Middle reduce production typeConstraint -> type_x
-- On INTERSECTION reduce production typeConstraint -> type_x
-- On EXCEPT reduce production typeConstraint -> type_x
-- On Comma reduce production typeConstraint -> type_x
-- On Circumflex reduce production typeConstraint -> type_x
-- On Bang reduce production typeConstraint -> type_x

State 514:
## Known stack suffix:
## typeConstraint
## LR(1) items:
subtypeElements -> typeConstraint . [ UNION RightParen RightBrace Middle INTERSECTION EXCEPT Comma Circumflex Bang ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production subtypeElements -> typeConstraint

State 515:
## Known stack suffix:
## subtypeElements
## LR(1) items:
elements -> subtypeElements . [ UNION RightParen RightBrace Middle INTERSECTION EXCEPT Comma Circumflex Bang ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production elements -> subtypeElements

State 516:
## Known stack suffix:
## sizeConstraint
## LR(1) items:
subtypeElements -> sizeConstraint . [ UNION RightParen RightBrace Middle INTERSECTION EXCEPT Comma Circumflex Bang ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production subtypeElements -> sizeConstraint

State 517:
## Known stack suffix:
## singleValue
## LR(1) items:
subtypeElements -> singleValue . [ UNION RightParen RightBrace Middle INTERSECTION EXCEPT Comma Circumflex Bang ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production subtypeElements -> singleValue

State 518:
## Known stack suffix:
## referencedObjects
## LR(1) items:
objectFromObject -> referencedObjects . Dot fieldName [ UNION RightParen RightBrace Middle INTERSECTION EXCEPT Comma Circumflex Bang ]
objectSetFromObjects -> referencedObjects . Dot fieldName [ UNION RightParen RightBrace Middle INTERSECTION EXCEPT Comma Circumflex Bang ]
typeFromObject -> referencedObjects . Dot fieldName [ UNION RightParen RightBrace Middle LeftParen INTERSECTION EXCEPT Comma Colon Circumflex Bang ]
valueFromObject -> referencedObjects . Dot fieldName [ UNION RightParen RightBrace Middle LessThan INTERSECTION EXCEPT DoubleDot Comma Circumflex Bang ]
valueSetFromObjects -> referencedObjects . Dot fieldName [ UNION RightParen RightBrace Middle LeftParen INTERSECTION EXCEPT Comma Colon Circumflex Bang ]
## Transitions:
-- On Dot shift to state 519
## Reductions:

State 519:
## Known stack suffix:
## referencedObjects Dot
## LR(1) items:
objectFromObject -> referencedObjects Dot . fieldName [ UNION RightParen RightBrace Middle INTERSECTION EXCEPT Comma Circumflex Bang ]
objectSetFromObjects -> referencedObjects Dot . fieldName [ UNION RightParen RightBrace Middle INTERSECTION EXCEPT Comma Circumflex Bang ]
typeFromObject -> referencedObjects Dot . fieldName [ UNION RightParen RightBrace Middle LeftParen INTERSECTION EXCEPT Comma Colon Circumflex Bang ]
valueFromObject -> referencedObjects Dot . fieldName [ UNION RightParen RightBrace Middle LessThan INTERSECTION EXCEPT DoubleDot Comma Circumflex Bang ]
valueSetFromObjects -> referencedObjects Dot . fieldName [ UNION RightParen RightBrace Middle LeftParen INTERSECTION EXCEPT Comma Colon Circumflex Bang ]
## Transitions:
-- On UpperField shift to state 225
-- On LowerField shift to state 226
-- On separated_nonempty_list(Dot,primitiveFieldName) shift to state 227
-- On primitiveFieldName shift to state 228
-- On fieldName shift to state 520
## Reductions:

State 520:
## Known stack suffix:
## referencedObjects Dot fieldName
## LR(1) items:
objectFromObject -> referencedObjects Dot fieldName . [ UNION RightParen RightBrace Middle INTERSECTION EXCEPT Comma Circumflex Bang ]
objectSetFromObjects -> referencedObjects Dot fieldName . [ UNION RightParen RightBrace Middle INTERSECTION EXCEPT Comma Circumflex Bang ]
typeFromObject -> referencedObjects Dot fieldName . [ UNION RightParen RightBrace Middle LeftParen INTERSECTION EXCEPT Comma Colon Circumflex Bang ]
valueFromObject -> referencedObjects Dot fieldName . [ UNION RightParen RightBrace Middle LessThan INTERSECTION EXCEPT DoubleDot Comma Circumflex Bang ]
valueSetFromObjects -> referencedObjects Dot fieldName . [ UNION RightParen RightBrace Middle LeftParen INTERSECTION EXCEPT Comma Colon Circumflex Bang ]
## Transitions:
## Reductions:
-- On UNION reduce production valueFromObject -> referencedObjects Dot fieldName
-- On RightParen reduce production valueFromObject -> referencedObjects Dot fieldName
-- On RightBrace reduce production valueFromObject -> referencedObjects Dot fieldName
-- On Middle reduce production valueFromObject -> referencedObjects Dot fieldName
-- On LessThan reduce production valueFromObject -> referencedObjects Dot fieldName
-- On LeftParen reduce production valueSetFromObjects -> referencedObjects Dot fieldName
-- On INTERSECTION reduce production valueFromObject -> referencedObjects Dot fieldName
-- On EXCEPT reduce production valueFromObject -> referencedObjects Dot fieldName
-- On DoubleDot reduce production valueFromObject -> referencedObjects Dot fieldName
-- On Comma reduce production valueFromObject -> referencedObjects Dot fieldName
-- On Colon reduce production valueSetFromObjects -> referencedObjects Dot fieldName
-- On Circumflex reduce production valueFromObject -> referencedObjects Dot fieldName
-- On Bang reduce production valueFromObject -> referencedObjects Dot fieldName

State 521:
## Known stack suffix:
## permittedAlphabet
## LR(1) items:
subtypeElements -> permittedAlphabet . [ UNION RightParen RightBrace Middle INTERSECTION EXCEPT Comma Circumflex Bang ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production subtypeElements -> permittedAlphabet

State 522:
## Known stack suffix:
## patternConstraint
## LR(1) items:
subtypeElements -> patternConstraint . [ UNION RightParen RightBrace Middle INTERSECTION EXCEPT Comma Circumflex Bang ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production subtypeElements -> patternConstraint

State 523:
## Known stack suffix:
## parameterizedObjectSet
## LR(1) items:
objectSetElements -> parameterizedObjectSet . [ UNION RightParen RightBrace Middle INTERSECTION EXCEPT Comma Circumflex Bang ]
referencedObjects -> parameterizedObjectSet . [ Dot ]
## Transitions:
## Reductions:
-- On UNION reduce production objectSetElements -> parameterizedObjectSet
-- On RightParen reduce production objectSetElements -> parameterizedObjectSet
-- On RightBrace reduce production objectSetElements -> parameterizedObjectSet
-- On Middle reduce production objectSetElements -> parameterizedObjectSet
-- On INTERSECTION reduce production objectSetElements -> parameterizedObjectSet
-- On EXCEPT reduce production objectSetElements -> parameterizedObjectSet
-- On Dot reduce production referencedObjects -> parameterizedObjectSet
-- On Comma reduce production objectSetElements -> parameterizedObjectSet
-- On Circumflex reduce production objectSetElements -> parameterizedObjectSet
-- On Bang reduce production objectSetElements -> parameterizedObjectSet

State 524:
## Known stack suffix:
## parameterizedObject
## LR(1) items:
object_x -> parameterizedObject . [ Upper UNION RightParen RightBrace Middle Lower INTERSECTION EXCEPT END Comma Circumflex Bang ]
referencedObjects -> parameterizedObject . [ Dot ]
## Transitions:
## Reductions:
-- On Upper reduce production object_x -> parameterizedObject
-- On UNION reduce production object_x -> parameterizedObject
-- On RightParen reduce production object_x -> parameterizedObject
-- On RightBrace reduce production object_x -> parameterizedObject
-- On Middle reduce production object_x -> parameterizedObject
-- On Lower reduce production object_x -> parameterizedObject
-- On INTERSECTION reduce production object_x -> parameterizedObject
-- On EXCEPT reduce production object_x -> parameterizedObject
-- On END reduce production object_x -> parameterizedObject
-- On Dot reduce production referencedObjects -> parameterizedObject
-- On Comma reduce production object_x -> parameterizedObject
-- On Circumflex reduce production object_x -> parameterizedObject
-- On Bang reduce production object_x -> parameterizedObject

State 525:
## Known stack suffix:
## object_x
## LR(1) items:
objectSetElements -> object_x . [ UNION RightParen RightBrace Middle INTERSECTION EXCEPT Comma Circumflex Bang ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production objectSetElements -> object_x

State 526:
## Known stack suffix:
## objectSetFromObjects
## LR(1) items:
objectSetElements -> objectSetFromObjects . [ UNION RightParen RightBrace Middle INTERSECTION EXCEPT Comma Circumflex Bang ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production objectSetElements -> objectSetFromObjects

State 527:
## Known stack suffix:
## objectSetElements
## LR(1) items:
elements -> objectSetElements . [ UNION RightParen RightBrace Middle INTERSECTION EXCEPT Comma Circumflex Bang ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production elements -> objectSetElements

State 528:
## Known stack suffix:
## objectFromObject
## LR(1) items:
object_x -> objectFromObject . [ Upper UNION RightParen RightBrace Middle Lower INTERSECTION EXCEPT END Comma Circumflex Bang ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production object_x -> objectFromObject

State 529:
## Known stack suffix:
## objectDefn
## LR(1) items:
object_x -> objectDefn . [ Upper UNION RightParen RightBrace Middle Lower INTERSECTION EXCEPT END Comma Circumflex Bang ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production object_x -> objectDefn

State 530:
## Known stack suffix:
## lowerEndValue
## LR(1) items:
lowerEndPoint -> lowerEndValue . [ DoubleDot ]
lowerEndPoint -> lowerEndValue . LessThan [ DoubleDot ]
## Transitions:
-- On LessThan shift to state 531
## Reductions:
-- On DoubleDot reduce production lowerEndPoint -> lowerEndValue

State 531:
## Known stack suffix:
## lowerEndValue LessThan
## LR(1) items:
lowerEndPoint -> lowerEndValue LessThan . [ DoubleDot ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production lowerEndPoint -> lowerEndValue LessThan

State 532:
## Known stack suffix:
## lowerEndPoint
## LR(1) items:
valueRange -> lowerEndPoint . DoubleDot upperEndPoint [ UNION RightParen RightBrace Middle INTERSECTION EXCEPT Comma Circumflex Bang ]
## Transitions:
-- On DoubleDot shift to state 533
## Reductions:

State 533:
## Known stack suffix:
## lowerEndPoint DoubleDot
## LR(1) items:
valueRange -> lowerEndPoint DoubleDot . upperEndPoint [ UNION RightParen RightBrace Middle INTERSECTION EXCEPT Comma Circumflex Bang ]
## Transitions:
-- On VisibleString shift to state 66
-- On VideotexString shift to state 67
-- On Upper shift to state 108
-- On UniversalString shift to state 72
-- On UTF8String shift to state 73
-- On UTCTime shift to state 74
-- On TeletexString shift to state 75
-- On TYPE_IDENTIFIER shift to state 76
-- On TRUE shift to state 77
-- On T61String shift to state 78
-- On SET shift to state 79
-- On SEQUENCE shift to state 111
-- On RealNumber shift to state 296
-- On RELATIVE_OID shift to state 116
-- On REAL shift to state 117
-- On PrintableString shift to state 118
-- On PLUS_INFINITY shift to state 297
-- On ObjectDescriptor shift to state 119
-- On OCTET shift to state 120
-- On OBJECT shift to state 122
-- On NumericString shift to state 124
-- On Number shift to state 145
-- On NULL shift to state 298
-- On MINUS_INFINITY shift to state 299
-- On MAX shift to state 534
-- On Lower shift to state 300
-- On LessThan shift to state 535
-- On LeftBracket shift to state 129
-- On LeftBrace shift to state 302
-- On ISO646String shift to state 140
-- On INTEGER shift to state 141
-- On INSTANCE shift to state 157
-- On IA5String shift to state 166
-- On Hyphen shift to state 306
-- On Hstring shift to state 308
-- On GraphicString shift to state 167
-- On GeneralizedTime shift to state 168
-- On GeneralString shift to state 169
-- On FALSE shift to state 309
-- On EXTERNAL shift to state 170
-- On ENUMERATED shift to state 171
-- On EMBEDDED shift to state 179
-- On Cstring shift to state 310
-- On CONTAINING shift to state 311
-- On CHOICE shift to state 181
-- On CHARACTER shift to state 184
-- On Bstring shift to state 312
-- On BOOLEAN shift to state 186
-- On BMPString shift to state 187
-- On BIT shift to state 188
-- On ABSTRACT_SYNTAX shift to state 162
-- On valueSetFromObjects shift to state 202
-- On valueFromObject shift to state 313
-- On value shift to state 536
-- On usefulType shift to state 203
-- On usefulObjectClassReference shift to state 163
-- On upperEndValue shift to state 538
-- On upperEndPoint shift to state 539
-- On unrestrictedCharacterStringValue shift to state 315
-- On unrestrictedCharacterStringType shift to state 204
-- On type_x shift to state 316
-- On typeWithConstraint shift to state 207
-- On typeFromObject shift to state 208
-- On tuple shift to state 319
-- On taggedType shift to state 209
-- On tag shift to state 210
-- On specialRealValue shift to state 320
-- On simpleDefinedValue shift to state 64
-- On simpleDefinedType shift to state 213
-- On signedNumber shift to state 321
-- On setValue shift to state 322
-- On setType shift to state 215
-- On setOfValue shift to state 323
-- On setOfType shift to state 216
-- On sequenceValue shift to state 324
-- On sequenceType shift to state 217
-- On sequenceOfValue shift to state 325
-- On sequenceOfType shift to state 218
-- On selectionType shift to state 219
-- On restrictedCharacterStringValue shift to state 326
-- On restrictedCharacterStringType shift to state 220
-- On relativeOIDValue shift to state 327
-- On relativeOIDType shift to state 221
-- On referencedValue shift to state 328
-- On referencedType shift to state 222
-- On referencedObjects shift to state 329
-- On realValue shift to state 332
-- On realType shift to state 232
-- On quadruple shift to state 333
-- On parameterizedValueSetType shift to state 233
-- On parameterizedValue shift to state 135
-- On parameterizedType shift to state 234
-- On parameterizedObjectSet shift to state 235
-- On parameterizedObject shift to state 236
-- On openTypeFieldVal shift to state 334
-- On octetStringValue shift to state 335
-- On octetStringType shift to state 237
-- On objectIdentifierValue shift to state 336
-- On objectIdentifierType shift to state 238
-- On objectClassFieldValue shift to state 337
-- On objectClassFieldType shift to state 239
-- On numericRealValue shift to state 338
-- On nullValue shift to state 339
-- On nullType shift to state 240
-- On integerValue shift to state 340
-- On integerType shift to state 241
-- On instanceOfType shift to state 242
-- On fixedTypeFieldVal shift to state 341
-- On externalValueReference shift to state 136
-- On externalValue shift to state 342
-- On externalTypeReference shift to state 243
-- On externalType shift to state 244
-- On externalObjectSetReference shift to state 245
-- On externalObjectReference shift to state 246
-- On externalObjectClassReference shift to state 164
-- On enumeratedValue shift to state 343
-- On enumeratedType shift to state 247
-- On embeddedPDVValue shift to state 344
-- On embeddedPDVType shift to state 248
-- On definedValue shift to state 345
-- On definedType shift to state 249
-- On definedObjectSet shift to state 250
-- On definedObjectClass shift to state 252
-- On definedObject shift to state 255
-- On constrainedType shift to state 257
-- On choiceValue shift to state 346
-- On choiceType shift to state 258
-- On characterStringValue shift to state 347
-- On characterStringType shift to state 259
-- On characterStringList shift to state 348
-- On builtinValue shift to state 349
-- On builtinType shift to state 260
-- On booleanValue shift to state 350
-- On booleanType shift to state 261
-- On bitStringValue shift to state 351
-- On bitStringType shift to state 262
## Reductions:

State 534:
## Known stack suffix:
## MAX
## LR(1) items:
upperEndValue -> MAX . [ UNION RightParen RightBrace Middle INTERSECTION EXCEPT Comma Circumflex Bang ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production upperEndValue -> MAX

State 535:
## Known stack suffix:
## LessThan
## LR(1) items:
upperEndPoint -> LessThan . upperEndValue [ UNION RightParen RightBrace Middle INTERSECTION EXCEPT Comma Circumflex Bang ]
## Transitions:
-- On VisibleString shift to state 66
-- On VideotexString shift to state 67
-- On Upper shift to state 108
-- On UniversalString shift to state 72
-- On UTF8String shift to state 73
-- On UTCTime shift to state 74
-- On TeletexString shift to state 75
-- On TYPE_IDENTIFIER shift to state 76
-- On TRUE shift to state 77
-- On T61String shift to state 78
-- On SET shift to state 79
-- On SEQUENCE shift to state 111
-- On RealNumber shift to state 296
-- On RELATIVE_OID shift to state 116
-- On REAL shift to state 117
-- On PrintableString shift to state 118
-- On PLUS_INFINITY shift to state 297
-- On ObjectDescriptor shift to state 119
-- On OCTET shift to state 120
-- On OBJECT shift to state 122
-- On NumericString shift to state 124
-- On Number shift to state 145
-- On NULL shift to state 298
-- On MINUS_INFINITY shift to state 299
-- On MAX shift to state 534
-- On Lower shift to state 300
-- On LeftBracket shift to state 129
-- On LeftBrace shift to state 302
-- On ISO646String shift to state 140
-- On INTEGER shift to state 141
-- On INSTANCE shift to state 157
-- On IA5String shift to state 166
-- On Hyphen shift to state 306
-- On Hstring shift to state 308
-- On GraphicString shift to state 167
-- On GeneralizedTime shift to state 168
-- On GeneralString shift to state 169
-- On FALSE shift to state 309
-- On EXTERNAL shift to state 170
-- On ENUMERATED shift to state 171
-- On EMBEDDED shift to state 179
-- On Cstring shift to state 310
-- On CONTAINING shift to state 311
-- On CHOICE shift to state 181
-- On CHARACTER shift to state 184
-- On Bstring shift to state 312
-- On BOOLEAN shift to state 186
-- On BMPString shift to state 187
-- On BIT shift to state 188
-- On ABSTRACT_SYNTAX shift to state 162
-- On valueSetFromObjects shift to state 202
-- On valueFromObject shift to state 313
-- On value shift to state 536
-- On usefulType shift to state 203
-- On usefulObjectClassReference shift to state 163
-- On upperEndValue shift to state 537
-- On unrestrictedCharacterStringValue shift to state 315
-- On unrestrictedCharacterStringType shift to state 204
-- On type_x shift to state 316
-- On typeWithConstraint shift to state 207
-- On typeFromObject shift to state 208
-- On tuple shift to state 319
-- On taggedType shift to state 209
-- On tag shift to state 210
-- On specialRealValue shift to state 320
-- On simpleDefinedValue shift to state 64
-- On simpleDefinedType shift to state 213
-- On signedNumber shift to state 321
-- On setValue shift to state 322
-- On setType shift to state 215
-- On setOfValue shift to state 323
-- On setOfType shift to state 216
-- On sequenceValue shift to state 324
-- On sequenceType shift to state 217
-- On sequenceOfValue shift to state 325
-- On sequenceOfType shift to state 218
-- On selectionType shift to state 219
-- On restrictedCharacterStringValue shift to state 326
-- On restrictedCharacterStringType shift to state 220
-- On relativeOIDValue shift to state 327
-- On relativeOIDType shift to state 221
-- On referencedValue shift to state 328
-- On referencedType shift to state 222
-- On referencedObjects shift to state 329
-- On realValue shift to state 332
-- On realType shift to state 232
-- On quadruple shift to state 333
-- On parameterizedValueSetType shift to state 233
-- On parameterizedValue shift to state 135
-- On parameterizedType shift to state 234
-- On parameterizedObjectSet shift to state 235
-- On parameterizedObject shift to state 236
-- On openTypeFieldVal shift to state 334
-- On octetStringValue shift to state 335
-- On octetStringType shift to state 237
-- On objectIdentifierValue shift to state 336
-- On objectIdentifierType shift to state 238
-- On objectClassFieldValue shift to state 337
-- On objectClassFieldType shift to state 239
-- On numericRealValue shift to state 338
-- On nullValue shift to state 339
-- On nullType shift to state 240
-- On integerValue shift to state 340
-- On integerType shift to state 241
-- On instanceOfType shift to state 242
-- On fixedTypeFieldVal shift to state 341
-- On externalValueReference shift to state 136
-- On externalValue shift to state 342
-- On externalTypeReference shift to state 243
-- On externalType shift to state 244
-- On externalObjectSetReference shift to state 245
-- On externalObjectReference shift to state 246
-- On externalObjectClassReference shift to state 164
-- On enumeratedValue shift to state 343
-- On enumeratedType shift to state 247
-- On embeddedPDVValue shift to state 344
-- On embeddedPDVType shift to state 248
-- On definedValue shift to state 345
-- On definedType shift to state 249
-- On definedObjectSet shift to state 250
-- On definedObjectClass shift to state 252
-- On definedObject shift to state 255
-- On constrainedType shift to state 257
-- On choiceValue shift to state 346
-- On choiceType shift to state 258
-- On characterStringValue shift to state 347
-- On characterStringType shift to state 259
-- On characterStringList shift to state 348
-- On builtinValue shift to state 349
-- On builtinType shift to state 260
-- On booleanValue shift to state 350
-- On booleanType shift to state 261
-- On bitStringValue shift to state 351
-- On bitStringType shift to state 262
## Reductions:

State 536:
## Known stack suffix:
## value
## LR(1) items:
upperEndValue -> value . [ UNION RightParen RightBrace Middle INTERSECTION EXCEPT Comma Circumflex Bang ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production upperEndValue -> value

State 537:
## Known stack suffix:
## LessThan upperEndValue
## LR(1) items:
upperEndPoint -> LessThan upperEndValue . [ UNION RightParen RightBrace Middle INTERSECTION EXCEPT Comma Circumflex Bang ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production upperEndPoint -> LessThan upperEndValue

State 538:
## Known stack suffix:
## upperEndValue
## LR(1) items:
upperEndPoint -> upperEndValue . [ UNION RightParen RightBrace Middle INTERSECTION EXCEPT Comma Circumflex Bang ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production upperEndPoint -> upperEndValue

State 539:
## Known stack suffix:
## lowerEndPoint DoubleDot upperEndPoint
## LR(1) items:
valueRange -> lowerEndPoint DoubleDot upperEndPoint . [ UNION RightParen RightBrace Middle INTERSECTION EXCEPT Comma Circumflex Bang ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production valueRange -> lowerEndPoint DoubleDot upperEndPoint

State 540:
## Known stack suffix:
## innerTypeConstraints
## LR(1) items:
subtypeElements -> innerTypeConstraints . [ UNION RightParen RightBrace Middle INTERSECTION EXCEPT Comma Circumflex Bang ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production subtypeElements -> innerTypeConstraints

State 541:
## Known stack suffix:
## includes
## LR(1) items:
containedSubtype -> includes . type_x [ UNION RightParen RightBrace Middle INTERSECTION EXCEPT Comma Circumflex Bang ]
## Transitions:
-- On VisibleString shift to state 66
-- On VideotexString shift to state 67
-- On Upper shift to state 113
-- On UniversalString shift to state 72
-- On UTF8String shift to state 73
-- On UTCTime shift to state 74
-- On TeletexString shift to state 75
-- On TYPE_IDENTIFIER shift to state 76
-- On T61String shift to state 78
-- On SET shift to state 79
-- On SEQUENCE shift to state 111
-- On RELATIVE_OID shift to state 116
-- On REAL shift to state 117
-- On PrintableString shift to state 118
-- On ObjectDescriptor shift to state 119
-- On OCTET shift to state 120
-- On OBJECT shift to state 122
-- On NumericString shift to state 124
-- On NULL shift to state 125
-- On Lower shift to state 127
-- On LeftBracket shift to state 129
-- On ISO646String shift to state 140
-- On INTEGER shift to state 141
-- On INSTANCE shift to state 157
-- On IA5String shift to state 166
-- On GraphicString shift to state 167
-- On GeneralizedTime shift to state 168
-- On GeneralString shift to state 169
-- On EXTERNAL shift to state 170
-- On ENUMERATED shift to state 171
-- On EMBEDDED shift to state 179
-- On CHOICE shift to state 181
-- On CHARACTER shift to state 184
-- On BOOLEAN shift to state 186
-- On BMPString shift to state 187
-- On BIT shift to state 188
-- On ABSTRACT_SYNTAX shift to state 162
-- On valueSetFromObjects shift to state 202
-- On usefulType shift to state 203
-- On usefulObjectClassReference shift to state 163
-- On unrestrictedCharacterStringType shift to state 204
-- On type_x shift to state 542
-- On typeWithConstraint shift to state 207
-- On typeFromObject shift to state 208
-- On taggedType shift to state 209
-- On tag shift to state 210
-- On simpleDefinedType shift to state 213
-- On setType shift to state 215
-- On setOfType shift to state 216
-- On sequenceType shift to state 217
-- On sequenceOfType shift to state 218
-- On selectionType shift to state 219
-- On restrictedCharacterStringType shift to state 220
-- On relativeOIDType shift to state 221
-- On referencedType shift to state 222
-- On referencedObjects shift to state 223
-- On realType shift to state 232
-- On parameterizedValueSetType shift to state 233
-- On parameterizedType shift to state 234
-- On parameterizedObjectSet shift to state 235
-- On parameterizedObject shift to state 236
-- On octetStringType shift to state 237
-- On objectIdentifierType shift to state 238
-- On objectClassFieldType shift to state 239
-- On nullType shift to state 240
-- On integerType shift to state 241
-- On instanceOfType shift to state 242
-- On externalTypeReference shift to state 243
-- On externalType shift to state 244
-- On externalObjectSetReference shift to state 245
-- On externalObjectReference shift to state 246
-- On externalObjectClassReference shift to state 164
-- On enumeratedType shift to state 247
-- On embeddedPDVType shift to state 248
-- On definedType shift to state 249
-- On definedObjectSet shift to state 250
-- On definedObjectClass shift to state 252
-- On definedObject shift to state 255
-- On constrainedType shift to state 257
-- On choiceType shift to state 258
-- On characterStringType shift to state 259
-- On builtinType shift to state 260
-- On booleanType shift to state 261
-- On bitStringType shift to state 262
## Reductions:

State 542:
## Known stack suffix:
## includes type_x
## LR(1) items:
constrainedType -> type_x . constraint_x [ UNION RightParen RightBrace Middle LeftParen INTERSECTION EXCEPT Comma Circumflex Bang ]
containedSubtype -> includes type_x . [ UNION RightParen RightBrace Middle INTERSECTION EXCEPT Comma Circumflex Bang ]
## Transitions:
-- On LeftParen shift to state 81
-- On constraint_x shift to state 206
## Reductions:
-- On UNION reduce production containedSubtype -> includes type_x
-- On RightParen reduce production containedSubtype -> includes type_x
-- On RightBrace reduce production containedSubtype -> includes type_x
-- On Middle reduce production containedSubtype -> includes type_x
-- On INTERSECTION reduce production containedSubtype -> includes type_x
-- On EXCEPT reduce production containedSubtype -> includes type_x
-- On Comma reduce production containedSubtype -> includes type_x
-- On Circumflex reduce production containedSubtype -> includes type_x
-- On Bang reduce production containedSubtype -> includes type_x

State 543:
## Known stack suffix:
## EXCEPT elements
## LR(1) items:
exclusions -> EXCEPT elements . [ UNION RightParen RightBrace Middle INTERSECTION Comma Circumflex Bang ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production exclusions -> EXCEPT elements

State 544:
## Known stack suffix:
## definedObjectSet
## LR(1) items:
objectSetElements -> definedObjectSet . [ UNION RightParen RightBrace Middle INTERSECTION EXCEPT Comma Circumflex Bang ]
parameterizedObjectSet -> definedObjectSet . actualParameterList [ UNION RightParen RightBrace Middle INTERSECTION EXCEPT Dot Comma Circumflex Bang ]
referencedObjects -> definedObjectSet . [ Dot ]
## Transitions:
-- On LeftBrace shift to state 65
-- On actualParameterList shift to state 251
## Reductions:
-- On UNION reduce production objectSetElements -> definedObjectSet
-- On RightParen reduce production objectSetElements -> definedObjectSet
-- On RightBrace reduce production objectSetElements -> definedObjectSet
-- On Middle reduce production objectSetElements -> definedObjectSet
-- On INTERSECTION reduce production objectSetElements -> definedObjectSet
-- On EXCEPT reduce production objectSetElements -> definedObjectSet
-- On Dot reduce production referencedObjects -> definedObjectSet
-- On Comma reduce production objectSetElements -> definedObjectSet
-- On Circumflex reduce production objectSetElements -> definedObjectSet
-- On Bang reduce production objectSetElements -> definedObjectSet

State 545:
## Known stack suffix:
## definedObject
## LR(1) items:
object_x -> definedObject . [ Upper UNION RightParen RightBrace Middle Lower INTERSECTION EXCEPT END Comma Circumflex Bang ]
parameterizedObject -> definedObject . actualParameterList [ Upper UNION RightParen RightBrace Middle Lower INTERSECTION EXCEPT END Dot Comma Circumflex Bang ]
referencedObjects -> definedObject . [ Dot ]
## Transitions:
-- On LeftBrace shift to state 65
-- On actualParameterList shift to state 256
## Reductions:
-- On Upper reduce production object_x -> definedObject
-- On UNION reduce production object_x -> definedObject
-- On RightParen reduce production object_x -> definedObject
-- On RightBrace reduce production object_x -> definedObject
-- On Middle reduce production object_x -> definedObject
-- On Lower reduce production object_x -> definedObject
-- On INTERSECTION reduce production object_x -> definedObject
-- On EXCEPT reduce production object_x -> definedObject
-- On END reduce production object_x -> definedObject
-- On Dot reduce production referencedObjects -> definedObject
-- On Comma reduce production object_x -> definedObject
-- On Circumflex reduce production object_x -> definedObject
-- On Bang reduce production object_x -> definedObject

State 546:
## Known stack suffix:
## defaultSyntax
## LR(1) items:
objectDefn -> defaultSyntax . [ Upper UNION RightParen RightBrace Middle Lower INTERSECTION EXCEPT END Comma Circumflex Bang ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production objectDefn -> defaultSyntax

State 547:
## Known stack suffix:
## containedSubtype
## LR(1) items:
subtypeElements -> containedSubtype . [ UNION RightParen RightBrace Middle INTERSECTION EXCEPT Comma Circumflex Bang ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production subtypeElements -> containedSubtype

State 548:
## Known stack suffix:
## ALL exclusions
## LR(1) items:
elementSetSpec -> ALL exclusions . [ RightParen RightBrace Comma Bang ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production elementSetSpec -> ALL exclusions

State 549:
## Known stack suffix:
## unions
## LR(1) items:
elementSetSpec -> unions . [ RightParen RightBrace Comma Bang ]
uElems -> unions . [ UNION Middle ]
## Transitions:
## Reductions:
-- On UNION reduce production uElems -> unions
-- On RightParen reduce production elementSetSpec -> unions
-- On RightBrace reduce production elementSetSpec -> unions
-- On Middle reduce production uElems -> unions
-- On Comma reduce production elementSetSpec -> unions
-- On Bang reduce production elementSetSpec -> unions

State 550:
## Known stack suffix:
## uElems
## LR(1) items:
unions -> uElems . unionMark intersections [ UNION RightParen RightBrace Middle Comma Bang ]
## Transitions:
-- On UNION shift to state 551
-- On Middle shift to state 552
-- On unionMark shift to state 553
## Reductions:

State 551:
## Known stack suffix:
## UNION
## LR(1) items:
unionMark -> UNION . [ WITH VisibleString VideotexString Upper UniversalString UTF8String UTCTime TeletexString TYPE_IDENTIFIER TRUE T61String SIZE SET SEQUENCE RealNumber RELATIVE_OID REAL PrintableString PLUS_INFINITY PATTERN ObjectDescriptor OCTET OBJECT NumericString Number NULL MINUS_INFINITY MIN Lower LeftParen LeftBracket LeftBrace ISO646String INTEGER INSTANCE INCLUDES IA5String Hyphen Hstring GraphicString GeneralizedTime GeneralString FROM FALSE EXTERNAL ENUMERATED EMBEDDED DefinedSyntax Cstring CONTAINING CHOICE CHARACTER Bstring BOOLEAN BMPString BIT ABSTRACT_SYNTAX ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production unionMark -> UNION

State 552:
## Known stack suffix:
## Middle
## LR(1) items:
unionMark -> Middle . [ WITH VisibleString VideotexString Upper UniversalString UTF8String UTCTime TeletexString TYPE_IDENTIFIER TRUE T61String SIZE SET SEQUENCE RealNumber RELATIVE_OID REAL PrintableString PLUS_INFINITY PATTERN ObjectDescriptor OCTET OBJECT NumericString Number NULL MINUS_INFINITY MIN Lower LeftParen LeftBracket LeftBrace ISO646String INTEGER INSTANCE INCLUDES IA5String Hyphen Hstring GraphicString GeneralizedTime GeneralString FROM FALSE EXTERNAL ENUMERATED EMBEDDED DefinedSyntax Cstring CONTAINING CHOICE CHARACTER Bstring BOOLEAN BMPString BIT ABSTRACT_SYNTAX ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production unionMark -> Middle

State 553:
## Known stack suffix:
## uElems unionMark
## LR(1) items:
unions -> uElems unionMark . intersections [ UNION RightParen RightBrace Middle Comma Bang ]
## Transitions:
-- On WITH shift to state 82
-- On VisibleString shift to state 66
-- On VideotexString shift to state 67
-- On Upper shift to state 108
-- On UniversalString shift to state 72
-- On UTF8String shift to state 73
-- On UTCTime shift to state 74
-- On TeletexString shift to state 75
-- On TYPE_IDENTIFIER shift to state 76
-- On TRUE shift to state 77
-- On T61String shift to state 78
-- On SIZE shift to state 80
-- On SET shift to state 79
-- On SEQUENCE shift to state 111
-- On RealNumber shift to state 296
-- On RELATIVE_OID shift to state 116
-- On REAL shift to state 117
-- On PrintableString shift to state 118
-- On PLUS_INFINITY shift to state 297
-- On PATTERN shift to state 495
-- On ObjectDescriptor shift to state 119
-- On OCTET shift to state 120
-- On OBJECT shift to state 122
-- On NumericString shift to state 124
-- On Number shift to state 145
-- On NULL shift to state 298
-- On MINUS_INFINITY shift to state 299
-- On MIN shift to state 497
-- On Lower shift to state 300
-- On LeftParen shift to state 498
-- On LeftBracket shift to state 129
-- On LeftBrace shift to state 499
-- On ISO646String shift to state 140
-- On INTEGER shift to state 141
-- On INSTANCE shift to state 157
-- On INCLUDES shift to state 503
-- On IA5String shift to state 166
-- On Hyphen shift to state 306
-- On Hstring shift to state 308
-- On GraphicString shift to state 167
-- On GeneralizedTime shift to state 168
-- On GeneralString shift to state 169
-- On FROM shift to state 504
-- On FALSE shift to state 309
-- On EXTERNAL shift to state 170
-- On ENUMERATED shift to state 171
-- On EMBEDDED shift to state 179
-- On DefinedSyntax shift to state 508
-- On Cstring shift to state 310
-- On CONTAINING shift to state 311
-- On CHOICE shift to state 181
-- On CHARACTER shift to state 184
-- On Bstring shift to state 312
-- On BOOLEAN shift to state 186
-- On BMPString shift to state 187
-- On BIT shift to state 188
-- On ABSTRACT_SYNTAX shift to state 162
-- On valueSetFromObjects shift to state 202
-- On valueRange shift to state 511
-- On valueFromObject shift to state 313
-- On value shift to state 512
-- On usefulType shift to state 203
-- On usefulObjectClassReference shift to state 163
-- On unrestrictedCharacterStringValue shift to state 315
-- On unrestrictedCharacterStringType shift to state 204
-- On type_x shift to state 513
-- On typeWithConstraint shift to state 207
-- On typeFromObject shift to state 208
-- On typeConstraint shift to state 514
-- On tuple shift to state 319
-- On taggedType shift to state 209
-- On tag shift to state 210
-- On subtypeElements shift to state 515
-- On specialRealValue shift to state 320
-- On sizeConstraint shift to state 516
-- On singleValue shift to state 517
-- On simpleDefinedValue shift to state 64
-- On simpleDefinedType shift to state 213
-- On signedNumber shift to state 321
-- On setValue shift to state 322
-- On setType shift to state 215
-- On setOfValue shift to state 323
-- On setOfType shift to state 216
-- On sequenceValue shift to state 324
-- On sequenceType shift to state 217
-- On sequenceOfValue shift to state 325
-- On sequenceOfType shift to state 218
-- On selectionType shift to state 219
-- On restrictedCharacterStringValue shift to state 326
-- On restrictedCharacterStringType shift to state 220
-- On relativeOIDValue shift to state 327
-- On relativeOIDType shift to state 221
-- On referencedValue shift to state 328
-- On referencedType shift to state 222
-- On referencedObjects shift to state 518
-- On realValue shift to state 332
-- On realType shift to state 232
-- On quadruple shift to state 333
-- On permittedAlphabet shift to state 521
-- On patternConstraint shift to state 522
-- On parameterizedValueSetType shift to state 233
-- On parameterizedValue shift to state 135
-- On parameterizedType shift to state 234
-- On parameterizedObjectSet shift to state 523
-- On parameterizedObject shift to state 524
-- On openTypeFieldVal shift to state 334
-- On octetStringValue shift to state 335
-- On octetStringType shift to state 237
-- On object_x shift to state 525
-- On objectSetFromObjects shift to state 526
-- On objectSetElements shift to state 527
-- On objectIdentifierValue shift to state 336
-- On objectIdentifierType shift to state 238
-- On objectFromObject shift to state 528
-- On objectDefn shift to state 529
-- On objectClassFieldValue shift to state 337
-- On objectClassFieldType shift to state 239
-- On numericRealValue shift to state 338
-- On nullValue shift to state 339
-- On nullType shift to state 240
-- On lowerEndValue shift to state 530
-- On lowerEndPoint shift to state 532
-- On intersections shift to state 554
-- On intersectionElements shift to state 555
-- On integerValue shift to state 340
-- On integerType shift to state 241
-- On instanceOfType shift to state 242
-- On innerTypeConstraints shift to state 540
-- On includes shift to state 541
-- On iElems shift to state 556
-- On fixedTypeFieldVal shift to state 341
-- On externalValueReference shift to state 136
-- On externalValue shift to state 342
-- On externalTypeReference shift to state 243
-- On externalType shift to state 244
-- On externalObjectSetReference shift to state 245
-- On externalObjectReference shift to state 246
-- On externalObjectClassReference shift to state 164
-- On enumeratedValue shift to state 343
-- On enumeratedType shift to state 247
-- On embeddedPDVValue shift to state 344
-- On embeddedPDVType shift to state 248
-- On elems shift to state 561
-- On elements shift to state 563
-- On definedValue shift to state 345
-- On definedType shift to state 249
-- On definedObjectSet shift to state 544
-- On definedObjectClass shift to state 252
-- On definedObject shift to state 545
-- On defaultSyntax shift to state 546
-- On containedSubtype shift to state 547
-- On constrainedType shift to state 257
-- On choiceValue shift to state 346
-- On choiceType shift to state 258
-- On characterStringValue shift to state 347
-- On characterStringType shift to state 259
-- On characterStringList shift to state 348
-- On builtinValue shift to state 349
-- On builtinType shift to state 260
-- On booleanValue shift to state 350
-- On booleanType shift to state 261
-- On bitStringValue shift to state 351
-- On bitStringType shift to state 262
## Reductions:

State 554:
## Known stack suffix:
## uElems unionMark intersections
## LR(1) items:
iElems -> intersections . [ INTERSECTION Circumflex ]
unions -> uElems unionMark intersections . [ UNION RightParen RightBrace Middle Comma Bang ]
## Transitions:
## Reductions:
-- On UNION reduce production unions -> uElems unionMark intersections
-- On RightParen reduce production unions -> uElems unionMark intersections
-- On RightBrace reduce production unions -> uElems unionMark intersections
-- On Middle reduce production unions -> uElems unionMark intersections
-- On INTERSECTION reduce production iElems -> intersections
-- On Comma reduce production unions -> uElems unionMark intersections
-- On Circumflex reduce production iElems -> intersections
-- On Bang reduce production unions -> uElems unionMark intersections

State 555:
## Known stack suffix:
## intersectionElements
## LR(1) items:
intersections -> intersectionElements . [ UNION RightParen RightBrace Middle INTERSECTION Comma Circumflex Bang ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production intersections -> intersectionElements

State 556:
## Known stack suffix:
## iElems
## LR(1) items:
intersections -> iElems . intersectionMark intersectionElements [ UNION RightParen RightBrace Middle INTERSECTION Comma Circumflex Bang ]
## Transitions:
-- On INTERSECTION shift to state 557
-- On Circumflex shift to state 558
-- On intersectionMark shift to state 559
## Reductions:

State 557:
## Known stack suffix:
## INTERSECTION
## LR(1) items:
intersectionMark -> INTERSECTION . [ WITH VisibleString VideotexString Upper UniversalString UTF8String UTCTime TeletexString TYPE_IDENTIFIER TRUE T61String SIZE SET SEQUENCE RealNumber RELATIVE_OID REAL PrintableString PLUS_INFINITY PATTERN ObjectDescriptor OCTET OBJECT NumericString Number NULL MINUS_INFINITY MIN Lower LeftParen LeftBracket LeftBrace ISO646String INTEGER INSTANCE INCLUDES IA5String Hyphen Hstring GraphicString GeneralizedTime GeneralString FROM FALSE EXTERNAL ENUMERATED EMBEDDED DefinedSyntax Cstring CONTAINING CHOICE CHARACTER Bstring BOOLEAN BMPString BIT ABSTRACT_SYNTAX ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production intersectionMark -> INTERSECTION

State 558:
## Known stack suffix:
## Circumflex
## LR(1) items:
intersectionMark -> Circumflex . [ WITH VisibleString VideotexString Upper UniversalString UTF8String UTCTime TeletexString TYPE_IDENTIFIER TRUE T61String SIZE SET SEQUENCE RealNumber RELATIVE_OID REAL PrintableString PLUS_INFINITY PATTERN ObjectDescriptor OCTET OBJECT NumericString Number NULL MINUS_INFINITY MIN Lower LeftParen LeftBracket LeftBrace ISO646String INTEGER INSTANCE INCLUDES IA5String Hyphen Hstring GraphicString GeneralizedTime GeneralString FROM FALSE EXTERNAL ENUMERATED EMBEDDED DefinedSyntax Cstring CONTAINING CHOICE CHARACTER Bstring BOOLEAN BMPString BIT ABSTRACT_SYNTAX ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production intersectionMark -> Circumflex

State 559:
## Known stack suffix:
## iElems intersectionMark
## LR(1) items:
intersections -> iElems intersectionMark . intersectionElements [ UNION RightParen RightBrace Middle INTERSECTION Comma Circumflex Bang ]
## Transitions:
-- On WITH shift to state 82
-- On VisibleString shift to state 66
-- On VideotexString shift to state 67
-- On Upper shift to state 108
-- On UniversalString shift to state 72
-- On UTF8String shift to state 73
-- On UTCTime shift to state 74
-- On TeletexString shift to state 75
-- On TYPE_IDENTIFIER shift to state 76
-- On TRUE shift to state 77
-- On T61String shift to state 78
-- On SIZE shift to state 80
-- On SET shift to state 79
-- On SEQUENCE shift to state 111
-- On RealNumber shift to state 296
-- On RELATIVE_OID shift to state 116
-- On REAL shift to state 117
-- On PrintableString shift to state 118
-- On PLUS_INFINITY shift to state 297
-- On PATTERN shift to state 495
-- On ObjectDescriptor shift to state 119
-- On OCTET shift to state 120
-- On OBJECT shift to state 122
-- On NumericString shift to state 124
-- On Number shift to state 145
-- On NULL shift to state 298
-- On MINUS_INFINITY shift to state 299
-- On MIN shift to state 497
-- On Lower shift to state 300
-- On LeftParen shift to state 498
-- On LeftBracket shift to state 129
-- On LeftBrace shift to state 499
-- On ISO646String shift to state 140
-- On INTEGER shift to state 141
-- On INSTANCE shift to state 157
-- On INCLUDES shift to state 503
-- On IA5String shift to state 166
-- On Hyphen shift to state 306
-- On Hstring shift to state 308
-- On GraphicString shift to state 167
-- On GeneralizedTime shift to state 168
-- On GeneralString shift to state 169
-- On FROM shift to state 504
-- On FALSE shift to state 309
-- On EXTERNAL shift to state 170
-- On ENUMERATED shift to state 171
-- On EMBEDDED shift to state 179
-- On DefinedSyntax shift to state 508
-- On Cstring shift to state 310
-- On CONTAINING shift to state 311
-- On CHOICE shift to state 181
-- On CHARACTER shift to state 184
-- On Bstring shift to state 312
-- On BOOLEAN shift to state 186
-- On BMPString shift to state 187
-- On BIT shift to state 188
-- On ABSTRACT_SYNTAX shift to state 162
-- On valueSetFromObjects shift to state 202
-- On valueRange shift to state 511
-- On valueFromObject shift to state 313
-- On value shift to state 512
-- On usefulType shift to state 203
-- On usefulObjectClassReference shift to state 163
-- On unrestrictedCharacterStringValue shift to state 315
-- On unrestrictedCharacterStringType shift to state 204
-- On type_x shift to state 513
-- On typeWithConstraint shift to state 207
-- On typeFromObject shift to state 208
-- On typeConstraint shift to state 514
-- On tuple shift to state 319
-- On taggedType shift to state 209
-- On tag shift to state 210
-- On subtypeElements shift to state 515
-- On specialRealValue shift to state 320
-- On sizeConstraint shift to state 516
-- On singleValue shift to state 517
-- On simpleDefinedValue shift to state 64
-- On simpleDefinedType shift to state 213
-- On signedNumber shift to state 321
-- On setValue shift to state 322
-- On setType shift to state 215
-- On setOfValue shift to state 323
-- On setOfType shift to state 216
-- On sequenceValue shift to state 324
-- On sequenceType shift to state 217
-- On sequenceOfValue shift to state 325
-- On sequenceOfType shift to state 218
-- On selectionType shift to state 219
-- On restrictedCharacterStringValue shift to state 326
-- On restrictedCharacterStringType shift to state 220
-- On relativeOIDValue shift to state 327
-- On relativeOIDType shift to state 221
-- On referencedValue shift to state 328
-- On referencedType shift to state 222
-- On referencedObjects shift to state 518
-- On realValue shift to state 332
-- On realType shift to state 232
-- On quadruple shift to state 333
-- On permittedAlphabet shift to state 521
-- On patternConstraint shift to state 522
-- On parameterizedValueSetType shift to state 233
-- On parameterizedValue shift to state 135
-- On parameterizedType shift to state 234
-- On parameterizedObjectSet shift to state 523
-- On parameterizedObject shift to state 524
-- On openTypeFieldVal shift to state 334
-- On octetStringValue shift to state 335
-- On octetStringType shift to state 237
-- On object_x shift to state 525
-- On objectSetFromObjects shift to state 526
-- On objectSetElements shift to state 527
-- On objectIdentifierValue shift to state 336
-- On objectIdentifierType shift to state 238
-- On objectFromObject shift to state 528
-- On objectDefn shift to state 529
-- On objectClassFieldValue shift to state 337
-- On objectClassFieldType shift to state 239
-- On numericRealValue shift to state 338
-- On nullValue shift to state 339
-- On nullType shift to state 240
-- On lowerEndValue shift to state 530
-- On lowerEndPoint shift to state 532
-- On intersectionElements shift to state 560
-- On integerValue shift to state 340
-- On integerType shift to state 241
-- On instanceOfType shift to state 242
-- On innerTypeConstraints shift to state 540
-- On includes shift to state 541
-- On fixedTypeFieldVal shift to state 341
-- On externalValueReference shift to state 136
-- On externalValue shift to state 342
-- On externalTypeReference shift to state 243
-- On externalType shift to state 244
-- On externalObjectSetReference shift to state 245
-- On externalObjectReference shift to state 246
-- On externalObjectClassReference shift to state 164
-- On enumeratedValue shift to state 343
-- On enumeratedType shift to state 247
-- On embeddedPDVValue shift to state 344
-- On embeddedPDVType shift to state 248
-- On elems shift to state 561
-- On elements shift to state 563
-- On definedValue shift to state 345
-- On definedType shift to state 249
-- On definedObjectSet shift to state 544
-- On definedObjectClass shift to state 252
-- On definedObject shift to state 545
-- On defaultSyntax shift to state 546
-- On containedSubtype shift to state 547
-- On constrainedType shift to state 257
-- On choiceValue shift to state 346
-- On choiceType shift to state 258
-- On characterStringValue shift to state 347
-- On characterStringType shift to state 259
-- On characterStringList shift to state 348
-- On builtinValue shift to state 349
-- On builtinType shift to state 260
-- On booleanValue shift to state 350
-- On booleanType shift to state 261
-- On bitStringValue shift to state 351
-- On bitStringType shift to state 262
## Reductions:

State 560:
## Known stack suffix:
## iElems intersectionMark intersectionElements
## LR(1) items:
intersections -> iElems intersectionMark intersectionElements . [ UNION RightParen RightBrace Middle INTERSECTION Comma Circumflex Bang ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production intersections -> iElems intersectionMark intersectionElements

State 561:
## Known stack suffix:
## elems
## LR(1) items:
intersectionElements -> elems . exclusions [ UNION RightParen RightBrace Middle INTERSECTION Comma Circumflex Bang ]
## Transitions:
-- On EXCEPT shift to state 510
-- On exclusions shift to state 562
## Reductions:

State 562:
## Known stack suffix:
## elems exclusions
## LR(1) items:
intersectionElements -> elems exclusions . [ UNION RightParen RightBrace Middle INTERSECTION Comma Circumflex Bang ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production intersectionElements -> elems exclusions

State 563:
## Known stack suffix:
## elements
## LR(1) items:
elems -> elements . [ EXCEPT ]
intersectionElements -> elements . [ UNION RightParen RightBrace Middle INTERSECTION Comma Circumflex Bang ]
## Transitions:
## Reductions:
-- On UNION reduce production intersectionElements -> elements
-- On RightParen reduce production intersectionElements -> elements
-- On RightBrace reduce production intersectionElements -> elements
-- On Middle reduce production intersectionElements -> elements
-- On INTERSECTION reduce production intersectionElements -> elements
-- On EXCEPT reduce production elems -> elements
-- On Comma reduce production intersectionElements -> elements
-- On Circumflex reduce production intersectionElements -> elements
-- On Bang reduce production intersectionElements -> elements

State 564:
## Known stack suffix:
## intersections
## LR(1) items:
iElems -> intersections . [ INTERSECTION Circumflex ]
unions -> intersections . [ UNION RightParen RightBrace Middle Comma Bang ]
## Transitions:
## Reductions:
-- On UNION reduce production unions -> intersections
-- On RightParen reduce production unions -> intersections
-- On RightBrace reduce production unions -> intersections
-- On Middle reduce production unions -> intersections
-- On INTERSECTION reduce production iElems -> intersections
-- On Comma reduce production unions -> intersections
-- On Circumflex reduce production iElems -> intersections
-- On Bang reduce production unions -> intersections

State 565:
## Known stack suffix:
## elementSetSpec
## LR(1) items:
additionalElementSetSpec -> elementSetSpec . [ RightParen RightBrace Bang ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production additionalElementSetSpec -> elementSetSpec

State 566:
## Known stack suffix:
## Ellipsis Comma additionalElementSetSpec
## LR(1) items:
objectSetSpec -> Ellipsis Comma additionalElementSetSpec . [ RightBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production objectSetSpec -> Ellipsis Comma additionalElementSetSpec

State 567:
## Known stack suffix:
## value
## LR(1) items:
lowerEndValue -> value . [ LessThan DoubleDot ]
singleValue -> value . [ UNION RightBrace Middle INTERSECTION EXCEPT Comma Circumflex ]
valueList -> value . [ RightBrace Comma ]
## Transitions:
## Reductions:
-- On UNION reduce production singleValue -> value
-- On RightBrace reduce production valueList -> value
-- On Middle reduce production singleValue -> value
-- On LessThan reduce production lowerEndValue -> value
-- On INTERSECTION reduce production singleValue -> value
-- On EXCEPT reduce production singleValue -> value
-- On DoubleDot reduce production lowerEndValue -> value
-- On Comma reduce production valueList -> value
-- On Circumflex reduce production singleValue -> value

State 568:
## Known stack suffix:
## rootElementSetSpec
## LR(1) items:
elementSetSpecs -> rootElementSetSpec . [ RightBrace ]
elementSetSpecs -> rootElementSetSpec . Comma Ellipsis [ RightBrace ]
elementSetSpecs -> rootElementSetSpec . Comma Ellipsis Comma additionalElementSetSpec [ RightBrace ]
objectSetSpec -> rootElementSetSpec . [ RightBrace ]
objectSetSpec -> rootElementSetSpec . Comma Ellipsis [ RightBrace ]
objectSetSpec -> rootElementSetSpec . Comma Ellipsis Comma additionalElementSetSpec [ RightBrace ]
## Transitions:
-- On Comma shift to state 569
## Reductions:
-- On RightBrace reduce production elementSetSpecs -> rootElementSetSpec

State 569:
## Known stack suffix:
## rootElementSetSpec Comma
## LR(1) items:
elementSetSpecs -> rootElementSetSpec Comma . Ellipsis [ RightBrace ]
elementSetSpecs -> rootElementSetSpec Comma . Ellipsis Comma additionalElementSetSpec [ RightBrace ]
objectSetSpec -> rootElementSetSpec Comma . Ellipsis [ RightBrace ]
objectSetSpec -> rootElementSetSpec Comma . Ellipsis Comma additionalElementSetSpec [ RightBrace ]
## Transitions:
-- On Ellipsis shift to state 570
## Reductions:

State 570:
## Known stack suffix:
## rootElementSetSpec Comma Ellipsis
## LR(1) items:
elementSetSpecs -> rootElementSetSpec Comma Ellipsis . [ RightBrace ]
elementSetSpecs -> rootElementSetSpec Comma Ellipsis . Comma additionalElementSetSpec [ RightBrace ]
objectSetSpec -> rootElementSetSpec Comma Ellipsis . [ RightBrace ]
objectSetSpec -> rootElementSetSpec Comma Ellipsis . Comma additionalElementSetSpec [ RightBrace ]
## Transitions:
-- On Comma shift to state 571
## Reductions:
-- On RightBrace reduce production elementSetSpecs -> rootElementSetSpec Comma Ellipsis

State 571:
## Known stack suffix:
## rootElementSetSpec Comma Ellipsis Comma
## LR(1) items:
elementSetSpecs -> rootElementSetSpec Comma Ellipsis Comma . additionalElementSetSpec [ RightBrace ]
objectSetSpec -> rootElementSetSpec Comma Ellipsis Comma . additionalElementSetSpec [ RightBrace ]
## Transitions:
-- On WITH shift to state 82
-- On VisibleString shift to state 66
-- On VideotexString shift to state 67
-- On Upper shift to state 108
-- On UniversalString shift to state 72
-- On UTF8String shift to state 73
-- On UTCTime shift to state 74
-- On TeletexString shift to state 75
-- On TYPE_IDENTIFIER shift to state 76
-- On TRUE shift to state 77
-- On T61String shift to state 78
-- On SIZE shift to state 80
-- On SET shift to state 79
-- On SEQUENCE shift to state 111
-- On RealNumber shift to state 296
-- On RELATIVE_OID shift to state 116
-- On REAL shift to state 117
-- On PrintableString shift to state 118
-- On PLUS_INFINITY shift to state 297
-- On PATTERN shift to state 495
-- On ObjectDescriptor shift to state 119
-- On OCTET shift to state 120
-- On OBJECT shift to state 122
-- On NumericString shift to state 124
-- On Number shift to state 145
-- On NULL shift to state 298
-- On MINUS_INFINITY shift to state 299
-- On MIN shift to state 497
-- On Lower shift to state 300
-- On LeftParen shift to state 498
-- On LeftBracket shift to state 129
-- On LeftBrace shift to state 499
-- On ISO646String shift to state 140
-- On INTEGER shift to state 141
-- On INSTANCE shift to state 157
-- On INCLUDES shift to state 503
-- On IA5String shift to state 166
-- On Hyphen shift to state 306
-- On Hstring shift to state 308
-- On GraphicString shift to state 167
-- On GeneralizedTime shift to state 168
-- On GeneralString shift to state 169
-- On FROM shift to state 504
-- On FALSE shift to state 309
-- On EXTERNAL shift to state 170
-- On ENUMERATED shift to state 171
-- On EMBEDDED shift to state 179
-- On DefinedSyntax shift to state 508
-- On Cstring shift to state 310
-- On CONTAINING shift to state 311
-- On CHOICE shift to state 181
-- On CHARACTER shift to state 184
-- On Bstring shift to state 312
-- On BOOLEAN shift to state 186
-- On BMPString shift to state 187
-- On BIT shift to state 188
-- On ALL shift to state 509
-- On ABSTRACT_SYNTAX shift to state 162
-- On valueSetFromObjects shift to state 202
-- On valueRange shift to state 511
-- On valueFromObject shift to state 313
-- On value shift to state 512
-- On usefulType shift to state 203
-- On usefulObjectClassReference shift to state 163
-- On unrestrictedCharacterStringValue shift to state 315
-- On unrestrictedCharacterStringType shift to state 204
-- On unions shift to state 549
-- On uElems shift to state 550
-- On type_x shift to state 513
-- On typeWithConstraint shift to state 207
-- On typeFromObject shift to state 208
-- On typeConstraint shift to state 514
-- On tuple shift to state 319
-- On taggedType shift to state 209
-- On tag shift to state 210
-- On subtypeElements shift to state 515
-- On specialRealValue shift to state 320
-- On sizeConstraint shift to state 516
-- On singleValue shift to state 517
-- On simpleDefinedValue shift to state 64
-- On simpleDefinedType shift to state 213
-- On signedNumber shift to state 321
-- On setValue shift to state 322
-- On setType shift to state 215
-- On setOfValue shift to state 323
-- On setOfType shift to state 216
-- On sequenceValue shift to state 324
-- On sequenceType shift to state 217
-- On sequenceOfValue shift to state 325
-- On sequenceOfType shift to state 218
-- On selectionType shift to state 219
-- On restrictedCharacterStringValue shift to state 326
-- On restrictedCharacterStringType shift to state 220
-- On relativeOIDValue shift to state 327
-- On relativeOIDType shift to state 221
-- On referencedValue shift to state 328
-- On referencedType shift to state 222
-- On referencedObjects shift to state 518
-- On realValue shift to state 332
-- On realType shift to state 232
-- On quadruple shift to state 333
-- On permittedAlphabet shift to state 521
-- On patternConstraint shift to state 522
-- On parameterizedValueSetType shift to state 233
-- On parameterizedValue shift to state 135
-- On parameterizedType shift to state 234
-- On parameterizedObjectSet shift to state 523
-- On parameterizedObject shift to state 524
-- On openTypeFieldVal shift to state 334
-- On octetStringValue shift to state 335
-- On octetStringType shift to state 237
-- On object_x shift to state 525
-- On objectSetFromObjects shift to state 526
-- On objectSetElements shift to state 527
-- On objectIdentifierValue shift to state 336
-- On objectIdentifierType shift to state 238
-- On objectFromObject shift to state 528
-- On objectDefn shift to state 529
-- On objectClassFieldValue shift to state 337
-- On objectClassFieldType shift to state 239
-- On numericRealValue shift to state 338
-- On nullValue shift to state 339
-- On nullType shift to state 240
-- On lowerEndValue shift to state 530
-- On lowerEndPoint shift to state 532
-- On intersections shift to state 564
-- On intersectionElements shift to state 555
-- On integerValue shift to state 340
-- On integerType shift to state 241
-- On instanceOfType shift to state 242
-- On innerTypeConstraints shift to state 540
-- On includes shift to state 541
-- On iElems shift to state 556
-- On fixedTypeFieldVal shift to state 341
-- On externalValueReference shift to state 136
-- On externalValue shift to state 342
-- On externalTypeReference shift to state 243
-- On externalType shift to state 244
-- On externalObjectSetReference shift to state 245
-- On externalObjectReference shift to state 246
-- On externalObjectClassReference shift to state 164
-- On enumeratedValue shift to state 343
-- On enumeratedType shift to state 247
-- On embeddedPDVValue shift to state 344
-- On embeddedPDVType shift to state 248
-- On elems shift to state 561
-- On elements shift to state 563
-- On elementSetSpec shift to state 565
-- On definedValue shift to state 345
-- On definedType shift to state 249
-- On definedObjectSet shift to state 544
-- On definedObjectClass shift to state 252
-- On definedObject shift to state 545
-- On defaultSyntax shift to state 546
-- On containedSubtype shift to state 547
-- On constrainedType shift to state 257
-- On choiceValue shift to state 346
-- On choiceType shift to state 258
-- On characterStringValue shift to state 347
-- On characterStringType shift to state 259
-- On characterStringList shift to state 348
-- On builtinValue shift to state 349
-- On builtinType shift to state 260
-- On booleanValue shift to state 350
-- On booleanType shift to state 261
-- On bitStringValue shift to state 351
-- On bitStringType shift to state 262
-- On additionalElementSetSpec shift to state 572
## Reductions:

State 572:
## Known stack suffix:
## rootElementSetSpec Comma Ellipsis Comma additionalElementSetSpec
## LR(1) items:
elementSetSpecs -> rootElementSetSpec Comma Ellipsis Comma additionalElementSetSpec . [ RightBrace ]
objectSetSpec -> rootElementSetSpec Comma Ellipsis Comma additionalElementSetSpec . [ RightBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production elementSetSpecs -> rootElementSetSpec Comma Ellipsis Comma additionalElementSetSpec

State 573:
## Known stack suffix:
## LeftBrace objectSetSpec
## LR(1) items:
objectSet -> LeftBrace objectSetSpec . RightBrace [ Upper RightParen RightBrace Lower END Comma Bang ]
## Transitions:
-- On RightBrace shift to state 574
## Reductions:

State 574:
## Known stack suffix:
## LeftBrace objectSetSpec RightBrace
## LR(1) items:
objectSet -> LeftBrace objectSetSpec RightBrace . [ Upper RightParen RightBrace Lower END Comma Bang ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production objectSet -> LeftBrace objectSetSpec RightBrace

State 575:
## Known stack suffix:
## LeftBrace loption(separated_nonempty_list(Comma,fieldSetting))
## LR(1) items:
defaultSyntax -> LeftBrace loption(separated_nonempty_list(Comma,fieldSetting)) . RightBrace [ Upper UNION RightParen RightBrace Middle Lower INTERSECTION EXCEPT END Comma Circumflex Bang ]
## Transitions:
-- On RightBrace shift to state 576
## Reductions:

State 576:
## Known stack suffix:
## LeftBrace loption(separated_nonempty_list(Comma,fieldSetting)) RightBrace
## LR(1) items:
defaultSyntax -> LeftBrace loption(separated_nonempty_list(Comma,fieldSetting)) RightBrace . [ Upper UNION RightParen RightBrace Middle Lower INTERSECTION EXCEPT END Comma Circumflex Bang ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production defaultSyntax -> LeftBrace loption(separated_nonempty_list(Comma,fieldSetting)) RightBrace

State 577:
## Known stack suffix:
## fieldSetting
## LR(1) items:
separated_nonempty_list(Comma,fieldSetting) -> fieldSetting . [ RightBrace ]
separated_nonempty_list(Comma,fieldSetting) -> fieldSetting . Comma separated_nonempty_list(Comma,fieldSetting) [ RightBrace ]
## Transitions:
-- On Comma shift to state 578
## Reductions:
-- On RightBrace reduce production separated_nonempty_list(Comma,fieldSetting) -> fieldSetting

State 578:
## Known stack suffix:
## fieldSetting Comma
## LR(1) items:
separated_nonempty_list(Comma,fieldSetting) -> fieldSetting Comma . separated_nonempty_list(Comma,fieldSetting) [ RightBrace ]
## Transitions:
-- On UpperField shift to state 225
-- On LowerField shift to state 226
-- On separated_nonempty_list(Comma,fieldSetting) shift to state 579
-- On primitiveFieldName shift to state 501
-- On fieldSetting shift to state 577
## Reductions:

State 579:
## Known stack suffix:
## fieldSetting Comma separated_nonempty_list(Comma,fieldSetting)
## LR(1) items:
separated_nonempty_list(Comma,fieldSetting) -> fieldSetting Comma separated_nonempty_list(Comma,fieldSetting) . [ RightBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production separated_nonempty_list(Comma,fieldSetting) -> fieldSetting Comma separated_nonempty_list(Comma,fieldSetting)

State 580:
## Known stack suffix:
## LeftBrace elementSetSpecs
## LR(1) items:
valueSet -> LeftBrace elementSetSpecs . RightBrace [ Upper RightBrace Lower END Comma ]
## Transitions:
-- On RightBrace shift to state 581
## Reductions:

State 581:
## Known stack suffix:
## LeftBrace elementSetSpecs RightBrace
## LR(1) items:
valueSet -> LeftBrace elementSetSpecs RightBrace . [ Upper RightBrace Lower END Comma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production valueSet -> LeftBrace elementSetSpecs RightBrace

State 582:
## Known stack suffix:
## elementSetSpec
## LR(1) items:
rootElementSetSpec -> elementSetSpec . [ RightParen RightBrace Comma Bang ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production rootElementSetSpec -> elementSetSpec

State 583:
## Known stack suffix:
## valueSet
## LR(1) items:
setting -> valueSet . [ RightBrace Comma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production setting -> valueSet

State 584:
## Known stack suffix:
## value
## LR(1) items:
setting -> value . [ RightBrace Comma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production setting -> value

State 585:
## Known stack suffix:
## type_x
## LR(1) items:
constrainedType -> type_x . constraint_x [ RightBrace LeftParen Comma Colon ]
openTypeFieldVal -> type_x . Colon value [ RightBrace Comma ]
setting -> type_x . [ RightBrace Comma ]
## Transitions:
-- On LeftParen shift to state 81
-- On Colon shift to state 317
-- On constraint_x shift to state 206
## Reductions:
-- On RightBrace reduce production setting -> type_x
-- On Comma reduce production setting -> type_x

State 586:
## Known stack suffix:
## primitiveFieldName setting
## LR(1) items:
fieldSetting -> primitiveFieldName setting . [ RightBrace Comma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production fieldSetting -> primitiveFieldName setting

State 587:
## Known stack suffix:
## referencedObjects
## LR(1) items:
objectFromObject -> referencedObjects . Dot fieldName [ RightBrace Comma ]
typeFromObject -> referencedObjects . Dot fieldName [ RightBrace LeftParen Comma Colon ]
valueFromObject -> referencedObjects . Dot fieldName [ RightBrace Comma ]
valueSetFromObjects -> referencedObjects . Dot fieldName [ RightBrace LeftParen Comma Colon ]
## Transitions:
-- On Dot shift to state 588
## Reductions:

State 588:
## Known stack suffix:
## referencedObjects Dot
## LR(1) items:
objectFromObject -> referencedObjects Dot . fieldName [ RightBrace Comma ]
typeFromObject -> referencedObjects Dot . fieldName [ RightBrace LeftParen Comma Colon ]
valueFromObject -> referencedObjects Dot . fieldName [ RightBrace Comma ]
valueSetFromObjects -> referencedObjects Dot . fieldName [ RightBrace LeftParen Comma Colon ]
## Transitions:
-- On UpperField shift to state 225
-- On LowerField shift to state 226
-- On separated_nonempty_list(Dot,primitiveFieldName) shift to state 227
-- On primitiveFieldName shift to state 228
-- On fieldName shift to state 589
## Reductions:

State 589:
## Known stack suffix:
## referencedObjects Dot fieldName
## LR(1) items:
objectFromObject -> referencedObjects Dot fieldName . [ RightBrace Comma ]
typeFromObject -> referencedObjects Dot fieldName . [ RightBrace LeftParen Comma Colon ]
valueFromObject -> referencedObjects Dot fieldName . [ RightBrace Comma ]
valueSetFromObjects -> referencedObjects Dot fieldName . [ RightBrace LeftParen Comma Colon ]
## Transitions:
## Reductions:
-- On RightBrace reduce production valueFromObject -> referencedObjects Dot fieldName
-- On LeftParen reduce production valueSetFromObjects -> referencedObjects Dot fieldName
-- On Comma reduce production valueFromObject -> referencedObjects Dot fieldName
-- On Colon reduce production valueSetFromObjects -> referencedObjects Dot fieldName

State 590:
## Known stack suffix:
## object_x
## LR(1) items:
setting -> object_x . [ RightBrace Comma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production setting -> object_x

State 591:
## Known stack suffix:
## objectSet
## LR(1) items:
setting -> objectSet . [ RightBrace Comma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production setting -> objectSet

State 592:
## Known stack suffix:
## LeftParen elementSetSpec
## LR(1) items:
elements -> LeftParen elementSetSpec . RightParen [ UNION RightParen RightBrace Middle INTERSECTION EXCEPT Comma Circumflex Bang ]
## Transitions:
-- On RightParen shift to state 593
## Reductions:

State 593:
## Known stack suffix:
## LeftParen elementSetSpec RightParen
## LR(1) items:
elements -> LeftParen elementSetSpec RightParen . [ UNION RightParen RightBrace Middle INTERSECTION EXCEPT Comma Circumflex Bang ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production elements -> LeftParen elementSetSpec RightParen

State 594:
## Known stack suffix:
## LeftBrace
## LR(1) items:
bitStringValue -> LeftBrace . identifierList RightBrace [ UNION RightParen Middle LessThan INTERSECTION EXCEPT DoubleDot Comma Circumflex Bang ]
bitStringValue -> LeftBrace . RightBrace [ UNION RightParen Middle LessThan INTERSECTION EXCEPT DoubleDot Comma Circumflex Bang ]
characterStringList -> LeftBrace . charSyms RightBrace [ UNION RightParen Middle LessThan INTERSECTION EXCEPT DoubleDot Comma Circumflex Bang ]
componentRelationConstraint -> LeftBrace . definedObjectSet RightBrace LeftBrace separated_nonempty_list(Comma,atNotation) RightBrace [ RightParen Bang ]
defaultSyntax -> LeftBrace . loption(separated_nonempty_list(Comma,fieldSetting)) RightBrace [ UNION RightParen Middle INTERSECTION EXCEPT Comma Circumflex Bang ]
objectIdentifierValue -> LeftBrace . objIdComponentsList RightBrace [ UNION RightParen Middle LessThan INTERSECTION EXCEPT DoubleDot Comma Circumflex Bang ]
objectIdentifierValue -> LeftBrace . definedValue objIdComponentsList RightBrace [ UNION RightParen Middle LessThan INTERSECTION EXCEPT DoubleDot Comma Circumflex Bang ]
objectSet -> LeftBrace . objectSetSpec RightBrace [ RightParen Bang ]
quadruple -> LeftBrace . group Comma plane Comma row Comma cell RightBrace [ UNION RightParen Middle LessThan INTERSECTION EXCEPT DoubleDot Comma Circumflex Bang ]
relativeOIDValue -> LeftBrace . relativeOIDComponentsList RightBrace [ UNION RightParen Middle LessThan INTERSECTION EXCEPT DoubleDot Comma Circumflex Bang ]
sequenceOfValue -> LeftBrace . valueList RightBrace [ UNION RightParen Middle LessThan INTERSECTION EXCEPT DoubleDot Comma Circumflex Bang ]
sequenceOfValue -> LeftBrace . namedValueList RightBrace [ UNION RightParen Middle LessThan INTERSECTION EXCEPT DoubleDot Comma Circumflex Bang ]
sequenceOfValue -> LeftBrace . RightBrace [ UNION RightParen Middle LessThan INTERSECTION EXCEPT DoubleDot Comma Circumflex Bang ]
sequenceValue -> LeftBrace . componentValueList RightBrace [ UNION RightParen Middle LessThan INTERSECTION EXCEPT DoubleDot Comma Circumflex Bang ]
sequenceValue -> LeftBrace . RightBrace [ UNION RightParen Middle LessThan INTERSECTION EXCEPT DoubleDot Comma Circumflex Bang ]
setOfValue -> LeftBrace . valueList RightBrace [ UNION RightParen Middle LessThan INTERSECTION EXCEPT DoubleDot Comma Circumflex Bang ]
setOfValue -> LeftBrace . namedValueList RightBrace [ UNION RightParen Middle LessThan INTERSECTION EXCEPT DoubleDot Comma Circumflex Bang ]
setOfValue -> LeftBrace . RightBrace [ UNION RightParen Middle LessThan INTERSECTION EXCEPT DoubleDot Comma Circumflex Bang ]
setValue -> LeftBrace . componentValueList RightBrace [ UNION RightParen Middle LessThan INTERSECTION EXCEPT DoubleDot Comma Circumflex Bang ]
setValue -> LeftBrace . RightBrace [ UNION RightParen Middle LessThan INTERSECTION EXCEPT DoubleDot Comma Circumflex Bang ]
tuple -> LeftBrace . tableColumn Comma tableRow RightBrace [ UNION RightParen Middle LessThan INTERSECTION EXCEPT DoubleDot Comma Circumflex Bang ]
## Transitions:
-- On WITH shift to state 82
-- On VisibleString shift to state 66
-- On VideotexString shift to state 67
-- On UpperField shift to state 225
-- On Upper shift to state 108
-- On UniversalString shift to state 72
-- On UTF8String shift to state 73
-- On UTCTime shift to state 74
-- On TeletexString shift to state 75
-- On TYPE_IDENTIFIER shift to state 76
-- On TRUE shift to state 77
-- On T61String shift to state 78
-- On SIZE shift to state 80
-- On SET shift to state 79
-- On SEQUENCE shift to state 111
-- On RightBrace shift to state 303
-- On RealNumber shift to state 296
-- On RELATIVE_OID shift to state 116
-- On REAL shift to state 117
-- On PrintableString shift to state 118
-- On PLUS_INFINITY shift to state 297
-- On PATTERN shift to state 495
-- On ObjectDescriptor shift to state 119
-- On OCTET shift to state 120
-- On OBJECT shift to state 122
-- On NumericString shift to state 124
-- On Number shift to state 304
-- On NULL shift to state 298
-- On MINUS_INFINITY shift to state 299
-- On MIN shift to state 497
-- On LowerField shift to state 226
-- On Lower shift to state 305
-- On LeftParen shift to state 498
-- On LeftBracket shift to state 129
-- On LeftBrace shift to state 499
-- On ISO646String shift to state 140
-- On INTEGER shift to state 141
-- On INSTANCE shift to state 157
-- On INCLUDES shift to state 503
-- On IA5String shift to state 166
-- On Hyphen shift to state 306
-- On Hstring shift to state 308
-- On GraphicString shift to state 167
-- On GeneralizedTime shift to state 168
-- On GeneralString shift to state 169
-- On FROM shift to state 504
-- On FALSE shift to state 309
-- On Ellipsis shift to state 506
-- On EXTERNAL shift to state 170
-- On ENUMERATED shift to state 171
-- On EMBEDDED shift to state 179
-- On DefinedSyntax shift to state 508
-- On Cstring shift to state 353
-- On CONTAINING shift to state 311
-- On CHOICE shift to state 181
-- On CHARACTER shift to state 184
-- On Bstring shift to state 312
-- On BOOLEAN shift to state 186
-- On BMPString shift to state 187
-- On BIT shift to state 188
-- On ALL shift to state 509
-- On ABSTRACT_SYNTAX shift to state 162
-- On valueSetFromObjects shift to state 202
-- On valueRange shift to state 511
-- On valueList shift to state 354
-- On valueFromObject shift to state 313
-- On value shift to state 567
-- On usefulType shift to state 203
-- On usefulObjectClassReference shift to state 163
-- On unrestrictedCharacterStringValue shift to state 315
-- On unrestrictedCharacterStringType shift to state 204
-- On unions shift to state 549
-- On uElems shift to state 550
-- On type_x shift to state 513
-- On typeWithConstraint shift to state 207
-- On typeFromObject shift to state 208
-- On typeConstraint shift to state 514
-- On tuple shift to state 359
-- On taggedType shift to state 209
-- On tag shift to state 210
-- On tableColumn shift to state 360
-- On subtypeElements shift to state 515
-- On specialRealValue shift to state 320
-- On sizeConstraint shift to state 516
-- On singleValue shift to state 517
-- On simpleDefinedValue shift to state 64
-- On simpleDefinedType shift to state 213
-- On signedNumber shift to state 321
-- On setValue shift to state 322
-- On setType shift to state 215
-- On setOfValue shift to state 323
-- On setOfType shift to state 216
-- On sequenceValue shift to state 324
-- On sequenceType shift to state 217
-- On sequenceOfValue shift to state 325
-- On sequenceOfType shift to state 218
-- On separated_nonempty_list(Comma,fieldSetting) shift to state 500
-- On selectionType shift to state 219
-- On rootElementSetSpec shift to state 595
-- On restrictedCharacterStringValue shift to state 326
-- On restrictedCharacterStringType shift to state 220
-- On relativeOIDValue shift to state 327
-- On relativeOIDType shift to state 221
-- On relativeOIDComponentsList shift to state 365
-- On relativeOIDComponents shift to state 367
-- On referencedValue shift to state 328
-- On referencedType shift to state 222
-- On referencedObjects shift to state 518
-- On realValue shift to state 332
-- On realType shift to state 232
-- On quadruple shift to state 373
-- On primitiveFieldName shift to state 501
-- On permittedAlphabet shift to state 521
-- On patternConstraint shift to state 522
-- On parameterizedValueSetType shift to state 233
-- On parameterizedValue shift to state 135
-- On parameterizedType shift to state 234
-- On parameterizedObjectSet shift to state 523
-- On parameterizedObject shift to state 524
-- On openTypeFieldVal shift to state 334
-- On octetStringValue shift to state 335
-- On octetStringType shift to state 237
-- On object_x shift to state 525
-- On objectSetSpec shift to state 573
-- On objectSetFromObjects shift to state 526
-- On objectSetElements shift to state 527
-- On objectIdentifierValue shift to state 336
-- On objectIdentifierType shift to state 238
-- On objectFromObject shift to state 528
-- On objectDefn shift to state 529
-- On objectClassFieldValue shift to state 337
-- On objectClassFieldType shift to state 239
-- On objIdComponentsList shift to state 374
-- On objIdComponents shift to state 376
-- On numericRealValue shift to state 338
-- On numberForm shift to state 382
-- On nullValue shift to state 339
-- On nullType shift to state 240
-- On namedValueList shift to state 383
-- On namedValue shift to state 388
-- On nameForm shift to state 379
-- On nameAndNumberForm shift to state 389
-- On lowerEndValue shift to state 530
-- On lowerEndPoint shift to state 532
-- On loption(separated_nonempty_list(Comma,fieldSetting)) shift to state 575
-- On intersections shift to state 564
-- On intersectionElements shift to state 555
-- On integerValue shift to state 340
-- On integerType shift to state 241
-- On instanceOfType shift to state 242
-- On innerTypeConstraints shift to state 540
-- On includes shift to state 541
-- On identifierList shift to state 390
-- On iElems shift to state 556
-- On group shift to state 394
-- On fixedTypeFieldVal shift to state 341
-- On fieldSetting shift to state 577
-- On externalValueReference shift to state 136
-- On externalValue shift to state 342
-- On externalTypeReference shift to state 243
-- On externalType shift to state 244
-- On externalObjectSetReference shift to state 245
-- On externalObjectReference shift to state 246
-- On externalObjectClassReference shift to state 164
-- On enumeratedValue shift to state 343
-- On enumeratedType shift to state 247
-- On embeddedPDVValue shift to state 344
-- On embeddedPDVType shift to state 248
-- On elems shift to state 561
-- On elements shift to state 563
-- On elementSetSpec shift to state 582
-- On definedValue shift to state 405
-- On definedType shift to state 249
-- On definedObjectSet shift to state 600
-- On definedObjectClass shift to state 252
-- On definedObject shift to state 545
-- On defaultSyntax shift to state 546
-- On containedSubtype shift to state 547
-- On constrainedType shift to state 257
-- On componentValueList shift to state 408
-- On choiceValue shift to state 346
-- On choiceType shift to state 258
-- On charsDefn shift to state 412
-- On characterStringValue shift to state 347
-- On characterStringType shift to state 259
-- On characterStringList shift to state 348
-- On charSyms shift to state 413
-- On builtinValue shift to state 349
-- On builtinType shift to state 260
-- On booleanValue shift to state 350
-- On booleanType shift to state 261
-- On bitStringValue shift to state 351
-- On bitStringType shift to state 262
## Reductions:

State 595:
## Known stack suffix:
## rootElementSetSpec
## LR(1) items:
objectSetSpec -> rootElementSetSpec . [ RightBrace ]
objectSetSpec -> rootElementSetSpec . Comma Ellipsis [ RightBrace ]
objectSetSpec -> rootElementSetSpec . Comma Ellipsis Comma additionalElementSetSpec [ RightBrace ]
## Transitions:
-- On Comma shift to state 596
## Reductions:
-- On RightBrace reduce production objectSetSpec -> rootElementSetSpec

State 596:
## Known stack suffix:
## rootElementSetSpec Comma
## LR(1) items:
objectSetSpec -> rootElementSetSpec Comma . Ellipsis [ RightBrace ]
objectSetSpec -> rootElementSetSpec Comma . Ellipsis Comma additionalElementSetSpec [ RightBrace ]
## Transitions:
-- On Ellipsis shift to state 597
## Reductions:

State 597:
## Known stack suffix:
## rootElementSetSpec Comma Ellipsis
## LR(1) items:
objectSetSpec -> rootElementSetSpec Comma Ellipsis . [ RightBrace ]
objectSetSpec -> rootElementSetSpec Comma Ellipsis . Comma additionalElementSetSpec [ RightBrace ]
## Transitions:
-- On Comma shift to state 598
## Reductions:
-- On RightBrace reduce production objectSetSpec -> rootElementSetSpec Comma Ellipsis

State 598:
## Known stack suffix:
## rootElementSetSpec Comma Ellipsis Comma
## LR(1) items:
objectSetSpec -> rootElementSetSpec Comma Ellipsis Comma . additionalElementSetSpec [ RightBrace ]
## Transitions:
-- On WITH shift to state 82
-- On VisibleString shift to state 66
-- On VideotexString shift to state 67
-- On Upper shift to state 108
-- On UniversalString shift to state 72
-- On UTF8String shift to state 73
-- On UTCTime shift to state 74
-- On TeletexString shift to state 75
-- On TYPE_IDENTIFIER shift to state 76
-- On TRUE shift to state 77
-- On T61String shift to state 78
-- On SIZE shift to state 80
-- On SET shift to state 79
-- On SEQUENCE shift to state 111
-- On RealNumber shift to state 296
-- On RELATIVE_OID shift to state 116
-- On REAL shift to state 117
-- On PrintableString shift to state 118
-- On PLUS_INFINITY shift to state 297
-- On PATTERN shift to state 495
-- On ObjectDescriptor shift to state 119
-- On OCTET shift to state 120
-- On OBJECT shift to state 122
-- On NumericString shift to state 124
-- On Number shift to state 145
-- On NULL shift to state 298
-- On MINUS_INFINITY shift to state 299
-- On MIN shift to state 497
-- On Lower shift to state 300
-- On LeftParen shift to state 498
-- On LeftBracket shift to state 129
-- On LeftBrace shift to state 499
-- On ISO646String shift to state 140
-- On INTEGER shift to state 141
-- On INSTANCE shift to state 157
-- On INCLUDES shift to state 503
-- On IA5String shift to state 166
-- On Hyphen shift to state 306
-- On Hstring shift to state 308
-- On GraphicString shift to state 167
-- On GeneralizedTime shift to state 168
-- On GeneralString shift to state 169
-- On FROM shift to state 504
-- On FALSE shift to state 309
-- On EXTERNAL shift to state 170
-- On ENUMERATED shift to state 171
-- On EMBEDDED shift to state 179
-- On DefinedSyntax shift to state 508
-- On Cstring shift to state 310
-- On CONTAINING shift to state 311
-- On CHOICE shift to state 181
-- On CHARACTER shift to state 184
-- On Bstring shift to state 312
-- On BOOLEAN shift to state 186
-- On BMPString shift to state 187
-- On BIT shift to state 188
-- On ALL shift to state 509
-- On ABSTRACT_SYNTAX shift to state 162
-- On valueSetFromObjects shift to state 202
-- On valueRange shift to state 511
-- On valueFromObject shift to state 313
-- On value shift to state 512
-- On usefulType shift to state 203
-- On usefulObjectClassReference shift to state 163
-- On unrestrictedCharacterStringValue shift to state 315
-- On unrestrictedCharacterStringType shift to state 204
-- On unions shift to state 549
-- On uElems shift to state 550
-- On type_x shift to state 513
-- On typeWithConstraint shift to state 207
-- On typeFromObject shift to state 208
-- On typeConstraint shift to state 514
-- On tuple shift to state 319
-- On taggedType shift to state 209
-- On tag shift to state 210
-- On subtypeElements shift to state 515
-- On specialRealValue shift to state 320
-- On sizeConstraint shift to state 516
-- On singleValue shift to state 517
-- On simpleDefinedValue shift to state 64
-- On simpleDefinedType shift to state 213
-- On signedNumber shift to state 321
-- On setValue shift to state 322
-- On setType shift to state 215
-- On setOfValue shift to state 323
-- On setOfType shift to state 216
-- On sequenceValue shift to state 324
-- On sequenceType shift to state 217
-- On sequenceOfValue shift to state 325
-- On sequenceOfType shift to state 218
-- On selectionType shift to state 219
-- On restrictedCharacterStringValue shift to state 326
-- On restrictedCharacterStringType shift to state 220
-- On relativeOIDValue shift to state 327
-- On relativeOIDType shift to state 221
-- On referencedValue shift to state 328
-- On referencedType shift to state 222
-- On referencedObjects shift to state 518
-- On realValue shift to state 332
-- On realType shift to state 232
-- On quadruple shift to state 333
-- On permittedAlphabet shift to state 521
-- On patternConstraint shift to state 522
-- On parameterizedValueSetType shift to state 233
-- On parameterizedValue shift to state 135
-- On parameterizedType shift to state 234
-- On parameterizedObjectSet shift to state 523
-- On parameterizedObject shift to state 524
-- On openTypeFieldVal shift to state 334
-- On octetStringValue shift to state 335
-- On octetStringType shift to state 237
-- On object_x shift to state 525
-- On objectSetFromObjects shift to state 526
-- On objectSetElements shift to state 527
-- On objectIdentifierValue shift to state 336
-- On objectIdentifierType shift to state 238
-- On objectFromObject shift to state 528
-- On objectDefn shift to state 529
-- On objectClassFieldValue shift to state 337
-- On objectClassFieldType shift to state 239
-- On numericRealValue shift to state 338
-- On nullValue shift to state 339
-- On nullType shift to state 240
-- On lowerEndValue shift to state 530
-- On lowerEndPoint shift to state 532
-- On intersections shift to state 564
-- On intersectionElements shift to state 555
-- On integerValue shift to state 340
-- On integerType shift to state 241
-- On instanceOfType shift to state 242
-- On innerTypeConstraints shift to state 540
-- On includes shift to state 541
-- On iElems shift to state 556
-- On fixedTypeFieldVal shift to state 341
-- On externalValueReference shift to state 136
-- On externalValue shift to state 342
-- On externalTypeReference shift to state 243
-- On externalType shift to state 244
-- On externalObjectSetReference shift to state 245
-- On externalObjectReference shift to state 246
-- On externalObjectClassReference shift to state 164
-- On enumeratedValue shift to state 343
-- On enumeratedType shift to state 247
-- On embeddedPDVValue shift to state 344
-- On embeddedPDVType shift to state 248
-- On elems shift to state 561
-- On elements shift to state 563
-- On elementSetSpec shift to state 565
-- On definedValue shift to state 345
-- On definedType shift to state 249
-- On definedObjectSet shift to state 544
-- On definedObjectClass shift to state 252
-- On definedObject shift to state 545
-- On defaultSyntax shift to state 546
-- On containedSubtype shift to state 547
-- On constrainedType shift to state 257
-- On choiceValue shift to state 346
-- On choiceType shift to state 258
-- On characterStringValue shift to state 347
-- On characterStringType shift to state 259
-- On characterStringList shift to state 348
-- On builtinValue shift to state 349
-- On builtinType shift to state 260
-- On booleanValue shift to state 350
-- On booleanType shift to state 261
-- On bitStringValue shift to state 351
-- On bitStringType shift to state 262
-- On additionalElementSetSpec shift to state 599
## Reductions:

State 599:
## Known stack suffix:
## rootElementSetSpec Comma Ellipsis Comma additionalElementSetSpec
## LR(1) items:
objectSetSpec -> rootElementSetSpec Comma Ellipsis Comma additionalElementSetSpec . [ RightBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production objectSetSpec -> rootElementSetSpec Comma Ellipsis Comma additionalElementSetSpec

State 600:
## Known stack suffix:
## LeftBrace definedObjectSet
## LR(1) items:
componentRelationConstraint -> LeftBrace definedObjectSet . RightBrace LeftBrace separated_nonempty_list(Comma,atNotation) RightBrace [ RightParen Bang ]
objectSetElements -> definedObjectSet . [ UNION RightBrace Middle INTERSECTION EXCEPT Comma Circumflex ]
parameterizedObjectSet -> definedObjectSet . actualParameterList [ UNION RightBrace Middle INTERSECTION EXCEPT Dot Comma Circumflex ]
referencedObjects -> definedObjectSet . [ Dot ]
## Transitions:
-- On RightBrace shift to state 601
-- On LeftBrace shift to state 65
-- On actualParameterList shift to state 251
## Reductions:
-- On UNION reduce production objectSetElements -> definedObjectSet
-- On Middle reduce production objectSetElements -> definedObjectSet
-- On INTERSECTION reduce production objectSetElements -> definedObjectSet
-- On EXCEPT reduce production objectSetElements -> definedObjectSet
-- On Dot reduce production referencedObjects -> definedObjectSet
-- On Comma reduce production objectSetElements -> definedObjectSet
-- On Circumflex reduce production objectSetElements -> definedObjectSet

State 601:
## Known stack suffix:
## LeftBrace definedObjectSet RightBrace
## LR(1) items:
componentRelationConstraint -> LeftBrace definedObjectSet RightBrace . LeftBrace separated_nonempty_list(Comma,atNotation) RightBrace [ RightParen Bang ]
## Transitions:
-- On LeftBrace shift to state 602
## Reductions:

State 602:
## Known stack suffix:
## LeftBrace definedObjectSet RightBrace LeftBrace
## LR(1) items:
componentRelationConstraint -> LeftBrace definedObjectSet RightBrace LeftBrace . separated_nonempty_list(Comma,atNotation) RightBrace [ RightParen Bang ]
## Transitions:
-- On AtDot shift to state 603
-- On At shift to state 612
-- On separated_nonempty_list(Comma,atNotation) shift to state 614
-- On atNotation shift to state 616
## Reductions:

State 603:
## Known stack suffix:
## AtDot
## LR(1) items:
atNotation -> AtDot . level componentIdList [ RightBrace Comma ]
## Transitions:
-- On Dot shift to state 604
-- On level shift to state 606
## Reductions:
-- On Lower reduce production level ->

State 604:
## Known stack suffix:
## Dot
## LR(1) items:
level -> Dot . level [ Lower ]
## Transitions:
-- On Dot shift to state 604
-- On level shift to state 605
## Reductions:
-- On Lower reduce production level ->

State 605:
## Known stack suffix:
## Dot level
## LR(1) items:
level -> Dot level . [ Lower ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production level -> Dot level

State 606:
## Known stack suffix:
## AtDot level
## LR(1) items:
atNotation -> AtDot level . componentIdList [ RightBrace Comma ]
## Transitions:
-- On Lower shift to state 607
-- On separated_nonempty_list(Dot,Lower) shift to state 610
-- On componentIdList shift to state 611
## Reductions:

State 607:
## Known stack suffix:
## Lower
## LR(1) items:
separated_nonempty_list(Dot,Lower) -> Lower . [ RightBrace Comma ]
separated_nonempty_list(Dot,Lower) -> Lower . Dot separated_nonempty_list(Dot,Lower) [ RightBrace Comma ]
## Transitions:
-- On Dot shift to state 608
## Reductions:
-- On RightBrace reduce production separated_nonempty_list(Dot,Lower) -> Lower
-- On Comma reduce production separated_nonempty_list(Dot,Lower) -> Lower

State 608:
## Known stack suffix:
## Lower Dot
## LR(1) items:
separated_nonempty_list(Dot,Lower) -> Lower Dot . separated_nonempty_list(Dot,Lower) [ RightBrace Comma ]
## Transitions:
-- On Lower shift to state 607
-- On separated_nonempty_list(Dot,Lower) shift to state 609
## Reductions:

State 609:
## Known stack suffix:
## Lower Dot separated_nonempty_list(Dot,Lower)
## LR(1) items:
separated_nonempty_list(Dot,Lower) -> Lower Dot separated_nonempty_list(Dot,Lower) . [ RightBrace Comma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production separated_nonempty_list(Dot,Lower) -> Lower Dot separated_nonempty_list(Dot,Lower)

State 610:
## Known stack suffix:
## separated_nonempty_list(Dot,Lower)
## LR(1) items:
componentIdList -> separated_nonempty_list(Dot,Lower) . [ RightBrace Comma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production componentIdList -> separated_nonempty_list(Dot,Lower)

State 611:
## Known stack suffix:
## AtDot level componentIdList
## LR(1) items:
atNotation -> AtDot level componentIdList . [ RightBrace Comma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production atNotation -> AtDot level componentIdList

State 612:
## Known stack suffix:
## At
## LR(1) items:
atNotation -> At . componentIdList [ RightBrace Comma ]
## Transitions:
-- On Lower shift to state 607
-- On separated_nonempty_list(Dot,Lower) shift to state 610
-- On componentIdList shift to state 613
## Reductions:

State 613:
## Known stack suffix:
## At componentIdList
## LR(1) items:
atNotation -> At componentIdList . [ RightBrace Comma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production atNotation -> At componentIdList

State 614:
## Known stack suffix:
## LeftBrace definedObjectSet RightBrace LeftBrace separated_nonempty_list(Comma,atNotation)
## LR(1) items:
componentRelationConstraint -> LeftBrace definedObjectSet RightBrace LeftBrace separated_nonempty_list(Comma,atNotation) . RightBrace [ RightParen Bang ]
## Transitions:
-- On RightBrace shift to state 615
## Reductions:

State 615:
## Known stack suffix:
## LeftBrace definedObjectSet RightBrace LeftBrace separated_nonempty_list(Comma,atNotation) RightBrace
## LR(1) items:
componentRelationConstraint -> LeftBrace definedObjectSet RightBrace LeftBrace separated_nonempty_list(Comma,atNotation) RightBrace . [ RightParen Bang ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production componentRelationConstraint -> LeftBrace definedObjectSet RightBrace LeftBrace separated_nonempty_list(Comma,atNotation) RightBrace

State 616:
## Known stack suffix:
## atNotation
## LR(1) items:
separated_nonempty_list(Comma,atNotation) -> atNotation . [ RightBrace ]
separated_nonempty_list(Comma,atNotation) -> atNotation . Comma separated_nonempty_list(Comma,atNotation) [ RightBrace ]
## Transitions:
-- On Comma shift to state 617
## Reductions:
-- On RightBrace reduce production separated_nonempty_list(Comma,atNotation) -> atNotation

State 617:
## Known stack suffix:
## atNotation Comma
## LR(1) items:
separated_nonempty_list(Comma,atNotation) -> atNotation Comma . separated_nonempty_list(Comma,atNotation) [ RightBrace ]
## Transitions:
-- On AtDot shift to state 603
-- On At shift to state 612
-- On separated_nonempty_list(Comma,atNotation) shift to state 618
-- On atNotation shift to state 616
## Reductions:

State 618:
## Known stack suffix:
## atNotation Comma separated_nonempty_list(Comma,atNotation)
## LR(1) items:
separated_nonempty_list(Comma,atNotation) -> atNotation Comma separated_nonempty_list(Comma,atNotation) . [ RightBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production separated_nonempty_list(Comma,atNotation) -> atNotation Comma separated_nonempty_list(Comma,atNotation)

State 619:
## Known stack suffix:
## ENCODED
## LR(1) items:
contentsConstraint -> ENCODED . BY value [ RightParen Bang ]
## Transitions:
-- On BY shift to state 620
## Reductions:

State 620:
## Known stack suffix:
## ENCODED BY
## LR(1) items:
contentsConstraint -> ENCODED BY . value [ RightParen Bang ]
## Transitions:
-- On VisibleString shift to state 66
-- On VideotexString shift to state 67
-- On Upper shift to state 108
-- On UniversalString shift to state 72
-- On UTF8String shift to state 73
-- On UTCTime shift to state 74
-- On TeletexString shift to state 75
-- On TYPE_IDENTIFIER shift to state 76
-- On TRUE shift to state 77
-- On T61String shift to state 78
-- On SET shift to state 79
-- On SEQUENCE shift to state 111
-- On RealNumber shift to state 296
-- On RELATIVE_OID shift to state 116
-- On REAL shift to state 117
-- On PrintableString shift to state 118
-- On PLUS_INFINITY shift to state 297
-- On ObjectDescriptor shift to state 119
-- On OCTET shift to state 120
-- On OBJECT shift to state 122
-- On NumericString shift to state 124
-- On Number shift to state 145
-- On NULL shift to state 298
-- On MINUS_INFINITY shift to state 299
-- On Lower shift to state 300
-- On LeftBracket shift to state 129
-- On LeftBrace shift to state 302
-- On ISO646String shift to state 140
-- On INTEGER shift to state 141
-- On INSTANCE shift to state 157
-- On IA5String shift to state 166
-- On Hyphen shift to state 306
-- On Hstring shift to state 308
-- On GraphicString shift to state 167
-- On GeneralizedTime shift to state 168
-- On GeneralString shift to state 169
-- On FALSE shift to state 309
-- On EXTERNAL shift to state 170
-- On ENUMERATED shift to state 171
-- On EMBEDDED shift to state 179
-- On Cstring shift to state 310
-- On CONTAINING shift to state 311
-- On CHOICE shift to state 181
-- On CHARACTER shift to state 184
-- On Bstring shift to state 312
-- On BOOLEAN shift to state 186
-- On BMPString shift to state 187
-- On BIT shift to state 188
-- On ABSTRACT_SYNTAX shift to state 162
-- On valueSetFromObjects shift to state 202
-- On valueFromObject shift to state 313
-- On value shift to state 621
-- On usefulType shift to state 203
-- On usefulObjectClassReference shift to state 163
-- On unrestrictedCharacterStringValue shift to state 315
-- On unrestrictedCharacterStringType shift to state 204
-- On type_x shift to state 316
-- On typeWithConstraint shift to state 207
-- On typeFromObject shift to state 208
-- On tuple shift to state 319
-- On taggedType shift to state 209
-- On tag shift to state 210
-- On specialRealValue shift to state 320
-- On simpleDefinedValue shift to state 64
-- On simpleDefinedType shift to state 213
-- On signedNumber shift to state 321
-- On setValue shift to state 322
-- On setType shift to state 215
-- On setOfValue shift to state 323
-- On setOfType shift to state 216
-- On sequenceValue shift to state 324
-- On sequenceType shift to state 217
-- On sequenceOfValue shift to state 325
-- On sequenceOfType shift to state 218
-- On selectionType shift to state 219
-- On restrictedCharacterStringValue shift to state 326
-- On restrictedCharacterStringType shift to state 220
-- On relativeOIDValue shift to state 327
-- On relativeOIDType shift to state 221
-- On referencedValue shift to state 328
-- On referencedType shift to state 222
-- On referencedObjects shift to state 329
-- On realValue shift to state 332
-- On realType shift to state 232
-- On quadruple shift to state 333
-- On parameterizedValueSetType shift to state 233
-- On parameterizedValue shift to state 135
-- On parameterizedType shift to state 234
-- On parameterizedObjectSet shift to state 235
-- On parameterizedObject shift to state 236
-- On openTypeFieldVal shift to state 334
-- On octetStringValue shift to state 335
-- On octetStringType shift to state 237
-- On objectIdentifierValue shift to state 336
-- On objectIdentifierType shift to state 238
-- On objectClassFieldValue shift to state 337
-- On objectClassFieldType shift to state 239
-- On numericRealValue shift to state 338
-- On nullValue shift to state 339
-- On nullType shift to state 240
-- On integerValue shift to state 340
-- On integerType shift to state 241
-- On instanceOfType shift to state 242
-- On fixedTypeFieldVal shift to state 341
-- On externalValueReference shift to state 136
-- On externalValue shift to state 342
-- On externalTypeReference shift to state 243
-- On externalType shift to state 244
-- On externalObjectSetReference shift to state 245
-- On externalObjectReference shift to state 246
-- On externalObjectClassReference shift to state 164
-- On enumeratedValue shift to state 343
-- On enumeratedType shift to state 247
-- On embeddedPDVValue shift to state 344
-- On embeddedPDVType shift to state 248
-- On definedValue shift to state 345
-- On definedType shift to state 249
-- On definedObjectSet shift to state 250
-- On definedObjectClass shift to state 252
-- On definedObject shift to state 255
-- On constrainedType shift to state 257
-- On choiceValue shift to state 346
-- On choiceType shift to state 258
-- On characterStringValue shift to state 347
-- On characterStringType shift to state 259
-- On characterStringList shift to state 348
-- On builtinValue shift to state 349
-- On builtinType shift to state 260
-- On booleanValue shift to state 350
-- On booleanType shift to state 261
-- On bitStringValue shift to state 351
-- On bitStringType shift to state 262
## Reductions:

State 621:
## Known stack suffix:
## ENCODED BY value
## LR(1) items:
contentsConstraint -> ENCODED BY value . [ RightParen Bang ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production contentsConstraint -> ENCODED BY value

State 622:
## Known stack suffix:
## CONTAINING
## LR(1) items:
bitStringValue -> CONTAINING . value [ UNION RightParen Middle LessThan INTERSECTION EXCEPT DoubleDot Comma Circumflex Bang ]
contentsConstraint -> CONTAINING . type_x [ RightParen Bang ]
contentsConstraint -> CONTAINING . type_x ENCODED BY value [ RightParen Bang ]
octetStringValue -> CONTAINING . value [ UNION RightParen Middle LessThan INTERSECTION EXCEPT DoubleDot Comma Circumflex Bang ]
## Transitions:
-- On VisibleString shift to state 66
-- On VideotexString shift to state 67
-- On Upper shift to state 108
-- On UniversalString shift to state 72
-- On UTF8String shift to state 73
-- On UTCTime shift to state 74
-- On TeletexString shift to state 75
-- On TYPE_IDENTIFIER shift to state 76
-- On TRUE shift to state 77
-- On T61String shift to state 78
-- On SET shift to state 79
-- On SEQUENCE shift to state 111
-- On RealNumber shift to state 296
-- On RELATIVE_OID shift to state 116
-- On REAL shift to state 117
-- On PrintableString shift to state 118
-- On PLUS_INFINITY shift to state 297
-- On ObjectDescriptor shift to state 119
-- On OCTET shift to state 120
-- On OBJECT shift to state 122
-- On NumericString shift to state 124
-- On Number shift to state 145
-- On NULL shift to state 298
-- On MINUS_INFINITY shift to state 299
-- On Lower shift to state 300
-- On LeftBracket shift to state 129
-- On LeftBrace shift to state 302
-- On ISO646String shift to state 140
-- On INTEGER shift to state 141
-- On INSTANCE shift to state 157
-- On IA5String shift to state 166
-- On Hyphen shift to state 306
-- On Hstring shift to state 308
-- On GraphicString shift to state 167
-- On GeneralizedTime shift to state 168
-- On GeneralString shift to state 169
-- On FALSE shift to state 309
-- On EXTERNAL shift to state 170
-- On ENUMERATED shift to state 171
-- On EMBEDDED shift to state 179
-- On Cstring shift to state 310
-- On CONTAINING shift to state 311
-- On CHOICE shift to state 181
-- On CHARACTER shift to state 184
-- On Bstring shift to state 312
-- On BOOLEAN shift to state 186
-- On BMPString shift to state 187
-- On BIT shift to state 188
-- On ABSTRACT_SYNTAX shift to state 162
-- On valueSetFromObjects shift to state 202
-- On valueFromObject shift to state 313
-- On value shift to state 314
-- On usefulType shift to state 203
-- On usefulObjectClassReference shift to state 163
-- On unrestrictedCharacterStringValue shift to state 315
-- On unrestrictedCharacterStringType shift to state 204
-- On type_x shift to state 623
-- On typeWithConstraint shift to state 207
-- On typeFromObject shift to state 208
-- On tuple shift to state 319
-- On taggedType shift to state 209
-- On tag shift to state 210
-- On specialRealValue shift to state 320
-- On simpleDefinedValue shift to state 64
-- On simpleDefinedType shift to state 213
-- On signedNumber shift to state 321
-- On setValue shift to state 322
-- On setType shift to state 215
-- On setOfValue shift to state 323
-- On setOfType shift to state 216
-- On sequenceValue shift to state 324
-- On sequenceType shift to state 217
-- On sequenceOfValue shift to state 325
-- On sequenceOfType shift to state 218
-- On selectionType shift to state 219
-- On restrictedCharacterStringValue shift to state 326
-- On restrictedCharacterStringType shift to state 220
-- On relativeOIDValue shift to state 327
-- On relativeOIDType shift to state 221
-- On referencedValue shift to state 328
-- On referencedType shift to state 222
-- On referencedObjects shift to state 329
-- On realValue shift to state 332
-- On realType shift to state 232
-- On quadruple shift to state 333
-- On parameterizedValueSetType shift to state 233
-- On parameterizedValue shift to state 135
-- On parameterizedType shift to state 234
-- On parameterizedObjectSet shift to state 235
-- On parameterizedObject shift to state 236
-- On openTypeFieldVal shift to state 334
-- On octetStringValue shift to state 335
-- On octetStringType shift to state 237
-- On objectIdentifierValue shift to state 336
-- On objectIdentifierType shift to state 238
-- On objectClassFieldValue shift to state 337
-- On objectClassFieldType shift to state 239
-- On numericRealValue shift to state 338
-- On nullValue shift to state 339
-- On nullType shift to state 240
-- On integerValue shift to state 340
-- On integerType shift to state 241
-- On instanceOfType shift to state 242
-- On fixedTypeFieldVal shift to state 341
-- On externalValueReference shift to state 136
-- On externalValue shift to state 342
-- On externalTypeReference shift to state 243
-- On externalType shift to state 244
-- On externalObjectSetReference shift to state 245
-- On externalObjectReference shift to state 246
-- On externalObjectClassReference shift to state 164
-- On enumeratedValue shift to state 343
-- On enumeratedType shift to state 247
-- On embeddedPDVValue shift to state 344
-- On embeddedPDVType shift to state 248
-- On definedValue shift to state 345
-- On definedType shift to state 249
-- On definedObjectSet shift to state 250
-- On definedObjectClass shift to state 252
-- On definedObject shift to state 255
-- On constrainedType shift to state 257
-- On choiceValue shift to state 346
-- On choiceType shift to state 258
-- On characterStringValue shift to state 347
-- On characterStringType shift to state 259
-- On characterStringList shift to state 348
-- On builtinValue shift to state 349
-- On builtinType shift to state 260
-- On booleanValue shift to state 350
-- On booleanType shift to state 261
-- On bitStringValue shift to state 351
-- On bitStringType shift to state 262
## Reductions:

State 623:
## Known stack suffix:
## CONTAINING type_x
## LR(1) items:
constrainedType -> type_x . constraint_x [ RightParen LeftParen ENCODED Colon Bang ]
contentsConstraint -> CONTAINING type_x . [ RightParen Bang ]
contentsConstraint -> CONTAINING type_x . ENCODED BY value [ RightParen Bang ]
openTypeFieldVal -> type_x . Colon value [ UNION RightParen Middle LessThan INTERSECTION EXCEPT DoubleDot Comma Circumflex Bang ]
## Transitions:
-- On LeftParen shift to state 81
-- On ENCODED shift to state 624
-- On Colon shift to state 317
-- On constraint_x shift to state 206
## Reductions:
-- On RightParen reduce production contentsConstraint -> CONTAINING type_x
-- On Bang reduce production contentsConstraint -> CONTAINING type_x

State 624:
## Known stack suffix:
## CONTAINING type_x ENCODED
## LR(1) items:
contentsConstraint -> CONTAINING type_x ENCODED . BY value [ RightParen Bang ]
## Transitions:
-- On BY shift to state 625
## Reductions:

State 625:
## Known stack suffix:
## CONTAINING type_x ENCODED BY
## LR(1) items:
contentsConstraint -> CONTAINING type_x ENCODED BY . value [ RightParen Bang ]
## Transitions:
-- On VisibleString shift to state 66
-- On VideotexString shift to state 67
-- On Upper shift to state 108
-- On UniversalString shift to state 72
-- On UTF8String shift to state 73
-- On UTCTime shift to state 74
-- On TeletexString shift to state 75
-- On TYPE_IDENTIFIER shift to state 76
-- On TRUE shift to state 77
-- On T61String shift to state 78
-- On SET shift to state 79
-- On SEQUENCE shift to state 111
-- On RealNumber shift to state 296
-- On RELATIVE_OID shift to state 116
-- On REAL shift to state 117
-- On PrintableString shift to state 118
-- On PLUS_INFINITY shift to state 297
-- On ObjectDescriptor shift to state 119
-- On OCTET shift to state 120
-- On OBJECT shift to state 122
-- On NumericString shift to state 124
-- On Number shift to state 145
-- On NULL shift to state 298
-- On MINUS_INFINITY shift to state 299
-- On Lower shift to state 300
-- On LeftBracket shift to state 129
-- On LeftBrace shift to state 302
-- On ISO646String shift to state 140
-- On INTEGER shift to state 141
-- On INSTANCE shift to state 157
-- On IA5String shift to state 166
-- On Hyphen shift to state 306
-- On Hstring shift to state 308
-- On GraphicString shift to state 167
-- On GeneralizedTime shift to state 168
-- On GeneralString shift to state 169
-- On FALSE shift to state 309
-- On EXTERNAL shift to state 170
-- On ENUMERATED shift to state 171
-- On EMBEDDED shift to state 179
-- On Cstring shift to state 310
-- On CONTAINING shift to state 311
-- On CHOICE shift to state 181
-- On CHARACTER shift to state 184
-- On Bstring shift to state 312
-- On BOOLEAN shift to state 186
-- On BMPString shift to state 187
-- On BIT shift to state 188
-- On ABSTRACT_SYNTAX shift to state 162
-- On valueSetFromObjects shift to state 202
-- On valueFromObject shift to state 313
-- On value shift to state 626
-- On usefulType shift to state 203
-- On usefulObjectClassReference shift to state 163
-- On unrestrictedCharacterStringValue shift to state 315
-- On unrestrictedCharacterStringType shift to state 204
-- On type_x shift to state 316
-- On typeWithConstraint shift to state 207
-- On typeFromObject shift to state 208
-- On tuple shift to state 319
-- On taggedType shift to state 209
-- On tag shift to state 210
-- On specialRealValue shift to state 320
-- On simpleDefinedValue shift to state 64
-- On simpleDefinedType shift to state 213
-- On signedNumber shift to state 321
-- On setValue shift to state 322
-- On setType shift to state 215
-- On setOfValue shift to state 323
-- On setOfType shift to state 216
-- On sequenceValue shift to state 324
-- On sequenceType shift to state 217
-- On sequenceOfValue shift to state 325
-- On sequenceOfType shift to state 218
-- On selectionType shift to state 219
-- On restrictedCharacterStringValue shift to state 326
-- On restrictedCharacterStringType shift to state 220
-- On relativeOIDValue shift to state 327
-- On relativeOIDType shift to state 221
-- On referencedValue shift to state 328
-- On referencedType shift to state 222
-- On referencedObjects shift to state 329
-- On realValue shift to state 332
-- On realType shift to state 232
-- On quadruple shift to state 333
-- On parameterizedValueSetType shift to state 233
-- On parameterizedValue shift to state 135
-- On parameterizedType shift to state 234
-- On parameterizedObjectSet shift to state 235
-- On parameterizedObject shift to state 236
-- On openTypeFieldVal shift to state 334
-- On octetStringValue shift to state 335
-- On octetStringType shift to state 237
-- On objectIdentifierValue shift to state 336
-- On objectIdentifierType shift to state 238
-- On objectClassFieldValue shift to state 337
-- On objectClassFieldType shift to state 239
-- On numericRealValue shift to state 338
-- On nullValue shift to state 339
-- On nullType shift to state 240
-- On integerValue shift to state 340
-- On integerType shift to state 241
-- On instanceOfType shift to state 242
-- On fixedTypeFieldVal shift to state 341
-- On externalValueReference shift to state 136
-- On externalValue shift to state 342
-- On externalTypeReference shift to state 243
-- On externalType shift to state 244
-- On externalObjectSetReference shift to state 245
-- On externalObjectReference shift to state 246
-- On externalObjectClassReference shift to state 164
-- On enumeratedValue shift to state 343
-- On enumeratedType shift to state 247
-- On embeddedPDVValue shift to state 344
-- On embeddedPDVType shift to state 248
-- On definedValue shift to state 345
-- On definedType shift to state 249
-- On definedObjectSet shift to state 250
-- On definedObjectClass shift to state 252
-- On definedObject shift to state 255
-- On constrainedType shift to state 257
-- On choiceValue shift to state 346
-- On choiceType shift to state 258
-- On characterStringValue shift to state 347
-- On characterStringType shift to state 259
-- On characterStringList shift to state 348
-- On builtinValue shift to state 349
-- On builtinType shift to state 260
-- On booleanValue shift to state 350
-- On booleanType shift to state 261
-- On bitStringValue shift to state 351
-- On bitStringType shift to state 262
## Reductions:

State 626:
## Known stack suffix:
## CONTAINING type_x ENCODED BY value
## LR(1) items:
contentsConstraint -> CONTAINING type_x ENCODED BY value . [ RightParen Bang ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production contentsConstraint -> CONTAINING type_x ENCODED BY value

State 627:
## Known stack suffix:
## CONSTRAINED
## LR(1) items:
userDefinedConstraint -> CONSTRAINED . BY LeftBrace loption(separated_nonempty_list(Comma,userDefinedConstraintParameter)) RightBrace [ RightParen Bang ]
## Transitions:
-- On BY shift to state 628
## Reductions:

State 628:
## Known stack suffix:
## CONSTRAINED BY
## LR(1) items:
userDefinedConstraint -> CONSTRAINED BY . LeftBrace loption(separated_nonempty_list(Comma,userDefinedConstraintParameter)) RightBrace [ RightParen Bang ]
## Transitions:
-- On LeftBrace shift to state 629
## Reductions:

State 629:
## Known stack suffix:
## CONSTRAINED BY LeftBrace
## LR(1) items:
userDefinedConstraint -> CONSTRAINED BY LeftBrace . loption(separated_nonempty_list(Comma,userDefinedConstraintParameter)) RightBrace [ RightParen Bang ]
## Transitions:
-- On VisibleString shift to state 66
-- On VideotexString shift to state 67
-- On Upper shift to state 113
-- On UniversalString shift to state 72
-- On UTF8String shift to state 73
-- On UTCTime shift to state 74
-- On TeletexString shift to state 75
-- On TYPE_IDENTIFIER shift to state 76
-- On T61String shift to state 78
-- On SET shift to state 79
-- On SEQUENCE shift to state 111
-- On RELATIVE_OID shift to state 116
-- On REAL shift to state 117
-- On PrintableString shift to state 118
-- On ObjectDescriptor shift to state 119
-- On OCTET shift to state 120
-- On OBJECT shift to state 122
-- On NumericString shift to state 124
-- On NULL shift to state 125
-- On Lower shift to state 127
-- On LeftBracket shift to state 129
-- On ISO646String shift to state 140
-- On INTEGER shift to state 141
-- On INSTANCE shift to state 157
-- On IA5String shift to state 166
-- On GraphicString shift to state 167
-- On GeneralizedTime shift to state 168
-- On GeneralString shift to state 169
-- On EXTERNAL shift to state 170
-- On ENUMERATED shift to state 171
-- On EMBEDDED shift to state 179
-- On CHOICE shift to state 181
-- On CHARACTER shift to state 184
-- On BOOLEAN shift to state 186
-- On BMPString shift to state 187
-- On BIT shift to state 188
-- On ABSTRACT_SYNTAX shift to state 162
-- On valueSetFromObjects shift to state 202
-- On userDefinedConstraintParameter shift to state 630
-- On usefulType shift to state 203
-- On usefulObjectClassReference shift to state 163
-- On unrestrictedCharacterStringType shift to state 204
-- On type_x shift to state 632
-- On typeWithConstraint shift to state 207
-- On typeFromObject shift to state 208
-- On taggedType shift to state 209
-- On tag shift to state 210
-- On simpleDefinedType shift to state 213
-- On setType shift to state 215
-- On setOfType shift to state 216
-- On sequenceType shift to state 217
-- On sequenceOfType shift to state 218
-- On separated_nonempty_list(Comma,userDefinedConstraintParameter) shift to state 641
-- On selectionType shift to state 219
-- On restrictedCharacterStringType shift to state 220
-- On relativeOIDType shift to state 221
-- On referencedType shift to state 222
-- On referencedObjects shift to state 223
-- On realType shift to state 232
-- On parameterizedValueSetType shift to state 233
-- On parameterizedType shift to state 234
-- On parameterizedObjectSet shift to state 235
-- On parameterizedObject shift to state 236
-- On octetStringType shift to state 237
-- On objectIdentifierType shift to state 238
-- On objectClassFieldType shift to state 239
-- On nullType shift to state 240
-- On loption(separated_nonempty_list(Comma,userDefinedConstraintParameter)) shift to state 642
-- On integerType shift to state 241
-- On instanceOfType shift to state 242
-- On governor shift to state 634
-- On externalTypeReference shift to state 243
-- On externalType shift to state 244
-- On externalObjectSetReference shift to state 245
-- On externalObjectReference shift to state 246
-- On externalObjectClassReference shift to state 164
-- On enumeratedType shift to state 247
-- On embeddedPDVType shift to state 248
-- On definedType shift to state 249
-- On definedObjectSet shift to state 250
-- On definedObjectClass shift to state 640
-- On definedObject shift to state 255
-- On constrainedType shift to state 257
-- On choiceType shift to state 258
-- On characterStringType shift to state 259
-- On builtinType shift to state 260
-- On booleanType shift to state 261
-- On bitStringType shift to state 262
## Reductions:
-- On RightBrace reduce production loption(separated_nonempty_list(Comma,userDefinedConstraintParameter)) ->

State 630:
## Known stack suffix:
## userDefinedConstraintParameter
## LR(1) items:
separated_nonempty_list(Comma,userDefinedConstraintParameter) -> userDefinedConstraintParameter . [ RightBrace ]
separated_nonempty_list(Comma,userDefinedConstraintParameter) -> userDefinedConstraintParameter . Comma separated_nonempty_list(Comma,userDefinedConstraintParameter) [ RightBrace ]
## Transitions:
-- On Comma shift to state 631
## Reductions:
-- On RightBrace reduce production separated_nonempty_list(Comma,userDefinedConstraintParameter) -> userDefinedConstraintParameter

State 631:
## Known stack suffix:
## userDefinedConstraintParameter Comma
## LR(1) items:
separated_nonempty_list(Comma,userDefinedConstraintParameter) -> userDefinedConstraintParameter Comma . separated_nonempty_list(Comma,userDefinedConstraintParameter) [ RightBrace ]
## Transitions:
-- On VisibleString shift to state 66
-- On VideotexString shift to state 67
-- On Upper shift to state 113
-- On UniversalString shift to state 72
-- On UTF8String shift to state 73
-- On UTCTime shift to state 74
-- On TeletexString shift to state 75
-- On TYPE_IDENTIFIER shift to state 76
-- On T61String shift to state 78
-- On SET shift to state 79
-- On SEQUENCE shift to state 111
-- On RELATIVE_OID shift to state 116
-- On REAL shift to state 117
-- On PrintableString shift to state 118
-- On ObjectDescriptor shift to state 119
-- On OCTET shift to state 120
-- On OBJECT shift to state 122
-- On NumericString shift to state 124
-- On NULL shift to state 125
-- On Lower shift to state 127
-- On LeftBracket shift to state 129
-- On ISO646String shift to state 140
-- On INTEGER shift to state 141
-- On INSTANCE shift to state 157
-- On IA5String shift to state 166
-- On GraphicString shift to state 167
-- On GeneralizedTime shift to state 168
-- On GeneralString shift to state 169
-- On EXTERNAL shift to state 170
-- On ENUMERATED shift to state 171
-- On EMBEDDED shift to state 179
-- On CHOICE shift to state 181
-- On CHARACTER shift to state 184
-- On BOOLEAN shift to state 186
-- On BMPString shift to state 187
-- On BIT shift to state 188
-- On ABSTRACT_SYNTAX shift to state 162
-- On valueSetFromObjects shift to state 202
-- On userDefinedConstraintParameter shift to state 630
-- On usefulType shift to state 203
-- On usefulObjectClassReference shift to state 163
-- On unrestrictedCharacterStringType shift to state 204
-- On type_x shift to state 632
-- On typeWithConstraint shift to state 207
-- On typeFromObject shift to state 208
-- On taggedType shift to state 209
-- On tag shift to state 210
-- On simpleDefinedType shift to state 213
-- On setType shift to state 215
-- On setOfType shift to state 216
-- On sequenceType shift to state 217
-- On sequenceOfType shift to state 218
-- On separated_nonempty_list(Comma,userDefinedConstraintParameter) shift to state 633
-- On selectionType shift to state 219
-- On restrictedCharacterStringType shift to state 220
-- On relativeOIDType shift to state 221
-- On referencedType shift to state 222
-- On referencedObjects shift to state 223
-- On realType shift to state 232
-- On parameterizedValueSetType shift to state 233
-- On parameterizedType shift to state 234
-- On parameterizedObjectSet shift to state 235
-- On parameterizedObject shift to state 236
-- On octetStringType shift to state 237
-- On objectIdentifierType shift to state 238
-- On objectClassFieldType shift to state 239
-- On nullType shift to state 240
-- On integerType shift to state 241
-- On instanceOfType shift to state 242
-- On governor shift to state 634
-- On externalTypeReference shift to state 243
-- On externalType shift to state 244
-- On externalObjectSetReference shift to state 245
-- On externalObjectReference shift to state 246
-- On externalObjectClassReference shift to state 164
-- On enumeratedType shift to state 247
-- On embeddedPDVType shift to state 248
-- On definedType shift to state 249
-- On definedObjectSet shift to state 250
-- On definedObjectClass shift to state 640
-- On definedObject shift to state 255
-- On constrainedType shift to state 257
-- On choiceType shift to state 258
-- On characterStringType shift to state 259
-- On builtinType shift to state 260
-- On booleanType shift to state 261
-- On bitStringType shift to state 262
## Reductions:

State 632:
## Known stack suffix:
## type_x
## LR(1) items:
constrainedType -> type_x . constraint_x [ RightBrace LeftParen Comma Colon ]
governor -> type_x . [ Colon ]
userDefinedConstraintParameter -> type_x . [ RightBrace Comma ]
## Transitions:
-- On LeftParen shift to state 81
-- On constraint_x shift to state 206
## Reductions:
-- On RightBrace reduce production userDefinedConstraintParameter -> type_x
-- On Comma reduce production userDefinedConstraintParameter -> type_x
-- On Colon reduce production governor -> type_x

State 633:
## Known stack suffix:
## userDefinedConstraintParameter Comma separated_nonempty_list(Comma,userDefinedConstraintParameter)
## LR(1) items:
separated_nonempty_list(Comma,userDefinedConstraintParameter) -> userDefinedConstraintParameter Comma separated_nonempty_list(Comma,userDefinedConstraintParameter) . [ RightBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production separated_nonempty_list(Comma,userDefinedConstraintParameter) -> userDefinedConstraintParameter Comma separated_nonempty_list(Comma,userDefinedConstraintParameter)

State 634:
## Known stack suffix:
## governor
## LR(1) items:
userDefinedConstraintParameter -> governor . Colon value [ RightBrace Comma ]
userDefinedConstraintParameter -> governor . Colon valueSet [ RightBrace Comma ]
userDefinedConstraintParameter -> governor . Colon object_x [ RightBrace Comma ]
userDefinedConstraintParameter -> governor . Colon objectSet [ RightBrace Comma ]
## Transitions:
-- On Colon shift to state 635
## Reductions:

State 635:
## Known stack suffix:
## governor Colon
## LR(1) items:
userDefinedConstraintParameter -> governor Colon . value [ RightBrace Comma ]
userDefinedConstraintParameter -> governor Colon . valueSet [ RightBrace Comma ]
userDefinedConstraintParameter -> governor Colon . object_x [ RightBrace Comma ]
userDefinedConstraintParameter -> governor Colon . objectSet [ RightBrace Comma ]
## Transitions:
-- On VisibleString shift to state 66
-- On VideotexString shift to state 67
-- On Upper shift to state 108
-- On UniversalString shift to state 72
-- On UTF8String shift to state 73
-- On UTCTime shift to state 74
-- On TeletexString shift to state 75
-- On TYPE_IDENTIFIER shift to state 76
-- On TRUE shift to state 77
-- On T61String shift to state 78
-- On SET shift to state 79
-- On SEQUENCE shift to state 111
-- On RealNumber shift to state 296
-- On RELATIVE_OID shift to state 116
-- On REAL shift to state 117
-- On PrintableString shift to state 118
-- On PLUS_INFINITY shift to state 297
-- On ObjectDescriptor shift to state 119
-- On OCTET shift to state 120
-- On OBJECT shift to state 122
-- On NumericString shift to state 124
-- On Number shift to state 145
-- On NULL shift to state 298
-- On MINUS_INFINITY shift to state 299
-- On Lower shift to state 300
-- On LeftBracket shift to state 129
-- On LeftBrace shift to state 502
-- On ISO646String shift to state 140
-- On INTEGER shift to state 141
-- On INSTANCE shift to state 157
-- On IA5String shift to state 166
-- On Hyphen shift to state 306
-- On Hstring shift to state 308
-- On GraphicString shift to state 167
-- On GeneralizedTime shift to state 168
-- On GeneralString shift to state 169
-- On FALSE shift to state 309
-- On EXTERNAL shift to state 170
-- On ENUMERATED shift to state 171
-- On EMBEDDED shift to state 179
-- On DefinedSyntax shift to state 508
-- On Cstring shift to state 310
-- On CONTAINING shift to state 311
-- On CHOICE shift to state 181
-- On CHARACTER shift to state 184
-- On Bstring shift to state 312
-- On BOOLEAN shift to state 186
-- On BMPString shift to state 187
-- On BIT shift to state 188
-- On ABSTRACT_SYNTAX shift to state 162
-- On valueSetFromObjects shift to state 202
-- On valueSet shift to state 636
-- On valueFromObject shift to state 313
-- On value shift to state 637
-- On usefulType shift to state 203
-- On usefulObjectClassReference shift to state 163
-- On unrestrictedCharacterStringValue shift to state 315
-- On unrestrictedCharacterStringType shift to state 204
-- On type_x shift to state 316
-- On typeWithConstraint shift to state 207
-- On typeFromObject shift to state 208
-- On tuple shift to state 319
-- On taggedType shift to state 209
-- On tag shift to state 210
-- On specialRealValue shift to state 320
-- On simpleDefinedValue shift to state 64
-- On simpleDefinedType shift to state 213
-- On signedNumber shift to state 321
-- On setValue shift to state 322
-- On setType shift to state 215
-- On setOfValue shift to state 323
-- On setOfType shift to state 216
-- On sequenceValue shift to state 324
-- On sequenceType shift to state 217
-- On sequenceOfValue shift to state 325
-- On sequenceOfType shift to state 218
-- On selectionType shift to state 219
-- On restrictedCharacterStringValue shift to state 326
-- On restrictedCharacterStringType shift to state 220
-- On relativeOIDValue shift to state 327
-- On relativeOIDType shift to state 221
-- On referencedValue shift to state 328
-- On referencedType shift to state 222
-- On referencedObjects shift to state 587
-- On realValue shift to state 332
-- On realType shift to state 232
-- On quadruple shift to state 333
-- On parameterizedValueSetType shift to state 233
-- On parameterizedValue shift to state 135
-- On parameterizedType shift to state 234
-- On parameterizedObjectSet shift to state 235
-- On parameterizedObject shift to state 524
-- On openTypeFieldVal shift to state 334
-- On octetStringValue shift to state 335
-- On octetStringType shift to state 237
-- On object_x shift to state 638
-- On objectSet shift to state 639
-- On objectIdentifierValue shift to state 336
-- On objectIdentifierType shift to state 238
-- On objectFromObject shift to state 528
-- On objectDefn shift to state 529
-- On objectClassFieldValue shift to state 337
-- On objectClassFieldType shift to state 239
-- On numericRealValue shift to state 338
-- On nullValue shift to state 339
-- On nullType shift to state 240
-- On integerValue shift to state 340
-- On integerType shift to state 241
-- On instanceOfType shift to state 242
-- On fixedTypeFieldVal shift to state 341
-- On externalValueReference shift to state 136
-- On externalValue shift to state 342
-- On externalTypeReference shift to state 243
-- On externalType shift to state 244
-- On externalObjectSetReference shift to state 245
-- On externalObjectReference shift to state 246
-- On externalObjectClassReference shift to state 164
-- On enumeratedValue shift to state 343
-- On enumeratedType shift to state 247
-- On embeddedPDVValue shift to state 344
-- On embeddedPDVType shift to state 248
-- On definedValue shift to state 345
-- On definedType shift to state 249
-- On definedObjectSet shift to state 250
-- On definedObjectClass shift to state 252
-- On definedObject shift to state 545
-- On defaultSyntax shift to state 546
-- On constrainedType shift to state 257
-- On choiceValue shift to state 346
-- On choiceType shift to state 258
-- On characterStringValue shift to state 347
-- On characterStringType shift to state 259
-- On characterStringList shift to state 348
-- On builtinValue shift to state 349
-- On builtinType shift to state 260
-- On booleanValue shift to state 350
-- On booleanType shift to state 261
-- On bitStringValue shift to state 351
-- On bitStringType shift to state 262
## Reductions:

State 636:
## Known stack suffix:
## governor Colon valueSet
## LR(1) items:
userDefinedConstraintParameter -> governor Colon valueSet . [ RightBrace Comma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production userDefinedConstraintParameter -> governor Colon valueSet

State 637:
## Known stack suffix:
## governor Colon value
## LR(1) items:
userDefinedConstraintParameter -> governor Colon value . [ RightBrace Comma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production userDefinedConstraintParameter -> governor Colon value

State 638:
## Known stack suffix:
## governor Colon object_x
## LR(1) items:
userDefinedConstraintParameter -> governor Colon object_x . [ RightBrace Comma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production userDefinedConstraintParameter -> governor Colon object_x

State 639:
## Known stack suffix:
## governor Colon objectSet
## LR(1) items:
userDefinedConstraintParameter -> governor Colon objectSet . [ RightBrace Comma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production userDefinedConstraintParameter -> governor Colon objectSet

State 640:
## Known stack suffix:
## definedObjectClass
## LR(1) items:
governor -> definedObjectClass . [ Colon ]
objectClassFieldType -> definedObjectClass . Dot fieldName [ RightBrace LeftParen Comma Colon ]
userDefinedConstraintParameter -> definedObjectClass . [ RightBrace Comma ]
## Transitions:
-- On Dot shift to state 253
## Reductions:
-- On RightBrace reduce production userDefinedConstraintParameter -> definedObjectClass
-- On Comma reduce production userDefinedConstraintParameter -> definedObjectClass
-- On Colon reduce production governor -> definedObjectClass

State 641:
## Known stack suffix:
## separated_nonempty_list(Comma,userDefinedConstraintParameter)
## LR(1) items:
loption(separated_nonempty_list(Comma,userDefinedConstraintParameter)) -> separated_nonempty_list(Comma,userDefinedConstraintParameter) . [ RightBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production loption(separated_nonempty_list(Comma,userDefinedConstraintParameter)) -> separated_nonempty_list(Comma,userDefinedConstraintParameter)

State 642:
## Known stack suffix:
## CONSTRAINED BY LeftBrace loption(separated_nonempty_list(Comma,userDefinedConstraintParameter))
## LR(1) items:
userDefinedConstraint -> CONSTRAINED BY LeftBrace loption(separated_nonempty_list(Comma,userDefinedConstraintParameter)) . RightBrace [ RightParen Bang ]
## Transitions:
-- On RightBrace shift to state 643
## Reductions:

State 643:
## Known stack suffix:
## CONSTRAINED BY LeftBrace loption(separated_nonempty_list(Comma,userDefinedConstraintParameter)) RightBrace
## LR(1) items:
userDefinedConstraint -> CONSTRAINED BY LeftBrace loption(separated_nonempty_list(Comma,userDefinedConstraintParameter)) RightBrace . [ RightParen Bang ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production userDefinedConstraint -> CONSTRAINED BY LeftBrace loption(separated_nonempty_list(Comma,userDefinedConstraintParameter)) RightBrace

State 644:
## Known stack suffix:
## userDefinedConstraint
## LR(1) items:
generalConstraint -> userDefinedConstraint . [ RightParen Bang ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production generalConstraint -> userDefinedConstraint

State 645:
## Known stack suffix:
## tableConstraint
## LR(1) items:
generalConstraint -> tableConstraint . [ RightParen Bang ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production generalConstraint -> tableConstraint

State 646:
## Known stack suffix:
## subtypeConstraint
## LR(1) items:
constraintSpec -> subtypeConstraint . [ RightParen Bang ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production constraintSpec -> subtypeConstraint

State 647:
## Known stack suffix:
## simpleTableConstraint
## LR(1) items:
tableConstraint -> simpleTableConstraint . [ RightParen Bang ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production tableConstraint -> simpleTableConstraint

State 648:
## Known stack suffix:
## rootElementSetSpec
## LR(1) items:
elementSetSpecs -> rootElementSetSpec . [ RightParen RightBrace Bang ]
elementSetSpecs -> rootElementSetSpec . Comma Ellipsis [ RightParen RightBrace Bang ]
elementSetSpecs -> rootElementSetSpec . Comma Ellipsis Comma additionalElementSetSpec [ RightParen RightBrace Bang ]
## Transitions:
-- On Comma shift to state 649
## Reductions:
-- On RightParen reduce production elementSetSpecs -> rootElementSetSpec
-- On RightBrace reduce production elementSetSpecs -> rootElementSetSpec
-- On Bang reduce production elementSetSpecs -> rootElementSetSpec

State 649:
## Known stack suffix:
## rootElementSetSpec Comma
## LR(1) items:
elementSetSpecs -> rootElementSetSpec Comma . Ellipsis [ RightParen RightBrace Bang ]
elementSetSpecs -> rootElementSetSpec Comma . Ellipsis Comma additionalElementSetSpec [ RightParen RightBrace Bang ]
## Transitions:
-- On Ellipsis shift to state 650
## Reductions:

State 650:
## Known stack suffix:
## rootElementSetSpec Comma Ellipsis
## LR(1) items:
elementSetSpecs -> rootElementSetSpec Comma Ellipsis . [ RightParen RightBrace Bang ]
elementSetSpecs -> rootElementSetSpec Comma Ellipsis . Comma additionalElementSetSpec [ RightParen RightBrace Bang ]
## Transitions:
-- On Comma shift to state 651
## Reductions:
-- On RightParen reduce production elementSetSpecs -> rootElementSetSpec Comma Ellipsis
-- On RightBrace reduce production elementSetSpecs -> rootElementSetSpec Comma Ellipsis
-- On Bang reduce production elementSetSpecs -> rootElementSetSpec Comma Ellipsis

State 651:
## Known stack suffix:
## rootElementSetSpec Comma Ellipsis Comma
## LR(1) items:
elementSetSpecs -> rootElementSetSpec Comma Ellipsis Comma . additionalElementSetSpec [ RightParen RightBrace Bang ]
## Transitions:
-- On WITH shift to state 82
-- On VisibleString shift to state 66
-- On VideotexString shift to state 67
-- On Upper shift to state 108
-- On UniversalString shift to state 72
-- On UTF8String shift to state 73
-- On UTCTime shift to state 74
-- On TeletexString shift to state 75
-- On TYPE_IDENTIFIER shift to state 76
-- On TRUE shift to state 77
-- On T61String shift to state 78
-- On SIZE shift to state 80
-- On SET shift to state 79
-- On SEQUENCE shift to state 111
-- On RealNumber shift to state 296
-- On RELATIVE_OID shift to state 116
-- On REAL shift to state 117
-- On PrintableString shift to state 118
-- On PLUS_INFINITY shift to state 297
-- On PATTERN shift to state 495
-- On ObjectDescriptor shift to state 119
-- On OCTET shift to state 120
-- On OBJECT shift to state 122
-- On NumericString shift to state 124
-- On Number shift to state 145
-- On NULL shift to state 298
-- On MINUS_INFINITY shift to state 299
-- On MIN shift to state 497
-- On Lower shift to state 300
-- On LeftParen shift to state 498
-- On LeftBracket shift to state 129
-- On LeftBrace shift to state 499
-- On ISO646String shift to state 140
-- On INTEGER shift to state 141
-- On INSTANCE shift to state 157
-- On INCLUDES shift to state 503
-- On IA5String shift to state 166
-- On Hyphen shift to state 306
-- On Hstring shift to state 308
-- On GraphicString shift to state 167
-- On GeneralizedTime shift to state 168
-- On GeneralString shift to state 169
-- On FROM shift to state 504
-- On FALSE shift to state 309
-- On EXTERNAL shift to state 170
-- On ENUMERATED shift to state 171
-- On EMBEDDED shift to state 179
-- On DefinedSyntax shift to state 508
-- On Cstring shift to state 310
-- On CONTAINING shift to state 311
-- On CHOICE shift to state 181
-- On CHARACTER shift to state 184
-- On Bstring shift to state 312
-- On BOOLEAN shift to state 186
-- On BMPString shift to state 187
-- On BIT shift to state 188
-- On ALL shift to state 509
-- On ABSTRACT_SYNTAX shift to state 162
-- On valueSetFromObjects shift to state 202
-- On valueRange shift to state 511
-- On valueFromObject shift to state 313
-- On value shift to state 512
-- On usefulType shift to state 203
-- On usefulObjectClassReference shift to state 163
-- On unrestrictedCharacterStringValue shift to state 315
-- On unrestrictedCharacterStringType shift to state 204
-- On unions shift to state 549
-- On uElems shift to state 550
-- On type_x shift to state 513
-- On typeWithConstraint shift to state 207
-- On typeFromObject shift to state 208
-- On typeConstraint shift to state 514
-- On tuple shift to state 319
-- On taggedType shift to state 209
-- On tag shift to state 210
-- On subtypeElements shift to state 515
-- On specialRealValue shift to state 320
-- On sizeConstraint shift to state 516
-- On singleValue shift to state 517
-- On simpleDefinedValue shift to state 64
-- On simpleDefinedType shift to state 213
-- On signedNumber shift to state 321
-- On setValue shift to state 322
-- On setType shift to state 215
-- On setOfValue shift to state 323
-- On setOfType shift to state 216
-- On sequenceValue shift to state 324
-- On sequenceType shift to state 217
-- On sequenceOfValue shift to state 325
-- On sequenceOfType shift to state 218
-- On selectionType shift to state 219
-- On restrictedCharacterStringValue shift to state 326
-- On restrictedCharacterStringType shift to state 220
-- On relativeOIDValue shift to state 327
-- On relativeOIDType shift to state 221
-- On referencedValue shift to state 328
-- On referencedType shift to state 222
-- On referencedObjects shift to state 518
-- On realValue shift to state 332
-- On realType shift to state 232
-- On quadruple shift to state 333
-- On permittedAlphabet shift to state 521
-- On patternConstraint shift to state 522
-- On parameterizedValueSetType shift to state 233
-- On parameterizedValue shift to state 135
-- On parameterizedType shift to state 234
-- On parameterizedObjectSet shift to state 523
-- On parameterizedObject shift to state 524
-- On openTypeFieldVal shift to state 334
-- On octetStringValue shift to state 335
-- On octetStringType shift to state 237
-- On object_x shift to state 525
-- On objectSetFromObjects shift to state 526
-- On objectSetElements shift to state 527
-- On objectIdentifierValue shift to state 336
-- On objectIdentifierType shift to state 238
-- On objectFromObject shift to state 528
-- On objectDefn shift to state 529
-- On objectClassFieldValue shift to state 337
-- On objectClassFieldType shift to state 239
-- On numericRealValue shift to state 338
-- On nullValue shift to state 339
-- On nullType shift to state 240
-- On lowerEndValue shift to state 530
-- On lowerEndPoint shift to state 532
-- On intersections shift to state 564
-- On intersectionElements shift to state 555
-- On integerValue shift to state 340
-- On integerType shift to state 241
-- On instanceOfType shift to state 242
-- On innerTypeConstraints shift to state 540
-- On includes shift to state 541
-- On iElems shift to state 556
-- On fixedTypeFieldVal shift to state 341
-- On externalValueReference shift to state 136
-- On externalValue shift to state 342
-- On externalTypeReference shift to state 243
-- On externalType shift to state 244
-- On externalObjectSetReference shift to state 245
-- On externalObjectReference shift to state 246
-- On externalObjectClassReference shift to state 164
-- On enumeratedValue shift to state 343
-- On enumeratedType shift to state 247
-- On embeddedPDVValue shift to state 344
-- On embeddedPDVType shift to state 248
-- On elems shift to state 561
-- On elements shift to state 563
-- On elementSetSpec shift to state 565
-- On definedValue shift to state 345
-- On definedType shift to state 249
-- On definedObjectSet shift to state 544
-- On definedObjectClass shift to state 252
-- On definedObject shift to state 545
-- On defaultSyntax shift to state 546
-- On containedSubtype shift to state 547
-- On constrainedType shift to state 257
-- On choiceValue shift to state 346
-- On choiceType shift to state 258
-- On characterStringValue shift to state 347
-- On characterStringType shift to state 259
-- On characterStringList shift to state 348
-- On builtinValue shift to state 349
-- On builtinType shift to state 260
-- On booleanValue shift to state 350
-- On booleanType shift to state 261
-- On bitStringValue shift to state 351
-- On bitStringType shift to state 262
-- On additionalElementSetSpec shift to state 652
## Reductions:

State 652:
## Known stack suffix:
## rootElementSetSpec Comma Ellipsis Comma additionalElementSetSpec
## LR(1) items:
elementSetSpecs -> rootElementSetSpec Comma Ellipsis Comma additionalElementSetSpec . [ RightParen RightBrace Bang ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production elementSetSpecs -> rootElementSetSpec Comma Ellipsis Comma additionalElementSetSpec

State 653:
## Known stack suffix:
## objectSet
## LR(1) items:
simpleTableConstraint -> objectSet . [ RightParen Bang ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production simpleTableConstraint -> objectSet

State 654:
## Known stack suffix:
## generalConstraint
## LR(1) items:
constraintSpec -> generalConstraint . [ RightParen Bang ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production constraintSpec -> generalConstraint

State 655:
## Known stack suffix:
## elementSetSpecs
## LR(1) items:
subtypeConstraint -> elementSetSpecs . [ RightParen Bang ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production subtypeConstraint -> elementSetSpecs

State 656:
## Known stack suffix:
## contentsConstraint
## LR(1) items:
generalConstraint -> contentsConstraint . [ RightParen Bang ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production generalConstraint -> contentsConstraint

State 657:
## Known stack suffix:
## LeftParen constraintSpec
## LR(1) items:
constraint_x -> LeftParen constraintSpec . exceptionSpec RightParen [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace PRESENT OPTIONAL OF Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ABSENT ]
## Transitions:
-- On Bang shift to state 177
-- On exceptionSpec shift to state 658
## Reductions:
-- On RightParen reduce production exceptionSpec ->

State 658:
## Known stack suffix:
## LeftParen constraintSpec exceptionSpec
## LR(1) items:
constraint_x -> LeftParen constraintSpec exceptionSpec . RightParen [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace PRESENT OPTIONAL OF Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ABSENT ]
## Transitions:
-- On RightParen shift to state 659
## Reductions:

State 659:
## Known stack suffix:
## LeftParen constraintSpec exceptionSpec RightParen
## LR(1) items:
constraint_x -> LeftParen constraintSpec exceptionSpec RightParen . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace PRESENT OPTIONAL OF Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ABSENT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production constraint_x -> LeftParen constraintSpec exceptionSpec RightParen

State 660:
## Known stack suffix:
## componentRelationConstraint
## LR(1) items:
tableConstraint -> componentRelationConstraint . [ RightParen Bang ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production tableConstraint -> componentRelationConstraint

State 661:
## Known stack suffix:
## SIZE constraint_x
## LR(1) items:
sizeConstraint -> SIZE constraint_x . [ UNION RightParen RightBrace OF Middle INTERSECTION EXCEPT Comma Circumflex Bang ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production sizeConstraint -> SIZE constraint_x

State 662:
## Known stack suffix:
## SET OF
## LR(1) items:
setOfType -> SET OF . type_x [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
setOfType -> SET OF . namedType [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
-- On VisibleString shift to state 66
-- On VideotexString shift to state 67
-- On Upper shift to state 113
-- On UniversalString shift to state 72
-- On UTF8String shift to state 73
-- On UTCTime shift to state 74
-- On TeletexString shift to state 75
-- On TYPE_IDENTIFIER shift to state 76
-- On T61String shift to state 78
-- On SET shift to state 79
-- On SEQUENCE shift to state 111
-- On RELATIVE_OID shift to state 116
-- On REAL shift to state 117
-- On PrintableString shift to state 118
-- On ObjectDescriptor shift to state 119
-- On OCTET shift to state 120
-- On OBJECT shift to state 122
-- On NumericString shift to state 124
-- On NULL shift to state 125
-- On Lower shift to state 126
-- On LeftBracket shift to state 129
-- On ISO646String shift to state 140
-- On INTEGER shift to state 141
-- On INSTANCE shift to state 157
-- On IA5String shift to state 166
-- On GraphicString shift to state 167
-- On GeneralizedTime shift to state 168
-- On GeneralString shift to state 169
-- On EXTERNAL shift to state 170
-- On ENUMERATED shift to state 171
-- On EMBEDDED shift to state 179
-- On CHOICE shift to state 181
-- On CHARACTER shift to state 184
-- On BOOLEAN shift to state 186
-- On BMPString shift to state 187
-- On BIT shift to state 188
-- On ABSTRACT_SYNTAX shift to state 162
-- On valueSetFromObjects shift to state 202
-- On usefulType shift to state 203
-- On usefulObjectClassReference shift to state 163
-- On unrestrictedCharacterStringType shift to state 204
-- On type_x shift to state 663
-- On typeWithConstraint shift to state 207
-- On typeFromObject shift to state 208
-- On taggedType shift to state 209
-- On tag shift to state 210
-- On simpleDefinedType shift to state 213
-- On setType shift to state 215
-- On setOfType shift to state 216
-- On sequenceType shift to state 217
-- On sequenceOfType shift to state 218
-- On selectionType shift to state 219
-- On restrictedCharacterStringType shift to state 220
-- On relativeOIDType shift to state 221
-- On referencedType shift to state 222
-- On referencedObjects shift to state 223
-- On realType shift to state 232
-- On parameterizedValueSetType shift to state 233
-- On parameterizedType shift to state 234
-- On parameterizedObjectSet shift to state 235
-- On parameterizedObject shift to state 236
-- On octetStringType shift to state 237
-- On objectIdentifierType shift to state 238
-- On objectClassFieldType shift to state 239
-- On nullType shift to state 240
-- On namedType shift to state 664
-- On integerType shift to state 241
-- On instanceOfType shift to state 242
-- On externalTypeReference shift to state 243
-- On externalType shift to state 244
-- On externalObjectSetReference shift to state 245
-- On externalObjectReference shift to state 246
-- On externalObjectClassReference shift to state 164
-- On enumeratedType shift to state 247
-- On embeddedPDVType shift to state 248
-- On definedType shift to state 249
-- On definedObjectSet shift to state 250
-- On definedObjectClass shift to state 252
-- On definedObject shift to state 255
-- On constrainedType shift to state 257
-- On choiceType shift to state 258
-- On characterStringType shift to state 259
-- On builtinType shift to state 260
-- On booleanType shift to state 261
-- On bitStringType shift to state 262
## Reductions:

State 663:
## Known stack suffix:
## SET OF type_x
## LR(1) items:
constrainedType -> type_x . constraint_x [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
setOfType -> SET OF type_x . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
-- On LeftParen shift to state 81
-- On constraint_x shift to state 206
## Reductions:
-- On Upper reduce production setOfType -> SET OF type_x
-- On UNIQUE reduce production setOfType -> SET OF type_x
-- On UNION reduce production setOfType -> SET OF type_x
-- On RightParen reduce production setOfType -> SET OF type_x
-- On RightDoubleBracket reduce production setOfType -> SET OF type_x
-- On RightBrace reduce production setOfType -> SET OF type_x
-- On OPTIONAL reduce production setOfType -> SET OF type_x
-- On Middle reduce production setOfType -> SET OF type_x
-- On Lower reduce production setOfType -> SET OF type_x
-- On INTERSECTION reduce production setOfType -> SET OF type_x
-- On EXCEPT reduce production setOfType -> SET OF type_x
-- On END reduce production setOfType -> SET OF type_x
-- On ENCODED reduce production setOfType -> SET OF type_x
-- On DEFAULT reduce production setOfType -> SET OF type_x
-- On Comma reduce production setOfType -> SET OF type_x
-- On Colon reduce production setOfType -> SET OF type_x
-- On Circumflex reduce production setOfType -> SET OF type_x
-- On Bang reduce production setOfType -> SET OF type_x
-- On Assignment reduce production setOfType -> SET OF type_x

State 664:
## Known stack suffix:
## SET OF namedType
## LR(1) items:
setOfType -> SET OF namedType . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production setOfType -> SET OF namedType

State 665:
## Known stack suffix:
## SET LeftBrace
## LR(1) items:
setType -> SET LeftBrace . RightBrace [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
setType -> SET LeftBrace . extensionAndException optionalExtensionMarker RightBrace [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
setType -> SET LeftBrace . componentTypeLists RightBrace [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
-- On RightBrace shift to state 666
-- On Lower shift to state 183
-- On Ellipsis shift to state 268
-- On COMPONENTS shift to state 444
-- On rootComponentTypeList shift to state 447
-- On namedType shift to state 453
-- On extensionAndException shift to state 667
-- On componentTypeLists shift to state 670
-- On componentTypeList shift to state 475
-- On componentType shift to state 461
## Reductions:

State 666:
## Known stack suffix:
## SET LeftBrace RightBrace
## LR(1) items:
setType -> SET LeftBrace RightBrace . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production setType -> SET LeftBrace RightBrace

State 667:
## Known stack suffix:
## SET LeftBrace extensionAndException
## LR(1) items:
componentTypeLists -> extensionAndException . extensionAdditions extensionEndMarker Comma rootComponentTypeList [ RightBrace ]
componentTypeLists -> extensionAndException . extensionAdditions optionalExtensionMarker [ RightBrace ]
setType -> SET LeftBrace extensionAndException . optionalExtensionMarker RightBrace [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
-- On Comma shift to state 477
-- On optionalExtensionMarker shift to state 668
-- On extensionAdditions shift to state 480
## Reductions:
-- On RightBrace reduce production optionalExtensionMarker ->

State 668:
## Known stack suffix:
## SET LeftBrace extensionAndException optionalExtensionMarker
## LR(1) items:
setType -> SET LeftBrace extensionAndException optionalExtensionMarker . RightBrace [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
-- On RightBrace shift to state 669
## Reductions:

State 669:
## Known stack suffix:
## SET LeftBrace extensionAndException optionalExtensionMarker RightBrace
## LR(1) items:
setType -> SET LeftBrace extensionAndException optionalExtensionMarker RightBrace . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production setType -> SET LeftBrace extensionAndException optionalExtensionMarker RightBrace

State 670:
## Known stack suffix:
## SET LeftBrace componentTypeLists
## LR(1) items:
setType -> SET LeftBrace componentTypeLists . RightBrace [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
-- On RightBrace shift to state 671
## Reductions:

State 671:
## Known stack suffix:
## SET LeftBrace componentTypeLists RightBrace
## LR(1) items:
setType -> SET LeftBrace componentTypeLists RightBrace . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production setType -> SET LeftBrace componentTypeLists RightBrace

State 672:
## Known stack suffix:
## SET sizeConstraint
## LR(1) items:
typeWithConstraint -> SET sizeConstraint . OF type_x [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
typeWithConstraint -> SET sizeConstraint . OF namedType [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
-- On OF shift to state 673
## Reductions:

State 673:
## Known stack suffix:
## SET sizeConstraint OF
## LR(1) items:
typeWithConstraint -> SET sizeConstraint OF . type_x [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
typeWithConstraint -> SET sizeConstraint OF . namedType [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
-- On VisibleString shift to state 66
-- On VideotexString shift to state 67
-- On Upper shift to state 113
-- On UniversalString shift to state 72
-- On UTF8String shift to state 73
-- On UTCTime shift to state 74
-- On TeletexString shift to state 75
-- On TYPE_IDENTIFIER shift to state 76
-- On T61String shift to state 78
-- On SET shift to state 79
-- On SEQUENCE shift to state 111
-- On RELATIVE_OID shift to state 116
-- On REAL shift to state 117
-- On PrintableString shift to state 118
-- On ObjectDescriptor shift to state 119
-- On OCTET shift to state 120
-- On OBJECT shift to state 122
-- On NumericString shift to state 124
-- On NULL shift to state 125
-- On Lower shift to state 126
-- On LeftBracket shift to state 129
-- On ISO646String shift to state 140
-- On INTEGER shift to state 141
-- On INSTANCE shift to state 157
-- On IA5String shift to state 166
-- On GraphicString shift to state 167
-- On GeneralizedTime shift to state 168
-- On GeneralString shift to state 169
-- On EXTERNAL shift to state 170
-- On ENUMERATED shift to state 171
-- On EMBEDDED shift to state 179
-- On CHOICE shift to state 181
-- On CHARACTER shift to state 184
-- On BOOLEAN shift to state 186
-- On BMPString shift to state 187
-- On BIT shift to state 188
-- On ABSTRACT_SYNTAX shift to state 162
-- On valueSetFromObjects shift to state 202
-- On usefulType shift to state 203
-- On usefulObjectClassReference shift to state 163
-- On unrestrictedCharacterStringType shift to state 204
-- On type_x shift to state 674
-- On typeWithConstraint shift to state 207
-- On typeFromObject shift to state 208
-- On taggedType shift to state 209
-- On tag shift to state 210
-- On simpleDefinedType shift to state 213
-- On setType shift to state 215
-- On setOfType shift to state 216
-- On sequenceType shift to state 217
-- On sequenceOfType shift to state 218
-- On selectionType shift to state 219
-- On restrictedCharacterStringType shift to state 220
-- On relativeOIDType shift to state 221
-- On referencedType shift to state 222
-- On referencedObjects shift to state 223
-- On realType shift to state 232
-- On parameterizedValueSetType shift to state 233
-- On parameterizedType shift to state 234
-- On parameterizedObjectSet shift to state 235
-- On parameterizedObject shift to state 236
-- On octetStringType shift to state 237
-- On objectIdentifierType shift to state 238
-- On objectClassFieldType shift to state 239
-- On nullType shift to state 240
-- On namedType shift to state 675
-- On integerType shift to state 241
-- On instanceOfType shift to state 242
-- On externalTypeReference shift to state 243
-- On externalType shift to state 244
-- On externalObjectSetReference shift to state 245
-- On externalObjectReference shift to state 246
-- On externalObjectClassReference shift to state 164
-- On enumeratedType shift to state 247
-- On embeddedPDVType shift to state 248
-- On definedType shift to state 249
-- On definedObjectSet shift to state 250
-- On definedObjectClass shift to state 252
-- On definedObject shift to state 255
-- On constrainedType shift to state 257
-- On choiceType shift to state 258
-- On characterStringType shift to state 259
-- On builtinType shift to state 260
-- On booleanType shift to state 261
-- On bitStringType shift to state 262
## Reductions:

State 674:
## Known stack suffix:
## SET sizeConstraint OF type_x
## LR(1) items:
constrainedType -> type_x . constraint_x [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
typeWithConstraint -> SET sizeConstraint OF type_x . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
-- On LeftParen shift to state 81
-- On constraint_x shift to state 206
## Reductions:
-- On Upper reduce production typeWithConstraint -> SET sizeConstraint OF type_x
-- On UNIQUE reduce production typeWithConstraint -> SET sizeConstraint OF type_x
-- On UNION reduce production typeWithConstraint -> SET sizeConstraint OF type_x
-- On RightParen reduce production typeWithConstraint -> SET sizeConstraint OF type_x
-- On RightDoubleBracket reduce production typeWithConstraint -> SET sizeConstraint OF type_x
-- On RightBrace reduce production typeWithConstraint -> SET sizeConstraint OF type_x
-- On OPTIONAL reduce production typeWithConstraint -> SET sizeConstraint OF type_x
-- On Middle reduce production typeWithConstraint -> SET sizeConstraint OF type_x
-- On Lower reduce production typeWithConstraint -> SET sizeConstraint OF type_x
-- On INTERSECTION reduce production typeWithConstraint -> SET sizeConstraint OF type_x
-- On EXCEPT reduce production typeWithConstraint -> SET sizeConstraint OF type_x
-- On END reduce production typeWithConstraint -> SET sizeConstraint OF type_x
-- On ENCODED reduce production typeWithConstraint -> SET sizeConstraint OF type_x
-- On DEFAULT reduce production typeWithConstraint -> SET sizeConstraint OF type_x
-- On Comma reduce production typeWithConstraint -> SET sizeConstraint OF type_x
-- On Colon reduce production typeWithConstraint -> SET sizeConstraint OF type_x
-- On Circumflex reduce production typeWithConstraint -> SET sizeConstraint OF type_x
-- On Bang reduce production typeWithConstraint -> SET sizeConstraint OF type_x
-- On Assignment reduce production typeWithConstraint -> SET sizeConstraint OF type_x

State 675:
## Known stack suffix:
## SET sizeConstraint OF namedType
## LR(1) items:
typeWithConstraint -> SET sizeConstraint OF namedType . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production typeWithConstraint -> SET sizeConstraint OF namedType

State 676:
## Known stack suffix:
## SET constraint_x
## LR(1) items:
typeWithConstraint -> SET constraint_x . OF type_x [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
typeWithConstraint -> SET constraint_x . OF namedType [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
-- On OF shift to state 677
## Reductions:

State 677:
## Known stack suffix:
## SET constraint_x OF
## LR(1) items:
typeWithConstraint -> SET constraint_x OF . type_x [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
typeWithConstraint -> SET constraint_x OF . namedType [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
-- On VisibleString shift to state 66
-- On VideotexString shift to state 67
-- On Upper shift to state 113
-- On UniversalString shift to state 72
-- On UTF8String shift to state 73
-- On UTCTime shift to state 74
-- On TeletexString shift to state 75
-- On TYPE_IDENTIFIER shift to state 76
-- On T61String shift to state 78
-- On SET shift to state 79
-- On SEQUENCE shift to state 111
-- On RELATIVE_OID shift to state 116
-- On REAL shift to state 117
-- On PrintableString shift to state 118
-- On ObjectDescriptor shift to state 119
-- On OCTET shift to state 120
-- On OBJECT shift to state 122
-- On NumericString shift to state 124
-- On NULL shift to state 125
-- On Lower shift to state 126
-- On LeftBracket shift to state 129
-- On ISO646String shift to state 140
-- On INTEGER shift to state 141
-- On INSTANCE shift to state 157
-- On IA5String shift to state 166
-- On GraphicString shift to state 167
-- On GeneralizedTime shift to state 168
-- On GeneralString shift to state 169
-- On EXTERNAL shift to state 170
-- On ENUMERATED shift to state 171
-- On EMBEDDED shift to state 179
-- On CHOICE shift to state 181
-- On CHARACTER shift to state 184
-- On BOOLEAN shift to state 186
-- On BMPString shift to state 187
-- On BIT shift to state 188
-- On ABSTRACT_SYNTAX shift to state 162
-- On valueSetFromObjects shift to state 202
-- On usefulType shift to state 203
-- On usefulObjectClassReference shift to state 163
-- On unrestrictedCharacterStringType shift to state 204
-- On type_x shift to state 678
-- On typeWithConstraint shift to state 207
-- On typeFromObject shift to state 208
-- On taggedType shift to state 209
-- On tag shift to state 210
-- On simpleDefinedType shift to state 213
-- On setType shift to state 215
-- On setOfType shift to state 216
-- On sequenceType shift to state 217
-- On sequenceOfType shift to state 218
-- On selectionType shift to state 219
-- On restrictedCharacterStringType shift to state 220
-- On relativeOIDType shift to state 221
-- On referencedType shift to state 222
-- On referencedObjects shift to state 223
-- On realType shift to state 232
-- On parameterizedValueSetType shift to state 233
-- On parameterizedType shift to state 234
-- On parameterizedObjectSet shift to state 235
-- On parameterizedObject shift to state 236
-- On octetStringType shift to state 237
-- On objectIdentifierType shift to state 238
-- On objectClassFieldType shift to state 239
-- On nullType shift to state 240
-- On namedType shift to state 679
-- On integerType shift to state 241
-- On instanceOfType shift to state 242
-- On externalTypeReference shift to state 243
-- On externalType shift to state 244
-- On externalObjectSetReference shift to state 245
-- On externalObjectReference shift to state 246
-- On externalObjectClassReference shift to state 164
-- On enumeratedType shift to state 247
-- On embeddedPDVType shift to state 248
-- On definedType shift to state 249
-- On definedObjectSet shift to state 250
-- On definedObjectClass shift to state 252
-- On definedObject shift to state 255
-- On constrainedType shift to state 257
-- On choiceType shift to state 258
-- On characterStringType shift to state 259
-- On builtinType shift to state 260
-- On booleanType shift to state 261
-- On bitStringType shift to state 262
## Reductions:

State 678:
## Known stack suffix:
## SET constraint_x OF type_x
## LR(1) items:
constrainedType -> type_x . constraint_x [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
typeWithConstraint -> SET constraint_x OF type_x . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
-- On LeftParen shift to state 81
-- On constraint_x shift to state 206
## Reductions:
-- On Upper reduce production typeWithConstraint -> SET constraint_x OF type_x
-- On UNIQUE reduce production typeWithConstraint -> SET constraint_x OF type_x
-- On UNION reduce production typeWithConstraint -> SET constraint_x OF type_x
-- On RightParen reduce production typeWithConstraint -> SET constraint_x OF type_x
-- On RightDoubleBracket reduce production typeWithConstraint -> SET constraint_x OF type_x
-- On RightBrace reduce production typeWithConstraint -> SET constraint_x OF type_x
-- On OPTIONAL reduce production typeWithConstraint -> SET constraint_x OF type_x
-- On Middle reduce production typeWithConstraint -> SET constraint_x OF type_x
-- On Lower reduce production typeWithConstraint -> SET constraint_x OF type_x
-- On INTERSECTION reduce production typeWithConstraint -> SET constraint_x OF type_x
-- On EXCEPT reduce production typeWithConstraint -> SET constraint_x OF type_x
-- On END reduce production typeWithConstraint -> SET constraint_x OF type_x
-- On ENCODED reduce production typeWithConstraint -> SET constraint_x OF type_x
-- On DEFAULT reduce production typeWithConstraint -> SET constraint_x OF type_x
-- On Comma reduce production typeWithConstraint -> SET constraint_x OF type_x
-- On Colon reduce production typeWithConstraint -> SET constraint_x OF type_x
-- On Circumflex reduce production typeWithConstraint -> SET constraint_x OF type_x
-- On Bang reduce production typeWithConstraint -> SET constraint_x OF type_x
-- On Assignment reduce production typeWithConstraint -> SET constraint_x OF type_x

State 679:
## Known stack suffix:
## SET constraint_x OF namedType
## LR(1) items:
typeWithConstraint -> SET constraint_x OF namedType . [ Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production typeWithConstraint -> SET constraint_x OF namedType

State 680:
## Known stack suffix:
## valueSet
## LR(1) items:
actualParameter -> valueSet . [ RightBrace Comma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production actualParameter -> valueSet

State 681:
## Known stack suffix:
## value
## LR(1) items:
actualParameter -> value . [ RightBrace Comma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production actualParameter -> value

State 682:
## Known stack suffix:
## type_x
## LR(1) items:
actualParameter -> type_x . [ RightBrace Comma ]
constrainedType -> type_x . constraint_x [ RightBrace LeftParen Comma Colon ]
openTypeFieldVal -> type_x . Colon value [ RightBrace Comma ]
## Transitions:
-- On LeftParen shift to state 81
-- On Colon shift to state 317
-- On constraint_x shift to state 206
## Reductions:
-- On RightBrace reduce production actualParameter -> type_x
-- On Comma reduce production actualParameter -> type_x

State 683:
## Known stack suffix:
## LeftBrace separated_nonempty_list(Comma,actualParameter)
## LR(1) items:
actualParameterList -> LeftBrace separated_nonempty_list(Comma,actualParameter) . RightBrace [ Upper UNIQUE UNION SemiColon RightParen RightDoubleBracket RightBracket RightBrace OPTIONAL Number Middle Lower LessThan LeftParen INTERSECTION EXCEPT END ENCODED DoubleDot Dot DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
-- On RightBrace shift to state 684
## Reductions:

State 684:
## Known stack suffix:
## LeftBrace separated_nonempty_list(Comma,actualParameter) RightBrace
## LR(1) items:
actualParameterList -> LeftBrace separated_nonempty_list(Comma,actualParameter) RightBrace . [ Upper UNIQUE UNION SemiColon RightParen RightDoubleBracket RightBracket RightBrace OPTIONAL Number Middle Lower LessThan LeftParen INTERSECTION EXCEPT END ENCODED DoubleDot Dot DEFAULT Comma Colon Circumflex Bang Assignment ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production actualParameterList -> LeftBrace separated_nonempty_list(Comma,actualParameter) RightBrace

State 685:
## Known stack suffix:
## object_x
## LR(1) items:
actualParameter -> object_x . [ RightBrace Comma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production actualParameter -> object_x

State 686:
## Known stack suffix:
## objectSet
## LR(1) items:
actualParameter -> objectSet . [ RightBrace Comma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production actualParameter -> objectSet

State 687:
## Known stack suffix:
## definedObjectClass
## LR(1) items:
actualParameter -> definedObjectClass . [ RightBrace Comma ]
objectClassFieldType -> definedObjectClass . Dot fieldName [ RightBrace LeftParen Comma Colon ]
## Transitions:
-- On Dot shift to state 253
## Reductions:
-- On RightBrace reduce production actualParameter -> definedObjectClass
-- On Comma reduce production actualParameter -> definedObjectClass

State 688:
## Known stack suffix:
## actualParameter
## LR(1) items:
separated_nonempty_list(Comma,actualParameter) -> actualParameter . [ RightBrace ]
separated_nonempty_list(Comma,actualParameter) -> actualParameter . Comma separated_nonempty_list(Comma,actualParameter) [ RightBrace ]
## Transitions:
-- On Comma shift to state 689
## Reductions:
-- On RightBrace reduce production separated_nonempty_list(Comma,actualParameter) -> actualParameter

State 689:
## Known stack suffix:
## actualParameter Comma
## LR(1) items:
separated_nonempty_list(Comma,actualParameter) -> actualParameter Comma . separated_nonempty_list(Comma,actualParameter) [ RightBrace ]
## Transitions:
-- On VisibleString shift to state 66
-- On VideotexString shift to state 67
-- On Upper shift to state 68
-- On UniversalString shift to state 72
-- On UTF8String shift to state 73
-- On UTCTime shift to state 74
-- On TeletexString shift to state 75
-- On TYPE_IDENTIFIER shift to state 76
-- On TRUE shift to state 77
-- On T61String shift to state 78
-- On SET shift to state 79
-- On SEQUENCE shift to state 111
-- On RealNumber shift to state 296
-- On RELATIVE_OID shift to state 116
-- On REAL shift to state 117
-- On PrintableString shift to state 118
-- On PLUS_INFINITY shift to state 297
-- On ObjectDescriptor shift to state 119
-- On OCTET shift to state 120
-- On OBJECT shift to state 122
-- On NumericString shift to state 124
-- On Number shift to state 145
-- On NULL shift to state 298
-- On MINUS_INFINITY shift to state 299
-- On Lower shift to state 300
-- On LeftBracket shift to state 129
-- On LeftBrace shift to state 502
-- On ISO646String shift to state 140
-- On INTEGER shift to state 141
-- On INSTANCE shift to state 157
-- On IA5String shift to state 166
-- On Hyphen shift to state 306
-- On Hstring shift to state 308
-- On GraphicString shift to state 167
-- On GeneralizedTime shift to state 168
-- On GeneralString shift to state 169
-- On FALSE shift to state 309
-- On EXTERNAL shift to state 170
-- On ENUMERATED shift to state 171
-- On EMBEDDED shift to state 179
-- On DefinedSyntax shift to state 508
-- On Cstring shift to state 310
-- On CONTAINING shift to state 311
-- On CHOICE shift to state 181
-- On CHARACTER shift to state 184
-- On Bstring shift to state 312
-- On BOOLEAN shift to state 186
-- On BMPString shift to state 187
-- On BIT shift to state 188
-- On ABSTRACT_SYNTAX shift to state 162
-- On valueSetFromObjects shift to state 202
-- On valueSet shift to state 680
-- On valueFromObject shift to state 313
-- On value shift to state 681
-- On usefulType shift to state 203
-- On usefulObjectClassReference shift to state 163
-- On unrestrictedCharacterStringValue shift to state 315
-- On unrestrictedCharacterStringType shift to state 204
-- On type_x shift to state 682
-- On typeWithConstraint shift to state 207
-- On typeFromObject shift to state 208
-- On tuple shift to state 319
-- On taggedType shift to state 209
-- On tag shift to state 210
-- On specialRealValue shift to state 320
-- On simpleDefinedValue shift to state 64
-- On simpleDefinedType shift to state 213
-- On signedNumber shift to state 321
-- On setValue shift to state 322
-- On setType shift to state 215
-- On setOfValue shift to state 323
-- On setOfType shift to state 216
-- On sequenceValue shift to state 324
-- On sequenceType shift to state 217
-- On sequenceOfValue shift to state 325
-- On sequenceOfType shift to state 218
-- On separated_nonempty_list(Comma,actualParameter) shift to state 690
-- On selectionType shift to state 219
-- On restrictedCharacterStringValue shift to state 326
-- On restrictedCharacterStringType shift to state 220
-- On relativeOIDValue shift to state 327
-- On relativeOIDType shift to state 221
-- On referencedValue shift to state 328
-- On referencedType shift to state 222
-- On referencedObjects shift to state 587
-- On realValue shift to state 332
-- On realType shift to state 232
-- On quadruple shift to state 333
-- On parameterizedValueSetType shift to state 233
-- On parameterizedValue shift to state 135
-- On parameterizedType shift to state 234
-- On parameterizedObjectSet shift to state 235
-- On parameterizedObject shift to state 524
-- On openTypeFieldVal shift to state 334
-- On octetStringValue shift to state 335
-- On octetStringType shift to state 237
-- On object_x shift to state 685
-- On objectSet shift to state 686
-- On objectIdentifierValue shift to state 336
-- On objectIdentifierType shift to state 238
-- On objectFromObject shift to state 528
-- On objectDefn shift to state 529
-- On objectClassFieldValue shift to state 337
-- On objectClassFieldType shift to state 239
-- On numericRealValue shift to state 338
-- On nullValue shift to state 339
-- On nullType shift to state 240
-- On integerValue shift to state 340
-- On integerType shift to state 241
-- On instanceOfType shift to state 242
-- On fixedTypeFieldVal shift to state 341
-- On externalValueReference shift to state 136
-- On externalValue shift to state 342
-- On externalTypeReference shift to state 243
-- On externalType shift to state 244
-- On externalObjectSetReference shift to state 245
-- On externalObjectReference shift to state 246
-- On externalObjectClassReference shift to state 164
-- On enumeratedValue shift to state 343
-- On enumeratedType shift to state 247
-- On embeddedPDVValue shift to state 344
-- On embeddedPDVType shift to state 248
-- On definedValue shift to state 345
-- On definedType shift to state 249
-- On definedObjectSet shift to state 250
-- On definedObjectClass shift to state 687
-- On definedObject shift to state 545
-- On defaultSyntax shift to state 546
-- On constrainedType shift to state 257
-- On choiceValue shift to state 346
-- On choiceType shift to state 258
-- On characterStringValue shift to state 347
-- On characterStringType shift to state 259
-- On characterStringList shift to state 348
-- On builtinValue shift to state 349
-- On builtinType shift to state 260
-- On booleanValue shift to state 350
-- On booleanType shift to state 261
-- On bitStringValue shift to state 351
-- On bitStringType shift to state 262
-- On actualParameter shift to state 688
## Reductions:

State 690:
## Known stack suffix:
## actualParameter Comma separated_nonempty_list(Comma,actualParameter)
## LR(1) items:
separated_nonempty_list(Comma,actualParameter) -> actualParameter Comma separated_nonempty_list(Comma,actualParameter) . [ RightBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production separated_nonempty_list(Comma,actualParameter) -> actualParameter Comma separated_nonempty_list(Comma,actualParameter)

State 691:
## Known stack suffix:
## simpleDefinedValue actualParameterList
## LR(1) items:
parameterizedValue -> simpleDefinedValue actualParameterList . [ Upper UNION SemiColon RightParen RightDoubleBracket RightBracket RightBrace Number Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production parameterizedValue -> simpleDefinedValue actualParameterList

State 692:
## Known stack suffix:
## Lower LeftParen numberForm
## LR(1) items:
nameAndNumberForm -> Lower LeftParen numberForm . RightParen [ Upper RightBrace Number Lower ]
## Transitions:
-- On RightParen shift to state 693
## Reductions:

State 693:
## Known stack suffix:
## Lower LeftParen numberForm RightParen
## LR(1) items:
nameAndNumberForm -> Lower LeftParen numberForm RightParen . [ Upper RightBrace Number Lower ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production nameAndNumberForm -> Lower LeftParen numberForm RightParen

State 694:
## Known stack suffix:
## definedValue
## LR(1) items:
numberForm -> definedValue . [ RightParen ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production numberForm -> definedValue

State 695:
## Known stack suffix:
## LeftBrace definedValue
## LR(1) items:
numberForm -> definedValue . [ Upper RightBrace Number Lower ]
objIdComponents -> definedValue . [ Upper RightBrace Number Lower ]
objectIdentifierValue -> LeftBrace definedValue . objIdComponentsList RightBrace [ Upper SemiColon Lower ]
## Transitions:
-- On Upper shift to state 56
-- On Number shift to state 61
-- On Lower shift to state 62
-- On simpleDefinedValue shift to state 64
-- On parameterizedValue shift to state 135
-- On objIdComponentsList shift to state 406
-- On objIdComponents shift to state 376
-- On numberForm shift to state 378
-- On nameForm shift to state 379
-- On nameAndNumberForm shift to state 380
-- On externalValueReference shift to state 136
-- On definedValue shift to state 381
## Reductions:
-- On RightBrace reduce production objIdComponents -> definedValue

State 696:
## Known stack suffix:
## objectIdentifierValue
## LR(1) items:
assignedIdentifier -> objectIdentifierValue . [ Upper SemiColon Lower ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production assignedIdentifier -> objectIdentifierValue

State 697:
## Known stack suffix:
## definedValue
## LR(1) items:
assignedIdentifier -> definedValue . [ Upper SemiColon Lower ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production assignedIdentifier -> definedValue

State 698:
## Known stack suffix:
## Upper assignedIdentifier
## LR(1) items:
globalModuleReference -> Upper assignedIdentifier . [ Upper SemiColon Lower ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production globalModuleReference -> Upper assignedIdentifier

State 699:
## Known stack suffix:
## symbolList FROM globalModuleReference
## LR(1) items:
symbolsFromModule -> symbolList FROM globalModuleReference . [ Upper SemiColon Lower ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production symbolsFromModule -> symbolList FROM globalModuleReference

State 700:
## Known stack suffix:
## symbolsFromModule
## LR(1) items:
symbolsFromModuleList -> symbolsFromModule . [ Upper SemiColon Lower ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production symbolsFromModuleList -> symbolsFromModule

State 701:
## Known stack suffix:
## exports imports
## LR(1) items:
moduleBody -> exports imports . assignmentList [ END ]
## Transitions:
-- On Upper shift to state 702
-- On Lower shift to state 824
-- On valueSetTypeAssignment shift to state 838
-- On valueAssignment shift to state 839
-- On typeAssignment shift to state 840
-- On parameterizedValueSetTypeAssignment shift to state 841
-- On parameterizedValueAssignment shift to state 842
-- On parameterizedTypeAssignment shift to state 843
-- On parameterizedObjectSetAssignment shift to state 844
-- On parameterizedObjectClassAssignment shift to state 845
-- On parameterizedObjectAssignment shift to state 846
-- On parameterizedAssignment shift to state 847
-- On objectSetAssignment shift to state 848
-- On objectClassAssignment shift to state 849
-- On objectAssignment shift to state 850
-- On assignmentList shift to state 851
-- On assignment shift to state 853
## Reductions:

State 702:
## Known stack suffix:
## Upper
## LR(1) items:
objectClassAssignment -> Upper . Assignment objectClass [ Upper Lower END ]
objectSetAssignment -> Upper . definedObjectClass Assignment objectSet [ Upper Lower END ]
parameterizedObjectClassAssignment -> Upper . parameterList Assignment objectClass [ Upper Lower END ]
parameterizedObjectSetAssignment -> Upper . parameterList definedObjectClass Assignment objectSet [ Upper Lower END ]
parameterizedTypeAssignment -> Upper . parameterList Assignment type_x [ Upper Lower END ]
parameterizedValueSetTypeAssignment -> Upper . parameterList type_x Assignment valueSet [ Upper Lower END ]
typeAssignment -> Upper . Assignment type_x [ Upper Lower END ]
valueSetTypeAssignment -> Upper . type_x Assignment valueSet [ Upper Lower END ]
## Transitions:
-- On VisibleString shift to state 66
-- On VideotexString shift to state 67
-- On Upper shift to state 113
-- On UniversalString shift to state 72
-- On UTF8String shift to state 73
-- On UTCTime shift to state 74
-- On TeletexString shift to state 75
-- On TYPE_IDENTIFIER shift to state 76
-- On T61String shift to state 78
-- On SET shift to state 79
-- On SEQUENCE shift to state 111
-- On RELATIVE_OID shift to state 116
-- On REAL shift to state 117
-- On PrintableString shift to state 118
-- On ObjectDescriptor shift to state 119
-- On OCTET shift to state 120
-- On OBJECT shift to state 122
-- On NumericString shift to state 124
-- On NULL shift to state 125
-- On Lower shift to state 127
-- On LeftBracket shift to state 129
-- On LeftBrace shift to state 703
-- On ISO646String shift to state 140
-- On INTEGER shift to state 141
-- On INSTANCE shift to state 157
-- On IA5String shift to state 166
-- On GraphicString shift to state 167
-- On GeneralizedTime shift to state 168
-- On GeneralString shift to state 169
-- On EXTERNAL shift to state 170
-- On ENUMERATED shift to state 171
-- On EMBEDDED shift to state 179
-- On CHOICE shift to state 181
-- On CHARACTER shift to state 184
-- On BOOLEAN shift to state 186
-- On BMPString shift to state 187
-- On BIT shift to state 188
-- On Assignment shift to state 720
-- On ABSTRACT_SYNTAX shift to state 162
-- On valueSetFromObjects shift to state 202
-- On usefulType shift to state 203
-- On usefulObjectClassReference shift to state 163
-- On unrestrictedCharacterStringType shift to state 204
-- On type_x shift to state 808
-- On typeWithConstraint shift to state 207
-- On typeFromObject shift to state 208
-- On taggedType shift to state 209
-- On tag shift to state 210
-- On simpleDefinedType shift to state 213
-- On setType shift to state 215
-- On setOfType shift to state 216
-- On sequenceType shift to state 217
-- On sequenceOfType shift to state 218
-- On selectionType shift to state 219
-- On restrictedCharacterStringType shift to state 220
-- On relativeOIDType shift to state 221
-- On referencedType shift to state 222
-- On referencedObjects shift to state 223
-- On realType shift to state 232
-- On parameterizedValueSetType shift to state 233
-- On parameterizedType shift to state 234
-- On parameterizedObjectSet shift to state 235
-- On parameterizedObject shift to state 236
-- On parameterList shift to state 811
-- On octetStringType shift to state 237
-- On objectIdentifierType shift to state 238
-- On objectClassFieldType shift to state 239
-- On nullType shift to state 240
-- On integerType shift to state 241
-- On instanceOfType shift to state 242
-- On externalTypeReference shift to state 243
-- On externalType shift to state 244
-- On externalObjectSetReference shift to state 245
-- On externalObjectReference shift to state 246
-- On externalObjectClassReference shift to state 164
-- On enumeratedType shift to state 247
-- On embeddedPDVType shift to state 248
-- On definedType shift to state 249
-- On definedObjectSet shift to state 250
-- On definedObjectClass shift to state 821
-- On definedObject shift to state 255
-- On constrainedType shift to state 257
-- On choiceType shift to state 258
-- On characterStringType shift to state 259
-- On builtinType shift to state 260
-- On booleanType shift to state 261
-- On bitStringType shift to state 262
## Reductions:

State 703:
## Known stack suffix:
## LeftBrace
## LR(1) items:
parameterList -> LeftBrace . separated_nonempty_list(Comma,parameter) RightBrace [ VisibleString VideotexString Upper UniversalString UTF8String UTCTime TeletexString TYPE_IDENTIFIER T61String SET SEQUENCE RELATIVE_OID REAL PrintableString ObjectDescriptor OCTET OBJECT NumericString NULL Lower LeftBracket ISO646String INTEGER INSTANCE IA5String GraphicString GeneralizedTime GeneralString EXTERNAL ENUMERATED EMBEDDED CHOICE CHARACTER BOOLEAN BMPString BIT Assignment ABSTRACT_SYNTAX ]
## Transitions:
-- On VisibleString shift to state 66
-- On VideotexString shift to state 67
-- On Upper shift to state 704
-- On UniversalString shift to state 72
-- On UTF8String shift to state 73
-- On UTCTime shift to state 74
-- On TeletexString shift to state 75
-- On TYPE_IDENTIFIER shift to state 76
-- On T61String shift to state 78
-- On SET shift to state 79
-- On SEQUENCE shift to state 111
-- On RELATIVE_OID shift to state 116
-- On REAL shift to state 117
-- On PrintableString shift to state 118
-- On ObjectDescriptor shift to state 119
-- On OCTET shift to state 120
-- On OBJECT shift to state 122
-- On NumericString shift to state 124
-- On NULL shift to state 125
-- On Lower shift to state 705
-- On LeftBracket shift to state 129
-- On ISO646String shift to state 140
-- On INTEGER shift to state 141
-- On INSTANCE shift to state 157
-- On IA5String shift to state 166
-- On GraphicString shift to state 167
-- On GeneralizedTime shift to state 168
-- On GeneralString shift to state 169
-- On EXTERNAL shift to state 170
-- On ENUMERATED shift to state 171
-- On EMBEDDED shift to state 179
-- On CHOICE shift to state 181
-- On CHARACTER shift to state 184
-- On BOOLEAN shift to state 186
-- On BMPString shift to state 187
-- On BIT shift to state 188
-- On ABSTRACT_SYNTAX shift to state 162
-- On valueSetFromObjects shift to state 202
-- On usefulType shift to state 203
-- On usefulObjectClassReference shift to state 163
-- On unrestrictedCharacterStringType shift to state 204
-- On type_x shift to state 706
-- On typeWithConstraint shift to state 207
-- On typeFromObject shift to state 208
-- On taggedType shift to state 209
-- On tag shift to state 210
-- On simpleDefinedType shift to state 213
-- On setType shift to state 215
-- On setOfType shift to state 216
-- On sequenceType shift to state 217
-- On sequenceOfType shift to state 218
-- On separated_nonempty_list(Comma,parameter) shift to state 707
-- On selectionType shift to state 219
-- On restrictedCharacterStringType shift to state 220
-- On relativeOIDType shift to state 221
-- On referencedType shift to state 222
-- On referencedObjects shift to state 223
-- On reference shift to state 709
-- On realType shift to state 232
-- On parameterizedValueSetType shift to state 233
-- On parameterizedType shift to state 234
-- On parameterizedObjectSet shift to state 235
-- On parameterizedObject shift to state 236
-- On parameter shift to state 710
-- On paramGovernor shift to state 713
-- On octetStringType shift to state 237
-- On objectIdentifierType shift to state 238
-- On objectClassFieldType shift to state 239
-- On nullType shift to state 240
-- On integerType shift to state 241
-- On instanceOfType shift to state 242
-- On governor shift to state 716
-- On externalTypeReference shift to state 243
-- On externalType shift to state 244
-- On externalObjectSetReference shift to state 245
-- On externalObjectReference shift to state 246
-- On externalObjectClassReference shift to state 164
-- On enumeratedType shift to state 247
-- On embeddedPDVType shift to state 248
-- On dummyReference shift to state 717
-- On dummyGovernor shift to state 718
-- On definedType shift to state 249
-- On definedObjectSet shift to state 250
-- On definedObjectClass shift to state 719
-- On definedObject shift to state 255
-- On constrainedType shift to state 257
-- On choiceType shift to state 258
-- On characterStringType shift to state 259
-- On builtinType shift to state 260
-- On booleanType shift to state 261
-- On bitStringType shift to state 262
## Reductions:

State 704:
## Known stack suffix:
## Upper
## LR(1) items:
definedObjectClass -> Upper . [ Dot Colon ]
definedObjectSet -> Upper . [ LeftBrace Dot ]
definedType -> Upper . [ LeftParen Colon ]
externalObjectClassReference -> Upper . Dot Upper [ Dot Colon ]
externalObjectReference -> Upper . Dot Lower [ LeftBrace Dot ]
externalObjectSetReference -> Upper . Dot Upper [ LeftBrace Dot ]
externalTypeReference -> Upper . Dot Upper [ LeftParen LeftBrace Colon ]
reference -> Upper . [ RightBrace Comma Colon ]
simpleDefinedType -> Upper . [ LeftBrace ]
## Transitions:
-- On Dot shift to state 114
## Reductions:
-- On RightBrace reduce production reference -> Upper
-- On LeftParen reduce production definedType -> Upper
-- On LeftBrace reduce production definedObjectSet -> Upper
-- On Comma reduce production reference -> Upper
-- On Colon reduce production reference -> Upper

State 705:
## Known stack suffix:
## Lower
## LR(1) items:
definedObject -> Lower . [ LeftBrace Dot ]
reference -> Lower . [ RightBrace Comma Colon ]
selectionType -> Lower . LessThan type_x [ LeftParen Colon ]
## Transitions:
-- On LessThan shift to state 128
## Reductions:
-- On RightBrace reduce production reference -> Lower
-- On LeftBrace reduce production definedObject -> Lower
-- On Dot reduce production definedObject -> Lower
-- On Comma reduce production reference -> Lower
-- On Colon reduce production reference -> Lower

State 706:
## Known stack suffix:
## type_x
## LR(1) items:
constrainedType -> type_x . constraint_x [ LeftParen Colon ]
governor -> type_x . [ Colon ]
## Transitions:
-- On LeftParen shift to state 81
-- On constraint_x shift to state 206
## Reductions:
-- On Colon reduce production governor -> type_x

State 707:
## Known stack suffix:
## LeftBrace separated_nonempty_list(Comma,parameter)
## LR(1) items:
parameterList -> LeftBrace separated_nonempty_list(Comma,parameter) . RightBrace [ VisibleString VideotexString Upper UniversalString UTF8String UTCTime TeletexString TYPE_IDENTIFIER T61String SET SEQUENCE RELATIVE_OID REAL PrintableString ObjectDescriptor OCTET OBJECT NumericString NULL Lower LeftBracket ISO646String INTEGER INSTANCE IA5String GraphicString GeneralizedTime GeneralString EXTERNAL ENUMERATED EMBEDDED CHOICE CHARACTER BOOLEAN BMPString BIT Assignment ABSTRACT_SYNTAX ]
## Transitions:
-- On RightBrace shift to state 708
## Reductions:

State 708:
## Known stack suffix:
## LeftBrace separated_nonempty_list(Comma,parameter) RightBrace
## LR(1) items:
parameterList -> LeftBrace separated_nonempty_list(Comma,parameter) RightBrace . [ VisibleString VideotexString Upper UniversalString UTF8String UTCTime TeletexString TYPE_IDENTIFIER T61String SET SEQUENCE RELATIVE_OID REAL PrintableString ObjectDescriptor OCTET OBJECT NumericString NULL Lower LeftBracket ISO646String INTEGER INSTANCE IA5String GraphicString GeneralizedTime GeneralString EXTERNAL ENUMERATED EMBEDDED CHOICE CHARACTER BOOLEAN BMPString BIT Assignment ABSTRACT_SYNTAX ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production parameterList -> LeftBrace separated_nonempty_list(Comma,parameter) RightBrace

State 709:
## Known stack suffix:
## reference
## LR(1) items:
dummyReference -> reference . [ RightBrace Comma Colon ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production dummyReference -> reference

State 710:
## Known stack suffix:
## parameter
## LR(1) items:
separated_nonempty_list(Comma,parameter) -> parameter . [ RightBrace ]
separated_nonempty_list(Comma,parameter) -> parameter . Comma separated_nonempty_list(Comma,parameter) [ RightBrace ]
## Transitions:
-- On Comma shift to state 711
## Reductions:
-- On RightBrace reduce production separated_nonempty_list(Comma,parameter) -> parameter

State 711:
## Known stack suffix:
## parameter Comma
## LR(1) items:
separated_nonempty_list(Comma,parameter) -> parameter Comma . separated_nonempty_list(Comma,parameter) [ RightBrace ]
## Transitions:
-- On VisibleString shift to state 66
-- On VideotexString shift to state 67
-- On Upper shift to state 704
-- On UniversalString shift to state 72
-- On UTF8String shift to state 73
-- On UTCTime shift to state 74
-- On TeletexString shift to state 75
-- On TYPE_IDENTIFIER shift to state 76
-- On T61String shift to state 78
-- On SET shift to state 79
-- On SEQUENCE shift to state 111
-- On RELATIVE_OID shift to state 116
-- On REAL shift to state 117
-- On PrintableString shift to state 118
-- On ObjectDescriptor shift to state 119
-- On OCTET shift to state 120
-- On OBJECT shift to state 122
-- On NumericString shift to state 124
-- On NULL shift to state 125
-- On Lower shift to state 705
-- On LeftBracket shift to state 129
-- On ISO646String shift to state 140
-- On INTEGER shift to state 141
-- On INSTANCE shift to state 157
-- On IA5String shift to state 166
-- On GraphicString shift to state 167
-- On GeneralizedTime shift to state 168
-- On GeneralString shift to state 169
-- On EXTERNAL shift to state 170
-- On ENUMERATED shift to state 171
-- On EMBEDDED shift to state 179
-- On CHOICE shift to state 181
-- On CHARACTER shift to state 184
-- On BOOLEAN shift to state 186
-- On BMPString shift to state 187
-- On BIT shift to state 188
-- On ABSTRACT_SYNTAX shift to state 162
-- On valueSetFromObjects shift to state 202
-- On usefulType shift to state 203
-- On usefulObjectClassReference shift to state 163
-- On unrestrictedCharacterStringType shift to state 204
-- On type_x shift to state 706
-- On typeWithConstraint shift to state 207
-- On typeFromObject shift to state 208
-- On taggedType shift to state 209
-- On tag shift to state 210
-- On simpleDefinedType shift to state 213
-- On setType shift to state 215
-- On setOfType shift to state 216
-- On sequenceType shift to state 217
-- On sequenceOfType shift to state 218
-- On separated_nonempty_list(Comma,parameter) shift to state 712
-- On selectionType shift to state 219
-- On restrictedCharacterStringType shift to state 220
-- On relativeOIDType shift to state 221
-- On referencedType shift to state 222
-- On referencedObjects shift to state 223
-- On reference shift to state 709
-- On realType shift to state 232
-- On parameterizedValueSetType shift to state 233
-- On parameterizedType shift to state 234
-- On parameterizedObjectSet shift to state 235
-- On parameterizedObject shift to state 236
-- On parameter shift to state 710
-- On paramGovernor shift to state 713
-- On octetStringType shift to state 237
-- On objectIdentifierType shift to state 238
-- On objectClassFieldType shift to state 239
-- On nullType shift to state 240
-- On integerType shift to state 241
-- On instanceOfType shift to state 242
-- On governor shift to state 716
-- On externalTypeReference shift to state 243
-- On externalType shift to state 244
-- On externalObjectSetReference shift to state 245
-- On externalObjectReference shift to state 246
-- On externalObjectClassReference shift to state 164
-- On enumeratedType shift to state 247
-- On embeddedPDVType shift to state 248
-- On dummyReference shift to state 717
-- On dummyGovernor shift to state 718
-- On definedType shift to state 249
-- On definedObjectSet shift to state 250
-- On definedObjectClass shift to state 719
-- On definedObject shift to state 255
-- On constrainedType shift to state 257
-- On choiceType shift to state 258
-- On characterStringType shift to state 259
-- On builtinType shift to state 260
-- On booleanType shift to state 261
-- On bitStringType shift to state 262
## Reductions:

State 712:
## Known stack suffix:
## parameter Comma separated_nonempty_list(Comma,parameter)
## LR(1) items:
separated_nonempty_list(Comma,parameter) -> parameter Comma separated_nonempty_list(Comma,parameter) . [ RightBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production separated_nonempty_list(Comma,parameter) -> parameter Comma separated_nonempty_list(Comma,parameter)

State 713:
## Known stack suffix:
## paramGovernor
## LR(1) items:
parameter -> paramGovernor . Colon dummyReference [ RightBrace Comma ]
## Transitions:
-- On Colon shift to state 714
## Reductions:

State 714:
## Known stack suffix:
## paramGovernor Colon
## LR(1) items:
parameter -> paramGovernor Colon . dummyReference [ RightBrace Comma ]
## Transitions:
-- On Upper shift to state 31
-- On Lower shift to state 32
-- On reference shift to state 709
-- On dummyReference shift to state 715
## Reductions:

State 715:
## Known stack suffix:
## paramGovernor Colon dummyReference
## LR(1) items:
parameter -> paramGovernor Colon dummyReference . [ RightBrace Comma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production parameter -> paramGovernor Colon dummyReference

State 716:
## Known stack suffix:
## governor
## LR(1) items:
paramGovernor -> governor . [ Colon ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production paramGovernor -> governor

State 717:
## Known stack suffix:
## dummyReference
## LR(1) items:
dummyGovernor -> dummyReference . [ Colon ]
parameter -> dummyReference . [ RightBrace Comma ]
## Transitions:
## Reductions:
-- On RightBrace reduce production parameter -> dummyReference
-- On Comma reduce production parameter -> dummyReference
-- On Colon reduce production dummyGovernor -> dummyReference

State 718:
## Known stack suffix:
## dummyGovernor
## LR(1) items:
paramGovernor -> dummyGovernor . [ Colon ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production paramGovernor -> dummyGovernor

State 719:
## Known stack suffix:
## definedObjectClass
## LR(1) items:
governor -> definedObjectClass . [ Colon ]
objectClassFieldType -> definedObjectClass . Dot fieldName [ LeftParen Colon ]
## Transitions:
-- On Dot shift to state 253
## Reductions:
-- On Colon reduce production governor -> definedObjectClass

State 720:
## Known stack suffix:
## Upper Assignment
## LR(1) items:
objectClassAssignment -> Upper Assignment . objectClass [ Upper Lower END ]
typeAssignment -> Upper Assignment . type_x [ Upper Lower END ]
## Transitions:
-- On VisibleString shift to state 66
-- On VideotexString shift to state 67
-- On Upper shift to state 113
-- On UniversalString shift to state 72
-- On UTF8String shift to state 73
-- On UTCTime shift to state 74
-- On TeletexString shift to state 75
-- On TYPE_IDENTIFIER shift to state 76
-- On T61String shift to state 78
-- On SET shift to state 79
-- On SEQUENCE shift to state 111
-- On RELATIVE_OID shift to state 116
-- On REAL shift to state 117
-- On PrintableString shift to state 118
-- On ObjectDescriptor shift to state 119
-- On OCTET shift to state 120
-- On OBJECT shift to state 122
-- On NumericString shift to state 124
-- On NULL shift to state 125
-- On Lower shift to state 127
-- On LeftBracket shift to state 129
-- On ISO646String shift to state 140
-- On INTEGER shift to state 141
-- On INSTANCE shift to state 157
-- On IA5String shift to state 166
-- On GraphicString shift to state 167
-- On GeneralizedTime shift to state 168
-- On GeneralString shift to state 169
-- On EXTERNAL shift to state 170
-- On ENUMERATED shift to state 171
-- On EMBEDDED shift to state 179
-- On CLASS shift to state 721
-- On CHOICE shift to state 181
-- On CHARACTER shift to state 184
-- On BOOLEAN shift to state 186
-- On BMPString shift to state 187
-- On BIT shift to state 188
-- On ABSTRACT_SYNTAX shift to state 162
-- On valueSetFromObjects shift to state 202
-- On usefulType shift to state 203
-- On usefulObjectClassReference shift to state 163
-- On unrestrictedCharacterStringType shift to state 204
-- On type_x shift to state 801
-- On typeWithConstraint shift to state 207
-- On typeFromObject shift to state 208
-- On taggedType shift to state 209
-- On tag shift to state 210
-- On simpleDefinedType shift to state 213
-- On setType shift to state 215
-- On setOfType shift to state 216
-- On sequenceType shift to state 217
-- On sequenceOfType shift to state 218
-- On selectionType shift to state 219
-- On restrictedCharacterStringType shift to state 220
-- On relativeOIDType shift to state 221
-- On referencedType shift to state 222
-- On referencedObjects shift to state 223
-- On realType shift to state 232
-- On parameterizedValueSetType shift to state 233
-- On parameterizedType shift to state 234
-- On parameterizedObjectSet shift to state 235
-- On parameterizedObjectClass shift to state 802
-- On parameterizedObject shift to state 236
-- On octetStringType shift to state 237
-- On objectIdentifierType shift to state 238
-- On objectClassFieldType shift to state 239
-- On objectClassDefn shift to state 803
-- On objectClass shift to state 804
-- On nullType shift to state 240
-- On integerType shift to state 241
-- On instanceOfType shift to state 242
-- On externalTypeReference shift to state 243
-- On externalType shift to state 244
-- On externalObjectSetReference shift to state 245
-- On externalObjectReference shift to state 246
-- On externalObjectClassReference shift to state 164
-- On enumeratedType shift to state 247
-- On embeddedPDVType shift to state 248
-- On definedType shift to state 249
-- On definedObjectSet shift to state 805
-- On definedObjectClass shift to state 807
-- On definedObject shift to state 255
-- On constrainedType shift to state 257
-- On choiceType shift to state 258
-- On characterStringType shift to state 259
-- On builtinType shift to state 260
-- On booleanType shift to state 261
-- On bitStringType shift to state 262
## Reductions:

State 721:
## Known stack suffix:
## CLASS
## LR(1) items:
objectClassDefn -> CLASS . LeftBrace separated_nonempty_list(Comma,fieldSpec) RightBrace option(withSyntaxSpec) [ Upper Lower END ]
## Transitions:
-- On LeftBrace shift to state 722
## Reductions:

State 722:
## Known stack suffix:
## CLASS LeftBrace
## LR(1) items:
objectClassDefn -> CLASS LeftBrace . separated_nonempty_list(Comma,fieldSpec) RightBrace option(withSyntaxSpec) [ Upper Lower END ]
## Transitions:
-- On UpperField shift to state 723
-- On LowerField shift to state 745
-- On variableTypeValueSetFieldSpec shift to state 770
-- On variableTypeValueFieldSpec shift to state 771
-- On typeFieldSpec shift to state 772
-- On separated_nonempty_list(Comma,fieldSpec) shift to state 773
-- On objectSetFieldSpec shift to state 794
-- On objectFieldSpec shift to state 795
-- On fixedTypeValueSetFieldSpec shift to state 796
-- On fixedTypeValueFieldSpec shift to state 797
-- On fieldSpec shift to state 798
## Reductions:

State 723:
## Known stack suffix:
## UpperField
## LR(1) items:
fixedTypeValueSetFieldSpec -> UpperField . type_x option(valueSetOptionalitySpec) [ RightBrace Comma ]
objectSetFieldSpec -> UpperField . definedObjectClass option(objectSetOptionalitySpec) [ RightBrace Comma ]
typeFieldSpec -> UpperField . option(typeOptionalitySpec) [ RightBrace Comma ]
variableTypeValueSetFieldSpec -> UpperField . fieldName option(valueSetOptionalitySpec) [ RightBrace Comma ]
## Transitions:
-- On VisibleString shift to state 66
-- On VideotexString shift to state 67
-- On UpperField shift to state 225
-- On Upper shift to state 113
-- On UniversalString shift to state 72
-- On UTF8String shift to state 73
-- On UTCTime shift to state 74
-- On TeletexString shift to state 75
-- On TYPE_IDENTIFIER shift to state 76
-- On T61String shift to state 78
-- On SET shift to state 79
-- On SEQUENCE shift to state 111
-- On RELATIVE_OID shift to state 116
-- On REAL shift to state 117
-- On PrintableString shift to state 118
-- On ObjectDescriptor shift to state 119
-- On OPTIONAL shift to state 724
-- On OCTET shift to state 120
-- On OBJECT shift to state 122
-- On NumericString shift to state 124
-- On NULL shift to state 125
-- On LowerField shift to state 226
-- On Lower shift to state 127
-- On LeftBracket shift to state 129
-- On ISO646String shift to state 140
-- On INTEGER shift to state 141
-- On INSTANCE shift to state 157
-- On IA5String shift to state 166
-- On GraphicString shift to state 167
-- On GeneralizedTime shift to state 168
-- On GeneralString shift to state 169
-- On EXTERNAL shift to state 170
-- On ENUMERATED shift to state 171
-- On EMBEDDED shift to state 179
-- On DEFAULT shift to state 725
-- On CHOICE shift to state 181
-- On CHARACTER shift to state 184
-- On BOOLEAN shift to state 186
-- On BMPString shift to state 187
-- On BIT shift to state 188
-- On ABSTRACT_SYNTAX shift to state 162
-- On valueSetFromObjects shift to state 202
-- On usefulType shift to state 203
-- On usefulObjectClassReference shift to state 163
-- On unrestrictedCharacterStringType shift to state 204
-- On type_x shift to state 727
-- On typeWithConstraint shift to state 207
-- On typeOptionalitySpec shift to state 734
-- On typeFromObject shift to state 208
-- On taggedType shift to state 209
-- On tag shift to state 210
-- On simpleDefinedType shift to state 213
-- On setType shift to state 215
-- On setOfType shift to state 216
-- On sequenceType shift to state 217
-- On sequenceOfType shift to state 218
-- On separated_nonempty_list(Dot,primitiveFieldName) shift to state 227
-- On selectionType shift to state 219
-- On restrictedCharacterStringType shift to state 220
-- On relativeOIDType shift to state 221
-- On referencedType shift to state 222
-- On referencedObjects shift to state 223
-- On realType shift to state 232
-- On primitiveFieldName shift to state 228
-- On parameterizedValueSetType shift to state 233
-- On parameterizedType shift to state 234
-- On parameterizedObjectSet shift to state 235
-- On parameterizedObject shift to state 236
-- On option(typeOptionalitySpec) shift to state 735
-- On octetStringType shift to state 237
-- On objectIdentifierType shift to state 238
-- On objectClassFieldType shift to state 239
-- On nullType shift to state 240
-- On integerType shift to state 241
-- On instanceOfType shift to state 242
-- On fieldName shift to state 736
-- On externalTypeReference shift to state 243
-- On externalType shift to state 244
-- On externalObjectSetReference shift to state 245
-- On externalObjectReference shift to state 246
-- On externalObjectClassReference shift to state 164
-- On enumeratedType shift to state 247
-- On embeddedPDVType shift to state 248
-- On definedType shift to state 249
-- On definedObjectSet shift to state 250
-- On definedObjectClass shift to state 738
-- On definedObject shift to state 255
-- On constrainedType shift to state 257
-- On choiceType shift to state 258
-- On characterStringType shift to state 259
-- On builtinType shift to state 260
-- On booleanType shift to state 261
-- On bitStringType shift to state 262
## Reductions:
-- On RightBrace reduce production option(typeOptionalitySpec) ->
-- On Comma reduce production option(typeOptionalitySpec) ->

State 724:
## Known stack suffix:
## OPTIONAL
## LR(1) items:
typeOptionalitySpec -> OPTIONAL . [ RightBrace Comma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production typeOptionalitySpec -> OPTIONAL

State 725:
## Known stack suffix:
## DEFAULT
## LR(1) items:
typeOptionalitySpec -> DEFAULT . type_x [ RightBrace Comma ]
## Transitions:
-- On VisibleString shift to state 66
-- On VideotexString shift to state 67
-- On Upper shift to state 113
-- On UniversalString shift to state 72
-- On UTF8String shift to state 73
-- On UTCTime shift to state 74
-- On TeletexString shift to state 75
-- On TYPE_IDENTIFIER shift to state 76
-- On T61String shift to state 78
-- On SET shift to state 79
-- On SEQUENCE shift to state 111
-- On RELATIVE_OID shift to state 116
-- On REAL shift to state 117
-- On PrintableString shift to state 118
-- On ObjectDescriptor shift to state 119
-- On OCTET shift to state 120
-- On OBJECT shift to state 122
-- On NumericString shift to state 124
-- On NULL shift to state 125
-- On Lower shift to state 127
-- On LeftBracket shift to state 129
-- On ISO646String shift to state 140
-- On INTEGER shift to state 141
-- On INSTANCE shift to state 157
-- On IA5String shift to state 166
-- On GraphicString shift to state 167
-- On GeneralizedTime shift to state 168
-- On GeneralString shift to state 169
-- On EXTERNAL shift to state 170
-- On ENUMERATED shift to state 171
-- On EMBEDDED shift to state 179
-- On CHOICE shift to state 181
-- On CHARACTER shift to state 184
-- On BOOLEAN shift to state 186
-- On BMPString shift to state 187
-- On BIT shift to state 188
-- On ABSTRACT_SYNTAX shift to state 162
-- On valueSetFromObjects shift to state 202
-- On usefulType shift to state 203
-- On usefulObjectClassReference shift to state 163
-- On unrestrictedCharacterStringType shift to state 204
-- On type_x shift to state 726
-- On typeWithConstraint shift to state 207
-- On typeFromObject shift to state 208
-- On taggedType shift to state 209
-- On tag shift to state 210
-- On simpleDefinedType shift to state 213
-- On setType shift to state 215
-- On setOfType shift to state 216
-- On sequenceType shift to state 217
-- On sequenceOfType shift to state 218
-- On selectionType shift to state 219
-- On restrictedCharacterStringType shift to state 220
-- On relativeOIDType shift to state 221
-- On referencedType shift to state 222
-- On referencedObjects shift to state 223
-- On realType shift to state 232
-- On parameterizedValueSetType shift to state 233
-- On parameterizedType shift to state 234
-- On parameterizedObjectSet shift to state 235
-- On parameterizedObject shift to state 236
-- On octetStringType shift to state 237
-- On objectIdentifierType shift to state 238
-- On objectClassFieldType shift to state 239
-- On nullType shift to state 240
-- On integerType shift to state 241
-- On instanceOfType shift to state 242
-- On externalTypeReference shift to state 243
-- On externalType shift to state 244
-- On externalObjectSetReference shift to state 245
-- On externalObjectReference shift to state 246
-- On externalObjectClassReference shift to state 164
-- On enumeratedType shift to state 247
-- On embeddedPDVType shift to state 248
-- On definedType shift to state 249
-- On definedObjectSet shift to state 250
-- On definedObjectClass shift to state 252
-- On definedObject shift to state 255
-- On constrainedType shift to state 257
-- On choiceType shift to state 258
-- On characterStringType shift to state 259
-- On builtinType shift to state 260
-- On booleanType shift to state 261
-- On bitStringType shift to state 262
## Reductions:

State 726:
## Known stack suffix:
## DEFAULT type_x
## LR(1) items:
constrainedType -> type_x . constraint_x [ RightBrace LeftParen Comma ]
typeOptionalitySpec -> DEFAULT type_x . [ RightBrace Comma ]
## Transitions:
-- On LeftParen shift to state 81
-- On constraint_x shift to state 206
## Reductions:
-- On RightBrace reduce production typeOptionalitySpec -> DEFAULT type_x
-- On Comma reduce production typeOptionalitySpec -> DEFAULT type_x

State 727:
## Known stack suffix:
## UpperField type_x
## LR(1) items:
constrainedType -> type_x . constraint_x [ RightBrace OPTIONAL LeftParen DEFAULT Comma ]
fixedTypeValueSetFieldSpec -> UpperField type_x . option(valueSetOptionalitySpec) [ RightBrace Comma ]
## Transitions:
-- On OPTIONAL shift to state 728
-- On LeftParen shift to state 81
-- On DEFAULT shift to state 729
-- On valueSetOptionalitySpec shift to state 732
-- On option(valueSetOptionalitySpec) shift to state 733
-- On constraint_x shift to state 206
## Reductions:
-- On RightBrace reduce production option(valueSetOptionalitySpec) ->
-- On Comma reduce production option(valueSetOptionalitySpec) ->

State 728:
## Known stack suffix:
## OPTIONAL
## LR(1) items:
valueSetOptionalitySpec -> OPTIONAL . [ RightBrace Comma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production valueSetOptionalitySpec -> OPTIONAL

State 729:
## Known stack suffix:
## DEFAULT
## LR(1) items:
valueSetOptionalitySpec -> DEFAULT . valueSet [ RightBrace Comma ]
## Transitions:
-- On LeftBrace shift to state 730
-- On valueSet shift to state 731
## Reductions:

State 730:
## Known stack suffix:
## LeftBrace
## LR(1) items:
valueSet -> LeftBrace . elementSetSpecs RightBrace [ Upper RightBrace Lower END Comma ]
## Transitions:
-- On WITH shift to state 82
-- On VisibleString shift to state 66
-- On VideotexString shift to state 67
-- On Upper shift to state 108
-- On UniversalString shift to state 72
-- On UTF8String shift to state 73
-- On UTCTime shift to state 74
-- On TeletexString shift to state 75
-- On TYPE_IDENTIFIER shift to state 76
-- On TRUE shift to state 77
-- On T61String shift to state 78
-- On SIZE shift to state 80
-- On SET shift to state 79
-- On SEQUENCE shift to state 111
-- On RealNumber shift to state 296
-- On RELATIVE_OID shift to state 116
-- On REAL shift to state 117
-- On PrintableString shift to state 118
-- On PLUS_INFINITY shift to state 297
-- On PATTERN shift to state 495
-- On ObjectDescriptor shift to state 119
-- On OCTET shift to state 120
-- On OBJECT shift to state 122
-- On NumericString shift to state 124
-- On Number shift to state 145
-- On NULL shift to state 298
-- On MINUS_INFINITY shift to state 299
-- On MIN shift to state 497
-- On Lower shift to state 300
-- On LeftParen shift to state 498
-- On LeftBracket shift to state 129
-- On LeftBrace shift to state 499
-- On ISO646String shift to state 140
-- On INTEGER shift to state 141
-- On INSTANCE shift to state 157
-- On INCLUDES shift to state 503
-- On IA5String shift to state 166
-- On Hyphen shift to state 306
-- On Hstring shift to state 308
-- On GraphicString shift to state 167
-- On GeneralizedTime shift to state 168
-- On GeneralString shift to state 169
-- On FROM shift to state 504
-- On FALSE shift to state 309
-- On EXTERNAL shift to state 170
-- On ENUMERATED shift to state 171
-- On EMBEDDED shift to state 179
-- On DefinedSyntax shift to state 508
-- On Cstring shift to state 310
-- On CONTAINING shift to state 311
-- On CHOICE shift to state 181
-- On CHARACTER shift to state 184
-- On Bstring shift to state 312
-- On BOOLEAN shift to state 186
-- On BMPString shift to state 187
-- On BIT shift to state 188
-- On ALL shift to state 509
-- On ABSTRACT_SYNTAX shift to state 162
-- On valueSetFromObjects shift to state 202
-- On valueRange shift to state 511
-- On valueFromObject shift to state 313
-- On value shift to state 512
-- On usefulType shift to state 203
-- On usefulObjectClassReference shift to state 163
-- On unrestrictedCharacterStringValue shift to state 315
-- On unrestrictedCharacterStringType shift to state 204
-- On unions shift to state 549
-- On uElems shift to state 550
-- On type_x shift to state 513
-- On typeWithConstraint shift to state 207
-- On typeFromObject shift to state 208
-- On typeConstraint shift to state 514
-- On tuple shift to state 319
-- On taggedType shift to state 209
-- On tag shift to state 210
-- On subtypeElements shift to state 515
-- On specialRealValue shift to state 320
-- On sizeConstraint shift to state 516
-- On singleValue shift to state 517
-- On simpleDefinedValue shift to state 64
-- On simpleDefinedType shift to state 213
-- On signedNumber shift to state 321
-- On setValue shift to state 322
-- On setType shift to state 215
-- On setOfValue shift to state 323
-- On setOfType shift to state 216
-- On sequenceValue shift to state 324
-- On sequenceType shift to state 217
-- On sequenceOfValue shift to state 325
-- On sequenceOfType shift to state 218
-- On selectionType shift to state 219
-- On rootElementSetSpec shift to state 648
-- On restrictedCharacterStringValue shift to state 326
-- On restrictedCharacterStringType shift to state 220
-- On relativeOIDValue shift to state 327
-- On relativeOIDType shift to state 221
-- On referencedValue shift to state 328
-- On referencedType shift to state 222
-- On referencedObjects shift to state 518
-- On realValue shift to state 332
-- On realType shift to state 232
-- On quadruple shift to state 333
-- On permittedAlphabet shift to state 521
-- On patternConstraint shift to state 522
-- On parameterizedValueSetType shift to state 233
-- On parameterizedValue shift to state 135
-- On parameterizedType shift to state 234
-- On parameterizedObjectSet shift to state 523
-- On parameterizedObject shift to state 524
-- On openTypeFieldVal shift to state 334
-- On octetStringValue shift to state 335
-- On octetStringType shift to state 237
-- On object_x shift to state 525
-- On objectSetFromObjects shift to state 526
-- On objectSetElements shift to state 527
-- On objectIdentifierValue shift to state 336
-- On objectIdentifierType shift to state 238
-- On objectFromObject shift to state 528
-- On objectDefn shift to state 529
-- On objectClassFieldValue shift to state 337
-- On objectClassFieldType shift to state 239
-- On numericRealValue shift to state 338
-- On nullValue shift to state 339
-- On nullType shift to state 240
-- On lowerEndValue shift to state 530
-- On lowerEndPoint shift to state 532
-- On intersections shift to state 564
-- On intersectionElements shift to state 555
-- On integerValue shift to state 340
-- On integerType shift to state 241
-- On instanceOfType shift to state 242
-- On innerTypeConstraints shift to state 540
-- On includes shift to state 541
-- On iElems shift to state 556
-- On fixedTypeFieldVal shift to state 341
-- On externalValueReference shift to state 136
-- On externalValue shift to state 342
-- On externalTypeReference shift to state 243
-- On externalType shift to state 244
-- On externalObjectSetReference shift to state 245
-- On externalObjectReference shift to state 246
-- On externalObjectClassReference shift to state 164
-- On enumeratedValue shift to state 343
-- On enumeratedType shift to state 247
-- On embeddedPDVValue shift to state 344
-- On embeddedPDVType shift to state 248
-- On elems shift to state 561
-- On elements shift to state 563
-- On elementSetSpecs shift to state 580
-- On elementSetSpec shift to state 582
-- On definedValue shift to state 345
-- On definedType shift to state 249
-- On definedObjectSet shift to state 544
-- On definedObjectClass shift to state 252
-- On definedObject shift to state 545
-- On defaultSyntax shift to state 546
-- On containedSubtype shift to state 547
-- On constrainedType shift to state 257
-- On choiceValue shift to state 346
-- On choiceType shift to state 258
-- On characterStringValue shift to state 347
-- On characterStringType shift to state 259
-- On characterStringList shift to state 348
-- On builtinValue shift to state 349
-- On builtinType shift to state 260
-- On booleanValue shift to state 350
-- On booleanType shift to state 261
-- On bitStringValue shift to state 351
-- On bitStringType shift to state 262
## Reductions:

State 731:
## Known stack suffix:
## DEFAULT valueSet
## LR(1) items:
valueSetOptionalitySpec -> DEFAULT valueSet . [ RightBrace Comma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production valueSetOptionalitySpec -> DEFAULT valueSet

State 732:
## Known stack suffix:
## valueSetOptionalitySpec
## LR(1) items:
option(valueSetOptionalitySpec) -> valueSetOptionalitySpec . [ RightBrace Comma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production option(valueSetOptionalitySpec) -> valueSetOptionalitySpec

State 733:
## Known stack suffix:
## UpperField type_x option(valueSetOptionalitySpec)
## LR(1) items:
fixedTypeValueSetFieldSpec -> UpperField type_x option(valueSetOptionalitySpec) . [ RightBrace Comma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production fixedTypeValueSetFieldSpec -> UpperField type_x option(valueSetOptionalitySpec)

State 734:
## Known stack suffix:
## typeOptionalitySpec
## LR(1) items:
option(typeOptionalitySpec) -> typeOptionalitySpec . [ RightBrace Comma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production option(typeOptionalitySpec) -> typeOptionalitySpec

State 735:
## Known stack suffix:
## UpperField option(typeOptionalitySpec)
## LR(1) items:
typeFieldSpec -> UpperField option(typeOptionalitySpec) . [ RightBrace Comma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production typeFieldSpec -> UpperField option(typeOptionalitySpec)

State 736:
## Known stack suffix:
## UpperField fieldName
## LR(1) items:
variableTypeValueSetFieldSpec -> UpperField fieldName . option(valueSetOptionalitySpec) [ RightBrace Comma ]
## Transitions:
-- On OPTIONAL shift to state 728
-- On DEFAULT shift to state 729
-- On valueSetOptionalitySpec shift to state 732
-- On option(valueSetOptionalitySpec) shift to state 737
## Reductions:
-- On RightBrace reduce production option(valueSetOptionalitySpec) ->
-- On Comma reduce production option(valueSetOptionalitySpec) ->

State 737:
## Known stack suffix:
## UpperField fieldName option(valueSetOptionalitySpec)
## LR(1) items:
variableTypeValueSetFieldSpec -> UpperField fieldName option(valueSetOptionalitySpec) . [ RightBrace Comma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production variableTypeValueSetFieldSpec -> UpperField fieldName option(valueSetOptionalitySpec)

State 738:
## Known stack suffix:
## UpperField definedObjectClass
## LR(1) items:
objectClassFieldType -> definedObjectClass . Dot fieldName [ RightBrace OPTIONAL LeftParen DEFAULT Comma ]
objectSetFieldSpec -> UpperField definedObjectClass . option(objectSetOptionalitySpec) [ RightBrace Comma ]
## Transitions:
-- On OPTIONAL shift to state 739
-- On Dot shift to state 253
-- On DEFAULT shift to state 740
-- On option(objectSetOptionalitySpec) shift to state 743
-- On objectSetOptionalitySpec shift to state 744
## Reductions:
-- On RightBrace reduce production option(objectSetOptionalitySpec) ->
-- On Comma reduce production option(objectSetOptionalitySpec) ->

State 739:
## Known stack suffix:
## OPTIONAL
## LR(1) items:
objectSetOptionalitySpec -> OPTIONAL . [ RightBrace Comma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production objectSetOptionalitySpec -> OPTIONAL

State 740:
## Known stack suffix:
## DEFAULT
## LR(1) items:
objectSetOptionalitySpec -> DEFAULT . objectSet [ RightBrace Comma ]
## Transitions:
-- On LeftBrace shift to state 741
-- On objectSet shift to state 742
## Reductions:

State 741:
## Known stack suffix:
## LeftBrace
## LR(1) items:
objectSet -> LeftBrace . objectSetSpec RightBrace [ Upper RightBrace Lower END Comma ]
## Transitions:
-- On WITH shift to state 82
-- On VisibleString shift to state 66
-- On VideotexString shift to state 67
-- On Upper shift to state 108
-- On UniversalString shift to state 72
-- On UTF8String shift to state 73
-- On UTCTime shift to state 74
-- On TeletexString shift to state 75
-- On TYPE_IDENTIFIER shift to state 76
-- On TRUE shift to state 77
-- On T61String shift to state 78
-- On SIZE shift to state 80
-- On SET shift to state 79
-- On SEQUENCE shift to state 111
-- On RealNumber shift to state 296
-- On RELATIVE_OID shift to state 116
-- On REAL shift to state 117
-- On PrintableString shift to state 118
-- On PLUS_INFINITY shift to state 297
-- On PATTERN shift to state 495
-- On ObjectDescriptor shift to state 119
-- On OCTET shift to state 120
-- On OBJECT shift to state 122
-- On NumericString shift to state 124
-- On Number shift to state 145
-- On NULL shift to state 298
-- On MINUS_INFINITY shift to state 299
-- On MIN shift to state 497
-- On Lower shift to state 300
-- On LeftParen shift to state 498
-- On LeftBracket shift to state 129
-- On LeftBrace shift to state 499
-- On ISO646String shift to state 140
-- On INTEGER shift to state 141
-- On INSTANCE shift to state 157
-- On INCLUDES shift to state 503
-- On IA5String shift to state 166
-- On Hyphen shift to state 306
-- On Hstring shift to state 308
-- On GraphicString shift to state 167
-- On GeneralizedTime shift to state 168
-- On GeneralString shift to state 169
-- On FROM shift to state 504
-- On FALSE shift to state 309
-- On Ellipsis shift to state 506
-- On EXTERNAL shift to state 170
-- On ENUMERATED shift to state 171
-- On EMBEDDED shift to state 179
-- On DefinedSyntax shift to state 508
-- On Cstring shift to state 310
-- On CONTAINING shift to state 311
-- On CHOICE shift to state 181
-- On CHARACTER shift to state 184
-- On Bstring shift to state 312
-- On BOOLEAN shift to state 186
-- On BMPString shift to state 187
-- On BIT shift to state 188
-- On ALL shift to state 509
-- On ABSTRACT_SYNTAX shift to state 162
-- On valueSetFromObjects shift to state 202
-- On valueRange shift to state 511
-- On valueFromObject shift to state 313
-- On value shift to state 512
-- On usefulType shift to state 203
-- On usefulObjectClassReference shift to state 163
-- On unrestrictedCharacterStringValue shift to state 315
-- On unrestrictedCharacterStringType shift to state 204
-- On unions shift to state 549
-- On uElems shift to state 550
-- On type_x shift to state 513
-- On typeWithConstraint shift to state 207
-- On typeFromObject shift to state 208
-- On typeConstraint shift to state 514
-- On tuple shift to state 319
-- On taggedType shift to state 209
-- On tag shift to state 210
-- On subtypeElements shift to state 515
-- On specialRealValue shift to state 320
-- On sizeConstraint shift to state 516
-- On singleValue shift to state 517
-- On simpleDefinedValue shift to state 64
-- On simpleDefinedType shift to state 213
-- On signedNumber shift to state 321
-- On setValue shift to state 322
-- On setType shift to state 215
-- On setOfValue shift to state 323
-- On setOfType shift to state 216
-- On sequenceValue shift to state 324
-- On sequenceType shift to state 217
-- On sequenceOfValue shift to state 325
-- On sequenceOfType shift to state 218
-- On selectionType shift to state 219
-- On rootElementSetSpec shift to state 595
-- On restrictedCharacterStringValue shift to state 326
-- On restrictedCharacterStringType shift to state 220
-- On relativeOIDValue shift to state 327
-- On relativeOIDType shift to state 221
-- On referencedValue shift to state 328
-- On referencedType shift to state 222
-- On referencedObjects shift to state 518
-- On realValue shift to state 332
-- On realType shift to state 232
-- On quadruple shift to state 333
-- On permittedAlphabet shift to state 521
-- On patternConstraint shift to state 522
-- On parameterizedValueSetType shift to state 233
-- On parameterizedValue shift to state 135
-- On parameterizedType shift to state 234
-- On parameterizedObjectSet shift to state 523
-- On parameterizedObject shift to state 524
-- On openTypeFieldVal shift to state 334
-- On octetStringValue shift to state 335
-- On octetStringType shift to state 237
-- On object_x shift to state 525
-- On objectSetSpec shift to state 573
-- On objectSetFromObjects shift to state 526
-- On objectSetElements shift to state 527
-- On objectIdentifierValue shift to state 336
-- On objectIdentifierType shift to state 238
-- On objectFromObject shift to state 528
-- On objectDefn shift to state 529
-- On objectClassFieldValue shift to state 337
-- On objectClassFieldType shift to state 239
-- On numericRealValue shift to state 338
-- On nullValue shift to state 339
-- On nullType shift to state 240
-- On lowerEndValue shift to state 530
-- On lowerEndPoint shift to state 532
-- On intersections shift to state 564
-- On intersectionElements shift to state 555
-- On integerValue shift to state 340
-- On integerType shift to state 241
-- On instanceOfType shift to state 242
-- On innerTypeConstraints shift to state 540
-- On includes shift to state 541
-- On iElems shift to state 556
-- On fixedTypeFieldVal shift to state 341
-- On externalValueReference shift to state 136
-- On externalValue shift to state 342
-- On externalTypeReference shift to state 243
-- On externalType shift to state 244
-- On externalObjectSetReference shift to state 245
-- On externalObjectReference shift to state 246
-- On externalObjectClassReference shift to state 164
-- On enumeratedValue shift to state 343
-- On enumeratedType shift to state 247
-- On embeddedPDVValue shift to state 344
-- On embeddedPDVType shift to state 248
-- On elems shift to state 561
-- On elements shift to state 563
-- On elementSetSpec shift to state 582
-- On definedValue shift to state 345
-- On definedType shift to state 249
-- On definedObjectSet shift to state 544
-- On definedObjectClass shift to state 252
-- On definedObject shift to state 545
-- On defaultSyntax shift to state 546
-- On containedSubtype shift to state 547
-- On constrainedType shift to state 257
-- On choiceValue shift to state 346
-- On choiceType shift to state 258
-- On characterStringValue shift to state 347
-- On characterStringType shift to state 259
-- On characterStringList shift to state 348
-- On builtinValue shift to state 349
-- On builtinType shift to state 260
-- On booleanValue shift to state 350
-- On booleanType shift to state 261
-- On bitStringValue shift to state 351
-- On bitStringType shift to state 262
## Reductions:

State 742:
## Known stack suffix:
## DEFAULT objectSet
## LR(1) items:
objectSetOptionalitySpec -> DEFAULT objectSet . [ RightBrace Comma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production objectSetOptionalitySpec -> DEFAULT objectSet

State 743:
## Known stack suffix:
## UpperField definedObjectClass option(objectSetOptionalitySpec)
## LR(1) items:
objectSetFieldSpec -> UpperField definedObjectClass option(objectSetOptionalitySpec) . [ RightBrace Comma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production objectSetFieldSpec -> UpperField definedObjectClass option(objectSetOptionalitySpec)

State 744:
## Known stack suffix:
## objectSetOptionalitySpec
## LR(1) items:
option(objectSetOptionalitySpec) -> objectSetOptionalitySpec . [ RightBrace Comma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production option(objectSetOptionalitySpec) -> objectSetOptionalitySpec

State 745:
## Known stack suffix:
## LowerField
## LR(1) items:
fixedTypeValueFieldSpec -> LowerField . type_x option(UNIQUE) option(valueOptionalitySpec) [ RightBrace Comma ]
objectFieldSpec -> LowerField . definedObjectClass option(objectOptionalitySpec) [ RightBrace Comma ]
variableTypeValueFieldSpec -> LowerField . fieldName option(valueOptionalitySpec) [ RightBrace Comma ]
## Transitions:
-- On VisibleString shift to state 66
-- On VideotexString shift to state 67
-- On UpperField shift to state 225
-- On Upper shift to state 113
-- On UniversalString shift to state 72
-- On UTF8String shift to state 73
-- On UTCTime shift to state 74
-- On TeletexString shift to state 75
-- On TYPE_IDENTIFIER shift to state 76
-- On T61String shift to state 78
-- On SET shift to state 79
-- On SEQUENCE shift to state 111
-- On RELATIVE_OID shift to state 116
-- On REAL shift to state 117
-- On PrintableString shift to state 118
-- On ObjectDescriptor shift to state 119
-- On OCTET shift to state 120
-- On OBJECT shift to state 122
-- On NumericString shift to state 124
-- On NULL shift to state 125
-- On LowerField shift to state 226
-- On Lower shift to state 127
-- On LeftBracket shift to state 129
-- On ISO646String shift to state 140
-- On INTEGER shift to state 141
-- On INSTANCE shift to state 157
-- On IA5String shift to state 166
-- On GraphicString shift to state 167
-- On GeneralizedTime shift to state 168
-- On GeneralString shift to state 169
-- On EXTERNAL shift to state 170
-- On ENUMERATED shift to state 171
-- On EMBEDDED shift to state 179
-- On CHOICE shift to state 181
-- On CHARACTER shift to state 184
-- On BOOLEAN shift to state 186
-- On BMPString shift to state 187
-- On BIT shift to state 188
-- On ABSTRACT_SYNTAX shift to state 162
-- On valueSetFromObjects shift to state 202
-- On usefulType shift to state 203
-- On usefulObjectClassReference shift to state 163
-- On unrestrictedCharacterStringType shift to state 204
-- On type_x shift to state 746
-- On typeWithConstraint shift to state 207
-- On typeFromObject shift to state 208
-- On taggedType shift to state 209
-- On tag shift to state 210
-- On simpleDefinedType shift to state 213
-- On setType shift to state 215
-- On setOfType shift to state 216
-- On sequenceType shift to state 217
-- On sequenceOfType shift to state 218
-- On separated_nonempty_list(Dot,primitiveFieldName) shift to state 227
-- On selectionType shift to state 219
-- On restrictedCharacterStringType shift to state 220
-- On relativeOIDType shift to state 221
-- On referencedType shift to state 222
-- On referencedObjects shift to state 223
-- On realType shift to state 232
-- On primitiveFieldName shift to state 228
-- On parameterizedValueSetType shift to state 233
-- On parameterizedType shift to state 234
-- On parameterizedObjectSet shift to state 235
-- On parameterizedObject shift to state 236
-- On octetStringType shift to state 237
-- On objectIdentifierType shift to state 238
-- On objectClassFieldType shift to state 239
-- On nullType shift to state 240
-- On integerType shift to state 241
-- On instanceOfType shift to state 242
-- On fieldName shift to state 754
-- On externalTypeReference shift to state 243
-- On externalType shift to state 244
-- On externalObjectSetReference shift to state 245
-- On externalObjectReference shift to state 246
-- On externalObjectClassReference shift to state 164
-- On enumeratedType shift to state 247
-- On embeddedPDVType shift to state 248
-- On definedType shift to state 249
-- On definedObjectSet shift to state 250
-- On definedObjectClass shift to state 756
-- On definedObject shift to state 255
-- On constrainedType shift to state 257
-- On choiceType shift to state 258
-- On characterStringType shift to state 259
-- On builtinType shift to state 260
-- On booleanType shift to state 261
-- On bitStringType shift to state 262
## Reductions:

State 746:
## Known stack suffix:
## LowerField type_x
## LR(1) items:
constrainedType -> type_x . constraint_x [ UNIQUE RightBrace OPTIONAL LeftParen DEFAULT Comma ]
fixedTypeValueFieldSpec -> LowerField type_x . option(UNIQUE) option(valueOptionalitySpec) [ RightBrace Comma ]
## Transitions:
-- On UNIQUE shift to state 747
-- On LeftParen shift to state 81
-- On option(UNIQUE) shift to state 748
-- On constraint_x shift to state 206
## Reductions:
-- On RightBrace reduce production option(UNIQUE) ->
-- On OPTIONAL reduce production option(UNIQUE) ->
-- On DEFAULT reduce production option(UNIQUE) ->
-- On Comma reduce production option(UNIQUE) ->

State 747:
## Known stack suffix:
## UNIQUE
## LR(1) items:
option(UNIQUE) -> UNIQUE . [ RightBrace OPTIONAL DEFAULT Comma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production option(UNIQUE) -> UNIQUE

State 748:
## Known stack suffix:
## LowerField type_x option(UNIQUE)
## LR(1) items:
fixedTypeValueFieldSpec -> LowerField type_x option(UNIQUE) . option(valueOptionalitySpec) [ RightBrace Comma ]
## Transitions:
-- On OPTIONAL shift to state 749
-- On DEFAULT shift to state 750
-- On valueOptionalitySpec shift to state 752
-- On option(valueOptionalitySpec) shift to state 753
## Reductions:
-- On RightBrace reduce production option(valueOptionalitySpec) ->
-- On Comma reduce production option(valueOptionalitySpec) ->

State 749:
## Known stack suffix:
## OPTIONAL
## LR(1) items:
valueOptionalitySpec -> OPTIONAL . [ RightBrace Comma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production valueOptionalitySpec -> OPTIONAL

State 750:
## Known stack suffix:
## DEFAULT
## LR(1) items:
valueOptionalitySpec -> DEFAULT . value [ RightBrace Comma ]
## Transitions:
-- On VisibleString shift to state 66
-- On VideotexString shift to state 67
-- On Upper shift to state 108
-- On UniversalString shift to state 72
-- On UTF8String shift to state 73
-- On UTCTime shift to state 74
-- On TeletexString shift to state 75
-- On TYPE_IDENTIFIER shift to state 76
-- On TRUE shift to state 77
-- On T61String shift to state 78
-- On SET shift to state 79
-- On SEQUENCE shift to state 111
-- On RealNumber shift to state 296
-- On RELATIVE_OID shift to state 116
-- On REAL shift to state 117
-- On PrintableString shift to state 118
-- On PLUS_INFINITY shift to state 297
-- On ObjectDescriptor shift to state 119
-- On OCTET shift to state 120
-- On OBJECT shift to state 122
-- On NumericString shift to state 124
-- On Number shift to state 145
-- On NULL shift to state 298
-- On MINUS_INFINITY shift to state 299
-- On Lower shift to state 300
-- On LeftBracket shift to state 129
-- On LeftBrace shift to state 302
-- On ISO646String shift to state 140
-- On INTEGER shift to state 141
-- On INSTANCE shift to state 157
-- On IA5String shift to state 166
-- On Hyphen shift to state 306
-- On Hstring shift to state 308
-- On GraphicString shift to state 167
-- On GeneralizedTime shift to state 168
-- On GeneralString shift to state 169
-- On FALSE shift to state 309
-- On EXTERNAL shift to state 170
-- On ENUMERATED shift to state 171
-- On EMBEDDED shift to state 179
-- On Cstring shift to state 310
-- On CONTAINING shift to state 311
-- On CHOICE shift to state 181
-- On CHARACTER shift to state 184
-- On Bstring shift to state 312
-- On BOOLEAN shift to state 186
-- On BMPString shift to state 187
-- On BIT shift to state 188
-- On ABSTRACT_SYNTAX shift to state 162
-- On valueSetFromObjects shift to state 202
-- On valueFromObject shift to state 313
-- On value shift to state 751
-- On usefulType shift to state 203
-- On usefulObjectClassReference shift to state 163
-- On unrestrictedCharacterStringValue shift to state 315
-- On unrestrictedCharacterStringType shift to state 204
-- On type_x shift to state 316
-- On typeWithConstraint shift to state 207
-- On typeFromObject shift to state 208
-- On tuple shift to state 319
-- On taggedType shift to state 209
-- On tag shift to state 210
-- On specialRealValue shift to state 320
-- On simpleDefinedValue shift to state 64
-- On simpleDefinedType shift to state 213
-- On signedNumber shift to state 321
-- On setValue shift to state 322
-- On setType shift to state 215
-- On setOfValue shift to state 323
-- On setOfType shift to state 216
-- On sequenceValue shift to state 324
-- On sequenceType shift to state 217
-- On sequenceOfValue shift to state 325
-- On sequenceOfType shift to state 218
-- On selectionType shift to state 219
-- On restrictedCharacterStringValue shift to state 326
-- On restrictedCharacterStringType shift to state 220
-- On relativeOIDValue shift to state 327
-- On relativeOIDType shift to state 221
-- On referencedValue shift to state 328
-- On referencedType shift to state 222
-- On referencedObjects shift to state 329
-- On realValue shift to state 332
-- On realType shift to state 232
-- On quadruple shift to state 333
-- On parameterizedValueSetType shift to state 233
-- On parameterizedValue shift to state 135
-- On parameterizedType shift to state 234
-- On parameterizedObjectSet shift to state 235
-- On parameterizedObject shift to state 236
-- On openTypeFieldVal shift to state 334
-- On octetStringValue shift to state 335
-- On octetStringType shift to state 237
-- On objectIdentifierValue shift to state 336
-- On objectIdentifierType shift to state 238
-- On objectClassFieldValue shift to state 337
-- On objectClassFieldType shift to state 239
-- On numericRealValue shift to state 338
-- On nullValue shift to state 339
-- On nullType shift to state 240
-- On integerValue shift to state 340
-- On integerType shift to state 241
-- On instanceOfType shift to state 242
-- On fixedTypeFieldVal shift to state 341
-- On externalValueReference shift to state 136
-- On externalValue shift to state 342
-- On externalTypeReference shift to state 243
-- On externalType shift to state 244
-- On externalObjectSetReference shift to state 245
-- On externalObjectReference shift to state 246
-- On externalObjectClassReference shift to state 164
-- On enumeratedValue shift to state 343
-- On enumeratedType shift to state 247
-- On embeddedPDVValue shift to state 344
-- On embeddedPDVType shift to state 248
-- On definedValue shift to state 345
-- On definedType shift to state 249
-- On definedObjectSet shift to state 250
-- On definedObjectClass shift to state 252
-- On definedObject shift to state 255
-- On constrainedType shift to state 257
-- On choiceValue shift to state 346
-- On choiceType shift to state 258
-- On characterStringValue shift to state 347
-- On characterStringType shift to state 259
-- On characterStringList shift to state 348
-- On builtinValue shift to state 349
-- On builtinType shift to state 260
-- On booleanValue shift to state 350
-- On booleanType shift to state 261
-- On bitStringValue shift to state 351
-- On bitStringType shift to state 262
## Reductions:

State 751:
## Known stack suffix:
## DEFAULT value
## LR(1) items:
valueOptionalitySpec -> DEFAULT value . [ RightBrace Comma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production valueOptionalitySpec -> DEFAULT value

State 752:
## Known stack suffix:
## valueOptionalitySpec
## LR(1) items:
option(valueOptionalitySpec) -> valueOptionalitySpec . [ RightBrace Comma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production option(valueOptionalitySpec) -> valueOptionalitySpec

State 753:
## Known stack suffix:
## LowerField type_x option(UNIQUE) option(valueOptionalitySpec)
## LR(1) items:
fixedTypeValueFieldSpec -> LowerField type_x option(UNIQUE) option(valueOptionalitySpec) . [ RightBrace Comma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production fixedTypeValueFieldSpec -> LowerField type_x option(UNIQUE) option(valueOptionalitySpec)

State 754:
## Known stack suffix:
## LowerField fieldName
## LR(1) items:
variableTypeValueFieldSpec -> LowerField fieldName . option(valueOptionalitySpec) [ RightBrace Comma ]
## Transitions:
-- On OPTIONAL shift to state 749
-- On DEFAULT shift to state 750
-- On valueOptionalitySpec shift to state 752
-- On option(valueOptionalitySpec) shift to state 755
## Reductions:
-- On RightBrace reduce production option(valueOptionalitySpec) ->
-- On Comma reduce production option(valueOptionalitySpec) ->

State 755:
## Known stack suffix:
## LowerField fieldName option(valueOptionalitySpec)
## LR(1) items:
variableTypeValueFieldSpec -> LowerField fieldName option(valueOptionalitySpec) . [ RightBrace Comma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production variableTypeValueFieldSpec -> LowerField fieldName option(valueOptionalitySpec)

State 756:
## Known stack suffix:
## LowerField definedObjectClass
## LR(1) items:
objectClassFieldType -> definedObjectClass . Dot fieldName [ UNIQUE RightBrace OPTIONAL LeftParen DEFAULT Comma ]
objectFieldSpec -> LowerField definedObjectClass . option(objectOptionalitySpec) [ RightBrace Comma ]
## Transitions:
-- On OPTIONAL shift to state 757
-- On Dot shift to state 253
-- On DEFAULT shift to state 758
-- On option(objectOptionalitySpec) shift to state 768
-- On objectOptionalitySpec shift to state 769
## Reductions:
-- On RightBrace reduce production option(objectOptionalitySpec) ->
-- On Comma reduce production option(objectOptionalitySpec) ->

State 757:
## Known stack suffix:
## OPTIONAL
## LR(1) items:
objectOptionalitySpec -> OPTIONAL . [ RightBrace Comma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production objectOptionalitySpec -> OPTIONAL

State 758:
## Known stack suffix:
## DEFAULT
## LR(1) items:
objectOptionalitySpec -> DEFAULT . object_x [ RightBrace Comma ]
## Transitions:
-- On Upper shift to state 759
-- On Lower shift to state 762
-- On LeftBrace shift to state 763
-- On DefinedSyntax shift to state 508
-- On referencedObjects shift to state 764
-- On parameterizedObjectSet shift to state 235
-- On parameterizedObject shift to state 524
-- On object_x shift to state 767
-- On objectFromObject shift to state 528
-- On objectDefn shift to state 529
-- On externalObjectSetReference shift to state 245
-- On externalObjectReference shift to state 246
-- On definedObjectSet shift to state 250
-- On definedObject shift to state 545
-- On defaultSyntax shift to state 546
## Reductions:

State 759:
## Known stack suffix:
## Upper
## LR(1) items:
definedObjectSet -> Upper . [ LeftBrace Dot ]
externalObjectReference -> Upper . Dot Lower [ Upper RightBrace Lower LeftBrace END Dot Comma ]
externalObjectSetReference -> Upper . Dot Upper [ LeftBrace Dot ]
## Transitions:
-- On Dot shift to state 760
## Reductions:
-- On LeftBrace reduce production definedObjectSet -> Upper

State 760:
## Known stack suffix:
## Upper Dot
## LR(1) items:
externalObjectReference -> Upper Dot . Lower [ Upper RightBrace Lower LeftBrace END Dot Comma ]
externalObjectSetReference -> Upper Dot . Upper [ LeftBrace Dot ]
## Transitions:
-- On Upper shift to state 761
-- On Lower shift to state 115
## Reductions:

State 761:
## Known stack suffix:
## Upper Dot Upper
## LR(1) items:
externalObjectSetReference -> Upper Dot Upper . [ LeftBrace Dot ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production externalObjectSetReference -> Upper Dot Upper

State 762:
## Known stack suffix:
## Lower
## LR(1) items:
definedObject -> Lower . [ Upper RightBrace Lower LeftBrace END Dot Comma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production definedObject -> Lower

State 763:
## Known stack suffix:
## LeftBrace
## LR(1) items:
defaultSyntax -> LeftBrace . loption(separated_nonempty_list(Comma,fieldSetting)) RightBrace [ Upper RightBrace Lower END Comma ]
## Transitions:
-- On UpperField shift to state 225
-- On LowerField shift to state 226
-- On separated_nonempty_list(Comma,fieldSetting) shift to state 500
-- On primitiveFieldName shift to state 501
-- On loption(separated_nonempty_list(Comma,fieldSetting)) shift to state 575
-- On fieldSetting shift to state 577
## Reductions:
-- On RightBrace reduce production loption(separated_nonempty_list(Comma,fieldSetting)) ->

State 764:
## Known stack suffix:
## referencedObjects
## LR(1) items:
objectFromObject -> referencedObjects . Dot fieldName [ Upper RightBrace Lower END Comma ]
## Transitions:
-- On Dot shift to state 765
## Reductions:

State 765:
## Known stack suffix:
## referencedObjects Dot
## LR(1) items:
objectFromObject -> referencedObjects Dot . fieldName [ Upper RightBrace Lower END Comma ]
## Transitions:
-- On UpperField shift to state 225
-- On LowerField shift to state 226
-- On separated_nonempty_list(Dot,primitiveFieldName) shift to state 227
-- On primitiveFieldName shift to state 228
-- On fieldName shift to state 766
## Reductions:

State 766:
## Known stack suffix:
## referencedObjects Dot fieldName
## LR(1) items:
objectFromObject -> referencedObjects Dot fieldName . [ Upper RightBrace Lower END Comma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production objectFromObject -> referencedObjects Dot fieldName

State 767:
## Known stack suffix:
## DEFAULT object_x
## LR(1) items:
objectOptionalitySpec -> DEFAULT object_x . [ RightBrace Comma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production objectOptionalitySpec -> DEFAULT object_x

State 768:
## Known stack suffix:
## LowerField definedObjectClass option(objectOptionalitySpec)
## LR(1) items:
objectFieldSpec -> LowerField definedObjectClass option(objectOptionalitySpec) . [ RightBrace Comma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production objectFieldSpec -> LowerField definedObjectClass option(objectOptionalitySpec)

State 769:
## Known stack suffix:
## objectOptionalitySpec
## LR(1) items:
option(objectOptionalitySpec) -> objectOptionalitySpec . [ RightBrace Comma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production option(objectOptionalitySpec) -> objectOptionalitySpec

State 770:
## Known stack suffix:
## variableTypeValueSetFieldSpec
## LR(1) items:
fieldSpec -> variableTypeValueSetFieldSpec . [ RightBrace Comma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production fieldSpec -> variableTypeValueSetFieldSpec

State 771:
## Known stack suffix:
## variableTypeValueFieldSpec
## LR(1) items:
fieldSpec -> variableTypeValueFieldSpec . [ RightBrace Comma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production fieldSpec -> variableTypeValueFieldSpec

State 772:
## Known stack suffix:
## typeFieldSpec
## LR(1) items:
fieldSpec -> typeFieldSpec . [ RightBrace Comma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production fieldSpec -> typeFieldSpec

State 773:
## Known stack suffix:
## CLASS LeftBrace separated_nonempty_list(Comma,fieldSpec)
## LR(1) items:
objectClassDefn -> CLASS LeftBrace separated_nonempty_list(Comma,fieldSpec) . RightBrace option(withSyntaxSpec) [ Upper Lower END ]
## Transitions:
-- On RightBrace shift to state 774
## Reductions:

State 774:
## Known stack suffix:
## CLASS LeftBrace separated_nonempty_list(Comma,fieldSpec) RightBrace
## LR(1) items:
objectClassDefn -> CLASS LeftBrace separated_nonempty_list(Comma,fieldSpec) RightBrace . option(withSyntaxSpec) [ Upper Lower END ]
## Transitions:
-- On WITH shift to state 775
-- On withSyntaxSpec shift to state 792
-- On option(withSyntaxSpec) shift to state 793
## Reductions:
-- On Upper reduce production option(withSyntaxSpec) ->
-- On Lower reduce production option(withSyntaxSpec) ->
-- On END reduce production option(withSyntaxSpec) ->

State 775:
## Known stack suffix:
## WITH
## LR(1) items:
withSyntaxSpec -> WITH . SYNTAX syntaxList [ Upper Lower END ]
## Transitions:
-- On SYNTAX shift to state 776
## Reductions:

State 776:
## Known stack suffix:
## WITH SYNTAX
## LR(1) items:
withSyntaxSpec -> WITH SYNTAX . syntaxList [ Upper Lower END ]
## Transitions:
-- On LeftBrace shift to state 777
-- On syntaxList shift to state 791
## Reductions:

State 777:
## Known stack suffix:
## LeftBrace
## LR(1) items:
syntaxList -> LeftBrace . nonempty_list(tokenOrGroupSpec) RightBrace [ Upper Lower END ]
## Transitions:
-- On UpperField shift to state 225
-- On Upper shift to state 778
-- On LowerField shift to state 226
-- On LeftBracket shift to state 779
-- On Comma shift to state 780
-- On tokenOrGroupSpec shift to state 781
-- On requiredToken shift to state 782
-- On primitiveFieldName shift to state 783
-- On optionalGroup shift to state 784
-- On nonempty_list(tokenOrGroupSpec) shift to state 789
-- On literal shift to state 786
## Reductions:

State 778:
## Known stack suffix:
## Upper
## LR(1) items:
literal -> Upper . [ UpperField Upper RightBrace LowerField LeftBracket Comma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production literal -> Upper

State 779:
## Known stack suffix:
## LeftBracket
## LR(1) items:
optionalGroup -> LeftBracket . nonempty_list(tokenOrGroupSpec) RightBrace [ UpperField Upper RightBrace LowerField LeftBracket Comma ]
## Transitions:
-- On UpperField shift to state 225
-- On Upper shift to state 778
-- On LowerField shift to state 226
-- On LeftBracket shift to state 779
-- On Comma shift to state 780
-- On tokenOrGroupSpec shift to state 781
-- On requiredToken shift to state 782
-- On primitiveFieldName shift to state 783
-- On optionalGroup shift to state 784
-- On nonempty_list(tokenOrGroupSpec) shift to state 787
-- On literal shift to state 786
## Reductions:

State 780:
## Known stack suffix:
## Comma
## LR(1) items:
literal -> Comma . [ UpperField Upper RightBrace LowerField LeftBracket Comma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production literal -> Comma

State 781:
## Known stack suffix:
## tokenOrGroupSpec
## LR(1) items:
nonempty_list(tokenOrGroupSpec) -> tokenOrGroupSpec . [ RightBrace ]
nonempty_list(tokenOrGroupSpec) -> tokenOrGroupSpec . nonempty_list(tokenOrGroupSpec) [ RightBrace ]
## Transitions:
-- On UpperField shift to state 225
-- On Upper shift to state 778
-- On LowerField shift to state 226
-- On LeftBracket shift to state 779
-- On Comma shift to state 780
-- On tokenOrGroupSpec shift to state 781
-- On requiredToken shift to state 782
-- On primitiveFieldName shift to state 783
-- On optionalGroup shift to state 784
-- On nonempty_list(tokenOrGroupSpec) shift to state 785
-- On literal shift to state 786
## Reductions:
-- On RightBrace reduce production nonempty_list(tokenOrGroupSpec) -> tokenOrGroupSpec

State 782:
## Known stack suffix:
## requiredToken
## LR(1) items:
tokenOrGroupSpec -> requiredToken . [ UpperField Upper RightBrace LowerField LeftBracket Comma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production tokenOrGroupSpec -> requiredToken

State 783:
## Known stack suffix:
## primitiveFieldName
## LR(1) items:
requiredToken -> primitiveFieldName . [ UpperField Upper RightBrace LowerField LeftBracket Comma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production requiredToken -> primitiveFieldName

State 784:
## Known stack suffix:
## optionalGroup
## LR(1) items:
tokenOrGroupSpec -> optionalGroup . [ UpperField Upper RightBrace LowerField LeftBracket Comma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production tokenOrGroupSpec -> optionalGroup

State 785:
## Known stack suffix:
## tokenOrGroupSpec nonempty_list(tokenOrGroupSpec)
## LR(1) items:
nonempty_list(tokenOrGroupSpec) -> tokenOrGroupSpec nonempty_list(tokenOrGroupSpec) . [ RightBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production nonempty_list(tokenOrGroupSpec) -> tokenOrGroupSpec nonempty_list(tokenOrGroupSpec)

State 786:
## Known stack suffix:
## literal
## LR(1) items:
requiredToken -> literal . [ UpperField Upper RightBrace LowerField LeftBracket Comma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production requiredToken -> literal

State 787:
## Known stack suffix:
## LeftBracket nonempty_list(tokenOrGroupSpec)
## LR(1) items:
optionalGroup -> LeftBracket nonempty_list(tokenOrGroupSpec) . RightBrace [ UpperField Upper RightBrace LowerField LeftBracket Comma ]
## Transitions:
-- On RightBrace shift to state 788
## Reductions:

State 788:
## Known stack suffix:
## LeftBracket nonempty_list(tokenOrGroupSpec) RightBrace
## LR(1) items:
optionalGroup -> LeftBracket nonempty_list(tokenOrGroupSpec) RightBrace . [ UpperField Upper RightBrace LowerField LeftBracket Comma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production optionalGroup -> LeftBracket nonempty_list(tokenOrGroupSpec) RightBrace

State 789:
## Known stack suffix:
## LeftBrace nonempty_list(tokenOrGroupSpec)
## LR(1) items:
syntaxList -> LeftBrace nonempty_list(tokenOrGroupSpec) . RightBrace [ Upper Lower END ]
## Transitions:
-- On RightBrace shift to state 790
## Reductions:

State 790:
## Known stack suffix:
## LeftBrace nonempty_list(tokenOrGroupSpec) RightBrace
## LR(1) items:
syntaxList -> LeftBrace nonempty_list(tokenOrGroupSpec) RightBrace . [ Upper Lower END ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production syntaxList -> LeftBrace nonempty_list(tokenOrGroupSpec) RightBrace

State 791:
## Known stack suffix:
## WITH SYNTAX syntaxList
## LR(1) items:
withSyntaxSpec -> WITH SYNTAX syntaxList . [ Upper Lower END ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production withSyntaxSpec -> WITH SYNTAX syntaxList

State 792:
## Known stack suffix:
## withSyntaxSpec
## LR(1) items:
option(withSyntaxSpec) -> withSyntaxSpec . [ Upper Lower END ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production option(withSyntaxSpec) -> withSyntaxSpec

State 793:
## Known stack suffix:
## CLASS LeftBrace separated_nonempty_list(Comma,fieldSpec) RightBrace option(withSyntaxSpec)
## LR(1) items:
objectClassDefn -> CLASS LeftBrace separated_nonempty_list(Comma,fieldSpec) RightBrace option(withSyntaxSpec) . [ Upper Lower END ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production objectClassDefn -> CLASS LeftBrace separated_nonempty_list(Comma,fieldSpec) RightBrace option(withSyntaxSpec)

State 794:
## Known stack suffix:
## objectSetFieldSpec
## LR(1) items:
fieldSpec -> objectSetFieldSpec . [ RightBrace Comma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production fieldSpec -> objectSetFieldSpec

State 795:
## Known stack suffix:
## objectFieldSpec
## LR(1) items:
fieldSpec -> objectFieldSpec . [ RightBrace Comma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production fieldSpec -> objectFieldSpec

State 796:
## Known stack suffix:
## fixedTypeValueSetFieldSpec
## LR(1) items:
fieldSpec -> fixedTypeValueSetFieldSpec . [ RightBrace Comma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production fieldSpec -> fixedTypeValueSetFieldSpec

State 797:
## Known stack suffix:
## fixedTypeValueFieldSpec
## LR(1) items:
fieldSpec -> fixedTypeValueFieldSpec . [ RightBrace Comma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production fieldSpec -> fixedTypeValueFieldSpec

State 798:
## Known stack suffix:
## fieldSpec
## LR(1) items:
separated_nonempty_list(Comma,fieldSpec) -> fieldSpec . [ RightBrace ]
separated_nonempty_list(Comma,fieldSpec) -> fieldSpec . Comma separated_nonempty_list(Comma,fieldSpec) [ RightBrace ]
## Transitions:
-- On Comma shift to state 799
## Reductions:
-- On RightBrace reduce production separated_nonempty_list(Comma,fieldSpec) -> fieldSpec

State 799:
## Known stack suffix:
## fieldSpec Comma
## LR(1) items:
separated_nonempty_list(Comma,fieldSpec) -> fieldSpec Comma . separated_nonempty_list(Comma,fieldSpec) [ RightBrace ]
## Transitions:
-- On UpperField shift to state 723
-- On LowerField shift to state 745
-- On variableTypeValueSetFieldSpec shift to state 770
-- On variableTypeValueFieldSpec shift to state 771
-- On typeFieldSpec shift to state 772
-- On separated_nonempty_list(Comma,fieldSpec) shift to state 800
-- On objectSetFieldSpec shift to state 794
-- On objectFieldSpec shift to state 795
-- On fixedTypeValueSetFieldSpec shift to state 796
-- On fixedTypeValueFieldSpec shift to state 797
-- On fieldSpec shift to state 798
## Reductions:

State 800:
## Known stack suffix:
## fieldSpec Comma separated_nonempty_list(Comma,fieldSpec)
## LR(1) items:
separated_nonempty_list(Comma,fieldSpec) -> fieldSpec Comma separated_nonempty_list(Comma,fieldSpec) . [ RightBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production separated_nonempty_list(Comma,fieldSpec) -> fieldSpec Comma separated_nonempty_list(Comma,fieldSpec)

State 801:
## Known stack suffix:
## Upper Assignment type_x
## LR(1) items:
constrainedType -> type_x . constraint_x [ Upper Lower LeftParen END ]
typeAssignment -> Upper Assignment type_x . [ Upper Lower END ]
## Transitions:
-- On LeftParen shift to state 81
-- On constraint_x shift to state 206
## Reductions:
-- On Upper reduce production typeAssignment -> Upper Assignment type_x
-- On Lower reduce production typeAssignment -> Upper Assignment type_x
-- On END reduce production typeAssignment -> Upper Assignment type_x

State 802:
## Known stack suffix:
## parameterizedObjectClass
## LR(1) items:
objectClass -> parameterizedObjectClass . [ Upper Lower END ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production objectClass -> parameterizedObjectClass

State 803:
## Known stack suffix:
## objectClassDefn
## LR(1) items:
objectClass -> objectClassDefn . [ Upper Lower END ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production objectClass -> objectClassDefn

State 804:
## Known stack suffix:
## Upper Assignment objectClass
## LR(1) items:
objectClassAssignment -> Upper Assignment objectClass . [ Upper Lower END ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production objectClassAssignment -> Upper Assignment objectClass

State 805:
## Known stack suffix:
## definedObjectSet
## LR(1) items:
parameterizedObjectClass -> definedObjectSet . actualParameterList [ Upper Lower END ]
parameterizedObjectSet -> definedObjectSet . actualParameterList [ Dot ]
referencedObjects -> definedObjectSet . [ Dot ]
## Transitions:
-- On LeftBrace shift to state 65
-- On actualParameterList shift to state 806
## Reductions:
-- On Dot reduce production referencedObjects -> definedObjectSet

State 806:
## Known stack suffix:
## definedObjectSet actualParameterList
## LR(1) items:
parameterizedObjectClass -> definedObjectSet actualParameterList . [ Upper Lower END ]
parameterizedObjectSet -> definedObjectSet actualParameterList . [ Dot ]
## Transitions:
## Reductions:
-- On Upper reduce production parameterizedObjectClass -> definedObjectSet actualParameterList
-- On Lower reduce production parameterizedObjectClass -> definedObjectSet actualParameterList
-- On END reduce production parameterizedObjectClass -> definedObjectSet actualParameterList
-- On Dot reduce production parameterizedObjectSet -> definedObjectSet actualParameterList

State 807:
## Known stack suffix:
## definedObjectClass
## LR(1) items:
objectClass -> definedObjectClass . [ Upper Lower END ]
objectClassFieldType -> definedObjectClass . Dot fieldName [ Upper Lower LeftParen END ]
## Transitions:
-- On Dot shift to state 253
## Reductions:
-- On Upper reduce production objectClass -> definedObjectClass
-- On Lower reduce production objectClass -> definedObjectClass
-- On END reduce production objectClass -> definedObjectClass

State 808:
## Known stack suffix:
## Upper type_x
## LR(1) items:
constrainedType -> type_x . constraint_x [ LeftParen Assignment ]
valueSetTypeAssignment -> Upper type_x . Assignment valueSet [ Upper Lower END ]
## Transitions:
-- On LeftParen shift to state 81
-- On Assignment shift to state 809
-- On constraint_x shift to state 206
## Reductions:

State 809:
## Known stack suffix:
## Upper type_x Assignment
## LR(1) items:
valueSetTypeAssignment -> Upper type_x Assignment . valueSet [ Upper Lower END ]
## Transitions:
-- On LeftBrace shift to state 730
-- On valueSet shift to state 810
## Reductions:

State 810:
## Known stack suffix:
## Upper type_x Assignment valueSet
## LR(1) items:
valueSetTypeAssignment -> Upper type_x Assignment valueSet . [ Upper Lower END ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production valueSetTypeAssignment -> Upper type_x Assignment valueSet

State 811:
## Known stack suffix:
## Upper parameterList
## LR(1) items:
parameterizedObjectClassAssignment -> Upper parameterList . Assignment objectClass [ Upper Lower END ]
parameterizedObjectSetAssignment -> Upper parameterList . definedObjectClass Assignment objectSet [ Upper Lower END ]
parameterizedTypeAssignment -> Upper parameterList . Assignment type_x [ Upper Lower END ]
parameterizedValueSetTypeAssignment -> Upper parameterList . type_x Assignment valueSet [ Upper Lower END ]
## Transitions:
-- On VisibleString shift to state 66
-- On VideotexString shift to state 67
-- On Upper shift to state 113
-- On UniversalString shift to state 72
-- On UTF8String shift to state 73
-- On UTCTime shift to state 74
-- On TeletexString shift to state 75
-- On TYPE_IDENTIFIER shift to state 76
-- On T61String shift to state 78
-- On SET shift to state 79
-- On SEQUENCE shift to state 111
-- On RELATIVE_OID shift to state 116
-- On REAL shift to state 117
-- On PrintableString shift to state 118
-- On ObjectDescriptor shift to state 119
-- On OCTET shift to state 120
-- On OBJECT shift to state 122
-- On NumericString shift to state 124
-- On NULL shift to state 125
-- On Lower shift to state 127
-- On LeftBracket shift to state 129
-- On ISO646String shift to state 140
-- On INTEGER shift to state 141
-- On INSTANCE shift to state 157
-- On IA5String shift to state 166
-- On GraphicString shift to state 167
-- On GeneralizedTime shift to state 168
-- On GeneralString shift to state 169
-- On EXTERNAL shift to state 170
-- On ENUMERATED shift to state 171
-- On EMBEDDED shift to state 179
-- On CHOICE shift to state 181
-- On CHARACTER shift to state 184
-- On BOOLEAN shift to state 186
-- On BMPString shift to state 187
-- On BIT shift to state 188
-- On Assignment shift to state 812
-- On ABSTRACT_SYNTAX shift to state 162
-- On valueSetFromObjects shift to state 202
-- On usefulType shift to state 203
-- On usefulObjectClassReference shift to state 163
-- On unrestrictedCharacterStringType shift to state 204
-- On type_x shift to state 815
-- On typeWithConstraint shift to state 207
-- On typeFromObject shift to state 208
-- On taggedType shift to state 209
-- On tag shift to state 210
-- On simpleDefinedType shift to state 213
-- On setType shift to state 215
-- On setOfType shift to state 216
-- On sequenceType shift to state 217
-- On sequenceOfType shift to state 218
-- On selectionType shift to state 219
-- On restrictedCharacterStringType shift to state 220
-- On relativeOIDType shift to state 221
-- On referencedType shift to state 222
-- On referencedObjects shift to state 223
-- On realType shift to state 232
-- On parameterizedValueSetType shift to state 233
-- On parameterizedType shift to state 234
-- On parameterizedObjectSet shift to state 235
-- On parameterizedObject shift to state 236
-- On octetStringType shift to state 237
-- On objectIdentifierType shift to state 238
-- On objectClassFieldType shift to state 239
-- On nullType shift to state 240
-- On integerType shift to state 241
-- On instanceOfType shift to state 242
-- On externalTypeReference shift to state 243
-- On externalType shift to state 244
-- On externalObjectSetReference shift to state 245
-- On externalObjectReference shift to state 246
-- On externalObjectClassReference shift to state 164
-- On enumeratedType shift to state 247
-- On embeddedPDVType shift to state 248
-- On definedType shift to state 249
-- On definedObjectSet shift to state 250
-- On definedObjectClass shift to state 818
-- On definedObject shift to state 255
-- On constrainedType shift to state 257
-- On choiceType shift to state 258
-- On characterStringType shift to state 259
-- On builtinType shift to state 260
-- On booleanType shift to state 261
-- On bitStringType shift to state 262
## Reductions:

State 812:
## Known stack suffix:
## Upper parameterList Assignment
## LR(1) items:
parameterizedObjectClassAssignment -> Upper parameterList Assignment . objectClass [ Upper Lower END ]
parameterizedTypeAssignment -> Upper parameterList Assignment . type_x [ Upper Lower END ]
## Transitions:
-- On VisibleString shift to state 66
-- On VideotexString shift to state 67
-- On Upper shift to state 113
-- On UniversalString shift to state 72
-- On UTF8String shift to state 73
-- On UTCTime shift to state 74
-- On TeletexString shift to state 75
-- On TYPE_IDENTIFIER shift to state 76
-- On T61String shift to state 78
-- On SET shift to state 79
-- On SEQUENCE shift to state 111
-- On RELATIVE_OID shift to state 116
-- On REAL shift to state 117
-- On PrintableString shift to state 118
-- On ObjectDescriptor shift to state 119
-- On OCTET shift to state 120
-- On OBJECT shift to state 122
-- On NumericString shift to state 124
-- On NULL shift to state 125
-- On Lower shift to state 127
-- On LeftBracket shift to state 129
-- On ISO646String shift to state 140
-- On INTEGER shift to state 141
-- On INSTANCE shift to state 157
-- On IA5String shift to state 166
-- On GraphicString shift to state 167
-- On GeneralizedTime shift to state 168
-- On GeneralString shift to state 169
-- On EXTERNAL shift to state 170
-- On ENUMERATED shift to state 171
-- On EMBEDDED shift to state 179
-- On CLASS shift to state 721
-- On CHOICE shift to state 181
-- On CHARACTER shift to state 184
-- On BOOLEAN shift to state 186
-- On BMPString shift to state 187
-- On BIT shift to state 188
-- On ABSTRACT_SYNTAX shift to state 162
-- On valueSetFromObjects shift to state 202
-- On usefulType shift to state 203
-- On usefulObjectClassReference shift to state 163
-- On unrestrictedCharacterStringType shift to state 204
-- On type_x shift to state 813
-- On typeWithConstraint shift to state 207
-- On typeFromObject shift to state 208
-- On taggedType shift to state 209
-- On tag shift to state 210
-- On simpleDefinedType shift to state 213
-- On setType shift to state 215
-- On setOfType shift to state 216
-- On sequenceType shift to state 217
-- On sequenceOfType shift to state 218
-- On selectionType shift to state 219
-- On restrictedCharacterStringType shift to state 220
-- On relativeOIDType shift to state 221
-- On referencedType shift to state 222
-- On referencedObjects shift to state 223
-- On realType shift to state 232
-- On parameterizedValueSetType shift to state 233
-- On parameterizedType shift to state 234
-- On parameterizedObjectSet shift to state 235
-- On parameterizedObjectClass shift to state 802
-- On parameterizedObject shift to state 236
-- On octetStringType shift to state 237
-- On objectIdentifierType shift to state 238
-- On objectClassFieldType shift to state 239
-- On objectClassDefn shift to state 803
-- On objectClass shift to state 814
-- On nullType shift to state 240
-- On integerType shift to state 241
-- On instanceOfType shift to state 242
-- On externalTypeReference shift to state 243
-- On externalType shift to state 244
-- On externalObjectSetReference shift to state 245
-- On externalObjectReference shift to state 246
-- On externalObjectClassReference shift to state 164
-- On enumeratedType shift to state 247
-- On embeddedPDVType shift to state 248
-- On definedType shift to state 249
-- On definedObjectSet shift to state 805
-- On definedObjectClass shift to state 807
-- On definedObject shift to state 255
-- On constrainedType shift to state 257
-- On choiceType shift to state 258
-- On characterStringType shift to state 259
-- On builtinType shift to state 260
-- On booleanType shift to state 261
-- On bitStringType shift to state 262
## Reductions:

State 813:
## Known stack suffix:
## Upper parameterList Assignment type_x
## LR(1) items:
constrainedType -> type_x . constraint_x [ Upper Lower LeftParen END ]
parameterizedTypeAssignment -> Upper parameterList Assignment type_x . [ Upper Lower END ]
## Transitions:
-- On LeftParen shift to state 81
-- On constraint_x shift to state 206
## Reductions:
-- On Upper reduce production parameterizedTypeAssignment -> Upper parameterList Assignment type_x
-- On Lower reduce production parameterizedTypeAssignment -> Upper parameterList Assignment type_x
-- On END reduce production parameterizedTypeAssignment -> Upper parameterList Assignment type_x

State 814:
## Known stack suffix:
## Upper parameterList Assignment objectClass
## LR(1) items:
parameterizedObjectClassAssignment -> Upper parameterList Assignment objectClass . [ Upper Lower END ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production parameterizedObjectClassAssignment -> Upper parameterList Assignment objectClass

State 815:
## Known stack suffix:
## Upper parameterList type_x
## LR(1) items:
constrainedType -> type_x . constraint_x [ LeftParen Assignment ]
parameterizedValueSetTypeAssignment -> Upper parameterList type_x . Assignment valueSet [ Upper Lower END ]
## Transitions:
-- On LeftParen shift to state 81
-- On Assignment shift to state 816
-- On constraint_x shift to state 206
## Reductions:

State 816:
## Known stack suffix:
## Upper parameterList type_x Assignment
## LR(1) items:
parameterizedValueSetTypeAssignment -> Upper parameterList type_x Assignment . valueSet [ Upper Lower END ]
## Transitions:
-- On LeftBrace shift to state 730
-- On valueSet shift to state 817
## Reductions:

State 817:
## Known stack suffix:
## Upper parameterList type_x Assignment valueSet
## LR(1) items:
parameterizedValueSetTypeAssignment -> Upper parameterList type_x Assignment valueSet . [ Upper Lower END ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production parameterizedValueSetTypeAssignment -> Upper parameterList type_x Assignment valueSet

State 818:
## Known stack suffix:
## Upper parameterList definedObjectClass
## LR(1) items:
objectClassFieldType -> definedObjectClass . Dot fieldName [ LeftParen Assignment ]
parameterizedObjectSetAssignment -> Upper parameterList definedObjectClass . Assignment objectSet [ Upper Lower END ]
## Transitions:
-- On Dot shift to state 253
-- On Assignment shift to state 819
## Reductions:

State 819:
## Known stack suffix:
## Upper parameterList definedObjectClass Assignment
## LR(1) items:
parameterizedObjectSetAssignment -> Upper parameterList definedObjectClass Assignment . objectSet [ Upper Lower END ]
## Transitions:
-- On LeftBrace shift to state 741
-- On objectSet shift to state 820
## Reductions:

State 820:
## Known stack suffix:
## Upper parameterList definedObjectClass Assignment objectSet
## LR(1) items:
parameterizedObjectSetAssignment -> Upper parameterList definedObjectClass Assignment objectSet . [ Upper Lower END ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production parameterizedObjectSetAssignment -> Upper parameterList definedObjectClass Assignment objectSet

State 821:
## Known stack suffix:
## Upper definedObjectClass
## LR(1) items:
objectClassFieldType -> definedObjectClass . Dot fieldName [ LeftParen Assignment ]
objectSetAssignment -> Upper definedObjectClass . Assignment objectSet [ Upper Lower END ]
## Transitions:
-- On Dot shift to state 253
-- On Assignment shift to state 822
## Reductions:

State 822:
## Known stack suffix:
## Upper definedObjectClass Assignment
## LR(1) items:
objectSetAssignment -> Upper definedObjectClass Assignment . objectSet [ Upper Lower END ]
## Transitions:
-- On LeftBrace shift to state 741
-- On objectSet shift to state 823
## Reductions:

State 823:
## Known stack suffix:
## Upper definedObjectClass Assignment objectSet
## LR(1) items:
objectSetAssignment -> Upper definedObjectClass Assignment objectSet . [ Upper Lower END ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production objectSetAssignment -> Upper definedObjectClass Assignment objectSet

State 824:
## Known stack suffix:
## Lower
## LR(1) items:
objectAssignment -> Lower . definedObjectClass Assignment object_x [ Upper Lower END ]
parameterizedObjectAssignment -> Lower . parameterList definedObjectClass Assignment object_x [ Upper Lower END ]
parameterizedValueAssignment -> Lower . parameterList type_x Assignment value [ Upper Lower END ]
valueAssignment -> Lower . type_x Assignment value [ Upper Lower END ]
## Transitions:
-- On VisibleString shift to state 66
-- On VideotexString shift to state 67
-- On Upper shift to state 113
-- On UniversalString shift to state 72
-- On UTF8String shift to state 73
-- On UTCTime shift to state 74
-- On TeletexString shift to state 75
-- On TYPE_IDENTIFIER shift to state 76
-- On T61String shift to state 78
-- On SET shift to state 79
-- On SEQUENCE shift to state 111
-- On RELATIVE_OID shift to state 116
-- On REAL shift to state 117
-- On PrintableString shift to state 118
-- On ObjectDescriptor shift to state 119
-- On OCTET shift to state 120
-- On OBJECT shift to state 122
-- On NumericString shift to state 124
-- On NULL shift to state 125
-- On Lower shift to state 127
-- On LeftBracket shift to state 129
-- On LeftBrace shift to state 703
-- On ISO646String shift to state 140
-- On INTEGER shift to state 141
-- On INSTANCE shift to state 157
-- On IA5String shift to state 166
-- On GraphicString shift to state 167
-- On GeneralizedTime shift to state 168
-- On GeneralString shift to state 169
-- On EXTERNAL shift to state 170
-- On ENUMERATED shift to state 171
-- On EMBEDDED shift to state 179
-- On CHOICE shift to state 181
-- On CHARACTER shift to state 184
-- On BOOLEAN shift to state 186
-- On BMPString shift to state 187
-- On BIT shift to state 188
-- On ABSTRACT_SYNTAX shift to state 162
-- On valueSetFromObjects shift to state 202
-- On usefulType shift to state 203
-- On usefulObjectClassReference shift to state 163
-- On unrestrictedCharacterStringType shift to state 204
-- On type_x shift to state 825
-- On typeWithConstraint shift to state 207
-- On typeFromObject shift to state 208
-- On taggedType shift to state 209
-- On tag shift to state 210
-- On simpleDefinedType shift to state 213
-- On setType shift to state 215
-- On setOfType shift to state 216
-- On sequenceType shift to state 217
-- On sequenceOfType shift to state 218
-- On selectionType shift to state 219
-- On restrictedCharacterStringType shift to state 220
-- On relativeOIDType shift to state 221
-- On referencedType shift to state 222
-- On referencedObjects shift to state 223
-- On realType shift to state 232
-- On parameterizedValueSetType shift to state 233
-- On parameterizedType shift to state 234
-- On parameterizedObjectSet shift to state 235
-- On parameterizedObject shift to state 236
-- On parameterList shift to state 828
-- On octetStringType shift to state 237
-- On objectIdentifierType shift to state 238
-- On objectClassFieldType shift to state 239
-- On nullType shift to state 240
-- On integerType shift to state 241
-- On instanceOfType shift to state 242
-- On externalTypeReference shift to state 243
-- On externalType shift to state 244
-- On externalObjectSetReference shift to state 245
-- On externalObjectReference shift to state 246
-- On externalObjectClassReference shift to state 164
-- On enumeratedType shift to state 247
-- On embeddedPDVType shift to state 248
-- On definedType shift to state 249
-- On definedObjectSet shift to state 250
-- On definedObjectClass shift to state 835
-- On definedObject shift to state 255
-- On constrainedType shift to state 257
-- On choiceType shift to state 258
-- On characterStringType shift to state 259
-- On builtinType shift to state 260
-- On booleanType shift to state 261
-- On bitStringType shift to state 262
## Reductions:

State 825:
## Known stack suffix:
## Lower type_x
## LR(1) items:
constrainedType -> type_x . constraint_x [ LeftParen Assignment ]
valueAssignment -> Lower type_x . Assignment value [ Upper Lower END ]
## Transitions:
-- On LeftParen shift to state 81
-- On Assignment shift to state 826
-- On constraint_x shift to state 206
## Reductions:

State 826:
## Known stack suffix:
## Lower type_x Assignment
## LR(1) items:
valueAssignment -> Lower type_x Assignment . value [ Upper Lower END ]
## Transitions:
-- On VisibleString shift to state 66
-- On VideotexString shift to state 67
-- On Upper shift to state 108
-- On UniversalString shift to state 72
-- On UTF8String shift to state 73
-- On UTCTime shift to state 74
-- On TeletexString shift to state 75
-- On TYPE_IDENTIFIER shift to state 76
-- On TRUE shift to state 77
-- On T61String shift to state 78
-- On SET shift to state 79
-- On SEQUENCE shift to state 111
-- On RealNumber shift to state 296
-- On RELATIVE_OID shift to state 116
-- On REAL shift to state 117
-- On PrintableString shift to state 118
-- On PLUS_INFINITY shift to state 297
-- On ObjectDescriptor shift to state 119
-- On OCTET shift to state 120
-- On OBJECT shift to state 122
-- On NumericString shift to state 124
-- On Number shift to state 145
-- On NULL shift to state 298
-- On MINUS_INFINITY shift to state 299
-- On Lower shift to state 300
-- On LeftBracket shift to state 129
-- On LeftBrace shift to state 302
-- On ISO646String shift to state 140
-- On INTEGER shift to state 141
-- On INSTANCE shift to state 157
-- On IA5String shift to state 166
-- On Hyphen shift to state 306
-- On Hstring shift to state 308
-- On GraphicString shift to state 167
-- On GeneralizedTime shift to state 168
-- On GeneralString shift to state 169
-- On FALSE shift to state 309
-- On EXTERNAL shift to state 170
-- On ENUMERATED shift to state 171
-- On EMBEDDED shift to state 179
-- On Cstring shift to state 310
-- On CONTAINING shift to state 311
-- On CHOICE shift to state 181
-- On CHARACTER shift to state 184
-- On Bstring shift to state 312
-- On BOOLEAN shift to state 186
-- On BMPString shift to state 187
-- On BIT shift to state 188
-- On ABSTRACT_SYNTAX shift to state 162
-- On valueSetFromObjects shift to state 202
-- On valueFromObject shift to state 313
-- On value shift to state 827
-- On usefulType shift to state 203
-- On usefulObjectClassReference shift to state 163
-- On unrestrictedCharacterStringValue shift to state 315
-- On unrestrictedCharacterStringType shift to state 204
-- On type_x shift to state 316
-- On typeWithConstraint shift to state 207
-- On typeFromObject shift to state 208
-- On tuple shift to state 319
-- On taggedType shift to state 209
-- On tag shift to state 210
-- On specialRealValue shift to state 320
-- On simpleDefinedValue shift to state 64
-- On simpleDefinedType shift to state 213
-- On signedNumber shift to state 321
-- On setValue shift to state 322
-- On setType shift to state 215
-- On setOfValue shift to state 323
-- On setOfType shift to state 216
-- On sequenceValue shift to state 324
-- On sequenceType shift to state 217
-- On sequenceOfValue shift to state 325
-- On sequenceOfType shift to state 218
-- On selectionType shift to state 219
-- On restrictedCharacterStringValue shift to state 326
-- On restrictedCharacterStringType shift to state 220
-- On relativeOIDValue shift to state 327
-- On relativeOIDType shift to state 221
-- On referencedValue shift to state 328
-- On referencedType shift to state 222
-- On referencedObjects shift to state 329
-- On realValue shift to state 332
-- On realType shift to state 232
-- On quadruple shift to state 333
-- On parameterizedValueSetType shift to state 233
-- On parameterizedValue shift to state 135
-- On parameterizedType shift to state 234
-- On parameterizedObjectSet shift to state 235
-- On parameterizedObject shift to state 236
-- On openTypeFieldVal shift to state 334
-- On octetStringValue shift to state 335
-- On octetStringType shift to state 237
-- On objectIdentifierValue shift to state 336
-- On objectIdentifierType shift to state 238
-- On objectClassFieldValue shift to state 337
-- On objectClassFieldType shift to state 239
-- On numericRealValue shift to state 338
-- On nullValue shift to state 339
-- On nullType shift to state 240
-- On integerValue shift to state 340
-- On integerType shift to state 241
-- On instanceOfType shift to state 242
-- On fixedTypeFieldVal shift to state 341
-- On externalValueReference shift to state 136
-- On externalValue shift to state 342
-- On externalTypeReference shift to state 243
-- On externalType shift to state 244
-- On externalObjectSetReference shift to state 245
-- On externalObjectReference shift to state 246
-- On externalObjectClassReference shift to state 164
-- On enumeratedValue shift to state 343
-- On enumeratedType shift to state 247
-- On embeddedPDVValue shift to state 344
-- On embeddedPDVType shift to state 248
-- On definedValue shift to state 345
-- On definedType shift to state 249
-- On definedObjectSet shift to state 250
-- On definedObjectClass shift to state 252
-- On definedObject shift to state 255
-- On constrainedType shift to state 257
-- On choiceValue shift to state 346
-- On choiceType shift to state 258
-- On characterStringValue shift to state 347
-- On characterStringType shift to state 259
-- On characterStringList shift to state 348
-- On builtinValue shift to state 349
-- On builtinType shift to state 260
-- On booleanValue shift to state 350
-- On booleanType shift to state 261
-- On bitStringValue shift to state 351
-- On bitStringType shift to state 262
## Reductions:

State 827:
## Known stack suffix:
## Lower type_x Assignment value
## LR(1) items:
valueAssignment -> Lower type_x Assignment value . [ Upper Lower END ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production valueAssignment -> Lower type_x Assignment value

State 828:
## Known stack suffix:
## Lower parameterList
## LR(1) items:
parameterizedObjectAssignment -> Lower parameterList . definedObjectClass Assignment object_x [ Upper Lower END ]
parameterizedValueAssignment -> Lower parameterList . type_x Assignment value [ Upper Lower END ]
## Transitions:
-- On VisibleString shift to state 66
-- On VideotexString shift to state 67
-- On Upper shift to state 113
-- On UniversalString shift to state 72
-- On UTF8String shift to state 73
-- On UTCTime shift to state 74
-- On TeletexString shift to state 75
-- On TYPE_IDENTIFIER shift to state 76
-- On T61String shift to state 78
-- On SET shift to state 79
-- On SEQUENCE shift to state 111
-- On RELATIVE_OID shift to state 116
-- On REAL shift to state 117
-- On PrintableString shift to state 118
-- On ObjectDescriptor shift to state 119
-- On OCTET shift to state 120
-- On OBJECT shift to state 122
-- On NumericString shift to state 124
-- On NULL shift to state 125
-- On Lower shift to state 127
-- On LeftBracket shift to state 129
-- On ISO646String shift to state 140
-- On INTEGER shift to state 141
-- On INSTANCE shift to state 157
-- On IA5String shift to state 166
-- On GraphicString shift to state 167
-- On GeneralizedTime shift to state 168
-- On GeneralString shift to state 169
-- On EXTERNAL shift to state 170
-- On ENUMERATED shift to state 171
-- On EMBEDDED shift to state 179
-- On CHOICE shift to state 181
-- On CHARACTER shift to state 184
-- On BOOLEAN shift to state 186
-- On BMPString shift to state 187
-- On BIT shift to state 188
-- On ABSTRACT_SYNTAX shift to state 162
-- On valueSetFromObjects shift to state 202
-- On usefulType shift to state 203
-- On usefulObjectClassReference shift to state 163
-- On unrestrictedCharacterStringType shift to state 204
-- On type_x shift to state 829
-- On typeWithConstraint shift to state 207
-- On typeFromObject shift to state 208
-- On taggedType shift to state 209
-- On tag shift to state 210
-- On simpleDefinedType shift to state 213
-- On setType shift to state 215
-- On setOfType shift to state 216
-- On sequenceType shift to state 217
-- On sequenceOfType shift to state 218
-- On selectionType shift to state 219
-- On restrictedCharacterStringType shift to state 220
-- On relativeOIDType shift to state 221
-- On referencedType shift to state 222
-- On referencedObjects shift to state 223
-- On realType shift to state 232
-- On parameterizedValueSetType shift to state 233
-- On parameterizedType shift to state 234
-- On parameterizedObjectSet shift to state 235
-- On parameterizedObject shift to state 236
-- On octetStringType shift to state 237
-- On objectIdentifierType shift to state 238
-- On objectClassFieldType shift to state 239
-- On nullType shift to state 240
-- On integerType shift to state 241
-- On instanceOfType shift to state 242
-- On externalTypeReference shift to state 243
-- On externalType shift to state 244
-- On externalObjectSetReference shift to state 245
-- On externalObjectReference shift to state 246
-- On externalObjectClassReference shift to state 164
-- On enumeratedType shift to state 247
-- On embeddedPDVType shift to state 248
-- On definedType shift to state 249
-- On definedObjectSet shift to state 250
-- On definedObjectClass shift to state 832
-- On definedObject shift to state 255
-- On constrainedType shift to state 257
-- On choiceType shift to state 258
-- On characterStringType shift to state 259
-- On builtinType shift to state 260
-- On booleanType shift to state 261
-- On bitStringType shift to state 262
## Reductions:

State 829:
## Known stack suffix:
## Lower parameterList type_x
## LR(1) items:
constrainedType -> type_x . constraint_x [ LeftParen Assignment ]
parameterizedValueAssignment -> Lower parameterList type_x . Assignment value [ Upper Lower END ]
## Transitions:
-- On LeftParen shift to state 81
-- On Assignment shift to state 830
-- On constraint_x shift to state 206
## Reductions:

State 830:
## Known stack suffix:
## Lower parameterList type_x Assignment
## LR(1) items:
parameterizedValueAssignment -> Lower parameterList type_x Assignment . value [ Upper Lower END ]
## Transitions:
-- On VisibleString shift to state 66
-- On VideotexString shift to state 67
-- On Upper shift to state 108
-- On UniversalString shift to state 72
-- On UTF8String shift to state 73
-- On UTCTime shift to state 74
-- On TeletexString shift to state 75
-- On TYPE_IDENTIFIER shift to state 76
-- On TRUE shift to state 77
-- On T61String shift to state 78
-- On SET shift to state 79
-- On SEQUENCE shift to state 111
-- On RealNumber shift to state 296
-- On RELATIVE_OID shift to state 116
-- On REAL shift to state 117
-- On PrintableString shift to state 118
-- On PLUS_INFINITY shift to state 297
-- On ObjectDescriptor shift to state 119
-- On OCTET shift to state 120
-- On OBJECT shift to state 122
-- On NumericString shift to state 124
-- On Number shift to state 145
-- On NULL shift to state 298
-- On MINUS_INFINITY shift to state 299
-- On Lower shift to state 300
-- On LeftBracket shift to state 129
-- On LeftBrace shift to state 302
-- On ISO646String shift to state 140
-- On INTEGER shift to state 141
-- On INSTANCE shift to state 157
-- On IA5String shift to state 166
-- On Hyphen shift to state 306
-- On Hstring shift to state 308
-- On GraphicString shift to state 167
-- On GeneralizedTime shift to state 168
-- On GeneralString shift to state 169
-- On FALSE shift to state 309
-- On EXTERNAL shift to state 170
-- On ENUMERATED shift to state 171
-- On EMBEDDED shift to state 179
-- On Cstring shift to state 310
-- On CONTAINING shift to state 311
-- On CHOICE shift to state 181
-- On CHARACTER shift to state 184
-- On Bstring shift to state 312
-- On BOOLEAN shift to state 186
-- On BMPString shift to state 187
-- On BIT shift to state 188
-- On ABSTRACT_SYNTAX shift to state 162
-- On valueSetFromObjects shift to state 202
-- On valueFromObject shift to state 313
-- On value shift to state 831
-- On usefulType shift to state 203
-- On usefulObjectClassReference shift to state 163
-- On unrestrictedCharacterStringValue shift to state 315
-- On unrestrictedCharacterStringType shift to state 204
-- On type_x shift to state 316
-- On typeWithConstraint shift to state 207
-- On typeFromObject shift to state 208
-- On tuple shift to state 319
-- On taggedType shift to state 209
-- On tag shift to state 210
-- On specialRealValue shift to state 320
-- On simpleDefinedValue shift to state 64
-- On simpleDefinedType shift to state 213
-- On signedNumber shift to state 321
-- On setValue shift to state 322
-- On setType shift to state 215
-- On setOfValue shift to state 323
-- On setOfType shift to state 216
-- On sequenceValue shift to state 324
-- On sequenceType shift to state 217
-- On sequenceOfValue shift to state 325
-- On sequenceOfType shift to state 218
-- On selectionType shift to state 219
-- On restrictedCharacterStringValue shift to state 326
-- On restrictedCharacterStringType shift to state 220
-- On relativeOIDValue shift to state 327
-- On relativeOIDType shift to state 221
-- On referencedValue shift to state 328
-- On referencedType shift to state 222
-- On referencedObjects shift to state 329
-- On realValue shift to state 332
-- On realType shift to state 232
-- On quadruple shift to state 333
-- On parameterizedValueSetType shift to state 233
-- On parameterizedValue shift to state 135
-- On parameterizedType shift to state 234
-- On parameterizedObjectSet shift to state 235
-- On parameterizedObject shift to state 236
-- On openTypeFieldVal shift to state 334
-- On octetStringValue shift to state 335
-- On octetStringType shift to state 237
-- On objectIdentifierValue shift to state 336
-- On objectIdentifierType shift to state 238
-- On objectClassFieldValue shift to state 337
-- On objectClassFieldType shift to state 239
-- On numericRealValue shift to state 338
-- On nullValue shift to state 339
-- On nullType shift to state 240
-- On integerValue shift to state 340
-- On integerType shift to state 241
-- On instanceOfType shift to state 242
-- On fixedTypeFieldVal shift to state 341
-- On externalValueReference shift to state 136
-- On externalValue shift to state 342
-- On externalTypeReference shift to state 243
-- On externalType shift to state 244
-- On externalObjectSetReference shift to state 245
-- On externalObjectReference shift to state 246
-- On externalObjectClassReference shift to state 164
-- On enumeratedValue shift to state 343
-- On enumeratedType shift to state 247
-- On embeddedPDVValue shift to state 344
-- On embeddedPDVType shift to state 248
-- On definedValue shift to state 345
-- On definedType shift to state 249
-- On definedObjectSet shift to state 250
-- On definedObjectClass shift to state 252
-- On definedObject shift to state 255
-- On constrainedType shift to state 257
-- On choiceValue shift to state 346
-- On choiceType shift to state 258
-- On characterStringValue shift to state 347
-- On characterStringType shift to state 259
-- On characterStringList shift to state 348
-- On builtinValue shift to state 349
-- On builtinType shift to state 260
-- On booleanValue shift to state 350
-- On booleanType shift to state 261
-- On bitStringValue shift to state 351
-- On bitStringType shift to state 262
## Reductions:

State 831:
## Known stack suffix:
## Lower parameterList type_x Assignment value
## LR(1) items:
parameterizedValueAssignment -> Lower parameterList type_x Assignment value . [ Upper Lower END ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production parameterizedValueAssignment -> Lower parameterList type_x Assignment value

State 832:
## Known stack suffix:
## Lower parameterList definedObjectClass
## LR(1) items:
objectClassFieldType -> definedObjectClass . Dot fieldName [ LeftParen Assignment ]
parameterizedObjectAssignment -> Lower parameterList definedObjectClass . Assignment object_x [ Upper Lower END ]
## Transitions:
-- On Dot shift to state 253
-- On Assignment shift to state 833
## Reductions:

State 833:
## Known stack suffix:
## Lower parameterList definedObjectClass Assignment
## LR(1) items:
parameterizedObjectAssignment -> Lower parameterList definedObjectClass Assignment . object_x [ Upper Lower END ]
## Transitions:
-- On Upper shift to state 759
-- On Lower shift to state 762
-- On LeftBrace shift to state 763
-- On DefinedSyntax shift to state 508
-- On referencedObjects shift to state 764
-- On parameterizedObjectSet shift to state 235
-- On parameterizedObject shift to state 524
-- On object_x shift to state 834
-- On objectFromObject shift to state 528
-- On objectDefn shift to state 529
-- On externalObjectSetReference shift to state 245
-- On externalObjectReference shift to state 246
-- On definedObjectSet shift to state 250
-- On definedObject shift to state 545
-- On defaultSyntax shift to state 546
## Reductions:

State 834:
## Known stack suffix:
## Lower parameterList definedObjectClass Assignment object_x
## LR(1) items:
parameterizedObjectAssignment -> Lower parameterList definedObjectClass Assignment object_x . [ Upper Lower END ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production parameterizedObjectAssignment -> Lower parameterList definedObjectClass Assignment object_x

State 835:
## Known stack suffix:
## Lower definedObjectClass
## LR(1) items:
objectAssignment -> Lower definedObjectClass . Assignment object_x [ Upper Lower END ]
objectClassFieldType -> definedObjectClass . Dot fieldName [ LeftParen Assignment ]
## Transitions:
-- On Dot shift to state 253
-- On Assignment shift to state 836
## Reductions:

State 836:
## Known stack suffix:
## Lower definedObjectClass Assignment
## LR(1) items:
objectAssignment -> Lower definedObjectClass Assignment . object_x [ Upper Lower END ]
## Transitions:
-- On Upper shift to state 759
-- On Lower shift to state 762
-- On LeftBrace shift to state 763
-- On DefinedSyntax shift to state 508
-- On referencedObjects shift to state 764
-- On parameterizedObjectSet shift to state 235
-- On parameterizedObject shift to state 524
-- On object_x shift to state 837
-- On objectFromObject shift to state 528
-- On objectDefn shift to state 529
-- On externalObjectSetReference shift to state 245
-- On externalObjectReference shift to state 246
-- On definedObjectSet shift to state 250
-- On definedObject shift to state 545
-- On defaultSyntax shift to state 546
## Reductions:

State 837:
## Known stack suffix:
## Lower definedObjectClass Assignment object_x
## LR(1) items:
objectAssignment -> Lower definedObjectClass Assignment object_x . [ Upper Lower END ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production objectAssignment -> Lower definedObjectClass Assignment object_x

State 838:
## Known stack suffix:
## valueSetTypeAssignment
## LR(1) items:
assignment -> valueSetTypeAssignment . [ Upper Lower END ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production assignment -> valueSetTypeAssignment

State 839:
## Known stack suffix:
## valueAssignment
## LR(1) items:
assignment -> valueAssignment . [ Upper Lower END ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production assignment -> valueAssignment

State 840:
## Known stack suffix:
## typeAssignment
## LR(1) items:
assignment -> typeAssignment . [ Upper Lower END ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production assignment -> typeAssignment

State 841:
## Known stack suffix:
## parameterizedValueSetTypeAssignment
## LR(1) items:
parameterizedAssignment -> parameterizedValueSetTypeAssignment . [ Upper Lower END ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production parameterizedAssignment -> parameterizedValueSetTypeAssignment

State 842:
## Known stack suffix:
## parameterizedValueAssignment
## LR(1) items:
parameterizedAssignment -> parameterizedValueAssignment . [ Upper Lower END ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production parameterizedAssignment -> parameterizedValueAssignment

State 843:
## Known stack suffix:
## parameterizedTypeAssignment
## LR(1) items:
parameterizedAssignment -> parameterizedTypeAssignment . [ Upper Lower END ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production parameterizedAssignment -> parameterizedTypeAssignment

State 844:
## Known stack suffix:
## parameterizedObjectSetAssignment
## LR(1) items:
parameterizedAssignment -> parameterizedObjectSetAssignment . [ Upper Lower END ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production parameterizedAssignment -> parameterizedObjectSetAssignment

State 845:
## Known stack suffix:
## parameterizedObjectClassAssignment
## LR(1) items:
parameterizedAssignment -> parameterizedObjectClassAssignment . [ Upper Lower END ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production parameterizedAssignment -> parameterizedObjectClassAssignment

State 846:
## Known stack suffix:
## parameterizedObjectAssignment
## LR(1) items:
parameterizedAssignment -> parameterizedObjectAssignment . [ Upper Lower END ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production parameterizedAssignment -> parameterizedObjectAssignment

State 847:
## Known stack suffix:
## parameterizedAssignment
## LR(1) items:
assignment -> parameterizedAssignment . [ Upper Lower END ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production assignment -> parameterizedAssignment

State 848:
## Known stack suffix:
## objectSetAssignment
## LR(1) items:
assignment -> objectSetAssignment . [ Upper Lower END ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production assignment -> objectSetAssignment

State 849:
## Known stack suffix:
## objectClassAssignment
## LR(1) items:
assignment -> objectClassAssignment . [ Upper Lower END ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production assignment -> objectClassAssignment

State 850:
## Known stack suffix:
## objectAssignment
## LR(1) items:
assignment -> objectAssignment . [ Upper Lower END ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production assignment -> objectAssignment

State 851:
## Known stack suffix:
## exports imports assignmentList
## LR(1) items:
assignmentList -> assignmentList . assignment [ Upper Lower END ]
moduleBody -> exports imports assignmentList . [ END ]
## Transitions:
-- On Upper shift to state 702
-- On Lower shift to state 824
-- On valueSetTypeAssignment shift to state 838
-- On valueAssignment shift to state 839
-- On typeAssignment shift to state 840
-- On parameterizedValueSetTypeAssignment shift to state 841
-- On parameterizedValueAssignment shift to state 842
-- On parameterizedTypeAssignment shift to state 843
-- On parameterizedObjectSetAssignment shift to state 844
-- On parameterizedObjectClassAssignment shift to state 845
-- On parameterizedObjectAssignment shift to state 846
-- On parameterizedAssignment shift to state 847
-- On objectSetAssignment shift to state 848
-- On objectClassAssignment shift to state 849
-- On objectAssignment shift to state 850
-- On assignment shift to state 852
## Reductions:
-- On END reduce production moduleBody -> exports imports assignmentList

State 852:
## Known stack suffix:
## assignmentList assignment
## LR(1) items:
assignmentList -> assignmentList assignment . [ Upper Lower END ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production assignmentList -> assignmentList assignment

State 853:
## Known stack suffix:
## assignment
## LR(1) items:
assignmentList -> assignment . [ Upper Lower END ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production assignmentList -> assignment

State 854:
## Known stack suffix:
## moduleDefinition
## LR(1) items:
main -> moduleDefinition . EOF [ # ]
## Transitions:
-- On EOF shift to state 855
## Reductions:

State 855:
## Known stack suffix:
## moduleDefinition EOF
## LR(1) items:
main -> moduleDefinition EOF . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production main -> moduleDefinition EOF

State 856:
## Known stack suffix:
## main
## LR(1) items:
main' -> main . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, accept main

