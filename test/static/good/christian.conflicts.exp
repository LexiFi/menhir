
** Conflict (shift/reduce) in state 759.
** Token involved: Dot
** This state is reached from main after reading:

moduleIdentifier DEFINITIONS tagDefault extensionDefault Assignment BEGIN exports imports Lower definedObjectClass Assignment Upper

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

main 
moduleDefinition EOF 
moduleIdentifier DEFINITIONS tagDefault extensionDefault Assignment BEGIN moduleBody END 
                                                                          exports imports assignmentList 
                                                                                          assignment 
                                                                                          objectAssignment 
                                                                                          Lower definedObjectClass Assignment object_x 
                                                                                                                              (?)

** In state 759, looking ahead at Dot, reducing production
** definedObjectSet -> Upper
** is permitted because of the following sub-derivation:

objectFromObject 
referencedObjects Dot fieldName // lookahead token appears
definedObjectSet // lookahead token is inherited
Upper . 

** In state 759, looking ahead at Dot, shifting is permitted
** because of the following sub-derivation:

definedObject 
externalObjectReference 
Upper . Dot Lower 

** Conflict (shift/reduce) in state 741.
** Tokens involved: VisibleString VideotexString Upper UniversalString UTF8String UTCTime TeletexString TYPE_IDENTIFIER T61String SET SEQUENCE RELATIVE_OID REAL PrintableString ObjectDescriptor OCTET OBJECT NumericString NULL Lower LeftBracket ISO646String INTEGER INSTANCE IA5String GraphicString GeneralizedTime GeneralString EXTERNAL ENUMERATED EMBEDDED CHOICE CHARACTER BOOLEAN BMPString BIT ABSTRACT_SYNTAX
** The following explanations concentrate on token VisibleString.
** This state is reached from main after reading:

moduleIdentifier DEFINITIONS tagDefault extensionDefault Assignment BEGIN exports imports Upper definedObjectClass Assignment LeftBrace

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

main 
moduleDefinition EOF 
moduleIdentifier DEFINITIONS tagDefault extensionDefault Assignment BEGIN moduleBody END 
                                                                          exports imports assignmentList 
                                                                                          assignment 
                                                                                          objectSetAssignment 
                                                                                          Upper definedObjectClass Assignment objectSet 
                                                                                                                              LeftBrace objectSetSpec RightBrace 
                                                                                                                                        rootElementSetSpec 
                                                                                                                                        elementSetSpec 
                                                                                                                                        unions 
                                                                                                                                        intersections 
                                                                                                                                        intersectionElements 
                                                                                                                                        elements 
                                                                                                                                        subtypeElements 
                                                                                                                                        (?)

** In state 741, looking ahead at VisibleString, reducing production
** includes -> 
** is permitted because of the following sub-derivation:

containedSubtype 
includes type_x // lookahead token appears because type_x can begin with VisibleString
. 

** In state 741, looking ahead at VisibleString, shifting is permitted
** because of the following sub-derivation:

typeConstraint 
type_x 
builtinType 
characterStringType 
restrictedCharacterStringType 
. VisibleString 

** Conflict (shift/reduce) in state 730.
** Tokens involved: VisibleString VideotexString Upper UniversalString UTF8String UTCTime TeletexString TYPE_IDENTIFIER T61String SET SEQUENCE RELATIVE_OID REAL PrintableString ObjectDescriptor OCTET OBJECT NumericString NULL Lower LeftBracket ISO646String INTEGER INSTANCE IA5String GraphicString GeneralizedTime GeneralString EXTERNAL ENUMERATED EMBEDDED CHOICE CHARACTER BOOLEAN BMPString BIT ABSTRACT_SYNTAX
** The following explanations concentrate on token VisibleString.
** This state is reached from main after reading:

moduleIdentifier DEFINITIONS tagDefault extensionDefault Assignment BEGIN exports imports Upper type_x Assignment LeftBrace

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

main 
moduleDefinition EOF 
moduleIdentifier DEFINITIONS tagDefault extensionDefault Assignment BEGIN moduleBody END 
                                                                          exports imports assignmentList 
                                                                                          assignment 
                                                                                          valueSetTypeAssignment 
                                                                                          Upper type_x Assignment valueSet 
                                                                                                                  LeftBrace elementSetSpecs RightBrace 
                                                                                                                            rootElementSetSpec 
                                                                                                                            elementSetSpec 
                                                                                                                            unions 
                                                                                                                            intersections 
                                                                                                                            intersectionElements 
                                                                                                                            elements 
                                                                                                                            subtypeElements 
                                                                                                                            (?)

** In state 730, looking ahead at VisibleString, reducing production
** includes -> 
** is permitted because of the following sub-derivation:

containedSubtype 
includes type_x // lookahead token appears because type_x can begin with VisibleString
. 

** In state 730, looking ahead at VisibleString, shifting is permitted
** because of the following sub-derivation:

typeConstraint 
type_x 
builtinType 
characterStringType 
restrictedCharacterStringType 
. VisibleString 

** Conflict (reduce/reduce) in state 704.
** Tokens involved: LeftBrace Dot Colon
** The following explanations concentrate on token Colon.
** This state is reached from main after reading:

moduleIdentifier DEFINITIONS tagDefault extensionDefault Assignment BEGIN exports imports Upper LeftBrace Upper

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

main 
moduleDefinition EOF 
moduleIdentifier DEFINITIONS tagDefault extensionDefault Assignment BEGIN moduleBody END 
                                                                          exports imports assignmentList 
                                                                                          assignment 
                                                                                          parameterizedAssignment 
                                                                                          parameterizedTypeAssignment 
                                                                                          Upper parameterList Assignment type_x 
                                                                                                LeftBrace separated_nonempty_list(Comma,parameter) RightBrace 
                                                                                                          parameter 
                                                                                                          paramGovernor Colon dummyReference // lookahead token appears
                                                                                                          (?)

** In state 704, looking ahead at Colon, reducing production
** definedObjectClass -> Upper
** is permitted because of the following sub-derivation:

governor // lookahead token is inherited
definedObjectClass // lookahead token is inherited
Upper . 

** In state 704, looking ahead at Colon, reducing production
** definedType -> Upper
** is permitted because of the following sub-derivation:

governor // lookahead token is inherited
type_x // lookahead token is inherited
referencedType // lookahead token is inherited
definedType // lookahead token is inherited
Upper . 

** In state 704, looking ahead at Colon, reducing production
** reference -> Upper
** is permitted because of the following sub-derivation:

dummyGovernor // lookahead token is inherited
dummyReference // lookahead token is inherited
reference // lookahead token is inherited
Upper . 

** Conflict (shift/reduce/reduce) in state 695.
** Tokens involved: Upper RightBrace Number Lower
** The following explanations concentrate on token Upper.
** This state is reached from main after reading:

moduleIdentifier DEFINITIONS tagDefault extensionDefault Assignment BEGIN exports IMPORTS symbolList FROM Upper LeftBrace definedValue

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

main 
moduleDefinition EOF 
moduleIdentifier DEFINITIONS tagDefault extensionDefault Assignment BEGIN moduleBody END 
                                                                          exports imports assignmentList 
                                                                                  IMPORTS symbolsImported SemiColon 
                                                                                          symbolsFromModuleList 
                                                                                          symbolsFromModule 
                                                                                          symbolList FROM globalModuleReference 
                                                                                                          Upper assignedIdentifier 
                                                                                                                objectIdentifierValue 
                                                                                                                (?)

** In state 695, looking ahead at Upper, shifting is permitted
** because of the following sub-derivation:

LeftBrace definedValue objIdComponentsList RightBrace 
                       objIdComponents 
                       definedValue 
                       externalValueReference 
                       . Upper Dot Lower 

** In state 695, looking ahead at Upper, reducing production
** numberForm -> definedValue
** is permitted because of the following sub-derivation:

LeftBrace objIdComponentsList RightBrace 
          objIdComponents objIdComponentsList // lookahead token appears because objIdComponentsList can begin with Upper
          numberForm // lookahead token is inherited
          definedValue . 

** In state 695, looking ahead at Upper, reducing production
** objIdComponents -> definedValue
** is permitted because of the following sub-derivation:

LeftBrace objIdComponentsList RightBrace 
          objIdComponents objIdComponentsList // lookahead token appears because objIdComponentsList can begin with Upper
          definedValue . 

** Conflict (shift/reduce) in state 678.
** Token involved: LeftParen
** This state is reached from main after reading:

moduleIdentifier DEFINITIONS tagDefault extensionDefault Assignment BEGIN exports imports Upper SET constraint_x OF type_x

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

main 
moduleDefinition EOF 
moduleIdentifier DEFINITIONS tagDefault extensionDefault Assignment BEGIN moduleBody END 
                                                                          exports imports assignmentList 
                                                                                          assignment 
                                                                                          valueSetTypeAssignment 
                                                                                          Upper type_x Assignment valueSet 
                                                                                                constrainedType 
                                                                                                (?)

** In state 678, looking ahead at LeftParen, shifting is permitted
** because of the following sub-derivation:

typeWithConstraint 
SET constraint_x OF type_x 
                    constrainedType 
                    type_x constraint_x 
                           . LeftParen constraintSpec exceptionSpec RightParen 

** In state 678, looking ahead at LeftParen, reducing production
** typeWithConstraint -> SET constraint_x OF type_x
** is permitted because of the following sub-derivation:

type_x constraint_x // lookahead token appears because constraint_x can begin with LeftParen
constrainedType // lookahead token is inherited
typeWithConstraint // lookahead token is inherited
SET constraint_x OF type_x . 

** Conflict (shift/reduce) in state 674.
** Token involved: LeftParen
** This state is reached from main after reading:

moduleIdentifier DEFINITIONS tagDefault extensionDefault Assignment BEGIN exports imports Upper SET sizeConstraint OF type_x

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

main 
moduleDefinition EOF 
moduleIdentifier DEFINITIONS tagDefault extensionDefault Assignment BEGIN moduleBody END 
                                                                          exports imports assignmentList 
                                                                                          assignment 
                                                                                          valueSetTypeAssignment 
                                                                                          Upper type_x Assignment valueSet 
                                                                                                constrainedType 
                                                                                                (?)

** In state 674, looking ahead at LeftParen, shifting is permitted
** because of the following sub-derivation:

typeWithConstraint 
SET sizeConstraint OF type_x 
                      constrainedType 
                      type_x constraint_x 
                             . LeftParen constraintSpec exceptionSpec RightParen 

** In state 674, looking ahead at LeftParen, reducing production
** typeWithConstraint -> SET sizeConstraint OF type_x
** is permitted because of the following sub-derivation:

type_x constraint_x // lookahead token appears because constraint_x can begin with LeftParen
constrainedType // lookahead token is inherited
typeWithConstraint // lookahead token is inherited
SET sizeConstraint OF type_x . 

** Conflict (reduce/reduce) in state 667.
** Tokens involved: RightBrace Comma
** The following explanations concentrate on token RightBrace.
** This state is reached from main after reading:

moduleIdentifier DEFINITIONS tagDefault extensionDefault Assignment BEGIN exports imports Upper SET LeftBrace extensionAndException

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

main 
moduleDefinition EOF 
moduleIdentifier DEFINITIONS tagDefault extensionDefault Assignment BEGIN moduleBody END 
                                                                          exports imports assignmentList 
                                                                                          assignment 
                                                                                          valueSetTypeAssignment 
                                                                                          Upper type_x Assignment valueSet 
                                                                                                builtinType 
                                                                                                setType 
                                                                                                (?)

** In state 667, looking ahead at RightBrace, reducing production
** extensionAdditions -> 
** is permitted because of the following sub-derivation:

SET LeftBrace componentTypeLists RightBrace // lookahead token appears
              extensionAndException extensionAdditions optionalExtensionMarker // lookahead token is inherited because optionalExtensionMarker can vanish
                                    . 

** In state 667, looking ahead at RightBrace, reducing production
** optionalExtensionMarker -> 
** is permitted because of the following sub-derivation:

SET LeftBrace extensionAndException optionalExtensionMarker RightBrace // lookahead token appears
                                    . 

** Conflict (shift/reduce) in state 663.
** Token involved: LeftParen
** This state is reached from main after reading:

moduleIdentifier DEFINITIONS tagDefault extensionDefault Assignment BEGIN exports imports Upper SET OF type_x

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

main 
moduleDefinition EOF 
moduleIdentifier DEFINITIONS tagDefault extensionDefault Assignment BEGIN moduleBody END 
                                                                          exports imports assignmentList 
                                                                                          assignment 
                                                                                          valueSetTypeAssignment 
                                                                                          Upper type_x Assignment valueSet 
                                                                                                (?)

** In state 663, looking ahead at LeftParen, shifting is permitted
** because of the following sub-derivation:

builtinType 
setOfType 
SET OF type_x 
       constrainedType 
       type_x constraint_x 
              . LeftParen constraintSpec exceptionSpec RightParen 

** In state 663, looking ahead at LeftParen, reducing production
** setOfType -> SET OF type_x
** is permitted because of the following sub-derivation:

constrainedType 
type_x constraint_x // lookahead token appears because constraint_x can begin with LeftParen
builtinType // lookahead token is inherited
setOfType // lookahead token is inherited
SET OF type_x . 

** Conflict (shift/reduce) in state 651.
** Tokens involved: VisibleString VideotexString Upper UniversalString UTF8String UTCTime TeletexString TYPE_IDENTIFIER T61String SET SEQUENCE RELATIVE_OID REAL PrintableString ObjectDescriptor OCTET OBJECT NumericString NULL Lower LeftBracket ISO646String INTEGER INSTANCE IA5String GraphicString GeneralizedTime GeneralString EXTERNAL ENUMERATED EMBEDDED CHOICE CHARACTER BOOLEAN BMPString BIT ABSTRACT_SYNTAX
** The following explanations concentrate on token VisibleString.
** This state is reached from main after reading:

moduleIdentifier DEFINITIONS tagDefault extensionDefault Assignment BEGIN exports imports Upper SET LeftParen rootElementSetSpec Comma Ellipsis Comma

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

main 
moduleDefinition EOF 
moduleIdentifier DEFINITIONS tagDefault extensionDefault Assignment BEGIN moduleBody END 
                                                                          exports imports assignmentList 
                                                                                          assignment 
                                                                                          valueSetTypeAssignment 
                                                                                          Upper type_x Assignment valueSet 
                                                                                                constrainedType 
                                                                                                typeWithConstraint 
                                                                                                SET constraint_x OF type_x 
                                                                                                    LeftParen constraintSpec exceptionSpec RightParen 
                                                                                                              subtypeConstraint 
                                                                                                              elementSetSpecs 
                                                                                                              rootElementSetSpec Comma Ellipsis Comma additionalElementSetSpec 
                                                                                                                                                      elementSetSpec 
                                                                                                                                                      unions 
                                                                                                                                                      intersections 
                                                                                                                                                      intersectionElements 
                                                                                                                                                      elements 
                                                                                                                                                      subtypeElements 
                                                                                                                                                      (?)

** In state 651, looking ahead at VisibleString, reducing production
** includes -> 
** is permitted because of the following sub-derivation:

containedSubtype 
includes type_x // lookahead token appears because type_x can begin with VisibleString
. 

** In state 651, looking ahead at VisibleString, shifting is permitted
** because of the following sub-derivation:

typeConstraint 
type_x 
builtinType 
characterStringType 
restrictedCharacterStringType 
. VisibleString 

** Conflict (shift/reduce) in state 600.
** Token involved: RightBrace
** This state is reached from main after reading:

moduleIdentifier DEFINITIONS tagDefault extensionDefault Assignment BEGIN exports imports Upper SET LeftParen LeftBrace definedObjectSet

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

main 
moduleDefinition EOF 
moduleIdentifier DEFINITIONS tagDefault extensionDefault Assignment BEGIN moduleBody END 
                                                                          exports imports assignmentList 
                                                                                          assignment 
                                                                                          valueSetTypeAssignment 
                                                                                          Upper type_x Assignment valueSet 
                                                                                                constrainedType 
                                                                                                typeWithConstraint 
                                                                                                SET constraint_x OF type_x 
                                                                                                    LeftParen constraintSpec exceptionSpec RightParen 
                                                                                                              generalConstraint 
                                                                                                              tableConstraint 
                                                                                                              (?)

** In state 600, looking ahead at RightBrace, shifting is permitted
** because of the following sub-derivation:

componentRelationConstraint 
LeftBrace definedObjectSet . RightBrace LeftBrace separated_nonempty_list(Comma,atNotation) RightBrace 

** In state 600, looking ahead at RightBrace, reducing production
** objectSetElements -> definedObjectSet
** is permitted because of the following sub-derivation:

simpleTableConstraint 
objectSet 
LeftBrace objectSetSpec RightBrace // lookahead token appears
          rootElementSetSpec // lookahead token is inherited
          elementSetSpec // lookahead token is inherited
          unions // lookahead token is inherited
          intersections // lookahead token is inherited
          intersectionElements // lookahead token is inherited
          elements // lookahead token is inherited
          objectSetElements // lookahead token is inherited
          definedObjectSet . 

** Conflict (shift/reduce) in state 598.
** Tokens involved: VisibleString VideotexString Upper UniversalString UTF8String UTCTime TeletexString TYPE_IDENTIFIER T61String SET SEQUENCE RELATIVE_OID REAL PrintableString ObjectDescriptor OCTET OBJECT NumericString NULL Lower LeftBracket ISO646String INTEGER INSTANCE IA5String GraphicString GeneralizedTime GeneralString EXTERNAL ENUMERATED EMBEDDED CHOICE CHARACTER BOOLEAN BMPString BIT ABSTRACT_SYNTAX
** The following explanations concentrate on token VisibleString.
** This state is reached from main after reading:

moduleIdentifier DEFINITIONS tagDefault extensionDefault Assignment BEGIN exports imports Upper SET LeftParen LeftBrace rootElementSetSpec Comma Ellipsis Comma

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

main 
moduleDefinition EOF 
moduleIdentifier DEFINITIONS tagDefault extensionDefault Assignment BEGIN moduleBody END 
                                                                          exports imports assignmentList 
                                                                                          assignment 
                                                                                          valueSetTypeAssignment 
                                                                                          Upper type_x Assignment valueSet 
                                                                                                constrainedType 
                                                                                                typeWithConstraint 
                                                                                                SET constraint_x OF type_x 
                                                                                                    LeftParen constraintSpec exceptionSpec RightParen 
                                                                                                              generalConstraint 
                                                                                                              tableConstraint 
                                                                                                              simpleTableConstraint 
                                                                                                              objectSet 
                                                                                                              LeftBrace objectSetSpec RightBrace 
                                                                                                                        rootElementSetSpec Comma Ellipsis Comma additionalElementSetSpec 
                                                                                                                                                                elementSetSpec 
                                                                                                                                                                unions 
                                                                                                                                                                intersections 
                                                                                                                                                                intersectionElements 
                                                                                                                                                                elements 
                                                                                                                                                                subtypeElements 
                                                                                                                                                                (?)

** In state 598, looking ahead at VisibleString, reducing production
** includes -> 
** is permitted because of the following sub-derivation:

containedSubtype 
includes type_x // lookahead token appears because type_x can begin with VisibleString
. 

** In state 598, looking ahead at VisibleString, shifting is permitted
** because of the following sub-derivation:

typeConstraint 
type_x 
builtinType 
characterStringType 
restrictedCharacterStringType 
. VisibleString 

** Conflict (shift/reduce) in state 594.
** Tokens involved: VisibleString VideotexString Upper UniversalString UTF8String UTCTime TeletexString TYPE_IDENTIFIER T61String SET SEQUENCE RightBrace RELATIVE_OID REAL PrintableString ObjectDescriptor OCTET OBJECT NumericString NULL Lower LeftBracket ISO646String INTEGER INSTANCE IA5String GraphicString GeneralizedTime GeneralString EXTERNAL ENUMERATED EMBEDDED CHOICE CHARACTER BOOLEAN BMPString BIT ABSTRACT_SYNTAX
** The following explanations concentrate on token RightBrace.
** This state is reached from main after reading:

moduleIdentifier DEFINITIONS tagDefault extensionDefault Assignment BEGIN exports imports Upper SET LeftParen LeftBrace

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

main 
moduleDefinition EOF 
moduleIdentifier DEFINITIONS tagDefault extensionDefault Assignment BEGIN moduleBody END 
                                                                          exports imports assignmentList 
                                                                                          assignment 
                                                                                          valueSetTypeAssignment 
                                                                                          Upper type_x Assignment valueSet 
                                                                                                constrainedType 
                                                                                                typeWithConstraint 
                                                                                                SET constraint_x OF type_x 
                                                                                                    LeftParen constraintSpec exceptionSpec RightParen 
                                                                                                              subtypeConstraint 
                                                                                                              elementSetSpecs 
                                                                                                              rootElementSetSpec 
                                                                                                              elementSetSpec 
                                                                                                              unions 
                                                                                                              intersections 
                                                                                                              intersectionElements 
                                                                                                              elements 
                                                                                                              (?)

** In state 594, looking ahead at RightBrace, shifting is permitted
** because of the following sub-derivation:

subtypeElements 
singleValue 
value 
builtinValue 
bitStringValue 
LeftBrace . RightBrace 

** In state 594, looking ahead at RightBrace, reducing production
** loption(separated_nonempty_list(Comma,fieldSetting)) -> 
** is permitted because of the following sub-derivation:

objectSetElements 
object_x 
objectDefn 
defaultSyntax 
LeftBrace loption(separated_nonempty_list(Comma,fieldSetting)) RightBrace // lookahead token appears
          . 

** Conflict (reduce/reduce) in state 589.
** Tokens involved: RightBrace LeftParen Comma Colon
** The following explanations concentrate on token RightBrace.
** This state is reached from main after reading:

moduleIdentifier DEFINITIONS tagDefault extensionDefault Assignment BEGIN exports imports Upper simpleDefinedType LeftBrace referencedObjects Dot fieldName

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

main 
moduleDefinition EOF 
moduleIdentifier DEFINITIONS tagDefault extensionDefault Assignment BEGIN moduleBody END 
                                                                          exports imports assignmentList 
                                                                                          assignment 
                                                                                          valueSetTypeAssignment 
                                                                                          Upper type_x Assignment valueSet 
                                                                                                referencedType 
                                                                                                definedType 
                                                                                                parameterizedType 
                                                                                                simpleDefinedType actualParameterList 
                                                                                                                  LeftBrace separated_nonempty_list(Comma,actualParameter) RightBrace // lookahead token appears
                                                                                                                            actualParameter // lookahead token is inherited
                                                                                                                            (?)

** In state 589, looking ahead at RightBrace, reducing production
** objectFromObject -> referencedObjects Dot fieldName
** is permitted because of the following sub-derivation:

object_x // lookahead token is inherited
objectFromObject // lookahead token is inherited
referencedObjects Dot fieldName . 

** In state 589, looking ahead at RightBrace, reducing production
** typeFromObject -> referencedObjects Dot fieldName
** is permitted because of the following sub-derivation:

type_x // lookahead token is inherited
referencedType // lookahead token is inherited
typeFromObject // lookahead token is inherited
referencedObjects Dot fieldName . 

** In state 589, looking ahead at RightBrace, reducing production
** valueFromObject -> referencedObjects Dot fieldName
** is permitted because of the following sub-derivation:

value // lookahead token is inherited
referencedValue // lookahead token is inherited
valueFromObject // lookahead token is inherited
referencedObjects Dot fieldName . 

** In state 589, looking ahead at RightBrace, reducing production
** valueSetFromObjects -> referencedObjects Dot fieldName
** is permitted because of the following sub-derivation:

type_x // lookahead token is inherited
referencedType // lookahead token is inherited
valueSetFromObjects // lookahead token is inherited
referencedObjects Dot fieldName . 

** Conflict (reduce/reduce) in state 572.
** Token involved: RightBrace
** This state is reached from main after reading:

moduleIdentifier DEFINITIONS tagDefault extensionDefault Assignment BEGIN exports imports Upper simpleDefinedType LeftBrace LeftBrace rootElementSetSpec Comma Ellipsis Comma additionalElementSetSpec

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

main 
moduleDefinition EOF 
moduleIdentifier DEFINITIONS tagDefault extensionDefault Assignment BEGIN moduleBody END 
                                                                          exports imports assignmentList 
                                                                                          assignment 
                                                                                          valueSetTypeAssignment 
                                                                                          Upper type_x Assignment valueSet 
                                                                                                referencedType 
                                                                                                definedType 
                                                                                                parameterizedType 
                                                                                                simpleDefinedType actualParameterList 
                                                                                                                  LeftBrace separated_nonempty_list(Comma,actualParameter) RightBrace 
                                                                                                                            actualParameter 
                                                                                                                            (?)

** In state 572, looking ahead at RightBrace, reducing production
** elementSetSpecs -> rootElementSetSpec Comma Ellipsis Comma additionalElementSetSpec
** is permitted because of the following sub-derivation:

valueSet 
LeftBrace elementSetSpecs RightBrace // lookahead token appears
          rootElementSetSpec Comma Ellipsis Comma additionalElementSetSpec . 

** In state 572, looking ahead at RightBrace, reducing production
** objectSetSpec -> rootElementSetSpec Comma Ellipsis Comma additionalElementSetSpec
** is permitted because of the following sub-derivation:

objectSet 
LeftBrace objectSetSpec RightBrace // lookahead token appears
          rootElementSetSpec Comma Ellipsis Comma additionalElementSetSpec . 

** Conflict (shift/reduce) in state 571.
** Tokens involved: VisibleString VideotexString Upper UniversalString UTF8String UTCTime TeletexString TYPE_IDENTIFIER T61String SET SEQUENCE RELATIVE_OID REAL PrintableString ObjectDescriptor OCTET OBJECT NumericString NULL Lower LeftBracket ISO646String INTEGER INSTANCE IA5String GraphicString GeneralizedTime GeneralString EXTERNAL ENUMERATED EMBEDDED CHOICE CHARACTER BOOLEAN BMPString BIT ABSTRACT_SYNTAX
** The following explanations concentrate on token VisibleString.
** This state is reached from main after reading:

moduleIdentifier DEFINITIONS tagDefault extensionDefault Assignment BEGIN exports imports Upper simpleDefinedType LeftBrace LeftBrace rootElementSetSpec Comma Ellipsis Comma

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

main 
moduleDefinition EOF 
moduleIdentifier DEFINITIONS tagDefault extensionDefault Assignment BEGIN moduleBody END 
                                                                          exports imports assignmentList 
                                                                                          assignment 
                                                                                          valueSetTypeAssignment 
                                                                                          Upper type_x Assignment valueSet 
                                                                                                referencedType 
                                                                                                definedType 
                                                                                                parameterizedType 
                                                                                                simpleDefinedType actualParameterList 
                                                                                                                  LeftBrace separated_nonempty_list(Comma,actualParameter) RightBrace 
                                                                                                                            actualParameter 
                                                                                                                            valueSet 
                                                                                                                            LeftBrace elementSetSpecs RightBrace 
                                                                                                                                      rootElementSetSpec Comma Ellipsis Comma additionalElementSetSpec 
                                                                                                                                                                              elementSetSpec 
                                                                                                                                                                              unions 
                                                                                                                                                                              intersections 
                                                                                                                                                                              intersectionElements 
                                                                                                                                                                              elements 
                                                                                                                                                                              subtypeElements 
                                                                                                                                                                              (?)

** In state 571, looking ahead at VisibleString, reducing production
** includes -> 
** is permitted because of the following sub-derivation:

containedSubtype 
includes type_x // lookahead token appears because type_x can begin with VisibleString
. 

** In state 571, looking ahead at VisibleString, shifting is permitted
** because of the following sub-derivation:

typeConstraint 
type_x 
builtinType 
characterStringType 
restrictedCharacterStringType 
. VisibleString 

** Conflict (reduce/reduce) in state 570.
** Token involved: RightBrace
** This state is reached from main after reading:

moduleIdentifier DEFINITIONS tagDefault extensionDefault Assignment BEGIN exports imports Upper simpleDefinedType LeftBrace LeftBrace rootElementSetSpec Comma Ellipsis

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

main 
moduleDefinition EOF 
moduleIdentifier DEFINITIONS tagDefault extensionDefault Assignment BEGIN moduleBody END 
                                                                          exports imports assignmentList 
                                                                                          assignment 
                                                                                          valueSetTypeAssignment 
                                                                                          Upper type_x Assignment valueSet 
                                                                                                referencedType 
                                                                                                definedType 
                                                                                                parameterizedType 
                                                                                                simpleDefinedType actualParameterList 
                                                                                                                  LeftBrace separated_nonempty_list(Comma,actualParameter) RightBrace 
                                                                                                                            actualParameter 
                                                                                                                            (?)

** In state 570, looking ahead at RightBrace, reducing production
** elementSetSpecs -> rootElementSetSpec Comma Ellipsis
** is permitted because of the following sub-derivation:

valueSet 
LeftBrace elementSetSpecs RightBrace // lookahead token appears
          rootElementSetSpec Comma Ellipsis . 

** In state 570, looking ahead at RightBrace, reducing production
** objectSetSpec -> rootElementSetSpec Comma Ellipsis
** is permitted because of the following sub-derivation:

objectSet 
LeftBrace objectSetSpec RightBrace // lookahead token appears
          rootElementSetSpec Comma Ellipsis . 

** Conflict (reduce/reduce) in state 568.
** Token involved: RightBrace
** This state is reached from main after reading:

moduleIdentifier DEFINITIONS tagDefault extensionDefault Assignment BEGIN exports imports Upper simpleDefinedType LeftBrace LeftBrace rootElementSetSpec

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

main 
moduleDefinition EOF 
moduleIdentifier DEFINITIONS tagDefault extensionDefault Assignment BEGIN moduleBody END 
                                                                          exports imports assignmentList 
                                                                                          assignment 
                                                                                          valueSetTypeAssignment 
                                                                                          Upper type_x Assignment valueSet 
                                                                                                referencedType 
                                                                                                definedType 
                                                                                                parameterizedType 
                                                                                                simpleDefinedType actualParameterList 
                                                                                                                  LeftBrace separated_nonempty_list(Comma,actualParameter) RightBrace 
                                                                                                                            actualParameter 
                                                                                                                            (?)

** In state 568, looking ahead at RightBrace, reducing production
** elementSetSpecs -> rootElementSetSpec
** is permitted because of the following sub-derivation:

valueSet 
LeftBrace elementSetSpecs RightBrace // lookahead token appears
          rootElementSetSpec . 

** In state 568, looking ahead at RightBrace, reducing production
** objectSetSpec -> rootElementSetSpec
** is permitted because of the following sub-derivation:

objectSet 
LeftBrace objectSetSpec RightBrace // lookahead token appears
          rootElementSetSpec . 

** Conflict (reduce/reduce) in state 567.
** Tokens involved: RightBrace Comma
** The following explanations concentrate on token RightBrace.
** This state is reached from main after reading:

moduleIdentifier DEFINITIONS tagDefault extensionDefault Assignment BEGIN exports imports Upper SET LeftParen LeftBrace value

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

main 
moduleDefinition EOF 
moduleIdentifier DEFINITIONS tagDefault extensionDefault Assignment BEGIN moduleBody END 
                                                                          exports imports assignmentList 
                                                                                          assignment 
                                                                                          valueSetTypeAssignment 
                                                                                          Upper type_x Assignment valueSet 
                                                                                                constrainedType 
                                                                                                typeWithConstraint 
                                                                                                SET constraint_x OF type_x 
                                                                                                    LeftParen constraintSpec exceptionSpec RightParen 
                                                                                                              (?)

** In state 567, looking ahead at RightBrace, reducing production
** singleValue -> value
** is permitted because of the following sub-derivation:

generalConstraint 
tableConstraint 
simpleTableConstraint 
objectSet 
LeftBrace objectSetSpec RightBrace // lookahead token appears
          rootElementSetSpec // lookahead token is inherited
          elementSetSpec // lookahead token is inherited
          unions // lookahead token is inherited
          intersections // lookahead token is inherited
          intersectionElements // lookahead token is inherited
          elements // lookahead token is inherited
          subtypeElements // lookahead token is inherited
          singleValue // lookahead token is inherited
          value . 

** In state 567, looking ahead at RightBrace, reducing production
** valueList -> value
** is permitted because of the following sub-derivation:

subtypeConstraint 
elementSetSpecs 
rootElementSetSpec 
elementSetSpec 
unions 
intersections 
intersectionElements 
elements 
subtypeElements 
singleValue 
value 
builtinValue 
sequenceOfValue 
LeftBrace valueList RightBrace // lookahead token appears
          value . 

** Conflict (shift/reduce) in state 559.
** Tokens involved: VisibleString VideotexString Upper UniversalString UTF8String UTCTime TeletexString TYPE_IDENTIFIER T61String SET SEQUENCE RELATIVE_OID REAL PrintableString ObjectDescriptor OCTET OBJECT NumericString NULL Lower LeftBracket ISO646String INTEGER INSTANCE IA5String GraphicString GeneralizedTime GeneralString EXTERNAL ENUMERATED EMBEDDED CHOICE CHARACTER BOOLEAN BMPString BIT ABSTRACT_SYNTAX
** The following explanations concentrate on token VisibleString.
** This state is reached from main after reading:

moduleIdentifier DEFINITIONS tagDefault extensionDefault Assignment BEGIN exports imports Upper SET LeftParen iElems intersectionMark

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

main 
moduleDefinition EOF 
moduleIdentifier DEFINITIONS tagDefault extensionDefault Assignment BEGIN moduleBody END 
                                                                          exports imports assignmentList 
                                                                                          assignment 
                                                                                          valueSetTypeAssignment 
                                                                                          Upper type_x Assignment valueSet 
                                                                                                constrainedType 
                                                                                                typeWithConstraint 
                                                                                                SET constraint_x OF type_x 
                                                                                                    LeftParen constraintSpec exceptionSpec RightParen 
                                                                                                              subtypeConstraint 
                                                                                                              elementSetSpecs 
                                                                                                              rootElementSetSpec 
                                                                                                              elementSetSpec 
                                                                                                              unions 
                                                                                                              intersections 
                                                                                                              iElems intersectionMark intersectionElements 
                                                                                                                                      elements 
                                                                                                                                      subtypeElements 
                                                                                                                                      (?)

** In state 559, looking ahead at VisibleString, reducing production
** includes -> 
** is permitted because of the following sub-derivation:

containedSubtype 
includes type_x // lookahead token appears because type_x can begin with VisibleString
. 

** In state 559, looking ahead at VisibleString, shifting is permitted
** because of the following sub-derivation:

typeConstraint 
type_x 
builtinType 
characterStringType 
restrictedCharacterStringType 
. VisibleString 

** Conflict (shift/reduce) in state 553.
** Tokens involved: VisibleString VideotexString Upper UniversalString UTF8String UTCTime TeletexString TYPE_IDENTIFIER T61String SET SEQUENCE RELATIVE_OID REAL PrintableString ObjectDescriptor OCTET OBJECT NumericString NULL Lower LeftBracket ISO646String INTEGER INSTANCE IA5String GraphicString GeneralizedTime GeneralString EXTERNAL ENUMERATED EMBEDDED CHOICE CHARACTER BOOLEAN BMPString BIT ABSTRACT_SYNTAX
** The following explanations concentrate on token VisibleString.
** This state is reached from main after reading:

moduleIdentifier DEFINITIONS tagDefault extensionDefault Assignment BEGIN exports imports Upper SET LeftParen uElems unionMark

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

main 
moduleDefinition EOF 
moduleIdentifier DEFINITIONS tagDefault extensionDefault Assignment BEGIN moduleBody END 
                                                                          exports imports assignmentList 
                                                                                          assignment 
                                                                                          valueSetTypeAssignment 
                                                                                          Upper type_x Assignment valueSet 
                                                                                                constrainedType 
                                                                                                typeWithConstraint 
                                                                                                SET constraint_x OF type_x 
                                                                                                    LeftParen constraintSpec exceptionSpec RightParen 
                                                                                                              subtypeConstraint 
                                                                                                              elementSetSpecs 
                                                                                                              rootElementSetSpec 
                                                                                                              elementSetSpec 
                                                                                                              unions 
                                                                                                              uElems unionMark intersections 
                                                                                                                               intersectionElements 
                                                                                                                               elements 
                                                                                                                               subtypeElements 
                                                                                                                               (?)

** In state 553, looking ahead at VisibleString, reducing production
** includes -> 
** is permitted because of the following sub-derivation:

containedSubtype 
includes type_x // lookahead token appears because type_x can begin with VisibleString
. 

** In state 553, looking ahead at VisibleString, shifting is permitted
** because of the following sub-derivation:

typeConstraint 
type_x 
builtinType 
characterStringType 
restrictedCharacterStringType 
. VisibleString 

** Conflict (reduce/reduce) in state 520.
** Tokens involved: UNION RightParen RightBrace Middle LeftParen INTERSECTION EXCEPT Comma Colon Circumflex Bang
** The following explanations concentrate on token UNION.
** This state is reached from main after reading:

moduleIdentifier DEFINITIONS tagDefault extensionDefault Assignment BEGIN exports imports Upper SET LeftParen referencedObjects Dot fieldName

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

main 
moduleDefinition EOF 
moduleIdentifier DEFINITIONS tagDefault extensionDefault Assignment BEGIN moduleBody END 
                                                                          exports imports assignmentList 
                                                                                          assignment 
                                                                                          valueSetTypeAssignment 
                                                                                          Upper type_x Assignment valueSet 
                                                                                                constrainedType 
                                                                                                typeWithConstraint 
                                                                                                SET constraint_x OF type_x 
                                                                                                    LeftParen constraintSpec exceptionSpec RightParen 
                                                                                                              subtypeConstraint 
                                                                                                              elementSetSpecs 
                                                                                                              rootElementSetSpec 
                                                                                                              elementSetSpec 
                                                                                                              unions 
                                                                                                              uElems unionMark intersections // lookahead token appears because unionMark can begin with UNION
                                                                                                              unions // lookahead token is inherited
                                                                                                              intersections // lookahead token is inherited
                                                                                                              intersectionElements // lookahead token is inherited
                                                                                                              elements // lookahead token is inherited
                                                                                                              (?)

** In state 520, looking ahead at UNION, reducing production
** objectFromObject -> referencedObjects Dot fieldName
** is permitted because of the following sub-derivation:

objectSetElements // lookahead token is inherited
object_x // lookahead token is inherited
objectFromObject // lookahead token is inherited
referencedObjects Dot fieldName . 

** In state 520, looking ahead at UNION, reducing production
** objectSetFromObjects -> referencedObjects Dot fieldName
** is permitted because of the following sub-derivation:

objectSetElements // lookahead token is inherited
objectSetFromObjects // lookahead token is inherited
referencedObjects Dot fieldName . 

** In state 520, looking ahead at UNION, reducing production
** typeFromObject -> referencedObjects Dot fieldName
** is permitted because of the following sub-derivation:

subtypeElements // lookahead token is inherited
typeConstraint // lookahead token is inherited
type_x // lookahead token is inherited
referencedType // lookahead token is inherited
typeFromObject // lookahead token is inherited
referencedObjects Dot fieldName . 

** In state 520, looking ahead at UNION, reducing production
** valueFromObject -> referencedObjects Dot fieldName
** is permitted because of the following sub-derivation:

subtypeElements // lookahead token is inherited
singleValue // lookahead token is inherited
value // lookahead token is inherited
referencedValue // lookahead token is inherited
valueFromObject // lookahead token is inherited
referencedObjects Dot fieldName . 

** In state 520, looking ahead at UNION, reducing production
** valueSetFromObjects -> referencedObjects Dot fieldName
** is permitted because of the following sub-derivation:

subtypeElements // lookahead token is inherited
typeConstraint // lookahead token is inherited
type_x // lookahead token is inherited
referencedType // lookahead token is inherited
valueSetFromObjects // lookahead token is inherited
referencedObjects Dot fieldName . 

** Conflict (shift/reduce) in state 510.
** Tokens involved: VisibleString VideotexString Upper UniversalString UTF8String UTCTime TeletexString TYPE_IDENTIFIER T61String SET SEQUENCE RELATIVE_OID REAL PrintableString ObjectDescriptor OCTET OBJECT NumericString NULL Lower LeftBracket ISO646String INTEGER INSTANCE IA5String GraphicString GeneralizedTime GeneralString EXTERNAL ENUMERATED EMBEDDED CHOICE CHARACTER BOOLEAN BMPString BIT ABSTRACT_SYNTAX
** The following explanations concentrate on token VisibleString.
** This state is reached from main after reading:

moduleIdentifier DEFINITIONS tagDefault extensionDefault Assignment BEGIN exports imports Upper SET LeftParen ALL EXCEPT

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

main 
moduleDefinition EOF 
moduleIdentifier DEFINITIONS tagDefault extensionDefault Assignment BEGIN moduleBody END 
                                                                          exports imports assignmentList 
                                                                                          assignment 
                                                                                          valueSetTypeAssignment 
                                                                                          Upper type_x Assignment valueSet 
                                                                                                constrainedType 
                                                                                                typeWithConstraint 
                                                                                                SET constraint_x OF type_x 
                                                                                                    LeftParen constraintSpec exceptionSpec RightParen 
                                                                                                              subtypeConstraint 
                                                                                                              elementSetSpecs 
                                                                                                              rootElementSetSpec 
                                                                                                              elementSetSpec 
                                                                                                              ALL exclusions 
                                                                                                                  EXCEPT elements 
                                                                                                                         subtypeElements 
                                                                                                                         (?)

** In state 510, looking ahead at VisibleString, reducing production
** includes -> 
** is permitted because of the following sub-derivation:

containedSubtype 
includes type_x // lookahead token appears because type_x can begin with VisibleString
. 

** In state 510, looking ahead at VisibleString, shifting is permitted
** because of the following sub-derivation:

typeConstraint 
type_x 
builtinType 
characterStringType 
restrictedCharacterStringType 
. VisibleString 

** Conflict (shift/reduce) in state 507.
** Tokens involved: VisibleString VideotexString Upper UniversalString UTF8String UTCTime TeletexString TYPE_IDENTIFIER T61String SET SEQUENCE RELATIVE_OID REAL PrintableString ObjectDescriptor OCTET OBJECT NumericString NULL Lower LeftBracket ISO646String INTEGER INSTANCE IA5String GraphicString GeneralizedTime GeneralString EXTERNAL ENUMERATED EMBEDDED CHOICE CHARACTER BOOLEAN BMPString BIT ABSTRACT_SYNTAX
** The following explanations concentrate on token VisibleString.
** This state is reached from main after reading:

moduleIdentifier DEFINITIONS tagDefault extensionDefault Assignment BEGIN exports imports Upper SET LeftParen LeftBrace Ellipsis Comma

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

main 
moduleDefinition EOF 
moduleIdentifier DEFINITIONS tagDefault extensionDefault Assignment BEGIN moduleBody END 
                                                                          exports imports assignmentList 
                                                                                          assignment 
                                                                                          valueSetTypeAssignment 
                                                                                          Upper type_x Assignment valueSet 
                                                                                                constrainedType 
                                                                                                typeWithConstraint 
                                                                                                SET constraint_x OF type_x 
                                                                                                    LeftParen constraintSpec exceptionSpec RightParen 
                                                                                                              generalConstraint 
                                                                                                              tableConstraint 
                                                                                                              simpleTableConstraint 
                                                                                                              objectSet 
                                                                                                              LeftBrace objectSetSpec RightBrace 
                                                                                                                        Ellipsis Comma additionalElementSetSpec 
                                                                                                                                       elementSetSpec 
                                                                                                                                       unions 
                                                                                                                                       intersections 
                                                                                                                                       intersectionElements 
                                                                                                                                       elements 
                                                                                                                                       subtypeElements 
                                                                                                                                       (?)

** In state 507, looking ahead at VisibleString, reducing production
** includes -> 
** is permitted because of the following sub-derivation:

containedSubtype 
includes type_x // lookahead token appears because type_x can begin with VisibleString
. 

** In state 507, looking ahead at VisibleString, shifting is permitted
** because of the following sub-derivation:

typeConstraint 
type_x 
builtinType 
characterStringType 
restrictedCharacterStringType 
. VisibleString 

** Conflict (shift/reduce) in state 502.
** Tokens involved: VisibleString VideotexString Upper UniversalString UTF8String UTCTime TeletexString TYPE_IDENTIFIER T61String SET SEQUENCE RightBrace RELATIVE_OID REAL PrintableString ObjectDescriptor OCTET OBJECT NumericString NULL Lower LeftBracket ISO646String INTEGER INSTANCE IA5String GraphicString GeneralizedTime GeneralString EXTERNAL ENUMERATED EMBEDDED CHOICE CHARACTER BOOLEAN BMPString BIT ABSTRACT_SYNTAX
** The following explanations concentrate on token RightBrace.
** This state is reached from main after reading:

moduleIdentifier DEFINITIONS tagDefault extensionDefault Assignment BEGIN exports imports Upper simpleDefinedType LeftBrace LeftBrace

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

main 
moduleDefinition EOF 
moduleIdentifier DEFINITIONS tagDefault extensionDefault Assignment BEGIN moduleBody END 
                                                                          exports imports assignmentList 
                                                                                          assignment 
                                                                                          valueSetTypeAssignment 
                                                                                          Upper type_x Assignment valueSet 
                                                                                                referencedType 
                                                                                                definedType 
                                                                                                parameterizedType 
                                                                                                simpleDefinedType actualParameterList 
                                                                                                                  LeftBrace separated_nonempty_list(Comma,actualParameter) RightBrace 
                                                                                                                            actualParameter 
                                                                                                                            (?)

** In state 502, looking ahead at RightBrace, shifting is permitted
** because of the following sub-derivation:

value 
builtinValue 
bitStringValue 
LeftBrace . RightBrace 

** In state 502, looking ahead at RightBrace, reducing production
** loption(separated_nonempty_list(Comma,fieldSetting)) -> 
** is permitted because of the following sub-derivation:

object_x 
objectDefn 
defaultSyntax 
LeftBrace loption(separated_nonempty_list(Comma,fieldSetting)) RightBrace // lookahead token appears
          . 

** Conflict (shift/reduce) in state 499.
** Token involved: RightBrace
** This state is reached from main after reading:

moduleIdentifier DEFINITIONS tagDefault extensionDefault Assignment BEGIN exports imports Upper SET LeftParen LeftParen LeftBrace

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

main 
moduleDefinition EOF 
moduleIdentifier DEFINITIONS tagDefault extensionDefault Assignment BEGIN moduleBody END 
                                                                          exports imports assignmentList 
                                                                                          assignment 
                                                                                          valueSetTypeAssignment 
                                                                                          Upper type_x Assignment valueSet 
                                                                                                constrainedType 
                                                                                                typeWithConstraint 
                                                                                                SET constraint_x OF type_x 
                                                                                                    LeftParen constraintSpec exceptionSpec RightParen 
                                                                                                              subtypeConstraint 
                                                                                                              elementSetSpecs 
                                                                                                              rootElementSetSpec 
                                                                                                              elementSetSpec 
                                                                                                              unions 
                                                                                                              intersections 
                                                                                                              intersectionElements 
                                                                                                              elements 
                                                                                                              LeftParen elementSetSpec RightParen 
                                                                                                                        unions 
                                                                                                                        intersections 
                                                                                                                        intersectionElements 
                                                                                                                        elements 
                                                                                                                        (?)

** In state 499, looking ahead at RightBrace, shifting is permitted
** because of the following sub-derivation:

subtypeElements 
singleValue 
value 
builtinValue 
bitStringValue 
LeftBrace . RightBrace 

** In state 499, looking ahead at RightBrace, reducing production
** loption(separated_nonempty_list(Comma,fieldSetting)) -> 
** is permitted because of the following sub-derivation:

objectSetElements 
object_x 
objectDefn 
defaultSyntax 
LeftBrace loption(separated_nonempty_list(Comma,fieldSetting)) RightBrace // lookahead token appears
          . 

** Conflict (shift/reduce) in state 498.
** Tokens involved: VisibleString VideotexString Upper UniversalString UTF8String UTCTime TeletexString TYPE_IDENTIFIER T61String SET SEQUENCE RELATIVE_OID REAL PrintableString ObjectDescriptor OCTET OBJECT NumericString NULL Lower LeftBracket ISO646String INTEGER INSTANCE IA5String GraphicString GeneralizedTime GeneralString EXTERNAL ENUMERATED EMBEDDED CHOICE CHARACTER BOOLEAN BMPString BIT ABSTRACT_SYNTAX
** The following explanations concentrate on token VisibleString.
** This state is reached from main after reading:

moduleIdentifier DEFINITIONS tagDefault extensionDefault Assignment BEGIN exports imports Upper SET LeftParen LeftParen

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

main 
moduleDefinition EOF 
moduleIdentifier DEFINITIONS tagDefault extensionDefault Assignment BEGIN moduleBody END 
                                                                          exports imports assignmentList 
                                                                                          assignment 
                                                                                          valueSetTypeAssignment 
                                                                                          Upper type_x Assignment valueSet 
                                                                                                constrainedType 
                                                                                                typeWithConstraint 
                                                                                                SET constraint_x OF type_x 
                                                                                                    LeftParen constraintSpec exceptionSpec RightParen 
                                                                                                              subtypeConstraint 
                                                                                                              elementSetSpecs 
                                                                                                              rootElementSetSpec 
                                                                                                              elementSetSpec 
                                                                                                              unions 
                                                                                                              intersections 
                                                                                                              intersectionElements 
                                                                                                              elements 
                                                                                                              LeftParen elementSetSpec RightParen 
                                                                                                                        unions 
                                                                                                                        intersections 
                                                                                                                        intersectionElements 
                                                                                                                        elements 
                                                                                                                        subtypeElements 
                                                                                                                        (?)

** In state 498, looking ahead at VisibleString, reducing production
** includes -> 
** is permitted because of the following sub-derivation:

containedSubtype 
includes type_x // lookahead token appears because type_x can begin with VisibleString
. 

** In state 498, looking ahead at VisibleString, shifting is permitted
** because of the following sub-derivation:

typeConstraint 
type_x 
builtinType 
characterStringType 
restrictedCharacterStringType 
. VisibleString 

** Conflict (shift/reduce) in state 493.
** Token involved: LeftParen
** This state is reached from main after reading:

moduleIdentifier DEFINITIONS tagDefault extensionDefault Assignment BEGIN exports imports Upper SEQUENCE constraint_x OF type_x

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

main 
moduleDefinition EOF 
moduleIdentifier DEFINITIONS tagDefault extensionDefault Assignment BEGIN moduleBody END 
                                                                          exports imports assignmentList 
                                                                                          assignment 
                                                                                          valueSetTypeAssignment 
                                                                                          Upper type_x Assignment valueSet 
                                                                                                constrainedType 
                                                                                                (?)

** In state 493, looking ahead at LeftParen, shifting is permitted
** because of the following sub-derivation:

typeWithConstraint 
SEQUENCE constraint_x OF type_x 
                         constrainedType 
                         type_x constraint_x 
                                . LeftParen constraintSpec exceptionSpec RightParen 

** In state 493, looking ahead at LeftParen, reducing production
** typeWithConstraint -> SEQUENCE constraint_x OF type_x
** is permitted because of the following sub-derivation:

type_x constraint_x // lookahead token appears because constraint_x can begin with LeftParen
constrainedType // lookahead token is inherited
typeWithConstraint // lookahead token is inherited
SEQUENCE constraint_x OF type_x . 

** Conflict (shift/reduce) in state 489.
** Token involved: LeftParen
** This state is reached from main after reading:

moduleIdentifier DEFINITIONS tagDefault extensionDefault Assignment BEGIN exports imports Upper SEQUENCE sizeConstraint OF type_x

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

main 
moduleDefinition EOF 
moduleIdentifier DEFINITIONS tagDefault extensionDefault Assignment BEGIN moduleBody END 
                                                                          exports imports assignmentList 
                                                                                          assignment 
                                                                                          valueSetTypeAssignment 
                                                                                          Upper type_x Assignment valueSet 
                                                                                                constrainedType 
                                                                                                (?)

** In state 489, looking ahead at LeftParen, shifting is permitted
** because of the following sub-derivation:

typeWithConstraint 
SEQUENCE sizeConstraint OF type_x 
                           constrainedType 
                           type_x constraint_x 
                                  . LeftParen constraintSpec exceptionSpec RightParen 

** In state 489, looking ahead at LeftParen, reducing production
** typeWithConstraint -> SEQUENCE sizeConstraint OF type_x
** is permitted because of the following sub-derivation:

type_x constraint_x // lookahead token appears because constraint_x can begin with LeftParen
constrainedType // lookahead token is inherited
typeWithConstraint // lookahead token is inherited
SEQUENCE sizeConstraint OF type_x . 

** Conflict (reduce/reduce) in state 476.
** Tokens involved: RightBrace Comma
** The following explanations concentrate on token RightBrace.
** This state is reached from main after reading:

moduleIdentifier DEFINITIONS tagDefault extensionDefault Assignment BEGIN exports imports Upper SEQUENCE LeftBrace extensionAndException

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

main 
moduleDefinition EOF 
moduleIdentifier DEFINITIONS tagDefault extensionDefault Assignment BEGIN moduleBody END 
                                                                          exports imports assignmentList 
                                                                                          assignment 
                                                                                          valueSetTypeAssignment 
                                                                                          Upper type_x Assignment valueSet 
                                                                                                builtinType 
                                                                                                sequenceType 
                                                                                                (?)

** In state 476, looking ahead at RightBrace, reducing production
** extensionAdditions -> 
** is permitted because of the following sub-derivation:

SEQUENCE LeftBrace componentTypeLists RightBrace // lookahead token appears
                   extensionAndException extensionAdditions optionalExtensionMarker // lookahead token is inherited because optionalExtensionMarker can vanish
                                         . 

** In state 476, looking ahead at RightBrace, reducing production
** optionalExtensionMarker -> 
** is permitted because of the following sub-derivation:

SEQUENCE LeftBrace extensionAndException optionalExtensionMarker RightBrace // lookahead token appears
                                         . 

** Conflict (shift/reduce) in state 475.
** Token involved: Comma
** This state is reached from main after reading:

moduleIdentifier DEFINITIONS tagDefault extensionDefault Assignment BEGIN exports imports Upper SET LeftBrace componentTypeList

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

main 
moduleDefinition EOF 
moduleIdentifier DEFINITIONS tagDefault extensionDefault Assignment BEGIN moduleBody END 
                                                                          exports imports assignmentList 
                                                                                          assignment 
                                                                                          valueSetTypeAssignment 
                                                                                          Upper type_x Assignment valueSet 
                                                                                                builtinType 
                                                                                                setType 
                                                                                                SET LeftBrace componentTypeLists RightBrace 
                                                                                                              (?)

** In state 475, looking ahead at Comma, shifting is permitted
** because of the following sub-derivation:

rootComponentTypeList 
componentTypeList 
componentTypeList . Comma componentType 

** In state 475, looking ahead at Comma, reducing production
** rootComponentTypeList -> componentTypeList
** is permitted because of the following sub-derivation:

rootComponentTypeList Comma extensionAndException extensionAdditions optionalExtensionMarker // lookahead token appears
componentTypeList . 

** Conflict (shift/reduce) in state 462.
** Token involved: Comma
** This state is reached from main after reading:

moduleIdentifier DEFINITIONS tagDefault extensionDefault Assignment BEGIN exports imports Upper SET LeftBrace extensionAndException Comma extensionAdditionList

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

main 
moduleDefinition EOF 
moduleIdentifier DEFINITIONS tagDefault extensionDefault Assignment BEGIN moduleBody END 
                                                                          exports imports assignmentList 
                                                                                          assignment 
                                                                                          valueSetTypeAssignment 
                                                                                          Upper type_x Assignment valueSet 
                                                                                                builtinType 
                                                                                                setType 
                                                                                                SET LeftBrace componentTypeLists RightBrace 
                                                                                                              (?)

** In state 462, looking ahead at Comma, shifting is permitted
** because of the following sub-derivation:

extensionAndException extensionAdditions extensionEndMarker Comma rootComponentTypeList 
                      Comma extensionAdditionList 
                            extensionAdditionList . Comma extensionAddition 

** In state 462, looking ahead at Comma, reducing production
** extensionAdditions -> Comma extensionAdditionList
** is permitted because of the following sub-derivation:

extensionAndException extensionAdditions extensionEndMarker Comma rootComponentTypeList // lookahead token appears because extensionEndMarker can begin with Comma
                      Comma extensionAdditionList . 

** Conflict (shift/reduce) in state 449.
** Token involved: Comma
** This state is reached from main after reading:

moduleIdentifier DEFINITIONS tagDefault extensionDefault Assignment BEGIN exports imports Upper SET LeftBrace rootComponentTypeList Comma extensionAndException

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

main 
moduleDefinition EOF 
moduleIdentifier DEFINITIONS tagDefault extensionDefault Assignment BEGIN moduleBody END 
                                                                          exports imports assignmentList 
                                                                                          assignment 
                                                                                          valueSetTypeAssignment 
                                                                                          Upper type_x Assignment valueSet 
                                                                                                builtinType 
                                                                                                setType 
                                                                                                SET LeftBrace componentTypeLists RightBrace 
                                                                                                              (?)

** In state 449, looking ahead at Comma, shifting is permitted
** because of the following sub-derivation:

rootComponentTypeList Comma extensionAndException extensionAdditions optionalExtensionMarker 
                                                  . Comma extensionAdditionList 

** In state 449, looking ahead at Comma, reducing production
** extensionAdditions -> 
** is permitted because of the following sub-derivation:

rootComponentTypeList Comma extensionAndException extensionAdditions optionalExtensionMarker // lookahead token appears because optionalExtensionMarker can begin with Comma
                                                  . 

** Conflict (shift/reduce) in state 440.
** Token involved: LeftParen
** This state is reached from main after reading:

moduleIdentifier DEFINITIONS tagDefault extensionDefault Assignment BEGIN exports imports Upper SEQUENCE OF type_x

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

main 
moduleDefinition EOF 
moduleIdentifier DEFINITIONS tagDefault extensionDefault Assignment BEGIN moduleBody END 
                                                                          exports imports assignmentList 
                                                                                          assignment 
                                                                                          valueSetTypeAssignment 
                                                                                          Upper type_x Assignment valueSet 
                                                                                                (?)

** In state 440, looking ahead at LeftParen, shifting is permitted
** because of the following sub-derivation:

builtinType 
sequenceOfType 
SEQUENCE OF type_x 
            constrainedType 
            type_x constraint_x 
                   . LeftParen constraintSpec exceptionSpec RightParen 

** In state 440, looking ahead at LeftParen, reducing production
** sequenceOfType -> SEQUENCE OF type_x
** is permitted because of the following sub-derivation:

constrainedType 
type_x constraint_x // lookahead token appears because constraint_x can begin with LeftParen
builtinType // lookahead token is inherited
sequenceOfType // lookahead token is inherited
SEQUENCE OF type_x . 

** Conflict (shift/reduce) in state 439.
** Token involved: LeftParen
** This state is reached from main after reading:

moduleIdentifier DEFINITIONS tagDefault extensionDefault Assignment BEGIN exports imports Upper Lower LessThan type_x

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

main 
moduleDefinition EOF 
moduleIdentifier DEFINITIONS tagDefault extensionDefault Assignment BEGIN moduleBody END 
                                                                          exports imports assignmentList 
                                                                                          assignment 
                                                                                          valueSetTypeAssignment 
                                                                                          Upper type_x Assignment valueSet 
                                                                                                (?)

** In state 439, looking ahead at LeftParen, shifting is permitted
** because of the following sub-derivation:

referencedType 
selectionType 
Lower LessThan type_x 
               constrainedType 
               type_x constraint_x 
                      . LeftParen constraintSpec exceptionSpec RightParen 

** In state 439, looking ahead at LeftParen, reducing production
** selectionType -> Lower LessThan type_x
** is permitted because of the following sub-derivation:

constrainedType 
type_x constraint_x // lookahead token appears because constraint_x can begin with LeftParen
referencedType // lookahead token is inherited
selectionType // lookahead token is inherited
Lower LessThan type_x . 

** Conflict (shift/reduce) in state 431.
** Token involved: Comma
** This state is reached from main after reading:

moduleIdentifier DEFINITIONS tagDefault extensionDefault Assignment BEGIN exports imports Upper ENUMERATED LeftBrace enumerationItem

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

main 
moduleDefinition EOF 
moduleIdentifier DEFINITIONS tagDefault extensionDefault Assignment BEGIN moduleBody END 
                                                                          exports imports assignmentList 
                                                                                          assignment 
                                                                                          valueSetTypeAssignment 
                                                                                          Upper type_x Assignment valueSet 
                                                                                                builtinType 
                                                                                                enumeratedType 
                                                                                                ENUMERATED LeftBrace enumerations RightBrace 
                                                                                                                     (?)

** In state 431, looking ahead at Comma, reducing production
** enumeration -> enumerationItem
** is permitted because of the following sub-derivation:

rootEnumeration Comma Ellipsis exceptionSpec // lookahead token appears
enumeration // lookahead token is inherited
enumerationItem . 

** In state 431, looking ahead at Comma, shifting is permitted
** because of the following sub-derivation:

rootEnumeration 
enumeration 
enumerationItem . Comma enumeration 

** Conflict (reduce/reduce) in state 417.
** Token involved: Comma
** This state is reached from main after reading:

moduleIdentifier DEFINITIONS tagDefault extensionDefault Assignment BEGIN exports imports Upper SET LeftParen LeftBrace charSyms Comma LeftBrace Number

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

main 
moduleDefinition EOF 
moduleIdentifier DEFINITIONS tagDefault extensionDefault Assignment BEGIN moduleBody END 
                                                                          exports imports assignmentList 
                                                                                          assignment 
                                                                                          valueSetTypeAssignment 
                                                                                          Upper type_x Assignment valueSet 
                                                                                                constrainedType 
                                                                                                typeWithConstraint 
                                                                                                SET constraint_x OF type_x 
                                                                                                    LeftParen constraintSpec exceptionSpec RightParen 
                                                                                                              subtypeConstraint 
                                                                                                              elementSetSpecs 
                                                                                                              rootElementSetSpec 
                                                                                                              elementSetSpec 
                                                                                                              unions 
                                                                                                              intersections 
                                                                                                              intersectionElements 
                                                                                                              elements 
                                                                                                              subtypeElements 
                                                                                                              singleValue 
                                                                                                              value 
                                                                                                              builtinValue 
                                                                                                              characterStringValue 
                                                                                                              restrictedCharacterStringValue 
                                                                                                              characterStringList 
                                                                                                              LeftBrace charSyms RightBrace 
                                                                                                                        charSyms Comma charsDefn 
                                                                                                                                       (?)

** In state 417, looking ahead at Comma, reducing production
** group -> Number
** is permitted because of the following sub-derivation:

quadruple 
LeftBrace group Comma plane Comma row Comma cell RightBrace // lookahead token appears
          Number . 

** In state 417, looking ahead at Comma, reducing production
** tableColumn -> Number
** is permitted because of the following sub-derivation:

tuple 
LeftBrace tableColumn Comma tableRow RightBrace // lookahead token appears
          Number . 

** Conflict (reduce/reduce) in state 409.
** Tokens involved: Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang
** The following explanations concentrate on token UNION.
** This state is reached from main after reading:

moduleIdentifier DEFINITIONS tagDefault extensionDefault Assignment BEGIN exports imports Upper SET LeftParen LeftBrace componentValueList RightBrace

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

main 
moduleDefinition EOF 
moduleIdentifier DEFINITIONS tagDefault extensionDefault Assignment BEGIN moduleBody END 
                                                                          exports imports assignmentList 
                                                                                          assignment 
                                                                                          valueSetTypeAssignment 
                                                                                          Upper type_x Assignment valueSet 
                                                                                                constrainedType 
                                                                                                typeWithConstraint 
                                                                                                SET constraint_x OF type_x 
                                                                                                    LeftParen constraintSpec exceptionSpec RightParen 
                                                                                                              subtypeConstraint 
                                                                                                              elementSetSpecs 
                                                                                                              rootElementSetSpec 
                                                                                                              elementSetSpec 
                                                                                                              unions 
                                                                                                              uElems unionMark intersections // lookahead token appears because unionMark can begin with UNION
                                                                                                              unions // lookahead token is inherited
                                                                                                              intersections // lookahead token is inherited
                                                                                                              intersectionElements // lookahead token is inherited
                                                                                                              elements // lookahead token is inherited
                                                                                                              subtypeElements // lookahead token is inherited
                                                                                                              singleValue // lookahead token is inherited
                                                                                                              value // lookahead token is inherited
                                                                                                              builtinValue // lookahead token is inherited
                                                                                                              (?)

** In state 409, looking ahead at UNION, reducing production
** sequenceValue -> LeftBrace componentValueList RightBrace
** is permitted because of the following sub-derivation:

sequenceValue // lookahead token is inherited
LeftBrace componentValueList RightBrace . 

** In state 409, looking ahead at UNION, reducing production
** setValue -> LeftBrace componentValueList RightBrace
** is permitted because of the following sub-derivation:

setValue // lookahead token is inherited
LeftBrace componentValueList RightBrace . 

** Conflict (shift/reduce/reduce) in state 405.
** Tokens involved: Upper RightBrace Number Lower Comma
** The following explanations concentrate on token Upper.
** This state is reached from main after reading:

moduleIdentifier DEFINITIONS tagDefault extensionDefault Assignment BEGIN exports imports Upper SET LeftParen LeftBrace definedValue

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

main 
moduleDefinition EOF 
moduleIdentifier DEFINITIONS tagDefault extensionDefault Assignment BEGIN moduleBody END 
                                                                          exports imports assignmentList 
                                                                                          assignment 
                                                                                          valueSetTypeAssignment 
                                                                                          Upper type_x Assignment valueSet 
                                                                                                constrainedType 
                                                                                                typeWithConstraint 
                                                                                                SET constraint_x OF type_x 
                                                                                                    LeftParen constraintSpec exceptionSpec RightParen 
                                                                                                              subtypeConstraint 
                                                                                                              elementSetSpecs 
                                                                                                              rootElementSetSpec 
                                                                                                              elementSetSpec 
                                                                                                              unions 
                                                                                                              intersections 
                                                                                                              intersectionElements 
                                                                                                              elements 
                                                                                                              subtypeElements 
                                                                                                              singleValue 
                                                                                                              value 
                                                                                                              builtinValue 
                                                                                                              (?)

** In state 405, looking ahead at Upper, shifting is permitted
** because of the following sub-derivation:

objectIdentifierValue 
LeftBrace definedValue objIdComponentsList RightBrace 
                       objIdComponents 
                       definedValue 
                       externalValueReference 
                       . Upper Dot Lower 

** In state 405, looking ahead at Upper, reducing production
** numberForm -> definedValue
** is permitted because of the following sub-derivation:

objectIdentifierValue 
LeftBrace objIdComponentsList RightBrace 
          objIdComponents objIdComponentsList // lookahead token appears because objIdComponentsList can begin with Upper
          numberForm // lookahead token is inherited
          definedValue . 

** In state 405, looking ahead at Upper, reducing production
** objIdComponents -> definedValue
** is permitted because of the following sub-derivation:

objectIdentifierValue 
LeftBrace objIdComponentsList RightBrace 
          objIdComponents objIdComponentsList // lookahead token appears because objIdComponentsList can begin with Upper
          definedValue . 

** In state 405, looking ahead at Upper, reducing production
** relativeOIDComponents -> definedValue
** is permitted because of the following sub-derivation:

relativeOIDValue 
LeftBrace relativeOIDComponentsList RightBrace 
          relativeOIDComponents relativeOIDComponentsList // lookahead token appears because relativeOIDComponentsList can begin with Upper
          definedValue . 

** Conflict (reduce/reduce) in state 389.
** Tokens involved: Upper RightBrace Number Lower
** The following explanations concentrate on token Upper.
** This state is reached from main after reading:

moduleIdentifier DEFINITIONS tagDefault extensionDefault Assignment BEGIN exports imports Upper SET LeftParen LeftBrace nameAndNumberForm

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

main 
moduleDefinition EOF 
moduleIdentifier DEFINITIONS tagDefault extensionDefault Assignment BEGIN moduleBody END 
                                                                          exports imports assignmentList 
                                                                                          assignment 
                                                                                          valueSetTypeAssignment 
                                                                                          Upper type_x Assignment valueSet 
                                                                                                constrainedType 
                                                                                                typeWithConstraint 
                                                                                                SET constraint_x OF type_x 
                                                                                                    LeftParen constraintSpec exceptionSpec RightParen 
                                                                                                              subtypeConstraint 
                                                                                                              elementSetSpecs 
                                                                                                              rootElementSetSpec 
                                                                                                              elementSetSpec 
                                                                                                              unions 
                                                                                                              intersections 
                                                                                                              intersectionElements 
                                                                                                              elements 
                                                                                                              subtypeElements 
                                                                                                              singleValue 
                                                                                                              value 
                                                                                                              builtinValue 
                                                                                                              (?)

** In state 389, looking ahead at Upper, reducing production
** objIdComponents -> nameAndNumberForm
** is permitted because of the following sub-derivation:

objectIdentifierValue 
LeftBrace objIdComponentsList RightBrace 
          objIdComponents objIdComponentsList // lookahead token appears because objIdComponentsList can begin with Upper
          nameAndNumberForm . 

** In state 389, looking ahead at Upper, reducing production
** relativeOIDComponents -> nameAndNumberForm
** is permitted because of the following sub-derivation:

relativeOIDValue 
LeftBrace relativeOIDComponentsList RightBrace 
          relativeOIDComponents relativeOIDComponentsList // lookahead token appears because relativeOIDComponentsList can begin with Upper
          nameAndNumberForm . 

** Conflict (reduce/reduce) in state 388.
** Tokens involved: RightBrace Comma
** The following explanations concentrate on token RightBrace.
** This state is reached from main after reading:

moduleIdentifier DEFINITIONS tagDefault extensionDefault Assignment BEGIN exports imports Upper SET LeftParen LeftBrace namedValue

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

main 
moduleDefinition EOF 
moduleIdentifier DEFINITIONS tagDefault extensionDefault Assignment BEGIN moduleBody END 
                                                                          exports imports assignmentList 
                                                                                          assignment 
                                                                                          valueSetTypeAssignment 
                                                                                          Upper type_x Assignment valueSet 
                                                                                                constrainedType 
                                                                                                typeWithConstraint 
                                                                                                SET constraint_x OF type_x 
                                                                                                    LeftParen constraintSpec exceptionSpec RightParen 
                                                                                                              subtypeConstraint 
                                                                                                              elementSetSpecs 
                                                                                                              rootElementSetSpec 
                                                                                                              elementSetSpec 
                                                                                                              unions 
                                                                                                              intersections 
                                                                                                              intersectionElements 
                                                                                                              elements 
                                                                                                              subtypeElements 
                                                                                                              singleValue 
                                                                                                              value 
                                                                                                              builtinValue 
                                                                                                              (?)

** In state 388, looking ahead at RightBrace, reducing production
** componentValueList -> namedValue
** is permitted because of the following sub-derivation:

sequenceValue 
LeftBrace componentValueList RightBrace // lookahead token appears
          namedValue . 

** In state 388, looking ahead at RightBrace, reducing production
** namedValueList -> namedValue
** is permitted because of the following sub-derivation:

sequenceOfValue 
LeftBrace namedValueList RightBrace // lookahead token appears
          namedValue . 

** Conflict (reduce/reduce) in state 384.
** Tokens involved: Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang
** The following explanations concentrate on token UNION.
** This state is reached from main after reading:

moduleIdentifier DEFINITIONS tagDefault extensionDefault Assignment BEGIN exports imports Upper SET LeftParen LeftBrace namedValueList RightBrace

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

main 
moduleDefinition EOF 
moduleIdentifier DEFINITIONS tagDefault extensionDefault Assignment BEGIN moduleBody END 
                                                                          exports imports assignmentList 
                                                                                          assignment 
                                                                                          valueSetTypeAssignment 
                                                                                          Upper type_x Assignment valueSet 
                                                                                                constrainedType 
                                                                                                typeWithConstraint 
                                                                                                SET constraint_x OF type_x 
                                                                                                    LeftParen constraintSpec exceptionSpec RightParen 
                                                                                                              subtypeConstraint 
                                                                                                              elementSetSpecs 
                                                                                                              rootElementSetSpec 
                                                                                                              elementSetSpec 
                                                                                                              unions 
                                                                                                              uElems unionMark intersections // lookahead token appears because unionMark can begin with UNION
                                                                                                              unions // lookahead token is inherited
                                                                                                              intersections // lookahead token is inherited
                                                                                                              intersectionElements // lookahead token is inherited
                                                                                                              elements // lookahead token is inherited
                                                                                                              subtypeElements // lookahead token is inherited
                                                                                                              singleValue // lookahead token is inherited
                                                                                                              value // lookahead token is inherited
                                                                                                              builtinValue // lookahead token is inherited
                                                                                                              (?)

** In state 384, looking ahead at UNION, reducing production
** sequenceOfValue -> LeftBrace namedValueList RightBrace
** is permitted because of the following sub-derivation:

sequenceOfValue // lookahead token is inherited
LeftBrace namedValueList RightBrace . 

** In state 384, looking ahead at UNION, reducing production
** setOfValue -> LeftBrace namedValueList RightBrace
** is permitted because of the following sub-derivation:

setOfValue // lookahead token is inherited
LeftBrace namedValueList RightBrace . 

** Conflict (reduce/reduce) in state 382.
** Tokens involved: Upper RightBrace Number Lower
** The following explanations concentrate on token Upper.
** This state is reached from main after reading:

moduleIdentifier DEFINITIONS tagDefault extensionDefault Assignment BEGIN exports imports Upper SET LeftParen LeftBrace numberForm

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

main 
moduleDefinition EOF 
moduleIdentifier DEFINITIONS tagDefault extensionDefault Assignment BEGIN moduleBody END 
                                                                          exports imports assignmentList 
                                                                                          assignment 
                                                                                          valueSetTypeAssignment 
                                                                                          Upper type_x Assignment valueSet 
                                                                                                constrainedType 
                                                                                                typeWithConstraint 
                                                                                                SET constraint_x OF type_x 
                                                                                                    LeftParen constraintSpec exceptionSpec RightParen 
                                                                                                              subtypeConstraint 
                                                                                                              elementSetSpecs 
                                                                                                              rootElementSetSpec 
                                                                                                              elementSetSpec 
                                                                                                              unions 
                                                                                                              intersections 
                                                                                                              intersectionElements 
                                                                                                              elements 
                                                                                                              subtypeElements 
                                                                                                              singleValue 
                                                                                                              value 
                                                                                                              builtinValue 
                                                                                                              (?)

** In state 382, looking ahead at Upper, reducing production
** objIdComponents -> numberForm
** is permitted because of the following sub-derivation:

objectIdentifierValue 
LeftBrace objIdComponentsList RightBrace 
          objIdComponents objIdComponentsList // lookahead token appears because objIdComponentsList can begin with Upper
          numberForm . 

** In state 382, looking ahead at Upper, reducing production
** relativeOIDComponents -> numberForm
** is permitted because of the following sub-derivation:

relativeOIDValue 
LeftBrace relativeOIDComponentsList RightBrace 
          relativeOIDComponents relativeOIDComponentsList // lookahead token appears because relativeOIDComponentsList can begin with Upper
          numberForm . 

** Conflict (reduce/reduce) in state 381.
** Tokens involved: Upper RightBrace Number Lower
** The following explanations concentrate on token Upper.
** This state is reached from main after reading:

moduleIdentifier DEFINITIONS tagDefault extensionDefault Assignment BEGIN exports IMPORTS symbolList FROM Upper LeftBrace objIdComponents definedValue

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

main 
moduleDefinition EOF 
moduleIdentifier DEFINITIONS tagDefault extensionDefault Assignment BEGIN moduleBody END 
                                                                          exports imports assignmentList 
                                                                                  IMPORTS symbolsImported SemiColon 
                                                                                          symbolsFromModuleList 
                                                                                          symbolsFromModule 
                                                                                          symbolList FROM globalModuleReference 
                                                                                                          Upper assignedIdentifier 
                                                                                                                objectIdentifierValue 
                                                                                                                LeftBrace objIdComponentsList RightBrace 
                                                                                                                          objIdComponents objIdComponentsList 
                                                                                                                                          objIdComponents objIdComponentsList // lookahead token appears because objIdComponentsList can begin with Upper
                                                                                                                                          (?)

** In state 381, looking ahead at Upper, reducing production
** numberForm -> definedValue
** is permitted because of the following sub-derivation:

numberForm // lookahead token is inherited
definedValue . 

** In state 381, looking ahead at Upper, reducing production
** objIdComponents -> definedValue
** is permitted because of the following sub-derivation:

definedValue . 

** Conflict (reduce/reduce) in state 373.
** Tokens involved: RightBrace Comma
** The following explanations concentrate on token RightBrace.
** This state is reached from main after reading:

moduleIdentifier DEFINITIONS tagDefault extensionDefault Assignment BEGIN exports imports Upper SET LeftParen LeftBrace quadruple

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

main 
moduleDefinition EOF 
moduleIdentifier DEFINITIONS tagDefault extensionDefault Assignment BEGIN moduleBody END 
                                                                          exports imports assignmentList 
                                                                                          assignment 
                                                                                          valueSetTypeAssignment 
                                                                                          Upper type_x Assignment valueSet 
                                                                                                constrainedType 
                                                                                                typeWithConstraint 
                                                                                                SET constraint_x OF type_x 
                                                                                                    LeftParen constraintSpec exceptionSpec RightParen 
                                                                                                              (?)

** In state 373, looking ahead at RightBrace, reducing production
** charsDefn -> quadruple
** is permitted because of the following sub-derivation:

subtypeConstraint 
elementSetSpecs 
rootElementSetSpec 
elementSetSpec 
unions 
intersections 
intersectionElements 
elements 
subtypeElements 
singleValue 
value 
builtinValue 
characterStringValue 
restrictedCharacterStringValue 
characterStringList 
LeftBrace charSyms RightBrace // lookahead token appears
          charsDefn // lookahead token is inherited
          quadruple . 

** In state 373, looking ahead at RightBrace, reducing production
** restrictedCharacterStringValue -> quadruple
** is permitted because of the following sub-derivation:

generalConstraint 
tableConstraint 
simpleTableConstraint 
objectSet 
LeftBrace objectSetSpec RightBrace // lookahead token appears
          rootElementSetSpec // lookahead token is inherited
          elementSetSpec // lookahead token is inherited
          unions // lookahead token is inherited
          intersections // lookahead token is inherited
          intersectionElements // lookahead token is inherited
          elements // lookahead token is inherited
          subtypeElements // lookahead token is inherited
          singleValue // lookahead token is inherited
          value // lookahead token is inherited
          builtinValue // lookahead token is inherited
          characterStringValue // lookahead token is inherited
          restrictedCharacterStringValue // lookahead token is inherited
          quadruple . 

** Conflict (reduce/reduce) in state 372.
** Tokens involved: Upper RightBrace Number Lower
** The following explanations concentrate on token Upper.
** This state is reached from main after reading:

moduleIdentifier DEFINITIONS tagDefault extensionDefault Assignment BEGIN exports imports Upper SET LeftParen LeftBrace relativeOIDComponents definedValue

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

main 
moduleDefinition EOF 
moduleIdentifier DEFINITIONS tagDefault extensionDefault Assignment BEGIN moduleBody END 
                                                                          exports imports assignmentList 
                                                                                          assignment 
                                                                                          valueSetTypeAssignment 
                                                                                          Upper type_x Assignment valueSet 
                                                                                                constrainedType 
                                                                                                typeWithConstraint 
                                                                                                SET constraint_x OF type_x 
                                                                                                    LeftParen constraintSpec exceptionSpec RightParen 
                                                                                                              subtypeConstraint 
                                                                                                              elementSetSpecs 
                                                                                                              rootElementSetSpec 
                                                                                                              elementSetSpec 
                                                                                                              unions 
                                                                                                              intersections 
                                                                                                              intersectionElements 
                                                                                                              elements 
                                                                                                              subtypeElements 
                                                                                                              singleValue 
                                                                                                              value 
                                                                                                              builtinValue 
                                                                                                              relativeOIDValue 
                                                                                                              LeftBrace relativeOIDComponentsList RightBrace 
                                                                                                                        relativeOIDComponents relativeOIDComponentsList 
                                                                                                                                              relativeOIDComponents relativeOIDComponentsList // lookahead token appears because relativeOIDComponentsList can begin with Upper
                                                                                                                                              (?)

** In state 372, looking ahead at Upper, reducing production
** numberForm -> definedValue
** is permitted because of the following sub-derivation:

numberForm // lookahead token is inherited
definedValue . 

** In state 372, looking ahead at Upper, reducing production
** relativeOIDComponents -> definedValue
** is permitted because of the following sub-derivation:

definedValue . 

** Conflict (reduce/reduce) in state 359.
** Tokens involved: RightBrace Comma
** The following explanations concentrate on token RightBrace.
** This state is reached from main after reading:

moduleIdentifier DEFINITIONS tagDefault extensionDefault Assignment BEGIN exports imports Upper SET LeftParen LeftBrace tuple

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

main 
moduleDefinition EOF 
moduleIdentifier DEFINITIONS tagDefault extensionDefault Assignment BEGIN moduleBody END 
                                                                          exports imports assignmentList 
                                                                                          assignment 
                                                                                          valueSetTypeAssignment 
                                                                                          Upper type_x Assignment valueSet 
                                                                                                constrainedType 
                                                                                                typeWithConstraint 
                                                                                                SET constraint_x OF type_x 
                                                                                                    LeftParen constraintSpec exceptionSpec RightParen 
                                                                                                              (?)

** In state 359, looking ahead at RightBrace, reducing production
** charsDefn -> tuple
** is permitted because of the following sub-derivation:

subtypeConstraint 
elementSetSpecs 
rootElementSetSpec 
elementSetSpec 
unions 
intersections 
intersectionElements 
elements 
subtypeElements 
singleValue 
value 
builtinValue 
characterStringValue 
restrictedCharacterStringValue 
characterStringList 
LeftBrace charSyms RightBrace // lookahead token appears
          charsDefn // lookahead token is inherited
          tuple . 

** In state 359, looking ahead at RightBrace, reducing production
** restrictedCharacterStringValue -> tuple
** is permitted because of the following sub-derivation:

generalConstraint 
tableConstraint 
simpleTableConstraint 
objectSet 
LeftBrace objectSetSpec RightBrace // lookahead token appears
          rootElementSetSpec // lookahead token is inherited
          elementSetSpec // lookahead token is inherited
          unions // lookahead token is inherited
          intersections // lookahead token is inherited
          intersectionElements // lookahead token is inherited
          elements // lookahead token is inherited
          subtypeElements // lookahead token is inherited
          singleValue // lookahead token is inherited
          value // lookahead token is inherited
          builtinValue // lookahead token is inherited
          characterStringValue // lookahead token is inherited
          restrictedCharacterStringValue // lookahead token is inherited
          tuple . 

** Conflict (reduce/reduce) in state 355.
** Tokens involved: Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang
** The following explanations concentrate on token UNION.
** This state is reached from main after reading:

moduleIdentifier DEFINITIONS tagDefault extensionDefault Assignment BEGIN exports imports Upper SET LeftParen LeftBrace valueList RightBrace

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

main 
moduleDefinition EOF 
moduleIdentifier DEFINITIONS tagDefault extensionDefault Assignment BEGIN moduleBody END 
                                                                          exports imports assignmentList 
                                                                                          assignment 
                                                                                          valueSetTypeAssignment 
                                                                                          Upper type_x Assignment valueSet 
                                                                                                constrainedType 
                                                                                                typeWithConstraint 
                                                                                                SET constraint_x OF type_x 
                                                                                                    LeftParen constraintSpec exceptionSpec RightParen 
                                                                                                              subtypeConstraint 
                                                                                                              elementSetSpecs 
                                                                                                              rootElementSetSpec 
                                                                                                              elementSetSpec 
                                                                                                              unions 
                                                                                                              uElems unionMark intersections // lookahead token appears because unionMark can begin with UNION
                                                                                                              unions // lookahead token is inherited
                                                                                                              intersections // lookahead token is inherited
                                                                                                              intersectionElements // lookahead token is inherited
                                                                                                              elements // lookahead token is inherited
                                                                                                              subtypeElements // lookahead token is inherited
                                                                                                              singleValue // lookahead token is inherited
                                                                                                              value // lookahead token is inherited
                                                                                                              builtinValue // lookahead token is inherited
                                                                                                              (?)

** In state 355, looking ahead at UNION, reducing production
** sequenceOfValue -> LeftBrace valueList RightBrace
** is permitted because of the following sub-derivation:

sequenceOfValue // lookahead token is inherited
LeftBrace valueList RightBrace . 

** In state 355, looking ahead at UNION, reducing production
** setOfValue -> LeftBrace valueList RightBrace
** is permitted because of the following sub-derivation:

setOfValue // lookahead token is inherited
LeftBrace valueList RightBrace . 

** Conflict (reduce/reduce) in state 353.
** Tokens involved: RightBrace Comma
** The following explanations concentrate on token RightBrace.
** This state is reached from main after reading:

moduleIdentifier DEFINITIONS tagDefault extensionDefault Assignment BEGIN exports imports Upper SET LeftParen LeftBrace Cstring

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

main 
moduleDefinition EOF 
moduleIdentifier DEFINITIONS tagDefault extensionDefault Assignment BEGIN moduleBody END 
                                                                          exports imports assignmentList 
                                                                                          assignment 
                                                                                          valueSetTypeAssignment 
                                                                                          Upper type_x Assignment valueSet 
                                                                                                constrainedType 
                                                                                                typeWithConstraint 
                                                                                                SET constraint_x OF type_x 
                                                                                                    LeftParen constraintSpec exceptionSpec RightParen 
                                                                                                              (?)

** In state 353, looking ahead at RightBrace, reducing production
** charsDefn -> Cstring
** is permitted because of the following sub-derivation:

subtypeConstraint 
elementSetSpecs 
rootElementSetSpec 
elementSetSpec 
unions 
intersections 
intersectionElements 
elements 
subtypeElements 
singleValue 
value 
builtinValue 
characterStringValue 
restrictedCharacterStringValue 
characterStringList 
LeftBrace charSyms RightBrace // lookahead token appears
          charsDefn // lookahead token is inherited
          Cstring . 

** In state 353, looking ahead at RightBrace, reducing production
** restrictedCharacterStringValue -> Cstring
** is permitted because of the following sub-derivation:

generalConstraint 
tableConstraint 
simpleTableConstraint 
objectSet 
LeftBrace objectSetSpec RightBrace // lookahead token appears
          rootElementSetSpec // lookahead token is inherited
          elementSetSpec // lookahead token is inherited
          unions // lookahead token is inherited
          intersections // lookahead token is inherited
          intersectionElements // lookahead token is inherited
          elements // lookahead token is inherited
          subtypeElements // lookahead token is inherited
          singleValue // lookahead token is inherited
          value // lookahead token is inherited
          builtinValue // lookahead token is inherited
          characterStringValue // lookahead token is inherited
          restrictedCharacterStringValue // lookahead token is inherited
          Cstring . 

** Conflict (reduce/reduce) in state 349.
** Tokens involved: Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang
** The following explanations concentrate on token UNION.
** This state is reached from main after reading:

moduleIdentifier DEFINITIONS tagDefault extensionDefault Assignment BEGIN exports imports Upper SET LeftParen builtinValue

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

main 
moduleDefinition EOF 
moduleIdentifier DEFINITIONS tagDefault extensionDefault Assignment BEGIN moduleBody END 
                                                                          exports imports assignmentList 
                                                                                          assignment 
                                                                                          valueSetTypeAssignment 
                                                                                          Upper type_x Assignment valueSet 
                                                                                                constrainedType 
                                                                                                typeWithConstraint 
                                                                                                SET constraint_x OF type_x 
                                                                                                    LeftParen constraintSpec exceptionSpec RightParen 
                                                                                                              subtypeConstraint 
                                                                                                              elementSetSpecs 
                                                                                                              rootElementSetSpec 
                                                                                                              elementSetSpec 
                                                                                                              unions 
                                                                                                              uElems unionMark intersections // lookahead token appears because unionMark can begin with UNION
                                                                                                              unions // lookahead token is inherited
                                                                                                              intersections // lookahead token is inherited
                                                                                                              intersectionElements // lookahead token is inherited
                                                                                                              elements // lookahead token is inherited
                                                                                                              subtypeElements // lookahead token is inherited
                                                                                                              singleValue // lookahead token is inherited
                                                                                                              value // lookahead token is inherited
                                                                                                              (?)

** In state 349, looking ahead at UNION, reducing production
** fixedTypeFieldVal -> builtinValue
** is permitted because of the following sub-derivation:

objectClassFieldValue // lookahead token is inherited
fixedTypeFieldVal // lookahead token is inherited
builtinValue . 

** In state 349, looking ahead at UNION, reducing production
** value -> builtinValue
** is permitted because of the following sub-derivation:

builtinValue . 

** Conflict (reduce/reduce) in state 331.
** Tokens involved: RightParen LeftParen ENCODED Colon Bang
** The following explanations concentrate on token LeftParen.
** This state is reached from main after reading:

moduleIdentifier DEFINITIONS tagDefault extensionDefault Assignment BEGIN exports imports Lower type_x Assignment referencedObjects Dot fieldName

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

main 
moduleDefinition EOF 
moduleIdentifier DEFINITIONS tagDefault extensionDefault Assignment BEGIN moduleBody END 
                                                                          exports imports assignmentList 
                                                                                          assignment 
                                                                                          valueAssignment 
                                                                                          Lower type_x Assignment value 
                                                                                                                  objectClassFieldValue 
                                                                                                                  openTypeFieldVal 
                                                                                                                  type_x Colon value 
                                                                                                                  constrainedType 
                                                                                                                  type_x constraint_x // lookahead token appears because constraint_x can begin with LeftParen
                                                                                                                  referencedType // lookahead token is inherited
                                                                                                                  (?)

** In state 331, looking ahead at LeftParen, reducing production
** typeFromObject -> referencedObjects Dot fieldName
** is permitted because of the following sub-derivation:

typeFromObject // lookahead token is inherited
referencedObjects Dot fieldName . 

** In state 331, looking ahead at LeftParen, reducing production
** valueSetFromObjects -> referencedObjects Dot fieldName
** is permitted because of the following sub-derivation:

valueSetFromObjects // lookahead token is inherited
referencedObjects Dot fieldName . 

** Conflict (reduce/reduce) in state 328.
** Tokens involved: Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang
** The following explanations concentrate on token UNION.
** This state is reached from main after reading:

moduleIdentifier DEFINITIONS tagDefault extensionDefault Assignment BEGIN exports imports Upper SET LeftParen referencedValue

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

main 
moduleDefinition EOF 
moduleIdentifier DEFINITIONS tagDefault extensionDefault Assignment BEGIN moduleBody END 
                                                                          exports imports assignmentList 
                                                                                          assignment 
                                                                                          valueSetTypeAssignment 
                                                                                          Upper type_x Assignment valueSet 
                                                                                                constrainedType 
                                                                                                typeWithConstraint 
                                                                                                SET constraint_x OF type_x 
                                                                                                    LeftParen constraintSpec exceptionSpec RightParen 
                                                                                                              subtypeConstraint 
                                                                                                              elementSetSpecs 
                                                                                                              rootElementSetSpec 
                                                                                                              elementSetSpec 
                                                                                                              unions 
                                                                                                              uElems unionMark intersections // lookahead token appears because unionMark can begin with UNION
                                                                                                              unions // lookahead token is inherited
                                                                                                              intersections // lookahead token is inherited
                                                                                                              intersectionElements // lookahead token is inherited
                                                                                                              elements // lookahead token is inherited
                                                                                                              subtypeElements // lookahead token is inherited
                                                                                                              singleValue // lookahead token is inherited
                                                                                                              value // lookahead token is inherited
                                                                                                              (?)

** In state 328, looking ahead at UNION, reducing production
** fixedTypeFieldVal -> referencedValue
** is permitted because of the following sub-derivation:

objectClassFieldValue // lookahead token is inherited
fixedTypeFieldVal // lookahead token is inherited
referencedValue . 

** In state 328, looking ahead at UNION, reducing production
** value -> referencedValue
** is permitted because of the following sub-derivation:

referencedValue . 

** Conflict (reduce/reduce) in state 324.
** Tokens involved: Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang
** The following explanations concentrate on token UNION.
** This state is reached from main after reading:

moduleIdentifier DEFINITIONS tagDefault extensionDefault Assignment BEGIN exports imports Upper SET LeftParen sequenceValue

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

main 
moduleDefinition EOF 
moduleIdentifier DEFINITIONS tagDefault extensionDefault Assignment BEGIN moduleBody END 
                                                                          exports imports assignmentList 
                                                                                          assignment 
                                                                                          valueSetTypeAssignment 
                                                                                          Upper type_x Assignment valueSet 
                                                                                                constrainedType 
                                                                                                typeWithConstraint 
                                                                                                SET constraint_x OF type_x 
                                                                                                    LeftParen constraintSpec exceptionSpec RightParen 
                                                                                                              subtypeConstraint 
                                                                                                              elementSetSpecs 
                                                                                                              rootElementSetSpec 
                                                                                                              elementSetSpec 
                                                                                                              unions 
                                                                                                              uElems unionMark intersections // lookahead token appears because unionMark can begin with UNION
                                                                                                              unions // lookahead token is inherited
                                                                                                              intersections // lookahead token is inherited
                                                                                                              intersectionElements // lookahead token is inherited
                                                                                                              elements // lookahead token is inherited
                                                                                                              subtypeElements // lookahead token is inherited
                                                                                                              singleValue // lookahead token is inherited
                                                                                                              value // lookahead token is inherited
                                                                                                              builtinValue // lookahead token is inherited
                                                                                                              (?)

** In state 324, looking ahead at UNION, reducing production
** builtinValue -> sequenceValue
** is permitted because of the following sub-derivation:

sequenceValue . 

** In state 324, looking ahead at UNION, reducing production
** embeddedPDVValue -> sequenceValue
** is permitted because of the following sub-derivation:

embeddedPDVValue // lookahead token is inherited
sequenceValue . 

** In state 324, looking ahead at UNION, reducing production
** externalValue -> sequenceValue
** is permitted because of the following sub-derivation:

externalValue // lookahead token is inherited
sequenceValue . 

** In state 324, looking ahead at UNION, reducing production
** numericRealValue -> sequenceValue
** is permitted because of the following sub-derivation:

realValue // lookahead token is inherited
numericRealValue // lookahead token is inherited
sequenceValue . 

** In state 324, looking ahead at UNION, reducing production
** unrestrictedCharacterStringValue -> sequenceValue
** is permitted because of the following sub-derivation:

characterStringValue // lookahead token is inherited
unrestrictedCharacterStringValue // lookahead token is inherited
sequenceValue . 

** Conflict (reduce/reduce) in state 314.
** Tokens involved: Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang
** The following explanations concentrate on token UNION.
** This state is reached from main after reading:

moduleIdentifier DEFINITIONS tagDefault extensionDefault Assignment BEGIN exports imports Upper SET LeftParen CONTAINING value

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

main 
moduleDefinition EOF 
moduleIdentifier DEFINITIONS tagDefault extensionDefault Assignment BEGIN moduleBody END 
                                                                          exports imports assignmentList 
                                                                                          assignment 
                                                                                          valueSetTypeAssignment 
                                                                                          Upper type_x Assignment valueSet 
                                                                                                constrainedType 
                                                                                                typeWithConstraint 
                                                                                                SET constraint_x OF type_x 
                                                                                                    LeftParen constraintSpec exceptionSpec RightParen 
                                                                                                              subtypeConstraint 
                                                                                                              elementSetSpecs 
                                                                                                              rootElementSetSpec 
                                                                                                              elementSetSpec 
                                                                                                              unions 
                                                                                                              uElems unionMark intersections // lookahead token appears because unionMark can begin with UNION
                                                                                                              unions // lookahead token is inherited
                                                                                                              intersections // lookahead token is inherited
                                                                                                              intersectionElements // lookahead token is inherited
                                                                                                              elements // lookahead token is inherited
                                                                                                              subtypeElements // lookahead token is inherited
                                                                                                              singleValue // lookahead token is inherited
                                                                                                              value // lookahead token is inherited
                                                                                                              builtinValue // lookahead token is inherited
                                                                                                              (?)

** In state 314, looking ahead at UNION, reducing production
** bitStringValue -> CONTAINING value
** is permitted because of the following sub-derivation:

bitStringValue // lookahead token is inherited
CONTAINING value . 

** In state 314, looking ahead at UNION, reducing production
** octetStringValue -> CONTAINING value
** is permitted because of the following sub-derivation:

octetStringValue // lookahead token is inherited
CONTAINING value . 

** Conflict (reduce/reduce) in state 312.
** Tokens involved: Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang
** The following explanations concentrate on token UNION.
** This state is reached from main after reading:

moduleIdentifier DEFINITIONS tagDefault extensionDefault Assignment BEGIN exports imports Upper SET LeftParen Bstring

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

main 
moduleDefinition EOF 
moduleIdentifier DEFINITIONS tagDefault extensionDefault Assignment BEGIN moduleBody END 
                                                                          exports imports assignmentList 
                                                                                          assignment 
                                                                                          valueSetTypeAssignment 
                                                                                          Upper type_x Assignment valueSet 
                                                                                                constrainedType 
                                                                                                typeWithConstraint 
                                                                                                SET constraint_x OF type_x 
                                                                                                    LeftParen constraintSpec exceptionSpec RightParen 
                                                                                                              subtypeConstraint 
                                                                                                              elementSetSpecs 
                                                                                                              rootElementSetSpec 
                                                                                                              elementSetSpec 
                                                                                                              unions 
                                                                                                              uElems unionMark intersections // lookahead token appears because unionMark can begin with UNION
                                                                                                              unions // lookahead token is inherited
                                                                                                              intersections // lookahead token is inherited
                                                                                                              intersectionElements // lookahead token is inherited
                                                                                                              elements // lookahead token is inherited
                                                                                                              subtypeElements // lookahead token is inherited
                                                                                                              singleValue // lookahead token is inherited
                                                                                                              value // lookahead token is inherited
                                                                                                              builtinValue // lookahead token is inherited
                                                                                                              (?)

** In state 312, looking ahead at UNION, reducing production
** bitStringValue -> Bstring
** is permitted because of the following sub-derivation:

bitStringValue // lookahead token is inherited
Bstring . 

** In state 312, looking ahead at UNION, reducing production
** octetStringValue -> Bstring
** is permitted because of the following sub-derivation:

octetStringValue // lookahead token is inherited
Bstring . 

** Conflict (reduce/reduce) in state 308.
** Tokens involved: Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang
** The following explanations concentrate on token UNION.
** This state is reached from main after reading:

moduleIdentifier DEFINITIONS tagDefault extensionDefault Assignment BEGIN exports imports Upper SET LeftParen Hstring

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

main 
moduleDefinition EOF 
moduleIdentifier DEFINITIONS tagDefault extensionDefault Assignment BEGIN moduleBody END 
                                                                          exports imports assignmentList 
                                                                                          assignment 
                                                                                          valueSetTypeAssignment 
                                                                                          Upper type_x Assignment valueSet 
                                                                                                constrainedType 
                                                                                                typeWithConstraint 
                                                                                                SET constraint_x OF type_x 
                                                                                                    LeftParen constraintSpec exceptionSpec RightParen 
                                                                                                              subtypeConstraint 
                                                                                                              elementSetSpecs 
                                                                                                              rootElementSetSpec 
                                                                                                              elementSetSpec 
                                                                                                              unions 
                                                                                                              uElems unionMark intersections // lookahead token appears because unionMark can begin with UNION
                                                                                                              unions // lookahead token is inherited
                                                                                                              intersections // lookahead token is inherited
                                                                                                              intersectionElements // lookahead token is inherited
                                                                                                              elements // lookahead token is inherited
                                                                                                              subtypeElements // lookahead token is inherited
                                                                                                              singleValue // lookahead token is inherited
                                                                                                              value // lookahead token is inherited
                                                                                                              builtinValue // lookahead token is inherited
                                                                                                              (?)

** In state 308, looking ahead at UNION, reducing production
** bitStringValue -> Hstring
** is permitted because of the following sub-derivation:

bitStringValue // lookahead token is inherited
Hstring . 

** In state 308, looking ahead at UNION, reducing production
** octetStringValue -> Hstring
** is permitted because of the following sub-derivation:

octetStringValue // lookahead token is inherited
Hstring . 

** Conflict (shift/reduce/reduce) in state 305.
** Tokens involved: Upper UNION RightBrace Number Middle Lower LessThan LeftBrace INTERSECTION EXCEPT DoubleDot Comma Circumflex
** The following explanations concentrate on token LeftBrace.
** This state is reached from main after reading:

moduleIdentifier DEFINITIONS tagDefault extensionDefault Assignment BEGIN exports imports Upper SET LeftParen LeftBrace Lower

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

main 
moduleDefinition EOF 
moduleIdentifier DEFINITIONS tagDefault extensionDefault Assignment BEGIN moduleBody END 
                                                                          exports imports assignmentList 
                                                                                          assignment 
                                                                                          valueSetTypeAssignment 
                                                                                          Upper type_x Assignment valueSet 
                                                                                                constrainedType 
                                                                                                typeWithConstraint 
                                                                                                SET constraint_x OF type_x 
                                                                                                    LeftParen constraintSpec exceptionSpec RightParen 
                                                                                                              (?)

** In state 305, looking ahead at LeftBrace, shifting is permitted
** because of the following sub-derivation:

subtypeConstraint 
elementSetSpecs 
rootElementSetSpec 
elementSetSpec 
unions 
intersections 
intersectionElements 
elements 
subtypeElements 
singleValue 
value 
builtinValue 
sequenceValue 
LeftBrace componentValueList RightBrace 
          namedValue 
          Lower value 
                builtinValue 
                bitStringValue 
                . LeftBrace identifierList RightBrace 

** In state 305, looking ahead at LeftBrace, reducing production
** definedObject -> Lower
** is permitted because of the following sub-derivation:

generalConstraint 
tableConstraint 
simpleTableConstraint 
objectSet 
LeftBrace objectSetSpec RightBrace 
          rootElementSetSpec 
          elementSetSpec 
          unions 
          intersections 
          intersectionElements 
          elements 
          objectSetElements 
          object_x 
          parameterizedObject 
          definedObject actualParameterList // lookahead token appears because actualParameterList can begin with LeftBrace
          Lower . 

** In state 305, looking ahead at LeftBrace, reducing production
** simpleDefinedValue -> Lower
** is permitted because of the following sub-derivation:

subtypeConstraint 
elementSetSpecs 
rootElementSetSpec 
elementSetSpec 
unions 
intersections 
intersectionElements 
elements 
subtypeElements 
singleValue 
value 
builtinValue 
objectIdentifierValue 
LeftBrace definedValue objIdComponentsList RightBrace 
          parameterizedValue 
          simpleDefinedValue actualParameterList // lookahead token appears because actualParameterList can begin with LeftBrace
          Lower . 

** Conflict (reduce/reduce) in state 304.
** Tokens involved: RightBrace Comma
** The following explanations concentrate on token Comma.
** This state is reached from main after reading:

moduleIdentifier DEFINITIONS tagDefault extensionDefault Assignment BEGIN exports imports Upper SET LeftParen LeftBrace Number

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

main 
moduleDefinition EOF 
moduleIdentifier DEFINITIONS tagDefault extensionDefault Assignment BEGIN moduleBody END 
                                                                          exports imports assignmentList 
                                                                                          assignment 
                                                                                          valueSetTypeAssignment 
                                                                                          Upper type_x Assignment valueSet 
                                                                                                constrainedType 
                                                                                                typeWithConstraint 
                                                                                                SET constraint_x OF type_x 
                                                                                                    LeftParen constraintSpec exceptionSpec RightParen 
                                                                                                              (?)

** In state 304, looking ahead at Comma, reducing production
** group -> Number
** is permitted because of the following sub-derivation:

subtypeConstraint 
elementSetSpecs 
rootElementSetSpec 
elementSetSpec 
unions 
intersections 
intersectionElements 
elements 
subtypeElements 
singleValue 
value 
builtinValue 
characterStringValue 
restrictedCharacterStringValue 
quadruple 
LeftBrace group Comma plane Comma row Comma cell RightBrace // lookahead token appears
          Number . 

** In state 304, looking ahead at Comma, reducing production
** signedNumber -> Number
** is permitted because of the following sub-derivation:

generalConstraint 
tableConstraint 
simpleTableConstraint 
objectSet 
LeftBrace objectSetSpec RightBrace 
          rootElementSetSpec Comma Ellipsis // lookahead token appears
          elementSetSpec // lookahead token is inherited
          unions // lookahead token is inherited
          intersections // lookahead token is inherited
          intersectionElements // lookahead token is inherited
          elements // lookahead token is inherited
          subtypeElements // lookahead token is inherited
          singleValue // lookahead token is inherited
          value // lookahead token is inherited
          builtinValue // lookahead token is inherited
          integerValue // lookahead token is inherited
          signedNumber // lookahead token is inherited
          Number . 

** In state 304, looking ahead at Comma, reducing production
** tableColumn -> Number
** is permitted because of the following sub-derivation:

subtypeConstraint 
elementSetSpecs 
rootElementSetSpec 
elementSetSpec 
unions 
intersections 
intersectionElements 
elements 
subtypeElements 
singleValue 
value 
builtinValue 
characterStringValue 
restrictedCharacterStringValue 
tuple 
LeftBrace tableColumn Comma tableRow RightBrace // lookahead token appears
          Number . 

** Conflict (reduce/reduce) in state 303.
** Tokens involved: Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang
** The following explanations concentrate on token UNION.
** This state is reached from main after reading:

moduleIdentifier DEFINITIONS tagDefault extensionDefault Assignment BEGIN exports imports Upper SET LeftParen LeftBrace RightBrace

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

main 
moduleDefinition EOF 
moduleIdentifier DEFINITIONS tagDefault extensionDefault Assignment BEGIN moduleBody END 
                                                                          exports imports assignmentList 
                                                                                          assignment 
                                                                                          valueSetTypeAssignment 
                                                                                          Upper type_x Assignment valueSet 
                                                                                                constrainedType 
                                                                                                typeWithConstraint 
                                                                                                SET constraint_x OF type_x 
                                                                                                    LeftParen constraintSpec exceptionSpec RightParen 
                                                                                                              subtypeConstraint 
                                                                                                              elementSetSpecs 
                                                                                                              rootElementSetSpec 
                                                                                                              elementSetSpec 
                                                                                                              unions 
                                                                                                              uElems unionMark intersections // lookahead token appears because unionMark can begin with UNION
                                                                                                              unions // lookahead token is inherited
                                                                                                              intersections // lookahead token is inherited
                                                                                                              intersectionElements // lookahead token is inherited
                                                                                                              elements // lookahead token is inherited
                                                                                                              subtypeElements // lookahead token is inherited
                                                                                                              singleValue // lookahead token is inherited
                                                                                                              value // lookahead token is inherited
                                                                                                              builtinValue // lookahead token is inherited
                                                                                                              (?)

** In state 303, looking ahead at UNION, reducing production
** bitStringValue -> LeftBrace RightBrace
** is permitted because of the following sub-derivation:

bitStringValue // lookahead token is inherited
LeftBrace RightBrace . 

** In state 303, looking ahead at UNION, reducing production
** sequenceOfValue -> LeftBrace RightBrace
** is permitted because of the following sub-derivation:

sequenceOfValue // lookahead token is inherited
LeftBrace RightBrace . 

** In state 303, looking ahead at UNION, reducing production
** sequenceValue -> LeftBrace RightBrace
** is permitted because of the following sub-derivation:

sequenceValue // lookahead token is inherited
LeftBrace RightBrace . 

** In state 303, looking ahead at UNION, reducing production
** setOfValue -> LeftBrace RightBrace
** is permitted because of the following sub-derivation:

setOfValue // lookahead token is inherited
LeftBrace RightBrace . 

** In state 303, looking ahead at UNION, reducing production
** setValue -> LeftBrace RightBrace
** is permitted because of the following sub-derivation:

setValue // lookahead token is inherited
LeftBrace RightBrace . 

** Conflict (shift/reduce/reduce) in state 300.
** Tokens involved: Upper UNION RightParen RightDoubleBracket RightBrace Middle Lower LessThan LeftBrace INTERSECTION EXCEPT END DoubleDot Comma Circumflex Bang
** The following explanations concentrate on token LessThan.
** This state is reached from main after reading:

moduleIdentifier DEFINITIONS tagDefault extensionDefault Assignment BEGIN exports imports Upper SET LeftParen Lower

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

main 
moduleDefinition EOF 
moduleIdentifier DEFINITIONS tagDefault extensionDefault Assignment BEGIN moduleBody END 
                                                                          exports imports assignmentList 
                                                                                          assignment 
                                                                                          valueSetTypeAssignment 
                                                                                          Upper type_x Assignment valueSet 
                                                                                                constrainedType 
                                                                                                typeWithConstraint 
                                                                                                SET constraint_x OF type_x 
                                                                                                    LeftParen constraintSpec exceptionSpec RightParen 
                                                                                                              subtypeConstraint 
                                                                                                              elementSetSpecs 
                                                                                                              rootElementSetSpec 
                                                                                                              elementSetSpec 
                                                                                                              unions 
                                                                                                              intersections 
                                                                                                              intersectionElements 
                                                                                                              elements 
                                                                                                              subtypeElements 
                                                                                                              (?)

** In state 300, looking ahead at LessThan, reducing production
** definedValue -> Lower
** is permitted because of the following sub-derivation:

valueRange 
lowerEndPoint DoubleDot upperEndPoint 
lowerEndValue LessThan // lookahead token appears
value // lookahead token is inherited
referencedValue // lookahead token is inherited
definedValue // lookahead token is inherited
Lower . 

** In state 300, looking ahead at LessThan, reducing production
** enumeratedValue -> Lower
** is permitted because of the following sub-derivation:

valueRange 
lowerEndPoint DoubleDot upperEndPoint 
lowerEndValue LessThan // lookahead token appears
value // lookahead token is inherited
builtinValue // lookahead token is inherited
enumeratedValue // lookahead token is inherited
Lower . 

** In state 300, looking ahead at LessThan, reducing production
** integerValue -> Lower
** is permitted because of the following sub-derivation:

valueRange 
lowerEndPoint DoubleDot upperEndPoint 
lowerEndValue LessThan // lookahead token appears
value // lookahead token is inherited
builtinValue // lookahead token is inherited
integerValue // lookahead token is inherited
Lower . 

** In state 300, looking ahead at LessThan, shifting is permitted
** because of the following sub-derivation:

typeConstraint 
type_x 
referencedType 
selectionType 
Lower . LessThan type_x 

** Conflict (reduce/reduce) in state 298.
** Tokens involved: UNION RightParen RightBrace Middle INTERSECTION EXCEPT Comma Circumflex Bang
** The following explanations concentrate on token UNION.
** This state is reached from main after reading:

moduleIdentifier DEFINITIONS tagDefault extensionDefault Assignment BEGIN exports imports Upper SET LeftParen NULL

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

main 
moduleDefinition EOF 
moduleIdentifier DEFINITIONS tagDefault extensionDefault Assignment BEGIN moduleBody END 
                                                                          exports imports assignmentList 
                                                                                          assignment 
                                                                                          valueSetTypeAssignment 
                                                                                          Upper type_x Assignment valueSet 
                                                                                                constrainedType 
                                                                                                typeWithConstraint 
                                                                                                SET constraint_x OF type_x 
                                                                                                    LeftParen constraintSpec exceptionSpec RightParen 
                                                                                                              subtypeConstraint 
                                                                                                              elementSetSpecs 
                                                                                                              rootElementSetSpec 
                                                                                                              elementSetSpec 
                                                                                                              unions 
                                                                                                              uElems unionMark intersections // lookahead token appears because unionMark can begin with UNION
                                                                                                              unions // lookahead token is inherited
                                                                                                              intersections // lookahead token is inherited
                                                                                                              intersectionElements // lookahead token is inherited
                                                                                                              elements // lookahead token is inherited
                                                                                                              subtypeElements // lookahead token is inherited
                                                                                                              (?)

** In state 298, looking ahead at UNION, reducing production
** nullType -> NULL
** is permitted because of the following sub-derivation:

typeConstraint // lookahead token is inherited
type_x // lookahead token is inherited
builtinType // lookahead token is inherited
nullType // lookahead token is inherited
NULL . 

** In state 298, looking ahead at UNION, reducing production
** nullValue -> NULL
** is permitted because of the following sub-derivation:

singleValue // lookahead token is inherited
value // lookahead token is inherited
builtinValue // lookahead token is inherited
nullValue // lookahead token is inherited
NULL . 

** Conflict (shift/reduce) in state 293.
** Token involved: Comma
** This state is reached from main after reading:

moduleIdentifier DEFINITIONS tagDefault extensionDefault Assignment BEGIN exports imports Upper CHOICE LeftBrace alternativeTypeList

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

main 
moduleDefinition EOF 
moduleIdentifier DEFINITIONS tagDefault extensionDefault Assignment BEGIN moduleBody END 
                                                                          exports imports assignmentList 
                                                                                          assignment 
                                                                                          valueSetTypeAssignment 
                                                                                          Upper type_x Assignment valueSet 
                                                                                                builtinType 
                                                                                                choiceType 
                                                                                                CHOICE LeftBrace alternativeTypeLists RightBrace 
                                                                                                                 (?)

** In state 293, looking ahead at Comma, shifting is permitted
** because of the following sub-derivation:

rootAlternativeTypeList 
alternativeTypeList 
alternativeTypeList . Comma namedType 

** In state 293, looking ahead at Comma, reducing production
** rootAlternativeTypeList -> alternativeTypeList
** is permitted because of the following sub-derivation:

rootAlternativeTypeList Comma extensionAndException extensionAdditionAlternatives optionalExtensionMarker // lookahead token appears
alternativeTypeList . 

** Conflict (shift/reduce) in state 282.
** Token involved: Comma
** This state is reached from main after reading:

moduleIdentifier DEFINITIONS tagDefault extensionDefault Assignment BEGIN exports imports Upper CHOICE LeftBrace rootAlternativeTypeList Comma extensionAndException Comma extensionAdditionAlternativesList

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

main 
moduleDefinition EOF 
moduleIdentifier DEFINITIONS tagDefault extensionDefault Assignment BEGIN moduleBody END 
                                                                          exports imports assignmentList 
                                                                                          assignment 
                                                                                          valueSetTypeAssignment 
                                                                                          Upper type_x Assignment valueSet 
                                                                                                builtinType 
                                                                                                choiceType 
                                                                                                CHOICE LeftBrace alternativeTypeLists RightBrace 
                                                                                                                 (?)

** In state 282, looking ahead at Comma, reducing production
** extensionAdditionAlternatives -> Comma extensionAdditionAlternativesList
** is permitted because of the following sub-derivation:

rootAlternativeTypeList Comma extensionAndException extensionAdditionAlternatives optionalExtensionMarker // lookahead token appears because optionalExtensionMarker can begin with Comma
                                                    Comma extensionAdditionAlternativesList . 

** In state 282, looking ahead at Comma, shifting is permitted
** because of the following sub-derivation:

rootAlternativeTypeList Comma extensionAndException extensionAdditionAlternatives optionalExtensionMarker 
                                                    Comma extensionAdditionAlternativesList 
                                                          extensionAdditionAlternativesList . Comma extensionAdditionAlternative 

** Conflict (shift/reduce) in state 270.
** Token involved: Comma
** This state is reached from main after reading:

moduleIdentifier DEFINITIONS tagDefault extensionDefault Assignment BEGIN exports imports Upper CHOICE LeftBrace rootAlternativeTypeList Comma extensionAndException

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

main 
moduleDefinition EOF 
moduleIdentifier DEFINITIONS tagDefault extensionDefault Assignment BEGIN moduleBody END 
                                                                          exports imports assignmentList 
                                                                                          assignment 
                                                                                          valueSetTypeAssignment 
                                                                                          Upper type_x Assignment valueSet 
                                                                                                builtinType 
                                                                                                choiceType 
                                                                                                CHOICE LeftBrace alternativeTypeLists RightBrace 
                                                                                                                 (?)

** In state 270, looking ahead at Comma, shifting is permitted
** because of the following sub-derivation:

rootAlternativeTypeList Comma extensionAndException extensionAdditionAlternatives optionalExtensionMarker 
                                                    . Comma extensionAdditionAlternativesList 

** In state 270, looking ahead at Comma, reducing production
** extensionAdditionAlternatives -> 
** is permitted because of the following sub-derivation:

rootAlternativeTypeList Comma extensionAndException extensionAdditionAlternatives optionalExtensionMarker // lookahead token appears because optionalExtensionMarker can begin with Comma
                                                    . 

** Conflict (reduce/reduce) in state 268.
** Tokens involved: RightBrace Comma
** The following explanations concentrate on token RightBrace.
** This state is reached from main after reading:

moduleIdentifier DEFINITIONS tagDefault extensionDefault Assignment BEGIN exports imports Upper SET LeftBrace Ellipsis

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

main 
moduleDefinition EOF 
moduleIdentifier DEFINITIONS tagDefault extensionDefault Assignment BEGIN moduleBody END 
                                                                          exports imports assignmentList 
                                                                                          assignment 
                                                                                          valueSetTypeAssignment 
                                                                                          Upper type_x Assignment valueSet 
                                                                                                builtinType 
                                                                                                setType 
                                                                                                SET LeftBrace extensionAndException optionalExtensionMarker RightBrace // lookahead token appears because optionalExtensionMarker can vanish
                                                                                                              (?)

** In state 268, looking ahead at RightBrace, reducing production
** exceptionSpec -> 
** is permitted because of the following sub-derivation:

Ellipsis exceptionSpec // lookahead token is inherited
         . 

** In state 268, looking ahead at RightBrace, reducing production
** extensionAndException -> Ellipsis
** is permitted because of the following sub-derivation:

Ellipsis . 

** Conflict (shift/reduce) in state 265.
** Token involved: LeftParen
** This state is reached from main after reading:

moduleIdentifier DEFINITIONS tagDefault extensionDefault Assignment BEGIN exports imports Upper tag type_x

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

main 
moduleDefinition EOF 
moduleIdentifier DEFINITIONS tagDefault extensionDefault Assignment BEGIN moduleBody END 
                                                                          exports imports assignmentList 
                                                                                          assignment 
                                                                                          valueSetTypeAssignment 
                                                                                          Upper type_x Assignment valueSet 
                                                                                                (?)

** In state 265, looking ahead at LeftParen, shifting is permitted
** because of the following sub-derivation:

builtinType 
taggedType 
tag type_x 
    constrainedType 
    type_x constraint_x 
           . LeftParen constraintSpec exceptionSpec RightParen 

** In state 265, looking ahead at LeftParen, reducing production
** taggedType -> tag type_x
** is permitted because of the following sub-derivation:

constrainedType 
type_x constraint_x // lookahead token appears because constraint_x can begin with LeftParen
builtinType // lookahead token is inherited
taggedType // lookahead token is inherited
tag type_x . 

** Conflict (shift/reduce) in state 264.
** Token involved: LeftParen
** This state is reached from main after reading:

moduleIdentifier DEFINITIONS tagDefault extensionDefault Assignment BEGIN exports imports Upper tag EXPLICIT type_x

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

main 
moduleDefinition EOF 
moduleIdentifier DEFINITIONS tagDefault extensionDefault Assignment BEGIN moduleBody END 
                                                                          exports imports assignmentList 
                                                                                          assignment 
                                                                                          valueSetTypeAssignment 
                                                                                          Upper type_x Assignment valueSet 
                                                                                                (?)

** In state 264, looking ahead at LeftParen, shifting is permitted
** because of the following sub-derivation:

builtinType 
taggedType 
tag EXPLICIT type_x 
             constrainedType 
             type_x constraint_x 
                    . LeftParen constraintSpec exceptionSpec RightParen 

** In state 264, looking ahead at LeftParen, reducing production
** taggedType -> tag EXPLICIT type_x
** is permitted because of the following sub-derivation:

constrainedType 
type_x constraint_x // lookahead token appears because constraint_x can begin with LeftParen
builtinType // lookahead token is inherited
taggedType // lookahead token is inherited
tag EXPLICIT type_x . 

** Conflict (reduce/reduce) in state 231.
** Tokens involved: Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment
** The following explanations concentrate on token LeftParen.
** This state is reached from main after reading:

moduleIdentifier DEFINITIONS tagDefault extensionDefault Assignment BEGIN exports imports Upper referencedObjects Dot fieldName

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

main 
moduleDefinition EOF 
moduleIdentifier DEFINITIONS tagDefault extensionDefault Assignment BEGIN moduleBody END 
                                                                          exports imports assignmentList 
                                                                                          assignment 
                                                                                          valueSetTypeAssignment 
                                                                                          Upper type_x Assignment valueSet 
                                                                                                constrainedType 
                                                                                                type_x constraint_x // lookahead token appears because constraint_x can begin with LeftParen
                                                                                                referencedType // lookahead token is inherited
                                                                                                (?)

** In state 231, looking ahead at LeftParen, reducing production
** typeFromObject -> referencedObjects Dot fieldName
** is permitted because of the following sub-derivation:

typeFromObject // lookahead token is inherited
referencedObjects Dot fieldName . 

** In state 231, looking ahead at LeftParen, reducing production
** valueSetFromObjects -> referencedObjects Dot fieldName
** is permitted because of the following sub-derivation:

valueSetFromObjects // lookahead token is inherited
referencedObjects Dot fieldName . 

** Conflict (reduce/reduce) in state 214.
** Tokens involved: Upper UNIQUE UNION RightParen RightDoubleBracket RightBrace OPTIONAL Middle Lower LeftParen INTERSECTION EXCEPT END ENCODED DEFAULT Comma Colon Circumflex Bang Assignment
** The following explanations concentrate on token LeftParen.
** This state is reached from main after reading:

moduleIdentifier DEFINITIONS tagDefault extensionDefault Assignment BEGIN exports imports Upper simpleDefinedType actualParameterList

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

main 
moduleDefinition EOF 
moduleIdentifier DEFINITIONS tagDefault extensionDefault Assignment BEGIN moduleBody END 
                                                                          exports imports assignmentList 
                                                                                          assignment 
                                                                                          valueSetTypeAssignment 
                                                                                          Upper type_x Assignment valueSet 
                                                                                                constrainedType 
                                                                                                type_x constraint_x // lookahead token appears because constraint_x can begin with LeftParen
                                                                                                referencedType // lookahead token is inherited
                                                                                                definedType // lookahead token is inherited
                                                                                                (?)

** In state 214, looking ahead at LeftParen, reducing production
** parameterizedType -> simpleDefinedType actualParameterList
** is permitted because of the following sub-derivation:

parameterizedType // lookahead token is inherited
simpleDefinedType actualParameterList . 

** In state 214, looking ahead at LeftParen, reducing production
** parameterizedValueSetType -> simpleDefinedType actualParameterList
** is permitted because of the following sub-derivation:

parameterizedValueSetType // lookahead token is inherited
simpleDefinedType actualParameterList . 

** Conflict (shift/reduce) in state 212.
** Token involved: LeftParen
** This state is reached from main after reading:

moduleIdentifier DEFINITIONS tagDefault extensionDefault Assignment BEGIN exports imports Upper tag IMPLICIT type_x

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

main 
moduleDefinition EOF 
moduleIdentifier DEFINITIONS tagDefault extensionDefault Assignment BEGIN moduleBody END 
                                                                          exports imports assignmentList 
                                                                                          assignment 
                                                                                          valueSetTypeAssignment 
                                                                                          Upper type_x Assignment valueSet 
                                                                                                (?)

** In state 212, looking ahead at LeftParen, shifting is permitted
** because of the following sub-derivation:

builtinType 
taggedType 
tag IMPLICIT type_x 
             constrainedType 
             type_x constraint_x 
                    . LeftParen constraintSpec exceptionSpec RightParen 

** In state 212, looking ahead at LeftParen, reducing production
** taggedType -> tag IMPLICIT type_x
** is permitted because of the following sub-derivation:

constrainedType 
type_x constraint_x // lookahead token appears because constraint_x can begin with LeftParen
builtinType // lookahead token is inherited
taggedType // lookahead token is inherited
tag IMPLICIT type_x . 

** Conflict (shift/reduce) in state 205.
** Token involved: LeftParen
** This state is reached from main after reading:

moduleIdentifier DEFINITIONS tagDefault extensionDefault Assignment BEGIN exports imports Upper SET OF Lower type_x

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

main 
moduleDefinition EOF 
moduleIdentifier DEFINITIONS tagDefault extensionDefault Assignment BEGIN moduleBody END 
                                                                          exports imports assignmentList 
                                                                                          assignment 
                                                                                          valueSetTypeAssignment 
                                                                                          Upper type_x Assignment valueSet 
                                                                                                (?)

** In state 205, looking ahead at LeftParen, shifting is permitted
** because of the following sub-derivation:

builtinType 
setOfType 
SET OF namedType 
       Lower type_x 
             constrainedType 
             type_x constraint_x 
                    . LeftParen constraintSpec exceptionSpec RightParen 

** In state 205, looking ahead at LeftParen, reducing production
** namedType -> Lower type_x
** is permitted because of the following sub-derivation:

constrainedType 
type_x constraint_x // lookahead token appears because constraint_x can begin with LeftParen
builtinType // lookahead token is inherited
setOfType // lookahead token is inherited
SET OF namedType // lookahead token is inherited
       Lower type_x . 

** Conflict (reduce/reduce) in state 178.
** Token involved: LeftBrace
** This state is reached from main after reading:

moduleIdentifier DEFINITIONS tagDefault extensionDefault Assignment BEGIN exports imports Upper SET LeftParen constraintSpec Bang Lower

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

main 
moduleDefinition EOF 
moduleIdentifier DEFINITIONS tagDefault extensionDefault Assignment BEGIN moduleBody END 
                                                                          exports imports assignmentList 
                                                                                          assignment 
                                                                                          valueSetTypeAssignment 
                                                                                          Upper type_x Assignment valueSet 
                                                                                                constrainedType 
                                                                                                typeWithConstraint 
                                                                                                SET constraint_x OF type_x 
                                                                                                    LeftParen constraintSpec exceptionSpec RightParen 
                                                                                                                             Bang exceptionIdentification 
                                                                                                                                  (?)

** In state 178, looking ahead at LeftBrace, reducing production
** definedObject -> Lower
** is permitted because of the following sub-derivation:

type_x Colon value 
referencedType 
typeFromObject 
referencedObjects Dot fieldName 
parameterizedObject 
definedObject actualParameterList // lookahead token appears because actualParameterList can begin with LeftBrace
Lower . 

** In state 178, looking ahead at LeftBrace, reducing production
** simpleDefinedValue -> Lower
** is permitted because of the following sub-derivation:

definedValue 
parameterizedValue 
simpleDefinedValue actualParameterList // lookahead token appears because actualParameterList can begin with LeftBrace
Lower . 

** Conflict (reduce/reduce) in state 113.
** Tokens involved: Upper RightBrace OPTIONAL Lower LeftBrace END Dot DEFAULT Comma Colon Assignment
** The following explanations concentrate on token LeftBrace.
** This state is reached from main after reading:

moduleIdentifier DEFINITIONS tagDefault extensionDefault Assignment BEGIN exports imports Upper Upper

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

main 
moduleDefinition EOF 
moduleIdentifier DEFINITIONS tagDefault extensionDefault Assignment BEGIN moduleBody END 
                                                                          exports imports assignmentList 
                                                                                          assignment 
                                                                                          valueSetTypeAssignment 
                                                                                          Upper type_x Assignment valueSet 
                                                                                                referencedType 
                                                                                                (?)

** In state 113, looking ahead at LeftBrace, reducing production
** definedObjectSet -> Upper
** is permitted because of the following sub-derivation:

typeFromObject 
referencedObjects Dot fieldName 
parameterizedObjectSet 
definedObjectSet actualParameterList // lookahead token appears because actualParameterList can begin with LeftBrace
Upper . 

** In state 113, looking ahead at LeftBrace, reducing production
** simpleDefinedType -> Upper
** is permitted because of the following sub-derivation:

definedType 
parameterizedType 
simpleDefinedType actualParameterList // lookahead token appears because actualParameterList can begin with LeftBrace
Upper . 

** Conflict (reduce/reduce) in state 110.
** Tokens involved: UNION RightParen RightBrace Middle LeftBrace INTERSECTION EXCEPT Dot Comma Circumflex Bang
** The following explanations concentrate on token UNION.
** This state is reached from main after reading:

moduleIdentifier DEFINITIONS tagDefault extensionDefault Assignment BEGIN exports imports Upper SET LeftParen Upper Dot Upper

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

main 
moduleDefinition EOF 
moduleIdentifier DEFINITIONS tagDefault extensionDefault Assignment BEGIN moduleBody END 
                                                                          exports imports assignmentList 
                                                                                          assignment 
                                                                                          valueSetTypeAssignment 
                                                                                          Upper type_x Assignment valueSet 
                                                                                                constrainedType 
                                                                                                typeWithConstraint 
                                                                                                SET constraint_x OF type_x 
                                                                                                    LeftParen constraintSpec exceptionSpec RightParen 
                                                                                                              subtypeConstraint 
                                                                                                              elementSetSpecs 
                                                                                                              rootElementSetSpec 
                                                                                                              elementSetSpec 
                                                                                                              unions 
                                                                                                              uElems unionMark intersections // lookahead token appears because unionMark can begin with UNION
                                                                                                              unions // lookahead token is inherited
                                                                                                              intersections // lookahead token is inherited
                                                                                                              intersectionElements // lookahead token is inherited
                                                                                                              elements // lookahead token is inherited
                                                                                                              (?)

** In state 110, looking ahead at UNION, reducing production
** externalObjectSetReference -> Upper Dot Upper
** is permitted because of the following sub-derivation:

objectSetElements // lookahead token is inherited
definedObjectSet // lookahead token is inherited
externalObjectSetReference // lookahead token is inherited
Upper Dot Upper . 

** In state 110, looking ahead at UNION, reducing production
** externalTypeReference -> Upper Dot Upper
** is permitted because of the following sub-derivation:

subtypeElements // lookahead token is inherited
typeConstraint // lookahead token is inherited
type_x // lookahead token is inherited
referencedType // lookahead token is inherited
definedType // lookahead token is inherited
externalTypeReference // lookahead token is inherited
Upper Dot Upper . 

** Conflict (reduce/reduce) in state 108.
** Tokens involved: UNION RightParen RightBrace Middle LeftBrace INTERSECTION EXCEPT Dot Comma Circumflex Bang
** The following explanations concentrate on token UNION.
** This state is reached from main after reading:

moduleIdentifier DEFINITIONS tagDefault extensionDefault Assignment BEGIN exports imports Upper SET LeftParen Upper

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

main 
moduleDefinition EOF 
moduleIdentifier DEFINITIONS tagDefault extensionDefault Assignment BEGIN moduleBody END 
                                                                          exports imports assignmentList 
                                                                                          assignment 
                                                                                          valueSetTypeAssignment 
                                                                                          Upper type_x Assignment valueSet 
                                                                                                constrainedType 
                                                                                                typeWithConstraint 
                                                                                                SET constraint_x OF type_x 
                                                                                                    LeftParen constraintSpec exceptionSpec RightParen 
                                                                                                              subtypeConstraint 
                                                                                                              elementSetSpecs 
                                                                                                              rootElementSetSpec 
                                                                                                              elementSetSpec 
                                                                                                              unions 
                                                                                                              uElems unionMark intersections // lookahead token appears because unionMark can begin with UNION
                                                                                                              unions // lookahead token is inherited
                                                                                                              intersections // lookahead token is inherited
                                                                                                              intersectionElements // lookahead token is inherited
                                                                                                              elements // lookahead token is inherited
                                                                                                              (?)

** In state 108, looking ahead at UNION, reducing production
** definedObjectSet -> Upper
** is permitted because of the following sub-derivation:

objectSetElements // lookahead token is inherited
definedObjectSet // lookahead token is inherited
Upper . 

** In state 108, looking ahead at UNION, reducing production
** definedType -> Upper
** is permitted because of the following sub-derivation:

subtypeElements // lookahead token is inherited
typeConstraint // lookahead token is inherited
type_x // lookahead token is inherited
referencedType // lookahead token is inherited
definedType // lookahead token is inherited
Upper . 

** Conflict (shift/reduce) in state 81.
** Tokens involved: VisibleString VideotexString Upper UniversalString UTF8String UTCTime TeletexString TYPE_IDENTIFIER T61String SET SEQUENCE RELATIVE_OID REAL PrintableString ObjectDescriptor OCTET OBJECT NumericString NULL Lower LeftBracket ISO646String INTEGER INSTANCE IA5String GraphicString GeneralizedTime GeneralString EXTERNAL ENUMERATED EMBEDDED CHOICE CHARACTER BOOLEAN BMPString BIT ABSTRACT_SYNTAX
** The following explanations concentrate on token VisibleString.
** This state is reached from main after reading:

moduleIdentifier DEFINITIONS tagDefault extensionDefault Assignment BEGIN exports imports Upper SET LeftParen

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

main 
moduleDefinition EOF 
moduleIdentifier DEFINITIONS tagDefault extensionDefault Assignment BEGIN moduleBody END 
                                                                          exports imports assignmentList 
                                                                                          assignment 
                                                                                          valueSetTypeAssignment 
                                                                                          Upper type_x Assignment valueSet 
                                                                                                constrainedType 
                                                                                                typeWithConstraint 
                                                                                                SET constraint_x OF type_x 
                                                                                                    LeftParen constraintSpec exceptionSpec RightParen 
                                                                                                              subtypeConstraint 
                                                                                                              elementSetSpecs 
                                                                                                              rootElementSetSpec 
                                                                                                              elementSetSpec 
                                                                                                              unions 
                                                                                                              intersections 
                                                                                                              intersectionElements 
                                                                                                              elements 
                                                                                                              subtypeElements 
                                                                                                              (?)

** In state 81, looking ahead at VisibleString, reducing production
** includes -> 
** is permitted because of the following sub-derivation:

containedSubtype 
includes type_x // lookahead token appears because type_x can begin with VisibleString
. 

** In state 81, looking ahead at VisibleString, shifting is permitted
** because of the following sub-derivation:

typeConstraint 
type_x 
builtinType 
characterStringType 
restrictedCharacterStringType 
. VisibleString 

** Conflict (reduce/reduce) in state 71.
** Tokens involved: UNION RightParen RightBrace Middle LeftBrace INTERSECTION EXCEPT Comma Circumflex Bang
** The following explanations concentrate on token UNION.
** This state is reached from main after reading:

moduleIdentifier DEFINITIONS tagDefault extensionDefault Assignment BEGIN exports imports Upper SET LeftParen Upper Dot Lower

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

main 
moduleDefinition EOF 
moduleIdentifier DEFINITIONS tagDefault extensionDefault Assignment BEGIN moduleBody END 
                                                                          exports imports assignmentList 
                                                                                          assignment 
                                                                                          valueSetTypeAssignment 
                                                                                          Upper type_x Assignment valueSet 
                                                                                                constrainedType 
                                                                                                typeWithConstraint 
                                                                                                SET constraint_x OF type_x 
                                                                                                    LeftParen constraintSpec exceptionSpec RightParen 
                                                                                                              subtypeConstraint 
                                                                                                              elementSetSpecs 
                                                                                                              rootElementSetSpec 
                                                                                                              elementSetSpec 
                                                                                                              unions 
                                                                                                              uElems unionMark intersections // lookahead token appears because unionMark can begin with UNION
                                                                                                              unions // lookahead token is inherited
                                                                                                              intersections // lookahead token is inherited
                                                                                                              intersectionElements // lookahead token is inherited
                                                                                                              elements // lookahead token is inherited
                                                                                                              (?)

** In state 71, looking ahead at UNION, reducing production
** externalObjectReference -> Upper Dot Lower
** is permitted because of the following sub-derivation:

objectSetElements // lookahead token is inherited
object_x // lookahead token is inherited
definedObject // lookahead token is inherited
externalObjectReference // lookahead token is inherited
Upper Dot Lower . 

** In state 71, looking ahead at UNION, reducing production
** externalValueReference -> Upper Dot Lower
** is permitted because of the following sub-derivation:

subtypeElements // lookahead token is inherited
singleValue // lookahead token is inherited
value // lookahead token is inherited
referencedValue // lookahead token is inherited
definedValue // lookahead token is inherited
externalValueReference // lookahead token is inherited
Upper Dot Lower . 

** Conflict (reduce/reduce) in state 70.
** Tokens involved: Upper RightBrace OPTIONAL Lower LeftBrace END Dot DEFAULT Comma Colon Assignment
** The following explanations concentrate on token LeftBrace.
** This state is reached from main after reading:

moduleIdentifier DEFINITIONS tagDefault extensionDefault Assignment BEGIN exports imports Upper Upper Dot Upper

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

main 
moduleDefinition EOF 
moduleIdentifier DEFINITIONS tagDefault extensionDefault Assignment BEGIN moduleBody END 
                                                                          exports imports assignmentList 
                                                                                          assignment 
                                                                                          valueSetTypeAssignment 
                                                                                          Upper type_x Assignment valueSet 
                                                                                                referencedType 
                                                                                                (?)

** In state 70, looking ahead at LeftBrace, reducing production
** externalObjectSetReference -> Upper Dot Upper
** is permitted because of the following sub-derivation:

typeFromObject 
referencedObjects Dot fieldName 
parameterizedObjectSet 
definedObjectSet actualParameterList // lookahead token appears because actualParameterList can begin with LeftBrace
externalObjectSetReference // lookahead token is inherited
Upper Dot Upper . 

** In state 70, looking ahead at LeftBrace, reducing production
** externalTypeReference -> Upper Dot Upper
** is permitted because of the following sub-derivation:

definedType 
parameterizedType 
simpleDefinedType actualParameterList // lookahead token appears because actualParameterList can begin with LeftBrace
externalTypeReference // lookahead token is inherited
Upper Dot Upper . 

** Conflict (reduce/reduce) in state 68.
** Tokens involved: RightBrace LeftBrace Dot Comma
** The following explanations concentrate on token LeftBrace.
** This state is reached from main after reading:

moduleIdentifier DEFINITIONS tagDefault extensionDefault Assignment BEGIN exports imports Upper simpleDefinedType LeftBrace Upper

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

main 
moduleDefinition EOF 
moduleIdentifier DEFINITIONS tagDefault extensionDefault Assignment BEGIN moduleBody END 
                                                                          exports imports assignmentList 
                                                                                          assignment 
                                                                                          valueSetTypeAssignment 
                                                                                          Upper type_x Assignment valueSet 
                                                                                                referencedType 
                                                                                                definedType 
                                                                                                parameterizedType 
                                                                                                simpleDefinedType actualParameterList 
                                                                                                                  LeftBrace separated_nonempty_list(Comma,actualParameter) RightBrace 
                                                                                                                            actualParameter 
                                                                                                                            (?)

** In state 68, looking ahead at LeftBrace, reducing production
** definedObjectSet -> Upper
** is permitted because of the following sub-derivation:

object_x 
objectFromObject 
referencedObjects Dot fieldName 
parameterizedObjectSet 
definedObjectSet actualParameterList // lookahead token appears because actualParameterList can begin with LeftBrace
Upper . 

** In state 68, looking ahead at LeftBrace, reducing production
** simpleDefinedType -> Upper
** is permitted because of the following sub-derivation:

type_x 
referencedType 
definedType 
parameterizedType 
simpleDefinedType actualParameterList // lookahead token appears because actualParameterList can begin with LeftBrace
Upper . 

** Conflict (reduce/reduce) in state 62.
** Tokens involved: Upper RightBrace Number Lower
** The following explanations concentrate on token Upper.
** This state is reached from main after reading:

moduleIdentifier DEFINITIONS tagDefault extensionDefault Assignment BEGIN exports IMPORTS symbolList FROM Upper LeftBrace Lower

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

main 
moduleDefinition EOF 
moduleIdentifier DEFINITIONS tagDefault extensionDefault Assignment BEGIN moduleBody END 
                                                                          exports imports assignmentList 
                                                                                  IMPORTS symbolsImported SemiColon 
                                                                                          symbolsFromModuleList 
                                                                                          symbolsFromModule 
                                                                                          symbolList FROM globalModuleReference 
                                                                                                          Upper assignedIdentifier 
                                                                                                                objectIdentifierValue 
                                                                                                                (?)

** In state 62, looking ahead at Upper, reducing production
** definedValue -> Lower
** is permitted because of the following sub-derivation:

LeftBrace definedValue objIdComponentsList RightBrace // lookahead token appears because objIdComponentsList can begin with Upper
          Lower . 

** In state 62, looking ahead at Upper, reducing production
** nameForm -> Lower
** is permitted because of the following sub-derivation:

LeftBrace objIdComponentsList RightBrace 
          objIdComponents objIdComponentsList // lookahead token appears because objIdComponentsList can begin with Upper
          nameForm // lookahead token is inherited
          Lower . 

** Conflict (shift/reduce) in state 55.
** Tokens involved: Upper Lower
** The following explanations concentrate on token Upper.
** This state is reached from main after reading:

moduleIdentifier DEFINITIONS tagDefault extensionDefault Assignment BEGIN exports IMPORTS symbolList FROM Upper

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

main 
moduleDefinition EOF 
moduleIdentifier DEFINITIONS tagDefault extensionDefault Assignment BEGIN moduleBody END 
                                                                          exports imports assignmentList 
                                                                                  IMPORTS symbolsImported SemiColon 
                                                                                          symbolsFromModuleList 
                                                                                          (?)

** In state 55, looking ahead at Upper, reducing production
** assignedIdentifier -> 
** is permitted because of the following sub-derivation:

symbolsFromModuleList symbolsFromModule // lookahead token appears because symbolsFromModule can begin with Upper
symbolsFromModule // lookahead token is inherited
symbolList FROM globalModuleReference // lookahead token is inherited
                Upper assignedIdentifier // lookahead token is inherited
                      . 

** In state 55, looking ahead at Upper, shifting is permitted
** because of the following sub-derivation:

symbolsFromModule 
symbolList FROM globalModuleReference 
                Upper assignedIdentifier 
                      definedValue 
                      externalValueReference 
                      . Upper Dot Lower 

** Conflict (reduce/reduce) in state 40.
** Tokens involved: SemiColon FROM Comma
** The following explanations concentrate on token SemiColon.
** This state is reached from main after reading:

moduleIdentifier DEFINITIONS tagDefault extensionDefault Assignment BEGIN EXPORTS reference

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

main 
moduleDefinition EOF 
moduleIdentifier DEFINITIONS tagDefault extensionDefault Assignment BEGIN moduleBody END 
                                                                          exports imports assignmentList 
                                                                          EXPORTS symbolsExported SemiColon // lookahead token appears
                                                                                  symbolList // lookahead token is inherited
                                                                                  symbol // lookahead token is inherited
                                                                                  (?)

** In state 40, looking ahead at SemiColon, reducing production
** parameterizedReference -> reference
** is permitted because of the following sub-derivation:

parameterizedReference // lookahead token is inherited
reference . 

** In state 40, looking ahead at SemiColon, reducing production
** symbol -> reference
** is permitted because of the following sub-derivation:

reference . 
