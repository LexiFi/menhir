State 0:
## Known stack suffix:
##
## LR(1) items:
nothing' -> . nothing [ # ]
## Transitions:
-- On Endofstream shift to state 1
-- On nothing shift to state 2
## Reductions:

State 1:
## Known stack suffix:
## Endofstream
## LR(1) items:
nothing -> Endofstream . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production nothing -> Endofstream

State 2:
## Known stack suffix:
## nothing
## LR(1) items:
nothing' -> nothing . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, accept nothing

State 3:
## Known stack suffix:
##
## LR(1) items:
translation_unit' -> . translation_unit [ # ]
## Transitions:
-- On Typedef_ident shift to state 4
-- On KW_volatile shift to state 5
-- On KW_void shift to state 6
-- On KW_unsigned shift to state 7
-- On KW_union shift to state 8
-- On KW_typedef shift to state 9
-- On KW_struct shift to state 10
-- On KW_static shift to state 11
-- On KW_signed shift to state 12
-- On KW_short shift to state 13
-- On KW_register shift to state 14
-- On KW_long shift to state 15
-- On KW_int shift to state 16
-- On KW_float shift to state 17
-- On KW_extern shift to state 18
-- On KW_enum shift to state 19
-- On KW_double shift to state 37
-- On KW_const shift to state 38
-- On KW_char shift to state 39
-- On KW_auto shift to state 40
-- On typedef_name shift to state 41
-- On type_specifier shift to state 42
-- On type_qualifier shift to state 43
-- On translation_unit shift to state 123
-- On struct_or_union_specifier shift to state 44
-- On struct_or_union shift to state 45
-- On storage_class_specifier shift to state 69
-- On enum_specifier shift to state 51
-- On declaration_specifiers shift to state 124
-- On declaration shift to state 131
## Reductions:

State 4:
## Known stack suffix:
## Typedef_ident
## LR(1) items:
typedef_name -> Typedef_ident . [ Typedef_ident KW_volatile KW_void KW_unsigned KW_union KW_typedef KW_times KW_struct KW_static KW_signed KW_short KW_semicolon KW_register KW_oparen KW_obracket KW_long KW_int KW_float KW_extern KW_enum KW_double KW_cparen KW_const KW_comma KW_char KW_auto Ident ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production typedef_name -> Typedef_ident

State 5:
## Known stack suffix:
## KW_volatile
## LR(1) items:
type_qualifier -> KW_volatile . [ Typedef_ident KW_volatile KW_void KW_unsigned KW_union KW_typedef KW_times KW_struct KW_static KW_signed KW_short KW_semicolon KW_register KW_oparen KW_obracket KW_long KW_int KW_float KW_extern KW_enum KW_double KW_cparen KW_const KW_comma KW_char KW_auto Ident ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production type_qualifier -> KW_volatile

State 6:
## Known stack suffix:
## KW_void
## LR(1) items:
type_specifier -> KW_void . [ Typedef_ident KW_volatile KW_void KW_unsigned KW_union KW_typedef KW_times KW_struct KW_static KW_signed KW_short KW_semicolon KW_register KW_oparen KW_obracket KW_long KW_int KW_float KW_extern KW_enum KW_double KW_cparen KW_const KW_comma KW_char KW_auto Ident ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production type_specifier -> KW_void

State 7:
## Known stack suffix:
## KW_unsigned
## LR(1) items:
type_specifier -> KW_unsigned . [ Typedef_ident KW_volatile KW_void KW_unsigned KW_union KW_typedef KW_times KW_struct KW_static KW_signed KW_short KW_semicolon KW_register KW_oparen KW_obracket KW_long KW_int KW_float KW_extern KW_enum KW_double KW_cparen KW_const KW_comma KW_char KW_auto Ident ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production type_specifier -> KW_unsigned

State 8:
## Known stack suffix:
## KW_union
## LR(1) items:
struct_or_union -> KW_union . [ Typedef_ident KW_obrace Ident ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production struct_or_union -> KW_union

State 9:
## Known stack suffix:
## KW_typedef
## LR(1) items:
storage_class_specifier -> KW_typedef . [ Typedef_ident KW_volatile KW_void KW_unsigned KW_union KW_typedef KW_times KW_struct KW_static KW_signed KW_short KW_semicolon KW_register KW_oparen KW_obracket KW_long KW_int KW_float KW_extern KW_enum KW_double KW_cparen KW_const KW_comma KW_char KW_auto Ident ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production storage_class_specifier -> KW_typedef

State 10:
## Known stack suffix:
## KW_struct
## LR(1) items:
struct_or_union -> KW_struct . [ Typedef_ident KW_obrace Ident ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production struct_or_union -> KW_struct

State 11:
## Known stack suffix:
## KW_static
## LR(1) items:
storage_class_specifier -> KW_static . [ Typedef_ident KW_volatile KW_void KW_unsigned KW_union KW_typedef KW_times KW_struct KW_static KW_signed KW_short KW_semicolon KW_register KW_oparen KW_obracket KW_long KW_int KW_float KW_extern KW_enum KW_double KW_cparen KW_const KW_comma KW_char KW_auto Ident ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production storage_class_specifier -> KW_static

State 12:
## Known stack suffix:
## KW_signed
## LR(1) items:
type_specifier -> KW_signed . [ Typedef_ident KW_volatile KW_void KW_unsigned KW_union KW_typedef KW_times KW_struct KW_static KW_signed KW_short KW_semicolon KW_register KW_oparen KW_obracket KW_long KW_int KW_float KW_extern KW_enum KW_double KW_cparen KW_const KW_comma KW_char KW_auto Ident ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production type_specifier -> KW_signed

State 13:
## Known stack suffix:
## KW_short
## LR(1) items:
type_specifier -> KW_short . [ Typedef_ident KW_volatile KW_void KW_unsigned KW_union KW_typedef KW_times KW_struct KW_static KW_signed KW_short KW_semicolon KW_register KW_oparen KW_obracket KW_long KW_int KW_float KW_extern KW_enum KW_double KW_cparen KW_const KW_comma KW_char KW_auto Ident ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production type_specifier -> KW_short

State 14:
## Known stack suffix:
## KW_register
## LR(1) items:
storage_class_specifier -> KW_register . [ Typedef_ident KW_volatile KW_void KW_unsigned KW_union KW_typedef KW_times KW_struct KW_static KW_signed KW_short KW_semicolon KW_register KW_oparen KW_obracket KW_long KW_int KW_float KW_extern KW_enum KW_double KW_cparen KW_const KW_comma KW_char KW_auto Ident ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production storage_class_specifier -> KW_register

State 15:
## Known stack suffix:
## KW_long
## LR(1) items:
type_specifier -> KW_long . [ Typedef_ident KW_volatile KW_void KW_unsigned KW_union KW_typedef KW_times KW_struct KW_static KW_signed KW_short KW_semicolon KW_register KW_oparen KW_obracket KW_long KW_int KW_float KW_extern KW_enum KW_double KW_cparen KW_const KW_comma KW_char KW_auto Ident ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production type_specifier -> KW_long

State 16:
## Known stack suffix:
## KW_int
## LR(1) items:
type_specifier -> KW_int . [ Typedef_ident KW_volatile KW_void KW_unsigned KW_union KW_typedef KW_times KW_struct KW_static KW_signed KW_short KW_semicolon KW_register KW_oparen KW_obracket KW_long KW_int KW_float KW_extern KW_enum KW_double KW_cparen KW_const KW_comma KW_char KW_auto Ident ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production type_specifier -> KW_int

State 17:
## Known stack suffix:
## KW_float
## LR(1) items:
type_specifier -> KW_float . [ Typedef_ident KW_volatile KW_void KW_unsigned KW_union KW_typedef KW_times KW_struct KW_static KW_signed KW_short KW_semicolon KW_register KW_oparen KW_obracket KW_long KW_int KW_float KW_extern KW_enum KW_double KW_cparen KW_const KW_comma KW_char KW_auto Ident ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production type_specifier -> KW_float

State 18:
## Known stack suffix:
## KW_extern
## LR(1) items:
storage_class_specifier -> KW_extern . [ Typedef_ident KW_volatile KW_void KW_unsigned KW_union KW_typedef KW_times KW_struct KW_static KW_signed KW_short KW_semicolon KW_register KW_oparen KW_obracket KW_long KW_int KW_float KW_extern KW_enum KW_double KW_cparen KW_const KW_comma KW_char KW_auto Ident ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production storage_class_specifier -> KW_extern

State 19:
## Known stack suffix:
## KW_enum
## LR(1) items:
enum_specifier -> KW_enum . Ident KW_obrace enumerator_list KW_cbrace [ Typedef_ident KW_volatile KW_void KW_unsigned KW_union KW_typedef KW_times KW_struct KW_static KW_signed KW_short KW_semicolon KW_register KW_oparen KW_obracket KW_long KW_int KW_float KW_extern KW_enum KW_double KW_cparen KW_const KW_comma KW_char KW_auto Ident ]
enum_specifier -> KW_enum . Typedef_ident KW_obrace enumerator_list KW_cbrace [ Typedef_ident KW_volatile KW_void KW_unsigned KW_union KW_typedef KW_times KW_struct KW_static KW_signed KW_short KW_semicolon KW_register KW_oparen KW_obracket KW_long KW_int KW_float KW_extern KW_enum KW_double KW_cparen KW_const KW_comma KW_char KW_auto Ident ]
enum_specifier -> KW_enum . KW_obrace enumerator_list KW_cbrace [ Typedef_ident KW_volatile KW_void KW_unsigned KW_union KW_typedef KW_times KW_struct KW_static KW_signed KW_short KW_semicolon KW_register KW_oparen KW_obracket KW_long KW_int KW_float KW_extern KW_enum KW_double KW_cparen KW_const KW_comma KW_char KW_auto Ident ]
enum_specifier -> KW_enum . Ident [ Typedef_ident KW_volatile KW_void KW_unsigned KW_union KW_typedef KW_times KW_struct KW_static KW_signed KW_short KW_semicolon KW_register KW_oparen KW_obracket KW_long KW_int KW_float KW_extern KW_enum KW_double KW_cparen KW_const KW_comma KW_char KW_auto Ident ]
enum_specifier -> KW_enum . Typedef_ident [ Typedef_ident KW_volatile KW_void KW_unsigned KW_union KW_typedef KW_times KW_struct KW_static KW_signed KW_short KW_semicolon KW_register KW_oparen KW_obracket KW_long KW_int KW_float KW_extern KW_enum KW_double KW_cparen KW_const KW_comma KW_char KW_auto Ident ]
## Transitions:
-- On Typedef_ident shift to state 20
-- On KW_obrace shift to state 30
-- On Ident shift to state 33
## Reductions:

State 20:
## Known stack suffix:
## KW_enum Typedef_ident
## LR(1) items:
enum_specifier -> KW_enum Typedef_ident . KW_obrace enumerator_list KW_cbrace [ Typedef_ident KW_volatile KW_void KW_unsigned KW_union KW_typedef KW_times KW_struct KW_static KW_signed KW_short KW_semicolon KW_register KW_oparen KW_obracket KW_long KW_int KW_float KW_extern KW_enum KW_double KW_cparen KW_const KW_comma KW_char KW_auto Ident ]
enum_specifier -> KW_enum Typedef_ident . [ Typedef_ident KW_volatile KW_void KW_unsigned KW_union KW_typedef KW_times KW_struct KW_static KW_signed KW_short KW_semicolon KW_register KW_oparen KW_obracket KW_long KW_int KW_float KW_extern KW_enum KW_double KW_cparen KW_const KW_comma KW_char KW_auto Ident ]
## Transitions:
-- On KW_obrace shift to state 21
## Reductions:
-- On Typedef_ident reduce production enum_specifier -> KW_enum Typedef_ident
-- On KW_volatile reduce production enum_specifier -> KW_enum Typedef_ident
-- On KW_void reduce production enum_specifier -> KW_enum Typedef_ident
-- On KW_unsigned reduce production enum_specifier -> KW_enum Typedef_ident
-- On KW_union reduce production enum_specifier -> KW_enum Typedef_ident
-- On KW_typedef reduce production enum_specifier -> KW_enum Typedef_ident
-- On KW_times reduce production enum_specifier -> KW_enum Typedef_ident
-- On KW_struct reduce production enum_specifier -> KW_enum Typedef_ident
-- On KW_static reduce production enum_specifier -> KW_enum Typedef_ident
-- On KW_signed reduce production enum_specifier -> KW_enum Typedef_ident
-- On KW_short reduce production enum_specifier -> KW_enum Typedef_ident
-- On KW_semicolon reduce production enum_specifier -> KW_enum Typedef_ident
-- On KW_register reduce production enum_specifier -> KW_enum Typedef_ident
-- On KW_oparen reduce production enum_specifier -> KW_enum Typedef_ident
-- On KW_obracket reduce production enum_specifier -> KW_enum Typedef_ident
-- On KW_long reduce production enum_specifier -> KW_enum Typedef_ident
-- On KW_int reduce production enum_specifier -> KW_enum Typedef_ident
-- On KW_float reduce production enum_specifier -> KW_enum Typedef_ident
-- On KW_extern reduce production enum_specifier -> KW_enum Typedef_ident
-- On KW_enum reduce production enum_specifier -> KW_enum Typedef_ident
-- On KW_double reduce production enum_specifier -> KW_enum Typedef_ident
-- On KW_cparen reduce production enum_specifier -> KW_enum Typedef_ident
-- On KW_const reduce production enum_specifier -> KW_enum Typedef_ident
-- On KW_comma reduce production enum_specifier -> KW_enum Typedef_ident
-- On KW_char reduce production enum_specifier -> KW_enum Typedef_ident
-- On KW_auto reduce production enum_specifier -> KW_enum Typedef_ident
-- On Ident reduce production enum_specifier -> KW_enum Typedef_ident

State 21:
## Known stack suffix:
## KW_enum Typedef_ident KW_obrace
## LR(1) items:
enum_specifier -> KW_enum Typedef_ident KW_obrace . enumerator_list KW_cbrace [ Typedef_ident KW_volatile KW_void KW_unsigned KW_union KW_typedef KW_times KW_struct KW_static KW_signed KW_short KW_semicolon KW_register KW_oparen KW_obracket KW_long KW_int KW_float KW_extern KW_enum KW_double KW_cparen KW_const KW_comma KW_char KW_auto Ident ]
## Transitions:
-- On Ident shift to state 22
-- On enumerator_list shift to state 25
-- On enumerator shift to state 27
## Reductions:

State 22:
## Known stack suffix:
## Ident
## LR(1) items:
enumerator -> Ident . [ KW_comma KW_cbrace ]
enumerator -> Ident . KW_assign Integer_unsuffixed [ KW_comma KW_cbrace ]
## Transitions:
-- On KW_assign shift to state 23
## Reductions:
-- On KW_comma reduce production enumerator -> Ident
-- On KW_cbrace reduce production enumerator -> Ident

State 23:
## Known stack suffix:
## Ident KW_assign
## LR(1) items:
enumerator -> Ident KW_assign . Integer_unsuffixed [ KW_comma KW_cbrace ]
## Transitions:
-- On Integer_unsuffixed shift to state 24
## Reductions:

State 24:
## Known stack suffix:
## Ident KW_assign Integer_unsuffixed
## LR(1) items:
enumerator -> Ident KW_assign Integer_unsuffixed . [ KW_comma KW_cbrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production enumerator -> Ident KW_assign Integer_unsuffixed

State 25:
## Known stack suffix:
## KW_enum Typedef_ident KW_obrace enumerator_list
## LR(1) items:
enum_specifier -> KW_enum Typedef_ident KW_obrace enumerator_list . KW_cbrace [ Typedef_ident KW_volatile KW_void KW_unsigned KW_union KW_typedef KW_times KW_struct KW_static KW_signed KW_short KW_semicolon KW_register KW_oparen KW_obracket KW_long KW_int KW_float KW_extern KW_enum KW_double KW_cparen KW_const KW_comma KW_char KW_auto Ident ]
## Transitions:
-- On KW_cbrace shift to state 26
## Reductions:

State 26:
## Known stack suffix:
## KW_enum Typedef_ident KW_obrace enumerator_list KW_cbrace
## LR(1) items:
enum_specifier -> KW_enum Typedef_ident KW_obrace enumerator_list KW_cbrace . [ Typedef_ident KW_volatile KW_void KW_unsigned KW_union KW_typedef KW_times KW_struct KW_static KW_signed KW_short KW_semicolon KW_register KW_oparen KW_obracket KW_long KW_int KW_float KW_extern KW_enum KW_double KW_cparen KW_const KW_comma KW_char KW_auto Ident ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production enum_specifier -> KW_enum Typedef_ident KW_obrace enumerator_list KW_cbrace

State 27:
## Known stack suffix:
## enumerator
## LR(1) items:
enumerator_list -> enumerator . [ KW_cbrace ]
enumerator_list -> enumerator . KW_comma enumerator_list [ KW_cbrace ]
## Transitions:
-- On KW_comma shift to state 28
## Reductions:
-- On KW_cbrace reduce production enumerator_list -> enumerator

State 28:
## Known stack suffix:
## enumerator KW_comma
## LR(1) items:
enumerator_list -> enumerator KW_comma . enumerator_list [ KW_cbrace ]
## Transitions:
-- On Ident shift to state 22
-- On enumerator_list shift to state 29
-- On enumerator shift to state 27
## Reductions:

State 29:
## Known stack suffix:
## enumerator KW_comma enumerator_list
## LR(1) items:
enumerator_list -> enumerator KW_comma enumerator_list . [ KW_cbrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production enumerator_list -> enumerator KW_comma enumerator_list

State 30:
## Known stack suffix:
## KW_enum KW_obrace
## LR(1) items:
enum_specifier -> KW_enum KW_obrace . enumerator_list KW_cbrace [ Typedef_ident KW_volatile KW_void KW_unsigned KW_union KW_typedef KW_times KW_struct KW_static KW_signed KW_short KW_semicolon KW_register KW_oparen KW_obracket KW_long KW_int KW_float KW_extern KW_enum KW_double KW_cparen KW_const KW_comma KW_char KW_auto Ident ]
## Transitions:
-- On Ident shift to state 22
-- On enumerator_list shift to state 31
-- On enumerator shift to state 27
## Reductions:

State 31:
## Known stack suffix:
## KW_enum KW_obrace enumerator_list
## LR(1) items:
enum_specifier -> KW_enum KW_obrace enumerator_list . KW_cbrace [ Typedef_ident KW_volatile KW_void KW_unsigned KW_union KW_typedef KW_times KW_struct KW_static KW_signed KW_short KW_semicolon KW_register KW_oparen KW_obracket KW_long KW_int KW_float KW_extern KW_enum KW_double KW_cparen KW_const KW_comma KW_char KW_auto Ident ]
## Transitions:
-- On KW_cbrace shift to state 32
## Reductions:

State 32:
## Known stack suffix:
## KW_enum KW_obrace enumerator_list KW_cbrace
## LR(1) items:
enum_specifier -> KW_enum KW_obrace enumerator_list KW_cbrace . [ Typedef_ident KW_volatile KW_void KW_unsigned KW_union KW_typedef KW_times KW_struct KW_static KW_signed KW_short KW_semicolon KW_register KW_oparen KW_obracket KW_long KW_int KW_float KW_extern KW_enum KW_double KW_cparen KW_const KW_comma KW_char KW_auto Ident ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production enum_specifier -> KW_enum KW_obrace enumerator_list KW_cbrace

State 33:
## Known stack suffix:
## KW_enum Ident
## LR(1) items:
enum_specifier -> KW_enum Ident . KW_obrace enumerator_list KW_cbrace [ Typedef_ident KW_volatile KW_void KW_unsigned KW_union KW_typedef KW_times KW_struct KW_static KW_signed KW_short KW_semicolon KW_register KW_oparen KW_obracket KW_long KW_int KW_float KW_extern KW_enum KW_double KW_cparen KW_const KW_comma KW_char KW_auto Ident ]
enum_specifier -> KW_enum Ident . [ Typedef_ident KW_volatile KW_void KW_unsigned KW_union KW_typedef KW_times KW_struct KW_static KW_signed KW_short KW_semicolon KW_register KW_oparen KW_obracket KW_long KW_int KW_float KW_extern KW_enum KW_double KW_cparen KW_const KW_comma KW_char KW_auto Ident ]
## Transitions:
-- On KW_obrace shift to state 34
## Reductions:
-- On Typedef_ident reduce production enum_specifier -> KW_enum Ident
-- On KW_volatile reduce production enum_specifier -> KW_enum Ident
-- On KW_void reduce production enum_specifier -> KW_enum Ident
-- On KW_unsigned reduce production enum_specifier -> KW_enum Ident
-- On KW_union reduce production enum_specifier -> KW_enum Ident
-- On KW_typedef reduce production enum_specifier -> KW_enum Ident
-- On KW_times reduce production enum_specifier -> KW_enum Ident
-- On KW_struct reduce production enum_specifier -> KW_enum Ident
-- On KW_static reduce production enum_specifier -> KW_enum Ident
-- On KW_signed reduce production enum_specifier -> KW_enum Ident
-- On KW_short reduce production enum_specifier -> KW_enum Ident
-- On KW_semicolon reduce production enum_specifier -> KW_enum Ident
-- On KW_register reduce production enum_specifier -> KW_enum Ident
-- On KW_oparen reduce production enum_specifier -> KW_enum Ident
-- On KW_obracket reduce production enum_specifier -> KW_enum Ident
-- On KW_long reduce production enum_specifier -> KW_enum Ident
-- On KW_int reduce production enum_specifier -> KW_enum Ident
-- On KW_float reduce production enum_specifier -> KW_enum Ident
-- On KW_extern reduce production enum_specifier -> KW_enum Ident
-- On KW_enum reduce production enum_specifier -> KW_enum Ident
-- On KW_double reduce production enum_specifier -> KW_enum Ident
-- On KW_cparen reduce production enum_specifier -> KW_enum Ident
-- On KW_const reduce production enum_specifier -> KW_enum Ident
-- On KW_comma reduce production enum_specifier -> KW_enum Ident
-- On KW_char reduce production enum_specifier -> KW_enum Ident
-- On KW_auto reduce production enum_specifier -> KW_enum Ident
-- On Ident reduce production enum_specifier -> KW_enum Ident

State 34:
## Known stack suffix:
## KW_enum Ident KW_obrace
## LR(1) items:
enum_specifier -> KW_enum Ident KW_obrace . enumerator_list KW_cbrace [ Typedef_ident KW_volatile KW_void KW_unsigned KW_union KW_typedef KW_times KW_struct KW_static KW_signed KW_short KW_semicolon KW_register KW_oparen KW_obracket KW_long KW_int KW_float KW_extern KW_enum KW_double KW_cparen KW_const KW_comma KW_char KW_auto Ident ]
## Transitions:
-- On Ident shift to state 22
-- On enumerator_list shift to state 35
-- On enumerator shift to state 27
## Reductions:

State 35:
## Known stack suffix:
## KW_enum Ident KW_obrace enumerator_list
## LR(1) items:
enum_specifier -> KW_enum Ident KW_obrace enumerator_list . KW_cbrace [ Typedef_ident KW_volatile KW_void KW_unsigned KW_union KW_typedef KW_times KW_struct KW_static KW_signed KW_short KW_semicolon KW_register KW_oparen KW_obracket KW_long KW_int KW_float KW_extern KW_enum KW_double KW_cparen KW_const KW_comma KW_char KW_auto Ident ]
## Transitions:
-- On KW_cbrace shift to state 36
## Reductions:

State 36:
## Known stack suffix:
## KW_enum Ident KW_obrace enumerator_list KW_cbrace
## LR(1) items:
enum_specifier -> KW_enum Ident KW_obrace enumerator_list KW_cbrace . [ Typedef_ident KW_volatile KW_void KW_unsigned KW_union KW_typedef KW_times KW_struct KW_static KW_signed KW_short KW_semicolon KW_register KW_oparen KW_obracket KW_long KW_int KW_float KW_extern KW_enum KW_double KW_cparen KW_const KW_comma KW_char KW_auto Ident ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production enum_specifier -> KW_enum Ident KW_obrace enumerator_list KW_cbrace

State 37:
## Known stack suffix:
## KW_double
## LR(1) items:
type_specifier -> KW_double . [ Typedef_ident KW_volatile KW_void KW_unsigned KW_union KW_typedef KW_times KW_struct KW_static KW_signed KW_short KW_semicolon KW_register KW_oparen KW_obracket KW_long KW_int KW_float KW_extern KW_enum KW_double KW_cparen KW_const KW_comma KW_char KW_auto Ident ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production type_specifier -> KW_double

State 38:
## Known stack suffix:
## KW_const
## LR(1) items:
type_qualifier -> KW_const . [ Typedef_ident KW_volatile KW_void KW_unsigned KW_union KW_typedef KW_times KW_struct KW_static KW_signed KW_short KW_semicolon KW_register KW_oparen KW_obracket KW_long KW_int KW_float KW_extern KW_enum KW_double KW_cparen KW_const KW_comma KW_char KW_auto Ident ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production type_qualifier -> KW_const

State 39:
## Known stack suffix:
## KW_char
## LR(1) items:
type_specifier -> KW_char . [ Typedef_ident KW_volatile KW_void KW_unsigned KW_union KW_typedef KW_times KW_struct KW_static KW_signed KW_short KW_semicolon KW_register KW_oparen KW_obracket KW_long KW_int KW_float KW_extern KW_enum KW_double KW_cparen KW_const KW_comma KW_char KW_auto Ident ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production type_specifier -> KW_char

State 40:
## Known stack suffix:
## KW_auto
## LR(1) items:
storage_class_specifier -> KW_auto . [ Typedef_ident KW_volatile KW_void KW_unsigned KW_union KW_typedef KW_times KW_struct KW_static KW_signed KW_short KW_semicolon KW_register KW_oparen KW_obracket KW_long KW_int KW_float KW_extern KW_enum KW_double KW_cparen KW_const KW_comma KW_char KW_auto Ident ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production storage_class_specifier -> KW_auto

State 41:
## Known stack suffix:
## typedef_name
## LR(1) items:
type_specifier -> typedef_name . [ Typedef_ident KW_volatile KW_void KW_unsigned KW_union KW_typedef KW_times KW_struct KW_static KW_signed KW_short KW_semicolon KW_register KW_oparen KW_obracket KW_long KW_int KW_float KW_extern KW_enum KW_double KW_cparen KW_const KW_comma KW_char KW_auto Ident ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production type_specifier -> typedef_name

State 42:
## Known stack suffix:
## type_specifier
## LR(1) items:
declaration_specifiers -> type_specifier . declaration_specifiers [ KW_times KW_semicolon KW_oparen KW_obracket KW_cparen KW_comma Ident ]
declaration_specifiers -> type_specifier . [ KW_times KW_semicolon KW_oparen KW_obracket KW_cparen KW_comma Ident ]
## Transitions:
-- On Typedef_ident shift to state 4
-- On KW_volatile shift to state 5
-- On KW_void shift to state 6
-- On KW_unsigned shift to state 7
-- On KW_union shift to state 8
-- On KW_typedef shift to state 9
-- On KW_struct shift to state 10
-- On KW_static shift to state 11
-- On KW_signed shift to state 12
-- On KW_short shift to state 13
-- On KW_register shift to state 14
-- On KW_long shift to state 15
-- On KW_int shift to state 16
-- On KW_float shift to state 17
-- On KW_extern shift to state 18
-- On KW_enum shift to state 19
-- On KW_double shift to state 37
-- On KW_const shift to state 38
-- On KW_char shift to state 39
-- On KW_auto shift to state 40
-- On typedef_name shift to state 41
-- On type_specifier shift to state 42
-- On type_qualifier shift to state 43
-- On struct_or_union_specifier shift to state 44
-- On struct_or_union shift to state 45
-- On storage_class_specifier shift to state 69
-- On enum_specifier shift to state 51
-- On declaration_specifiers shift to state 122
## Reductions:
-- On KW_times reduce production declaration_specifiers -> type_specifier
-- On KW_semicolon reduce production declaration_specifiers -> type_specifier
-- On KW_oparen reduce production declaration_specifiers -> type_specifier
-- On KW_obracket reduce production declaration_specifiers -> type_specifier
-- On KW_cparen reduce production declaration_specifiers -> type_specifier
-- On KW_comma reduce production declaration_specifiers -> type_specifier
-- On Ident reduce production declaration_specifiers -> type_specifier

State 43:
## Known stack suffix:
## type_qualifier
## LR(1) items:
declaration_specifiers -> type_qualifier . declaration_specifiers [ KW_times KW_semicolon KW_oparen KW_obracket KW_cparen KW_comma Ident ]
declaration_specifiers -> type_qualifier . [ KW_times KW_semicolon KW_oparen KW_obracket KW_cparen KW_comma Ident ]
## Transitions:
-- On Typedef_ident shift to state 4
-- On KW_volatile shift to state 5
-- On KW_void shift to state 6
-- On KW_unsigned shift to state 7
-- On KW_union shift to state 8
-- On KW_typedef shift to state 9
-- On KW_struct shift to state 10
-- On KW_static shift to state 11
-- On KW_signed shift to state 12
-- On KW_short shift to state 13
-- On KW_register shift to state 14
-- On KW_long shift to state 15
-- On KW_int shift to state 16
-- On KW_float shift to state 17
-- On KW_extern shift to state 18
-- On KW_enum shift to state 19
-- On KW_double shift to state 37
-- On KW_const shift to state 38
-- On KW_char shift to state 39
-- On KW_auto shift to state 40
-- On typedef_name shift to state 41
-- On type_specifier shift to state 42
-- On type_qualifier shift to state 43
-- On struct_or_union_specifier shift to state 44
-- On struct_or_union shift to state 45
-- On storage_class_specifier shift to state 69
-- On enum_specifier shift to state 51
-- On declaration_specifiers shift to state 121
## Reductions:
-- On KW_times reduce production declaration_specifiers -> type_qualifier
-- On KW_semicolon reduce production declaration_specifiers -> type_qualifier
-- On KW_oparen reduce production declaration_specifiers -> type_qualifier
-- On KW_obracket reduce production declaration_specifiers -> type_qualifier
-- On KW_cparen reduce production declaration_specifiers -> type_qualifier
-- On KW_comma reduce production declaration_specifiers -> type_qualifier
-- On Ident reduce production declaration_specifiers -> type_qualifier

State 44:
## Known stack suffix:
## struct_or_union_specifier
## LR(1) items:
type_specifier -> struct_or_union_specifier . [ Typedef_ident KW_volatile KW_void KW_unsigned KW_union KW_typedef KW_times KW_struct KW_static KW_signed KW_short KW_semicolon KW_register KW_oparen KW_obracket KW_long KW_int KW_float KW_extern KW_enum KW_double KW_cparen KW_const KW_comma KW_char KW_auto Ident ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production type_specifier -> struct_or_union_specifier

State 45:
## Known stack suffix:
## struct_or_union
## LR(1) items:
struct_or_union_specifier -> struct_or_union . Ident KW_obrace struct_declaration_list KW_cbrace [ Typedef_ident KW_volatile KW_void KW_unsigned KW_union KW_typedef KW_times KW_struct KW_static KW_signed KW_short KW_semicolon KW_register KW_oparen KW_obracket KW_long KW_int KW_float KW_extern KW_enum KW_double KW_cparen KW_const KW_comma KW_char KW_auto Ident ]
struct_or_union_specifier -> struct_or_union . Typedef_ident KW_obrace struct_declaration_list KW_cbrace [ Typedef_ident KW_volatile KW_void KW_unsigned KW_union KW_typedef KW_times KW_struct KW_static KW_signed KW_short KW_semicolon KW_register KW_oparen KW_obracket KW_long KW_int KW_float KW_extern KW_enum KW_double KW_cparen KW_const KW_comma KW_char KW_auto Ident ]
struct_or_union_specifier -> struct_or_union . KW_obrace struct_declaration_list KW_cbrace [ Typedef_ident KW_volatile KW_void KW_unsigned KW_union KW_typedef KW_times KW_struct KW_static KW_signed KW_short KW_semicolon KW_register KW_oparen KW_obracket KW_long KW_int KW_float KW_extern KW_enum KW_double KW_cparen KW_const KW_comma KW_char KW_auto Ident ]
struct_or_union_specifier -> struct_or_union . Ident [ Typedef_ident KW_volatile KW_void KW_unsigned KW_union KW_typedef KW_times KW_struct KW_static KW_signed KW_short KW_semicolon KW_register KW_oparen KW_obracket KW_long KW_int KW_float KW_extern KW_enum KW_double KW_cparen KW_const KW_comma KW_char KW_auto Ident ]
struct_or_union_specifier -> struct_or_union . Typedef_ident [ Typedef_ident KW_volatile KW_void KW_unsigned KW_union KW_typedef KW_times KW_struct KW_static KW_signed KW_short KW_semicolon KW_register KW_oparen KW_obracket KW_long KW_int KW_float KW_extern KW_enum KW_double KW_cparen KW_const KW_comma KW_char KW_auto Ident ]
## Transitions:
-- On Typedef_ident shift to state 46
-- On KW_obrace shift to state 114
-- On Ident shift to state 117
## Reductions:

State 46:
## Known stack suffix:
## struct_or_union Typedef_ident
## LR(1) items:
struct_or_union_specifier -> struct_or_union Typedef_ident . KW_obrace struct_declaration_list KW_cbrace [ Typedef_ident KW_volatile KW_void KW_unsigned KW_union KW_typedef KW_times KW_struct KW_static KW_signed KW_short KW_semicolon KW_register KW_oparen KW_obracket KW_long KW_int KW_float KW_extern KW_enum KW_double KW_cparen KW_const KW_comma KW_char KW_auto Ident ]
struct_or_union_specifier -> struct_or_union Typedef_ident . [ Typedef_ident KW_volatile KW_void KW_unsigned KW_union KW_typedef KW_times KW_struct KW_static KW_signed KW_short KW_semicolon KW_register KW_oparen KW_obracket KW_long KW_int KW_float KW_extern KW_enum KW_double KW_cparen KW_const KW_comma KW_char KW_auto Ident ]
## Transitions:
-- On KW_obrace shift to state 47
## Reductions:
-- On Typedef_ident reduce production struct_or_union_specifier -> struct_or_union Typedef_ident
-- On KW_volatile reduce production struct_or_union_specifier -> struct_or_union Typedef_ident
-- On KW_void reduce production struct_or_union_specifier -> struct_or_union Typedef_ident
-- On KW_unsigned reduce production struct_or_union_specifier -> struct_or_union Typedef_ident
-- On KW_union reduce production struct_or_union_specifier -> struct_or_union Typedef_ident
-- On KW_typedef reduce production struct_or_union_specifier -> struct_or_union Typedef_ident
-- On KW_times reduce production struct_or_union_specifier -> struct_or_union Typedef_ident
-- On KW_struct reduce production struct_or_union_specifier -> struct_or_union Typedef_ident
-- On KW_static reduce production struct_or_union_specifier -> struct_or_union Typedef_ident
-- On KW_signed reduce production struct_or_union_specifier -> struct_or_union Typedef_ident
-- On KW_short reduce production struct_or_union_specifier -> struct_or_union Typedef_ident
-- On KW_semicolon reduce production struct_or_union_specifier -> struct_or_union Typedef_ident
-- On KW_register reduce production struct_or_union_specifier -> struct_or_union Typedef_ident
-- On KW_oparen reduce production struct_or_union_specifier -> struct_or_union Typedef_ident
-- On KW_obracket reduce production struct_or_union_specifier -> struct_or_union Typedef_ident
-- On KW_long reduce production struct_or_union_specifier -> struct_or_union Typedef_ident
-- On KW_int reduce production struct_or_union_specifier -> struct_or_union Typedef_ident
-- On KW_float reduce production struct_or_union_specifier -> struct_or_union Typedef_ident
-- On KW_extern reduce production struct_or_union_specifier -> struct_or_union Typedef_ident
-- On KW_enum reduce production struct_or_union_specifier -> struct_or_union Typedef_ident
-- On KW_double reduce production struct_or_union_specifier -> struct_or_union Typedef_ident
-- On KW_cparen reduce production struct_or_union_specifier -> struct_or_union Typedef_ident
-- On KW_const reduce production struct_or_union_specifier -> struct_or_union Typedef_ident
-- On KW_comma reduce production struct_or_union_specifier -> struct_or_union Typedef_ident
-- On KW_char reduce production struct_or_union_specifier -> struct_or_union Typedef_ident
-- On KW_auto reduce production struct_or_union_specifier -> struct_or_union Typedef_ident
-- On Ident reduce production struct_or_union_specifier -> struct_or_union Typedef_ident

State 47:
## Known stack suffix:
## struct_or_union Typedef_ident KW_obrace
## LR(1) items:
struct_or_union_specifier -> struct_or_union Typedef_ident KW_obrace . struct_declaration_list KW_cbrace [ Typedef_ident KW_volatile KW_void KW_unsigned KW_union KW_typedef KW_times KW_struct KW_static KW_signed KW_short KW_semicolon KW_register KW_oparen KW_obracket KW_long KW_int KW_float KW_extern KW_enum KW_double KW_cparen KW_const KW_comma KW_char KW_auto Ident ]
## Transitions:
-- On Typedef_ident shift to state 4
-- On KW_volatile shift to state 5
-- On KW_void shift to state 6
-- On KW_unsigned shift to state 7
-- On KW_union shift to state 8
-- On KW_struct shift to state 10
-- On KW_signed shift to state 12
-- On KW_short shift to state 13
-- On KW_long shift to state 15
-- On KW_int shift to state 16
-- On KW_float shift to state 17
-- On KW_enum shift to state 19
-- On KW_double shift to state 37
-- On KW_const shift to state 38
-- On KW_char shift to state 39
-- On typedef_name shift to state 41
-- On type_specifier shift to state 48
-- On type_qualifier shift to state 49
-- On struct_or_union_specifier shift to state 44
-- On struct_or_union shift to state 45
-- On struct_declaration_list shift to state 53
-- On struct_declaration shift to state 55
-- On specifier_qualifier_list shift to state 57
-- On enum_specifier shift to state 51
## Reductions:

State 48:
## Known stack suffix:
## type_specifier
## LR(1) items:
specifier_qualifier_list -> type_specifier . [ KW_times KW_oparen Ident ]
specifier_qualifier_list -> type_specifier . specifier_qualifier_list [ KW_times KW_oparen Ident ]
## Transitions:
-- On Typedef_ident shift to state 4
-- On KW_volatile shift to state 5
-- On KW_void shift to state 6
-- On KW_unsigned shift to state 7
-- On KW_union shift to state 8
-- On KW_struct shift to state 10
-- On KW_signed shift to state 12
-- On KW_short shift to state 13
-- On KW_long shift to state 15
-- On KW_int shift to state 16
-- On KW_float shift to state 17
-- On KW_enum shift to state 19
-- On KW_double shift to state 37
-- On KW_const shift to state 38
-- On KW_char shift to state 39
-- On typedef_name shift to state 41
-- On type_specifier shift to state 48
-- On type_qualifier shift to state 49
-- On struct_or_union_specifier shift to state 44
-- On struct_or_union shift to state 45
-- On specifier_qualifier_list shift to state 52
-- On enum_specifier shift to state 51
## Reductions:
-- On KW_times reduce production specifier_qualifier_list -> type_specifier
-- On KW_oparen reduce production specifier_qualifier_list -> type_specifier
-- On Ident reduce production specifier_qualifier_list -> type_specifier

State 49:
## Known stack suffix:
## type_qualifier
## LR(1) items:
specifier_qualifier_list -> type_qualifier . [ KW_times KW_oparen Ident ]
specifier_qualifier_list -> type_qualifier . specifier_qualifier_list [ KW_times KW_oparen Ident ]
## Transitions:
-- On Typedef_ident shift to state 4
-- On KW_volatile shift to state 5
-- On KW_void shift to state 6
-- On KW_unsigned shift to state 7
-- On KW_union shift to state 8
-- On KW_struct shift to state 10
-- On KW_signed shift to state 12
-- On KW_short shift to state 13
-- On KW_long shift to state 15
-- On KW_int shift to state 16
-- On KW_float shift to state 17
-- On KW_enum shift to state 19
-- On KW_double shift to state 37
-- On KW_const shift to state 38
-- On KW_char shift to state 39
-- On typedef_name shift to state 41
-- On type_specifier shift to state 48
-- On type_qualifier shift to state 49
-- On struct_or_union_specifier shift to state 44
-- On struct_or_union shift to state 45
-- On specifier_qualifier_list shift to state 50
-- On enum_specifier shift to state 51
## Reductions:
-- On KW_times reduce production specifier_qualifier_list -> type_qualifier
-- On KW_oparen reduce production specifier_qualifier_list -> type_qualifier
-- On Ident reduce production specifier_qualifier_list -> type_qualifier

State 50:
## Known stack suffix:
## type_qualifier specifier_qualifier_list
## LR(1) items:
specifier_qualifier_list -> type_qualifier specifier_qualifier_list . [ KW_times KW_oparen Ident ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production specifier_qualifier_list -> type_qualifier specifier_qualifier_list

State 51:
## Known stack suffix:
## enum_specifier
## LR(1) items:
type_specifier -> enum_specifier . [ Typedef_ident KW_volatile KW_void KW_unsigned KW_union KW_typedef KW_times KW_struct KW_static KW_signed KW_short KW_semicolon KW_register KW_oparen KW_obracket KW_long KW_int KW_float KW_extern KW_enum KW_double KW_cparen KW_const KW_comma KW_char KW_auto Ident ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production type_specifier -> enum_specifier

State 52:
## Known stack suffix:
## type_specifier specifier_qualifier_list
## LR(1) items:
specifier_qualifier_list -> type_specifier specifier_qualifier_list . [ KW_times KW_oparen Ident ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production specifier_qualifier_list -> type_specifier specifier_qualifier_list

State 53:
## Known stack suffix:
## struct_or_union Typedef_ident KW_obrace struct_declaration_list
## LR(1) items:
struct_or_union_specifier -> struct_or_union Typedef_ident KW_obrace struct_declaration_list . KW_cbrace [ Typedef_ident KW_volatile KW_void KW_unsigned KW_union KW_typedef KW_times KW_struct KW_static KW_signed KW_short KW_semicolon KW_register KW_oparen KW_obracket KW_long KW_int KW_float KW_extern KW_enum KW_double KW_cparen KW_const KW_comma KW_char KW_auto Ident ]
## Transitions:
-- On KW_cbrace shift to state 54
## Reductions:

State 54:
## Known stack suffix:
## struct_or_union Typedef_ident KW_obrace struct_declaration_list KW_cbrace
## LR(1) items:
struct_or_union_specifier -> struct_or_union Typedef_ident KW_obrace struct_declaration_list KW_cbrace . [ Typedef_ident KW_volatile KW_void KW_unsigned KW_union KW_typedef KW_times KW_struct KW_static KW_signed KW_short KW_semicolon KW_register KW_oparen KW_obracket KW_long KW_int KW_float KW_extern KW_enum KW_double KW_cparen KW_const KW_comma KW_char KW_auto Ident ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production struct_or_union_specifier -> struct_or_union Typedef_ident KW_obrace struct_declaration_list KW_cbrace

State 55:
## Known stack suffix:
## struct_declaration
## LR(1) items:
struct_declaration_list -> struct_declaration . [ KW_cbrace ]
struct_declaration_list -> struct_declaration . struct_declaration_list [ KW_cbrace ]
## Transitions:
-- On Typedef_ident shift to state 4
-- On KW_volatile shift to state 5
-- On KW_void shift to state 6
-- On KW_unsigned shift to state 7
-- On KW_union shift to state 8
-- On KW_struct shift to state 10
-- On KW_signed shift to state 12
-- On KW_short shift to state 13
-- On KW_long shift to state 15
-- On KW_int shift to state 16
-- On KW_float shift to state 17
-- On KW_enum shift to state 19
-- On KW_double shift to state 37
-- On KW_const shift to state 38
-- On KW_char shift to state 39
-- On typedef_name shift to state 41
-- On type_specifier shift to state 48
-- On type_qualifier shift to state 49
-- On struct_or_union_specifier shift to state 44
-- On struct_or_union shift to state 45
-- On struct_declaration_list shift to state 56
-- On struct_declaration shift to state 55
-- On specifier_qualifier_list shift to state 57
-- On enum_specifier shift to state 51
## Reductions:
-- On KW_cbrace reduce production struct_declaration_list -> struct_declaration

State 56:
## Known stack suffix:
## struct_declaration struct_declaration_list
## LR(1) items:
struct_declaration_list -> struct_declaration struct_declaration_list . [ KW_cbrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production struct_declaration_list -> struct_declaration struct_declaration_list

State 57:
## Known stack suffix:
## specifier_qualifier_list
## LR(1) items:
struct_declaration -> specifier_qualifier_list . struct_declarator_list KW_semicolon [ Typedef_ident KW_volatile KW_void KW_unsigned KW_union KW_struct KW_signed KW_short KW_long KW_int KW_float KW_enum KW_double KW_const KW_char KW_cbrace ]
## Transitions:
-- On KW_times shift to state 58
-- On KW_oparen shift to state 64
-- On Ident shift to state 65
-- On struct_declarator_list shift to state 109
-- On pointer shift to state 66
-- On direct_declarator shift to state 97
-- On declarator shift to state 111
## Reductions:

State 58:
## Known stack suffix:
## KW_times
## LR(1) items:
pointer -> KW_times . type_qualifier_list [ KW_oparen KW_obracket KW_cparen KW_comma Ident ]
pointer -> KW_times . [ KW_oparen KW_obracket KW_cparen KW_comma Ident ]
pointer -> KW_times . type_qualifier_list pointer [ KW_oparen KW_obracket KW_cparen KW_comma Ident ]
pointer -> KW_times . pointer [ KW_oparen KW_obracket KW_cparen KW_comma Ident ]
## Transitions:
-- On KW_volatile shift to state 5
-- On KW_times shift to state 58
-- On KW_const shift to state 38
-- On type_qualifier_list shift to state 59
-- On type_qualifier shift to state 61
-- On pointer shift to state 63
## Reductions:
-- On KW_oparen reduce production pointer -> KW_times
-- On KW_obracket reduce production pointer -> KW_times
-- On KW_cparen reduce production pointer -> KW_times
-- On KW_comma reduce production pointer -> KW_times
-- On Ident reduce production pointer -> KW_times

State 59:
## Known stack suffix:
## KW_times type_qualifier_list
## LR(1) items:
pointer -> KW_times type_qualifier_list . [ KW_oparen KW_obracket KW_cparen KW_comma Ident ]
pointer -> KW_times type_qualifier_list . pointer [ KW_oparen KW_obracket KW_cparen KW_comma Ident ]
## Transitions:
-- On KW_times shift to state 58
-- On pointer shift to state 60
## Reductions:
-- On KW_oparen reduce production pointer -> KW_times type_qualifier_list
-- On KW_obracket reduce production pointer -> KW_times type_qualifier_list
-- On KW_cparen reduce production pointer -> KW_times type_qualifier_list
-- On KW_comma reduce production pointer -> KW_times type_qualifier_list
-- On Ident reduce production pointer -> KW_times type_qualifier_list

State 60:
## Known stack suffix:
## KW_times type_qualifier_list pointer
## LR(1) items:
pointer -> KW_times type_qualifier_list pointer . [ KW_oparen KW_obracket KW_cparen KW_comma Ident ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production pointer -> KW_times type_qualifier_list pointer

State 61:
## Known stack suffix:
## type_qualifier
## LR(1) items:
type_qualifier_list -> type_qualifier . [ KW_times KW_oparen KW_obracket KW_cparen KW_comma Ident ]
type_qualifier_list -> type_qualifier . type_qualifier_list [ KW_times KW_oparen KW_obracket KW_cparen KW_comma Ident ]
## Transitions:
-- On KW_volatile shift to state 5
-- On KW_const shift to state 38
-- On type_qualifier_list shift to state 62
-- On type_qualifier shift to state 61
## Reductions:
-- On KW_times reduce production type_qualifier_list -> type_qualifier
-- On KW_oparen reduce production type_qualifier_list -> type_qualifier
-- On KW_obracket reduce production type_qualifier_list -> type_qualifier
-- On KW_cparen reduce production type_qualifier_list -> type_qualifier
-- On KW_comma reduce production type_qualifier_list -> type_qualifier
-- On Ident reduce production type_qualifier_list -> type_qualifier

State 62:
## Known stack suffix:
## type_qualifier type_qualifier_list
## LR(1) items:
type_qualifier_list -> type_qualifier type_qualifier_list . [ KW_times KW_oparen KW_obracket KW_cparen KW_comma Ident ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production type_qualifier_list -> type_qualifier type_qualifier_list

State 63:
## Known stack suffix:
## KW_times pointer
## LR(1) items:
pointer -> KW_times pointer . [ KW_oparen KW_obracket KW_cparen KW_comma Ident ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production pointer -> KW_times pointer

State 64:
## Known stack suffix:
## KW_oparen
## LR(1) items:
direct_declarator -> KW_oparen . declarator KW_cparen [ KW_semicolon KW_oparen KW_obracket KW_cparen KW_comma ]
## Transitions:
-- On KW_times shift to state 58
-- On KW_oparen shift to state 64
-- On Ident shift to state 65
-- On pointer shift to state 66
-- On direct_declarator shift to state 97
-- On declarator shift to state 103
## Reductions:

State 65:
## Known stack suffix:
## Ident
## LR(1) items:
direct_declarator -> Ident . [ KW_semicolon KW_oparen KW_obracket KW_cparen KW_comma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production direct_declarator -> Ident

State 66:
## Known stack suffix:
## pointer
## LR(1) items:
declarator -> pointer . direct_declarator [ KW_semicolon KW_cparen KW_comma ]
## Transitions:
-- On KW_oparen shift to state 64
-- On Ident shift to state 65
-- On direct_declarator shift to state 67
## Reductions:

State 67:
## Known stack suffix:
## pointer direct_declarator
## LR(1) items:
declarator -> pointer direct_declarator . [ KW_semicolon KW_cparen KW_comma ]
direct_declarator -> direct_declarator . KW_obracket KW_cbracket [ KW_semicolon KW_oparen KW_obracket KW_cparen KW_comma ]
direct_declarator -> direct_declarator . KW_obracket Integer_unsuffixed KW_cbracket [ KW_semicolon KW_oparen KW_obracket KW_cparen KW_comma ]
direct_declarator -> direct_declarator . KW_oparen parameter_type_list KW_cparen [ KW_semicolon KW_oparen KW_obracket KW_cparen KW_comma ]
## Transitions:
-- On KW_oparen shift to state 68
-- On KW_obracket shift to state 98
## Reductions:
-- On KW_semicolon reduce production declarator -> pointer direct_declarator
-- On KW_cparen reduce production declarator -> pointer direct_declarator
-- On KW_comma reduce production declarator -> pointer direct_declarator

State 68:
## Known stack suffix:
## direct_declarator KW_oparen
## LR(1) items:
direct_declarator -> direct_declarator KW_oparen . parameter_type_list KW_cparen [ KW_semicolon KW_oparen KW_obracket KW_cparen KW_comma ]
## Transitions:
-- On Typedef_ident shift to state 4
-- On KW_volatile shift to state 5
-- On KW_void shift to state 6
-- On KW_unsigned shift to state 7
-- On KW_union shift to state 8
-- On KW_typedef shift to state 9
-- On KW_struct shift to state 10
-- On KW_static shift to state 11
-- On KW_signed shift to state 12
-- On KW_short shift to state 13
-- On KW_register shift to state 14
-- On KW_long shift to state 15
-- On KW_int shift to state 16
-- On KW_float shift to state 17
-- On KW_extern shift to state 18
-- On KW_enum shift to state 19
-- On KW_double shift to state 37
-- On KW_const shift to state 38
-- On KW_char shift to state 39
-- On KW_auto shift to state 40
-- On typedef_name shift to state 41
-- On type_specifier shift to state 42
-- On type_qualifier shift to state 43
-- On struct_or_union_specifier shift to state 44
-- On struct_or_union shift to state 45
-- On storage_class_specifier shift to state 69
-- On parameter_type_list shift to state 71
-- On parameter_list shift to state 73
-- On parameter_declaration shift to state 90
-- On enum_specifier shift to state 51
-- On declaration_specifiers shift to state 77
## Reductions:

State 69:
## Known stack suffix:
## storage_class_specifier
## LR(1) items:
declaration_specifiers -> storage_class_specifier . declaration_specifiers [ KW_times KW_semicolon KW_oparen KW_obracket KW_cparen KW_comma Ident ]
declaration_specifiers -> storage_class_specifier . [ KW_times KW_semicolon KW_oparen KW_obracket KW_cparen KW_comma Ident ]
## Transitions:
-- On Typedef_ident shift to state 4
-- On KW_volatile shift to state 5
-- On KW_void shift to state 6
-- On KW_unsigned shift to state 7
-- On KW_union shift to state 8
-- On KW_typedef shift to state 9
-- On KW_struct shift to state 10
-- On KW_static shift to state 11
-- On KW_signed shift to state 12
-- On KW_short shift to state 13
-- On KW_register shift to state 14
-- On KW_long shift to state 15
-- On KW_int shift to state 16
-- On KW_float shift to state 17
-- On KW_extern shift to state 18
-- On KW_enum shift to state 19
-- On KW_double shift to state 37
-- On KW_const shift to state 38
-- On KW_char shift to state 39
-- On KW_auto shift to state 40
-- On typedef_name shift to state 41
-- On type_specifier shift to state 42
-- On type_qualifier shift to state 43
-- On struct_or_union_specifier shift to state 44
-- On struct_or_union shift to state 45
-- On storage_class_specifier shift to state 69
-- On enum_specifier shift to state 51
-- On declaration_specifiers shift to state 70
## Reductions:
-- On KW_times reduce production declaration_specifiers -> storage_class_specifier
-- On KW_semicolon reduce production declaration_specifiers -> storage_class_specifier
-- On KW_oparen reduce production declaration_specifiers -> storage_class_specifier
-- On KW_obracket reduce production declaration_specifiers -> storage_class_specifier
-- On KW_cparen reduce production declaration_specifiers -> storage_class_specifier
-- On KW_comma reduce production declaration_specifiers -> storage_class_specifier
-- On Ident reduce production declaration_specifiers -> storage_class_specifier

State 70:
## Known stack suffix:
## storage_class_specifier declaration_specifiers
## LR(1) items:
declaration_specifiers -> storage_class_specifier declaration_specifiers . [ KW_times KW_semicolon KW_oparen KW_obracket KW_cparen KW_comma Ident ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production declaration_specifiers -> storage_class_specifier declaration_specifiers

State 71:
## Known stack suffix:
## direct_declarator KW_oparen parameter_type_list
## LR(1) items:
direct_declarator -> direct_declarator KW_oparen parameter_type_list . KW_cparen [ KW_semicolon KW_oparen KW_obracket KW_cparen KW_comma ]
## Transitions:
-- On KW_cparen shift to state 72
## Reductions:

State 72:
## Known stack suffix:
## direct_declarator KW_oparen parameter_type_list KW_cparen
## LR(1) items:
direct_declarator -> direct_declarator KW_oparen parameter_type_list KW_cparen . [ KW_semicolon KW_oparen KW_obracket KW_cparen KW_comma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production direct_declarator -> direct_declarator KW_oparen parameter_type_list KW_cparen

State 73:
## Known stack suffix:
## parameter_list
## LR(1) items:
parameter_list -> parameter_list . KW_comma parameter_declaration [ KW_cparen KW_comma ]
parameter_type_list -> parameter_list . [ KW_cparen ]
parameter_type_list -> parameter_list . KW_comma KW_andsoon [ KW_cparen ]
## Transitions:
-- On KW_comma shift to state 74
## Reductions:
-- On KW_cparen reduce production parameter_type_list -> parameter_list

State 74:
## Known stack suffix:
## parameter_list KW_comma
## LR(1) items:
parameter_list -> parameter_list KW_comma . parameter_declaration [ KW_cparen KW_comma ]
parameter_type_list -> parameter_list KW_comma . KW_andsoon [ KW_cparen ]
## Transitions:
-- On Typedef_ident shift to state 4
-- On KW_volatile shift to state 5
-- On KW_void shift to state 6
-- On KW_unsigned shift to state 7
-- On KW_union shift to state 8
-- On KW_typedef shift to state 9
-- On KW_struct shift to state 10
-- On KW_static shift to state 11
-- On KW_signed shift to state 12
-- On KW_short shift to state 13
-- On KW_register shift to state 14
-- On KW_long shift to state 15
-- On KW_int shift to state 16
-- On KW_float shift to state 17
-- On KW_extern shift to state 18
-- On KW_enum shift to state 19
-- On KW_double shift to state 37
-- On KW_const shift to state 38
-- On KW_char shift to state 39
-- On KW_auto shift to state 40
-- On KW_andsoon shift to state 75
-- On typedef_name shift to state 41
-- On type_specifier shift to state 42
-- On type_qualifier shift to state 43
-- On struct_or_union_specifier shift to state 44
-- On struct_or_union shift to state 45
-- On storage_class_specifier shift to state 69
-- On parameter_declaration shift to state 76
-- On enum_specifier shift to state 51
-- On declaration_specifiers shift to state 77
## Reductions:

State 75:
## Known stack suffix:
## parameter_list KW_comma KW_andsoon
## LR(1) items:
parameter_type_list -> parameter_list KW_comma KW_andsoon . [ KW_cparen ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production parameter_type_list -> parameter_list KW_comma KW_andsoon

State 76:
## Known stack suffix:
## parameter_list KW_comma parameter_declaration
## LR(1) items:
parameter_list -> parameter_list KW_comma parameter_declaration . [ KW_cparen KW_comma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production parameter_list -> parameter_list KW_comma parameter_declaration

State 77:
## Known stack suffix:
## declaration_specifiers
## LR(1) items:
parameter_declaration -> declaration_specifiers . declarator [ KW_cparen KW_comma ]
parameter_declaration -> declaration_specifiers . abstract_declarator [ KW_cparen KW_comma ]
parameter_declaration -> declaration_specifiers . [ KW_cparen KW_comma ]
## Transitions:
-- On KW_times shift to state 58
-- On KW_oparen shift to state 78
-- On KW_obracket shift to state 79
-- On Ident shift to state 65
-- On pointer shift to state 84
-- On direct_declarator shift to state 97
-- On direct_abstract_declarator shift to state 102
-- On declarator shift to state 107
-- On abstract_declarator shift to state 108
## Reductions:
-- On KW_cparen reduce production parameter_declaration -> declaration_specifiers
-- On KW_comma reduce production parameter_declaration -> declaration_specifiers

State 78:
## Known stack suffix:
## KW_oparen
## LR(1) items:
direct_abstract_declarator -> KW_oparen . abstract_declarator KW_cparen [ KW_oparen KW_obracket KW_cparen KW_comma ]
direct_abstract_declarator -> KW_oparen . parameter_type_list KW_cparen [ KW_oparen KW_obracket KW_cparen KW_comma ]
direct_abstract_declarator -> KW_oparen . KW_cparen [ KW_oparen KW_obracket KW_cparen KW_comma ]
direct_declarator -> KW_oparen . declarator KW_cparen [ KW_oparen KW_obracket KW_cparen KW_comma ]
## Transitions:
-- On Typedef_ident shift to state 4
-- On KW_volatile shift to state 5
-- On KW_void shift to state 6
-- On KW_unsigned shift to state 7
-- On KW_union shift to state 8
-- On KW_typedef shift to state 9
-- On KW_times shift to state 58
-- On KW_struct shift to state 10
-- On KW_static shift to state 11
-- On KW_signed shift to state 12
-- On KW_short shift to state 13
-- On KW_register shift to state 14
-- On KW_oparen shift to state 78
-- On KW_obracket shift to state 79
-- On KW_long shift to state 15
-- On KW_int shift to state 16
-- On KW_float shift to state 17
-- On KW_extern shift to state 18
-- On KW_enum shift to state 19
-- On KW_double shift to state 37
-- On KW_cparen shift to state 83
-- On KW_const shift to state 38
-- On KW_char shift to state 39
-- On KW_auto shift to state 40
-- On Ident shift to state 65
-- On typedef_name shift to state 41
-- On type_specifier shift to state 42
-- On type_qualifier shift to state 43
-- On struct_or_union_specifier shift to state 44
-- On struct_or_union shift to state 45
-- On storage_class_specifier shift to state 69
-- On pointer shift to state 84
-- On parameter_type_list shift to state 95
-- On parameter_list shift to state 73
-- On parameter_declaration shift to state 90
-- On enum_specifier shift to state 51
-- On direct_declarator shift to state 97
-- On direct_abstract_declarator shift to state 102
-- On declarator shift to state 103
-- On declaration_specifiers shift to state 77
-- On abstract_declarator shift to state 105
## Reductions:

State 79:
## Known stack suffix:
## KW_obracket
## LR(1) items:
direct_abstract_declarator -> KW_obracket . KW_cbracket [ KW_oparen KW_obracket KW_cparen KW_comma ]
direct_abstract_declarator -> KW_obracket . Integer_unsuffixed KW_cbracket [ KW_oparen KW_obracket KW_cparen KW_comma ]
## Transitions:
-- On KW_cbracket shift to state 80
-- On Integer_unsuffixed shift to state 81
## Reductions:

State 80:
## Known stack suffix:
## KW_obracket KW_cbracket
## LR(1) items:
direct_abstract_declarator -> KW_obracket KW_cbracket . [ KW_oparen KW_obracket KW_cparen KW_comma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production direct_abstract_declarator -> KW_obracket KW_cbracket

State 81:
## Known stack suffix:
## KW_obracket Integer_unsuffixed
## LR(1) items:
direct_abstract_declarator -> KW_obracket Integer_unsuffixed . KW_cbracket [ KW_oparen KW_obracket KW_cparen KW_comma ]
## Transitions:
-- On KW_cbracket shift to state 82
## Reductions:

State 82:
## Known stack suffix:
## KW_obracket Integer_unsuffixed KW_cbracket
## LR(1) items:
direct_abstract_declarator -> KW_obracket Integer_unsuffixed KW_cbracket . [ KW_oparen KW_obracket KW_cparen KW_comma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production direct_abstract_declarator -> KW_obracket Integer_unsuffixed KW_cbracket

State 83:
## Known stack suffix:
## KW_oparen KW_cparen
## LR(1) items:
direct_abstract_declarator -> KW_oparen KW_cparen . [ KW_oparen KW_obracket KW_cparen KW_comma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production direct_abstract_declarator -> KW_oparen KW_cparen

State 84:
## Known stack suffix:
## pointer
## LR(1) items:
abstract_declarator -> pointer . [ KW_cparen KW_comma ]
abstract_declarator -> pointer . direct_abstract_declarator [ KW_cparen KW_comma ]
declarator -> pointer . direct_declarator [ KW_cparen KW_comma ]
## Transitions:
-- On KW_oparen shift to state 78
-- On KW_obracket shift to state 79
-- On Ident shift to state 65
-- On direct_declarator shift to state 67
-- On direct_abstract_declarator shift to state 85
## Reductions:
-- On KW_cparen reduce production abstract_declarator -> pointer
-- On KW_comma reduce production abstract_declarator -> pointer

State 85:
## Known stack suffix:
## pointer direct_abstract_declarator
## LR(1) items:
abstract_declarator -> pointer direct_abstract_declarator . [ KW_cparen KW_comma ]
direct_abstract_declarator -> direct_abstract_declarator . KW_obracket KW_cbracket [ KW_oparen KW_obracket KW_cparen KW_comma ]
direct_abstract_declarator -> direct_abstract_declarator . KW_obracket Integer_unsuffixed KW_cbracket [ KW_oparen KW_obracket KW_cparen KW_comma ]
direct_abstract_declarator -> direct_abstract_declarator . KW_oparen parameter_type_list KW_cparen [ KW_oparen KW_obracket KW_cparen KW_comma ]
direct_abstract_declarator -> direct_abstract_declarator . KW_oparen KW_cparen [ KW_oparen KW_obracket KW_cparen KW_comma ]
## Transitions:
-- On KW_oparen shift to state 86
-- On KW_obracket shift to state 91
## Reductions:
-- On KW_cparen reduce production abstract_declarator -> pointer direct_abstract_declarator
-- On KW_comma reduce production abstract_declarator -> pointer direct_abstract_declarator

State 86:
## Known stack suffix:
## direct_abstract_declarator KW_oparen
## LR(1) items:
direct_abstract_declarator -> direct_abstract_declarator KW_oparen . parameter_type_list KW_cparen [ KW_oparen KW_obracket KW_cparen KW_comma ]
direct_abstract_declarator -> direct_abstract_declarator KW_oparen . KW_cparen [ KW_oparen KW_obracket KW_cparen KW_comma ]
## Transitions:
-- On Typedef_ident shift to state 4
-- On KW_volatile shift to state 5
-- On KW_void shift to state 6
-- On KW_unsigned shift to state 7
-- On KW_union shift to state 8
-- On KW_typedef shift to state 9
-- On KW_struct shift to state 10
-- On KW_static shift to state 11
-- On KW_signed shift to state 12
-- On KW_short shift to state 13
-- On KW_register shift to state 14
-- On KW_long shift to state 15
-- On KW_int shift to state 16
-- On KW_float shift to state 17
-- On KW_extern shift to state 18
-- On KW_enum shift to state 19
-- On KW_double shift to state 37
-- On KW_cparen shift to state 87
-- On KW_const shift to state 38
-- On KW_char shift to state 39
-- On KW_auto shift to state 40
-- On typedef_name shift to state 41
-- On type_specifier shift to state 42
-- On type_qualifier shift to state 43
-- On struct_or_union_specifier shift to state 44
-- On struct_or_union shift to state 45
-- On storage_class_specifier shift to state 69
-- On parameter_type_list shift to state 88
-- On parameter_list shift to state 73
-- On parameter_declaration shift to state 90
-- On enum_specifier shift to state 51
-- On declaration_specifiers shift to state 77
## Reductions:

State 87:
## Known stack suffix:
## direct_abstract_declarator KW_oparen KW_cparen
## LR(1) items:
direct_abstract_declarator -> direct_abstract_declarator KW_oparen KW_cparen . [ KW_oparen KW_obracket KW_cparen KW_comma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production direct_abstract_declarator -> direct_abstract_declarator KW_oparen KW_cparen

State 88:
## Known stack suffix:
## direct_abstract_declarator KW_oparen parameter_type_list
## LR(1) items:
direct_abstract_declarator -> direct_abstract_declarator KW_oparen parameter_type_list . KW_cparen [ KW_oparen KW_obracket KW_cparen KW_comma ]
## Transitions:
-- On KW_cparen shift to state 89
## Reductions:

State 89:
## Known stack suffix:
## direct_abstract_declarator KW_oparen parameter_type_list KW_cparen
## LR(1) items:
direct_abstract_declarator -> direct_abstract_declarator KW_oparen parameter_type_list KW_cparen . [ KW_oparen KW_obracket KW_cparen KW_comma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production direct_abstract_declarator -> direct_abstract_declarator KW_oparen parameter_type_list KW_cparen

State 90:
## Known stack suffix:
## parameter_declaration
## LR(1) items:
parameter_list -> parameter_declaration . [ KW_cparen KW_comma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production parameter_list -> parameter_declaration

State 91:
## Known stack suffix:
## direct_abstract_declarator KW_obracket
## LR(1) items:
direct_abstract_declarator -> direct_abstract_declarator KW_obracket . KW_cbracket [ KW_oparen KW_obracket KW_cparen KW_comma ]
direct_abstract_declarator -> direct_abstract_declarator KW_obracket . Integer_unsuffixed KW_cbracket [ KW_oparen KW_obracket KW_cparen KW_comma ]
## Transitions:
-- On KW_cbracket shift to state 92
-- On Integer_unsuffixed shift to state 93
## Reductions:

State 92:
## Known stack suffix:
## direct_abstract_declarator KW_obracket KW_cbracket
## LR(1) items:
direct_abstract_declarator -> direct_abstract_declarator KW_obracket KW_cbracket . [ KW_oparen KW_obracket KW_cparen KW_comma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production direct_abstract_declarator -> direct_abstract_declarator KW_obracket KW_cbracket

State 93:
## Known stack suffix:
## direct_abstract_declarator KW_obracket Integer_unsuffixed
## LR(1) items:
direct_abstract_declarator -> direct_abstract_declarator KW_obracket Integer_unsuffixed . KW_cbracket [ KW_oparen KW_obracket KW_cparen KW_comma ]
## Transitions:
-- On KW_cbracket shift to state 94
## Reductions:

State 94:
## Known stack suffix:
## direct_abstract_declarator KW_obracket Integer_unsuffixed KW_cbracket
## LR(1) items:
direct_abstract_declarator -> direct_abstract_declarator KW_obracket Integer_unsuffixed KW_cbracket . [ KW_oparen KW_obracket KW_cparen KW_comma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production direct_abstract_declarator -> direct_abstract_declarator KW_obracket Integer_unsuffixed KW_cbracket

State 95:
## Known stack suffix:
## KW_oparen parameter_type_list
## LR(1) items:
direct_abstract_declarator -> KW_oparen parameter_type_list . KW_cparen [ KW_oparen KW_obracket KW_cparen KW_comma ]
## Transitions:
-- On KW_cparen shift to state 96
## Reductions:

State 96:
## Known stack suffix:
## KW_oparen parameter_type_list KW_cparen
## LR(1) items:
direct_abstract_declarator -> KW_oparen parameter_type_list KW_cparen . [ KW_oparen KW_obracket KW_cparen KW_comma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production direct_abstract_declarator -> KW_oparen parameter_type_list KW_cparen

State 97:
## Known stack suffix:
## direct_declarator
## LR(1) items:
declarator -> direct_declarator . [ KW_semicolon KW_cparen KW_comma ]
direct_declarator -> direct_declarator . KW_obracket KW_cbracket [ KW_semicolon KW_oparen KW_obracket KW_cparen KW_comma ]
direct_declarator -> direct_declarator . KW_obracket Integer_unsuffixed KW_cbracket [ KW_semicolon KW_oparen KW_obracket KW_cparen KW_comma ]
direct_declarator -> direct_declarator . KW_oparen parameter_type_list KW_cparen [ KW_semicolon KW_oparen KW_obracket KW_cparen KW_comma ]
## Transitions:
-- On KW_oparen shift to state 68
-- On KW_obracket shift to state 98
## Reductions:
-- On KW_semicolon reduce production declarator -> direct_declarator
-- On KW_cparen reduce production declarator -> direct_declarator
-- On KW_comma reduce production declarator -> direct_declarator

State 98:
## Known stack suffix:
## direct_declarator KW_obracket
## LR(1) items:
direct_declarator -> direct_declarator KW_obracket . KW_cbracket [ KW_semicolon KW_oparen KW_obracket KW_cparen KW_comma ]
direct_declarator -> direct_declarator KW_obracket . Integer_unsuffixed KW_cbracket [ KW_semicolon KW_oparen KW_obracket KW_cparen KW_comma ]
## Transitions:
-- On KW_cbracket shift to state 99
-- On Integer_unsuffixed shift to state 100
## Reductions:

State 99:
## Known stack suffix:
## direct_declarator KW_obracket KW_cbracket
## LR(1) items:
direct_declarator -> direct_declarator KW_obracket KW_cbracket . [ KW_semicolon KW_oparen KW_obracket KW_cparen KW_comma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production direct_declarator -> direct_declarator KW_obracket KW_cbracket

State 100:
## Known stack suffix:
## direct_declarator KW_obracket Integer_unsuffixed
## LR(1) items:
direct_declarator -> direct_declarator KW_obracket Integer_unsuffixed . KW_cbracket [ KW_semicolon KW_oparen KW_obracket KW_cparen KW_comma ]
## Transitions:
-- On KW_cbracket shift to state 101
## Reductions:

State 101:
## Known stack suffix:
## direct_declarator KW_obracket Integer_unsuffixed KW_cbracket
## LR(1) items:
direct_declarator -> direct_declarator KW_obracket Integer_unsuffixed KW_cbracket . [ KW_semicolon KW_oparen KW_obracket KW_cparen KW_comma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production direct_declarator -> direct_declarator KW_obracket Integer_unsuffixed KW_cbracket

State 102:
## Known stack suffix:
## direct_abstract_declarator
## LR(1) items:
abstract_declarator -> direct_abstract_declarator . [ KW_cparen KW_comma ]
direct_abstract_declarator -> direct_abstract_declarator . KW_obracket KW_cbracket [ KW_oparen KW_obracket KW_cparen KW_comma ]
direct_abstract_declarator -> direct_abstract_declarator . KW_obracket Integer_unsuffixed KW_cbracket [ KW_oparen KW_obracket KW_cparen KW_comma ]
direct_abstract_declarator -> direct_abstract_declarator . KW_oparen parameter_type_list KW_cparen [ KW_oparen KW_obracket KW_cparen KW_comma ]
direct_abstract_declarator -> direct_abstract_declarator . KW_oparen KW_cparen [ KW_oparen KW_obracket KW_cparen KW_comma ]
## Transitions:
-- On KW_oparen shift to state 86
-- On KW_obracket shift to state 91
## Reductions:
-- On KW_cparen reduce production abstract_declarator -> direct_abstract_declarator
-- On KW_comma reduce production abstract_declarator -> direct_abstract_declarator

State 103:
## Known stack suffix:
## KW_oparen declarator
## LR(1) items:
direct_declarator -> KW_oparen declarator . KW_cparen [ KW_semicolon KW_oparen KW_obracket KW_cparen KW_comma ]
## Transitions:
-- On KW_cparen shift to state 104
## Reductions:

State 104:
## Known stack suffix:
## KW_oparen declarator KW_cparen
## LR(1) items:
direct_declarator -> KW_oparen declarator KW_cparen . [ KW_semicolon KW_oparen KW_obracket KW_cparen KW_comma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production direct_declarator -> KW_oparen declarator KW_cparen

State 105:
## Known stack suffix:
## KW_oparen abstract_declarator
## LR(1) items:
direct_abstract_declarator -> KW_oparen abstract_declarator . KW_cparen [ KW_oparen KW_obracket KW_cparen KW_comma ]
## Transitions:
-- On KW_cparen shift to state 106
## Reductions:

State 106:
## Known stack suffix:
## KW_oparen abstract_declarator KW_cparen
## LR(1) items:
direct_abstract_declarator -> KW_oparen abstract_declarator KW_cparen . [ KW_oparen KW_obracket KW_cparen KW_comma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production direct_abstract_declarator -> KW_oparen abstract_declarator KW_cparen

State 107:
## Known stack suffix:
## declaration_specifiers declarator
## LR(1) items:
parameter_declaration -> declaration_specifiers declarator . [ KW_cparen KW_comma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production parameter_declaration -> declaration_specifiers declarator

State 108:
## Known stack suffix:
## declaration_specifiers abstract_declarator
## LR(1) items:
parameter_declaration -> declaration_specifiers abstract_declarator . [ KW_cparen KW_comma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production parameter_declaration -> declaration_specifiers abstract_declarator

State 109:
## Known stack suffix:
## specifier_qualifier_list struct_declarator_list
## LR(1) items:
struct_declaration -> specifier_qualifier_list struct_declarator_list . KW_semicolon [ Typedef_ident KW_volatile KW_void KW_unsigned KW_union KW_struct KW_signed KW_short KW_long KW_int KW_float KW_enum KW_double KW_const KW_char KW_cbrace ]
## Transitions:
-- On KW_semicolon shift to state 110
## Reductions:

State 110:
## Known stack suffix:
## specifier_qualifier_list struct_declarator_list KW_semicolon
## LR(1) items:
struct_declaration -> specifier_qualifier_list struct_declarator_list KW_semicolon . [ Typedef_ident KW_volatile KW_void KW_unsigned KW_union KW_struct KW_signed KW_short KW_long KW_int KW_float KW_enum KW_double KW_const KW_char KW_cbrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production struct_declaration -> specifier_qualifier_list struct_declarator_list KW_semicolon

State 111:
## Known stack suffix:
## declarator
## LR(1) items:
struct_declarator_list -> declarator . [ KW_semicolon ]
struct_declarator_list -> declarator . KW_comma struct_declarator_list [ KW_semicolon ]
## Transitions:
-- On KW_comma shift to state 112
## Reductions:
-- On KW_semicolon reduce production struct_declarator_list -> declarator

State 112:
## Known stack suffix:
## declarator KW_comma
## LR(1) items:
struct_declarator_list -> declarator KW_comma . struct_declarator_list [ KW_semicolon ]
## Transitions:
-- On KW_times shift to state 58
-- On KW_oparen shift to state 64
-- On Ident shift to state 65
-- On struct_declarator_list shift to state 113
-- On pointer shift to state 66
-- On direct_declarator shift to state 97
-- On declarator shift to state 111
## Reductions:

State 113:
## Known stack suffix:
## declarator KW_comma struct_declarator_list
## LR(1) items:
struct_declarator_list -> declarator KW_comma struct_declarator_list . [ KW_semicolon ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production struct_declarator_list -> declarator KW_comma struct_declarator_list

State 114:
## Known stack suffix:
## struct_or_union KW_obrace
## LR(1) items:
struct_or_union_specifier -> struct_or_union KW_obrace . struct_declaration_list KW_cbrace [ Typedef_ident KW_volatile KW_void KW_unsigned KW_union KW_typedef KW_times KW_struct KW_static KW_signed KW_short KW_semicolon KW_register KW_oparen KW_obracket KW_long KW_int KW_float KW_extern KW_enum KW_double KW_cparen KW_const KW_comma KW_char KW_auto Ident ]
## Transitions:
-- On Typedef_ident shift to state 4
-- On KW_volatile shift to state 5
-- On KW_void shift to state 6
-- On KW_unsigned shift to state 7
-- On KW_union shift to state 8
-- On KW_struct shift to state 10
-- On KW_signed shift to state 12
-- On KW_short shift to state 13
-- On KW_long shift to state 15
-- On KW_int shift to state 16
-- On KW_float shift to state 17
-- On KW_enum shift to state 19
-- On KW_double shift to state 37
-- On KW_const shift to state 38
-- On KW_char shift to state 39
-- On typedef_name shift to state 41
-- On type_specifier shift to state 48
-- On type_qualifier shift to state 49
-- On struct_or_union_specifier shift to state 44
-- On struct_or_union shift to state 45
-- On struct_declaration_list shift to state 115
-- On struct_declaration shift to state 55
-- On specifier_qualifier_list shift to state 57
-- On enum_specifier shift to state 51
## Reductions:

State 115:
## Known stack suffix:
## struct_or_union KW_obrace struct_declaration_list
## LR(1) items:
struct_or_union_specifier -> struct_or_union KW_obrace struct_declaration_list . KW_cbrace [ Typedef_ident KW_volatile KW_void KW_unsigned KW_union KW_typedef KW_times KW_struct KW_static KW_signed KW_short KW_semicolon KW_register KW_oparen KW_obracket KW_long KW_int KW_float KW_extern KW_enum KW_double KW_cparen KW_const KW_comma KW_char KW_auto Ident ]
## Transitions:
-- On KW_cbrace shift to state 116
## Reductions:

State 116:
## Known stack suffix:
## struct_or_union KW_obrace struct_declaration_list KW_cbrace
## LR(1) items:
struct_or_union_specifier -> struct_or_union KW_obrace struct_declaration_list KW_cbrace . [ Typedef_ident KW_volatile KW_void KW_unsigned KW_union KW_typedef KW_times KW_struct KW_static KW_signed KW_short KW_semicolon KW_register KW_oparen KW_obracket KW_long KW_int KW_float KW_extern KW_enum KW_double KW_cparen KW_const KW_comma KW_char KW_auto Ident ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production struct_or_union_specifier -> struct_or_union KW_obrace struct_declaration_list KW_cbrace

State 117:
## Known stack suffix:
## struct_or_union Ident
## LR(1) items:
struct_or_union_specifier -> struct_or_union Ident . KW_obrace struct_declaration_list KW_cbrace [ Typedef_ident KW_volatile KW_void KW_unsigned KW_union KW_typedef KW_times KW_struct KW_static KW_signed KW_short KW_semicolon KW_register KW_oparen KW_obracket KW_long KW_int KW_float KW_extern KW_enum KW_double KW_cparen KW_const KW_comma KW_char KW_auto Ident ]
struct_or_union_specifier -> struct_or_union Ident . [ Typedef_ident KW_volatile KW_void KW_unsigned KW_union KW_typedef KW_times KW_struct KW_static KW_signed KW_short KW_semicolon KW_register KW_oparen KW_obracket KW_long KW_int KW_float KW_extern KW_enum KW_double KW_cparen KW_const KW_comma KW_char KW_auto Ident ]
## Transitions:
-- On KW_obrace shift to state 118
## Reductions:
-- On Typedef_ident reduce production struct_or_union_specifier -> struct_or_union Ident
-- On KW_volatile reduce production struct_or_union_specifier -> struct_or_union Ident
-- On KW_void reduce production struct_or_union_specifier -> struct_or_union Ident
-- On KW_unsigned reduce production struct_or_union_specifier -> struct_or_union Ident
-- On KW_union reduce production struct_or_union_specifier -> struct_or_union Ident
-- On KW_typedef reduce production struct_or_union_specifier -> struct_or_union Ident
-- On KW_times reduce production struct_or_union_specifier -> struct_or_union Ident
-- On KW_struct reduce production struct_or_union_specifier -> struct_or_union Ident
-- On KW_static reduce production struct_or_union_specifier -> struct_or_union Ident
-- On KW_signed reduce production struct_or_union_specifier -> struct_or_union Ident
-- On KW_short reduce production struct_or_union_specifier -> struct_or_union Ident
-- On KW_semicolon reduce production struct_or_union_specifier -> struct_or_union Ident
-- On KW_register reduce production struct_or_union_specifier -> struct_or_union Ident
-- On KW_oparen reduce production struct_or_union_specifier -> struct_or_union Ident
-- On KW_obracket reduce production struct_or_union_specifier -> struct_or_union Ident
-- On KW_long reduce production struct_or_union_specifier -> struct_or_union Ident
-- On KW_int reduce production struct_or_union_specifier -> struct_or_union Ident
-- On KW_float reduce production struct_or_union_specifier -> struct_or_union Ident
-- On KW_extern reduce production struct_or_union_specifier -> struct_or_union Ident
-- On KW_enum reduce production struct_or_union_specifier -> struct_or_union Ident
-- On KW_double reduce production struct_or_union_specifier -> struct_or_union Ident
-- On KW_cparen reduce production struct_or_union_specifier -> struct_or_union Ident
-- On KW_const reduce production struct_or_union_specifier -> struct_or_union Ident
-- On KW_comma reduce production struct_or_union_specifier -> struct_or_union Ident
-- On KW_char reduce production struct_or_union_specifier -> struct_or_union Ident
-- On KW_auto reduce production struct_or_union_specifier -> struct_or_union Ident
-- On Ident reduce production struct_or_union_specifier -> struct_or_union Ident

State 118:
## Known stack suffix:
## struct_or_union Ident KW_obrace
## LR(1) items:
struct_or_union_specifier -> struct_or_union Ident KW_obrace . struct_declaration_list KW_cbrace [ Typedef_ident KW_volatile KW_void KW_unsigned KW_union KW_typedef KW_times KW_struct KW_static KW_signed KW_short KW_semicolon KW_register KW_oparen KW_obracket KW_long KW_int KW_float KW_extern KW_enum KW_double KW_cparen KW_const KW_comma KW_char KW_auto Ident ]
## Transitions:
-- On Typedef_ident shift to state 4
-- On KW_volatile shift to state 5
-- On KW_void shift to state 6
-- On KW_unsigned shift to state 7
-- On KW_union shift to state 8
-- On KW_struct shift to state 10
-- On KW_signed shift to state 12
-- On KW_short shift to state 13
-- On KW_long shift to state 15
-- On KW_int shift to state 16
-- On KW_float shift to state 17
-- On KW_enum shift to state 19
-- On KW_double shift to state 37
-- On KW_const shift to state 38
-- On KW_char shift to state 39
-- On typedef_name shift to state 41
-- On type_specifier shift to state 48
-- On type_qualifier shift to state 49
-- On struct_or_union_specifier shift to state 44
-- On struct_or_union shift to state 45
-- On struct_declaration_list shift to state 119
-- On struct_declaration shift to state 55
-- On specifier_qualifier_list shift to state 57
-- On enum_specifier shift to state 51
## Reductions:

State 119:
## Known stack suffix:
## struct_or_union Ident KW_obrace struct_declaration_list
## LR(1) items:
struct_or_union_specifier -> struct_or_union Ident KW_obrace struct_declaration_list . KW_cbrace [ Typedef_ident KW_volatile KW_void KW_unsigned KW_union KW_typedef KW_times KW_struct KW_static KW_signed KW_short KW_semicolon KW_register KW_oparen KW_obracket KW_long KW_int KW_float KW_extern KW_enum KW_double KW_cparen KW_const KW_comma KW_char KW_auto Ident ]
## Transitions:
-- On KW_cbrace shift to state 120
## Reductions:

State 120:
## Known stack suffix:
## struct_or_union Ident KW_obrace struct_declaration_list KW_cbrace
## LR(1) items:
struct_or_union_specifier -> struct_or_union Ident KW_obrace struct_declaration_list KW_cbrace . [ Typedef_ident KW_volatile KW_void KW_unsigned KW_union KW_typedef KW_times KW_struct KW_static KW_signed KW_short KW_semicolon KW_register KW_oparen KW_obracket KW_long KW_int KW_float KW_extern KW_enum KW_double KW_cparen KW_const KW_comma KW_char KW_auto Ident ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production struct_or_union_specifier -> struct_or_union Ident KW_obrace struct_declaration_list KW_cbrace

State 121:
## Known stack suffix:
## type_qualifier declaration_specifiers
## LR(1) items:
declaration_specifiers -> type_qualifier declaration_specifiers . [ KW_times KW_semicolon KW_oparen KW_obracket KW_cparen KW_comma Ident ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production declaration_specifiers -> type_qualifier declaration_specifiers

State 122:
## Known stack suffix:
## type_specifier declaration_specifiers
## LR(1) items:
declaration_specifiers -> type_specifier declaration_specifiers . [ KW_times KW_semicolon KW_oparen KW_obracket KW_cparen KW_comma Ident ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production declaration_specifiers -> type_specifier declaration_specifiers

State 123:
## Known stack suffix:
## translation_unit
## LR(1) items:
translation_unit' -> translation_unit . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, accept translation_unit

State 124:
## Known stack suffix:
## declaration_specifiers
## LR(1) items:
declaration -> declaration_specifiers . init_declarator_list KW_semicolon [ Typedef_ident KW_volatile KW_void KW_unsigned KW_union KW_typedef KW_struct KW_static KW_signed KW_short KW_register KW_long KW_int KW_float KW_extern KW_enum KW_double KW_const KW_char KW_auto Endofstream ]
declaration -> declaration_specifiers . KW_semicolon [ Typedef_ident KW_volatile KW_void KW_unsigned KW_union KW_typedef KW_struct KW_static KW_signed KW_short KW_register KW_long KW_int KW_float KW_extern KW_enum KW_double KW_const KW_char KW_auto Endofstream ]
## Transitions:
-- On KW_times shift to state 58
-- On KW_semicolon shift to state 125
-- On KW_oparen shift to state 64
-- On Ident shift to state 65
-- On pointer shift to state 66
-- On init_declarator_list shift to state 126
-- On direct_declarator shift to state 97
-- On declarator shift to state 128
## Reductions:

State 125:
## Known stack suffix:
## declaration_specifiers KW_semicolon
## LR(1) items:
declaration -> declaration_specifiers KW_semicolon . [ Typedef_ident KW_volatile KW_void KW_unsigned KW_union KW_typedef KW_struct KW_static KW_signed KW_short KW_register KW_long KW_int KW_float KW_extern KW_enum KW_double KW_const KW_char KW_auto Endofstream ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production declaration -> declaration_specifiers KW_semicolon

State 126:
## Known stack suffix:
## declaration_specifiers init_declarator_list
## LR(1) items:
declaration -> declaration_specifiers init_declarator_list . KW_semicolon [ Typedef_ident KW_volatile KW_void KW_unsigned KW_union KW_typedef KW_struct KW_static KW_signed KW_short KW_register KW_long KW_int KW_float KW_extern KW_enum KW_double KW_const KW_char KW_auto Endofstream ]
## Transitions:
-- On KW_semicolon shift to state 127
## Reductions:

State 127:
## Known stack suffix:
## declaration_specifiers init_declarator_list KW_semicolon
## LR(1) items:
declaration -> declaration_specifiers init_declarator_list KW_semicolon . [ Typedef_ident KW_volatile KW_void KW_unsigned KW_union KW_typedef KW_struct KW_static KW_signed KW_short KW_register KW_long KW_int KW_float KW_extern KW_enum KW_double KW_const KW_char KW_auto Endofstream ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production declaration -> declaration_specifiers init_declarator_list KW_semicolon

State 128:
## Known stack suffix:
## declarator
## LR(1) items:
init_declarator_list -> declarator . [ KW_semicolon ]
init_declarator_list -> declarator . KW_comma init_declarator_list [ KW_semicolon ]
## Transitions:
-- On KW_comma shift to state 129
## Reductions:
-- On KW_semicolon reduce production init_declarator_list -> declarator

State 129:
## Known stack suffix:
## declarator KW_comma
## LR(1) items:
init_declarator_list -> declarator KW_comma . init_declarator_list [ KW_semicolon ]
## Transitions:
-- On KW_times shift to state 58
-- On KW_oparen shift to state 64
-- On Ident shift to state 65
-- On pointer shift to state 66
-- On init_declarator_list shift to state 130
-- On direct_declarator shift to state 97
-- On declarator shift to state 128
## Reductions:

State 130:
## Known stack suffix:
## declarator KW_comma init_declarator_list
## LR(1) items:
init_declarator_list -> declarator KW_comma init_declarator_list . [ KW_semicolon ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production init_declarator_list -> declarator KW_comma init_declarator_list

State 131:
## Known stack suffix:
## declaration
## LR(1) items:
translation_unit -> declaration . Endofstream [ # ]
translation_unit -> declaration . translation_unit [ # ]
## Transitions:
-- On Typedef_ident shift to state 4
-- On KW_volatile shift to state 5
-- On KW_void shift to state 6
-- On KW_unsigned shift to state 7
-- On KW_union shift to state 8
-- On KW_typedef shift to state 9
-- On KW_struct shift to state 10
-- On KW_static shift to state 11
-- On KW_signed shift to state 12
-- On KW_short shift to state 13
-- On KW_register shift to state 14
-- On KW_long shift to state 15
-- On KW_int shift to state 16
-- On KW_float shift to state 17
-- On KW_extern shift to state 18
-- On KW_enum shift to state 19
-- On KW_double shift to state 37
-- On KW_const shift to state 38
-- On KW_char shift to state 39
-- On KW_auto shift to state 40
-- On Endofstream shift to state 132
-- On typedef_name shift to state 41
-- On type_specifier shift to state 42
-- On type_qualifier shift to state 43
-- On translation_unit shift to state 133
-- On struct_or_union_specifier shift to state 44
-- On struct_or_union shift to state 45
-- On storage_class_specifier shift to state 69
-- On enum_specifier shift to state 51
-- On declaration_specifiers shift to state 124
-- On declaration shift to state 131
## Reductions:

State 132:
## Known stack suffix:
## declaration Endofstream
## LR(1) items:
translation_unit -> declaration Endofstream . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production translation_unit -> declaration Endofstream

State 133:
## Known stack suffix:
## declaration translation_unit
## LR(1) items:
translation_unit -> declaration translation_unit . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production translation_unit -> declaration translation_unit

