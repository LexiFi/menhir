File "cigen-cparser.mly", line 124, characters 18-36:
Warning: the token Chars_extended_raw is unused.
File "cigen-cparser.mly", line 123, characters 18-27:
Warning: the token Chars_raw is unused.
File "cigen-cparser.mly", line 120, characters 17-23:
Warning: the token Double is unused.
File "cigen-cparser.mly", line 121, characters 17-28:
Warning: the token Double_long is unused.
File "cigen-cparser.mly", line 122, characters 17-22:
Warning: the token Float is unused.
File "cigen-cparser.mly", line 118, characters 15-27:
Warning: the token Integer_long is unused.
File "cigen-cparser.mly", line 119, characters 15-31:
Warning: the token Integer_unsigned is unused.
File "cigen-cparser.mly", line 74, characters 7-16:
Warning: the token KW_access is unused.
File "cigen-cparser.mly", line 68, characters 7-13:
Warning: the token KW_add is unused.
File "cigen-cparser.mly", line 78, characters 7-16:
Warning: the token KW_add_to is unused.
File "cigen-cparser.mly", line 96, characters 7-13:
Warning: the token KW_and is unused.
File "cigen-cparser.mly", line 86, characters 7-20:
Warning: the token KW_assign_add is unused.
File "cigen-cparser.mly", line 90, characters 7-20:
Warning: the token KW_assign_and is unused.
File "cigen-cparser.mly", line 84, characters 7-20:
Warning: the token KW_assign_div is unused.
File "cigen-cparser.mly", line 91, characters 7-21:
Warning: the token KW_assign_exor is unused.
File "cigen-cparser.mly", line 88, characters 7-21:
Warning: the token KW_assign_left is unused.
File "cigen-cparser.mly", line 85, characters 7-20:
Warning: the token KW_assign_mod is unused.
File "cigen-cparser.mly", line 92, characters 7-19:
Warning: the token KW_assign_or is unused.
File "cigen-cparser.mly", line 89, characters 7-22:
Warning: the token KW_assign_right is unused.
File "cigen-cparser.mly", line 87, characters 7-20:
Warning: the token KW_assign_sub is unused.
File "cigen-cparser.mly", line 83, characters 7-22:
Warning: the token KW_assign_times is unused.
File "cigen-cparser.mly", line 34, characters 7-15:
Warning: the token KW_break is unused.
File "cigen-cparser.mly", line 35, characters 7-14:
Warning: the token KW_case is unused.
File "cigen-cparser.mly", line 107, characters 7-15:
Warning: the token KW_colon is unused.
File "cigen-cparser.mly", line 80, characters 7-20:
Warning: the token KW_complement is unused.
File "cigen-cparser.mly", line 38, characters 7-18:
Warning: the token KW_continue is unused.
File "cigen-cparser.mly", line 39, characters 7-17:
Warning: the token KW_default is unused.
File "cigen-cparser.mly", line 71, characters 7-13:
Warning: the token KW_div is unused.
File "cigen-cparser.mly", line 40, characters 7-12:
Warning: the token KW_do is unused.
File "cigen-cparser.mly", line 42, characters 7-14:
Warning: the token KW_else is unused.
File "cigen-cparser.mly", line 98, characters 7-15:
Warning: the token KW_equal is unused.
File "cigen-cparser.mly", line 97, characters 7-14:
Warning: the token KW_exor is unused.
File "cigen-cparser.mly", line 46, characters 7-13:
Warning: the token KW_for is unused.
File "cigen-cparser.mly", line 47, characters 7-14:
Warning: the token KW_goto is unused.
File "cigen-cparser.mly", line 103, characters 7-17:
Warning: the token KW_greater is unused.
File "cigen-cparser.mly", line 105, characters 7-19:
Warning: the token KW_greatereq is unused.
File "cigen-cparser.mly", line 48, characters 7-12:
Warning: the token KW_if is unused.
File "cigen-cparser.mly", line 94, characters 7-18:
Warning: the token KW_lazy_and is unused.
File "cigen-cparser.mly", line 93, characters 7-17:
Warning: the token KW_lazy_or is unused.
File "cigen-cparser.mly", line 100, characters 7-14:
Warning: the token KW_left is unused.
File "cigen-cparser.mly", line 102, characters 7-15:
Warning: the token KW_lower is unused.
File "cigen-cparser.mly", line 104, characters 7-17:
Warning: the token KW_lowereq is unused.
File "cigen-cparser.mly", line 72, characters 7-13:
Warning: the token KW_mod is unused.
File "cigen-cparser.mly", line 81, characters 7-13:
Warning: the token KW_not is unused.
File "cigen-cparser.mly", line 95, characters 7-12:
Warning: the token KW_or is unused.
File "cigen-cparser.mly", line 73, characters 7-15:
Warning: the token KW_point is unused.
File "cigen-cparser.mly", line 52, characters 7-16:
Warning: the token KW_return is unused.
File "cigen-cparser.mly", line 101, characters 7-15:
Warning: the token KW_right is unused.
File "cigen-cparser.mly", line 55, characters 7-16:
Warning: the token KW_sizeof is unused.
File "cigen-cparser.mly", line 69, characters 7-13:
Warning: the token KW_sub is unused.
File "cigen-cparser.mly", line 79, characters 7-18:
Warning: the token KW_sub_from is unused.
File "cigen-cparser.mly", line 58, characters 7-16:
Warning: the token KW_switch is unused.
File "cigen-cparser.mly", line 75, characters 7-14:
Warning: the token KW_test is unused.
File "cigen-cparser.mly", line 99, characters 7-17:
Warning: the token KW_unequal is unused.
File "cigen-cparser.mly", line 64, characters 7-15:
Warning: the token KW_while is unused.
File "cigen-cparser.mly", line 134, characters 7-16:
Warning: the token Nulltoken is unused.
File "cigen-cparser.mly", line 126, characters 18-37:
Warning: the token String_extended_raw is unused.
File "cigen-cparser.mly", line 125, characters 18-28:
Warning: the token String_raw is unused.
Grammar has 27 nonterminal symbols, among which 2 start symbols.
Grammar has 92 terminal symbols.
Grammar has 90 productions.
nullable(typedef_name) = false
nullable(type_specifier) = false
nullable(type_qualifier_list) = false
nullable(type_qualifier) = false
nullable(translation_unit) = false
nullable(struct_or_union_specifier) = false
nullable(struct_or_union) = false
nullable(struct_declarator_list) = false
nullable(struct_declaration_list) = false
nullable(struct_declaration) = false
nullable(storage_class_specifier) = false
nullable(specifier_qualifier_list) = false
nullable(pointer) = false
nullable(parameter_type_list) = false
nullable(parameter_list) = false
nullable(parameter_declaration) = false
nullable(nothing) = false
nullable(init_declarator_list) = false
nullable(enumerator_list) = false
nullable(enumerator) = false
nullable(enum_specifier) = false
nullable(direct_declarator) = false
nullable(direct_abstract_declarator) = false
nullable(declarator) = false
nullable(declaration_specifiers) = false
nullable(declaration) = false
nullable(abstract_declarator) = false
first(typedef_name) = Typedef_ident
first(type_specifier) = Typedef_ident KW_void KW_unsigned KW_union KW_struct KW_signed KW_short KW_long KW_int KW_float KW_enum KW_double KW_char
first(type_qualifier_list) = KW_volatile KW_const
first(type_qualifier) = KW_volatile KW_const
first(translation_unit) = Typedef_ident KW_volatile KW_void KW_unsigned KW_union KW_typedef KW_struct KW_static KW_signed KW_short KW_register KW_long KW_int KW_float KW_extern KW_enum KW_double KW_const KW_char KW_auto
first(struct_or_union_specifier) = KW_union KW_struct
first(struct_or_union) = KW_union KW_struct
first(struct_declarator_list) = KW_times KW_oparen Ident
first(struct_declaration_list) = Typedef_ident KW_volatile KW_void KW_unsigned KW_union KW_struct KW_signed KW_short KW_long KW_int KW_float KW_enum KW_double KW_const KW_char
first(struct_declaration) = Typedef_ident KW_volatile KW_void KW_unsigned KW_union KW_struct KW_signed KW_short KW_long KW_int KW_float KW_enum KW_double KW_const KW_char
first(storage_class_specifier) = KW_typedef KW_static KW_register KW_extern KW_auto
first(specifier_qualifier_list) = Typedef_ident KW_volatile KW_void KW_unsigned KW_union KW_struct KW_signed KW_short KW_long KW_int KW_float KW_enum KW_double KW_const KW_char
first(pointer) = KW_times
first(parameter_type_list) = Typedef_ident KW_volatile KW_void KW_unsigned KW_union KW_typedef KW_struct KW_static KW_signed KW_short KW_register KW_long KW_int KW_float KW_extern KW_enum KW_double KW_const KW_char KW_auto
first(parameter_list) = Typedef_ident KW_volatile KW_void KW_unsigned KW_union KW_typedef KW_struct KW_static KW_signed KW_short KW_register KW_long KW_int KW_float KW_extern KW_enum KW_double KW_const KW_char KW_auto
first(parameter_declaration) = Typedef_ident KW_volatile KW_void KW_unsigned KW_union KW_typedef KW_struct KW_static KW_signed KW_short KW_register KW_long KW_int KW_float KW_extern KW_enum KW_double KW_const KW_char KW_auto
first(nothing) = Endofstream
first(init_declarator_list) = KW_times KW_oparen Ident
first(enumerator_list) = Ident
first(enumerator) = Ident
first(enum_specifier) = KW_enum
first(direct_declarator) = KW_oparen Ident
first(direct_abstract_declarator) = KW_oparen KW_obracket
first(declarator) = KW_times KW_oparen Ident
first(declaration_specifiers) = Typedef_ident KW_volatile KW_void KW_unsigned KW_union KW_typedef KW_struct KW_static KW_signed KW_short KW_register KW_long KW_int KW_float KW_extern KW_enum KW_double KW_const KW_char KW_auto
first(declaration) = Typedef_ident KW_volatile KW_void KW_unsigned KW_union KW_typedef KW_struct KW_static KW_signed KW_short KW_register KW_long KW_int KW_float KW_extern KW_enum KW_double KW_const KW_char KW_auto
first(abstract_declarator) = KW_times KW_oparen KW_obracket
minimal(typedef_name) = (* 1 *) Typedef_ident
minimal(type_specifier) = (* 1 *) KW_void
minimal(type_qualifier_list) = (* 1 *) KW_const
minimal(type_qualifier) = (* 1 *) KW_const
minimal(translation_unit) = (* 3 *) KW_auto KW_semicolon Endofstream
minimal(struct_or_union_specifier) = (* 2 *) KW_struct Ident
minimal(struct_or_union) = (* 1 *) KW_struct
minimal(struct_declarator_list) = (* 1 *) Ident
minimal(struct_declaration_list) = (* 3 *) KW_const Ident KW_semicolon
minimal(struct_declaration) = (* 3 *) KW_const Ident KW_semicolon
minimal(storage_class_specifier) = (* 1 *) KW_auto
minimal(specifier_qualifier_list) = (* 1 *) KW_const
minimal(pointer) = (* 1 *) KW_times
minimal(parameter_type_list) = (* 1 *) KW_auto
minimal(parameter_list) = (* 1 *) KW_auto
minimal(parameter_declaration) = (* 1 *) KW_auto
minimal(nothing) = (* 1 *) Endofstream
minimal(init_declarator_list) = (* 1 *) Ident
minimal(enumerator_list) = (* 1 *) Ident
minimal(enumerator) = (* 1 *) Ident
minimal(enum_specifier) = (* 2 *) KW_enum Ident
minimal(direct_declarator) = (* 1 *) Ident
minimal(direct_abstract_declarator) = (* 2 *) KW_obracket KW_cbracket
minimal(declarator) = (* 1 *) Ident
minimal(declaration_specifiers) = (* 1 *) KW_auto
minimal(declaration) = (* 2 *) KW_auto KW_semicolon
minimal(abstract_declarator) = (* 1 *) KW_times
maximal(typedef_name) = 1
maximal(type_specifier) = infinity
maximal(type_qualifier_list) = infinity
maximal(type_qualifier) = 1
maximal(translation_unit) = infinity
maximal(struct_or_union_specifier) = infinity
maximal(struct_or_union) = 1
maximal(struct_declarator_list) = infinity
maximal(struct_declaration_list) = infinity
maximal(struct_declaration) = infinity
maximal(storage_class_specifier) = 1
maximal(specifier_qualifier_list) = infinity
maximal(pointer) = infinity
maximal(parameter_type_list) = infinity
maximal(parameter_list) = infinity
maximal(parameter_declaration) = infinity
maximal(nothing) = 1
maximal(init_declarator_list) = infinity
maximal(enumerator_list) = infinity
maximal(enumerator) = 3
maximal(enum_specifier) = infinity
maximal(direct_declarator) = infinity
maximal(direct_abstract_declarator) = infinity
maximal(declarator) = infinity
maximal(declaration_specifiers) = infinity
maximal(declaration) = infinity
maximal(abstract_declarator) = infinity
follow(typedef_name) = Typedef_ident KW_volatile KW_void KW_unsigned KW_union KW_typedef KW_times KW_struct KW_static KW_signed KW_short KW_semicolon KW_register KW_oparen KW_obracket KW_long KW_int KW_float KW_extern KW_enum KW_double KW_cparen KW_const KW_comma KW_char KW_auto Ident
follow(type_specifier) = Typedef_ident KW_volatile KW_void KW_unsigned KW_union KW_typedef KW_times KW_struct KW_static KW_signed KW_short KW_semicolon KW_register KW_oparen KW_obracket KW_long KW_int KW_float KW_extern KW_enum KW_double KW_cparen KW_const KW_comma KW_char KW_auto Ident
follow(type_qualifier_list) = KW_times KW_oparen KW_obracket KW_cparen KW_comma Ident
follow(type_qualifier) = Typedef_ident KW_volatile KW_void KW_unsigned KW_union KW_typedef KW_times KW_struct KW_static KW_signed KW_short KW_semicolon KW_register KW_oparen KW_obracket KW_long KW_int KW_float KW_extern KW_enum KW_double KW_cparen KW_const KW_comma KW_char KW_auto Ident
follow(translation_unit) = #
follow(struct_or_union_specifier) = Typedef_ident KW_volatile KW_void KW_unsigned KW_union KW_typedef KW_times KW_struct KW_static KW_signed KW_short KW_semicolon KW_register KW_oparen KW_obracket KW_long KW_int KW_float KW_extern KW_enum KW_double KW_cparen KW_const KW_comma KW_char KW_auto Ident
follow(struct_or_union) = Typedef_ident KW_obrace Ident
follow(struct_declarator_list) = KW_semicolon
follow(struct_declaration_list) = KW_cbrace
follow(struct_declaration) = Typedef_ident KW_volatile KW_void KW_unsigned KW_union KW_struct KW_signed KW_short KW_long KW_int KW_float KW_enum KW_double KW_const KW_char KW_cbrace
follow(storage_class_specifier) = Typedef_ident KW_volatile KW_void KW_unsigned KW_union KW_typedef KW_times KW_struct KW_static KW_signed KW_short KW_semicolon KW_register KW_oparen KW_obracket KW_long KW_int KW_float KW_extern KW_enum KW_double KW_cparen KW_const KW_comma KW_char KW_auto Ident
follow(specifier_qualifier_list) = KW_times KW_oparen Ident
follow(pointer) = KW_oparen KW_obracket KW_cparen KW_comma Ident
follow(parameter_type_list) = KW_cparen
follow(parameter_list) = KW_cparen KW_comma
follow(parameter_declaration) = KW_cparen KW_comma
follow(nothing) = #
follow(init_declarator_list) = KW_semicolon
follow(enumerator_list) = KW_cbrace
follow(enumerator) = KW_comma KW_cbrace
follow(enum_specifier) = Typedef_ident KW_volatile KW_void KW_unsigned KW_union KW_typedef KW_times KW_struct KW_static KW_signed KW_short KW_semicolon KW_register KW_oparen KW_obracket KW_long KW_int KW_float KW_extern KW_enum KW_double KW_cparen KW_const KW_comma KW_char KW_auto Ident
follow(direct_declarator) = KW_semicolon KW_oparen KW_obracket KW_cparen KW_comma
follow(direct_abstract_declarator) = KW_oparen KW_obracket KW_cparen KW_comma
follow(declarator) = KW_semicolon KW_cparen KW_comma
follow(declaration_specifiers) = KW_times KW_semicolon KW_oparen KW_obracket KW_cparen KW_comma Ident
follow(declaration) = Typedef_ident KW_volatile KW_void KW_unsigned KW_union KW_typedef KW_struct KW_static KW_signed KW_short KW_register KW_long KW_int KW_float KW_extern KW_enum KW_double KW_const KW_char KW_auto Endofstream
follow(abstract_declarator) = KW_cparen KW_comma
Built an LR(0) automaton with 134 states.
The grammar is SLR(1).
The construction mode is pager.
Built an LR(1) automaton with 134 states.
68 out of 134 states have a default reduction.
30 out of 134 states are represented.
0 out of 123 symbols keep track of their start position.
0 out of 123 symbols keep track of their end position.
54 out of 92 productions exploit shiftreduce optimization.
0 out of 134 states can peek at an error.
393 functions before inlining, 59 functions after inlining.
