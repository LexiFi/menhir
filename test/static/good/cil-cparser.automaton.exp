State 0:
## Known stack suffix:
##
## LR(1) items:
file' -> . file [ # ]
## Transitions:
-- On VOLATILE shift to state 1
-- On VOID shift to state 2
-- On UNSIGNED shift to state 3
-- On UNION shift to state 4
-- On TYPEOF shift to state 9
-- On TYPEDEF shift to state 11
-- On THREAD shift to state 12
-- On STRUCT shift to state 13
-- On STATIC shift to state 15
-- On SIGNED shift to state 16
-- On SHORT shift to state 17
-- On SEMICOLON shift to state 766
-- On RESTRICT shift to state 18
-- On REGISTER shift to state 19
-- On PRAGMA_LINE shift to state 767
-- On PRAGMA shift to state 768
-- On NAMED_TYPE shift to state 20
-- On MSATTR shift to state 21
-- On LONG shift to state 22
-- On INT64 shift to state 23
-- On INT shift to state 24
-- On INLINE shift to state 25
-- On IDENT shift to state 773
-- On FLOAT shift to state 26
-- On EXTERN shift to state 896
-- On ENUM shift to state 28
-- On DOUBLE shift to state 66
-- On DECLSPEC shift to state 67
-- On CONST shift to state 78
-- On CHAR shift to state 79
-- On AUTO shift to state 80
-- On AT_TRANSFORMEXPR shift to state 900
-- On AT_TRANSFORM shift to state 908
-- On AT_SPECIFIER shift to state 81
-- On ATTRIBUTE shift to state 85
-- On ASM shift to state 925
-- On type_spec shift to state 89
-- On location shift to state 930
-- On globals shift to state 1020
-- On global shift to state 1018
-- On function_def_start shift to state 937
-- On function_def shift to state 939
-- On file shift to state 1021
-- On declaration shift to state 940
-- On decl_spec_list shift to state 941
-- On cvspec shift to state 92
-- On attribute_nocv shift to state 95
## Reductions:
-- On #
--   reduce production globals ->
-- On error
--   reduce production location ->
** End-of-stream conflict on error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER PRAGMA_LINE PRAGMA NAMED_TYPE MSATTR LONG INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_TRANSFORMEXPR AT_TRANSFORM AT_SPECIFIER ATTRIBUTE ASM
**   There is a tension between
**   (1) reducing production globals ->
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 1:
## Known stack suffix:
## VOLATILE
## LR(1) items:
cvspec -> VOLATILE . [ VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG LBRACKET INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST COMMA COLON CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ]
## Transitions:
## Reductions:
-- On VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG LBRACKET INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST COMMA COLON CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE
--   reduce production cvspec -> VOLATILE

State 2:
## Known stack suffix:
## VOID
## LR(1) items:
type_spec -> VOID . [ VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG LBRACKET INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST COMMA COLON CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ]
## Transitions:
## Reductions:
-- On VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG LBRACKET INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST COMMA COLON CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE
--   reduce production type_spec -> VOID

State 3:
## Known stack suffix:
## UNSIGNED
## LR(1) items:
type_spec -> UNSIGNED . [ VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG LBRACKET INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST COMMA COLON CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ]
## Transitions:
## Reductions:
-- On VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG LBRACKET INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST COMMA COLON CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE
--   reduce production type_spec -> UNSIGNED

State 4:
## Known stack suffix:
## UNION
## LR(1) items:
type_spec -> UNION . id_or_typename [ VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG LBRACKET INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST COMMA COLON CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ]
type_spec -> UNION . id_or_typename LBRACE struct_decl_list RBRACE [ VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG LBRACKET INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST COMMA COLON CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ]
type_spec -> UNION . LBRACE struct_decl_list RBRACE [ VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG LBRACKET INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST COMMA COLON CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ]
type_spec -> UNION . just_attributes id_or_typename LBRACE struct_decl_list RBRACE [ VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG LBRACKET INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST COMMA COLON CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ]
type_spec -> UNION . just_attributes LBRACE struct_decl_list RBRACE [ VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG LBRACKET INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST COMMA COLON CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ]
## Transitions:
-- On NAMED_TYPE shift to state 5
-- On LBRACE shift to state 6
-- On IDENT shift to state 205
-- On DECLSPEC shift to state 689
-- On AT_NAME shift to state 206
-- On ATTRIBUTE shift to state 691
-- On just_attributes shift to state 754
-- On just_attribute shift to state 705
-- On id_or_typename shift to state 762
## Reductions:

State 5:
## Known stack suffix:
## NAMED_TYPE
## LR(1) items:
id_or_typename -> NAMED_TYPE . [ VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF TILDE THREAD SUP_SUP_EQ SUP_SUP SUP_EQ SUP STRUCT STATIC STAR_EQ STAR SLASH_EQ SLASH SIZEOF SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACKET RBRACE QUEST PRETTY_FUNCTION__ PRAGMA_EOL PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT NAMED_TYPE MSATTR MINUS_MINUS MINUS_EQ MINUS LPAREN LONG LBRACKET LBRACE INT64 INT INLINE INF_INF_EQ INF_INF INF_EQ INF IDENT FUNCTION__ FLOAT EXTERN EXCLAM_EQ EXCLAM EQ_EQ EQ ENUM ELLIPSIS DOUBLE DOT DECLSPEC CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONST COMMA COLON CIRC_EQ CIRC CHAR BUILTIN_VA_ARG AUTO AT_SPECIFIER AT_NAME AT_EXPR ATTRIBUTE ASM ARROW AND_EQ AND_AND AND ALIGNOF ]
## Transitions:
## Reductions:
-- On VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF TILDE THREAD SUP_SUP_EQ SUP_SUP SUP_EQ SUP STRUCT STATIC STAR_EQ STAR SLASH_EQ SLASH SIZEOF SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACKET RBRACE QUEST PRETTY_FUNCTION__ PRAGMA_EOL PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT NAMED_TYPE MSATTR MINUS_MINUS MINUS_EQ MINUS LPAREN LONG LBRACKET LBRACE INT64 INT INLINE INF_INF_EQ INF_INF INF_EQ INF IDENT FUNCTION__ FLOAT EXTERN EXCLAM_EQ EXCLAM EQ_EQ EQ ENUM ELLIPSIS DOUBLE DOT DECLSPEC CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONST COMMA COLON CIRC_EQ CIRC CHAR BUILTIN_VA_ARG AUTO AT_SPECIFIER AT_NAME AT_EXPR ATTRIBUTE ASM ARROW AND_EQ AND_AND AND ALIGNOF
--   reduce production id_or_typename -> NAMED_TYPE

State 6:
## Known stack suffix:
## UNION LBRACE
## LR(1) items:
type_spec -> UNION LBRACE . struct_decl_list RBRACE [ VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG LBRACKET INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST COMMA COLON CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ]
## Transitions:
-- On error shift to state 7
-- On VOLATILE shift to state 1
-- On VOID shift to state 2
-- On UNSIGNED shift to state 3
-- On UNION shift to state 4
-- On TYPEOF shift to state 9
-- On TYPEDEF shift to state 11
-- On THREAD shift to state 12
-- On STRUCT shift to state 13
-- On STATIC shift to state 15
-- On SIGNED shift to state 16
-- On SHORT shift to state 17
-- On SEMICOLON shift to state 716
-- On RESTRICT shift to state 18
-- On REGISTER shift to state 19
-- On NAMED_TYPE shift to state 20
-- On MSATTR shift to state 21
-- On LONG shift to state 22
-- On INT64 shift to state 23
-- On INT shift to state 24
-- On INLINE shift to state 25
-- On FLOAT shift to state 26
-- On EXTERN shift to state 27
-- On ENUM shift to state 28
-- On DOUBLE shift to state 66
-- On DECLSPEC shift to state 67
-- On CONST shift to state 78
-- On CHAR shift to state 79
-- On AUTO shift to state 80
-- On AT_SPECIFIER shift to state 81
-- On ATTRIBUTE shift to state 85
-- On type_spec shift to state 89
-- On struct_decl_list shift to state 752
-- On decl_spec_list shift to state 718
-- On cvspec shift to state 92
-- On attribute_nocv shift to state 95
## Reductions:
-- On RBRACE
--   reduce production struct_decl_list ->

State 7:
## Known stack suffix:
## error
## LR(1) items:
struct_decl_list -> error . SEMICOLON struct_decl_list [ RBRACE ]
## Transitions:
-- On SEMICOLON shift to state 8
## Reductions:

State 8:
## Known stack suffix:
## error SEMICOLON
## LR(1) items:
struct_decl_list -> error SEMICOLON . struct_decl_list [ RBRACE ]
## Transitions:
-- On error shift to state 7
-- On VOLATILE shift to state 1
-- On VOID shift to state 2
-- On UNSIGNED shift to state 3
-- On UNION shift to state 4
-- On TYPEOF shift to state 9
-- On TYPEDEF shift to state 11
-- On THREAD shift to state 12
-- On STRUCT shift to state 13
-- On STATIC shift to state 15
-- On SIGNED shift to state 16
-- On SHORT shift to state 17
-- On SEMICOLON shift to state 716
-- On RESTRICT shift to state 18
-- On REGISTER shift to state 19
-- On NAMED_TYPE shift to state 20
-- On MSATTR shift to state 21
-- On LONG shift to state 22
-- On INT64 shift to state 23
-- On INT shift to state 24
-- On INLINE shift to state 25
-- On FLOAT shift to state 26
-- On EXTERN shift to state 27
-- On ENUM shift to state 28
-- On DOUBLE shift to state 66
-- On DECLSPEC shift to state 67
-- On CONST shift to state 78
-- On CHAR shift to state 79
-- On AUTO shift to state 80
-- On AT_SPECIFIER shift to state 81
-- On ATTRIBUTE shift to state 85
-- On type_spec shift to state 89
-- On struct_decl_list shift to state 751
-- On decl_spec_list shift to state 718
-- On cvspec shift to state 92
-- On attribute_nocv shift to state 95
## Reductions:
-- On RBRACE
--   reduce production struct_decl_list ->

State 9:
## Known stack suffix:
## TYPEOF
## LR(1) items:
type_spec -> TYPEOF . LPAREN expression RPAREN [ VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG LBRACKET INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST COMMA COLON CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ]
type_spec -> TYPEOF . LPAREN type_name RPAREN [ VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG LBRACKET INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST COMMA COLON CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ]
## Transitions:
-- On LPAREN shift to state 10
## Reductions:

State 10:
## Known stack suffix:
## TYPEOF LPAREN
## LR(1) items:
type_spec -> TYPEOF LPAREN . expression RPAREN [ VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG LBRACKET INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST COMMA COLON CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ]
type_spec -> TYPEOF LPAREN . type_name RPAREN [ VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG LBRACKET INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST COMMA COLON CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ]
## Transitions:
-- On VOLATILE shift to state 1
-- On VOID shift to state 2
-- On UNSIGNED shift to state 3
-- On UNION shift to state 4
-- On TYPEOF shift to state 9
-- On TYPEDEF shift to state 11
-- On TILDE shift to state 32
-- On THREAD shift to state 12
-- On STRUCT shift to state 13
-- On STATIC shift to state 15
-- On STAR shift to state 33
-- On SIZEOF shift to state 34
-- On SIGNED shift to state 16
-- On SHORT shift to state 17
-- On RESTRICT shift to state 18
-- On REGISTER shift to state 19
-- On PRETTY_FUNCTION__ shift to state 35
-- On PLUS_PLUS shift to state 36
-- On PLUS shift to state 37
-- On NAMED_TYPE shift to state 20
-- On MSATTR shift to state 21
-- On MINUS_MINUS shift to state 38
-- On MINUS shift to state 39
-- On LPAREN shift to state 40
-- On LONG shift to state 22
-- On INT64 shift to state 23
-- On INT shift to state 24
-- On INLINE shift to state 25
-- On IDENT shift to state 45
-- On FUNCTION__ shift to state 46
-- On FLOAT shift to state 26
-- On EXTERN shift to state 27
-- On EXCLAM shift to state 47
-- On ENUM shift to state 28
-- On DOUBLE shift to state 66
-- On DECLSPEC shift to state 67
-- On CST_WSTRING shift to state 48
-- On CST_WCHAR shift to state 49
-- On CST_STRING shift to state 50
-- On CST_INT shift to state 51
-- On CST_FLOAT shift to state 52
-- On CST_CHAR shift to state 53
-- On CONST shift to state 78
-- On CHAR shift to state 79
-- On BUILTIN_VA_ARG shift to state 54
-- On AUTO shift to state 80
-- On AT_SPECIFIER shift to state 81
-- On AT_EXPR shift to state 56
-- On ATTRIBUTE shift to state 85
-- On AND_AND shift to state 60
-- On AND shift to state 62
-- On ALIGNOF shift to state 63
-- On wstring_list shift to state 98
-- On unary_expression shift to state 101
-- On type_spec shift to state 89
-- On type_name shift to state 747
-- On string_list shift to state 106
-- On string_constant shift to state 108
-- On shift_expression shift to state 109
-- On relational_expression shift to state 116
-- On primary_expression shift to state 111
-- On postfix_expression shift to state 112
-- On paren_comma_expression shift to state 120
-- On one_string shift to state 121
-- On multiplicative_expression shift to state 122
-- On logical_or_expression shift to state 143
-- On logical_and_expression shift to state 147
-- On expression shift to state 749
-- On equality_expression shift to state 149
-- On decl_spec_list shift to state 245
-- On cvspec shift to state 92
-- On constant shift to state 124
-- On conditional_expression shift to state 167
-- On cast_expression shift to state 169
-- On bitwise_xor_expression shift to state 154
-- On bitwise_or_expression shift to state 164
-- On bitwise_and_expression shift to state 162
-- On attribute_nocv shift to state 95
-- On assignment_expression shift to state 192
-- On additive_expression shift to state 136
## Reductions:

State 11:
## Known stack suffix:
## TYPEDEF
## LR(1) items:
decl_spec_list -> TYPEDEF . decl_spec_list_opt [ STAR SEMICOLON RPAREN NAMED_TYPE LPAREN LBRACKET IDENT COMMA COLON AT_NAME ]
## Transitions:
-- On VOLATILE shift to state 1
-- On VOID shift to state 2
-- On UNSIGNED shift to state 3
-- On UNION shift to state 4
-- On TYPEOF shift to state 9
-- On TYPEDEF shift to state 11
-- On THREAD shift to state 12
-- On STRUCT shift to state 13
-- On STATIC shift to state 15
-- On SIGNED shift to state 16
-- On SHORT shift to state 17
-- On RESTRICT shift to state 18
-- On REGISTER shift to state 19
-- On NAMED_TYPE shift to state 20
-- On MSATTR shift to state 21
-- On LONG shift to state 22
-- On INT64 shift to state 23
-- On INT shift to state 24
-- On INLINE shift to state 25
-- On FLOAT shift to state 26
-- On EXTERN shift to state 27
-- On ENUM shift to state 28
-- On DOUBLE shift to state 66
-- On DECLSPEC shift to state 67
-- On CONST shift to state 78
-- On CHAR shift to state 79
-- On AUTO shift to state 80
-- On AT_SPECIFIER shift to state 81
-- On ATTRIBUTE shift to state 85
-- On type_spec shift to state 89
-- On decl_spec_list_opt shift to state 746
-- On decl_spec_list shift to state 94
-- On cvspec shift to state 92
-- On attribute_nocv shift to state 95
## Reductions:
-- On STAR SEMICOLON RPAREN LPAREN LBRACKET IDENT COMMA COLON AT_NAME
--   reduce production decl_spec_list_opt ->

State 12:
## Known stack suffix:
## THREAD
## LR(1) items:
attribute_nocv -> THREAD . [ VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG LBRACKET INT64 INT INLINE IDENT FLOAT EXTERN EQ ENUM DOUBLE DECLSPEC CONST COMMA COLON CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ASM ]
## Transitions:
## Reductions:
-- On VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG LBRACKET INT64 INT INLINE IDENT FLOAT EXTERN EQ ENUM DOUBLE DECLSPEC CONST COMMA COLON CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ASM
--   reduce production attribute_nocv -> THREAD

State 13:
## Known stack suffix:
## STRUCT
## LR(1) items:
type_spec -> STRUCT . id_or_typename [ VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG LBRACKET INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST COMMA COLON CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ]
type_spec -> STRUCT . id_or_typename LBRACE struct_decl_list RBRACE [ VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG LBRACKET INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST COMMA COLON CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ]
type_spec -> STRUCT . LBRACE struct_decl_list RBRACE [ VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG LBRACKET INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST COMMA COLON CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ]
type_spec -> STRUCT . just_attributes id_or_typename LBRACE struct_decl_list RBRACE [ VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG LBRACKET INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST COMMA COLON CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ]
type_spec -> STRUCT . just_attributes LBRACE struct_decl_list RBRACE [ VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG LBRACKET INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST COMMA COLON CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ]
## Transitions:
-- On NAMED_TYPE shift to state 5
-- On LBRACE shift to state 14
-- On IDENT shift to state 205
-- On DECLSPEC shift to state 689
-- On AT_NAME shift to state 206
-- On ATTRIBUTE shift to state 691
-- On just_attributes shift to state 734
-- On just_attribute shift to state 705
-- On id_or_typename shift to state 742
## Reductions:

State 14:
## Known stack suffix:
## STRUCT LBRACE
## LR(1) items:
type_spec -> STRUCT LBRACE . struct_decl_list RBRACE [ VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG LBRACKET INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST COMMA COLON CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ]
## Transitions:
-- On error shift to state 7
-- On VOLATILE shift to state 1
-- On VOID shift to state 2
-- On UNSIGNED shift to state 3
-- On UNION shift to state 4
-- On TYPEOF shift to state 9
-- On TYPEDEF shift to state 11
-- On THREAD shift to state 12
-- On STRUCT shift to state 13
-- On STATIC shift to state 15
-- On SIGNED shift to state 16
-- On SHORT shift to state 17
-- On SEMICOLON shift to state 716
-- On RESTRICT shift to state 18
-- On REGISTER shift to state 19
-- On NAMED_TYPE shift to state 20
-- On MSATTR shift to state 21
-- On LONG shift to state 22
-- On INT64 shift to state 23
-- On INT shift to state 24
-- On INLINE shift to state 25
-- On FLOAT shift to state 26
-- On EXTERN shift to state 27
-- On ENUM shift to state 28
-- On DOUBLE shift to state 66
-- On DECLSPEC shift to state 67
-- On CONST shift to state 78
-- On CHAR shift to state 79
-- On AUTO shift to state 80
-- On AT_SPECIFIER shift to state 81
-- On ATTRIBUTE shift to state 85
-- On type_spec shift to state 89
-- On struct_decl_list shift to state 732
-- On decl_spec_list shift to state 718
-- On cvspec shift to state 92
-- On attribute_nocv shift to state 95
## Reductions:
-- On RBRACE
--   reduce production struct_decl_list ->

State 15:
## Known stack suffix:
## STATIC
## LR(1) items:
decl_spec_list -> STATIC . decl_spec_list_opt [ STAR SEMICOLON RPAREN NAMED_TYPE LPAREN LBRACKET IDENT COMMA COLON AT_NAME ]
## Transitions:
-- On VOLATILE shift to state 1
-- On VOID shift to state 2
-- On UNSIGNED shift to state 3
-- On UNION shift to state 4
-- On TYPEOF shift to state 9
-- On TYPEDEF shift to state 11
-- On THREAD shift to state 12
-- On STRUCT shift to state 13
-- On STATIC shift to state 15
-- On SIGNED shift to state 16
-- On SHORT shift to state 17
-- On RESTRICT shift to state 18
-- On REGISTER shift to state 19
-- On NAMED_TYPE shift to state 20
-- On MSATTR shift to state 21
-- On LONG shift to state 22
-- On INT64 shift to state 23
-- On INT shift to state 24
-- On INLINE shift to state 25
-- On FLOAT shift to state 26
-- On EXTERN shift to state 27
-- On ENUM shift to state 28
-- On DOUBLE shift to state 66
-- On DECLSPEC shift to state 67
-- On CONST shift to state 78
-- On CHAR shift to state 79
-- On AUTO shift to state 80
-- On AT_SPECIFIER shift to state 81
-- On ATTRIBUTE shift to state 85
-- On type_spec shift to state 89
-- On decl_spec_list_opt shift to state 715
-- On decl_spec_list shift to state 94
-- On cvspec shift to state 92
-- On attribute_nocv shift to state 95
## Reductions:
-- On STAR SEMICOLON RPAREN LPAREN LBRACKET IDENT COMMA COLON AT_NAME
--   reduce production decl_spec_list_opt ->

State 16:
## Known stack suffix:
## SIGNED
## LR(1) items:
type_spec -> SIGNED . [ VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG LBRACKET INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST COMMA COLON CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ]
## Transitions:
## Reductions:
-- On VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG LBRACKET INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST COMMA COLON CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE
--   reduce production type_spec -> SIGNED

State 17:
## Known stack suffix:
## SHORT
## LR(1) items:
type_spec -> SHORT . [ VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG LBRACKET INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST COMMA COLON CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ]
## Transitions:
## Reductions:
-- On VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG LBRACKET INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST COMMA COLON CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE
--   reduce production type_spec -> SHORT

State 18:
## Known stack suffix:
## RESTRICT
## LR(1) items:
cvspec -> RESTRICT . [ VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG LBRACKET INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST COMMA COLON CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ]
## Transitions:
## Reductions:
-- On VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG LBRACKET INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST COMMA COLON CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE
--   reduce production cvspec -> RESTRICT

State 19:
## Known stack suffix:
## REGISTER
## LR(1) items:
decl_spec_list -> REGISTER . decl_spec_list_opt [ STAR SEMICOLON RPAREN NAMED_TYPE LPAREN LBRACKET IDENT COMMA COLON AT_NAME ]
## Transitions:
-- On VOLATILE shift to state 1
-- On VOID shift to state 2
-- On UNSIGNED shift to state 3
-- On UNION shift to state 4
-- On TYPEOF shift to state 9
-- On TYPEDEF shift to state 11
-- On THREAD shift to state 12
-- On STRUCT shift to state 13
-- On STATIC shift to state 15
-- On SIGNED shift to state 16
-- On SHORT shift to state 17
-- On RESTRICT shift to state 18
-- On REGISTER shift to state 19
-- On NAMED_TYPE shift to state 20
-- On MSATTR shift to state 21
-- On LONG shift to state 22
-- On INT64 shift to state 23
-- On INT shift to state 24
-- On INLINE shift to state 25
-- On FLOAT shift to state 26
-- On EXTERN shift to state 27
-- On ENUM shift to state 28
-- On DOUBLE shift to state 66
-- On DECLSPEC shift to state 67
-- On CONST shift to state 78
-- On CHAR shift to state 79
-- On AUTO shift to state 80
-- On AT_SPECIFIER shift to state 81
-- On ATTRIBUTE shift to state 85
-- On type_spec shift to state 89
-- On decl_spec_list_opt shift to state 714
-- On decl_spec_list shift to state 94
-- On cvspec shift to state 92
-- On attribute_nocv shift to state 95
## Reductions:
-- On STAR SEMICOLON RPAREN LPAREN LBRACKET IDENT COMMA COLON AT_NAME
--   reduce production decl_spec_list_opt ->

State 20:
## Known stack suffix:
## NAMED_TYPE
## LR(1) items:
type_spec -> NAMED_TYPE . [ VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG LBRACKET INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST COMMA COLON CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ]
## Transitions:
## Reductions:
-- On VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG LBRACKET INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST COMMA COLON CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE
--   reduce production type_spec -> NAMED_TYPE

State 21:
## Known stack suffix:
## MSATTR
## LR(1) items:
attribute_nocv -> MSATTR . [ VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG LBRACKET INT64 INT INLINE IDENT FLOAT EXTERN EQ ENUM DOUBLE DECLSPEC CONST COMMA COLON CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ASM ]
## Transitions:
## Reductions:
-- On VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG LBRACKET INT64 INT INLINE IDENT FLOAT EXTERN EQ ENUM DOUBLE DECLSPEC CONST COMMA COLON CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ASM
--   reduce production attribute_nocv -> MSATTR

State 22:
## Known stack suffix:
## LONG
## LR(1) items:
type_spec -> LONG . [ VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG LBRACKET INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST COMMA COLON CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ]
## Transitions:
## Reductions:
-- On VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG LBRACKET INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST COMMA COLON CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE
--   reduce production type_spec -> LONG

State 23:
## Known stack suffix:
## INT64
## LR(1) items:
type_spec -> INT64 . [ VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG LBRACKET INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST COMMA COLON CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ]
## Transitions:
## Reductions:
-- On VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG LBRACKET INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST COMMA COLON CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE
--   reduce production type_spec -> INT64

State 24:
## Known stack suffix:
## INT
## LR(1) items:
type_spec -> INT . [ VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG LBRACKET INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST COMMA COLON CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ]
## Transitions:
## Reductions:
-- On VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG LBRACKET INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST COMMA COLON CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE
--   reduce production type_spec -> INT

State 25:
## Known stack suffix:
## INLINE
## LR(1) items:
decl_spec_list -> INLINE . decl_spec_list_opt [ STAR SEMICOLON RPAREN NAMED_TYPE LPAREN LBRACKET IDENT COMMA COLON AT_NAME ]
## Transitions:
-- On VOLATILE shift to state 1
-- On VOID shift to state 2
-- On UNSIGNED shift to state 3
-- On UNION shift to state 4
-- On TYPEOF shift to state 9
-- On TYPEDEF shift to state 11
-- On THREAD shift to state 12
-- On STRUCT shift to state 13
-- On STATIC shift to state 15
-- On SIGNED shift to state 16
-- On SHORT shift to state 17
-- On RESTRICT shift to state 18
-- On REGISTER shift to state 19
-- On NAMED_TYPE shift to state 20
-- On MSATTR shift to state 21
-- On LONG shift to state 22
-- On INT64 shift to state 23
-- On INT shift to state 24
-- On INLINE shift to state 25
-- On FLOAT shift to state 26
-- On EXTERN shift to state 27
-- On ENUM shift to state 28
-- On DOUBLE shift to state 66
-- On DECLSPEC shift to state 67
-- On CONST shift to state 78
-- On CHAR shift to state 79
-- On AUTO shift to state 80
-- On AT_SPECIFIER shift to state 81
-- On ATTRIBUTE shift to state 85
-- On type_spec shift to state 89
-- On decl_spec_list_opt shift to state 713
-- On decl_spec_list shift to state 94
-- On cvspec shift to state 92
-- On attribute_nocv shift to state 95
## Reductions:
-- On STAR SEMICOLON RPAREN LPAREN LBRACKET IDENT COMMA COLON AT_NAME
--   reduce production decl_spec_list_opt ->

State 26:
## Known stack suffix:
## FLOAT
## LR(1) items:
type_spec -> FLOAT . [ VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG LBRACKET INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST COMMA COLON CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ]
## Transitions:
## Reductions:
-- On VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG LBRACKET INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST COMMA COLON CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE
--   reduce production type_spec -> FLOAT

State 27:
## Known stack suffix:
## EXTERN
## LR(1) items:
decl_spec_list -> EXTERN . decl_spec_list_opt [ STAR SEMICOLON RPAREN NAMED_TYPE LPAREN LBRACKET IDENT COMMA COLON AT_NAME ]
## Transitions:
-- On VOLATILE shift to state 1
-- On VOID shift to state 2
-- On UNSIGNED shift to state 3
-- On UNION shift to state 4
-- On TYPEOF shift to state 9
-- On TYPEDEF shift to state 11
-- On THREAD shift to state 12
-- On STRUCT shift to state 13
-- On STATIC shift to state 15
-- On SIGNED shift to state 16
-- On SHORT shift to state 17
-- On RESTRICT shift to state 18
-- On REGISTER shift to state 19
-- On NAMED_TYPE shift to state 20
-- On MSATTR shift to state 21
-- On LONG shift to state 22
-- On INT64 shift to state 23
-- On INT shift to state 24
-- On INLINE shift to state 25
-- On FLOAT shift to state 26
-- On EXTERN shift to state 27
-- On ENUM shift to state 28
-- On DOUBLE shift to state 66
-- On DECLSPEC shift to state 67
-- On CONST shift to state 78
-- On CHAR shift to state 79
-- On AUTO shift to state 80
-- On AT_SPECIFIER shift to state 81
-- On ATTRIBUTE shift to state 85
-- On type_spec shift to state 89
-- On decl_spec_list_opt shift to state 712
-- On decl_spec_list shift to state 94
-- On cvspec shift to state 92
-- On attribute_nocv shift to state 95
## Reductions:
-- On STAR SEMICOLON RPAREN LPAREN LBRACKET IDENT COMMA COLON AT_NAME
--   reduce production decl_spec_list_opt ->

State 28:
## Known stack suffix:
## ENUM
## LR(1) items:
type_spec -> ENUM . id_or_typename [ VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG LBRACKET INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST COMMA COLON CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ]
type_spec -> ENUM . id_or_typename LBRACE enum_list maybecomma RBRACE [ VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG LBRACKET INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST COMMA COLON CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ]
type_spec -> ENUM . LBRACE enum_list maybecomma RBRACE [ VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG LBRACKET INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST COMMA COLON CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ]
type_spec -> ENUM . just_attributes id_or_typename LBRACE enum_list maybecomma RBRACE [ VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG LBRACKET INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST COMMA COLON CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ]
type_spec -> ENUM . just_attributes LBRACE enum_list maybecomma RBRACE [ VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG LBRACKET INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST COMMA COLON CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ]
## Transitions:
-- On NAMED_TYPE shift to state 5
-- On LBRACE shift to state 29
-- On IDENT shift to state 205
-- On DECLSPEC shift to state 689
-- On AT_NAME shift to state 206
-- On ATTRIBUTE shift to state 691
-- On just_attributes shift to state 695
-- On just_attribute shift to state 705
-- On id_or_typename shift to state 707
## Reductions:

State 29:
## Known stack suffix:
## ENUM LBRACE
## LR(1) items:
type_spec -> ENUM LBRACE . enum_list maybecomma RBRACE [ VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG LBRACKET INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST COMMA COLON CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ]
## Transitions:
-- On IDENT shift to state 30
-- On enumerator shift to state 682
-- On enum_list shift to state 683
## Reductions:

State 30:
## Known stack suffix:
## IDENT
## LR(1) items:
enumerator -> IDENT . [ RBRACE COMMA ]
enumerator -> IDENT . EQ expression [ RBRACE COMMA ]
## Transitions:
-- On EQ shift to state 31
## Reductions:
-- On RBRACE COMMA
--   reduce production enumerator -> IDENT

State 31:
## Known stack suffix:
## IDENT EQ
## LR(1) items:
enumerator -> IDENT EQ . expression [ RBRACE COMMA ]
## Transitions:
-- On TILDE shift to state 32
-- On STAR shift to state 33
-- On SIZEOF shift to state 34
-- On PRETTY_FUNCTION__ shift to state 35
-- On PLUS_PLUS shift to state 36
-- On PLUS shift to state 37
-- On MINUS_MINUS shift to state 38
-- On MINUS shift to state 39
-- On LPAREN shift to state 40
-- On IDENT shift to state 45
-- On FUNCTION__ shift to state 46
-- On EXCLAM shift to state 47
-- On CST_WSTRING shift to state 48
-- On CST_WCHAR shift to state 49
-- On CST_STRING shift to state 50
-- On CST_INT shift to state 51
-- On CST_FLOAT shift to state 52
-- On CST_CHAR shift to state 53
-- On BUILTIN_VA_ARG shift to state 54
-- On AT_EXPR shift to state 56
-- On AND_AND shift to state 60
-- On AND shift to state 62
-- On ALIGNOF shift to state 63
-- On wstring_list shift to state 98
-- On unary_expression shift to state 101
-- On string_list shift to state 106
-- On string_constant shift to state 108
-- On shift_expression shift to state 109
-- On relational_expression shift to state 116
-- On primary_expression shift to state 111
-- On postfix_expression shift to state 112
-- On paren_comma_expression shift to state 120
-- On one_string shift to state 121
-- On multiplicative_expression shift to state 122
-- On logical_or_expression shift to state 143
-- On logical_and_expression shift to state 147
-- On expression shift to state 681
-- On equality_expression shift to state 149
-- On constant shift to state 124
-- On conditional_expression shift to state 167
-- On cast_expression shift to state 169
-- On bitwise_xor_expression shift to state 154
-- On bitwise_or_expression shift to state 164
-- On bitwise_and_expression shift to state 162
-- On assignment_expression shift to state 192
-- On additive_expression shift to state 136
## Reductions:

State 32:
## Known stack suffix:
## TILDE
## LR(1) items:
unary_expression -> TILDE . cast_expression [ SUP_SUP_EQ SUP_SUP SUP_EQ SUP STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACKET RBRACE QUEST PRAGMA_EOL PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_EQ MINUS INF_INF_EQ INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ EQ ELLIPSIS COMMA COLON CIRC_EQ CIRC AND_EQ AND_AND AND ]
## Transitions:
-- On TILDE shift to state 32
-- On STAR shift to state 33
-- On SIZEOF shift to state 34
-- On PRETTY_FUNCTION__ shift to state 35
-- On PLUS_PLUS shift to state 36
-- On PLUS shift to state 37
-- On MINUS_MINUS shift to state 38
-- On MINUS shift to state 39
-- On LPAREN shift to state 40
-- On IDENT shift to state 45
-- On FUNCTION__ shift to state 46
-- On EXCLAM shift to state 47
-- On CST_WSTRING shift to state 48
-- On CST_WCHAR shift to state 49
-- On CST_STRING shift to state 50
-- On CST_INT shift to state 51
-- On CST_FLOAT shift to state 52
-- On CST_CHAR shift to state 53
-- On BUILTIN_VA_ARG shift to state 54
-- On AT_EXPR shift to state 56
-- On AND_AND shift to state 60
-- On AND shift to state 62
-- On ALIGNOF shift to state 63
-- On wstring_list shift to state 98
-- On unary_expression shift to state 101
-- On string_list shift to state 106
-- On string_constant shift to state 108
-- On primary_expression shift to state 111
-- On postfix_expression shift to state 112
-- On paren_comma_expression shift to state 120
-- On one_string shift to state 121
-- On constant shift to state 124
-- On cast_expression shift to state 680
## Reductions:

State 33:
## Known stack suffix:
## STAR
## LR(1) items:
unary_expression -> STAR . cast_expression [ SUP_SUP_EQ SUP_SUP SUP_EQ SUP STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACKET RBRACE QUEST PRAGMA_EOL PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_EQ MINUS INF_INF_EQ INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ EQ ELLIPSIS COMMA COLON CIRC_EQ CIRC AND_EQ AND_AND AND ]
## Transitions:
-- On TILDE shift to state 32
-- On STAR shift to state 33
-- On SIZEOF shift to state 34
-- On PRETTY_FUNCTION__ shift to state 35
-- On PLUS_PLUS shift to state 36
-- On PLUS shift to state 37
-- On MINUS_MINUS shift to state 38
-- On MINUS shift to state 39
-- On LPAREN shift to state 40
-- On IDENT shift to state 45
-- On FUNCTION__ shift to state 46
-- On EXCLAM shift to state 47
-- On CST_WSTRING shift to state 48
-- On CST_WCHAR shift to state 49
-- On CST_STRING shift to state 50
-- On CST_INT shift to state 51
-- On CST_FLOAT shift to state 52
-- On CST_CHAR shift to state 53
-- On BUILTIN_VA_ARG shift to state 54
-- On AT_EXPR shift to state 56
-- On AND_AND shift to state 60
-- On AND shift to state 62
-- On ALIGNOF shift to state 63
-- On wstring_list shift to state 98
-- On unary_expression shift to state 101
-- On string_list shift to state 106
-- On string_constant shift to state 108
-- On primary_expression shift to state 111
-- On postfix_expression shift to state 112
-- On paren_comma_expression shift to state 120
-- On one_string shift to state 121
-- On constant shift to state 124
-- On cast_expression shift to state 679
## Reductions:

State 34:
## Known stack suffix:
## SIZEOF
## LR(1) items:
unary_expression -> SIZEOF . unary_expression [ SUP_SUP_EQ SUP_SUP SUP_EQ SUP STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACKET RBRACE QUEST PRAGMA_EOL PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_EQ MINUS INF_INF_EQ INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ EQ ELLIPSIS COMMA COLON CIRC_EQ CIRC AND_EQ AND_AND AND ]
unary_expression -> SIZEOF . LPAREN type_name RPAREN [ SUP_SUP_EQ SUP_SUP SUP_EQ SUP STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACKET RBRACE QUEST PRAGMA_EOL PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_EQ MINUS INF_INF_EQ INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ EQ ELLIPSIS COMMA COLON CIRC_EQ CIRC AND_EQ AND_AND AND ]
## Transitions:
-- On TILDE shift to state 32
-- On STAR shift to state 33
-- On SIZEOF shift to state 34
-- On PRETTY_FUNCTION__ shift to state 35
-- On PLUS_PLUS shift to state 36
-- On PLUS shift to state 37
-- On MINUS_MINUS shift to state 38
-- On MINUS shift to state 39
-- On LPAREN shift to state 675
-- On IDENT shift to state 45
-- On FUNCTION__ shift to state 46
-- On EXCLAM shift to state 47
-- On CST_WSTRING shift to state 48
-- On CST_WCHAR shift to state 49
-- On CST_STRING shift to state 50
-- On CST_INT shift to state 51
-- On CST_FLOAT shift to state 52
-- On CST_CHAR shift to state 53
-- On BUILTIN_VA_ARG shift to state 54
-- On AT_EXPR shift to state 56
-- On AND_AND shift to state 60
-- On AND shift to state 62
-- On ALIGNOF shift to state 63
-- On wstring_list shift to state 98
-- On unary_expression shift to state 678
-- On string_list shift to state 106
-- On string_constant shift to state 108
-- On primary_expression shift to state 111
-- On postfix_expression shift to state 112
-- On paren_comma_expression shift to state 120
-- On one_string shift to state 121
-- On constant shift to state 124
## Reductions:

State 35:
## Known stack suffix:
## PRETTY_FUNCTION__
## LR(1) items:
one_string -> PRETTY_FUNCTION__ . [ VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD SUP_SUP_EQ SUP_SUP SUP_EQ SUP STRUCT STATIC STAR_EQ STAR SLASH_EQ SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACKET RBRACE QUEST PRETTY_FUNCTION__ PRAGMA_EOL PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT NAMED_TYPE MSATTR MINUS_MINUS MINUS_EQ MINUS LPAREN LONG LBRACKET LBRACE INT64 INT INLINE INF_INF_EQ INF_INF INF_EQ INF FUNCTION__ FLOAT EXTERN EXCLAM_EQ EQ_EQ EQ ENUM ELLIPSIS DOUBLE DOT DECLSPEC CST_WSTRING CST_STRING CONST COMMA COLON CIRC_EQ CIRC CHAR AUTO AT_SPECIFIER ATTRIBUTE ARROW AND_EQ AND_AND AND ]
## Transitions:
## Reductions:
-- On VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD SUP_SUP_EQ SUP_SUP SUP_EQ SUP STRUCT STATIC STAR_EQ STAR SLASH_EQ SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACKET RBRACE QUEST PRETTY_FUNCTION__ PRAGMA_EOL PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT NAMED_TYPE MSATTR MINUS_MINUS MINUS_EQ MINUS LPAREN LONG LBRACKET LBRACE INT64 INT INLINE INF_INF_EQ INF_INF INF_EQ INF FUNCTION__ FLOAT EXTERN EXCLAM_EQ EQ_EQ EQ ENUM ELLIPSIS DOUBLE DOT DECLSPEC CST_WSTRING CST_STRING CONST COMMA COLON CIRC_EQ CIRC CHAR AUTO AT_SPECIFIER ATTRIBUTE ARROW AND_EQ AND_AND AND
--   reduce production one_string -> PRETTY_FUNCTION__

State 36:
## Known stack suffix:
## PLUS_PLUS
## LR(1) items:
unary_expression -> PLUS_PLUS . unary_expression [ SUP_SUP_EQ SUP_SUP SUP_EQ SUP STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACKET RBRACE QUEST PRAGMA_EOL PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_EQ MINUS INF_INF_EQ INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ EQ ELLIPSIS COMMA COLON CIRC_EQ CIRC AND_EQ AND_AND AND ]
## Transitions:
-- On TILDE shift to state 32
-- On STAR shift to state 33
-- On SIZEOF shift to state 34
-- On PRETTY_FUNCTION__ shift to state 35
-- On PLUS_PLUS shift to state 36
-- On PLUS shift to state 37
-- On MINUS_MINUS shift to state 38
-- On MINUS shift to state 39
-- On LPAREN shift to state 669
-- On IDENT shift to state 45
-- On FUNCTION__ shift to state 46
-- On EXCLAM shift to state 47
-- On CST_WSTRING shift to state 48
-- On CST_WCHAR shift to state 49
-- On CST_STRING shift to state 50
-- On CST_INT shift to state 51
-- On CST_FLOAT shift to state 52
-- On CST_CHAR shift to state 53
-- On BUILTIN_VA_ARG shift to state 54
-- On AT_EXPR shift to state 56
-- On AND_AND shift to state 60
-- On AND shift to state 62
-- On ALIGNOF shift to state 63
-- On wstring_list shift to state 98
-- On unary_expression shift to state 674
-- On string_list shift to state 106
-- On string_constant shift to state 108
-- On primary_expression shift to state 111
-- On postfix_expression shift to state 112
-- On paren_comma_expression shift to state 120
-- On one_string shift to state 121
-- On constant shift to state 124
## Reductions:

State 37:
## Known stack suffix:
## PLUS
## LR(1) items:
unary_expression -> PLUS . cast_expression [ SUP_SUP_EQ SUP_SUP SUP_EQ SUP STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACKET RBRACE QUEST PRAGMA_EOL PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_EQ MINUS INF_INF_EQ INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ EQ ELLIPSIS COMMA COLON CIRC_EQ CIRC AND_EQ AND_AND AND ]
## Transitions:
-- On TILDE shift to state 32
-- On STAR shift to state 33
-- On SIZEOF shift to state 34
-- On PRETTY_FUNCTION__ shift to state 35
-- On PLUS_PLUS shift to state 36
-- On PLUS shift to state 37
-- On MINUS_MINUS shift to state 38
-- On MINUS shift to state 39
-- On LPAREN shift to state 40
-- On IDENT shift to state 45
-- On FUNCTION__ shift to state 46
-- On EXCLAM shift to state 47
-- On CST_WSTRING shift to state 48
-- On CST_WCHAR shift to state 49
-- On CST_STRING shift to state 50
-- On CST_INT shift to state 51
-- On CST_FLOAT shift to state 52
-- On CST_CHAR shift to state 53
-- On BUILTIN_VA_ARG shift to state 54
-- On AT_EXPR shift to state 56
-- On AND_AND shift to state 60
-- On AND shift to state 62
-- On ALIGNOF shift to state 63
-- On wstring_list shift to state 98
-- On unary_expression shift to state 101
-- On string_list shift to state 106
-- On string_constant shift to state 108
-- On primary_expression shift to state 111
-- On postfix_expression shift to state 112
-- On paren_comma_expression shift to state 120
-- On one_string shift to state 121
-- On constant shift to state 124
-- On cast_expression shift to state 673
## Reductions:

State 38:
## Known stack suffix:
## MINUS_MINUS
## LR(1) items:
unary_expression -> MINUS_MINUS . unary_expression [ SUP_SUP_EQ SUP_SUP SUP_EQ SUP STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACKET RBRACE QUEST PRAGMA_EOL PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_EQ MINUS INF_INF_EQ INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ EQ ELLIPSIS COMMA COLON CIRC_EQ CIRC AND_EQ AND_AND AND ]
## Transitions:
-- On TILDE shift to state 32
-- On STAR shift to state 33
-- On SIZEOF shift to state 34
-- On PRETTY_FUNCTION__ shift to state 35
-- On PLUS_PLUS shift to state 36
-- On PLUS shift to state 37
-- On MINUS_MINUS shift to state 38
-- On MINUS shift to state 39
-- On LPAREN shift to state 669
-- On IDENT shift to state 45
-- On FUNCTION__ shift to state 46
-- On EXCLAM shift to state 47
-- On CST_WSTRING shift to state 48
-- On CST_WCHAR shift to state 49
-- On CST_STRING shift to state 50
-- On CST_INT shift to state 51
-- On CST_FLOAT shift to state 52
-- On CST_CHAR shift to state 53
-- On BUILTIN_VA_ARG shift to state 54
-- On AT_EXPR shift to state 56
-- On AND_AND shift to state 60
-- On AND shift to state 62
-- On ALIGNOF shift to state 63
-- On wstring_list shift to state 98
-- On unary_expression shift to state 672
-- On string_list shift to state 106
-- On string_constant shift to state 108
-- On primary_expression shift to state 111
-- On postfix_expression shift to state 112
-- On paren_comma_expression shift to state 120
-- On one_string shift to state 121
-- On constant shift to state 124
## Reductions:

State 39:
## Known stack suffix:
## MINUS
## LR(1) items:
unary_expression -> MINUS . cast_expression [ SUP_SUP_EQ SUP_SUP SUP_EQ SUP STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACKET RBRACE QUEST PRAGMA_EOL PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_EQ MINUS INF_INF_EQ INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ EQ ELLIPSIS COMMA COLON CIRC_EQ CIRC AND_EQ AND_AND AND ]
## Transitions:
-- On TILDE shift to state 32
-- On STAR shift to state 33
-- On SIZEOF shift to state 34
-- On PRETTY_FUNCTION__ shift to state 35
-- On PLUS_PLUS shift to state 36
-- On PLUS shift to state 37
-- On MINUS_MINUS shift to state 38
-- On MINUS shift to state 39
-- On LPAREN shift to state 40
-- On IDENT shift to state 45
-- On FUNCTION__ shift to state 46
-- On EXCLAM shift to state 47
-- On CST_WSTRING shift to state 48
-- On CST_WCHAR shift to state 49
-- On CST_STRING shift to state 50
-- On CST_INT shift to state 51
-- On CST_FLOAT shift to state 52
-- On CST_CHAR shift to state 53
-- On BUILTIN_VA_ARG shift to state 54
-- On AT_EXPR shift to state 56
-- On AND_AND shift to state 60
-- On AND shift to state 62
-- On ALIGNOF shift to state 63
-- On wstring_list shift to state 98
-- On unary_expression shift to state 101
-- On string_list shift to state 106
-- On string_constant shift to state 108
-- On primary_expression shift to state 111
-- On postfix_expression shift to state 112
-- On paren_comma_expression shift to state 120
-- On one_string shift to state 121
-- On constant shift to state 124
-- On cast_expression shift to state 668
## Reductions:

State 40:
## Known stack suffix:
## LPAREN
## LR(1) items:
cast_expression -> LPAREN . type_name RPAREN cast_expression [ SUP_SUP_EQ SUP_SUP SUP_EQ SUP STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACKET RBRACE QUEST PRAGMA_EOL PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_EQ MINUS INF_INF_EQ INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ EQ ELLIPSIS COMMA COLON CIRC_EQ CIRC AND_EQ AND_AND AND ]
paren_comma_expression -> LPAREN . comma_expression RPAREN [ SUP_SUP_EQ SUP_SUP SUP_EQ SUP STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACKET RBRACE QUEST PRAGMA_EOL PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_EQ MINUS LPAREN LBRACKET INF_INF_EQ INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ EQ ELLIPSIS DOT COMMA COLON CIRC_EQ CIRC ARROW AND_EQ AND_AND AND ]
paren_comma_expression -> LPAREN . error RPAREN [ SUP_SUP_EQ SUP_SUP SUP_EQ SUP STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACKET RBRACE QUEST PRAGMA_EOL PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_EQ MINUS LPAREN LBRACKET INF_INF_EQ INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ EQ ELLIPSIS DOT COMMA COLON CIRC_EQ CIRC ARROW AND_EQ AND_AND AND ]
postfix_expression -> LPAREN . type_name RPAREN LBRACE initialiser_list_opt RBRACE [ SUP_SUP_EQ SUP_SUP SUP_EQ SUP STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACKET RBRACE QUEST PRAGMA_EOL PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_EQ MINUS LPAREN LBRACKET INF_INF_EQ INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ EQ ELLIPSIS DOT COMMA COLON CIRC_EQ CIRC ARROW AND_EQ AND_AND AND ]
primary_expression -> LPAREN . block RPAREN [ SUP_SUP_EQ SUP_SUP SUP_EQ SUP STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACKET RBRACE QUEST PRAGMA_EOL PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_EQ MINUS LPAREN LBRACKET INF_INF_EQ INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ EQ ELLIPSIS DOT COMMA COLON CIRC_EQ CIRC ARROW AND_EQ AND_AND AND ]
## Transitions:
-- On error shift to state 41
-- On VOLATILE shift to state 1
-- On VOID shift to state 2
-- On UNSIGNED shift to state 3
-- On UNION shift to state 4
-- On TYPEOF shift to state 9
-- On TYPEDEF shift to state 11
-- On TILDE shift to state 32
-- On THREAD shift to state 12
-- On STRUCT shift to state 13
-- On STATIC shift to state 15
-- On STAR shift to state 33
-- On SIZEOF shift to state 34
-- On SIGNED shift to state 16
-- On SHORT shift to state 17
-- On RESTRICT shift to state 18
-- On REGISTER shift to state 19
-- On PRETTY_FUNCTION__ shift to state 35
-- On PLUS_PLUS shift to state 36
-- On PLUS shift to state 37
-- On NAMED_TYPE shift to state 20
-- On MSATTR shift to state 21
-- On MINUS_MINUS shift to state 38
-- On MINUS shift to state 39
-- On LPAREN shift to state 40
-- On LONG shift to state 22
-- On LBRACE shift to state 65
-- On INT64 shift to state 23
-- On INT shift to state 24
-- On INLINE shift to state 25
-- On IDENT shift to state 45
-- On FUNCTION__ shift to state 46
-- On FLOAT shift to state 26
-- On EXTERN shift to state 27
-- On EXCLAM shift to state 47
-- On ENUM shift to state 28
-- On DOUBLE shift to state 66
-- On DECLSPEC shift to state 67
-- On CST_WSTRING shift to state 48
-- On CST_WCHAR shift to state 49
-- On CST_STRING shift to state 50
-- On CST_INT shift to state 51
-- On CST_FLOAT shift to state 52
-- On CST_CHAR shift to state 53
-- On CONST shift to state 78
-- On CHAR shift to state 79
-- On BUILTIN_VA_ARG shift to state 54
-- On AUTO shift to state 80
-- On AT_SPECIFIER shift to state 81
-- On AT_EXPR shift to state 56
-- On ATTRIBUTE shift to state 85
-- On AND_AND shift to state 60
-- On AND shift to state 62
-- On ALIGNOF shift to state 63
-- On wstring_list shift to state 98
-- On unary_expression shift to state 101
-- On type_spec shift to state 89
-- On type_name shift to state 665
-- On string_list shift to state 106
-- On string_constant shift to state 108
-- On shift_expression shift to state 109
-- On relational_expression shift to state 116
-- On primary_expression shift to state 111
-- On postfix_expression shift to state 112
-- On paren_comma_expression shift to state 120
-- On one_string shift to state 121
-- On multiplicative_expression shift to state 122
-- On logical_or_expression shift to state 143
-- On logical_and_expression shift to state 147
-- On expression shift to state 165
-- On equality_expression shift to state 149
-- On decl_spec_list shift to state 245
-- On cvspec shift to state 92
-- On constant shift to state 124
-- On conditional_expression shift to state 167
-- On comma_expression shift to state 312
-- On cast_expression shift to state 169
-- On block_begin shift to state 314
-- On block shift to state 538
-- On bitwise_xor_expression shift to state 154
-- On bitwise_or_expression shift to state 164
-- On bitwise_and_expression shift to state 162
-- On attribute_nocv shift to state 95
-- On assignment_expression shift to state 192
-- On additive_expression shift to state 136
## Reductions:

State 41:
## Known stack suffix:
## LPAREN error
## LR(1) items:
block -> error . location RBRACE [ RPAREN ]
comma_expression -> error . COMMA comma_expression [ RPAREN ]
paren_comma_expression -> LPAREN error . RPAREN [ SUP_SUP_EQ SUP_SUP SUP_EQ SUP STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACKET RBRACE QUEST PRAGMA_EOL PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_EQ MINUS LPAREN LBRACKET INF_INF_EQ INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ EQ ELLIPSIS DOT COMMA COLON CIRC_EQ CIRC ARROW AND_EQ AND_AND AND ]
## Transitions:
-- On RPAREN shift to state 42
-- On COMMA shift to state 43
-- On location shift to state 339
## Reductions:
-- On RBRACE
--   reduce production location ->

State 42:
## Known stack suffix:
## LPAREN error RPAREN
## LR(1) items:
paren_comma_expression -> LPAREN error RPAREN . [ SUP_SUP_EQ SUP_SUP SUP_EQ SUP STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACKET RBRACE QUEST PRAGMA_EOL PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_EQ MINUS LPAREN LBRACKET INF_INF_EQ INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ EQ ELLIPSIS DOT COMMA COLON CIRC_EQ CIRC ARROW AND_EQ AND_AND AND ]
## Transitions:
## Reductions:
-- On SUP_SUP_EQ SUP_SUP SUP_EQ SUP STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACKET RBRACE QUEST PRAGMA_EOL PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_EQ MINUS LPAREN LBRACKET INF_INF_EQ INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ EQ ELLIPSIS DOT COMMA COLON CIRC_EQ CIRC ARROW AND_EQ AND_AND AND
--   reduce production paren_comma_expression -> LPAREN error RPAREN

State 43:
## Known stack suffix:
## error COMMA
## LR(1) items:
comma_expression -> error COMMA . comma_expression [ SEMICOLON RPAREN RBRACKET COLON ]
## Transitions:
-- On error shift to state 44
-- On TILDE shift to state 32
-- On STAR shift to state 33
-- On SIZEOF shift to state 34
-- On PRETTY_FUNCTION__ shift to state 35
-- On PLUS_PLUS shift to state 36
-- On PLUS shift to state 37
-- On MINUS_MINUS shift to state 38
-- On MINUS shift to state 39
-- On LPAREN shift to state 40
-- On IDENT shift to state 45
-- On FUNCTION__ shift to state 46
-- On EXCLAM shift to state 47
-- On CST_WSTRING shift to state 48
-- On CST_WCHAR shift to state 49
-- On CST_STRING shift to state 50
-- On CST_INT shift to state 51
-- On CST_FLOAT shift to state 52
-- On CST_CHAR shift to state 53
-- On BUILTIN_VA_ARG shift to state 54
-- On AT_EXPR shift to state 56
-- On AND_AND shift to state 60
-- On AND shift to state 62
-- On ALIGNOF shift to state 63
-- On wstring_list shift to state 98
-- On unary_expression shift to state 101
-- On string_list shift to state 106
-- On string_constant shift to state 108
-- On shift_expression shift to state 109
-- On relational_expression shift to state 116
-- On primary_expression shift to state 111
-- On postfix_expression shift to state 112
-- On paren_comma_expression shift to state 120
-- On one_string shift to state 121
-- On multiplicative_expression shift to state 122
-- On logical_or_expression shift to state 143
-- On logical_and_expression shift to state 147
-- On expression shift to state 165
-- On equality_expression shift to state 149
-- On constant shift to state 124
-- On conditional_expression shift to state 167
-- On comma_expression shift to state 664
-- On cast_expression shift to state 169
-- On bitwise_xor_expression shift to state 154
-- On bitwise_or_expression shift to state 164
-- On bitwise_and_expression shift to state 162
-- On assignment_expression shift to state 192
-- On additive_expression shift to state 136
## Reductions:

State 44:
## Known stack suffix:
## error
## LR(1) items:
comma_expression -> error . COMMA comma_expression [ SEMICOLON RPAREN RBRACKET COLON ]
## Transitions:
-- On COMMA shift to state 43
## Reductions:

State 45:
## Known stack suffix:
## IDENT
## LR(1) items:
primary_expression -> IDENT . [ SUP_SUP_EQ SUP_SUP SUP_EQ SUP STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACKET RBRACE QUEST PRAGMA_EOL PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_EQ MINUS LPAREN LBRACKET INF_INF_EQ INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ EQ ELLIPSIS DOT COMMA COLON CIRC_EQ CIRC ARROW AND_EQ AND_AND AND ]
## Transitions:
## Reductions:
-- On SUP_SUP_EQ SUP_SUP SUP_EQ SUP STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACKET RBRACE QUEST PRAGMA_EOL PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_EQ MINUS LPAREN LBRACKET INF_INF_EQ INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ EQ ELLIPSIS DOT COMMA COLON CIRC_EQ CIRC ARROW AND_EQ AND_AND AND
--   reduce production primary_expression -> IDENT

State 46:
## Known stack suffix:
## FUNCTION__
## LR(1) items:
one_string -> FUNCTION__ . [ VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD SUP_SUP_EQ SUP_SUP SUP_EQ SUP STRUCT STATIC STAR_EQ STAR SLASH_EQ SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACKET RBRACE QUEST PRETTY_FUNCTION__ PRAGMA_EOL PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT NAMED_TYPE MSATTR MINUS_MINUS MINUS_EQ MINUS LPAREN LONG LBRACKET LBRACE INT64 INT INLINE INF_INF_EQ INF_INF INF_EQ INF FUNCTION__ FLOAT EXTERN EXCLAM_EQ EQ_EQ EQ ENUM ELLIPSIS DOUBLE DOT DECLSPEC CST_WSTRING CST_STRING CONST COMMA COLON CIRC_EQ CIRC CHAR AUTO AT_SPECIFIER ATTRIBUTE ARROW AND_EQ AND_AND AND ]
## Transitions:
## Reductions:
-- On VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD SUP_SUP_EQ SUP_SUP SUP_EQ SUP STRUCT STATIC STAR_EQ STAR SLASH_EQ SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACKET RBRACE QUEST PRETTY_FUNCTION__ PRAGMA_EOL PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT NAMED_TYPE MSATTR MINUS_MINUS MINUS_EQ MINUS LPAREN LONG LBRACKET LBRACE INT64 INT INLINE INF_INF_EQ INF_INF INF_EQ INF FUNCTION__ FLOAT EXTERN EXCLAM_EQ EQ_EQ EQ ENUM ELLIPSIS DOUBLE DOT DECLSPEC CST_WSTRING CST_STRING CONST COMMA COLON CIRC_EQ CIRC CHAR AUTO AT_SPECIFIER ATTRIBUTE ARROW AND_EQ AND_AND AND
--   reduce production one_string -> FUNCTION__

State 47:
## Known stack suffix:
## EXCLAM
## LR(1) items:
unary_expression -> EXCLAM . cast_expression [ SUP_SUP_EQ SUP_SUP SUP_EQ SUP STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACKET RBRACE QUEST PRAGMA_EOL PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_EQ MINUS INF_INF_EQ INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ EQ ELLIPSIS COMMA COLON CIRC_EQ CIRC AND_EQ AND_AND AND ]
## Transitions:
-- On TILDE shift to state 32
-- On STAR shift to state 33
-- On SIZEOF shift to state 34
-- On PRETTY_FUNCTION__ shift to state 35
-- On PLUS_PLUS shift to state 36
-- On PLUS shift to state 37
-- On MINUS_MINUS shift to state 38
-- On MINUS shift to state 39
-- On LPAREN shift to state 40
-- On IDENT shift to state 45
-- On FUNCTION__ shift to state 46
-- On EXCLAM shift to state 47
-- On CST_WSTRING shift to state 48
-- On CST_WCHAR shift to state 49
-- On CST_STRING shift to state 50
-- On CST_INT shift to state 51
-- On CST_FLOAT shift to state 52
-- On CST_CHAR shift to state 53
-- On BUILTIN_VA_ARG shift to state 54
-- On AT_EXPR shift to state 56
-- On AND_AND shift to state 60
-- On AND shift to state 62
-- On ALIGNOF shift to state 63
-- On wstring_list shift to state 98
-- On unary_expression shift to state 101
-- On string_list shift to state 106
-- On string_constant shift to state 108
-- On primary_expression shift to state 111
-- On postfix_expression shift to state 112
-- On paren_comma_expression shift to state 120
-- On one_string shift to state 121
-- On constant shift to state 124
-- On cast_expression shift to state 663
## Reductions:

State 48:
## Known stack suffix:
## CST_WSTRING
## LR(1) items:
wstring_list -> CST_WSTRING . [ SUP_SUP_EQ SUP_SUP SUP_EQ SUP STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACKET RBRACE QUEST PRETTY_FUNCTION__ PRAGMA_EOL PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_EQ MINUS LPAREN LBRACKET INF_INF_EQ INF_INF INF_EQ INF FUNCTION__ EXCLAM_EQ EQ_EQ EQ ELLIPSIS DOT CST_WSTRING CST_STRING COMMA COLON CIRC_EQ CIRC ARROW AND_EQ AND_AND AND ]
## Transitions:
## Reductions:
-- On SUP_SUP_EQ SUP_SUP SUP_EQ SUP STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACKET RBRACE QUEST PRETTY_FUNCTION__ PRAGMA_EOL PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_EQ MINUS LPAREN LBRACKET INF_INF_EQ INF_INF INF_EQ INF FUNCTION__ EXCLAM_EQ EQ_EQ EQ ELLIPSIS DOT CST_WSTRING CST_STRING COMMA COLON CIRC_EQ CIRC ARROW AND_EQ AND_AND AND
--   reduce production wstring_list -> CST_WSTRING

State 49:
## Known stack suffix:
## CST_WCHAR
## LR(1) items:
constant -> CST_WCHAR . [ SUP_SUP_EQ SUP_SUP SUP_EQ SUP STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACKET RBRACE QUEST PRAGMA_EOL PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_EQ MINUS LPAREN LBRACKET INF_INF_EQ INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ EQ ELLIPSIS DOT COMMA COLON CIRC_EQ CIRC ARROW AND_EQ AND_AND AND ]
## Transitions:
## Reductions:
-- On SUP_SUP_EQ SUP_SUP SUP_EQ SUP STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACKET RBRACE QUEST PRAGMA_EOL PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_EQ MINUS LPAREN LBRACKET INF_INF_EQ INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ EQ ELLIPSIS DOT COMMA COLON CIRC_EQ CIRC ARROW AND_EQ AND_AND AND
--   reduce production constant -> CST_WCHAR

State 50:
## Known stack suffix:
## CST_STRING
## LR(1) items:
one_string -> CST_STRING . [ VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD SUP_SUP_EQ SUP_SUP SUP_EQ SUP STRUCT STATIC STAR_EQ STAR SLASH_EQ SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACKET RBRACE QUEST PRETTY_FUNCTION__ PRAGMA_EOL PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT NAMED_TYPE MSATTR MINUS_MINUS MINUS_EQ MINUS LPAREN LONG LBRACKET LBRACE INT64 INT INLINE INF_INF_EQ INF_INF INF_EQ INF FUNCTION__ FLOAT EXTERN EXCLAM_EQ EQ_EQ EQ ENUM ELLIPSIS DOUBLE DOT DECLSPEC CST_WSTRING CST_STRING CONST COMMA COLON CIRC_EQ CIRC CHAR AUTO AT_SPECIFIER ATTRIBUTE ARROW AND_EQ AND_AND AND ]
## Transitions:
## Reductions:
-- On VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD SUP_SUP_EQ SUP_SUP SUP_EQ SUP STRUCT STATIC STAR_EQ STAR SLASH_EQ SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACKET RBRACE QUEST PRETTY_FUNCTION__ PRAGMA_EOL PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT NAMED_TYPE MSATTR MINUS_MINUS MINUS_EQ MINUS LPAREN LONG LBRACKET LBRACE INT64 INT INLINE INF_INF_EQ INF_INF INF_EQ INF FUNCTION__ FLOAT EXTERN EXCLAM_EQ EQ_EQ EQ ENUM ELLIPSIS DOUBLE DOT DECLSPEC CST_WSTRING CST_STRING CONST COMMA COLON CIRC_EQ CIRC CHAR AUTO AT_SPECIFIER ATTRIBUTE ARROW AND_EQ AND_AND AND
--   reduce production one_string -> CST_STRING

State 51:
## Known stack suffix:
## CST_INT
## LR(1) items:
constant -> CST_INT . [ SUP_SUP_EQ SUP_SUP SUP_EQ SUP STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACKET RBRACE QUEST PRAGMA_EOL PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_EQ MINUS LPAREN LBRACKET INF_INF_EQ INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ EQ ELLIPSIS DOT COMMA COLON CIRC_EQ CIRC ARROW AND_EQ AND_AND AND ]
## Transitions:
## Reductions:
-- On SUP_SUP_EQ SUP_SUP SUP_EQ SUP STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACKET RBRACE QUEST PRAGMA_EOL PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_EQ MINUS LPAREN LBRACKET INF_INF_EQ INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ EQ ELLIPSIS DOT COMMA COLON CIRC_EQ CIRC ARROW AND_EQ AND_AND AND
--   reduce production constant -> CST_INT

State 52:
## Known stack suffix:
## CST_FLOAT
## LR(1) items:
constant -> CST_FLOAT . [ SUP_SUP_EQ SUP_SUP SUP_EQ SUP STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACKET RBRACE QUEST PRAGMA_EOL PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_EQ MINUS LPAREN LBRACKET INF_INF_EQ INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ EQ ELLIPSIS DOT COMMA COLON CIRC_EQ CIRC ARROW AND_EQ AND_AND AND ]
## Transitions:
## Reductions:
-- On SUP_SUP_EQ SUP_SUP SUP_EQ SUP STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACKET RBRACE QUEST PRAGMA_EOL PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_EQ MINUS LPAREN LBRACKET INF_INF_EQ INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ EQ ELLIPSIS DOT COMMA COLON CIRC_EQ CIRC ARROW AND_EQ AND_AND AND
--   reduce production constant -> CST_FLOAT

State 53:
## Known stack suffix:
## CST_CHAR
## LR(1) items:
constant -> CST_CHAR . [ SUP_SUP_EQ SUP_SUP SUP_EQ SUP STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACKET RBRACE QUEST PRAGMA_EOL PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_EQ MINUS LPAREN LBRACKET INF_INF_EQ INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ EQ ELLIPSIS DOT COMMA COLON CIRC_EQ CIRC ARROW AND_EQ AND_AND AND ]
## Transitions:
## Reductions:
-- On SUP_SUP_EQ SUP_SUP SUP_EQ SUP STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACKET RBRACE QUEST PRAGMA_EOL PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_EQ MINUS LPAREN LBRACKET INF_INF_EQ INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ EQ ELLIPSIS DOT COMMA COLON CIRC_EQ CIRC ARROW AND_EQ AND_AND AND
--   reduce production constant -> CST_CHAR

State 54:
## Known stack suffix:
## BUILTIN_VA_ARG
## LR(1) items:
postfix_expression -> BUILTIN_VA_ARG . LPAREN expression COMMA type_name RPAREN [ SUP_SUP_EQ SUP_SUP SUP_EQ SUP STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACKET RBRACE QUEST PRAGMA_EOL PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_EQ MINUS LPAREN LBRACKET INF_INF_EQ INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ EQ ELLIPSIS DOT COMMA COLON CIRC_EQ CIRC ARROW AND_EQ AND_AND AND ]
## Transitions:
-- On LPAREN shift to state 55
## Reductions:

State 55:
## Known stack suffix:
## BUILTIN_VA_ARG LPAREN
## LR(1) items:
postfix_expression -> BUILTIN_VA_ARG LPAREN . expression COMMA type_name RPAREN [ SUP_SUP_EQ SUP_SUP SUP_EQ SUP STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACKET RBRACE QUEST PRAGMA_EOL PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_EQ MINUS LPAREN LBRACKET INF_INF_EQ INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ EQ ELLIPSIS DOT COMMA COLON CIRC_EQ CIRC ARROW AND_EQ AND_AND AND ]
## Transitions:
-- On TILDE shift to state 32
-- On STAR shift to state 33
-- On SIZEOF shift to state 34
-- On PRETTY_FUNCTION__ shift to state 35
-- On PLUS_PLUS shift to state 36
-- On PLUS shift to state 37
-- On MINUS_MINUS shift to state 38
-- On MINUS shift to state 39
-- On LPAREN shift to state 40
-- On IDENT shift to state 45
-- On FUNCTION__ shift to state 46
-- On EXCLAM shift to state 47
-- On CST_WSTRING shift to state 48
-- On CST_WCHAR shift to state 49
-- On CST_STRING shift to state 50
-- On CST_INT shift to state 51
-- On CST_FLOAT shift to state 52
-- On CST_CHAR shift to state 53
-- On BUILTIN_VA_ARG shift to state 54
-- On AT_EXPR shift to state 56
-- On AND_AND shift to state 60
-- On AND shift to state 62
-- On ALIGNOF shift to state 63
-- On wstring_list shift to state 98
-- On unary_expression shift to state 101
-- On string_list shift to state 106
-- On string_constant shift to state 108
-- On shift_expression shift to state 109
-- On relational_expression shift to state 116
-- On primary_expression shift to state 111
-- On postfix_expression shift to state 112
-- On paren_comma_expression shift to state 120
-- On one_string shift to state 121
-- On multiplicative_expression shift to state 122
-- On logical_or_expression shift to state 143
-- On logical_and_expression shift to state 147
-- On expression shift to state 659
-- On equality_expression shift to state 149
-- On constant shift to state 124
-- On conditional_expression shift to state 167
-- On cast_expression shift to state 169
-- On bitwise_xor_expression shift to state 154
-- On bitwise_or_expression shift to state 164
-- On bitwise_and_expression shift to state 162
-- On assignment_expression shift to state 192
-- On additive_expression shift to state 136
## Reductions:

State 56:
## Known stack suffix:
## AT_EXPR
## LR(1) items:
primary_expression -> AT_EXPR . LPAREN IDENT RPAREN [ SUP_SUP_EQ SUP_SUP SUP_EQ SUP STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACKET RBRACE QUEST PRAGMA_EOL PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_EQ MINUS LPAREN LBRACKET INF_INF_EQ INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ EQ ELLIPSIS DOT COMMA COLON CIRC_EQ CIRC ARROW AND_EQ AND_AND AND ]
## Transitions:
-- On LPAREN shift to state 57
## Reductions:

State 57:
## Known stack suffix:
## AT_EXPR LPAREN
## LR(1) items:
primary_expression -> AT_EXPR LPAREN . IDENT RPAREN [ SUP_SUP_EQ SUP_SUP SUP_EQ SUP STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACKET RBRACE QUEST PRAGMA_EOL PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_EQ MINUS LPAREN LBRACKET INF_INF_EQ INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ EQ ELLIPSIS DOT COMMA COLON CIRC_EQ CIRC ARROW AND_EQ AND_AND AND ]
## Transitions:
-- On IDENT shift to state 58
## Reductions:

State 58:
## Known stack suffix:
## AT_EXPR LPAREN IDENT
## LR(1) items:
primary_expression -> AT_EXPR LPAREN IDENT . RPAREN [ SUP_SUP_EQ SUP_SUP SUP_EQ SUP STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACKET RBRACE QUEST PRAGMA_EOL PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_EQ MINUS LPAREN LBRACKET INF_INF_EQ INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ EQ ELLIPSIS DOT COMMA COLON CIRC_EQ CIRC ARROW AND_EQ AND_AND AND ]
## Transitions:
-- On RPAREN shift to state 59
## Reductions:

State 59:
## Known stack suffix:
## AT_EXPR LPAREN IDENT RPAREN
## LR(1) items:
primary_expression -> AT_EXPR LPAREN IDENT RPAREN . [ SUP_SUP_EQ SUP_SUP SUP_EQ SUP STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACKET RBRACE QUEST PRAGMA_EOL PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_EQ MINUS LPAREN LBRACKET INF_INF_EQ INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ EQ ELLIPSIS DOT COMMA COLON CIRC_EQ CIRC ARROW AND_EQ AND_AND AND ]
## Transitions:
## Reductions:
-- On SUP_SUP_EQ SUP_SUP SUP_EQ SUP STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACKET RBRACE QUEST PRAGMA_EOL PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_EQ MINUS LPAREN LBRACKET INF_INF_EQ INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ EQ ELLIPSIS DOT COMMA COLON CIRC_EQ CIRC ARROW AND_EQ AND_AND AND
--   reduce production primary_expression -> AT_EXPR LPAREN IDENT RPAREN

State 60:
## Known stack suffix:
## AND_AND
## LR(1) items:
unary_expression -> AND_AND . IDENT [ SUP_SUP_EQ SUP_SUP SUP_EQ SUP STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACKET RBRACE QUEST PRAGMA_EOL PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_EQ MINUS INF_INF_EQ INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ EQ ELLIPSIS COMMA COLON CIRC_EQ CIRC AND_EQ AND_AND AND ]
## Transitions:
-- On IDENT shift to state 61
## Reductions:

State 61:
## Known stack suffix:
## AND_AND IDENT
## LR(1) items:
unary_expression -> AND_AND IDENT . [ SUP_SUP_EQ SUP_SUP SUP_EQ SUP STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACKET RBRACE QUEST PRAGMA_EOL PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_EQ MINUS INF_INF_EQ INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ EQ ELLIPSIS COMMA COLON CIRC_EQ CIRC AND_EQ AND_AND AND ]
## Transitions:
## Reductions:
-- On SUP_SUP_EQ SUP_SUP SUP_EQ SUP STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACKET RBRACE QUEST PRAGMA_EOL PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_EQ MINUS INF_INF_EQ INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ EQ ELLIPSIS COMMA COLON CIRC_EQ CIRC AND_EQ AND_AND AND
--   reduce production unary_expression -> AND_AND IDENT

State 62:
## Known stack suffix:
## AND
## LR(1) items:
unary_expression -> AND . cast_expression [ SUP_SUP_EQ SUP_SUP SUP_EQ SUP STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACKET RBRACE QUEST PRAGMA_EOL PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_EQ MINUS INF_INF_EQ INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ EQ ELLIPSIS COMMA COLON CIRC_EQ CIRC AND_EQ AND_AND AND ]
## Transitions:
-- On TILDE shift to state 32
-- On STAR shift to state 33
-- On SIZEOF shift to state 34
-- On PRETTY_FUNCTION__ shift to state 35
-- On PLUS_PLUS shift to state 36
-- On PLUS shift to state 37
-- On MINUS_MINUS shift to state 38
-- On MINUS shift to state 39
-- On LPAREN shift to state 40
-- On IDENT shift to state 45
-- On FUNCTION__ shift to state 46
-- On EXCLAM shift to state 47
-- On CST_WSTRING shift to state 48
-- On CST_WCHAR shift to state 49
-- On CST_STRING shift to state 50
-- On CST_INT shift to state 51
-- On CST_FLOAT shift to state 52
-- On CST_CHAR shift to state 53
-- On BUILTIN_VA_ARG shift to state 54
-- On AT_EXPR shift to state 56
-- On AND_AND shift to state 60
-- On AND shift to state 62
-- On ALIGNOF shift to state 63
-- On wstring_list shift to state 98
-- On unary_expression shift to state 101
-- On string_list shift to state 106
-- On string_constant shift to state 108
-- On primary_expression shift to state 111
-- On postfix_expression shift to state 112
-- On paren_comma_expression shift to state 120
-- On one_string shift to state 121
-- On constant shift to state 124
-- On cast_expression shift to state 658
## Reductions:

State 63:
## Known stack suffix:
## ALIGNOF
## LR(1) items:
unary_expression -> ALIGNOF . unary_expression [ SUP_SUP_EQ SUP_SUP SUP_EQ SUP STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACKET RBRACE QUEST PRAGMA_EOL PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_EQ MINUS INF_INF_EQ INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ EQ ELLIPSIS COMMA COLON CIRC_EQ CIRC AND_EQ AND_AND AND ]
unary_expression -> ALIGNOF . LPAREN type_name RPAREN [ SUP_SUP_EQ SUP_SUP SUP_EQ SUP STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACKET RBRACE QUEST PRAGMA_EOL PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_EQ MINUS INF_INF_EQ INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ EQ ELLIPSIS COMMA COLON CIRC_EQ CIRC AND_EQ AND_AND AND ]
## Transitions:
-- On TILDE shift to state 32
-- On STAR shift to state 33
-- On SIZEOF shift to state 34
-- On PRETTY_FUNCTION__ shift to state 35
-- On PLUS_PLUS shift to state 36
-- On PLUS shift to state 37
-- On MINUS_MINUS shift to state 38
-- On MINUS shift to state 39
-- On LPAREN shift to state 64
-- On IDENT shift to state 45
-- On FUNCTION__ shift to state 46
-- On EXCLAM shift to state 47
-- On CST_WSTRING shift to state 48
-- On CST_WCHAR shift to state 49
-- On CST_STRING shift to state 50
-- On CST_INT shift to state 51
-- On CST_FLOAT shift to state 52
-- On CST_CHAR shift to state 53
-- On BUILTIN_VA_ARG shift to state 54
-- On AT_EXPR shift to state 56
-- On AND_AND shift to state 60
-- On AND shift to state 62
-- On ALIGNOF shift to state 63
-- On wstring_list shift to state 98
-- On unary_expression shift to state 657
-- On string_list shift to state 106
-- On string_constant shift to state 108
-- On primary_expression shift to state 111
-- On postfix_expression shift to state 112
-- On paren_comma_expression shift to state 120
-- On one_string shift to state 121
-- On constant shift to state 124
## Reductions:

State 64:
## Known stack suffix:
## ALIGNOF LPAREN
## LR(1) items:
paren_comma_expression -> LPAREN . comma_expression RPAREN [ SUP_SUP_EQ SUP_SUP SUP_EQ SUP STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACKET RBRACE QUEST PRAGMA_EOL PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_EQ MINUS LPAREN LBRACKET INF_INF_EQ INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ EQ ELLIPSIS DOT COMMA COLON CIRC_EQ CIRC ARROW AND_EQ AND_AND AND ]
paren_comma_expression -> LPAREN . error RPAREN [ SUP_SUP_EQ SUP_SUP SUP_EQ SUP STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACKET RBRACE QUEST PRAGMA_EOL PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_EQ MINUS LPAREN LBRACKET INF_INF_EQ INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ EQ ELLIPSIS DOT COMMA COLON CIRC_EQ CIRC ARROW AND_EQ AND_AND AND ]
postfix_expression -> LPAREN . type_name RPAREN LBRACE initialiser_list_opt RBRACE [ SUP_SUP_EQ SUP_SUP SUP_EQ SUP STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACKET RBRACE QUEST PRAGMA_EOL PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_EQ MINUS LPAREN LBRACKET INF_INF_EQ INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ EQ ELLIPSIS DOT COMMA COLON CIRC_EQ CIRC ARROW AND_EQ AND_AND AND ]
primary_expression -> LPAREN . block RPAREN [ SUP_SUP_EQ SUP_SUP SUP_EQ SUP STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACKET RBRACE QUEST PRAGMA_EOL PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_EQ MINUS LPAREN LBRACKET INF_INF_EQ INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ EQ ELLIPSIS DOT COMMA COLON CIRC_EQ CIRC ARROW AND_EQ AND_AND AND ]
unary_expression -> ALIGNOF LPAREN . type_name RPAREN [ SUP_SUP_EQ SUP_SUP SUP_EQ SUP STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACKET RBRACE QUEST PRAGMA_EOL PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_EQ MINUS INF_INF_EQ INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ EQ ELLIPSIS COMMA COLON CIRC_EQ CIRC AND_EQ AND_AND AND ]
## Transitions:
-- On error shift to state 41
-- On VOLATILE shift to state 1
-- On VOID shift to state 2
-- On UNSIGNED shift to state 3
-- On UNION shift to state 4
-- On TYPEOF shift to state 9
-- On TYPEDEF shift to state 11
-- On TILDE shift to state 32
-- On THREAD shift to state 12
-- On STRUCT shift to state 13
-- On STATIC shift to state 15
-- On STAR shift to state 33
-- On SIZEOF shift to state 34
-- On SIGNED shift to state 16
-- On SHORT shift to state 17
-- On RESTRICT shift to state 18
-- On REGISTER shift to state 19
-- On PRETTY_FUNCTION__ shift to state 35
-- On PLUS_PLUS shift to state 36
-- On PLUS shift to state 37
-- On NAMED_TYPE shift to state 20
-- On MSATTR shift to state 21
-- On MINUS_MINUS shift to state 38
-- On MINUS shift to state 39
-- On LPAREN shift to state 40
-- On LONG shift to state 22
-- On LBRACE shift to state 65
-- On INT64 shift to state 23
-- On INT shift to state 24
-- On INLINE shift to state 25
-- On IDENT shift to state 45
-- On FUNCTION__ shift to state 46
-- On FLOAT shift to state 26
-- On EXTERN shift to state 27
-- On EXCLAM shift to state 47
-- On ENUM shift to state 28
-- On DOUBLE shift to state 66
-- On DECLSPEC shift to state 67
-- On CST_WSTRING shift to state 48
-- On CST_WCHAR shift to state 49
-- On CST_STRING shift to state 50
-- On CST_INT shift to state 51
-- On CST_FLOAT shift to state 52
-- On CST_CHAR shift to state 53
-- On CONST shift to state 78
-- On CHAR shift to state 79
-- On BUILTIN_VA_ARG shift to state 54
-- On AUTO shift to state 80
-- On AT_SPECIFIER shift to state 81
-- On AT_EXPR shift to state 56
-- On ATTRIBUTE shift to state 85
-- On AND_AND shift to state 60
-- On AND shift to state 62
-- On ALIGNOF shift to state 63
-- On wstring_list shift to state 98
-- On unary_expression shift to state 101
-- On type_spec shift to state 89
-- On type_name shift to state 655
-- On string_list shift to state 106
-- On string_constant shift to state 108
-- On shift_expression shift to state 109
-- On relational_expression shift to state 116
-- On primary_expression shift to state 111
-- On postfix_expression shift to state 112
-- On paren_comma_expression shift to state 120
-- On one_string shift to state 121
-- On multiplicative_expression shift to state 122
-- On logical_or_expression shift to state 143
-- On logical_and_expression shift to state 147
-- On expression shift to state 165
-- On equality_expression shift to state 149
-- On decl_spec_list shift to state 245
-- On cvspec shift to state 92
-- On constant shift to state 124
-- On conditional_expression shift to state 167
-- On comma_expression shift to state 312
-- On cast_expression shift to state 169
-- On block_begin shift to state 314
-- On block shift to state 538
-- On bitwise_xor_expression shift to state 154
-- On bitwise_or_expression shift to state 164
-- On bitwise_and_expression shift to state 162
-- On attribute_nocv shift to state 95
-- On assignment_expression shift to state 192
-- On additive_expression shift to state 136
## Reductions:

State 65:
## Known stack suffix:
## LBRACE
## LR(1) items:
block_begin -> LBRACE . [ error WHILE VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF TRY TILDE THREAD SWITCH STRUCT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRETTY_FUNCTION__ PLUS_PLUS PLUS NAMED_TYPE MSATTR MSASM MINUS_MINUS MINUS LPAREN LONG LBRACE LABEL__ INT64 INT INLINE IF IDENT GOTO FUNCTION__ FOR FLOAT EXTERN EXCLAM ENUM DOUBLE DO DEFAULT DECLSPEC CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONTINUE CONST CHAR CASE BUILTIN_VA_ARG BREAK BLOCKATTRIBUTE AUTO AT_SPECIFIER AT_EXPR ATTRIBUTE ASM AND_AND AND ALIGNOF ]
## Transitions:
## Reductions:
-- On error WHILE VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF TRY TILDE THREAD SWITCH STRUCT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRETTY_FUNCTION__ PLUS_PLUS PLUS NAMED_TYPE MSATTR MSASM MINUS_MINUS MINUS LPAREN LONG LBRACE LABEL__ INT64 INT INLINE IF IDENT GOTO FUNCTION__ FOR FLOAT EXTERN EXCLAM ENUM DOUBLE DO DEFAULT DECLSPEC CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONTINUE CONST CHAR CASE BUILTIN_VA_ARG BREAK BLOCKATTRIBUTE AUTO AT_SPECIFIER AT_EXPR ATTRIBUTE ASM AND_AND AND ALIGNOF
--   reduce production block_begin -> LBRACE

State 66:
## Known stack suffix:
## DOUBLE
## LR(1) items:
type_spec -> DOUBLE . [ VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG LBRACKET INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST COMMA COLON CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ]
## Transitions:
## Reductions:
-- On VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG LBRACKET INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST COMMA COLON CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE
--   reduce production type_spec -> DOUBLE

State 67:
## Known stack suffix:
## DECLSPEC
## LR(1) items:
attribute_nocv -> DECLSPEC . paren_attr_list_ne [ VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG LBRACKET INT64 INT INLINE IDENT FLOAT EXTERN EQ ENUM DOUBLE DECLSPEC CONST COMMA COLON CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ASM ]
## Transitions:
-- On LPAREN shift to state 68
-- On paren_attr_list_ne shift to state 654
## Reductions:

State 68:
## Known stack suffix:
## LPAREN
## LR(1) items:
paren_attr_list_ne -> LPAREN . attr_list_ne RPAREN [ VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG LBRACKET LBRACE INT64 INT INLINE IDENT FLOAT EXTERN EQ ENUM DOUBLE DECLSPEC CONST COMMA COLON CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ASM ]
paren_attr_list_ne -> LPAREN . error RPAREN [ VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG LBRACKET LBRACE INT64 INT INLINE IDENT FLOAT EXTERN EQ ENUM DOUBLE DECLSPEC CONST COMMA COLON CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ASM ]
## Transitions:
-- On error shift to state 69
-- On VOLATILE shift to state 73
-- On TILDE shift to state 74
-- On STAR shift to state 75
-- On SIZEOF shift to state 76
-- On PRETTY_FUNCTION__ shift to state 35
-- On PLUS shift to state 292
-- On NAMED_TYPE shift to state 293
-- On MINUS shift to state 294
-- On LPAREN shift to state 295
-- On IDENT shift to state 296
-- On FUNCTION__ shift to state 46
-- On EXCLAM shift to state 299
-- On DEFAULT shift to state 300
-- On CST_STRING shift to state 50
-- On CST_INT shift to state 303
-- On CONST shift to state 306
-- On AND shift to state 307
-- On ALIGNOF shift to state 308
-- On unary_attr shift to state 541
-- On string_list shift to state 106
-- On string_constant shift to state 542
-- On shift_attr shift to state 551
-- On relational_attr shift to state 568
-- On primary_attr shift to state 543
-- On postfix_attr shift to state 544
-- On one_string shift to state 121
-- On multiplicative_attr shift to state 553
-- On logical_or_attr shift to state 578
-- On logical_and_attr shift to state 597
-- On equality_attr shift to state 582
-- On cast_attr shift to state 560
-- On bitwise_xor_attr shift to state 587
-- On bitwise_or_attr shift to state 596
-- On bitwise_and_attr shift to state 595
-- On attr_list_ne shift to state 598
-- On attr shift to state 600
-- On additive_attr shift to state 571
## Reductions:

State 69:
## Known stack suffix:
## LPAREN error
## LR(1) items:
attr_list_ne -> error . COMMA attr_list_ne [ RPAREN ]
paren_attr_list_ne -> LPAREN error . RPAREN [ VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD SUP_SUP SUP_EQ SUP STRUCT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER PRAGMA_EOL PLUS PIPE_PIPE PIPE PERCENT NAMED_TYPE MSATTR MINUS LPAREN LONG LBRACKET LBRACE INT64 INT INLINE INF_INF INF_EQ INF IDENT FLOAT EXTERN EXCLAM_EQ EQ_EQ EQ ENUM DOUBLE DOT DECLSPEC CONST COMMA COLON CIRC CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ASM ARROW AND_AND AND ]
## Transitions:
-- On RPAREN shift to state 70
-- On COMMA shift to state 71
## Reductions:

State 70:
## Known stack suffix:
## LPAREN error RPAREN
## LR(1) items:
paren_attr_list_ne -> LPAREN error RPAREN . [ VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD SUP_SUP SUP_EQ SUP STRUCT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER PRAGMA_EOL PLUS PIPE_PIPE PIPE PERCENT NAMED_TYPE MSATTR MINUS LPAREN LONG LBRACKET LBRACE INT64 INT INLINE INF_INF INF_EQ INF IDENT FLOAT EXTERN EXCLAM_EQ EQ_EQ EQ ENUM DOUBLE DOT DECLSPEC CONST COMMA COLON CIRC CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ASM ARROW AND_AND AND ]
## Transitions:
## Reductions:
-- On VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD SUP_SUP SUP_EQ SUP STRUCT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER PRAGMA_EOL PLUS PIPE_PIPE PIPE PERCENT NAMED_TYPE MSATTR MINUS LPAREN LONG LBRACKET LBRACE INT64 INT INLINE INF_INF INF_EQ INF IDENT FLOAT EXTERN EXCLAM_EQ EQ_EQ EQ ENUM DOUBLE DOT DECLSPEC CONST COMMA COLON CIRC CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ASM ARROW AND_AND AND
--   reduce production paren_attr_list_ne -> LPAREN error RPAREN

State 71:
## Known stack suffix:
## error COMMA
## LR(1) items:
attr_list_ne -> error COMMA . attr_list_ne [ RPAREN ]
## Transitions:
-- On error shift to state 72
-- On VOLATILE shift to state 73
-- On TILDE shift to state 74
-- On STAR shift to state 75
-- On SIZEOF shift to state 76
-- On PRETTY_FUNCTION__ shift to state 35
-- On PLUS shift to state 292
-- On NAMED_TYPE shift to state 293
-- On MINUS shift to state 294
-- On LPAREN shift to state 295
-- On IDENT shift to state 296
-- On FUNCTION__ shift to state 46
-- On EXCLAM shift to state 299
-- On DEFAULT shift to state 300
-- On CST_STRING shift to state 50
-- On CST_INT shift to state 303
-- On CONST shift to state 306
-- On AND shift to state 307
-- On ALIGNOF shift to state 308
-- On unary_attr shift to state 541
-- On string_list shift to state 106
-- On string_constant shift to state 542
-- On shift_attr shift to state 551
-- On relational_attr shift to state 568
-- On primary_attr shift to state 543
-- On postfix_attr shift to state 544
-- On one_string shift to state 121
-- On multiplicative_attr shift to state 553
-- On logical_or_attr shift to state 578
-- On logical_and_attr shift to state 597
-- On equality_attr shift to state 582
-- On cast_attr shift to state 560
-- On bitwise_xor_attr shift to state 587
-- On bitwise_or_attr shift to state 596
-- On bitwise_and_attr shift to state 595
-- On attr_list_ne shift to state 653
-- On attr shift to state 600
-- On additive_attr shift to state 571
## Reductions:

State 72:
## Known stack suffix:
## error
## LR(1) items:
attr_list_ne -> error . COMMA attr_list_ne [ RPAREN ]
## Transitions:
-- On COMMA shift to state 71
## Reductions:

State 73:
## Known stack suffix:
## VOLATILE
## LR(1) items:
primary_attr -> VOLATILE . [ SUP_SUP SUP_EQ SUP STAR SLASH SEMICOLON RPAREN PRAGMA_EOL PLUS PIPE_PIPE PIPE PERCENT MINUS INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ DOT COMMA CIRC ARROW AND_AND AND ]
## Transitions:
## Reductions:
-- On SUP_SUP SUP_EQ SUP STAR SLASH SEMICOLON RPAREN PRAGMA_EOL PLUS PIPE_PIPE PIPE PERCENT MINUS INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ DOT COMMA CIRC ARROW AND_AND AND
--   reduce production primary_attr -> VOLATILE

State 74:
## Known stack suffix:
## TILDE
## LR(1) items:
unary_attr -> TILDE . cast_attr [ SUP_SUP SUP_EQ SUP STAR SLASH SEMICOLON RPAREN PRAGMA_EOL PLUS PIPE_PIPE PIPE PERCENT MINUS INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ COMMA CIRC AND_AND AND ]
## Transitions:
-- On VOLATILE shift to state 73
-- On TILDE shift to state 74
-- On STAR shift to state 75
-- On SIZEOF shift to state 76
-- On PRETTY_FUNCTION__ shift to state 35
-- On PLUS shift to state 292
-- On NAMED_TYPE shift to state 293
-- On MINUS shift to state 294
-- On LPAREN shift to state 295
-- On IDENT shift to state 296
-- On FUNCTION__ shift to state 46
-- On EXCLAM shift to state 299
-- On DEFAULT shift to state 300
-- On CST_STRING shift to state 50
-- On CST_INT shift to state 303
-- On CONST shift to state 306
-- On AND shift to state 307
-- On ALIGNOF shift to state 308
-- On unary_attr shift to state 541
-- On string_list shift to state 106
-- On string_constant shift to state 542
-- On primary_attr shift to state 543
-- On postfix_attr shift to state 544
-- On one_string shift to state 121
-- On cast_attr shift to state 652
## Reductions:

State 75:
## Known stack suffix:
## STAR
## LR(1) items:
unary_attr -> STAR . cast_attr [ SUP_SUP SUP_EQ SUP STAR SLASH SEMICOLON RPAREN PRAGMA_EOL PLUS PIPE_PIPE PIPE PERCENT MINUS INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ COMMA CIRC AND_AND AND ]
## Transitions:
-- On VOLATILE shift to state 73
-- On TILDE shift to state 74
-- On STAR shift to state 75
-- On SIZEOF shift to state 76
-- On PRETTY_FUNCTION__ shift to state 35
-- On PLUS shift to state 292
-- On NAMED_TYPE shift to state 293
-- On MINUS shift to state 294
-- On LPAREN shift to state 295
-- On IDENT shift to state 296
-- On FUNCTION__ shift to state 46
-- On EXCLAM shift to state 299
-- On DEFAULT shift to state 300
-- On CST_STRING shift to state 50
-- On CST_INT shift to state 303
-- On CONST shift to state 306
-- On AND shift to state 307
-- On ALIGNOF shift to state 308
-- On unary_attr shift to state 541
-- On string_list shift to state 106
-- On string_constant shift to state 542
-- On primary_attr shift to state 543
-- On postfix_attr shift to state 544
-- On one_string shift to state 121
-- On cast_attr shift to state 651
## Reductions:

State 76:
## Known stack suffix:
## SIZEOF
## LR(1) items:
unary_attr -> SIZEOF . unary_expression [ SUP_SUP SUP_EQ SUP STAR SLASH SEMICOLON RPAREN PRAGMA_EOL PLUS PIPE_PIPE PIPE PERCENT MINUS INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ COMMA CIRC AND_AND AND ]
unary_attr -> SIZEOF . LPAREN type_name RPAREN [ SUP_SUP SUP_EQ SUP STAR SLASH SEMICOLON RPAREN PRAGMA_EOL PLUS PIPE_PIPE PIPE PERCENT MINUS INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ COMMA CIRC AND_AND AND ]
## Transitions:
-- On TILDE shift to state 32
-- On STAR shift to state 33
-- On SIZEOF shift to state 34
-- On PRETTY_FUNCTION__ shift to state 35
-- On PLUS_PLUS shift to state 36
-- On PLUS shift to state 37
-- On MINUS_MINUS shift to state 38
-- On MINUS shift to state 39
-- On LPAREN shift to state 77
-- On IDENT shift to state 45
-- On FUNCTION__ shift to state 46
-- On EXCLAM shift to state 47
-- On CST_WSTRING shift to state 48
-- On CST_WCHAR shift to state 49
-- On CST_STRING shift to state 50
-- On CST_INT shift to state 51
-- On CST_FLOAT shift to state 52
-- On CST_CHAR shift to state 53
-- On BUILTIN_VA_ARG shift to state 54
-- On AT_EXPR shift to state 56
-- On AND_AND shift to state 60
-- On AND shift to state 62
-- On ALIGNOF shift to state 63
-- On wstring_list shift to state 98
-- On unary_expression shift to state 650
-- On string_list shift to state 106
-- On string_constant shift to state 108
-- On primary_expression shift to state 111
-- On postfix_expression shift to state 112
-- On paren_comma_expression shift to state 120
-- On one_string shift to state 121
-- On constant shift to state 124
## Reductions:

State 77:
## Known stack suffix:
## SIZEOF LPAREN
## LR(1) items:
paren_comma_expression -> LPAREN . comma_expression RPAREN [ SUP_SUP SUP_EQ SUP STAR SLASH SEMICOLON RPAREN PRAGMA_EOL PLUS_PLUS PLUS PIPE_PIPE PIPE PERCENT MINUS_MINUS MINUS LPAREN LBRACKET INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ DOT COMMA CIRC ARROW AND_AND AND ]
paren_comma_expression -> LPAREN . error RPAREN [ SUP_SUP SUP_EQ SUP STAR SLASH SEMICOLON RPAREN PRAGMA_EOL PLUS_PLUS PLUS PIPE_PIPE PIPE PERCENT MINUS_MINUS MINUS LPAREN LBRACKET INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ DOT COMMA CIRC ARROW AND_AND AND ]
postfix_expression -> LPAREN . type_name RPAREN LBRACE initialiser_list_opt RBRACE [ SUP_SUP SUP_EQ SUP STAR SLASH SEMICOLON RPAREN PRAGMA_EOL PLUS_PLUS PLUS PIPE_PIPE PIPE PERCENT MINUS_MINUS MINUS LPAREN LBRACKET INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ DOT COMMA CIRC ARROW AND_AND AND ]
primary_expression -> LPAREN . block RPAREN [ SUP_SUP SUP_EQ SUP STAR SLASH SEMICOLON RPAREN PRAGMA_EOL PLUS_PLUS PLUS PIPE_PIPE PIPE PERCENT MINUS_MINUS MINUS LPAREN LBRACKET INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ DOT COMMA CIRC ARROW AND_AND AND ]
unary_attr -> SIZEOF LPAREN . type_name RPAREN [ SUP_SUP SUP_EQ SUP STAR SLASH SEMICOLON RPAREN PRAGMA_EOL PLUS PIPE_PIPE PIPE PERCENT MINUS INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ COMMA CIRC AND_AND AND ]
## Transitions:
-- On error shift to state 41
-- On VOLATILE shift to state 1
-- On VOID shift to state 2
-- On UNSIGNED shift to state 3
-- On UNION shift to state 4
-- On TYPEOF shift to state 9
-- On TYPEDEF shift to state 11
-- On TILDE shift to state 32
-- On THREAD shift to state 12
-- On STRUCT shift to state 13
-- On STATIC shift to state 15
-- On STAR shift to state 33
-- On SIZEOF shift to state 34
-- On SIGNED shift to state 16
-- On SHORT shift to state 17
-- On RESTRICT shift to state 18
-- On REGISTER shift to state 19
-- On PRETTY_FUNCTION__ shift to state 35
-- On PLUS_PLUS shift to state 36
-- On PLUS shift to state 37
-- On NAMED_TYPE shift to state 20
-- On MSATTR shift to state 21
-- On MINUS_MINUS shift to state 38
-- On MINUS shift to state 39
-- On LPAREN shift to state 40
-- On LONG shift to state 22
-- On LBRACE shift to state 65
-- On INT64 shift to state 23
-- On INT shift to state 24
-- On INLINE shift to state 25
-- On IDENT shift to state 45
-- On FUNCTION__ shift to state 46
-- On FLOAT shift to state 26
-- On EXTERN shift to state 27
-- On EXCLAM shift to state 47
-- On ENUM shift to state 28
-- On DOUBLE shift to state 66
-- On DECLSPEC shift to state 67
-- On CST_WSTRING shift to state 48
-- On CST_WCHAR shift to state 49
-- On CST_STRING shift to state 50
-- On CST_INT shift to state 51
-- On CST_FLOAT shift to state 52
-- On CST_CHAR shift to state 53
-- On CONST shift to state 78
-- On CHAR shift to state 79
-- On BUILTIN_VA_ARG shift to state 54
-- On AUTO shift to state 80
-- On AT_SPECIFIER shift to state 81
-- On AT_EXPR shift to state 56
-- On ATTRIBUTE shift to state 85
-- On AND_AND shift to state 60
-- On AND shift to state 62
-- On ALIGNOF shift to state 63
-- On wstring_list shift to state 98
-- On unary_expression shift to state 101
-- On type_spec shift to state 89
-- On type_name shift to state 102
-- On string_list shift to state 106
-- On string_constant shift to state 108
-- On shift_expression shift to state 109
-- On relational_expression shift to state 116
-- On primary_expression shift to state 111
-- On postfix_expression shift to state 112
-- On paren_comma_expression shift to state 120
-- On one_string shift to state 121
-- On multiplicative_expression shift to state 122
-- On logical_or_expression shift to state 143
-- On logical_and_expression shift to state 147
-- On expression shift to state 165
-- On equality_expression shift to state 149
-- On decl_spec_list shift to state 245
-- On cvspec shift to state 92
-- On constant shift to state 124
-- On conditional_expression shift to state 167
-- On comma_expression shift to state 312
-- On cast_expression shift to state 169
-- On block_begin shift to state 314
-- On block shift to state 538
-- On bitwise_xor_expression shift to state 154
-- On bitwise_or_expression shift to state 164
-- On bitwise_and_expression shift to state 162
-- On attribute_nocv shift to state 95
-- On assignment_expression shift to state 192
-- On additive_expression shift to state 136
## Reductions:

State 78:
## Known stack suffix:
## CONST
## LR(1) items:
cvspec -> CONST . [ VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG LBRACKET INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST COMMA COLON CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ]
## Transitions:
## Reductions:
-- On VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG LBRACKET INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST COMMA COLON CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE
--   reduce production cvspec -> CONST

State 79:
## Known stack suffix:
## CHAR
## LR(1) items:
type_spec -> CHAR . [ VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG LBRACKET INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST COMMA COLON CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ]
## Transitions:
## Reductions:
-- On VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG LBRACKET INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST COMMA COLON CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE
--   reduce production type_spec -> CHAR

State 80:
## Known stack suffix:
## AUTO
## LR(1) items:
decl_spec_list -> AUTO . decl_spec_list_opt [ STAR SEMICOLON RPAREN NAMED_TYPE LPAREN LBRACKET IDENT COMMA COLON AT_NAME ]
## Transitions:
-- On VOLATILE shift to state 1
-- On VOID shift to state 2
-- On UNSIGNED shift to state 3
-- On UNION shift to state 4
-- On TYPEOF shift to state 9
-- On TYPEDEF shift to state 11
-- On THREAD shift to state 12
-- On STRUCT shift to state 13
-- On STATIC shift to state 15
-- On SIGNED shift to state 16
-- On SHORT shift to state 17
-- On RESTRICT shift to state 18
-- On REGISTER shift to state 19
-- On NAMED_TYPE shift to state 20
-- On MSATTR shift to state 21
-- On LONG shift to state 22
-- On INT64 shift to state 23
-- On INT shift to state 24
-- On INLINE shift to state 25
-- On FLOAT shift to state 26
-- On EXTERN shift to state 27
-- On ENUM shift to state 28
-- On DOUBLE shift to state 66
-- On DECLSPEC shift to state 67
-- On CONST shift to state 78
-- On CHAR shift to state 79
-- On AUTO shift to state 80
-- On AT_SPECIFIER shift to state 81
-- On ATTRIBUTE shift to state 85
-- On type_spec shift to state 89
-- On decl_spec_list_opt shift to state 97
-- On decl_spec_list shift to state 94
-- On cvspec shift to state 92
-- On attribute_nocv shift to state 95
## Reductions:
-- On STAR SEMICOLON RPAREN LPAREN LBRACKET IDENT COMMA COLON AT_NAME
--   reduce production decl_spec_list_opt ->

State 81:
## Known stack suffix:
## AT_SPECIFIER
## LR(1) items:
decl_spec_list -> AT_SPECIFIER . LPAREN IDENT RPAREN [ STAR SEMICOLON RPAREN NAMED_TYPE LPAREN LBRACKET IDENT COMMA COLON AT_NAME ]
## Transitions:
-- On LPAREN shift to state 82
## Reductions:

State 82:
## Known stack suffix:
## AT_SPECIFIER LPAREN
## LR(1) items:
decl_spec_list -> AT_SPECIFIER LPAREN . IDENT RPAREN [ STAR SEMICOLON RPAREN NAMED_TYPE LPAREN LBRACKET IDENT COMMA COLON AT_NAME ]
## Transitions:
-- On IDENT shift to state 83
## Reductions:

State 83:
## Known stack suffix:
## AT_SPECIFIER LPAREN IDENT
## LR(1) items:
decl_spec_list -> AT_SPECIFIER LPAREN IDENT . RPAREN [ STAR SEMICOLON RPAREN NAMED_TYPE LPAREN LBRACKET IDENT COMMA COLON AT_NAME ]
## Transitions:
-- On RPAREN shift to state 84
## Reductions:

State 84:
## Known stack suffix:
## AT_SPECIFIER LPAREN IDENT RPAREN
## LR(1) items:
decl_spec_list -> AT_SPECIFIER LPAREN IDENT RPAREN . [ STAR SEMICOLON RPAREN NAMED_TYPE LPAREN LBRACKET IDENT COMMA COLON AT_NAME ]
## Transitions:
## Reductions:
-- On STAR SEMICOLON RPAREN NAMED_TYPE LPAREN LBRACKET IDENT COMMA COLON AT_NAME
--   reduce production decl_spec_list -> AT_SPECIFIER LPAREN IDENT RPAREN

State 85:
## Known stack suffix:
## ATTRIBUTE
## LR(1) items:
attribute_nocv -> ATTRIBUTE . LPAREN paren_attr_list_ne RPAREN [ VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG LBRACKET INT64 INT INLINE IDENT FLOAT EXTERN EQ ENUM DOUBLE DECLSPEC CONST COMMA COLON CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ASM ]
## Transitions:
-- On LPAREN shift to state 86
## Reductions:

State 86:
## Known stack suffix:
## ATTRIBUTE LPAREN
## LR(1) items:
attribute_nocv -> ATTRIBUTE LPAREN . paren_attr_list_ne RPAREN [ VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG LBRACKET INT64 INT INLINE IDENT FLOAT EXTERN EQ ENUM DOUBLE DECLSPEC CONST COMMA COLON CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ASM ]
## Transitions:
-- On LPAREN shift to state 68
-- On paren_attr_list_ne shift to state 87
## Reductions:

State 87:
## Known stack suffix:
## ATTRIBUTE LPAREN paren_attr_list_ne
## LR(1) items:
attribute_nocv -> ATTRIBUTE LPAREN paren_attr_list_ne . RPAREN [ VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG LBRACKET INT64 INT INLINE IDENT FLOAT EXTERN EQ ENUM DOUBLE DECLSPEC CONST COMMA COLON CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ASM ]
## Transitions:
-- On RPAREN shift to state 88
## Reductions:

State 88:
## Known stack suffix:
## ATTRIBUTE LPAREN paren_attr_list_ne RPAREN
## LR(1) items:
attribute_nocv -> ATTRIBUTE LPAREN paren_attr_list_ne RPAREN . [ VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG LBRACKET INT64 INT INLINE IDENT FLOAT EXTERN EQ ENUM DOUBLE DECLSPEC CONST COMMA COLON CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ASM ]
## Transitions:
## Reductions:
-- On VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG LBRACKET INT64 INT INLINE IDENT FLOAT EXTERN EQ ENUM DOUBLE DECLSPEC CONST COMMA COLON CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ASM
--   reduce production attribute_nocv -> ATTRIBUTE LPAREN paren_attr_list_ne RPAREN

State 89:
## Known stack suffix:
## type_spec
## LR(1) items:
decl_spec_list -> type_spec . decl_spec_list_opt_no_named [ STAR SEMICOLON RPAREN NAMED_TYPE LPAREN LBRACKET IDENT COMMA COLON AT_NAME ]
## Transitions:
-- On VOLATILE shift to state 1
-- On VOID shift to state 2
-- On UNSIGNED shift to state 3
-- On UNION shift to state 4
-- On TYPEOF shift to state 9
-- On TYPEDEF shift to state 11
-- On THREAD shift to state 12
-- On STRUCT shift to state 13
-- On STATIC shift to state 15
-- On SIGNED shift to state 16
-- On SHORT shift to state 17
-- On RESTRICT shift to state 18
-- On REGISTER shift to state 19
-- On MSATTR shift to state 21
-- On LONG shift to state 22
-- On INT64 shift to state 23
-- On INT shift to state 24
-- On INLINE shift to state 25
-- On FLOAT shift to state 26
-- On EXTERN shift to state 27
-- On ENUM shift to state 28
-- On DOUBLE shift to state 66
-- On DECLSPEC shift to state 67
-- On CONST shift to state 78
-- On CHAR shift to state 79
-- On AUTO shift to state 80
-- On AT_SPECIFIER shift to state 81
-- On ATTRIBUTE shift to state 85
-- On type_spec shift to state 89
-- On decl_spec_list_opt_no_named shift to state 90
-- On decl_spec_list shift to state 91
-- On cvspec shift to state 92
-- On attribute_nocv shift to state 95
## Reductions:
-- On STAR SEMICOLON RPAREN NAMED_TYPE LPAREN LBRACKET IDENT COMMA COLON AT_NAME
--   reduce production decl_spec_list_opt_no_named ->

State 90:
## Known stack suffix:
## type_spec decl_spec_list_opt_no_named
## LR(1) items:
decl_spec_list -> type_spec decl_spec_list_opt_no_named . [ STAR SEMICOLON RPAREN NAMED_TYPE LPAREN LBRACKET IDENT COMMA COLON AT_NAME ]
## Transitions:
## Reductions:
-- On STAR SEMICOLON RPAREN NAMED_TYPE LPAREN LBRACKET IDENT COMMA COLON AT_NAME
--   reduce production decl_spec_list -> type_spec decl_spec_list_opt_no_named

State 91:
## Known stack suffix:
## decl_spec_list
## LR(1) items:
decl_spec_list_opt_no_named -> decl_spec_list . [ STAR SEMICOLON RPAREN NAMED_TYPE LPAREN LBRACKET IDENT COMMA COLON AT_NAME ]
## Transitions:
## Reductions:
-- On STAR SEMICOLON RPAREN NAMED_TYPE LPAREN LBRACKET IDENT COMMA COLON AT_NAME
--   reduce production decl_spec_list_opt_no_named -> decl_spec_list

State 92:
## Known stack suffix:
## cvspec
## LR(1) items:
decl_spec_list -> cvspec . decl_spec_list_opt [ STAR SEMICOLON RPAREN NAMED_TYPE LPAREN LBRACKET IDENT COMMA COLON AT_NAME ]
## Transitions:
-- On VOLATILE shift to state 1
-- On VOID shift to state 2
-- On UNSIGNED shift to state 3
-- On UNION shift to state 4
-- On TYPEOF shift to state 9
-- On TYPEDEF shift to state 11
-- On THREAD shift to state 12
-- On STRUCT shift to state 13
-- On STATIC shift to state 15
-- On SIGNED shift to state 16
-- On SHORT shift to state 17
-- On RESTRICT shift to state 18
-- On REGISTER shift to state 19
-- On NAMED_TYPE shift to state 20
-- On MSATTR shift to state 21
-- On LONG shift to state 22
-- On INT64 shift to state 23
-- On INT shift to state 24
-- On INLINE shift to state 25
-- On FLOAT shift to state 26
-- On EXTERN shift to state 27
-- On ENUM shift to state 28
-- On DOUBLE shift to state 66
-- On DECLSPEC shift to state 67
-- On CONST shift to state 78
-- On CHAR shift to state 79
-- On AUTO shift to state 80
-- On AT_SPECIFIER shift to state 81
-- On ATTRIBUTE shift to state 85
-- On type_spec shift to state 89
-- On decl_spec_list_opt shift to state 93
-- On decl_spec_list shift to state 94
-- On cvspec shift to state 92
-- On attribute_nocv shift to state 95
## Reductions:
-- On STAR SEMICOLON RPAREN LPAREN LBRACKET IDENT COMMA COLON AT_NAME
--   reduce production decl_spec_list_opt ->

State 93:
## Known stack suffix:
## cvspec decl_spec_list_opt
## LR(1) items:
decl_spec_list -> cvspec decl_spec_list_opt . [ STAR SEMICOLON RPAREN NAMED_TYPE LPAREN LBRACKET IDENT COMMA COLON AT_NAME ]
## Transitions:
## Reductions:
-- On STAR SEMICOLON RPAREN NAMED_TYPE LPAREN LBRACKET IDENT COMMA COLON AT_NAME
--   reduce production decl_spec_list -> cvspec decl_spec_list_opt

State 94:
## Known stack suffix:
## decl_spec_list
## LR(1) items:
decl_spec_list_opt -> decl_spec_list . [ STAR SEMICOLON RPAREN NAMED_TYPE LPAREN LBRACKET IDENT COMMA COLON AT_NAME ]
## Transitions:
## Reductions:
-- On STAR SEMICOLON RPAREN NAMED_TYPE LPAREN LBRACKET IDENT COMMA COLON AT_NAME
--   reduce production decl_spec_list_opt -> decl_spec_list

State 95:
## Known stack suffix:
## attribute_nocv
## LR(1) items:
decl_spec_list -> attribute_nocv . decl_spec_list_opt [ STAR SEMICOLON RPAREN NAMED_TYPE LPAREN LBRACKET IDENT COMMA COLON AT_NAME ]
## Transitions:
-- On VOLATILE shift to state 1
-- On VOID shift to state 2
-- On UNSIGNED shift to state 3
-- On UNION shift to state 4
-- On TYPEOF shift to state 9
-- On TYPEDEF shift to state 11
-- On THREAD shift to state 12
-- On STRUCT shift to state 13
-- On STATIC shift to state 15
-- On SIGNED shift to state 16
-- On SHORT shift to state 17
-- On RESTRICT shift to state 18
-- On REGISTER shift to state 19
-- On NAMED_TYPE shift to state 20
-- On MSATTR shift to state 21
-- On LONG shift to state 22
-- On INT64 shift to state 23
-- On INT shift to state 24
-- On INLINE shift to state 25
-- On FLOAT shift to state 26
-- On EXTERN shift to state 27
-- On ENUM shift to state 28
-- On DOUBLE shift to state 66
-- On DECLSPEC shift to state 67
-- On CONST shift to state 78
-- On CHAR shift to state 79
-- On AUTO shift to state 80
-- On AT_SPECIFIER shift to state 81
-- On ATTRIBUTE shift to state 85
-- On type_spec shift to state 89
-- On decl_spec_list_opt shift to state 96
-- On decl_spec_list shift to state 94
-- On cvspec shift to state 92
-- On attribute_nocv shift to state 95
## Reductions:
-- On STAR SEMICOLON RPAREN LPAREN LBRACKET IDENT COMMA COLON AT_NAME
--   reduce production decl_spec_list_opt ->

State 96:
## Known stack suffix:
## attribute_nocv decl_spec_list_opt
## LR(1) items:
decl_spec_list -> attribute_nocv decl_spec_list_opt . [ STAR SEMICOLON RPAREN NAMED_TYPE LPAREN LBRACKET IDENT COMMA COLON AT_NAME ]
## Transitions:
## Reductions:
-- On STAR SEMICOLON RPAREN NAMED_TYPE LPAREN LBRACKET IDENT COMMA COLON AT_NAME
--   reduce production decl_spec_list -> attribute_nocv decl_spec_list_opt

State 97:
## Known stack suffix:
## AUTO decl_spec_list_opt
## LR(1) items:
decl_spec_list -> AUTO decl_spec_list_opt . [ STAR SEMICOLON RPAREN NAMED_TYPE LPAREN LBRACKET IDENT COMMA COLON AT_NAME ]
## Transitions:
## Reductions:
-- On STAR SEMICOLON RPAREN NAMED_TYPE LPAREN LBRACKET IDENT COMMA COLON AT_NAME
--   reduce production decl_spec_list -> AUTO decl_spec_list_opt

State 98:
## Known stack suffix:
## wstring_list
## LR(1) items:
constant -> wstring_list . [ SUP_SUP_EQ SUP_SUP SUP_EQ SUP STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACKET RBRACE QUEST PRAGMA_EOL PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_EQ MINUS LPAREN LBRACKET INF_INF_EQ INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ EQ ELLIPSIS DOT COMMA COLON CIRC_EQ CIRC ARROW AND_EQ AND_AND AND ]
wstring_list -> wstring_list . one_string [ SUP_SUP_EQ SUP_SUP SUP_EQ SUP STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACKET RBRACE QUEST PRETTY_FUNCTION__ PRAGMA_EOL PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_EQ MINUS LPAREN LBRACKET INF_INF_EQ INF_INF INF_EQ INF FUNCTION__ EXCLAM_EQ EQ_EQ EQ ELLIPSIS DOT CST_WSTRING CST_STRING COMMA COLON CIRC_EQ CIRC ARROW AND_EQ AND_AND AND ]
wstring_list -> wstring_list . CST_WSTRING [ SUP_SUP_EQ SUP_SUP SUP_EQ SUP STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACKET RBRACE QUEST PRETTY_FUNCTION__ PRAGMA_EOL PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_EQ MINUS LPAREN LBRACKET INF_INF_EQ INF_INF INF_EQ INF FUNCTION__ EXCLAM_EQ EQ_EQ EQ ELLIPSIS DOT CST_WSTRING CST_STRING COMMA COLON CIRC_EQ CIRC ARROW AND_EQ AND_AND AND ]
## Transitions:
-- On PRETTY_FUNCTION__ shift to state 35
-- On FUNCTION__ shift to state 46
-- On CST_WSTRING shift to state 99
-- On CST_STRING shift to state 50
-- On one_string shift to state 100
## Reductions:
-- On SUP_SUP_EQ SUP_SUP SUP_EQ SUP STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACKET RBRACE QUEST PRAGMA_EOL PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_EQ MINUS LPAREN LBRACKET INF_INF_EQ INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ EQ ELLIPSIS DOT COMMA COLON CIRC_EQ CIRC ARROW AND_EQ AND_AND AND
--   reduce production constant -> wstring_list

State 99:
## Known stack suffix:
## wstring_list CST_WSTRING
## LR(1) items:
wstring_list -> wstring_list CST_WSTRING . [ SUP_SUP_EQ SUP_SUP SUP_EQ SUP STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACKET RBRACE QUEST PRETTY_FUNCTION__ PRAGMA_EOL PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_EQ MINUS LPAREN LBRACKET INF_INF_EQ INF_INF INF_EQ INF FUNCTION__ EXCLAM_EQ EQ_EQ EQ ELLIPSIS DOT CST_WSTRING CST_STRING COMMA COLON CIRC_EQ CIRC ARROW AND_EQ AND_AND AND ]
## Transitions:
## Reductions:
-- On SUP_SUP_EQ SUP_SUP SUP_EQ SUP STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACKET RBRACE QUEST PRETTY_FUNCTION__ PRAGMA_EOL PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_EQ MINUS LPAREN LBRACKET INF_INF_EQ INF_INF INF_EQ INF FUNCTION__ EXCLAM_EQ EQ_EQ EQ ELLIPSIS DOT CST_WSTRING CST_STRING COMMA COLON CIRC_EQ CIRC ARROW AND_EQ AND_AND AND
--   reduce production wstring_list -> wstring_list CST_WSTRING

State 100:
## Known stack suffix:
## wstring_list one_string
## LR(1) items:
wstring_list -> wstring_list one_string . [ SUP_SUP_EQ SUP_SUP SUP_EQ SUP STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACKET RBRACE QUEST PRETTY_FUNCTION__ PRAGMA_EOL PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_EQ MINUS LPAREN LBRACKET INF_INF_EQ INF_INF INF_EQ INF FUNCTION__ EXCLAM_EQ EQ_EQ EQ ELLIPSIS DOT CST_WSTRING CST_STRING COMMA COLON CIRC_EQ CIRC ARROW AND_EQ AND_AND AND ]
## Transitions:
## Reductions:
-- On SUP_SUP_EQ SUP_SUP SUP_EQ SUP STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACKET RBRACE QUEST PRETTY_FUNCTION__ PRAGMA_EOL PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_EQ MINUS LPAREN LBRACKET INF_INF_EQ INF_INF INF_EQ INF FUNCTION__ EXCLAM_EQ EQ_EQ EQ ELLIPSIS DOT CST_WSTRING CST_STRING COMMA COLON CIRC_EQ CIRC ARROW AND_EQ AND_AND AND
--   reduce production wstring_list -> wstring_list one_string

State 101:
## Known stack suffix:
## unary_expression
## LR(1) items:
cast_expression -> unary_expression . [ SUP_SUP_EQ SUP_SUP SUP_EQ SUP STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACKET RBRACE QUEST PRAGMA_EOL PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_EQ MINUS INF_INF_EQ INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ EQ ELLIPSIS COMMA COLON CIRC_EQ CIRC AND_EQ AND_AND AND ]
## Transitions:
## Reductions:
-- On SUP_SUP_EQ SUP_SUP SUP_EQ SUP STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACKET RBRACE QUEST PRAGMA_EOL PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_EQ MINUS INF_INF_EQ INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ EQ ELLIPSIS COMMA COLON CIRC_EQ CIRC AND_EQ AND_AND AND
--   reduce production cast_expression -> unary_expression

State 102:
## Known stack suffix:
## SIZEOF LPAREN type_name
## LR(1) items:
postfix_expression -> LPAREN type_name . RPAREN LBRACE initialiser_list_opt RBRACE [ SUP_SUP SUP_EQ SUP STAR SLASH SEMICOLON RPAREN PRAGMA_EOL PLUS_PLUS PLUS PIPE_PIPE PIPE PERCENT MINUS_MINUS MINUS LPAREN LBRACKET INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ DOT COMMA CIRC ARROW AND_AND AND ]
unary_attr -> SIZEOF LPAREN type_name . RPAREN [ SUP_SUP SUP_EQ SUP STAR SLASH SEMICOLON RPAREN PRAGMA_EOL PLUS PIPE_PIPE PIPE PERCENT MINUS INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ COMMA CIRC AND_AND AND ]
## Transitions:
-- On RPAREN shift to state 103
## Reductions:

State 103:
## Known stack suffix:
## SIZEOF LPAREN type_name RPAREN
## LR(1) items:
postfix_expression -> LPAREN type_name RPAREN . LBRACE initialiser_list_opt RBRACE [ SUP_SUP SUP_EQ SUP STAR SLASH SEMICOLON RPAREN PRAGMA_EOL PLUS_PLUS PLUS PIPE_PIPE PIPE PERCENT MINUS_MINUS MINUS LPAREN LBRACKET INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ DOT COMMA CIRC ARROW AND_AND AND ]
unary_attr -> SIZEOF LPAREN type_name RPAREN . [ SUP_SUP SUP_EQ SUP STAR SLASH SEMICOLON RPAREN PRAGMA_EOL PLUS PIPE_PIPE PIPE PERCENT MINUS INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ COMMA CIRC AND_AND AND ]
## Transitions:
-- On LBRACE shift to state 104
## Reductions:
-- On SUP_SUP SUP_EQ SUP STAR SLASH SEMICOLON RPAREN PRAGMA_EOL PLUS PIPE_PIPE PIPE PERCENT MINUS INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ COMMA CIRC AND_AND AND
--   reduce production unary_attr -> SIZEOF LPAREN type_name RPAREN

State 104:
## Known stack suffix:
## LPAREN type_name RPAREN LBRACE
## LR(1) items:
postfix_expression -> LPAREN type_name RPAREN LBRACE . initialiser_list_opt RBRACE [ SUP_SUP_EQ SUP_SUP SUP_EQ SUP STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACKET RBRACE QUEST PRAGMA_EOL PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_EQ MINUS LPAREN LBRACKET INF_INF_EQ INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ EQ ELLIPSIS DOT COMMA COLON CIRC_EQ CIRC ARROW AND_EQ AND_AND AND ]
## Transitions:
-- On TILDE shift to state 32
-- On STAR shift to state 33
-- On SIZEOF shift to state 34
-- On PRETTY_FUNCTION__ shift to state 35
-- On PLUS_PLUS shift to state 36
-- On PLUS shift to state 37
-- On NAMED_TYPE shift to state 5
-- On MINUS_MINUS shift to state 38
-- On MINUS shift to state 39
-- On LPAREN shift to state 40
-- On LBRACKET shift to state 105
-- On LBRACE shift to state 225
-- On IDENT shift to state 226
-- On FUNCTION__ shift to state 46
-- On EXCLAM shift to state 47
-- On DOT shift to state 217
-- On CST_WSTRING shift to state 48
-- On CST_WCHAR shift to state 49
-- On CST_STRING shift to state 50
-- On CST_INT shift to state 51
-- On CST_FLOAT shift to state 52
-- On CST_CHAR shift to state 53
-- On BUILTIN_VA_ARG shift to state 54
-- On AT_NAME shift to state 206
-- On AT_EXPR shift to state 56
-- On AND_AND shift to state 60
-- On AND shift to state 62
-- On ALIGNOF shift to state 63
-- On wstring_list shift to state 98
-- On unary_expression shift to state 101
-- On string_list shift to state 106
-- On string_constant shift to state 108
-- On shift_expression shift to state 109
-- On relational_expression shift to state 116
-- On primary_expression shift to state 111
-- On postfix_expression shift to state 112
-- On paren_comma_expression shift to state 120
-- On one_string shift to state 121
-- On multiplicative_expression shift to state 122
-- On logical_or_expression shift to state 143
-- On logical_and_expression shift to state 147
-- On initialiser_list_opt shift to state 243
-- On initialiser_list shift to state 229
-- On initialiser shift to state 230
-- On init_expression shift to state 233
-- On init_designators shift to state 234
-- On id_or_typename shift to state 239
-- On gcc_init_designators shift to state 241
-- On expression shift to state 238
-- On equality_expression shift to state 149
-- On constant shift to state 124
-- On conditional_expression shift to state 167
-- On cast_expression shift to state 169
-- On bitwise_xor_expression shift to state 154
-- On bitwise_or_expression shift to state 164
-- On bitwise_and_expression shift to state 162
-- On assignment_expression shift to state 192
-- On additive_expression shift to state 136
## Reductions:
-- On RBRACE
--   reduce production initialiser_list_opt ->

State 105:
## Known stack suffix:
## LBRACKET
## LR(1) items:
init_designators -> LBRACKET . expression RBRACKET init_designators_opt [ TILDE STAR SIZEOF PRETTY_FUNCTION__ PLUS_PLUS PLUS MINUS_MINUS MINUS LPAREN LBRACE IDENT FUNCTION__ EXCLAM EQ CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR BUILTIN_VA_ARG AT_EXPR AND_AND AND ALIGNOF ]
init_designators -> LBRACKET . expression ELLIPSIS expression RBRACKET [ TILDE STAR SIZEOF PRETTY_FUNCTION__ PLUS_PLUS PLUS MINUS_MINUS MINUS LPAREN LBRACE IDENT FUNCTION__ EXCLAM EQ CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR BUILTIN_VA_ARG AT_EXPR AND_AND AND ALIGNOF ]
## Transitions:
-- On TILDE shift to state 32
-- On STAR shift to state 33
-- On SIZEOF shift to state 34
-- On PRETTY_FUNCTION__ shift to state 35
-- On PLUS_PLUS shift to state 36
-- On PLUS shift to state 37
-- On MINUS_MINUS shift to state 38
-- On MINUS shift to state 39
-- On LPAREN shift to state 40
-- On IDENT shift to state 45
-- On FUNCTION__ shift to state 46
-- On EXCLAM shift to state 47
-- On CST_WSTRING shift to state 48
-- On CST_WCHAR shift to state 49
-- On CST_STRING shift to state 50
-- On CST_INT shift to state 51
-- On CST_FLOAT shift to state 52
-- On CST_CHAR shift to state 53
-- On BUILTIN_VA_ARG shift to state 54
-- On AT_EXPR shift to state 56
-- On AND_AND shift to state 60
-- On AND shift to state 62
-- On ALIGNOF shift to state 63
-- On wstring_list shift to state 98
-- On unary_expression shift to state 101
-- On string_list shift to state 106
-- On string_constant shift to state 108
-- On shift_expression shift to state 109
-- On relational_expression shift to state 116
-- On primary_expression shift to state 111
-- On postfix_expression shift to state 112
-- On paren_comma_expression shift to state 120
-- On one_string shift to state 121
-- On multiplicative_expression shift to state 122
-- On logical_or_expression shift to state 143
-- On logical_and_expression shift to state 147
-- On expression shift to state 215
-- On equality_expression shift to state 149
-- On constant shift to state 124
-- On conditional_expression shift to state 167
-- On cast_expression shift to state 169
-- On bitwise_xor_expression shift to state 154
-- On bitwise_or_expression shift to state 164
-- On bitwise_and_expression shift to state 162
-- On assignment_expression shift to state 192
-- On additive_expression shift to state 136
## Reductions:

State 106:
## Known stack suffix:
## string_list
## LR(1) items:
string_constant -> string_list . [ VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD SUP_SUP_EQ SUP_SUP SUP_EQ SUP STRUCT STATIC STAR_EQ STAR SLASH_EQ SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACKET RBRACE QUEST PRAGMA_EOL PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT NAMED_TYPE MSATTR MINUS_MINUS MINUS_EQ MINUS LPAREN LONG LBRACKET LBRACE INT64 INT INLINE INF_INF_EQ INF_INF INF_EQ INF FLOAT EXTERN EXCLAM_EQ EQ_EQ EQ ENUM ELLIPSIS DOUBLE DOT DECLSPEC CONST COMMA COLON CIRC_EQ CIRC CHAR AUTO AT_SPECIFIER ATTRIBUTE ARROW AND_EQ AND_AND AND ]
string_list -> string_list . one_string [ VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD SUP_SUP_EQ SUP_SUP SUP_EQ SUP STRUCT STATIC STAR_EQ STAR SLASH_EQ SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACKET RBRACE QUEST PRETTY_FUNCTION__ PRAGMA_EOL PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT NAMED_TYPE MSATTR MINUS_MINUS MINUS_EQ MINUS LPAREN LONG LBRACKET LBRACE INT64 INT INLINE INF_INF_EQ INF_INF INF_EQ INF FUNCTION__ FLOAT EXTERN EXCLAM_EQ EQ_EQ EQ ENUM ELLIPSIS DOUBLE DOT DECLSPEC CST_STRING CONST COMMA COLON CIRC_EQ CIRC CHAR AUTO AT_SPECIFIER ATTRIBUTE ARROW AND_EQ AND_AND AND ]
## Transitions:
-- On PRETTY_FUNCTION__ shift to state 35
-- On FUNCTION__ shift to state 46
-- On CST_STRING shift to state 50
-- On one_string shift to state 107
## Reductions:
-- On VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD SUP_SUP_EQ SUP_SUP SUP_EQ SUP STRUCT STATIC STAR_EQ STAR SLASH_EQ SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACKET RBRACE QUEST PRAGMA_EOL PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT NAMED_TYPE MSATTR MINUS_MINUS MINUS_EQ MINUS LPAREN LONG LBRACKET LBRACE INT64 INT INLINE INF_INF_EQ INF_INF INF_EQ INF FLOAT EXTERN EXCLAM_EQ EQ_EQ EQ ENUM ELLIPSIS DOUBLE DOT DECLSPEC CONST COMMA COLON CIRC_EQ CIRC CHAR AUTO AT_SPECIFIER ATTRIBUTE ARROW AND_EQ AND_AND AND
--   reduce production string_constant -> string_list

State 107:
## Known stack suffix:
## string_list one_string
## LR(1) items:
string_list -> string_list one_string . [ VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD SUP_SUP_EQ SUP_SUP SUP_EQ SUP STRUCT STATIC STAR_EQ STAR SLASH_EQ SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACKET RBRACE QUEST PRETTY_FUNCTION__ PRAGMA_EOL PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT NAMED_TYPE MSATTR MINUS_MINUS MINUS_EQ MINUS LPAREN LONG LBRACKET LBRACE INT64 INT INLINE INF_INF_EQ INF_INF INF_EQ INF FUNCTION__ FLOAT EXTERN EXCLAM_EQ EQ_EQ EQ ENUM ELLIPSIS DOUBLE DOT DECLSPEC CST_STRING CONST COMMA COLON CIRC_EQ CIRC CHAR AUTO AT_SPECIFIER ATTRIBUTE ARROW AND_EQ AND_AND AND ]
## Transitions:
## Reductions:
-- On VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD SUP_SUP_EQ SUP_SUP SUP_EQ SUP STRUCT STATIC STAR_EQ STAR SLASH_EQ SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACKET RBRACE QUEST PRETTY_FUNCTION__ PRAGMA_EOL PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT NAMED_TYPE MSATTR MINUS_MINUS MINUS_EQ MINUS LPAREN LONG LBRACKET LBRACE INT64 INT INLINE INF_INF_EQ INF_INF INF_EQ INF FUNCTION__ FLOAT EXTERN EXCLAM_EQ EQ_EQ EQ ENUM ELLIPSIS DOUBLE DOT DECLSPEC CST_STRING CONST COMMA COLON CIRC_EQ CIRC CHAR AUTO AT_SPECIFIER ATTRIBUTE ARROW AND_EQ AND_AND AND
--   reduce production string_list -> string_list one_string

State 108:
## Known stack suffix:
## string_constant
## LR(1) items:
constant -> string_constant . [ SUP_SUP_EQ SUP_SUP SUP_EQ SUP STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACKET RBRACE QUEST PRAGMA_EOL PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_EQ MINUS LPAREN LBRACKET INF_INF_EQ INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ EQ ELLIPSIS DOT COMMA COLON CIRC_EQ CIRC ARROW AND_EQ AND_AND AND ]
## Transitions:
## Reductions:
-- On SUP_SUP_EQ SUP_SUP SUP_EQ SUP STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACKET RBRACE QUEST PRAGMA_EOL PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_EQ MINUS LPAREN LBRACKET INF_INF_EQ INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ EQ ELLIPSIS DOT COMMA COLON CIRC_EQ CIRC ARROW AND_EQ AND_AND AND
--   reduce production constant -> string_constant

State 109:
## Known stack suffix:
## shift_expression
## LR(1) items:
relational_expression -> shift_expression . [ SUP_EQ SUP SEMICOLON RPAREN RBRACKET RBRACE QUEST PIPE_PIPE PIPE INF_EQ INF EXCLAM_EQ EQ_EQ ELLIPSIS COMMA COLON CIRC AND_AND AND ]
shift_expression -> shift_expression . INF_INF additive_expression [ SUP_SUP SUP_EQ SUP SEMICOLON RPAREN RBRACKET RBRACE QUEST PIPE_PIPE PIPE INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ ELLIPSIS COMMA COLON CIRC AND_AND AND ]
shift_expression -> shift_expression . SUP_SUP additive_expression [ SUP_SUP SUP_EQ SUP SEMICOLON RPAREN RBRACKET RBRACE QUEST PIPE_PIPE PIPE INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ ELLIPSIS COMMA COLON CIRC AND_AND AND ]
## Transitions:
-- On SUP_SUP shift to state 110
-- On INF_INF shift to state 119
## Reductions:
-- On SUP_EQ SUP SEMICOLON RPAREN RBRACKET RBRACE QUEST PIPE_PIPE PIPE INF_EQ INF EXCLAM_EQ EQ_EQ ELLIPSIS COMMA COLON CIRC AND_AND AND
--   reduce production relational_expression -> shift_expression

State 110:
## Known stack suffix:
## shift_expression SUP_SUP
## LR(1) items:
shift_expression -> shift_expression SUP_SUP . additive_expression [ SUP_SUP SUP_EQ SUP SEMICOLON RPAREN RBRACKET RBRACE QUEST PIPE_PIPE PIPE INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ ELLIPSIS COMMA COLON CIRC AND_AND AND ]
## Transitions:
-- On TILDE shift to state 32
-- On STAR shift to state 33
-- On SIZEOF shift to state 34
-- On PRETTY_FUNCTION__ shift to state 35
-- On PLUS_PLUS shift to state 36
-- On PLUS shift to state 37
-- On MINUS_MINUS shift to state 38
-- On MINUS shift to state 39
-- On LPAREN shift to state 40
-- On IDENT shift to state 45
-- On FUNCTION__ shift to state 46
-- On EXCLAM shift to state 47
-- On CST_WSTRING shift to state 48
-- On CST_WCHAR shift to state 49
-- On CST_STRING shift to state 50
-- On CST_INT shift to state 51
-- On CST_FLOAT shift to state 52
-- On CST_CHAR shift to state 53
-- On BUILTIN_VA_ARG shift to state 54
-- On AT_EXPR shift to state 56
-- On AND_AND shift to state 60
-- On AND shift to state 62
-- On ALIGNOF shift to state 63
-- On wstring_list shift to state 98
-- On unary_expression shift to state 101
-- On string_list shift to state 106
-- On string_constant shift to state 108
-- On primary_expression shift to state 111
-- On postfix_expression shift to state 112
-- On paren_comma_expression shift to state 120
-- On one_string shift to state 121
-- On multiplicative_expression shift to state 122
-- On constant shift to state 124
-- On cast_expression shift to state 130
-- On additive_expression shift to state 214
## Reductions:

State 111:
## Known stack suffix:
## primary_expression
## LR(1) items:
postfix_expression -> primary_expression . [ SUP_SUP_EQ SUP_SUP SUP_EQ SUP STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACKET RBRACE QUEST PRAGMA_EOL PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_EQ MINUS LPAREN LBRACKET INF_INF_EQ INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ EQ ELLIPSIS DOT COMMA COLON CIRC_EQ CIRC ARROW AND_EQ AND_AND AND ]
## Transitions:
## Reductions:
-- On SUP_SUP_EQ SUP_SUP SUP_EQ SUP STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACKET RBRACE QUEST PRAGMA_EOL PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_EQ MINUS LPAREN LBRACKET INF_INF_EQ INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ EQ ELLIPSIS DOT COMMA COLON CIRC_EQ CIRC ARROW AND_EQ AND_AND AND
--   reduce production postfix_expression -> primary_expression

State 112:
## Known stack suffix:
## postfix_expression
## LR(1) items:
postfix_expression -> postfix_expression . bracket_comma_expression [ SUP_SUP_EQ SUP_SUP SUP_EQ SUP STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACKET RBRACE QUEST PRAGMA_EOL PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_EQ MINUS LPAREN LBRACKET INF_INF_EQ INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ EQ ELLIPSIS DOT COMMA COLON CIRC_EQ CIRC ARROW AND_EQ AND_AND AND ]
postfix_expression -> postfix_expression . LPAREN arguments RPAREN [ SUP_SUP_EQ SUP_SUP SUP_EQ SUP STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACKET RBRACE QUEST PRAGMA_EOL PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_EQ MINUS LPAREN LBRACKET INF_INF_EQ INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ EQ ELLIPSIS DOT COMMA COLON CIRC_EQ CIRC ARROW AND_EQ AND_AND AND ]
postfix_expression -> postfix_expression . DOT id_or_typename [ SUP_SUP_EQ SUP_SUP SUP_EQ SUP STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACKET RBRACE QUEST PRAGMA_EOL PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_EQ MINUS LPAREN LBRACKET INF_INF_EQ INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ EQ ELLIPSIS DOT COMMA COLON CIRC_EQ CIRC ARROW AND_EQ AND_AND AND ]
postfix_expression -> postfix_expression . ARROW id_or_typename [ SUP_SUP_EQ SUP_SUP SUP_EQ SUP STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACKET RBRACE QUEST PRAGMA_EOL PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_EQ MINUS LPAREN LBRACKET INF_INF_EQ INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ EQ ELLIPSIS DOT COMMA COLON CIRC_EQ CIRC ARROW AND_EQ AND_AND AND ]
postfix_expression -> postfix_expression . PLUS_PLUS [ SUP_SUP_EQ SUP_SUP SUP_EQ SUP STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACKET RBRACE QUEST PRAGMA_EOL PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_EQ MINUS LPAREN LBRACKET INF_INF_EQ INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ EQ ELLIPSIS DOT COMMA COLON CIRC_EQ CIRC ARROW AND_EQ AND_AND AND ]
postfix_expression -> postfix_expression . MINUS_MINUS [ SUP_SUP_EQ SUP_SUP SUP_EQ SUP STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACKET RBRACE QUEST PRAGMA_EOL PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_EQ MINUS LPAREN LBRACKET INF_INF_EQ INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ EQ ELLIPSIS DOT COMMA COLON CIRC_EQ CIRC ARROW AND_EQ AND_AND AND ]
unary_expression -> postfix_expression . [ SUP_SUP_EQ SUP_SUP SUP_EQ SUP STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACKET RBRACE QUEST PRAGMA_EOL PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_EQ MINUS INF_INF_EQ INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ EQ ELLIPSIS COMMA COLON CIRC_EQ CIRC AND_EQ AND_AND AND ]
## Transitions:
-- On PLUS_PLUS shift to state 113
-- On MINUS_MINUS shift to state 114
-- On LPAREN shift to state 115
-- On LBRACKET shift to state 199
-- On DOT shift to state 204
-- On ARROW shift to state 211
-- On bracket_comma_expression shift to state 213
## Reductions:
-- On SUP_SUP_EQ SUP_SUP SUP_EQ SUP STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACKET RBRACE QUEST PRAGMA_EOL PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_EQ MINUS INF_INF_EQ INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ EQ ELLIPSIS COMMA COLON CIRC_EQ CIRC AND_EQ AND_AND AND
--   reduce production unary_expression -> postfix_expression

State 113:
## Known stack suffix:
## postfix_expression PLUS_PLUS
## LR(1) items:
postfix_expression -> postfix_expression PLUS_PLUS . [ SUP_SUP_EQ SUP_SUP SUP_EQ SUP STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACKET RBRACE QUEST PRAGMA_EOL PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_EQ MINUS LPAREN LBRACKET INF_INF_EQ INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ EQ ELLIPSIS DOT COMMA COLON CIRC_EQ CIRC ARROW AND_EQ AND_AND AND ]
## Transitions:
## Reductions:
-- On SUP_SUP_EQ SUP_SUP SUP_EQ SUP STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACKET RBRACE QUEST PRAGMA_EOL PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_EQ MINUS LPAREN LBRACKET INF_INF_EQ INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ EQ ELLIPSIS DOT COMMA COLON CIRC_EQ CIRC ARROW AND_EQ AND_AND AND
--   reduce production postfix_expression -> postfix_expression PLUS_PLUS

State 114:
## Known stack suffix:
## postfix_expression MINUS_MINUS
## LR(1) items:
postfix_expression -> postfix_expression MINUS_MINUS . [ SUP_SUP_EQ SUP_SUP SUP_EQ SUP STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACKET RBRACE QUEST PRAGMA_EOL PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_EQ MINUS LPAREN LBRACKET INF_INF_EQ INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ EQ ELLIPSIS DOT COMMA COLON CIRC_EQ CIRC ARROW AND_EQ AND_AND AND ]
## Transitions:
## Reductions:
-- On SUP_SUP_EQ SUP_SUP SUP_EQ SUP STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACKET RBRACE QUEST PRAGMA_EOL PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_EQ MINUS LPAREN LBRACKET INF_INF_EQ INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ EQ ELLIPSIS DOT COMMA COLON CIRC_EQ CIRC ARROW AND_EQ AND_AND AND
--   reduce production postfix_expression -> postfix_expression MINUS_MINUS

State 115:
## Known stack suffix:
## postfix_expression LPAREN
## LR(1) items:
postfix_expression -> postfix_expression LPAREN . arguments RPAREN [ SUP_SUP_EQ SUP_SUP SUP_EQ SUP STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACKET RBRACE QUEST PRAGMA_EOL PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_EQ MINUS LPAREN LBRACKET INF_INF_EQ INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ EQ ELLIPSIS DOT COMMA COLON CIRC_EQ CIRC ARROW AND_EQ AND_AND AND ]
## Transitions:
-- On error shift to state 44
-- On TILDE shift to state 32
-- On STAR shift to state 33
-- On SIZEOF shift to state 34
-- On PRETTY_FUNCTION__ shift to state 35
-- On PLUS_PLUS shift to state 36
-- On PLUS shift to state 37
-- On MINUS_MINUS shift to state 38
-- On MINUS shift to state 39
-- On LPAREN shift to state 40
-- On IDENT shift to state 45
-- On FUNCTION__ shift to state 46
-- On EXCLAM shift to state 47
-- On CST_WSTRING shift to state 48
-- On CST_WCHAR shift to state 49
-- On CST_STRING shift to state 50
-- On CST_INT shift to state 51
-- On CST_FLOAT shift to state 52
-- On CST_CHAR shift to state 53
-- On BUILTIN_VA_ARG shift to state 54
-- On AT_EXPR shift to state 56
-- On AND_AND shift to state 60
-- On AND shift to state 62
-- On ALIGNOF shift to state 63
-- On wstring_list shift to state 98
-- On unary_expression shift to state 101
-- On string_list shift to state 106
-- On string_constant shift to state 108
-- On shift_expression shift to state 109
-- On relational_expression shift to state 116
-- On primary_expression shift to state 111
-- On postfix_expression shift to state 112
-- On paren_comma_expression shift to state 120
-- On one_string shift to state 121
-- On multiplicative_expression shift to state 122
-- On logical_or_expression shift to state 143
-- On logical_and_expression shift to state 147
-- On expression shift to state 165
-- On equality_expression shift to state 149
-- On constant shift to state 124
-- On conditional_expression shift to state 167
-- On comma_expression shift to state 196
-- On cast_expression shift to state 169
-- On bitwise_xor_expression shift to state 154
-- On bitwise_or_expression shift to state 164
-- On bitwise_and_expression shift to state 162
-- On assignment_expression shift to state 192
-- On arguments shift to state 197
-- On additive_expression shift to state 136
## Reductions:
-- On RPAREN
--   reduce production arguments ->

State 116:
## Known stack suffix:
## relational_expression
## LR(1) items:
equality_expression -> relational_expression . [ SEMICOLON RPAREN RBRACKET RBRACE QUEST PIPE_PIPE PIPE EXCLAM_EQ EQ_EQ ELLIPSIS COMMA COLON CIRC AND_AND AND ]
relational_expression -> relational_expression . INF shift_expression [ SUP_EQ SUP SEMICOLON RPAREN RBRACKET RBRACE QUEST PIPE_PIPE PIPE INF_EQ INF EXCLAM_EQ EQ_EQ ELLIPSIS COMMA COLON CIRC AND_AND AND ]
relational_expression -> relational_expression . SUP shift_expression [ SUP_EQ SUP SEMICOLON RPAREN RBRACKET RBRACE QUEST PIPE_PIPE PIPE INF_EQ INF EXCLAM_EQ EQ_EQ ELLIPSIS COMMA COLON CIRC AND_AND AND ]
relational_expression -> relational_expression . INF_EQ shift_expression [ SUP_EQ SUP SEMICOLON RPAREN RBRACKET RBRACE QUEST PIPE_PIPE PIPE INF_EQ INF EXCLAM_EQ EQ_EQ ELLIPSIS COMMA COLON CIRC AND_AND AND ]
relational_expression -> relational_expression . SUP_EQ shift_expression [ SUP_EQ SUP SEMICOLON RPAREN RBRACKET RBRACE QUEST PIPE_PIPE PIPE INF_EQ INF EXCLAM_EQ EQ_EQ ELLIPSIS COMMA COLON CIRC AND_AND AND ]
## Transitions:
-- On SUP_EQ shift to state 117
-- On SUP shift to state 137
-- On INF_EQ shift to state 139
-- On INF shift to state 141
## Reductions:
-- On SEMICOLON RPAREN RBRACKET RBRACE QUEST PIPE_PIPE PIPE EXCLAM_EQ EQ_EQ ELLIPSIS COMMA COLON CIRC AND_AND AND
--   reduce production equality_expression -> relational_expression

State 117:
## Known stack suffix:
## relational_expression SUP_EQ
## LR(1) items:
relational_expression -> relational_expression SUP_EQ . shift_expression [ SUP_EQ SUP SEMICOLON RPAREN RBRACKET RBRACE QUEST PIPE_PIPE PIPE INF_EQ INF EXCLAM_EQ EQ_EQ ELLIPSIS COMMA COLON CIRC AND_AND AND ]
## Transitions:
-- On TILDE shift to state 32
-- On STAR shift to state 33
-- On SIZEOF shift to state 34
-- On PRETTY_FUNCTION__ shift to state 35
-- On PLUS_PLUS shift to state 36
-- On PLUS shift to state 37
-- On MINUS_MINUS shift to state 38
-- On MINUS shift to state 39
-- On LPAREN shift to state 40
-- On IDENT shift to state 45
-- On FUNCTION__ shift to state 46
-- On EXCLAM shift to state 47
-- On CST_WSTRING shift to state 48
-- On CST_WCHAR shift to state 49
-- On CST_STRING shift to state 50
-- On CST_INT shift to state 51
-- On CST_FLOAT shift to state 52
-- On CST_CHAR shift to state 53
-- On BUILTIN_VA_ARG shift to state 54
-- On AT_EXPR shift to state 56
-- On AND_AND shift to state 60
-- On AND shift to state 62
-- On ALIGNOF shift to state 63
-- On wstring_list shift to state 98
-- On unary_expression shift to state 101
-- On string_list shift to state 106
-- On string_constant shift to state 108
-- On shift_expression shift to state 118
-- On primary_expression shift to state 111
-- On postfix_expression shift to state 112
-- On paren_comma_expression shift to state 120
-- On one_string shift to state 121
-- On multiplicative_expression shift to state 122
-- On constant shift to state 124
-- On cast_expression shift to state 130
-- On additive_expression shift to state 136
## Reductions:

State 118:
## Known stack suffix:
## relational_expression SUP_EQ shift_expression
## LR(1) items:
relational_expression -> relational_expression SUP_EQ shift_expression . [ SUP_EQ SUP SEMICOLON RPAREN RBRACKET RBRACE QUEST PIPE_PIPE PIPE INF_EQ INF EXCLAM_EQ EQ_EQ ELLIPSIS COMMA COLON CIRC AND_AND AND ]
shift_expression -> shift_expression . INF_INF additive_expression [ SUP_SUP SUP_EQ SUP SEMICOLON RPAREN RBRACKET RBRACE QUEST PIPE_PIPE PIPE INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ ELLIPSIS COMMA COLON CIRC AND_AND AND ]
shift_expression -> shift_expression . SUP_SUP additive_expression [ SUP_SUP SUP_EQ SUP SEMICOLON RPAREN RBRACKET RBRACE QUEST PIPE_PIPE PIPE INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ ELLIPSIS COMMA COLON CIRC AND_AND AND ]
## Transitions:
-- On SUP_SUP shift to state 110
-- On INF_INF shift to state 119
## Reductions:
-- On SUP_EQ SUP SEMICOLON RPAREN RBRACKET RBRACE QUEST PIPE_PIPE PIPE INF_EQ INF EXCLAM_EQ EQ_EQ ELLIPSIS COMMA COLON CIRC AND_AND AND
--   reduce production relational_expression -> relational_expression SUP_EQ shift_expression

State 119:
## Known stack suffix:
## shift_expression INF_INF
## LR(1) items:
shift_expression -> shift_expression INF_INF . additive_expression [ SUP_SUP SUP_EQ SUP SEMICOLON RPAREN RBRACKET RBRACE QUEST PIPE_PIPE PIPE INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ ELLIPSIS COMMA COLON CIRC AND_AND AND ]
## Transitions:
-- On TILDE shift to state 32
-- On STAR shift to state 33
-- On SIZEOF shift to state 34
-- On PRETTY_FUNCTION__ shift to state 35
-- On PLUS_PLUS shift to state 36
-- On PLUS shift to state 37
-- On MINUS_MINUS shift to state 38
-- On MINUS shift to state 39
-- On LPAREN shift to state 40
-- On IDENT shift to state 45
-- On FUNCTION__ shift to state 46
-- On EXCLAM shift to state 47
-- On CST_WSTRING shift to state 48
-- On CST_WCHAR shift to state 49
-- On CST_STRING shift to state 50
-- On CST_INT shift to state 51
-- On CST_FLOAT shift to state 52
-- On CST_CHAR shift to state 53
-- On BUILTIN_VA_ARG shift to state 54
-- On AT_EXPR shift to state 56
-- On AND_AND shift to state 60
-- On AND shift to state 62
-- On ALIGNOF shift to state 63
-- On wstring_list shift to state 98
-- On unary_expression shift to state 101
-- On string_list shift to state 106
-- On string_constant shift to state 108
-- On primary_expression shift to state 111
-- On postfix_expression shift to state 112
-- On paren_comma_expression shift to state 120
-- On one_string shift to state 121
-- On multiplicative_expression shift to state 122
-- On constant shift to state 124
-- On cast_expression shift to state 130
-- On additive_expression shift to state 131
## Reductions:

State 120:
## Known stack suffix:
## paren_comma_expression
## LR(1) items:
primary_expression -> paren_comma_expression . [ SUP_SUP_EQ SUP_SUP SUP_EQ SUP STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACKET RBRACE QUEST PRAGMA_EOL PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_EQ MINUS LPAREN LBRACKET INF_INF_EQ INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ EQ ELLIPSIS DOT COMMA COLON CIRC_EQ CIRC ARROW AND_EQ AND_AND AND ]
## Transitions:
## Reductions:
-- On SUP_SUP_EQ SUP_SUP SUP_EQ SUP STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACKET RBRACE QUEST PRAGMA_EOL PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_EQ MINUS LPAREN LBRACKET INF_INF_EQ INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ EQ ELLIPSIS DOT COMMA COLON CIRC_EQ CIRC ARROW AND_EQ AND_AND AND
--   reduce production primary_expression -> paren_comma_expression

State 121:
## Known stack suffix:
## one_string
## LR(1) items:
string_list -> one_string . [ VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD SUP_SUP_EQ SUP_SUP SUP_EQ SUP STRUCT STATIC STAR_EQ STAR SLASH_EQ SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACKET RBRACE QUEST PRETTY_FUNCTION__ PRAGMA_EOL PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT NAMED_TYPE MSATTR MINUS_MINUS MINUS_EQ MINUS LPAREN LONG LBRACKET LBRACE INT64 INT INLINE INF_INF_EQ INF_INF INF_EQ INF FUNCTION__ FLOAT EXTERN EXCLAM_EQ EQ_EQ EQ ENUM ELLIPSIS DOUBLE DOT DECLSPEC CST_STRING CONST COMMA COLON CIRC_EQ CIRC CHAR AUTO AT_SPECIFIER ATTRIBUTE ARROW AND_EQ AND_AND AND ]
## Transitions:
## Reductions:
-- On VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD SUP_SUP_EQ SUP_SUP SUP_EQ SUP STRUCT STATIC STAR_EQ STAR SLASH_EQ SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACKET RBRACE QUEST PRETTY_FUNCTION__ PRAGMA_EOL PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT NAMED_TYPE MSATTR MINUS_MINUS MINUS_EQ MINUS LPAREN LONG LBRACKET LBRACE INT64 INT INLINE INF_INF_EQ INF_INF INF_EQ INF FUNCTION__ FLOAT EXTERN EXCLAM_EQ EQ_EQ EQ ENUM ELLIPSIS DOUBLE DOT DECLSPEC CST_STRING CONST COMMA COLON CIRC_EQ CIRC CHAR AUTO AT_SPECIFIER ATTRIBUTE ARROW AND_EQ AND_AND AND
--   reduce production string_list -> one_string

State 122:
## Known stack suffix:
## multiplicative_expression
## LR(1) items:
additive_expression -> multiplicative_expression . [ SUP_SUP SUP_EQ SUP SEMICOLON RPAREN RBRACKET RBRACE QUEST PLUS PIPE_PIPE PIPE MINUS INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ ELLIPSIS COMMA COLON CIRC AND_AND AND ]
multiplicative_expression -> multiplicative_expression . STAR cast_expression [ SUP_SUP SUP_EQ SUP STAR SLASH SEMICOLON RPAREN RBRACKET RBRACE QUEST PLUS PIPE_PIPE PIPE PERCENT MINUS INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ ELLIPSIS COMMA COLON CIRC AND_AND AND ]
multiplicative_expression -> multiplicative_expression . SLASH cast_expression [ SUP_SUP SUP_EQ SUP STAR SLASH SEMICOLON RPAREN RBRACKET RBRACE QUEST PLUS PIPE_PIPE PIPE PERCENT MINUS INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ ELLIPSIS COMMA COLON CIRC AND_AND AND ]
multiplicative_expression -> multiplicative_expression . PERCENT cast_expression [ SUP_SUP SUP_EQ SUP STAR SLASH SEMICOLON RPAREN RBRACKET RBRACE QUEST PLUS PIPE_PIPE PIPE PERCENT MINUS INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ ELLIPSIS COMMA COLON CIRC AND_AND AND ]
## Transitions:
-- On STAR shift to state 123
-- On SLASH shift to state 126
-- On PERCENT shift to state 128
## Reductions:
-- On SUP_SUP SUP_EQ SUP SEMICOLON RPAREN RBRACKET RBRACE QUEST PLUS PIPE_PIPE PIPE MINUS INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ ELLIPSIS COMMA COLON CIRC AND_AND AND
--   reduce production additive_expression -> multiplicative_expression

State 123:
## Known stack suffix:
## multiplicative_expression STAR
## LR(1) items:
multiplicative_expression -> multiplicative_expression STAR . cast_expression [ SUP_SUP SUP_EQ SUP STAR SLASH SEMICOLON RPAREN RBRACKET RBRACE QUEST PLUS PIPE_PIPE PIPE PERCENT MINUS INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ ELLIPSIS COMMA COLON CIRC AND_AND AND ]
## Transitions:
-- On TILDE shift to state 32
-- On STAR shift to state 33
-- On SIZEOF shift to state 34
-- On PRETTY_FUNCTION__ shift to state 35
-- On PLUS_PLUS shift to state 36
-- On PLUS shift to state 37
-- On MINUS_MINUS shift to state 38
-- On MINUS shift to state 39
-- On LPAREN shift to state 40
-- On IDENT shift to state 45
-- On FUNCTION__ shift to state 46
-- On EXCLAM shift to state 47
-- On CST_WSTRING shift to state 48
-- On CST_WCHAR shift to state 49
-- On CST_STRING shift to state 50
-- On CST_INT shift to state 51
-- On CST_FLOAT shift to state 52
-- On CST_CHAR shift to state 53
-- On BUILTIN_VA_ARG shift to state 54
-- On AT_EXPR shift to state 56
-- On AND_AND shift to state 60
-- On AND shift to state 62
-- On ALIGNOF shift to state 63
-- On wstring_list shift to state 98
-- On unary_expression shift to state 101
-- On string_list shift to state 106
-- On string_constant shift to state 108
-- On primary_expression shift to state 111
-- On postfix_expression shift to state 112
-- On paren_comma_expression shift to state 120
-- On one_string shift to state 121
-- On constant shift to state 124
-- On cast_expression shift to state 125
## Reductions:

State 124:
## Known stack suffix:
## constant
## LR(1) items:
primary_expression -> constant . [ SUP_SUP_EQ SUP_SUP SUP_EQ SUP STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACKET RBRACE QUEST PRAGMA_EOL PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_EQ MINUS LPAREN LBRACKET INF_INF_EQ INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ EQ ELLIPSIS DOT COMMA COLON CIRC_EQ CIRC ARROW AND_EQ AND_AND AND ]
## Transitions:
## Reductions:
-- On SUP_SUP_EQ SUP_SUP SUP_EQ SUP STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACKET RBRACE QUEST PRAGMA_EOL PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_EQ MINUS LPAREN LBRACKET INF_INF_EQ INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ EQ ELLIPSIS DOT COMMA COLON CIRC_EQ CIRC ARROW AND_EQ AND_AND AND
--   reduce production primary_expression -> constant

State 125:
## Known stack suffix:
## multiplicative_expression STAR cast_expression
## LR(1) items:
multiplicative_expression -> multiplicative_expression STAR cast_expression . [ SUP_SUP SUP_EQ SUP STAR SLASH SEMICOLON RPAREN RBRACKET RBRACE QUEST PLUS PIPE_PIPE PIPE PERCENT MINUS INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ ELLIPSIS COMMA COLON CIRC AND_AND AND ]
## Transitions:
## Reductions:
-- On SUP_SUP SUP_EQ SUP STAR SLASH SEMICOLON RPAREN RBRACKET RBRACE QUEST PLUS PIPE_PIPE PIPE PERCENT MINUS INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ ELLIPSIS COMMA COLON CIRC AND_AND AND
--   reduce production multiplicative_expression -> multiplicative_expression STAR cast_expression

State 126:
## Known stack suffix:
## multiplicative_expression SLASH
## LR(1) items:
multiplicative_expression -> multiplicative_expression SLASH . cast_expression [ SUP_SUP SUP_EQ SUP STAR SLASH SEMICOLON RPAREN RBRACKET RBRACE QUEST PLUS PIPE_PIPE PIPE PERCENT MINUS INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ ELLIPSIS COMMA COLON CIRC AND_AND AND ]
## Transitions:
-- On TILDE shift to state 32
-- On STAR shift to state 33
-- On SIZEOF shift to state 34
-- On PRETTY_FUNCTION__ shift to state 35
-- On PLUS_PLUS shift to state 36
-- On PLUS shift to state 37
-- On MINUS_MINUS shift to state 38
-- On MINUS shift to state 39
-- On LPAREN shift to state 40
-- On IDENT shift to state 45
-- On FUNCTION__ shift to state 46
-- On EXCLAM shift to state 47
-- On CST_WSTRING shift to state 48
-- On CST_WCHAR shift to state 49
-- On CST_STRING shift to state 50
-- On CST_INT shift to state 51
-- On CST_FLOAT shift to state 52
-- On CST_CHAR shift to state 53
-- On BUILTIN_VA_ARG shift to state 54
-- On AT_EXPR shift to state 56
-- On AND_AND shift to state 60
-- On AND shift to state 62
-- On ALIGNOF shift to state 63
-- On wstring_list shift to state 98
-- On unary_expression shift to state 101
-- On string_list shift to state 106
-- On string_constant shift to state 108
-- On primary_expression shift to state 111
-- On postfix_expression shift to state 112
-- On paren_comma_expression shift to state 120
-- On one_string shift to state 121
-- On constant shift to state 124
-- On cast_expression shift to state 127
## Reductions:

State 127:
## Known stack suffix:
## multiplicative_expression SLASH cast_expression
## LR(1) items:
multiplicative_expression -> multiplicative_expression SLASH cast_expression . [ SUP_SUP SUP_EQ SUP STAR SLASH SEMICOLON RPAREN RBRACKET RBRACE QUEST PLUS PIPE_PIPE PIPE PERCENT MINUS INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ ELLIPSIS COMMA COLON CIRC AND_AND AND ]
## Transitions:
## Reductions:
-- On SUP_SUP SUP_EQ SUP STAR SLASH SEMICOLON RPAREN RBRACKET RBRACE QUEST PLUS PIPE_PIPE PIPE PERCENT MINUS INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ ELLIPSIS COMMA COLON CIRC AND_AND AND
--   reduce production multiplicative_expression -> multiplicative_expression SLASH cast_expression

State 128:
## Known stack suffix:
## multiplicative_expression PERCENT
## LR(1) items:
multiplicative_expression -> multiplicative_expression PERCENT . cast_expression [ SUP_SUP SUP_EQ SUP STAR SLASH SEMICOLON RPAREN RBRACKET RBRACE QUEST PLUS PIPE_PIPE PIPE PERCENT MINUS INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ ELLIPSIS COMMA COLON CIRC AND_AND AND ]
## Transitions:
-- On TILDE shift to state 32
-- On STAR shift to state 33
-- On SIZEOF shift to state 34
-- On PRETTY_FUNCTION__ shift to state 35
-- On PLUS_PLUS shift to state 36
-- On PLUS shift to state 37
-- On MINUS_MINUS shift to state 38
-- On MINUS shift to state 39
-- On LPAREN shift to state 40
-- On IDENT shift to state 45
-- On FUNCTION__ shift to state 46
-- On EXCLAM shift to state 47
-- On CST_WSTRING shift to state 48
-- On CST_WCHAR shift to state 49
-- On CST_STRING shift to state 50
-- On CST_INT shift to state 51
-- On CST_FLOAT shift to state 52
-- On CST_CHAR shift to state 53
-- On BUILTIN_VA_ARG shift to state 54
-- On AT_EXPR shift to state 56
-- On AND_AND shift to state 60
-- On AND shift to state 62
-- On ALIGNOF shift to state 63
-- On wstring_list shift to state 98
-- On unary_expression shift to state 101
-- On string_list shift to state 106
-- On string_constant shift to state 108
-- On primary_expression shift to state 111
-- On postfix_expression shift to state 112
-- On paren_comma_expression shift to state 120
-- On one_string shift to state 121
-- On constant shift to state 124
-- On cast_expression shift to state 129
## Reductions:

State 129:
## Known stack suffix:
## multiplicative_expression PERCENT cast_expression
## LR(1) items:
multiplicative_expression -> multiplicative_expression PERCENT cast_expression . [ SUP_SUP SUP_EQ SUP STAR SLASH SEMICOLON RPAREN RBRACKET RBRACE QUEST PLUS PIPE_PIPE PIPE PERCENT MINUS INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ ELLIPSIS COMMA COLON CIRC AND_AND AND ]
## Transitions:
## Reductions:
-- On SUP_SUP SUP_EQ SUP STAR SLASH SEMICOLON RPAREN RBRACKET RBRACE QUEST PLUS PIPE_PIPE PIPE PERCENT MINUS INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ ELLIPSIS COMMA COLON CIRC AND_AND AND
--   reduce production multiplicative_expression -> multiplicative_expression PERCENT cast_expression

State 130:
## Known stack suffix:
## cast_expression
## LR(1) items:
multiplicative_expression -> cast_expression . [ SUP_SUP SUP_EQ SUP STAR SLASH SEMICOLON RPAREN RBRACKET RBRACE QUEST PLUS PIPE_PIPE PIPE PERCENT MINUS INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ ELLIPSIS COMMA COLON CIRC AND_AND AND ]
## Transitions:
## Reductions:
-- On SUP_SUP SUP_EQ SUP STAR SLASH SEMICOLON RPAREN RBRACKET RBRACE QUEST PLUS PIPE_PIPE PIPE PERCENT MINUS INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ ELLIPSIS COMMA COLON CIRC AND_AND AND
--   reduce production multiplicative_expression -> cast_expression

State 131:
## Known stack suffix:
## shift_expression INF_INF additive_expression
## LR(1) items:
additive_expression -> additive_expression . PLUS multiplicative_expression [ SUP_SUP SUP_EQ SUP SEMICOLON RPAREN RBRACKET RBRACE QUEST PLUS PIPE_PIPE PIPE MINUS INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ ELLIPSIS COMMA COLON CIRC AND_AND AND ]
additive_expression -> additive_expression . MINUS multiplicative_expression [ SUP_SUP SUP_EQ SUP SEMICOLON RPAREN RBRACKET RBRACE QUEST PLUS PIPE_PIPE PIPE MINUS INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ ELLIPSIS COMMA COLON CIRC AND_AND AND ]
shift_expression -> shift_expression INF_INF additive_expression . [ SUP_SUP SUP_EQ SUP SEMICOLON RPAREN RBRACKET RBRACE QUEST PIPE_PIPE PIPE INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ ELLIPSIS COMMA COLON CIRC AND_AND AND ]
## Transitions:
-- On PLUS shift to state 132
-- On MINUS shift to state 134
## Reductions:
-- On SUP_SUP SUP_EQ SUP SEMICOLON RPAREN RBRACKET RBRACE QUEST PIPE_PIPE PIPE INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ ELLIPSIS COMMA COLON CIRC AND_AND AND
--   reduce production shift_expression -> shift_expression INF_INF additive_expression

State 132:
## Known stack suffix:
## additive_expression PLUS
## LR(1) items:
additive_expression -> additive_expression PLUS . multiplicative_expression [ SUP_SUP SUP_EQ SUP SEMICOLON RPAREN RBRACKET RBRACE QUEST PLUS PIPE_PIPE PIPE MINUS INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ ELLIPSIS COMMA COLON CIRC AND_AND AND ]
## Transitions:
-- On TILDE shift to state 32
-- On STAR shift to state 33
-- On SIZEOF shift to state 34
-- On PRETTY_FUNCTION__ shift to state 35
-- On PLUS_PLUS shift to state 36
-- On PLUS shift to state 37
-- On MINUS_MINUS shift to state 38
-- On MINUS shift to state 39
-- On LPAREN shift to state 40
-- On IDENT shift to state 45
-- On FUNCTION__ shift to state 46
-- On EXCLAM shift to state 47
-- On CST_WSTRING shift to state 48
-- On CST_WCHAR shift to state 49
-- On CST_STRING shift to state 50
-- On CST_INT shift to state 51
-- On CST_FLOAT shift to state 52
-- On CST_CHAR shift to state 53
-- On BUILTIN_VA_ARG shift to state 54
-- On AT_EXPR shift to state 56
-- On AND_AND shift to state 60
-- On AND shift to state 62
-- On ALIGNOF shift to state 63
-- On wstring_list shift to state 98
-- On unary_expression shift to state 101
-- On string_list shift to state 106
-- On string_constant shift to state 108
-- On primary_expression shift to state 111
-- On postfix_expression shift to state 112
-- On paren_comma_expression shift to state 120
-- On one_string shift to state 121
-- On multiplicative_expression shift to state 133
-- On constant shift to state 124
-- On cast_expression shift to state 130
## Reductions:

State 133:
## Known stack suffix:
## additive_expression PLUS multiplicative_expression
## LR(1) items:
additive_expression -> additive_expression PLUS multiplicative_expression . [ SUP_SUP SUP_EQ SUP SEMICOLON RPAREN RBRACKET RBRACE QUEST PLUS PIPE_PIPE PIPE MINUS INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ ELLIPSIS COMMA COLON CIRC AND_AND AND ]
multiplicative_expression -> multiplicative_expression . STAR cast_expression [ SUP_SUP SUP_EQ SUP STAR SLASH SEMICOLON RPAREN RBRACKET RBRACE QUEST PLUS PIPE_PIPE PIPE PERCENT MINUS INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ ELLIPSIS COMMA COLON CIRC AND_AND AND ]
multiplicative_expression -> multiplicative_expression . SLASH cast_expression [ SUP_SUP SUP_EQ SUP STAR SLASH SEMICOLON RPAREN RBRACKET RBRACE QUEST PLUS PIPE_PIPE PIPE PERCENT MINUS INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ ELLIPSIS COMMA COLON CIRC AND_AND AND ]
multiplicative_expression -> multiplicative_expression . PERCENT cast_expression [ SUP_SUP SUP_EQ SUP STAR SLASH SEMICOLON RPAREN RBRACKET RBRACE QUEST PLUS PIPE_PIPE PIPE PERCENT MINUS INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ ELLIPSIS COMMA COLON CIRC AND_AND AND ]
## Transitions:
-- On STAR shift to state 123
-- On SLASH shift to state 126
-- On PERCENT shift to state 128
## Reductions:
-- On SUP_SUP SUP_EQ SUP SEMICOLON RPAREN RBRACKET RBRACE QUEST PLUS PIPE_PIPE PIPE MINUS INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ ELLIPSIS COMMA COLON CIRC AND_AND AND
--   reduce production additive_expression -> additive_expression PLUS multiplicative_expression

State 134:
## Known stack suffix:
## additive_expression MINUS
## LR(1) items:
additive_expression -> additive_expression MINUS . multiplicative_expression [ SUP_SUP SUP_EQ SUP SEMICOLON RPAREN RBRACKET RBRACE QUEST PLUS PIPE_PIPE PIPE MINUS INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ ELLIPSIS COMMA COLON CIRC AND_AND AND ]
## Transitions:
-- On TILDE shift to state 32
-- On STAR shift to state 33
-- On SIZEOF shift to state 34
-- On PRETTY_FUNCTION__ shift to state 35
-- On PLUS_PLUS shift to state 36
-- On PLUS shift to state 37
-- On MINUS_MINUS shift to state 38
-- On MINUS shift to state 39
-- On LPAREN shift to state 40
-- On IDENT shift to state 45
-- On FUNCTION__ shift to state 46
-- On EXCLAM shift to state 47
-- On CST_WSTRING shift to state 48
-- On CST_WCHAR shift to state 49
-- On CST_STRING shift to state 50
-- On CST_INT shift to state 51
-- On CST_FLOAT shift to state 52
-- On CST_CHAR shift to state 53
-- On BUILTIN_VA_ARG shift to state 54
-- On AT_EXPR shift to state 56
-- On AND_AND shift to state 60
-- On AND shift to state 62
-- On ALIGNOF shift to state 63
-- On wstring_list shift to state 98
-- On unary_expression shift to state 101
-- On string_list shift to state 106
-- On string_constant shift to state 108
-- On primary_expression shift to state 111
-- On postfix_expression shift to state 112
-- On paren_comma_expression shift to state 120
-- On one_string shift to state 121
-- On multiplicative_expression shift to state 135
-- On constant shift to state 124
-- On cast_expression shift to state 130
## Reductions:

State 135:
## Known stack suffix:
## additive_expression MINUS multiplicative_expression
## LR(1) items:
additive_expression -> additive_expression MINUS multiplicative_expression . [ SUP_SUP SUP_EQ SUP SEMICOLON RPAREN RBRACKET RBRACE QUEST PLUS PIPE_PIPE PIPE MINUS INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ ELLIPSIS COMMA COLON CIRC AND_AND AND ]
multiplicative_expression -> multiplicative_expression . STAR cast_expression [ SUP_SUP SUP_EQ SUP STAR SLASH SEMICOLON RPAREN RBRACKET RBRACE QUEST PLUS PIPE_PIPE PIPE PERCENT MINUS INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ ELLIPSIS COMMA COLON CIRC AND_AND AND ]
multiplicative_expression -> multiplicative_expression . SLASH cast_expression [ SUP_SUP SUP_EQ SUP STAR SLASH SEMICOLON RPAREN RBRACKET RBRACE QUEST PLUS PIPE_PIPE PIPE PERCENT MINUS INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ ELLIPSIS COMMA COLON CIRC AND_AND AND ]
multiplicative_expression -> multiplicative_expression . PERCENT cast_expression [ SUP_SUP SUP_EQ SUP STAR SLASH SEMICOLON RPAREN RBRACKET RBRACE QUEST PLUS PIPE_PIPE PIPE PERCENT MINUS INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ ELLIPSIS COMMA COLON CIRC AND_AND AND ]
## Transitions:
-- On STAR shift to state 123
-- On SLASH shift to state 126
-- On PERCENT shift to state 128
## Reductions:
-- On SUP_SUP SUP_EQ SUP SEMICOLON RPAREN RBRACKET RBRACE QUEST PLUS PIPE_PIPE PIPE MINUS INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ ELLIPSIS COMMA COLON CIRC AND_AND AND
--   reduce production additive_expression -> additive_expression MINUS multiplicative_expression

State 136:
## Known stack suffix:
## additive_expression
## LR(1) items:
additive_expression -> additive_expression . PLUS multiplicative_expression [ SUP_SUP SUP_EQ SUP SEMICOLON RPAREN RBRACKET RBRACE QUEST PLUS PIPE_PIPE PIPE MINUS INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ ELLIPSIS COMMA COLON CIRC AND_AND AND ]
additive_expression -> additive_expression . MINUS multiplicative_expression [ SUP_SUP SUP_EQ SUP SEMICOLON RPAREN RBRACKET RBRACE QUEST PLUS PIPE_PIPE PIPE MINUS INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ ELLIPSIS COMMA COLON CIRC AND_AND AND ]
shift_expression -> additive_expression . [ SUP_SUP SUP_EQ SUP SEMICOLON RPAREN RBRACKET RBRACE QUEST PIPE_PIPE PIPE INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ ELLIPSIS COMMA COLON CIRC AND_AND AND ]
## Transitions:
-- On PLUS shift to state 132
-- On MINUS shift to state 134
## Reductions:
-- On SUP_SUP SUP_EQ SUP SEMICOLON RPAREN RBRACKET RBRACE QUEST PIPE_PIPE PIPE INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ ELLIPSIS COMMA COLON CIRC AND_AND AND
--   reduce production shift_expression -> additive_expression

State 137:
## Known stack suffix:
## relational_expression SUP
## LR(1) items:
relational_expression -> relational_expression SUP . shift_expression [ SUP_EQ SUP SEMICOLON RPAREN RBRACKET RBRACE QUEST PIPE_PIPE PIPE INF_EQ INF EXCLAM_EQ EQ_EQ ELLIPSIS COMMA COLON CIRC AND_AND AND ]
## Transitions:
-- On TILDE shift to state 32
-- On STAR shift to state 33
-- On SIZEOF shift to state 34
-- On PRETTY_FUNCTION__ shift to state 35
-- On PLUS_PLUS shift to state 36
-- On PLUS shift to state 37
-- On MINUS_MINUS shift to state 38
-- On MINUS shift to state 39
-- On LPAREN shift to state 40
-- On IDENT shift to state 45
-- On FUNCTION__ shift to state 46
-- On EXCLAM shift to state 47
-- On CST_WSTRING shift to state 48
-- On CST_WCHAR shift to state 49
-- On CST_STRING shift to state 50
-- On CST_INT shift to state 51
-- On CST_FLOAT shift to state 52
-- On CST_CHAR shift to state 53
-- On BUILTIN_VA_ARG shift to state 54
-- On AT_EXPR shift to state 56
-- On AND_AND shift to state 60
-- On AND shift to state 62
-- On ALIGNOF shift to state 63
-- On wstring_list shift to state 98
-- On unary_expression shift to state 101
-- On string_list shift to state 106
-- On string_constant shift to state 108
-- On shift_expression shift to state 138
-- On primary_expression shift to state 111
-- On postfix_expression shift to state 112
-- On paren_comma_expression shift to state 120
-- On one_string shift to state 121
-- On multiplicative_expression shift to state 122
-- On constant shift to state 124
-- On cast_expression shift to state 130
-- On additive_expression shift to state 136
## Reductions:

State 138:
## Known stack suffix:
## relational_expression SUP shift_expression
## LR(1) items:
relational_expression -> relational_expression SUP shift_expression . [ SUP_EQ SUP SEMICOLON RPAREN RBRACKET RBRACE QUEST PIPE_PIPE PIPE INF_EQ INF EXCLAM_EQ EQ_EQ ELLIPSIS COMMA COLON CIRC AND_AND AND ]
shift_expression -> shift_expression . INF_INF additive_expression [ SUP_SUP SUP_EQ SUP SEMICOLON RPAREN RBRACKET RBRACE QUEST PIPE_PIPE PIPE INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ ELLIPSIS COMMA COLON CIRC AND_AND AND ]
shift_expression -> shift_expression . SUP_SUP additive_expression [ SUP_SUP SUP_EQ SUP SEMICOLON RPAREN RBRACKET RBRACE QUEST PIPE_PIPE PIPE INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ ELLIPSIS COMMA COLON CIRC AND_AND AND ]
## Transitions:
-- On SUP_SUP shift to state 110
-- On INF_INF shift to state 119
## Reductions:
-- On SUP_EQ SUP SEMICOLON RPAREN RBRACKET RBRACE QUEST PIPE_PIPE PIPE INF_EQ INF EXCLAM_EQ EQ_EQ ELLIPSIS COMMA COLON CIRC AND_AND AND
--   reduce production relational_expression -> relational_expression SUP shift_expression

State 139:
## Known stack suffix:
## relational_expression INF_EQ
## LR(1) items:
relational_expression -> relational_expression INF_EQ . shift_expression [ SUP_EQ SUP SEMICOLON RPAREN RBRACKET RBRACE QUEST PIPE_PIPE PIPE INF_EQ INF EXCLAM_EQ EQ_EQ ELLIPSIS COMMA COLON CIRC AND_AND AND ]
## Transitions:
-- On TILDE shift to state 32
-- On STAR shift to state 33
-- On SIZEOF shift to state 34
-- On PRETTY_FUNCTION__ shift to state 35
-- On PLUS_PLUS shift to state 36
-- On PLUS shift to state 37
-- On MINUS_MINUS shift to state 38
-- On MINUS shift to state 39
-- On LPAREN shift to state 40
-- On IDENT shift to state 45
-- On FUNCTION__ shift to state 46
-- On EXCLAM shift to state 47
-- On CST_WSTRING shift to state 48
-- On CST_WCHAR shift to state 49
-- On CST_STRING shift to state 50
-- On CST_INT shift to state 51
-- On CST_FLOAT shift to state 52
-- On CST_CHAR shift to state 53
-- On BUILTIN_VA_ARG shift to state 54
-- On AT_EXPR shift to state 56
-- On AND_AND shift to state 60
-- On AND shift to state 62
-- On ALIGNOF shift to state 63
-- On wstring_list shift to state 98
-- On unary_expression shift to state 101
-- On string_list shift to state 106
-- On string_constant shift to state 108
-- On shift_expression shift to state 140
-- On primary_expression shift to state 111
-- On postfix_expression shift to state 112
-- On paren_comma_expression shift to state 120
-- On one_string shift to state 121
-- On multiplicative_expression shift to state 122
-- On constant shift to state 124
-- On cast_expression shift to state 130
-- On additive_expression shift to state 136
## Reductions:

State 140:
## Known stack suffix:
## relational_expression INF_EQ shift_expression
## LR(1) items:
relational_expression -> relational_expression INF_EQ shift_expression . [ SUP_EQ SUP SEMICOLON RPAREN RBRACKET RBRACE QUEST PIPE_PIPE PIPE INF_EQ INF EXCLAM_EQ EQ_EQ ELLIPSIS COMMA COLON CIRC AND_AND AND ]
shift_expression -> shift_expression . INF_INF additive_expression [ SUP_SUP SUP_EQ SUP SEMICOLON RPAREN RBRACKET RBRACE QUEST PIPE_PIPE PIPE INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ ELLIPSIS COMMA COLON CIRC AND_AND AND ]
shift_expression -> shift_expression . SUP_SUP additive_expression [ SUP_SUP SUP_EQ SUP SEMICOLON RPAREN RBRACKET RBRACE QUEST PIPE_PIPE PIPE INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ ELLIPSIS COMMA COLON CIRC AND_AND AND ]
## Transitions:
-- On SUP_SUP shift to state 110
-- On INF_INF shift to state 119
## Reductions:
-- On SUP_EQ SUP SEMICOLON RPAREN RBRACKET RBRACE QUEST PIPE_PIPE PIPE INF_EQ INF EXCLAM_EQ EQ_EQ ELLIPSIS COMMA COLON CIRC AND_AND AND
--   reduce production relational_expression -> relational_expression INF_EQ shift_expression

State 141:
## Known stack suffix:
## relational_expression INF
## LR(1) items:
relational_expression -> relational_expression INF . shift_expression [ SUP_EQ SUP SEMICOLON RPAREN RBRACKET RBRACE QUEST PIPE_PIPE PIPE INF_EQ INF EXCLAM_EQ EQ_EQ ELLIPSIS COMMA COLON CIRC AND_AND AND ]
## Transitions:
-- On TILDE shift to state 32
-- On STAR shift to state 33
-- On SIZEOF shift to state 34
-- On PRETTY_FUNCTION__ shift to state 35
-- On PLUS_PLUS shift to state 36
-- On PLUS shift to state 37
-- On MINUS_MINUS shift to state 38
-- On MINUS shift to state 39
-- On LPAREN shift to state 40
-- On IDENT shift to state 45
-- On FUNCTION__ shift to state 46
-- On EXCLAM shift to state 47
-- On CST_WSTRING shift to state 48
-- On CST_WCHAR shift to state 49
-- On CST_STRING shift to state 50
-- On CST_INT shift to state 51
-- On CST_FLOAT shift to state 52
-- On CST_CHAR shift to state 53
-- On BUILTIN_VA_ARG shift to state 54
-- On AT_EXPR shift to state 56
-- On AND_AND shift to state 60
-- On AND shift to state 62
-- On ALIGNOF shift to state 63
-- On wstring_list shift to state 98
-- On unary_expression shift to state 101
-- On string_list shift to state 106
-- On string_constant shift to state 108
-- On shift_expression shift to state 142
-- On primary_expression shift to state 111
-- On postfix_expression shift to state 112
-- On paren_comma_expression shift to state 120
-- On one_string shift to state 121
-- On multiplicative_expression shift to state 122
-- On constant shift to state 124
-- On cast_expression shift to state 130
-- On additive_expression shift to state 136
## Reductions:

State 142:
## Known stack suffix:
## relational_expression INF shift_expression
## LR(1) items:
relational_expression -> relational_expression INF shift_expression . [ SUP_EQ SUP SEMICOLON RPAREN RBRACKET RBRACE QUEST PIPE_PIPE PIPE INF_EQ INF EXCLAM_EQ EQ_EQ ELLIPSIS COMMA COLON CIRC AND_AND AND ]
shift_expression -> shift_expression . INF_INF additive_expression [ SUP_SUP SUP_EQ SUP SEMICOLON RPAREN RBRACKET RBRACE QUEST PIPE_PIPE PIPE INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ ELLIPSIS COMMA COLON CIRC AND_AND AND ]
shift_expression -> shift_expression . SUP_SUP additive_expression [ SUP_SUP SUP_EQ SUP SEMICOLON RPAREN RBRACKET RBRACE QUEST PIPE_PIPE PIPE INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ ELLIPSIS COMMA COLON CIRC AND_AND AND ]
## Transitions:
-- On SUP_SUP shift to state 110
-- On INF_INF shift to state 119
## Reductions:
-- On SUP_EQ SUP SEMICOLON RPAREN RBRACKET RBRACE QUEST PIPE_PIPE PIPE INF_EQ INF EXCLAM_EQ EQ_EQ ELLIPSIS COMMA COLON CIRC AND_AND AND
--   reduce production relational_expression -> relational_expression INF shift_expression

State 143:
## Known stack suffix:
## logical_or_expression
## LR(1) items:
conditional_expression -> logical_or_expression . [ SEMICOLON RPAREN RBRACKET RBRACE ELLIPSIS COMMA COLON ]
conditional_expression -> logical_or_expression . QUEST opt_expression COLON conditional_expression [ SEMICOLON RPAREN RBRACKET RBRACE ELLIPSIS COMMA COLON ]
logical_or_expression -> logical_or_expression . PIPE_PIPE logical_and_expression [ SEMICOLON RPAREN RBRACKET RBRACE QUEST PIPE_PIPE ELLIPSIS COMMA COLON ]
## Transitions:
-- On QUEST shift to state 144
-- On PIPE_PIPE shift to state 194
## Reductions:
-- On SEMICOLON RPAREN RBRACKET RBRACE ELLIPSIS COMMA COLON
--   reduce production conditional_expression -> logical_or_expression

State 144:
## Known stack suffix:
## logical_or_expression QUEST
## LR(1) items:
conditional_expression -> logical_or_expression QUEST . opt_expression COLON conditional_expression [ SEMICOLON RPAREN RBRACKET RBRACE ELLIPSIS COMMA COLON ]
## Transitions:
-- On error shift to state 44
-- On TILDE shift to state 32
-- On STAR shift to state 33
-- On SIZEOF shift to state 34
-- On PRETTY_FUNCTION__ shift to state 35
-- On PLUS_PLUS shift to state 36
-- On PLUS shift to state 37
-- On MINUS_MINUS shift to state 38
-- On MINUS shift to state 39
-- On LPAREN shift to state 40
-- On IDENT shift to state 45
-- On FUNCTION__ shift to state 46
-- On EXCLAM shift to state 47
-- On CST_WSTRING shift to state 48
-- On CST_WCHAR shift to state 49
-- On CST_STRING shift to state 50
-- On CST_INT shift to state 51
-- On CST_FLOAT shift to state 52
-- On CST_CHAR shift to state 53
-- On BUILTIN_VA_ARG shift to state 54
-- On AT_EXPR shift to state 56
-- On AND_AND shift to state 60
-- On AND shift to state 62
-- On ALIGNOF shift to state 63
-- On wstring_list shift to state 98
-- On unary_expression shift to state 101
-- On string_list shift to state 106
-- On string_constant shift to state 108
-- On shift_expression shift to state 109
-- On relational_expression shift to state 116
-- On primary_expression shift to state 111
-- On postfix_expression shift to state 112
-- On paren_comma_expression shift to state 120
-- On opt_expression shift to state 145
-- On one_string shift to state 121
-- On multiplicative_expression shift to state 122
-- On logical_or_expression shift to state 143
-- On logical_and_expression shift to state 147
-- On expression shift to state 165
-- On equality_expression shift to state 149
-- On constant shift to state 124
-- On conditional_expression shift to state 167
-- On comma_expression shift to state 193
-- On cast_expression shift to state 169
-- On bitwise_xor_expression shift to state 154
-- On bitwise_or_expression shift to state 164
-- On bitwise_and_expression shift to state 162
-- On assignment_expression shift to state 192
-- On additive_expression shift to state 136
## Reductions:
-- On COLON
--   reduce production opt_expression ->

State 145:
## Known stack suffix:
## logical_or_expression QUEST opt_expression
## LR(1) items:
conditional_expression -> logical_or_expression QUEST opt_expression . COLON conditional_expression [ SEMICOLON RPAREN RBRACKET RBRACE ELLIPSIS COMMA COLON ]
## Transitions:
-- On COLON shift to state 146
## Reductions:

State 146:
## Known stack suffix:
## logical_or_expression QUEST opt_expression COLON
## LR(1) items:
conditional_expression -> logical_or_expression QUEST opt_expression COLON . conditional_expression [ SEMICOLON RPAREN RBRACKET RBRACE ELLIPSIS COMMA COLON ]
## Transitions:
-- On TILDE shift to state 32
-- On STAR shift to state 33
-- On SIZEOF shift to state 34
-- On PRETTY_FUNCTION__ shift to state 35
-- On PLUS_PLUS shift to state 36
-- On PLUS shift to state 37
-- On MINUS_MINUS shift to state 38
-- On MINUS shift to state 39
-- On LPAREN shift to state 40
-- On IDENT shift to state 45
-- On FUNCTION__ shift to state 46
-- On EXCLAM shift to state 47
-- On CST_WSTRING shift to state 48
-- On CST_WCHAR shift to state 49
-- On CST_STRING shift to state 50
-- On CST_INT shift to state 51
-- On CST_FLOAT shift to state 52
-- On CST_CHAR shift to state 53
-- On BUILTIN_VA_ARG shift to state 54
-- On AT_EXPR shift to state 56
-- On AND_AND shift to state 60
-- On AND shift to state 62
-- On ALIGNOF shift to state 63
-- On wstring_list shift to state 98
-- On unary_expression shift to state 101
-- On string_list shift to state 106
-- On string_constant shift to state 108
-- On shift_expression shift to state 109
-- On relational_expression shift to state 116
-- On primary_expression shift to state 111
-- On postfix_expression shift to state 112
-- On paren_comma_expression shift to state 120
-- On one_string shift to state 121
-- On multiplicative_expression shift to state 122
-- On logical_or_expression shift to state 143
-- On logical_and_expression shift to state 147
-- On equality_expression shift to state 149
-- On constant shift to state 124
-- On conditional_expression shift to state 163
-- On cast_expression shift to state 130
-- On bitwise_xor_expression shift to state 154
-- On bitwise_or_expression shift to state 164
-- On bitwise_and_expression shift to state 162
-- On additive_expression shift to state 136
## Reductions:

State 147:
## Known stack suffix:
## logical_and_expression
## LR(1) items:
logical_and_expression -> logical_and_expression . AND_AND bitwise_or_expression [ SEMICOLON RPAREN RBRACKET RBRACE QUEST PIPE_PIPE ELLIPSIS COMMA COLON AND_AND ]
logical_or_expression -> logical_and_expression . [ SEMICOLON RPAREN RBRACKET RBRACE QUEST PIPE_PIPE ELLIPSIS COMMA COLON ]
## Transitions:
-- On AND_AND shift to state 148
## Reductions:
-- On SEMICOLON RPAREN RBRACKET RBRACE QUEST PIPE_PIPE ELLIPSIS COMMA COLON
--   reduce production logical_or_expression -> logical_and_expression

State 148:
## Known stack suffix:
## logical_and_expression AND_AND
## LR(1) items:
logical_and_expression -> logical_and_expression AND_AND . bitwise_or_expression [ SEMICOLON RPAREN RBRACKET RBRACE QUEST PIPE_PIPE ELLIPSIS COMMA COLON AND_AND ]
## Transitions:
-- On TILDE shift to state 32
-- On STAR shift to state 33
-- On SIZEOF shift to state 34
-- On PRETTY_FUNCTION__ shift to state 35
-- On PLUS_PLUS shift to state 36
-- On PLUS shift to state 37
-- On MINUS_MINUS shift to state 38
-- On MINUS shift to state 39
-- On LPAREN shift to state 40
-- On IDENT shift to state 45
-- On FUNCTION__ shift to state 46
-- On EXCLAM shift to state 47
-- On CST_WSTRING shift to state 48
-- On CST_WCHAR shift to state 49
-- On CST_STRING shift to state 50
-- On CST_INT shift to state 51
-- On CST_FLOAT shift to state 52
-- On CST_CHAR shift to state 53
-- On BUILTIN_VA_ARG shift to state 54
-- On AT_EXPR shift to state 56
-- On AND_AND shift to state 60
-- On AND shift to state 62
-- On ALIGNOF shift to state 63
-- On wstring_list shift to state 98
-- On unary_expression shift to state 101
-- On string_list shift to state 106
-- On string_constant shift to state 108
-- On shift_expression shift to state 109
-- On relational_expression shift to state 116
-- On primary_expression shift to state 111
-- On postfix_expression shift to state 112
-- On paren_comma_expression shift to state 120
-- On one_string shift to state 121
-- On multiplicative_expression shift to state 122
-- On equality_expression shift to state 149
-- On constant shift to state 124
-- On cast_expression shift to state 130
-- On bitwise_xor_expression shift to state 154
-- On bitwise_or_expression shift to state 159
-- On bitwise_and_expression shift to state 162
-- On additive_expression shift to state 136
## Reductions:

State 149:
## Known stack suffix:
## equality_expression
## LR(1) items:
bitwise_and_expression -> equality_expression . [ SEMICOLON RPAREN RBRACKET RBRACE QUEST PIPE_PIPE PIPE ELLIPSIS COMMA COLON CIRC AND_AND AND ]
equality_expression -> equality_expression . EQ_EQ relational_expression [ SEMICOLON RPAREN RBRACKET RBRACE QUEST PIPE_PIPE PIPE EXCLAM_EQ EQ_EQ ELLIPSIS COMMA COLON CIRC AND_AND AND ]
equality_expression -> equality_expression . EXCLAM_EQ relational_expression [ SEMICOLON RPAREN RBRACKET RBRACE QUEST PIPE_PIPE PIPE EXCLAM_EQ EQ_EQ ELLIPSIS COMMA COLON CIRC AND_AND AND ]
## Transitions:
-- On EXCLAM_EQ shift to state 150
-- On EQ_EQ shift to state 152
## Reductions:
-- On SEMICOLON RPAREN RBRACKET RBRACE QUEST PIPE_PIPE PIPE ELLIPSIS COMMA COLON CIRC AND_AND AND
--   reduce production bitwise_and_expression -> equality_expression

State 150:
## Known stack suffix:
## equality_expression EXCLAM_EQ
## LR(1) items:
equality_expression -> equality_expression EXCLAM_EQ . relational_expression [ SEMICOLON RPAREN RBRACKET RBRACE QUEST PIPE_PIPE PIPE EXCLAM_EQ EQ_EQ ELLIPSIS COMMA COLON CIRC AND_AND AND ]
## Transitions:
-- On TILDE shift to state 32
-- On STAR shift to state 33
-- On SIZEOF shift to state 34
-- On PRETTY_FUNCTION__ shift to state 35
-- On PLUS_PLUS shift to state 36
-- On PLUS shift to state 37
-- On MINUS_MINUS shift to state 38
-- On MINUS shift to state 39
-- On LPAREN shift to state 40
-- On IDENT shift to state 45
-- On FUNCTION__ shift to state 46
-- On EXCLAM shift to state 47
-- On CST_WSTRING shift to state 48
-- On CST_WCHAR shift to state 49
-- On CST_STRING shift to state 50
-- On CST_INT shift to state 51
-- On CST_FLOAT shift to state 52
-- On CST_CHAR shift to state 53
-- On BUILTIN_VA_ARG shift to state 54
-- On AT_EXPR shift to state 56
-- On AND_AND shift to state 60
-- On AND shift to state 62
-- On ALIGNOF shift to state 63
-- On wstring_list shift to state 98
-- On unary_expression shift to state 101
-- On string_list shift to state 106
-- On string_constant shift to state 108
-- On shift_expression shift to state 109
-- On relational_expression shift to state 151
-- On primary_expression shift to state 111
-- On postfix_expression shift to state 112
-- On paren_comma_expression shift to state 120
-- On one_string shift to state 121
-- On multiplicative_expression shift to state 122
-- On constant shift to state 124
-- On cast_expression shift to state 130
-- On additive_expression shift to state 136
## Reductions:

State 151:
## Known stack suffix:
## equality_expression EXCLAM_EQ relational_expression
## LR(1) items:
equality_expression -> equality_expression EXCLAM_EQ relational_expression . [ SEMICOLON RPAREN RBRACKET RBRACE QUEST PIPE_PIPE PIPE EXCLAM_EQ EQ_EQ ELLIPSIS COMMA COLON CIRC AND_AND AND ]
relational_expression -> relational_expression . INF shift_expression [ SUP_EQ SUP SEMICOLON RPAREN RBRACKET RBRACE QUEST PIPE_PIPE PIPE INF_EQ INF EXCLAM_EQ EQ_EQ ELLIPSIS COMMA COLON CIRC AND_AND AND ]
relational_expression -> relational_expression . SUP shift_expression [ SUP_EQ SUP SEMICOLON RPAREN RBRACKET RBRACE QUEST PIPE_PIPE PIPE INF_EQ INF EXCLAM_EQ EQ_EQ ELLIPSIS COMMA COLON CIRC AND_AND AND ]
relational_expression -> relational_expression . INF_EQ shift_expression [ SUP_EQ SUP SEMICOLON RPAREN RBRACKET RBRACE QUEST PIPE_PIPE PIPE INF_EQ INF EXCLAM_EQ EQ_EQ ELLIPSIS COMMA COLON CIRC AND_AND AND ]
relational_expression -> relational_expression . SUP_EQ shift_expression [ SUP_EQ SUP SEMICOLON RPAREN RBRACKET RBRACE QUEST PIPE_PIPE PIPE INF_EQ INF EXCLAM_EQ EQ_EQ ELLIPSIS COMMA COLON CIRC AND_AND AND ]
## Transitions:
-- On SUP_EQ shift to state 117
-- On SUP shift to state 137
-- On INF_EQ shift to state 139
-- On INF shift to state 141
## Reductions:
-- On SEMICOLON RPAREN RBRACKET RBRACE QUEST PIPE_PIPE PIPE EXCLAM_EQ EQ_EQ ELLIPSIS COMMA COLON CIRC AND_AND AND
--   reduce production equality_expression -> equality_expression EXCLAM_EQ relational_expression

State 152:
## Known stack suffix:
## equality_expression EQ_EQ
## LR(1) items:
equality_expression -> equality_expression EQ_EQ . relational_expression [ SEMICOLON RPAREN RBRACKET RBRACE QUEST PIPE_PIPE PIPE EXCLAM_EQ EQ_EQ ELLIPSIS COMMA COLON CIRC AND_AND AND ]
## Transitions:
-- On TILDE shift to state 32
-- On STAR shift to state 33
-- On SIZEOF shift to state 34
-- On PRETTY_FUNCTION__ shift to state 35
-- On PLUS_PLUS shift to state 36
-- On PLUS shift to state 37
-- On MINUS_MINUS shift to state 38
-- On MINUS shift to state 39
-- On LPAREN shift to state 40
-- On IDENT shift to state 45
-- On FUNCTION__ shift to state 46
-- On EXCLAM shift to state 47
-- On CST_WSTRING shift to state 48
-- On CST_WCHAR shift to state 49
-- On CST_STRING shift to state 50
-- On CST_INT shift to state 51
-- On CST_FLOAT shift to state 52
-- On CST_CHAR shift to state 53
-- On BUILTIN_VA_ARG shift to state 54
-- On AT_EXPR shift to state 56
-- On AND_AND shift to state 60
-- On AND shift to state 62
-- On ALIGNOF shift to state 63
-- On wstring_list shift to state 98
-- On unary_expression shift to state 101
-- On string_list shift to state 106
-- On string_constant shift to state 108
-- On shift_expression shift to state 109
-- On relational_expression shift to state 153
-- On primary_expression shift to state 111
-- On postfix_expression shift to state 112
-- On paren_comma_expression shift to state 120
-- On one_string shift to state 121
-- On multiplicative_expression shift to state 122
-- On constant shift to state 124
-- On cast_expression shift to state 130
-- On additive_expression shift to state 136
## Reductions:

State 153:
## Known stack suffix:
## equality_expression EQ_EQ relational_expression
## LR(1) items:
equality_expression -> equality_expression EQ_EQ relational_expression . [ SEMICOLON RPAREN RBRACKET RBRACE QUEST PIPE_PIPE PIPE EXCLAM_EQ EQ_EQ ELLIPSIS COMMA COLON CIRC AND_AND AND ]
relational_expression -> relational_expression . INF shift_expression [ SUP_EQ SUP SEMICOLON RPAREN RBRACKET RBRACE QUEST PIPE_PIPE PIPE INF_EQ INF EXCLAM_EQ EQ_EQ ELLIPSIS COMMA COLON CIRC AND_AND AND ]
relational_expression -> relational_expression . SUP shift_expression [ SUP_EQ SUP SEMICOLON RPAREN RBRACKET RBRACE QUEST PIPE_PIPE PIPE INF_EQ INF EXCLAM_EQ EQ_EQ ELLIPSIS COMMA COLON CIRC AND_AND AND ]
relational_expression -> relational_expression . INF_EQ shift_expression [ SUP_EQ SUP SEMICOLON RPAREN RBRACKET RBRACE QUEST PIPE_PIPE PIPE INF_EQ INF EXCLAM_EQ EQ_EQ ELLIPSIS COMMA COLON CIRC AND_AND AND ]
relational_expression -> relational_expression . SUP_EQ shift_expression [ SUP_EQ SUP SEMICOLON RPAREN RBRACKET RBRACE QUEST PIPE_PIPE PIPE INF_EQ INF EXCLAM_EQ EQ_EQ ELLIPSIS COMMA COLON CIRC AND_AND AND ]
## Transitions:
-- On SUP_EQ shift to state 117
-- On SUP shift to state 137
-- On INF_EQ shift to state 139
-- On INF shift to state 141
## Reductions:
-- On SEMICOLON RPAREN RBRACKET RBRACE QUEST PIPE_PIPE PIPE EXCLAM_EQ EQ_EQ ELLIPSIS COMMA COLON CIRC AND_AND AND
--   reduce production equality_expression -> equality_expression EQ_EQ relational_expression

State 154:
## Known stack suffix:
## bitwise_xor_expression
## LR(1) items:
bitwise_or_expression -> bitwise_xor_expression . [ SEMICOLON RPAREN RBRACKET RBRACE QUEST PIPE_PIPE PIPE ELLIPSIS COMMA COLON AND_AND ]
bitwise_xor_expression -> bitwise_xor_expression . CIRC bitwise_and_expression [ SEMICOLON RPAREN RBRACKET RBRACE QUEST PIPE_PIPE PIPE ELLIPSIS COMMA COLON CIRC AND_AND ]
## Transitions:
-- On CIRC shift to state 155
## Reductions:
-- On SEMICOLON RPAREN RBRACKET RBRACE QUEST PIPE_PIPE PIPE ELLIPSIS COMMA COLON AND_AND
--   reduce production bitwise_or_expression -> bitwise_xor_expression

State 155:
## Known stack suffix:
## bitwise_xor_expression CIRC
## LR(1) items:
bitwise_xor_expression -> bitwise_xor_expression CIRC . bitwise_and_expression [ SEMICOLON RPAREN RBRACKET RBRACE QUEST PIPE_PIPE PIPE ELLIPSIS COMMA COLON CIRC AND_AND ]
## Transitions:
-- On TILDE shift to state 32
-- On STAR shift to state 33
-- On SIZEOF shift to state 34
-- On PRETTY_FUNCTION__ shift to state 35
-- On PLUS_PLUS shift to state 36
-- On PLUS shift to state 37
-- On MINUS_MINUS shift to state 38
-- On MINUS shift to state 39
-- On LPAREN shift to state 40
-- On IDENT shift to state 45
-- On FUNCTION__ shift to state 46
-- On EXCLAM shift to state 47
-- On CST_WSTRING shift to state 48
-- On CST_WCHAR shift to state 49
-- On CST_STRING shift to state 50
-- On CST_INT shift to state 51
-- On CST_FLOAT shift to state 52
-- On CST_CHAR shift to state 53
-- On BUILTIN_VA_ARG shift to state 54
-- On AT_EXPR shift to state 56
-- On AND_AND shift to state 60
-- On AND shift to state 62
-- On ALIGNOF shift to state 63
-- On wstring_list shift to state 98
-- On unary_expression shift to state 101
-- On string_list shift to state 106
-- On string_constant shift to state 108
-- On shift_expression shift to state 109
-- On relational_expression shift to state 116
-- On primary_expression shift to state 111
-- On postfix_expression shift to state 112
-- On paren_comma_expression shift to state 120
-- On one_string shift to state 121
-- On multiplicative_expression shift to state 122
-- On equality_expression shift to state 149
-- On constant shift to state 124
-- On cast_expression shift to state 130
-- On bitwise_and_expression shift to state 156
-- On additive_expression shift to state 136
## Reductions:

State 156:
## Known stack suffix:
## bitwise_xor_expression CIRC bitwise_and_expression
## LR(1) items:
bitwise_and_expression -> bitwise_and_expression . AND equality_expression [ SEMICOLON RPAREN RBRACKET RBRACE QUEST PIPE_PIPE PIPE ELLIPSIS COMMA COLON CIRC AND_AND AND ]
bitwise_xor_expression -> bitwise_xor_expression CIRC bitwise_and_expression . [ SEMICOLON RPAREN RBRACKET RBRACE QUEST PIPE_PIPE PIPE ELLIPSIS COMMA COLON CIRC AND_AND ]
## Transitions:
-- On AND shift to state 157
## Reductions:
-- On SEMICOLON RPAREN RBRACKET RBRACE QUEST PIPE_PIPE PIPE ELLIPSIS COMMA COLON CIRC AND_AND
--   reduce production bitwise_xor_expression -> bitwise_xor_expression CIRC bitwise_and_expression

State 157:
## Known stack suffix:
## bitwise_and_expression AND
## LR(1) items:
bitwise_and_expression -> bitwise_and_expression AND . equality_expression [ SEMICOLON RPAREN RBRACKET RBRACE QUEST PIPE_PIPE PIPE ELLIPSIS COMMA COLON CIRC AND_AND AND ]
## Transitions:
-- On TILDE shift to state 32
-- On STAR shift to state 33
-- On SIZEOF shift to state 34
-- On PRETTY_FUNCTION__ shift to state 35
-- On PLUS_PLUS shift to state 36
-- On PLUS shift to state 37
-- On MINUS_MINUS shift to state 38
-- On MINUS shift to state 39
-- On LPAREN shift to state 40
-- On IDENT shift to state 45
-- On FUNCTION__ shift to state 46
-- On EXCLAM shift to state 47
-- On CST_WSTRING shift to state 48
-- On CST_WCHAR shift to state 49
-- On CST_STRING shift to state 50
-- On CST_INT shift to state 51
-- On CST_FLOAT shift to state 52
-- On CST_CHAR shift to state 53
-- On BUILTIN_VA_ARG shift to state 54
-- On AT_EXPR shift to state 56
-- On AND_AND shift to state 60
-- On AND shift to state 62
-- On ALIGNOF shift to state 63
-- On wstring_list shift to state 98
-- On unary_expression shift to state 101
-- On string_list shift to state 106
-- On string_constant shift to state 108
-- On shift_expression shift to state 109
-- On relational_expression shift to state 116
-- On primary_expression shift to state 111
-- On postfix_expression shift to state 112
-- On paren_comma_expression shift to state 120
-- On one_string shift to state 121
-- On multiplicative_expression shift to state 122
-- On equality_expression shift to state 158
-- On constant shift to state 124
-- On cast_expression shift to state 130
-- On additive_expression shift to state 136
## Reductions:

State 158:
## Known stack suffix:
## bitwise_and_expression AND equality_expression
## LR(1) items:
bitwise_and_expression -> bitwise_and_expression AND equality_expression . [ SEMICOLON RPAREN RBRACKET RBRACE QUEST PIPE_PIPE PIPE ELLIPSIS COMMA COLON CIRC AND_AND AND ]
equality_expression -> equality_expression . EQ_EQ relational_expression [ SEMICOLON RPAREN RBRACKET RBRACE QUEST PIPE_PIPE PIPE EXCLAM_EQ EQ_EQ ELLIPSIS COMMA COLON CIRC AND_AND AND ]
equality_expression -> equality_expression . EXCLAM_EQ relational_expression [ SEMICOLON RPAREN RBRACKET RBRACE QUEST PIPE_PIPE PIPE EXCLAM_EQ EQ_EQ ELLIPSIS COMMA COLON CIRC AND_AND AND ]
## Transitions:
-- On EXCLAM_EQ shift to state 150
-- On EQ_EQ shift to state 152
## Reductions:
-- On SEMICOLON RPAREN RBRACKET RBRACE QUEST PIPE_PIPE PIPE ELLIPSIS COMMA COLON CIRC AND_AND AND
--   reduce production bitwise_and_expression -> bitwise_and_expression AND equality_expression

State 159:
## Known stack suffix:
## logical_and_expression AND_AND bitwise_or_expression
## LR(1) items:
bitwise_or_expression -> bitwise_or_expression . PIPE bitwise_xor_expression [ SEMICOLON RPAREN RBRACKET RBRACE QUEST PIPE_PIPE PIPE ELLIPSIS COMMA COLON AND_AND ]
logical_and_expression -> logical_and_expression AND_AND bitwise_or_expression . [ SEMICOLON RPAREN RBRACKET RBRACE QUEST PIPE_PIPE ELLIPSIS COMMA COLON AND_AND ]
## Transitions:
-- On PIPE shift to state 160
## Reductions:
-- On SEMICOLON RPAREN RBRACKET RBRACE QUEST PIPE_PIPE ELLIPSIS COMMA COLON AND_AND
--   reduce production logical_and_expression -> logical_and_expression AND_AND bitwise_or_expression

State 160:
## Known stack suffix:
## bitwise_or_expression PIPE
## LR(1) items:
bitwise_or_expression -> bitwise_or_expression PIPE . bitwise_xor_expression [ SEMICOLON RPAREN RBRACKET RBRACE QUEST PIPE_PIPE PIPE ELLIPSIS COMMA COLON AND_AND ]
## Transitions:
-- On TILDE shift to state 32
-- On STAR shift to state 33
-- On SIZEOF shift to state 34
-- On PRETTY_FUNCTION__ shift to state 35
-- On PLUS_PLUS shift to state 36
-- On PLUS shift to state 37
-- On MINUS_MINUS shift to state 38
-- On MINUS shift to state 39
-- On LPAREN shift to state 40
-- On IDENT shift to state 45
-- On FUNCTION__ shift to state 46
-- On EXCLAM shift to state 47
-- On CST_WSTRING shift to state 48
-- On CST_WCHAR shift to state 49
-- On CST_STRING shift to state 50
-- On CST_INT shift to state 51
-- On CST_FLOAT shift to state 52
-- On CST_CHAR shift to state 53
-- On BUILTIN_VA_ARG shift to state 54
-- On AT_EXPR shift to state 56
-- On AND_AND shift to state 60
-- On AND shift to state 62
-- On ALIGNOF shift to state 63
-- On wstring_list shift to state 98
-- On unary_expression shift to state 101
-- On string_list shift to state 106
-- On string_constant shift to state 108
-- On shift_expression shift to state 109
-- On relational_expression shift to state 116
-- On primary_expression shift to state 111
-- On postfix_expression shift to state 112
-- On paren_comma_expression shift to state 120
-- On one_string shift to state 121
-- On multiplicative_expression shift to state 122
-- On equality_expression shift to state 149
-- On constant shift to state 124
-- On cast_expression shift to state 130
-- On bitwise_xor_expression shift to state 161
-- On bitwise_and_expression shift to state 162
-- On additive_expression shift to state 136
## Reductions:

State 161:
## Known stack suffix:
## bitwise_or_expression PIPE bitwise_xor_expression
## LR(1) items:
bitwise_or_expression -> bitwise_or_expression PIPE bitwise_xor_expression . [ SEMICOLON RPAREN RBRACKET RBRACE QUEST PIPE_PIPE PIPE ELLIPSIS COMMA COLON AND_AND ]
bitwise_xor_expression -> bitwise_xor_expression . CIRC bitwise_and_expression [ SEMICOLON RPAREN RBRACKET RBRACE QUEST PIPE_PIPE PIPE ELLIPSIS COMMA COLON CIRC AND_AND ]
## Transitions:
-- On CIRC shift to state 155
## Reductions:
-- On SEMICOLON RPAREN RBRACKET RBRACE QUEST PIPE_PIPE PIPE ELLIPSIS COMMA COLON AND_AND
--   reduce production bitwise_or_expression -> bitwise_or_expression PIPE bitwise_xor_expression

State 162:
## Known stack suffix:
## bitwise_and_expression
## LR(1) items:
bitwise_and_expression -> bitwise_and_expression . AND equality_expression [ SEMICOLON RPAREN RBRACKET RBRACE QUEST PIPE_PIPE PIPE ELLIPSIS COMMA COLON CIRC AND_AND AND ]
bitwise_xor_expression -> bitwise_and_expression . [ SEMICOLON RPAREN RBRACKET RBRACE QUEST PIPE_PIPE PIPE ELLIPSIS COMMA COLON CIRC AND_AND ]
## Transitions:
-- On AND shift to state 157
## Reductions:
-- On SEMICOLON RPAREN RBRACKET RBRACE QUEST PIPE_PIPE PIPE ELLIPSIS COMMA COLON CIRC AND_AND
--   reduce production bitwise_xor_expression -> bitwise_and_expression

State 163:
## Known stack suffix:
## logical_or_expression QUEST opt_expression COLON conditional_expression
## LR(1) items:
conditional_expression -> logical_or_expression QUEST opt_expression COLON conditional_expression . [ SEMICOLON RPAREN RBRACKET RBRACE ELLIPSIS COMMA COLON ]
## Transitions:
## Reductions:
-- On SEMICOLON RPAREN RBRACKET RBRACE ELLIPSIS COMMA COLON
--   reduce production conditional_expression -> logical_or_expression QUEST opt_expression COLON conditional_expression

State 164:
## Known stack suffix:
## bitwise_or_expression
## LR(1) items:
bitwise_or_expression -> bitwise_or_expression . PIPE bitwise_xor_expression [ SEMICOLON RPAREN RBRACKET RBRACE QUEST PIPE_PIPE PIPE ELLIPSIS COMMA COLON AND_AND ]
logical_and_expression -> bitwise_or_expression . [ SEMICOLON RPAREN RBRACKET RBRACE QUEST PIPE_PIPE ELLIPSIS COMMA COLON AND_AND ]
## Transitions:
-- On PIPE shift to state 160
## Reductions:
-- On SEMICOLON RPAREN RBRACKET RBRACE QUEST PIPE_PIPE ELLIPSIS COMMA COLON AND_AND
--   reduce production logical_and_expression -> bitwise_or_expression

State 165:
## Known stack suffix:
## expression
## LR(1) items:
comma_expression -> expression . [ SEMICOLON RPAREN RBRACKET COLON ]
comma_expression -> expression . COMMA comma_expression [ SEMICOLON RPAREN RBRACKET COLON ]
## Transitions:
-- On COMMA shift to state 166
## Reductions:
-- On SEMICOLON RPAREN RBRACKET COLON
--   reduce production comma_expression -> expression

State 166:
## Known stack suffix:
## expression COMMA
## LR(1) items:
comma_expression -> expression COMMA . comma_expression [ SEMICOLON RPAREN RBRACKET COLON ]
## Transitions:
-- On error shift to state 44
-- On TILDE shift to state 32
-- On STAR shift to state 33
-- On SIZEOF shift to state 34
-- On PRETTY_FUNCTION__ shift to state 35
-- On PLUS_PLUS shift to state 36
-- On PLUS shift to state 37
-- On MINUS_MINUS shift to state 38
-- On MINUS shift to state 39
-- On LPAREN shift to state 40
-- On IDENT shift to state 45
-- On FUNCTION__ shift to state 46
-- On EXCLAM shift to state 47
-- On CST_WSTRING shift to state 48
-- On CST_WCHAR shift to state 49
-- On CST_STRING shift to state 50
-- On CST_INT shift to state 51
-- On CST_FLOAT shift to state 52
-- On CST_CHAR shift to state 53
-- On BUILTIN_VA_ARG shift to state 54
-- On AT_EXPR shift to state 56
-- On AND_AND shift to state 60
-- On AND shift to state 62
-- On ALIGNOF shift to state 63
-- On wstring_list shift to state 98
-- On unary_expression shift to state 101
-- On string_list shift to state 106
-- On string_constant shift to state 108
-- On shift_expression shift to state 109
-- On relational_expression shift to state 116
-- On primary_expression shift to state 111
-- On postfix_expression shift to state 112
-- On paren_comma_expression shift to state 120
-- On one_string shift to state 121
-- On multiplicative_expression shift to state 122
-- On logical_or_expression shift to state 143
-- On logical_and_expression shift to state 147
-- On expression shift to state 165
-- On equality_expression shift to state 149
-- On constant shift to state 124
-- On conditional_expression shift to state 167
-- On comma_expression shift to state 168
-- On cast_expression shift to state 169
-- On bitwise_xor_expression shift to state 154
-- On bitwise_or_expression shift to state 164
-- On bitwise_and_expression shift to state 162
-- On assignment_expression shift to state 192
-- On additive_expression shift to state 136
## Reductions:

State 167:
## Known stack suffix:
## conditional_expression
## LR(1) items:
assignment_expression -> conditional_expression . [ SEMICOLON RPAREN RBRACKET RBRACE ELLIPSIS COMMA COLON ]
## Transitions:
## Reductions:
-- On SEMICOLON RPAREN RBRACKET RBRACE ELLIPSIS COMMA COLON
--   reduce production assignment_expression -> conditional_expression

State 168:
## Known stack suffix:
## expression COMMA comma_expression
## LR(1) items:
comma_expression -> expression COMMA comma_expression . [ SEMICOLON RPAREN RBRACKET COLON ]
## Transitions:
## Reductions:
-- On SEMICOLON RPAREN RBRACKET COLON
--   reduce production comma_expression -> expression COMMA comma_expression

State 169:
## Known stack suffix:
## cast_expression
## LR(1) items:
assignment_expression -> cast_expression . EQ assignment_expression [ SEMICOLON RPAREN RBRACKET RBRACE ELLIPSIS COMMA COLON ]
assignment_expression -> cast_expression . PLUS_EQ assignment_expression [ SEMICOLON RPAREN RBRACKET RBRACE ELLIPSIS COMMA COLON ]
assignment_expression -> cast_expression . MINUS_EQ assignment_expression [ SEMICOLON RPAREN RBRACKET RBRACE ELLIPSIS COMMA COLON ]
assignment_expression -> cast_expression . STAR_EQ assignment_expression [ SEMICOLON RPAREN RBRACKET RBRACE ELLIPSIS COMMA COLON ]
assignment_expression -> cast_expression . SLASH_EQ assignment_expression [ SEMICOLON RPAREN RBRACKET RBRACE ELLIPSIS COMMA COLON ]
assignment_expression -> cast_expression . PERCENT_EQ assignment_expression [ SEMICOLON RPAREN RBRACKET RBRACE ELLIPSIS COMMA COLON ]
assignment_expression -> cast_expression . AND_EQ assignment_expression [ SEMICOLON RPAREN RBRACKET RBRACE ELLIPSIS COMMA COLON ]
assignment_expression -> cast_expression . PIPE_EQ assignment_expression [ SEMICOLON RPAREN RBRACKET RBRACE ELLIPSIS COMMA COLON ]
assignment_expression -> cast_expression . CIRC_EQ assignment_expression [ SEMICOLON RPAREN RBRACKET RBRACE ELLIPSIS COMMA COLON ]
assignment_expression -> cast_expression . INF_INF_EQ assignment_expression [ SEMICOLON RPAREN RBRACKET RBRACE ELLIPSIS COMMA COLON ]
assignment_expression -> cast_expression . SUP_SUP_EQ assignment_expression [ SEMICOLON RPAREN RBRACKET RBRACE ELLIPSIS COMMA COLON ]
multiplicative_expression -> cast_expression . [ SUP_SUP SUP_EQ SUP STAR SLASH SEMICOLON RPAREN RBRACKET RBRACE QUEST PLUS PIPE_PIPE PIPE PERCENT MINUS INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ ELLIPSIS COMMA COLON CIRC AND_AND AND ]
## Transitions:
-- On SUP_SUP_EQ shift to state 170
-- On STAR_EQ shift to state 172
-- On SLASH_EQ shift to state 174
-- On PLUS_EQ shift to state 176
-- On PIPE_EQ shift to state 178
-- On PERCENT_EQ shift to state 180
-- On MINUS_EQ shift to state 182
-- On INF_INF_EQ shift to state 184
-- On EQ shift to state 186
-- On CIRC_EQ shift to state 188
-- On AND_EQ shift to state 190
## Reductions:
-- On SUP_SUP SUP_EQ SUP STAR SLASH SEMICOLON RPAREN RBRACKET RBRACE QUEST PLUS PIPE_PIPE PIPE PERCENT MINUS INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ ELLIPSIS COMMA COLON CIRC AND_AND AND
--   reduce production multiplicative_expression -> cast_expression

State 170:
## Known stack suffix:
## cast_expression SUP_SUP_EQ
## LR(1) items:
assignment_expression -> cast_expression SUP_SUP_EQ . assignment_expression [ SEMICOLON RPAREN RBRACKET RBRACE ELLIPSIS COMMA COLON ]
## Transitions:
-- On TILDE shift to state 32
-- On STAR shift to state 33
-- On SIZEOF shift to state 34
-- On PRETTY_FUNCTION__ shift to state 35
-- On PLUS_PLUS shift to state 36
-- On PLUS shift to state 37
-- On MINUS_MINUS shift to state 38
-- On MINUS shift to state 39
-- On LPAREN shift to state 40
-- On IDENT shift to state 45
-- On FUNCTION__ shift to state 46
-- On EXCLAM shift to state 47
-- On CST_WSTRING shift to state 48
-- On CST_WCHAR shift to state 49
-- On CST_STRING shift to state 50
-- On CST_INT shift to state 51
-- On CST_FLOAT shift to state 52
-- On CST_CHAR shift to state 53
-- On BUILTIN_VA_ARG shift to state 54
-- On AT_EXPR shift to state 56
-- On AND_AND shift to state 60
-- On AND shift to state 62
-- On ALIGNOF shift to state 63
-- On wstring_list shift to state 98
-- On unary_expression shift to state 101
-- On string_list shift to state 106
-- On string_constant shift to state 108
-- On shift_expression shift to state 109
-- On relational_expression shift to state 116
-- On primary_expression shift to state 111
-- On postfix_expression shift to state 112
-- On paren_comma_expression shift to state 120
-- On one_string shift to state 121
-- On multiplicative_expression shift to state 122
-- On logical_or_expression shift to state 143
-- On logical_and_expression shift to state 147
-- On equality_expression shift to state 149
-- On constant shift to state 124
-- On conditional_expression shift to state 167
-- On cast_expression shift to state 169
-- On bitwise_xor_expression shift to state 154
-- On bitwise_or_expression shift to state 164
-- On bitwise_and_expression shift to state 162
-- On assignment_expression shift to state 171
-- On additive_expression shift to state 136
## Reductions:

State 171:
## Known stack suffix:
## cast_expression SUP_SUP_EQ assignment_expression
## LR(1) items:
assignment_expression -> cast_expression SUP_SUP_EQ assignment_expression . [ SEMICOLON RPAREN RBRACKET RBRACE ELLIPSIS COMMA COLON ]
## Transitions:
## Reductions:
-- On SEMICOLON RPAREN RBRACKET RBRACE ELLIPSIS COMMA COLON
--   reduce production assignment_expression -> cast_expression SUP_SUP_EQ assignment_expression

State 172:
## Known stack suffix:
## cast_expression STAR_EQ
## LR(1) items:
assignment_expression -> cast_expression STAR_EQ . assignment_expression [ SEMICOLON RPAREN RBRACKET RBRACE ELLIPSIS COMMA COLON ]
## Transitions:
-- On TILDE shift to state 32
-- On STAR shift to state 33
-- On SIZEOF shift to state 34
-- On PRETTY_FUNCTION__ shift to state 35
-- On PLUS_PLUS shift to state 36
-- On PLUS shift to state 37
-- On MINUS_MINUS shift to state 38
-- On MINUS shift to state 39
-- On LPAREN shift to state 40
-- On IDENT shift to state 45
-- On FUNCTION__ shift to state 46
-- On EXCLAM shift to state 47
-- On CST_WSTRING shift to state 48
-- On CST_WCHAR shift to state 49
-- On CST_STRING shift to state 50
-- On CST_INT shift to state 51
-- On CST_FLOAT shift to state 52
-- On CST_CHAR shift to state 53
-- On BUILTIN_VA_ARG shift to state 54
-- On AT_EXPR shift to state 56
-- On AND_AND shift to state 60
-- On AND shift to state 62
-- On ALIGNOF shift to state 63
-- On wstring_list shift to state 98
-- On unary_expression shift to state 101
-- On string_list shift to state 106
-- On string_constant shift to state 108
-- On shift_expression shift to state 109
-- On relational_expression shift to state 116
-- On primary_expression shift to state 111
-- On postfix_expression shift to state 112
-- On paren_comma_expression shift to state 120
-- On one_string shift to state 121
-- On multiplicative_expression shift to state 122
-- On logical_or_expression shift to state 143
-- On logical_and_expression shift to state 147
-- On equality_expression shift to state 149
-- On constant shift to state 124
-- On conditional_expression shift to state 167
-- On cast_expression shift to state 169
-- On bitwise_xor_expression shift to state 154
-- On bitwise_or_expression shift to state 164
-- On bitwise_and_expression shift to state 162
-- On assignment_expression shift to state 173
-- On additive_expression shift to state 136
## Reductions:

State 173:
## Known stack suffix:
## cast_expression STAR_EQ assignment_expression
## LR(1) items:
assignment_expression -> cast_expression STAR_EQ assignment_expression . [ SEMICOLON RPAREN RBRACKET RBRACE ELLIPSIS COMMA COLON ]
## Transitions:
## Reductions:
-- On SEMICOLON RPAREN RBRACKET RBRACE ELLIPSIS COMMA COLON
--   reduce production assignment_expression -> cast_expression STAR_EQ assignment_expression

State 174:
## Known stack suffix:
## cast_expression SLASH_EQ
## LR(1) items:
assignment_expression -> cast_expression SLASH_EQ . assignment_expression [ SEMICOLON RPAREN RBRACKET RBRACE ELLIPSIS COMMA COLON ]
## Transitions:
-- On TILDE shift to state 32
-- On STAR shift to state 33
-- On SIZEOF shift to state 34
-- On PRETTY_FUNCTION__ shift to state 35
-- On PLUS_PLUS shift to state 36
-- On PLUS shift to state 37
-- On MINUS_MINUS shift to state 38
-- On MINUS shift to state 39
-- On LPAREN shift to state 40
-- On IDENT shift to state 45
-- On FUNCTION__ shift to state 46
-- On EXCLAM shift to state 47
-- On CST_WSTRING shift to state 48
-- On CST_WCHAR shift to state 49
-- On CST_STRING shift to state 50
-- On CST_INT shift to state 51
-- On CST_FLOAT shift to state 52
-- On CST_CHAR shift to state 53
-- On BUILTIN_VA_ARG shift to state 54
-- On AT_EXPR shift to state 56
-- On AND_AND shift to state 60
-- On AND shift to state 62
-- On ALIGNOF shift to state 63
-- On wstring_list shift to state 98
-- On unary_expression shift to state 101
-- On string_list shift to state 106
-- On string_constant shift to state 108
-- On shift_expression shift to state 109
-- On relational_expression shift to state 116
-- On primary_expression shift to state 111
-- On postfix_expression shift to state 112
-- On paren_comma_expression shift to state 120
-- On one_string shift to state 121
-- On multiplicative_expression shift to state 122
-- On logical_or_expression shift to state 143
-- On logical_and_expression shift to state 147
-- On equality_expression shift to state 149
-- On constant shift to state 124
-- On conditional_expression shift to state 167
-- On cast_expression shift to state 169
-- On bitwise_xor_expression shift to state 154
-- On bitwise_or_expression shift to state 164
-- On bitwise_and_expression shift to state 162
-- On assignment_expression shift to state 175
-- On additive_expression shift to state 136
## Reductions:

State 175:
## Known stack suffix:
## cast_expression SLASH_EQ assignment_expression
## LR(1) items:
assignment_expression -> cast_expression SLASH_EQ assignment_expression . [ SEMICOLON RPAREN RBRACKET RBRACE ELLIPSIS COMMA COLON ]
## Transitions:
## Reductions:
-- On SEMICOLON RPAREN RBRACKET RBRACE ELLIPSIS COMMA COLON
--   reduce production assignment_expression -> cast_expression SLASH_EQ assignment_expression

State 176:
## Known stack suffix:
## cast_expression PLUS_EQ
## LR(1) items:
assignment_expression -> cast_expression PLUS_EQ . assignment_expression [ SEMICOLON RPAREN RBRACKET RBRACE ELLIPSIS COMMA COLON ]
## Transitions:
-- On TILDE shift to state 32
-- On STAR shift to state 33
-- On SIZEOF shift to state 34
-- On PRETTY_FUNCTION__ shift to state 35
-- On PLUS_PLUS shift to state 36
-- On PLUS shift to state 37
-- On MINUS_MINUS shift to state 38
-- On MINUS shift to state 39
-- On LPAREN shift to state 40
-- On IDENT shift to state 45
-- On FUNCTION__ shift to state 46
-- On EXCLAM shift to state 47
-- On CST_WSTRING shift to state 48
-- On CST_WCHAR shift to state 49
-- On CST_STRING shift to state 50
-- On CST_INT shift to state 51
-- On CST_FLOAT shift to state 52
-- On CST_CHAR shift to state 53
-- On BUILTIN_VA_ARG shift to state 54
-- On AT_EXPR shift to state 56
-- On AND_AND shift to state 60
-- On AND shift to state 62
-- On ALIGNOF shift to state 63
-- On wstring_list shift to state 98
-- On unary_expression shift to state 101
-- On string_list shift to state 106
-- On string_constant shift to state 108
-- On shift_expression shift to state 109
-- On relational_expression shift to state 116
-- On primary_expression shift to state 111
-- On postfix_expression shift to state 112
-- On paren_comma_expression shift to state 120
-- On one_string shift to state 121
-- On multiplicative_expression shift to state 122
-- On logical_or_expression shift to state 143
-- On logical_and_expression shift to state 147
-- On equality_expression shift to state 149
-- On constant shift to state 124
-- On conditional_expression shift to state 167
-- On cast_expression shift to state 169
-- On bitwise_xor_expression shift to state 154
-- On bitwise_or_expression shift to state 164
-- On bitwise_and_expression shift to state 162
-- On assignment_expression shift to state 177
-- On additive_expression shift to state 136
## Reductions:

State 177:
## Known stack suffix:
## cast_expression PLUS_EQ assignment_expression
## LR(1) items:
assignment_expression -> cast_expression PLUS_EQ assignment_expression . [ SEMICOLON RPAREN RBRACKET RBRACE ELLIPSIS COMMA COLON ]
## Transitions:
## Reductions:
-- On SEMICOLON RPAREN RBRACKET RBRACE ELLIPSIS COMMA COLON
--   reduce production assignment_expression -> cast_expression PLUS_EQ assignment_expression

State 178:
## Known stack suffix:
## cast_expression PIPE_EQ
## LR(1) items:
assignment_expression -> cast_expression PIPE_EQ . assignment_expression [ SEMICOLON RPAREN RBRACKET RBRACE ELLIPSIS COMMA COLON ]
## Transitions:
-- On TILDE shift to state 32
-- On STAR shift to state 33
-- On SIZEOF shift to state 34
-- On PRETTY_FUNCTION__ shift to state 35
-- On PLUS_PLUS shift to state 36
-- On PLUS shift to state 37
-- On MINUS_MINUS shift to state 38
-- On MINUS shift to state 39
-- On LPAREN shift to state 40
-- On IDENT shift to state 45
-- On FUNCTION__ shift to state 46
-- On EXCLAM shift to state 47
-- On CST_WSTRING shift to state 48
-- On CST_WCHAR shift to state 49
-- On CST_STRING shift to state 50
-- On CST_INT shift to state 51
-- On CST_FLOAT shift to state 52
-- On CST_CHAR shift to state 53
-- On BUILTIN_VA_ARG shift to state 54
-- On AT_EXPR shift to state 56
-- On AND_AND shift to state 60
-- On AND shift to state 62
-- On ALIGNOF shift to state 63
-- On wstring_list shift to state 98
-- On unary_expression shift to state 101
-- On string_list shift to state 106
-- On string_constant shift to state 108
-- On shift_expression shift to state 109
-- On relational_expression shift to state 116
-- On primary_expression shift to state 111
-- On postfix_expression shift to state 112
-- On paren_comma_expression shift to state 120
-- On one_string shift to state 121
-- On multiplicative_expression shift to state 122
-- On logical_or_expression shift to state 143
-- On logical_and_expression shift to state 147
-- On equality_expression shift to state 149
-- On constant shift to state 124
-- On conditional_expression shift to state 167
-- On cast_expression shift to state 169
-- On bitwise_xor_expression shift to state 154
-- On bitwise_or_expression shift to state 164
-- On bitwise_and_expression shift to state 162
-- On assignment_expression shift to state 179
-- On additive_expression shift to state 136
## Reductions:

State 179:
## Known stack suffix:
## cast_expression PIPE_EQ assignment_expression
## LR(1) items:
assignment_expression -> cast_expression PIPE_EQ assignment_expression . [ SEMICOLON RPAREN RBRACKET RBRACE ELLIPSIS COMMA COLON ]
## Transitions:
## Reductions:
-- On SEMICOLON RPAREN RBRACKET RBRACE ELLIPSIS COMMA COLON
--   reduce production assignment_expression -> cast_expression PIPE_EQ assignment_expression

State 180:
## Known stack suffix:
## cast_expression PERCENT_EQ
## LR(1) items:
assignment_expression -> cast_expression PERCENT_EQ . assignment_expression [ SEMICOLON RPAREN RBRACKET RBRACE ELLIPSIS COMMA COLON ]
## Transitions:
-- On TILDE shift to state 32
-- On STAR shift to state 33
-- On SIZEOF shift to state 34
-- On PRETTY_FUNCTION__ shift to state 35
-- On PLUS_PLUS shift to state 36
-- On PLUS shift to state 37
-- On MINUS_MINUS shift to state 38
-- On MINUS shift to state 39
-- On LPAREN shift to state 40
-- On IDENT shift to state 45
-- On FUNCTION__ shift to state 46
-- On EXCLAM shift to state 47
-- On CST_WSTRING shift to state 48
-- On CST_WCHAR shift to state 49
-- On CST_STRING shift to state 50
-- On CST_INT shift to state 51
-- On CST_FLOAT shift to state 52
-- On CST_CHAR shift to state 53
-- On BUILTIN_VA_ARG shift to state 54
-- On AT_EXPR shift to state 56
-- On AND_AND shift to state 60
-- On AND shift to state 62
-- On ALIGNOF shift to state 63
-- On wstring_list shift to state 98
-- On unary_expression shift to state 101
-- On string_list shift to state 106
-- On string_constant shift to state 108
-- On shift_expression shift to state 109
-- On relational_expression shift to state 116
-- On primary_expression shift to state 111
-- On postfix_expression shift to state 112
-- On paren_comma_expression shift to state 120
-- On one_string shift to state 121
-- On multiplicative_expression shift to state 122
-- On logical_or_expression shift to state 143
-- On logical_and_expression shift to state 147
-- On equality_expression shift to state 149
-- On constant shift to state 124
-- On conditional_expression shift to state 167
-- On cast_expression shift to state 169
-- On bitwise_xor_expression shift to state 154
-- On bitwise_or_expression shift to state 164
-- On bitwise_and_expression shift to state 162
-- On assignment_expression shift to state 181
-- On additive_expression shift to state 136
## Reductions:

State 181:
## Known stack suffix:
## cast_expression PERCENT_EQ assignment_expression
## LR(1) items:
assignment_expression -> cast_expression PERCENT_EQ assignment_expression . [ SEMICOLON RPAREN RBRACKET RBRACE ELLIPSIS COMMA COLON ]
## Transitions:
## Reductions:
-- On SEMICOLON RPAREN RBRACKET RBRACE ELLIPSIS COMMA COLON
--   reduce production assignment_expression -> cast_expression PERCENT_EQ assignment_expression

State 182:
## Known stack suffix:
## cast_expression MINUS_EQ
## LR(1) items:
assignment_expression -> cast_expression MINUS_EQ . assignment_expression [ SEMICOLON RPAREN RBRACKET RBRACE ELLIPSIS COMMA COLON ]
## Transitions:
-- On TILDE shift to state 32
-- On STAR shift to state 33
-- On SIZEOF shift to state 34
-- On PRETTY_FUNCTION__ shift to state 35
-- On PLUS_PLUS shift to state 36
-- On PLUS shift to state 37
-- On MINUS_MINUS shift to state 38
-- On MINUS shift to state 39
-- On LPAREN shift to state 40
-- On IDENT shift to state 45
-- On FUNCTION__ shift to state 46
-- On EXCLAM shift to state 47
-- On CST_WSTRING shift to state 48
-- On CST_WCHAR shift to state 49
-- On CST_STRING shift to state 50
-- On CST_INT shift to state 51
-- On CST_FLOAT shift to state 52
-- On CST_CHAR shift to state 53
-- On BUILTIN_VA_ARG shift to state 54
-- On AT_EXPR shift to state 56
-- On AND_AND shift to state 60
-- On AND shift to state 62
-- On ALIGNOF shift to state 63
-- On wstring_list shift to state 98
-- On unary_expression shift to state 101
-- On string_list shift to state 106
-- On string_constant shift to state 108
-- On shift_expression shift to state 109
-- On relational_expression shift to state 116
-- On primary_expression shift to state 111
-- On postfix_expression shift to state 112
-- On paren_comma_expression shift to state 120
-- On one_string shift to state 121
-- On multiplicative_expression shift to state 122
-- On logical_or_expression shift to state 143
-- On logical_and_expression shift to state 147
-- On equality_expression shift to state 149
-- On constant shift to state 124
-- On conditional_expression shift to state 167
-- On cast_expression shift to state 169
-- On bitwise_xor_expression shift to state 154
-- On bitwise_or_expression shift to state 164
-- On bitwise_and_expression shift to state 162
-- On assignment_expression shift to state 183
-- On additive_expression shift to state 136
## Reductions:

State 183:
## Known stack suffix:
## cast_expression MINUS_EQ assignment_expression
## LR(1) items:
assignment_expression -> cast_expression MINUS_EQ assignment_expression . [ SEMICOLON RPAREN RBRACKET RBRACE ELLIPSIS COMMA COLON ]
## Transitions:
## Reductions:
-- On SEMICOLON RPAREN RBRACKET RBRACE ELLIPSIS COMMA COLON
--   reduce production assignment_expression -> cast_expression MINUS_EQ assignment_expression

State 184:
## Known stack suffix:
## cast_expression INF_INF_EQ
## LR(1) items:
assignment_expression -> cast_expression INF_INF_EQ . assignment_expression [ SEMICOLON RPAREN RBRACKET RBRACE ELLIPSIS COMMA COLON ]
## Transitions:
-- On TILDE shift to state 32
-- On STAR shift to state 33
-- On SIZEOF shift to state 34
-- On PRETTY_FUNCTION__ shift to state 35
-- On PLUS_PLUS shift to state 36
-- On PLUS shift to state 37
-- On MINUS_MINUS shift to state 38
-- On MINUS shift to state 39
-- On LPAREN shift to state 40
-- On IDENT shift to state 45
-- On FUNCTION__ shift to state 46
-- On EXCLAM shift to state 47
-- On CST_WSTRING shift to state 48
-- On CST_WCHAR shift to state 49
-- On CST_STRING shift to state 50
-- On CST_INT shift to state 51
-- On CST_FLOAT shift to state 52
-- On CST_CHAR shift to state 53
-- On BUILTIN_VA_ARG shift to state 54
-- On AT_EXPR shift to state 56
-- On AND_AND shift to state 60
-- On AND shift to state 62
-- On ALIGNOF shift to state 63
-- On wstring_list shift to state 98
-- On unary_expression shift to state 101
-- On string_list shift to state 106
-- On string_constant shift to state 108
-- On shift_expression shift to state 109
-- On relational_expression shift to state 116
-- On primary_expression shift to state 111
-- On postfix_expression shift to state 112
-- On paren_comma_expression shift to state 120
-- On one_string shift to state 121
-- On multiplicative_expression shift to state 122
-- On logical_or_expression shift to state 143
-- On logical_and_expression shift to state 147
-- On equality_expression shift to state 149
-- On constant shift to state 124
-- On conditional_expression shift to state 167
-- On cast_expression shift to state 169
-- On bitwise_xor_expression shift to state 154
-- On bitwise_or_expression shift to state 164
-- On bitwise_and_expression shift to state 162
-- On assignment_expression shift to state 185
-- On additive_expression shift to state 136
## Reductions:

State 185:
## Known stack suffix:
## cast_expression INF_INF_EQ assignment_expression
## LR(1) items:
assignment_expression -> cast_expression INF_INF_EQ assignment_expression . [ SEMICOLON RPAREN RBRACKET RBRACE ELLIPSIS COMMA COLON ]
## Transitions:
## Reductions:
-- On SEMICOLON RPAREN RBRACKET RBRACE ELLIPSIS COMMA COLON
--   reduce production assignment_expression -> cast_expression INF_INF_EQ assignment_expression

State 186:
## Known stack suffix:
## cast_expression EQ
## LR(1) items:
assignment_expression -> cast_expression EQ . assignment_expression [ SEMICOLON RPAREN RBRACKET RBRACE ELLIPSIS COMMA COLON ]
## Transitions:
-- On TILDE shift to state 32
-- On STAR shift to state 33
-- On SIZEOF shift to state 34
-- On PRETTY_FUNCTION__ shift to state 35
-- On PLUS_PLUS shift to state 36
-- On PLUS shift to state 37
-- On MINUS_MINUS shift to state 38
-- On MINUS shift to state 39
-- On LPAREN shift to state 40
-- On IDENT shift to state 45
-- On FUNCTION__ shift to state 46
-- On EXCLAM shift to state 47
-- On CST_WSTRING shift to state 48
-- On CST_WCHAR shift to state 49
-- On CST_STRING shift to state 50
-- On CST_INT shift to state 51
-- On CST_FLOAT shift to state 52
-- On CST_CHAR shift to state 53
-- On BUILTIN_VA_ARG shift to state 54
-- On AT_EXPR shift to state 56
-- On AND_AND shift to state 60
-- On AND shift to state 62
-- On ALIGNOF shift to state 63
-- On wstring_list shift to state 98
-- On unary_expression shift to state 101
-- On string_list shift to state 106
-- On string_constant shift to state 108
-- On shift_expression shift to state 109
-- On relational_expression shift to state 116
-- On primary_expression shift to state 111
-- On postfix_expression shift to state 112
-- On paren_comma_expression shift to state 120
-- On one_string shift to state 121
-- On multiplicative_expression shift to state 122
-- On logical_or_expression shift to state 143
-- On logical_and_expression shift to state 147
-- On equality_expression shift to state 149
-- On constant shift to state 124
-- On conditional_expression shift to state 167
-- On cast_expression shift to state 169
-- On bitwise_xor_expression shift to state 154
-- On bitwise_or_expression shift to state 164
-- On bitwise_and_expression shift to state 162
-- On assignment_expression shift to state 187
-- On additive_expression shift to state 136
## Reductions:

State 187:
## Known stack suffix:
## cast_expression EQ assignment_expression
## LR(1) items:
assignment_expression -> cast_expression EQ assignment_expression . [ SEMICOLON RPAREN RBRACKET RBRACE ELLIPSIS COMMA COLON ]
## Transitions:
## Reductions:
-- On SEMICOLON RPAREN RBRACKET RBRACE ELLIPSIS COMMA COLON
--   reduce production assignment_expression -> cast_expression EQ assignment_expression

State 188:
## Known stack suffix:
## cast_expression CIRC_EQ
## LR(1) items:
assignment_expression -> cast_expression CIRC_EQ . assignment_expression [ SEMICOLON RPAREN RBRACKET RBRACE ELLIPSIS COMMA COLON ]
## Transitions:
-- On TILDE shift to state 32
-- On STAR shift to state 33
-- On SIZEOF shift to state 34
-- On PRETTY_FUNCTION__ shift to state 35
-- On PLUS_PLUS shift to state 36
-- On PLUS shift to state 37
-- On MINUS_MINUS shift to state 38
-- On MINUS shift to state 39
-- On LPAREN shift to state 40
-- On IDENT shift to state 45
-- On FUNCTION__ shift to state 46
-- On EXCLAM shift to state 47
-- On CST_WSTRING shift to state 48
-- On CST_WCHAR shift to state 49
-- On CST_STRING shift to state 50
-- On CST_INT shift to state 51
-- On CST_FLOAT shift to state 52
-- On CST_CHAR shift to state 53
-- On BUILTIN_VA_ARG shift to state 54
-- On AT_EXPR shift to state 56
-- On AND_AND shift to state 60
-- On AND shift to state 62
-- On ALIGNOF shift to state 63
-- On wstring_list shift to state 98
-- On unary_expression shift to state 101
-- On string_list shift to state 106
-- On string_constant shift to state 108
-- On shift_expression shift to state 109
-- On relational_expression shift to state 116
-- On primary_expression shift to state 111
-- On postfix_expression shift to state 112
-- On paren_comma_expression shift to state 120
-- On one_string shift to state 121
-- On multiplicative_expression shift to state 122
-- On logical_or_expression shift to state 143
-- On logical_and_expression shift to state 147
-- On equality_expression shift to state 149
-- On constant shift to state 124
-- On conditional_expression shift to state 167
-- On cast_expression shift to state 169
-- On bitwise_xor_expression shift to state 154
-- On bitwise_or_expression shift to state 164
-- On bitwise_and_expression shift to state 162
-- On assignment_expression shift to state 189
-- On additive_expression shift to state 136
## Reductions:

State 189:
## Known stack suffix:
## cast_expression CIRC_EQ assignment_expression
## LR(1) items:
assignment_expression -> cast_expression CIRC_EQ assignment_expression . [ SEMICOLON RPAREN RBRACKET RBRACE ELLIPSIS COMMA COLON ]
## Transitions:
## Reductions:
-- On SEMICOLON RPAREN RBRACKET RBRACE ELLIPSIS COMMA COLON
--   reduce production assignment_expression -> cast_expression CIRC_EQ assignment_expression

State 190:
## Known stack suffix:
## cast_expression AND_EQ
## LR(1) items:
assignment_expression -> cast_expression AND_EQ . assignment_expression [ SEMICOLON RPAREN RBRACKET RBRACE ELLIPSIS COMMA COLON ]
## Transitions:
-- On TILDE shift to state 32
-- On STAR shift to state 33
-- On SIZEOF shift to state 34
-- On PRETTY_FUNCTION__ shift to state 35
-- On PLUS_PLUS shift to state 36
-- On PLUS shift to state 37
-- On MINUS_MINUS shift to state 38
-- On MINUS shift to state 39
-- On LPAREN shift to state 40
-- On IDENT shift to state 45
-- On FUNCTION__ shift to state 46
-- On EXCLAM shift to state 47
-- On CST_WSTRING shift to state 48
-- On CST_WCHAR shift to state 49
-- On CST_STRING shift to state 50
-- On CST_INT shift to state 51
-- On CST_FLOAT shift to state 52
-- On CST_CHAR shift to state 53
-- On BUILTIN_VA_ARG shift to state 54
-- On AT_EXPR shift to state 56
-- On AND_AND shift to state 60
-- On AND shift to state 62
-- On ALIGNOF shift to state 63
-- On wstring_list shift to state 98
-- On unary_expression shift to state 101
-- On string_list shift to state 106
-- On string_constant shift to state 108
-- On shift_expression shift to state 109
-- On relational_expression shift to state 116
-- On primary_expression shift to state 111
-- On postfix_expression shift to state 112
-- On paren_comma_expression shift to state 120
-- On one_string shift to state 121
-- On multiplicative_expression shift to state 122
-- On logical_or_expression shift to state 143
-- On logical_and_expression shift to state 147
-- On equality_expression shift to state 149
-- On constant shift to state 124
-- On conditional_expression shift to state 167
-- On cast_expression shift to state 169
-- On bitwise_xor_expression shift to state 154
-- On bitwise_or_expression shift to state 164
-- On bitwise_and_expression shift to state 162
-- On assignment_expression shift to state 191
-- On additive_expression shift to state 136
## Reductions:

State 191:
## Known stack suffix:
## cast_expression AND_EQ assignment_expression
## LR(1) items:
assignment_expression -> cast_expression AND_EQ assignment_expression . [ SEMICOLON RPAREN RBRACKET RBRACE ELLIPSIS COMMA COLON ]
## Transitions:
## Reductions:
-- On SEMICOLON RPAREN RBRACKET RBRACE ELLIPSIS COMMA COLON
--   reduce production assignment_expression -> cast_expression AND_EQ assignment_expression

State 192:
## Known stack suffix:
## assignment_expression
## LR(1) items:
expression -> assignment_expression . [ SEMICOLON RPAREN RBRACKET RBRACE ELLIPSIS COMMA COLON ]
## Transitions:
## Reductions:
-- On SEMICOLON RPAREN RBRACKET RBRACE ELLIPSIS COMMA COLON
--   reduce production expression -> assignment_expression

State 193:
## Known stack suffix:
## comma_expression
## LR(1) items:
opt_expression -> comma_expression . [ SEMICOLON RPAREN COLON ]
## Transitions:
## Reductions:
-- On SEMICOLON RPAREN COLON
--   reduce production opt_expression -> comma_expression

State 194:
## Known stack suffix:
## logical_or_expression PIPE_PIPE
## LR(1) items:
logical_or_expression -> logical_or_expression PIPE_PIPE . logical_and_expression [ SEMICOLON RPAREN RBRACKET RBRACE QUEST PIPE_PIPE ELLIPSIS COMMA COLON ]
## Transitions:
-- On TILDE shift to state 32
-- On STAR shift to state 33
-- On SIZEOF shift to state 34
-- On PRETTY_FUNCTION__ shift to state 35
-- On PLUS_PLUS shift to state 36
-- On PLUS shift to state 37
-- On MINUS_MINUS shift to state 38
-- On MINUS shift to state 39
-- On LPAREN shift to state 40
-- On IDENT shift to state 45
-- On FUNCTION__ shift to state 46
-- On EXCLAM shift to state 47
-- On CST_WSTRING shift to state 48
-- On CST_WCHAR shift to state 49
-- On CST_STRING shift to state 50
-- On CST_INT shift to state 51
-- On CST_FLOAT shift to state 52
-- On CST_CHAR shift to state 53
-- On BUILTIN_VA_ARG shift to state 54
-- On AT_EXPR shift to state 56
-- On AND_AND shift to state 60
-- On AND shift to state 62
-- On ALIGNOF shift to state 63
-- On wstring_list shift to state 98
-- On unary_expression shift to state 101
-- On string_list shift to state 106
-- On string_constant shift to state 108
-- On shift_expression shift to state 109
-- On relational_expression shift to state 116
-- On primary_expression shift to state 111
-- On postfix_expression shift to state 112
-- On paren_comma_expression shift to state 120
-- On one_string shift to state 121
-- On multiplicative_expression shift to state 122
-- On logical_and_expression shift to state 195
-- On equality_expression shift to state 149
-- On constant shift to state 124
-- On cast_expression shift to state 130
-- On bitwise_xor_expression shift to state 154
-- On bitwise_or_expression shift to state 164
-- On bitwise_and_expression shift to state 162
-- On additive_expression shift to state 136
## Reductions:

State 195:
## Known stack suffix:
## logical_or_expression PIPE_PIPE logical_and_expression
## LR(1) items:
logical_and_expression -> logical_and_expression . AND_AND bitwise_or_expression [ SEMICOLON RPAREN RBRACKET RBRACE QUEST PIPE_PIPE ELLIPSIS COMMA COLON AND_AND ]
logical_or_expression -> logical_or_expression PIPE_PIPE logical_and_expression . [ SEMICOLON RPAREN RBRACKET RBRACE QUEST PIPE_PIPE ELLIPSIS COMMA COLON ]
## Transitions:
-- On AND_AND shift to state 148
## Reductions:
-- On SEMICOLON RPAREN RBRACKET RBRACE QUEST PIPE_PIPE ELLIPSIS COMMA COLON
--   reduce production logical_or_expression -> logical_or_expression PIPE_PIPE logical_and_expression

State 196:
## Known stack suffix:
## comma_expression
## LR(1) items:
arguments -> comma_expression . [ RPAREN ]
## Transitions:
## Reductions:
-- On RPAREN
--   reduce production arguments -> comma_expression

State 197:
## Known stack suffix:
## postfix_expression LPAREN arguments
## LR(1) items:
postfix_expression -> postfix_expression LPAREN arguments . RPAREN [ SUP_SUP_EQ SUP_SUP SUP_EQ SUP STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACKET RBRACE QUEST PRAGMA_EOL PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_EQ MINUS LPAREN LBRACKET INF_INF_EQ INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ EQ ELLIPSIS DOT COMMA COLON CIRC_EQ CIRC ARROW AND_EQ AND_AND AND ]
## Transitions:
-- On RPAREN shift to state 198
## Reductions:

State 198:
## Known stack suffix:
## postfix_expression LPAREN arguments RPAREN
## LR(1) items:
postfix_expression -> postfix_expression LPAREN arguments RPAREN . [ SUP_SUP_EQ SUP_SUP SUP_EQ SUP STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACKET RBRACE QUEST PRAGMA_EOL PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_EQ MINUS LPAREN LBRACKET INF_INF_EQ INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ EQ ELLIPSIS DOT COMMA COLON CIRC_EQ CIRC ARROW AND_EQ AND_AND AND ]
## Transitions:
## Reductions:
-- On SUP_SUP_EQ SUP_SUP SUP_EQ SUP STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACKET RBRACE QUEST PRAGMA_EOL PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_EQ MINUS LPAREN LBRACKET INF_INF_EQ INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ EQ ELLIPSIS DOT COMMA COLON CIRC_EQ CIRC ARROW AND_EQ AND_AND AND
--   reduce production postfix_expression -> postfix_expression LPAREN arguments RPAREN

State 199:
## Known stack suffix:
## LBRACKET
## LR(1) items:
bracket_comma_expression -> LBRACKET . comma_expression RBRACKET [ SUP_SUP_EQ SUP_SUP SUP_EQ SUP STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACKET RBRACE QUEST PRAGMA_EOL PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_EQ MINUS LPAREN LBRACKET INF_INF_EQ INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ EQ ELLIPSIS DOT COMMA COLON CIRC_EQ CIRC ARROW AND_EQ AND_AND AND ]
bracket_comma_expression -> LBRACKET . error RBRACKET [ SUP_SUP_EQ SUP_SUP SUP_EQ SUP STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACKET RBRACE QUEST PRAGMA_EOL PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_EQ MINUS LPAREN LBRACKET INF_INF_EQ INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ EQ ELLIPSIS DOT COMMA COLON CIRC_EQ CIRC ARROW AND_EQ AND_AND AND ]
## Transitions:
-- On error shift to state 200
-- On TILDE shift to state 32
-- On STAR shift to state 33
-- On SIZEOF shift to state 34
-- On PRETTY_FUNCTION__ shift to state 35
-- On PLUS_PLUS shift to state 36
-- On PLUS shift to state 37
-- On MINUS_MINUS shift to state 38
-- On MINUS shift to state 39
-- On LPAREN shift to state 40
-- On IDENT shift to state 45
-- On FUNCTION__ shift to state 46
-- On EXCLAM shift to state 47
-- On CST_WSTRING shift to state 48
-- On CST_WCHAR shift to state 49
-- On CST_STRING shift to state 50
-- On CST_INT shift to state 51
-- On CST_FLOAT shift to state 52
-- On CST_CHAR shift to state 53
-- On BUILTIN_VA_ARG shift to state 54
-- On AT_EXPR shift to state 56
-- On AND_AND shift to state 60
-- On AND shift to state 62
-- On ALIGNOF shift to state 63
-- On wstring_list shift to state 98
-- On unary_expression shift to state 101
-- On string_list shift to state 106
-- On string_constant shift to state 108
-- On shift_expression shift to state 109
-- On relational_expression shift to state 116
-- On primary_expression shift to state 111
-- On postfix_expression shift to state 112
-- On paren_comma_expression shift to state 120
-- On one_string shift to state 121
-- On multiplicative_expression shift to state 122
-- On logical_or_expression shift to state 143
-- On logical_and_expression shift to state 147
-- On expression shift to state 165
-- On equality_expression shift to state 149
-- On constant shift to state 124
-- On conditional_expression shift to state 167
-- On comma_expression shift to state 202
-- On cast_expression shift to state 169
-- On bitwise_xor_expression shift to state 154
-- On bitwise_or_expression shift to state 164
-- On bitwise_and_expression shift to state 162
-- On assignment_expression shift to state 192
-- On additive_expression shift to state 136
## Reductions:

State 200:
## Known stack suffix:
## LBRACKET error
## LR(1) items:
bracket_comma_expression -> LBRACKET error . RBRACKET [ SUP_SUP_EQ SUP_SUP SUP_EQ SUP STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACKET RBRACE QUEST PRAGMA_EOL PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_EQ MINUS LPAREN LBRACKET INF_INF_EQ INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ EQ ELLIPSIS DOT COMMA COLON CIRC_EQ CIRC ARROW AND_EQ AND_AND AND ]
comma_expression -> error . COMMA comma_expression [ RBRACKET ]
## Transitions:
-- On RBRACKET shift to state 201
-- On COMMA shift to state 43
## Reductions:

State 201:
## Known stack suffix:
## LBRACKET error RBRACKET
## LR(1) items:
bracket_comma_expression -> LBRACKET error RBRACKET . [ SUP_SUP_EQ SUP_SUP SUP_EQ SUP STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACKET RBRACE QUEST PRAGMA_EOL PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_EQ MINUS LPAREN LBRACKET INF_INF_EQ INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ EQ ELLIPSIS DOT COMMA COLON CIRC_EQ CIRC ARROW AND_EQ AND_AND AND ]
## Transitions:
## Reductions:
-- On SUP_SUP_EQ SUP_SUP SUP_EQ SUP STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACKET RBRACE QUEST PRAGMA_EOL PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_EQ MINUS LPAREN LBRACKET INF_INF_EQ INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ EQ ELLIPSIS DOT COMMA COLON CIRC_EQ CIRC ARROW AND_EQ AND_AND AND
--   reduce production bracket_comma_expression -> LBRACKET error RBRACKET

State 202:
## Known stack suffix:
## LBRACKET comma_expression
## LR(1) items:
bracket_comma_expression -> LBRACKET comma_expression . RBRACKET [ SUP_SUP_EQ SUP_SUP SUP_EQ SUP STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACKET RBRACE QUEST PRAGMA_EOL PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_EQ MINUS LPAREN LBRACKET INF_INF_EQ INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ EQ ELLIPSIS DOT COMMA COLON CIRC_EQ CIRC ARROW AND_EQ AND_AND AND ]
## Transitions:
-- On RBRACKET shift to state 203
## Reductions:

State 203:
## Known stack suffix:
## LBRACKET comma_expression RBRACKET
## LR(1) items:
bracket_comma_expression -> LBRACKET comma_expression RBRACKET . [ SUP_SUP_EQ SUP_SUP SUP_EQ SUP STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACKET RBRACE QUEST PRAGMA_EOL PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_EQ MINUS LPAREN LBRACKET INF_INF_EQ INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ EQ ELLIPSIS DOT COMMA COLON CIRC_EQ CIRC ARROW AND_EQ AND_AND AND ]
## Transitions:
## Reductions:
-- On SUP_SUP_EQ SUP_SUP SUP_EQ SUP STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACKET RBRACE QUEST PRAGMA_EOL PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_EQ MINUS LPAREN LBRACKET INF_INF_EQ INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ EQ ELLIPSIS DOT COMMA COLON CIRC_EQ CIRC ARROW AND_EQ AND_AND AND
--   reduce production bracket_comma_expression -> LBRACKET comma_expression RBRACKET

State 204:
## Known stack suffix:
## postfix_expression DOT
## LR(1) items:
postfix_expression -> postfix_expression DOT . id_or_typename [ SUP_SUP_EQ SUP_SUP SUP_EQ SUP STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACKET RBRACE QUEST PRAGMA_EOL PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_EQ MINUS LPAREN LBRACKET INF_INF_EQ INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ EQ ELLIPSIS DOT COMMA COLON CIRC_EQ CIRC ARROW AND_EQ AND_AND AND ]
## Transitions:
-- On NAMED_TYPE shift to state 5
-- On IDENT shift to state 205
-- On AT_NAME shift to state 206
-- On id_or_typename shift to state 210
## Reductions:

State 205:
## Known stack suffix:
## IDENT
## LR(1) items:
id_or_typename -> IDENT . [ VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF TILDE THREAD SUP_SUP_EQ SUP_SUP SUP_EQ SUP STRUCT STATIC STAR_EQ STAR SLASH_EQ SLASH SIZEOF SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACKET RBRACE QUEST PRETTY_FUNCTION__ PRAGMA_EOL PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT NAMED_TYPE MSATTR MINUS_MINUS MINUS_EQ MINUS LPAREN LONG LBRACKET LBRACE INT64 INT INLINE INF_INF_EQ INF_INF INF_EQ INF IDENT FUNCTION__ FLOAT EXTERN EXCLAM_EQ EXCLAM EQ_EQ EQ ENUM ELLIPSIS DOUBLE DOT DECLSPEC CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONST COMMA COLON CIRC_EQ CIRC CHAR BUILTIN_VA_ARG AUTO AT_SPECIFIER AT_NAME AT_EXPR ATTRIBUTE ASM ARROW AND_EQ AND_AND AND ALIGNOF ]
## Transitions:
## Reductions:
-- On VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF TILDE THREAD SUP_SUP_EQ SUP_SUP SUP_EQ SUP STRUCT STATIC STAR_EQ STAR SLASH_EQ SLASH SIZEOF SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACKET RBRACE QUEST PRETTY_FUNCTION__ PRAGMA_EOL PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT NAMED_TYPE MSATTR MINUS_MINUS MINUS_EQ MINUS LPAREN LONG LBRACKET LBRACE INT64 INT INLINE INF_INF_EQ INF_INF INF_EQ INF IDENT FUNCTION__ FLOAT EXTERN EXCLAM_EQ EXCLAM EQ_EQ EQ ENUM ELLIPSIS DOUBLE DOT DECLSPEC CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONST COMMA COLON CIRC_EQ CIRC CHAR BUILTIN_VA_ARG AUTO AT_SPECIFIER AT_NAME AT_EXPR ATTRIBUTE ASM ARROW AND_EQ AND_AND AND ALIGNOF
--   reduce production id_or_typename -> IDENT

State 206:
## Known stack suffix:
## AT_NAME
## LR(1) items:
id_or_typename -> AT_NAME . LPAREN IDENT RPAREN [ VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF TILDE THREAD SUP_SUP_EQ SUP_SUP SUP_EQ SUP STRUCT STATIC STAR_EQ STAR SLASH_EQ SLASH SIZEOF SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACKET RBRACE QUEST PRETTY_FUNCTION__ PRAGMA_EOL PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT NAMED_TYPE MSATTR MINUS_MINUS MINUS_EQ MINUS LPAREN LONG LBRACKET LBRACE INT64 INT INLINE INF_INF_EQ INF_INF INF_EQ INF IDENT FUNCTION__ FLOAT EXTERN EXCLAM_EQ EXCLAM EQ_EQ EQ ENUM ELLIPSIS DOUBLE DOT DECLSPEC CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONST COMMA COLON CIRC_EQ CIRC CHAR BUILTIN_VA_ARG AUTO AT_SPECIFIER AT_NAME AT_EXPR ATTRIBUTE ASM ARROW AND_EQ AND_AND AND ALIGNOF ]
## Transitions:
-- On LPAREN shift to state 207
## Reductions:

State 207:
## Known stack suffix:
## AT_NAME LPAREN
## LR(1) items:
id_or_typename -> AT_NAME LPAREN . IDENT RPAREN [ VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF TILDE THREAD SUP_SUP_EQ SUP_SUP SUP_EQ SUP STRUCT STATIC STAR_EQ STAR SLASH_EQ SLASH SIZEOF SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACKET RBRACE QUEST PRETTY_FUNCTION__ PRAGMA_EOL PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT NAMED_TYPE MSATTR MINUS_MINUS MINUS_EQ MINUS LPAREN LONG LBRACKET LBRACE INT64 INT INLINE INF_INF_EQ INF_INF INF_EQ INF IDENT FUNCTION__ FLOAT EXTERN EXCLAM_EQ EXCLAM EQ_EQ EQ ENUM ELLIPSIS DOUBLE DOT DECLSPEC CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONST COMMA COLON CIRC_EQ CIRC CHAR BUILTIN_VA_ARG AUTO AT_SPECIFIER AT_NAME AT_EXPR ATTRIBUTE ASM ARROW AND_EQ AND_AND AND ALIGNOF ]
## Transitions:
-- On IDENT shift to state 208
## Reductions:

State 208:
## Known stack suffix:
## AT_NAME LPAREN IDENT
## LR(1) items:
id_or_typename -> AT_NAME LPAREN IDENT . RPAREN [ VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF TILDE THREAD SUP_SUP_EQ SUP_SUP SUP_EQ SUP STRUCT STATIC STAR_EQ STAR SLASH_EQ SLASH SIZEOF SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACKET RBRACE QUEST PRETTY_FUNCTION__ PRAGMA_EOL PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT NAMED_TYPE MSATTR MINUS_MINUS MINUS_EQ MINUS LPAREN LONG LBRACKET LBRACE INT64 INT INLINE INF_INF_EQ INF_INF INF_EQ INF IDENT FUNCTION__ FLOAT EXTERN EXCLAM_EQ EXCLAM EQ_EQ EQ ENUM ELLIPSIS DOUBLE DOT DECLSPEC CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONST COMMA COLON CIRC_EQ CIRC CHAR BUILTIN_VA_ARG AUTO AT_SPECIFIER AT_NAME AT_EXPR ATTRIBUTE ASM ARROW AND_EQ AND_AND AND ALIGNOF ]
## Transitions:
-- On RPAREN shift to state 209
## Reductions:

State 209:
## Known stack suffix:
## AT_NAME LPAREN IDENT RPAREN
## LR(1) items:
id_or_typename -> AT_NAME LPAREN IDENT RPAREN . [ VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF TILDE THREAD SUP_SUP_EQ SUP_SUP SUP_EQ SUP STRUCT STATIC STAR_EQ STAR SLASH_EQ SLASH SIZEOF SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACKET RBRACE QUEST PRETTY_FUNCTION__ PRAGMA_EOL PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT NAMED_TYPE MSATTR MINUS_MINUS MINUS_EQ MINUS LPAREN LONG LBRACKET LBRACE INT64 INT INLINE INF_INF_EQ INF_INF INF_EQ INF IDENT FUNCTION__ FLOAT EXTERN EXCLAM_EQ EXCLAM EQ_EQ EQ ENUM ELLIPSIS DOUBLE DOT DECLSPEC CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONST COMMA COLON CIRC_EQ CIRC CHAR BUILTIN_VA_ARG AUTO AT_SPECIFIER AT_NAME AT_EXPR ATTRIBUTE ASM ARROW AND_EQ AND_AND AND ALIGNOF ]
## Transitions:
## Reductions:
-- On VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF TILDE THREAD SUP_SUP_EQ SUP_SUP SUP_EQ SUP STRUCT STATIC STAR_EQ STAR SLASH_EQ SLASH SIZEOF SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACKET RBRACE QUEST PRETTY_FUNCTION__ PRAGMA_EOL PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT NAMED_TYPE MSATTR MINUS_MINUS MINUS_EQ MINUS LPAREN LONG LBRACKET LBRACE INT64 INT INLINE INF_INF_EQ INF_INF INF_EQ INF IDENT FUNCTION__ FLOAT EXTERN EXCLAM_EQ EXCLAM EQ_EQ EQ ENUM ELLIPSIS DOUBLE DOT DECLSPEC CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONST COMMA COLON CIRC_EQ CIRC CHAR BUILTIN_VA_ARG AUTO AT_SPECIFIER AT_NAME AT_EXPR ATTRIBUTE ASM ARROW AND_EQ AND_AND AND ALIGNOF
--   reduce production id_or_typename -> AT_NAME LPAREN IDENT RPAREN

State 210:
## Known stack suffix:
## postfix_expression DOT id_or_typename
## LR(1) items:
postfix_expression -> postfix_expression DOT id_or_typename . [ SUP_SUP_EQ SUP_SUP SUP_EQ SUP STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACKET RBRACE QUEST PRAGMA_EOL PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_EQ MINUS LPAREN LBRACKET INF_INF_EQ INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ EQ ELLIPSIS DOT COMMA COLON CIRC_EQ CIRC ARROW AND_EQ AND_AND AND ]
## Transitions:
## Reductions:
-- On SUP_SUP_EQ SUP_SUP SUP_EQ SUP STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACKET RBRACE QUEST PRAGMA_EOL PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_EQ MINUS LPAREN LBRACKET INF_INF_EQ INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ EQ ELLIPSIS DOT COMMA COLON CIRC_EQ CIRC ARROW AND_EQ AND_AND AND
--   reduce production postfix_expression -> postfix_expression DOT id_or_typename

State 211:
## Known stack suffix:
## postfix_expression ARROW
## LR(1) items:
postfix_expression -> postfix_expression ARROW . id_or_typename [ SUP_SUP_EQ SUP_SUP SUP_EQ SUP STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACKET RBRACE QUEST PRAGMA_EOL PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_EQ MINUS LPAREN LBRACKET INF_INF_EQ INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ EQ ELLIPSIS DOT COMMA COLON CIRC_EQ CIRC ARROW AND_EQ AND_AND AND ]
## Transitions:
-- On NAMED_TYPE shift to state 5
-- On IDENT shift to state 205
-- On AT_NAME shift to state 206
-- On id_or_typename shift to state 212
## Reductions:

State 212:
## Known stack suffix:
## postfix_expression ARROW id_or_typename
## LR(1) items:
postfix_expression -> postfix_expression ARROW id_or_typename . [ SUP_SUP_EQ SUP_SUP SUP_EQ SUP STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACKET RBRACE QUEST PRAGMA_EOL PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_EQ MINUS LPAREN LBRACKET INF_INF_EQ INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ EQ ELLIPSIS DOT COMMA COLON CIRC_EQ CIRC ARROW AND_EQ AND_AND AND ]
## Transitions:
## Reductions:
-- On SUP_SUP_EQ SUP_SUP SUP_EQ SUP STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACKET RBRACE QUEST PRAGMA_EOL PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_EQ MINUS LPAREN LBRACKET INF_INF_EQ INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ EQ ELLIPSIS DOT COMMA COLON CIRC_EQ CIRC ARROW AND_EQ AND_AND AND
--   reduce production postfix_expression -> postfix_expression ARROW id_or_typename

State 213:
## Known stack suffix:
## postfix_expression bracket_comma_expression
## LR(1) items:
postfix_expression -> postfix_expression bracket_comma_expression . [ SUP_SUP_EQ SUP_SUP SUP_EQ SUP STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACKET RBRACE QUEST PRAGMA_EOL PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_EQ MINUS LPAREN LBRACKET INF_INF_EQ INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ EQ ELLIPSIS DOT COMMA COLON CIRC_EQ CIRC ARROW AND_EQ AND_AND AND ]
## Transitions:
## Reductions:
-- On SUP_SUP_EQ SUP_SUP SUP_EQ SUP STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACKET RBRACE QUEST PRAGMA_EOL PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_EQ MINUS LPAREN LBRACKET INF_INF_EQ INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ EQ ELLIPSIS DOT COMMA COLON CIRC_EQ CIRC ARROW AND_EQ AND_AND AND
--   reduce production postfix_expression -> postfix_expression bracket_comma_expression

State 214:
## Known stack suffix:
## shift_expression SUP_SUP additive_expression
## LR(1) items:
additive_expression -> additive_expression . PLUS multiplicative_expression [ SUP_SUP SUP_EQ SUP SEMICOLON RPAREN RBRACKET RBRACE QUEST PLUS PIPE_PIPE PIPE MINUS INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ ELLIPSIS COMMA COLON CIRC AND_AND AND ]
additive_expression -> additive_expression . MINUS multiplicative_expression [ SUP_SUP SUP_EQ SUP SEMICOLON RPAREN RBRACKET RBRACE QUEST PLUS PIPE_PIPE PIPE MINUS INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ ELLIPSIS COMMA COLON CIRC AND_AND AND ]
shift_expression -> shift_expression SUP_SUP additive_expression . [ SUP_SUP SUP_EQ SUP SEMICOLON RPAREN RBRACKET RBRACE QUEST PIPE_PIPE PIPE INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ ELLIPSIS COMMA COLON CIRC AND_AND AND ]
## Transitions:
-- On PLUS shift to state 132
-- On MINUS shift to state 134
## Reductions:
-- On SUP_SUP SUP_EQ SUP SEMICOLON RPAREN RBRACKET RBRACE QUEST PIPE_PIPE PIPE INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ ELLIPSIS COMMA COLON CIRC AND_AND AND
--   reduce production shift_expression -> shift_expression SUP_SUP additive_expression

State 215:
## Known stack suffix:
## LBRACKET expression
## LR(1) items:
init_designators -> LBRACKET expression . RBRACKET init_designators_opt [ TILDE STAR SIZEOF PRETTY_FUNCTION__ PLUS_PLUS PLUS MINUS_MINUS MINUS LPAREN LBRACE IDENT FUNCTION__ EXCLAM EQ CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR BUILTIN_VA_ARG AT_EXPR AND_AND AND ALIGNOF ]
init_designators -> LBRACKET expression . ELLIPSIS expression RBRACKET [ TILDE STAR SIZEOF PRETTY_FUNCTION__ PLUS_PLUS PLUS MINUS_MINUS MINUS LPAREN LBRACE IDENT FUNCTION__ EXCLAM EQ CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR BUILTIN_VA_ARG AT_EXPR AND_AND AND ALIGNOF ]
## Transitions:
-- On RBRACKET shift to state 216
-- On ELLIPSIS shift to state 222
## Reductions:

State 216:
## Known stack suffix:
## LBRACKET expression RBRACKET
## LR(1) items:
init_designators -> LBRACKET expression RBRACKET . init_designators_opt [ TILDE STAR SIZEOF PRETTY_FUNCTION__ PLUS_PLUS PLUS MINUS_MINUS MINUS LPAREN LBRACE IDENT FUNCTION__ EXCLAM EQ CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR BUILTIN_VA_ARG AT_EXPR AND_AND AND ALIGNOF ]
## Transitions:
-- On LBRACKET shift to state 105
-- On DOT shift to state 217
-- On init_designators_opt shift to state 221
-- On init_designators shift to state 220
## Reductions:
-- On TILDE STAR SIZEOF PRETTY_FUNCTION__ PLUS_PLUS PLUS MINUS_MINUS MINUS LPAREN LBRACE IDENT FUNCTION__ EXCLAM EQ CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR BUILTIN_VA_ARG AT_EXPR AND_AND AND ALIGNOF
--   reduce production init_designators_opt ->

State 217:
## Known stack suffix:
## DOT
## LR(1) items:
init_designators -> DOT . id_or_typename init_designators_opt [ TILDE STAR SIZEOF PRETTY_FUNCTION__ PLUS_PLUS PLUS MINUS_MINUS MINUS LPAREN LBRACE IDENT FUNCTION__ EXCLAM EQ CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR BUILTIN_VA_ARG AT_EXPR AND_AND AND ALIGNOF ]
## Transitions:
-- On NAMED_TYPE shift to state 5
-- On IDENT shift to state 205
-- On AT_NAME shift to state 206
-- On id_or_typename shift to state 218
## Reductions:

State 218:
## Known stack suffix:
## DOT id_or_typename
## LR(1) items:
init_designators -> DOT id_or_typename . init_designators_opt [ TILDE STAR SIZEOF PRETTY_FUNCTION__ PLUS_PLUS PLUS MINUS_MINUS MINUS LPAREN LBRACE IDENT FUNCTION__ EXCLAM EQ CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR BUILTIN_VA_ARG AT_EXPR AND_AND AND ALIGNOF ]
## Transitions:
-- On LBRACKET shift to state 105
-- On DOT shift to state 217
-- On init_designators_opt shift to state 219
-- On init_designators shift to state 220
## Reductions:
-- On TILDE STAR SIZEOF PRETTY_FUNCTION__ PLUS_PLUS PLUS MINUS_MINUS MINUS LPAREN LBRACE IDENT FUNCTION__ EXCLAM EQ CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR BUILTIN_VA_ARG AT_EXPR AND_AND AND ALIGNOF
--   reduce production init_designators_opt ->

State 219:
## Known stack suffix:
## DOT id_or_typename init_designators_opt
## LR(1) items:
init_designators -> DOT id_or_typename init_designators_opt . [ TILDE STAR SIZEOF PRETTY_FUNCTION__ PLUS_PLUS PLUS MINUS_MINUS MINUS LPAREN LBRACE IDENT FUNCTION__ EXCLAM EQ CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR BUILTIN_VA_ARG AT_EXPR AND_AND AND ALIGNOF ]
## Transitions:
## Reductions:
-- On TILDE STAR SIZEOF PRETTY_FUNCTION__ PLUS_PLUS PLUS MINUS_MINUS MINUS LPAREN LBRACE IDENT FUNCTION__ EXCLAM EQ CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR BUILTIN_VA_ARG AT_EXPR AND_AND AND ALIGNOF
--   reduce production init_designators -> DOT id_or_typename init_designators_opt

State 220:
## Known stack suffix:
## init_designators
## LR(1) items:
init_designators_opt -> init_designators . [ TILDE STAR SIZEOF PRETTY_FUNCTION__ PLUS_PLUS PLUS MINUS_MINUS MINUS LPAREN LBRACE IDENT FUNCTION__ EXCLAM EQ CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR BUILTIN_VA_ARG AT_EXPR AND_AND AND ALIGNOF ]
## Transitions:
## Reductions:
-- On TILDE STAR SIZEOF PRETTY_FUNCTION__ PLUS_PLUS PLUS MINUS_MINUS MINUS LPAREN LBRACE IDENT FUNCTION__ EXCLAM EQ CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR BUILTIN_VA_ARG AT_EXPR AND_AND AND ALIGNOF
--   reduce production init_designators_opt -> init_designators

State 221:
## Known stack suffix:
## LBRACKET expression RBRACKET init_designators_opt
## LR(1) items:
init_designators -> LBRACKET expression RBRACKET init_designators_opt . [ TILDE STAR SIZEOF PRETTY_FUNCTION__ PLUS_PLUS PLUS MINUS_MINUS MINUS LPAREN LBRACE IDENT FUNCTION__ EXCLAM EQ CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR BUILTIN_VA_ARG AT_EXPR AND_AND AND ALIGNOF ]
## Transitions:
## Reductions:
-- On TILDE STAR SIZEOF PRETTY_FUNCTION__ PLUS_PLUS PLUS MINUS_MINUS MINUS LPAREN LBRACE IDENT FUNCTION__ EXCLAM EQ CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR BUILTIN_VA_ARG AT_EXPR AND_AND AND ALIGNOF
--   reduce production init_designators -> LBRACKET expression RBRACKET init_designators_opt

State 222:
## Known stack suffix:
## LBRACKET expression ELLIPSIS
## LR(1) items:
init_designators -> LBRACKET expression ELLIPSIS . expression RBRACKET [ TILDE STAR SIZEOF PRETTY_FUNCTION__ PLUS_PLUS PLUS MINUS_MINUS MINUS LPAREN LBRACE IDENT FUNCTION__ EXCLAM EQ CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR BUILTIN_VA_ARG AT_EXPR AND_AND AND ALIGNOF ]
## Transitions:
-- On TILDE shift to state 32
-- On STAR shift to state 33
-- On SIZEOF shift to state 34
-- On PRETTY_FUNCTION__ shift to state 35
-- On PLUS_PLUS shift to state 36
-- On PLUS shift to state 37
-- On MINUS_MINUS shift to state 38
-- On MINUS shift to state 39
-- On LPAREN shift to state 40
-- On IDENT shift to state 45
-- On FUNCTION__ shift to state 46
-- On EXCLAM shift to state 47
-- On CST_WSTRING shift to state 48
-- On CST_WCHAR shift to state 49
-- On CST_STRING shift to state 50
-- On CST_INT shift to state 51
-- On CST_FLOAT shift to state 52
-- On CST_CHAR shift to state 53
-- On BUILTIN_VA_ARG shift to state 54
-- On AT_EXPR shift to state 56
-- On AND_AND shift to state 60
-- On AND shift to state 62
-- On ALIGNOF shift to state 63
-- On wstring_list shift to state 98
-- On unary_expression shift to state 101
-- On string_list shift to state 106
-- On string_constant shift to state 108
-- On shift_expression shift to state 109
-- On relational_expression shift to state 116
-- On primary_expression shift to state 111
-- On postfix_expression shift to state 112
-- On paren_comma_expression shift to state 120
-- On one_string shift to state 121
-- On multiplicative_expression shift to state 122
-- On logical_or_expression shift to state 143
-- On logical_and_expression shift to state 147
-- On expression shift to state 223
-- On equality_expression shift to state 149
-- On constant shift to state 124
-- On conditional_expression shift to state 167
-- On cast_expression shift to state 169
-- On bitwise_xor_expression shift to state 154
-- On bitwise_or_expression shift to state 164
-- On bitwise_and_expression shift to state 162
-- On assignment_expression shift to state 192
-- On additive_expression shift to state 136
## Reductions:

State 223:
## Known stack suffix:
## LBRACKET expression ELLIPSIS expression
## LR(1) items:
init_designators -> LBRACKET expression ELLIPSIS expression . RBRACKET [ TILDE STAR SIZEOF PRETTY_FUNCTION__ PLUS_PLUS PLUS MINUS_MINUS MINUS LPAREN LBRACE IDENT FUNCTION__ EXCLAM EQ CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR BUILTIN_VA_ARG AT_EXPR AND_AND AND ALIGNOF ]
## Transitions:
-- On RBRACKET shift to state 224
## Reductions:

State 224:
## Known stack suffix:
## LBRACKET expression ELLIPSIS expression RBRACKET
## LR(1) items:
init_designators -> LBRACKET expression ELLIPSIS expression RBRACKET . [ TILDE STAR SIZEOF PRETTY_FUNCTION__ PLUS_PLUS PLUS MINUS_MINUS MINUS LPAREN LBRACE IDENT FUNCTION__ EXCLAM EQ CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR BUILTIN_VA_ARG AT_EXPR AND_AND AND ALIGNOF ]
## Transitions:
## Reductions:
-- On TILDE STAR SIZEOF PRETTY_FUNCTION__ PLUS_PLUS PLUS MINUS_MINUS MINUS LPAREN LBRACE IDENT FUNCTION__ EXCLAM EQ CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR BUILTIN_VA_ARG AT_EXPR AND_AND AND ALIGNOF
--   reduce production init_designators -> LBRACKET expression ELLIPSIS expression RBRACKET

State 225:
## Known stack suffix:
## LBRACE
## LR(1) items:
init_expression -> LBRACE . initialiser_list_opt RBRACE [ SEMICOLON RBRACE COMMA ]
## Transitions:
-- On TILDE shift to state 32
-- On STAR shift to state 33
-- On SIZEOF shift to state 34
-- On PRETTY_FUNCTION__ shift to state 35
-- On PLUS_PLUS shift to state 36
-- On PLUS shift to state 37
-- On NAMED_TYPE shift to state 5
-- On MINUS_MINUS shift to state 38
-- On MINUS shift to state 39
-- On LPAREN shift to state 40
-- On LBRACKET shift to state 105
-- On LBRACE shift to state 225
-- On IDENT shift to state 226
-- On FUNCTION__ shift to state 46
-- On EXCLAM shift to state 47
-- On DOT shift to state 217
-- On CST_WSTRING shift to state 48
-- On CST_WCHAR shift to state 49
-- On CST_STRING shift to state 50
-- On CST_INT shift to state 51
-- On CST_FLOAT shift to state 52
-- On CST_CHAR shift to state 53
-- On BUILTIN_VA_ARG shift to state 54
-- On AT_NAME shift to state 206
-- On AT_EXPR shift to state 56
-- On AND_AND shift to state 60
-- On AND shift to state 62
-- On ALIGNOF shift to state 63
-- On wstring_list shift to state 98
-- On unary_expression shift to state 101
-- On string_list shift to state 106
-- On string_constant shift to state 108
-- On shift_expression shift to state 109
-- On relational_expression shift to state 116
-- On primary_expression shift to state 111
-- On postfix_expression shift to state 112
-- On paren_comma_expression shift to state 120
-- On one_string shift to state 121
-- On multiplicative_expression shift to state 122
-- On logical_or_expression shift to state 143
-- On logical_and_expression shift to state 147
-- On initialiser_list_opt shift to state 227
-- On initialiser_list shift to state 229
-- On initialiser shift to state 230
-- On init_expression shift to state 233
-- On init_designators shift to state 234
-- On id_or_typename shift to state 239
-- On gcc_init_designators shift to state 241
-- On expression shift to state 238
-- On equality_expression shift to state 149
-- On constant shift to state 124
-- On conditional_expression shift to state 167
-- On cast_expression shift to state 169
-- On bitwise_xor_expression shift to state 154
-- On bitwise_or_expression shift to state 164
-- On bitwise_and_expression shift to state 162
-- On assignment_expression shift to state 192
-- On additive_expression shift to state 136
## Reductions:
-- On RBRACE
--   reduce production initialiser_list_opt ->

State 226:
## Known stack suffix:
## IDENT
## LR(1) items:
id_or_typename -> IDENT . [ COLON ]
primary_expression -> IDENT . [ SUP_SUP_EQ SUP_SUP SUP_EQ SUP STAR_EQ STAR SLASH_EQ SLASH RBRACE QUEST PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_EQ MINUS LPAREN LBRACKET INF_INF_EQ INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ EQ DOT COMMA CIRC_EQ CIRC ARROW AND_EQ AND_AND AND ]
## Transitions:
## Reductions:
-- On COLON
--   reduce production id_or_typename -> IDENT
-- On SUP_SUP_EQ SUP_SUP SUP_EQ SUP STAR_EQ STAR SLASH_EQ SLASH RBRACE QUEST PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_EQ MINUS LPAREN LBRACKET INF_INF_EQ INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ EQ DOT COMMA CIRC_EQ CIRC ARROW AND_EQ AND_AND AND
--   reduce production primary_expression -> IDENT

State 227:
## Known stack suffix:
## LBRACE initialiser_list_opt
## LR(1) items:
init_expression -> LBRACE initialiser_list_opt . RBRACE [ SEMICOLON RBRACE COMMA ]
## Transitions:
-- On RBRACE shift to state 228
## Reductions:

State 228:
## Known stack suffix:
## LBRACE initialiser_list_opt RBRACE
## LR(1) items:
init_expression -> LBRACE initialiser_list_opt RBRACE . [ SEMICOLON RBRACE COMMA ]
## Transitions:
## Reductions:
-- On SEMICOLON RBRACE COMMA
--   reduce production init_expression -> LBRACE initialiser_list_opt RBRACE

State 229:
## Known stack suffix:
## initialiser_list
## LR(1) items:
initialiser_list_opt -> initialiser_list . [ RBRACE ]
## Transitions:
## Reductions:
-- On RBRACE
--   reduce production initialiser_list_opt -> initialiser_list

State 230:
## Known stack suffix:
## initialiser
## LR(1) items:
initialiser_list -> initialiser . [ RBRACE ]
initialiser_list -> initialiser . COMMA initialiser_list_opt [ RBRACE ]
## Transitions:
-- On COMMA shift to state 231
## Reductions:
-- On RBRACE
--   reduce production initialiser_list -> initialiser

State 231:
## Known stack suffix:
## initialiser COMMA
## LR(1) items:
initialiser_list -> initialiser COMMA . initialiser_list_opt [ RBRACE ]
## Transitions:
-- On TILDE shift to state 32
-- On STAR shift to state 33
-- On SIZEOF shift to state 34
-- On PRETTY_FUNCTION__ shift to state 35
-- On PLUS_PLUS shift to state 36
-- On PLUS shift to state 37
-- On NAMED_TYPE shift to state 5
-- On MINUS_MINUS shift to state 38
-- On MINUS shift to state 39
-- On LPAREN shift to state 40
-- On LBRACKET shift to state 105
-- On LBRACE shift to state 225
-- On IDENT shift to state 226
-- On FUNCTION__ shift to state 46
-- On EXCLAM shift to state 47
-- On DOT shift to state 217
-- On CST_WSTRING shift to state 48
-- On CST_WCHAR shift to state 49
-- On CST_STRING shift to state 50
-- On CST_INT shift to state 51
-- On CST_FLOAT shift to state 52
-- On CST_CHAR shift to state 53
-- On BUILTIN_VA_ARG shift to state 54
-- On AT_NAME shift to state 206
-- On AT_EXPR shift to state 56
-- On AND_AND shift to state 60
-- On AND shift to state 62
-- On ALIGNOF shift to state 63
-- On wstring_list shift to state 98
-- On unary_expression shift to state 101
-- On string_list shift to state 106
-- On string_constant shift to state 108
-- On shift_expression shift to state 109
-- On relational_expression shift to state 116
-- On primary_expression shift to state 111
-- On postfix_expression shift to state 112
-- On paren_comma_expression shift to state 120
-- On one_string shift to state 121
-- On multiplicative_expression shift to state 122
-- On logical_or_expression shift to state 143
-- On logical_and_expression shift to state 147
-- On initialiser_list_opt shift to state 232
-- On initialiser_list shift to state 229
-- On initialiser shift to state 230
-- On init_expression shift to state 233
-- On init_designators shift to state 234
-- On id_or_typename shift to state 239
-- On gcc_init_designators shift to state 241
-- On expression shift to state 238
-- On equality_expression shift to state 149
-- On constant shift to state 124
-- On conditional_expression shift to state 167
-- On cast_expression shift to state 169
-- On bitwise_xor_expression shift to state 154
-- On bitwise_or_expression shift to state 164
-- On bitwise_and_expression shift to state 162
-- On assignment_expression shift to state 192
-- On additive_expression shift to state 136
## Reductions:
-- On RBRACE
--   reduce production initialiser_list_opt ->

State 232:
## Known stack suffix:
## initialiser COMMA initialiser_list_opt
## LR(1) items:
initialiser_list -> initialiser COMMA initialiser_list_opt . [ RBRACE ]
## Transitions:
## Reductions:
-- On RBRACE
--   reduce production initialiser_list -> initialiser COMMA initialiser_list_opt

State 233:
## Known stack suffix:
## init_expression
## LR(1) items:
initialiser -> init_expression . [ RBRACE COMMA ]
## Transitions:
## Reductions:
-- On RBRACE COMMA
--   reduce production initialiser -> init_expression

State 234:
## Known stack suffix:
## init_designators
## LR(1) items:
initialiser -> init_designators . eq_opt init_expression [ RBRACE COMMA ]
## Transitions:
-- On EQ shift to state 235
-- On eq_opt shift to state 236
## Reductions:
-- On TILDE STAR SIZEOF PRETTY_FUNCTION__ PLUS_PLUS PLUS MINUS_MINUS MINUS LPAREN LBRACE IDENT FUNCTION__ EXCLAM CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR BUILTIN_VA_ARG AT_EXPR AND_AND AND ALIGNOF
--   reduce production eq_opt ->

State 235:
## Known stack suffix:
## EQ
## LR(1) items:
eq_opt -> EQ . [ TILDE STAR SIZEOF PRETTY_FUNCTION__ PLUS_PLUS PLUS MINUS_MINUS MINUS LPAREN LBRACE IDENT FUNCTION__ EXCLAM CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR BUILTIN_VA_ARG AT_EXPR AND_AND AND ALIGNOF ]
## Transitions:
## Reductions:
-- On TILDE STAR SIZEOF PRETTY_FUNCTION__ PLUS_PLUS PLUS MINUS_MINUS MINUS LPAREN LBRACE IDENT FUNCTION__ EXCLAM CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR BUILTIN_VA_ARG AT_EXPR AND_AND AND ALIGNOF
--   reduce production eq_opt -> EQ

State 236:
## Known stack suffix:
## init_designators eq_opt
## LR(1) items:
initialiser -> init_designators eq_opt . init_expression [ RBRACE COMMA ]
## Transitions:
-- On TILDE shift to state 32
-- On STAR shift to state 33
-- On SIZEOF shift to state 34
-- On PRETTY_FUNCTION__ shift to state 35
-- On PLUS_PLUS shift to state 36
-- On PLUS shift to state 37
-- On MINUS_MINUS shift to state 38
-- On MINUS shift to state 39
-- On LPAREN shift to state 40
-- On LBRACE shift to state 225
-- On IDENT shift to state 45
-- On FUNCTION__ shift to state 46
-- On EXCLAM shift to state 47
-- On CST_WSTRING shift to state 48
-- On CST_WCHAR shift to state 49
-- On CST_STRING shift to state 50
-- On CST_INT shift to state 51
-- On CST_FLOAT shift to state 52
-- On CST_CHAR shift to state 53
-- On BUILTIN_VA_ARG shift to state 54
-- On AT_EXPR shift to state 56
-- On AND_AND shift to state 60
-- On AND shift to state 62
-- On ALIGNOF shift to state 63
-- On wstring_list shift to state 98
-- On unary_expression shift to state 101
-- On string_list shift to state 106
-- On string_constant shift to state 108
-- On shift_expression shift to state 109
-- On relational_expression shift to state 116
-- On primary_expression shift to state 111
-- On postfix_expression shift to state 112
-- On paren_comma_expression shift to state 120
-- On one_string shift to state 121
-- On multiplicative_expression shift to state 122
-- On logical_or_expression shift to state 143
-- On logical_and_expression shift to state 147
-- On init_expression shift to state 237
-- On expression shift to state 238
-- On equality_expression shift to state 149
-- On constant shift to state 124
-- On conditional_expression shift to state 167
-- On cast_expression shift to state 169
-- On bitwise_xor_expression shift to state 154
-- On bitwise_or_expression shift to state 164
-- On bitwise_and_expression shift to state 162
-- On assignment_expression shift to state 192
-- On additive_expression shift to state 136
## Reductions:

State 237:
## Known stack suffix:
## init_designators eq_opt init_expression
## LR(1) items:
initialiser -> init_designators eq_opt init_expression . [ RBRACE COMMA ]
## Transitions:
## Reductions:
-- On RBRACE COMMA
--   reduce production initialiser -> init_designators eq_opt init_expression

State 238:
## Known stack suffix:
## expression
## LR(1) items:
init_expression -> expression . [ SEMICOLON RBRACE COMMA ]
## Transitions:
## Reductions:
-- On SEMICOLON RBRACE COMMA
--   reduce production init_expression -> expression

State 239:
## Known stack suffix:
## id_or_typename
## LR(1) items:
gcc_init_designators -> id_or_typename . COLON [ TILDE STAR SIZEOF PRETTY_FUNCTION__ PLUS_PLUS PLUS MINUS_MINUS MINUS LPAREN LBRACE IDENT FUNCTION__ EXCLAM CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR BUILTIN_VA_ARG AT_EXPR AND_AND AND ALIGNOF ]
## Transitions:
-- On COLON shift to state 240
## Reductions:

State 240:
## Known stack suffix:
## id_or_typename COLON
## LR(1) items:
gcc_init_designators -> id_or_typename COLON . [ TILDE STAR SIZEOF PRETTY_FUNCTION__ PLUS_PLUS PLUS MINUS_MINUS MINUS LPAREN LBRACE IDENT FUNCTION__ EXCLAM CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR BUILTIN_VA_ARG AT_EXPR AND_AND AND ALIGNOF ]
## Transitions:
## Reductions:
-- On TILDE STAR SIZEOF PRETTY_FUNCTION__ PLUS_PLUS PLUS MINUS_MINUS MINUS LPAREN LBRACE IDENT FUNCTION__ EXCLAM CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR BUILTIN_VA_ARG AT_EXPR AND_AND AND ALIGNOF
--   reduce production gcc_init_designators -> id_or_typename COLON

State 241:
## Known stack suffix:
## gcc_init_designators
## LR(1) items:
initialiser -> gcc_init_designators . init_expression [ RBRACE COMMA ]
## Transitions:
-- On TILDE shift to state 32
-- On STAR shift to state 33
-- On SIZEOF shift to state 34
-- On PRETTY_FUNCTION__ shift to state 35
-- On PLUS_PLUS shift to state 36
-- On PLUS shift to state 37
-- On MINUS_MINUS shift to state 38
-- On MINUS shift to state 39
-- On LPAREN shift to state 40
-- On LBRACE shift to state 225
-- On IDENT shift to state 45
-- On FUNCTION__ shift to state 46
-- On EXCLAM shift to state 47
-- On CST_WSTRING shift to state 48
-- On CST_WCHAR shift to state 49
-- On CST_STRING shift to state 50
-- On CST_INT shift to state 51
-- On CST_FLOAT shift to state 52
-- On CST_CHAR shift to state 53
-- On BUILTIN_VA_ARG shift to state 54
-- On AT_EXPR shift to state 56
-- On AND_AND shift to state 60
-- On AND shift to state 62
-- On ALIGNOF shift to state 63
-- On wstring_list shift to state 98
-- On unary_expression shift to state 101
-- On string_list shift to state 106
-- On string_constant shift to state 108
-- On shift_expression shift to state 109
-- On relational_expression shift to state 116
-- On primary_expression shift to state 111
-- On postfix_expression shift to state 112
-- On paren_comma_expression shift to state 120
-- On one_string shift to state 121
-- On multiplicative_expression shift to state 122
-- On logical_or_expression shift to state 143
-- On logical_and_expression shift to state 147
-- On init_expression shift to state 242
-- On expression shift to state 238
-- On equality_expression shift to state 149
-- On constant shift to state 124
-- On conditional_expression shift to state 167
-- On cast_expression shift to state 169
-- On bitwise_xor_expression shift to state 154
-- On bitwise_or_expression shift to state 164
-- On bitwise_and_expression shift to state 162
-- On assignment_expression shift to state 192
-- On additive_expression shift to state 136
## Reductions:

State 242:
## Known stack suffix:
## gcc_init_designators init_expression
## LR(1) items:
initialiser -> gcc_init_designators init_expression . [ RBRACE COMMA ]
## Transitions:
## Reductions:
-- On RBRACE COMMA
--   reduce production initialiser -> gcc_init_designators init_expression

State 243:
## Known stack suffix:
## LPAREN type_name RPAREN LBRACE initialiser_list_opt
## LR(1) items:
postfix_expression -> LPAREN type_name RPAREN LBRACE initialiser_list_opt . RBRACE [ SUP_SUP_EQ SUP_SUP SUP_EQ SUP STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACKET RBRACE QUEST PRAGMA_EOL PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_EQ MINUS LPAREN LBRACKET INF_INF_EQ INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ EQ ELLIPSIS DOT COMMA COLON CIRC_EQ CIRC ARROW AND_EQ AND_AND AND ]
## Transitions:
-- On RBRACE shift to state 244
## Reductions:

State 244:
## Known stack suffix:
## LPAREN type_name RPAREN LBRACE initialiser_list_opt RBRACE
## LR(1) items:
postfix_expression -> LPAREN type_name RPAREN LBRACE initialiser_list_opt RBRACE . [ SUP_SUP_EQ SUP_SUP SUP_EQ SUP STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACKET RBRACE QUEST PRAGMA_EOL PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_EQ MINUS LPAREN LBRACKET INF_INF_EQ INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ EQ ELLIPSIS DOT COMMA COLON CIRC_EQ CIRC ARROW AND_EQ AND_AND AND ]
## Transitions:
## Reductions:
-- On SUP_SUP_EQ SUP_SUP SUP_EQ SUP STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACKET RBRACE QUEST PRAGMA_EOL PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_EQ MINUS LPAREN LBRACKET INF_INF_EQ INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ EQ ELLIPSIS DOT COMMA COLON CIRC_EQ CIRC ARROW AND_EQ AND_AND AND
--   reduce production postfix_expression -> LPAREN type_name RPAREN LBRACE initialiser_list_opt RBRACE

State 245:
## Known stack suffix:
## decl_spec_list
## LR(1) items:
type_name -> decl_spec_list . abstract_decl [ RPAREN ]
type_name -> decl_spec_list . [ RPAREN ]
## Transitions:
-- On STAR shift to state 246
-- On pointer_opt shift to state 256
-- On pointer shift to state 261
-- On abstract_decl shift to state 649
## Reductions:
-- On LPAREN LBRACKET
--   reduce production pointer_opt ->
-- On RPAREN
--   reduce production type_name -> decl_spec_list

State 246:
## Known stack suffix:
## STAR
## LR(1) items:
pointer -> STAR . attributes pointer_opt [ RPAREN NAMED_TYPE LPAREN LBRACKET IDENT COMMA AT_NAME ]
## Transitions:
-- On VOLATILE shift to state 247
-- On THREAD shift to state 12
-- On RESTRICT shift to state 248
-- On MSATTR shift to state 21
-- On DECLSPEC shift to state 67
-- On CONST shift to state 249
-- On ATTRIBUTE shift to state 85
-- On attributes shift to state 250
-- On attribute_nocv shift to state 253
-- On attribute shift to state 254
## Reductions:
-- On STAR RPAREN NAMED_TYPE LPAREN LBRACKET IDENT COMMA AT_NAME
--   reduce production attributes ->

State 247:
## Known stack suffix:
## VOLATILE
## LR(1) items:
attribute -> VOLATILE . [ VOLATILE THREAD STAR SEMICOLON RPAREN RESTRICT NAMED_TYPE MSATTR LPAREN LBRACKET IDENT EQ DECLSPEC CONST COMMA COLON AT_NAME ATTRIBUTE ASM ]
## Transitions:
## Reductions:
-- On VOLATILE THREAD STAR SEMICOLON RPAREN RESTRICT NAMED_TYPE MSATTR LPAREN LBRACKET IDENT EQ DECLSPEC CONST COMMA COLON AT_NAME ATTRIBUTE ASM
--   reduce production attribute -> VOLATILE

State 248:
## Known stack suffix:
## RESTRICT
## LR(1) items:
attribute -> RESTRICT . [ VOLATILE THREAD STAR SEMICOLON RPAREN RESTRICT NAMED_TYPE MSATTR LPAREN LBRACKET IDENT EQ DECLSPEC CONST COMMA COLON AT_NAME ATTRIBUTE ASM ]
## Transitions:
## Reductions:
-- On VOLATILE THREAD STAR SEMICOLON RPAREN RESTRICT NAMED_TYPE MSATTR LPAREN LBRACKET IDENT EQ DECLSPEC CONST COMMA COLON AT_NAME ATTRIBUTE ASM
--   reduce production attribute -> RESTRICT

State 249:
## Known stack suffix:
## CONST
## LR(1) items:
attribute -> CONST . [ VOLATILE THREAD STAR SEMICOLON RPAREN RESTRICT NAMED_TYPE MSATTR LPAREN LBRACKET IDENT EQ DECLSPEC CONST COMMA COLON AT_NAME ATTRIBUTE ASM ]
## Transitions:
## Reductions:
-- On VOLATILE THREAD STAR SEMICOLON RPAREN RESTRICT NAMED_TYPE MSATTR LPAREN LBRACKET IDENT EQ DECLSPEC CONST COMMA COLON AT_NAME ATTRIBUTE ASM
--   reduce production attribute -> CONST

State 250:
## Known stack suffix:
## STAR attributes
## LR(1) items:
pointer -> STAR attributes . pointer_opt [ RPAREN NAMED_TYPE LPAREN LBRACKET IDENT COMMA AT_NAME ]
## Transitions:
-- On STAR shift to state 246
-- On pointer_opt shift to state 251
-- On pointer shift to state 252
## Reductions:
-- On RPAREN NAMED_TYPE LPAREN LBRACKET IDENT COMMA AT_NAME
--   reduce production pointer_opt ->

State 251:
## Known stack suffix:
## STAR attributes pointer_opt
## LR(1) items:
pointer -> STAR attributes pointer_opt . [ RPAREN NAMED_TYPE LPAREN LBRACKET IDENT COMMA AT_NAME ]
## Transitions:
## Reductions:
-- On RPAREN NAMED_TYPE LPAREN LBRACKET IDENT COMMA AT_NAME
--   reduce production pointer -> STAR attributes pointer_opt

State 252:
## Known stack suffix:
## pointer
## LR(1) items:
pointer_opt -> pointer . [ RPAREN NAMED_TYPE LPAREN LBRACKET IDENT COMMA AT_NAME ]
## Transitions:
## Reductions:
-- On RPAREN NAMED_TYPE LPAREN LBRACKET IDENT COMMA AT_NAME
--   reduce production pointer_opt -> pointer

State 253:
## Known stack suffix:
## attribute_nocv
## LR(1) items:
attribute -> attribute_nocv . [ VOLATILE THREAD STAR SEMICOLON RPAREN RESTRICT NAMED_TYPE MSATTR LPAREN LBRACKET IDENT EQ DECLSPEC CONST COMMA COLON AT_NAME ATTRIBUTE ASM ]
## Transitions:
## Reductions:
-- On VOLATILE THREAD STAR SEMICOLON RPAREN RESTRICT NAMED_TYPE MSATTR LPAREN LBRACKET IDENT EQ DECLSPEC CONST COMMA COLON AT_NAME ATTRIBUTE ASM
--   reduce production attribute -> attribute_nocv

State 254:
## Known stack suffix:
## attribute
## LR(1) items:
attributes -> attribute . attributes [ STAR SEMICOLON RPAREN NAMED_TYPE LPAREN LBRACKET IDENT EQ COMMA COLON AT_NAME ]
## Transitions:
-- On VOLATILE shift to state 247
-- On THREAD shift to state 12
-- On RESTRICT shift to state 248
-- On MSATTR shift to state 21
-- On DECLSPEC shift to state 67
-- On CONST shift to state 249
-- On ATTRIBUTE shift to state 85
-- On attributes shift to state 255
-- On attribute_nocv shift to state 253
-- On attribute shift to state 254
## Reductions:
-- On STAR SEMICOLON RPAREN NAMED_TYPE LPAREN LBRACKET IDENT EQ COMMA COLON AT_NAME
--   reduce production attributes ->

State 255:
## Known stack suffix:
## attribute attributes
## LR(1) items:
attributes -> attribute attributes . [ STAR SEMICOLON RPAREN NAMED_TYPE LPAREN LBRACKET IDENT EQ COMMA COLON AT_NAME ]
## Transitions:
## Reductions:
-- On STAR SEMICOLON RPAREN NAMED_TYPE LPAREN LBRACKET IDENT EQ COMMA COLON AT_NAME
--   reduce production attributes -> attribute attributes

State 256:
## Known stack suffix:
## pointer_opt
## LR(1) items:
abstract_decl -> pointer_opt . abs_direct_decl attributes [ RPAREN ]
## Transitions:
-- On LPAREN shift to state 257
-- On abs_direct_decl_opt shift to state 264
-- On abs_direct_decl shift to state 269
## Reductions:
-- On LBRACKET
--   reduce production abs_direct_decl_opt ->

State 257:
## Known stack suffix:
## LPAREN
## LR(1) items:
abs_direct_decl -> LPAREN . attributes abstract_decl RPAREN [ VOLATILE THREAD RPAREN RESTRICT MSATTR LPAREN LBRACKET DECLSPEC CONST ATTRIBUTE ]
abs_direct_decl -> LPAREN . error RPAREN [ VOLATILE THREAD RPAREN RESTRICT MSATTR LPAREN LBRACKET DECLSPEC CONST ATTRIBUTE ]
## Transitions:
-- On error shift to state 258
-- On VOLATILE shift to state 247
-- On THREAD shift to state 12
-- On RESTRICT shift to state 248
-- On MSATTR shift to state 21
-- On DECLSPEC shift to state 67
-- On CONST shift to state 249
-- On ATTRIBUTE shift to state 85
-- On attributes shift to state 260
-- On attribute_nocv shift to state 253
-- On attribute shift to state 254
## Reductions:
-- On STAR LPAREN LBRACKET
--   reduce production attributes ->

State 258:
## Known stack suffix:
## LPAREN error
## LR(1) items:
abs_direct_decl -> LPAREN error . RPAREN [ VOLATILE THREAD RPAREN RESTRICT MSATTR LPAREN LBRACKET DECLSPEC CONST COMMA ATTRIBUTE ]
## Transitions:
-- On RPAREN shift to state 259
## Reductions:

State 259:
## Known stack suffix:
## LPAREN error RPAREN
## LR(1) items:
abs_direct_decl -> LPAREN error RPAREN . [ VOLATILE THREAD RPAREN RESTRICT MSATTR LPAREN LBRACKET DECLSPEC CONST COMMA ATTRIBUTE ]
## Transitions:
## Reductions:
-- On VOLATILE THREAD RPAREN RESTRICT MSATTR LPAREN LBRACKET DECLSPEC CONST COMMA ATTRIBUTE
--   reduce production abs_direct_decl -> LPAREN error RPAREN

State 260:
## Known stack suffix:
## LPAREN attributes
## LR(1) items:
abs_direct_decl -> LPAREN attributes . abstract_decl RPAREN [ VOLATILE THREAD RPAREN RESTRICT MSATTR LPAREN LBRACKET DECLSPEC CONST ATTRIBUTE ]
## Transitions:
-- On STAR shift to state 246
-- On pointer_opt shift to state 256
-- On pointer shift to state 261
-- On abstract_decl shift to state 262
## Reductions:
-- On LPAREN LBRACKET
--   reduce production pointer_opt ->

State 261:
## Known stack suffix:
## pointer
## LR(1) items:
abstract_decl -> pointer . [ RPAREN COMMA ]
pointer_opt -> pointer . [ NAMED_TYPE LPAREN LBRACKET IDENT AT_NAME ]
## Transitions:
## Reductions:
-- On RPAREN COMMA
--   reduce production abstract_decl -> pointer
-- On NAMED_TYPE LPAREN LBRACKET IDENT AT_NAME
--   reduce production pointer_opt -> pointer

State 262:
## Known stack suffix:
## LPAREN attributes abstract_decl
## LR(1) items:
abs_direct_decl -> LPAREN attributes abstract_decl . RPAREN [ VOLATILE THREAD RPAREN RESTRICT MSATTR LPAREN LBRACKET DECLSPEC CONST COMMA ATTRIBUTE ]
## Transitions:
-- On RPAREN shift to state 263
## Reductions:

State 263:
## Known stack suffix:
## LPAREN attributes abstract_decl RPAREN
## LR(1) items:
abs_direct_decl -> LPAREN attributes abstract_decl RPAREN . [ VOLATILE THREAD RPAREN RESTRICT MSATTR LPAREN LBRACKET DECLSPEC CONST COMMA ATTRIBUTE ]
## Transitions:
## Reductions:
-- On VOLATILE THREAD RPAREN RESTRICT MSATTR LPAREN LBRACKET DECLSPEC CONST COMMA ATTRIBUTE
--   reduce production abs_direct_decl -> LPAREN attributes abstract_decl RPAREN

State 264:
## Known stack suffix:
## abs_direct_decl_opt
## LR(1) items:
abs_direct_decl -> abs_direct_decl_opt . LBRACKET comma_expression_opt RBRACKET [ VOLATILE THREAD RPAREN RESTRICT MSATTR LPAREN LBRACKET DECLSPEC CONST COMMA ATTRIBUTE ]
## Transitions:
-- On LBRACKET shift to state 265
## Reductions:

State 265:
## Known stack suffix:
## abs_direct_decl_opt LBRACKET
## LR(1) items:
abs_direct_decl -> abs_direct_decl_opt LBRACKET . comma_expression_opt RBRACKET [ VOLATILE THREAD RPAREN RESTRICT MSATTR LPAREN LBRACKET DECLSPEC CONST COMMA ATTRIBUTE ]
## Transitions:
-- On error shift to state 44
-- On TILDE shift to state 32
-- On STAR shift to state 33
-- On SIZEOF shift to state 34
-- On PRETTY_FUNCTION__ shift to state 35
-- On PLUS_PLUS shift to state 36
-- On PLUS shift to state 37
-- On MINUS_MINUS shift to state 38
-- On MINUS shift to state 39
-- On LPAREN shift to state 40
-- On IDENT shift to state 45
-- On FUNCTION__ shift to state 46
-- On EXCLAM shift to state 47
-- On CST_WSTRING shift to state 48
-- On CST_WCHAR shift to state 49
-- On CST_STRING shift to state 50
-- On CST_INT shift to state 51
-- On CST_FLOAT shift to state 52
-- On CST_CHAR shift to state 53
-- On BUILTIN_VA_ARG shift to state 54
-- On AT_EXPR shift to state 56
-- On AND_AND shift to state 60
-- On AND shift to state 62
-- On ALIGNOF shift to state 63
-- On wstring_list shift to state 98
-- On unary_expression shift to state 101
-- On string_list shift to state 106
-- On string_constant shift to state 108
-- On shift_expression shift to state 109
-- On relational_expression shift to state 116
-- On primary_expression shift to state 111
-- On postfix_expression shift to state 112
-- On paren_comma_expression shift to state 120
-- On one_string shift to state 121
-- On multiplicative_expression shift to state 122
-- On logical_or_expression shift to state 143
-- On logical_and_expression shift to state 147
-- On expression shift to state 165
-- On equality_expression shift to state 149
-- On constant shift to state 124
-- On conditional_expression shift to state 167
-- On comma_expression_opt shift to state 266
-- On comma_expression shift to state 268
-- On cast_expression shift to state 169
-- On bitwise_xor_expression shift to state 154
-- On bitwise_or_expression shift to state 164
-- On bitwise_and_expression shift to state 162
-- On assignment_expression shift to state 192
-- On additive_expression shift to state 136
## Reductions:
-- On RBRACKET
--   reduce production comma_expression_opt ->

State 266:
## Known stack suffix:
## abs_direct_decl_opt LBRACKET comma_expression_opt
## LR(1) items:
abs_direct_decl -> abs_direct_decl_opt LBRACKET comma_expression_opt . RBRACKET [ VOLATILE THREAD RPAREN RESTRICT MSATTR LPAREN LBRACKET DECLSPEC CONST COMMA ATTRIBUTE ]
## Transitions:
-- On RBRACKET shift to state 267
## Reductions:

State 267:
## Known stack suffix:
## abs_direct_decl_opt LBRACKET comma_expression_opt RBRACKET
## LR(1) items:
abs_direct_decl -> abs_direct_decl_opt LBRACKET comma_expression_opt RBRACKET . [ VOLATILE THREAD RPAREN RESTRICT MSATTR LPAREN LBRACKET DECLSPEC CONST COMMA ATTRIBUTE ]
## Transitions:
## Reductions:
-- On VOLATILE THREAD RPAREN RESTRICT MSATTR LPAREN LBRACKET DECLSPEC CONST COMMA ATTRIBUTE
--   reduce production abs_direct_decl -> abs_direct_decl_opt LBRACKET comma_expression_opt RBRACKET

State 268:
## Known stack suffix:
## comma_expression
## LR(1) items:
comma_expression_opt -> comma_expression . [ RBRACKET ]
## Transitions:
## Reductions:
-- On RBRACKET
--   reduce production comma_expression_opt -> comma_expression

State 269:
## Known stack suffix:
## pointer_opt abs_direct_decl
## LR(1) items:
abs_direct_decl -> abs_direct_decl . parameter_list_startscope rest_par_list RPAREN [ VOLATILE THREAD RPAREN RESTRICT MSATTR LPAREN LBRACKET DECLSPEC CONST COMMA ATTRIBUTE ]
abs_direct_decl_opt -> abs_direct_decl . [ LBRACKET ]
abstract_decl -> pointer_opt abs_direct_decl . attributes [ RPAREN COMMA ]
## Transitions:
-- On VOLATILE shift to state 247
-- On THREAD shift to state 12
-- On RESTRICT shift to state 248
-- On MSATTR shift to state 21
-- On LPAREN shift to state 270
-- On DECLSPEC shift to state 67
-- On CONST shift to state 249
-- On ATTRIBUTE shift to state 85
-- On parameter_list_startscope shift to state 271
-- On attributes shift to state 648
-- On attribute_nocv shift to state 253
-- On attribute shift to state 254
## Reductions:
-- On LBRACKET
--   reduce production abs_direct_decl_opt -> abs_direct_decl
-- On RPAREN COMMA
--   reduce production attributes ->

State 270:
## Known stack suffix:
## LPAREN
## LR(1) items:
parameter_list_startscope -> LPAREN . [ VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC SIGNED SHORT RPAREN RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG INT64 INT INLINE FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_SPECIFIER ATTRIBUTE ]
## Transitions:
## Reductions:
-- On VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC SIGNED SHORT RPAREN RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG INT64 INT INLINE FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_SPECIFIER ATTRIBUTE
--   reduce production parameter_list_startscope -> LPAREN

State 271:
## Known stack suffix:
## abs_direct_decl parameter_list_startscope
## LR(1) items:
abs_direct_decl -> abs_direct_decl parameter_list_startscope . rest_par_list RPAREN [ VOLATILE THREAD RPAREN RESTRICT MSATTR LPAREN LBRACKET DECLSPEC CONST COMMA ATTRIBUTE ]
## Transitions:
-- On VOLATILE shift to state 1
-- On VOID shift to state 2
-- On UNSIGNED shift to state 3
-- On UNION shift to state 4
-- On TYPEOF shift to state 9
-- On TYPEDEF shift to state 11
-- On THREAD shift to state 12
-- On STRUCT shift to state 13
-- On STATIC shift to state 15
-- On SIGNED shift to state 16
-- On SHORT shift to state 17
-- On RESTRICT shift to state 18
-- On REGISTER shift to state 19
-- On NAMED_TYPE shift to state 20
-- On MSATTR shift to state 21
-- On LPAREN shift to state 272
-- On LONG shift to state 22
-- On INT64 shift to state 23
-- On INT shift to state 24
-- On INLINE shift to state 25
-- On FLOAT shift to state 26
-- On EXTERN shift to state 27
-- On ENUM shift to state 28
-- On DOUBLE shift to state 66
-- On DECLSPEC shift to state 67
-- On CONST shift to state 78
-- On CHAR shift to state 79
-- On AUTO shift to state 80
-- On AT_SPECIFIER shift to state 81
-- On ATTRIBUTE shift to state 85
-- On type_spec shift to state 89
-- On rest_par_list shift to state 646
-- On parameter_decl shift to state 635
-- On decl_spec_list shift to state 275
-- On cvspec shift to state 92
-- On attribute_nocv shift to state 95
## Reductions:
-- On RPAREN
--   reduce production rest_par_list ->

State 272:
## Known stack suffix:
## LPAREN
## LR(1) items:
parameter_decl -> LPAREN . parameter_decl RPAREN [ RPAREN COMMA ]
## Transitions:
-- On VOLATILE shift to state 1
-- On VOID shift to state 2
-- On UNSIGNED shift to state 3
-- On UNION shift to state 4
-- On TYPEOF shift to state 9
-- On TYPEDEF shift to state 11
-- On THREAD shift to state 12
-- On STRUCT shift to state 13
-- On STATIC shift to state 15
-- On SIGNED shift to state 16
-- On SHORT shift to state 17
-- On RESTRICT shift to state 18
-- On REGISTER shift to state 19
-- On NAMED_TYPE shift to state 20
-- On MSATTR shift to state 21
-- On LPAREN shift to state 272
-- On LONG shift to state 22
-- On INT64 shift to state 23
-- On INT shift to state 24
-- On INLINE shift to state 25
-- On FLOAT shift to state 26
-- On EXTERN shift to state 27
-- On ENUM shift to state 28
-- On DOUBLE shift to state 66
-- On DECLSPEC shift to state 67
-- On CONST shift to state 78
-- On CHAR shift to state 79
-- On AUTO shift to state 80
-- On AT_SPECIFIER shift to state 81
-- On ATTRIBUTE shift to state 85
-- On type_spec shift to state 89
-- On parameter_decl shift to state 273
-- On decl_spec_list shift to state 275
-- On cvspec shift to state 92
-- On attribute_nocv shift to state 95
## Reductions:

State 273:
## Known stack suffix:
## LPAREN parameter_decl
## LR(1) items:
parameter_decl -> LPAREN parameter_decl . RPAREN [ RPAREN COMMA ]
## Transitions:
-- On RPAREN shift to state 274
## Reductions:

State 274:
## Known stack suffix:
## LPAREN parameter_decl RPAREN
## LR(1) items:
parameter_decl -> LPAREN parameter_decl RPAREN . [ RPAREN COMMA ]
## Transitions:
## Reductions:
-- On RPAREN COMMA
--   reduce production parameter_decl -> LPAREN parameter_decl RPAREN

State 275:
## Known stack suffix:
## decl_spec_list
## LR(1) items:
parameter_decl -> decl_spec_list . declarator [ RPAREN COMMA ]
parameter_decl -> decl_spec_list . abstract_decl [ RPAREN COMMA ]
parameter_decl -> decl_spec_list . [ RPAREN COMMA ]
## Transitions:
-- On STAR shift to state 246
-- On pointer_opt shift to state 276
-- On pointer shift to state 261
-- On declarator shift to state 644
-- On abstract_decl shift to state 645
## Reductions:
-- On RPAREN COMMA
--   reduce production parameter_decl -> decl_spec_list
-- On NAMED_TYPE LPAREN LBRACKET IDENT AT_NAME
--   reduce production pointer_opt ->

State 276:
## Known stack suffix:
## pointer_opt
## LR(1) items:
abstract_decl -> pointer_opt . abs_direct_decl attributes [ RPAREN COMMA ]
declarator -> pointer_opt . direct_decl attributes_with_asm [ RPAREN COMMA ]
## Transitions:
-- On NAMED_TYPE shift to state 5
-- On LPAREN shift to state 277
-- On IDENT shift to state 205
-- On AT_NAME shift to state 206
-- On id_or_typename shift to state 281
-- On direct_decl shift to state 282
-- On abs_direct_decl_opt shift to state 264
-- On abs_direct_decl shift to state 269
## Reductions:
-- On LBRACKET
--   reduce production abs_direct_decl_opt ->

State 277:
## Known stack suffix:
## LPAREN
## LR(1) items:
abs_direct_decl -> LPAREN . attributes abstract_decl RPAREN [ VOLATILE THREAD RPAREN RESTRICT MSATTR LPAREN LBRACKET DECLSPEC CONST COMMA ATTRIBUTE ]
abs_direct_decl -> LPAREN . error RPAREN [ VOLATILE THREAD RPAREN RESTRICT MSATTR LPAREN LBRACKET DECLSPEC CONST COMMA ATTRIBUTE ]
direct_decl -> LPAREN . attributes declarator RPAREN [ VOLATILE THREAD RPAREN RESTRICT MSATTR LPAREN LBRACKET DECLSPEC CONST COMMA ATTRIBUTE ASM ]
## Transitions:
-- On error shift to state 258
-- On VOLATILE shift to state 247
-- On THREAD shift to state 12
-- On RESTRICT shift to state 248
-- On MSATTR shift to state 21
-- On DECLSPEC shift to state 67
-- On CONST shift to state 249
-- On ATTRIBUTE shift to state 85
-- On attributes shift to state 278
-- On attribute_nocv shift to state 253
-- On attribute shift to state 254
## Reductions:
-- On STAR NAMED_TYPE LPAREN LBRACKET IDENT AT_NAME
--   reduce production attributes ->

State 278:
## Known stack suffix:
## LPAREN attributes
## LR(1) items:
abs_direct_decl -> LPAREN attributes . abstract_decl RPAREN [ VOLATILE THREAD RPAREN RESTRICT MSATTR LPAREN LBRACKET DECLSPEC CONST COMMA ATTRIBUTE ]
direct_decl -> LPAREN attributes . declarator RPAREN [ VOLATILE THREAD RPAREN RESTRICT MSATTR LPAREN LBRACKET DECLSPEC CONST COMMA ATTRIBUTE ASM ]
## Transitions:
-- On STAR shift to state 246
-- On pointer_opt shift to state 276
-- On pointer shift to state 261
-- On declarator shift to state 279
-- On abstract_decl shift to state 262
## Reductions:
-- On NAMED_TYPE LPAREN LBRACKET IDENT AT_NAME
--   reduce production pointer_opt ->

State 279:
## Known stack suffix:
## LPAREN attributes declarator
## LR(1) items:
direct_decl -> LPAREN attributes declarator . RPAREN [ VOLATILE THREAD SEMICOLON RPAREN RESTRICT MSATTR LPAREN LBRACKET EQ DECLSPEC CONST COMMA COLON ATTRIBUTE ASM ]
## Transitions:
-- On RPAREN shift to state 280
## Reductions:

State 280:
## Known stack suffix:
## LPAREN attributes declarator RPAREN
## LR(1) items:
direct_decl -> LPAREN attributes declarator RPAREN . [ VOLATILE THREAD SEMICOLON RPAREN RESTRICT MSATTR LPAREN LBRACKET EQ DECLSPEC CONST COMMA COLON ATTRIBUTE ASM ]
## Transitions:
## Reductions:
-- On VOLATILE THREAD SEMICOLON RPAREN RESTRICT MSATTR LPAREN LBRACKET EQ DECLSPEC CONST COMMA COLON ATTRIBUTE ASM
--   reduce production direct_decl -> LPAREN attributes declarator RPAREN

State 281:
## Known stack suffix:
## id_or_typename
## LR(1) items:
direct_decl -> id_or_typename . [ VOLATILE THREAD SEMICOLON RPAREN RESTRICT MSATTR LPAREN LBRACKET EQ DECLSPEC CONST COMMA COLON ATTRIBUTE ASM ]
## Transitions:
## Reductions:
-- On VOLATILE THREAD SEMICOLON RPAREN RESTRICT MSATTR LPAREN LBRACKET EQ DECLSPEC CONST COMMA COLON ATTRIBUTE ASM
--   reduce production direct_decl -> id_or_typename

State 282:
## Known stack suffix:
## pointer_opt direct_decl
## LR(1) items:
declarator -> pointer_opt direct_decl . attributes_with_asm [ SEMICOLON RPAREN EQ COMMA COLON ]
direct_decl -> direct_decl . LBRACKET attributes comma_expression_opt RBRACKET [ VOLATILE THREAD SEMICOLON RPAREN RESTRICT MSATTR LPAREN LBRACKET EQ DECLSPEC CONST COMMA COLON ATTRIBUTE ASM ]
direct_decl -> direct_decl . LBRACKET attributes error RBRACKET [ VOLATILE THREAD SEMICOLON RPAREN RESTRICT MSATTR LPAREN LBRACKET EQ DECLSPEC CONST COMMA COLON ATTRIBUTE ASM ]
direct_decl -> direct_decl . parameter_list_startscope rest_par_list RPAREN [ VOLATILE THREAD SEMICOLON RPAREN RESTRICT MSATTR LPAREN LBRACKET EQ DECLSPEC CONST COMMA COLON ATTRIBUTE ASM ]
## Transitions:
-- On VOLATILE shift to state 247
-- On THREAD shift to state 12
-- On RESTRICT shift to state 248
-- On MSATTR shift to state 21
-- On LPAREN shift to state 270
-- On LBRACKET shift to state 283
-- On DECLSPEC shift to state 67
-- On CONST shift to state 249
-- On ATTRIBUTE shift to state 85
-- On ASM shift to state 627
-- On parameter_list_startscope shift to state 632
-- On attributes_with_asm shift to state 641
-- On attribute_nocv shift to state 253
-- On attribute shift to state 642
## Reductions:
-- On SEMICOLON RPAREN EQ COMMA COLON
--   reduce production attributes_with_asm ->

State 283:
## Known stack suffix:
## direct_decl LBRACKET
## LR(1) items:
direct_decl -> direct_decl LBRACKET . attributes comma_expression_opt RBRACKET [ VOLATILE THREAD SEMICOLON RPAREN RESTRICT MSATTR LPAREN LBRACKET EQ DECLSPEC CONST COMMA COLON ATTRIBUTE ASM ]
direct_decl -> direct_decl LBRACKET . attributes error RBRACKET [ VOLATILE THREAD SEMICOLON RPAREN RESTRICT MSATTR LPAREN LBRACKET EQ DECLSPEC CONST COMMA COLON ATTRIBUTE ASM ]
## Transitions:
-- On VOLATILE shift to state 284
-- On THREAD shift to state 285
-- On RESTRICT shift to state 286
-- On MSATTR shift to state 287
-- On DECLSPEC shift to state 288
-- On CONST shift to state 614
-- On ATTRIBUTE shift to state 615
-- On attributes shift to state 619
-- On attribute_nocv shift to state 624
-- On attribute shift to state 625
## Reductions:
-- On error TILDE STAR SIZEOF RBRACKET PRETTY_FUNCTION__ PLUS_PLUS PLUS MINUS_MINUS MINUS LPAREN IDENT FUNCTION__ EXCLAM CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR BUILTIN_VA_ARG AT_EXPR AND_AND AND ALIGNOF
--   reduce production attributes ->

State 284:
## Known stack suffix:
## VOLATILE
## LR(1) items:
attribute -> VOLATILE . [ error VOLATILE TILDE THREAD STAR SIZEOF SEMICOLON RESTRICT RBRACKET PRETTY_FUNCTION__ PLUS_PLUS PLUS MSATTR MINUS_MINUS MINUS LPAREN LBRACE IDENT FUNCTION__ EXCLAM EQ DECLSPEC CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONST COMMA BUILTIN_VA_ARG AT_EXPR ATTRIBUTE ASM AND_AND AND ALIGNOF ]
## Transitions:
## Reductions:
-- On error VOLATILE TILDE THREAD STAR SIZEOF SEMICOLON RESTRICT RBRACKET PRETTY_FUNCTION__ PLUS_PLUS PLUS MSATTR MINUS_MINUS MINUS LPAREN LBRACE IDENT FUNCTION__ EXCLAM EQ DECLSPEC CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONST COMMA BUILTIN_VA_ARG AT_EXPR ATTRIBUTE ASM AND_AND AND ALIGNOF
--   reduce production attribute -> VOLATILE

State 285:
## Known stack suffix:
## THREAD
## LR(1) items:
attribute_nocv -> THREAD . [ error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF TILDE THREAD STRUCT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RESTRICT REGISTER RBRACKET PRETTY_FUNCTION__ PLUS_PLUS PLUS NAMED_TYPE MSATTR MINUS_MINUS MINUS LPAREN LONG LBRACE INT64 INT INLINE IDENT FUNCTION__ FLOAT EXTERN EXCLAM EQ ENUM DOUBLE DECLSPEC CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONST COMMA CHAR BUILTIN_VA_ARG AUTO AT_SPECIFIER AT_NAME AT_EXPR ATTRIBUTE ASM AND_AND AND ALIGNOF ]
## Transitions:
## Reductions:
-- On error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF TILDE THREAD STRUCT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RESTRICT REGISTER RBRACKET PRETTY_FUNCTION__ PLUS_PLUS PLUS NAMED_TYPE MSATTR MINUS_MINUS MINUS LPAREN LONG LBRACE INT64 INT INLINE IDENT FUNCTION__ FLOAT EXTERN EXCLAM EQ ENUM DOUBLE DECLSPEC CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONST COMMA CHAR BUILTIN_VA_ARG AUTO AT_SPECIFIER AT_NAME AT_EXPR ATTRIBUTE ASM AND_AND AND ALIGNOF
--   reduce production attribute_nocv -> THREAD

State 286:
## Known stack suffix:
## RESTRICT
## LR(1) items:
attribute -> RESTRICT . [ error VOLATILE TILDE THREAD STAR SIZEOF SEMICOLON RESTRICT RBRACKET PRETTY_FUNCTION__ PLUS_PLUS PLUS MSATTR MINUS_MINUS MINUS LPAREN LBRACE IDENT FUNCTION__ EXCLAM EQ DECLSPEC CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONST COMMA BUILTIN_VA_ARG AT_EXPR ATTRIBUTE ASM AND_AND AND ALIGNOF ]
## Transitions:
## Reductions:
-- On error VOLATILE TILDE THREAD STAR SIZEOF SEMICOLON RESTRICT RBRACKET PRETTY_FUNCTION__ PLUS_PLUS PLUS MSATTR MINUS_MINUS MINUS LPAREN LBRACE IDENT FUNCTION__ EXCLAM EQ DECLSPEC CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONST COMMA BUILTIN_VA_ARG AT_EXPR ATTRIBUTE ASM AND_AND AND ALIGNOF
--   reduce production attribute -> RESTRICT

State 287:
## Known stack suffix:
## MSATTR
## LR(1) items:
attribute_nocv -> MSATTR . [ error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF TILDE THREAD STRUCT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RESTRICT REGISTER RBRACKET PRETTY_FUNCTION__ PLUS_PLUS PLUS NAMED_TYPE MSATTR MINUS_MINUS MINUS LPAREN LONG LBRACE INT64 INT INLINE IDENT FUNCTION__ FLOAT EXTERN EXCLAM EQ ENUM DOUBLE DECLSPEC CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONST COMMA CHAR BUILTIN_VA_ARG AUTO AT_SPECIFIER AT_NAME AT_EXPR ATTRIBUTE ASM AND_AND AND ALIGNOF ]
## Transitions:
## Reductions:
-- On error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF TILDE THREAD STRUCT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RESTRICT REGISTER RBRACKET PRETTY_FUNCTION__ PLUS_PLUS PLUS NAMED_TYPE MSATTR MINUS_MINUS MINUS LPAREN LONG LBRACE INT64 INT INLINE IDENT FUNCTION__ FLOAT EXTERN EXCLAM EQ ENUM DOUBLE DECLSPEC CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONST COMMA CHAR BUILTIN_VA_ARG AUTO AT_SPECIFIER AT_NAME AT_EXPR ATTRIBUTE ASM AND_AND AND ALIGNOF
--   reduce production attribute_nocv -> MSATTR

State 288:
## Known stack suffix:
## DECLSPEC
## LR(1) items:
attribute_nocv -> DECLSPEC . paren_attr_list_ne [ error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF TILDE THREAD STRUCT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RESTRICT REGISTER RBRACKET PRETTY_FUNCTION__ PLUS_PLUS PLUS NAMED_TYPE MSATTR MINUS_MINUS MINUS LPAREN LONG LBRACE INT64 INT INLINE IDENT FUNCTION__ FLOAT EXTERN EXCLAM EQ ENUM DOUBLE DECLSPEC CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONST COMMA CHAR BUILTIN_VA_ARG AUTO AT_SPECIFIER AT_NAME AT_EXPR ATTRIBUTE ASM AND_AND AND ALIGNOF ]
## Transitions:
-- On LPAREN shift to state 289
-- On paren_attr_list_ne shift to state 613
## Reductions:

State 289:
## Known stack suffix:
## LPAREN
## LR(1) items:
paren_attr_list_ne -> LPAREN . attr_list_ne RPAREN [ error WHILE VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF TRY TILDE THREAD SWITCH STRUCT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACKET RBRACE PRETTY_FUNCTION__ PLUS_PLUS PLUS NAMED_TYPE MSATTR MSASM MINUS_MINUS MINUS LPAREN LONG LBRACE INT64 INT INLINE IF IDENT GOTO FUNCTION__ FOR FLOAT EXTERN EXCLAM EQ ENUM DOUBLE DO DEFAULT DECLSPEC CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONTINUE CONST COMMA CHAR CASE BUILTIN_VA_ARG BREAK AUTO AT_SPECIFIER AT_NAME AT_EXPR ATTRIBUTE ASM AND_AND AND ALIGNOF ]
paren_attr_list_ne -> LPAREN . error RPAREN [ error WHILE VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF TRY TILDE THREAD SWITCH STRUCT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACKET RBRACE PRETTY_FUNCTION__ PLUS_PLUS PLUS NAMED_TYPE MSATTR MSASM MINUS_MINUS MINUS LPAREN LONG LBRACE INT64 INT INLINE IF IDENT GOTO FUNCTION__ FOR FLOAT EXTERN EXCLAM EQ ENUM DOUBLE DO DEFAULT DECLSPEC CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONTINUE CONST COMMA CHAR CASE BUILTIN_VA_ARG BREAK AUTO AT_SPECIFIER AT_NAME AT_EXPR ATTRIBUTE ASM AND_AND AND ALIGNOF ]
## Transitions:
-- On error shift to state 290
-- On VOLATILE shift to state 73
-- On TILDE shift to state 74
-- On STAR shift to state 75
-- On SIZEOF shift to state 76
-- On PRETTY_FUNCTION__ shift to state 35
-- On PLUS shift to state 292
-- On NAMED_TYPE shift to state 293
-- On MINUS shift to state 294
-- On LPAREN shift to state 295
-- On IDENT shift to state 296
-- On FUNCTION__ shift to state 46
-- On EXCLAM shift to state 299
-- On DEFAULT shift to state 300
-- On CST_STRING shift to state 50
-- On CST_INT shift to state 303
-- On CONST shift to state 306
-- On AND shift to state 307
-- On ALIGNOF shift to state 308
-- On unary_attr shift to state 541
-- On string_list shift to state 106
-- On string_constant shift to state 542
-- On shift_attr shift to state 551
-- On relational_attr shift to state 568
-- On primary_attr shift to state 543
-- On postfix_attr shift to state 544
-- On one_string shift to state 121
-- On multiplicative_attr shift to state 553
-- On logical_or_attr shift to state 578
-- On logical_and_attr shift to state 597
-- On equality_attr shift to state 582
-- On cast_attr shift to state 560
-- On bitwise_xor_attr shift to state 587
-- On bitwise_or_attr shift to state 596
-- On bitwise_and_attr shift to state 595
-- On attr_list_ne shift to state 611
-- On attr shift to state 600
-- On additive_attr shift to state 571
## Reductions:

State 290:
## Known stack suffix:
## LPAREN error
## LR(1) items:
attr_list_ne -> error . COMMA attr_list_ne [ RPAREN ]
paren_attr_list_ne -> LPAREN error . RPAREN [ error WHILE VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF TRY TILDE THREAD SWITCH STRUCT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACKET RBRACE PRETTY_FUNCTION__ PLUS_PLUS PLUS NAMED_TYPE MSATTR MSASM MINUS_MINUS MINUS LPAREN LONG LBRACE INT64 INT INLINE IF IDENT GOTO FUNCTION__ FOR FLOAT EXTERN EXCLAM EQ ENUM DOUBLE DO DEFAULT DECLSPEC CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONTINUE CONST COMMA CHAR CASE BUILTIN_VA_ARG BREAK AUTO AT_SPECIFIER AT_NAME AT_EXPR ATTRIBUTE ASM AND_AND AND ALIGNOF ]
## Transitions:
-- On RPAREN shift to state 291
-- On COMMA shift to state 71
## Reductions:

State 291:
## Known stack suffix:
## LPAREN error RPAREN
## LR(1) items:
paren_attr_list_ne -> LPAREN error RPAREN . [ error WHILE VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF TRY TILDE THREAD SWITCH STRUCT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACKET RBRACE PRETTY_FUNCTION__ PLUS_PLUS PLUS NAMED_TYPE MSATTR MSASM MINUS_MINUS MINUS LPAREN LONG LBRACE INT64 INT INLINE IF IDENT GOTO FUNCTION__ FOR FLOAT EXTERN EXCLAM EQ ENUM DOUBLE DO DEFAULT DECLSPEC CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONTINUE CONST COMMA CHAR CASE BUILTIN_VA_ARG BREAK AUTO AT_SPECIFIER AT_NAME AT_EXPR ATTRIBUTE ASM AND_AND AND ALIGNOF ]
## Transitions:
## Reductions:
-- On error WHILE VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF TRY TILDE THREAD SWITCH STRUCT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACKET RBRACE PRETTY_FUNCTION__ PLUS_PLUS PLUS NAMED_TYPE MSATTR MSASM MINUS_MINUS MINUS LPAREN LONG LBRACE INT64 INT INLINE IF IDENT GOTO FUNCTION__ FOR FLOAT EXTERN EXCLAM EQ ENUM DOUBLE DO DEFAULT DECLSPEC CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONTINUE CONST COMMA CHAR CASE BUILTIN_VA_ARG BREAK AUTO AT_SPECIFIER AT_NAME AT_EXPR ATTRIBUTE ASM AND_AND AND ALIGNOF
--   reduce production paren_attr_list_ne -> LPAREN error RPAREN

State 292:
## Known stack suffix:
## PLUS
## LR(1) items:
unary_attr -> PLUS . cast_attr [ SUP_SUP SUP_EQ SUP STAR SLASH SEMICOLON RPAREN PRAGMA_EOL PLUS PIPE_PIPE PIPE PERCENT MINUS INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ COMMA CIRC AND_AND AND ]
## Transitions:
-- On VOLATILE shift to state 73
-- On TILDE shift to state 74
-- On STAR shift to state 75
-- On SIZEOF shift to state 76
-- On PRETTY_FUNCTION__ shift to state 35
-- On PLUS shift to state 292
-- On NAMED_TYPE shift to state 293
-- On MINUS shift to state 294
-- On LPAREN shift to state 295
-- On IDENT shift to state 296
-- On FUNCTION__ shift to state 46
-- On EXCLAM shift to state 299
-- On DEFAULT shift to state 300
-- On CST_STRING shift to state 50
-- On CST_INT shift to state 303
-- On CONST shift to state 306
-- On AND shift to state 307
-- On ALIGNOF shift to state 308
-- On unary_attr shift to state 541
-- On string_list shift to state 106
-- On string_constant shift to state 542
-- On primary_attr shift to state 543
-- On postfix_attr shift to state 544
-- On one_string shift to state 121
-- On cast_attr shift to state 610
## Reductions:

State 293:
## Known stack suffix:
## NAMED_TYPE
## LR(1) items:
primary_attr -> NAMED_TYPE . [ SUP_SUP SUP_EQ SUP STAR SLASH SEMICOLON RPAREN PRAGMA_EOL PLUS PIPE_PIPE PIPE PERCENT MINUS INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ DOT COMMA CIRC ARROW AND_AND AND ]
## Transitions:
## Reductions:
-- On SUP_SUP SUP_EQ SUP STAR SLASH SEMICOLON RPAREN PRAGMA_EOL PLUS PIPE_PIPE PIPE PERCENT MINUS INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ DOT COMMA CIRC ARROW AND_AND AND
--   reduce production primary_attr -> NAMED_TYPE

State 294:
## Known stack suffix:
## MINUS
## LR(1) items:
unary_attr -> MINUS . cast_attr [ SUP_SUP SUP_EQ SUP STAR SLASH SEMICOLON RPAREN PRAGMA_EOL PLUS PIPE_PIPE PIPE PERCENT MINUS INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ COMMA CIRC AND_AND AND ]
## Transitions:
-- On VOLATILE shift to state 73
-- On TILDE shift to state 74
-- On STAR shift to state 75
-- On SIZEOF shift to state 76
-- On PRETTY_FUNCTION__ shift to state 35
-- On PLUS shift to state 292
-- On NAMED_TYPE shift to state 293
-- On MINUS shift to state 294
-- On LPAREN shift to state 295
-- On IDENT shift to state 296
-- On FUNCTION__ shift to state 46
-- On EXCLAM shift to state 299
-- On DEFAULT shift to state 300
-- On CST_STRING shift to state 50
-- On CST_INT shift to state 303
-- On CONST shift to state 306
-- On AND shift to state 307
-- On ALIGNOF shift to state 308
-- On unary_attr shift to state 541
-- On string_list shift to state 106
-- On string_constant shift to state 542
-- On primary_attr shift to state 543
-- On postfix_attr shift to state 544
-- On one_string shift to state 121
-- On cast_attr shift to state 609
## Reductions:

State 295:
## Known stack suffix:
## LPAREN
## LR(1) items:
primary_attr -> LPAREN . attr RPAREN [ SUP_SUP SUP_EQ SUP STAR SLASH SEMICOLON RPAREN PRAGMA_EOL PLUS PIPE_PIPE PIPE PERCENT MINUS INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ DOT COMMA CIRC ARROW AND_AND AND ]
## Transitions:
-- On VOLATILE shift to state 73
-- On TILDE shift to state 74
-- On STAR shift to state 75
-- On SIZEOF shift to state 76
-- On PRETTY_FUNCTION__ shift to state 35
-- On PLUS shift to state 292
-- On NAMED_TYPE shift to state 293
-- On MINUS shift to state 294
-- On LPAREN shift to state 295
-- On IDENT shift to state 296
-- On FUNCTION__ shift to state 46
-- On EXCLAM shift to state 299
-- On DEFAULT shift to state 300
-- On CST_STRING shift to state 50
-- On CST_INT shift to state 303
-- On CONST shift to state 306
-- On AND shift to state 307
-- On ALIGNOF shift to state 308
-- On unary_attr shift to state 541
-- On string_list shift to state 106
-- On string_constant shift to state 542
-- On shift_attr shift to state 551
-- On relational_attr shift to state 568
-- On primary_attr shift to state 543
-- On postfix_attr shift to state 544
-- On one_string shift to state 121
-- On multiplicative_attr shift to state 553
-- On logical_or_attr shift to state 578
-- On logical_and_attr shift to state 597
-- On equality_attr shift to state 582
-- On cast_attr shift to state 560
-- On bitwise_xor_attr shift to state 587
-- On bitwise_or_attr shift to state 596
-- On bitwise_and_attr shift to state 595
-- On attr shift to state 607
-- On additive_attr shift to state 571
## Reductions:

State 296:
## Known stack suffix:
## IDENT
## LR(1) items:
postfix_attr -> IDENT . LPAREN RPAREN [ SUP_SUP SUP_EQ SUP STAR SLASH SEMICOLON RPAREN PRAGMA_EOL PLUS PIPE_PIPE PIPE PERCENT MINUS INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ DOT COMMA CIRC ARROW AND_AND AND ]
postfix_attr -> IDENT . paren_attr_list_ne [ SUP_SUP SUP_EQ SUP STAR SLASH SEMICOLON RPAREN PRAGMA_EOL PLUS PIPE_PIPE PIPE PERCENT MINUS INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ DOT COMMA CIRC ARROW AND_AND AND ]
primary_attr -> IDENT . [ SUP_SUP SUP_EQ SUP STAR SLASH SEMICOLON RPAREN PRAGMA_EOL PLUS PIPE_PIPE PIPE PERCENT MINUS INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ DOT COMMA CIRC ARROW AND_AND AND ]
primary_attr -> IDENT . IDENT [ SUP_SUP SUP_EQ SUP STAR SLASH SEMICOLON RPAREN PRAGMA_EOL PLUS PIPE_PIPE PIPE PERCENT MINUS INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ DOT COMMA CIRC ARROW AND_AND AND ]
primary_attr -> IDENT . COLON CST_INT [ SUP_SUP SUP_EQ SUP STAR SLASH SEMICOLON RPAREN PRAGMA_EOL PLUS PIPE_PIPE PIPE PERCENT MINUS INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ DOT COMMA CIRC ARROW AND_AND AND ]
## Transitions:
-- On LPAREN shift to state 297
-- On IDENT shift to state 603
-- On COLON shift to state 604
-- On paren_attr_list_ne shift to state 606
## Reductions:
-- On SUP_SUP SUP_EQ SUP STAR SLASH SEMICOLON RPAREN PRAGMA_EOL PLUS PIPE_PIPE PIPE PERCENT MINUS INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ DOT COMMA CIRC ARROW AND_AND AND
--   reduce production primary_attr -> IDENT

State 297:
## Known stack suffix:
## IDENT LPAREN
## LR(1) items:
paren_attr_list_ne -> LPAREN . attr_list_ne RPAREN [ SUP_SUP SUP_EQ SUP STAR SLASH SEMICOLON RPAREN PRAGMA_EOL PLUS PIPE_PIPE PIPE PERCENT MINUS INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ DOT COMMA CIRC ARROW AND_AND AND ]
paren_attr_list_ne -> LPAREN . error RPAREN [ SUP_SUP SUP_EQ SUP STAR SLASH SEMICOLON RPAREN PRAGMA_EOL PLUS PIPE_PIPE PIPE PERCENT MINUS INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ DOT COMMA CIRC ARROW AND_AND AND ]
postfix_attr -> IDENT LPAREN . RPAREN [ SUP_SUP SUP_EQ SUP STAR SLASH SEMICOLON RPAREN PRAGMA_EOL PLUS PIPE_PIPE PIPE PERCENT MINUS INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ DOT COMMA CIRC ARROW AND_AND AND ]
## Transitions:
-- On error shift to state 69
-- On VOLATILE shift to state 73
-- On TILDE shift to state 74
-- On STAR shift to state 75
-- On SIZEOF shift to state 76
-- On RPAREN shift to state 298
-- On PRETTY_FUNCTION__ shift to state 35
-- On PLUS shift to state 292
-- On NAMED_TYPE shift to state 293
-- On MINUS shift to state 294
-- On LPAREN shift to state 295
-- On IDENT shift to state 296
-- On FUNCTION__ shift to state 46
-- On EXCLAM shift to state 299
-- On DEFAULT shift to state 300
-- On CST_STRING shift to state 50
-- On CST_INT shift to state 303
-- On CONST shift to state 306
-- On AND shift to state 307
-- On ALIGNOF shift to state 308
-- On unary_attr shift to state 541
-- On string_list shift to state 106
-- On string_constant shift to state 542
-- On shift_attr shift to state 551
-- On relational_attr shift to state 568
-- On primary_attr shift to state 543
-- On postfix_attr shift to state 544
-- On one_string shift to state 121
-- On multiplicative_attr shift to state 553
-- On logical_or_attr shift to state 578
-- On logical_and_attr shift to state 597
-- On equality_attr shift to state 582
-- On cast_attr shift to state 560
-- On bitwise_xor_attr shift to state 587
-- On bitwise_or_attr shift to state 596
-- On bitwise_and_attr shift to state 595
-- On attr_list_ne shift to state 598
-- On attr shift to state 600
-- On additive_attr shift to state 571
## Reductions:

State 298:
## Known stack suffix:
## IDENT LPAREN RPAREN
## LR(1) items:
postfix_attr -> IDENT LPAREN RPAREN . [ SUP_SUP SUP_EQ SUP STAR SLASH SEMICOLON RPAREN PRAGMA_EOL PLUS PIPE_PIPE PIPE PERCENT MINUS INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ DOT COMMA CIRC ARROW AND_AND AND ]
## Transitions:
## Reductions:
-- On SUP_SUP SUP_EQ SUP STAR SLASH SEMICOLON RPAREN PRAGMA_EOL PLUS PIPE_PIPE PIPE PERCENT MINUS INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ DOT COMMA CIRC ARROW AND_AND AND
--   reduce production postfix_attr -> IDENT LPAREN RPAREN

State 299:
## Known stack suffix:
## EXCLAM
## LR(1) items:
unary_attr -> EXCLAM . cast_attr [ SUP_SUP SUP_EQ SUP STAR SLASH SEMICOLON RPAREN PRAGMA_EOL PLUS PIPE_PIPE PIPE PERCENT MINUS INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ COMMA CIRC AND_AND AND ]
## Transitions:
-- On VOLATILE shift to state 73
-- On TILDE shift to state 74
-- On STAR shift to state 75
-- On SIZEOF shift to state 76
-- On PRETTY_FUNCTION__ shift to state 35
-- On PLUS shift to state 292
-- On NAMED_TYPE shift to state 293
-- On MINUS shift to state 294
-- On LPAREN shift to state 295
-- On IDENT shift to state 296
-- On FUNCTION__ shift to state 46
-- On EXCLAM shift to state 299
-- On DEFAULT shift to state 300
-- On CST_STRING shift to state 50
-- On CST_INT shift to state 303
-- On CONST shift to state 306
-- On AND shift to state 307
-- On ALIGNOF shift to state 308
-- On unary_attr shift to state 541
-- On string_list shift to state 106
-- On string_constant shift to state 542
-- On primary_attr shift to state 543
-- On postfix_attr shift to state 544
-- On one_string shift to state 121
-- On cast_attr shift to state 550
## Reductions:

State 300:
## Known stack suffix:
## DEFAULT
## LR(1) items:
primary_attr -> DEFAULT . COLON CST_INT [ SUP_SUP SUP_EQ SUP STAR SLASH SEMICOLON RPAREN PRAGMA_EOL PLUS PIPE_PIPE PIPE PERCENT MINUS INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ DOT COMMA CIRC ARROW AND_AND AND ]
## Transitions:
-- On COLON shift to state 301
## Reductions:

State 301:
## Known stack suffix:
## DEFAULT COLON
## LR(1) items:
primary_attr -> DEFAULT COLON . CST_INT [ SUP_SUP SUP_EQ SUP STAR SLASH SEMICOLON RPAREN PRAGMA_EOL PLUS PIPE_PIPE PIPE PERCENT MINUS INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ DOT COMMA CIRC ARROW AND_AND AND ]
## Transitions:
-- On CST_INT shift to state 302
## Reductions:

State 302:
## Known stack suffix:
## DEFAULT COLON CST_INT
## LR(1) items:
primary_attr -> DEFAULT COLON CST_INT . [ SUP_SUP SUP_EQ SUP STAR SLASH SEMICOLON RPAREN PRAGMA_EOL PLUS PIPE_PIPE PIPE PERCENT MINUS INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ DOT COMMA CIRC ARROW AND_AND AND ]
## Transitions:
## Reductions:
-- On SUP_SUP SUP_EQ SUP STAR SLASH SEMICOLON RPAREN PRAGMA_EOL PLUS PIPE_PIPE PIPE PERCENT MINUS INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ DOT COMMA CIRC ARROW AND_AND AND
--   reduce production primary_attr -> DEFAULT COLON CST_INT

State 303:
## Known stack suffix:
## CST_INT
## LR(1) items:
primary_attr -> CST_INT . [ SUP_SUP SUP_EQ SUP STAR SLASH SEMICOLON RPAREN PRAGMA_EOL PLUS PIPE_PIPE PIPE PERCENT MINUS INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ DOT COMMA CIRC ARROW AND_AND AND ]
primary_attr -> CST_INT . COLON CST_INT [ SUP_SUP SUP_EQ SUP STAR SLASH SEMICOLON RPAREN PRAGMA_EOL PLUS PIPE_PIPE PIPE PERCENT MINUS INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ DOT COMMA CIRC ARROW AND_AND AND ]
## Transitions:
-- On COLON shift to state 304
## Reductions:
-- On SUP_SUP SUP_EQ SUP STAR SLASH SEMICOLON RPAREN PRAGMA_EOL PLUS PIPE_PIPE PIPE PERCENT MINUS INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ DOT COMMA CIRC ARROW AND_AND AND
--   reduce production primary_attr -> CST_INT

State 304:
## Known stack suffix:
## CST_INT COLON
## LR(1) items:
primary_attr -> CST_INT COLON . CST_INT [ SUP_SUP SUP_EQ SUP STAR SLASH SEMICOLON RPAREN PRAGMA_EOL PLUS PIPE_PIPE PIPE PERCENT MINUS INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ DOT COMMA CIRC ARROW AND_AND AND ]
## Transitions:
-- On CST_INT shift to state 305
## Reductions:

State 305:
## Known stack suffix:
## CST_INT COLON CST_INT
## LR(1) items:
primary_attr -> CST_INT COLON CST_INT . [ SUP_SUP SUP_EQ SUP STAR SLASH SEMICOLON RPAREN PRAGMA_EOL PLUS PIPE_PIPE PIPE PERCENT MINUS INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ DOT COMMA CIRC ARROW AND_AND AND ]
## Transitions:
## Reductions:
-- On SUP_SUP SUP_EQ SUP STAR SLASH SEMICOLON RPAREN PRAGMA_EOL PLUS PIPE_PIPE PIPE PERCENT MINUS INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ DOT COMMA CIRC ARROW AND_AND AND
--   reduce production primary_attr -> CST_INT COLON CST_INT

State 306:
## Known stack suffix:
## CONST
## LR(1) items:
primary_attr -> CONST . [ SUP_SUP SUP_EQ SUP STAR SLASH SEMICOLON RPAREN PRAGMA_EOL PLUS PIPE_PIPE PIPE PERCENT MINUS INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ DOT COMMA CIRC ARROW AND_AND AND ]
## Transitions:
## Reductions:
-- On SUP_SUP SUP_EQ SUP STAR SLASH SEMICOLON RPAREN PRAGMA_EOL PLUS PIPE_PIPE PIPE PERCENT MINUS INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ DOT COMMA CIRC ARROW AND_AND AND
--   reduce production primary_attr -> CONST

State 307:
## Known stack suffix:
## AND
## LR(1) items:
unary_attr -> AND . cast_attr [ SUP_SUP SUP_EQ SUP STAR SLASH SEMICOLON RPAREN PRAGMA_EOL PLUS PIPE_PIPE PIPE PERCENT MINUS INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ COMMA CIRC AND_AND AND ]
## Transitions:
-- On VOLATILE shift to state 73
-- On TILDE shift to state 74
-- On STAR shift to state 75
-- On SIZEOF shift to state 76
-- On PRETTY_FUNCTION__ shift to state 35
-- On PLUS shift to state 292
-- On NAMED_TYPE shift to state 293
-- On MINUS shift to state 294
-- On LPAREN shift to state 295
-- On IDENT shift to state 296
-- On FUNCTION__ shift to state 46
-- On EXCLAM shift to state 299
-- On DEFAULT shift to state 300
-- On CST_STRING shift to state 50
-- On CST_INT shift to state 303
-- On CONST shift to state 306
-- On AND shift to state 307
-- On ALIGNOF shift to state 308
-- On unary_attr shift to state 541
-- On string_list shift to state 106
-- On string_constant shift to state 542
-- On primary_attr shift to state 543
-- On postfix_attr shift to state 544
-- On one_string shift to state 121
-- On cast_attr shift to state 549
## Reductions:

State 308:
## Known stack suffix:
## ALIGNOF
## LR(1) items:
unary_attr -> ALIGNOF . unary_expression [ SUP_SUP SUP_EQ SUP STAR SLASH SEMICOLON RPAREN PRAGMA_EOL PLUS PIPE_PIPE PIPE PERCENT MINUS INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ COMMA CIRC AND_AND AND ]
unary_attr -> ALIGNOF . LPAREN type_name RPAREN [ SUP_SUP SUP_EQ SUP STAR SLASH SEMICOLON RPAREN PRAGMA_EOL PLUS PIPE_PIPE PIPE PERCENT MINUS INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ COMMA CIRC AND_AND AND ]
## Transitions:
-- On TILDE shift to state 32
-- On STAR shift to state 33
-- On SIZEOF shift to state 34
-- On PRETTY_FUNCTION__ shift to state 35
-- On PLUS_PLUS shift to state 36
-- On PLUS shift to state 37
-- On MINUS_MINUS shift to state 38
-- On MINUS shift to state 39
-- On LPAREN shift to state 309
-- On IDENT shift to state 45
-- On FUNCTION__ shift to state 46
-- On EXCLAM shift to state 47
-- On CST_WSTRING shift to state 48
-- On CST_WCHAR shift to state 49
-- On CST_STRING shift to state 50
-- On CST_INT shift to state 51
-- On CST_FLOAT shift to state 52
-- On CST_CHAR shift to state 53
-- On BUILTIN_VA_ARG shift to state 54
-- On AT_EXPR shift to state 56
-- On AND_AND shift to state 60
-- On AND shift to state 62
-- On ALIGNOF shift to state 63
-- On wstring_list shift to state 98
-- On unary_expression shift to state 540
-- On string_list shift to state 106
-- On string_constant shift to state 108
-- On primary_expression shift to state 111
-- On postfix_expression shift to state 112
-- On paren_comma_expression shift to state 120
-- On one_string shift to state 121
-- On constant shift to state 124
## Reductions:

State 309:
## Known stack suffix:
## ALIGNOF LPAREN
## LR(1) items:
paren_comma_expression -> LPAREN . comma_expression RPAREN [ SUP_SUP SUP_EQ SUP STAR SLASH SEMICOLON RPAREN PRAGMA_EOL PLUS_PLUS PLUS PIPE_PIPE PIPE PERCENT MINUS_MINUS MINUS LPAREN LBRACKET INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ DOT COMMA CIRC ARROW AND_AND AND ]
paren_comma_expression -> LPAREN . error RPAREN [ SUP_SUP SUP_EQ SUP STAR SLASH SEMICOLON RPAREN PRAGMA_EOL PLUS_PLUS PLUS PIPE_PIPE PIPE PERCENT MINUS_MINUS MINUS LPAREN LBRACKET INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ DOT COMMA CIRC ARROW AND_AND AND ]
postfix_expression -> LPAREN . type_name RPAREN LBRACE initialiser_list_opt RBRACE [ SUP_SUP SUP_EQ SUP STAR SLASH SEMICOLON RPAREN PRAGMA_EOL PLUS_PLUS PLUS PIPE_PIPE PIPE PERCENT MINUS_MINUS MINUS LPAREN LBRACKET INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ DOT COMMA CIRC ARROW AND_AND AND ]
primary_expression -> LPAREN . block RPAREN [ SUP_SUP SUP_EQ SUP STAR SLASH SEMICOLON RPAREN PRAGMA_EOL PLUS_PLUS PLUS PIPE_PIPE PIPE PERCENT MINUS_MINUS MINUS LPAREN LBRACKET INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ DOT COMMA CIRC ARROW AND_AND AND ]
unary_attr -> ALIGNOF LPAREN . type_name RPAREN [ SUP_SUP SUP_EQ SUP STAR SLASH SEMICOLON RPAREN PRAGMA_EOL PLUS PIPE_PIPE PIPE PERCENT MINUS INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ COMMA CIRC AND_AND AND ]
## Transitions:
-- On error shift to state 41
-- On VOLATILE shift to state 1
-- On VOID shift to state 2
-- On UNSIGNED shift to state 3
-- On UNION shift to state 4
-- On TYPEOF shift to state 9
-- On TYPEDEF shift to state 11
-- On TILDE shift to state 32
-- On THREAD shift to state 12
-- On STRUCT shift to state 13
-- On STATIC shift to state 15
-- On STAR shift to state 33
-- On SIZEOF shift to state 34
-- On SIGNED shift to state 16
-- On SHORT shift to state 17
-- On RESTRICT shift to state 18
-- On REGISTER shift to state 19
-- On PRETTY_FUNCTION__ shift to state 35
-- On PLUS_PLUS shift to state 36
-- On PLUS shift to state 37
-- On NAMED_TYPE shift to state 20
-- On MSATTR shift to state 21
-- On MINUS_MINUS shift to state 38
-- On MINUS shift to state 39
-- On LPAREN shift to state 40
-- On LONG shift to state 22
-- On LBRACE shift to state 65
-- On INT64 shift to state 23
-- On INT shift to state 24
-- On INLINE shift to state 25
-- On IDENT shift to state 45
-- On FUNCTION__ shift to state 46
-- On FLOAT shift to state 26
-- On EXTERN shift to state 27
-- On EXCLAM shift to state 47
-- On ENUM shift to state 28
-- On DOUBLE shift to state 66
-- On DECLSPEC shift to state 67
-- On CST_WSTRING shift to state 48
-- On CST_WCHAR shift to state 49
-- On CST_STRING shift to state 50
-- On CST_INT shift to state 51
-- On CST_FLOAT shift to state 52
-- On CST_CHAR shift to state 53
-- On CONST shift to state 78
-- On CHAR shift to state 79
-- On BUILTIN_VA_ARG shift to state 54
-- On AUTO shift to state 80
-- On AT_SPECIFIER shift to state 81
-- On AT_EXPR shift to state 56
-- On ATTRIBUTE shift to state 85
-- On AND_AND shift to state 60
-- On AND shift to state 62
-- On ALIGNOF shift to state 63
-- On wstring_list shift to state 98
-- On unary_expression shift to state 101
-- On type_spec shift to state 89
-- On type_name shift to state 310
-- On string_list shift to state 106
-- On string_constant shift to state 108
-- On shift_expression shift to state 109
-- On relational_expression shift to state 116
-- On primary_expression shift to state 111
-- On postfix_expression shift to state 112
-- On paren_comma_expression shift to state 120
-- On one_string shift to state 121
-- On multiplicative_expression shift to state 122
-- On logical_or_expression shift to state 143
-- On logical_and_expression shift to state 147
-- On expression shift to state 165
-- On equality_expression shift to state 149
-- On decl_spec_list shift to state 245
-- On cvspec shift to state 92
-- On constant shift to state 124
-- On conditional_expression shift to state 167
-- On comma_expression shift to state 312
-- On cast_expression shift to state 169
-- On block_begin shift to state 314
-- On block shift to state 538
-- On bitwise_xor_expression shift to state 154
-- On bitwise_or_expression shift to state 164
-- On bitwise_and_expression shift to state 162
-- On attribute_nocv shift to state 95
-- On assignment_expression shift to state 192
-- On additive_expression shift to state 136
## Reductions:

State 310:
## Known stack suffix:
## ALIGNOF LPAREN type_name
## LR(1) items:
postfix_expression -> LPAREN type_name . RPAREN LBRACE initialiser_list_opt RBRACE [ SUP_SUP SUP_EQ SUP STAR SLASH SEMICOLON RPAREN PRAGMA_EOL PLUS_PLUS PLUS PIPE_PIPE PIPE PERCENT MINUS_MINUS MINUS LPAREN LBRACKET INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ DOT COMMA CIRC ARROW AND_AND AND ]
unary_attr -> ALIGNOF LPAREN type_name . RPAREN [ SUP_SUP SUP_EQ SUP STAR SLASH SEMICOLON RPAREN PRAGMA_EOL PLUS PIPE_PIPE PIPE PERCENT MINUS INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ COMMA CIRC AND_AND AND ]
## Transitions:
-- On RPAREN shift to state 311
## Reductions:

State 311:
## Known stack suffix:
## ALIGNOF LPAREN type_name RPAREN
## LR(1) items:
postfix_expression -> LPAREN type_name RPAREN . LBRACE initialiser_list_opt RBRACE [ SUP_SUP SUP_EQ SUP STAR SLASH SEMICOLON RPAREN PRAGMA_EOL PLUS_PLUS PLUS PIPE_PIPE PIPE PERCENT MINUS_MINUS MINUS LPAREN LBRACKET INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ DOT COMMA CIRC ARROW AND_AND AND ]
unary_attr -> ALIGNOF LPAREN type_name RPAREN . [ SUP_SUP SUP_EQ SUP STAR SLASH SEMICOLON RPAREN PRAGMA_EOL PLUS PIPE_PIPE PIPE PERCENT MINUS INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ COMMA CIRC AND_AND AND ]
## Transitions:
-- On LBRACE shift to state 104
## Reductions:
-- On SUP_SUP SUP_EQ SUP STAR SLASH SEMICOLON RPAREN PRAGMA_EOL PLUS PIPE_PIPE PIPE PERCENT MINUS INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ COMMA CIRC AND_AND AND
--   reduce production unary_attr -> ALIGNOF LPAREN type_name RPAREN

State 312:
## Known stack suffix:
## LPAREN comma_expression
## LR(1) items:
paren_comma_expression -> LPAREN comma_expression . RPAREN [ SUP_SUP_EQ SUP_SUP SUP_EQ SUP STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACKET RBRACE QUEST PRAGMA_EOL PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_EQ MINUS LPAREN LBRACKET INF_INF_EQ INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ EQ ELLIPSIS DOT COMMA COLON CIRC_EQ CIRC ARROW AND_EQ AND_AND AND ]
## Transitions:
-- On RPAREN shift to state 313
## Reductions:

State 313:
## Known stack suffix:
## LPAREN comma_expression RPAREN
## LR(1) items:
paren_comma_expression -> LPAREN comma_expression RPAREN . [ SUP_SUP_EQ SUP_SUP SUP_EQ SUP STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACKET RBRACE QUEST PRAGMA_EOL PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_EQ MINUS LPAREN LBRACKET INF_INF_EQ INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ EQ ELLIPSIS DOT COMMA COLON CIRC_EQ CIRC ARROW AND_EQ AND_AND AND ]
## Transitions:
## Reductions:
-- On SUP_SUP_EQ SUP_SUP SUP_EQ SUP STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACKET RBRACE QUEST PRAGMA_EOL PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_EQ MINUS LPAREN LBRACKET INF_INF_EQ INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ EQ ELLIPSIS DOT COMMA COLON CIRC_EQ CIRC ARROW AND_EQ AND_AND AND
--   reduce production paren_comma_expression -> LPAREN comma_expression RPAREN

State 314:
## Known stack suffix:
## block_begin
## LR(1) items:
block -> block_begin . local_labels block_attrs block_element_list RBRACE [ WHILE RPAREN RBRACE FINALLY EXCEPT ELSE ]
## Transitions:
-- On LABEL__ shift to state 315
-- On local_labels shift to state 322
## Reductions:
-- On error WHILE VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF TRY TILDE THREAD SWITCH STRUCT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRETTY_FUNCTION__ PLUS_PLUS PLUS NAMED_TYPE MSATTR MSASM MINUS_MINUS MINUS LPAREN LONG LBRACE INT64 INT INLINE IF IDENT GOTO FUNCTION__ FOR FLOAT EXTERN EXCLAM ENUM DOUBLE DO DEFAULT DECLSPEC CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONTINUE CONST CHAR CASE BUILTIN_VA_ARG BREAK BLOCKATTRIBUTE AUTO AT_SPECIFIER AT_EXPR ATTRIBUTE ASM AND_AND AND ALIGNOF
--   reduce production local_labels ->

State 315:
## Known stack suffix:
## LABEL__
## LR(1) items:
local_labels -> LABEL__ . local_label_names SEMICOLON local_labels [ error WHILE VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF TRY TILDE THREAD SWITCH STRUCT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRETTY_FUNCTION__ PLUS_PLUS PLUS NAMED_TYPE MSATTR MSASM MINUS_MINUS MINUS LPAREN LONG LBRACE INT64 INT INLINE IF IDENT GOTO FUNCTION__ FOR FLOAT EXTERN EXCLAM ENUM DOUBLE DO DEFAULT DECLSPEC CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONTINUE CONST CHAR CASE BUILTIN_VA_ARG BREAK BLOCKATTRIBUTE AUTO AT_SPECIFIER AT_EXPR ATTRIBUTE ASM AND_AND AND ALIGNOF ]
## Transitions:
-- On IDENT shift to state 316
-- On local_label_names shift to state 319
## Reductions:

State 316:
## Known stack suffix:
## IDENT
## LR(1) items:
local_label_names -> IDENT . [ SEMICOLON ]
local_label_names -> IDENT . COMMA local_label_names [ SEMICOLON ]
## Transitions:
-- On COMMA shift to state 317
## Reductions:
-- On SEMICOLON
--   reduce production local_label_names -> IDENT

State 317:
## Known stack suffix:
## IDENT COMMA
## LR(1) items:
local_label_names -> IDENT COMMA . local_label_names [ SEMICOLON ]
## Transitions:
-- On IDENT shift to state 316
-- On local_label_names shift to state 318
## Reductions:

State 318:
## Known stack suffix:
## IDENT COMMA local_label_names
## LR(1) items:
local_label_names -> IDENT COMMA local_label_names . [ SEMICOLON ]
## Transitions:
## Reductions:
-- On SEMICOLON
--   reduce production local_label_names -> IDENT COMMA local_label_names

State 319:
## Known stack suffix:
## LABEL__ local_label_names
## LR(1) items:
local_labels -> LABEL__ local_label_names . SEMICOLON local_labels [ error WHILE VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF TRY TILDE THREAD SWITCH STRUCT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRETTY_FUNCTION__ PLUS_PLUS PLUS NAMED_TYPE MSATTR MSASM MINUS_MINUS MINUS LPAREN LONG LBRACE INT64 INT INLINE IF IDENT GOTO FUNCTION__ FOR FLOAT EXTERN EXCLAM ENUM DOUBLE DO DEFAULT DECLSPEC CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONTINUE CONST CHAR CASE BUILTIN_VA_ARG BREAK BLOCKATTRIBUTE AUTO AT_SPECIFIER AT_EXPR ATTRIBUTE ASM AND_AND AND ALIGNOF ]
## Transitions:
-- On SEMICOLON shift to state 320
## Reductions:

State 320:
## Known stack suffix:
## LABEL__ local_label_names SEMICOLON
## LR(1) items:
local_labels -> LABEL__ local_label_names SEMICOLON . local_labels [ error WHILE VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF TRY TILDE THREAD SWITCH STRUCT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRETTY_FUNCTION__ PLUS_PLUS PLUS NAMED_TYPE MSATTR MSASM MINUS_MINUS MINUS LPAREN LONG LBRACE INT64 INT INLINE IF IDENT GOTO FUNCTION__ FOR FLOAT EXTERN EXCLAM ENUM DOUBLE DO DEFAULT DECLSPEC CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONTINUE CONST CHAR CASE BUILTIN_VA_ARG BREAK BLOCKATTRIBUTE AUTO AT_SPECIFIER AT_EXPR ATTRIBUTE ASM AND_AND AND ALIGNOF ]
## Transitions:
-- On LABEL__ shift to state 315
-- On local_labels shift to state 321
## Reductions:
-- On error WHILE VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF TRY TILDE THREAD SWITCH STRUCT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRETTY_FUNCTION__ PLUS_PLUS PLUS NAMED_TYPE MSATTR MSASM MINUS_MINUS MINUS LPAREN LONG LBRACE INT64 INT INLINE IF IDENT GOTO FUNCTION__ FOR FLOAT EXTERN EXCLAM ENUM DOUBLE DO DEFAULT DECLSPEC CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONTINUE CONST CHAR CASE BUILTIN_VA_ARG BREAK BLOCKATTRIBUTE AUTO AT_SPECIFIER AT_EXPR ATTRIBUTE ASM AND_AND AND ALIGNOF
--   reduce production local_labels ->

State 321:
## Known stack suffix:
## LABEL__ local_label_names SEMICOLON local_labels
## LR(1) items:
local_labels -> LABEL__ local_label_names SEMICOLON local_labels . [ error WHILE VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF TRY TILDE THREAD SWITCH STRUCT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRETTY_FUNCTION__ PLUS_PLUS PLUS NAMED_TYPE MSATTR MSASM MINUS_MINUS MINUS LPAREN LONG LBRACE INT64 INT INLINE IF IDENT GOTO FUNCTION__ FOR FLOAT EXTERN EXCLAM ENUM DOUBLE DO DEFAULT DECLSPEC CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONTINUE CONST CHAR CASE BUILTIN_VA_ARG BREAK BLOCKATTRIBUTE AUTO AT_SPECIFIER AT_EXPR ATTRIBUTE ASM AND_AND AND ALIGNOF ]
## Transitions:
## Reductions:
-- On error WHILE VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF TRY TILDE THREAD SWITCH STRUCT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRETTY_FUNCTION__ PLUS_PLUS PLUS NAMED_TYPE MSATTR MSASM MINUS_MINUS MINUS LPAREN LONG LBRACE INT64 INT INLINE IF IDENT GOTO FUNCTION__ FOR FLOAT EXTERN EXCLAM ENUM DOUBLE DO DEFAULT DECLSPEC CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONTINUE CONST CHAR CASE BUILTIN_VA_ARG BREAK BLOCKATTRIBUTE AUTO AT_SPECIFIER AT_EXPR ATTRIBUTE ASM AND_AND AND ALIGNOF
--   reduce production local_labels -> LABEL__ local_label_names SEMICOLON local_labels

State 322:
## Known stack suffix:
## block_begin local_labels
## LR(1) items:
block -> block_begin local_labels . block_attrs block_element_list RBRACE [ WHILE RPAREN RBRACE FINALLY EXCEPT ELSE ]
## Transitions:
-- On BLOCKATTRIBUTE shift to state 323
-- On block_attrs shift to state 325
## Reductions:
-- On error WHILE VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF TRY TILDE THREAD SWITCH STRUCT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRETTY_FUNCTION__ PLUS_PLUS PLUS NAMED_TYPE MSATTR MSASM MINUS_MINUS MINUS LPAREN LONG LBRACE INT64 INT INLINE IF IDENT GOTO FUNCTION__ FOR FLOAT EXTERN EXCLAM ENUM DOUBLE DO DEFAULT DECLSPEC CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONTINUE CONST CHAR CASE BUILTIN_VA_ARG BREAK AUTO AT_SPECIFIER AT_EXPR ATTRIBUTE ASM AND_AND AND ALIGNOF
--   reduce production block_attrs ->

State 323:
## Known stack suffix:
## BLOCKATTRIBUTE
## LR(1) items:
block_attrs -> BLOCKATTRIBUTE . paren_attr_list_ne [ error WHILE VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF TRY TILDE THREAD SWITCH STRUCT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRETTY_FUNCTION__ PLUS_PLUS PLUS NAMED_TYPE MSATTR MSASM MINUS_MINUS MINUS LPAREN LONG LBRACE INT64 INT INLINE IF IDENT GOTO FUNCTION__ FOR FLOAT EXTERN EXCLAM ENUM DOUBLE DO DEFAULT DECLSPEC CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONTINUE CONST CHAR CASE BUILTIN_VA_ARG BREAK AUTO AT_SPECIFIER AT_EXPR ATTRIBUTE ASM AND_AND AND ALIGNOF ]
## Transitions:
-- On LPAREN shift to state 289
-- On paren_attr_list_ne shift to state 324
## Reductions:

State 324:
## Known stack suffix:
## BLOCKATTRIBUTE paren_attr_list_ne
## LR(1) items:
block_attrs -> BLOCKATTRIBUTE paren_attr_list_ne . [ error WHILE VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF TRY TILDE THREAD SWITCH STRUCT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRETTY_FUNCTION__ PLUS_PLUS PLUS NAMED_TYPE MSATTR MSASM MINUS_MINUS MINUS LPAREN LONG LBRACE INT64 INT INLINE IF IDENT GOTO FUNCTION__ FOR FLOAT EXTERN EXCLAM ENUM DOUBLE DO DEFAULT DECLSPEC CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONTINUE CONST CHAR CASE BUILTIN_VA_ARG BREAK AUTO AT_SPECIFIER AT_EXPR ATTRIBUTE ASM AND_AND AND ALIGNOF ]
## Transitions:
## Reductions:
-- On error WHILE VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF TRY TILDE THREAD SWITCH STRUCT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRETTY_FUNCTION__ PLUS_PLUS PLUS NAMED_TYPE MSATTR MSASM MINUS_MINUS MINUS LPAREN LONG LBRACE INT64 INT INLINE IF IDENT GOTO FUNCTION__ FOR FLOAT EXTERN EXCLAM ENUM DOUBLE DO DEFAULT DECLSPEC CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONTINUE CONST CHAR CASE BUILTIN_VA_ARG BREAK AUTO AT_SPECIFIER AT_EXPR ATTRIBUTE ASM AND_AND AND ALIGNOF
--   reduce production block_attrs -> BLOCKATTRIBUTE paren_attr_list_ne

State 325:
## Known stack suffix:
## block_begin local_labels block_attrs
## LR(1) items:
block -> block_begin local_labels block_attrs . block_element_list RBRACE [ WHILE RPAREN RBRACE FINALLY EXCEPT ELSE ]
## Transitions:
-- On error shift to state 326
-- On WHILE shift to state 330
-- On VOLATILE shift to state 1
-- On VOID shift to state 2
-- On UNSIGNED shift to state 3
-- On UNION shift to state 4
-- On TYPEOF shift to state 9
-- On TYPEDEF shift to state 11
-- On TRY shift to state 337
-- On TILDE shift to state 32
-- On THREAD shift to state 12
-- On SWITCH shift to state 348
-- On STRUCT shift to state 13
-- On STATIC shift to state 15
-- On STAR shift to state 33
-- On SIZEOF shift to state 34
-- On SIGNED shift to state 16
-- On SHORT shift to state 17
-- On SEMICOLON shift to state 350
-- On RETURN shift to state 351
-- On RESTRICT shift to state 18
-- On REGISTER shift to state 19
-- On PRETTY_FUNCTION__ shift to state 35
-- On PLUS_PLUS shift to state 36
-- On PLUS shift to state 37
-- On NAMED_TYPE shift to state 20
-- On MSATTR shift to state 21
-- On MSASM shift to state 355
-- On MINUS_MINUS shift to state 38
-- On MINUS shift to state 39
-- On LPAREN shift to state 40
-- On LONG shift to state 22
-- On LBRACE shift to state 65
-- On INT64 shift to state 23
-- On INT shift to state 24
-- On INLINE shift to state 25
-- On IF shift to state 356
-- On IDENT shift to state 523
-- On GOTO shift to state 360
-- On FUNCTION__ shift to state 46
-- On FOR shift to state 366
-- On FLOAT shift to state 26
-- On EXTERN shift to state 27
-- On EXCLAM shift to state 47
-- On ENUM shift to state 28
-- On DOUBLE shift to state 66
-- On DO shift to state 375
-- On DEFAULT shift to state 495
-- On DECLSPEC shift to state 67
-- On CST_WSTRING shift to state 48
-- On CST_WCHAR shift to state 49
-- On CST_STRING shift to state 50
-- On CST_INT shift to state 51
-- On CST_FLOAT shift to state 52
-- On CST_CHAR shift to state 53
-- On CONTINUE shift to state 497
-- On CONST shift to state 78
-- On CHAR shift to state 79
-- On CASE shift to state 499
-- On BUILTIN_VA_ARG shift to state 54
-- On BREAK shift to state 505
-- On AUTO shift to state 80
-- On AT_SPECIFIER shift to state 81
-- On AT_EXPR shift to state 56
-- On ATTRIBUTE shift to state 85
-- On ASM shift to state 507
-- On AND_AND shift to state 60
-- On AND shift to state 62
-- On ALIGNOF shift to state 63
-- On wstring_list shift to state 98
-- On unary_expression shift to state 101
-- On type_spec shift to state 89
-- On string_list shift to state 106
-- On string_constant shift to state 108
-- On statement shift to state 525
-- On shift_expression shift to state 109
-- On relational_expression shift to state 116
-- On primary_expression shift to state 111
-- On postfix_expression shift to state 112
-- On paren_comma_expression shift to state 120
-- On one_string shift to state 121
-- On multiplicative_expression shift to state 122
-- On logical_or_expression shift to state 143
-- On logical_and_expression shift to state 147
-- On expression shift to state 165
-- On equality_expression shift to state 149
-- On declaration shift to state 526
-- On decl_spec_list shift to state 472
-- On cvspec shift to state 92
-- On constant shift to state 124
-- On conditional_expression shift to state 167
-- On comma_expression shift to state 515
-- On cast_expression shift to state 169
-- On block_element_list shift to state 536
-- On block_begin shift to state 345
-- On block shift to state 517
-- On bitwise_xor_expression shift to state 154
-- On bitwise_or_expression shift to state 164
-- On bitwise_and_expression shift to state 162
-- On attribute_nocv shift to state 95
-- On assignment_expression shift to state 192
-- On additive_expression shift to state 136
## Reductions:
-- On RBRACE
--   reduce production block_element_list ->

State 326:
## Known stack suffix:
## error
## LR(1) items:
block -> error . location RBRACE [ error WHILE VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF TRY TILDE THREAD SWITCH STRUCT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRETTY_FUNCTION__ PLUS_PLUS PLUS NAMED_TYPE MSATTR MSASM MINUS_MINUS MINUS LPAREN LONG LBRACE INT64 INT INLINE IF IDENT GOTO FUNCTION__ FOR FLOAT EXTERN EXCLAM ENUM ELSE DOUBLE DO DEFAULT DECLSPEC CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONTINUE CONST CHAR CASE BUILTIN_VA_ARG BREAK AUTO AT_SPECIFIER AT_EXPR ATTRIBUTE ASM AND_AND AND ALIGNOF ]
comma_expression -> error . COMMA comma_expression [ SEMICOLON ]
statement -> error . location SEMICOLON [ error WHILE VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF TRY TILDE THREAD SWITCH STRUCT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRETTY_FUNCTION__ PLUS_PLUS PLUS NAMED_TYPE MSATTR MSASM MINUS_MINUS MINUS LPAREN LONG LBRACE INT64 INT INLINE IF IDENT GOTO FUNCTION__ FOR FLOAT EXTERN EXCLAM ENUM ELSE DOUBLE DO DEFAULT DECLSPEC CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONTINUE CONST CHAR CASE BUILTIN_VA_ARG BREAK AUTO AT_SPECIFIER AT_EXPR ATTRIBUTE ASM AND_AND AND ALIGNOF ]
## Transitions:
-- On COMMA shift to state 43
-- On location shift to state 327
## Reductions:
-- On SEMICOLON RBRACE
--   reduce production location ->

State 327:
## Known stack suffix:
## error location
## LR(1) items:
block -> error location . RBRACE [ error WHILE VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF TRY TILDE THREAD SWITCH STRUCT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRETTY_FUNCTION__ PLUS_PLUS PLUS NAMED_TYPE MSATTR MSASM MINUS_MINUS MINUS LPAREN LONG LBRACE INT64 INT INLINE IF IDENT GOTO FUNCTION__ FOR FLOAT EXTERN EXCLAM ENUM ELSE DOUBLE DO DEFAULT DECLSPEC CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONTINUE CONST CHAR CASE BUILTIN_VA_ARG BREAK AUTO AT_SPECIFIER AT_EXPR ATTRIBUTE ASM AND_AND AND ALIGNOF ]
statement -> error location . SEMICOLON [ error WHILE VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF TRY TILDE THREAD SWITCH STRUCT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRETTY_FUNCTION__ PLUS_PLUS PLUS NAMED_TYPE MSATTR MSASM MINUS_MINUS MINUS LPAREN LONG LBRACE INT64 INT INLINE IF IDENT GOTO FUNCTION__ FOR FLOAT EXTERN EXCLAM ENUM ELSE DOUBLE DO DEFAULT DECLSPEC CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONTINUE CONST CHAR CASE BUILTIN_VA_ARG BREAK AUTO AT_SPECIFIER AT_EXPR ATTRIBUTE ASM AND_AND AND ALIGNOF ]
## Transitions:
-- On SEMICOLON shift to state 328
-- On RBRACE shift to state 329
## Reductions:

State 328:
## Known stack suffix:
## error location SEMICOLON
## LR(1) items:
statement -> error location SEMICOLON . [ error WHILE VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF TRY TILDE THREAD SWITCH STRUCT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRETTY_FUNCTION__ PLUS_PLUS PLUS NAMED_TYPE MSATTR MSASM MINUS_MINUS MINUS LPAREN LONG LBRACE INT64 INT INLINE IF IDENT GOTO FUNCTION__ FOR FLOAT EXTERN EXCLAM ENUM ELSE DOUBLE DO DEFAULT DECLSPEC CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONTINUE CONST CHAR CASE BUILTIN_VA_ARG BREAK AUTO AT_SPECIFIER AT_EXPR ATTRIBUTE ASM AND_AND AND ALIGNOF ]
## Transitions:
## Reductions:
-- On error WHILE VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF TRY TILDE THREAD SWITCH STRUCT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRETTY_FUNCTION__ PLUS_PLUS PLUS NAMED_TYPE MSATTR MSASM MINUS_MINUS MINUS LPAREN LONG LBRACE INT64 INT INLINE IF IDENT GOTO FUNCTION__ FOR FLOAT EXTERN EXCLAM ENUM ELSE DOUBLE DO DEFAULT DECLSPEC CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONTINUE CONST CHAR CASE BUILTIN_VA_ARG BREAK AUTO AT_SPECIFIER AT_EXPR ATTRIBUTE ASM AND_AND AND ALIGNOF
--   reduce production statement -> error location SEMICOLON

State 329:
## Known stack suffix:
## error location RBRACE
## LR(1) items:
block -> error location RBRACE . [ error WHILE VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF TRY TILDE THREAD SWITCH STRUCT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRETTY_FUNCTION__ PRAGMA_LINE PRAGMA PLUS_PLUS PLUS NAMED_TYPE MSATTR MSASM MINUS_MINUS MINUS LPAREN LONG LBRACE INT64 INT INLINE IF IDENT GOTO FUNCTION__ FOR FLOAT EXTERN EXCLAM EOF ENUM ELSE DOUBLE DO DEFAULT DECLSPEC CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONTINUE CONST CHAR CASE BUILTIN_VA_ARG BREAK AUTO AT_TRANSFORMEXPR AT_TRANSFORM AT_SPECIFIER AT_EXPR ATTRIBUTE ASM AND_AND AND ALIGNOF # ]
## Transitions:
## Reductions:
-- On error WHILE VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF TRY TILDE THREAD SWITCH STRUCT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRETTY_FUNCTION__ PRAGMA_LINE PRAGMA PLUS_PLUS PLUS NAMED_TYPE MSATTR MSASM MINUS_MINUS MINUS LPAREN LONG LBRACE INT64 INT INLINE IF IDENT GOTO FUNCTION__ FOR FLOAT EXTERN EXCLAM EOF ENUM ELSE DOUBLE DO DEFAULT DECLSPEC CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONTINUE CONST CHAR CASE BUILTIN_VA_ARG BREAK AUTO AT_TRANSFORMEXPR AT_TRANSFORM AT_SPECIFIER AT_EXPR ATTRIBUTE ASM AND_AND AND ALIGNOF #
--   reduce production block -> error location RBRACE
** End-of-stream conflict on error WHILE VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF TRY TILDE THREAD SWITCH STRUCT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRETTY_FUNCTION__ PRAGMA_LINE PRAGMA PLUS_PLUS PLUS NAMED_TYPE MSATTR MSASM MINUS_MINUS MINUS LPAREN LONG LBRACE INT64 INT INLINE IF IDENT GOTO FUNCTION__ FOR FLOAT EXTERN EXCLAM EOF ENUM ELSE DOUBLE DO DEFAULT DECLSPEC CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONTINUE CONST CHAR CASE BUILTIN_VA_ARG BREAK AUTO AT_TRANSFORMEXPR AT_TRANSFORM AT_SPECIFIER AT_EXPR ATTRIBUTE ASM AND_AND AND ALIGNOF
**   There is a tension between
**   (1) reducing production block -> error location RBRACE
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 330:
## Known stack suffix:
## WHILE
## LR(1) items:
statement -> WHILE . paren_comma_expression statement [ error WHILE VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF TRY TILDE THREAD SWITCH STRUCT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRETTY_FUNCTION__ PLUS_PLUS PLUS NAMED_TYPE MSATTR MSASM MINUS_MINUS MINUS LPAREN LONG LBRACE INT64 INT INLINE IF IDENT GOTO FUNCTION__ FOR FLOAT EXTERN EXCLAM ENUM ELSE DOUBLE DO DEFAULT DECLSPEC CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONTINUE CONST CHAR CASE BUILTIN_VA_ARG BREAK AUTO AT_SPECIFIER AT_EXPR ATTRIBUTE ASM AND_AND AND ALIGNOF ]
## Transitions:
-- On LPAREN shift to state 331
-- On paren_comma_expression shift to state 336
## Reductions:

State 331:
## Known stack suffix:
## LPAREN
## LR(1) items:
paren_comma_expression -> LPAREN . comma_expression RPAREN [ error WHILE TRY TILDE SWITCH STAR SIZEOF SEMICOLON RETURN PRETTY_FUNCTION__ PLUS_PLUS PLUS MSASM MINUS_MINUS MINUS LPAREN LBRACE IF IDENT GOTO FUNCTION__ FOR EXCLAM DO DEFAULT CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONTINUE CASE BUILTIN_VA_ARG BREAK AT_EXPR ASM AND_AND AND ALIGNOF ]
paren_comma_expression -> LPAREN . error RPAREN [ error WHILE TRY TILDE SWITCH STAR SIZEOF SEMICOLON RETURN PRETTY_FUNCTION__ PLUS_PLUS PLUS MSASM MINUS_MINUS MINUS LPAREN LBRACE IF IDENT GOTO FUNCTION__ FOR EXCLAM DO DEFAULT CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONTINUE CASE BUILTIN_VA_ARG BREAK AT_EXPR ASM AND_AND AND ALIGNOF ]
## Transitions:
-- On error shift to state 332
-- On TILDE shift to state 32
-- On STAR shift to state 33
-- On SIZEOF shift to state 34
-- On PRETTY_FUNCTION__ shift to state 35
-- On PLUS_PLUS shift to state 36
-- On PLUS shift to state 37
-- On MINUS_MINUS shift to state 38
-- On MINUS shift to state 39
-- On LPAREN shift to state 40
-- On IDENT shift to state 45
-- On FUNCTION__ shift to state 46
-- On EXCLAM shift to state 47
-- On CST_WSTRING shift to state 48
-- On CST_WCHAR shift to state 49
-- On CST_STRING shift to state 50
-- On CST_INT shift to state 51
-- On CST_FLOAT shift to state 52
-- On CST_CHAR shift to state 53
-- On BUILTIN_VA_ARG shift to state 54
-- On AT_EXPR shift to state 56
-- On AND_AND shift to state 60
-- On AND shift to state 62
-- On ALIGNOF shift to state 63
-- On wstring_list shift to state 98
-- On unary_expression shift to state 101
-- On string_list shift to state 106
-- On string_constant shift to state 108
-- On shift_expression shift to state 109
-- On relational_expression shift to state 116
-- On primary_expression shift to state 111
-- On postfix_expression shift to state 112
-- On paren_comma_expression shift to state 120
-- On one_string shift to state 121
-- On multiplicative_expression shift to state 122
-- On logical_or_expression shift to state 143
-- On logical_and_expression shift to state 147
-- On expression shift to state 165
-- On equality_expression shift to state 149
-- On constant shift to state 124
-- On conditional_expression shift to state 167
-- On comma_expression shift to state 334
-- On cast_expression shift to state 169
-- On bitwise_xor_expression shift to state 154
-- On bitwise_or_expression shift to state 164
-- On bitwise_and_expression shift to state 162
-- On assignment_expression shift to state 192
-- On additive_expression shift to state 136
## Reductions:

State 332:
## Known stack suffix:
## LPAREN error
## LR(1) items:
comma_expression -> error . COMMA comma_expression [ RPAREN ]
paren_comma_expression -> LPAREN error . RPAREN [ error WHILE TRY TILDE SWITCH STAR SIZEOF SEMICOLON RETURN PRETTY_FUNCTION__ PLUS_PLUS PLUS MSASM MINUS_MINUS MINUS LPAREN LBRACE IF IDENT GOTO FUNCTION__ FOR EXCLAM DO DEFAULT CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONTINUE CASE BUILTIN_VA_ARG BREAK AT_EXPR ASM AND_AND AND ALIGNOF ]
## Transitions:
-- On RPAREN shift to state 333
-- On COMMA shift to state 43
## Reductions:

State 333:
## Known stack suffix:
## LPAREN error RPAREN
## LR(1) items:
paren_comma_expression -> LPAREN error RPAREN . [ error WHILE TRY TILDE SWITCH STAR SIZEOF SEMICOLON RETURN PRETTY_FUNCTION__ PLUS_PLUS PLUS MSASM MINUS_MINUS MINUS LPAREN LBRACE IF IDENT GOTO FUNCTION__ FOR EXCLAM DO DEFAULT CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONTINUE CASE BUILTIN_VA_ARG BREAK AT_EXPR ASM AND_AND AND ALIGNOF ]
## Transitions:
## Reductions:
-- On error WHILE TRY TILDE SWITCH STAR SIZEOF SEMICOLON RETURN PRETTY_FUNCTION__ PLUS_PLUS PLUS MSASM MINUS_MINUS MINUS LPAREN LBRACE IF IDENT GOTO FUNCTION__ FOR EXCLAM DO DEFAULT CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONTINUE CASE BUILTIN_VA_ARG BREAK AT_EXPR ASM AND_AND AND ALIGNOF
--   reduce production paren_comma_expression -> LPAREN error RPAREN

State 334:
## Known stack suffix:
## LPAREN comma_expression
## LR(1) items:
paren_comma_expression -> LPAREN comma_expression . RPAREN [ error WHILE TRY TILDE SWITCH STAR SIZEOF SEMICOLON RETURN PRETTY_FUNCTION__ PLUS_PLUS PLUS MSASM MINUS_MINUS MINUS LPAREN LBRACE IF IDENT GOTO FUNCTION__ FOR EXCLAM DO DEFAULT CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONTINUE CASE BUILTIN_VA_ARG BREAK AT_EXPR ASM AND_AND AND ALIGNOF ]
## Transitions:
-- On RPAREN shift to state 335
## Reductions:

State 335:
## Known stack suffix:
## LPAREN comma_expression RPAREN
## LR(1) items:
paren_comma_expression -> LPAREN comma_expression RPAREN . [ error WHILE TRY TILDE SWITCH STAR SIZEOF SEMICOLON RETURN PRETTY_FUNCTION__ PLUS_PLUS PLUS MSASM MINUS_MINUS MINUS LPAREN LBRACE IF IDENT GOTO FUNCTION__ FOR EXCLAM DO DEFAULT CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONTINUE CASE BUILTIN_VA_ARG BREAK AT_EXPR ASM AND_AND AND ALIGNOF ]
## Transitions:
## Reductions:
-- On error WHILE TRY TILDE SWITCH STAR SIZEOF SEMICOLON RETURN PRETTY_FUNCTION__ PLUS_PLUS PLUS MSASM MINUS_MINUS MINUS LPAREN LBRACE IF IDENT GOTO FUNCTION__ FOR EXCLAM DO DEFAULT CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONTINUE CASE BUILTIN_VA_ARG BREAK AT_EXPR ASM AND_AND AND ALIGNOF
--   reduce production paren_comma_expression -> LPAREN comma_expression RPAREN

State 336:
## Known stack suffix:
## WHILE paren_comma_expression
## LR(1) items:
statement -> WHILE paren_comma_expression . statement [ error WHILE VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF TRY TILDE THREAD SWITCH STRUCT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRETTY_FUNCTION__ PLUS_PLUS PLUS NAMED_TYPE MSATTR MSASM MINUS_MINUS MINUS LPAREN LONG LBRACE INT64 INT INLINE IF IDENT GOTO FUNCTION__ FOR FLOAT EXTERN EXCLAM ENUM ELSE DOUBLE DO DEFAULT DECLSPEC CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONTINUE CONST CHAR CASE BUILTIN_VA_ARG BREAK AUTO AT_SPECIFIER AT_EXPR ATTRIBUTE ASM AND_AND AND ALIGNOF ]
## Transitions:
-- On error shift to state 326
-- On WHILE shift to state 330
-- On TRY shift to state 337
-- On TILDE shift to state 32
-- On SWITCH shift to state 348
-- On STAR shift to state 33
-- On SIZEOF shift to state 34
-- On SEMICOLON shift to state 350
-- On RETURN shift to state 351
-- On PRETTY_FUNCTION__ shift to state 35
-- On PLUS_PLUS shift to state 36
-- On PLUS shift to state 37
-- On MSASM shift to state 355
-- On MINUS_MINUS shift to state 38
-- On MINUS shift to state 39
-- On LPAREN shift to state 40
-- On LBRACE shift to state 65
-- On IF shift to state 356
-- On IDENT shift to state 358
-- On GOTO shift to state 360
-- On FUNCTION__ shift to state 46
-- On FOR shift to state 366
-- On EXCLAM shift to state 47
-- On DO shift to state 375
-- On DEFAULT shift to state 495
-- On CST_WSTRING shift to state 48
-- On CST_WCHAR shift to state 49
-- On CST_STRING shift to state 50
-- On CST_INT shift to state 51
-- On CST_FLOAT shift to state 52
-- On CST_CHAR shift to state 53
-- On CONTINUE shift to state 497
-- On CASE shift to state 499
-- On BUILTIN_VA_ARG shift to state 54
-- On BREAK shift to state 505
-- On AT_EXPR shift to state 56
-- On ASM shift to state 507
-- On AND_AND shift to state 60
-- On AND shift to state 62
-- On ALIGNOF shift to state 63
-- On wstring_list shift to state 98
-- On unary_expression shift to state 101
-- On string_list shift to state 106
-- On string_constant shift to state 108
-- On statement shift to state 535
-- On shift_expression shift to state 109
-- On relational_expression shift to state 116
-- On primary_expression shift to state 111
-- On postfix_expression shift to state 112
-- On paren_comma_expression shift to state 120
-- On one_string shift to state 121
-- On multiplicative_expression shift to state 122
-- On logical_or_expression shift to state 143
-- On logical_and_expression shift to state 147
-- On expression shift to state 165
-- On equality_expression shift to state 149
-- On constant shift to state 124
-- On conditional_expression shift to state 167
-- On comma_expression shift to state 515
-- On cast_expression shift to state 169
-- On block_begin shift to state 345
-- On block shift to state 517
-- On bitwise_xor_expression shift to state 154
-- On bitwise_or_expression shift to state 164
-- On bitwise_and_expression shift to state 162
-- On assignment_expression shift to state 192
-- On additive_expression shift to state 136
## Reductions:

State 337:
## Known stack suffix:
## TRY
## LR(1) items:
statement -> TRY . block EXCEPT paren_comma_expression block [ error WHILE VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF TRY TILDE THREAD SWITCH STRUCT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRETTY_FUNCTION__ PLUS_PLUS PLUS NAMED_TYPE MSATTR MSASM MINUS_MINUS MINUS LPAREN LONG LBRACE INT64 INT INLINE IF IDENT GOTO FUNCTION__ FOR FLOAT EXTERN EXCLAM ENUM ELSE DOUBLE DO DEFAULT DECLSPEC CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONTINUE CONST CHAR CASE BUILTIN_VA_ARG BREAK AUTO AT_SPECIFIER AT_EXPR ATTRIBUTE ASM AND_AND AND ALIGNOF ]
statement -> TRY . block FINALLY block [ error WHILE VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF TRY TILDE THREAD SWITCH STRUCT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRETTY_FUNCTION__ PLUS_PLUS PLUS NAMED_TYPE MSATTR MSASM MINUS_MINUS MINUS LPAREN LONG LBRACE INT64 INT INLINE IF IDENT GOTO FUNCTION__ FOR FLOAT EXTERN EXCLAM ENUM ELSE DOUBLE DO DEFAULT DECLSPEC CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONTINUE CONST CHAR CASE BUILTIN_VA_ARG BREAK AUTO AT_SPECIFIER AT_EXPR ATTRIBUTE ASM AND_AND AND ALIGNOF ]
## Transitions:
-- On error shift to state 338
-- On LBRACE shift to state 65
-- On block_begin shift to state 314
-- On block shift to state 341
## Reductions:

State 338:
## Known stack suffix:
## error
## LR(1) items:
block -> error . location RBRACE [ WHILE RBRACE FINALLY EXCEPT ELSE ]
## Transitions:
-- On location shift to state 339
## Reductions:
-- On RBRACE
--   reduce production location ->

State 339:
## Known stack suffix:
## error location
## LR(1) items:
block -> error location . RBRACE [ WHILE RPAREN RBRACE FINALLY EXCEPT ELSE ]
## Transitions:
-- On RBRACE shift to state 340
## Reductions:

State 340:
## Known stack suffix:
## error location RBRACE
## LR(1) items:
block -> error location RBRACE . [ WHILE RPAREN RBRACE FINALLY EXCEPT ELSE ]
## Transitions:
## Reductions:
-- On WHILE RPAREN RBRACE FINALLY EXCEPT ELSE
--   reduce production block -> error location RBRACE

State 341:
## Known stack suffix:
## TRY block
## LR(1) items:
statement -> TRY block . EXCEPT paren_comma_expression block [ error WHILE VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF TRY TILDE THREAD SWITCH STRUCT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRETTY_FUNCTION__ PLUS_PLUS PLUS NAMED_TYPE MSATTR MSASM MINUS_MINUS MINUS LPAREN LONG LBRACE INT64 INT INLINE IF IDENT GOTO FUNCTION__ FOR FLOAT EXTERN EXCLAM ENUM ELSE DOUBLE DO DEFAULT DECLSPEC CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONTINUE CONST CHAR CASE BUILTIN_VA_ARG BREAK AUTO AT_SPECIFIER AT_EXPR ATTRIBUTE ASM AND_AND AND ALIGNOF ]
statement -> TRY block . FINALLY block [ error WHILE VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF TRY TILDE THREAD SWITCH STRUCT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRETTY_FUNCTION__ PLUS_PLUS PLUS NAMED_TYPE MSATTR MSASM MINUS_MINUS MINUS LPAREN LONG LBRACE INT64 INT INLINE IF IDENT GOTO FUNCTION__ FOR FLOAT EXTERN EXCLAM ENUM ELSE DOUBLE DO DEFAULT DECLSPEC CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONTINUE CONST CHAR CASE BUILTIN_VA_ARG BREAK AUTO AT_SPECIFIER AT_EXPR ATTRIBUTE ASM AND_AND AND ALIGNOF ]
## Transitions:
-- On FINALLY shift to state 342
-- On EXCEPT shift to state 532
## Reductions:

State 342:
## Known stack suffix:
## TRY block FINALLY
## LR(1) items:
statement -> TRY block FINALLY . block [ error WHILE VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF TRY TILDE THREAD SWITCH STRUCT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRETTY_FUNCTION__ PLUS_PLUS PLUS NAMED_TYPE MSATTR MSASM MINUS_MINUS MINUS LPAREN LONG LBRACE INT64 INT INLINE IF IDENT GOTO FUNCTION__ FOR FLOAT EXTERN EXCLAM ENUM ELSE DOUBLE DO DEFAULT DECLSPEC CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONTINUE CONST CHAR CASE BUILTIN_VA_ARG BREAK AUTO AT_SPECIFIER AT_EXPR ATTRIBUTE ASM AND_AND AND ALIGNOF ]
## Transitions:
-- On error shift to state 343
-- On LBRACE shift to state 65
-- On block_begin shift to state 345
-- On block shift to state 531
## Reductions:

State 343:
## Known stack suffix:
## error
## LR(1) items:
block -> error . location RBRACE [ error WHILE VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF TRY TILDE THREAD SWITCH STRUCT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRETTY_FUNCTION__ PRAGMA_LINE PRAGMA PLUS_PLUS PLUS NAMED_TYPE MSATTR MSASM MINUS_MINUS MINUS LPAREN LONG LBRACE INT64 INT INLINE IF IDENT GOTO FUNCTION__ FOR FLOAT EXTERN EXCLAM EOF ENUM ELSE DOUBLE DO DEFAULT DECLSPEC CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONTINUE CONST CHAR CASE BUILTIN_VA_ARG BREAK AUTO AT_TRANSFORMEXPR AT_TRANSFORM AT_SPECIFIER AT_EXPR ATTRIBUTE ASM AND_AND AND ALIGNOF # ]
## Transitions:
-- On location shift to state 344
## Reductions:
-- On RBRACE
--   reduce production location ->

State 344:
## Known stack suffix:
## error location
## LR(1) items:
block -> error location . RBRACE [ error WHILE VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF TRY TILDE THREAD SWITCH STRUCT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRETTY_FUNCTION__ PRAGMA_LINE PRAGMA PLUS_PLUS PLUS NAMED_TYPE MSATTR MSASM MINUS_MINUS MINUS LPAREN LONG LBRACE INT64 INT INLINE IF IDENT GOTO FUNCTION__ FOR FLOAT EXTERN EXCLAM EOF ENUM ELSE DOUBLE DO DEFAULT DECLSPEC CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONTINUE CONST CHAR CASE BUILTIN_VA_ARG BREAK AUTO AT_TRANSFORMEXPR AT_TRANSFORM AT_SPECIFIER AT_EXPR ATTRIBUTE ASM AND_AND AND ALIGNOF # ]
## Transitions:
-- On RBRACE shift to state 329
## Reductions:

State 345:
## Known stack suffix:
## block_begin
## LR(1) items:
block -> block_begin . local_labels block_attrs block_element_list RBRACE [ error WHILE VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF TRY TILDE THREAD SWITCH STRUCT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRETTY_FUNCTION__ PRAGMA_LINE PRAGMA PLUS_PLUS PLUS NAMED_TYPE MSATTR MSASM MINUS_MINUS MINUS LPAREN LONG LBRACE INT64 INT INLINE IF IDENT GOTO FUNCTION__ FOR FLOAT EXTERN EXCLAM EOF ENUM ELSE DOUBLE DO DEFAULT DECLSPEC CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONTINUE CONST CHAR CASE BUILTIN_VA_ARG BREAK AUTO AT_TRANSFORMEXPR AT_TRANSFORM AT_SPECIFIER AT_EXPR ATTRIBUTE ASM AND_AND AND ALIGNOF # ]
## Transitions:
-- On LABEL__ shift to state 315
-- On local_labels shift to state 346
## Reductions:
-- On error WHILE VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF TRY TILDE THREAD SWITCH STRUCT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRETTY_FUNCTION__ PLUS_PLUS PLUS NAMED_TYPE MSATTR MSASM MINUS_MINUS MINUS LPAREN LONG LBRACE INT64 INT INLINE IF IDENT GOTO FUNCTION__ FOR FLOAT EXTERN EXCLAM ENUM DOUBLE DO DEFAULT DECLSPEC CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONTINUE CONST CHAR CASE BUILTIN_VA_ARG BREAK BLOCKATTRIBUTE AUTO AT_SPECIFIER AT_EXPR ATTRIBUTE ASM AND_AND AND ALIGNOF
--   reduce production local_labels ->

State 346:
## Known stack suffix:
## block_begin local_labels
## LR(1) items:
block -> block_begin local_labels . block_attrs block_element_list RBRACE [ error WHILE VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF TRY TILDE THREAD SWITCH STRUCT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRETTY_FUNCTION__ PRAGMA_LINE PRAGMA PLUS_PLUS PLUS NAMED_TYPE MSATTR MSASM MINUS_MINUS MINUS LPAREN LONG LBRACE INT64 INT INLINE IF IDENT GOTO FUNCTION__ FOR FLOAT EXTERN EXCLAM EOF ENUM ELSE DOUBLE DO DEFAULT DECLSPEC CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONTINUE CONST CHAR CASE BUILTIN_VA_ARG BREAK AUTO AT_TRANSFORMEXPR AT_TRANSFORM AT_SPECIFIER AT_EXPR ATTRIBUTE ASM AND_AND AND ALIGNOF # ]
## Transitions:
-- On BLOCKATTRIBUTE shift to state 323
-- On block_attrs shift to state 347
## Reductions:
-- On error WHILE VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF TRY TILDE THREAD SWITCH STRUCT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRETTY_FUNCTION__ PLUS_PLUS PLUS NAMED_TYPE MSATTR MSASM MINUS_MINUS MINUS LPAREN LONG LBRACE INT64 INT INLINE IF IDENT GOTO FUNCTION__ FOR FLOAT EXTERN EXCLAM ENUM DOUBLE DO DEFAULT DECLSPEC CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONTINUE CONST CHAR CASE BUILTIN_VA_ARG BREAK AUTO AT_SPECIFIER AT_EXPR ATTRIBUTE ASM AND_AND AND ALIGNOF
--   reduce production block_attrs ->

State 347:
## Known stack suffix:
## block_begin local_labels block_attrs
## LR(1) items:
block -> block_begin local_labels block_attrs . block_element_list RBRACE [ error WHILE VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF TRY TILDE THREAD SWITCH STRUCT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRETTY_FUNCTION__ PRAGMA_LINE PRAGMA PLUS_PLUS PLUS NAMED_TYPE MSATTR MSASM MINUS_MINUS MINUS LPAREN LONG LBRACE INT64 INT INLINE IF IDENT GOTO FUNCTION__ FOR FLOAT EXTERN EXCLAM EOF ENUM ELSE DOUBLE DO DEFAULT DECLSPEC CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONTINUE CONST CHAR CASE BUILTIN_VA_ARG BREAK AUTO AT_TRANSFORMEXPR AT_TRANSFORM AT_SPECIFIER AT_EXPR ATTRIBUTE ASM AND_AND AND ALIGNOF # ]
## Transitions:
-- On error shift to state 326
-- On WHILE shift to state 330
-- On VOLATILE shift to state 1
-- On VOID shift to state 2
-- On UNSIGNED shift to state 3
-- On UNION shift to state 4
-- On TYPEOF shift to state 9
-- On TYPEDEF shift to state 11
-- On TRY shift to state 337
-- On TILDE shift to state 32
-- On THREAD shift to state 12
-- On SWITCH shift to state 348
-- On STRUCT shift to state 13
-- On STATIC shift to state 15
-- On STAR shift to state 33
-- On SIZEOF shift to state 34
-- On SIGNED shift to state 16
-- On SHORT shift to state 17
-- On SEMICOLON shift to state 350
-- On RETURN shift to state 351
-- On RESTRICT shift to state 18
-- On REGISTER shift to state 19
-- On PRETTY_FUNCTION__ shift to state 35
-- On PLUS_PLUS shift to state 36
-- On PLUS shift to state 37
-- On NAMED_TYPE shift to state 20
-- On MSATTR shift to state 21
-- On MSASM shift to state 355
-- On MINUS_MINUS shift to state 38
-- On MINUS shift to state 39
-- On LPAREN shift to state 40
-- On LONG shift to state 22
-- On LBRACE shift to state 65
-- On INT64 shift to state 23
-- On INT shift to state 24
-- On INLINE shift to state 25
-- On IF shift to state 356
-- On IDENT shift to state 523
-- On GOTO shift to state 360
-- On FUNCTION__ shift to state 46
-- On FOR shift to state 366
-- On FLOAT shift to state 26
-- On EXTERN shift to state 27
-- On EXCLAM shift to state 47
-- On ENUM shift to state 28
-- On DOUBLE shift to state 66
-- On DO shift to state 375
-- On DEFAULT shift to state 495
-- On DECLSPEC shift to state 67
-- On CST_WSTRING shift to state 48
-- On CST_WCHAR shift to state 49
-- On CST_STRING shift to state 50
-- On CST_INT shift to state 51
-- On CST_FLOAT shift to state 52
-- On CST_CHAR shift to state 53
-- On CONTINUE shift to state 497
-- On CONST shift to state 78
-- On CHAR shift to state 79
-- On CASE shift to state 499
-- On BUILTIN_VA_ARG shift to state 54
-- On BREAK shift to state 505
-- On AUTO shift to state 80
-- On AT_SPECIFIER shift to state 81
-- On AT_EXPR shift to state 56
-- On ATTRIBUTE shift to state 85
-- On ASM shift to state 507
-- On AND_AND shift to state 60
-- On AND shift to state 62
-- On ALIGNOF shift to state 63
-- On wstring_list shift to state 98
-- On unary_expression shift to state 101
-- On type_spec shift to state 89
-- On string_list shift to state 106
-- On string_constant shift to state 108
-- On statement shift to state 525
-- On shift_expression shift to state 109
-- On relational_expression shift to state 116
-- On primary_expression shift to state 111
-- On postfix_expression shift to state 112
-- On paren_comma_expression shift to state 120
-- On one_string shift to state 121
-- On multiplicative_expression shift to state 122
-- On logical_or_expression shift to state 143
-- On logical_and_expression shift to state 147
-- On expression shift to state 165
-- On equality_expression shift to state 149
-- On declaration shift to state 526
-- On decl_spec_list shift to state 472
-- On cvspec shift to state 92
-- On constant shift to state 124
-- On conditional_expression shift to state 167
-- On comma_expression shift to state 515
-- On cast_expression shift to state 169
-- On block_element_list shift to state 529
-- On block_begin shift to state 345
-- On block shift to state 517
-- On bitwise_xor_expression shift to state 154
-- On bitwise_or_expression shift to state 164
-- On bitwise_and_expression shift to state 162
-- On attribute_nocv shift to state 95
-- On assignment_expression shift to state 192
-- On additive_expression shift to state 136
## Reductions:
-- On RBRACE
--   reduce production block_element_list ->

State 348:
## Known stack suffix:
## SWITCH
## LR(1) items:
statement -> SWITCH . paren_comma_expression statement [ error WHILE VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF TRY TILDE THREAD SWITCH STRUCT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRETTY_FUNCTION__ PLUS_PLUS PLUS NAMED_TYPE MSATTR MSASM MINUS_MINUS MINUS LPAREN LONG LBRACE INT64 INT INLINE IF IDENT GOTO FUNCTION__ FOR FLOAT EXTERN EXCLAM ENUM ELSE DOUBLE DO DEFAULT DECLSPEC CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONTINUE CONST CHAR CASE BUILTIN_VA_ARG BREAK AUTO AT_SPECIFIER AT_EXPR ATTRIBUTE ASM AND_AND AND ALIGNOF ]
## Transitions:
-- On LPAREN shift to state 331
-- On paren_comma_expression shift to state 349
## Reductions:

State 349:
## Known stack suffix:
## SWITCH paren_comma_expression
## LR(1) items:
statement -> SWITCH paren_comma_expression . statement [ error WHILE VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF TRY TILDE THREAD SWITCH STRUCT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRETTY_FUNCTION__ PLUS_PLUS PLUS NAMED_TYPE MSATTR MSASM MINUS_MINUS MINUS LPAREN LONG LBRACE INT64 INT INLINE IF IDENT GOTO FUNCTION__ FOR FLOAT EXTERN EXCLAM ENUM ELSE DOUBLE DO DEFAULT DECLSPEC CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONTINUE CONST CHAR CASE BUILTIN_VA_ARG BREAK AUTO AT_SPECIFIER AT_EXPR ATTRIBUTE ASM AND_AND AND ALIGNOF ]
## Transitions:
-- On error shift to state 326
-- On WHILE shift to state 330
-- On TRY shift to state 337
-- On TILDE shift to state 32
-- On SWITCH shift to state 348
-- On STAR shift to state 33
-- On SIZEOF shift to state 34
-- On SEMICOLON shift to state 350
-- On RETURN shift to state 351
-- On PRETTY_FUNCTION__ shift to state 35
-- On PLUS_PLUS shift to state 36
-- On PLUS shift to state 37
-- On MSASM shift to state 355
-- On MINUS_MINUS shift to state 38
-- On MINUS shift to state 39
-- On LPAREN shift to state 40
-- On LBRACE shift to state 65
-- On IF shift to state 356
-- On IDENT shift to state 358
-- On GOTO shift to state 360
-- On FUNCTION__ shift to state 46
-- On FOR shift to state 366
-- On EXCLAM shift to state 47
-- On DO shift to state 375
-- On DEFAULT shift to state 495
-- On CST_WSTRING shift to state 48
-- On CST_WCHAR shift to state 49
-- On CST_STRING shift to state 50
-- On CST_INT shift to state 51
-- On CST_FLOAT shift to state 52
-- On CST_CHAR shift to state 53
-- On CONTINUE shift to state 497
-- On CASE shift to state 499
-- On BUILTIN_VA_ARG shift to state 54
-- On BREAK shift to state 505
-- On AT_EXPR shift to state 56
-- On ASM shift to state 507
-- On AND_AND shift to state 60
-- On AND shift to state 62
-- On ALIGNOF shift to state 63
-- On wstring_list shift to state 98
-- On unary_expression shift to state 101
-- On string_list shift to state 106
-- On string_constant shift to state 108
-- On statement shift to state 522
-- On shift_expression shift to state 109
-- On relational_expression shift to state 116
-- On primary_expression shift to state 111
-- On postfix_expression shift to state 112
-- On paren_comma_expression shift to state 120
-- On one_string shift to state 121
-- On multiplicative_expression shift to state 122
-- On logical_or_expression shift to state 143
-- On logical_and_expression shift to state 147
-- On expression shift to state 165
-- On equality_expression shift to state 149
-- On constant shift to state 124
-- On conditional_expression shift to state 167
-- On comma_expression shift to state 515
-- On cast_expression shift to state 169
-- On block_begin shift to state 345
-- On block shift to state 517
-- On bitwise_xor_expression shift to state 154
-- On bitwise_or_expression shift to state 164
-- On bitwise_and_expression shift to state 162
-- On assignment_expression shift to state 192
-- On additive_expression shift to state 136
## Reductions:

State 350:
## Known stack suffix:
## SEMICOLON
## LR(1) items:
statement -> SEMICOLON . [ error WHILE VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF TRY TILDE THREAD SWITCH STRUCT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRETTY_FUNCTION__ PLUS_PLUS PLUS NAMED_TYPE MSATTR MSASM MINUS_MINUS MINUS LPAREN LONG LBRACE INT64 INT INLINE IF IDENT GOTO FUNCTION__ FOR FLOAT EXTERN EXCLAM ENUM ELSE DOUBLE DO DEFAULT DECLSPEC CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONTINUE CONST CHAR CASE BUILTIN_VA_ARG BREAK AUTO AT_SPECIFIER AT_EXPR ATTRIBUTE ASM AND_AND AND ALIGNOF ]
## Transitions:
## Reductions:
-- On error WHILE VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF TRY TILDE THREAD SWITCH STRUCT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRETTY_FUNCTION__ PLUS_PLUS PLUS NAMED_TYPE MSATTR MSASM MINUS_MINUS MINUS LPAREN LONG LBRACE INT64 INT INLINE IF IDENT GOTO FUNCTION__ FOR FLOAT EXTERN EXCLAM ENUM ELSE DOUBLE DO DEFAULT DECLSPEC CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONTINUE CONST CHAR CASE BUILTIN_VA_ARG BREAK AUTO AT_SPECIFIER AT_EXPR ATTRIBUTE ASM AND_AND AND ALIGNOF
--   reduce production statement -> SEMICOLON

State 351:
## Known stack suffix:
## RETURN
## LR(1) items:
statement -> RETURN . SEMICOLON [ error WHILE VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF TRY TILDE THREAD SWITCH STRUCT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRETTY_FUNCTION__ PLUS_PLUS PLUS NAMED_TYPE MSATTR MSASM MINUS_MINUS MINUS LPAREN LONG LBRACE INT64 INT INLINE IF IDENT GOTO FUNCTION__ FOR FLOAT EXTERN EXCLAM ENUM ELSE DOUBLE DO DEFAULT DECLSPEC CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONTINUE CONST CHAR CASE BUILTIN_VA_ARG BREAK AUTO AT_SPECIFIER AT_EXPR ATTRIBUTE ASM AND_AND AND ALIGNOF ]
statement -> RETURN . comma_expression SEMICOLON [ error WHILE VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF TRY TILDE THREAD SWITCH STRUCT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRETTY_FUNCTION__ PLUS_PLUS PLUS NAMED_TYPE MSATTR MSASM MINUS_MINUS MINUS LPAREN LONG LBRACE INT64 INT INLINE IF IDENT GOTO FUNCTION__ FOR FLOAT EXTERN EXCLAM ENUM ELSE DOUBLE DO DEFAULT DECLSPEC CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONTINUE CONST CHAR CASE BUILTIN_VA_ARG BREAK AUTO AT_SPECIFIER AT_EXPR ATTRIBUTE ASM AND_AND AND ALIGNOF ]
## Transitions:
-- On error shift to state 44
-- On TILDE shift to state 32
-- On STAR shift to state 33
-- On SIZEOF shift to state 34
-- On SEMICOLON shift to state 352
-- On PRETTY_FUNCTION__ shift to state 35
-- On PLUS_PLUS shift to state 36
-- On PLUS shift to state 37
-- On MINUS_MINUS shift to state 38
-- On MINUS shift to state 39
-- On LPAREN shift to state 40
-- On IDENT shift to state 45
-- On FUNCTION__ shift to state 46
-- On EXCLAM shift to state 47
-- On CST_WSTRING shift to state 48
-- On CST_WCHAR shift to state 49
-- On CST_STRING shift to state 50
-- On CST_INT shift to state 51
-- On CST_FLOAT shift to state 52
-- On CST_CHAR shift to state 53
-- On BUILTIN_VA_ARG shift to state 54
-- On AT_EXPR shift to state 56
-- On AND_AND shift to state 60
-- On AND shift to state 62
-- On ALIGNOF shift to state 63
-- On wstring_list shift to state 98
-- On unary_expression shift to state 101
-- On string_list shift to state 106
-- On string_constant shift to state 108
-- On shift_expression shift to state 109
-- On relational_expression shift to state 116
-- On primary_expression shift to state 111
-- On postfix_expression shift to state 112
-- On paren_comma_expression shift to state 120
-- On one_string shift to state 121
-- On multiplicative_expression shift to state 122
-- On logical_or_expression shift to state 143
-- On logical_and_expression shift to state 147
-- On expression shift to state 165
-- On equality_expression shift to state 149
-- On constant shift to state 124
-- On conditional_expression shift to state 167
-- On comma_expression shift to state 353
-- On cast_expression shift to state 169
-- On bitwise_xor_expression shift to state 154
-- On bitwise_or_expression shift to state 164
-- On bitwise_and_expression shift to state 162
-- On assignment_expression shift to state 192
-- On additive_expression shift to state 136
## Reductions:

State 352:
## Known stack suffix:
## RETURN SEMICOLON
## LR(1) items:
statement -> RETURN SEMICOLON . [ error WHILE VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF TRY TILDE THREAD SWITCH STRUCT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRETTY_FUNCTION__ PLUS_PLUS PLUS NAMED_TYPE MSATTR MSASM MINUS_MINUS MINUS LPAREN LONG LBRACE INT64 INT INLINE IF IDENT GOTO FUNCTION__ FOR FLOAT EXTERN EXCLAM ENUM ELSE DOUBLE DO DEFAULT DECLSPEC CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONTINUE CONST CHAR CASE BUILTIN_VA_ARG BREAK AUTO AT_SPECIFIER AT_EXPR ATTRIBUTE ASM AND_AND AND ALIGNOF ]
## Transitions:
## Reductions:
-- On error WHILE VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF TRY TILDE THREAD SWITCH STRUCT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRETTY_FUNCTION__ PLUS_PLUS PLUS NAMED_TYPE MSATTR MSASM MINUS_MINUS MINUS LPAREN LONG LBRACE INT64 INT INLINE IF IDENT GOTO FUNCTION__ FOR FLOAT EXTERN EXCLAM ENUM ELSE DOUBLE DO DEFAULT DECLSPEC CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONTINUE CONST CHAR CASE BUILTIN_VA_ARG BREAK AUTO AT_SPECIFIER AT_EXPR ATTRIBUTE ASM AND_AND AND ALIGNOF
--   reduce production statement -> RETURN SEMICOLON

State 353:
## Known stack suffix:
## RETURN comma_expression
## LR(1) items:
statement -> RETURN comma_expression . SEMICOLON [ error WHILE VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF TRY TILDE THREAD SWITCH STRUCT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRETTY_FUNCTION__ PLUS_PLUS PLUS NAMED_TYPE MSATTR MSASM MINUS_MINUS MINUS LPAREN LONG LBRACE INT64 INT INLINE IF IDENT GOTO FUNCTION__ FOR FLOAT EXTERN EXCLAM ENUM ELSE DOUBLE DO DEFAULT DECLSPEC CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONTINUE CONST CHAR CASE BUILTIN_VA_ARG BREAK AUTO AT_SPECIFIER AT_EXPR ATTRIBUTE ASM AND_AND AND ALIGNOF ]
## Transitions:
-- On SEMICOLON shift to state 354
## Reductions:

State 354:
## Known stack suffix:
## RETURN comma_expression SEMICOLON
## LR(1) items:
statement -> RETURN comma_expression SEMICOLON . [ error WHILE VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF TRY TILDE THREAD SWITCH STRUCT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRETTY_FUNCTION__ PLUS_PLUS PLUS NAMED_TYPE MSATTR MSASM MINUS_MINUS MINUS LPAREN LONG LBRACE INT64 INT INLINE IF IDENT GOTO FUNCTION__ FOR FLOAT EXTERN EXCLAM ENUM ELSE DOUBLE DO DEFAULT DECLSPEC CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONTINUE CONST CHAR CASE BUILTIN_VA_ARG BREAK AUTO AT_SPECIFIER AT_EXPR ATTRIBUTE ASM AND_AND AND ALIGNOF ]
## Transitions:
## Reductions:
-- On error WHILE VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF TRY TILDE THREAD SWITCH STRUCT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRETTY_FUNCTION__ PLUS_PLUS PLUS NAMED_TYPE MSATTR MSASM MINUS_MINUS MINUS LPAREN LONG LBRACE INT64 INT INLINE IF IDENT GOTO FUNCTION__ FOR FLOAT EXTERN EXCLAM ENUM ELSE DOUBLE DO DEFAULT DECLSPEC CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONTINUE CONST CHAR CASE BUILTIN_VA_ARG BREAK AUTO AT_SPECIFIER AT_EXPR ATTRIBUTE ASM AND_AND AND ALIGNOF
--   reduce production statement -> RETURN comma_expression SEMICOLON

State 355:
## Known stack suffix:
## MSASM
## LR(1) items:
statement -> MSASM . [ error WHILE VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF TRY TILDE THREAD SWITCH STRUCT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRETTY_FUNCTION__ PLUS_PLUS PLUS NAMED_TYPE MSATTR MSASM MINUS_MINUS MINUS LPAREN LONG LBRACE INT64 INT INLINE IF IDENT GOTO FUNCTION__ FOR FLOAT EXTERN EXCLAM ENUM ELSE DOUBLE DO DEFAULT DECLSPEC CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONTINUE CONST CHAR CASE BUILTIN_VA_ARG BREAK AUTO AT_SPECIFIER AT_EXPR ATTRIBUTE ASM AND_AND AND ALIGNOF ]
## Transitions:
## Reductions:
-- On error WHILE VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF TRY TILDE THREAD SWITCH STRUCT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRETTY_FUNCTION__ PLUS_PLUS PLUS NAMED_TYPE MSATTR MSASM MINUS_MINUS MINUS LPAREN LONG LBRACE INT64 INT INLINE IF IDENT GOTO FUNCTION__ FOR FLOAT EXTERN EXCLAM ENUM ELSE DOUBLE DO DEFAULT DECLSPEC CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONTINUE CONST CHAR CASE BUILTIN_VA_ARG BREAK AUTO AT_SPECIFIER AT_EXPR ATTRIBUTE ASM AND_AND AND ALIGNOF
--   reduce production statement -> MSASM

State 356:
## Known stack suffix:
## IF
## LR(1) items:
statement -> IF . paren_comma_expression statement [ error WHILE VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF TRY TILDE THREAD SWITCH STRUCT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRETTY_FUNCTION__ PLUS_PLUS PLUS NAMED_TYPE MSATTR MSASM MINUS_MINUS MINUS LPAREN LONG LBRACE INT64 INT INLINE IF IDENT GOTO FUNCTION__ FOR FLOAT EXTERN EXCLAM ENUM ELSE DOUBLE DO DEFAULT DECLSPEC CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONTINUE CONST CHAR CASE BUILTIN_VA_ARG BREAK AUTO AT_SPECIFIER AT_EXPR ATTRIBUTE ASM AND_AND AND ALIGNOF ]
statement -> IF . paren_comma_expression statement ELSE statement [ error WHILE VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF TRY TILDE THREAD SWITCH STRUCT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRETTY_FUNCTION__ PLUS_PLUS PLUS NAMED_TYPE MSATTR MSASM MINUS_MINUS MINUS LPAREN LONG LBRACE INT64 INT INLINE IF IDENT GOTO FUNCTION__ FOR FLOAT EXTERN EXCLAM ENUM ELSE DOUBLE DO DEFAULT DECLSPEC CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONTINUE CONST CHAR CASE BUILTIN_VA_ARG BREAK AUTO AT_SPECIFIER AT_EXPR ATTRIBUTE ASM AND_AND AND ALIGNOF ]
## Transitions:
-- On LPAREN shift to state 331
-- On paren_comma_expression shift to state 357
## Reductions:

State 357:
## Known stack suffix:
## IF paren_comma_expression
## LR(1) items:
statement -> IF paren_comma_expression . statement [ error WHILE VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF TRY TILDE THREAD SWITCH STRUCT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRETTY_FUNCTION__ PLUS_PLUS PLUS NAMED_TYPE MSATTR MSASM MINUS_MINUS MINUS LPAREN LONG LBRACE INT64 INT INLINE IF IDENT GOTO FUNCTION__ FOR FLOAT EXTERN EXCLAM ENUM ELSE DOUBLE DO DEFAULT DECLSPEC CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONTINUE CONST CHAR CASE BUILTIN_VA_ARG BREAK AUTO AT_SPECIFIER AT_EXPR ATTRIBUTE ASM AND_AND AND ALIGNOF ]
statement -> IF paren_comma_expression . statement ELSE statement [ error WHILE VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF TRY TILDE THREAD SWITCH STRUCT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRETTY_FUNCTION__ PLUS_PLUS PLUS NAMED_TYPE MSATTR MSASM MINUS_MINUS MINUS LPAREN LONG LBRACE INT64 INT INLINE IF IDENT GOTO FUNCTION__ FOR FLOAT EXTERN EXCLAM ENUM ELSE DOUBLE DO DEFAULT DECLSPEC CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONTINUE CONST CHAR CASE BUILTIN_VA_ARG BREAK AUTO AT_SPECIFIER AT_EXPR ATTRIBUTE ASM AND_AND AND ALIGNOF ]
## Transitions:
-- On error shift to state 326
-- On WHILE shift to state 330
-- On TRY shift to state 337
-- On TILDE shift to state 32
-- On SWITCH shift to state 348
-- On STAR shift to state 33
-- On SIZEOF shift to state 34
-- On SEMICOLON shift to state 350
-- On RETURN shift to state 351
-- On PRETTY_FUNCTION__ shift to state 35
-- On PLUS_PLUS shift to state 36
-- On PLUS shift to state 37
-- On MSASM shift to state 355
-- On MINUS_MINUS shift to state 38
-- On MINUS shift to state 39
-- On LPAREN shift to state 40
-- On LBRACE shift to state 65
-- On IF shift to state 356
-- On IDENT shift to state 358
-- On GOTO shift to state 360
-- On FUNCTION__ shift to state 46
-- On FOR shift to state 366
-- On EXCLAM shift to state 47
-- On DO shift to state 375
-- On DEFAULT shift to state 495
-- On CST_WSTRING shift to state 48
-- On CST_WCHAR shift to state 49
-- On CST_STRING shift to state 50
-- On CST_INT shift to state 51
-- On CST_FLOAT shift to state 52
-- On CST_CHAR shift to state 53
-- On CONTINUE shift to state 497
-- On CASE shift to state 499
-- On BUILTIN_VA_ARG shift to state 54
-- On BREAK shift to state 505
-- On AT_EXPR shift to state 56
-- On ASM shift to state 507
-- On AND_AND shift to state 60
-- On AND shift to state 62
-- On ALIGNOF shift to state 63
-- On wstring_list shift to state 98
-- On unary_expression shift to state 101
-- On string_list shift to state 106
-- On string_constant shift to state 108
-- On statement shift to state 519
-- On shift_expression shift to state 109
-- On relational_expression shift to state 116
-- On primary_expression shift to state 111
-- On postfix_expression shift to state 112
-- On paren_comma_expression shift to state 120
-- On one_string shift to state 121
-- On multiplicative_expression shift to state 122
-- On logical_or_expression shift to state 143
-- On logical_and_expression shift to state 147
-- On expression shift to state 165
-- On equality_expression shift to state 149
-- On constant shift to state 124
-- On conditional_expression shift to state 167
-- On comma_expression shift to state 515
-- On cast_expression shift to state 169
-- On block_begin shift to state 345
-- On block shift to state 517
-- On bitwise_xor_expression shift to state 154
-- On bitwise_or_expression shift to state 164
-- On bitwise_and_expression shift to state 162
-- On assignment_expression shift to state 192
-- On additive_expression shift to state 136
## Reductions:

State 358:
## Known stack suffix:
## IDENT
## LR(1) items:
primary_expression -> IDENT . [ SUP_SUP_EQ SUP_SUP SUP_EQ SUP STAR_EQ STAR SLASH_EQ SLASH SEMICOLON QUEST PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_EQ MINUS LPAREN LBRACKET INF_INF_EQ INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ EQ DOT COMMA CIRC_EQ CIRC ARROW AND_EQ AND_AND AND ]
statement -> IDENT . COLON statement [ error WHILE VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF TRY TILDE THREAD SWITCH STRUCT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRETTY_FUNCTION__ PLUS_PLUS PLUS NAMED_TYPE MSATTR MSASM MINUS_MINUS MINUS LPAREN LONG LBRACE INT64 INT INLINE IF IDENT GOTO FUNCTION__ FOR FLOAT EXTERN EXCLAM ENUM ELSE DOUBLE DO DEFAULT DECLSPEC CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONTINUE CONST CHAR CASE BUILTIN_VA_ARG BREAK AUTO AT_SPECIFIER AT_EXPR ATTRIBUTE ASM AND_AND AND ALIGNOF ]
## Transitions:
-- On COLON shift to state 359
## Reductions:
-- On SUP_SUP_EQ SUP_SUP SUP_EQ SUP STAR_EQ STAR SLASH_EQ SLASH SEMICOLON QUEST PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_EQ MINUS LPAREN LBRACKET INF_INF_EQ INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ EQ DOT COMMA CIRC_EQ CIRC ARROW AND_EQ AND_AND AND
--   reduce production primary_expression -> IDENT

State 359:
## Known stack suffix:
## IDENT COLON
## LR(1) items:
statement -> IDENT COLON . statement [ error WHILE VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF TRY TILDE THREAD SWITCH STRUCT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRETTY_FUNCTION__ PLUS_PLUS PLUS NAMED_TYPE MSATTR MSASM MINUS_MINUS MINUS LPAREN LONG LBRACE INT64 INT INLINE IF IDENT GOTO FUNCTION__ FOR FLOAT EXTERN EXCLAM ENUM ELSE DOUBLE DO DEFAULT DECLSPEC CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONTINUE CONST CHAR CASE BUILTIN_VA_ARG BREAK AUTO AT_SPECIFIER AT_EXPR ATTRIBUTE ASM AND_AND AND ALIGNOF ]
## Transitions:
-- On error shift to state 326
-- On WHILE shift to state 330
-- On TRY shift to state 337
-- On TILDE shift to state 32
-- On SWITCH shift to state 348
-- On STAR shift to state 33
-- On SIZEOF shift to state 34
-- On SEMICOLON shift to state 350
-- On RETURN shift to state 351
-- On PRETTY_FUNCTION__ shift to state 35
-- On PLUS_PLUS shift to state 36
-- On PLUS shift to state 37
-- On MSASM shift to state 355
-- On MINUS_MINUS shift to state 38
-- On MINUS shift to state 39
-- On LPAREN shift to state 40
-- On LBRACE shift to state 65
-- On IF shift to state 356
-- On IDENT shift to state 358
-- On GOTO shift to state 360
-- On FUNCTION__ shift to state 46
-- On FOR shift to state 366
-- On EXCLAM shift to state 47
-- On DO shift to state 375
-- On DEFAULT shift to state 495
-- On CST_WSTRING shift to state 48
-- On CST_WCHAR shift to state 49
-- On CST_STRING shift to state 50
-- On CST_INT shift to state 51
-- On CST_FLOAT shift to state 52
-- On CST_CHAR shift to state 53
-- On CONTINUE shift to state 497
-- On CASE shift to state 499
-- On BUILTIN_VA_ARG shift to state 54
-- On BREAK shift to state 505
-- On AT_EXPR shift to state 56
-- On ASM shift to state 507
-- On AND_AND shift to state 60
-- On AND shift to state 62
-- On ALIGNOF shift to state 63
-- On wstring_list shift to state 98
-- On unary_expression shift to state 101
-- On string_list shift to state 106
-- On string_constant shift to state 108
-- On statement shift to state 518
-- On shift_expression shift to state 109
-- On relational_expression shift to state 116
-- On primary_expression shift to state 111
-- On postfix_expression shift to state 112
-- On paren_comma_expression shift to state 120
-- On one_string shift to state 121
-- On multiplicative_expression shift to state 122
-- On logical_or_expression shift to state 143
-- On logical_and_expression shift to state 147
-- On expression shift to state 165
-- On equality_expression shift to state 149
-- On constant shift to state 124
-- On conditional_expression shift to state 167
-- On comma_expression shift to state 515
-- On cast_expression shift to state 169
-- On block_begin shift to state 345
-- On block shift to state 517
-- On bitwise_xor_expression shift to state 154
-- On bitwise_or_expression shift to state 164
-- On bitwise_and_expression shift to state 162
-- On assignment_expression shift to state 192
-- On additive_expression shift to state 136
## Reductions:

State 360:
## Known stack suffix:
## GOTO
## LR(1) items:
statement -> GOTO . IDENT SEMICOLON [ error WHILE VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF TRY TILDE THREAD SWITCH STRUCT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRETTY_FUNCTION__ PLUS_PLUS PLUS NAMED_TYPE MSATTR MSASM MINUS_MINUS MINUS LPAREN LONG LBRACE INT64 INT INLINE IF IDENT GOTO FUNCTION__ FOR FLOAT EXTERN EXCLAM ENUM ELSE DOUBLE DO DEFAULT DECLSPEC CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONTINUE CONST CHAR CASE BUILTIN_VA_ARG BREAK AUTO AT_SPECIFIER AT_EXPR ATTRIBUTE ASM AND_AND AND ALIGNOF ]
statement -> GOTO . STAR comma_expression SEMICOLON [ error WHILE VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF TRY TILDE THREAD SWITCH STRUCT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRETTY_FUNCTION__ PLUS_PLUS PLUS NAMED_TYPE MSATTR MSASM MINUS_MINUS MINUS LPAREN LONG LBRACE INT64 INT INLINE IF IDENT GOTO FUNCTION__ FOR FLOAT EXTERN EXCLAM ENUM ELSE DOUBLE DO DEFAULT DECLSPEC CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONTINUE CONST CHAR CASE BUILTIN_VA_ARG BREAK AUTO AT_SPECIFIER AT_EXPR ATTRIBUTE ASM AND_AND AND ALIGNOF ]
## Transitions:
-- On STAR shift to state 361
-- On IDENT shift to state 364
## Reductions:

State 361:
## Known stack suffix:
## GOTO STAR
## LR(1) items:
statement -> GOTO STAR . comma_expression SEMICOLON [ error WHILE VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF TRY TILDE THREAD SWITCH STRUCT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRETTY_FUNCTION__ PLUS_PLUS PLUS NAMED_TYPE MSATTR MSASM MINUS_MINUS MINUS LPAREN LONG LBRACE INT64 INT INLINE IF IDENT GOTO FUNCTION__ FOR FLOAT EXTERN EXCLAM ENUM ELSE DOUBLE DO DEFAULT DECLSPEC CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONTINUE CONST CHAR CASE BUILTIN_VA_ARG BREAK AUTO AT_SPECIFIER AT_EXPR ATTRIBUTE ASM AND_AND AND ALIGNOF ]
## Transitions:
-- On error shift to state 44
-- On TILDE shift to state 32
-- On STAR shift to state 33
-- On SIZEOF shift to state 34
-- On PRETTY_FUNCTION__ shift to state 35
-- On PLUS_PLUS shift to state 36
-- On PLUS shift to state 37
-- On MINUS_MINUS shift to state 38
-- On MINUS shift to state 39
-- On LPAREN shift to state 40
-- On IDENT shift to state 45
-- On FUNCTION__ shift to state 46
-- On EXCLAM shift to state 47
-- On CST_WSTRING shift to state 48
-- On CST_WCHAR shift to state 49
-- On CST_STRING shift to state 50
-- On CST_INT shift to state 51
-- On CST_FLOAT shift to state 52
-- On CST_CHAR shift to state 53
-- On BUILTIN_VA_ARG shift to state 54
-- On AT_EXPR shift to state 56
-- On AND_AND shift to state 60
-- On AND shift to state 62
-- On ALIGNOF shift to state 63
-- On wstring_list shift to state 98
-- On unary_expression shift to state 101
-- On string_list shift to state 106
-- On string_constant shift to state 108
-- On shift_expression shift to state 109
-- On relational_expression shift to state 116
-- On primary_expression shift to state 111
-- On postfix_expression shift to state 112
-- On paren_comma_expression shift to state 120
-- On one_string shift to state 121
-- On multiplicative_expression shift to state 122
-- On logical_or_expression shift to state 143
-- On logical_and_expression shift to state 147
-- On expression shift to state 165
-- On equality_expression shift to state 149
-- On constant shift to state 124
-- On conditional_expression shift to state 167
-- On comma_expression shift to state 362
-- On cast_expression shift to state 169
-- On bitwise_xor_expression shift to state 154
-- On bitwise_or_expression shift to state 164
-- On bitwise_and_expression shift to state 162
-- On assignment_expression shift to state 192
-- On additive_expression shift to state 136
## Reductions:

State 362:
## Known stack suffix:
## GOTO STAR comma_expression
## LR(1) items:
statement -> GOTO STAR comma_expression . SEMICOLON [ error WHILE VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF TRY TILDE THREAD SWITCH STRUCT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRETTY_FUNCTION__ PLUS_PLUS PLUS NAMED_TYPE MSATTR MSASM MINUS_MINUS MINUS LPAREN LONG LBRACE INT64 INT INLINE IF IDENT GOTO FUNCTION__ FOR FLOAT EXTERN EXCLAM ENUM ELSE DOUBLE DO DEFAULT DECLSPEC CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONTINUE CONST CHAR CASE BUILTIN_VA_ARG BREAK AUTO AT_SPECIFIER AT_EXPR ATTRIBUTE ASM AND_AND AND ALIGNOF ]
## Transitions:
-- On SEMICOLON shift to state 363
## Reductions:

State 363:
## Known stack suffix:
## GOTO STAR comma_expression SEMICOLON
## LR(1) items:
statement -> GOTO STAR comma_expression SEMICOLON . [ error WHILE VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF TRY TILDE THREAD SWITCH STRUCT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRETTY_FUNCTION__ PLUS_PLUS PLUS NAMED_TYPE MSATTR MSASM MINUS_MINUS MINUS LPAREN LONG LBRACE INT64 INT INLINE IF IDENT GOTO FUNCTION__ FOR FLOAT EXTERN EXCLAM ENUM ELSE DOUBLE DO DEFAULT DECLSPEC CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONTINUE CONST CHAR CASE BUILTIN_VA_ARG BREAK AUTO AT_SPECIFIER AT_EXPR ATTRIBUTE ASM AND_AND AND ALIGNOF ]
## Transitions:
## Reductions:
-- On error WHILE VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF TRY TILDE THREAD SWITCH STRUCT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRETTY_FUNCTION__ PLUS_PLUS PLUS NAMED_TYPE MSATTR MSASM MINUS_MINUS MINUS LPAREN LONG LBRACE INT64 INT INLINE IF IDENT GOTO FUNCTION__ FOR FLOAT EXTERN EXCLAM ENUM ELSE DOUBLE DO DEFAULT DECLSPEC CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONTINUE CONST CHAR CASE BUILTIN_VA_ARG BREAK AUTO AT_SPECIFIER AT_EXPR ATTRIBUTE ASM AND_AND AND ALIGNOF
--   reduce production statement -> GOTO STAR comma_expression SEMICOLON

State 364:
## Known stack suffix:
## GOTO IDENT
## LR(1) items:
statement -> GOTO IDENT . SEMICOLON [ error WHILE VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF TRY TILDE THREAD SWITCH STRUCT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRETTY_FUNCTION__ PLUS_PLUS PLUS NAMED_TYPE MSATTR MSASM MINUS_MINUS MINUS LPAREN LONG LBRACE INT64 INT INLINE IF IDENT GOTO FUNCTION__ FOR FLOAT EXTERN EXCLAM ENUM ELSE DOUBLE DO DEFAULT DECLSPEC CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONTINUE CONST CHAR CASE BUILTIN_VA_ARG BREAK AUTO AT_SPECIFIER AT_EXPR ATTRIBUTE ASM AND_AND AND ALIGNOF ]
## Transitions:
-- On SEMICOLON shift to state 365
## Reductions:

State 365:
## Known stack suffix:
## GOTO IDENT SEMICOLON
## LR(1) items:
statement -> GOTO IDENT SEMICOLON . [ error WHILE VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF TRY TILDE THREAD SWITCH STRUCT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRETTY_FUNCTION__ PLUS_PLUS PLUS NAMED_TYPE MSATTR MSASM MINUS_MINUS MINUS LPAREN LONG LBRACE INT64 INT INLINE IF IDENT GOTO FUNCTION__ FOR FLOAT EXTERN EXCLAM ENUM ELSE DOUBLE DO DEFAULT DECLSPEC CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONTINUE CONST CHAR CASE BUILTIN_VA_ARG BREAK AUTO AT_SPECIFIER AT_EXPR ATTRIBUTE ASM AND_AND AND ALIGNOF ]
## Transitions:
## Reductions:
-- On error WHILE VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF TRY TILDE THREAD SWITCH STRUCT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRETTY_FUNCTION__ PLUS_PLUS PLUS NAMED_TYPE MSATTR MSASM MINUS_MINUS MINUS LPAREN LONG LBRACE INT64 INT INLINE IF IDENT GOTO FUNCTION__ FOR FLOAT EXTERN EXCLAM ENUM ELSE DOUBLE DO DEFAULT DECLSPEC CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONTINUE CONST CHAR CASE BUILTIN_VA_ARG BREAK AUTO AT_SPECIFIER AT_EXPR ATTRIBUTE ASM AND_AND AND ALIGNOF
--   reduce production statement -> GOTO IDENT SEMICOLON

State 366:
## Known stack suffix:
## FOR
## LR(1) items:
statement -> FOR . LPAREN for_clause opt_expression SEMICOLON opt_expression RPAREN statement [ error WHILE VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF TRY TILDE THREAD SWITCH STRUCT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRETTY_FUNCTION__ PLUS_PLUS PLUS NAMED_TYPE MSATTR MSASM MINUS_MINUS MINUS LPAREN LONG LBRACE INT64 INT INLINE IF IDENT GOTO FUNCTION__ FOR FLOAT EXTERN EXCLAM ENUM ELSE DOUBLE DO DEFAULT DECLSPEC CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONTINUE CONST CHAR CASE BUILTIN_VA_ARG BREAK AUTO AT_SPECIFIER AT_EXPR ATTRIBUTE ASM AND_AND AND ALIGNOF ]
## Transitions:
-- On LPAREN shift to state 367
## Reductions:

State 367:
## Known stack suffix:
## FOR LPAREN
## LR(1) items:
statement -> FOR LPAREN . for_clause opt_expression SEMICOLON opt_expression RPAREN statement [ error WHILE VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF TRY TILDE THREAD SWITCH STRUCT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRETTY_FUNCTION__ PLUS_PLUS PLUS NAMED_TYPE MSATTR MSASM MINUS_MINUS MINUS LPAREN LONG LBRACE INT64 INT INLINE IF IDENT GOTO FUNCTION__ FOR FLOAT EXTERN EXCLAM ENUM ELSE DOUBLE DO DEFAULT DECLSPEC CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONTINUE CONST CHAR CASE BUILTIN_VA_ARG BREAK AUTO AT_SPECIFIER AT_EXPR ATTRIBUTE ASM AND_AND AND ALIGNOF ]
## Transitions:
-- On error shift to state 44
-- On VOLATILE shift to state 1
-- On VOID shift to state 2
-- On UNSIGNED shift to state 3
-- On UNION shift to state 4
-- On TYPEOF shift to state 9
-- On TYPEDEF shift to state 11
-- On TILDE shift to state 32
-- On THREAD shift to state 12
-- On STRUCT shift to state 13
-- On STATIC shift to state 15
-- On STAR shift to state 33
-- On SIZEOF shift to state 34
-- On SIGNED shift to state 16
-- On SHORT shift to state 17
-- On RESTRICT shift to state 18
-- On REGISTER shift to state 19
-- On PRETTY_FUNCTION__ shift to state 35
-- On PLUS_PLUS shift to state 36
-- On PLUS shift to state 37
-- On NAMED_TYPE shift to state 20
-- On MSATTR shift to state 21
-- On MINUS_MINUS shift to state 38
-- On MINUS shift to state 39
-- On LPAREN shift to state 40
-- On LONG shift to state 22
-- On INT64 shift to state 23
-- On INT shift to state 24
-- On INLINE shift to state 25
-- On IDENT shift to state 45
-- On FUNCTION__ shift to state 46
-- On FLOAT shift to state 26
-- On EXTERN shift to state 27
-- On EXCLAM shift to state 47
-- On ENUM shift to state 28
-- On DOUBLE shift to state 66
-- On DECLSPEC shift to state 67
-- On CST_WSTRING shift to state 48
-- On CST_WCHAR shift to state 49
-- On CST_STRING shift to state 50
-- On CST_INT shift to state 51
-- On CST_FLOAT shift to state 52
-- On CST_CHAR shift to state 53
-- On CONST shift to state 78
-- On CHAR shift to state 79
-- On BUILTIN_VA_ARG shift to state 54
-- On AUTO shift to state 80
-- On AT_SPECIFIER shift to state 81
-- On AT_EXPR shift to state 56
-- On ATTRIBUTE shift to state 85
-- On AND_AND shift to state 60
-- On AND shift to state 62
-- On ALIGNOF shift to state 63
-- On wstring_list shift to state 98
-- On unary_expression shift to state 101
-- On type_spec shift to state 89
-- On string_list shift to state 106
-- On string_constant shift to state 108
-- On shift_expression shift to state 109
-- On relational_expression shift to state 116
-- On primary_expression shift to state 111
-- On postfix_expression shift to state 112
-- On paren_comma_expression shift to state 120
-- On opt_expression shift to state 368
-- On one_string shift to state 121
-- On multiplicative_expression shift to state 122
-- On logical_or_expression shift to state 143
-- On logical_and_expression shift to state 147
-- On for_clause shift to state 370
-- On expression shift to state 165
-- On equality_expression shift to state 149
-- On declaration shift to state 471
-- On decl_spec_list shift to state 472
-- On cvspec shift to state 92
-- On constant shift to state 124
-- On conditional_expression shift to state 167
-- On comma_expression shift to state 193
-- On cast_expression shift to state 169
-- On bitwise_xor_expression shift to state 154
-- On bitwise_or_expression shift to state 164
-- On bitwise_and_expression shift to state 162
-- On attribute_nocv shift to state 95
-- On assignment_expression shift to state 192
-- On additive_expression shift to state 136
## Reductions:
-- On SEMICOLON
--   reduce production opt_expression ->

State 368:
## Known stack suffix:
## opt_expression
## LR(1) items:
for_clause -> opt_expression . SEMICOLON [ error TILDE STAR SIZEOF SEMICOLON PRETTY_FUNCTION__ PLUS_PLUS PLUS MINUS_MINUS MINUS LPAREN IDENT FUNCTION__ EXCLAM CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR BUILTIN_VA_ARG AT_EXPR AND_AND AND ALIGNOF ]
## Transitions:
-- On SEMICOLON shift to state 369
## Reductions:

State 369:
## Known stack suffix:
## opt_expression SEMICOLON
## LR(1) items:
for_clause -> opt_expression SEMICOLON . [ error TILDE STAR SIZEOF SEMICOLON PRETTY_FUNCTION__ PLUS_PLUS PLUS MINUS_MINUS MINUS LPAREN IDENT FUNCTION__ EXCLAM CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR BUILTIN_VA_ARG AT_EXPR AND_AND AND ALIGNOF ]
## Transitions:
## Reductions:
-- On error TILDE STAR SIZEOF SEMICOLON PRETTY_FUNCTION__ PLUS_PLUS PLUS MINUS_MINUS MINUS LPAREN IDENT FUNCTION__ EXCLAM CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR BUILTIN_VA_ARG AT_EXPR AND_AND AND ALIGNOF
--   reduce production for_clause -> opt_expression SEMICOLON

State 370:
## Known stack suffix:
## FOR LPAREN for_clause
## LR(1) items:
statement -> FOR LPAREN for_clause . opt_expression SEMICOLON opt_expression RPAREN statement [ error WHILE VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF TRY TILDE THREAD SWITCH STRUCT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRETTY_FUNCTION__ PLUS_PLUS PLUS NAMED_TYPE MSATTR MSASM MINUS_MINUS MINUS LPAREN LONG LBRACE INT64 INT INLINE IF IDENT GOTO FUNCTION__ FOR FLOAT EXTERN EXCLAM ENUM ELSE DOUBLE DO DEFAULT DECLSPEC CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONTINUE CONST CHAR CASE BUILTIN_VA_ARG BREAK AUTO AT_SPECIFIER AT_EXPR ATTRIBUTE ASM AND_AND AND ALIGNOF ]
## Transitions:
-- On error shift to state 44
-- On TILDE shift to state 32
-- On STAR shift to state 33
-- On SIZEOF shift to state 34
-- On PRETTY_FUNCTION__ shift to state 35
-- On PLUS_PLUS shift to state 36
-- On PLUS shift to state 37
-- On MINUS_MINUS shift to state 38
-- On MINUS shift to state 39
-- On LPAREN shift to state 40
-- On IDENT shift to state 45
-- On FUNCTION__ shift to state 46
-- On EXCLAM shift to state 47
-- On CST_WSTRING shift to state 48
-- On CST_WCHAR shift to state 49
-- On CST_STRING shift to state 50
-- On CST_INT shift to state 51
-- On CST_FLOAT shift to state 52
-- On CST_CHAR shift to state 53
-- On BUILTIN_VA_ARG shift to state 54
-- On AT_EXPR shift to state 56
-- On AND_AND shift to state 60
-- On AND shift to state 62
-- On ALIGNOF shift to state 63
-- On wstring_list shift to state 98
-- On unary_expression shift to state 101
-- On string_list shift to state 106
-- On string_constant shift to state 108
-- On shift_expression shift to state 109
-- On relational_expression shift to state 116
-- On primary_expression shift to state 111
-- On postfix_expression shift to state 112
-- On paren_comma_expression shift to state 120
-- On opt_expression shift to state 371
-- On one_string shift to state 121
-- On multiplicative_expression shift to state 122
-- On logical_or_expression shift to state 143
-- On logical_and_expression shift to state 147
-- On expression shift to state 165
-- On equality_expression shift to state 149
-- On constant shift to state 124
-- On conditional_expression shift to state 167
-- On comma_expression shift to state 193
-- On cast_expression shift to state 169
-- On bitwise_xor_expression shift to state 154
-- On bitwise_or_expression shift to state 164
-- On bitwise_and_expression shift to state 162
-- On assignment_expression shift to state 192
-- On additive_expression shift to state 136
## Reductions:
-- On SEMICOLON
--   reduce production opt_expression ->

State 371:
## Known stack suffix:
## FOR LPAREN for_clause opt_expression
## LR(1) items:
statement -> FOR LPAREN for_clause opt_expression . SEMICOLON opt_expression RPAREN statement [ error WHILE VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF TRY TILDE THREAD SWITCH STRUCT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRETTY_FUNCTION__ PLUS_PLUS PLUS NAMED_TYPE MSATTR MSASM MINUS_MINUS MINUS LPAREN LONG LBRACE INT64 INT INLINE IF IDENT GOTO FUNCTION__ FOR FLOAT EXTERN EXCLAM ENUM ELSE DOUBLE DO DEFAULT DECLSPEC CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONTINUE CONST CHAR CASE BUILTIN_VA_ARG BREAK AUTO AT_SPECIFIER AT_EXPR ATTRIBUTE ASM AND_AND AND ALIGNOF ]
## Transitions:
-- On SEMICOLON shift to state 372
## Reductions:

State 372:
## Known stack suffix:
## FOR LPAREN for_clause opt_expression SEMICOLON
## LR(1) items:
statement -> FOR LPAREN for_clause opt_expression SEMICOLON . opt_expression RPAREN statement [ error WHILE VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF TRY TILDE THREAD SWITCH STRUCT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRETTY_FUNCTION__ PLUS_PLUS PLUS NAMED_TYPE MSATTR MSASM MINUS_MINUS MINUS LPAREN LONG LBRACE INT64 INT INLINE IF IDENT GOTO FUNCTION__ FOR FLOAT EXTERN EXCLAM ENUM ELSE DOUBLE DO DEFAULT DECLSPEC CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONTINUE CONST CHAR CASE BUILTIN_VA_ARG BREAK AUTO AT_SPECIFIER AT_EXPR ATTRIBUTE ASM AND_AND AND ALIGNOF ]
## Transitions:
-- On error shift to state 44
-- On TILDE shift to state 32
-- On STAR shift to state 33
-- On SIZEOF shift to state 34
-- On PRETTY_FUNCTION__ shift to state 35
-- On PLUS_PLUS shift to state 36
-- On PLUS shift to state 37
-- On MINUS_MINUS shift to state 38
-- On MINUS shift to state 39
-- On LPAREN shift to state 40
-- On IDENT shift to state 45
-- On FUNCTION__ shift to state 46
-- On EXCLAM shift to state 47
-- On CST_WSTRING shift to state 48
-- On CST_WCHAR shift to state 49
-- On CST_STRING shift to state 50
-- On CST_INT shift to state 51
-- On CST_FLOAT shift to state 52
-- On CST_CHAR shift to state 53
-- On BUILTIN_VA_ARG shift to state 54
-- On AT_EXPR shift to state 56
-- On AND_AND shift to state 60
-- On AND shift to state 62
-- On ALIGNOF shift to state 63
-- On wstring_list shift to state 98
-- On unary_expression shift to state 101
-- On string_list shift to state 106
-- On string_constant shift to state 108
-- On shift_expression shift to state 109
-- On relational_expression shift to state 116
-- On primary_expression shift to state 111
-- On postfix_expression shift to state 112
-- On paren_comma_expression shift to state 120
-- On opt_expression shift to state 373
-- On one_string shift to state 121
-- On multiplicative_expression shift to state 122
-- On logical_or_expression shift to state 143
-- On logical_and_expression shift to state 147
-- On expression shift to state 165
-- On equality_expression shift to state 149
-- On constant shift to state 124
-- On conditional_expression shift to state 167
-- On comma_expression shift to state 193
-- On cast_expression shift to state 169
-- On bitwise_xor_expression shift to state 154
-- On bitwise_or_expression shift to state 164
-- On bitwise_and_expression shift to state 162
-- On assignment_expression shift to state 192
-- On additive_expression shift to state 136
## Reductions:
-- On RPAREN
--   reduce production opt_expression ->

State 373:
## Known stack suffix:
## FOR LPAREN for_clause opt_expression SEMICOLON opt_expression
## LR(1) items:
statement -> FOR LPAREN for_clause opt_expression SEMICOLON opt_expression . RPAREN statement [ error WHILE VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF TRY TILDE THREAD SWITCH STRUCT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRETTY_FUNCTION__ PLUS_PLUS PLUS NAMED_TYPE MSATTR MSASM MINUS_MINUS MINUS LPAREN LONG LBRACE INT64 INT INLINE IF IDENT GOTO FUNCTION__ FOR FLOAT EXTERN EXCLAM ENUM ELSE DOUBLE DO DEFAULT DECLSPEC CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONTINUE CONST CHAR CASE BUILTIN_VA_ARG BREAK AUTO AT_SPECIFIER AT_EXPR ATTRIBUTE ASM AND_AND AND ALIGNOF ]
## Transitions:
-- On RPAREN shift to state 374
## Reductions:

State 374:
## Known stack suffix:
## FOR LPAREN for_clause opt_expression SEMICOLON opt_expression RPAREN
## LR(1) items:
statement -> FOR LPAREN for_clause opt_expression SEMICOLON opt_expression RPAREN . statement [ error WHILE VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF TRY TILDE THREAD SWITCH STRUCT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRETTY_FUNCTION__ PLUS_PLUS PLUS NAMED_TYPE MSATTR MSASM MINUS_MINUS MINUS LPAREN LONG LBRACE INT64 INT INLINE IF IDENT GOTO FUNCTION__ FOR FLOAT EXTERN EXCLAM ENUM ELSE DOUBLE DO DEFAULT DECLSPEC CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONTINUE CONST CHAR CASE BUILTIN_VA_ARG BREAK AUTO AT_SPECIFIER AT_EXPR ATTRIBUTE ASM AND_AND AND ALIGNOF ]
## Transitions:
-- On error shift to state 326
-- On WHILE shift to state 330
-- On TRY shift to state 337
-- On TILDE shift to state 32
-- On SWITCH shift to state 348
-- On STAR shift to state 33
-- On SIZEOF shift to state 34
-- On SEMICOLON shift to state 350
-- On RETURN shift to state 351
-- On PRETTY_FUNCTION__ shift to state 35
-- On PLUS_PLUS shift to state 36
-- On PLUS shift to state 37
-- On MSASM shift to state 355
-- On MINUS_MINUS shift to state 38
-- On MINUS shift to state 39
-- On LPAREN shift to state 40
-- On LBRACE shift to state 65
-- On IF shift to state 356
-- On IDENT shift to state 358
-- On GOTO shift to state 360
-- On FUNCTION__ shift to state 46
-- On FOR shift to state 366
-- On EXCLAM shift to state 47
-- On DO shift to state 375
-- On DEFAULT shift to state 495
-- On CST_WSTRING shift to state 48
-- On CST_WCHAR shift to state 49
-- On CST_STRING shift to state 50
-- On CST_INT shift to state 51
-- On CST_FLOAT shift to state 52
-- On CST_CHAR shift to state 53
-- On CONTINUE shift to state 497
-- On CASE shift to state 499
-- On BUILTIN_VA_ARG shift to state 54
-- On BREAK shift to state 505
-- On AT_EXPR shift to state 56
-- On ASM shift to state 507
-- On AND_AND shift to state 60
-- On AND shift to state 62
-- On ALIGNOF shift to state 63
-- On wstring_list shift to state 98
-- On unary_expression shift to state 101
-- On string_list shift to state 106
-- On string_constant shift to state 108
-- On statement shift to state 514
-- On shift_expression shift to state 109
-- On relational_expression shift to state 116
-- On primary_expression shift to state 111
-- On postfix_expression shift to state 112
-- On paren_comma_expression shift to state 120
-- On one_string shift to state 121
-- On multiplicative_expression shift to state 122
-- On logical_or_expression shift to state 143
-- On logical_and_expression shift to state 147
-- On expression shift to state 165
-- On equality_expression shift to state 149
-- On constant shift to state 124
-- On conditional_expression shift to state 167
-- On comma_expression shift to state 515
-- On cast_expression shift to state 169
-- On block_begin shift to state 345
-- On block shift to state 517
-- On bitwise_xor_expression shift to state 154
-- On bitwise_or_expression shift to state 164
-- On bitwise_and_expression shift to state 162
-- On assignment_expression shift to state 192
-- On additive_expression shift to state 136
## Reductions:

State 375:
## Known stack suffix:
## DO
## LR(1) items:
statement -> DO . statement WHILE paren_comma_expression SEMICOLON [ error WHILE VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF TRY TILDE THREAD SWITCH STRUCT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRETTY_FUNCTION__ PLUS_PLUS PLUS NAMED_TYPE MSATTR MSASM MINUS_MINUS MINUS LPAREN LONG LBRACE INT64 INT INLINE IF IDENT GOTO FUNCTION__ FOR FLOAT EXTERN EXCLAM ENUM ELSE DOUBLE DO DEFAULT DECLSPEC CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONTINUE CONST CHAR CASE BUILTIN_VA_ARG BREAK AUTO AT_SPECIFIER AT_EXPR ATTRIBUTE ASM AND_AND AND ALIGNOF ]
## Transitions:
-- On error shift to state 376
-- On WHILE shift to state 379
-- On TRY shift to state 381
-- On TILDE shift to state 32
-- On SWITCH shift to state 388
-- On STAR shift to state 33
-- On SIZEOF shift to state 34
-- On SEMICOLON shift to state 390
-- On RETURN shift to state 391
-- On PRETTY_FUNCTION__ shift to state 35
-- On PLUS_PLUS shift to state 36
-- On PLUS shift to state 37
-- On MSASM shift to state 395
-- On MINUS_MINUS shift to state 38
-- On MINUS shift to state 39
-- On LPAREN shift to state 40
-- On LBRACE shift to state 65
-- On IF shift to state 396
-- On IDENT shift to state 398
-- On GOTO shift to state 400
-- On FUNCTION__ shift to state 46
-- On FOR shift to state 406
-- On EXCLAM shift to state 47
-- On DO shift to state 413
-- On DEFAULT shift to state 414
-- On CST_WSTRING shift to state 48
-- On CST_WCHAR shift to state 49
-- On CST_STRING shift to state 50
-- On CST_INT shift to state 51
-- On CST_FLOAT shift to state 52
-- On CST_CHAR shift to state 53
-- On CONTINUE shift to state 416
-- On CASE shift to state 418
-- On BUILTIN_VA_ARG shift to state 54
-- On BREAK shift to state 424
-- On AT_EXPR shift to state 56
-- On ASM shift to state 426
-- On AND_AND shift to state 60
-- On AND shift to state 62
-- On ALIGNOF shift to state 63
-- On wstring_list shift to state 98
-- On unary_expression shift to state 101
-- On string_list shift to state 106
-- On string_constant shift to state 108
-- On statement shift to state 491
-- On shift_expression shift to state 109
-- On relational_expression shift to state 116
-- On primary_expression shift to state 111
-- On postfix_expression shift to state 112
-- On paren_comma_expression shift to state 120
-- On one_string shift to state 121
-- On multiplicative_expression shift to state 122
-- On logical_or_expression shift to state 143
-- On logical_and_expression shift to state 147
-- On expression shift to state 165
-- On equality_expression shift to state 149
-- On constant shift to state 124
-- On conditional_expression shift to state 167
-- On comma_expression shift to state 467
-- On cast_expression shift to state 169
-- On block_begin shift to state 314
-- On block shift to state 469
-- On bitwise_xor_expression shift to state 154
-- On bitwise_or_expression shift to state 164
-- On bitwise_and_expression shift to state 162
-- On assignment_expression shift to state 192
-- On additive_expression shift to state 136
## Reductions:

State 376:
## Known stack suffix:
## error
## LR(1) items:
block -> error . location RBRACE [ WHILE ELSE ]
comma_expression -> error . COMMA comma_expression [ SEMICOLON ]
statement -> error . location SEMICOLON [ WHILE ELSE ]
## Transitions:
-- On COMMA shift to state 43
-- On location shift to state 377
## Reductions:
-- On SEMICOLON RBRACE
--   reduce production location ->

State 377:
## Known stack suffix:
## error location
## LR(1) items:
block -> error location . RBRACE [ WHILE ELSE ]
statement -> error location . SEMICOLON [ WHILE ELSE ]
## Transitions:
-- On SEMICOLON shift to state 378
-- On RBRACE shift to state 340
## Reductions:

State 378:
## Known stack suffix:
## error location SEMICOLON
## LR(1) items:
statement -> error location SEMICOLON . [ WHILE ELSE ]
## Transitions:
## Reductions:
-- On WHILE ELSE
--   reduce production statement -> error location SEMICOLON

State 379:
## Known stack suffix:
## WHILE
## LR(1) items:
statement -> WHILE . paren_comma_expression statement [ WHILE ELSE ]
## Transitions:
-- On LPAREN shift to state 331
-- On paren_comma_expression shift to state 380
## Reductions:

State 380:
## Known stack suffix:
## WHILE paren_comma_expression
## LR(1) items:
statement -> WHILE paren_comma_expression . statement [ WHILE ELSE ]
## Transitions:
-- On error shift to state 376
-- On WHILE shift to state 379
-- On TRY shift to state 381
-- On TILDE shift to state 32
-- On SWITCH shift to state 388
-- On STAR shift to state 33
-- On SIZEOF shift to state 34
-- On SEMICOLON shift to state 390
-- On RETURN shift to state 391
-- On PRETTY_FUNCTION__ shift to state 35
-- On PLUS_PLUS shift to state 36
-- On PLUS shift to state 37
-- On MSASM shift to state 395
-- On MINUS_MINUS shift to state 38
-- On MINUS shift to state 39
-- On LPAREN shift to state 40
-- On LBRACE shift to state 65
-- On IF shift to state 396
-- On IDENT shift to state 398
-- On GOTO shift to state 400
-- On FUNCTION__ shift to state 46
-- On FOR shift to state 406
-- On EXCLAM shift to state 47
-- On DO shift to state 413
-- On DEFAULT shift to state 414
-- On CST_WSTRING shift to state 48
-- On CST_WCHAR shift to state 49
-- On CST_STRING shift to state 50
-- On CST_INT shift to state 51
-- On CST_FLOAT shift to state 52
-- On CST_CHAR shift to state 53
-- On CONTINUE shift to state 416
-- On CASE shift to state 418
-- On BUILTIN_VA_ARG shift to state 54
-- On BREAK shift to state 424
-- On AT_EXPR shift to state 56
-- On ASM shift to state 426
-- On AND_AND shift to state 60
-- On AND shift to state 62
-- On ALIGNOF shift to state 63
-- On wstring_list shift to state 98
-- On unary_expression shift to state 101
-- On string_list shift to state 106
-- On string_constant shift to state 108
-- On statement shift to state 490
-- On shift_expression shift to state 109
-- On relational_expression shift to state 116
-- On primary_expression shift to state 111
-- On postfix_expression shift to state 112
-- On paren_comma_expression shift to state 120
-- On one_string shift to state 121
-- On multiplicative_expression shift to state 122
-- On logical_or_expression shift to state 143
-- On logical_and_expression shift to state 147
-- On expression shift to state 165
-- On equality_expression shift to state 149
-- On constant shift to state 124
-- On conditional_expression shift to state 167
-- On comma_expression shift to state 467
-- On cast_expression shift to state 169
-- On block_begin shift to state 314
-- On block shift to state 469
-- On bitwise_xor_expression shift to state 154
-- On bitwise_or_expression shift to state 164
-- On bitwise_and_expression shift to state 162
-- On assignment_expression shift to state 192
-- On additive_expression shift to state 136
## Reductions:

State 381:
## Known stack suffix:
## TRY
## LR(1) items:
statement -> TRY . block EXCEPT paren_comma_expression block [ WHILE ELSE ]
statement -> TRY . block FINALLY block [ WHILE ELSE ]
## Transitions:
-- On error shift to state 338
-- On LBRACE shift to state 65
-- On block_begin shift to state 314
-- On block shift to state 382
## Reductions:

State 382:
## Known stack suffix:
## TRY block
## LR(1) items:
statement -> TRY block . EXCEPT paren_comma_expression block [ WHILE ELSE ]
statement -> TRY block . FINALLY block [ WHILE ELSE ]
## Transitions:
-- On FINALLY shift to state 383
-- On EXCEPT shift to state 385
## Reductions:

State 383:
## Known stack suffix:
## TRY block FINALLY
## LR(1) items:
statement -> TRY block FINALLY . block [ WHILE ELSE ]
## Transitions:
-- On error shift to state 338
-- On LBRACE shift to state 65
-- On block_begin shift to state 314
-- On block shift to state 384
## Reductions:

State 384:
## Known stack suffix:
## TRY block FINALLY block
## LR(1) items:
statement -> TRY block FINALLY block . [ WHILE ELSE ]
## Transitions:
## Reductions:
-- On WHILE ELSE
--   reduce production statement -> TRY block FINALLY block

State 385:
## Known stack suffix:
## TRY block EXCEPT
## LR(1) items:
statement -> TRY block EXCEPT . paren_comma_expression block [ WHILE ELSE ]
## Transitions:
-- On LPAREN shift to state 331
-- On paren_comma_expression shift to state 386
## Reductions:

State 386:
## Known stack suffix:
## TRY block EXCEPT paren_comma_expression
## LR(1) items:
statement -> TRY block EXCEPT paren_comma_expression . block [ WHILE ELSE ]
## Transitions:
-- On error shift to state 338
-- On LBRACE shift to state 65
-- On block_begin shift to state 314
-- On block shift to state 387
## Reductions:

State 387:
## Known stack suffix:
## TRY block EXCEPT paren_comma_expression block
## LR(1) items:
statement -> TRY block EXCEPT paren_comma_expression block . [ WHILE ELSE ]
## Transitions:
## Reductions:
-- On WHILE ELSE
--   reduce production statement -> TRY block EXCEPT paren_comma_expression block

State 388:
## Known stack suffix:
## SWITCH
## LR(1) items:
statement -> SWITCH . paren_comma_expression statement [ WHILE ELSE ]
## Transitions:
-- On LPAREN shift to state 331
-- On paren_comma_expression shift to state 389
## Reductions:

State 389:
## Known stack suffix:
## SWITCH paren_comma_expression
## LR(1) items:
statement -> SWITCH paren_comma_expression . statement [ WHILE ELSE ]
## Transitions:
-- On error shift to state 376
-- On WHILE shift to state 379
-- On TRY shift to state 381
-- On TILDE shift to state 32
-- On SWITCH shift to state 388
-- On STAR shift to state 33
-- On SIZEOF shift to state 34
-- On SEMICOLON shift to state 390
-- On RETURN shift to state 391
-- On PRETTY_FUNCTION__ shift to state 35
-- On PLUS_PLUS shift to state 36
-- On PLUS shift to state 37
-- On MSASM shift to state 395
-- On MINUS_MINUS shift to state 38
-- On MINUS shift to state 39
-- On LPAREN shift to state 40
-- On LBRACE shift to state 65
-- On IF shift to state 396
-- On IDENT shift to state 398
-- On GOTO shift to state 400
-- On FUNCTION__ shift to state 46
-- On FOR shift to state 406
-- On EXCLAM shift to state 47
-- On DO shift to state 413
-- On DEFAULT shift to state 414
-- On CST_WSTRING shift to state 48
-- On CST_WCHAR shift to state 49
-- On CST_STRING shift to state 50
-- On CST_INT shift to state 51
-- On CST_FLOAT shift to state 52
-- On CST_CHAR shift to state 53
-- On CONTINUE shift to state 416
-- On CASE shift to state 418
-- On BUILTIN_VA_ARG shift to state 54
-- On BREAK shift to state 424
-- On AT_EXPR shift to state 56
-- On ASM shift to state 426
-- On AND_AND shift to state 60
-- On AND shift to state 62
-- On ALIGNOF shift to state 63
-- On wstring_list shift to state 98
-- On unary_expression shift to state 101
-- On string_list shift to state 106
-- On string_constant shift to state 108
-- On statement shift to state 489
-- On shift_expression shift to state 109
-- On relational_expression shift to state 116
-- On primary_expression shift to state 111
-- On postfix_expression shift to state 112
-- On paren_comma_expression shift to state 120
-- On one_string shift to state 121
-- On multiplicative_expression shift to state 122
-- On logical_or_expression shift to state 143
-- On logical_and_expression shift to state 147
-- On expression shift to state 165
-- On equality_expression shift to state 149
-- On constant shift to state 124
-- On conditional_expression shift to state 167
-- On comma_expression shift to state 467
-- On cast_expression shift to state 169
-- On block_begin shift to state 314
-- On block shift to state 469
-- On bitwise_xor_expression shift to state 154
-- On bitwise_or_expression shift to state 164
-- On bitwise_and_expression shift to state 162
-- On assignment_expression shift to state 192
-- On additive_expression shift to state 136
## Reductions:

State 390:
## Known stack suffix:
## SEMICOLON
## LR(1) items:
statement -> SEMICOLON . [ WHILE ELSE ]
## Transitions:
## Reductions:
-- On WHILE ELSE
--   reduce production statement -> SEMICOLON

State 391:
## Known stack suffix:
## RETURN
## LR(1) items:
statement -> RETURN . SEMICOLON [ WHILE ELSE ]
statement -> RETURN . comma_expression SEMICOLON [ WHILE ELSE ]
## Transitions:
-- On error shift to state 44
-- On TILDE shift to state 32
-- On STAR shift to state 33
-- On SIZEOF shift to state 34
-- On SEMICOLON shift to state 392
-- On PRETTY_FUNCTION__ shift to state 35
-- On PLUS_PLUS shift to state 36
-- On PLUS shift to state 37
-- On MINUS_MINUS shift to state 38
-- On MINUS shift to state 39
-- On LPAREN shift to state 40
-- On IDENT shift to state 45
-- On FUNCTION__ shift to state 46
-- On EXCLAM shift to state 47
-- On CST_WSTRING shift to state 48
-- On CST_WCHAR shift to state 49
-- On CST_STRING shift to state 50
-- On CST_INT shift to state 51
-- On CST_FLOAT shift to state 52
-- On CST_CHAR shift to state 53
-- On BUILTIN_VA_ARG shift to state 54
-- On AT_EXPR shift to state 56
-- On AND_AND shift to state 60
-- On AND shift to state 62
-- On ALIGNOF shift to state 63
-- On wstring_list shift to state 98
-- On unary_expression shift to state 101
-- On string_list shift to state 106
-- On string_constant shift to state 108
-- On shift_expression shift to state 109
-- On relational_expression shift to state 116
-- On primary_expression shift to state 111
-- On postfix_expression shift to state 112
-- On paren_comma_expression shift to state 120
-- On one_string shift to state 121
-- On multiplicative_expression shift to state 122
-- On logical_or_expression shift to state 143
-- On logical_and_expression shift to state 147
-- On expression shift to state 165
-- On equality_expression shift to state 149
-- On constant shift to state 124
-- On conditional_expression shift to state 167
-- On comma_expression shift to state 393
-- On cast_expression shift to state 169
-- On bitwise_xor_expression shift to state 154
-- On bitwise_or_expression shift to state 164
-- On bitwise_and_expression shift to state 162
-- On assignment_expression shift to state 192
-- On additive_expression shift to state 136
## Reductions:

State 392:
## Known stack suffix:
## RETURN SEMICOLON
## LR(1) items:
statement -> RETURN SEMICOLON . [ WHILE ELSE ]
## Transitions:
## Reductions:
-- On WHILE ELSE
--   reduce production statement -> RETURN SEMICOLON

State 393:
## Known stack suffix:
## RETURN comma_expression
## LR(1) items:
statement -> RETURN comma_expression . SEMICOLON [ WHILE ELSE ]
## Transitions:
-- On SEMICOLON shift to state 394
## Reductions:

State 394:
## Known stack suffix:
## RETURN comma_expression SEMICOLON
## LR(1) items:
statement -> RETURN comma_expression SEMICOLON . [ WHILE ELSE ]
## Transitions:
## Reductions:
-- On WHILE ELSE
--   reduce production statement -> RETURN comma_expression SEMICOLON

State 395:
## Known stack suffix:
## MSASM
## LR(1) items:
statement -> MSASM . [ WHILE ELSE ]
## Transitions:
## Reductions:
-- On WHILE ELSE
--   reduce production statement -> MSASM

State 396:
## Known stack suffix:
## IF
## LR(1) items:
statement -> IF . paren_comma_expression statement [ WHILE ELSE ]
statement -> IF . paren_comma_expression statement ELSE statement [ WHILE ELSE ]
## Transitions:
-- On LPAREN shift to state 331
-- On paren_comma_expression shift to state 397
## Reductions:

State 397:
## Known stack suffix:
## IF paren_comma_expression
## LR(1) items:
statement -> IF paren_comma_expression . statement [ WHILE ELSE ]
statement -> IF paren_comma_expression . statement ELSE statement [ WHILE ELSE ]
## Transitions:
-- On error shift to state 376
-- On WHILE shift to state 379
-- On TRY shift to state 381
-- On TILDE shift to state 32
-- On SWITCH shift to state 388
-- On STAR shift to state 33
-- On SIZEOF shift to state 34
-- On SEMICOLON shift to state 390
-- On RETURN shift to state 391
-- On PRETTY_FUNCTION__ shift to state 35
-- On PLUS_PLUS shift to state 36
-- On PLUS shift to state 37
-- On MSASM shift to state 395
-- On MINUS_MINUS shift to state 38
-- On MINUS shift to state 39
-- On LPAREN shift to state 40
-- On LBRACE shift to state 65
-- On IF shift to state 396
-- On IDENT shift to state 398
-- On GOTO shift to state 400
-- On FUNCTION__ shift to state 46
-- On FOR shift to state 406
-- On EXCLAM shift to state 47
-- On DO shift to state 413
-- On DEFAULT shift to state 414
-- On CST_WSTRING shift to state 48
-- On CST_WCHAR shift to state 49
-- On CST_STRING shift to state 50
-- On CST_INT shift to state 51
-- On CST_FLOAT shift to state 52
-- On CST_CHAR shift to state 53
-- On CONTINUE shift to state 416
-- On CASE shift to state 418
-- On BUILTIN_VA_ARG shift to state 54
-- On BREAK shift to state 424
-- On AT_EXPR shift to state 56
-- On ASM shift to state 426
-- On AND_AND shift to state 60
-- On AND shift to state 62
-- On ALIGNOF shift to state 63
-- On wstring_list shift to state 98
-- On unary_expression shift to state 101
-- On string_list shift to state 106
-- On string_constant shift to state 108
-- On statement shift to state 486
-- On shift_expression shift to state 109
-- On relational_expression shift to state 116
-- On primary_expression shift to state 111
-- On postfix_expression shift to state 112
-- On paren_comma_expression shift to state 120
-- On one_string shift to state 121
-- On multiplicative_expression shift to state 122
-- On logical_or_expression shift to state 143
-- On logical_and_expression shift to state 147
-- On expression shift to state 165
-- On equality_expression shift to state 149
-- On constant shift to state 124
-- On conditional_expression shift to state 167
-- On comma_expression shift to state 467
-- On cast_expression shift to state 169
-- On block_begin shift to state 314
-- On block shift to state 469
-- On bitwise_xor_expression shift to state 154
-- On bitwise_or_expression shift to state 164
-- On bitwise_and_expression shift to state 162
-- On assignment_expression shift to state 192
-- On additive_expression shift to state 136
## Reductions:

State 398:
## Known stack suffix:
## IDENT
## LR(1) items:
primary_expression -> IDENT . [ SUP_SUP_EQ SUP_SUP SUP_EQ SUP STAR_EQ STAR SLASH_EQ SLASH SEMICOLON QUEST PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_EQ MINUS LPAREN LBRACKET INF_INF_EQ INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ EQ DOT COMMA CIRC_EQ CIRC ARROW AND_EQ AND_AND AND ]
statement -> IDENT . COLON statement [ WHILE ELSE ]
## Transitions:
-- On COLON shift to state 399
## Reductions:
-- On SUP_SUP_EQ SUP_SUP SUP_EQ SUP STAR_EQ STAR SLASH_EQ SLASH SEMICOLON QUEST PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_EQ MINUS LPAREN LBRACKET INF_INF_EQ INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ EQ DOT COMMA CIRC_EQ CIRC ARROW AND_EQ AND_AND AND
--   reduce production primary_expression -> IDENT

State 399:
## Known stack suffix:
## IDENT COLON
## LR(1) items:
statement -> IDENT COLON . statement [ WHILE ELSE ]
## Transitions:
-- On error shift to state 376
-- On WHILE shift to state 379
-- On TRY shift to state 381
-- On TILDE shift to state 32
-- On SWITCH shift to state 388
-- On STAR shift to state 33
-- On SIZEOF shift to state 34
-- On SEMICOLON shift to state 390
-- On RETURN shift to state 391
-- On PRETTY_FUNCTION__ shift to state 35
-- On PLUS_PLUS shift to state 36
-- On PLUS shift to state 37
-- On MSASM shift to state 395
-- On MINUS_MINUS shift to state 38
-- On MINUS shift to state 39
-- On LPAREN shift to state 40
-- On LBRACE shift to state 65
-- On IF shift to state 396
-- On IDENT shift to state 398
-- On GOTO shift to state 400
-- On FUNCTION__ shift to state 46
-- On FOR shift to state 406
-- On EXCLAM shift to state 47
-- On DO shift to state 413
-- On DEFAULT shift to state 414
-- On CST_WSTRING shift to state 48
-- On CST_WCHAR shift to state 49
-- On CST_STRING shift to state 50
-- On CST_INT shift to state 51
-- On CST_FLOAT shift to state 52
-- On CST_CHAR shift to state 53
-- On CONTINUE shift to state 416
-- On CASE shift to state 418
-- On BUILTIN_VA_ARG shift to state 54
-- On BREAK shift to state 424
-- On AT_EXPR shift to state 56
-- On ASM shift to state 426
-- On AND_AND shift to state 60
-- On AND shift to state 62
-- On ALIGNOF shift to state 63
-- On wstring_list shift to state 98
-- On unary_expression shift to state 101
-- On string_list shift to state 106
-- On string_constant shift to state 108
-- On statement shift to state 485
-- On shift_expression shift to state 109
-- On relational_expression shift to state 116
-- On primary_expression shift to state 111
-- On postfix_expression shift to state 112
-- On paren_comma_expression shift to state 120
-- On one_string shift to state 121
-- On multiplicative_expression shift to state 122
-- On logical_or_expression shift to state 143
-- On logical_and_expression shift to state 147
-- On expression shift to state 165
-- On equality_expression shift to state 149
-- On constant shift to state 124
-- On conditional_expression shift to state 167
-- On comma_expression shift to state 467
-- On cast_expression shift to state 169
-- On block_begin shift to state 314
-- On block shift to state 469
-- On bitwise_xor_expression shift to state 154
-- On bitwise_or_expression shift to state 164
-- On bitwise_and_expression shift to state 162
-- On assignment_expression shift to state 192
-- On additive_expression shift to state 136
## Reductions:

State 400:
## Known stack suffix:
## GOTO
## LR(1) items:
statement -> GOTO . IDENT SEMICOLON [ WHILE ELSE ]
statement -> GOTO . STAR comma_expression SEMICOLON [ WHILE ELSE ]
## Transitions:
-- On STAR shift to state 401
-- On IDENT shift to state 404
## Reductions:

State 401:
## Known stack suffix:
## GOTO STAR
## LR(1) items:
statement -> GOTO STAR . comma_expression SEMICOLON [ WHILE ELSE ]
## Transitions:
-- On error shift to state 44
-- On TILDE shift to state 32
-- On STAR shift to state 33
-- On SIZEOF shift to state 34
-- On PRETTY_FUNCTION__ shift to state 35
-- On PLUS_PLUS shift to state 36
-- On PLUS shift to state 37
-- On MINUS_MINUS shift to state 38
-- On MINUS shift to state 39
-- On LPAREN shift to state 40
-- On IDENT shift to state 45
-- On FUNCTION__ shift to state 46
-- On EXCLAM shift to state 47
-- On CST_WSTRING shift to state 48
-- On CST_WCHAR shift to state 49
-- On CST_STRING shift to state 50
-- On CST_INT shift to state 51
-- On CST_FLOAT shift to state 52
-- On CST_CHAR shift to state 53
-- On BUILTIN_VA_ARG shift to state 54
-- On AT_EXPR shift to state 56
-- On AND_AND shift to state 60
-- On AND shift to state 62
-- On ALIGNOF shift to state 63
-- On wstring_list shift to state 98
-- On unary_expression shift to state 101
-- On string_list shift to state 106
-- On string_constant shift to state 108
-- On shift_expression shift to state 109
-- On relational_expression shift to state 116
-- On primary_expression shift to state 111
-- On postfix_expression shift to state 112
-- On paren_comma_expression shift to state 120
-- On one_string shift to state 121
-- On multiplicative_expression shift to state 122
-- On logical_or_expression shift to state 143
-- On logical_and_expression shift to state 147
-- On expression shift to state 165
-- On equality_expression shift to state 149
-- On constant shift to state 124
-- On conditional_expression shift to state 167
-- On comma_expression shift to state 402
-- On cast_expression shift to state 169
-- On bitwise_xor_expression shift to state 154
-- On bitwise_or_expression shift to state 164
-- On bitwise_and_expression shift to state 162
-- On assignment_expression shift to state 192
-- On additive_expression shift to state 136
## Reductions:

State 402:
## Known stack suffix:
## GOTO STAR comma_expression
## LR(1) items:
statement -> GOTO STAR comma_expression . SEMICOLON [ WHILE ELSE ]
## Transitions:
-- On SEMICOLON shift to state 403
## Reductions:

State 403:
## Known stack suffix:
## GOTO STAR comma_expression SEMICOLON
## LR(1) items:
statement -> GOTO STAR comma_expression SEMICOLON . [ WHILE ELSE ]
## Transitions:
## Reductions:
-- On WHILE ELSE
--   reduce production statement -> GOTO STAR comma_expression SEMICOLON

State 404:
## Known stack suffix:
## GOTO IDENT
## LR(1) items:
statement -> GOTO IDENT . SEMICOLON [ WHILE ELSE ]
## Transitions:
-- On SEMICOLON shift to state 405
## Reductions:

State 405:
## Known stack suffix:
## GOTO IDENT SEMICOLON
## LR(1) items:
statement -> GOTO IDENT SEMICOLON . [ WHILE ELSE ]
## Transitions:
## Reductions:
-- On WHILE ELSE
--   reduce production statement -> GOTO IDENT SEMICOLON

State 406:
## Known stack suffix:
## FOR
## LR(1) items:
statement -> FOR . LPAREN for_clause opt_expression SEMICOLON opt_expression RPAREN statement [ WHILE ELSE ]
## Transitions:
-- On LPAREN shift to state 407
## Reductions:

State 407:
## Known stack suffix:
## FOR LPAREN
## LR(1) items:
statement -> FOR LPAREN . for_clause opt_expression SEMICOLON opt_expression RPAREN statement [ WHILE ELSE ]
## Transitions:
-- On error shift to state 44
-- On VOLATILE shift to state 1
-- On VOID shift to state 2
-- On UNSIGNED shift to state 3
-- On UNION shift to state 4
-- On TYPEOF shift to state 9
-- On TYPEDEF shift to state 11
-- On TILDE shift to state 32
-- On THREAD shift to state 12
-- On STRUCT shift to state 13
-- On STATIC shift to state 15
-- On STAR shift to state 33
-- On SIZEOF shift to state 34
-- On SIGNED shift to state 16
-- On SHORT shift to state 17
-- On RESTRICT shift to state 18
-- On REGISTER shift to state 19
-- On PRETTY_FUNCTION__ shift to state 35
-- On PLUS_PLUS shift to state 36
-- On PLUS shift to state 37
-- On NAMED_TYPE shift to state 20
-- On MSATTR shift to state 21
-- On MINUS_MINUS shift to state 38
-- On MINUS shift to state 39
-- On LPAREN shift to state 40
-- On LONG shift to state 22
-- On INT64 shift to state 23
-- On INT shift to state 24
-- On INLINE shift to state 25
-- On IDENT shift to state 45
-- On FUNCTION__ shift to state 46
-- On FLOAT shift to state 26
-- On EXTERN shift to state 27
-- On EXCLAM shift to state 47
-- On ENUM shift to state 28
-- On DOUBLE shift to state 66
-- On DECLSPEC shift to state 67
-- On CST_WSTRING shift to state 48
-- On CST_WCHAR shift to state 49
-- On CST_STRING shift to state 50
-- On CST_INT shift to state 51
-- On CST_FLOAT shift to state 52
-- On CST_CHAR shift to state 53
-- On CONST shift to state 78
-- On CHAR shift to state 79
-- On BUILTIN_VA_ARG shift to state 54
-- On AUTO shift to state 80
-- On AT_SPECIFIER shift to state 81
-- On AT_EXPR shift to state 56
-- On ATTRIBUTE shift to state 85
-- On AND_AND shift to state 60
-- On AND shift to state 62
-- On ALIGNOF shift to state 63
-- On wstring_list shift to state 98
-- On unary_expression shift to state 101
-- On type_spec shift to state 89
-- On string_list shift to state 106
-- On string_constant shift to state 108
-- On shift_expression shift to state 109
-- On relational_expression shift to state 116
-- On primary_expression shift to state 111
-- On postfix_expression shift to state 112
-- On paren_comma_expression shift to state 120
-- On opt_expression shift to state 368
-- On one_string shift to state 121
-- On multiplicative_expression shift to state 122
-- On logical_or_expression shift to state 143
-- On logical_and_expression shift to state 147
-- On for_clause shift to state 408
-- On expression shift to state 165
-- On equality_expression shift to state 149
-- On declaration shift to state 471
-- On decl_spec_list shift to state 472
-- On cvspec shift to state 92
-- On constant shift to state 124
-- On conditional_expression shift to state 167
-- On comma_expression shift to state 193
-- On cast_expression shift to state 169
-- On bitwise_xor_expression shift to state 154
-- On bitwise_or_expression shift to state 164
-- On bitwise_and_expression shift to state 162
-- On attribute_nocv shift to state 95
-- On assignment_expression shift to state 192
-- On additive_expression shift to state 136
## Reductions:
-- On SEMICOLON
--   reduce production opt_expression ->

State 408:
## Known stack suffix:
## FOR LPAREN for_clause
## LR(1) items:
statement -> FOR LPAREN for_clause . opt_expression SEMICOLON opt_expression RPAREN statement [ WHILE ELSE ]
## Transitions:
-- On error shift to state 44
-- On TILDE shift to state 32
-- On STAR shift to state 33
-- On SIZEOF shift to state 34
-- On PRETTY_FUNCTION__ shift to state 35
-- On PLUS_PLUS shift to state 36
-- On PLUS shift to state 37
-- On MINUS_MINUS shift to state 38
-- On MINUS shift to state 39
-- On LPAREN shift to state 40
-- On IDENT shift to state 45
-- On FUNCTION__ shift to state 46
-- On EXCLAM shift to state 47
-- On CST_WSTRING shift to state 48
-- On CST_WCHAR shift to state 49
-- On CST_STRING shift to state 50
-- On CST_INT shift to state 51
-- On CST_FLOAT shift to state 52
-- On CST_CHAR shift to state 53
-- On BUILTIN_VA_ARG shift to state 54
-- On AT_EXPR shift to state 56
-- On AND_AND shift to state 60
-- On AND shift to state 62
-- On ALIGNOF shift to state 63
-- On wstring_list shift to state 98
-- On unary_expression shift to state 101
-- On string_list shift to state 106
-- On string_constant shift to state 108
-- On shift_expression shift to state 109
-- On relational_expression shift to state 116
-- On primary_expression shift to state 111
-- On postfix_expression shift to state 112
-- On paren_comma_expression shift to state 120
-- On opt_expression shift to state 409
-- On one_string shift to state 121
-- On multiplicative_expression shift to state 122
-- On logical_or_expression shift to state 143
-- On logical_and_expression shift to state 147
-- On expression shift to state 165
-- On equality_expression shift to state 149
-- On constant shift to state 124
-- On conditional_expression shift to state 167
-- On comma_expression shift to state 193
-- On cast_expression shift to state 169
-- On bitwise_xor_expression shift to state 154
-- On bitwise_or_expression shift to state 164
-- On bitwise_and_expression shift to state 162
-- On assignment_expression shift to state 192
-- On additive_expression shift to state 136
## Reductions:
-- On SEMICOLON
--   reduce production opt_expression ->

State 409:
## Known stack suffix:
## FOR LPAREN for_clause opt_expression
## LR(1) items:
statement -> FOR LPAREN for_clause opt_expression . SEMICOLON opt_expression RPAREN statement [ WHILE ELSE ]
## Transitions:
-- On SEMICOLON shift to state 410
## Reductions:

State 410:
## Known stack suffix:
## FOR LPAREN for_clause opt_expression SEMICOLON
## LR(1) items:
statement -> FOR LPAREN for_clause opt_expression SEMICOLON . opt_expression RPAREN statement [ WHILE ELSE ]
## Transitions:
-- On error shift to state 44
-- On TILDE shift to state 32
-- On STAR shift to state 33
-- On SIZEOF shift to state 34
-- On PRETTY_FUNCTION__ shift to state 35
-- On PLUS_PLUS shift to state 36
-- On PLUS shift to state 37
-- On MINUS_MINUS shift to state 38
-- On MINUS shift to state 39
-- On LPAREN shift to state 40
-- On IDENT shift to state 45
-- On FUNCTION__ shift to state 46
-- On EXCLAM shift to state 47
-- On CST_WSTRING shift to state 48
-- On CST_WCHAR shift to state 49
-- On CST_STRING shift to state 50
-- On CST_INT shift to state 51
-- On CST_FLOAT shift to state 52
-- On CST_CHAR shift to state 53
-- On BUILTIN_VA_ARG shift to state 54
-- On AT_EXPR shift to state 56
-- On AND_AND shift to state 60
-- On AND shift to state 62
-- On ALIGNOF shift to state 63
-- On wstring_list shift to state 98
-- On unary_expression shift to state 101
-- On string_list shift to state 106
-- On string_constant shift to state 108
-- On shift_expression shift to state 109
-- On relational_expression shift to state 116
-- On primary_expression shift to state 111
-- On postfix_expression shift to state 112
-- On paren_comma_expression shift to state 120
-- On opt_expression shift to state 411
-- On one_string shift to state 121
-- On multiplicative_expression shift to state 122
-- On logical_or_expression shift to state 143
-- On logical_and_expression shift to state 147
-- On expression shift to state 165
-- On equality_expression shift to state 149
-- On constant shift to state 124
-- On conditional_expression shift to state 167
-- On comma_expression shift to state 193
-- On cast_expression shift to state 169
-- On bitwise_xor_expression shift to state 154
-- On bitwise_or_expression shift to state 164
-- On bitwise_and_expression shift to state 162
-- On assignment_expression shift to state 192
-- On additive_expression shift to state 136
## Reductions:
-- On RPAREN
--   reduce production opt_expression ->

State 411:
## Known stack suffix:
## FOR LPAREN for_clause opt_expression SEMICOLON opt_expression
## LR(1) items:
statement -> FOR LPAREN for_clause opt_expression SEMICOLON opt_expression . RPAREN statement [ WHILE ELSE ]
## Transitions:
-- On RPAREN shift to state 412
## Reductions:

State 412:
## Known stack suffix:
## FOR LPAREN for_clause opt_expression SEMICOLON opt_expression RPAREN
## LR(1) items:
statement -> FOR LPAREN for_clause opt_expression SEMICOLON opt_expression RPAREN . statement [ WHILE ELSE ]
## Transitions:
-- On error shift to state 376
-- On WHILE shift to state 379
-- On TRY shift to state 381
-- On TILDE shift to state 32
-- On SWITCH shift to state 388
-- On STAR shift to state 33
-- On SIZEOF shift to state 34
-- On SEMICOLON shift to state 390
-- On RETURN shift to state 391
-- On PRETTY_FUNCTION__ shift to state 35
-- On PLUS_PLUS shift to state 36
-- On PLUS shift to state 37
-- On MSASM shift to state 395
-- On MINUS_MINUS shift to state 38
-- On MINUS shift to state 39
-- On LPAREN shift to state 40
-- On LBRACE shift to state 65
-- On IF shift to state 396
-- On IDENT shift to state 398
-- On GOTO shift to state 400
-- On FUNCTION__ shift to state 46
-- On FOR shift to state 406
-- On EXCLAM shift to state 47
-- On DO shift to state 413
-- On DEFAULT shift to state 414
-- On CST_WSTRING shift to state 48
-- On CST_WCHAR shift to state 49
-- On CST_STRING shift to state 50
-- On CST_INT shift to state 51
-- On CST_FLOAT shift to state 52
-- On CST_CHAR shift to state 53
-- On CONTINUE shift to state 416
-- On CASE shift to state 418
-- On BUILTIN_VA_ARG shift to state 54
-- On BREAK shift to state 424
-- On AT_EXPR shift to state 56
-- On ASM shift to state 426
-- On AND_AND shift to state 60
-- On AND shift to state 62
-- On ALIGNOF shift to state 63
-- On wstring_list shift to state 98
-- On unary_expression shift to state 101
-- On string_list shift to state 106
-- On string_constant shift to state 108
-- On statement shift to state 470
-- On shift_expression shift to state 109
-- On relational_expression shift to state 116
-- On primary_expression shift to state 111
-- On postfix_expression shift to state 112
-- On paren_comma_expression shift to state 120
-- On one_string shift to state 121
-- On multiplicative_expression shift to state 122
-- On logical_or_expression shift to state 143
-- On logical_and_expression shift to state 147
-- On expression shift to state 165
-- On equality_expression shift to state 149
-- On constant shift to state 124
-- On conditional_expression shift to state 167
-- On comma_expression shift to state 467
-- On cast_expression shift to state 169
-- On block_begin shift to state 314
-- On block shift to state 469
-- On bitwise_xor_expression shift to state 154
-- On bitwise_or_expression shift to state 164
-- On bitwise_and_expression shift to state 162
-- On assignment_expression shift to state 192
-- On additive_expression shift to state 136
## Reductions:

State 413:
## Known stack suffix:
## DO
## LR(1) items:
statement -> DO . statement WHILE paren_comma_expression SEMICOLON [ WHILE ELSE ]
## Transitions:
-- On error shift to state 376
-- On WHILE shift to state 379
-- On TRY shift to state 381
-- On TILDE shift to state 32
-- On SWITCH shift to state 388
-- On STAR shift to state 33
-- On SIZEOF shift to state 34
-- On SEMICOLON shift to state 390
-- On RETURN shift to state 391
-- On PRETTY_FUNCTION__ shift to state 35
-- On PLUS_PLUS shift to state 36
-- On PLUS shift to state 37
-- On MSASM shift to state 395
-- On MINUS_MINUS shift to state 38
-- On MINUS shift to state 39
-- On LPAREN shift to state 40
-- On LBRACE shift to state 65
-- On IF shift to state 396
-- On IDENT shift to state 398
-- On GOTO shift to state 400
-- On FUNCTION__ shift to state 46
-- On FOR shift to state 406
-- On EXCLAM shift to state 47
-- On DO shift to state 413
-- On DEFAULT shift to state 414
-- On CST_WSTRING shift to state 48
-- On CST_WCHAR shift to state 49
-- On CST_STRING shift to state 50
-- On CST_INT shift to state 51
-- On CST_FLOAT shift to state 52
-- On CST_CHAR shift to state 53
-- On CONTINUE shift to state 416
-- On CASE shift to state 418
-- On BUILTIN_VA_ARG shift to state 54
-- On BREAK shift to state 424
-- On AT_EXPR shift to state 56
-- On ASM shift to state 426
-- On AND_AND shift to state 60
-- On AND shift to state 62
-- On ALIGNOF shift to state 63
-- On wstring_list shift to state 98
-- On unary_expression shift to state 101
-- On string_list shift to state 106
-- On string_constant shift to state 108
-- On statement shift to state 461
-- On shift_expression shift to state 109
-- On relational_expression shift to state 116
-- On primary_expression shift to state 111
-- On postfix_expression shift to state 112
-- On paren_comma_expression shift to state 120
-- On one_string shift to state 121
-- On multiplicative_expression shift to state 122
-- On logical_or_expression shift to state 143
-- On logical_and_expression shift to state 147
-- On expression shift to state 165
-- On equality_expression shift to state 149
-- On constant shift to state 124
-- On conditional_expression shift to state 167
-- On comma_expression shift to state 467
-- On cast_expression shift to state 169
-- On block_begin shift to state 314
-- On block shift to state 469
-- On bitwise_xor_expression shift to state 154
-- On bitwise_or_expression shift to state 164
-- On bitwise_and_expression shift to state 162
-- On assignment_expression shift to state 192
-- On additive_expression shift to state 136
## Reductions:

State 414:
## Known stack suffix:
## DEFAULT
## LR(1) items:
statement -> DEFAULT . COLON [ WHILE ELSE ]
## Transitions:
-- On COLON shift to state 415
## Reductions:

State 415:
## Known stack suffix:
## DEFAULT COLON
## LR(1) items:
statement -> DEFAULT COLON . [ WHILE ELSE ]
## Transitions:
## Reductions:
-- On WHILE ELSE
--   reduce production statement -> DEFAULT COLON

State 416:
## Known stack suffix:
## CONTINUE
## LR(1) items:
statement -> CONTINUE . SEMICOLON [ WHILE ELSE ]
## Transitions:
-- On SEMICOLON shift to state 417
## Reductions:

State 417:
## Known stack suffix:
## CONTINUE SEMICOLON
## LR(1) items:
statement -> CONTINUE SEMICOLON . [ WHILE ELSE ]
## Transitions:
## Reductions:
-- On WHILE ELSE
--   reduce production statement -> CONTINUE SEMICOLON

State 418:
## Known stack suffix:
## CASE
## LR(1) items:
statement -> CASE . expression COLON [ WHILE ELSE ]
statement -> CASE . expression ELLIPSIS expression COLON [ WHILE ELSE ]
## Transitions:
-- On TILDE shift to state 32
-- On STAR shift to state 33
-- On SIZEOF shift to state 34
-- On PRETTY_FUNCTION__ shift to state 35
-- On PLUS_PLUS shift to state 36
-- On PLUS shift to state 37
-- On MINUS_MINUS shift to state 38
-- On MINUS shift to state 39
-- On LPAREN shift to state 40
-- On IDENT shift to state 45
-- On FUNCTION__ shift to state 46
-- On EXCLAM shift to state 47
-- On CST_WSTRING shift to state 48
-- On CST_WCHAR shift to state 49
-- On CST_STRING shift to state 50
-- On CST_INT shift to state 51
-- On CST_FLOAT shift to state 52
-- On CST_CHAR shift to state 53
-- On BUILTIN_VA_ARG shift to state 54
-- On AT_EXPR shift to state 56
-- On AND_AND shift to state 60
-- On AND shift to state 62
-- On ALIGNOF shift to state 63
-- On wstring_list shift to state 98
-- On unary_expression shift to state 101
-- On string_list shift to state 106
-- On string_constant shift to state 108
-- On shift_expression shift to state 109
-- On relational_expression shift to state 116
-- On primary_expression shift to state 111
-- On postfix_expression shift to state 112
-- On paren_comma_expression shift to state 120
-- On one_string shift to state 121
-- On multiplicative_expression shift to state 122
-- On logical_or_expression shift to state 143
-- On logical_and_expression shift to state 147
-- On expression shift to state 419
-- On equality_expression shift to state 149
-- On constant shift to state 124
-- On conditional_expression shift to state 167
-- On cast_expression shift to state 169
-- On bitwise_xor_expression shift to state 154
-- On bitwise_or_expression shift to state 164
-- On bitwise_and_expression shift to state 162
-- On assignment_expression shift to state 192
-- On additive_expression shift to state 136
## Reductions:

State 419:
## Known stack suffix:
## CASE expression
## LR(1) items:
statement -> CASE expression . COLON [ WHILE ELSE ]
statement -> CASE expression . ELLIPSIS expression COLON [ WHILE ELSE ]
## Transitions:
-- On ELLIPSIS shift to state 420
-- On COLON shift to state 423
## Reductions:

State 420:
## Known stack suffix:
## CASE expression ELLIPSIS
## LR(1) items:
statement -> CASE expression ELLIPSIS . expression COLON [ WHILE ELSE ]
## Transitions:
-- On TILDE shift to state 32
-- On STAR shift to state 33
-- On SIZEOF shift to state 34
-- On PRETTY_FUNCTION__ shift to state 35
-- On PLUS_PLUS shift to state 36
-- On PLUS shift to state 37
-- On MINUS_MINUS shift to state 38
-- On MINUS shift to state 39
-- On LPAREN shift to state 40
-- On IDENT shift to state 45
-- On FUNCTION__ shift to state 46
-- On EXCLAM shift to state 47
-- On CST_WSTRING shift to state 48
-- On CST_WCHAR shift to state 49
-- On CST_STRING shift to state 50
-- On CST_INT shift to state 51
-- On CST_FLOAT shift to state 52
-- On CST_CHAR shift to state 53
-- On BUILTIN_VA_ARG shift to state 54
-- On AT_EXPR shift to state 56
-- On AND_AND shift to state 60
-- On AND shift to state 62
-- On ALIGNOF shift to state 63
-- On wstring_list shift to state 98
-- On unary_expression shift to state 101
-- On string_list shift to state 106
-- On string_constant shift to state 108
-- On shift_expression shift to state 109
-- On relational_expression shift to state 116
-- On primary_expression shift to state 111
-- On postfix_expression shift to state 112
-- On paren_comma_expression shift to state 120
-- On one_string shift to state 121
-- On multiplicative_expression shift to state 122
-- On logical_or_expression shift to state 143
-- On logical_and_expression shift to state 147
-- On expression shift to state 421
-- On equality_expression shift to state 149
-- On constant shift to state 124
-- On conditional_expression shift to state 167
-- On cast_expression shift to state 169
-- On bitwise_xor_expression shift to state 154
-- On bitwise_or_expression shift to state 164
-- On bitwise_and_expression shift to state 162
-- On assignment_expression shift to state 192
-- On additive_expression shift to state 136
## Reductions:

State 421:
## Known stack suffix:
## CASE expression ELLIPSIS expression
## LR(1) items:
statement -> CASE expression ELLIPSIS expression . COLON [ WHILE ELSE ]
## Transitions:
-- On COLON shift to state 422
## Reductions:

State 422:
## Known stack suffix:
## CASE expression ELLIPSIS expression COLON
## LR(1) items:
statement -> CASE expression ELLIPSIS expression COLON . [ WHILE ELSE ]
## Transitions:
## Reductions:
-- On WHILE ELSE
--   reduce production statement -> CASE expression ELLIPSIS expression COLON

State 423:
## Known stack suffix:
## CASE expression COLON
## LR(1) items:
statement -> CASE expression COLON . [ WHILE ELSE ]
## Transitions:
## Reductions:
-- On WHILE ELSE
--   reduce production statement -> CASE expression COLON

State 424:
## Known stack suffix:
## BREAK
## LR(1) items:
statement -> BREAK . SEMICOLON [ WHILE ELSE ]
## Transitions:
-- On SEMICOLON shift to state 425
## Reductions:

State 425:
## Known stack suffix:
## BREAK SEMICOLON
## LR(1) items:
statement -> BREAK SEMICOLON . [ WHILE ELSE ]
## Transitions:
## Reductions:
-- On WHILE ELSE
--   reduce production statement -> BREAK SEMICOLON

State 426:
## Known stack suffix:
## ASM
## LR(1) items:
statement -> ASM . asmattr LPAREN asmtemplate asmoutputs RPAREN SEMICOLON [ WHILE ELSE ]
## Transitions:
-- On VOLATILE shift to state 427
-- On CONST shift to state 428
-- On asmattr shift to state 431
## Reductions:
-- On LPAREN
--   reduce production asmattr ->

State 427:
## Known stack suffix:
## VOLATILE
## LR(1) items:
asmattr -> VOLATILE . asmattr [ LPAREN ]
## Transitions:
-- On VOLATILE shift to state 427
-- On CONST shift to state 428
-- On asmattr shift to state 430
## Reductions:
-- On LPAREN
--   reduce production asmattr ->

State 428:
## Known stack suffix:
## CONST
## LR(1) items:
asmattr -> CONST . asmattr [ LPAREN ]
## Transitions:
-- On VOLATILE shift to state 427
-- On CONST shift to state 428
-- On asmattr shift to state 429
## Reductions:
-- On LPAREN
--   reduce production asmattr ->

State 429:
## Known stack suffix:
## CONST asmattr
## LR(1) items:
asmattr -> CONST asmattr . [ LPAREN ]
## Transitions:
## Reductions:
-- On LPAREN
--   reduce production asmattr -> CONST asmattr

State 430:
## Known stack suffix:
## VOLATILE asmattr
## LR(1) items:
asmattr -> VOLATILE asmattr . [ LPAREN ]
## Transitions:
## Reductions:
-- On LPAREN
--   reduce production asmattr -> VOLATILE asmattr

State 431:
## Known stack suffix:
## ASM asmattr
## LR(1) items:
statement -> ASM asmattr . LPAREN asmtemplate asmoutputs RPAREN SEMICOLON [ WHILE ELSE ]
## Transitions:
-- On LPAREN shift to state 432
## Reductions:

State 432:
## Known stack suffix:
## ASM asmattr LPAREN
## LR(1) items:
statement -> ASM asmattr LPAREN . asmtemplate asmoutputs RPAREN SEMICOLON [ WHILE ELSE ]
## Transitions:
-- On CST_STRING shift to state 433
-- On one_string_constant shift to state 434
-- On asmtemplate shift to state 436
## Reductions:

State 433:
## Known stack suffix:
## CST_STRING
## LR(1) items:
one_string_constant -> CST_STRING . [ RPAREN CST_STRING COMMA COLON ]
## Transitions:
## Reductions:
-- On RPAREN CST_STRING COMMA COLON
--   reduce production one_string_constant -> CST_STRING

State 434:
## Known stack suffix:
## one_string_constant
## LR(1) items:
asmtemplate -> one_string_constant . [ RPAREN COLON ]
asmtemplate -> one_string_constant . asmtemplate [ RPAREN COLON ]
## Transitions:
-- On CST_STRING shift to state 433
-- On one_string_constant shift to state 434
-- On asmtemplate shift to state 435
## Reductions:
-- On RPAREN COLON
--   reduce production asmtemplate -> one_string_constant

State 435:
## Known stack suffix:
## one_string_constant asmtemplate
## LR(1) items:
asmtemplate -> one_string_constant asmtemplate . [ RPAREN COLON ]
## Transitions:
## Reductions:
-- On RPAREN COLON
--   reduce production asmtemplate -> one_string_constant asmtemplate

State 436:
## Known stack suffix:
## ASM asmattr LPAREN asmtemplate
## LR(1) items:
statement -> ASM asmattr LPAREN asmtemplate . asmoutputs RPAREN SEMICOLON [ WHILE ELSE ]
## Transitions:
-- On COLON shift to state 437
-- On asmoutputs shift to state 458
## Reductions:
-- On RPAREN
--   reduce production asmoutputs ->

State 437:
## Known stack suffix:
## COLON
## LR(1) items:
asmoutputs -> COLON . asmoperands asminputs [ RPAREN ]
## Transitions:
-- On PRETTY_FUNCTION__ shift to state 35
-- On FUNCTION__ shift to state 46
-- On CST_STRING shift to state 50
-- On string_list shift to state 106
-- On string_constant shift to state 438
-- On one_string shift to state 121
-- On asmoperandsne shift to state 444
-- On asmoperands shift to state 447
-- On asmoperand shift to state 456
## Reductions:
-- On RPAREN COLON
--   reduce production asmoperands ->

State 438:
## Known stack suffix:
## string_constant
## LR(1) items:
asmoperand -> string_constant . LPAREN expression RPAREN [ RPAREN COMMA COLON ]
asmoperand -> string_constant . LPAREN error RPAREN [ RPAREN COMMA COLON ]
## Transitions:
-- On LPAREN shift to state 439
## Reductions:

State 439:
## Known stack suffix:
## string_constant LPAREN
## LR(1) items:
asmoperand -> string_constant LPAREN . expression RPAREN [ RPAREN COMMA COLON ]
asmoperand -> string_constant LPAREN . error RPAREN [ RPAREN COMMA COLON ]
## Transitions:
-- On error shift to state 440
-- On TILDE shift to state 32
-- On STAR shift to state 33
-- On SIZEOF shift to state 34
-- On PRETTY_FUNCTION__ shift to state 35
-- On PLUS_PLUS shift to state 36
-- On PLUS shift to state 37
-- On MINUS_MINUS shift to state 38
-- On MINUS shift to state 39
-- On LPAREN shift to state 40
-- On IDENT shift to state 45
-- On FUNCTION__ shift to state 46
-- On EXCLAM shift to state 47
-- On CST_WSTRING shift to state 48
-- On CST_WCHAR shift to state 49
-- On CST_STRING shift to state 50
-- On CST_INT shift to state 51
-- On CST_FLOAT shift to state 52
-- On CST_CHAR shift to state 53
-- On BUILTIN_VA_ARG shift to state 54
-- On AT_EXPR shift to state 56
-- On AND_AND shift to state 60
-- On AND shift to state 62
-- On ALIGNOF shift to state 63
-- On wstring_list shift to state 98
-- On unary_expression shift to state 101
-- On string_list shift to state 106
-- On string_constant shift to state 108
-- On shift_expression shift to state 109
-- On relational_expression shift to state 116
-- On primary_expression shift to state 111
-- On postfix_expression shift to state 112
-- On paren_comma_expression shift to state 120
-- On one_string shift to state 121
-- On multiplicative_expression shift to state 122
-- On logical_or_expression shift to state 143
-- On logical_and_expression shift to state 147
-- On expression shift to state 442
-- On equality_expression shift to state 149
-- On constant shift to state 124
-- On conditional_expression shift to state 167
-- On cast_expression shift to state 169
-- On bitwise_xor_expression shift to state 154
-- On bitwise_or_expression shift to state 164
-- On bitwise_and_expression shift to state 162
-- On assignment_expression shift to state 192
-- On additive_expression shift to state 136
## Reductions:

State 440:
## Known stack suffix:
## string_constant LPAREN error
## LR(1) items:
asmoperand -> string_constant LPAREN error . RPAREN [ RPAREN COMMA COLON ]
## Transitions:
-- On RPAREN shift to state 441
## Reductions:

State 441:
## Known stack suffix:
## string_constant LPAREN error RPAREN
## LR(1) items:
asmoperand -> string_constant LPAREN error RPAREN . [ RPAREN COMMA COLON ]
## Transitions:
## Reductions:
-- On RPAREN COMMA COLON
--   reduce production asmoperand -> string_constant LPAREN error RPAREN

State 442:
## Known stack suffix:
## string_constant LPAREN expression
## LR(1) items:
asmoperand -> string_constant LPAREN expression . RPAREN [ RPAREN COMMA COLON ]
## Transitions:
-- On RPAREN shift to state 443
## Reductions:

State 443:
## Known stack suffix:
## string_constant LPAREN expression RPAREN
## LR(1) items:
asmoperand -> string_constant LPAREN expression RPAREN . [ RPAREN COMMA COLON ]
## Transitions:
## Reductions:
-- On RPAREN COMMA COLON
--   reduce production asmoperand -> string_constant LPAREN expression RPAREN

State 444:
## Known stack suffix:
## asmoperandsne
## LR(1) items:
asmoperands -> asmoperandsne . [ RPAREN COLON ]
asmoperandsne -> asmoperandsne . COMMA asmoperand [ RPAREN COMMA COLON ]
## Transitions:
-- On COMMA shift to state 445
## Reductions:
-- On RPAREN COLON
--   reduce production asmoperands -> asmoperandsne

State 445:
## Known stack suffix:
## asmoperandsne COMMA
## LR(1) items:
asmoperandsne -> asmoperandsne COMMA . asmoperand [ RPAREN COMMA COLON ]
## Transitions:
-- On PRETTY_FUNCTION__ shift to state 35
-- On FUNCTION__ shift to state 46
-- On CST_STRING shift to state 50
-- On string_list shift to state 106
-- On string_constant shift to state 438
-- On one_string shift to state 121
-- On asmoperand shift to state 446
## Reductions:

State 446:
## Known stack suffix:
## asmoperandsne COMMA asmoperand
## LR(1) items:
asmoperandsne -> asmoperandsne COMMA asmoperand . [ RPAREN COMMA COLON ]
## Transitions:
## Reductions:
-- On RPAREN COMMA COLON
--   reduce production asmoperandsne -> asmoperandsne COMMA asmoperand

State 447:
## Known stack suffix:
## COLON asmoperands
## LR(1) items:
asmoutputs -> COLON asmoperands . asminputs [ RPAREN ]
## Transitions:
-- On COLON shift to state 448
-- On asminputs shift to state 457
## Reductions:
-- On RPAREN
--   reduce production asminputs ->

State 448:
## Known stack suffix:
## COLON
## LR(1) items:
asminputs -> COLON . asmoperands asmclobber [ RPAREN ]
## Transitions:
-- On PRETTY_FUNCTION__ shift to state 35
-- On FUNCTION__ shift to state 46
-- On CST_STRING shift to state 50
-- On string_list shift to state 106
-- On string_constant shift to state 438
-- On one_string shift to state 121
-- On asmoperandsne shift to state 444
-- On asmoperands shift to state 449
-- On asmoperand shift to state 456
## Reductions:
-- On RPAREN COLON
--   reduce production asmoperands ->

State 449:
## Known stack suffix:
## COLON asmoperands
## LR(1) items:
asminputs -> COLON asmoperands . asmclobber [ RPAREN ]
## Transitions:
-- On COLON shift to state 450
-- On asmclobber shift to state 455
## Reductions:
-- On RPAREN
--   reduce production asmclobber ->

State 450:
## Known stack suffix:
## COLON
## LR(1) items:
asmclobber -> COLON . asmcloberlst_ne [ RPAREN ]
## Transitions:
-- On CST_STRING shift to state 433
-- On one_string_constant shift to state 451
-- On asmcloberlst_ne shift to state 454
## Reductions:

State 451:
## Known stack suffix:
## one_string_constant
## LR(1) items:
asmcloberlst_ne -> one_string_constant . [ RPAREN ]
asmcloberlst_ne -> one_string_constant . COMMA asmcloberlst_ne [ RPAREN ]
## Transitions:
-- On COMMA shift to state 452
## Reductions:
-- On RPAREN
--   reduce production asmcloberlst_ne -> one_string_constant

State 452:
## Known stack suffix:
## one_string_constant COMMA
## LR(1) items:
asmcloberlst_ne -> one_string_constant COMMA . asmcloberlst_ne [ RPAREN ]
## Transitions:
-- On CST_STRING shift to state 433
-- On one_string_constant shift to state 451
-- On asmcloberlst_ne shift to state 453
## Reductions:

State 453:
## Known stack suffix:
## one_string_constant COMMA asmcloberlst_ne
## LR(1) items:
asmcloberlst_ne -> one_string_constant COMMA asmcloberlst_ne . [ RPAREN ]
## Transitions:
## Reductions:
-- On RPAREN
--   reduce production asmcloberlst_ne -> one_string_constant COMMA asmcloberlst_ne

State 454:
## Known stack suffix:
## COLON asmcloberlst_ne
## LR(1) items:
asmclobber -> COLON asmcloberlst_ne . [ RPAREN ]
## Transitions:
## Reductions:
-- On RPAREN
--   reduce production asmclobber -> COLON asmcloberlst_ne

State 455:
## Known stack suffix:
## COLON asmoperands asmclobber
## LR(1) items:
asminputs -> COLON asmoperands asmclobber . [ RPAREN ]
## Transitions:
## Reductions:
-- On RPAREN
--   reduce production asminputs -> COLON asmoperands asmclobber

State 456:
## Known stack suffix:
## asmoperand
## LR(1) items:
asmoperandsne -> asmoperand . [ RPAREN COMMA COLON ]
## Transitions:
## Reductions:
-- On RPAREN COMMA COLON
--   reduce production asmoperandsne -> asmoperand

State 457:
## Known stack suffix:
## COLON asmoperands asminputs
## LR(1) items:
asmoutputs -> COLON asmoperands asminputs . [ RPAREN ]
## Transitions:
## Reductions:
-- On RPAREN
--   reduce production asmoutputs -> COLON asmoperands asminputs

State 458:
## Known stack suffix:
## ASM asmattr LPAREN asmtemplate asmoutputs
## LR(1) items:
statement -> ASM asmattr LPAREN asmtemplate asmoutputs . RPAREN SEMICOLON [ WHILE ELSE ]
## Transitions:
-- On RPAREN shift to state 459
## Reductions:

State 459:
## Known stack suffix:
## ASM asmattr LPAREN asmtemplate asmoutputs RPAREN
## LR(1) items:
statement -> ASM asmattr LPAREN asmtemplate asmoutputs RPAREN . SEMICOLON [ WHILE ELSE ]
## Transitions:
-- On SEMICOLON shift to state 460
## Reductions:

State 460:
## Known stack suffix:
## ASM asmattr LPAREN asmtemplate asmoutputs RPAREN SEMICOLON
## LR(1) items:
statement -> ASM asmattr LPAREN asmtemplate asmoutputs RPAREN SEMICOLON . [ WHILE ELSE ]
## Transitions:
## Reductions:
-- On WHILE ELSE
--   reduce production statement -> ASM asmattr LPAREN asmtemplate asmoutputs RPAREN SEMICOLON

State 461:
## Known stack suffix:
## DO statement
## LR(1) items:
statement -> DO statement . WHILE paren_comma_expression SEMICOLON [ WHILE ELSE ]
## Transitions:
-- On WHILE shift to state 462
## Reductions:

State 462:
## Known stack suffix:
## DO statement WHILE
## LR(1) items:
statement -> DO statement WHILE . paren_comma_expression SEMICOLON [ WHILE ELSE ]
## Transitions:
-- On LPAREN shift to state 463
-- On paren_comma_expression shift to state 465
## Reductions:

State 463:
## Known stack suffix:
## LPAREN
## LR(1) items:
paren_comma_expression -> LPAREN . comma_expression RPAREN [ SEMICOLON ]
paren_comma_expression -> LPAREN . error RPAREN [ SEMICOLON ]
## Transitions:
-- On error shift to state 464
-- On TILDE shift to state 32
-- On STAR shift to state 33
-- On SIZEOF shift to state 34
-- On PRETTY_FUNCTION__ shift to state 35
-- On PLUS_PLUS shift to state 36
-- On PLUS shift to state 37
-- On MINUS_MINUS shift to state 38
-- On MINUS shift to state 39
-- On LPAREN shift to state 40
-- On IDENT shift to state 45
-- On FUNCTION__ shift to state 46
-- On EXCLAM shift to state 47
-- On CST_WSTRING shift to state 48
-- On CST_WCHAR shift to state 49
-- On CST_STRING shift to state 50
-- On CST_INT shift to state 51
-- On CST_FLOAT shift to state 52
-- On CST_CHAR shift to state 53
-- On BUILTIN_VA_ARG shift to state 54
-- On AT_EXPR shift to state 56
-- On AND_AND shift to state 60
-- On AND shift to state 62
-- On ALIGNOF shift to state 63
-- On wstring_list shift to state 98
-- On unary_expression shift to state 101
-- On string_list shift to state 106
-- On string_constant shift to state 108
-- On shift_expression shift to state 109
-- On relational_expression shift to state 116
-- On primary_expression shift to state 111
-- On postfix_expression shift to state 112
-- On paren_comma_expression shift to state 120
-- On one_string shift to state 121
-- On multiplicative_expression shift to state 122
-- On logical_or_expression shift to state 143
-- On logical_and_expression shift to state 147
-- On expression shift to state 165
-- On equality_expression shift to state 149
-- On constant shift to state 124
-- On conditional_expression shift to state 167
-- On comma_expression shift to state 312
-- On cast_expression shift to state 169
-- On bitwise_xor_expression shift to state 154
-- On bitwise_or_expression shift to state 164
-- On bitwise_and_expression shift to state 162
-- On assignment_expression shift to state 192
-- On additive_expression shift to state 136
## Reductions:

State 464:
## Known stack suffix:
## LPAREN error
## LR(1) items:
comma_expression -> error . COMMA comma_expression [ RPAREN ]
paren_comma_expression -> LPAREN error . RPAREN [ SEMICOLON ]
## Transitions:
-- On RPAREN shift to state 42
-- On COMMA shift to state 43
## Reductions:

State 465:
## Known stack suffix:
## DO statement WHILE paren_comma_expression
## LR(1) items:
statement -> DO statement WHILE paren_comma_expression . SEMICOLON [ WHILE ELSE ]
## Transitions:
-- On SEMICOLON shift to state 466
## Reductions:

State 466:
## Known stack suffix:
## DO statement WHILE paren_comma_expression SEMICOLON
## LR(1) items:
statement -> DO statement WHILE paren_comma_expression SEMICOLON . [ WHILE ELSE ]
## Transitions:
## Reductions:
-- On WHILE ELSE
--   reduce production statement -> DO statement WHILE paren_comma_expression SEMICOLON

State 467:
## Known stack suffix:
## comma_expression
## LR(1) items:
statement -> comma_expression . SEMICOLON [ WHILE ELSE ]
## Transitions:
-- On SEMICOLON shift to state 468
## Reductions:

State 468:
## Known stack suffix:
## comma_expression SEMICOLON
## LR(1) items:
statement -> comma_expression SEMICOLON . [ WHILE ELSE ]
## Transitions:
## Reductions:
-- On WHILE ELSE
--   reduce production statement -> comma_expression SEMICOLON

State 469:
## Known stack suffix:
## block
## LR(1) items:
statement -> block . [ WHILE ELSE ]
## Transitions:
## Reductions:
-- On WHILE ELSE
--   reduce production statement -> block

State 470:
## Known stack suffix:
## FOR LPAREN for_clause opt_expression SEMICOLON opt_expression RPAREN statement
## LR(1) items:
statement -> FOR LPAREN for_clause opt_expression SEMICOLON opt_expression RPAREN statement . [ WHILE ELSE ]
## Transitions:
## Reductions:
-- On WHILE ELSE
--   reduce production statement -> FOR LPAREN for_clause opt_expression SEMICOLON opt_expression RPAREN statement

State 471:
## Known stack suffix:
## declaration
## LR(1) items:
for_clause -> declaration . [ error TILDE STAR SIZEOF SEMICOLON PRETTY_FUNCTION__ PLUS_PLUS PLUS MINUS_MINUS MINUS LPAREN IDENT FUNCTION__ EXCLAM CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR BUILTIN_VA_ARG AT_EXPR AND_AND AND ALIGNOF ]
## Transitions:
## Reductions:
-- On error TILDE STAR SIZEOF SEMICOLON PRETTY_FUNCTION__ PLUS_PLUS PLUS MINUS_MINUS MINUS LPAREN IDENT FUNCTION__ EXCLAM CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR BUILTIN_VA_ARG AT_EXPR AND_AND AND ALIGNOF
--   reduce production for_clause -> declaration

State 472:
## Known stack suffix:
## decl_spec_list
## LR(1) items:
declaration -> decl_spec_list . init_declarator_list SEMICOLON [ error WHILE VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF TRY TILDE THREAD SWITCH STRUCT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRETTY_FUNCTION__ PRAGMA_LINE PRAGMA PLUS_PLUS PLUS NAMED_TYPE MSATTR MSASM MINUS_MINUS MINUS LPAREN LONG LBRACE INT64 INT INLINE IF IDENT GOTO FUNCTION__ FOR FLOAT EXTERN EXCLAM EOF ENUM DOUBLE DO DEFAULT DECLSPEC CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONTINUE CONST CHAR CASE BUILTIN_VA_ARG BREAK AUTO AT_TRANSFORMEXPR AT_TRANSFORM AT_SPECIFIER AT_EXPR ATTRIBUTE ASM AND_AND AND ALIGNOF # ]
declaration -> decl_spec_list . SEMICOLON [ error WHILE VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF TRY TILDE THREAD SWITCH STRUCT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRETTY_FUNCTION__ PRAGMA_LINE PRAGMA PLUS_PLUS PLUS NAMED_TYPE MSATTR MSASM MINUS_MINUS MINUS LPAREN LONG LBRACE INT64 INT INLINE IF IDENT GOTO FUNCTION__ FOR FLOAT EXTERN EXCLAM EOF ENUM DOUBLE DO DEFAULT DECLSPEC CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONTINUE CONST CHAR CASE BUILTIN_VA_ARG BREAK AUTO AT_TRANSFORMEXPR AT_TRANSFORM AT_SPECIFIER AT_EXPR ATTRIBUTE ASM AND_AND AND ALIGNOF # ]
## Transitions:
-- On STAR shift to state 246
-- On SEMICOLON shift to state 473
-- On pointer_opt shift to state 474
-- On pointer shift to state 252
-- On init_declarator_list shift to state 477
-- On init_declarator shift to state 479
-- On declarator shift to state 482
## Reductions:
-- On NAMED_TYPE LPAREN IDENT AT_NAME
--   reduce production pointer_opt ->

State 473:
## Known stack suffix:
## decl_spec_list SEMICOLON
## LR(1) items:
declaration -> decl_spec_list SEMICOLON . [ error WHILE VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF TRY TILDE THREAD SWITCH STRUCT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRETTY_FUNCTION__ PRAGMA_LINE PRAGMA PLUS_PLUS PLUS NAMED_TYPE MSATTR MSASM MINUS_MINUS MINUS LPAREN LONG LBRACE INT64 INT INLINE IF IDENT GOTO FUNCTION__ FOR FLOAT EXTERN EXCLAM EOF ENUM DOUBLE DO DEFAULT DECLSPEC CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONTINUE CONST CHAR CASE BUILTIN_VA_ARG BREAK AUTO AT_TRANSFORMEXPR AT_TRANSFORM AT_SPECIFIER AT_EXPR ATTRIBUTE ASM AND_AND AND ALIGNOF # ]
## Transitions:
## Reductions:
-- On error WHILE VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF TRY TILDE THREAD SWITCH STRUCT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRETTY_FUNCTION__ PRAGMA_LINE PRAGMA PLUS_PLUS PLUS NAMED_TYPE MSATTR MSASM MINUS_MINUS MINUS LPAREN LONG LBRACE INT64 INT INLINE IF IDENT GOTO FUNCTION__ FOR FLOAT EXTERN EXCLAM EOF ENUM DOUBLE DO DEFAULT DECLSPEC CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONTINUE CONST CHAR CASE BUILTIN_VA_ARG BREAK AUTO AT_TRANSFORMEXPR AT_TRANSFORM AT_SPECIFIER AT_EXPR ATTRIBUTE ASM AND_AND AND ALIGNOF #
--   reduce production declaration -> decl_spec_list SEMICOLON
** End-of-stream conflict on error WHILE VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF TRY TILDE THREAD SWITCH STRUCT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRETTY_FUNCTION__ PRAGMA_LINE PRAGMA PLUS_PLUS PLUS NAMED_TYPE MSATTR MSASM MINUS_MINUS MINUS LPAREN LONG LBRACE INT64 INT INLINE IF IDENT GOTO FUNCTION__ FOR FLOAT EXTERN EXCLAM EOF ENUM DOUBLE DO DEFAULT DECLSPEC CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONTINUE CONST CHAR CASE BUILTIN_VA_ARG BREAK AUTO AT_TRANSFORMEXPR AT_TRANSFORM AT_SPECIFIER AT_EXPR ATTRIBUTE ASM AND_AND AND ALIGNOF
**   There is a tension between
**   (1) reducing production declaration -> decl_spec_list SEMICOLON
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 474:
## Known stack suffix:
## pointer_opt
## LR(1) items:
declarator -> pointer_opt . direct_decl attributes_with_asm [ SEMICOLON RPAREN EQ COMMA COLON ]
## Transitions:
-- On NAMED_TYPE shift to state 5
-- On LPAREN shift to state 475
-- On IDENT shift to state 205
-- On AT_NAME shift to state 206
-- On id_or_typename shift to state 281
-- On direct_decl shift to state 282
## Reductions:

State 475:
## Known stack suffix:
## LPAREN
## LR(1) items:
direct_decl -> LPAREN . attributes declarator RPAREN [ VOLATILE THREAD SEMICOLON RPAREN RESTRICT MSATTR LPAREN LBRACKET EQ DECLSPEC CONST COMMA COLON ATTRIBUTE ASM ]
## Transitions:
-- On VOLATILE shift to state 247
-- On THREAD shift to state 12
-- On RESTRICT shift to state 248
-- On MSATTR shift to state 21
-- On DECLSPEC shift to state 67
-- On CONST shift to state 249
-- On ATTRIBUTE shift to state 85
-- On attributes shift to state 476
-- On attribute_nocv shift to state 253
-- On attribute shift to state 254
## Reductions:
-- On STAR NAMED_TYPE LPAREN IDENT AT_NAME
--   reduce production attributes ->

State 476:
## Known stack suffix:
## LPAREN attributes
## LR(1) items:
direct_decl -> LPAREN attributes . declarator RPAREN [ VOLATILE THREAD SEMICOLON RPAREN RESTRICT MSATTR LPAREN LBRACKET EQ DECLSPEC CONST COMMA COLON ATTRIBUTE ASM ]
## Transitions:
-- On STAR shift to state 246
-- On pointer_opt shift to state 474
-- On pointer shift to state 252
-- On declarator shift to state 279
## Reductions:
-- On NAMED_TYPE LPAREN IDENT AT_NAME
--   reduce production pointer_opt ->

State 477:
## Known stack suffix:
## decl_spec_list init_declarator_list
## LR(1) items:
declaration -> decl_spec_list init_declarator_list . SEMICOLON [ error WHILE VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF TRY TILDE THREAD SWITCH STRUCT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRETTY_FUNCTION__ PRAGMA_LINE PRAGMA PLUS_PLUS PLUS NAMED_TYPE MSATTR MSASM MINUS_MINUS MINUS LPAREN LONG LBRACE INT64 INT INLINE IF IDENT GOTO FUNCTION__ FOR FLOAT EXTERN EXCLAM EOF ENUM DOUBLE DO DEFAULT DECLSPEC CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONTINUE CONST CHAR CASE BUILTIN_VA_ARG BREAK AUTO AT_TRANSFORMEXPR AT_TRANSFORM AT_SPECIFIER AT_EXPR ATTRIBUTE ASM AND_AND AND ALIGNOF # ]
## Transitions:
-- On SEMICOLON shift to state 478
## Reductions:

State 478:
## Known stack suffix:
## decl_spec_list init_declarator_list SEMICOLON
## LR(1) items:
declaration -> decl_spec_list init_declarator_list SEMICOLON . [ error WHILE VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF TRY TILDE THREAD SWITCH STRUCT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRETTY_FUNCTION__ PRAGMA_LINE PRAGMA PLUS_PLUS PLUS NAMED_TYPE MSATTR MSASM MINUS_MINUS MINUS LPAREN LONG LBRACE INT64 INT INLINE IF IDENT GOTO FUNCTION__ FOR FLOAT EXTERN EXCLAM EOF ENUM DOUBLE DO DEFAULT DECLSPEC CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONTINUE CONST CHAR CASE BUILTIN_VA_ARG BREAK AUTO AT_TRANSFORMEXPR AT_TRANSFORM AT_SPECIFIER AT_EXPR ATTRIBUTE ASM AND_AND AND ALIGNOF # ]
## Transitions:
## Reductions:
-- On error WHILE VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF TRY TILDE THREAD SWITCH STRUCT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRETTY_FUNCTION__ PRAGMA_LINE PRAGMA PLUS_PLUS PLUS NAMED_TYPE MSATTR MSASM MINUS_MINUS MINUS LPAREN LONG LBRACE INT64 INT INLINE IF IDENT GOTO FUNCTION__ FOR FLOAT EXTERN EXCLAM EOF ENUM DOUBLE DO DEFAULT DECLSPEC CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONTINUE CONST CHAR CASE BUILTIN_VA_ARG BREAK AUTO AT_TRANSFORMEXPR AT_TRANSFORM AT_SPECIFIER AT_EXPR ATTRIBUTE ASM AND_AND AND ALIGNOF #
--   reduce production declaration -> decl_spec_list init_declarator_list SEMICOLON
** End-of-stream conflict on error WHILE VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF TRY TILDE THREAD SWITCH STRUCT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRETTY_FUNCTION__ PRAGMA_LINE PRAGMA PLUS_PLUS PLUS NAMED_TYPE MSATTR MSASM MINUS_MINUS MINUS LPAREN LONG LBRACE INT64 INT INLINE IF IDENT GOTO FUNCTION__ FOR FLOAT EXTERN EXCLAM EOF ENUM DOUBLE DO DEFAULT DECLSPEC CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONTINUE CONST CHAR CASE BUILTIN_VA_ARG BREAK AUTO AT_TRANSFORMEXPR AT_TRANSFORM AT_SPECIFIER AT_EXPR ATTRIBUTE ASM AND_AND AND ALIGNOF
**   There is a tension between
**   (1) reducing production declaration -> decl_spec_list init_declarator_list SEMICOLON
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 479:
## Known stack suffix:
## init_declarator
## LR(1) items:
init_declarator_list -> init_declarator . [ SEMICOLON ]
init_declarator_list -> init_declarator . COMMA init_declarator_list [ SEMICOLON ]
## Transitions:
-- On COMMA shift to state 480
## Reductions:
-- On SEMICOLON
--   reduce production init_declarator_list -> init_declarator

State 480:
## Known stack suffix:
## init_declarator COMMA
## LR(1) items:
init_declarator_list -> init_declarator COMMA . init_declarator_list [ SEMICOLON ]
## Transitions:
-- On STAR shift to state 246
-- On pointer_opt shift to state 474
-- On pointer shift to state 252
-- On init_declarator_list shift to state 481
-- On init_declarator shift to state 479
-- On declarator shift to state 482
## Reductions:
-- On NAMED_TYPE LPAREN IDENT AT_NAME
--   reduce production pointer_opt ->

State 481:
## Known stack suffix:
## init_declarator COMMA init_declarator_list
## LR(1) items:
init_declarator_list -> init_declarator COMMA init_declarator_list . [ SEMICOLON ]
## Transitions:
## Reductions:
-- On SEMICOLON
--   reduce production init_declarator_list -> init_declarator COMMA init_declarator_list

State 482:
## Known stack suffix:
## declarator
## LR(1) items:
init_declarator -> declarator . [ SEMICOLON COMMA ]
init_declarator -> declarator . EQ init_expression [ SEMICOLON COMMA ]
## Transitions:
-- On EQ shift to state 483
## Reductions:
-- On SEMICOLON COMMA
--   reduce production init_declarator -> declarator

State 483:
## Known stack suffix:
## declarator EQ
## LR(1) items:
init_declarator -> declarator EQ . init_expression [ SEMICOLON COMMA ]
## Transitions:
-- On TILDE shift to state 32
-- On STAR shift to state 33
-- On SIZEOF shift to state 34
-- On PRETTY_FUNCTION__ shift to state 35
-- On PLUS_PLUS shift to state 36
-- On PLUS shift to state 37
-- On MINUS_MINUS shift to state 38
-- On MINUS shift to state 39
-- On LPAREN shift to state 40
-- On LBRACE shift to state 225
-- On IDENT shift to state 45
-- On FUNCTION__ shift to state 46
-- On EXCLAM shift to state 47
-- On CST_WSTRING shift to state 48
-- On CST_WCHAR shift to state 49
-- On CST_STRING shift to state 50
-- On CST_INT shift to state 51
-- On CST_FLOAT shift to state 52
-- On CST_CHAR shift to state 53
-- On BUILTIN_VA_ARG shift to state 54
-- On AT_EXPR shift to state 56
-- On AND_AND shift to state 60
-- On AND shift to state 62
-- On ALIGNOF shift to state 63
-- On wstring_list shift to state 98
-- On unary_expression shift to state 101
-- On string_list shift to state 106
-- On string_constant shift to state 108
-- On shift_expression shift to state 109
-- On relational_expression shift to state 116
-- On primary_expression shift to state 111
-- On postfix_expression shift to state 112
-- On paren_comma_expression shift to state 120
-- On one_string shift to state 121
-- On multiplicative_expression shift to state 122
-- On logical_or_expression shift to state 143
-- On logical_and_expression shift to state 147
-- On init_expression shift to state 484
-- On expression shift to state 238
-- On equality_expression shift to state 149
-- On constant shift to state 124
-- On conditional_expression shift to state 167
-- On cast_expression shift to state 169
-- On bitwise_xor_expression shift to state 154
-- On bitwise_or_expression shift to state 164
-- On bitwise_and_expression shift to state 162
-- On assignment_expression shift to state 192
-- On additive_expression shift to state 136
## Reductions:

State 484:
## Known stack suffix:
## declarator EQ init_expression
## LR(1) items:
init_declarator -> declarator EQ init_expression . [ SEMICOLON COMMA ]
## Transitions:
## Reductions:
-- On SEMICOLON COMMA
--   reduce production init_declarator -> declarator EQ init_expression

State 485:
## Known stack suffix:
## IDENT COLON statement
## LR(1) items:
statement -> IDENT COLON statement . [ WHILE ELSE ]
## Transitions:
## Reductions:
-- On WHILE ELSE
--   reduce production statement -> IDENT COLON statement

State 486:
## Known stack suffix:
## IF paren_comma_expression statement
## LR(1) items:
statement -> IF paren_comma_expression statement . [ WHILE ELSE ]
statement -> IF paren_comma_expression statement . ELSE statement [ WHILE ELSE ]
## Transitions:
-- On ELSE shift to state 487
## Reductions:
-- On WHILE
--   reduce production statement -> IF paren_comma_expression statement

State 487:
## Known stack suffix:
## IF paren_comma_expression statement ELSE
## LR(1) items:
statement -> IF paren_comma_expression statement ELSE . statement [ WHILE ELSE ]
## Transitions:
-- On error shift to state 376
-- On WHILE shift to state 379
-- On TRY shift to state 381
-- On TILDE shift to state 32
-- On SWITCH shift to state 388
-- On STAR shift to state 33
-- On SIZEOF shift to state 34
-- On SEMICOLON shift to state 390
-- On RETURN shift to state 391
-- On PRETTY_FUNCTION__ shift to state 35
-- On PLUS_PLUS shift to state 36
-- On PLUS shift to state 37
-- On MSASM shift to state 395
-- On MINUS_MINUS shift to state 38
-- On MINUS shift to state 39
-- On LPAREN shift to state 40
-- On LBRACE shift to state 65
-- On IF shift to state 396
-- On IDENT shift to state 398
-- On GOTO shift to state 400
-- On FUNCTION__ shift to state 46
-- On FOR shift to state 406
-- On EXCLAM shift to state 47
-- On DO shift to state 413
-- On DEFAULT shift to state 414
-- On CST_WSTRING shift to state 48
-- On CST_WCHAR shift to state 49
-- On CST_STRING shift to state 50
-- On CST_INT shift to state 51
-- On CST_FLOAT shift to state 52
-- On CST_CHAR shift to state 53
-- On CONTINUE shift to state 416
-- On CASE shift to state 418
-- On BUILTIN_VA_ARG shift to state 54
-- On BREAK shift to state 424
-- On AT_EXPR shift to state 56
-- On ASM shift to state 426
-- On AND_AND shift to state 60
-- On AND shift to state 62
-- On ALIGNOF shift to state 63
-- On wstring_list shift to state 98
-- On unary_expression shift to state 101
-- On string_list shift to state 106
-- On string_constant shift to state 108
-- On statement shift to state 488
-- On shift_expression shift to state 109
-- On relational_expression shift to state 116
-- On primary_expression shift to state 111
-- On postfix_expression shift to state 112
-- On paren_comma_expression shift to state 120
-- On one_string shift to state 121
-- On multiplicative_expression shift to state 122
-- On logical_or_expression shift to state 143
-- On logical_and_expression shift to state 147
-- On expression shift to state 165
-- On equality_expression shift to state 149
-- On constant shift to state 124
-- On conditional_expression shift to state 167
-- On comma_expression shift to state 467
-- On cast_expression shift to state 169
-- On block_begin shift to state 314
-- On block shift to state 469
-- On bitwise_xor_expression shift to state 154
-- On bitwise_or_expression shift to state 164
-- On bitwise_and_expression shift to state 162
-- On assignment_expression shift to state 192
-- On additive_expression shift to state 136
## Reductions:

State 488:
## Known stack suffix:
## IF paren_comma_expression statement ELSE statement
## LR(1) items:
statement -> IF paren_comma_expression statement ELSE statement . [ WHILE ELSE ]
## Transitions:
## Reductions:
-- On WHILE ELSE
--   reduce production statement -> IF paren_comma_expression statement ELSE statement

State 489:
## Known stack suffix:
## SWITCH paren_comma_expression statement
## LR(1) items:
statement -> SWITCH paren_comma_expression statement . [ WHILE ELSE ]
## Transitions:
## Reductions:
-- On WHILE ELSE
--   reduce production statement -> SWITCH paren_comma_expression statement

State 490:
## Known stack suffix:
## WHILE paren_comma_expression statement
## LR(1) items:
statement -> WHILE paren_comma_expression statement . [ WHILE ELSE ]
## Transitions:
## Reductions:
-- On WHILE ELSE
--   reduce production statement -> WHILE paren_comma_expression statement

State 491:
## Known stack suffix:
## DO statement
## LR(1) items:
statement -> DO statement . WHILE paren_comma_expression SEMICOLON [ error WHILE VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF TRY TILDE THREAD SWITCH STRUCT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRETTY_FUNCTION__ PLUS_PLUS PLUS NAMED_TYPE MSATTR MSASM MINUS_MINUS MINUS LPAREN LONG LBRACE INT64 INT INLINE IF IDENT GOTO FUNCTION__ FOR FLOAT EXTERN EXCLAM ENUM ELSE DOUBLE DO DEFAULT DECLSPEC CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONTINUE CONST CHAR CASE BUILTIN_VA_ARG BREAK AUTO AT_SPECIFIER AT_EXPR ATTRIBUTE ASM AND_AND AND ALIGNOF ]
## Transitions:
-- On WHILE shift to state 492
## Reductions:

State 492:
## Known stack suffix:
## DO statement WHILE
## LR(1) items:
statement -> DO statement WHILE . paren_comma_expression SEMICOLON [ error WHILE VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF TRY TILDE THREAD SWITCH STRUCT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRETTY_FUNCTION__ PLUS_PLUS PLUS NAMED_TYPE MSATTR MSASM MINUS_MINUS MINUS LPAREN LONG LBRACE INT64 INT INLINE IF IDENT GOTO FUNCTION__ FOR FLOAT EXTERN EXCLAM ENUM ELSE DOUBLE DO DEFAULT DECLSPEC CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONTINUE CONST CHAR CASE BUILTIN_VA_ARG BREAK AUTO AT_SPECIFIER AT_EXPR ATTRIBUTE ASM AND_AND AND ALIGNOF ]
## Transitions:
-- On LPAREN shift to state 463
-- On paren_comma_expression shift to state 493
## Reductions:

State 493:
## Known stack suffix:
## DO statement WHILE paren_comma_expression
## LR(1) items:
statement -> DO statement WHILE paren_comma_expression . SEMICOLON [ error WHILE VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF TRY TILDE THREAD SWITCH STRUCT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRETTY_FUNCTION__ PLUS_PLUS PLUS NAMED_TYPE MSATTR MSASM MINUS_MINUS MINUS LPAREN LONG LBRACE INT64 INT INLINE IF IDENT GOTO FUNCTION__ FOR FLOAT EXTERN EXCLAM ENUM ELSE DOUBLE DO DEFAULT DECLSPEC CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONTINUE CONST CHAR CASE BUILTIN_VA_ARG BREAK AUTO AT_SPECIFIER AT_EXPR ATTRIBUTE ASM AND_AND AND ALIGNOF ]
## Transitions:
-- On SEMICOLON shift to state 494
## Reductions:

State 494:
## Known stack suffix:
## DO statement WHILE paren_comma_expression SEMICOLON
## LR(1) items:
statement -> DO statement WHILE paren_comma_expression SEMICOLON . [ error WHILE VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF TRY TILDE THREAD SWITCH STRUCT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRETTY_FUNCTION__ PLUS_PLUS PLUS NAMED_TYPE MSATTR MSASM MINUS_MINUS MINUS LPAREN LONG LBRACE INT64 INT INLINE IF IDENT GOTO FUNCTION__ FOR FLOAT EXTERN EXCLAM ENUM ELSE DOUBLE DO DEFAULT DECLSPEC CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONTINUE CONST CHAR CASE BUILTIN_VA_ARG BREAK AUTO AT_SPECIFIER AT_EXPR ATTRIBUTE ASM AND_AND AND ALIGNOF ]
## Transitions:
## Reductions:
-- On error WHILE VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF TRY TILDE THREAD SWITCH STRUCT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRETTY_FUNCTION__ PLUS_PLUS PLUS NAMED_TYPE MSATTR MSASM MINUS_MINUS MINUS LPAREN LONG LBRACE INT64 INT INLINE IF IDENT GOTO FUNCTION__ FOR FLOAT EXTERN EXCLAM ENUM ELSE DOUBLE DO DEFAULT DECLSPEC CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONTINUE CONST CHAR CASE BUILTIN_VA_ARG BREAK AUTO AT_SPECIFIER AT_EXPR ATTRIBUTE ASM AND_AND AND ALIGNOF
--   reduce production statement -> DO statement WHILE paren_comma_expression SEMICOLON

State 495:
## Known stack suffix:
## DEFAULT
## LR(1) items:
statement -> DEFAULT . COLON [ error WHILE VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF TRY TILDE THREAD SWITCH STRUCT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRETTY_FUNCTION__ PLUS_PLUS PLUS NAMED_TYPE MSATTR MSASM MINUS_MINUS MINUS LPAREN LONG LBRACE INT64 INT INLINE IF IDENT GOTO FUNCTION__ FOR FLOAT EXTERN EXCLAM ENUM ELSE DOUBLE DO DEFAULT DECLSPEC CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONTINUE CONST CHAR CASE BUILTIN_VA_ARG BREAK AUTO AT_SPECIFIER AT_EXPR ATTRIBUTE ASM AND_AND AND ALIGNOF ]
## Transitions:
-- On COLON shift to state 496
## Reductions:

State 496:
## Known stack suffix:
## DEFAULT COLON
## LR(1) items:
statement -> DEFAULT COLON . [ error WHILE VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF TRY TILDE THREAD SWITCH STRUCT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRETTY_FUNCTION__ PLUS_PLUS PLUS NAMED_TYPE MSATTR MSASM MINUS_MINUS MINUS LPAREN LONG LBRACE INT64 INT INLINE IF IDENT GOTO FUNCTION__ FOR FLOAT EXTERN EXCLAM ENUM ELSE DOUBLE DO DEFAULT DECLSPEC CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONTINUE CONST CHAR CASE BUILTIN_VA_ARG BREAK AUTO AT_SPECIFIER AT_EXPR ATTRIBUTE ASM AND_AND AND ALIGNOF ]
## Transitions:
## Reductions:
-- On error WHILE VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF TRY TILDE THREAD SWITCH STRUCT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRETTY_FUNCTION__ PLUS_PLUS PLUS NAMED_TYPE MSATTR MSASM MINUS_MINUS MINUS LPAREN LONG LBRACE INT64 INT INLINE IF IDENT GOTO FUNCTION__ FOR FLOAT EXTERN EXCLAM ENUM ELSE DOUBLE DO DEFAULT DECLSPEC CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONTINUE CONST CHAR CASE BUILTIN_VA_ARG BREAK AUTO AT_SPECIFIER AT_EXPR ATTRIBUTE ASM AND_AND AND ALIGNOF
--   reduce production statement -> DEFAULT COLON

State 497:
## Known stack suffix:
## CONTINUE
## LR(1) items:
statement -> CONTINUE . SEMICOLON [ error WHILE VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF TRY TILDE THREAD SWITCH STRUCT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRETTY_FUNCTION__ PLUS_PLUS PLUS NAMED_TYPE MSATTR MSASM MINUS_MINUS MINUS LPAREN LONG LBRACE INT64 INT INLINE IF IDENT GOTO FUNCTION__ FOR FLOAT EXTERN EXCLAM ENUM ELSE DOUBLE DO DEFAULT DECLSPEC CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONTINUE CONST CHAR CASE BUILTIN_VA_ARG BREAK AUTO AT_SPECIFIER AT_EXPR ATTRIBUTE ASM AND_AND AND ALIGNOF ]
## Transitions:
-- On SEMICOLON shift to state 498
## Reductions:

State 498:
## Known stack suffix:
## CONTINUE SEMICOLON
## LR(1) items:
statement -> CONTINUE SEMICOLON . [ error WHILE VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF TRY TILDE THREAD SWITCH STRUCT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRETTY_FUNCTION__ PLUS_PLUS PLUS NAMED_TYPE MSATTR MSASM MINUS_MINUS MINUS LPAREN LONG LBRACE INT64 INT INLINE IF IDENT GOTO FUNCTION__ FOR FLOAT EXTERN EXCLAM ENUM ELSE DOUBLE DO DEFAULT DECLSPEC CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONTINUE CONST CHAR CASE BUILTIN_VA_ARG BREAK AUTO AT_SPECIFIER AT_EXPR ATTRIBUTE ASM AND_AND AND ALIGNOF ]
## Transitions:
## Reductions:
-- On error WHILE VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF TRY TILDE THREAD SWITCH STRUCT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRETTY_FUNCTION__ PLUS_PLUS PLUS NAMED_TYPE MSATTR MSASM MINUS_MINUS MINUS LPAREN LONG LBRACE INT64 INT INLINE IF IDENT GOTO FUNCTION__ FOR FLOAT EXTERN EXCLAM ENUM ELSE DOUBLE DO DEFAULT DECLSPEC CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONTINUE CONST CHAR CASE BUILTIN_VA_ARG BREAK AUTO AT_SPECIFIER AT_EXPR ATTRIBUTE ASM AND_AND AND ALIGNOF
--   reduce production statement -> CONTINUE SEMICOLON

State 499:
## Known stack suffix:
## CASE
## LR(1) items:
statement -> CASE . expression COLON [ error WHILE VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF TRY TILDE THREAD SWITCH STRUCT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRETTY_FUNCTION__ PLUS_PLUS PLUS NAMED_TYPE MSATTR MSASM MINUS_MINUS MINUS LPAREN LONG LBRACE INT64 INT INLINE IF IDENT GOTO FUNCTION__ FOR FLOAT EXTERN EXCLAM ENUM ELSE DOUBLE DO DEFAULT DECLSPEC CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONTINUE CONST CHAR CASE BUILTIN_VA_ARG BREAK AUTO AT_SPECIFIER AT_EXPR ATTRIBUTE ASM AND_AND AND ALIGNOF ]
statement -> CASE . expression ELLIPSIS expression COLON [ error WHILE VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF TRY TILDE THREAD SWITCH STRUCT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRETTY_FUNCTION__ PLUS_PLUS PLUS NAMED_TYPE MSATTR MSASM MINUS_MINUS MINUS LPAREN LONG LBRACE INT64 INT INLINE IF IDENT GOTO FUNCTION__ FOR FLOAT EXTERN EXCLAM ENUM ELSE DOUBLE DO DEFAULT DECLSPEC CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONTINUE CONST CHAR CASE BUILTIN_VA_ARG BREAK AUTO AT_SPECIFIER AT_EXPR ATTRIBUTE ASM AND_AND AND ALIGNOF ]
## Transitions:
-- On TILDE shift to state 32
-- On STAR shift to state 33
-- On SIZEOF shift to state 34
-- On PRETTY_FUNCTION__ shift to state 35
-- On PLUS_PLUS shift to state 36
-- On PLUS shift to state 37
-- On MINUS_MINUS shift to state 38
-- On MINUS shift to state 39
-- On LPAREN shift to state 40
-- On IDENT shift to state 45
-- On FUNCTION__ shift to state 46
-- On EXCLAM shift to state 47
-- On CST_WSTRING shift to state 48
-- On CST_WCHAR shift to state 49
-- On CST_STRING shift to state 50
-- On CST_INT shift to state 51
-- On CST_FLOAT shift to state 52
-- On CST_CHAR shift to state 53
-- On BUILTIN_VA_ARG shift to state 54
-- On AT_EXPR shift to state 56
-- On AND_AND shift to state 60
-- On AND shift to state 62
-- On ALIGNOF shift to state 63
-- On wstring_list shift to state 98
-- On unary_expression shift to state 101
-- On string_list shift to state 106
-- On string_constant shift to state 108
-- On shift_expression shift to state 109
-- On relational_expression shift to state 116
-- On primary_expression shift to state 111
-- On postfix_expression shift to state 112
-- On paren_comma_expression shift to state 120
-- On one_string shift to state 121
-- On multiplicative_expression shift to state 122
-- On logical_or_expression shift to state 143
-- On logical_and_expression shift to state 147
-- On expression shift to state 500
-- On equality_expression shift to state 149
-- On constant shift to state 124
-- On conditional_expression shift to state 167
-- On cast_expression shift to state 169
-- On bitwise_xor_expression shift to state 154
-- On bitwise_or_expression shift to state 164
-- On bitwise_and_expression shift to state 162
-- On assignment_expression shift to state 192
-- On additive_expression shift to state 136
## Reductions:

State 500:
## Known stack suffix:
## CASE expression
## LR(1) items:
statement -> CASE expression . COLON [ error WHILE VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF TRY TILDE THREAD SWITCH STRUCT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRETTY_FUNCTION__ PLUS_PLUS PLUS NAMED_TYPE MSATTR MSASM MINUS_MINUS MINUS LPAREN LONG LBRACE INT64 INT INLINE IF IDENT GOTO FUNCTION__ FOR FLOAT EXTERN EXCLAM ENUM ELSE DOUBLE DO DEFAULT DECLSPEC CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONTINUE CONST CHAR CASE BUILTIN_VA_ARG BREAK AUTO AT_SPECIFIER AT_EXPR ATTRIBUTE ASM AND_AND AND ALIGNOF ]
statement -> CASE expression . ELLIPSIS expression COLON [ error WHILE VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF TRY TILDE THREAD SWITCH STRUCT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRETTY_FUNCTION__ PLUS_PLUS PLUS NAMED_TYPE MSATTR MSASM MINUS_MINUS MINUS LPAREN LONG LBRACE INT64 INT INLINE IF IDENT GOTO FUNCTION__ FOR FLOAT EXTERN EXCLAM ENUM ELSE DOUBLE DO DEFAULT DECLSPEC CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONTINUE CONST CHAR CASE BUILTIN_VA_ARG BREAK AUTO AT_SPECIFIER AT_EXPR ATTRIBUTE ASM AND_AND AND ALIGNOF ]
## Transitions:
-- On ELLIPSIS shift to state 501
-- On COLON shift to state 504
## Reductions:

State 501:
## Known stack suffix:
## CASE expression ELLIPSIS
## LR(1) items:
statement -> CASE expression ELLIPSIS . expression COLON [ error WHILE VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF TRY TILDE THREAD SWITCH STRUCT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRETTY_FUNCTION__ PLUS_PLUS PLUS NAMED_TYPE MSATTR MSASM MINUS_MINUS MINUS LPAREN LONG LBRACE INT64 INT INLINE IF IDENT GOTO FUNCTION__ FOR FLOAT EXTERN EXCLAM ENUM ELSE DOUBLE DO DEFAULT DECLSPEC CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONTINUE CONST CHAR CASE BUILTIN_VA_ARG BREAK AUTO AT_SPECIFIER AT_EXPR ATTRIBUTE ASM AND_AND AND ALIGNOF ]
## Transitions:
-- On TILDE shift to state 32
-- On STAR shift to state 33
-- On SIZEOF shift to state 34
-- On PRETTY_FUNCTION__ shift to state 35
-- On PLUS_PLUS shift to state 36
-- On PLUS shift to state 37
-- On MINUS_MINUS shift to state 38
-- On MINUS shift to state 39
-- On LPAREN shift to state 40
-- On IDENT shift to state 45
-- On FUNCTION__ shift to state 46
-- On EXCLAM shift to state 47
-- On CST_WSTRING shift to state 48
-- On CST_WCHAR shift to state 49
-- On CST_STRING shift to state 50
-- On CST_INT shift to state 51
-- On CST_FLOAT shift to state 52
-- On CST_CHAR shift to state 53
-- On BUILTIN_VA_ARG shift to state 54
-- On AT_EXPR shift to state 56
-- On AND_AND shift to state 60
-- On AND shift to state 62
-- On ALIGNOF shift to state 63
-- On wstring_list shift to state 98
-- On unary_expression shift to state 101
-- On string_list shift to state 106
-- On string_constant shift to state 108
-- On shift_expression shift to state 109
-- On relational_expression shift to state 116
-- On primary_expression shift to state 111
-- On postfix_expression shift to state 112
-- On paren_comma_expression shift to state 120
-- On one_string shift to state 121
-- On multiplicative_expression shift to state 122
-- On logical_or_expression shift to state 143
-- On logical_and_expression shift to state 147
-- On expression shift to state 502
-- On equality_expression shift to state 149
-- On constant shift to state 124
-- On conditional_expression shift to state 167
-- On cast_expression shift to state 169
-- On bitwise_xor_expression shift to state 154
-- On bitwise_or_expression shift to state 164
-- On bitwise_and_expression shift to state 162
-- On assignment_expression shift to state 192
-- On additive_expression shift to state 136
## Reductions:

State 502:
## Known stack suffix:
## CASE expression ELLIPSIS expression
## LR(1) items:
statement -> CASE expression ELLIPSIS expression . COLON [ error WHILE VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF TRY TILDE THREAD SWITCH STRUCT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRETTY_FUNCTION__ PLUS_PLUS PLUS NAMED_TYPE MSATTR MSASM MINUS_MINUS MINUS LPAREN LONG LBRACE INT64 INT INLINE IF IDENT GOTO FUNCTION__ FOR FLOAT EXTERN EXCLAM ENUM ELSE DOUBLE DO DEFAULT DECLSPEC CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONTINUE CONST CHAR CASE BUILTIN_VA_ARG BREAK AUTO AT_SPECIFIER AT_EXPR ATTRIBUTE ASM AND_AND AND ALIGNOF ]
## Transitions:
-- On COLON shift to state 503
## Reductions:

State 503:
## Known stack suffix:
## CASE expression ELLIPSIS expression COLON
## LR(1) items:
statement -> CASE expression ELLIPSIS expression COLON . [ error WHILE VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF TRY TILDE THREAD SWITCH STRUCT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRETTY_FUNCTION__ PLUS_PLUS PLUS NAMED_TYPE MSATTR MSASM MINUS_MINUS MINUS LPAREN LONG LBRACE INT64 INT INLINE IF IDENT GOTO FUNCTION__ FOR FLOAT EXTERN EXCLAM ENUM ELSE DOUBLE DO DEFAULT DECLSPEC CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONTINUE CONST CHAR CASE BUILTIN_VA_ARG BREAK AUTO AT_SPECIFIER AT_EXPR ATTRIBUTE ASM AND_AND AND ALIGNOF ]
## Transitions:
## Reductions:
-- On error WHILE VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF TRY TILDE THREAD SWITCH STRUCT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRETTY_FUNCTION__ PLUS_PLUS PLUS NAMED_TYPE MSATTR MSASM MINUS_MINUS MINUS LPAREN LONG LBRACE INT64 INT INLINE IF IDENT GOTO FUNCTION__ FOR FLOAT EXTERN EXCLAM ENUM ELSE DOUBLE DO DEFAULT DECLSPEC CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONTINUE CONST CHAR CASE BUILTIN_VA_ARG BREAK AUTO AT_SPECIFIER AT_EXPR ATTRIBUTE ASM AND_AND AND ALIGNOF
--   reduce production statement -> CASE expression ELLIPSIS expression COLON

State 504:
## Known stack suffix:
## CASE expression COLON
## LR(1) items:
statement -> CASE expression COLON . [ error WHILE VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF TRY TILDE THREAD SWITCH STRUCT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRETTY_FUNCTION__ PLUS_PLUS PLUS NAMED_TYPE MSATTR MSASM MINUS_MINUS MINUS LPAREN LONG LBRACE INT64 INT INLINE IF IDENT GOTO FUNCTION__ FOR FLOAT EXTERN EXCLAM ENUM ELSE DOUBLE DO DEFAULT DECLSPEC CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONTINUE CONST CHAR CASE BUILTIN_VA_ARG BREAK AUTO AT_SPECIFIER AT_EXPR ATTRIBUTE ASM AND_AND AND ALIGNOF ]
## Transitions:
## Reductions:
-- On error WHILE VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF TRY TILDE THREAD SWITCH STRUCT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRETTY_FUNCTION__ PLUS_PLUS PLUS NAMED_TYPE MSATTR MSASM MINUS_MINUS MINUS LPAREN LONG LBRACE INT64 INT INLINE IF IDENT GOTO FUNCTION__ FOR FLOAT EXTERN EXCLAM ENUM ELSE DOUBLE DO DEFAULT DECLSPEC CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONTINUE CONST CHAR CASE BUILTIN_VA_ARG BREAK AUTO AT_SPECIFIER AT_EXPR ATTRIBUTE ASM AND_AND AND ALIGNOF
--   reduce production statement -> CASE expression COLON

State 505:
## Known stack suffix:
## BREAK
## LR(1) items:
statement -> BREAK . SEMICOLON [ error WHILE VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF TRY TILDE THREAD SWITCH STRUCT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRETTY_FUNCTION__ PLUS_PLUS PLUS NAMED_TYPE MSATTR MSASM MINUS_MINUS MINUS LPAREN LONG LBRACE INT64 INT INLINE IF IDENT GOTO FUNCTION__ FOR FLOAT EXTERN EXCLAM ENUM ELSE DOUBLE DO DEFAULT DECLSPEC CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONTINUE CONST CHAR CASE BUILTIN_VA_ARG BREAK AUTO AT_SPECIFIER AT_EXPR ATTRIBUTE ASM AND_AND AND ALIGNOF ]
## Transitions:
-- On SEMICOLON shift to state 506
## Reductions:

State 506:
## Known stack suffix:
## BREAK SEMICOLON
## LR(1) items:
statement -> BREAK SEMICOLON . [ error WHILE VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF TRY TILDE THREAD SWITCH STRUCT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRETTY_FUNCTION__ PLUS_PLUS PLUS NAMED_TYPE MSATTR MSASM MINUS_MINUS MINUS LPAREN LONG LBRACE INT64 INT INLINE IF IDENT GOTO FUNCTION__ FOR FLOAT EXTERN EXCLAM ENUM ELSE DOUBLE DO DEFAULT DECLSPEC CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONTINUE CONST CHAR CASE BUILTIN_VA_ARG BREAK AUTO AT_SPECIFIER AT_EXPR ATTRIBUTE ASM AND_AND AND ALIGNOF ]
## Transitions:
## Reductions:
-- On error WHILE VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF TRY TILDE THREAD SWITCH STRUCT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRETTY_FUNCTION__ PLUS_PLUS PLUS NAMED_TYPE MSATTR MSASM MINUS_MINUS MINUS LPAREN LONG LBRACE INT64 INT INLINE IF IDENT GOTO FUNCTION__ FOR FLOAT EXTERN EXCLAM ENUM ELSE DOUBLE DO DEFAULT DECLSPEC CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONTINUE CONST CHAR CASE BUILTIN_VA_ARG BREAK AUTO AT_SPECIFIER AT_EXPR ATTRIBUTE ASM AND_AND AND ALIGNOF
--   reduce production statement -> BREAK SEMICOLON

State 507:
## Known stack suffix:
## ASM
## LR(1) items:
statement -> ASM . asmattr LPAREN asmtemplate asmoutputs RPAREN SEMICOLON [ error WHILE VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF TRY TILDE THREAD SWITCH STRUCT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRETTY_FUNCTION__ PLUS_PLUS PLUS NAMED_TYPE MSATTR MSASM MINUS_MINUS MINUS LPAREN LONG LBRACE INT64 INT INLINE IF IDENT GOTO FUNCTION__ FOR FLOAT EXTERN EXCLAM ENUM ELSE DOUBLE DO DEFAULT DECLSPEC CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONTINUE CONST CHAR CASE BUILTIN_VA_ARG BREAK AUTO AT_SPECIFIER AT_EXPR ATTRIBUTE ASM AND_AND AND ALIGNOF ]
## Transitions:
-- On VOLATILE shift to state 427
-- On CONST shift to state 428
-- On asmattr shift to state 508
## Reductions:
-- On LPAREN
--   reduce production asmattr ->

State 508:
## Known stack suffix:
## ASM asmattr
## LR(1) items:
statement -> ASM asmattr . LPAREN asmtemplate asmoutputs RPAREN SEMICOLON [ error WHILE VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF TRY TILDE THREAD SWITCH STRUCT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRETTY_FUNCTION__ PLUS_PLUS PLUS NAMED_TYPE MSATTR MSASM MINUS_MINUS MINUS LPAREN LONG LBRACE INT64 INT INLINE IF IDENT GOTO FUNCTION__ FOR FLOAT EXTERN EXCLAM ENUM ELSE DOUBLE DO DEFAULT DECLSPEC CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONTINUE CONST CHAR CASE BUILTIN_VA_ARG BREAK AUTO AT_SPECIFIER AT_EXPR ATTRIBUTE ASM AND_AND AND ALIGNOF ]
## Transitions:
-- On LPAREN shift to state 509
## Reductions:

State 509:
## Known stack suffix:
## ASM asmattr LPAREN
## LR(1) items:
statement -> ASM asmattr LPAREN . asmtemplate asmoutputs RPAREN SEMICOLON [ error WHILE VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF TRY TILDE THREAD SWITCH STRUCT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRETTY_FUNCTION__ PLUS_PLUS PLUS NAMED_TYPE MSATTR MSASM MINUS_MINUS MINUS LPAREN LONG LBRACE INT64 INT INLINE IF IDENT GOTO FUNCTION__ FOR FLOAT EXTERN EXCLAM ENUM ELSE DOUBLE DO DEFAULT DECLSPEC CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONTINUE CONST CHAR CASE BUILTIN_VA_ARG BREAK AUTO AT_SPECIFIER AT_EXPR ATTRIBUTE ASM AND_AND AND ALIGNOF ]
## Transitions:
-- On CST_STRING shift to state 433
-- On one_string_constant shift to state 434
-- On asmtemplate shift to state 510
## Reductions:

State 510:
## Known stack suffix:
## ASM asmattr LPAREN asmtemplate
## LR(1) items:
statement -> ASM asmattr LPAREN asmtemplate . asmoutputs RPAREN SEMICOLON [ error WHILE VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF TRY TILDE THREAD SWITCH STRUCT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRETTY_FUNCTION__ PLUS_PLUS PLUS NAMED_TYPE MSATTR MSASM MINUS_MINUS MINUS LPAREN LONG LBRACE INT64 INT INLINE IF IDENT GOTO FUNCTION__ FOR FLOAT EXTERN EXCLAM ENUM ELSE DOUBLE DO DEFAULT DECLSPEC CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONTINUE CONST CHAR CASE BUILTIN_VA_ARG BREAK AUTO AT_SPECIFIER AT_EXPR ATTRIBUTE ASM AND_AND AND ALIGNOF ]
## Transitions:
-- On COLON shift to state 437
-- On asmoutputs shift to state 511
## Reductions:
-- On RPAREN
--   reduce production asmoutputs ->

State 511:
## Known stack suffix:
## ASM asmattr LPAREN asmtemplate asmoutputs
## LR(1) items:
statement -> ASM asmattr LPAREN asmtemplate asmoutputs . RPAREN SEMICOLON [ error WHILE VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF TRY TILDE THREAD SWITCH STRUCT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRETTY_FUNCTION__ PLUS_PLUS PLUS NAMED_TYPE MSATTR MSASM MINUS_MINUS MINUS LPAREN LONG LBRACE INT64 INT INLINE IF IDENT GOTO FUNCTION__ FOR FLOAT EXTERN EXCLAM ENUM ELSE DOUBLE DO DEFAULT DECLSPEC CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONTINUE CONST CHAR CASE BUILTIN_VA_ARG BREAK AUTO AT_SPECIFIER AT_EXPR ATTRIBUTE ASM AND_AND AND ALIGNOF ]
## Transitions:
-- On RPAREN shift to state 512
## Reductions:

State 512:
## Known stack suffix:
## ASM asmattr LPAREN asmtemplate asmoutputs RPAREN
## LR(1) items:
statement -> ASM asmattr LPAREN asmtemplate asmoutputs RPAREN . SEMICOLON [ error WHILE VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF TRY TILDE THREAD SWITCH STRUCT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRETTY_FUNCTION__ PLUS_PLUS PLUS NAMED_TYPE MSATTR MSASM MINUS_MINUS MINUS LPAREN LONG LBRACE INT64 INT INLINE IF IDENT GOTO FUNCTION__ FOR FLOAT EXTERN EXCLAM ENUM ELSE DOUBLE DO DEFAULT DECLSPEC CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONTINUE CONST CHAR CASE BUILTIN_VA_ARG BREAK AUTO AT_SPECIFIER AT_EXPR ATTRIBUTE ASM AND_AND AND ALIGNOF ]
## Transitions:
-- On SEMICOLON shift to state 513
## Reductions:

State 513:
## Known stack suffix:
## ASM asmattr LPAREN asmtemplate asmoutputs RPAREN SEMICOLON
## LR(1) items:
statement -> ASM asmattr LPAREN asmtemplate asmoutputs RPAREN SEMICOLON . [ error WHILE VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF TRY TILDE THREAD SWITCH STRUCT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRETTY_FUNCTION__ PLUS_PLUS PLUS NAMED_TYPE MSATTR MSASM MINUS_MINUS MINUS LPAREN LONG LBRACE INT64 INT INLINE IF IDENT GOTO FUNCTION__ FOR FLOAT EXTERN EXCLAM ENUM ELSE DOUBLE DO DEFAULT DECLSPEC CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONTINUE CONST CHAR CASE BUILTIN_VA_ARG BREAK AUTO AT_SPECIFIER AT_EXPR ATTRIBUTE ASM AND_AND AND ALIGNOF ]
## Transitions:
## Reductions:
-- On error WHILE VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF TRY TILDE THREAD SWITCH STRUCT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRETTY_FUNCTION__ PLUS_PLUS PLUS NAMED_TYPE MSATTR MSASM MINUS_MINUS MINUS LPAREN LONG LBRACE INT64 INT INLINE IF IDENT GOTO FUNCTION__ FOR FLOAT EXTERN EXCLAM ENUM ELSE DOUBLE DO DEFAULT DECLSPEC CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONTINUE CONST CHAR CASE BUILTIN_VA_ARG BREAK AUTO AT_SPECIFIER AT_EXPR ATTRIBUTE ASM AND_AND AND ALIGNOF
--   reduce production statement -> ASM asmattr LPAREN asmtemplate asmoutputs RPAREN SEMICOLON

State 514:
## Known stack suffix:
## FOR LPAREN for_clause opt_expression SEMICOLON opt_expression RPAREN statement
## LR(1) items:
statement -> FOR LPAREN for_clause opt_expression SEMICOLON opt_expression RPAREN statement . [ error WHILE VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF TRY TILDE THREAD SWITCH STRUCT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRETTY_FUNCTION__ PLUS_PLUS PLUS NAMED_TYPE MSATTR MSASM MINUS_MINUS MINUS LPAREN LONG LBRACE INT64 INT INLINE IF IDENT GOTO FUNCTION__ FOR FLOAT EXTERN EXCLAM ENUM ELSE DOUBLE DO DEFAULT DECLSPEC CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONTINUE CONST CHAR CASE BUILTIN_VA_ARG BREAK AUTO AT_SPECIFIER AT_EXPR ATTRIBUTE ASM AND_AND AND ALIGNOF ]
## Transitions:
## Reductions:
-- On error WHILE VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF TRY TILDE THREAD SWITCH STRUCT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRETTY_FUNCTION__ PLUS_PLUS PLUS NAMED_TYPE MSATTR MSASM MINUS_MINUS MINUS LPAREN LONG LBRACE INT64 INT INLINE IF IDENT GOTO FUNCTION__ FOR FLOAT EXTERN EXCLAM ENUM ELSE DOUBLE DO DEFAULT DECLSPEC CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONTINUE CONST CHAR CASE BUILTIN_VA_ARG BREAK AUTO AT_SPECIFIER AT_EXPR ATTRIBUTE ASM AND_AND AND ALIGNOF
--   reduce production statement -> FOR LPAREN for_clause opt_expression SEMICOLON opt_expression RPAREN statement

State 515:
## Known stack suffix:
## comma_expression
## LR(1) items:
statement -> comma_expression . SEMICOLON [ error WHILE VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF TRY TILDE THREAD SWITCH STRUCT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRETTY_FUNCTION__ PLUS_PLUS PLUS NAMED_TYPE MSATTR MSASM MINUS_MINUS MINUS LPAREN LONG LBRACE INT64 INT INLINE IF IDENT GOTO FUNCTION__ FOR FLOAT EXTERN EXCLAM ENUM ELSE DOUBLE DO DEFAULT DECLSPEC CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONTINUE CONST CHAR CASE BUILTIN_VA_ARG BREAK AUTO AT_SPECIFIER AT_EXPR ATTRIBUTE ASM AND_AND AND ALIGNOF ]
## Transitions:
-- On SEMICOLON shift to state 516
## Reductions:

State 516:
## Known stack suffix:
## comma_expression SEMICOLON
## LR(1) items:
statement -> comma_expression SEMICOLON . [ error WHILE VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF TRY TILDE THREAD SWITCH STRUCT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRETTY_FUNCTION__ PLUS_PLUS PLUS NAMED_TYPE MSATTR MSASM MINUS_MINUS MINUS LPAREN LONG LBRACE INT64 INT INLINE IF IDENT GOTO FUNCTION__ FOR FLOAT EXTERN EXCLAM ENUM ELSE DOUBLE DO DEFAULT DECLSPEC CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONTINUE CONST CHAR CASE BUILTIN_VA_ARG BREAK AUTO AT_SPECIFIER AT_EXPR ATTRIBUTE ASM AND_AND AND ALIGNOF ]
## Transitions:
## Reductions:
-- On error WHILE VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF TRY TILDE THREAD SWITCH STRUCT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRETTY_FUNCTION__ PLUS_PLUS PLUS NAMED_TYPE MSATTR MSASM MINUS_MINUS MINUS LPAREN LONG LBRACE INT64 INT INLINE IF IDENT GOTO FUNCTION__ FOR FLOAT EXTERN EXCLAM ENUM ELSE DOUBLE DO DEFAULT DECLSPEC CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONTINUE CONST CHAR CASE BUILTIN_VA_ARG BREAK AUTO AT_SPECIFIER AT_EXPR ATTRIBUTE ASM AND_AND AND ALIGNOF
--   reduce production statement -> comma_expression SEMICOLON

State 517:
## Known stack suffix:
## block
## LR(1) items:
statement -> block . [ error WHILE VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF TRY TILDE THREAD SWITCH STRUCT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRETTY_FUNCTION__ PLUS_PLUS PLUS NAMED_TYPE MSATTR MSASM MINUS_MINUS MINUS LPAREN LONG LBRACE INT64 INT INLINE IF IDENT GOTO FUNCTION__ FOR FLOAT EXTERN EXCLAM ENUM ELSE DOUBLE DO DEFAULT DECLSPEC CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONTINUE CONST CHAR CASE BUILTIN_VA_ARG BREAK AUTO AT_SPECIFIER AT_EXPR ATTRIBUTE ASM AND_AND AND ALIGNOF ]
## Transitions:
## Reductions:
-- On error WHILE VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF TRY TILDE THREAD SWITCH STRUCT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRETTY_FUNCTION__ PLUS_PLUS PLUS NAMED_TYPE MSATTR MSASM MINUS_MINUS MINUS LPAREN LONG LBRACE INT64 INT INLINE IF IDENT GOTO FUNCTION__ FOR FLOAT EXTERN EXCLAM ENUM ELSE DOUBLE DO DEFAULT DECLSPEC CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONTINUE CONST CHAR CASE BUILTIN_VA_ARG BREAK AUTO AT_SPECIFIER AT_EXPR ATTRIBUTE ASM AND_AND AND ALIGNOF
--   reduce production statement -> block

State 518:
## Known stack suffix:
## IDENT COLON statement
## LR(1) items:
statement -> IDENT COLON statement . [ error WHILE VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF TRY TILDE THREAD SWITCH STRUCT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRETTY_FUNCTION__ PLUS_PLUS PLUS NAMED_TYPE MSATTR MSASM MINUS_MINUS MINUS LPAREN LONG LBRACE INT64 INT INLINE IF IDENT GOTO FUNCTION__ FOR FLOAT EXTERN EXCLAM ENUM ELSE DOUBLE DO DEFAULT DECLSPEC CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONTINUE CONST CHAR CASE BUILTIN_VA_ARG BREAK AUTO AT_SPECIFIER AT_EXPR ATTRIBUTE ASM AND_AND AND ALIGNOF ]
## Transitions:
## Reductions:
-- On error WHILE VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF TRY TILDE THREAD SWITCH STRUCT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRETTY_FUNCTION__ PLUS_PLUS PLUS NAMED_TYPE MSATTR MSASM MINUS_MINUS MINUS LPAREN LONG LBRACE INT64 INT INLINE IF IDENT GOTO FUNCTION__ FOR FLOAT EXTERN EXCLAM ENUM ELSE DOUBLE DO DEFAULT DECLSPEC CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONTINUE CONST CHAR CASE BUILTIN_VA_ARG BREAK AUTO AT_SPECIFIER AT_EXPR ATTRIBUTE ASM AND_AND AND ALIGNOF
--   reduce production statement -> IDENT COLON statement

State 519:
## Known stack suffix:
## IF paren_comma_expression statement
## LR(1) items:
statement -> IF paren_comma_expression statement . [ error WHILE VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF TRY TILDE THREAD SWITCH STRUCT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRETTY_FUNCTION__ PLUS_PLUS PLUS NAMED_TYPE MSATTR MSASM MINUS_MINUS MINUS LPAREN LONG LBRACE INT64 INT INLINE IF IDENT GOTO FUNCTION__ FOR FLOAT EXTERN EXCLAM ENUM ELSE DOUBLE DO DEFAULT DECLSPEC CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONTINUE CONST CHAR CASE BUILTIN_VA_ARG BREAK AUTO AT_SPECIFIER AT_EXPR ATTRIBUTE ASM AND_AND AND ALIGNOF ]
statement -> IF paren_comma_expression statement . ELSE statement [ error WHILE VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF TRY TILDE THREAD SWITCH STRUCT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRETTY_FUNCTION__ PLUS_PLUS PLUS NAMED_TYPE MSATTR MSASM MINUS_MINUS MINUS LPAREN LONG LBRACE INT64 INT INLINE IF IDENT GOTO FUNCTION__ FOR FLOAT EXTERN EXCLAM ENUM ELSE DOUBLE DO DEFAULT DECLSPEC CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONTINUE CONST CHAR CASE BUILTIN_VA_ARG BREAK AUTO AT_SPECIFIER AT_EXPR ATTRIBUTE ASM AND_AND AND ALIGNOF ]
## Transitions:
-- On ELSE shift to state 520
## Reductions:
-- On error WHILE VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF TRY TILDE THREAD SWITCH STRUCT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRETTY_FUNCTION__ PLUS_PLUS PLUS NAMED_TYPE MSATTR MSASM MINUS_MINUS MINUS LPAREN LONG LBRACE INT64 INT INLINE IF IDENT GOTO FUNCTION__ FOR FLOAT EXTERN EXCLAM ENUM DOUBLE DO DEFAULT DECLSPEC CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONTINUE CONST CHAR CASE BUILTIN_VA_ARG BREAK AUTO AT_SPECIFIER AT_EXPR ATTRIBUTE ASM AND_AND AND ALIGNOF
--   reduce production statement -> IF paren_comma_expression statement

State 520:
## Known stack suffix:
## IF paren_comma_expression statement ELSE
## LR(1) items:
statement -> IF paren_comma_expression statement ELSE . statement [ error WHILE VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF TRY TILDE THREAD SWITCH STRUCT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRETTY_FUNCTION__ PLUS_PLUS PLUS NAMED_TYPE MSATTR MSASM MINUS_MINUS MINUS LPAREN LONG LBRACE INT64 INT INLINE IF IDENT GOTO FUNCTION__ FOR FLOAT EXTERN EXCLAM ENUM ELSE DOUBLE DO DEFAULT DECLSPEC CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONTINUE CONST CHAR CASE BUILTIN_VA_ARG BREAK AUTO AT_SPECIFIER AT_EXPR ATTRIBUTE ASM AND_AND AND ALIGNOF ]
## Transitions:
-- On error shift to state 326
-- On WHILE shift to state 330
-- On TRY shift to state 337
-- On TILDE shift to state 32
-- On SWITCH shift to state 348
-- On STAR shift to state 33
-- On SIZEOF shift to state 34
-- On SEMICOLON shift to state 350
-- On RETURN shift to state 351
-- On PRETTY_FUNCTION__ shift to state 35
-- On PLUS_PLUS shift to state 36
-- On PLUS shift to state 37
-- On MSASM shift to state 355
-- On MINUS_MINUS shift to state 38
-- On MINUS shift to state 39
-- On LPAREN shift to state 40
-- On LBRACE shift to state 65
-- On IF shift to state 356
-- On IDENT shift to state 358
-- On GOTO shift to state 360
-- On FUNCTION__ shift to state 46
-- On FOR shift to state 366
-- On EXCLAM shift to state 47
-- On DO shift to state 375
-- On DEFAULT shift to state 495
-- On CST_WSTRING shift to state 48
-- On CST_WCHAR shift to state 49
-- On CST_STRING shift to state 50
-- On CST_INT shift to state 51
-- On CST_FLOAT shift to state 52
-- On CST_CHAR shift to state 53
-- On CONTINUE shift to state 497
-- On CASE shift to state 499
-- On BUILTIN_VA_ARG shift to state 54
-- On BREAK shift to state 505
-- On AT_EXPR shift to state 56
-- On ASM shift to state 507
-- On AND_AND shift to state 60
-- On AND shift to state 62
-- On ALIGNOF shift to state 63
-- On wstring_list shift to state 98
-- On unary_expression shift to state 101
-- On string_list shift to state 106
-- On string_constant shift to state 108
-- On statement shift to state 521
-- On shift_expression shift to state 109
-- On relational_expression shift to state 116
-- On primary_expression shift to state 111
-- On postfix_expression shift to state 112
-- On paren_comma_expression shift to state 120
-- On one_string shift to state 121
-- On multiplicative_expression shift to state 122
-- On logical_or_expression shift to state 143
-- On logical_and_expression shift to state 147
-- On expression shift to state 165
-- On equality_expression shift to state 149
-- On constant shift to state 124
-- On conditional_expression shift to state 167
-- On comma_expression shift to state 515
-- On cast_expression shift to state 169
-- On block_begin shift to state 345
-- On block shift to state 517
-- On bitwise_xor_expression shift to state 154
-- On bitwise_or_expression shift to state 164
-- On bitwise_and_expression shift to state 162
-- On assignment_expression shift to state 192
-- On additive_expression shift to state 136
## Reductions:

State 521:
## Known stack suffix:
## IF paren_comma_expression statement ELSE statement
## LR(1) items:
statement -> IF paren_comma_expression statement ELSE statement . [ error WHILE VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF TRY TILDE THREAD SWITCH STRUCT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRETTY_FUNCTION__ PLUS_PLUS PLUS NAMED_TYPE MSATTR MSASM MINUS_MINUS MINUS LPAREN LONG LBRACE INT64 INT INLINE IF IDENT GOTO FUNCTION__ FOR FLOAT EXTERN EXCLAM ENUM ELSE DOUBLE DO DEFAULT DECLSPEC CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONTINUE CONST CHAR CASE BUILTIN_VA_ARG BREAK AUTO AT_SPECIFIER AT_EXPR ATTRIBUTE ASM AND_AND AND ALIGNOF ]
## Transitions:
## Reductions:
-- On error WHILE VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF TRY TILDE THREAD SWITCH STRUCT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRETTY_FUNCTION__ PLUS_PLUS PLUS NAMED_TYPE MSATTR MSASM MINUS_MINUS MINUS LPAREN LONG LBRACE INT64 INT INLINE IF IDENT GOTO FUNCTION__ FOR FLOAT EXTERN EXCLAM ENUM ELSE DOUBLE DO DEFAULT DECLSPEC CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONTINUE CONST CHAR CASE BUILTIN_VA_ARG BREAK AUTO AT_SPECIFIER AT_EXPR ATTRIBUTE ASM AND_AND AND ALIGNOF
--   reduce production statement -> IF paren_comma_expression statement ELSE statement

State 522:
## Known stack suffix:
## SWITCH paren_comma_expression statement
## LR(1) items:
statement -> SWITCH paren_comma_expression statement . [ error WHILE VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF TRY TILDE THREAD SWITCH STRUCT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRETTY_FUNCTION__ PLUS_PLUS PLUS NAMED_TYPE MSATTR MSASM MINUS_MINUS MINUS LPAREN LONG LBRACE INT64 INT INLINE IF IDENT GOTO FUNCTION__ FOR FLOAT EXTERN EXCLAM ENUM ELSE DOUBLE DO DEFAULT DECLSPEC CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONTINUE CONST CHAR CASE BUILTIN_VA_ARG BREAK AUTO AT_SPECIFIER AT_EXPR ATTRIBUTE ASM AND_AND AND ALIGNOF ]
## Transitions:
## Reductions:
-- On error WHILE VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF TRY TILDE THREAD SWITCH STRUCT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRETTY_FUNCTION__ PLUS_PLUS PLUS NAMED_TYPE MSATTR MSASM MINUS_MINUS MINUS LPAREN LONG LBRACE INT64 INT INLINE IF IDENT GOTO FUNCTION__ FOR FLOAT EXTERN EXCLAM ENUM ELSE DOUBLE DO DEFAULT DECLSPEC CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONTINUE CONST CHAR CASE BUILTIN_VA_ARG BREAK AUTO AT_SPECIFIER AT_EXPR ATTRIBUTE ASM AND_AND AND ALIGNOF
--   reduce production statement -> SWITCH paren_comma_expression statement

State 523:
## Known stack suffix:
## IDENT
## LR(1) items:
block_element_list -> IDENT . COLON [ RBRACE ]
primary_expression -> IDENT . [ SUP_SUP_EQ SUP_SUP SUP_EQ SUP STAR_EQ STAR SLASH_EQ SLASH SEMICOLON QUEST PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_EQ MINUS LPAREN LBRACKET INF_INF_EQ INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ EQ DOT COMMA CIRC_EQ CIRC ARROW AND_EQ AND_AND AND ]
statement -> IDENT . COLON statement [ error WHILE VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF TRY TILDE THREAD SWITCH STRUCT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRETTY_FUNCTION__ PLUS_PLUS PLUS NAMED_TYPE MSATTR MSASM MINUS_MINUS MINUS LPAREN LONG LBRACE INT64 INT INLINE IF IDENT GOTO FUNCTION__ FOR FLOAT EXTERN EXCLAM ENUM DOUBLE DO DEFAULT DECLSPEC CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONTINUE CONST CHAR CASE BUILTIN_VA_ARG BREAK AUTO AT_SPECIFIER AT_EXPR ATTRIBUTE ASM AND_AND AND ALIGNOF ]
## Transitions:
-- On COLON shift to state 524
## Reductions:
-- On SUP_SUP_EQ SUP_SUP SUP_EQ SUP STAR_EQ STAR SLASH_EQ SLASH SEMICOLON QUEST PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_EQ MINUS LPAREN LBRACKET INF_INF_EQ INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ EQ DOT COMMA CIRC_EQ CIRC ARROW AND_EQ AND_AND AND
--   reduce production primary_expression -> IDENT

State 524:
## Known stack suffix:
## IDENT COLON
## LR(1) items:
block_element_list -> IDENT COLON . [ RBRACE ]
statement -> IDENT COLON . statement [ error WHILE VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF TRY TILDE THREAD SWITCH STRUCT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRETTY_FUNCTION__ PLUS_PLUS PLUS NAMED_TYPE MSATTR MSASM MINUS_MINUS MINUS LPAREN LONG LBRACE INT64 INT INLINE IF IDENT GOTO FUNCTION__ FOR FLOAT EXTERN EXCLAM ENUM DOUBLE DO DEFAULT DECLSPEC CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONTINUE CONST CHAR CASE BUILTIN_VA_ARG BREAK AUTO AT_SPECIFIER AT_EXPR ATTRIBUTE ASM AND_AND AND ALIGNOF ]
## Transitions:
-- On error shift to state 326
-- On WHILE shift to state 330
-- On TRY shift to state 337
-- On TILDE shift to state 32
-- On SWITCH shift to state 348
-- On STAR shift to state 33
-- On SIZEOF shift to state 34
-- On SEMICOLON shift to state 350
-- On RETURN shift to state 351
-- On PRETTY_FUNCTION__ shift to state 35
-- On PLUS_PLUS shift to state 36
-- On PLUS shift to state 37
-- On MSASM shift to state 355
-- On MINUS_MINUS shift to state 38
-- On MINUS shift to state 39
-- On LPAREN shift to state 40
-- On LBRACE shift to state 65
-- On IF shift to state 356
-- On IDENT shift to state 358
-- On GOTO shift to state 360
-- On FUNCTION__ shift to state 46
-- On FOR shift to state 366
-- On EXCLAM shift to state 47
-- On DO shift to state 375
-- On DEFAULT shift to state 495
-- On CST_WSTRING shift to state 48
-- On CST_WCHAR shift to state 49
-- On CST_STRING shift to state 50
-- On CST_INT shift to state 51
-- On CST_FLOAT shift to state 52
-- On CST_CHAR shift to state 53
-- On CONTINUE shift to state 497
-- On CASE shift to state 499
-- On BUILTIN_VA_ARG shift to state 54
-- On BREAK shift to state 505
-- On AT_EXPR shift to state 56
-- On ASM shift to state 507
-- On AND_AND shift to state 60
-- On AND shift to state 62
-- On ALIGNOF shift to state 63
-- On wstring_list shift to state 98
-- On unary_expression shift to state 101
-- On string_list shift to state 106
-- On string_constant shift to state 108
-- On statement shift to state 518
-- On shift_expression shift to state 109
-- On relational_expression shift to state 116
-- On primary_expression shift to state 111
-- On postfix_expression shift to state 112
-- On paren_comma_expression shift to state 120
-- On one_string shift to state 121
-- On multiplicative_expression shift to state 122
-- On logical_or_expression shift to state 143
-- On logical_and_expression shift to state 147
-- On expression shift to state 165
-- On equality_expression shift to state 149
-- On constant shift to state 124
-- On conditional_expression shift to state 167
-- On comma_expression shift to state 515
-- On cast_expression shift to state 169
-- On block_begin shift to state 345
-- On block shift to state 517
-- On bitwise_xor_expression shift to state 154
-- On bitwise_or_expression shift to state 164
-- On bitwise_and_expression shift to state 162
-- On assignment_expression shift to state 192
-- On additive_expression shift to state 136
## Reductions:
-- On RBRACE
--   reduce production block_element_list -> IDENT COLON

State 525:
## Known stack suffix:
## statement
## LR(1) items:
block_element_list -> statement . block_element_list [ RBRACE ]
## Transitions:
-- On error shift to state 326
-- On WHILE shift to state 330
-- On VOLATILE shift to state 1
-- On VOID shift to state 2
-- On UNSIGNED shift to state 3
-- On UNION shift to state 4
-- On TYPEOF shift to state 9
-- On TYPEDEF shift to state 11
-- On TRY shift to state 337
-- On TILDE shift to state 32
-- On THREAD shift to state 12
-- On SWITCH shift to state 348
-- On STRUCT shift to state 13
-- On STATIC shift to state 15
-- On STAR shift to state 33
-- On SIZEOF shift to state 34
-- On SIGNED shift to state 16
-- On SHORT shift to state 17
-- On SEMICOLON shift to state 350
-- On RETURN shift to state 351
-- On RESTRICT shift to state 18
-- On REGISTER shift to state 19
-- On PRETTY_FUNCTION__ shift to state 35
-- On PLUS_PLUS shift to state 36
-- On PLUS shift to state 37
-- On NAMED_TYPE shift to state 20
-- On MSATTR shift to state 21
-- On MSASM shift to state 355
-- On MINUS_MINUS shift to state 38
-- On MINUS shift to state 39
-- On LPAREN shift to state 40
-- On LONG shift to state 22
-- On LBRACE shift to state 65
-- On INT64 shift to state 23
-- On INT shift to state 24
-- On INLINE shift to state 25
-- On IF shift to state 356
-- On IDENT shift to state 523
-- On GOTO shift to state 360
-- On FUNCTION__ shift to state 46
-- On FOR shift to state 366
-- On FLOAT shift to state 26
-- On EXTERN shift to state 27
-- On EXCLAM shift to state 47
-- On ENUM shift to state 28
-- On DOUBLE shift to state 66
-- On DO shift to state 375
-- On DEFAULT shift to state 495
-- On DECLSPEC shift to state 67
-- On CST_WSTRING shift to state 48
-- On CST_WCHAR shift to state 49
-- On CST_STRING shift to state 50
-- On CST_INT shift to state 51
-- On CST_FLOAT shift to state 52
-- On CST_CHAR shift to state 53
-- On CONTINUE shift to state 497
-- On CONST shift to state 78
-- On CHAR shift to state 79
-- On CASE shift to state 499
-- On BUILTIN_VA_ARG shift to state 54
-- On BREAK shift to state 505
-- On AUTO shift to state 80
-- On AT_SPECIFIER shift to state 81
-- On AT_EXPR shift to state 56
-- On ATTRIBUTE shift to state 85
-- On ASM shift to state 507
-- On AND_AND shift to state 60
-- On AND shift to state 62
-- On ALIGNOF shift to state 63
-- On wstring_list shift to state 98
-- On unary_expression shift to state 101
-- On type_spec shift to state 89
-- On string_list shift to state 106
-- On string_constant shift to state 108
-- On statement shift to state 525
-- On shift_expression shift to state 109
-- On relational_expression shift to state 116
-- On primary_expression shift to state 111
-- On postfix_expression shift to state 112
-- On paren_comma_expression shift to state 120
-- On one_string shift to state 121
-- On multiplicative_expression shift to state 122
-- On logical_or_expression shift to state 143
-- On logical_and_expression shift to state 147
-- On expression shift to state 165
-- On equality_expression shift to state 149
-- On declaration shift to state 526
-- On decl_spec_list shift to state 472
-- On cvspec shift to state 92
-- On constant shift to state 124
-- On conditional_expression shift to state 167
-- On comma_expression shift to state 515
-- On cast_expression shift to state 169
-- On block_element_list shift to state 528
-- On block_begin shift to state 345
-- On block shift to state 517
-- On bitwise_xor_expression shift to state 154
-- On bitwise_or_expression shift to state 164
-- On bitwise_and_expression shift to state 162
-- On attribute_nocv shift to state 95
-- On assignment_expression shift to state 192
-- On additive_expression shift to state 136
## Reductions:
-- On RBRACE
--   reduce production block_element_list ->

State 526:
## Known stack suffix:
## declaration
## LR(1) items:
block_element_list -> declaration . block_element_list [ RBRACE ]
## Transitions:
-- On error shift to state 326
-- On WHILE shift to state 330
-- On VOLATILE shift to state 1
-- On VOID shift to state 2
-- On UNSIGNED shift to state 3
-- On UNION shift to state 4
-- On TYPEOF shift to state 9
-- On TYPEDEF shift to state 11
-- On TRY shift to state 337
-- On TILDE shift to state 32
-- On THREAD shift to state 12
-- On SWITCH shift to state 348
-- On STRUCT shift to state 13
-- On STATIC shift to state 15
-- On STAR shift to state 33
-- On SIZEOF shift to state 34
-- On SIGNED shift to state 16
-- On SHORT shift to state 17
-- On SEMICOLON shift to state 350
-- On RETURN shift to state 351
-- On RESTRICT shift to state 18
-- On REGISTER shift to state 19
-- On PRETTY_FUNCTION__ shift to state 35
-- On PLUS_PLUS shift to state 36
-- On PLUS shift to state 37
-- On NAMED_TYPE shift to state 20
-- On MSATTR shift to state 21
-- On MSASM shift to state 355
-- On MINUS_MINUS shift to state 38
-- On MINUS shift to state 39
-- On LPAREN shift to state 40
-- On LONG shift to state 22
-- On LBRACE shift to state 65
-- On INT64 shift to state 23
-- On INT shift to state 24
-- On INLINE shift to state 25
-- On IF shift to state 356
-- On IDENT shift to state 523
-- On GOTO shift to state 360
-- On FUNCTION__ shift to state 46
-- On FOR shift to state 366
-- On FLOAT shift to state 26
-- On EXTERN shift to state 27
-- On EXCLAM shift to state 47
-- On ENUM shift to state 28
-- On DOUBLE shift to state 66
-- On DO shift to state 375
-- On DEFAULT shift to state 495
-- On DECLSPEC shift to state 67
-- On CST_WSTRING shift to state 48
-- On CST_WCHAR shift to state 49
-- On CST_STRING shift to state 50
-- On CST_INT shift to state 51
-- On CST_FLOAT shift to state 52
-- On CST_CHAR shift to state 53
-- On CONTINUE shift to state 497
-- On CONST shift to state 78
-- On CHAR shift to state 79
-- On CASE shift to state 499
-- On BUILTIN_VA_ARG shift to state 54
-- On BREAK shift to state 505
-- On AUTO shift to state 80
-- On AT_SPECIFIER shift to state 81
-- On AT_EXPR shift to state 56
-- On ATTRIBUTE shift to state 85
-- On ASM shift to state 507
-- On AND_AND shift to state 60
-- On AND shift to state 62
-- On ALIGNOF shift to state 63
-- On wstring_list shift to state 98
-- On unary_expression shift to state 101
-- On type_spec shift to state 89
-- On string_list shift to state 106
-- On string_constant shift to state 108
-- On statement shift to state 525
-- On shift_expression shift to state 109
-- On relational_expression shift to state 116
-- On primary_expression shift to state 111
-- On postfix_expression shift to state 112
-- On paren_comma_expression shift to state 120
-- On one_string shift to state 121
-- On multiplicative_expression shift to state 122
-- On logical_or_expression shift to state 143
-- On logical_and_expression shift to state 147
-- On expression shift to state 165
-- On equality_expression shift to state 149
-- On declaration shift to state 526
-- On decl_spec_list shift to state 472
-- On cvspec shift to state 92
-- On constant shift to state 124
-- On conditional_expression shift to state 167
-- On comma_expression shift to state 515
-- On cast_expression shift to state 169
-- On block_element_list shift to state 527
-- On block_begin shift to state 345
-- On block shift to state 517
-- On bitwise_xor_expression shift to state 154
-- On bitwise_or_expression shift to state 164
-- On bitwise_and_expression shift to state 162
-- On attribute_nocv shift to state 95
-- On assignment_expression shift to state 192
-- On additive_expression shift to state 136
## Reductions:
-- On RBRACE
--   reduce production block_element_list ->

State 527:
## Known stack suffix:
## declaration block_element_list
## LR(1) items:
block_element_list -> declaration block_element_list . [ RBRACE ]
## Transitions:
## Reductions:
-- On RBRACE
--   reduce production block_element_list -> declaration block_element_list

State 528:
## Known stack suffix:
## statement block_element_list
## LR(1) items:
block_element_list -> statement block_element_list . [ RBRACE ]
## Transitions:
## Reductions:
-- On RBRACE
--   reduce production block_element_list -> statement block_element_list

State 529:
## Known stack suffix:
## block_begin local_labels block_attrs block_element_list
## LR(1) items:
block -> block_begin local_labels block_attrs block_element_list . RBRACE [ error WHILE VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF TRY TILDE THREAD SWITCH STRUCT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRETTY_FUNCTION__ PRAGMA_LINE PRAGMA PLUS_PLUS PLUS NAMED_TYPE MSATTR MSASM MINUS_MINUS MINUS LPAREN LONG LBRACE INT64 INT INLINE IF IDENT GOTO FUNCTION__ FOR FLOAT EXTERN EXCLAM EOF ENUM ELSE DOUBLE DO DEFAULT DECLSPEC CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONTINUE CONST CHAR CASE BUILTIN_VA_ARG BREAK AUTO AT_TRANSFORMEXPR AT_TRANSFORM AT_SPECIFIER AT_EXPR ATTRIBUTE ASM AND_AND AND ALIGNOF # ]
## Transitions:
-- On RBRACE shift to state 530
## Reductions:

State 530:
## Known stack suffix:
## block_begin local_labels block_attrs block_element_list RBRACE
## LR(1) items:
block -> block_begin local_labels block_attrs block_element_list RBRACE . [ error WHILE VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF TRY TILDE THREAD SWITCH STRUCT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRETTY_FUNCTION__ PRAGMA_LINE PRAGMA PLUS_PLUS PLUS NAMED_TYPE MSATTR MSASM MINUS_MINUS MINUS LPAREN LONG LBRACE INT64 INT INLINE IF IDENT GOTO FUNCTION__ FOR FLOAT EXTERN EXCLAM EOF ENUM ELSE DOUBLE DO DEFAULT DECLSPEC CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONTINUE CONST CHAR CASE BUILTIN_VA_ARG BREAK AUTO AT_TRANSFORMEXPR AT_TRANSFORM AT_SPECIFIER AT_EXPR ATTRIBUTE ASM AND_AND AND ALIGNOF # ]
## Transitions:
## Reductions:
-- On error WHILE VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF TRY TILDE THREAD SWITCH STRUCT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRETTY_FUNCTION__ PRAGMA_LINE PRAGMA PLUS_PLUS PLUS NAMED_TYPE MSATTR MSASM MINUS_MINUS MINUS LPAREN LONG LBRACE INT64 INT INLINE IF IDENT GOTO FUNCTION__ FOR FLOAT EXTERN EXCLAM EOF ENUM ELSE DOUBLE DO DEFAULT DECLSPEC CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONTINUE CONST CHAR CASE BUILTIN_VA_ARG BREAK AUTO AT_TRANSFORMEXPR AT_TRANSFORM AT_SPECIFIER AT_EXPR ATTRIBUTE ASM AND_AND AND ALIGNOF #
--   reduce production block -> block_begin local_labels block_attrs block_element_list RBRACE
** End-of-stream conflict on error WHILE VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF TRY TILDE THREAD SWITCH STRUCT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRETTY_FUNCTION__ PRAGMA_LINE PRAGMA PLUS_PLUS PLUS NAMED_TYPE MSATTR MSASM MINUS_MINUS MINUS LPAREN LONG LBRACE INT64 INT INLINE IF IDENT GOTO FUNCTION__ FOR FLOAT EXTERN EXCLAM EOF ENUM ELSE DOUBLE DO DEFAULT DECLSPEC CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONTINUE CONST CHAR CASE BUILTIN_VA_ARG BREAK AUTO AT_TRANSFORMEXPR AT_TRANSFORM AT_SPECIFIER AT_EXPR ATTRIBUTE ASM AND_AND AND ALIGNOF
**   There is a tension between
**   (1) reducing production block -> block_begin local_labels block_attrs block_element_list RBRACE
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 531:
## Known stack suffix:
## TRY block FINALLY block
## LR(1) items:
statement -> TRY block FINALLY block . [ error WHILE VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF TRY TILDE THREAD SWITCH STRUCT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRETTY_FUNCTION__ PLUS_PLUS PLUS NAMED_TYPE MSATTR MSASM MINUS_MINUS MINUS LPAREN LONG LBRACE INT64 INT INLINE IF IDENT GOTO FUNCTION__ FOR FLOAT EXTERN EXCLAM ENUM ELSE DOUBLE DO DEFAULT DECLSPEC CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONTINUE CONST CHAR CASE BUILTIN_VA_ARG BREAK AUTO AT_SPECIFIER AT_EXPR ATTRIBUTE ASM AND_AND AND ALIGNOF ]
## Transitions:
## Reductions:
-- On error WHILE VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF TRY TILDE THREAD SWITCH STRUCT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRETTY_FUNCTION__ PLUS_PLUS PLUS NAMED_TYPE MSATTR MSASM MINUS_MINUS MINUS LPAREN LONG LBRACE INT64 INT INLINE IF IDENT GOTO FUNCTION__ FOR FLOAT EXTERN EXCLAM ENUM ELSE DOUBLE DO DEFAULT DECLSPEC CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONTINUE CONST CHAR CASE BUILTIN_VA_ARG BREAK AUTO AT_SPECIFIER AT_EXPR ATTRIBUTE ASM AND_AND AND ALIGNOF
--   reduce production statement -> TRY block FINALLY block

State 532:
## Known stack suffix:
## TRY block EXCEPT
## LR(1) items:
statement -> TRY block EXCEPT . paren_comma_expression block [ error WHILE VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF TRY TILDE THREAD SWITCH STRUCT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRETTY_FUNCTION__ PLUS_PLUS PLUS NAMED_TYPE MSATTR MSASM MINUS_MINUS MINUS LPAREN LONG LBRACE INT64 INT INLINE IF IDENT GOTO FUNCTION__ FOR FLOAT EXTERN EXCLAM ENUM ELSE DOUBLE DO DEFAULT DECLSPEC CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONTINUE CONST CHAR CASE BUILTIN_VA_ARG BREAK AUTO AT_SPECIFIER AT_EXPR ATTRIBUTE ASM AND_AND AND ALIGNOF ]
## Transitions:
-- On LPAREN shift to state 331
-- On paren_comma_expression shift to state 533
## Reductions:

State 533:
## Known stack suffix:
## TRY block EXCEPT paren_comma_expression
## LR(1) items:
statement -> TRY block EXCEPT paren_comma_expression . block [ error WHILE VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF TRY TILDE THREAD SWITCH STRUCT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRETTY_FUNCTION__ PLUS_PLUS PLUS NAMED_TYPE MSATTR MSASM MINUS_MINUS MINUS LPAREN LONG LBRACE INT64 INT INLINE IF IDENT GOTO FUNCTION__ FOR FLOAT EXTERN EXCLAM ENUM ELSE DOUBLE DO DEFAULT DECLSPEC CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONTINUE CONST CHAR CASE BUILTIN_VA_ARG BREAK AUTO AT_SPECIFIER AT_EXPR ATTRIBUTE ASM AND_AND AND ALIGNOF ]
## Transitions:
-- On error shift to state 343
-- On LBRACE shift to state 65
-- On block_begin shift to state 345
-- On block shift to state 534
## Reductions:

State 534:
## Known stack suffix:
## TRY block EXCEPT paren_comma_expression block
## LR(1) items:
statement -> TRY block EXCEPT paren_comma_expression block . [ error WHILE VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF TRY TILDE THREAD SWITCH STRUCT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRETTY_FUNCTION__ PLUS_PLUS PLUS NAMED_TYPE MSATTR MSASM MINUS_MINUS MINUS LPAREN LONG LBRACE INT64 INT INLINE IF IDENT GOTO FUNCTION__ FOR FLOAT EXTERN EXCLAM ENUM ELSE DOUBLE DO DEFAULT DECLSPEC CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONTINUE CONST CHAR CASE BUILTIN_VA_ARG BREAK AUTO AT_SPECIFIER AT_EXPR ATTRIBUTE ASM AND_AND AND ALIGNOF ]
## Transitions:
## Reductions:
-- On error WHILE VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF TRY TILDE THREAD SWITCH STRUCT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRETTY_FUNCTION__ PLUS_PLUS PLUS NAMED_TYPE MSATTR MSASM MINUS_MINUS MINUS LPAREN LONG LBRACE INT64 INT INLINE IF IDENT GOTO FUNCTION__ FOR FLOAT EXTERN EXCLAM ENUM ELSE DOUBLE DO DEFAULT DECLSPEC CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONTINUE CONST CHAR CASE BUILTIN_VA_ARG BREAK AUTO AT_SPECIFIER AT_EXPR ATTRIBUTE ASM AND_AND AND ALIGNOF
--   reduce production statement -> TRY block EXCEPT paren_comma_expression block

State 535:
## Known stack suffix:
## WHILE paren_comma_expression statement
## LR(1) items:
statement -> WHILE paren_comma_expression statement . [ error WHILE VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF TRY TILDE THREAD SWITCH STRUCT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRETTY_FUNCTION__ PLUS_PLUS PLUS NAMED_TYPE MSATTR MSASM MINUS_MINUS MINUS LPAREN LONG LBRACE INT64 INT INLINE IF IDENT GOTO FUNCTION__ FOR FLOAT EXTERN EXCLAM ENUM ELSE DOUBLE DO DEFAULT DECLSPEC CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONTINUE CONST CHAR CASE BUILTIN_VA_ARG BREAK AUTO AT_SPECIFIER AT_EXPR ATTRIBUTE ASM AND_AND AND ALIGNOF ]
## Transitions:
## Reductions:
-- On error WHILE VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF TRY TILDE THREAD SWITCH STRUCT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRETTY_FUNCTION__ PLUS_PLUS PLUS NAMED_TYPE MSATTR MSASM MINUS_MINUS MINUS LPAREN LONG LBRACE INT64 INT INLINE IF IDENT GOTO FUNCTION__ FOR FLOAT EXTERN EXCLAM ENUM ELSE DOUBLE DO DEFAULT DECLSPEC CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONTINUE CONST CHAR CASE BUILTIN_VA_ARG BREAK AUTO AT_SPECIFIER AT_EXPR ATTRIBUTE ASM AND_AND AND ALIGNOF
--   reduce production statement -> WHILE paren_comma_expression statement

State 536:
## Known stack suffix:
## block_begin local_labels block_attrs block_element_list
## LR(1) items:
block -> block_begin local_labels block_attrs block_element_list . RBRACE [ WHILE RPAREN RBRACE FINALLY EXCEPT ELSE ]
## Transitions:
-- On RBRACE shift to state 537
## Reductions:

State 537:
## Known stack suffix:
## block_begin local_labels block_attrs block_element_list RBRACE
## LR(1) items:
block -> block_begin local_labels block_attrs block_element_list RBRACE . [ WHILE RPAREN RBRACE FINALLY EXCEPT ELSE ]
## Transitions:
## Reductions:
-- On WHILE RPAREN RBRACE FINALLY EXCEPT ELSE
--   reduce production block -> block_begin local_labels block_attrs block_element_list RBRACE

State 538:
## Known stack suffix:
## LPAREN block
## LR(1) items:
primary_expression -> LPAREN block . RPAREN [ SUP_SUP_EQ SUP_SUP SUP_EQ SUP STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACKET RBRACE QUEST PRAGMA_EOL PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_EQ MINUS LPAREN LBRACKET INF_INF_EQ INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ EQ ELLIPSIS DOT COMMA COLON CIRC_EQ CIRC ARROW AND_EQ AND_AND AND ]
## Transitions:
-- On RPAREN shift to state 539
## Reductions:

State 539:
## Known stack suffix:
## LPAREN block RPAREN
## LR(1) items:
primary_expression -> LPAREN block RPAREN . [ SUP_SUP_EQ SUP_SUP SUP_EQ SUP STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACKET RBRACE QUEST PRAGMA_EOL PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_EQ MINUS LPAREN LBRACKET INF_INF_EQ INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ EQ ELLIPSIS DOT COMMA COLON CIRC_EQ CIRC ARROW AND_EQ AND_AND AND ]
## Transitions:
## Reductions:
-- On SUP_SUP_EQ SUP_SUP SUP_EQ SUP STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACKET RBRACE QUEST PRAGMA_EOL PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_EQ MINUS LPAREN LBRACKET INF_INF_EQ INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ EQ ELLIPSIS DOT COMMA COLON CIRC_EQ CIRC ARROW AND_EQ AND_AND AND
--   reduce production primary_expression -> LPAREN block RPAREN

State 540:
## Known stack suffix:
## ALIGNOF unary_expression
## LR(1) items:
unary_attr -> ALIGNOF unary_expression . [ SUP_SUP SUP_EQ SUP STAR SLASH SEMICOLON RPAREN PRAGMA_EOL PLUS PIPE_PIPE PIPE PERCENT MINUS INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ COMMA CIRC AND_AND AND ]
## Transitions:
## Reductions:
-- On SUP_SUP SUP_EQ SUP STAR SLASH SEMICOLON RPAREN PRAGMA_EOL PLUS PIPE_PIPE PIPE PERCENT MINUS INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ COMMA CIRC AND_AND AND
--   reduce production unary_attr -> ALIGNOF unary_expression

State 541:
## Known stack suffix:
## unary_attr
## LR(1) items:
cast_attr -> unary_attr . [ SUP_SUP SUP_EQ SUP STAR SLASH SEMICOLON RPAREN PRAGMA_EOL PLUS PIPE_PIPE PIPE PERCENT MINUS INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ COMMA CIRC AND_AND AND ]
## Transitions:
## Reductions:
-- On SUP_SUP SUP_EQ SUP STAR SLASH SEMICOLON RPAREN PRAGMA_EOL PLUS PIPE_PIPE PIPE PERCENT MINUS INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ COMMA CIRC AND_AND AND
--   reduce production cast_attr -> unary_attr

State 542:
## Known stack suffix:
## string_constant
## LR(1) items:
primary_attr -> string_constant . [ SUP_SUP SUP_EQ SUP STAR SLASH SEMICOLON RPAREN PRAGMA_EOL PLUS PIPE_PIPE PIPE PERCENT MINUS INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ DOT COMMA CIRC ARROW AND_AND AND ]
## Transitions:
## Reductions:
-- On SUP_SUP SUP_EQ SUP STAR SLASH SEMICOLON RPAREN PRAGMA_EOL PLUS PIPE_PIPE PIPE PERCENT MINUS INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ DOT COMMA CIRC ARROW AND_AND AND
--   reduce production primary_attr -> string_constant

State 543:
## Known stack suffix:
## primary_attr
## LR(1) items:
postfix_attr -> primary_attr . [ SUP_SUP SUP_EQ SUP STAR SLASH SEMICOLON RPAREN PRAGMA_EOL PLUS PIPE_PIPE PIPE PERCENT MINUS INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ DOT COMMA CIRC ARROW AND_AND AND ]
## Transitions:
## Reductions:
-- On SUP_SUP SUP_EQ SUP STAR SLASH SEMICOLON RPAREN PRAGMA_EOL PLUS PIPE_PIPE PIPE PERCENT MINUS INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ DOT COMMA CIRC ARROW AND_AND AND
--   reduce production postfix_attr -> primary_attr

State 544:
## Known stack suffix:
## postfix_attr
## LR(1) items:
postfix_attr -> postfix_attr . ARROW id_or_typename [ SUP_SUP SUP_EQ SUP STAR SLASH SEMICOLON RPAREN PRAGMA_EOL PLUS PIPE_PIPE PIPE PERCENT MINUS INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ DOT COMMA CIRC ARROW AND_AND AND ]
postfix_attr -> postfix_attr . DOT id_or_typename [ SUP_SUP SUP_EQ SUP STAR SLASH SEMICOLON RPAREN PRAGMA_EOL PLUS PIPE_PIPE PIPE PERCENT MINUS INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ DOT COMMA CIRC ARROW AND_AND AND ]
unary_attr -> postfix_attr . [ SUP_SUP SUP_EQ SUP STAR SLASH SEMICOLON RPAREN PRAGMA_EOL PLUS PIPE_PIPE PIPE PERCENT MINUS INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ COMMA CIRC AND_AND AND ]
## Transitions:
-- On DOT shift to state 545
-- On ARROW shift to state 547
## Reductions:
-- On SUP_SUP SUP_EQ SUP STAR SLASH SEMICOLON RPAREN PRAGMA_EOL PLUS PIPE_PIPE PIPE PERCENT MINUS INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ COMMA CIRC AND_AND AND
--   reduce production unary_attr -> postfix_attr

State 545:
## Known stack suffix:
## postfix_attr DOT
## LR(1) items:
postfix_attr -> postfix_attr DOT . id_or_typename [ SUP_SUP SUP_EQ SUP STAR SLASH SEMICOLON RPAREN PRAGMA_EOL PLUS PIPE_PIPE PIPE PERCENT MINUS INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ DOT COMMA CIRC ARROW AND_AND AND ]
## Transitions:
-- On NAMED_TYPE shift to state 5
-- On IDENT shift to state 205
-- On AT_NAME shift to state 206
-- On id_or_typename shift to state 546
## Reductions:

State 546:
## Known stack suffix:
## postfix_attr DOT id_or_typename
## LR(1) items:
postfix_attr -> postfix_attr DOT id_or_typename . [ SUP_SUP SUP_EQ SUP STAR SLASH SEMICOLON RPAREN PRAGMA_EOL PLUS PIPE_PIPE PIPE PERCENT MINUS INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ DOT COMMA CIRC ARROW AND_AND AND ]
## Transitions:
## Reductions:
-- On SUP_SUP SUP_EQ SUP STAR SLASH SEMICOLON RPAREN PRAGMA_EOL PLUS PIPE_PIPE PIPE PERCENT MINUS INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ DOT COMMA CIRC ARROW AND_AND AND
--   reduce production postfix_attr -> postfix_attr DOT id_or_typename

State 547:
## Known stack suffix:
## postfix_attr ARROW
## LR(1) items:
postfix_attr -> postfix_attr ARROW . id_or_typename [ SUP_SUP SUP_EQ SUP STAR SLASH SEMICOLON RPAREN PRAGMA_EOL PLUS PIPE_PIPE PIPE PERCENT MINUS INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ DOT COMMA CIRC ARROW AND_AND AND ]
## Transitions:
-- On NAMED_TYPE shift to state 5
-- On IDENT shift to state 205
-- On AT_NAME shift to state 206
-- On id_or_typename shift to state 548
## Reductions:

State 548:
## Known stack suffix:
## postfix_attr ARROW id_or_typename
## LR(1) items:
postfix_attr -> postfix_attr ARROW id_or_typename . [ SUP_SUP SUP_EQ SUP STAR SLASH SEMICOLON RPAREN PRAGMA_EOL PLUS PIPE_PIPE PIPE PERCENT MINUS INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ DOT COMMA CIRC ARROW AND_AND AND ]
## Transitions:
## Reductions:
-- On SUP_SUP SUP_EQ SUP STAR SLASH SEMICOLON RPAREN PRAGMA_EOL PLUS PIPE_PIPE PIPE PERCENT MINUS INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ DOT COMMA CIRC ARROW AND_AND AND
--   reduce production postfix_attr -> postfix_attr ARROW id_or_typename

State 549:
## Known stack suffix:
## AND cast_attr
## LR(1) items:
unary_attr -> AND cast_attr . [ SUP_SUP SUP_EQ SUP STAR SLASH SEMICOLON RPAREN PRAGMA_EOL PLUS PIPE_PIPE PIPE PERCENT MINUS INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ COMMA CIRC AND_AND AND ]
## Transitions:
## Reductions:
-- On SUP_SUP SUP_EQ SUP STAR SLASH SEMICOLON RPAREN PRAGMA_EOL PLUS PIPE_PIPE PIPE PERCENT MINUS INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ COMMA CIRC AND_AND AND
--   reduce production unary_attr -> AND cast_attr

State 550:
## Known stack suffix:
## EXCLAM cast_attr
## LR(1) items:
unary_attr -> EXCLAM cast_attr . [ SUP_SUP SUP_EQ SUP STAR SLASH SEMICOLON RPAREN PRAGMA_EOL PLUS PIPE_PIPE PIPE PERCENT MINUS INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ COMMA CIRC AND_AND AND ]
## Transitions:
## Reductions:
-- On SUP_SUP SUP_EQ SUP STAR SLASH SEMICOLON RPAREN PRAGMA_EOL PLUS PIPE_PIPE PIPE PERCENT MINUS INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ COMMA CIRC AND_AND AND
--   reduce production unary_attr -> EXCLAM cast_attr

State 551:
## Known stack suffix:
## shift_attr
## LR(1) items:
relational_attr -> shift_attr . [ SUP_EQ SUP SEMICOLON RPAREN PRAGMA_EOL PIPE_PIPE PIPE INF_EQ INF EXCLAM_EQ EQ_EQ COMMA CIRC AND_AND AND ]
shift_attr -> shift_attr . INF_INF additive_attr [ SUP_SUP SUP_EQ SUP SEMICOLON RPAREN PRAGMA_EOL PIPE_PIPE PIPE INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ COMMA CIRC AND_AND AND ]
shift_attr -> shift_attr . SUP_SUP additive_attr [ SUP_SUP SUP_EQ SUP SEMICOLON RPAREN PRAGMA_EOL PIPE_PIPE PIPE INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ COMMA CIRC AND_AND AND ]
## Transitions:
-- On SUP_SUP shift to state 552
-- On INF_INF shift to state 566
## Reductions:
-- On SUP_EQ SUP SEMICOLON RPAREN PRAGMA_EOL PIPE_PIPE PIPE INF_EQ INF EXCLAM_EQ EQ_EQ COMMA CIRC AND_AND AND
--   reduce production relational_attr -> shift_attr

State 552:
## Known stack suffix:
## shift_attr SUP_SUP
## LR(1) items:
shift_attr -> shift_attr SUP_SUP . additive_attr [ SUP_SUP SUP_EQ SUP SEMICOLON RPAREN PRAGMA_EOL PIPE_PIPE PIPE INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ COMMA CIRC AND_AND AND ]
## Transitions:
-- On VOLATILE shift to state 73
-- On TILDE shift to state 74
-- On STAR shift to state 75
-- On SIZEOF shift to state 76
-- On PRETTY_FUNCTION__ shift to state 35
-- On PLUS shift to state 292
-- On NAMED_TYPE shift to state 293
-- On MINUS shift to state 294
-- On LPAREN shift to state 295
-- On IDENT shift to state 296
-- On FUNCTION__ shift to state 46
-- On EXCLAM shift to state 299
-- On DEFAULT shift to state 300
-- On CST_STRING shift to state 50
-- On CST_INT shift to state 303
-- On CONST shift to state 306
-- On AND shift to state 307
-- On ALIGNOF shift to state 308
-- On unary_attr shift to state 541
-- On string_list shift to state 106
-- On string_constant shift to state 542
-- On primary_attr shift to state 543
-- On postfix_attr shift to state 544
-- On one_string shift to state 121
-- On multiplicative_attr shift to state 553
-- On cast_attr shift to state 560
-- On additive_attr shift to state 561
## Reductions:

State 553:
## Known stack suffix:
## multiplicative_attr
## LR(1) items:
additive_attr -> multiplicative_attr . [ SUP_SUP SUP_EQ SUP SEMICOLON RPAREN PRAGMA_EOL PLUS PIPE_PIPE PIPE MINUS INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ COMMA CIRC AND_AND AND ]
multiplicative_attr -> multiplicative_attr . STAR cast_attr [ SUP_SUP SUP_EQ SUP STAR SLASH SEMICOLON RPAREN PRAGMA_EOL PLUS PIPE_PIPE PIPE PERCENT MINUS INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ COMMA CIRC AND_AND AND ]
multiplicative_attr -> multiplicative_attr . SLASH cast_attr [ SUP_SUP SUP_EQ SUP STAR SLASH SEMICOLON RPAREN PRAGMA_EOL PLUS PIPE_PIPE PIPE PERCENT MINUS INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ COMMA CIRC AND_AND AND ]
multiplicative_attr -> multiplicative_attr . PERCENT cast_attr [ SUP_SUP SUP_EQ SUP STAR SLASH SEMICOLON RPAREN PRAGMA_EOL PLUS PIPE_PIPE PIPE PERCENT MINUS INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ COMMA CIRC AND_AND AND ]
## Transitions:
-- On STAR shift to state 554
-- On SLASH shift to state 556
-- On PERCENT shift to state 558
## Reductions:
-- On SUP_SUP SUP_EQ SUP SEMICOLON RPAREN PRAGMA_EOL PLUS PIPE_PIPE PIPE MINUS INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ COMMA CIRC AND_AND AND
--   reduce production additive_attr -> multiplicative_attr

State 554:
## Known stack suffix:
## multiplicative_attr STAR
## LR(1) items:
multiplicative_attr -> multiplicative_attr STAR . cast_attr [ SUP_SUP SUP_EQ SUP STAR SLASH SEMICOLON RPAREN PRAGMA_EOL PLUS PIPE_PIPE PIPE PERCENT MINUS INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ COMMA CIRC AND_AND AND ]
## Transitions:
-- On VOLATILE shift to state 73
-- On TILDE shift to state 74
-- On STAR shift to state 75
-- On SIZEOF shift to state 76
-- On PRETTY_FUNCTION__ shift to state 35
-- On PLUS shift to state 292
-- On NAMED_TYPE shift to state 293
-- On MINUS shift to state 294
-- On LPAREN shift to state 295
-- On IDENT shift to state 296
-- On FUNCTION__ shift to state 46
-- On EXCLAM shift to state 299
-- On DEFAULT shift to state 300
-- On CST_STRING shift to state 50
-- On CST_INT shift to state 303
-- On CONST shift to state 306
-- On AND shift to state 307
-- On ALIGNOF shift to state 308
-- On unary_attr shift to state 541
-- On string_list shift to state 106
-- On string_constant shift to state 542
-- On primary_attr shift to state 543
-- On postfix_attr shift to state 544
-- On one_string shift to state 121
-- On cast_attr shift to state 555
## Reductions:

State 555:
## Known stack suffix:
## multiplicative_attr STAR cast_attr
## LR(1) items:
multiplicative_attr -> multiplicative_attr STAR cast_attr . [ SUP_SUP SUP_EQ SUP STAR SLASH SEMICOLON RPAREN PRAGMA_EOL PLUS PIPE_PIPE PIPE PERCENT MINUS INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ COMMA CIRC AND_AND AND ]
## Transitions:
## Reductions:
-- On SUP_SUP SUP_EQ SUP STAR SLASH SEMICOLON RPAREN PRAGMA_EOL PLUS PIPE_PIPE PIPE PERCENT MINUS INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ COMMA CIRC AND_AND AND
--   reduce production multiplicative_attr -> multiplicative_attr STAR cast_attr

State 556:
## Known stack suffix:
## multiplicative_attr SLASH
## LR(1) items:
multiplicative_attr -> multiplicative_attr SLASH . cast_attr [ SUP_SUP SUP_EQ SUP STAR SLASH SEMICOLON RPAREN PRAGMA_EOL PLUS PIPE_PIPE PIPE PERCENT MINUS INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ COMMA CIRC AND_AND AND ]
## Transitions:
-- On VOLATILE shift to state 73
-- On TILDE shift to state 74
-- On STAR shift to state 75
-- On SIZEOF shift to state 76
-- On PRETTY_FUNCTION__ shift to state 35
-- On PLUS shift to state 292
-- On NAMED_TYPE shift to state 293
-- On MINUS shift to state 294
-- On LPAREN shift to state 295
-- On IDENT shift to state 296
-- On FUNCTION__ shift to state 46
-- On EXCLAM shift to state 299
-- On DEFAULT shift to state 300
-- On CST_STRING shift to state 50
-- On CST_INT shift to state 303
-- On CONST shift to state 306
-- On AND shift to state 307
-- On ALIGNOF shift to state 308
-- On unary_attr shift to state 541
-- On string_list shift to state 106
-- On string_constant shift to state 542
-- On primary_attr shift to state 543
-- On postfix_attr shift to state 544
-- On one_string shift to state 121
-- On cast_attr shift to state 557
## Reductions:

State 557:
## Known stack suffix:
## multiplicative_attr SLASH cast_attr
## LR(1) items:
multiplicative_attr -> multiplicative_attr SLASH cast_attr . [ SUP_SUP SUP_EQ SUP STAR SLASH SEMICOLON RPAREN PRAGMA_EOL PLUS PIPE_PIPE PIPE PERCENT MINUS INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ COMMA CIRC AND_AND AND ]
## Transitions:
## Reductions:
-- On SUP_SUP SUP_EQ SUP STAR SLASH SEMICOLON RPAREN PRAGMA_EOL PLUS PIPE_PIPE PIPE PERCENT MINUS INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ COMMA CIRC AND_AND AND
--   reduce production multiplicative_attr -> multiplicative_attr SLASH cast_attr

State 558:
## Known stack suffix:
## multiplicative_attr PERCENT
## LR(1) items:
multiplicative_attr -> multiplicative_attr PERCENT . cast_attr [ SUP_SUP SUP_EQ SUP STAR SLASH SEMICOLON RPAREN PRAGMA_EOL PLUS PIPE_PIPE PIPE PERCENT MINUS INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ COMMA CIRC AND_AND AND ]
## Transitions:
-- On VOLATILE shift to state 73
-- On TILDE shift to state 74
-- On STAR shift to state 75
-- On SIZEOF shift to state 76
-- On PRETTY_FUNCTION__ shift to state 35
-- On PLUS shift to state 292
-- On NAMED_TYPE shift to state 293
-- On MINUS shift to state 294
-- On LPAREN shift to state 295
-- On IDENT shift to state 296
-- On FUNCTION__ shift to state 46
-- On EXCLAM shift to state 299
-- On DEFAULT shift to state 300
-- On CST_STRING shift to state 50
-- On CST_INT shift to state 303
-- On CONST shift to state 306
-- On AND shift to state 307
-- On ALIGNOF shift to state 308
-- On unary_attr shift to state 541
-- On string_list shift to state 106
-- On string_constant shift to state 542
-- On primary_attr shift to state 543
-- On postfix_attr shift to state 544
-- On one_string shift to state 121
-- On cast_attr shift to state 559
## Reductions:

State 559:
## Known stack suffix:
## multiplicative_attr PERCENT cast_attr
## LR(1) items:
multiplicative_attr -> multiplicative_attr PERCENT cast_attr . [ SUP_SUP SUP_EQ SUP STAR SLASH SEMICOLON RPAREN PRAGMA_EOL PLUS PIPE_PIPE PIPE PERCENT MINUS INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ COMMA CIRC AND_AND AND ]
## Transitions:
## Reductions:
-- On SUP_SUP SUP_EQ SUP STAR SLASH SEMICOLON RPAREN PRAGMA_EOL PLUS PIPE_PIPE PIPE PERCENT MINUS INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ COMMA CIRC AND_AND AND
--   reduce production multiplicative_attr -> multiplicative_attr PERCENT cast_attr

State 560:
## Known stack suffix:
## cast_attr
## LR(1) items:
multiplicative_attr -> cast_attr . [ SUP_SUP SUP_EQ SUP STAR SLASH SEMICOLON RPAREN PRAGMA_EOL PLUS PIPE_PIPE PIPE PERCENT MINUS INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ COMMA CIRC AND_AND AND ]
## Transitions:
## Reductions:
-- On SUP_SUP SUP_EQ SUP STAR SLASH SEMICOLON RPAREN PRAGMA_EOL PLUS PIPE_PIPE PIPE PERCENT MINUS INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ COMMA CIRC AND_AND AND
--   reduce production multiplicative_attr -> cast_attr

State 561:
## Known stack suffix:
## shift_attr SUP_SUP additive_attr
## LR(1) items:
additive_attr -> additive_attr . PLUS multiplicative_attr [ SUP_SUP SUP_EQ SUP SEMICOLON RPAREN PRAGMA_EOL PLUS PIPE_PIPE PIPE MINUS INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ COMMA CIRC AND_AND AND ]
additive_attr -> additive_attr . MINUS multiplicative_attr [ SUP_SUP SUP_EQ SUP SEMICOLON RPAREN PRAGMA_EOL PLUS PIPE_PIPE PIPE MINUS INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ COMMA CIRC AND_AND AND ]
shift_attr -> shift_attr SUP_SUP additive_attr . [ SUP_SUP SUP_EQ SUP SEMICOLON RPAREN PRAGMA_EOL PIPE_PIPE PIPE INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ COMMA CIRC AND_AND AND ]
## Transitions:
-- On PLUS shift to state 562
-- On MINUS shift to state 564
## Reductions:
-- On SUP_SUP SUP_EQ SUP SEMICOLON RPAREN PRAGMA_EOL PIPE_PIPE PIPE INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ COMMA CIRC AND_AND AND
--   reduce production shift_attr -> shift_attr SUP_SUP additive_attr

State 562:
## Known stack suffix:
## additive_attr PLUS
## LR(1) items:
additive_attr -> additive_attr PLUS . multiplicative_attr [ SUP_SUP SUP_EQ SUP SEMICOLON RPAREN PRAGMA_EOL PLUS PIPE_PIPE PIPE MINUS INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ COMMA CIRC AND_AND AND ]
## Transitions:
-- On VOLATILE shift to state 73
-- On TILDE shift to state 74
-- On STAR shift to state 75
-- On SIZEOF shift to state 76
-- On PRETTY_FUNCTION__ shift to state 35
-- On PLUS shift to state 292
-- On NAMED_TYPE shift to state 293
-- On MINUS shift to state 294
-- On LPAREN shift to state 295
-- On IDENT shift to state 296
-- On FUNCTION__ shift to state 46
-- On EXCLAM shift to state 299
-- On DEFAULT shift to state 300
-- On CST_STRING shift to state 50
-- On CST_INT shift to state 303
-- On CONST shift to state 306
-- On AND shift to state 307
-- On ALIGNOF shift to state 308
-- On unary_attr shift to state 541
-- On string_list shift to state 106
-- On string_constant shift to state 542
-- On primary_attr shift to state 543
-- On postfix_attr shift to state 544
-- On one_string shift to state 121
-- On multiplicative_attr shift to state 563
-- On cast_attr shift to state 560
## Reductions:

State 563:
## Known stack suffix:
## additive_attr PLUS multiplicative_attr
## LR(1) items:
additive_attr -> additive_attr PLUS multiplicative_attr . [ SUP_SUP SUP_EQ SUP SEMICOLON RPAREN PRAGMA_EOL PLUS PIPE_PIPE PIPE MINUS INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ COMMA CIRC AND_AND AND ]
multiplicative_attr -> multiplicative_attr . STAR cast_attr [ SUP_SUP SUP_EQ SUP STAR SLASH SEMICOLON RPAREN PRAGMA_EOL PLUS PIPE_PIPE PIPE PERCENT MINUS INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ COMMA CIRC AND_AND AND ]
multiplicative_attr -> multiplicative_attr . SLASH cast_attr [ SUP_SUP SUP_EQ SUP STAR SLASH SEMICOLON RPAREN PRAGMA_EOL PLUS PIPE_PIPE PIPE PERCENT MINUS INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ COMMA CIRC AND_AND AND ]
multiplicative_attr -> multiplicative_attr . PERCENT cast_attr [ SUP_SUP SUP_EQ SUP STAR SLASH SEMICOLON RPAREN PRAGMA_EOL PLUS PIPE_PIPE PIPE PERCENT MINUS INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ COMMA CIRC AND_AND AND ]
## Transitions:
-- On STAR shift to state 554
-- On SLASH shift to state 556
-- On PERCENT shift to state 558
## Reductions:
-- On SUP_SUP SUP_EQ SUP SEMICOLON RPAREN PRAGMA_EOL PLUS PIPE_PIPE PIPE MINUS INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ COMMA CIRC AND_AND AND
--   reduce production additive_attr -> additive_attr PLUS multiplicative_attr

State 564:
## Known stack suffix:
## additive_attr MINUS
## LR(1) items:
additive_attr -> additive_attr MINUS . multiplicative_attr [ SUP_SUP SUP_EQ SUP SEMICOLON RPAREN PRAGMA_EOL PLUS PIPE_PIPE PIPE MINUS INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ COMMA CIRC AND_AND AND ]
## Transitions:
-- On VOLATILE shift to state 73
-- On TILDE shift to state 74
-- On STAR shift to state 75
-- On SIZEOF shift to state 76
-- On PRETTY_FUNCTION__ shift to state 35
-- On PLUS shift to state 292
-- On NAMED_TYPE shift to state 293
-- On MINUS shift to state 294
-- On LPAREN shift to state 295
-- On IDENT shift to state 296
-- On FUNCTION__ shift to state 46
-- On EXCLAM shift to state 299
-- On DEFAULT shift to state 300
-- On CST_STRING shift to state 50
-- On CST_INT shift to state 303
-- On CONST shift to state 306
-- On AND shift to state 307
-- On ALIGNOF shift to state 308
-- On unary_attr shift to state 541
-- On string_list shift to state 106
-- On string_constant shift to state 542
-- On primary_attr shift to state 543
-- On postfix_attr shift to state 544
-- On one_string shift to state 121
-- On multiplicative_attr shift to state 565
-- On cast_attr shift to state 560
## Reductions:

State 565:
## Known stack suffix:
## additive_attr MINUS multiplicative_attr
## LR(1) items:
additive_attr -> additive_attr MINUS multiplicative_attr . [ SUP_SUP SUP_EQ SUP SEMICOLON RPAREN PRAGMA_EOL PLUS PIPE_PIPE PIPE MINUS INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ COMMA CIRC AND_AND AND ]
multiplicative_attr -> multiplicative_attr . STAR cast_attr [ SUP_SUP SUP_EQ SUP STAR SLASH SEMICOLON RPAREN PRAGMA_EOL PLUS PIPE_PIPE PIPE PERCENT MINUS INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ COMMA CIRC AND_AND AND ]
multiplicative_attr -> multiplicative_attr . SLASH cast_attr [ SUP_SUP SUP_EQ SUP STAR SLASH SEMICOLON RPAREN PRAGMA_EOL PLUS PIPE_PIPE PIPE PERCENT MINUS INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ COMMA CIRC AND_AND AND ]
multiplicative_attr -> multiplicative_attr . PERCENT cast_attr [ SUP_SUP SUP_EQ SUP STAR SLASH SEMICOLON RPAREN PRAGMA_EOL PLUS PIPE_PIPE PIPE PERCENT MINUS INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ COMMA CIRC AND_AND AND ]
## Transitions:
-- On STAR shift to state 554
-- On SLASH shift to state 556
-- On PERCENT shift to state 558
## Reductions:
-- On SUP_SUP SUP_EQ SUP SEMICOLON RPAREN PRAGMA_EOL PLUS PIPE_PIPE PIPE MINUS INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ COMMA CIRC AND_AND AND
--   reduce production additive_attr -> additive_attr MINUS multiplicative_attr

State 566:
## Known stack suffix:
## shift_attr INF_INF
## LR(1) items:
shift_attr -> shift_attr INF_INF . additive_attr [ SUP_SUP SUP_EQ SUP SEMICOLON RPAREN PRAGMA_EOL PIPE_PIPE PIPE INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ COMMA CIRC AND_AND AND ]
## Transitions:
-- On VOLATILE shift to state 73
-- On TILDE shift to state 74
-- On STAR shift to state 75
-- On SIZEOF shift to state 76
-- On PRETTY_FUNCTION__ shift to state 35
-- On PLUS shift to state 292
-- On NAMED_TYPE shift to state 293
-- On MINUS shift to state 294
-- On LPAREN shift to state 295
-- On IDENT shift to state 296
-- On FUNCTION__ shift to state 46
-- On EXCLAM shift to state 299
-- On DEFAULT shift to state 300
-- On CST_STRING shift to state 50
-- On CST_INT shift to state 303
-- On CONST shift to state 306
-- On AND shift to state 307
-- On ALIGNOF shift to state 308
-- On unary_attr shift to state 541
-- On string_list shift to state 106
-- On string_constant shift to state 542
-- On primary_attr shift to state 543
-- On postfix_attr shift to state 544
-- On one_string shift to state 121
-- On multiplicative_attr shift to state 553
-- On cast_attr shift to state 560
-- On additive_attr shift to state 567
## Reductions:

State 567:
## Known stack suffix:
## shift_attr INF_INF additive_attr
## LR(1) items:
additive_attr -> additive_attr . PLUS multiplicative_attr [ SUP_SUP SUP_EQ SUP SEMICOLON RPAREN PRAGMA_EOL PLUS PIPE_PIPE PIPE MINUS INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ COMMA CIRC AND_AND AND ]
additive_attr -> additive_attr . MINUS multiplicative_attr [ SUP_SUP SUP_EQ SUP SEMICOLON RPAREN PRAGMA_EOL PLUS PIPE_PIPE PIPE MINUS INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ COMMA CIRC AND_AND AND ]
shift_attr -> shift_attr INF_INF additive_attr . [ SUP_SUP SUP_EQ SUP SEMICOLON RPAREN PRAGMA_EOL PIPE_PIPE PIPE INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ COMMA CIRC AND_AND AND ]
## Transitions:
-- On PLUS shift to state 562
-- On MINUS shift to state 564
## Reductions:
-- On SUP_SUP SUP_EQ SUP SEMICOLON RPAREN PRAGMA_EOL PIPE_PIPE PIPE INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ COMMA CIRC AND_AND AND
--   reduce production shift_attr -> shift_attr INF_INF additive_attr

State 568:
## Known stack suffix:
## relational_attr
## LR(1) items:
equality_attr -> relational_attr . [ SEMICOLON RPAREN PRAGMA_EOL PIPE_PIPE PIPE EXCLAM_EQ EQ_EQ COMMA CIRC AND_AND AND ]
relational_attr -> relational_attr . INF shift_attr [ SUP_EQ SUP SEMICOLON RPAREN PRAGMA_EOL PIPE_PIPE PIPE INF_EQ INF EXCLAM_EQ EQ_EQ COMMA CIRC AND_AND AND ]
relational_attr -> relational_attr . SUP shift_attr [ SUP_EQ SUP SEMICOLON RPAREN PRAGMA_EOL PIPE_PIPE PIPE INF_EQ INF EXCLAM_EQ EQ_EQ COMMA CIRC AND_AND AND ]
relational_attr -> relational_attr . INF_EQ shift_attr [ SUP_EQ SUP SEMICOLON RPAREN PRAGMA_EOL PIPE_PIPE PIPE INF_EQ INF EXCLAM_EQ EQ_EQ COMMA CIRC AND_AND AND ]
relational_attr -> relational_attr . SUP_EQ shift_attr [ SUP_EQ SUP SEMICOLON RPAREN PRAGMA_EOL PIPE_PIPE PIPE INF_EQ INF EXCLAM_EQ EQ_EQ COMMA CIRC AND_AND AND ]
## Transitions:
-- On SUP_EQ shift to state 569
-- On SUP shift to state 572
-- On INF_EQ shift to state 574
-- On INF shift to state 576
## Reductions:
-- On SEMICOLON RPAREN PRAGMA_EOL PIPE_PIPE PIPE EXCLAM_EQ EQ_EQ COMMA CIRC AND_AND AND
--   reduce production equality_attr -> relational_attr

State 569:
## Known stack suffix:
## relational_attr SUP_EQ
## LR(1) items:
relational_attr -> relational_attr SUP_EQ . shift_attr [ SUP_EQ SUP SEMICOLON RPAREN PRAGMA_EOL PIPE_PIPE PIPE INF_EQ INF EXCLAM_EQ EQ_EQ COMMA CIRC AND_AND AND ]
## Transitions:
-- On VOLATILE shift to state 73
-- On TILDE shift to state 74
-- On STAR shift to state 75
-- On SIZEOF shift to state 76
-- On PRETTY_FUNCTION__ shift to state 35
-- On PLUS shift to state 292
-- On NAMED_TYPE shift to state 293
-- On MINUS shift to state 294
-- On LPAREN shift to state 295
-- On IDENT shift to state 296
-- On FUNCTION__ shift to state 46
-- On EXCLAM shift to state 299
-- On DEFAULT shift to state 300
-- On CST_STRING shift to state 50
-- On CST_INT shift to state 303
-- On CONST shift to state 306
-- On AND shift to state 307
-- On ALIGNOF shift to state 308
-- On unary_attr shift to state 541
-- On string_list shift to state 106
-- On string_constant shift to state 542
-- On shift_attr shift to state 570
-- On primary_attr shift to state 543
-- On postfix_attr shift to state 544
-- On one_string shift to state 121
-- On multiplicative_attr shift to state 553
-- On cast_attr shift to state 560
-- On additive_attr shift to state 571
## Reductions:

State 570:
## Known stack suffix:
## relational_attr SUP_EQ shift_attr
## LR(1) items:
relational_attr -> relational_attr SUP_EQ shift_attr . [ SUP_EQ SUP SEMICOLON RPAREN PRAGMA_EOL PIPE_PIPE PIPE INF_EQ INF EXCLAM_EQ EQ_EQ COMMA CIRC AND_AND AND ]
shift_attr -> shift_attr . INF_INF additive_attr [ SUP_SUP SUP_EQ SUP SEMICOLON RPAREN PRAGMA_EOL PIPE_PIPE PIPE INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ COMMA CIRC AND_AND AND ]
shift_attr -> shift_attr . SUP_SUP additive_attr [ SUP_SUP SUP_EQ SUP SEMICOLON RPAREN PRAGMA_EOL PIPE_PIPE PIPE INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ COMMA CIRC AND_AND AND ]
## Transitions:
-- On SUP_SUP shift to state 552
-- On INF_INF shift to state 566
## Reductions:
-- On SUP_EQ SUP SEMICOLON RPAREN PRAGMA_EOL PIPE_PIPE PIPE INF_EQ INF EXCLAM_EQ EQ_EQ COMMA CIRC AND_AND AND
--   reduce production relational_attr -> relational_attr SUP_EQ shift_attr

State 571:
## Known stack suffix:
## additive_attr
## LR(1) items:
additive_attr -> additive_attr . PLUS multiplicative_attr [ SUP_SUP SUP_EQ SUP SEMICOLON RPAREN PRAGMA_EOL PLUS PIPE_PIPE PIPE MINUS INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ COMMA CIRC AND_AND AND ]
additive_attr -> additive_attr . MINUS multiplicative_attr [ SUP_SUP SUP_EQ SUP SEMICOLON RPAREN PRAGMA_EOL PLUS PIPE_PIPE PIPE MINUS INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ COMMA CIRC AND_AND AND ]
shift_attr -> additive_attr . [ SUP_SUP SUP_EQ SUP SEMICOLON RPAREN PRAGMA_EOL PIPE_PIPE PIPE INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ COMMA CIRC AND_AND AND ]
## Transitions:
-- On PLUS shift to state 562
-- On MINUS shift to state 564
## Reductions:
-- On SUP_SUP SUP_EQ SUP SEMICOLON RPAREN PRAGMA_EOL PIPE_PIPE PIPE INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ COMMA CIRC AND_AND AND
--   reduce production shift_attr -> additive_attr

State 572:
## Known stack suffix:
## relational_attr SUP
## LR(1) items:
relational_attr -> relational_attr SUP . shift_attr [ SUP_EQ SUP SEMICOLON RPAREN PRAGMA_EOL PIPE_PIPE PIPE INF_EQ INF EXCLAM_EQ EQ_EQ COMMA CIRC AND_AND AND ]
## Transitions:
-- On VOLATILE shift to state 73
-- On TILDE shift to state 74
-- On STAR shift to state 75
-- On SIZEOF shift to state 76
-- On PRETTY_FUNCTION__ shift to state 35
-- On PLUS shift to state 292
-- On NAMED_TYPE shift to state 293
-- On MINUS shift to state 294
-- On LPAREN shift to state 295
-- On IDENT shift to state 296
-- On FUNCTION__ shift to state 46
-- On EXCLAM shift to state 299
-- On DEFAULT shift to state 300
-- On CST_STRING shift to state 50
-- On CST_INT shift to state 303
-- On CONST shift to state 306
-- On AND shift to state 307
-- On ALIGNOF shift to state 308
-- On unary_attr shift to state 541
-- On string_list shift to state 106
-- On string_constant shift to state 542
-- On shift_attr shift to state 573
-- On primary_attr shift to state 543
-- On postfix_attr shift to state 544
-- On one_string shift to state 121
-- On multiplicative_attr shift to state 553
-- On cast_attr shift to state 560
-- On additive_attr shift to state 571
## Reductions:

State 573:
## Known stack suffix:
## relational_attr SUP shift_attr
## LR(1) items:
relational_attr -> relational_attr SUP shift_attr . [ SUP_EQ SUP SEMICOLON RPAREN PRAGMA_EOL PIPE_PIPE PIPE INF_EQ INF EXCLAM_EQ EQ_EQ COMMA CIRC AND_AND AND ]
shift_attr -> shift_attr . INF_INF additive_attr [ SUP_SUP SUP_EQ SUP SEMICOLON RPAREN PRAGMA_EOL PIPE_PIPE PIPE INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ COMMA CIRC AND_AND AND ]
shift_attr -> shift_attr . SUP_SUP additive_attr [ SUP_SUP SUP_EQ SUP SEMICOLON RPAREN PRAGMA_EOL PIPE_PIPE PIPE INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ COMMA CIRC AND_AND AND ]
## Transitions:
-- On SUP_SUP shift to state 552
-- On INF_INF shift to state 566
## Reductions:
-- On SUP_EQ SUP SEMICOLON RPAREN PRAGMA_EOL PIPE_PIPE PIPE INF_EQ INF EXCLAM_EQ EQ_EQ COMMA CIRC AND_AND AND
--   reduce production relational_attr -> relational_attr SUP shift_attr

State 574:
## Known stack suffix:
## relational_attr INF_EQ
## LR(1) items:
relational_attr -> relational_attr INF_EQ . shift_attr [ SUP_EQ SUP SEMICOLON RPAREN PRAGMA_EOL PIPE_PIPE PIPE INF_EQ INF EXCLAM_EQ EQ_EQ COMMA CIRC AND_AND AND ]
## Transitions:
-- On VOLATILE shift to state 73
-- On TILDE shift to state 74
-- On STAR shift to state 75
-- On SIZEOF shift to state 76
-- On PRETTY_FUNCTION__ shift to state 35
-- On PLUS shift to state 292
-- On NAMED_TYPE shift to state 293
-- On MINUS shift to state 294
-- On LPAREN shift to state 295
-- On IDENT shift to state 296
-- On FUNCTION__ shift to state 46
-- On EXCLAM shift to state 299
-- On DEFAULT shift to state 300
-- On CST_STRING shift to state 50
-- On CST_INT shift to state 303
-- On CONST shift to state 306
-- On AND shift to state 307
-- On ALIGNOF shift to state 308
-- On unary_attr shift to state 541
-- On string_list shift to state 106
-- On string_constant shift to state 542
-- On shift_attr shift to state 575
-- On primary_attr shift to state 543
-- On postfix_attr shift to state 544
-- On one_string shift to state 121
-- On multiplicative_attr shift to state 553
-- On cast_attr shift to state 560
-- On additive_attr shift to state 571
## Reductions:

State 575:
## Known stack suffix:
## relational_attr INF_EQ shift_attr
## LR(1) items:
relational_attr -> relational_attr INF_EQ shift_attr . [ SUP_EQ SUP SEMICOLON RPAREN PRAGMA_EOL PIPE_PIPE PIPE INF_EQ INF EXCLAM_EQ EQ_EQ COMMA CIRC AND_AND AND ]
shift_attr -> shift_attr . INF_INF additive_attr [ SUP_SUP SUP_EQ SUP SEMICOLON RPAREN PRAGMA_EOL PIPE_PIPE PIPE INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ COMMA CIRC AND_AND AND ]
shift_attr -> shift_attr . SUP_SUP additive_attr [ SUP_SUP SUP_EQ SUP SEMICOLON RPAREN PRAGMA_EOL PIPE_PIPE PIPE INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ COMMA CIRC AND_AND AND ]
## Transitions:
-- On SUP_SUP shift to state 552
-- On INF_INF shift to state 566
## Reductions:
-- On SUP_EQ SUP SEMICOLON RPAREN PRAGMA_EOL PIPE_PIPE PIPE INF_EQ INF EXCLAM_EQ EQ_EQ COMMA CIRC AND_AND AND
--   reduce production relational_attr -> relational_attr INF_EQ shift_attr

State 576:
## Known stack suffix:
## relational_attr INF
## LR(1) items:
relational_attr -> relational_attr INF . shift_attr [ SUP_EQ SUP SEMICOLON RPAREN PRAGMA_EOL PIPE_PIPE PIPE INF_EQ INF EXCLAM_EQ EQ_EQ COMMA CIRC AND_AND AND ]
## Transitions:
-- On VOLATILE shift to state 73
-- On TILDE shift to state 74
-- On STAR shift to state 75
-- On SIZEOF shift to state 76
-- On PRETTY_FUNCTION__ shift to state 35
-- On PLUS shift to state 292
-- On NAMED_TYPE shift to state 293
-- On MINUS shift to state 294
-- On LPAREN shift to state 295
-- On IDENT shift to state 296
-- On FUNCTION__ shift to state 46
-- On EXCLAM shift to state 299
-- On DEFAULT shift to state 300
-- On CST_STRING shift to state 50
-- On CST_INT shift to state 303
-- On CONST shift to state 306
-- On AND shift to state 307
-- On ALIGNOF shift to state 308
-- On unary_attr shift to state 541
-- On string_list shift to state 106
-- On string_constant shift to state 542
-- On shift_attr shift to state 577
-- On primary_attr shift to state 543
-- On postfix_attr shift to state 544
-- On one_string shift to state 121
-- On multiplicative_attr shift to state 553
-- On cast_attr shift to state 560
-- On additive_attr shift to state 571
## Reductions:

State 577:
## Known stack suffix:
## relational_attr INF shift_attr
## LR(1) items:
relational_attr -> relational_attr INF shift_attr . [ SUP_EQ SUP SEMICOLON RPAREN PRAGMA_EOL PIPE_PIPE PIPE INF_EQ INF EXCLAM_EQ EQ_EQ COMMA CIRC AND_AND AND ]
shift_attr -> shift_attr . INF_INF additive_attr [ SUP_SUP SUP_EQ SUP SEMICOLON RPAREN PRAGMA_EOL PIPE_PIPE PIPE INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ COMMA CIRC AND_AND AND ]
shift_attr -> shift_attr . SUP_SUP additive_attr [ SUP_SUP SUP_EQ SUP SEMICOLON RPAREN PRAGMA_EOL PIPE_PIPE PIPE INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ COMMA CIRC AND_AND AND ]
## Transitions:
-- On SUP_SUP shift to state 552
-- On INF_INF shift to state 566
## Reductions:
-- On SUP_EQ SUP SEMICOLON RPAREN PRAGMA_EOL PIPE_PIPE PIPE INF_EQ INF EXCLAM_EQ EQ_EQ COMMA CIRC AND_AND AND
--   reduce production relational_attr -> relational_attr INF shift_attr

State 578:
## Known stack suffix:
## logical_or_attr
## LR(1) items:
attr -> logical_or_attr . [ SEMICOLON RPAREN PRAGMA_EOL COMMA ]
logical_or_attr -> logical_or_attr . PIPE_PIPE logical_and_attr [ SEMICOLON RPAREN PRAGMA_EOL PIPE_PIPE COMMA ]
## Transitions:
-- On PIPE_PIPE shift to state 579
## Reductions:
-- On SEMICOLON RPAREN PRAGMA_EOL COMMA
--   reduce production attr -> logical_or_attr

State 579:
## Known stack suffix:
## logical_or_attr PIPE_PIPE
## LR(1) items:
logical_or_attr -> logical_or_attr PIPE_PIPE . logical_and_attr [ SEMICOLON RPAREN PRAGMA_EOL PIPE_PIPE COMMA ]
## Transitions:
-- On VOLATILE shift to state 73
-- On TILDE shift to state 74
-- On STAR shift to state 75
-- On SIZEOF shift to state 76
-- On PRETTY_FUNCTION__ shift to state 35
-- On PLUS shift to state 292
-- On NAMED_TYPE shift to state 293
-- On MINUS shift to state 294
-- On LPAREN shift to state 295
-- On IDENT shift to state 296
-- On FUNCTION__ shift to state 46
-- On EXCLAM shift to state 299
-- On DEFAULT shift to state 300
-- On CST_STRING shift to state 50
-- On CST_INT shift to state 303
-- On CONST shift to state 306
-- On AND shift to state 307
-- On ALIGNOF shift to state 308
-- On unary_attr shift to state 541
-- On string_list shift to state 106
-- On string_constant shift to state 542
-- On shift_attr shift to state 551
-- On relational_attr shift to state 568
-- On primary_attr shift to state 543
-- On postfix_attr shift to state 544
-- On one_string shift to state 121
-- On multiplicative_attr shift to state 553
-- On logical_and_attr shift to state 580
-- On equality_attr shift to state 582
-- On cast_attr shift to state 560
-- On bitwise_xor_attr shift to state 587
-- On bitwise_or_attr shift to state 596
-- On bitwise_and_attr shift to state 595
-- On additive_attr shift to state 571
## Reductions:

State 580:
## Known stack suffix:
## logical_or_attr PIPE_PIPE logical_and_attr
## LR(1) items:
logical_and_attr -> logical_and_attr . AND_AND bitwise_or_attr [ SEMICOLON RPAREN PRAGMA_EOL PIPE_PIPE COMMA AND_AND ]
logical_or_attr -> logical_or_attr PIPE_PIPE logical_and_attr . [ SEMICOLON RPAREN PRAGMA_EOL PIPE_PIPE COMMA ]
## Transitions:
-- On AND_AND shift to state 581
## Reductions:
-- On SEMICOLON RPAREN PRAGMA_EOL PIPE_PIPE COMMA
--   reduce production logical_or_attr -> logical_or_attr PIPE_PIPE logical_and_attr

State 581:
## Known stack suffix:
## logical_and_attr AND_AND
## LR(1) items:
logical_and_attr -> logical_and_attr AND_AND . bitwise_or_attr [ SEMICOLON RPAREN PRAGMA_EOL PIPE_PIPE COMMA AND_AND ]
## Transitions:
-- On VOLATILE shift to state 73
-- On TILDE shift to state 74
-- On STAR shift to state 75
-- On SIZEOF shift to state 76
-- On PRETTY_FUNCTION__ shift to state 35
-- On PLUS shift to state 292
-- On NAMED_TYPE shift to state 293
-- On MINUS shift to state 294
-- On LPAREN shift to state 295
-- On IDENT shift to state 296
-- On FUNCTION__ shift to state 46
-- On EXCLAM shift to state 299
-- On DEFAULT shift to state 300
-- On CST_STRING shift to state 50
-- On CST_INT shift to state 303
-- On CONST shift to state 306
-- On AND shift to state 307
-- On ALIGNOF shift to state 308
-- On unary_attr shift to state 541
-- On string_list shift to state 106
-- On string_constant shift to state 542
-- On shift_attr shift to state 551
-- On relational_attr shift to state 568
-- On primary_attr shift to state 543
-- On postfix_attr shift to state 544
-- On one_string shift to state 121
-- On multiplicative_attr shift to state 553
-- On equality_attr shift to state 582
-- On cast_attr shift to state 560
-- On bitwise_xor_attr shift to state 587
-- On bitwise_or_attr shift to state 592
-- On bitwise_and_attr shift to state 595
-- On additive_attr shift to state 571
## Reductions:

State 582:
## Known stack suffix:
## equality_attr
## LR(1) items:
bitwise_and_attr -> equality_attr . [ SEMICOLON RPAREN PRAGMA_EOL PIPE_PIPE PIPE COMMA CIRC AND_AND AND ]
equality_attr -> equality_attr . EQ_EQ relational_attr [ SEMICOLON RPAREN PRAGMA_EOL PIPE_PIPE PIPE EXCLAM_EQ EQ_EQ COMMA CIRC AND_AND AND ]
equality_attr -> equality_attr . EXCLAM_EQ relational_attr [ SEMICOLON RPAREN PRAGMA_EOL PIPE_PIPE PIPE EXCLAM_EQ EQ_EQ COMMA CIRC AND_AND AND ]
## Transitions:
-- On EXCLAM_EQ shift to state 583
-- On EQ_EQ shift to state 585
## Reductions:
-- On SEMICOLON RPAREN PRAGMA_EOL PIPE_PIPE PIPE COMMA CIRC AND_AND AND
--   reduce production bitwise_and_attr -> equality_attr

State 583:
## Known stack suffix:
## equality_attr EXCLAM_EQ
## LR(1) items:
equality_attr -> equality_attr EXCLAM_EQ . relational_attr [ SEMICOLON RPAREN PRAGMA_EOL PIPE_PIPE PIPE EXCLAM_EQ EQ_EQ COMMA CIRC AND_AND AND ]
## Transitions:
-- On VOLATILE shift to state 73
-- On TILDE shift to state 74
-- On STAR shift to state 75
-- On SIZEOF shift to state 76
-- On PRETTY_FUNCTION__ shift to state 35
-- On PLUS shift to state 292
-- On NAMED_TYPE shift to state 293
-- On MINUS shift to state 294
-- On LPAREN shift to state 295
-- On IDENT shift to state 296
-- On FUNCTION__ shift to state 46
-- On EXCLAM shift to state 299
-- On DEFAULT shift to state 300
-- On CST_STRING shift to state 50
-- On CST_INT shift to state 303
-- On CONST shift to state 306
-- On AND shift to state 307
-- On ALIGNOF shift to state 308
-- On unary_attr shift to state 541
-- On string_list shift to state 106
-- On string_constant shift to state 542
-- On shift_attr shift to state 551
-- On relational_attr shift to state 584
-- On primary_attr shift to state 543
-- On postfix_attr shift to state 544
-- On one_string shift to state 121
-- On multiplicative_attr shift to state 553
-- On cast_attr shift to state 560
-- On additive_attr shift to state 571
## Reductions:

State 584:
## Known stack suffix:
## equality_attr EXCLAM_EQ relational_attr
## LR(1) items:
equality_attr -> equality_attr EXCLAM_EQ relational_attr . [ SEMICOLON RPAREN PRAGMA_EOL PIPE_PIPE PIPE EXCLAM_EQ EQ_EQ COMMA CIRC AND_AND AND ]
relational_attr -> relational_attr . INF shift_attr [ SUP_EQ SUP SEMICOLON RPAREN PRAGMA_EOL PIPE_PIPE PIPE INF_EQ INF EXCLAM_EQ EQ_EQ COMMA CIRC AND_AND AND ]
relational_attr -> relational_attr . SUP shift_attr [ SUP_EQ SUP SEMICOLON RPAREN PRAGMA_EOL PIPE_PIPE PIPE INF_EQ INF EXCLAM_EQ EQ_EQ COMMA CIRC AND_AND AND ]
relational_attr -> relational_attr . INF_EQ shift_attr [ SUP_EQ SUP SEMICOLON RPAREN PRAGMA_EOL PIPE_PIPE PIPE INF_EQ INF EXCLAM_EQ EQ_EQ COMMA CIRC AND_AND AND ]
relational_attr -> relational_attr . SUP_EQ shift_attr [ SUP_EQ SUP SEMICOLON RPAREN PRAGMA_EOL PIPE_PIPE PIPE INF_EQ INF EXCLAM_EQ EQ_EQ COMMA CIRC AND_AND AND ]
## Transitions:
-- On SUP_EQ shift to state 569
-- On SUP shift to state 572
-- On INF_EQ shift to state 574
-- On INF shift to state 576
## Reductions:
-- On SEMICOLON RPAREN PRAGMA_EOL PIPE_PIPE PIPE EXCLAM_EQ EQ_EQ COMMA CIRC AND_AND AND
--   reduce production equality_attr -> equality_attr EXCLAM_EQ relational_attr

State 585:
## Known stack suffix:
## equality_attr EQ_EQ
## LR(1) items:
equality_attr -> equality_attr EQ_EQ . relational_attr [ SEMICOLON RPAREN PRAGMA_EOL PIPE_PIPE PIPE EXCLAM_EQ EQ_EQ COMMA CIRC AND_AND AND ]
## Transitions:
-- On VOLATILE shift to state 73
-- On TILDE shift to state 74
-- On STAR shift to state 75
-- On SIZEOF shift to state 76
-- On PRETTY_FUNCTION__ shift to state 35
-- On PLUS shift to state 292
-- On NAMED_TYPE shift to state 293
-- On MINUS shift to state 294
-- On LPAREN shift to state 295
-- On IDENT shift to state 296
-- On FUNCTION__ shift to state 46
-- On EXCLAM shift to state 299
-- On DEFAULT shift to state 300
-- On CST_STRING shift to state 50
-- On CST_INT shift to state 303
-- On CONST shift to state 306
-- On AND shift to state 307
-- On ALIGNOF shift to state 308
-- On unary_attr shift to state 541
-- On string_list shift to state 106
-- On string_constant shift to state 542
-- On shift_attr shift to state 551
-- On relational_attr shift to state 586
-- On primary_attr shift to state 543
-- On postfix_attr shift to state 544
-- On one_string shift to state 121
-- On multiplicative_attr shift to state 553
-- On cast_attr shift to state 560
-- On additive_attr shift to state 571
## Reductions:

State 586:
## Known stack suffix:
## equality_attr EQ_EQ relational_attr
## LR(1) items:
equality_attr -> equality_attr EQ_EQ relational_attr . [ SEMICOLON RPAREN PRAGMA_EOL PIPE_PIPE PIPE EXCLAM_EQ EQ_EQ COMMA CIRC AND_AND AND ]
relational_attr -> relational_attr . INF shift_attr [ SUP_EQ SUP SEMICOLON RPAREN PRAGMA_EOL PIPE_PIPE PIPE INF_EQ INF EXCLAM_EQ EQ_EQ COMMA CIRC AND_AND AND ]
relational_attr -> relational_attr . SUP shift_attr [ SUP_EQ SUP SEMICOLON RPAREN PRAGMA_EOL PIPE_PIPE PIPE INF_EQ INF EXCLAM_EQ EQ_EQ COMMA CIRC AND_AND AND ]
relational_attr -> relational_attr . INF_EQ shift_attr [ SUP_EQ SUP SEMICOLON RPAREN PRAGMA_EOL PIPE_PIPE PIPE INF_EQ INF EXCLAM_EQ EQ_EQ COMMA CIRC AND_AND AND ]
relational_attr -> relational_attr . SUP_EQ shift_attr [ SUP_EQ SUP SEMICOLON RPAREN PRAGMA_EOL PIPE_PIPE PIPE INF_EQ INF EXCLAM_EQ EQ_EQ COMMA CIRC AND_AND AND ]
## Transitions:
-- On SUP_EQ shift to state 569
-- On SUP shift to state 572
-- On INF_EQ shift to state 574
-- On INF shift to state 576
## Reductions:
-- On SEMICOLON RPAREN PRAGMA_EOL PIPE_PIPE PIPE EXCLAM_EQ EQ_EQ COMMA CIRC AND_AND AND
--   reduce production equality_attr -> equality_attr EQ_EQ relational_attr

State 587:
## Known stack suffix:
## bitwise_xor_attr
## LR(1) items:
bitwise_or_attr -> bitwise_xor_attr . [ SEMICOLON RPAREN PRAGMA_EOL PIPE_PIPE PIPE COMMA AND_AND ]
bitwise_xor_attr -> bitwise_xor_attr . CIRC bitwise_and_attr [ SEMICOLON RPAREN PRAGMA_EOL PIPE_PIPE PIPE COMMA CIRC AND_AND ]
## Transitions:
-- On CIRC shift to state 588
## Reductions:
-- On SEMICOLON RPAREN PRAGMA_EOL PIPE_PIPE PIPE COMMA AND_AND
--   reduce production bitwise_or_attr -> bitwise_xor_attr

State 588:
## Known stack suffix:
## bitwise_xor_attr CIRC
## LR(1) items:
bitwise_xor_attr -> bitwise_xor_attr CIRC . bitwise_and_attr [ SEMICOLON RPAREN PRAGMA_EOL PIPE_PIPE PIPE COMMA CIRC AND_AND ]
## Transitions:
-- On VOLATILE shift to state 73
-- On TILDE shift to state 74
-- On STAR shift to state 75
-- On SIZEOF shift to state 76
-- On PRETTY_FUNCTION__ shift to state 35
-- On PLUS shift to state 292
-- On NAMED_TYPE shift to state 293
-- On MINUS shift to state 294
-- On LPAREN shift to state 295
-- On IDENT shift to state 296
-- On FUNCTION__ shift to state 46
-- On EXCLAM shift to state 299
-- On DEFAULT shift to state 300
-- On CST_STRING shift to state 50
-- On CST_INT shift to state 303
-- On CONST shift to state 306
-- On AND shift to state 307
-- On ALIGNOF shift to state 308
-- On unary_attr shift to state 541
-- On string_list shift to state 106
-- On string_constant shift to state 542
-- On shift_attr shift to state 551
-- On relational_attr shift to state 568
-- On primary_attr shift to state 543
-- On postfix_attr shift to state 544
-- On one_string shift to state 121
-- On multiplicative_attr shift to state 553
-- On equality_attr shift to state 582
-- On cast_attr shift to state 560
-- On bitwise_and_attr shift to state 589
-- On additive_attr shift to state 571
## Reductions:

State 589:
## Known stack suffix:
## bitwise_xor_attr CIRC bitwise_and_attr
## LR(1) items:
bitwise_and_attr -> bitwise_and_attr . AND equality_attr [ SEMICOLON RPAREN PRAGMA_EOL PIPE_PIPE PIPE COMMA CIRC AND_AND AND ]
bitwise_xor_attr -> bitwise_xor_attr CIRC bitwise_and_attr . [ SEMICOLON RPAREN PRAGMA_EOL PIPE_PIPE PIPE COMMA CIRC AND_AND ]
## Transitions:
-- On AND shift to state 590
## Reductions:
-- On SEMICOLON RPAREN PRAGMA_EOL PIPE_PIPE PIPE COMMA CIRC AND_AND
--   reduce production bitwise_xor_attr -> bitwise_xor_attr CIRC bitwise_and_attr

State 590:
## Known stack suffix:
## bitwise_and_attr AND
## LR(1) items:
bitwise_and_attr -> bitwise_and_attr AND . equality_attr [ SEMICOLON RPAREN PRAGMA_EOL PIPE_PIPE PIPE COMMA CIRC AND_AND AND ]
## Transitions:
-- On VOLATILE shift to state 73
-- On TILDE shift to state 74
-- On STAR shift to state 75
-- On SIZEOF shift to state 76
-- On PRETTY_FUNCTION__ shift to state 35
-- On PLUS shift to state 292
-- On NAMED_TYPE shift to state 293
-- On MINUS shift to state 294
-- On LPAREN shift to state 295
-- On IDENT shift to state 296
-- On FUNCTION__ shift to state 46
-- On EXCLAM shift to state 299
-- On DEFAULT shift to state 300
-- On CST_STRING shift to state 50
-- On CST_INT shift to state 303
-- On CONST shift to state 306
-- On AND shift to state 307
-- On ALIGNOF shift to state 308
-- On unary_attr shift to state 541
-- On string_list shift to state 106
-- On string_constant shift to state 542
-- On shift_attr shift to state 551
-- On relational_attr shift to state 568
-- On primary_attr shift to state 543
-- On postfix_attr shift to state 544
-- On one_string shift to state 121
-- On multiplicative_attr shift to state 553
-- On equality_attr shift to state 591
-- On cast_attr shift to state 560
-- On additive_attr shift to state 571
## Reductions:

State 591:
## Known stack suffix:
## bitwise_and_attr AND equality_attr
## LR(1) items:
bitwise_and_attr -> bitwise_and_attr AND equality_attr . [ SEMICOLON RPAREN PRAGMA_EOL PIPE_PIPE PIPE COMMA CIRC AND_AND AND ]
equality_attr -> equality_attr . EQ_EQ relational_attr [ SEMICOLON RPAREN PRAGMA_EOL PIPE_PIPE PIPE EXCLAM_EQ EQ_EQ COMMA CIRC AND_AND AND ]
equality_attr -> equality_attr . EXCLAM_EQ relational_attr [ SEMICOLON RPAREN PRAGMA_EOL PIPE_PIPE PIPE EXCLAM_EQ EQ_EQ COMMA CIRC AND_AND AND ]
## Transitions:
-- On EXCLAM_EQ shift to state 583
-- On EQ_EQ shift to state 585
## Reductions:
-- On SEMICOLON RPAREN PRAGMA_EOL PIPE_PIPE PIPE COMMA CIRC AND_AND AND
--   reduce production bitwise_and_attr -> bitwise_and_attr AND equality_attr

State 592:
## Known stack suffix:
## logical_and_attr AND_AND bitwise_or_attr
## LR(1) items:
bitwise_or_attr -> bitwise_or_attr . PIPE bitwise_xor_attr [ SEMICOLON RPAREN PRAGMA_EOL PIPE_PIPE PIPE COMMA AND_AND ]
logical_and_attr -> logical_and_attr AND_AND bitwise_or_attr . [ SEMICOLON RPAREN PRAGMA_EOL PIPE_PIPE COMMA AND_AND ]
## Transitions:
-- On PIPE shift to state 593
## Reductions:
-- On SEMICOLON RPAREN PRAGMA_EOL PIPE_PIPE COMMA AND_AND
--   reduce production logical_and_attr -> logical_and_attr AND_AND bitwise_or_attr

State 593:
## Known stack suffix:
## bitwise_or_attr PIPE
## LR(1) items:
bitwise_or_attr -> bitwise_or_attr PIPE . bitwise_xor_attr [ SEMICOLON RPAREN PRAGMA_EOL PIPE_PIPE PIPE COMMA AND_AND ]
## Transitions:
-- On VOLATILE shift to state 73
-- On TILDE shift to state 74
-- On STAR shift to state 75
-- On SIZEOF shift to state 76
-- On PRETTY_FUNCTION__ shift to state 35
-- On PLUS shift to state 292
-- On NAMED_TYPE shift to state 293
-- On MINUS shift to state 294
-- On LPAREN shift to state 295
-- On IDENT shift to state 296
-- On FUNCTION__ shift to state 46
-- On EXCLAM shift to state 299
-- On DEFAULT shift to state 300
-- On CST_STRING shift to state 50
-- On CST_INT shift to state 303
-- On CONST shift to state 306
-- On AND shift to state 307
-- On ALIGNOF shift to state 308
-- On unary_attr shift to state 541
-- On string_list shift to state 106
-- On string_constant shift to state 542
-- On shift_attr shift to state 551
-- On relational_attr shift to state 568
-- On primary_attr shift to state 543
-- On postfix_attr shift to state 544
-- On one_string shift to state 121
-- On multiplicative_attr shift to state 553
-- On equality_attr shift to state 582
-- On cast_attr shift to state 560
-- On bitwise_xor_attr shift to state 594
-- On bitwise_and_attr shift to state 595
-- On additive_attr shift to state 571
## Reductions:

State 594:
## Known stack suffix:
## bitwise_or_attr PIPE bitwise_xor_attr
## LR(1) items:
bitwise_or_attr -> bitwise_or_attr PIPE bitwise_xor_attr . [ SEMICOLON RPAREN PRAGMA_EOL PIPE_PIPE PIPE COMMA AND_AND ]
bitwise_xor_attr -> bitwise_xor_attr . CIRC bitwise_and_attr [ SEMICOLON RPAREN PRAGMA_EOL PIPE_PIPE PIPE COMMA CIRC AND_AND ]
## Transitions:
-- On CIRC shift to state 588
## Reductions:
-- On SEMICOLON RPAREN PRAGMA_EOL PIPE_PIPE PIPE COMMA AND_AND
--   reduce production bitwise_or_attr -> bitwise_or_attr PIPE bitwise_xor_attr

State 595:
## Known stack suffix:
## bitwise_and_attr
## LR(1) items:
bitwise_and_attr -> bitwise_and_attr . AND equality_attr [ SEMICOLON RPAREN PRAGMA_EOL PIPE_PIPE PIPE COMMA CIRC AND_AND AND ]
bitwise_xor_attr -> bitwise_and_attr . [ SEMICOLON RPAREN PRAGMA_EOL PIPE_PIPE PIPE COMMA CIRC AND_AND ]
## Transitions:
-- On AND shift to state 590
## Reductions:
-- On SEMICOLON RPAREN PRAGMA_EOL PIPE_PIPE PIPE COMMA CIRC AND_AND
--   reduce production bitwise_xor_attr -> bitwise_and_attr

State 596:
## Known stack suffix:
## bitwise_or_attr
## LR(1) items:
bitwise_or_attr -> bitwise_or_attr . PIPE bitwise_xor_attr [ SEMICOLON RPAREN PRAGMA_EOL PIPE_PIPE PIPE COMMA AND_AND ]
logical_and_attr -> bitwise_or_attr . [ SEMICOLON RPAREN PRAGMA_EOL PIPE_PIPE COMMA AND_AND ]
## Transitions:
-- On PIPE shift to state 593
## Reductions:
-- On SEMICOLON RPAREN PRAGMA_EOL PIPE_PIPE COMMA AND_AND
--   reduce production logical_and_attr -> bitwise_or_attr

State 597:
## Known stack suffix:
## logical_and_attr
## LR(1) items:
logical_and_attr -> logical_and_attr . AND_AND bitwise_or_attr [ SEMICOLON RPAREN PRAGMA_EOL PIPE_PIPE COMMA AND_AND ]
logical_or_attr -> logical_and_attr . [ SEMICOLON RPAREN PRAGMA_EOL PIPE_PIPE COMMA ]
## Transitions:
-- On AND_AND shift to state 581
## Reductions:
-- On SEMICOLON RPAREN PRAGMA_EOL PIPE_PIPE COMMA
--   reduce production logical_or_attr -> logical_and_attr

State 598:
## Known stack suffix:
## LPAREN attr_list_ne
## LR(1) items:
paren_attr_list_ne -> LPAREN attr_list_ne . RPAREN [ VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD SUP_SUP SUP_EQ SUP STRUCT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER PRAGMA_EOL PLUS PIPE_PIPE PIPE PERCENT NAMED_TYPE MSATTR MINUS LPAREN LONG LBRACKET LBRACE INT64 INT INLINE INF_INF INF_EQ INF IDENT FLOAT EXTERN EXCLAM_EQ EQ_EQ EQ ENUM DOUBLE DOT DECLSPEC CONST COMMA COLON CIRC CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ASM ARROW AND_AND AND ]
## Transitions:
-- On RPAREN shift to state 599
## Reductions:

State 599:
## Known stack suffix:
## LPAREN attr_list_ne RPAREN
## LR(1) items:
paren_attr_list_ne -> LPAREN attr_list_ne RPAREN . [ VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD SUP_SUP SUP_EQ SUP STRUCT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER PRAGMA_EOL PLUS PIPE_PIPE PIPE PERCENT NAMED_TYPE MSATTR MINUS LPAREN LONG LBRACKET LBRACE INT64 INT INLINE INF_INF INF_EQ INF IDENT FLOAT EXTERN EXCLAM_EQ EQ_EQ EQ ENUM DOUBLE DOT DECLSPEC CONST COMMA COLON CIRC CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ASM ARROW AND_AND AND ]
## Transitions:
## Reductions:
-- On VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD SUP_SUP SUP_EQ SUP STRUCT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER PRAGMA_EOL PLUS PIPE_PIPE PIPE PERCENT NAMED_TYPE MSATTR MINUS LPAREN LONG LBRACKET LBRACE INT64 INT INLINE INF_INF INF_EQ INF IDENT FLOAT EXTERN EXCLAM_EQ EQ_EQ EQ ENUM DOUBLE DOT DECLSPEC CONST COMMA COLON CIRC CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ASM ARROW AND_AND AND
--   reduce production paren_attr_list_ne -> LPAREN attr_list_ne RPAREN

State 600:
## Known stack suffix:
## attr
## LR(1) items:
attr_list_ne -> attr . [ RPAREN ]
attr_list_ne -> attr . COMMA attr_list_ne [ RPAREN ]
## Transitions:
-- On COMMA shift to state 601
## Reductions:
-- On RPAREN
--   reduce production attr_list_ne -> attr

State 601:
## Known stack suffix:
## attr COMMA
## LR(1) items:
attr_list_ne -> attr COMMA . attr_list_ne [ RPAREN ]
## Transitions:
-- On error shift to state 72
-- On VOLATILE shift to state 73
-- On TILDE shift to state 74
-- On STAR shift to state 75
-- On SIZEOF shift to state 76
-- On PRETTY_FUNCTION__ shift to state 35
-- On PLUS shift to state 292
-- On NAMED_TYPE shift to state 293
-- On MINUS shift to state 294
-- On LPAREN shift to state 295
-- On IDENT shift to state 296
-- On FUNCTION__ shift to state 46
-- On EXCLAM shift to state 299
-- On DEFAULT shift to state 300
-- On CST_STRING shift to state 50
-- On CST_INT shift to state 303
-- On CONST shift to state 306
-- On AND shift to state 307
-- On ALIGNOF shift to state 308
-- On unary_attr shift to state 541
-- On string_list shift to state 106
-- On string_constant shift to state 542
-- On shift_attr shift to state 551
-- On relational_attr shift to state 568
-- On primary_attr shift to state 543
-- On postfix_attr shift to state 544
-- On one_string shift to state 121
-- On multiplicative_attr shift to state 553
-- On logical_or_attr shift to state 578
-- On logical_and_attr shift to state 597
-- On equality_attr shift to state 582
-- On cast_attr shift to state 560
-- On bitwise_xor_attr shift to state 587
-- On bitwise_or_attr shift to state 596
-- On bitwise_and_attr shift to state 595
-- On attr_list_ne shift to state 602
-- On attr shift to state 600
-- On additive_attr shift to state 571
## Reductions:

State 602:
## Known stack suffix:
## attr COMMA attr_list_ne
## LR(1) items:
attr_list_ne -> attr COMMA attr_list_ne . [ RPAREN ]
## Transitions:
## Reductions:
-- On RPAREN
--   reduce production attr_list_ne -> attr COMMA attr_list_ne

State 603:
## Known stack suffix:
## IDENT IDENT
## LR(1) items:
primary_attr -> IDENT IDENT . [ SUP_SUP SUP_EQ SUP STAR SLASH SEMICOLON RPAREN PRAGMA_EOL PLUS PIPE_PIPE PIPE PERCENT MINUS INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ DOT COMMA CIRC ARROW AND_AND AND ]
## Transitions:
## Reductions:
-- On SUP_SUP SUP_EQ SUP STAR SLASH SEMICOLON RPAREN PRAGMA_EOL PLUS PIPE_PIPE PIPE PERCENT MINUS INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ DOT COMMA CIRC ARROW AND_AND AND
--   reduce production primary_attr -> IDENT IDENT

State 604:
## Known stack suffix:
## IDENT COLON
## LR(1) items:
primary_attr -> IDENT COLON . CST_INT [ SUP_SUP SUP_EQ SUP STAR SLASH SEMICOLON RPAREN PRAGMA_EOL PLUS PIPE_PIPE PIPE PERCENT MINUS INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ DOT COMMA CIRC ARROW AND_AND AND ]
## Transitions:
-- On CST_INT shift to state 605
## Reductions:

State 605:
## Known stack suffix:
## IDENT COLON CST_INT
## LR(1) items:
primary_attr -> IDENT COLON CST_INT . [ SUP_SUP SUP_EQ SUP STAR SLASH SEMICOLON RPAREN PRAGMA_EOL PLUS PIPE_PIPE PIPE PERCENT MINUS INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ DOT COMMA CIRC ARROW AND_AND AND ]
## Transitions:
## Reductions:
-- On SUP_SUP SUP_EQ SUP STAR SLASH SEMICOLON RPAREN PRAGMA_EOL PLUS PIPE_PIPE PIPE PERCENT MINUS INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ DOT COMMA CIRC ARROW AND_AND AND
--   reduce production primary_attr -> IDENT COLON CST_INT

State 606:
## Known stack suffix:
## IDENT paren_attr_list_ne
## LR(1) items:
postfix_attr -> IDENT paren_attr_list_ne . [ SUP_SUP SUP_EQ SUP STAR SLASH SEMICOLON RPAREN PRAGMA_EOL PLUS PIPE_PIPE PIPE PERCENT MINUS INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ DOT COMMA CIRC ARROW AND_AND AND ]
## Transitions:
## Reductions:
-- On SUP_SUP SUP_EQ SUP STAR SLASH SEMICOLON RPAREN PRAGMA_EOL PLUS PIPE_PIPE PIPE PERCENT MINUS INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ DOT COMMA CIRC ARROW AND_AND AND
--   reduce production postfix_attr -> IDENT paren_attr_list_ne

State 607:
## Known stack suffix:
## LPAREN attr
## LR(1) items:
primary_attr -> LPAREN attr . RPAREN [ SUP_SUP SUP_EQ SUP STAR SLASH SEMICOLON RPAREN PRAGMA_EOL PLUS PIPE_PIPE PIPE PERCENT MINUS INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ DOT COMMA CIRC ARROW AND_AND AND ]
## Transitions:
-- On RPAREN shift to state 608
## Reductions:

State 608:
## Known stack suffix:
## LPAREN attr RPAREN
## LR(1) items:
primary_attr -> LPAREN attr RPAREN . [ SUP_SUP SUP_EQ SUP STAR SLASH SEMICOLON RPAREN PRAGMA_EOL PLUS PIPE_PIPE PIPE PERCENT MINUS INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ DOT COMMA CIRC ARROW AND_AND AND ]
## Transitions:
## Reductions:
-- On SUP_SUP SUP_EQ SUP STAR SLASH SEMICOLON RPAREN PRAGMA_EOL PLUS PIPE_PIPE PIPE PERCENT MINUS INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ DOT COMMA CIRC ARROW AND_AND AND
--   reduce production primary_attr -> LPAREN attr RPAREN

State 609:
## Known stack suffix:
## MINUS cast_attr
## LR(1) items:
unary_attr -> MINUS cast_attr . [ SUP_SUP SUP_EQ SUP STAR SLASH SEMICOLON RPAREN PRAGMA_EOL PLUS PIPE_PIPE PIPE PERCENT MINUS INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ COMMA CIRC AND_AND AND ]
## Transitions:
## Reductions:
-- On SUP_SUP SUP_EQ SUP STAR SLASH SEMICOLON RPAREN PRAGMA_EOL PLUS PIPE_PIPE PIPE PERCENT MINUS INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ COMMA CIRC AND_AND AND
--   reduce production unary_attr -> MINUS cast_attr

State 610:
## Known stack suffix:
## PLUS cast_attr
## LR(1) items:
unary_attr -> PLUS cast_attr . [ SUP_SUP SUP_EQ SUP STAR SLASH SEMICOLON RPAREN PRAGMA_EOL PLUS PIPE_PIPE PIPE PERCENT MINUS INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ COMMA CIRC AND_AND AND ]
## Transitions:
## Reductions:
-- On SUP_SUP SUP_EQ SUP STAR SLASH SEMICOLON RPAREN PRAGMA_EOL PLUS PIPE_PIPE PIPE PERCENT MINUS INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ COMMA CIRC AND_AND AND
--   reduce production unary_attr -> PLUS cast_attr

State 611:
## Known stack suffix:
## LPAREN attr_list_ne
## LR(1) items:
paren_attr_list_ne -> LPAREN attr_list_ne . RPAREN [ error WHILE VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF TRY TILDE THREAD SWITCH STRUCT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACKET RBRACE PRETTY_FUNCTION__ PLUS_PLUS PLUS NAMED_TYPE MSATTR MSASM MINUS_MINUS MINUS LPAREN LONG LBRACE INT64 INT INLINE IF IDENT GOTO FUNCTION__ FOR FLOAT EXTERN EXCLAM EQ ENUM DOUBLE DO DEFAULT DECLSPEC CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONTINUE CONST COMMA CHAR CASE BUILTIN_VA_ARG BREAK AUTO AT_SPECIFIER AT_NAME AT_EXPR ATTRIBUTE ASM AND_AND AND ALIGNOF ]
## Transitions:
-- On RPAREN shift to state 612
## Reductions:

State 612:
## Known stack suffix:
## LPAREN attr_list_ne RPAREN
## LR(1) items:
paren_attr_list_ne -> LPAREN attr_list_ne RPAREN . [ error WHILE VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF TRY TILDE THREAD SWITCH STRUCT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACKET RBRACE PRETTY_FUNCTION__ PLUS_PLUS PLUS NAMED_TYPE MSATTR MSASM MINUS_MINUS MINUS LPAREN LONG LBRACE INT64 INT INLINE IF IDENT GOTO FUNCTION__ FOR FLOAT EXTERN EXCLAM EQ ENUM DOUBLE DO DEFAULT DECLSPEC CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONTINUE CONST COMMA CHAR CASE BUILTIN_VA_ARG BREAK AUTO AT_SPECIFIER AT_NAME AT_EXPR ATTRIBUTE ASM AND_AND AND ALIGNOF ]
## Transitions:
## Reductions:
-- On error WHILE VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF TRY TILDE THREAD SWITCH STRUCT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACKET RBRACE PRETTY_FUNCTION__ PLUS_PLUS PLUS NAMED_TYPE MSATTR MSASM MINUS_MINUS MINUS LPAREN LONG LBRACE INT64 INT INLINE IF IDENT GOTO FUNCTION__ FOR FLOAT EXTERN EXCLAM EQ ENUM DOUBLE DO DEFAULT DECLSPEC CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONTINUE CONST COMMA CHAR CASE BUILTIN_VA_ARG BREAK AUTO AT_SPECIFIER AT_NAME AT_EXPR ATTRIBUTE ASM AND_AND AND ALIGNOF
--   reduce production paren_attr_list_ne -> LPAREN attr_list_ne RPAREN

State 613:
## Known stack suffix:
## DECLSPEC paren_attr_list_ne
## LR(1) items:
attribute_nocv -> DECLSPEC paren_attr_list_ne . [ error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF TILDE THREAD STRUCT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RESTRICT REGISTER RBRACKET PRETTY_FUNCTION__ PLUS_PLUS PLUS NAMED_TYPE MSATTR MINUS_MINUS MINUS LPAREN LONG LBRACE INT64 INT INLINE IDENT FUNCTION__ FLOAT EXTERN EXCLAM EQ ENUM DOUBLE DECLSPEC CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONST COMMA CHAR BUILTIN_VA_ARG AUTO AT_SPECIFIER AT_NAME AT_EXPR ATTRIBUTE ASM AND_AND AND ALIGNOF ]
## Transitions:
## Reductions:
-- On error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF TILDE THREAD STRUCT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RESTRICT REGISTER RBRACKET PRETTY_FUNCTION__ PLUS_PLUS PLUS NAMED_TYPE MSATTR MINUS_MINUS MINUS LPAREN LONG LBRACE INT64 INT INLINE IDENT FUNCTION__ FLOAT EXTERN EXCLAM EQ ENUM DOUBLE DECLSPEC CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONST COMMA CHAR BUILTIN_VA_ARG AUTO AT_SPECIFIER AT_NAME AT_EXPR ATTRIBUTE ASM AND_AND AND ALIGNOF
--   reduce production attribute_nocv -> DECLSPEC paren_attr_list_ne

State 614:
## Known stack suffix:
## CONST
## LR(1) items:
attribute -> CONST . [ error VOLATILE TILDE THREAD STAR SIZEOF SEMICOLON RESTRICT RBRACKET PRETTY_FUNCTION__ PLUS_PLUS PLUS MSATTR MINUS_MINUS MINUS LPAREN LBRACE IDENT FUNCTION__ EXCLAM EQ DECLSPEC CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONST COMMA BUILTIN_VA_ARG AT_EXPR ATTRIBUTE ASM AND_AND AND ALIGNOF ]
## Transitions:
## Reductions:
-- On error VOLATILE TILDE THREAD STAR SIZEOF SEMICOLON RESTRICT RBRACKET PRETTY_FUNCTION__ PLUS_PLUS PLUS MSATTR MINUS_MINUS MINUS LPAREN LBRACE IDENT FUNCTION__ EXCLAM EQ DECLSPEC CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONST COMMA BUILTIN_VA_ARG AT_EXPR ATTRIBUTE ASM AND_AND AND ALIGNOF
--   reduce production attribute -> CONST

State 615:
## Known stack suffix:
## ATTRIBUTE
## LR(1) items:
attribute_nocv -> ATTRIBUTE . LPAREN paren_attr_list_ne RPAREN [ error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF TILDE THREAD STRUCT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RESTRICT REGISTER RBRACKET PRETTY_FUNCTION__ PLUS_PLUS PLUS NAMED_TYPE MSATTR MINUS_MINUS MINUS LPAREN LONG LBRACE INT64 INT INLINE IDENT FUNCTION__ FLOAT EXTERN EXCLAM EQ ENUM DOUBLE DECLSPEC CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONST COMMA CHAR BUILTIN_VA_ARG AUTO AT_SPECIFIER AT_NAME AT_EXPR ATTRIBUTE ASM AND_AND AND ALIGNOF ]
## Transitions:
-- On LPAREN shift to state 616
## Reductions:

State 616:
## Known stack suffix:
## ATTRIBUTE LPAREN
## LR(1) items:
attribute_nocv -> ATTRIBUTE LPAREN . paren_attr_list_ne RPAREN [ error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF TILDE THREAD STRUCT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RESTRICT REGISTER RBRACKET PRETTY_FUNCTION__ PLUS_PLUS PLUS NAMED_TYPE MSATTR MINUS_MINUS MINUS LPAREN LONG LBRACE INT64 INT INLINE IDENT FUNCTION__ FLOAT EXTERN EXCLAM EQ ENUM DOUBLE DECLSPEC CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONST COMMA CHAR BUILTIN_VA_ARG AUTO AT_SPECIFIER AT_NAME AT_EXPR ATTRIBUTE ASM AND_AND AND ALIGNOF ]
## Transitions:
-- On LPAREN shift to state 68
-- On paren_attr_list_ne shift to state 617
## Reductions:

State 617:
## Known stack suffix:
## ATTRIBUTE LPAREN paren_attr_list_ne
## LR(1) items:
attribute_nocv -> ATTRIBUTE LPAREN paren_attr_list_ne . RPAREN [ error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF TILDE THREAD STRUCT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RESTRICT REGISTER RBRACKET PRETTY_FUNCTION__ PLUS_PLUS PLUS NAMED_TYPE MSATTR MINUS_MINUS MINUS LPAREN LONG LBRACE INT64 INT INLINE IDENT FUNCTION__ FLOAT EXTERN EXCLAM EQ ENUM DOUBLE DECLSPEC CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONST COMMA CHAR BUILTIN_VA_ARG AUTO AT_SPECIFIER AT_NAME AT_EXPR ATTRIBUTE ASM AND_AND AND ALIGNOF ]
## Transitions:
-- On RPAREN shift to state 618
## Reductions:

State 618:
## Known stack suffix:
## ATTRIBUTE LPAREN paren_attr_list_ne RPAREN
## LR(1) items:
attribute_nocv -> ATTRIBUTE LPAREN paren_attr_list_ne RPAREN . [ error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF TILDE THREAD STRUCT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RESTRICT REGISTER RBRACKET PRETTY_FUNCTION__ PLUS_PLUS PLUS NAMED_TYPE MSATTR MINUS_MINUS MINUS LPAREN LONG LBRACE INT64 INT INLINE IDENT FUNCTION__ FLOAT EXTERN EXCLAM EQ ENUM DOUBLE DECLSPEC CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONST COMMA CHAR BUILTIN_VA_ARG AUTO AT_SPECIFIER AT_NAME AT_EXPR ATTRIBUTE ASM AND_AND AND ALIGNOF ]
## Transitions:
## Reductions:
-- On error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF TILDE THREAD STRUCT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RESTRICT REGISTER RBRACKET PRETTY_FUNCTION__ PLUS_PLUS PLUS NAMED_TYPE MSATTR MINUS_MINUS MINUS LPAREN LONG LBRACE INT64 INT INLINE IDENT FUNCTION__ FLOAT EXTERN EXCLAM EQ ENUM DOUBLE DECLSPEC CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONST COMMA CHAR BUILTIN_VA_ARG AUTO AT_SPECIFIER AT_NAME AT_EXPR ATTRIBUTE ASM AND_AND AND ALIGNOF
--   reduce production attribute_nocv -> ATTRIBUTE LPAREN paren_attr_list_ne RPAREN

State 619:
## Known stack suffix:
## direct_decl LBRACKET attributes
## LR(1) items:
direct_decl -> direct_decl LBRACKET attributes . comma_expression_opt RBRACKET [ VOLATILE THREAD SEMICOLON RPAREN RESTRICT MSATTR LPAREN LBRACKET EQ DECLSPEC CONST COMMA COLON ATTRIBUTE ASM ]
direct_decl -> direct_decl LBRACKET attributes . error RBRACKET [ VOLATILE THREAD SEMICOLON RPAREN RESTRICT MSATTR LPAREN LBRACKET EQ DECLSPEC CONST COMMA COLON ATTRIBUTE ASM ]
## Transitions:
-- On error shift to state 620
-- On TILDE shift to state 32
-- On STAR shift to state 33
-- On SIZEOF shift to state 34
-- On PRETTY_FUNCTION__ shift to state 35
-- On PLUS_PLUS shift to state 36
-- On PLUS shift to state 37
-- On MINUS_MINUS shift to state 38
-- On MINUS shift to state 39
-- On LPAREN shift to state 40
-- On IDENT shift to state 45
-- On FUNCTION__ shift to state 46
-- On EXCLAM shift to state 47
-- On CST_WSTRING shift to state 48
-- On CST_WCHAR shift to state 49
-- On CST_STRING shift to state 50
-- On CST_INT shift to state 51
-- On CST_FLOAT shift to state 52
-- On CST_CHAR shift to state 53
-- On BUILTIN_VA_ARG shift to state 54
-- On AT_EXPR shift to state 56
-- On AND_AND shift to state 60
-- On AND shift to state 62
-- On ALIGNOF shift to state 63
-- On wstring_list shift to state 98
-- On unary_expression shift to state 101
-- On string_list shift to state 106
-- On string_constant shift to state 108
-- On shift_expression shift to state 109
-- On relational_expression shift to state 116
-- On primary_expression shift to state 111
-- On postfix_expression shift to state 112
-- On paren_comma_expression shift to state 120
-- On one_string shift to state 121
-- On multiplicative_expression shift to state 122
-- On logical_or_expression shift to state 143
-- On logical_and_expression shift to state 147
-- On expression shift to state 165
-- On equality_expression shift to state 149
-- On constant shift to state 124
-- On conditional_expression shift to state 167
-- On comma_expression_opt shift to state 622
-- On comma_expression shift to state 268
-- On cast_expression shift to state 169
-- On bitwise_xor_expression shift to state 154
-- On bitwise_or_expression shift to state 164
-- On bitwise_and_expression shift to state 162
-- On assignment_expression shift to state 192
-- On additive_expression shift to state 136
## Reductions:
-- On RBRACKET
--   reduce production comma_expression_opt ->

State 620:
## Known stack suffix:
## direct_decl LBRACKET attributes error
## LR(1) items:
comma_expression -> error . COMMA comma_expression [ RBRACKET ]
direct_decl -> direct_decl LBRACKET attributes error . RBRACKET [ VOLATILE THREAD SEMICOLON RPAREN RESTRICT MSATTR LPAREN LBRACKET EQ DECLSPEC CONST COMMA COLON ATTRIBUTE ASM ]
## Transitions:
-- On RBRACKET shift to state 621
-- On COMMA shift to state 43
## Reductions:

State 621:
## Known stack suffix:
## direct_decl LBRACKET attributes error RBRACKET
## LR(1) items:
direct_decl -> direct_decl LBRACKET attributes error RBRACKET . [ VOLATILE THREAD SEMICOLON RPAREN RESTRICT MSATTR LPAREN LBRACKET EQ DECLSPEC CONST COMMA COLON ATTRIBUTE ASM ]
## Transitions:
## Reductions:
-- On VOLATILE THREAD SEMICOLON RPAREN RESTRICT MSATTR LPAREN LBRACKET EQ DECLSPEC CONST COMMA COLON ATTRIBUTE ASM
--   reduce production direct_decl -> direct_decl LBRACKET attributes error RBRACKET

State 622:
## Known stack suffix:
## direct_decl LBRACKET attributes comma_expression_opt
## LR(1) items:
direct_decl -> direct_decl LBRACKET attributes comma_expression_opt . RBRACKET [ VOLATILE THREAD SEMICOLON RPAREN RESTRICT MSATTR LPAREN LBRACKET EQ DECLSPEC CONST COMMA COLON ATTRIBUTE ASM ]
## Transitions:
-- On RBRACKET shift to state 623
## Reductions:

State 623:
## Known stack suffix:
## direct_decl LBRACKET attributes comma_expression_opt RBRACKET
## LR(1) items:
direct_decl -> direct_decl LBRACKET attributes comma_expression_opt RBRACKET . [ VOLATILE THREAD SEMICOLON RPAREN RESTRICT MSATTR LPAREN LBRACKET EQ DECLSPEC CONST COMMA COLON ATTRIBUTE ASM ]
## Transitions:
## Reductions:
-- On VOLATILE THREAD SEMICOLON RPAREN RESTRICT MSATTR LPAREN LBRACKET EQ DECLSPEC CONST COMMA COLON ATTRIBUTE ASM
--   reduce production direct_decl -> direct_decl LBRACKET attributes comma_expression_opt RBRACKET

State 624:
## Known stack suffix:
## attribute_nocv
## LR(1) items:
attribute -> attribute_nocv . [ error VOLATILE TILDE THREAD STAR SIZEOF SEMICOLON RESTRICT RBRACKET PRETTY_FUNCTION__ PLUS_PLUS PLUS MSATTR MINUS_MINUS MINUS LPAREN LBRACE IDENT FUNCTION__ EXCLAM EQ DECLSPEC CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONST COMMA BUILTIN_VA_ARG AT_EXPR ATTRIBUTE ASM AND_AND AND ALIGNOF ]
## Transitions:
## Reductions:
-- On error VOLATILE TILDE THREAD STAR SIZEOF SEMICOLON RESTRICT RBRACKET PRETTY_FUNCTION__ PLUS_PLUS PLUS MSATTR MINUS_MINUS MINUS LPAREN LBRACE IDENT FUNCTION__ EXCLAM EQ DECLSPEC CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONST COMMA BUILTIN_VA_ARG AT_EXPR ATTRIBUTE ASM AND_AND AND ALIGNOF
--   reduce production attribute -> attribute_nocv

State 625:
## Known stack suffix:
## attribute
## LR(1) items:
attributes -> attribute . attributes [ error TILDE STAR SIZEOF SEMICOLON RBRACKET PRETTY_FUNCTION__ PLUS_PLUS PLUS MINUS_MINUS MINUS LPAREN LBRACE IDENT FUNCTION__ EXCLAM EQ CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR COMMA BUILTIN_VA_ARG AT_EXPR AND_AND AND ALIGNOF ]
## Transitions:
-- On VOLATILE shift to state 284
-- On THREAD shift to state 285
-- On RESTRICT shift to state 286
-- On MSATTR shift to state 287
-- On DECLSPEC shift to state 288
-- On CONST shift to state 614
-- On ATTRIBUTE shift to state 615
-- On attributes shift to state 626
-- On attribute_nocv shift to state 624
-- On attribute shift to state 625
## Reductions:
-- On error TILDE STAR SIZEOF SEMICOLON RBRACKET PRETTY_FUNCTION__ PLUS_PLUS PLUS MINUS_MINUS MINUS LPAREN LBRACE IDENT FUNCTION__ EXCLAM EQ CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR COMMA BUILTIN_VA_ARG AT_EXPR AND_AND AND ALIGNOF
--   reduce production attributes ->

State 626:
## Known stack suffix:
## attribute attributes
## LR(1) items:
attributes -> attribute attributes . [ error TILDE STAR SIZEOF SEMICOLON RBRACKET PRETTY_FUNCTION__ PLUS_PLUS PLUS MINUS_MINUS MINUS LPAREN LBRACE IDENT FUNCTION__ EXCLAM EQ CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR COMMA BUILTIN_VA_ARG AT_EXPR AND_AND AND ALIGNOF ]
## Transitions:
## Reductions:
-- On error TILDE STAR SIZEOF SEMICOLON RBRACKET PRETTY_FUNCTION__ PLUS_PLUS PLUS MINUS_MINUS MINUS LPAREN LBRACE IDENT FUNCTION__ EXCLAM EQ CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR COMMA BUILTIN_VA_ARG AT_EXPR AND_AND AND ALIGNOF
--   reduce production attributes -> attribute attributes

State 627:
## Known stack suffix:
## ASM
## LR(1) items:
attributes_with_asm -> ASM . LPAREN string_constant RPAREN attributes [ SEMICOLON RPAREN EQ COMMA COLON ]
## Transitions:
-- On LPAREN shift to state 628
## Reductions:

State 628:
## Known stack suffix:
## ASM LPAREN
## LR(1) items:
attributes_with_asm -> ASM LPAREN . string_constant RPAREN attributes [ SEMICOLON RPAREN EQ COMMA COLON ]
## Transitions:
-- On PRETTY_FUNCTION__ shift to state 35
-- On FUNCTION__ shift to state 46
-- On CST_STRING shift to state 50
-- On string_list shift to state 106
-- On string_constant shift to state 629
-- On one_string shift to state 121
## Reductions:

State 629:
## Known stack suffix:
## ASM LPAREN string_constant
## LR(1) items:
attributes_with_asm -> ASM LPAREN string_constant . RPAREN attributes [ SEMICOLON RPAREN EQ COMMA COLON ]
## Transitions:
-- On RPAREN shift to state 630
## Reductions:

State 630:
## Known stack suffix:
## ASM LPAREN string_constant RPAREN
## LR(1) items:
attributes_with_asm -> ASM LPAREN string_constant RPAREN . attributes [ SEMICOLON RPAREN EQ COMMA COLON ]
## Transitions:
-- On VOLATILE shift to state 247
-- On THREAD shift to state 12
-- On RESTRICT shift to state 248
-- On MSATTR shift to state 21
-- On DECLSPEC shift to state 67
-- On CONST shift to state 249
-- On ATTRIBUTE shift to state 85
-- On attributes shift to state 631
-- On attribute_nocv shift to state 253
-- On attribute shift to state 254
## Reductions:
-- On SEMICOLON RPAREN EQ COMMA COLON
--   reduce production attributes ->

State 631:
## Known stack suffix:
## ASM LPAREN string_constant RPAREN attributes
## LR(1) items:
attributes_with_asm -> ASM LPAREN string_constant RPAREN attributes . [ SEMICOLON RPAREN EQ COMMA COLON ]
## Transitions:
## Reductions:
-- On SEMICOLON RPAREN EQ COMMA COLON
--   reduce production attributes_with_asm -> ASM LPAREN string_constant RPAREN attributes

State 632:
## Known stack suffix:
## direct_decl parameter_list_startscope
## LR(1) items:
direct_decl -> direct_decl parameter_list_startscope . rest_par_list RPAREN [ VOLATILE THREAD SEMICOLON RPAREN RESTRICT MSATTR LPAREN LBRACKET EQ DECLSPEC CONST COMMA COLON ATTRIBUTE ASM ]
## Transitions:
-- On VOLATILE shift to state 1
-- On VOID shift to state 2
-- On UNSIGNED shift to state 3
-- On UNION shift to state 4
-- On TYPEOF shift to state 9
-- On TYPEDEF shift to state 11
-- On THREAD shift to state 12
-- On STRUCT shift to state 13
-- On STATIC shift to state 15
-- On SIGNED shift to state 16
-- On SHORT shift to state 17
-- On RESTRICT shift to state 18
-- On REGISTER shift to state 19
-- On NAMED_TYPE shift to state 20
-- On MSATTR shift to state 21
-- On LPAREN shift to state 272
-- On LONG shift to state 22
-- On INT64 shift to state 23
-- On INT shift to state 24
-- On INLINE shift to state 25
-- On FLOAT shift to state 26
-- On EXTERN shift to state 27
-- On ENUM shift to state 28
-- On DOUBLE shift to state 66
-- On DECLSPEC shift to state 67
-- On CONST shift to state 78
-- On CHAR shift to state 79
-- On AUTO shift to state 80
-- On AT_SPECIFIER shift to state 81
-- On ATTRIBUTE shift to state 85
-- On type_spec shift to state 89
-- On rest_par_list shift to state 633
-- On parameter_decl shift to state 635
-- On decl_spec_list shift to state 275
-- On cvspec shift to state 92
-- On attribute_nocv shift to state 95
## Reductions:
-- On RPAREN
--   reduce production rest_par_list ->

State 633:
## Known stack suffix:
## direct_decl parameter_list_startscope rest_par_list
## LR(1) items:
direct_decl -> direct_decl parameter_list_startscope rest_par_list . RPAREN [ VOLATILE THREAD SEMICOLON RPAREN RESTRICT MSATTR LPAREN LBRACKET EQ DECLSPEC CONST COMMA COLON ATTRIBUTE ASM ]
## Transitions:
-- On RPAREN shift to state 634
## Reductions:

State 634:
## Known stack suffix:
## direct_decl parameter_list_startscope rest_par_list RPAREN
## LR(1) items:
direct_decl -> direct_decl parameter_list_startscope rest_par_list RPAREN . [ VOLATILE THREAD SEMICOLON RPAREN RESTRICT MSATTR LPAREN LBRACKET EQ DECLSPEC CONST COMMA COLON ATTRIBUTE ASM ]
## Transitions:
## Reductions:
-- On VOLATILE THREAD SEMICOLON RPAREN RESTRICT MSATTR LPAREN LBRACKET EQ DECLSPEC CONST COMMA COLON ATTRIBUTE ASM
--   reduce production direct_decl -> direct_decl parameter_list_startscope rest_par_list RPAREN

State 635:
## Known stack suffix:
## parameter_decl
## LR(1) items:
rest_par_list -> parameter_decl . rest_par_list1 [ RPAREN ]
## Transitions:
-- On COMMA shift to state 636
-- On rest_par_list1 shift to state 640
## Reductions:
-- On RPAREN
--   reduce production rest_par_list1 ->

State 636:
## Known stack suffix:
## COMMA
## LR(1) items:
rest_par_list1 -> COMMA . ELLIPSIS [ RPAREN ]
rest_par_list1 -> COMMA . parameter_decl rest_par_list1 [ RPAREN ]
## Transitions:
-- On VOLATILE shift to state 1
-- On VOID shift to state 2
-- On UNSIGNED shift to state 3
-- On UNION shift to state 4
-- On TYPEOF shift to state 9
-- On TYPEDEF shift to state 11
-- On THREAD shift to state 12
-- On STRUCT shift to state 13
-- On STATIC shift to state 15
-- On SIGNED shift to state 16
-- On SHORT shift to state 17
-- On RESTRICT shift to state 18
-- On REGISTER shift to state 19
-- On NAMED_TYPE shift to state 20
-- On MSATTR shift to state 21
-- On LPAREN shift to state 272
-- On LONG shift to state 22
-- On INT64 shift to state 23
-- On INT shift to state 24
-- On INLINE shift to state 25
-- On FLOAT shift to state 26
-- On EXTERN shift to state 27
-- On ENUM shift to state 28
-- On ELLIPSIS shift to state 637
-- On DOUBLE shift to state 66
-- On DECLSPEC shift to state 67
-- On CONST shift to state 78
-- On CHAR shift to state 79
-- On AUTO shift to state 80
-- On AT_SPECIFIER shift to state 81
-- On ATTRIBUTE shift to state 85
-- On type_spec shift to state 89
-- On parameter_decl shift to state 638
-- On decl_spec_list shift to state 275
-- On cvspec shift to state 92
-- On attribute_nocv shift to state 95
## Reductions:

State 637:
## Known stack suffix:
## COMMA ELLIPSIS
## LR(1) items:
rest_par_list1 -> COMMA ELLIPSIS . [ RPAREN ]
## Transitions:
## Reductions:
-- On RPAREN
--   reduce production rest_par_list1 -> COMMA ELLIPSIS

State 638:
## Known stack suffix:
## COMMA parameter_decl
## LR(1) items:
rest_par_list1 -> COMMA parameter_decl . rest_par_list1 [ RPAREN ]
## Transitions:
-- On COMMA shift to state 636
-- On rest_par_list1 shift to state 639
## Reductions:
-- On RPAREN
--   reduce production rest_par_list1 ->

State 639:
## Known stack suffix:
## COMMA parameter_decl rest_par_list1
## LR(1) items:
rest_par_list1 -> COMMA parameter_decl rest_par_list1 . [ RPAREN ]
## Transitions:
## Reductions:
-- On RPAREN
--   reduce production rest_par_list1 -> COMMA parameter_decl rest_par_list1

State 640:
## Known stack suffix:
## parameter_decl rest_par_list1
## LR(1) items:
rest_par_list -> parameter_decl rest_par_list1 . [ RPAREN ]
## Transitions:
## Reductions:
-- On RPAREN
--   reduce production rest_par_list -> parameter_decl rest_par_list1

State 641:
## Known stack suffix:
## pointer_opt direct_decl attributes_with_asm
## LR(1) items:
declarator -> pointer_opt direct_decl attributes_with_asm . [ SEMICOLON RPAREN EQ COMMA COLON ]
## Transitions:
## Reductions:
-- On SEMICOLON RPAREN EQ COMMA COLON
--   reduce production declarator -> pointer_opt direct_decl attributes_with_asm

State 642:
## Known stack suffix:
## attribute
## LR(1) items:
attributes_with_asm -> attribute . attributes_with_asm [ SEMICOLON RPAREN EQ COMMA COLON ]
## Transitions:
-- On VOLATILE shift to state 247
-- On THREAD shift to state 12
-- On RESTRICT shift to state 248
-- On MSATTR shift to state 21
-- On DECLSPEC shift to state 67
-- On CONST shift to state 249
-- On ATTRIBUTE shift to state 85
-- On ASM shift to state 627
-- On attributes_with_asm shift to state 643
-- On attribute_nocv shift to state 253
-- On attribute shift to state 642
## Reductions:
-- On SEMICOLON RPAREN EQ COMMA COLON
--   reduce production attributes_with_asm ->

State 643:
## Known stack suffix:
## attribute attributes_with_asm
## LR(1) items:
attributes_with_asm -> attribute attributes_with_asm . [ SEMICOLON RPAREN EQ COMMA COLON ]
## Transitions:
## Reductions:
-- On SEMICOLON RPAREN EQ COMMA COLON
--   reduce production attributes_with_asm -> attribute attributes_with_asm

State 644:
## Known stack suffix:
## decl_spec_list declarator
## LR(1) items:
parameter_decl -> decl_spec_list declarator . [ RPAREN COMMA ]
## Transitions:
## Reductions:
-- On RPAREN COMMA
--   reduce production parameter_decl -> decl_spec_list declarator

State 645:
## Known stack suffix:
## decl_spec_list abstract_decl
## LR(1) items:
parameter_decl -> decl_spec_list abstract_decl . [ RPAREN COMMA ]
## Transitions:
## Reductions:
-- On RPAREN COMMA
--   reduce production parameter_decl -> decl_spec_list abstract_decl

State 646:
## Known stack suffix:
## abs_direct_decl parameter_list_startscope rest_par_list
## LR(1) items:
abs_direct_decl -> abs_direct_decl parameter_list_startscope rest_par_list . RPAREN [ VOLATILE THREAD RPAREN RESTRICT MSATTR LPAREN LBRACKET DECLSPEC CONST COMMA ATTRIBUTE ]
## Transitions:
-- On RPAREN shift to state 647
## Reductions:

State 647:
## Known stack suffix:
## abs_direct_decl parameter_list_startscope rest_par_list RPAREN
## LR(1) items:
abs_direct_decl -> abs_direct_decl parameter_list_startscope rest_par_list RPAREN . [ VOLATILE THREAD RPAREN RESTRICT MSATTR LPAREN LBRACKET DECLSPEC CONST COMMA ATTRIBUTE ]
## Transitions:
## Reductions:
-- On VOLATILE THREAD RPAREN RESTRICT MSATTR LPAREN LBRACKET DECLSPEC CONST COMMA ATTRIBUTE
--   reduce production abs_direct_decl -> abs_direct_decl parameter_list_startscope rest_par_list RPAREN

State 648:
## Known stack suffix:
## pointer_opt abs_direct_decl attributes
## LR(1) items:
abstract_decl -> pointer_opt abs_direct_decl attributes . [ RPAREN COMMA ]
## Transitions:
## Reductions:
-- On RPAREN COMMA
--   reduce production abstract_decl -> pointer_opt abs_direct_decl attributes

State 649:
## Known stack suffix:
## decl_spec_list abstract_decl
## LR(1) items:
type_name -> decl_spec_list abstract_decl . [ RPAREN ]
## Transitions:
## Reductions:
-- On RPAREN
--   reduce production type_name -> decl_spec_list abstract_decl

State 650:
## Known stack suffix:
## SIZEOF unary_expression
## LR(1) items:
unary_attr -> SIZEOF unary_expression . [ SUP_SUP SUP_EQ SUP STAR SLASH SEMICOLON RPAREN PRAGMA_EOL PLUS PIPE_PIPE PIPE PERCENT MINUS INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ COMMA CIRC AND_AND AND ]
## Transitions:
## Reductions:
-- On SUP_SUP SUP_EQ SUP STAR SLASH SEMICOLON RPAREN PRAGMA_EOL PLUS PIPE_PIPE PIPE PERCENT MINUS INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ COMMA CIRC AND_AND AND
--   reduce production unary_attr -> SIZEOF unary_expression

State 651:
## Known stack suffix:
## STAR cast_attr
## LR(1) items:
unary_attr -> STAR cast_attr . [ SUP_SUP SUP_EQ SUP STAR SLASH SEMICOLON RPAREN PRAGMA_EOL PLUS PIPE_PIPE PIPE PERCENT MINUS INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ COMMA CIRC AND_AND AND ]
## Transitions:
## Reductions:
-- On SUP_SUP SUP_EQ SUP STAR SLASH SEMICOLON RPAREN PRAGMA_EOL PLUS PIPE_PIPE PIPE PERCENT MINUS INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ COMMA CIRC AND_AND AND
--   reduce production unary_attr -> STAR cast_attr

State 652:
## Known stack suffix:
## TILDE cast_attr
## LR(1) items:
unary_attr -> TILDE cast_attr . [ SUP_SUP SUP_EQ SUP STAR SLASH SEMICOLON RPAREN PRAGMA_EOL PLUS PIPE_PIPE PIPE PERCENT MINUS INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ COMMA CIRC AND_AND AND ]
## Transitions:
## Reductions:
-- On SUP_SUP SUP_EQ SUP STAR SLASH SEMICOLON RPAREN PRAGMA_EOL PLUS PIPE_PIPE PIPE PERCENT MINUS INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ COMMA CIRC AND_AND AND
--   reduce production unary_attr -> TILDE cast_attr

State 653:
## Known stack suffix:
## error COMMA attr_list_ne
## LR(1) items:
attr_list_ne -> error COMMA attr_list_ne . [ RPAREN ]
## Transitions:
## Reductions:
-- On RPAREN
--   reduce production attr_list_ne -> error COMMA attr_list_ne

State 654:
## Known stack suffix:
## DECLSPEC paren_attr_list_ne
## LR(1) items:
attribute_nocv -> DECLSPEC paren_attr_list_ne . [ VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG LBRACKET INT64 INT INLINE IDENT FLOAT EXTERN EQ ENUM DOUBLE DECLSPEC CONST COMMA COLON CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ASM ]
## Transitions:
## Reductions:
-- On VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG LBRACKET INT64 INT INLINE IDENT FLOAT EXTERN EQ ENUM DOUBLE DECLSPEC CONST COMMA COLON CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ASM
--   reduce production attribute_nocv -> DECLSPEC paren_attr_list_ne

State 655:
## Known stack suffix:
## ALIGNOF LPAREN type_name
## LR(1) items:
postfix_expression -> LPAREN type_name . RPAREN LBRACE initialiser_list_opt RBRACE [ SUP_SUP_EQ SUP_SUP SUP_EQ SUP STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACKET RBRACE QUEST PRAGMA_EOL PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_EQ MINUS LPAREN LBRACKET INF_INF_EQ INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ EQ ELLIPSIS DOT COMMA COLON CIRC_EQ CIRC ARROW AND_EQ AND_AND AND ]
unary_expression -> ALIGNOF LPAREN type_name . RPAREN [ SUP_SUP_EQ SUP_SUP SUP_EQ SUP STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACKET RBRACE QUEST PRAGMA_EOL PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_EQ MINUS INF_INF_EQ INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ EQ ELLIPSIS COMMA COLON CIRC_EQ CIRC AND_EQ AND_AND AND ]
## Transitions:
-- On RPAREN shift to state 656
## Reductions:

State 656:
## Known stack suffix:
## ALIGNOF LPAREN type_name RPAREN
## LR(1) items:
postfix_expression -> LPAREN type_name RPAREN . LBRACE initialiser_list_opt RBRACE [ SUP_SUP_EQ SUP_SUP SUP_EQ SUP STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACKET RBRACE QUEST PRAGMA_EOL PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_EQ MINUS LPAREN LBRACKET INF_INF_EQ INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ EQ ELLIPSIS DOT COMMA COLON CIRC_EQ CIRC ARROW AND_EQ AND_AND AND ]
unary_expression -> ALIGNOF LPAREN type_name RPAREN . [ SUP_SUP_EQ SUP_SUP SUP_EQ SUP STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACKET RBRACE QUEST PRAGMA_EOL PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_EQ MINUS INF_INF_EQ INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ EQ ELLIPSIS COMMA COLON CIRC_EQ CIRC AND_EQ AND_AND AND ]
## Transitions:
-- On LBRACE shift to state 104
## Reductions:
-- On SUP_SUP_EQ SUP_SUP SUP_EQ SUP STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACKET RBRACE QUEST PRAGMA_EOL PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_EQ MINUS INF_INF_EQ INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ EQ ELLIPSIS COMMA COLON CIRC_EQ CIRC AND_EQ AND_AND AND
--   reduce production unary_expression -> ALIGNOF LPAREN type_name RPAREN

State 657:
## Known stack suffix:
## ALIGNOF unary_expression
## LR(1) items:
unary_expression -> ALIGNOF unary_expression . [ SUP_SUP_EQ SUP_SUP SUP_EQ SUP STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACKET RBRACE QUEST PRAGMA_EOL PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_EQ MINUS INF_INF_EQ INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ EQ ELLIPSIS COMMA COLON CIRC_EQ CIRC AND_EQ AND_AND AND ]
## Transitions:
## Reductions:
-- On SUP_SUP_EQ SUP_SUP SUP_EQ SUP STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACKET RBRACE QUEST PRAGMA_EOL PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_EQ MINUS INF_INF_EQ INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ EQ ELLIPSIS COMMA COLON CIRC_EQ CIRC AND_EQ AND_AND AND
--   reduce production unary_expression -> ALIGNOF unary_expression

State 658:
## Known stack suffix:
## AND cast_expression
## LR(1) items:
unary_expression -> AND cast_expression . [ SUP_SUP_EQ SUP_SUP SUP_EQ SUP STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACKET RBRACE QUEST PRAGMA_EOL PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_EQ MINUS INF_INF_EQ INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ EQ ELLIPSIS COMMA COLON CIRC_EQ CIRC AND_EQ AND_AND AND ]
## Transitions:
## Reductions:
-- On SUP_SUP_EQ SUP_SUP SUP_EQ SUP STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACKET RBRACE QUEST PRAGMA_EOL PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_EQ MINUS INF_INF_EQ INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ EQ ELLIPSIS COMMA COLON CIRC_EQ CIRC AND_EQ AND_AND AND
--   reduce production unary_expression -> AND cast_expression

State 659:
## Known stack suffix:
## BUILTIN_VA_ARG LPAREN expression
## LR(1) items:
postfix_expression -> BUILTIN_VA_ARG LPAREN expression . COMMA type_name RPAREN [ SUP_SUP_EQ SUP_SUP SUP_EQ SUP STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACKET RBRACE QUEST PRAGMA_EOL PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_EQ MINUS LPAREN LBRACKET INF_INF_EQ INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ EQ ELLIPSIS DOT COMMA COLON CIRC_EQ CIRC ARROW AND_EQ AND_AND AND ]
## Transitions:
-- On COMMA shift to state 660
## Reductions:

State 660:
## Known stack suffix:
## BUILTIN_VA_ARG LPAREN expression COMMA
## LR(1) items:
postfix_expression -> BUILTIN_VA_ARG LPAREN expression COMMA . type_name RPAREN [ SUP_SUP_EQ SUP_SUP SUP_EQ SUP STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACKET RBRACE QUEST PRAGMA_EOL PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_EQ MINUS LPAREN LBRACKET INF_INF_EQ INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ EQ ELLIPSIS DOT COMMA COLON CIRC_EQ CIRC ARROW AND_EQ AND_AND AND ]
## Transitions:
-- On VOLATILE shift to state 1
-- On VOID shift to state 2
-- On UNSIGNED shift to state 3
-- On UNION shift to state 4
-- On TYPEOF shift to state 9
-- On TYPEDEF shift to state 11
-- On THREAD shift to state 12
-- On STRUCT shift to state 13
-- On STATIC shift to state 15
-- On SIGNED shift to state 16
-- On SHORT shift to state 17
-- On RESTRICT shift to state 18
-- On REGISTER shift to state 19
-- On NAMED_TYPE shift to state 20
-- On MSATTR shift to state 21
-- On LONG shift to state 22
-- On INT64 shift to state 23
-- On INT shift to state 24
-- On INLINE shift to state 25
-- On FLOAT shift to state 26
-- On EXTERN shift to state 27
-- On ENUM shift to state 28
-- On DOUBLE shift to state 66
-- On DECLSPEC shift to state 67
-- On CONST shift to state 78
-- On CHAR shift to state 79
-- On AUTO shift to state 80
-- On AT_SPECIFIER shift to state 81
-- On ATTRIBUTE shift to state 85
-- On type_spec shift to state 89
-- On type_name shift to state 661
-- On decl_spec_list shift to state 245
-- On cvspec shift to state 92
-- On attribute_nocv shift to state 95
## Reductions:

State 661:
## Known stack suffix:
## BUILTIN_VA_ARG LPAREN expression COMMA type_name
## LR(1) items:
postfix_expression -> BUILTIN_VA_ARG LPAREN expression COMMA type_name . RPAREN [ SUP_SUP_EQ SUP_SUP SUP_EQ SUP STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACKET RBRACE QUEST PRAGMA_EOL PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_EQ MINUS LPAREN LBRACKET INF_INF_EQ INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ EQ ELLIPSIS DOT COMMA COLON CIRC_EQ CIRC ARROW AND_EQ AND_AND AND ]
## Transitions:
-- On RPAREN shift to state 662
## Reductions:

State 662:
## Known stack suffix:
## BUILTIN_VA_ARG LPAREN expression COMMA type_name RPAREN
## LR(1) items:
postfix_expression -> BUILTIN_VA_ARG LPAREN expression COMMA type_name RPAREN . [ SUP_SUP_EQ SUP_SUP SUP_EQ SUP STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACKET RBRACE QUEST PRAGMA_EOL PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_EQ MINUS LPAREN LBRACKET INF_INF_EQ INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ EQ ELLIPSIS DOT COMMA COLON CIRC_EQ CIRC ARROW AND_EQ AND_AND AND ]
## Transitions:
## Reductions:
-- On SUP_SUP_EQ SUP_SUP SUP_EQ SUP STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACKET RBRACE QUEST PRAGMA_EOL PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_EQ MINUS LPAREN LBRACKET INF_INF_EQ INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ EQ ELLIPSIS DOT COMMA COLON CIRC_EQ CIRC ARROW AND_EQ AND_AND AND
--   reduce production postfix_expression -> BUILTIN_VA_ARG LPAREN expression COMMA type_name RPAREN

State 663:
## Known stack suffix:
## EXCLAM cast_expression
## LR(1) items:
unary_expression -> EXCLAM cast_expression . [ SUP_SUP_EQ SUP_SUP SUP_EQ SUP STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACKET RBRACE QUEST PRAGMA_EOL PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_EQ MINUS INF_INF_EQ INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ EQ ELLIPSIS COMMA COLON CIRC_EQ CIRC AND_EQ AND_AND AND ]
## Transitions:
## Reductions:
-- On SUP_SUP_EQ SUP_SUP SUP_EQ SUP STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACKET RBRACE QUEST PRAGMA_EOL PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_EQ MINUS INF_INF_EQ INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ EQ ELLIPSIS COMMA COLON CIRC_EQ CIRC AND_EQ AND_AND AND
--   reduce production unary_expression -> EXCLAM cast_expression

State 664:
## Known stack suffix:
## error COMMA comma_expression
## LR(1) items:
comma_expression -> error COMMA comma_expression . [ SEMICOLON RPAREN RBRACKET COLON ]
## Transitions:
## Reductions:
-- On SEMICOLON RPAREN RBRACKET COLON
--   reduce production comma_expression -> error COMMA comma_expression

State 665:
## Known stack suffix:
## LPAREN type_name
## LR(1) items:
cast_expression -> LPAREN type_name . RPAREN cast_expression [ SUP_SUP_EQ SUP_SUP SUP_EQ SUP STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACKET RBRACE QUEST PRAGMA_EOL PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_EQ MINUS INF_INF_EQ INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ EQ ELLIPSIS COMMA COLON CIRC_EQ CIRC AND_EQ AND_AND AND ]
postfix_expression -> LPAREN type_name . RPAREN LBRACE initialiser_list_opt RBRACE [ SUP_SUP_EQ SUP_SUP SUP_EQ SUP STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACKET RBRACE QUEST PRAGMA_EOL PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_EQ MINUS LPAREN LBRACKET INF_INF_EQ INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ EQ ELLIPSIS DOT COMMA COLON CIRC_EQ CIRC ARROW AND_EQ AND_AND AND ]
## Transitions:
-- On RPAREN shift to state 666
## Reductions:

State 666:
## Known stack suffix:
## LPAREN type_name RPAREN
## LR(1) items:
cast_expression -> LPAREN type_name RPAREN . cast_expression [ SUP_SUP_EQ SUP_SUP SUP_EQ SUP STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACKET RBRACE QUEST PRAGMA_EOL PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_EQ MINUS INF_INF_EQ INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ EQ ELLIPSIS COMMA COLON CIRC_EQ CIRC AND_EQ AND_AND AND ]
postfix_expression -> LPAREN type_name RPAREN . LBRACE initialiser_list_opt RBRACE [ SUP_SUP_EQ SUP_SUP SUP_EQ SUP STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACKET RBRACE QUEST PRAGMA_EOL PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_EQ MINUS LPAREN LBRACKET INF_INF_EQ INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ EQ ELLIPSIS DOT COMMA COLON CIRC_EQ CIRC ARROW AND_EQ AND_AND AND ]
## Transitions:
-- On TILDE shift to state 32
-- On STAR shift to state 33
-- On SIZEOF shift to state 34
-- On PRETTY_FUNCTION__ shift to state 35
-- On PLUS_PLUS shift to state 36
-- On PLUS shift to state 37
-- On MINUS_MINUS shift to state 38
-- On MINUS shift to state 39
-- On LPAREN shift to state 40
-- On LBRACE shift to state 104
-- On IDENT shift to state 45
-- On FUNCTION__ shift to state 46
-- On EXCLAM shift to state 47
-- On CST_WSTRING shift to state 48
-- On CST_WCHAR shift to state 49
-- On CST_STRING shift to state 50
-- On CST_INT shift to state 51
-- On CST_FLOAT shift to state 52
-- On CST_CHAR shift to state 53
-- On BUILTIN_VA_ARG shift to state 54
-- On AT_EXPR shift to state 56
-- On AND_AND shift to state 60
-- On AND shift to state 62
-- On ALIGNOF shift to state 63
-- On wstring_list shift to state 98
-- On unary_expression shift to state 101
-- On string_list shift to state 106
-- On string_constant shift to state 108
-- On primary_expression shift to state 111
-- On postfix_expression shift to state 112
-- On paren_comma_expression shift to state 120
-- On one_string shift to state 121
-- On constant shift to state 124
-- On cast_expression shift to state 667
## Reductions:

State 667:
## Known stack suffix:
## LPAREN type_name RPAREN cast_expression
## LR(1) items:
cast_expression -> LPAREN type_name RPAREN cast_expression . [ SUP_SUP_EQ SUP_SUP SUP_EQ SUP STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACKET RBRACE QUEST PRAGMA_EOL PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_EQ MINUS INF_INF_EQ INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ EQ ELLIPSIS COMMA COLON CIRC_EQ CIRC AND_EQ AND_AND AND ]
## Transitions:
## Reductions:
-- On SUP_SUP_EQ SUP_SUP SUP_EQ SUP STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACKET RBRACE QUEST PRAGMA_EOL PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_EQ MINUS INF_INF_EQ INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ EQ ELLIPSIS COMMA COLON CIRC_EQ CIRC AND_EQ AND_AND AND
--   reduce production cast_expression -> LPAREN type_name RPAREN cast_expression

State 668:
## Known stack suffix:
## MINUS cast_expression
## LR(1) items:
unary_expression -> MINUS cast_expression . [ SUP_SUP_EQ SUP_SUP SUP_EQ SUP STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACKET RBRACE QUEST PRAGMA_EOL PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_EQ MINUS INF_INF_EQ INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ EQ ELLIPSIS COMMA COLON CIRC_EQ CIRC AND_EQ AND_AND AND ]
## Transitions:
## Reductions:
-- On SUP_SUP_EQ SUP_SUP SUP_EQ SUP STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACKET RBRACE QUEST PRAGMA_EOL PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_EQ MINUS INF_INF_EQ INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ EQ ELLIPSIS COMMA COLON CIRC_EQ CIRC AND_EQ AND_AND AND
--   reduce production unary_expression -> MINUS cast_expression

State 669:
## Known stack suffix:
## LPAREN
## LR(1) items:
paren_comma_expression -> LPAREN . comma_expression RPAREN [ SUP_SUP_EQ SUP_SUP SUP_EQ SUP STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACKET RBRACE QUEST PRAGMA_EOL PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_EQ MINUS LPAREN LBRACKET INF_INF_EQ INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ EQ ELLIPSIS DOT COMMA COLON CIRC_EQ CIRC ARROW AND_EQ AND_AND AND ]
paren_comma_expression -> LPAREN . error RPAREN [ SUP_SUP_EQ SUP_SUP SUP_EQ SUP STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACKET RBRACE QUEST PRAGMA_EOL PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_EQ MINUS LPAREN LBRACKET INF_INF_EQ INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ EQ ELLIPSIS DOT COMMA COLON CIRC_EQ CIRC ARROW AND_EQ AND_AND AND ]
postfix_expression -> LPAREN . type_name RPAREN LBRACE initialiser_list_opt RBRACE [ SUP_SUP_EQ SUP_SUP SUP_EQ SUP STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACKET RBRACE QUEST PRAGMA_EOL PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_EQ MINUS LPAREN LBRACKET INF_INF_EQ INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ EQ ELLIPSIS DOT COMMA COLON CIRC_EQ CIRC ARROW AND_EQ AND_AND AND ]
primary_expression -> LPAREN . block RPAREN [ SUP_SUP_EQ SUP_SUP SUP_EQ SUP STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACKET RBRACE QUEST PRAGMA_EOL PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_EQ MINUS LPAREN LBRACKET INF_INF_EQ INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ EQ ELLIPSIS DOT COMMA COLON CIRC_EQ CIRC ARROW AND_EQ AND_AND AND ]
## Transitions:
-- On error shift to state 41
-- On VOLATILE shift to state 1
-- On VOID shift to state 2
-- On UNSIGNED shift to state 3
-- On UNION shift to state 4
-- On TYPEOF shift to state 9
-- On TYPEDEF shift to state 11
-- On TILDE shift to state 32
-- On THREAD shift to state 12
-- On STRUCT shift to state 13
-- On STATIC shift to state 15
-- On STAR shift to state 33
-- On SIZEOF shift to state 34
-- On SIGNED shift to state 16
-- On SHORT shift to state 17
-- On RESTRICT shift to state 18
-- On REGISTER shift to state 19
-- On PRETTY_FUNCTION__ shift to state 35
-- On PLUS_PLUS shift to state 36
-- On PLUS shift to state 37
-- On NAMED_TYPE shift to state 20
-- On MSATTR shift to state 21
-- On MINUS_MINUS shift to state 38
-- On MINUS shift to state 39
-- On LPAREN shift to state 40
-- On LONG shift to state 22
-- On LBRACE shift to state 65
-- On INT64 shift to state 23
-- On INT shift to state 24
-- On INLINE shift to state 25
-- On IDENT shift to state 45
-- On FUNCTION__ shift to state 46
-- On FLOAT shift to state 26
-- On EXTERN shift to state 27
-- On EXCLAM shift to state 47
-- On ENUM shift to state 28
-- On DOUBLE shift to state 66
-- On DECLSPEC shift to state 67
-- On CST_WSTRING shift to state 48
-- On CST_WCHAR shift to state 49
-- On CST_STRING shift to state 50
-- On CST_INT shift to state 51
-- On CST_FLOAT shift to state 52
-- On CST_CHAR shift to state 53
-- On CONST shift to state 78
-- On CHAR shift to state 79
-- On BUILTIN_VA_ARG shift to state 54
-- On AUTO shift to state 80
-- On AT_SPECIFIER shift to state 81
-- On AT_EXPR shift to state 56
-- On ATTRIBUTE shift to state 85
-- On AND_AND shift to state 60
-- On AND shift to state 62
-- On ALIGNOF shift to state 63
-- On wstring_list shift to state 98
-- On unary_expression shift to state 101
-- On type_spec shift to state 89
-- On type_name shift to state 670
-- On string_list shift to state 106
-- On string_constant shift to state 108
-- On shift_expression shift to state 109
-- On relational_expression shift to state 116
-- On primary_expression shift to state 111
-- On postfix_expression shift to state 112
-- On paren_comma_expression shift to state 120
-- On one_string shift to state 121
-- On multiplicative_expression shift to state 122
-- On logical_or_expression shift to state 143
-- On logical_and_expression shift to state 147
-- On expression shift to state 165
-- On equality_expression shift to state 149
-- On decl_spec_list shift to state 245
-- On cvspec shift to state 92
-- On constant shift to state 124
-- On conditional_expression shift to state 167
-- On comma_expression shift to state 312
-- On cast_expression shift to state 169
-- On block_begin shift to state 314
-- On block shift to state 538
-- On bitwise_xor_expression shift to state 154
-- On bitwise_or_expression shift to state 164
-- On bitwise_and_expression shift to state 162
-- On attribute_nocv shift to state 95
-- On assignment_expression shift to state 192
-- On additive_expression shift to state 136
## Reductions:

State 670:
## Known stack suffix:
## LPAREN type_name
## LR(1) items:
postfix_expression -> LPAREN type_name . RPAREN LBRACE initialiser_list_opt RBRACE [ SUP_SUP_EQ SUP_SUP SUP_EQ SUP STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACKET RBRACE QUEST PRAGMA_EOL PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_EQ MINUS LPAREN LBRACKET INF_INF_EQ INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ EQ ELLIPSIS DOT COMMA COLON CIRC_EQ CIRC ARROW AND_EQ AND_AND AND ]
## Transitions:
-- On RPAREN shift to state 671
## Reductions:

State 671:
## Known stack suffix:
## LPAREN type_name RPAREN
## LR(1) items:
postfix_expression -> LPAREN type_name RPAREN . LBRACE initialiser_list_opt RBRACE [ SUP_SUP_EQ SUP_SUP SUP_EQ SUP STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACKET RBRACE QUEST PRAGMA_EOL PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_EQ MINUS LPAREN LBRACKET INF_INF_EQ INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ EQ ELLIPSIS DOT COMMA COLON CIRC_EQ CIRC ARROW AND_EQ AND_AND AND ]
## Transitions:
-- On LBRACE shift to state 104
## Reductions:

State 672:
## Known stack suffix:
## MINUS_MINUS unary_expression
## LR(1) items:
unary_expression -> MINUS_MINUS unary_expression . [ SUP_SUP_EQ SUP_SUP SUP_EQ SUP STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACKET RBRACE QUEST PRAGMA_EOL PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_EQ MINUS INF_INF_EQ INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ EQ ELLIPSIS COMMA COLON CIRC_EQ CIRC AND_EQ AND_AND AND ]
## Transitions:
## Reductions:
-- On SUP_SUP_EQ SUP_SUP SUP_EQ SUP STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACKET RBRACE QUEST PRAGMA_EOL PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_EQ MINUS INF_INF_EQ INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ EQ ELLIPSIS COMMA COLON CIRC_EQ CIRC AND_EQ AND_AND AND
--   reduce production unary_expression -> MINUS_MINUS unary_expression

State 673:
## Known stack suffix:
## PLUS cast_expression
## LR(1) items:
unary_expression -> PLUS cast_expression . [ SUP_SUP_EQ SUP_SUP SUP_EQ SUP STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACKET RBRACE QUEST PRAGMA_EOL PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_EQ MINUS INF_INF_EQ INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ EQ ELLIPSIS COMMA COLON CIRC_EQ CIRC AND_EQ AND_AND AND ]
## Transitions:
## Reductions:
-- On SUP_SUP_EQ SUP_SUP SUP_EQ SUP STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACKET RBRACE QUEST PRAGMA_EOL PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_EQ MINUS INF_INF_EQ INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ EQ ELLIPSIS COMMA COLON CIRC_EQ CIRC AND_EQ AND_AND AND
--   reduce production unary_expression -> PLUS cast_expression

State 674:
## Known stack suffix:
## PLUS_PLUS unary_expression
## LR(1) items:
unary_expression -> PLUS_PLUS unary_expression . [ SUP_SUP_EQ SUP_SUP SUP_EQ SUP STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACKET RBRACE QUEST PRAGMA_EOL PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_EQ MINUS INF_INF_EQ INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ EQ ELLIPSIS COMMA COLON CIRC_EQ CIRC AND_EQ AND_AND AND ]
## Transitions:
## Reductions:
-- On SUP_SUP_EQ SUP_SUP SUP_EQ SUP STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACKET RBRACE QUEST PRAGMA_EOL PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_EQ MINUS INF_INF_EQ INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ EQ ELLIPSIS COMMA COLON CIRC_EQ CIRC AND_EQ AND_AND AND
--   reduce production unary_expression -> PLUS_PLUS unary_expression

State 675:
## Known stack suffix:
## SIZEOF LPAREN
## LR(1) items:
paren_comma_expression -> LPAREN . comma_expression RPAREN [ SUP_SUP_EQ SUP_SUP SUP_EQ SUP STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACKET RBRACE QUEST PRAGMA_EOL PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_EQ MINUS LPAREN LBRACKET INF_INF_EQ INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ EQ ELLIPSIS DOT COMMA COLON CIRC_EQ CIRC ARROW AND_EQ AND_AND AND ]
paren_comma_expression -> LPAREN . error RPAREN [ SUP_SUP_EQ SUP_SUP SUP_EQ SUP STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACKET RBRACE QUEST PRAGMA_EOL PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_EQ MINUS LPAREN LBRACKET INF_INF_EQ INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ EQ ELLIPSIS DOT COMMA COLON CIRC_EQ CIRC ARROW AND_EQ AND_AND AND ]
postfix_expression -> LPAREN . type_name RPAREN LBRACE initialiser_list_opt RBRACE [ SUP_SUP_EQ SUP_SUP SUP_EQ SUP STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACKET RBRACE QUEST PRAGMA_EOL PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_EQ MINUS LPAREN LBRACKET INF_INF_EQ INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ EQ ELLIPSIS DOT COMMA COLON CIRC_EQ CIRC ARROW AND_EQ AND_AND AND ]
primary_expression -> LPAREN . block RPAREN [ SUP_SUP_EQ SUP_SUP SUP_EQ SUP STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACKET RBRACE QUEST PRAGMA_EOL PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_EQ MINUS LPAREN LBRACKET INF_INF_EQ INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ EQ ELLIPSIS DOT COMMA COLON CIRC_EQ CIRC ARROW AND_EQ AND_AND AND ]
unary_expression -> SIZEOF LPAREN . type_name RPAREN [ SUP_SUP_EQ SUP_SUP SUP_EQ SUP STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACKET RBRACE QUEST PRAGMA_EOL PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_EQ MINUS INF_INF_EQ INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ EQ ELLIPSIS COMMA COLON CIRC_EQ CIRC AND_EQ AND_AND AND ]
## Transitions:
-- On error shift to state 41
-- On VOLATILE shift to state 1
-- On VOID shift to state 2
-- On UNSIGNED shift to state 3
-- On UNION shift to state 4
-- On TYPEOF shift to state 9
-- On TYPEDEF shift to state 11
-- On TILDE shift to state 32
-- On THREAD shift to state 12
-- On STRUCT shift to state 13
-- On STATIC shift to state 15
-- On STAR shift to state 33
-- On SIZEOF shift to state 34
-- On SIGNED shift to state 16
-- On SHORT shift to state 17
-- On RESTRICT shift to state 18
-- On REGISTER shift to state 19
-- On PRETTY_FUNCTION__ shift to state 35
-- On PLUS_PLUS shift to state 36
-- On PLUS shift to state 37
-- On NAMED_TYPE shift to state 20
-- On MSATTR shift to state 21
-- On MINUS_MINUS shift to state 38
-- On MINUS shift to state 39
-- On LPAREN shift to state 40
-- On LONG shift to state 22
-- On LBRACE shift to state 65
-- On INT64 shift to state 23
-- On INT shift to state 24
-- On INLINE shift to state 25
-- On IDENT shift to state 45
-- On FUNCTION__ shift to state 46
-- On FLOAT shift to state 26
-- On EXTERN shift to state 27
-- On EXCLAM shift to state 47
-- On ENUM shift to state 28
-- On DOUBLE shift to state 66
-- On DECLSPEC shift to state 67
-- On CST_WSTRING shift to state 48
-- On CST_WCHAR shift to state 49
-- On CST_STRING shift to state 50
-- On CST_INT shift to state 51
-- On CST_FLOAT shift to state 52
-- On CST_CHAR shift to state 53
-- On CONST shift to state 78
-- On CHAR shift to state 79
-- On BUILTIN_VA_ARG shift to state 54
-- On AUTO shift to state 80
-- On AT_SPECIFIER shift to state 81
-- On AT_EXPR shift to state 56
-- On ATTRIBUTE shift to state 85
-- On AND_AND shift to state 60
-- On AND shift to state 62
-- On ALIGNOF shift to state 63
-- On wstring_list shift to state 98
-- On unary_expression shift to state 101
-- On type_spec shift to state 89
-- On type_name shift to state 676
-- On string_list shift to state 106
-- On string_constant shift to state 108
-- On shift_expression shift to state 109
-- On relational_expression shift to state 116
-- On primary_expression shift to state 111
-- On postfix_expression shift to state 112
-- On paren_comma_expression shift to state 120
-- On one_string shift to state 121
-- On multiplicative_expression shift to state 122
-- On logical_or_expression shift to state 143
-- On logical_and_expression shift to state 147
-- On expression shift to state 165
-- On equality_expression shift to state 149
-- On decl_spec_list shift to state 245
-- On cvspec shift to state 92
-- On constant shift to state 124
-- On conditional_expression shift to state 167
-- On comma_expression shift to state 312
-- On cast_expression shift to state 169
-- On block_begin shift to state 314
-- On block shift to state 538
-- On bitwise_xor_expression shift to state 154
-- On bitwise_or_expression shift to state 164
-- On bitwise_and_expression shift to state 162
-- On attribute_nocv shift to state 95
-- On assignment_expression shift to state 192
-- On additive_expression shift to state 136
## Reductions:

State 676:
## Known stack suffix:
## SIZEOF LPAREN type_name
## LR(1) items:
postfix_expression -> LPAREN type_name . RPAREN LBRACE initialiser_list_opt RBRACE [ SUP_SUP_EQ SUP_SUP SUP_EQ SUP STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACKET RBRACE QUEST PRAGMA_EOL PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_EQ MINUS LPAREN LBRACKET INF_INF_EQ INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ EQ ELLIPSIS DOT COMMA COLON CIRC_EQ CIRC ARROW AND_EQ AND_AND AND ]
unary_expression -> SIZEOF LPAREN type_name . RPAREN [ SUP_SUP_EQ SUP_SUP SUP_EQ SUP STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACKET RBRACE QUEST PRAGMA_EOL PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_EQ MINUS INF_INF_EQ INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ EQ ELLIPSIS COMMA COLON CIRC_EQ CIRC AND_EQ AND_AND AND ]
## Transitions:
-- On RPAREN shift to state 677
## Reductions:

State 677:
## Known stack suffix:
## SIZEOF LPAREN type_name RPAREN
## LR(1) items:
postfix_expression -> LPAREN type_name RPAREN . LBRACE initialiser_list_opt RBRACE [ SUP_SUP_EQ SUP_SUP SUP_EQ SUP STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACKET RBRACE QUEST PRAGMA_EOL PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_EQ MINUS LPAREN LBRACKET INF_INF_EQ INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ EQ ELLIPSIS DOT COMMA COLON CIRC_EQ CIRC ARROW AND_EQ AND_AND AND ]
unary_expression -> SIZEOF LPAREN type_name RPAREN . [ SUP_SUP_EQ SUP_SUP SUP_EQ SUP STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACKET RBRACE QUEST PRAGMA_EOL PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_EQ MINUS INF_INF_EQ INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ EQ ELLIPSIS COMMA COLON CIRC_EQ CIRC AND_EQ AND_AND AND ]
## Transitions:
-- On LBRACE shift to state 104
## Reductions:
-- On SUP_SUP_EQ SUP_SUP SUP_EQ SUP STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACKET RBRACE QUEST PRAGMA_EOL PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_EQ MINUS INF_INF_EQ INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ EQ ELLIPSIS COMMA COLON CIRC_EQ CIRC AND_EQ AND_AND AND
--   reduce production unary_expression -> SIZEOF LPAREN type_name RPAREN

State 678:
## Known stack suffix:
## SIZEOF unary_expression
## LR(1) items:
unary_expression -> SIZEOF unary_expression . [ SUP_SUP_EQ SUP_SUP SUP_EQ SUP STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACKET RBRACE QUEST PRAGMA_EOL PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_EQ MINUS INF_INF_EQ INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ EQ ELLIPSIS COMMA COLON CIRC_EQ CIRC AND_EQ AND_AND AND ]
## Transitions:
## Reductions:
-- On SUP_SUP_EQ SUP_SUP SUP_EQ SUP STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACKET RBRACE QUEST PRAGMA_EOL PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_EQ MINUS INF_INF_EQ INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ EQ ELLIPSIS COMMA COLON CIRC_EQ CIRC AND_EQ AND_AND AND
--   reduce production unary_expression -> SIZEOF unary_expression

State 679:
## Known stack suffix:
## STAR cast_expression
## LR(1) items:
unary_expression -> STAR cast_expression . [ SUP_SUP_EQ SUP_SUP SUP_EQ SUP STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACKET RBRACE QUEST PRAGMA_EOL PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_EQ MINUS INF_INF_EQ INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ EQ ELLIPSIS COMMA COLON CIRC_EQ CIRC AND_EQ AND_AND AND ]
## Transitions:
## Reductions:
-- On SUP_SUP_EQ SUP_SUP SUP_EQ SUP STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACKET RBRACE QUEST PRAGMA_EOL PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_EQ MINUS INF_INF_EQ INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ EQ ELLIPSIS COMMA COLON CIRC_EQ CIRC AND_EQ AND_AND AND
--   reduce production unary_expression -> STAR cast_expression

State 680:
## Known stack suffix:
## TILDE cast_expression
## LR(1) items:
unary_expression -> TILDE cast_expression . [ SUP_SUP_EQ SUP_SUP SUP_EQ SUP STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACKET RBRACE QUEST PRAGMA_EOL PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_EQ MINUS INF_INF_EQ INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ EQ ELLIPSIS COMMA COLON CIRC_EQ CIRC AND_EQ AND_AND AND ]
## Transitions:
## Reductions:
-- On SUP_SUP_EQ SUP_SUP SUP_EQ SUP STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACKET RBRACE QUEST PRAGMA_EOL PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_EQ MINUS INF_INF_EQ INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ EQ ELLIPSIS COMMA COLON CIRC_EQ CIRC AND_EQ AND_AND AND
--   reduce production unary_expression -> TILDE cast_expression

State 681:
## Known stack suffix:
## IDENT EQ expression
## LR(1) items:
enumerator -> IDENT EQ expression . [ RBRACE COMMA ]
## Transitions:
## Reductions:
-- On RBRACE COMMA
--   reduce production enumerator -> IDENT EQ expression

State 682:
## Known stack suffix:
## enumerator
## LR(1) items:
enum_list -> enumerator . [ RBRACE COMMA ]
## Transitions:
## Reductions:
-- On RBRACE COMMA
--   reduce production enum_list -> enumerator

State 683:
## Known stack suffix:
## ENUM LBRACE enum_list
## LR(1) items:
enum_list -> enum_list . COMMA enumerator [ RBRACE COMMA ]
enum_list -> enum_list . COMMA error [ RBRACE COMMA ]
type_spec -> ENUM LBRACE enum_list . maybecomma RBRACE [ VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG LBRACKET INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST COMMA COLON CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ]
## Transitions:
-- On COMMA shift to state 684
-- On maybecomma shift to state 687
## Reductions:
-- On RBRACE
--   reduce production maybecomma ->

State 684:
## Known stack suffix:
## enum_list COMMA
## LR(1) items:
enum_list -> enum_list COMMA . enumerator [ RBRACE COMMA ]
enum_list -> enum_list COMMA . error [ RBRACE COMMA ]
maybecomma -> COMMA . [ RBRACE ]
## Transitions:
-- On error shift to state 685
-- On IDENT shift to state 30
-- On enumerator shift to state 686
## Reductions:
-- On RBRACE
--   reduce production maybecomma -> COMMA

State 685:
## Known stack suffix:
## enum_list COMMA error
## LR(1) items:
enum_list -> enum_list COMMA error . [ RBRACE COMMA ]
## Transitions:
## Reductions:
-- On RBRACE COMMA
--   reduce production enum_list -> enum_list COMMA error

State 686:
## Known stack suffix:
## enum_list COMMA enumerator
## LR(1) items:
enum_list -> enum_list COMMA enumerator . [ RBRACE COMMA ]
## Transitions:
## Reductions:
-- On RBRACE COMMA
--   reduce production enum_list -> enum_list COMMA enumerator

State 687:
## Known stack suffix:
## ENUM LBRACE enum_list maybecomma
## LR(1) items:
type_spec -> ENUM LBRACE enum_list maybecomma . RBRACE [ VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG LBRACKET INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST COMMA COLON CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ]
## Transitions:
-- On RBRACE shift to state 688
## Reductions:

State 688:
## Known stack suffix:
## ENUM LBRACE enum_list maybecomma RBRACE
## LR(1) items:
type_spec -> ENUM LBRACE enum_list maybecomma RBRACE . [ VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG LBRACKET INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST COMMA COLON CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ]
## Transitions:
## Reductions:
-- On VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG LBRACKET INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST COMMA COLON CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE
--   reduce production type_spec -> ENUM LBRACE enum_list maybecomma RBRACE

State 689:
## Known stack suffix:
## DECLSPEC
## LR(1) items:
just_attribute -> DECLSPEC . paren_attr_list_ne [ NAMED_TYPE LBRACE IDENT DECLSPEC AT_NAME ATTRIBUTE ]
## Transitions:
-- On LPAREN shift to state 68
-- On paren_attr_list_ne shift to state 690
## Reductions:

State 690:
## Known stack suffix:
## DECLSPEC paren_attr_list_ne
## LR(1) items:
just_attribute -> DECLSPEC paren_attr_list_ne . [ NAMED_TYPE LBRACE IDENT DECLSPEC AT_NAME ATTRIBUTE ]
## Transitions:
## Reductions:
-- On NAMED_TYPE LBRACE IDENT DECLSPEC AT_NAME ATTRIBUTE
--   reduce production just_attribute -> DECLSPEC paren_attr_list_ne

State 691:
## Known stack suffix:
## ATTRIBUTE
## LR(1) items:
just_attribute -> ATTRIBUTE . LPAREN paren_attr_list_ne RPAREN [ NAMED_TYPE LBRACE IDENT DECLSPEC AT_NAME ATTRIBUTE ]
## Transitions:
-- On LPAREN shift to state 692
## Reductions:

State 692:
## Known stack suffix:
## ATTRIBUTE LPAREN
## LR(1) items:
just_attribute -> ATTRIBUTE LPAREN . paren_attr_list_ne RPAREN [ NAMED_TYPE LBRACE IDENT DECLSPEC AT_NAME ATTRIBUTE ]
## Transitions:
-- On LPAREN shift to state 68
-- On paren_attr_list_ne shift to state 693
## Reductions:

State 693:
## Known stack suffix:
## ATTRIBUTE LPAREN paren_attr_list_ne
## LR(1) items:
just_attribute -> ATTRIBUTE LPAREN paren_attr_list_ne . RPAREN [ NAMED_TYPE LBRACE IDENT DECLSPEC AT_NAME ATTRIBUTE ]
## Transitions:
-- On RPAREN shift to state 694
## Reductions:

State 694:
## Known stack suffix:
## ATTRIBUTE LPAREN paren_attr_list_ne RPAREN
## LR(1) items:
just_attribute -> ATTRIBUTE LPAREN paren_attr_list_ne RPAREN . [ NAMED_TYPE LBRACE IDENT DECLSPEC AT_NAME ATTRIBUTE ]
## Transitions:
## Reductions:
-- On NAMED_TYPE LBRACE IDENT DECLSPEC AT_NAME ATTRIBUTE
--   reduce production just_attribute -> ATTRIBUTE LPAREN paren_attr_list_ne RPAREN

State 695:
## Known stack suffix:
## ENUM just_attributes
## LR(1) items:
type_spec -> ENUM just_attributes . id_or_typename LBRACE enum_list maybecomma RBRACE [ VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG LBRACKET INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST COMMA COLON CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ]
type_spec -> ENUM just_attributes . LBRACE enum_list maybecomma RBRACE [ VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG LBRACKET INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST COMMA COLON CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ]
## Transitions:
-- On NAMED_TYPE shift to state 5
-- On LBRACE shift to state 696
-- On IDENT shift to state 205
-- On AT_NAME shift to state 206
-- On id_or_typename shift to state 700
## Reductions:

State 696:
## Known stack suffix:
## ENUM just_attributes LBRACE
## LR(1) items:
type_spec -> ENUM just_attributes LBRACE . enum_list maybecomma RBRACE [ VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG LBRACKET INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST COMMA COLON CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ]
## Transitions:
-- On IDENT shift to state 30
-- On enumerator shift to state 682
-- On enum_list shift to state 697
## Reductions:

State 697:
## Known stack suffix:
## ENUM just_attributes LBRACE enum_list
## LR(1) items:
enum_list -> enum_list . COMMA enumerator [ RBRACE COMMA ]
enum_list -> enum_list . COMMA error [ RBRACE COMMA ]
type_spec -> ENUM just_attributes LBRACE enum_list . maybecomma RBRACE [ VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG LBRACKET INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST COMMA COLON CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ]
## Transitions:
-- On COMMA shift to state 684
-- On maybecomma shift to state 698
## Reductions:
-- On RBRACE
--   reduce production maybecomma ->

State 698:
## Known stack suffix:
## ENUM just_attributes LBRACE enum_list maybecomma
## LR(1) items:
type_spec -> ENUM just_attributes LBRACE enum_list maybecomma . RBRACE [ VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG LBRACKET INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST COMMA COLON CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ]
## Transitions:
-- On RBRACE shift to state 699
## Reductions:

State 699:
## Known stack suffix:
## ENUM just_attributes LBRACE enum_list maybecomma RBRACE
## LR(1) items:
type_spec -> ENUM just_attributes LBRACE enum_list maybecomma RBRACE . [ VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG LBRACKET INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST COMMA COLON CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ]
## Transitions:
## Reductions:
-- On VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG LBRACKET INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST COMMA COLON CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE
--   reduce production type_spec -> ENUM just_attributes LBRACE enum_list maybecomma RBRACE

State 700:
## Known stack suffix:
## ENUM just_attributes id_or_typename
## LR(1) items:
type_spec -> ENUM just_attributes id_or_typename . LBRACE enum_list maybecomma RBRACE [ VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG LBRACKET INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST COMMA COLON CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ]
## Transitions:
-- On LBRACE shift to state 701
## Reductions:

State 701:
## Known stack suffix:
## ENUM just_attributes id_or_typename LBRACE
## LR(1) items:
type_spec -> ENUM just_attributes id_or_typename LBRACE . enum_list maybecomma RBRACE [ VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG LBRACKET INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST COMMA COLON CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ]
## Transitions:
-- On IDENT shift to state 30
-- On enumerator shift to state 682
-- On enum_list shift to state 702
## Reductions:

State 702:
## Known stack suffix:
## ENUM just_attributes id_or_typename LBRACE enum_list
## LR(1) items:
enum_list -> enum_list . COMMA enumerator [ RBRACE COMMA ]
enum_list -> enum_list . COMMA error [ RBRACE COMMA ]
type_spec -> ENUM just_attributes id_or_typename LBRACE enum_list . maybecomma RBRACE [ VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG LBRACKET INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST COMMA COLON CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ]
## Transitions:
-- On COMMA shift to state 684
-- On maybecomma shift to state 703
## Reductions:
-- On RBRACE
--   reduce production maybecomma ->

State 703:
## Known stack suffix:
## ENUM just_attributes id_or_typename LBRACE enum_list maybecomma
## LR(1) items:
type_spec -> ENUM just_attributes id_or_typename LBRACE enum_list maybecomma . RBRACE [ VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG LBRACKET INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST COMMA COLON CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ]
## Transitions:
-- On RBRACE shift to state 704
## Reductions:

State 704:
## Known stack suffix:
## ENUM just_attributes id_or_typename LBRACE enum_list maybecomma RBRACE
## LR(1) items:
type_spec -> ENUM just_attributes id_or_typename LBRACE enum_list maybecomma RBRACE . [ VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG LBRACKET INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST COMMA COLON CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ]
## Transitions:
## Reductions:
-- On VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG LBRACKET INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST COMMA COLON CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE
--   reduce production type_spec -> ENUM just_attributes id_or_typename LBRACE enum_list maybecomma RBRACE

State 705:
## Known stack suffix:
## just_attribute
## LR(1) items:
just_attributes -> just_attribute . [ NAMED_TYPE LBRACE IDENT AT_NAME ]
just_attributes -> just_attribute . just_attributes [ NAMED_TYPE LBRACE IDENT AT_NAME ]
## Transitions:
-- On DECLSPEC shift to state 689
-- On ATTRIBUTE shift to state 691
-- On just_attributes shift to state 706
-- On just_attribute shift to state 705
## Reductions:
-- On NAMED_TYPE LBRACE IDENT AT_NAME
--   reduce production just_attributes -> just_attribute

State 706:
## Known stack suffix:
## just_attribute just_attributes
## LR(1) items:
just_attributes -> just_attribute just_attributes . [ NAMED_TYPE LBRACE IDENT AT_NAME ]
## Transitions:
## Reductions:
-- On NAMED_TYPE LBRACE IDENT AT_NAME
--   reduce production just_attributes -> just_attribute just_attributes

State 707:
## Known stack suffix:
## ENUM id_or_typename
## LR(1) items:
type_spec -> ENUM id_or_typename . [ VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG LBRACKET INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST COMMA COLON CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ]
type_spec -> ENUM id_or_typename . LBRACE enum_list maybecomma RBRACE [ VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG LBRACKET INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST COMMA COLON CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ]
## Transitions:
-- On LBRACE shift to state 708
## Reductions:
-- On VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG LBRACKET INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST COMMA COLON CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE
--   reduce production type_spec -> ENUM id_or_typename

State 708:
## Known stack suffix:
## ENUM id_or_typename LBRACE
## LR(1) items:
type_spec -> ENUM id_or_typename LBRACE . enum_list maybecomma RBRACE [ VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG LBRACKET INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST COMMA COLON CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ]
## Transitions:
-- On IDENT shift to state 30
-- On enumerator shift to state 682
-- On enum_list shift to state 709
## Reductions:

State 709:
## Known stack suffix:
## ENUM id_or_typename LBRACE enum_list
## LR(1) items:
enum_list -> enum_list . COMMA enumerator [ RBRACE COMMA ]
enum_list -> enum_list . COMMA error [ RBRACE COMMA ]
type_spec -> ENUM id_or_typename LBRACE enum_list . maybecomma RBRACE [ VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG LBRACKET INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST COMMA COLON CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ]
## Transitions:
-- On COMMA shift to state 684
-- On maybecomma shift to state 710
## Reductions:
-- On RBRACE
--   reduce production maybecomma ->

State 710:
## Known stack suffix:
## ENUM id_or_typename LBRACE enum_list maybecomma
## LR(1) items:
type_spec -> ENUM id_or_typename LBRACE enum_list maybecomma . RBRACE [ VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG LBRACKET INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST COMMA COLON CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ]
## Transitions:
-- On RBRACE shift to state 711
## Reductions:

State 711:
## Known stack suffix:
## ENUM id_or_typename LBRACE enum_list maybecomma RBRACE
## LR(1) items:
type_spec -> ENUM id_or_typename LBRACE enum_list maybecomma RBRACE . [ VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG LBRACKET INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST COMMA COLON CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ]
## Transitions:
## Reductions:
-- On VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG LBRACKET INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST COMMA COLON CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE
--   reduce production type_spec -> ENUM id_or_typename LBRACE enum_list maybecomma RBRACE

State 712:
## Known stack suffix:
## EXTERN decl_spec_list_opt
## LR(1) items:
decl_spec_list -> EXTERN decl_spec_list_opt . [ STAR SEMICOLON RPAREN NAMED_TYPE LPAREN LBRACKET IDENT COMMA COLON AT_NAME ]
## Transitions:
## Reductions:
-- On STAR SEMICOLON RPAREN NAMED_TYPE LPAREN LBRACKET IDENT COMMA COLON AT_NAME
--   reduce production decl_spec_list -> EXTERN decl_spec_list_opt

State 713:
## Known stack suffix:
## INLINE decl_spec_list_opt
## LR(1) items:
decl_spec_list -> INLINE decl_spec_list_opt . [ STAR SEMICOLON RPAREN NAMED_TYPE LPAREN LBRACKET IDENT COMMA COLON AT_NAME ]
## Transitions:
## Reductions:
-- On STAR SEMICOLON RPAREN NAMED_TYPE LPAREN LBRACKET IDENT COMMA COLON AT_NAME
--   reduce production decl_spec_list -> INLINE decl_spec_list_opt

State 714:
## Known stack suffix:
## REGISTER decl_spec_list_opt
## LR(1) items:
decl_spec_list -> REGISTER decl_spec_list_opt . [ STAR SEMICOLON RPAREN NAMED_TYPE LPAREN LBRACKET IDENT COMMA COLON AT_NAME ]
## Transitions:
## Reductions:
-- On STAR SEMICOLON RPAREN NAMED_TYPE LPAREN LBRACKET IDENT COMMA COLON AT_NAME
--   reduce production decl_spec_list -> REGISTER decl_spec_list_opt

State 715:
## Known stack suffix:
## STATIC decl_spec_list_opt
## LR(1) items:
decl_spec_list -> STATIC decl_spec_list_opt . [ STAR SEMICOLON RPAREN NAMED_TYPE LPAREN LBRACKET IDENT COMMA COLON AT_NAME ]
## Transitions:
## Reductions:
-- On STAR SEMICOLON RPAREN NAMED_TYPE LPAREN LBRACKET IDENT COMMA COLON AT_NAME
--   reduce production decl_spec_list -> STATIC decl_spec_list_opt

State 716:
## Known stack suffix:
## SEMICOLON
## LR(1) items:
struct_decl_list -> SEMICOLON . struct_decl_list [ RBRACE ]
## Transitions:
-- On error shift to state 7
-- On VOLATILE shift to state 1
-- On VOID shift to state 2
-- On UNSIGNED shift to state 3
-- On UNION shift to state 4
-- On TYPEOF shift to state 9
-- On TYPEDEF shift to state 11
-- On THREAD shift to state 12
-- On STRUCT shift to state 13
-- On STATIC shift to state 15
-- On SIGNED shift to state 16
-- On SHORT shift to state 17
-- On SEMICOLON shift to state 716
-- On RESTRICT shift to state 18
-- On REGISTER shift to state 19
-- On NAMED_TYPE shift to state 20
-- On MSATTR shift to state 21
-- On LONG shift to state 22
-- On INT64 shift to state 23
-- On INT shift to state 24
-- On INLINE shift to state 25
-- On FLOAT shift to state 26
-- On EXTERN shift to state 27
-- On ENUM shift to state 28
-- On DOUBLE shift to state 66
-- On DECLSPEC shift to state 67
-- On CONST shift to state 78
-- On CHAR shift to state 79
-- On AUTO shift to state 80
-- On AT_SPECIFIER shift to state 81
-- On ATTRIBUTE shift to state 85
-- On type_spec shift to state 89
-- On struct_decl_list shift to state 717
-- On decl_spec_list shift to state 718
-- On cvspec shift to state 92
-- On attribute_nocv shift to state 95
## Reductions:
-- On RBRACE
--   reduce production struct_decl_list ->

State 717:
## Known stack suffix:
## SEMICOLON struct_decl_list
## LR(1) items:
struct_decl_list -> SEMICOLON struct_decl_list . [ RBRACE ]
## Transitions:
## Reductions:
-- On RBRACE
--   reduce production struct_decl_list -> SEMICOLON struct_decl_list

State 718:
## Known stack suffix:
## decl_spec_list
## LR(1) items:
struct_decl_list -> decl_spec_list . SEMICOLON struct_decl_list [ RBRACE ]
struct_decl_list -> decl_spec_list . field_decl_list SEMICOLON struct_decl_list [ RBRACE ]
## Transitions:
-- On STAR shift to state 246
-- On SEMICOLON shift to state 719
-- On COLON shift to state 721
-- On pointer_opt shift to state 474
-- On pointer shift to state 252
-- On field_decl_list shift to state 723
-- On field_decl shift to state 726
-- On declarator shift to state 729
## Reductions:
-- On NAMED_TYPE LPAREN IDENT AT_NAME
--   reduce production pointer_opt ->

State 719:
## Known stack suffix:
## decl_spec_list SEMICOLON
## LR(1) items:
struct_decl_list -> decl_spec_list SEMICOLON . struct_decl_list [ RBRACE ]
## Transitions:
-- On error shift to state 7
-- On VOLATILE shift to state 1
-- On VOID shift to state 2
-- On UNSIGNED shift to state 3
-- On UNION shift to state 4
-- On TYPEOF shift to state 9
-- On TYPEDEF shift to state 11
-- On THREAD shift to state 12
-- On STRUCT shift to state 13
-- On STATIC shift to state 15
-- On SIGNED shift to state 16
-- On SHORT shift to state 17
-- On SEMICOLON shift to state 716
-- On RESTRICT shift to state 18
-- On REGISTER shift to state 19
-- On NAMED_TYPE shift to state 20
-- On MSATTR shift to state 21
-- On LONG shift to state 22
-- On INT64 shift to state 23
-- On INT shift to state 24
-- On INLINE shift to state 25
-- On FLOAT shift to state 26
-- On EXTERN shift to state 27
-- On ENUM shift to state 28
-- On DOUBLE shift to state 66
-- On DECLSPEC shift to state 67
-- On CONST shift to state 78
-- On CHAR shift to state 79
-- On AUTO shift to state 80
-- On AT_SPECIFIER shift to state 81
-- On ATTRIBUTE shift to state 85
-- On type_spec shift to state 89
-- On struct_decl_list shift to state 720
-- On decl_spec_list shift to state 718
-- On cvspec shift to state 92
-- On attribute_nocv shift to state 95
## Reductions:
-- On RBRACE
--   reduce production struct_decl_list ->

State 720:
## Known stack suffix:
## decl_spec_list SEMICOLON struct_decl_list
## LR(1) items:
struct_decl_list -> decl_spec_list SEMICOLON struct_decl_list . [ RBRACE ]
## Transitions:
## Reductions:
-- On RBRACE
--   reduce production struct_decl_list -> decl_spec_list SEMICOLON struct_decl_list

State 721:
## Known stack suffix:
## COLON
## LR(1) items:
field_decl -> COLON . expression [ SEMICOLON COMMA ]
## Transitions:
-- On TILDE shift to state 32
-- On STAR shift to state 33
-- On SIZEOF shift to state 34
-- On PRETTY_FUNCTION__ shift to state 35
-- On PLUS_PLUS shift to state 36
-- On PLUS shift to state 37
-- On MINUS_MINUS shift to state 38
-- On MINUS shift to state 39
-- On LPAREN shift to state 40
-- On IDENT shift to state 45
-- On FUNCTION__ shift to state 46
-- On EXCLAM shift to state 47
-- On CST_WSTRING shift to state 48
-- On CST_WCHAR shift to state 49
-- On CST_STRING shift to state 50
-- On CST_INT shift to state 51
-- On CST_FLOAT shift to state 52
-- On CST_CHAR shift to state 53
-- On BUILTIN_VA_ARG shift to state 54
-- On AT_EXPR shift to state 56
-- On AND_AND shift to state 60
-- On AND shift to state 62
-- On ALIGNOF shift to state 63
-- On wstring_list shift to state 98
-- On unary_expression shift to state 101
-- On string_list shift to state 106
-- On string_constant shift to state 108
-- On shift_expression shift to state 109
-- On relational_expression shift to state 116
-- On primary_expression shift to state 111
-- On postfix_expression shift to state 112
-- On paren_comma_expression shift to state 120
-- On one_string shift to state 121
-- On multiplicative_expression shift to state 122
-- On logical_or_expression shift to state 143
-- On logical_and_expression shift to state 147
-- On expression shift to state 722
-- On equality_expression shift to state 149
-- On constant shift to state 124
-- On conditional_expression shift to state 167
-- On cast_expression shift to state 169
-- On bitwise_xor_expression shift to state 154
-- On bitwise_or_expression shift to state 164
-- On bitwise_and_expression shift to state 162
-- On assignment_expression shift to state 192
-- On additive_expression shift to state 136
## Reductions:

State 722:
## Known stack suffix:
## COLON expression
## LR(1) items:
field_decl -> COLON expression . [ SEMICOLON COMMA ]
## Transitions:
## Reductions:
-- On SEMICOLON COMMA
--   reduce production field_decl -> COLON expression

State 723:
## Known stack suffix:
## decl_spec_list field_decl_list
## LR(1) items:
struct_decl_list -> decl_spec_list field_decl_list . SEMICOLON struct_decl_list [ RBRACE ]
## Transitions:
-- On SEMICOLON shift to state 724
## Reductions:

State 724:
## Known stack suffix:
## decl_spec_list field_decl_list SEMICOLON
## LR(1) items:
struct_decl_list -> decl_spec_list field_decl_list SEMICOLON . struct_decl_list [ RBRACE ]
## Transitions:
-- On error shift to state 7
-- On VOLATILE shift to state 1
-- On VOID shift to state 2
-- On UNSIGNED shift to state 3
-- On UNION shift to state 4
-- On TYPEOF shift to state 9
-- On TYPEDEF shift to state 11
-- On THREAD shift to state 12
-- On STRUCT shift to state 13
-- On STATIC shift to state 15
-- On SIGNED shift to state 16
-- On SHORT shift to state 17
-- On SEMICOLON shift to state 716
-- On RESTRICT shift to state 18
-- On REGISTER shift to state 19
-- On NAMED_TYPE shift to state 20
-- On MSATTR shift to state 21
-- On LONG shift to state 22
-- On INT64 shift to state 23
-- On INT shift to state 24
-- On INLINE shift to state 25
-- On FLOAT shift to state 26
-- On EXTERN shift to state 27
-- On ENUM shift to state 28
-- On DOUBLE shift to state 66
-- On DECLSPEC shift to state 67
-- On CONST shift to state 78
-- On CHAR shift to state 79
-- On AUTO shift to state 80
-- On AT_SPECIFIER shift to state 81
-- On ATTRIBUTE shift to state 85
-- On type_spec shift to state 89
-- On struct_decl_list shift to state 725
-- On decl_spec_list shift to state 718
-- On cvspec shift to state 92
-- On attribute_nocv shift to state 95
## Reductions:
-- On RBRACE
--   reduce production struct_decl_list ->

State 725:
## Known stack suffix:
## decl_spec_list field_decl_list SEMICOLON struct_decl_list
## LR(1) items:
struct_decl_list -> decl_spec_list field_decl_list SEMICOLON struct_decl_list . [ RBRACE ]
## Transitions:
## Reductions:
-- On RBRACE
--   reduce production struct_decl_list -> decl_spec_list field_decl_list SEMICOLON struct_decl_list

State 726:
## Known stack suffix:
## field_decl
## LR(1) items:
field_decl_list -> field_decl . [ SEMICOLON ]
field_decl_list -> field_decl . COMMA field_decl_list [ SEMICOLON ]
## Transitions:
-- On COMMA shift to state 727
## Reductions:
-- On SEMICOLON
--   reduce production field_decl_list -> field_decl

State 727:
## Known stack suffix:
## field_decl COMMA
## LR(1) items:
field_decl_list -> field_decl COMMA . field_decl_list [ SEMICOLON ]
## Transitions:
-- On STAR shift to state 246
-- On COLON shift to state 721
-- On pointer_opt shift to state 474
-- On pointer shift to state 252
-- On field_decl_list shift to state 728
-- On field_decl shift to state 726
-- On declarator shift to state 729
## Reductions:
-- On NAMED_TYPE LPAREN IDENT AT_NAME
--   reduce production pointer_opt ->

State 728:
## Known stack suffix:
## field_decl COMMA field_decl_list
## LR(1) items:
field_decl_list -> field_decl COMMA field_decl_list . [ SEMICOLON ]
## Transitions:
## Reductions:
-- On SEMICOLON
--   reduce production field_decl_list -> field_decl COMMA field_decl_list

State 729:
## Known stack suffix:
## declarator
## LR(1) items:
field_decl -> declarator . [ SEMICOLON COMMA ]
field_decl -> declarator . COLON expression [ SEMICOLON COMMA ]
## Transitions:
-- On COLON shift to state 730
## Reductions:
-- On SEMICOLON COMMA
--   reduce production field_decl -> declarator

State 730:
## Known stack suffix:
## declarator COLON
## LR(1) items:
field_decl -> declarator COLON . expression [ SEMICOLON COMMA ]
## Transitions:
-- On TILDE shift to state 32
-- On STAR shift to state 33
-- On SIZEOF shift to state 34
-- On PRETTY_FUNCTION__ shift to state 35
-- On PLUS_PLUS shift to state 36
-- On PLUS shift to state 37
-- On MINUS_MINUS shift to state 38
-- On MINUS shift to state 39
-- On LPAREN shift to state 40
-- On IDENT shift to state 45
-- On FUNCTION__ shift to state 46
-- On EXCLAM shift to state 47
-- On CST_WSTRING shift to state 48
-- On CST_WCHAR shift to state 49
-- On CST_STRING shift to state 50
-- On CST_INT shift to state 51
-- On CST_FLOAT shift to state 52
-- On CST_CHAR shift to state 53
-- On BUILTIN_VA_ARG shift to state 54
-- On AT_EXPR shift to state 56
-- On AND_AND shift to state 60
-- On AND shift to state 62
-- On ALIGNOF shift to state 63
-- On wstring_list shift to state 98
-- On unary_expression shift to state 101
-- On string_list shift to state 106
-- On string_constant shift to state 108
-- On shift_expression shift to state 109
-- On relational_expression shift to state 116
-- On primary_expression shift to state 111
-- On postfix_expression shift to state 112
-- On paren_comma_expression shift to state 120
-- On one_string shift to state 121
-- On multiplicative_expression shift to state 122
-- On logical_or_expression shift to state 143
-- On logical_and_expression shift to state 147
-- On expression shift to state 731
-- On equality_expression shift to state 149
-- On constant shift to state 124
-- On conditional_expression shift to state 167
-- On cast_expression shift to state 169
-- On bitwise_xor_expression shift to state 154
-- On bitwise_or_expression shift to state 164
-- On bitwise_and_expression shift to state 162
-- On assignment_expression shift to state 192
-- On additive_expression shift to state 136
## Reductions:

State 731:
## Known stack suffix:
## declarator COLON expression
## LR(1) items:
field_decl -> declarator COLON expression . [ SEMICOLON COMMA ]
## Transitions:
## Reductions:
-- On SEMICOLON COMMA
--   reduce production field_decl -> declarator COLON expression

State 732:
## Known stack suffix:
## STRUCT LBRACE struct_decl_list
## LR(1) items:
type_spec -> STRUCT LBRACE struct_decl_list . RBRACE [ VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG LBRACKET INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST COMMA COLON CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ]
## Transitions:
-- On RBRACE shift to state 733
## Reductions:

State 733:
## Known stack suffix:
## STRUCT LBRACE struct_decl_list RBRACE
## LR(1) items:
type_spec -> STRUCT LBRACE struct_decl_list RBRACE . [ VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG LBRACKET INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST COMMA COLON CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ]
## Transitions:
## Reductions:
-- On VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG LBRACKET INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST COMMA COLON CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE
--   reduce production type_spec -> STRUCT LBRACE struct_decl_list RBRACE

State 734:
## Known stack suffix:
## STRUCT just_attributes
## LR(1) items:
type_spec -> STRUCT just_attributes . id_or_typename LBRACE struct_decl_list RBRACE [ VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG LBRACKET INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST COMMA COLON CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ]
type_spec -> STRUCT just_attributes . LBRACE struct_decl_list RBRACE [ VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG LBRACKET INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST COMMA COLON CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ]
## Transitions:
-- On NAMED_TYPE shift to state 5
-- On LBRACE shift to state 735
-- On IDENT shift to state 205
-- On AT_NAME shift to state 206
-- On id_or_typename shift to state 738
## Reductions:

State 735:
## Known stack suffix:
## STRUCT just_attributes LBRACE
## LR(1) items:
type_spec -> STRUCT just_attributes LBRACE . struct_decl_list RBRACE [ VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG LBRACKET INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST COMMA COLON CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ]
## Transitions:
-- On error shift to state 7
-- On VOLATILE shift to state 1
-- On VOID shift to state 2
-- On UNSIGNED shift to state 3
-- On UNION shift to state 4
-- On TYPEOF shift to state 9
-- On TYPEDEF shift to state 11
-- On THREAD shift to state 12
-- On STRUCT shift to state 13
-- On STATIC shift to state 15
-- On SIGNED shift to state 16
-- On SHORT shift to state 17
-- On SEMICOLON shift to state 716
-- On RESTRICT shift to state 18
-- On REGISTER shift to state 19
-- On NAMED_TYPE shift to state 20
-- On MSATTR shift to state 21
-- On LONG shift to state 22
-- On INT64 shift to state 23
-- On INT shift to state 24
-- On INLINE shift to state 25
-- On FLOAT shift to state 26
-- On EXTERN shift to state 27
-- On ENUM shift to state 28
-- On DOUBLE shift to state 66
-- On DECLSPEC shift to state 67
-- On CONST shift to state 78
-- On CHAR shift to state 79
-- On AUTO shift to state 80
-- On AT_SPECIFIER shift to state 81
-- On ATTRIBUTE shift to state 85
-- On type_spec shift to state 89
-- On struct_decl_list shift to state 736
-- On decl_spec_list shift to state 718
-- On cvspec shift to state 92
-- On attribute_nocv shift to state 95
## Reductions:
-- On RBRACE
--   reduce production struct_decl_list ->

State 736:
## Known stack suffix:
## STRUCT just_attributes LBRACE struct_decl_list
## LR(1) items:
type_spec -> STRUCT just_attributes LBRACE struct_decl_list . RBRACE [ VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG LBRACKET INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST COMMA COLON CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ]
## Transitions:
-- On RBRACE shift to state 737
## Reductions:

State 737:
## Known stack suffix:
## STRUCT just_attributes LBRACE struct_decl_list RBRACE
## LR(1) items:
type_spec -> STRUCT just_attributes LBRACE struct_decl_list RBRACE . [ VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG LBRACKET INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST COMMA COLON CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ]
## Transitions:
## Reductions:
-- On VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG LBRACKET INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST COMMA COLON CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE
--   reduce production type_spec -> STRUCT just_attributes LBRACE struct_decl_list RBRACE

State 738:
## Known stack suffix:
## STRUCT just_attributes id_or_typename
## LR(1) items:
type_spec -> STRUCT just_attributes id_or_typename . LBRACE struct_decl_list RBRACE [ VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG LBRACKET INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST COMMA COLON CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ]
## Transitions:
-- On LBRACE shift to state 739
## Reductions:

State 739:
## Known stack suffix:
## STRUCT just_attributes id_or_typename LBRACE
## LR(1) items:
type_spec -> STRUCT just_attributes id_or_typename LBRACE . struct_decl_list RBRACE [ VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG LBRACKET INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST COMMA COLON CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ]
## Transitions:
-- On error shift to state 7
-- On VOLATILE shift to state 1
-- On VOID shift to state 2
-- On UNSIGNED shift to state 3
-- On UNION shift to state 4
-- On TYPEOF shift to state 9
-- On TYPEDEF shift to state 11
-- On THREAD shift to state 12
-- On STRUCT shift to state 13
-- On STATIC shift to state 15
-- On SIGNED shift to state 16
-- On SHORT shift to state 17
-- On SEMICOLON shift to state 716
-- On RESTRICT shift to state 18
-- On REGISTER shift to state 19
-- On NAMED_TYPE shift to state 20
-- On MSATTR shift to state 21
-- On LONG shift to state 22
-- On INT64 shift to state 23
-- On INT shift to state 24
-- On INLINE shift to state 25
-- On FLOAT shift to state 26
-- On EXTERN shift to state 27
-- On ENUM shift to state 28
-- On DOUBLE shift to state 66
-- On DECLSPEC shift to state 67
-- On CONST shift to state 78
-- On CHAR shift to state 79
-- On AUTO shift to state 80
-- On AT_SPECIFIER shift to state 81
-- On ATTRIBUTE shift to state 85
-- On type_spec shift to state 89
-- On struct_decl_list shift to state 740
-- On decl_spec_list shift to state 718
-- On cvspec shift to state 92
-- On attribute_nocv shift to state 95
## Reductions:
-- On RBRACE
--   reduce production struct_decl_list ->

State 740:
## Known stack suffix:
## STRUCT just_attributes id_or_typename LBRACE struct_decl_list
## LR(1) items:
type_spec -> STRUCT just_attributes id_or_typename LBRACE struct_decl_list . RBRACE [ VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG LBRACKET INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST COMMA COLON CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ]
## Transitions:
-- On RBRACE shift to state 741
## Reductions:

State 741:
## Known stack suffix:
## STRUCT just_attributes id_or_typename LBRACE struct_decl_list RBRACE
## LR(1) items:
type_spec -> STRUCT just_attributes id_or_typename LBRACE struct_decl_list RBRACE . [ VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG LBRACKET INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST COMMA COLON CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ]
## Transitions:
## Reductions:
-- On VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG LBRACKET INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST COMMA COLON CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE
--   reduce production type_spec -> STRUCT just_attributes id_or_typename LBRACE struct_decl_list RBRACE

State 742:
## Known stack suffix:
## STRUCT id_or_typename
## LR(1) items:
type_spec -> STRUCT id_or_typename . [ VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG LBRACKET INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST COMMA COLON CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ]
type_spec -> STRUCT id_or_typename . LBRACE struct_decl_list RBRACE [ VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG LBRACKET INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST COMMA COLON CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ]
## Transitions:
-- On LBRACE shift to state 743
## Reductions:
-- On VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG LBRACKET INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST COMMA COLON CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE
--   reduce production type_spec -> STRUCT id_or_typename

State 743:
## Known stack suffix:
## STRUCT id_or_typename LBRACE
## LR(1) items:
type_spec -> STRUCT id_or_typename LBRACE . struct_decl_list RBRACE [ VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG LBRACKET INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST COMMA COLON CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ]
## Transitions:
-- On error shift to state 7
-- On VOLATILE shift to state 1
-- On VOID shift to state 2
-- On UNSIGNED shift to state 3
-- On UNION shift to state 4
-- On TYPEOF shift to state 9
-- On TYPEDEF shift to state 11
-- On THREAD shift to state 12
-- On STRUCT shift to state 13
-- On STATIC shift to state 15
-- On SIGNED shift to state 16
-- On SHORT shift to state 17
-- On SEMICOLON shift to state 716
-- On RESTRICT shift to state 18
-- On REGISTER shift to state 19
-- On NAMED_TYPE shift to state 20
-- On MSATTR shift to state 21
-- On LONG shift to state 22
-- On INT64 shift to state 23
-- On INT shift to state 24
-- On INLINE shift to state 25
-- On FLOAT shift to state 26
-- On EXTERN shift to state 27
-- On ENUM shift to state 28
-- On DOUBLE shift to state 66
-- On DECLSPEC shift to state 67
-- On CONST shift to state 78
-- On CHAR shift to state 79
-- On AUTO shift to state 80
-- On AT_SPECIFIER shift to state 81
-- On ATTRIBUTE shift to state 85
-- On type_spec shift to state 89
-- On struct_decl_list shift to state 744
-- On decl_spec_list shift to state 718
-- On cvspec shift to state 92
-- On attribute_nocv shift to state 95
## Reductions:
-- On RBRACE
--   reduce production struct_decl_list ->

State 744:
## Known stack suffix:
## STRUCT id_or_typename LBRACE struct_decl_list
## LR(1) items:
type_spec -> STRUCT id_or_typename LBRACE struct_decl_list . RBRACE [ VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG LBRACKET INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST COMMA COLON CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ]
## Transitions:
-- On RBRACE shift to state 745
## Reductions:

State 745:
## Known stack suffix:
## STRUCT id_or_typename LBRACE struct_decl_list RBRACE
## LR(1) items:
type_spec -> STRUCT id_or_typename LBRACE struct_decl_list RBRACE . [ VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG LBRACKET INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST COMMA COLON CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ]
## Transitions:
## Reductions:
-- On VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG LBRACKET INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST COMMA COLON CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE
--   reduce production type_spec -> STRUCT id_or_typename LBRACE struct_decl_list RBRACE

State 746:
## Known stack suffix:
## TYPEDEF decl_spec_list_opt
## LR(1) items:
decl_spec_list -> TYPEDEF decl_spec_list_opt . [ STAR SEMICOLON RPAREN NAMED_TYPE LPAREN LBRACKET IDENT COMMA COLON AT_NAME ]
## Transitions:
## Reductions:
-- On STAR SEMICOLON RPAREN NAMED_TYPE LPAREN LBRACKET IDENT COMMA COLON AT_NAME
--   reduce production decl_spec_list -> TYPEDEF decl_spec_list_opt

State 747:
## Known stack suffix:
## TYPEOF LPAREN type_name
## LR(1) items:
type_spec -> TYPEOF LPAREN type_name . RPAREN [ VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG LBRACKET INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST COMMA COLON CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ]
## Transitions:
-- On RPAREN shift to state 748
## Reductions:

State 748:
## Known stack suffix:
## TYPEOF LPAREN type_name RPAREN
## LR(1) items:
type_spec -> TYPEOF LPAREN type_name RPAREN . [ VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG LBRACKET INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST COMMA COLON CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ]
## Transitions:
## Reductions:
-- On VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG LBRACKET INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST COMMA COLON CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE
--   reduce production type_spec -> TYPEOF LPAREN type_name RPAREN

State 749:
## Known stack suffix:
## TYPEOF LPAREN expression
## LR(1) items:
type_spec -> TYPEOF LPAREN expression . RPAREN [ VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG LBRACKET INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST COMMA COLON CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ]
## Transitions:
-- On RPAREN shift to state 750
## Reductions:

State 750:
## Known stack suffix:
## TYPEOF LPAREN expression RPAREN
## LR(1) items:
type_spec -> TYPEOF LPAREN expression RPAREN . [ VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG LBRACKET INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST COMMA COLON CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ]
## Transitions:
## Reductions:
-- On VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG LBRACKET INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST COMMA COLON CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE
--   reduce production type_spec -> TYPEOF LPAREN expression RPAREN

State 751:
## Known stack suffix:
## error SEMICOLON struct_decl_list
## LR(1) items:
struct_decl_list -> error SEMICOLON struct_decl_list . [ RBRACE ]
## Transitions:
## Reductions:
-- On RBRACE
--   reduce production struct_decl_list -> error SEMICOLON struct_decl_list

State 752:
## Known stack suffix:
## UNION LBRACE struct_decl_list
## LR(1) items:
type_spec -> UNION LBRACE struct_decl_list . RBRACE [ VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG LBRACKET INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST COMMA COLON CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ]
## Transitions:
-- On RBRACE shift to state 753
## Reductions:

State 753:
## Known stack suffix:
## UNION LBRACE struct_decl_list RBRACE
## LR(1) items:
type_spec -> UNION LBRACE struct_decl_list RBRACE . [ VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG LBRACKET INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST COMMA COLON CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ]
## Transitions:
## Reductions:
-- On VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG LBRACKET INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST COMMA COLON CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE
--   reduce production type_spec -> UNION LBRACE struct_decl_list RBRACE

State 754:
## Known stack suffix:
## UNION just_attributes
## LR(1) items:
type_spec -> UNION just_attributes . id_or_typename LBRACE struct_decl_list RBRACE [ VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG LBRACKET INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST COMMA COLON CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ]
type_spec -> UNION just_attributes . LBRACE struct_decl_list RBRACE [ VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG LBRACKET INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST COMMA COLON CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ]
## Transitions:
-- On NAMED_TYPE shift to state 5
-- On LBRACE shift to state 755
-- On IDENT shift to state 205
-- On AT_NAME shift to state 206
-- On id_or_typename shift to state 758
## Reductions:

State 755:
## Known stack suffix:
## UNION just_attributes LBRACE
## LR(1) items:
type_spec -> UNION just_attributes LBRACE . struct_decl_list RBRACE [ VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG LBRACKET INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST COMMA COLON CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ]
## Transitions:
-- On error shift to state 7
-- On VOLATILE shift to state 1
-- On VOID shift to state 2
-- On UNSIGNED shift to state 3
-- On UNION shift to state 4
-- On TYPEOF shift to state 9
-- On TYPEDEF shift to state 11
-- On THREAD shift to state 12
-- On STRUCT shift to state 13
-- On STATIC shift to state 15
-- On SIGNED shift to state 16
-- On SHORT shift to state 17
-- On SEMICOLON shift to state 716
-- On RESTRICT shift to state 18
-- On REGISTER shift to state 19
-- On NAMED_TYPE shift to state 20
-- On MSATTR shift to state 21
-- On LONG shift to state 22
-- On INT64 shift to state 23
-- On INT shift to state 24
-- On INLINE shift to state 25
-- On FLOAT shift to state 26
-- On EXTERN shift to state 27
-- On ENUM shift to state 28
-- On DOUBLE shift to state 66
-- On DECLSPEC shift to state 67
-- On CONST shift to state 78
-- On CHAR shift to state 79
-- On AUTO shift to state 80
-- On AT_SPECIFIER shift to state 81
-- On ATTRIBUTE shift to state 85
-- On type_spec shift to state 89
-- On struct_decl_list shift to state 756
-- On decl_spec_list shift to state 718
-- On cvspec shift to state 92
-- On attribute_nocv shift to state 95
## Reductions:
-- On RBRACE
--   reduce production struct_decl_list ->

State 756:
## Known stack suffix:
## UNION just_attributes LBRACE struct_decl_list
## LR(1) items:
type_spec -> UNION just_attributes LBRACE struct_decl_list . RBRACE [ VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG LBRACKET INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST COMMA COLON CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ]
## Transitions:
-- On RBRACE shift to state 757
## Reductions:

State 757:
## Known stack suffix:
## UNION just_attributes LBRACE struct_decl_list RBRACE
## LR(1) items:
type_spec -> UNION just_attributes LBRACE struct_decl_list RBRACE . [ VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG LBRACKET INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST COMMA COLON CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ]
## Transitions:
## Reductions:
-- On VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG LBRACKET INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST COMMA COLON CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE
--   reduce production type_spec -> UNION just_attributes LBRACE struct_decl_list RBRACE

State 758:
## Known stack suffix:
## UNION just_attributes id_or_typename
## LR(1) items:
type_spec -> UNION just_attributes id_or_typename . LBRACE struct_decl_list RBRACE [ VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG LBRACKET INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST COMMA COLON CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ]
## Transitions:
-- On LBRACE shift to state 759
## Reductions:

State 759:
## Known stack suffix:
## UNION just_attributes id_or_typename LBRACE
## LR(1) items:
type_spec -> UNION just_attributes id_or_typename LBRACE . struct_decl_list RBRACE [ VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG LBRACKET INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST COMMA COLON CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ]
## Transitions:
-- On error shift to state 7
-- On VOLATILE shift to state 1
-- On VOID shift to state 2
-- On UNSIGNED shift to state 3
-- On UNION shift to state 4
-- On TYPEOF shift to state 9
-- On TYPEDEF shift to state 11
-- On THREAD shift to state 12
-- On STRUCT shift to state 13
-- On STATIC shift to state 15
-- On SIGNED shift to state 16
-- On SHORT shift to state 17
-- On SEMICOLON shift to state 716
-- On RESTRICT shift to state 18
-- On REGISTER shift to state 19
-- On NAMED_TYPE shift to state 20
-- On MSATTR shift to state 21
-- On LONG shift to state 22
-- On INT64 shift to state 23
-- On INT shift to state 24
-- On INLINE shift to state 25
-- On FLOAT shift to state 26
-- On EXTERN shift to state 27
-- On ENUM shift to state 28
-- On DOUBLE shift to state 66
-- On DECLSPEC shift to state 67
-- On CONST shift to state 78
-- On CHAR shift to state 79
-- On AUTO shift to state 80
-- On AT_SPECIFIER shift to state 81
-- On ATTRIBUTE shift to state 85
-- On type_spec shift to state 89
-- On struct_decl_list shift to state 760
-- On decl_spec_list shift to state 718
-- On cvspec shift to state 92
-- On attribute_nocv shift to state 95
## Reductions:
-- On RBRACE
--   reduce production struct_decl_list ->

State 760:
## Known stack suffix:
## UNION just_attributes id_or_typename LBRACE struct_decl_list
## LR(1) items:
type_spec -> UNION just_attributes id_or_typename LBRACE struct_decl_list . RBRACE [ VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG LBRACKET INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST COMMA COLON CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ]
## Transitions:
-- On RBRACE shift to state 761
## Reductions:

State 761:
## Known stack suffix:
## UNION just_attributes id_or_typename LBRACE struct_decl_list RBRACE
## LR(1) items:
type_spec -> UNION just_attributes id_or_typename LBRACE struct_decl_list RBRACE . [ VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG LBRACKET INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST COMMA COLON CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ]
## Transitions:
## Reductions:
-- On VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG LBRACKET INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST COMMA COLON CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE
--   reduce production type_spec -> UNION just_attributes id_or_typename LBRACE struct_decl_list RBRACE

State 762:
## Known stack suffix:
## UNION id_or_typename
## LR(1) items:
type_spec -> UNION id_or_typename . [ VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG LBRACKET INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST COMMA COLON CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ]
type_spec -> UNION id_or_typename . LBRACE struct_decl_list RBRACE [ VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG LBRACKET INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST COMMA COLON CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ]
## Transitions:
-- On LBRACE shift to state 763
## Reductions:
-- On VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG LBRACKET INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST COMMA COLON CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE
--   reduce production type_spec -> UNION id_or_typename

State 763:
## Known stack suffix:
## UNION id_or_typename LBRACE
## LR(1) items:
type_spec -> UNION id_or_typename LBRACE . struct_decl_list RBRACE [ VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG LBRACKET INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST COMMA COLON CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ]
## Transitions:
-- On error shift to state 7
-- On VOLATILE shift to state 1
-- On VOID shift to state 2
-- On UNSIGNED shift to state 3
-- On UNION shift to state 4
-- On TYPEOF shift to state 9
-- On TYPEDEF shift to state 11
-- On THREAD shift to state 12
-- On STRUCT shift to state 13
-- On STATIC shift to state 15
-- On SIGNED shift to state 16
-- On SHORT shift to state 17
-- On SEMICOLON shift to state 716
-- On RESTRICT shift to state 18
-- On REGISTER shift to state 19
-- On NAMED_TYPE shift to state 20
-- On MSATTR shift to state 21
-- On LONG shift to state 22
-- On INT64 shift to state 23
-- On INT shift to state 24
-- On INLINE shift to state 25
-- On FLOAT shift to state 26
-- On EXTERN shift to state 27
-- On ENUM shift to state 28
-- On DOUBLE shift to state 66
-- On DECLSPEC shift to state 67
-- On CONST shift to state 78
-- On CHAR shift to state 79
-- On AUTO shift to state 80
-- On AT_SPECIFIER shift to state 81
-- On ATTRIBUTE shift to state 85
-- On type_spec shift to state 89
-- On struct_decl_list shift to state 764
-- On decl_spec_list shift to state 718
-- On cvspec shift to state 92
-- On attribute_nocv shift to state 95
## Reductions:
-- On RBRACE
--   reduce production struct_decl_list ->

State 764:
## Known stack suffix:
## UNION id_or_typename LBRACE struct_decl_list
## LR(1) items:
type_spec -> UNION id_or_typename LBRACE struct_decl_list . RBRACE [ VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG LBRACKET INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST COMMA COLON CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ]
## Transitions:
-- On RBRACE shift to state 765
## Reductions:

State 765:
## Known stack suffix:
## UNION id_or_typename LBRACE struct_decl_list RBRACE
## LR(1) items:
type_spec -> UNION id_or_typename LBRACE struct_decl_list RBRACE . [ VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG LBRACKET INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST COMMA COLON CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ]
## Transitions:
## Reductions:
-- On VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG LBRACKET INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST COMMA COLON CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE
--   reduce production type_spec -> UNION id_or_typename LBRACE struct_decl_list RBRACE

State 766:
## Known stack suffix:
## SEMICOLON
## LR(1) items:
globals -> SEMICOLON . globals [ # ]
## Transitions:
-- On VOLATILE shift to state 1
-- On VOID shift to state 2
-- On UNSIGNED shift to state 3
-- On UNION shift to state 4
-- On TYPEOF shift to state 9
-- On TYPEDEF shift to state 11
-- On THREAD shift to state 12
-- On STRUCT shift to state 13
-- On STATIC shift to state 15
-- On SIGNED shift to state 16
-- On SHORT shift to state 17
-- On SEMICOLON shift to state 766
-- On RESTRICT shift to state 18
-- On REGISTER shift to state 19
-- On PRAGMA_LINE shift to state 767
-- On PRAGMA shift to state 768
-- On NAMED_TYPE shift to state 20
-- On MSATTR shift to state 21
-- On LONG shift to state 22
-- On INT64 shift to state 23
-- On INT shift to state 24
-- On INLINE shift to state 25
-- On IDENT shift to state 773
-- On FLOAT shift to state 26
-- On EXTERN shift to state 896
-- On ENUM shift to state 28
-- On DOUBLE shift to state 66
-- On DECLSPEC shift to state 67
-- On CONST shift to state 78
-- On CHAR shift to state 79
-- On AUTO shift to state 80
-- On AT_TRANSFORMEXPR shift to state 900
-- On AT_TRANSFORM shift to state 908
-- On AT_SPECIFIER shift to state 81
-- On ATTRIBUTE shift to state 85
-- On ASM shift to state 925
-- On type_spec shift to state 89
-- On location shift to state 930
-- On globals shift to state 1017
-- On global shift to state 1018
-- On function_def_start shift to state 937
-- On function_def shift to state 939
-- On declaration shift to state 940
-- On decl_spec_list shift to state 941
-- On cvspec shift to state 92
-- On attribute_nocv shift to state 95
## Reductions:
-- On #
--   reduce production globals ->
-- On error
--   reduce production location ->
** End-of-stream conflict on error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER PRAGMA_LINE PRAGMA NAMED_TYPE MSATTR LONG INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_TRANSFORMEXPR AT_TRANSFORM AT_SPECIFIER ATTRIBUTE ASM
**   There is a tension between
**   (1) reducing production globals ->
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 767:
## Known stack suffix:
## PRAGMA_LINE
## LR(1) items:
global -> PRAGMA_LINE . [ error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER RBRACE PRAGMA_LINE PRAGMA NAMED_TYPE MSATTR LONG INT64 INT INLINE IDENT FLOAT EXTERN EOF ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_TRANSFORMEXPR AT_TRANSFORM AT_SPECIFIER ATTRIBUTE ASM # ]
## Transitions:
## Reductions:
-- On error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER RBRACE PRAGMA_LINE PRAGMA NAMED_TYPE MSATTR LONG INT64 INT INLINE IDENT FLOAT EXTERN EOF ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_TRANSFORMEXPR AT_TRANSFORM AT_SPECIFIER ATTRIBUTE ASM #
--   reduce production global -> PRAGMA_LINE
** End-of-stream conflict on error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER RBRACE PRAGMA_LINE PRAGMA NAMED_TYPE MSATTR LONG INT64 INT INLINE IDENT FLOAT EXTERN EOF ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_TRANSFORMEXPR AT_TRANSFORM AT_SPECIFIER ATTRIBUTE ASM
**   There is a tension between
**   (1) reducing production global -> PRAGMA_LINE
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 768:
## Known stack suffix:
## PRAGMA
## LR(1) items:
global -> PRAGMA . attr PRAGMA_EOL [ error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER RBRACE PRAGMA_LINE PRAGMA NAMED_TYPE MSATTR LONG INT64 INT INLINE IDENT FLOAT EXTERN EOF ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_TRANSFORMEXPR AT_TRANSFORM AT_SPECIFIER ATTRIBUTE ASM # ]
global -> PRAGMA . attr SEMICOLON PRAGMA_EOL [ error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER RBRACE PRAGMA_LINE PRAGMA NAMED_TYPE MSATTR LONG INT64 INT INLINE IDENT FLOAT EXTERN EOF ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_TRANSFORMEXPR AT_TRANSFORM AT_SPECIFIER ATTRIBUTE ASM # ]
## Transitions:
-- On VOLATILE shift to state 73
-- On TILDE shift to state 74
-- On STAR shift to state 75
-- On SIZEOF shift to state 76
-- On PRETTY_FUNCTION__ shift to state 35
-- On PLUS shift to state 292
-- On NAMED_TYPE shift to state 293
-- On MINUS shift to state 294
-- On LPAREN shift to state 295
-- On IDENT shift to state 296
-- On FUNCTION__ shift to state 46
-- On EXCLAM shift to state 299
-- On DEFAULT shift to state 300
-- On CST_STRING shift to state 50
-- On CST_INT shift to state 303
-- On CONST shift to state 306
-- On AND shift to state 307
-- On ALIGNOF shift to state 308
-- On unary_attr shift to state 541
-- On string_list shift to state 106
-- On string_constant shift to state 542
-- On shift_attr shift to state 551
-- On relational_attr shift to state 568
-- On primary_attr shift to state 543
-- On postfix_attr shift to state 544
-- On one_string shift to state 121
-- On multiplicative_attr shift to state 553
-- On logical_or_attr shift to state 578
-- On logical_and_attr shift to state 597
-- On equality_attr shift to state 582
-- On cast_attr shift to state 560
-- On bitwise_xor_attr shift to state 587
-- On bitwise_or_attr shift to state 596
-- On bitwise_and_attr shift to state 595
-- On attr shift to state 769
-- On additive_attr shift to state 571
## Reductions:

State 769:
## Known stack suffix:
## PRAGMA attr
## LR(1) items:
global -> PRAGMA attr . PRAGMA_EOL [ error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER RBRACE PRAGMA_LINE PRAGMA NAMED_TYPE MSATTR LONG INT64 INT INLINE IDENT FLOAT EXTERN EOF ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_TRANSFORMEXPR AT_TRANSFORM AT_SPECIFIER ATTRIBUTE ASM # ]
global -> PRAGMA attr . SEMICOLON PRAGMA_EOL [ error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER RBRACE PRAGMA_LINE PRAGMA NAMED_TYPE MSATTR LONG INT64 INT INLINE IDENT FLOAT EXTERN EOF ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_TRANSFORMEXPR AT_TRANSFORM AT_SPECIFIER ATTRIBUTE ASM # ]
## Transitions:
-- On SEMICOLON shift to state 770
-- On PRAGMA_EOL shift to state 772
## Reductions:

State 770:
## Known stack suffix:
## PRAGMA attr SEMICOLON
## LR(1) items:
global -> PRAGMA attr SEMICOLON . PRAGMA_EOL [ error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER RBRACE PRAGMA_LINE PRAGMA NAMED_TYPE MSATTR LONG INT64 INT INLINE IDENT FLOAT EXTERN EOF ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_TRANSFORMEXPR AT_TRANSFORM AT_SPECIFIER ATTRIBUTE ASM # ]
## Transitions:
-- On PRAGMA_EOL shift to state 771
## Reductions:

State 771:
## Known stack suffix:
## PRAGMA attr SEMICOLON PRAGMA_EOL
## LR(1) items:
global -> PRAGMA attr SEMICOLON PRAGMA_EOL . [ error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER RBRACE PRAGMA_LINE PRAGMA NAMED_TYPE MSATTR LONG INT64 INT INLINE IDENT FLOAT EXTERN EOF ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_TRANSFORMEXPR AT_TRANSFORM AT_SPECIFIER ATTRIBUTE ASM # ]
## Transitions:
## Reductions:
-- On error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER RBRACE PRAGMA_LINE PRAGMA NAMED_TYPE MSATTR LONG INT64 INT INLINE IDENT FLOAT EXTERN EOF ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_TRANSFORMEXPR AT_TRANSFORM AT_SPECIFIER ATTRIBUTE ASM #
--   reduce production global -> PRAGMA attr SEMICOLON PRAGMA_EOL
** End-of-stream conflict on error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER RBRACE PRAGMA_LINE PRAGMA NAMED_TYPE MSATTR LONG INT64 INT INLINE IDENT FLOAT EXTERN EOF ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_TRANSFORMEXPR AT_TRANSFORM AT_SPECIFIER ATTRIBUTE ASM
**   There is a tension between
**   (1) reducing production global -> PRAGMA attr SEMICOLON PRAGMA_EOL
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 772:
## Known stack suffix:
## PRAGMA attr PRAGMA_EOL
## LR(1) items:
global -> PRAGMA attr PRAGMA_EOL . [ error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER RBRACE PRAGMA_LINE PRAGMA NAMED_TYPE MSATTR LONG INT64 INT INLINE IDENT FLOAT EXTERN EOF ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_TRANSFORMEXPR AT_TRANSFORM AT_SPECIFIER ATTRIBUTE ASM # ]
## Transitions:
## Reductions:
-- On error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER RBRACE PRAGMA_LINE PRAGMA NAMED_TYPE MSATTR LONG INT64 INT INLINE IDENT FLOAT EXTERN EOF ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_TRANSFORMEXPR AT_TRANSFORM AT_SPECIFIER ATTRIBUTE ASM #
--   reduce production global -> PRAGMA attr PRAGMA_EOL
** End-of-stream conflict on error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER RBRACE PRAGMA_LINE PRAGMA NAMED_TYPE MSATTR LONG INT64 INT INLINE IDENT FLOAT EXTERN EOF ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_TRANSFORMEXPR AT_TRANSFORM AT_SPECIFIER ATTRIBUTE ASM
**   There is a tension between
**   (1) reducing production global -> PRAGMA attr PRAGMA_EOL
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 773:
## Known stack suffix:
## IDENT
## LR(1) items:
function_def_start -> IDENT . parameter_list_startscope rest_par_list RPAREN [ error LBRACE ]
function_def_start -> IDENT . LPAREN old_parameter_list_ne RPAREN old_pardef_list [ error LBRACE ]
function_def_start -> IDENT . LPAREN RPAREN [ error LBRACE ]
global -> IDENT . LPAREN old_parameter_list_ne RPAREN old_pardef_list SEMICOLON [ error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER RBRACE PRAGMA_LINE PRAGMA NAMED_TYPE MSATTR LONG INT64 INT INLINE IDENT FLOAT EXTERN EOF ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_TRANSFORMEXPR AT_TRANSFORM AT_SPECIFIER ATTRIBUTE ASM # ]
global -> IDENT . LPAREN RPAREN SEMICOLON [ error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER RBRACE PRAGMA_LINE PRAGMA NAMED_TYPE MSATTR LONG INT64 INT INLINE IDENT FLOAT EXTERN EOF ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_TRANSFORMEXPR AT_TRANSFORM AT_SPECIFIER ATTRIBUTE ASM # ]
## Transitions:
-- On LPAREN shift to state 774
-- On parameter_list_startscope shift to state 893
## Reductions:

State 774:
## Known stack suffix:
## IDENT LPAREN
## LR(1) items:
function_def_start -> IDENT LPAREN . old_parameter_list_ne RPAREN old_pardef_list [ error LBRACE ]
function_def_start -> IDENT LPAREN . RPAREN [ error LBRACE ]
global -> IDENT LPAREN . old_parameter_list_ne RPAREN old_pardef_list SEMICOLON [ error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER RBRACE PRAGMA_LINE PRAGMA NAMED_TYPE MSATTR LONG INT64 INT INLINE IDENT FLOAT EXTERN EOF ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_TRANSFORMEXPR AT_TRANSFORM AT_SPECIFIER ATTRIBUTE ASM # ]
global -> IDENT LPAREN . RPAREN SEMICOLON [ error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER RBRACE PRAGMA_LINE PRAGMA NAMED_TYPE MSATTR LONG INT64 INT INLINE IDENT FLOAT EXTERN EOF ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_TRANSFORMEXPR AT_TRANSFORM AT_SPECIFIER ATTRIBUTE ASM # ]
parameter_list_startscope -> LPAREN . [ VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC SIGNED SHORT RPAREN RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG INT64 INT INLINE FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_SPECIFIER ATTRIBUTE ]
## Transitions:
-- On IDENT shift to state 775
-- On old_parameter_list_ne shift to state 778
## Reductions:
-- On VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC SIGNED SHORT RPAREN RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG INT64 INT INLINE FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_SPECIFIER ATTRIBUTE
--   reduce production parameter_list_startscope -> LPAREN

State 775:
## Known stack suffix:
## IDENT
## LR(1) items:
old_parameter_list_ne -> IDENT . [ RPAREN ]
old_parameter_list_ne -> IDENT . COMMA old_parameter_list_ne [ RPAREN ]
## Transitions:
-- On COMMA shift to state 776
## Reductions:
-- On RPAREN
--   reduce production old_parameter_list_ne -> IDENT

State 776:
## Known stack suffix:
## IDENT COMMA
## LR(1) items:
old_parameter_list_ne -> IDENT COMMA . old_parameter_list_ne [ RPAREN ]
## Transitions:
-- On IDENT shift to state 775
-- On old_parameter_list_ne shift to state 777
## Reductions:

State 777:
## Known stack suffix:
## IDENT COMMA old_parameter_list_ne
## LR(1) items:
old_parameter_list_ne -> IDENT COMMA old_parameter_list_ne . [ RPAREN ]
## Transitions:
## Reductions:
-- On RPAREN
--   reduce production old_parameter_list_ne -> IDENT COMMA old_parameter_list_ne

State 778:
## Known stack suffix:
## IDENT LPAREN old_parameter_list_ne
## LR(1) items:
function_def_start -> IDENT LPAREN old_parameter_list_ne . RPAREN old_pardef_list [ error LBRACE ]
global -> IDENT LPAREN old_parameter_list_ne . RPAREN old_pardef_list SEMICOLON [ error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER RBRACE PRAGMA_LINE PRAGMA NAMED_TYPE MSATTR LONG INT64 INT INLINE IDENT FLOAT EXTERN EOF ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_TRANSFORMEXPR AT_TRANSFORM AT_SPECIFIER ATTRIBUTE ASM # ]
## Transitions:
-- On RPAREN shift to state 779
## Reductions:

State 779:
## Known stack suffix:
## IDENT LPAREN old_parameter_list_ne RPAREN
## LR(1) items:
function_def_start -> IDENT LPAREN old_parameter_list_ne RPAREN . old_pardef_list [ error LBRACE ]
global -> IDENT LPAREN old_parameter_list_ne RPAREN . old_pardef_list SEMICOLON [ error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER RBRACE PRAGMA_LINE PRAGMA NAMED_TYPE MSATTR LONG INT64 INT INLINE IDENT FLOAT EXTERN EOF ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_TRANSFORMEXPR AT_TRANSFORM AT_SPECIFIER ATTRIBUTE ASM # ]
## Transitions:
-- On VOLATILE shift to state 780
-- On VOID shift to state 781
-- On UNSIGNED shift to state 782
-- On UNION shift to state 783
-- On TYPEOF shift to state 805
-- On TYPEDEF shift to state 811
-- On THREAD shift to state 285
-- On STRUCT shift to state 812
-- On STATIC shift to state 828
-- On SIGNED shift to state 829
-- On SHORT shift to state 830
-- On RESTRICT shift to state 831
-- On REGISTER shift to state 832
-- On NAMED_TYPE shift to state 833
-- On MSATTR shift to state 287
-- On LONG shift to state 834
-- On INT64 shift to state 835
-- On INT shift to state 836
-- On INLINE shift to state 837
-- On FLOAT shift to state 838
-- On EXTERN shift to state 839
-- On ENUM shift to state 840
-- On DOUBLE shift to state 860
-- On DECLSPEC shift to state 288
-- On CONST shift to state 861
-- On CHAR shift to state 862
-- On AUTO shift to state 863
-- On AT_SPECIFIER shift to state 864
-- On ATTRIBUTE shift to state 615
-- On type_spec shift to state 868
-- On old_pardef_list shift to state 882
-- On decl_spec_list shift to state 884
-- On cvspec shift to state 871
-- On attribute_nocv shift to state 874
## Reductions:
-- On error SEMICOLON LBRACE
--   reduce production old_pardef_list ->

State 780:
## Known stack suffix:
## VOLATILE
## LR(1) items:
cvspec -> VOLATILE . [ error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ]
## Transitions:
## Reductions:
-- On error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE
--   reduce production cvspec -> VOLATILE

State 781:
## Known stack suffix:
## VOID
## LR(1) items:
type_spec -> VOID . [ error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ]
## Transitions:
## Reductions:
-- On error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE
--   reduce production type_spec -> VOID

State 782:
## Known stack suffix:
## UNSIGNED
## LR(1) items:
type_spec -> UNSIGNED . [ error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ]
## Transitions:
## Reductions:
-- On error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE
--   reduce production type_spec -> UNSIGNED

State 783:
## Known stack suffix:
## UNION
## LR(1) items:
type_spec -> UNION . id_or_typename [ error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ]
type_spec -> UNION . id_or_typename LBRACE struct_decl_list RBRACE [ error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ]
type_spec -> UNION . LBRACE struct_decl_list RBRACE [ error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ]
type_spec -> UNION . just_attributes id_or_typename LBRACE struct_decl_list RBRACE [ error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ]
type_spec -> UNION . just_attributes LBRACE struct_decl_list RBRACE [ error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ]
## Transitions:
-- On NAMED_TYPE shift to state 784
-- On LBRACE shift to state 785
-- On IDENT shift to state 788
-- On DECLSPEC shift to state 689
-- On AT_NAME shift to state 789
-- On ATTRIBUTE shift to state 691
-- On just_attributes shift to state 793
-- On just_attribute shift to state 705
-- On id_or_typename shift to state 801
## Reductions:

State 784:
## Known stack suffix:
## NAMED_TYPE
## LR(1) items:
id_or_typename -> NAMED_TYPE . [ error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT SEMICOLON RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG LBRACKET LBRACE INT64 INT INLINE IDENT FLOAT EXTERN EQ ENUM DOUBLE DECLSPEC CONST COMMA CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ASM ]
## Transitions:
## Reductions:
-- On error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT SEMICOLON RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG LBRACKET LBRACE INT64 INT INLINE IDENT FLOAT EXTERN EQ ENUM DOUBLE DECLSPEC CONST COMMA CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ASM
--   reduce production id_or_typename -> NAMED_TYPE

State 785:
## Known stack suffix:
## UNION LBRACE
## LR(1) items:
type_spec -> UNION LBRACE . struct_decl_list RBRACE [ error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ]
## Transitions:
-- On error shift to state 7
-- On VOLATILE shift to state 1
-- On VOID shift to state 2
-- On UNSIGNED shift to state 3
-- On UNION shift to state 4
-- On TYPEOF shift to state 9
-- On TYPEDEF shift to state 11
-- On THREAD shift to state 12
-- On STRUCT shift to state 13
-- On STATIC shift to state 15
-- On SIGNED shift to state 16
-- On SHORT shift to state 17
-- On SEMICOLON shift to state 716
-- On RESTRICT shift to state 18
-- On REGISTER shift to state 19
-- On NAMED_TYPE shift to state 20
-- On MSATTR shift to state 21
-- On LONG shift to state 22
-- On INT64 shift to state 23
-- On INT shift to state 24
-- On INLINE shift to state 25
-- On FLOAT shift to state 26
-- On EXTERN shift to state 27
-- On ENUM shift to state 28
-- On DOUBLE shift to state 66
-- On DECLSPEC shift to state 67
-- On CONST shift to state 78
-- On CHAR shift to state 79
-- On AUTO shift to state 80
-- On AT_SPECIFIER shift to state 81
-- On ATTRIBUTE shift to state 85
-- On type_spec shift to state 89
-- On struct_decl_list shift to state 786
-- On decl_spec_list shift to state 718
-- On cvspec shift to state 92
-- On attribute_nocv shift to state 95
## Reductions:
-- On RBRACE
--   reduce production struct_decl_list ->

State 786:
## Known stack suffix:
## UNION LBRACE struct_decl_list
## LR(1) items:
type_spec -> UNION LBRACE struct_decl_list . RBRACE [ error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ]
## Transitions:
-- On RBRACE shift to state 787
## Reductions:

State 787:
## Known stack suffix:
## UNION LBRACE struct_decl_list RBRACE
## LR(1) items:
type_spec -> UNION LBRACE struct_decl_list RBRACE . [ error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ]
## Transitions:
## Reductions:
-- On error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE
--   reduce production type_spec -> UNION LBRACE struct_decl_list RBRACE

State 788:
## Known stack suffix:
## IDENT
## LR(1) items:
id_or_typename -> IDENT . [ error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT SEMICOLON RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG LBRACKET LBRACE INT64 INT INLINE IDENT FLOAT EXTERN EQ ENUM DOUBLE DECLSPEC CONST COMMA CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ASM ]
## Transitions:
## Reductions:
-- On error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT SEMICOLON RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG LBRACKET LBRACE INT64 INT INLINE IDENT FLOAT EXTERN EQ ENUM DOUBLE DECLSPEC CONST COMMA CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ASM
--   reduce production id_or_typename -> IDENT

State 789:
## Known stack suffix:
## AT_NAME
## LR(1) items:
id_or_typename -> AT_NAME . LPAREN IDENT RPAREN [ error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT SEMICOLON RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG LBRACKET LBRACE INT64 INT INLINE IDENT FLOAT EXTERN EQ ENUM DOUBLE DECLSPEC CONST COMMA CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ASM ]
## Transitions:
-- On LPAREN shift to state 790
## Reductions:

State 790:
## Known stack suffix:
## AT_NAME LPAREN
## LR(1) items:
id_or_typename -> AT_NAME LPAREN . IDENT RPAREN [ error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT SEMICOLON RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG LBRACKET LBRACE INT64 INT INLINE IDENT FLOAT EXTERN EQ ENUM DOUBLE DECLSPEC CONST COMMA CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ASM ]
## Transitions:
-- On IDENT shift to state 791
## Reductions:

State 791:
## Known stack suffix:
## AT_NAME LPAREN IDENT
## LR(1) items:
id_or_typename -> AT_NAME LPAREN IDENT . RPAREN [ error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT SEMICOLON RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG LBRACKET LBRACE INT64 INT INLINE IDENT FLOAT EXTERN EQ ENUM DOUBLE DECLSPEC CONST COMMA CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ASM ]
## Transitions:
-- On RPAREN shift to state 792
## Reductions:

State 792:
## Known stack suffix:
## AT_NAME LPAREN IDENT RPAREN
## LR(1) items:
id_or_typename -> AT_NAME LPAREN IDENT RPAREN . [ error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT SEMICOLON RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG LBRACKET LBRACE INT64 INT INLINE IDENT FLOAT EXTERN EQ ENUM DOUBLE DECLSPEC CONST COMMA CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ASM ]
## Transitions:
## Reductions:
-- On error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT SEMICOLON RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG LBRACKET LBRACE INT64 INT INLINE IDENT FLOAT EXTERN EQ ENUM DOUBLE DECLSPEC CONST COMMA CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ASM
--   reduce production id_or_typename -> AT_NAME LPAREN IDENT RPAREN

State 793:
## Known stack suffix:
## UNION just_attributes
## LR(1) items:
type_spec -> UNION just_attributes . id_or_typename LBRACE struct_decl_list RBRACE [ error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ]
type_spec -> UNION just_attributes . LBRACE struct_decl_list RBRACE [ error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ]
## Transitions:
-- On NAMED_TYPE shift to state 5
-- On LBRACE shift to state 794
-- On IDENT shift to state 205
-- On AT_NAME shift to state 206
-- On id_or_typename shift to state 797
## Reductions:

State 794:
## Known stack suffix:
## UNION just_attributes LBRACE
## LR(1) items:
type_spec -> UNION just_attributes LBRACE . struct_decl_list RBRACE [ error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ]
## Transitions:
-- On error shift to state 7
-- On VOLATILE shift to state 1
-- On VOID shift to state 2
-- On UNSIGNED shift to state 3
-- On UNION shift to state 4
-- On TYPEOF shift to state 9
-- On TYPEDEF shift to state 11
-- On THREAD shift to state 12
-- On STRUCT shift to state 13
-- On STATIC shift to state 15
-- On SIGNED shift to state 16
-- On SHORT shift to state 17
-- On SEMICOLON shift to state 716
-- On RESTRICT shift to state 18
-- On REGISTER shift to state 19
-- On NAMED_TYPE shift to state 20
-- On MSATTR shift to state 21
-- On LONG shift to state 22
-- On INT64 shift to state 23
-- On INT shift to state 24
-- On INLINE shift to state 25
-- On FLOAT shift to state 26
-- On EXTERN shift to state 27
-- On ENUM shift to state 28
-- On DOUBLE shift to state 66
-- On DECLSPEC shift to state 67
-- On CONST shift to state 78
-- On CHAR shift to state 79
-- On AUTO shift to state 80
-- On AT_SPECIFIER shift to state 81
-- On ATTRIBUTE shift to state 85
-- On type_spec shift to state 89
-- On struct_decl_list shift to state 795
-- On decl_spec_list shift to state 718
-- On cvspec shift to state 92
-- On attribute_nocv shift to state 95
## Reductions:
-- On RBRACE
--   reduce production struct_decl_list ->

State 795:
## Known stack suffix:
## UNION just_attributes LBRACE struct_decl_list
## LR(1) items:
type_spec -> UNION just_attributes LBRACE struct_decl_list . RBRACE [ error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ]
## Transitions:
-- On RBRACE shift to state 796
## Reductions:

State 796:
## Known stack suffix:
## UNION just_attributes LBRACE struct_decl_list RBRACE
## LR(1) items:
type_spec -> UNION just_attributes LBRACE struct_decl_list RBRACE . [ error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ]
## Transitions:
## Reductions:
-- On error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE
--   reduce production type_spec -> UNION just_attributes LBRACE struct_decl_list RBRACE

State 797:
## Known stack suffix:
## UNION just_attributes id_or_typename
## LR(1) items:
type_spec -> UNION just_attributes id_or_typename . LBRACE struct_decl_list RBRACE [ error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ]
## Transitions:
-- On LBRACE shift to state 798
## Reductions:

State 798:
## Known stack suffix:
## UNION just_attributes id_or_typename LBRACE
## LR(1) items:
type_spec -> UNION just_attributes id_or_typename LBRACE . struct_decl_list RBRACE [ error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ]
## Transitions:
-- On error shift to state 7
-- On VOLATILE shift to state 1
-- On VOID shift to state 2
-- On UNSIGNED shift to state 3
-- On UNION shift to state 4
-- On TYPEOF shift to state 9
-- On TYPEDEF shift to state 11
-- On THREAD shift to state 12
-- On STRUCT shift to state 13
-- On STATIC shift to state 15
-- On SIGNED shift to state 16
-- On SHORT shift to state 17
-- On SEMICOLON shift to state 716
-- On RESTRICT shift to state 18
-- On REGISTER shift to state 19
-- On NAMED_TYPE shift to state 20
-- On MSATTR shift to state 21
-- On LONG shift to state 22
-- On INT64 shift to state 23
-- On INT shift to state 24
-- On INLINE shift to state 25
-- On FLOAT shift to state 26
-- On EXTERN shift to state 27
-- On ENUM shift to state 28
-- On DOUBLE shift to state 66
-- On DECLSPEC shift to state 67
-- On CONST shift to state 78
-- On CHAR shift to state 79
-- On AUTO shift to state 80
-- On AT_SPECIFIER shift to state 81
-- On ATTRIBUTE shift to state 85
-- On type_spec shift to state 89
-- On struct_decl_list shift to state 799
-- On decl_spec_list shift to state 718
-- On cvspec shift to state 92
-- On attribute_nocv shift to state 95
## Reductions:
-- On RBRACE
--   reduce production struct_decl_list ->

State 799:
## Known stack suffix:
## UNION just_attributes id_or_typename LBRACE struct_decl_list
## LR(1) items:
type_spec -> UNION just_attributes id_or_typename LBRACE struct_decl_list . RBRACE [ error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ]
## Transitions:
-- On RBRACE shift to state 800
## Reductions:

State 800:
## Known stack suffix:
## UNION just_attributes id_or_typename LBRACE struct_decl_list RBRACE
## LR(1) items:
type_spec -> UNION just_attributes id_or_typename LBRACE struct_decl_list RBRACE . [ error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ]
## Transitions:
## Reductions:
-- On error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE
--   reduce production type_spec -> UNION just_attributes id_or_typename LBRACE struct_decl_list RBRACE

State 801:
## Known stack suffix:
## UNION id_or_typename
## LR(1) items:
type_spec -> UNION id_or_typename . [ error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ]
type_spec -> UNION id_or_typename . LBRACE struct_decl_list RBRACE [ error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ]
## Transitions:
-- On LBRACE shift to state 802
## Reductions:
-- On error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE
--   reduce production type_spec -> UNION id_or_typename

State 802:
## Known stack suffix:
## UNION id_or_typename LBRACE
## LR(1) items:
type_spec -> UNION id_or_typename LBRACE . struct_decl_list RBRACE [ error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ]
## Transitions:
-- On error shift to state 7
-- On VOLATILE shift to state 1
-- On VOID shift to state 2
-- On UNSIGNED shift to state 3
-- On UNION shift to state 4
-- On TYPEOF shift to state 9
-- On TYPEDEF shift to state 11
-- On THREAD shift to state 12
-- On STRUCT shift to state 13
-- On STATIC shift to state 15
-- On SIGNED shift to state 16
-- On SHORT shift to state 17
-- On SEMICOLON shift to state 716
-- On RESTRICT shift to state 18
-- On REGISTER shift to state 19
-- On NAMED_TYPE shift to state 20
-- On MSATTR shift to state 21
-- On LONG shift to state 22
-- On INT64 shift to state 23
-- On INT shift to state 24
-- On INLINE shift to state 25
-- On FLOAT shift to state 26
-- On EXTERN shift to state 27
-- On ENUM shift to state 28
-- On DOUBLE shift to state 66
-- On DECLSPEC shift to state 67
-- On CONST shift to state 78
-- On CHAR shift to state 79
-- On AUTO shift to state 80
-- On AT_SPECIFIER shift to state 81
-- On ATTRIBUTE shift to state 85
-- On type_spec shift to state 89
-- On struct_decl_list shift to state 803
-- On decl_spec_list shift to state 718
-- On cvspec shift to state 92
-- On attribute_nocv shift to state 95
## Reductions:
-- On RBRACE
--   reduce production struct_decl_list ->

State 803:
## Known stack suffix:
## UNION id_or_typename LBRACE struct_decl_list
## LR(1) items:
type_spec -> UNION id_or_typename LBRACE struct_decl_list . RBRACE [ error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ]
## Transitions:
-- On RBRACE shift to state 804
## Reductions:

State 804:
## Known stack suffix:
## UNION id_or_typename LBRACE struct_decl_list RBRACE
## LR(1) items:
type_spec -> UNION id_or_typename LBRACE struct_decl_list RBRACE . [ error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ]
## Transitions:
## Reductions:
-- On error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE
--   reduce production type_spec -> UNION id_or_typename LBRACE struct_decl_list RBRACE

State 805:
## Known stack suffix:
## TYPEOF
## LR(1) items:
type_spec -> TYPEOF . LPAREN expression RPAREN [ error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ]
type_spec -> TYPEOF . LPAREN type_name RPAREN [ error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ]
## Transitions:
-- On LPAREN shift to state 806
## Reductions:

State 806:
## Known stack suffix:
## TYPEOF LPAREN
## LR(1) items:
type_spec -> TYPEOF LPAREN . expression RPAREN [ error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ]
type_spec -> TYPEOF LPAREN . type_name RPAREN [ error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ]
## Transitions:
-- On VOLATILE shift to state 1
-- On VOID shift to state 2
-- On UNSIGNED shift to state 3
-- On UNION shift to state 4
-- On TYPEOF shift to state 9
-- On TYPEDEF shift to state 11
-- On TILDE shift to state 32
-- On THREAD shift to state 12
-- On STRUCT shift to state 13
-- On STATIC shift to state 15
-- On STAR shift to state 33
-- On SIZEOF shift to state 34
-- On SIGNED shift to state 16
-- On SHORT shift to state 17
-- On RESTRICT shift to state 18
-- On REGISTER shift to state 19
-- On PRETTY_FUNCTION__ shift to state 35
-- On PLUS_PLUS shift to state 36
-- On PLUS shift to state 37
-- On NAMED_TYPE shift to state 20
-- On MSATTR shift to state 21
-- On MINUS_MINUS shift to state 38
-- On MINUS shift to state 39
-- On LPAREN shift to state 40
-- On LONG shift to state 22
-- On INT64 shift to state 23
-- On INT shift to state 24
-- On INLINE shift to state 25
-- On IDENT shift to state 45
-- On FUNCTION__ shift to state 46
-- On FLOAT shift to state 26
-- On EXTERN shift to state 27
-- On EXCLAM shift to state 47
-- On ENUM shift to state 28
-- On DOUBLE shift to state 66
-- On DECLSPEC shift to state 67
-- On CST_WSTRING shift to state 48
-- On CST_WCHAR shift to state 49
-- On CST_STRING shift to state 50
-- On CST_INT shift to state 51
-- On CST_FLOAT shift to state 52
-- On CST_CHAR shift to state 53
-- On CONST shift to state 78
-- On CHAR shift to state 79
-- On BUILTIN_VA_ARG shift to state 54
-- On AUTO shift to state 80
-- On AT_SPECIFIER shift to state 81
-- On AT_EXPR shift to state 56
-- On ATTRIBUTE shift to state 85
-- On AND_AND shift to state 60
-- On AND shift to state 62
-- On ALIGNOF shift to state 63
-- On wstring_list shift to state 98
-- On unary_expression shift to state 101
-- On type_spec shift to state 89
-- On type_name shift to state 807
-- On string_list shift to state 106
-- On string_constant shift to state 108
-- On shift_expression shift to state 109
-- On relational_expression shift to state 116
-- On primary_expression shift to state 111
-- On postfix_expression shift to state 112
-- On paren_comma_expression shift to state 120
-- On one_string shift to state 121
-- On multiplicative_expression shift to state 122
-- On logical_or_expression shift to state 143
-- On logical_and_expression shift to state 147
-- On expression shift to state 809
-- On equality_expression shift to state 149
-- On decl_spec_list shift to state 245
-- On cvspec shift to state 92
-- On constant shift to state 124
-- On conditional_expression shift to state 167
-- On cast_expression shift to state 169
-- On bitwise_xor_expression shift to state 154
-- On bitwise_or_expression shift to state 164
-- On bitwise_and_expression shift to state 162
-- On attribute_nocv shift to state 95
-- On assignment_expression shift to state 192
-- On additive_expression shift to state 136
## Reductions:

State 807:
## Known stack suffix:
## TYPEOF LPAREN type_name
## LR(1) items:
type_spec -> TYPEOF LPAREN type_name . RPAREN [ error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ]
## Transitions:
-- On RPAREN shift to state 808
## Reductions:

State 808:
## Known stack suffix:
## TYPEOF LPAREN type_name RPAREN
## LR(1) items:
type_spec -> TYPEOF LPAREN type_name RPAREN . [ error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ]
## Transitions:
## Reductions:
-- On error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE
--   reduce production type_spec -> TYPEOF LPAREN type_name RPAREN

State 809:
## Known stack suffix:
## TYPEOF LPAREN expression
## LR(1) items:
type_spec -> TYPEOF LPAREN expression . RPAREN [ error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ]
## Transitions:
-- On RPAREN shift to state 810
## Reductions:

State 810:
## Known stack suffix:
## TYPEOF LPAREN expression RPAREN
## LR(1) items:
type_spec -> TYPEOF LPAREN expression RPAREN . [ error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ]
## Transitions:
## Reductions:
-- On error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE
--   reduce production type_spec -> TYPEOF LPAREN expression RPAREN

State 811:
## Known stack suffix:
## TYPEDEF
## LR(1) items:
decl_spec_list -> TYPEDEF . decl_spec_list_opt [ error STAR NAMED_TYPE LPAREN IDENT AT_NAME ]
## Transitions:
-- On VOLATILE shift to state 780
-- On VOID shift to state 781
-- On UNSIGNED shift to state 782
-- On UNION shift to state 783
-- On TYPEOF shift to state 805
-- On TYPEDEF shift to state 811
-- On THREAD shift to state 285
-- On STRUCT shift to state 812
-- On STATIC shift to state 828
-- On SIGNED shift to state 829
-- On SHORT shift to state 830
-- On RESTRICT shift to state 831
-- On REGISTER shift to state 832
-- On NAMED_TYPE shift to state 833
-- On MSATTR shift to state 287
-- On LONG shift to state 834
-- On INT64 shift to state 835
-- On INT shift to state 836
-- On INLINE shift to state 837
-- On FLOAT shift to state 838
-- On EXTERN shift to state 839
-- On ENUM shift to state 840
-- On DOUBLE shift to state 860
-- On DECLSPEC shift to state 288
-- On CONST shift to state 861
-- On CHAR shift to state 862
-- On AUTO shift to state 863
-- On AT_SPECIFIER shift to state 864
-- On ATTRIBUTE shift to state 615
-- On type_spec shift to state 868
-- On decl_spec_list_opt shift to state 881
-- On decl_spec_list shift to state 873
-- On cvspec shift to state 871
-- On attribute_nocv shift to state 874
## Reductions:
-- On error STAR LPAREN IDENT AT_NAME
--   reduce production decl_spec_list_opt ->

State 812:
## Known stack suffix:
## STRUCT
## LR(1) items:
type_spec -> STRUCT . id_or_typename [ error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ]
type_spec -> STRUCT . id_or_typename LBRACE struct_decl_list RBRACE [ error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ]
type_spec -> STRUCT . LBRACE struct_decl_list RBRACE [ error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ]
type_spec -> STRUCT . just_attributes id_or_typename LBRACE struct_decl_list RBRACE [ error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ]
type_spec -> STRUCT . just_attributes LBRACE struct_decl_list RBRACE [ error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ]
## Transitions:
-- On NAMED_TYPE shift to state 784
-- On LBRACE shift to state 813
-- On IDENT shift to state 788
-- On DECLSPEC shift to state 689
-- On AT_NAME shift to state 789
-- On ATTRIBUTE shift to state 691
-- On just_attributes shift to state 816
-- On just_attribute shift to state 705
-- On id_or_typename shift to state 824
## Reductions:

State 813:
## Known stack suffix:
## STRUCT LBRACE
## LR(1) items:
type_spec -> STRUCT LBRACE . struct_decl_list RBRACE [ error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ]
## Transitions:
-- On error shift to state 7
-- On VOLATILE shift to state 1
-- On VOID shift to state 2
-- On UNSIGNED shift to state 3
-- On UNION shift to state 4
-- On TYPEOF shift to state 9
-- On TYPEDEF shift to state 11
-- On THREAD shift to state 12
-- On STRUCT shift to state 13
-- On STATIC shift to state 15
-- On SIGNED shift to state 16
-- On SHORT shift to state 17
-- On SEMICOLON shift to state 716
-- On RESTRICT shift to state 18
-- On REGISTER shift to state 19
-- On NAMED_TYPE shift to state 20
-- On MSATTR shift to state 21
-- On LONG shift to state 22
-- On INT64 shift to state 23
-- On INT shift to state 24
-- On INLINE shift to state 25
-- On FLOAT shift to state 26
-- On EXTERN shift to state 27
-- On ENUM shift to state 28
-- On DOUBLE shift to state 66
-- On DECLSPEC shift to state 67
-- On CONST shift to state 78
-- On CHAR shift to state 79
-- On AUTO shift to state 80
-- On AT_SPECIFIER shift to state 81
-- On ATTRIBUTE shift to state 85
-- On type_spec shift to state 89
-- On struct_decl_list shift to state 814
-- On decl_spec_list shift to state 718
-- On cvspec shift to state 92
-- On attribute_nocv shift to state 95
## Reductions:
-- On RBRACE
--   reduce production struct_decl_list ->

State 814:
## Known stack suffix:
## STRUCT LBRACE struct_decl_list
## LR(1) items:
type_spec -> STRUCT LBRACE struct_decl_list . RBRACE [ error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ]
## Transitions:
-- On RBRACE shift to state 815
## Reductions:

State 815:
## Known stack suffix:
## STRUCT LBRACE struct_decl_list RBRACE
## LR(1) items:
type_spec -> STRUCT LBRACE struct_decl_list RBRACE . [ error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ]
## Transitions:
## Reductions:
-- On error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE
--   reduce production type_spec -> STRUCT LBRACE struct_decl_list RBRACE

State 816:
## Known stack suffix:
## STRUCT just_attributes
## LR(1) items:
type_spec -> STRUCT just_attributes . id_or_typename LBRACE struct_decl_list RBRACE [ error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ]
type_spec -> STRUCT just_attributes . LBRACE struct_decl_list RBRACE [ error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ]
## Transitions:
-- On NAMED_TYPE shift to state 5
-- On LBRACE shift to state 817
-- On IDENT shift to state 205
-- On AT_NAME shift to state 206
-- On id_or_typename shift to state 820
## Reductions:

State 817:
## Known stack suffix:
## STRUCT just_attributes LBRACE
## LR(1) items:
type_spec -> STRUCT just_attributes LBRACE . struct_decl_list RBRACE [ error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ]
## Transitions:
-- On error shift to state 7
-- On VOLATILE shift to state 1
-- On VOID shift to state 2
-- On UNSIGNED shift to state 3
-- On UNION shift to state 4
-- On TYPEOF shift to state 9
-- On TYPEDEF shift to state 11
-- On THREAD shift to state 12
-- On STRUCT shift to state 13
-- On STATIC shift to state 15
-- On SIGNED shift to state 16
-- On SHORT shift to state 17
-- On SEMICOLON shift to state 716
-- On RESTRICT shift to state 18
-- On REGISTER shift to state 19
-- On NAMED_TYPE shift to state 20
-- On MSATTR shift to state 21
-- On LONG shift to state 22
-- On INT64 shift to state 23
-- On INT shift to state 24
-- On INLINE shift to state 25
-- On FLOAT shift to state 26
-- On EXTERN shift to state 27
-- On ENUM shift to state 28
-- On DOUBLE shift to state 66
-- On DECLSPEC shift to state 67
-- On CONST shift to state 78
-- On CHAR shift to state 79
-- On AUTO shift to state 80
-- On AT_SPECIFIER shift to state 81
-- On ATTRIBUTE shift to state 85
-- On type_spec shift to state 89
-- On struct_decl_list shift to state 818
-- On decl_spec_list shift to state 718
-- On cvspec shift to state 92
-- On attribute_nocv shift to state 95
## Reductions:
-- On RBRACE
--   reduce production struct_decl_list ->

State 818:
## Known stack suffix:
## STRUCT just_attributes LBRACE struct_decl_list
## LR(1) items:
type_spec -> STRUCT just_attributes LBRACE struct_decl_list . RBRACE [ error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ]
## Transitions:
-- On RBRACE shift to state 819
## Reductions:

State 819:
## Known stack suffix:
## STRUCT just_attributes LBRACE struct_decl_list RBRACE
## LR(1) items:
type_spec -> STRUCT just_attributes LBRACE struct_decl_list RBRACE . [ error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ]
## Transitions:
## Reductions:
-- On error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE
--   reduce production type_spec -> STRUCT just_attributes LBRACE struct_decl_list RBRACE

State 820:
## Known stack suffix:
## STRUCT just_attributes id_or_typename
## LR(1) items:
type_spec -> STRUCT just_attributes id_or_typename . LBRACE struct_decl_list RBRACE [ error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ]
## Transitions:
-- On LBRACE shift to state 821
## Reductions:

State 821:
## Known stack suffix:
## STRUCT just_attributes id_or_typename LBRACE
## LR(1) items:
type_spec -> STRUCT just_attributes id_or_typename LBRACE . struct_decl_list RBRACE [ error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ]
## Transitions:
-- On error shift to state 7
-- On VOLATILE shift to state 1
-- On VOID shift to state 2
-- On UNSIGNED shift to state 3
-- On UNION shift to state 4
-- On TYPEOF shift to state 9
-- On TYPEDEF shift to state 11
-- On THREAD shift to state 12
-- On STRUCT shift to state 13
-- On STATIC shift to state 15
-- On SIGNED shift to state 16
-- On SHORT shift to state 17
-- On SEMICOLON shift to state 716
-- On RESTRICT shift to state 18
-- On REGISTER shift to state 19
-- On NAMED_TYPE shift to state 20
-- On MSATTR shift to state 21
-- On LONG shift to state 22
-- On INT64 shift to state 23
-- On INT shift to state 24
-- On INLINE shift to state 25
-- On FLOAT shift to state 26
-- On EXTERN shift to state 27
-- On ENUM shift to state 28
-- On DOUBLE shift to state 66
-- On DECLSPEC shift to state 67
-- On CONST shift to state 78
-- On CHAR shift to state 79
-- On AUTO shift to state 80
-- On AT_SPECIFIER shift to state 81
-- On ATTRIBUTE shift to state 85
-- On type_spec shift to state 89
-- On struct_decl_list shift to state 822
-- On decl_spec_list shift to state 718
-- On cvspec shift to state 92
-- On attribute_nocv shift to state 95
## Reductions:
-- On RBRACE
--   reduce production struct_decl_list ->

State 822:
## Known stack suffix:
## STRUCT just_attributes id_or_typename LBRACE struct_decl_list
## LR(1) items:
type_spec -> STRUCT just_attributes id_or_typename LBRACE struct_decl_list . RBRACE [ error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ]
## Transitions:
-- On RBRACE shift to state 823
## Reductions:

State 823:
## Known stack suffix:
## STRUCT just_attributes id_or_typename LBRACE struct_decl_list RBRACE
## LR(1) items:
type_spec -> STRUCT just_attributes id_or_typename LBRACE struct_decl_list RBRACE . [ error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ]
## Transitions:
## Reductions:
-- On error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE
--   reduce production type_spec -> STRUCT just_attributes id_or_typename LBRACE struct_decl_list RBRACE

State 824:
## Known stack suffix:
## STRUCT id_or_typename
## LR(1) items:
type_spec -> STRUCT id_or_typename . [ error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ]
type_spec -> STRUCT id_or_typename . LBRACE struct_decl_list RBRACE [ error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ]
## Transitions:
-- On LBRACE shift to state 825
## Reductions:
-- On error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE
--   reduce production type_spec -> STRUCT id_or_typename

State 825:
## Known stack suffix:
## STRUCT id_or_typename LBRACE
## LR(1) items:
type_spec -> STRUCT id_or_typename LBRACE . struct_decl_list RBRACE [ error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ]
## Transitions:
-- On error shift to state 7
-- On VOLATILE shift to state 1
-- On VOID shift to state 2
-- On UNSIGNED shift to state 3
-- On UNION shift to state 4
-- On TYPEOF shift to state 9
-- On TYPEDEF shift to state 11
-- On THREAD shift to state 12
-- On STRUCT shift to state 13
-- On STATIC shift to state 15
-- On SIGNED shift to state 16
-- On SHORT shift to state 17
-- On SEMICOLON shift to state 716
-- On RESTRICT shift to state 18
-- On REGISTER shift to state 19
-- On NAMED_TYPE shift to state 20
-- On MSATTR shift to state 21
-- On LONG shift to state 22
-- On INT64 shift to state 23
-- On INT shift to state 24
-- On INLINE shift to state 25
-- On FLOAT shift to state 26
-- On EXTERN shift to state 27
-- On ENUM shift to state 28
-- On DOUBLE shift to state 66
-- On DECLSPEC shift to state 67
-- On CONST shift to state 78
-- On CHAR shift to state 79
-- On AUTO shift to state 80
-- On AT_SPECIFIER shift to state 81
-- On ATTRIBUTE shift to state 85
-- On type_spec shift to state 89
-- On struct_decl_list shift to state 826
-- On decl_spec_list shift to state 718
-- On cvspec shift to state 92
-- On attribute_nocv shift to state 95
## Reductions:
-- On RBRACE
--   reduce production struct_decl_list ->

State 826:
## Known stack suffix:
## STRUCT id_or_typename LBRACE struct_decl_list
## LR(1) items:
type_spec -> STRUCT id_or_typename LBRACE struct_decl_list . RBRACE [ error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ]
## Transitions:
-- On RBRACE shift to state 827
## Reductions:

State 827:
## Known stack suffix:
## STRUCT id_or_typename LBRACE struct_decl_list RBRACE
## LR(1) items:
type_spec -> STRUCT id_or_typename LBRACE struct_decl_list RBRACE . [ error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ]
## Transitions:
## Reductions:
-- On error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE
--   reduce production type_spec -> STRUCT id_or_typename LBRACE struct_decl_list RBRACE

State 828:
## Known stack suffix:
## STATIC
## LR(1) items:
decl_spec_list -> STATIC . decl_spec_list_opt [ error STAR NAMED_TYPE LPAREN IDENT AT_NAME ]
## Transitions:
-- On VOLATILE shift to state 780
-- On VOID shift to state 781
-- On UNSIGNED shift to state 782
-- On UNION shift to state 783
-- On TYPEOF shift to state 805
-- On TYPEDEF shift to state 811
-- On THREAD shift to state 285
-- On STRUCT shift to state 812
-- On STATIC shift to state 828
-- On SIGNED shift to state 829
-- On SHORT shift to state 830
-- On RESTRICT shift to state 831
-- On REGISTER shift to state 832
-- On NAMED_TYPE shift to state 833
-- On MSATTR shift to state 287
-- On LONG shift to state 834
-- On INT64 shift to state 835
-- On INT shift to state 836
-- On INLINE shift to state 837
-- On FLOAT shift to state 838
-- On EXTERN shift to state 839
-- On ENUM shift to state 840
-- On DOUBLE shift to state 860
-- On DECLSPEC shift to state 288
-- On CONST shift to state 861
-- On CHAR shift to state 862
-- On AUTO shift to state 863
-- On AT_SPECIFIER shift to state 864
-- On ATTRIBUTE shift to state 615
-- On type_spec shift to state 868
-- On decl_spec_list_opt shift to state 880
-- On decl_spec_list shift to state 873
-- On cvspec shift to state 871
-- On attribute_nocv shift to state 874
## Reductions:
-- On error STAR LPAREN IDENT AT_NAME
--   reduce production decl_spec_list_opt ->

State 829:
## Known stack suffix:
## SIGNED
## LR(1) items:
type_spec -> SIGNED . [ error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ]
## Transitions:
## Reductions:
-- On error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE
--   reduce production type_spec -> SIGNED

State 830:
## Known stack suffix:
## SHORT
## LR(1) items:
type_spec -> SHORT . [ error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ]
## Transitions:
## Reductions:
-- On error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE
--   reduce production type_spec -> SHORT

State 831:
## Known stack suffix:
## RESTRICT
## LR(1) items:
cvspec -> RESTRICT . [ error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ]
## Transitions:
## Reductions:
-- On error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE
--   reduce production cvspec -> RESTRICT

State 832:
## Known stack suffix:
## REGISTER
## LR(1) items:
decl_spec_list -> REGISTER . decl_spec_list_opt [ error STAR NAMED_TYPE LPAREN IDENT AT_NAME ]
## Transitions:
-- On VOLATILE shift to state 780
-- On VOID shift to state 781
-- On UNSIGNED shift to state 782
-- On UNION shift to state 783
-- On TYPEOF shift to state 805
-- On TYPEDEF shift to state 811
-- On THREAD shift to state 285
-- On STRUCT shift to state 812
-- On STATIC shift to state 828
-- On SIGNED shift to state 829
-- On SHORT shift to state 830
-- On RESTRICT shift to state 831
-- On REGISTER shift to state 832
-- On NAMED_TYPE shift to state 833
-- On MSATTR shift to state 287
-- On LONG shift to state 834
-- On INT64 shift to state 835
-- On INT shift to state 836
-- On INLINE shift to state 837
-- On FLOAT shift to state 838
-- On EXTERN shift to state 839
-- On ENUM shift to state 840
-- On DOUBLE shift to state 860
-- On DECLSPEC shift to state 288
-- On CONST shift to state 861
-- On CHAR shift to state 862
-- On AUTO shift to state 863
-- On AT_SPECIFIER shift to state 864
-- On ATTRIBUTE shift to state 615
-- On type_spec shift to state 868
-- On decl_spec_list_opt shift to state 879
-- On decl_spec_list shift to state 873
-- On cvspec shift to state 871
-- On attribute_nocv shift to state 874
## Reductions:
-- On error STAR LPAREN IDENT AT_NAME
--   reduce production decl_spec_list_opt ->

State 833:
## Known stack suffix:
## NAMED_TYPE
## LR(1) items:
type_spec -> NAMED_TYPE . [ error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ]
## Transitions:
## Reductions:
-- On error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE
--   reduce production type_spec -> NAMED_TYPE

State 834:
## Known stack suffix:
## LONG
## LR(1) items:
type_spec -> LONG . [ error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ]
## Transitions:
## Reductions:
-- On error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE
--   reduce production type_spec -> LONG

State 835:
## Known stack suffix:
## INT64
## LR(1) items:
type_spec -> INT64 . [ error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ]
## Transitions:
## Reductions:
-- On error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE
--   reduce production type_spec -> INT64

State 836:
## Known stack suffix:
## INT
## LR(1) items:
type_spec -> INT . [ error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ]
## Transitions:
## Reductions:
-- On error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE
--   reduce production type_spec -> INT

State 837:
## Known stack suffix:
## INLINE
## LR(1) items:
decl_spec_list -> INLINE . decl_spec_list_opt [ error STAR NAMED_TYPE LPAREN IDENT AT_NAME ]
## Transitions:
-- On VOLATILE shift to state 780
-- On VOID shift to state 781
-- On UNSIGNED shift to state 782
-- On UNION shift to state 783
-- On TYPEOF shift to state 805
-- On TYPEDEF shift to state 811
-- On THREAD shift to state 285
-- On STRUCT shift to state 812
-- On STATIC shift to state 828
-- On SIGNED shift to state 829
-- On SHORT shift to state 830
-- On RESTRICT shift to state 831
-- On REGISTER shift to state 832
-- On NAMED_TYPE shift to state 833
-- On MSATTR shift to state 287
-- On LONG shift to state 834
-- On INT64 shift to state 835
-- On INT shift to state 836
-- On INLINE shift to state 837
-- On FLOAT shift to state 838
-- On EXTERN shift to state 839
-- On ENUM shift to state 840
-- On DOUBLE shift to state 860
-- On DECLSPEC shift to state 288
-- On CONST shift to state 861
-- On CHAR shift to state 862
-- On AUTO shift to state 863
-- On AT_SPECIFIER shift to state 864
-- On ATTRIBUTE shift to state 615
-- On type_spec shift to state 868
-- On decl_spec_list_opt shift to state 878
-- On decl_spec_list shift to state 873
-- On cvspec shift to state 871
-- On attribute_nocv shift to state 874
## Reductions:
-- On error STAR LPAREN IDENT AT_NAME
--   reduce production decl_spec_list_opt ->

State 838:
## Known stack suffix:
## FLOAT
## LR(1) items:
type_spec -> FLOAT . [ error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ]
## Transitions:
## Reductions:
-- On error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE
--   reduce production type_spec -> FLOAT

State 839:
## Known stack suffix:
## EXTERN
## LR(1) items:
decl_spec_list -> EXTERN . decl_spec_list_opt [ error STAR NAMED_TYPE LPAREN IDENT AT_NAME ]
## Transitions:
-- On VOLATILE shift to state 780
-- On VOID shift to state 781
-- On UNSIGNED shift to state 782
-- On UNION shift to state 783
-- On TYPEOF shift to state 805
-- On TYPEDEF shift to state 811
-- On THREAD shift to state 285
-- On STRUCT shift to state 812
-- On STATIC shift to state 828
-- On SIGNED shift to state 829
-- On SHORT shift to state 830
-- On RESTRICT shift to state 831
-- On REGISTER shift to state 832
-- On NAMED_TYPE shift to state 833
-- On MSATTR shift to state 287
-- On LONG shift to state 834
-- On INT64 shift to state 835
-- On INT shift to state 836
-- On INLINE shift to state 837
-- On FLOAT shift to state 838
-- On EXTERN shift to state 839
-- On ENUM shift to state 840
-- On DOUBLE shift to state 860
-- On DECLSPEC shift to state 288
-- On CONST shift to state 861
-- On CHAR shift to state 862
-- On AUTO shift to state 863
-- On AT_SPECIFIER shift to state 864
-- On ATTRIBUTE shift to state 615
-- On type_spec shift to state 868
-- On decl_spec_list_opt shift to state 877
-- On decl_spec_list shift to state 873
-- On cvspec shift to state 871
-- On attribute_nocv shift to state 874
## Reductions:
-- On error STAR LPAREN IDENT AT_NAME
--   reduce production decl_spec_list_opt ->

State 840:
## Known stack suffix:
## ENUM
## LR(1) items:
type_spec -> ENUM . id_or_typename [ error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ]
type_spec -> ENUM . id_or_typename LBRACE enum_list maybecomma RBRACE [ error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ]
type_spec -> ENUM . LBRACE enum_list maybecomma RBRACE [ error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ]
type_spec -> ENUM . just_attributes id_or_typename LBRACE enum_list maybecomma RBRACE [ error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ]
type_spec -> ENUM . just_attributes LBRACE enum_list maybecomma RBRACE [ error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ]
## Transitions:
-- On NAMED_TYPE shift to state 784
-- On LBRACE shift to state 841
-- On IDENT shift to state 788
-- On DECLSPEC shift to state 689
-- On AT_NAME shift to state 789
-- On ATTRIBUTE shift to state 691
-- On just_attributes shift to state 845
-- On just_attribute shift to state 705
-- On id_or_typename shift to state 855
## Reductions:

State 841:
## Known stack suffix:
## ENUM LBRACE
## LR(1) items:
type_spec -> ENUM LBRACE . enum_list maybecomma RBRACE [ error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ]
## Transitions:
-- On IDENT shift to state 30
-- On enumerator shift to state 682
-- On enum_list shift to state 842
## Reductions:

State 842:
## Known stack suffix:
## ENUM LBRACE enum_list
## LR(1) items:
enum_list -> enum_list . COMMA enumerator [ RBRACE COMMA ]
enum_list -> enum_list . COMMA error [ RBRACE COMMA ]
type_spec -> ENUM LBRACE enum_list . maybecomma RBRACE [ error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ]
## Transitions:
-- On COMMA shift to state 684
-- On maybecomma shift to state 843
## Reductions:
-- On RBRACE
--   reduce production maybecomma ->

State 843:
## Known stack suffix:
## ENUM LBRACE enum_list maybecomma
## LR(1) items:
type_spec -> ENUM LBRACE enum_list maybecomma . RBRACE [ error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ]
## Transitions:
-- On RBRACE shift to state 844
## Reductions:

State 844:
## Known stack suffix:
## ENUM LBRACE enum_list maybecomma RBRACE
## LR(1) items:
type_spec -> ENUM LBRACE enum_list maybecomma RBRACE . [ error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ]
## Transitions:
## Reductions:
-- On error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE
--   reduce production type_spec -> ENUM LBRACE enum_list maybecomma RBRACE

State 845:
## Known stack suffix:
## ENUM just_attributes
## LR(1) items:
type_spec -> ENUM just_attributes . id_or_typename LBRACE enum_list maybecomma RBRACE [ error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ]
type_spec -> ENUM just_attributes . LBRACE enum_list maybecomma RBRACE [ error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ]
## Transitions:
-- On NAMED_TYPE shift to state 5
-- On LBRACE shift to state 846
-- On IDENT shift to state 205
-- On AT_NAME shift to state 206
-- On id_or_typename shift to state 850
## Reductions:

State 846:
## Known stack suffix:
## ENUM just_attributes LBRACE
## LR(1) items:
type_spec -> ENUM just_attributes LBRACE . enum_list maybecomma RBRACE [ error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ]
## Transitions:
-- On IDENT shift to state 30
-- On enumerator shift to state 682
-- On enum_list shift to state 847
## Reductions:

State 847:
## Known stack suffix:
## ENUM just_attributes LBRACE enum_list
## LR(1) items:
enum_list -> enum_list . COMMA enumerator [ RBRACE COMMA ]
enum_list -> enum_list . COMMA error [ RBRACE COMMA ]
type_spec -> ENUM just_attributes LBRACE enum_list . maybecomma RBRACE [ error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ]
## Transitions:
-- On COMMA shift to state 684
-- On maybecomma shift to state 848
## Reductions:
-- On RBRACE
--   reduce production maybecomma ->

State 848:
## Known stack suffix:
## ENUM just_attributes LBRACE enum_list maybecomma
## LR(1) items:
type_spec -> ENUM just_attributes LBRACE enum_list maybecomma . RBRACE [ error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ]
## Transitions:
-- On RBRACE shift to state 849
## Reductions:

State 849:
## Known stack suffix:
## ENUM just_attributes LBRACE enum_list maybecomma RBRACE
## LR(1) items:
type_spec -> ENUM just_attributes LBRACE enum_list maybecomma RBRACE . [ error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ]
## Transitions:
## Reductions:
-- On error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE
--   reduce production type_spec -> ENUM just_attributes LBRACE enum_list maybecomma RBRACE

State 850:
## Known stack suffix:
## ENUM just_attributes id_or_typename
## LR(1) items:
type_spec -> ENUM just_attributes id_or_typename . LBRACE enum_list maybecomma RBRACE [ error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ]
## Transitions:
-- On LBRACE shift to state 851
## Reductions:

State 851:
## Known stack suffix:
## ENUM just_attributes id_or_typename LBRACE
## LR(1) items:
type_spec -> ENUM just_attributes id_or_typename LBRACE . enum_list maybecomma RBRACE [ error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ]
## Transitions:
-- On IDENT shift to state 30
-- On enumerator shift to state 682
-- On enum_list shift to state 852
## Reductions:

State 852:
## Known stack suffix:
## ENUM just_attributes id_or_typename LBRACE enum_list
## LR(1) items:
enum_list -> enum_list . COMMA enumerator [ RBRACE COMMA ]
enum_list -> enum_list . COMMA error [ RBRACE COMMA ]
type_spec -> ENUM just_attributes id_or_typename LBRACE enum_list . maybecomma RBRACE [ error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ]
## Transitions:
-- On COMMA shift to state 684
-- On maybecomma shift to state 853
## Reductions:
-- On RBRACE
--   reduce production maybecomma ->

State 853:
## Known stack suffix:
## ENUM just_attributes id_or_typename LBRACE enum_list maybecomma
## LR(1) items:
type_spec -> ENUM just_attributes id_or_typename LBRACE enum_list maybecomma . RBRACE [ error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ]
## Transitions:
-- On RBRACE shift to state 854
## Reductions:

State 854:
## Known stack suffix:
## ENUM just_attributes id_or_typename LBRACE enum_list maybecomma RBRACE
## LR(1) items:
type_spec -> ENUM just_attributes id_or_typename LBRACE enum_list maybecomma RBRACE . [ error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ]
## Transitions:
## Reductions:
-- On error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE
--   reduce production type_spec -> ENUM just_attributes id_or_typename LBRACE enum_list maybecomma RBRACE

State 855:
## Known stack suffix:
## ENUM id_or_typename
## LR(1) items:
type_spec -> ENUM id_or_typename . [ error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ]
type_spec -> ENUM id_or_typename . LBRACE enum_list maybecomma RBRACE [ error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ]
## Transitions:
-- On LBRACE shift to state 856
## Reductions:
-- On error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE
--   reduce production type_spec -> ENUM id_or_typename

State 856:
## Known stack suffix:
## ENUM id_or_typename LBRACE
## LR(1) items:
type_spec -> ENUM id_or_typename LBRACE . enum_list maybecomma RBRACE [ error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ]
## Transitions:
-- On IDENT shift to state 30
-- On enumerator shift to state 682
-- On enum_list shift to state 857
## Reductions:

State 857:
## Known stack suffix:
## ENUM id_or_typename LBRACE enum_list
## LR(1) items:
enum_list -> enum_list . COMMA enumerator [ RBRACE COMMA ]
enum_list -> enum_list . COMMA error [ RBRACE COMMA ]
type_spec -> ENUM id_or_typename LBRACE enum_list . maybecomma RBRACE [ error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ]
## Transitions:
-- On COMMA shift to state 684
-- On maybecomma shift to state 858
## Reductions:
-- On RBRACE
--   reduce production maybecomma ->

State 858:
## Known stack suffix:
## ENUM id_or_typename LBRACE enum_list maybecomma
## LR(1) items:
type_spec -> ENUM id_or_typename LBRACE enum_list maybecomma . RBRACE [ error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ]
## Transitions:
-- On RBRACE shift to state 859
## Reductions:

State 859:
## Known stack suffix:
## ENUM id_or_typename LBRACE enum_list maybecomma RBRACE
## LR(1) items:
type_spec -> ENUM id_or_typename LBRACE enum_list maybecomma RBRACE . [ error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ]
## Transitions:
## Reductions:
-- On error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE
--   reduce production type_spec -> ENUM id_or_typename LBRACE enum_list maybecomma RBRACE

State 860:
## Known stack suffix:
## DOUBLE
## LR(1) items:
type_spec -> DOUBLE . [ error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ]
## Transitions:
## Reductions:
-- On error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE
--   reduce production type_spec -> DOUBLE

State 861:
## Known stack suffix:
## CONST
## LR(1) items:
cvspec -> CONST . [ error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ]
## Transitions:
## Reductions:
-- On error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE
--   reduce production cvspec -> CONST

State 862:
## Known stack suffix:
## CHAR
## LR(1) items:
type_spec -> CHAR . [ error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE ]
## Transitions:
## Reductions:
-- On error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE
--   reduce production type_spec -> CHAR

State 863:
## Known stack suffix:
## AUTO
## LR(1) items:
decl_spec_list -> AUTO . decl_spec_list_opt [ error STAR NAMED_TYPE LPAREN IDENT AT_NAME ]
## Transitions:
-- On VOLATILE shift to state 780
-- On VOID shift to state 781
-- On UNSIGNED shift to state 782
-- On UNION shift to state 783
-- On TYPEOF shift to state 805
-- On TYPEDEF shift to state 811
-- On THREAD shift to state 285
-- On STRUCT shift to state 812
-- On STATIC shift to state 828
-- On SIGNED shift to state 829
-- On SHORT shift to state 830
-- On RESTRICT shift to state 831
-- On REGISTER shift to state 832
-- On NAMED_TYPE shift to state 833
-- On MSATTR shift to state 287
-- On LONG shift to state 834
-- On INT64 shift to state 835
-- On INT shift to state 836
-- On INLINE shift to state 837
-- On FLOAT shift to state 838
-- On EXTERN shift to state 839
-- On ENUM shift to state 840
-- On DOUBLE shift to state 860
-- On DECLSPEC shift to state 288
-- On CONST shift to state 861
-- On CHAR shift to state 862
-- On AUTO shift to state 863
-- On AT_SPECIFIER shift to state 864
-- On ATTRIBUTE shift to state 615
-- On type_spec shift to state 868
-- On decl_spec_list_opt shift to state 876
-- On decl_spec_list shift to state 873
-- On cvspec shift to state 871
-- On attribute_nocv shift to state 874
## Reductions:
-- On error STAR LPAREN IDENT AT_NAME
--   reduce production decl_spec_list_opt ->

State 864:
## Known stack suffix:
## AT_SPECIFIER
## LR(1) items:
decl_spec_list -> AT_SPECIFIER . LPAREN IDENT RPAREN [ error STAR NAMED_TYPE LPAREN IDENT AT_NAME ]
## Transitions:
-- On LPAREN shift to state 865
## Reductions:

State 865:
## Known stack suffix:
## AT_SPECIFIER LPAREN
## LR(1) items:
decl_spec_list -> AT_SPECIFIER LPAREN . IDENT RPAREN [ error STAR NAMED_TYPE LPAREN IDENT AT_NAME ]
## Transitions:
-- On IDENT shift to state 866
## Reductions:

State 866:
## Known stack suffix:
## AT_SPECIFIER LPAREN IDENT
## LR(1) items:
decl_spec_list -> AT_SPECIFIER LPAREN IDENT . RPAREN [ error STAR NAMED_TYPE LPAREN IDENT AT_NAME ]
## Transitions:
-- On RPAREN shift to state 867
## Reductions:

State 867:
## Known stack suffix:
## AT_SPECIFIER LPAREN IDENT RPAREN
## LR(1) items:
decl_spec_list -> AT_SPECIFIER LPAREN IDENT RPAREN . [ error STAR NAMED_TYPE LPAREN IDENT AT_NAME ]
## Transitions:
## Reductions:
-- On error STAR NAMED_TYPE LPAREN IDENT AT_NAME
--   reduce production decl_spec_list -> AT_SPECIFIER LPAREN IDENT RPAREN

State 868:
## Known stack suffix:
## type_spec
## LR(1) items:
decl_spec_list -> type_spec . decl_spec_list_opt_no_named [ error STAR NAMED_TYPE LPAREN IDENT AT_NAME ]
## Transitions:
-- On VOLATILE shift to state 780
-- On VOID shift to state 781
-- On UNSIGNED shift to state 782
-- On UNION shift to state 783
-- On TYPEOF shift to state 805
-- On TYPEDEF shift to state 811
-- On THREAD shift to state 285
-- On STRUCT shift to state 812
-- On STATIC shift to state 828
-- On SIGNED shift to state 829
-- On SHORT shift to state 830
-- On RESTRICT shift to state 831
-- On REGISTER shift to state 832
-- On MSATTR shift to state 287
-- On LONG shift to state 834
-- On INT64 shift to state 835
-- On INT shift to state 836
-- On INLINE shift to state 837
-- On FLOAT shift to state 838
-- On EXTERN shift to state 839
-- On ENUM shift to state 840
-- On DOUBLE shift to state 860
-- On DECLSPEC shift to state 288
-- On CONST shift to state 861
-- On CHAR shift to state 862
-- On AUTO shift to state 863
-- On AT_SPECIFIER shift to state 864
-- On ATTRIBUTE shift to state 615
-- On type_spec shift to state 868
-- On decl_spec_list_opt_no_named shift to state 869
-- On decl_spec_list shift to state 870
-- On cvspec shift to state 871
-- On attribute_nocv shift to state 874
## Reductions:
-- On error STAR NAMED_TYPE LPAREN IDENT AT_NAME
--   reduce production decl_spec_list_opt_no_named ->

State 869:
## Known stack suffix:
## type_spec decl_spec_list_opt_no_named
## LR(1) items:
decl_spec_list -> type_spec decl_spec_list_opt_no_named . [ error STAR NAMED_TYPE LPAREN IDENT AT_NAME ]
## Transitions:
## Reductions:
-- On error STAR NAMED_TYPE LPAREN IDENT AT_NAME
--   reduce production decl_spec_list -> type_spec decl_spec_list_opt_no_named

State 870:
## Known stack suffix:
## decl_spec_list
## LR(1) items:
decl_spec_list_opt_no_named -> decl_spec_list . [ error STAR NAMED_TYPE LPAREN IDENT AT_NAME ]
## Transitions:
## Reductions:
-- On error STAR NAMED_TYPE LPAREN IDENT AT_NAME
--   reduce production decl_spec_list_opt_no_named -> decl_spec_list

State 871:
## Known stack suffix:
## cvspec
## LR(1) items:
decl_spec_list -> cvspec . decl_spec_list_opt [ error STAR NAMED_TYPE LPAREN IDENT AT_NAME ]
## Transitions:
-- On VOLATILE shift to state 780
-- On VOID shift to state 781
-- On UNSIGNED shift to state 782
-- On UNION shift to state 783
-- On TYPEOF shift to state 805
-- On TYPEDEF shift to state 811
-- On THREAD shift to state 285
-- On STRUCT shift to state 812
-- On STATIC shift to state 828
-- On SIGNED shift to state 829
-- On SHORT shift to state 830
-- On RESTRICT shift to state 831
-- On REGISTER shift to state 832
-- On NAMED_TYPE shift to state 833
-- On MSATTR shift to state 287
-- On LONG shift to state 834
-- On INT64 shift to state 835
-- On INT shift to state 836
-- On INLINE shift to state 837
-- On FLOAT shift to state 838
-- On EXTERN shift to state 839
-- On ENUM shift to state 840
-- On DOUBLE shift to state 860
-- On DECLSPEC shift to state 288
-- On CONST shift to state 861
-- On CHAR shift to state 862
-- On AUTO shift to state 863
-- On AT_SPECIFIER shift to state 864
-- On ATTRIBUTE shift to state 615
-- On type_spec shift to state 868
-- On decl_spec_list_opt shift to state 872
-- On decl_spec_list shift to state 873
-- On cvspec shift to state 871
-- On attribute_nocv shift to state 874
## Reductions:
-- On error STAR LPAREN IDENT AT_NAME
--   reduce production decl_spec_list_opt ->

State 872:
## Known stack suffix:
## cvspec decl_spec_list_opt
## LR(1) items:
decl_spec_list -> cvspec decl_spec_list_opt . [ error STAR NAMED_TYPE LPAREN IDENT AT_NAME ]
## Transitions:
## Reductions:
-- On error STAR NAMED_TYPE LPAREN IDENT AT_NAME
--   reduce production decl_spec_list -> cvspec decl_spec_list_opt

State 873:
## Known stack suffix:
## decl_spec_list
## LR(1) items:
decl_spec_list_opt -> decl_spec_list . [ error STAR NAMED_TYPE LPAREN IDENT AT_NAME ]
## Transitions:
## Reductions:
-- On error STAR NAMED_TYPE LPAREN IDENT AT_NAME
--   reduce production decl_spec_list_opt -> decl_spec_list

State 874:
## Known stack suffix:
## attribute_nocv
## LR(1) items:
decl_spec_list -> attribute_nocv . decl_spec_list_opt [ error STAR NAMED_TYPE LPAREN IDENT AT_NAME ]
## Transitions:
-- On VOLATILE shift to state 780
-- On VOID shift to state 781
-- On UNSIGNED shift to state 782
-- On UNION shift to state 783
-- On TYPEOF shift to state 805
-- On TYPEDEF shift to state 811
-- On THREAD shift to state 285
-- On STRUCT shift to state 812
-- On STATIC shift to state 828
-- On SIGNED shift to state 829
-- On SHORT shift to state 830
-- On RESTRICT shift to state 831
-- On REGISTER shift to state 832
-- On NAMED_TYPE shift to state 833
-- On MSATTR shift to state 287
-- On LONG shift to state 834
-- On INT64 shift to state 835
-- On INT shift to state 836
-- On INLINE shift to state 837
-- On FLOAT shift to state 838
-- On EXTERN shift to state 839
-- On ENUM shift to state 840
-- On DOUBLE shift to state 860
-- On DECLSPEC shift to state 288
-- On CONST shift to state 861
-- On CHAR shift to state 862
-- On AUTO shift to state 863
-- On AT_SPECIFIER shift to state 864
-- On ATTRIBUTE shift to state 615
-- On type_spec shift to state 868
-- On decl_spec_list_opt shift to state 875
-- On decl_spec_list shift to state 873
-- On cvspec shift to state 871
-- On attribute_nocv shift to state 874
## Reductions:
-- On error STAR LPAREN IDENT AT_NAME
--   reduce production decl_spec_list_opt ->

State 875:
## Known stack suffix:
## attribute_nocv decl_spec_list_opt
## LR(1) items:
decl_spec_list -> attribute_nocv decl_spec_list_opt . [ error STAR NAMED_TYPE LPAREN IDENT AT_NAME ]
## Transitions:
## Reductions:
-- On error STAR NAMED_TYPE LPAREN IDENT AT_NAME
--   reduce production decl_spec_list -> attribute_nocv decl_spec_list_opt

State 876:
## Known stack suffix:
## AUTO decl_spec_list_opt
## LR(1) items:
decl_spec_list -> AUTO decl_spec_list_opt . [ error STAR NAMED_TYPE LPAREN IDENT AT_NAME ]
## Transitions:
## Reductions:
-- On error STAR NAMED_TYPE LPAREN IDENT AT_NAME
--   reduce production decl_spec_list -> AUTO decl_spec_list_opt

State 877:
## Known stack suffix:
## EXTERN decl_spec_list_opt
## LR(1) items:
decl_spec_list -> EXTERN decl_spec_list_opt . [ error STAR NAMED_TYPE LPAREN IDENT AT_NAME ]
## Transitions:
## Reductions:
-- On error STAR NAMED_TYPE LPAREN IDENT AT_NAME
--   reduce production decl_spec_list -> EXTERN decl_spec_list_opt

State 878:
## Known stack suffix:
## INLINE decl_spec_list_opt
## LR(1) items:
decl_spec_list -> INLINE decl_spec_list_opt . [ error STAR NAMED_TYPE LPAREN IDENT AT_NAME ]
## Transitions:
## Reductions:
-- On error STAR NAMED_TYPE LPAREN IDENT AT_NAME
--   reduce production decl_spec_list -> INLINE decl_spec_list_opt

State 879:
## Known stack suffix:
## REGISTER decl_spec_list_opt
## LR(1) items:
decl_spec_list -> REGISTER decl_spec_list_opt . [ error STAR NAMED_TYPE LPAREN IDENT AT_NAME ]
## Transitions:
## Reductions:
-- On error STAR NAMED_TYPE LPAREN IDENT AT_NAME
--   reduce production decl_spec_list -> REGISTER decl_spec_list_opt

State 880:
## Known stack suffix:
## STATIC decl_spec_list_opt
## LR(1) items:
decl_spec_list -> STATIC decl_spec_list_opt . [ error STAR NAMED_TYPE LPAREN IDENT AT_NAME ]
## Transitions:
## Reductions:
-- On error STAR NAMED_TYPE LPAREN IDENT AT_NAME
--   reduce production decl_spec_list -> STATIC decl_spec_list_opt

State 881:
## Known stack suffix:
## TYPEDEF decl_spec_list_opt
## LR(1) items:
decl_spec_list -> TYPEDEF decl_spec_list_opt . [ error STAR NAMED_TYPE LPAREN IDENT AT_NAME ]
## Transitions:
## Reductions:
-- On error STAR NAMED_TYPE LPAREN IDENT AT_NAME
--   reduce production decl_spec_list -> TYPEDEF decl_spec_list_opt

State 882:
## Known stack suffix:
## IDENT LPAREN old_parameter_list_ne RPAREN old_pardef_list
## LR(1) items:
function_def_start -> IDENT LPAREN old_parameter_list_ne RPAREN old_pardef_list . [ error LBRACE ]
global -> IDENT LPAREN old_parameter_list_ne RPAREN old_pardef_list . SEMICOLON [ error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER RBRACE PRAGMA_LINE PRAGMA NAMED_TYPE MSATTR LONG INT64 INT INLINE IDENT FLOAT EXTERN EOF ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_TRANSFORMEXPR AT_TRANSFORM AT_SPECIFIER ATTRIBUTE ASM # ]
## Transitions:
-- On SEMICOLON shift to state 883
## Reductions:
-- On error LBRACE
--   reduce production function_def_start -> IDENT LPAREN old_parameter_list_ne RPAREN old_pardef_list

State 883:
## Known stack suffix:
## IDENT LPAREN old_parameter_list_ne RPAREN old_pardef_list SEMICOLON
## LR(1) items:
global -> IDENT LPAREN old_parameter_list_ne RPAREN old_pardef_list SEMICOLON . [ error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER RBRACE PRAGMA_LINE PRAGMA NAMED_TYPE MSATTR LONG INT64 INT INLINE IDENT FLOAT EXTERN EOF ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_TRANSFORMEXPR AT_TRANSFORM AT_SPECIFIER ATTRIBUTE ASM # ]
## Transitions:
## Reductions:
-- On error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER RBRACE PRAGMA_LINE PRAGMA NAMED_TYPE MSATTR LONG INT64 INT INLINE IDENT FLOAT EXTERN EOF ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_TRANSFORMEXPR AT_TRANSFORM AT_SPECIFIER ATTRIBUTE ASM #
--   reduce production global -> IDENT LPAREN old_parameter_list_ne RPAREN old_pardef_list SEMICOLON
** End-of-stream conflict on error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER RBRACE PRAGMA_LINE PRAGMA NAMED_TYPE MSATTR LONG INT64 INT INLINE IDENT FLOAT EXTERN EOF ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_TRANSFORMEXPR AT_TRANSFORM AT_SPECIFIER ATTRIBUTE ASM
**   There is a tension between
**   (1) reducing production global -> IDENT LPAREN old_parameter_list_ne RPAREN old_pardef_list SEMICOLON
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 884:
## Known stack suffix:
## decl_spec_list
## LR(1) items:
old_pardef_list -> decl_spec_list . old_pardef SEMICOLON ELLIPSIS [ error SEMICOLON LBRACE ]
old_pardef_list -> decl_spec_list . old_pardef SEMICOLON old_pardef_list [ error SEMICOLON LBRACE ]
## Transitions:
-- On error shift to state 885
-- On STAR shift to state 246
-- On pointer_opt shift to state 474
-- On pointer shift to state 252
-- On old_pardef shift to state 886
-- On declarator shift to state 890
## Reductions:
-- On NAMED_TYPE LPAREN IDENT AT_NAME
--   reduce production pointer_opt ->

State 885:
## Known stack suffix:
## error
## LR(1) items:
old_pardef -> error . [ SEMICOLON ]
## Transitions:
## Reductions:
-- On SEMICOLON
--   reduce production old_pardef -> error

State 886:
## Known stack suffix:
## decl_spec_list old_pardef
## LR(1) items:
old_pardef_list -> decl_spec_list old_pardef . SEMICOLON ELLIPSIS [ error SEMICOLON LBRACE ]
old_pardef_list -> decl_spec_list old_pardef . SEMICOLON old_pardef_list [ error SEMICOLON LBRACE ]
## Transitions:
-- On SEMICOLON shift to state 887
## Reductions:

State 887:
## Known stack suffix:
## decl_spec_list old_pardef SEMICOLON
## LR(1) items:
old_pardef_list -> decl_spec_list old_pardef SEMICOLON . ELLIPSIS [ error SEMICOLON LBRACE ]
old_pardef_list -> decl_spec_list old_pardef SEMICOLON . old_pardef_list [ error SEMICOLON LBRACE ]
## Transitions:
-- On VOLATILE shift to state 780
-- On VOID shift to state 781
-- On UNSIGNED shift to state 782
-- On UNION shift to state 783
-- On TYPEOF shift to state 805
-- On TYPEDEF shift to state 811
-- On THREAD shift to state 285
-- On STRUCT shift to state 812
-- On STATIC shift to state 828
-- On SIGNED shift to state 829
-- On SHORT shift to state 830
-- On RESTRICT shift to state 831
-- On REGISTER shift to state 832
-- On NAMED_TYPE shift to state 833
-- On MSATTR shift to state 287
-- On LONG shift to state 834
-- On INT64 shift to state 835
-- On INT shift to state 836
-- On INLINE shift to state 837
-- On FLOAT shift to state 838
-- On EXTERN shift to state 839
-- On ENUM shift to state 840
-- On ELLIPSIS shift to state 888
-- On DOUBLE shift to state 860
-- On DECLSPEC shift to state 288
-- On CONST shift to state 861
-- On CHAR shift to state 862
-- On AUTO shift to state 863
-- On AT_SPECIFIER shift to state 864
-- On ATTRIBUTE shift to state 615
-- On type_spec shift to state 868
-- On old_pardef_list shift to state 889
-- On decl_spec_list shift to state 884
-- On cvspec shift to state 871
-- On attribute_nocv shift to state 874
## Reductions:
-- On error SEMICOLON LBRACE
--   reduce production old_pardef_list ->

State 888:
## Known stack suffix:
## decl_spec_list old_pardef SEMICOLON ELLIPSIS
## LR(1) items:
old_pardef_list -> decl_spec_list old_pardef SEMICOLON ELLIPSIS . [ error SEMICOLON LBRACE ]
## Transitions:
## Reductions:
-- On error SEMICOLON LBRACE
--   reduce production old_pardef_list -> decl_spec_list old_pardef SEMICOLON ELLIPSIS

State 889:
## Known stack suffix:
## decl_spec_list old_pardef SEMICOLON old_pardef_list
## LR(1) items:
old_pardef_list -> decl_spec_list old_pardef SEMICOLON old_pardef_list . [ error SEMICOLON LBRACE ]
## Transitions:
## Reductions:
-- On error SEMICOLON LBRACE
--   reduce production old_pardef_list -> decl_spec_list old_pardef SEMICOLON old_pardef_list

State 890:
## Known stack suffix:
## declarator
## LR(1) items:
old_pardef -> declarator . [ SEMICOLON ]
old_pardef -> declarator . COMMA old_pardef [ SEMICOLON ]
## Transitions:
-- On COMMA shift to state 891
## Reductions:
-- On SEMICOLON
--   reduce production old_pardef -> declarator

State 891:
## Known stack suffix:
## declarator COMMA
## LR(1) items:
old_pardef -> declarator COMMA . old_pardef [ SEMICOLON ]
## Transitions:
-- On error shift to state 885
-- On STAR shift to state 246
-- On pointer_opt shift to state 474
-- On pointer shift to state 252
-- On old_pardef shift to state 892
-- On declarator shift to state 890
## Reductions:
-- On NAMED_TYPE LPAREN IDENT AT_NAME
--   reduce production pointer_opt ->

State 892:
## Known stack suffix:
## declarator COMMA old_pardef
## LR(1) items:
old_pardef -> declarator COMMA old_pardef . [ SEMICOLON ]
## Transitions:
## Reductions:
-- On SEMICOLON
--   reduce production old_pardef -> declarator COMMA old_pardef

State 893:
## Known stack suffix:
## IDENT parameter_list_startscope
## LR(1) items:
function_def_start -> IDENT parameter_list_startscope . rest_par_list RPAREN [ error LBRACE ]
## Transitions:
-- On VOLATILE shift to state 1
-- On VOID shift to state 2
-- On UNSIGNED shift to state 3
-- On UNION shift to state 4
-- On TYPEOF shift to state 9
-- On TYPEDEF shift to state 11
-- On THREAD shift to state 12
-- On STRUCT shift to state 13
-- On STATIC shift to state 15
-- On SIGNED shift to state 16
-- On SHORT shift to state 17
-- On RESTRICT shift to state 18
-- On REGISTER shift to state 19
-- On NAMED_TYPE shift to state 20
-- On MSATTR shift to state 21
-- On LPAREN shift to state 272
-- On LONG shift to state 22
-- On INT64 shift to state 23
-- On INT shift to state 24
-- On INLINE shift to state 25
-- On FLOAT shift to state 26
-- On EXTERN shift to state 27
-- On ENUM shift to state 28
-- On DOUBLE shift to state 66
-- On DECLSPEC shift to state 67
-- On CONST shift to state 78
-- On CHAR shift to state 79
-- On AUTO shift to state 80
-- On AT_SPECIFIER shift to state 81
-- On ATTRIBUTE shift to state 85
-- On type_spec shift to state 89
-- On rest_par_list shift to state 894
-- On parameter_decl shift to state 635
-- On decl_spec_list shift to state 275
-- On cvspec shift to state 92
-- On attribute_nocv shift to state 95
## Reductions:
-- On RPAREN
--   reduce production rest_par_list ->

State 894:
## Known stack suffix:
## IDENT parameter_list_startscope rest_par_list
## LR(1) items:
function_def_start -> IDENT parameter_list_startscope rest_par_list . RPAREN [ error LBRACE ]
## Transitions:
-- On RPAREN shift to state 895
## Reductions:

State 895:
## Known stack suffix:
## IDENT parameter_list_startscope rest_par_list RPAREN
## LR(1) items:
function_def_start -> IDENT parameter_list_startscope rest_par_list RPAREN . [ error LBRACE ]
## Transitions:
## Reductions:
-- On error LBRACE
--   reduce production function_def_start -> IDENT parameter_list_startscope rest_par_list RPAREN

State 896:
## Known stack suffix:
## EXTERN
## LR(1) items:
decl_spec_list -> EXTERN . decl_spec_list_opt [ STAR SEMICOLON NAMED_TYPE LPAREN IDENT AT_NAME ]
global -> EXTERN . string_constant declaration [ error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER RBRACE PRAGMA_LINE PRAGMA NAMED_TYPE MSATTR LONG INT64 INT INLINE IDENT FLOAT EXTERN EOF ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_TRANSFORMEXPR AT_TRANSFORM AT_SPECIFIER ATTRIBUTE ASM # ]
global -> EXTERN . string_constant LBRACE globals RBRACE [ error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER RBRACE PRAGMA_LINE PRAGMA NAMED_TYPE MSATTR LONG INT64 INT INLINE IDENT FLOAT EXTERN EOF ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_TRANSFORMEXPR AT_TRANSFORM AT_SPECIFIER ATTRIBUTE ASM # ]
## Transitions:
-- On VOLATILE shift to state 1
-- On VOID shift to state 2
-- On UNSIGNED shift to state 3
-- On UNION shift to state 4
-- On TYPEOF shift to state 9
-- On TYPEDEF shift to state 11
-- On THREAD shift to state 12
-- On STRUCT shift to state 13
-- On STATIC shift to state 15
-- On SIGNED shift to state 16
-- On SHORT shift to state 17
-- On RESTRICT shift to state 18
-- On REGISTER shift to state 19
-- On PRETTY_FUNCTION__ shift to state 35
-- On NAMED_TYPE shift to state 20
-- On MSATTR shift to state 21
-- On LONG shift to state 22
-- On INT64 shift to state 23
-- On INT shift to state 24
-- On INLINE shift to state 25
-- On FUNCTION__ shift to state 46
-- On FLOAT shift to state 26
-- On EXTERN shift to state 27
-- On ENUM shift to state 28
-- On DOUBLE shift to state 66
-- On DECLSPEC shift to state 67
-- On CST_STRING shift to state 50
-- On CONST shift to state 78
-- On CHAR shift to state 79
-- On AUTO shift to state 80
-- On AT_SPECIFIER shift to state 81
-- On ATTRIBUTE shift to state 85
-- On type_spec shift to state 89
-- On string_list shift to state 106
-- On string_constant shift to state 897
-- On one_string shift to state 121
-- On decl_spec_list_opt shift to state 712
-- On decl_spec_list shift to state 94
-- On cvspec shift to state 92
-- On attribute_nocv shift to state 95
## Reductions:
-- On STAR SEMICOLON LPAREN IDENT AT_NAME
--   reduce production decl_spec_list_opt ->

State 897:
## Known stack suffix:
## EXTERN string_constant
## LR(1) items:
global -> EXTERN string_constant . declaration [ error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER RBRACE PRAGMA_LINE PRAGMA NAMED_TYPE MSATTR LONG INT64 INT INLINE IDENT FLOAT EXTERN EOF ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_TRANSFORMEXPR AT_TRANSFORM AT_SPECIFIER ATTRIBUTE ASM # ]
global -> EXTERN string_constant . LBRACE globals RBRACE [ error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER RBRACE PRAGMA_LINE PRAGMA NAMED_TYPE MSATTR LONG INT64 INT INLINE IDENT FLOAT EXTERN EOF ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_TRANSFORMEXPR AT_TRANSFORM AT_SPECIFIER ATTRIBUTE ASM # ]
## Transitions:
-- On VOLATILE shift to state 1
-- On VOID shift to state 2
-- On UNSIGNED shift to state 3
-- On UNION shift to state 4
-- On TYPEOF shift to state 9
-- On TYPEDEF shift to state 11
-- On THREAD shift to state 12
-- On STRUCT shift to state 13
-- On STATIC shift to state 15
-- On SIGNED shift to state 16
-- On SHORT shift to state 17
-- On RESTRICT shift to state 18
-- On REGISTER shift to state 19
-- On NAMED_TYPE shift to state 20
-- On MSATTR shift to state 21
-- On LONG shift to state 22
-- On LBRACE shift to state 898
-- On INT64 shift to state 23
-- On INT shift to state 24
-- On INLINE shift to state 25
-- On FLOAT shift to state 26
-- On EXTERN shift to state 27
-- On ENUM shift to state 28
-- On DOUBLE shift to state 66
-- On DECLSPEC shift to state 67
-- On CONST shift to state 78
-- On CHAR shift to state 79
-- On AUTO shift to state 80
-- On AT_SPECIFIER shift to state 81
-- On ATTRIBUTE shift to state 85
-- On type_spec shift to state 89
-- On declaration shift to state 1016
-- On decl_spec_list shift to state 472
-- On cvspec shift to state 92
-- On attribute_nocv shift to state 95
## Reductions:

State 898:
## Known stack suffix:
## EXTERN string_constant LBRACE
## LR(1) items:
global -> EXTERN string_constant LBRACE . globals RBRACE [ error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER RBRACE PRAGMA_LINE PRAGMA NAMED_TYPE MSATTR LONG INT64 INT INLINE IDENT FLOAT EXTERN EOF ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_TRANSFORMEXPR AT_TRANSFORM AT_SPECIFIER ATTRIBUTE ASM # ]
## Transitions:
-- On VOLATILE shift to state 1
-- On VOID shift to state 2
-- On UNSIGNED shift to state 3
-- On UNION shift to state 4
-- On TYPEOF shift to state 9
-- On TYPEDEF shift to state 11
-- On THREAD shift to state 12
-- On STRUCT shift to state 13
-- On STATIC shift to state 15
-- On SIGNED shift to state 16
-- On SHORT shift to state 17
-- On SEMICOLON shift to state 899
-- On RESTRICT shift to state 18
-- On REGISTER shift to state 19
-- On PRAGMA_LINE shift to state 767
-- On PRAGMA shift to state 768
-- On NAMED_TYPE shift to state 20
-- On MSATTR shift to state 21
-- On LONG shift to state 22
-- On INT64 shift to state 23
-- On INT shift to state 24
-- On INLINE shift to state 25
-- On IDENT shift to state 773
-- On FLOAT shift to state 26
-- On EXTERN shift to state 896
-- On ENUM shift to state 28
-- On DOUBLE shift to state 66
-- On DECLSPEC shift to state 67
-- On CONST shift to state 78
-- On CHAR shift to state 79
-- On AUTO shift to state 80
-- On AT_TRANSFORMEXPR shift to state 900
-- On AT_TRANSFORM shift to state 908
-- On AT_SPECIFIER shift to state 81
-- On ATTRIBUTE shift to state 85
-- On ASM shift to state 925
-- On type_spec shift to state 89
-- On location shift to state 930
-- On globals shift to state 1014
-- On global shift to state 935
-- On function_def_start shift to state 937
-- On function_def shift to state 939
-- On declaration shift to state 940
-- On decl_spec_list shift to state 941
-- On cvspec shift to state 92
-- On attribute_nocv shift to state 95
## Reductions:
-- On RBRACE
--   reduce production globals ->
-- On error
--   reduce production location ->

State 899:
## Known stack suffix:
## SEMICOLON
## LR(1) items:
globals -> SEMICOLON . globals [ RBRACE EOF ]
## Transitions:
-- On VOLATILE shift to state 1
-- On VOID shift to state 2
-- On UNSIGNED shift to state 3
-- On UNION shift to state 4
-- On TYPEOF shift to state 9
-- On TYPEDEF shift to state 11
-- On THREAD shift to state 12
-- On STRUCT shift to state 13
-- On STATIC shift to state 15
-- On SIGNED shift to state 16
-- On SHORT shift to state 17
-- On SEMICOLON shift to state 899
-- On RESTRICT shift to state 18
-- On REGISTER shift to state 19
-- On PRAGMA_LINE shift to state 767
-- On PRAGMA shift to state 768
-- On NAMED_TYPE shift to state 20
-- On MSATTR shift to state 21
-- On LONG shift to state 22
-- On INT64 shift to state 23
-- On INT shift to state 24
-- On INLINE shift to state 25
-- On IDENT shift to state 773
-- On FLOAT shift to state 26
-- On EXTERN shift to state 896
-- On ENUM shift to state 28
-- On DOUBLE shift to state 66
-- On DECLSPEC shift to state 67
-- On CONST shift to state 78
-- On CHAR shift to state 79
-- On AUTO shift to state 80
-- On AT_TRANSFORMEXPR shift to state 900
-- On AT_TRANSFORM shift to state 908
-- On AT_SPECIFIER shift to state 81
-- On ATTRIBUTE shift to state 85
-- On ASM shift to state 925
-- On type_spec shift to state 89
-- On location shift to state 930
-- On globals shift to state 1013
-- On global shift to state 935
-- On function_def_start shift to state 937
-- On function_def shift to state 939
-- On declaration shift to state 940
-- On decl_spec_list shift to state 941
-- On cvspec shift to state 92
-- On attribute_nocv shift to state 95
## Reductions:
-- On RBRACE EOF
--   reduce production globals ->
-- On error
--   reduce production location ->

State 900:
## Known stack suffix:
## AT_TRANSFORMEXPR
## LR(1) items:
global -> AT_TRANSFORMEXPR . LBRACE expression RBRACE IDENT LBRACE expression RBRACE [ error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER RBRACE PRAGMA_LINE PRAGMA NAMED_TYPE MSATTR LONG INT64 INT INLINE IDENT FLOAT EXTERN EOF ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_TRANSFORMEXPR AT_TRANSFORM AT_SPECIFIER ATTRIBUTE ASM # ]
## Transitions:
-- On LBRACE shift to state 901
## Reductions:

State 901:
## Known stack suffix:
## AT_TRANSFORMEXPR LBRACE
## LR(1) items:
global -> AT_TRANSFORMEXPR LBRACE . expression RBRACE IDENT LBRACE expression RBRACE [ error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER RBRACE PRAGMA_LINE PRAGMA NAMED_TYPE MSATTR LONG INT64 INT INLINE IDENT FLOAT EXTERN EOF ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_TRANSFORMEXPR AT_TRANSFORM AT_SPECIFIER ATTRIBUTE ASM # ]
## Transitions:
-- On TILDE shift to state 32
-- On STAR shift to state 33
-- On SIZEOF shift to state 34
-- On PRETTY_FUNCTION__ shift to state 35
-- On PLUS_PLUS shift to state 36
-- On PLUS shift to state 37
-- On MINUS_MINUS shift to state 38
-- On MINUS shift to state 39
-- On LPAREN shift to state 40
-- On IDENT shift to state 45
-- On FUNCTION__ shift to state 46
-- On EXCLAM shift to state 47
-- On CST_WSTRING shift to state 48
-- On CST_WCHAR shift to state 49
-- On CST_STRING shift to state 50
-- On CST_INT shift to state 51
-- On CST_FLOAT shift to state 52
-- On CST_CHAR shift to state 53
-- On BUILTIN_VA_ARG shift to state 54
-- On AT_EXPR shift to state 56
-- On AND_AND shift to state 60
-- On AND shift to state 62
-- On ALIGNOF shift to state 63
-- On wstring_list shift to state 98
-- On unary_expression shift to state 101
-- On string_list shift to state 106
-- On string_constant shift to state 108
-- On shift_expression shift to state 109
-- On relational_expression shift to state 116
-- On primary_expression shift to state 111
-- On postfix_expression shift to state 112
-- On paren_comma_expression shift to state 120
-- On one_string shift to state 121
-- On multiplicative_expression shift to state 122
-- On logical_or_expression shift to state 143
-- On logical_and_expression shift to state 147
-- On expression shift to state 902
-- On equality_expression shift to state 149
-- On constant shift to state 124
-- On conditional_expression shift to state 167
-- On cast_expression shift to state 169
-- On bitwise_xor_expression shift to state 154
-- On bitwise_or_expression shift to state 164
-- On bitwise_and_expression shift to state 162
-- On assignment_expression shift to state 192
-- On additive_expression shift to state 136
## Reductions:

State 902:
## Known stack suffix:
## AT_TRANSFORMEXPR LBRACE expression
## LR(1) items:
global -> AT_TRANSFORMEXPR LBRACE expression . RBRACE IDENT LBRACE expression RBRACE [ error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER RBRACE PRAGMA_LINE PRAGMA NAMED_TYPE MSATTR LONG INT64 INT INLINE IDENT FLOAT EXTERN EOF ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_TRANSFORMEXPR AT_TRANSFORM AT_SPECIFIER ATTRIBUTE ASM # ]
## Transitions:
-- On RBRACE shift to state 903
## Reductions:

State 903:
## Known stack suffix:
## AT_TRANSFORMEXPR LBRACE expression RBRACE
## LR(1) items:
global -> AT_TRANSFORMEXPR LBRACE expression RBRACE . IDENT LBRACE expression RBRACE [ error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER RBRACE PRAGMA_LINE PRAGMA NAMED_TYPE MSATTR LONG INT64 INT INLINE IDENT FLOAT EXTERN EOF ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_TRANSFORMEXPR AT_TRANSFORM AT_SPECIFIER ATTRIBUTE ASM # ]
## Transitions:
-- On IDENT shift to state 904
## Reductions:

State 904:
## Known stack suffix:
## AT_TRANSFORMEXPR LBRACE expression RBRACE IDENT
## LR(1) items:
global -> AT_TRANSFORMEXPR LBRACE expression RBRACE IDENT . LBRACE expression RBRACE [ error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER RBRACE PRAGMA_LINE PRAGMA NAMED_TYPE MSATTR LONG INT64 INT INLINE IDENT FLOAT EXTERN EOF ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_TRANSFORMEXPR AT_TRANSFORM AT_SPECIFIER ATTRIBUTE ASM # ]
## Transitions:
-- On LBRACE shift to state 905
## Reductions:

State 905:
## Known stack suffix:
## AT_TRANSFORMEXPR LBRACE expression RBRACE IDENT LBRACE
## LR(1) items:
global -> AT_TRANSFORMEXPR LBRACE expression RBRACE IDENT LBRACE . expression RBRACE [ error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER RBRACE PRAGMA_LINE PRAGMA NAMED_TYPE MSATTR LONG INT64 INT INLINE IDENT FLOAT EXTERN EOF ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_TRANSFORMEXPR AT_TRANSFORM AT_SPECIFIER ATTRIBUTE ASM # ]
## Transitions:
-- On TILDE shift to state 32
-- On STAR shift to state 33
-- On SIZEOF shift to state 34
-- On PRETTY_FUNCTION__ shift to state 35
-- On PLUS_PLUS shift to state 36
-- On PLUS shift to state 37
-- On MINUS_MINUS shift to state 38
-- On MINUS shift to state 39
-- On LPAREN shift to state 40
-- On IDENT shift to state 45
-- On FUNCTION__ shift to state 46
-- On EXCLAM shift to state 47
-- On CST_WSTRING shift to state 48
-- On CST_WCHAR shift to state 49
-- On CST_STRING shift to state 50
-- On CST_INT shift to state 51
-- On CST_FLOAT shift to state 52
-- On CST_CHAR shift to state 53
-- On BUILTIN_VA_ARG shift to state 54
-- On AT_EXPR shift to state 56
-- On AND_AND shift to state 60
-- On AND shift to state 62
-- On ALIGNOF shift to state 63
-- On wstring_list shift to state 98
-- On unary_expression shift to state 101
-- On string_list shift to state 106
-- On string_constant shift to state 108
-- On shift_expression shift to state 109
-- On relational_expression shift to state 116
-- On primary_expression shift to state 111
-- On postfix_expression shift to state 112
-- On paren_comma_expression shift to state 120
-- On one_string shift to state 121
-- On multiplicative_expression shift to state 122
-- On logical_or_expression shift to state 143
-- On logical_and_expression shift to state 147
-- On expression shift to state 906
-- On equality_expression shift to state 149
-- On constant shift to state 124
-- On conditional_expression shift to state 167
-- On cast_expression shift to state 169
-- On bitwise_xor_expression shift to state 154
-- On bitwise_or_expression shift to state 164
-- On bitwise_and_expression shift to state 162
-- On assignment_expression shift to state 192
-- On additive_expression shift to state 136
## Reductions:

State 906:
## Known stack suffix:
## AT_TRANSFORMEXPR LBRACE expression RBRACE IDENT LBRACE expression
## LR(1) items:
global -> AT_TRANSFORMEXPR LBRACE expression RBRACE IDENT LBRACE expression . RBRACE [ error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER RBRACE PRAGMA_LINE PRAGMA NAMED_TYPE MSATTR LONG INT64 INT INLINE IDENT FLOAT EXTERN EOF ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_TRANSFORMEXPR AT_TRANSFORM AT_SPECIFIER ATTRIBUTE ASM # ]
## Transitions:
-- On RBRACE shift to state 907
## Reductions:

State 907:
## Known stack suffix:
## AT_TRANSFORMEXPR LBRACE expression RBRACE IDENT LBRACE expression RBRACE
## LR(1) items:
global -> AT_TRANSFORMEXPR LBRACE expression RBRACE IDENT LBRACE expression RBRACE . [ error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER RBRACE PRAGMA_LINE PRAGMA NAMED_TYPE MSATTR LONG INT64 INT INLINE IDENT FLOAT EXTERN EOF ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_TRANSFORMEXPR AT_TRANSFORM AT_SPECIFIER ATTRIBUTE ASM # ]
## Transitions:
## Reductions:
-- On error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER RBRACE PRAGMA_LINE PRAGMA NAMED_TYPE MSATTR LONG INT64 INT INLINE IDENT FLOAT EXTERN EOF ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_TRANSFORMEXPR AT_TRANSFORM AT_SPECIFIER ATTRIBUTE ASM #
--   reduce production global -> AT_TRANSFORMEXPR LBRACE expression RBRACE IDENT LBRACE expression RBRACE
** End-of-stream conflict on error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER RBRACE PRAGMA_LINE PRAGMA NAMED_TYPE MSATTR LONG INT64 INT INLINE IDENT FLOAT EXTERN EOF ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_TRANSFORMEXPR AT_TRANSFORM AT_SPECIFIER ATTRIBUTE ASM
**   There is a tension between
**   (1) reducing production global -> AT_TRANSFORMEXPR LBRACE expression RBRACE IDENT LBRACE expression RBRACE
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 908:
## Known stack suffix:
## AT_TRANSFORM
## LR(1) items:
global -> AT_TRANSFORM . LBRACE global RBRACE IDENT LBRACE globals RBRACE [ error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER RBRACE PRAGMA_LINE PRAGMA NAMED_TYPE MSATTR LONG INT64 INT INLINE IDENT FLOAT EXTERN EOF ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_TRANSFORMEXPR AT_TRANSFORM AT_SPECIFIER ATTRIBUTE ASM # ]
## Transitions:
-- On LBRACE shift to state 909
## Reductions:

State 909:
## Known stack suffix:
## AT_TRANSFORM LBRACE
## LR(1) items:
global -> AT_TRANSFORM LBRACE . global RBRACE IDENT LBRACE globals RBRACE [ error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER RBRACE PRAGMA_LINE PRAGMA NAMED_TYPE MSATTR LONG INT64 INT INLINE IDENT FLOAT EXTERN EOF ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_TRANSFORMEXPR AT_TRANSFORM AT_SPECIFIER ATTRIBUTE ASM # ]
## Transitions:
-- On VOLATILE shift to state 1
-- On VOID shift to state 2
-- On UNSIGNED shift to state 3
-- On UNION shift to state 4
-- On TYPEOF shift to state 9
-- On TYPEDEF shift to state 11
-- On THREAD shift to state 12
-- On STRUCT shift to state 13
-- On STATIC shift to state 15
-- On SIGNED shift to state 16
-- On SHORT shift to state 17
-- On RESTRICT shift to state 18
-- On REGISTER shift to state 19
-- On PRAGMA_LINE shift to state 910
-- On PRAGMA shift to state 911
-- On NAMED_TYPE shift to state 20
-- On MSATTR shift to state 21
-- On LONG shift to state 22
-- On INT64 shift to state 23
-- On INT shift to state 24
-- On INLINE shift to state 25
-- On IDENT shift to state 916
-- On FLOAT shift to state 26
-- On EXTERN shift to state 922
-- On ENUM shift to state 28
-- On DOUBLE shift to state 66
-- On DECLSPEC shift to state 67
-- On CONST shift to state 78
-- On CHAR shift to state 79
-- On AUTO shift to state 80
-- On AT_TRANSFORMEXPR shift to state 978
-- On AT_TRANSFORM shift to state 986
-- On AT_SPECIFIER shift to state 81
-- On ATTRIBUTE shift to state 85
-- On ASM shift to state 988
-- On type_spec shift to state 89
-- On location shift to state 993
-- On global shift to state 1007
-- On function_def_start shift to state 1002
-- On function_def shift to state 1004
-- On declaration shift to state 1005
-- On decl_spec_list shift to state 1006
-- On cvspec shift to state 92
-- On attribute_nocv shift to state 95
## Reductions:
-- On error
--   reduce production location ->

State 910:
## Known stack suffix:
## PRAGMA_LINE
## LR(1) items:
global -> PRAGMA_LINE . [ RBRACE ]
## Transitions:
## Reductions:
-- On RBRACE
--   reduce production global -> PRAGMA_LINE

State 911:
## Known stack suffix:
## PRAGMA
## LR(1) items:
global -> PRAGMA . attr PRAGMA_EOL [ RBRACE ]
global -> PRAGMA . attr SEMICOLON PRAGMA_EOL [ RBRACE ]
## Transitions:
-- On VOLATILE shift to state 73
-- On TILDE shift to state 74
-- On STAR shift to state 75
-- On SIZEOF shift to state 76
-- On PRETTY_FUNCTION__ shift to state 35
-- On PLUS shift to state 292
-- On NAMED_TYPE shift to state 293
-- On MINUS shift to state 294
-- On LPAREN shift to state 295
-- On IDENT shift to state 296
-- On FUNCTION__ shift to state 46
-- On EXCLAM shift to state 299
-- On DEFAULT shift to state 300
-- On CST_STRING shift to state 50
-- On CST_INT shift to state 303
-- On CONST shift to state 306
-- On AND shift to state 307
-- On ALIGNOF shift to state 308
-- On unary_attr shift to state 541
-- On string_list shift to state 106
-- On string_constant shift to state 542
-- On shift_attr shift to state 551
-- On relational_attr shift to state 568
-- On primary_attr shift to state 543
-- On postfix_attr shift to state 544
-- On one_string shift to state 121
-- On multiplicative_attr shift to state 553
-- On logical_or_attr shift to state 578
-- On logical_and_attr shift to state 597
-- On equality_attr shift to state 582
-- On cast_attr shift to state 560
-- On bitwise_xor_attr shift to state 587
-- On bitwise_or_attr shift to state 596
-- On bitwise_and_attr shift to state 595
-- On attr shift to state 912
-- On additive_attr shift to state 571
## Reductions:

State 912:
## Known stack suffix:
## PRAGMA attr
## LR(1) items:
global -> PRAGMA attr . PRAGMA_EOL [ RBRACE ]
global -> PRAGMA attr . SEMICOLON PRAGMA_EOL [ RBRACE ]
## Transitions:
-- On SEMICOLON shift to state 913
-- On PRAGMA_EOL shift to state 915
## Reductions:

State 913:
## Known stack suffix:
## PRAGMA attr SEMICOLON
## LR(1) items:
global -> PRAGMA attr SEMICOLON . PRAGMA_EOL [ RBRACE ]
## Transitions:
-- On PRAGMA_EOL shift to state 914
## Reductions:

State 914:
## Known stack suffix:
## PRAGMA attr SEMICOLON PRAGMA_EOL
## LR(1) items:
global -> PRAGMA attr SEMICOLON PRAGMA_EOL . [ RBRACE ]
## Transitions:
## Reductions:
-- On RBRACE
--   reduce production global -> PRAGMA attr SEMICOLON PRAGMA_EOL

State 915:
## Known stack suffix:
## PRAGMA attr PRAGMA_EOL
## LR(1) items:
global -> PRAGMA attr PRAGMA_EOL . [ RBRACE ]
## Transitions:
## Reductions:
-- On RBRACE
--   reduce production global -> PRAGMA attr PRAGMA_EOL

State 916:
## Known stack suffix:
## IDENT
## LR(1) items:
function_def_start -> IDENT . parameter_list_startscope rest_par_list RPAREN [ error LBRACE ]
function_def_start -> IDENT . LPAREN old_parameter_list_ne RPAREN old_pardef_list [ error LBRACE ]
function_def_start -> IDENT . LPAREN RPAREN [ error LBRACE ]
global -> IDENT . LPAREN old_parameter_list_ne RPAREN old_pardef_list SEMICOLON [ RBRACE ]
global -> IDENT . LPAREN RPAREN SEMICOLON [ RBRACE ]
## Transitions:
-- On LPAREN shift to state 917
-- On parameter_list_startscope shift to state 893
## Reductions:

State 917:
## Known stack suffix:
## IDENT LPAREN
## LR(1) items:
function_def_start -> IDENT LPAREN . old_parameter_list_ne RPAREN old_pardef_list [ error LBRACE ]
function_def_start -> IDENT LPAREN . RPAREN [ error LBRACE ]
global -> IDENT LPAREN . old_parameter_list_ne RPAREN old_pardef_list SEMICOLON [ RBRACE ]
global -> IDENT LPAREN . RPAREN SEMICOLON [ RBRACE ]
parameter_list_startscope -> LPAREN . [ VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC SIGNED SHORT RPAREN RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG INT64 INT INLINE FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_SPECIFIER ATTRIBUTE ]
## Transitions:
-- On IDENT shift to state 775
-- On old_parameter_list_ne shift to state 918
## Reductions:
-- On VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC SIGNED SHORT RPAREN RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG INT64 INT INLINE FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_SPECIFIER ATTRIBUTE
--   reduce production parameter_list_startscope -> LPAREN

State 918:
## Known stack suffix:
## IDENT LPAREN old_parameter_list_ne
## LR(1) items:
function_def_start -> IDENT LPAREN old_parameter_list_ne . RPAREN old_pardef_list [ error LBRACE ]
global -> IDENT LPAREN old_parameter_list_ne . RPAREN old_pardef_list SEMICOLON [ RBRACE ]
## Transitions:
-- On RPAREN shift to state 919
## Reductions:

State 919:
## Known stack suffix:
## IDENT LPAREN old_parameter_list_ne RPAREN
## LR(1) items:
function_def_start -> IDENT LPAREN old_parameter_list_ne RPAREN . old_pardef_list [ error LBRACE ]
global -> IDENT LPAREN old_parameter_list_ne RPAREN . old_pardef_list SEMICOLON [ RBRACE ]
## Transitions:
-- On VOLATILE shift to state 780
-- On VOID shift to state 781
-- On UNSIGNED shift to state 782
-- On UNION shift to state 783
-- On TYPEOF shift to state 805
-- On TYPEDEF shift to state 811
-- On THREAD shift to state 285
-- On STRUCT shift to state 812
-- On STATIC shift to state 828
-- On SIGNED shift to state 829
-- On SHORT shift to state 830
-- On RESTRICT shift to state 831
-- On REGISTER shift to state 832
-- On NAMED_TYPE shift to state 833
-- On MSATTR shift to state 287
-- On LONG shift to state 834
-- On INT64 shift to state 835
-- On INT shift to state 836
-- On INLINE shift to state 837
-- On FLOAT shift to state 838
-- On EXTERN shift to state 839
-- On ENUM shift to state 840
-- On DOUBLE shift to state 860
-- On DECLSPEC shift to state 288
-- On CONST shift to state 861
-- On CHAR shift to state 862
-- On AUTO shift to state 863
-- On AT_SPECIFIER shift to state 864
-- On ATTRIBUTE shift to state 615
-- On type_spec shift to state 868
-- On old_pardef_list shift to state 920
-- On decl_spec_list shift to state 884
-- On cvspec shift to state 871
-- On attribute_nocv shift to state 874
## Reductions:
-- On error SEMICOLON LBRACE
--   reduce production old_pardef_list ->

State 920:
## Known stack suffix:
## IDENT LPAREN old_parameter_list_ne RPAREN old_pardef_list
## LR(1) items:
function_def_start -> IDENT LPAREN old_parameter_list_ne RPAREN old_pardef_list . [ error LBRACE ]
global -> IDENT LPAREN old_parameter_list_ne RPAREN old_pardef_list . SEMICOLON [ RBRACE ]
## Transitions:
-- On SEMICOLON shift to state 921
## Reductions:
-- On error LBRACE
--   reduce production function_def_start -> IDENT LPAREN old_parameter_list_ne RPAREN old_pardef_list

State 921:
## Known stack suffix:
## IDENT LPAREN old_parameter_list_ne RPAREN old_pardef_list SEMICOLON
## LR(1) items:
global -> IDENT LPAREN old_parameter_list_ne RPAREN old_pardef_list SEMICOLON . [ RBRACE ]
## Transitions:
## Reductions:
-- On RBRACE
--   reduce production global -> IDENT LPAREN old_parameter_list_ne RPAREN old_pardef_list SEMICOLON

State 922:
## Known stack suffix:
## EXTERN
## LR(1) items:
decl_spec_list -> EXTERN . decl_spec_list_opt [ STAR SEMICOLON NAMED_TYPE LPAREN IDENT AT_NAME ]
global -> EXTERN . string_constant declaration [ RBRACE ]
global -> EXTERN . string_constant LBRACE globals RBRACE [ RBRACE ]
## Transitions:
-- On VOLATILE shift to state 1
-- On VOID shift to state 2
-- On UNSIGNED shift to state 3
-- On UNION shift to state 4
-- On TYPEOF shift to state 9
-- On TYPEDEF shift to state 11
-- On THREAD shift to state 12
-- On STRUCT shift to state 13
-- On STATIC shift to state 15
-- On SIGNED shift to state 16
-- On SHORT shift to state 17
-- On RESTRICT shift to state 18
-- On REGISTER shift to state 19
-- On PRETTY_FUNCTION__ shift to state 35
-- On NAMED_TYPE shift to state 20
-- On MSATTR shift to state 21
-- On LONG shift to state 22
-- On INT64 shift to state 23
-- On INT shift to state 24
-- On INLINE shift to state 25
-- On FUNCTION__ shift to state 46
-- On FLOAT shift to state 26
-- On EXTERN shift to state 27
-- On ENUM shift to state 28
-- On DOUBLE shift to state 66
-- On DECLSPEC shift to state 67
-- On CST_STRING shift to state 50
-- On CONST shift to state 78
-- On CHAR shift to state 79
-- On AUTO shift to state 80
-- On AT_SPECIFIER shift to state 81
-- On ATTRIBUTE shift to state 85
-- On type_spec shift to state 89
-- On string_list shift to state 106
-- On string_constant shift to state 923
-- On one_string shift to state 121
-- On decl_spec_list_opt shift to state 712
-- On decl_spec_list shift to state 94
-- On cvspec shift to state 92
-- On attribute_nocv shift to state 95
## Reductions:
-- On STAR SEMICOLON LPAREN IDENT AT_NAME
--   reduce production decl_spec_list_opt ->

State 923:
## Known stack suffix:
## EXTERN string_constant
## LR(1) items:
global -> EXTERN string_constant . declaration [ RBRACE ]
global -> EXTERN string_constant . LBRACE globals RBRACE [ RBRACE ]
## Transitions:
-- On VOLATILE shift to state 1
-- On VOID shift to state 2
-- On UNSIGNED shift to state 3
-- On UNION shift to state 4
-- On TYPEOF shift to state 9
-- On TYPEDEF shift to state 11
-- On THREAD shift to state 12
-- On STRUCT shift to state 13
-- On STATIC shift to state 15
-- On SIGNED shift to state 16
-- On SHORT shift to state 17
-- On RESTRICT shift to state 18
-- On REGISTER shift to state 19
-- On NAMED_TYPE shift to state 20
-- On MSATTR shift to state 21
-- On LONG shift to state 22
-- On LBRACE shift to state 924
-- On INT64 shift to state 23
-- On INT shift to state 24
-- On INLINE shift to state 25
-- On FLOAT shift to state 26
-- On EXTERN shift to state 27
-- On ENUM shift to state 28
-- On DOUBLE shift to state 66
-- On DECLSPEC shift to state 67
-- On CONST shift to state 78
-- On CHAR shift to state 79
-- On AUTO shift to state 80
-- On AT_SPECIFIER shift to state 81
-- On ATTRIBUTE shift to state 85
-- On type_spec shift to state 89
-- On declaration shift to state 973
-- On decl_spec_list shift to state 974
-- On cvspec shift to state 92
-- On attribute_nocv shift to state 95
## Reductions:

State 924:
## Known stack suffix:
## EXTERN string_constant LBRACE
## LR(1) items:
global -> EXTERN string_constant LBRACE . globals RBRACE [ RBRACE ]
## Transitions:
-- On VOLATILE shift to state 1
-- On VOID shift to state 2
-- On UNSIGNED shift to state 3
-- On UNION shift to state 4
-- On TYPEOF shift to state 9
-- On TYPEDEF shift to state 11
-- On THREAD shift to state 12
-- On STRUCT shift to state 13
-- On STATIC shift to state 15
-- On SIGNED shift to state 16
-- On SHORT shift to state 17
-- On SEMICOLON shift to state 899
-- On RESTRICT shift to state 18
-- On REGISTER shift to state 19
-- On PRAGMA_LINE shift to state 767
-- On PRAGMA shift to state 768
-- On NAMED_TYPE shift to state 20
-- On MSATTR shift to state 21
-- On LONG shift to state 22
-- On INT64 shift to state 23
-- On INT shift to state 24
-- On INLINE shift to state 25
-- On IDENT shift to state 773
-- On FLOAT shift to state 26
-- On EXTERN shift to state 896
-- On ENUM shift to state 28
-- On DOUBLE shift to state 66
-- On DECLSPEC shift to state 67
-- On CONST shift to state 78
-- On CHAR shift to state 79
-- On AUTO shift to state 80
-- On AT_TRANSFORMEXPR shift to state 900
-- On AT_TRANSFORM shift to state 908
-- On AT_SPECIFIER shift to state 81
-- On ATTRIBUTE shift to state 85
-- On ASM shift to state 925
-- On type_spec shift to state 89
-- On location shift to state 930
-- On globals shift to state 933
-- On global shift to state 935
-- On function_def_start shift to state 937
-- On function_def shift to state 939
-- On declaration shift to state 940
-- On decl_spec_list shift to state 941
-- On cvspec shift to state 92
-- On attribute_nocv shift to state 95
## Reductions:
-- On RBRACE
--   reduce production globals ->
-- On error
--   reduce production location ->

State 925:
## Known stack suffix:
## ASM
## LR(1) items:
global -> ASM . LPAREN string_constant RPAREN SEMICOLON [ error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER RBRACE PRAGMA_LINE PRAGMA NAMED_TYPE MSATTR LONG INT64 INT INLINE IDENT FLOAT EXTERN EOF ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_TRANSFORMEXPR AT_TRANSFORM AT_SPECIFIER ATTRIBUTE ASM # ]
## Transitions:
-- On LPAREN shift to state 926
## Reductions:

State 926:
## Known stack suffix:
## ASM LPAREN
## LR(1) items:
global -> ASM LPAREN . string_constant RPAREN SEMICOLON [ error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER RBRACE PRAGMA_LINE PRAGMA NAMED_TYPE MSATTR LONG INT64 INT INLINE IDENT FLOAT EXTERN EOF ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_TRANSFORMEXPR AT_TRANSFORM AT_SPECIFIER ATTRIBUTE ASM # ]
## Transitions:
-- On PRETTY_FUNCTION__ shift to state 35
-- On FUNCTION__ shift to state 46
-- On CST_STRING shift to state 50
-- On string_list shift to state 106
-- On string_constant shift to state 927
-- On one_string shift to state 121
## Reductions:

State 927:
## Known stack suffix:
## ASM LPAREN string_constant
## LR(1) items:
global -> ASM LPAREN string_constant . RPAREN SEMICOLON [ error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER RBRACE PRAGMA_LINE PRAGMA NAMED_TYPE MSATTR LONG INT64 INT INLINE IDENT FLOAT EXTERN EOF ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_TRANSFORMEXPR AT_TRANSFORM AT_SPECIFIER ATTRIBUTE ASM # ]
## Transitions:
-- On RPAREN shift to state 928
## Reductions:

State 928:
## Known stack suffix:
## ASM LPAREN string_constant RPAREN
## LR(1) items:
global -> ASM LPAREN string_constant RPAREN . SEMICOLON [ error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER RBRACE PRAGMA_LINE PRAGMA NAMED_TYPE MSATTR LONG INT64 INT INLINE IDENT FLOAT EXTERN EOF ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_TRANSFORMEXPR AT_TRANSFORM AT_SPECIFIER ATTRIBUTE ASM # ]
## Transitions:
-- On SEMICOLON shift to state 929
## Reductions:

State 929:
## Known stack suffix:
## ASM LPAREN string_constant RPAREN SEMICOLON
## LR(1) items:
global -> ASM LPAREN string_constant RPAREN SEMICOLON . [ error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER RBRACE PRAGMA_LINE PRAGMA NAMED_TYPE MSATTR LONG INT64 INT INLINE IDENT FLOAT EXTERN EOF ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_TRANSFORMEXPR AT_TRANSFORM AT_SPECIFIER ATTRIBUTE ASM # ]
## Transitions:
## Reductions:
-- On error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER RBRACE PRAGMA_LINE PRAGMA NAMED_TYPE MSATTR LONG INT64 INT INLINE IDENT FLOAT EXTERN EOF ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_TRANSFORMEXPR AT_TRANSFORM AT_SPECIFIER ATTRIBUTE ASM #
--   reduce production global -> ASM LPAREN string_constant RPAREN SEMICOLON
** End-of-stream conflict on error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER RBRACE PRAGMA_LINE PRAGMA NAMED_TYPE MSATTR LONG INT64 INT INLINE IDENT FLOAT EXTERN EOF ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_TRANSFORMEXPR AT_TRANSFORM AT_SPECIFIER ATTRIBUTE ASM
**   There is a tension between
**   (1) reducing production global -> ASM LPAREN string_constant RPAREN SEMICOLON
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 930:
## Known stack suffix:
## location
## LR(1) items:
global -> location . error SEMICOLON [ error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER RBRACE PRAGMA_LINE PRAGMA NAMED_TYPE MSATTR LONG INT64 INT INLINE IDENT FLOAT EXTERN EOF ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_TRANSFORMEXPR AT_TRANSFORM AT_SPECIFIER ATTRIBUTE ASM # ]
## Transitions:
-- On error shift to state 931
## Reductions:

State 931:
## Known stack suffix:
## location error
## LR(1) items:
global -> location error . SEMICOLON [ error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER RBRACE PRAGMA_LINE PRAGMA NAMED_TYPE MSATTR LONG INT64 INT INLINE IDENT FLOAT EXTERN EOF ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_TRANSFORMEXPR AT_TRANSFORM AT_SPECIFIER ATTRIBUTE ASM # ]
## Transitions:
-- On SEMICOLON shift to state 932
## Reductions:

State 932:
## Known stack suffix:
## location error SEMICOLON
## LR(1) items:
global -> location error SEMICOLON . [ error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER RBRACE PRAGMA_LINE PRAGMA NAMED_TYPE MSATTR LONG INT64 INT INLINE IDENT FLOAT EXTERN EOF ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_TRANSFORMEXPR AT_TRANSFORM AT_SPECIFIER ATTRIBUTE ASM # ]
## Transitions:
## Reductions:
-- On error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER RBRACE PRAGMA_LINE PRAGMA NAMED_TYPE MSATTR LONG INT64 INT INLINE IDENT FLOAT EXTERN EOF ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_TRANSFORMEXPR AT_TRANSFORM AT_SPECIFIER ATTRIBUTE ASM #
--   reduce production global -> location error SEMICOLON
** End-of-stream conflict on error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER RBRACE PRAGMA_LINE PRAGMA NAMED_TYPE MSATTR LONG INT64 INT INLINE IDENT FLOAT EXTERN EOF ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_TRANSFORMEXPR AT_TRANSFORM AT_SPECIFIER ATTRIBUTE ASM
**   There is a tension between
**   (1) reducing production global -> location error SEMICOLON
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 933:
## Known stack suffix:
## EXTERN string_constant LBRACE globals
## LR(1) items:
global -> EXTERN string_constant LBRACE globals . RBRACE [ RBRACE ]
## Transitions:
-- On RBRACE shift to state 934
## Reductions:

State 934:
## Known stack suffix:
## EXTERN string_constant LBRACE globals RBRACE
## LR(1) items:
global -> EXTERN string_constant LBRACE globals RBRACE . [ RBRACE ]
## Transitions:
## Reductions:
-- On RBRACE
--   reduce production global -> EXTERN string_constant LBRACE globals RBRACE

State 935:
## Known stack suffix:
## global
## LR(1) items:
globals -> global . globals [ RBRACE EOF ]
## Transitions:
-- On VOLATILE shift to state 1
-- On VOID shift to state 2
-- On UNSIGNED shift to state 3
-- On UNION shift to state 4
-- On TYPEOF shift to state 9
-- On TYPEDEF shift to state 11
-- On THREAD shift to state 12
-- On STRUCT shift to state 13
-- On STATIC shift to state 15
-- On SIGNED shift to state 16
-- On SHORT shift to state 17
-- On SEMICOLON shift to state 899
-- On RESTRICT shift to state 18
-- On REGISTER shift to state 19
-- On PRAGMA_LINE shift to state 767
-- On PRAGMA shift to state 768
-- On NAMED_TYPE shift to state 20
-- On MSATTR shift to state 21
-- On LONG shift to state 22
-- On INT64 shift to state 23
-- On INT shift to state 24
-- On INLINE shift to state 25
-- On IDENT shift to state 773
-- On FLOAT shift to state 26
-- On EXTERN shift to state 896
-- On ENUM shift to state 28
-- On DOUBLE shift to state 66
-- On DECLSPEC shift to state 67
-- On CONST shift to state 78
-- On CHAR shift to state 79
-- On AUTO shift to state 80
-- On AT_TRANSFORMEXPR shift to state 900
-- On AT_TRANSFORM shift to state 908
-- On AT_SPECIFIER shift to state 81
-- On ATTRIBUTE shift to state 85
-- On ASM shift to state 925
-- On type_spec shift to state 89
-- On location shift to state 930
-- On globals shift to state 936
-- On global shift to state 935
-- On function_def_start shift to state 937
-- On function_def shift to state 939
-- On declaration shift to state 940
-- On decl_spec_list shift to state 941
-- On cvspec shift to state 92
-- On attribute_nocv shift to state 95
## Reductions:
-- On RBRACE EOF
--   reduce production globals ->
-- On error
--   reduce production location ->

State 936:
## Known stack suffix:
## global globals
## LR(1) items:
globals -> global globals . [ RBRACE EOF ]
## Transitions:
## Reductions:
-- On RBRACE EOF
--   reduce production globals -> global globals

State 937:
## Known stack suffix:
## function_def_start
## LR(1) items:
function_def -> function_def_start . block [ error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER RBRACE PRAGMA_LINE PRAGMA NAMED_TYPE MSATTR LONG INT64 INT INLINE IDENT FLOAT EXTERN EOF ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_TRANSFORMEXPR AT_TRANSFORM AT_SPECIFIER ATTRIBUTE ASM # ]
## Transitions:
-- On error shift to state 343
-- On LBRACE shift to state 65
-- On block_begin shift to state 345
-- On block shift to state 938
## Reductions:

State 938:
## Known stack suffix:
## function_def_start block
## LR(1) items:
function_def -> function_def_start block . [ error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER RBRACE PRAGMA_LINE PRAGMA NAMED_TYPE MSATTR LONG INT64 INT INLINE IDENT FLOAT EXTERN EOF ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_TRANSFORMEXPR AT_TRANSFORM AT_SPECIFIER ATTRIBUTE ASM # ]
## Transitions:
## Reductions:
-- On error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER RBRACE PRAGMA_LINE PRAGMA NAMED_TYPE MSATTR LONG INT64 INT INLINE IDENT FLOAT EXTERN EOF ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_TRANSFORMEXPR AT_TRANSFORM AT_SPECIFIER ATTRIBUTE ASM #
--   reduce production function_def -> function_def_start block
** End-of-stream conflict on error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER RBRACE PRAGMA_LINE PRAGMA NAMED_TYPE MSATTR LONG INT64 INT INLINE IDENT FLOAT EXTERN EOF ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_TRANSFORMEXPR AT_TRANSFORM AT_SPECIFIER ATTRIBUTE ASM
**   There is a tension between
**   (1) reducing production function_def -> function_def_start block
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 939:
## Known stack suffix:
## function_def
## LR(1) items:
global -> function_def . [ error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER RBRACE PRAGMA_LINE PRAGMA NAMED_TYPE MSATTR LONG INT64 INT INLINE IDENT FLOAT EXTERN EOF ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_TRANSFORMEXPR AT_TRANSFORM AT_SPECIFIER ATTRIBUTE ASM # ]
## Transitions:
## Reductions:
-- On error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER RBRACE PRAGMA_LINE PRAGMA NAMED_TYPE MSATTR LONG INT64 INT INLINE IDENT FLOAT EXTERN EOF ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_TRANSFORMEXPR AT_TRANSFORM AT_SPECIFIER ATTRIBUTE ASM #
--   reduce production global -> function_def
** End-of-stream conflict on error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER RBRACE PRAGMA_LINE PRAGMA NAMED_TYPE MSATTR LONG INT64 INT INLINE IDENT FLOAT EXTERN EOF ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_TRANSFORMEXPR AT_TRANSFORM AT_SPECIFIER ATTRIBUTE ASM
**   There is a tension between
**   (1) reducing production global -> function_def
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 940:
## Known stack suffix:
## declaration
## LR(1) items:
global -> declaration . [ error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER RBRACE PRAGMA_LINE PRAGMA NAMED_TYPE MSATTR LONG INT64 INT INLINE IDENT FLOAT EXTERN EOF ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_TRANSFORMEXPR AT_TRANSFORM AT_SPECIFIER ATTRIBUTE ASM # ]
## Transitions:
## Reductions:
-- On error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER RBRACE PRAGMA_LINE PRAGMA NAMED_TYPE MSATTR LONG INT64 INT INLINE IDENT FLOAT EXTERN EOF ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_TRANSFORMEXPR AT_TRANSFORM AT_SPECIFIER ATTRIBUTE ASM #
--   reduce production global -> declaration
** End-of-stream conflict on error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER RBRACE PRAGMA_LINE PRAGMA NAMED_TYPE MSATTR LONG INT64 INT INLINE IDENT FLOAT EXTERN EOF ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_TRANSFORMEXPR AT_TRANSFORM AT_SPECIFIER ATTRIBUTE ASM
**   There is a tension between
**   (1) reducing production global -> declaration
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 941:
## Known stack suffix:
## decl_spec_list
## LR(1) items:
declaration -> decl_spec_list . init_declarator_list SEMICOLON [ error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER RBRACE PRAGMA_LINE PRAGMA NAMED_TYPE MSATTR LONG INT64 INT INLINE IDENT FLOAT EXTERN EOF ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_TRANSFORMEXPR AT_TRANSFORM AT_SPECIFIER ATTRIBUTE ASM # ]
declaration -> decl_spec_list . SEMICOLON [ error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER RBRACE PRAGMA_LINE PRAGMA NAMED_TYPE MSATTR LONG INT64 INT INLINE IDENT FLOAT EXTERN EOF ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_TRANSFORMEXPR AT_TRANSFORM AT_SPECIFIER ATTRIBUTE ASM # ]
function_def_start -> decl_spec_list . declarator [ error LBRACE ]
function_def_start -> decl_spec_list . old_proto_decl [ error LBRACE ]
## Transitions:
-- On STAR shift to state 246
-- On SEMICOLON shift to state 473
-- On pointer_opt shift to state 942
-- On pointer shift to state 252
-- On old_proto_decl shift to state 971
-- On init_declarator_list shift to state 477
-- On init_declarator shift to state 479
-- On declarator shift to state 972
## Reductions:
-- On NAMED_TYPE LPAREN IDENT AT_NAME
--   reduce production pointer_opt ->

State 942:
## Known stack suffix:
## pointer_opt
## LR(1) items:
declarator -> pointer_opt . direct_decl attributes_with_asm [ error SEMICOLON LBRACE EQ COMMA ]
old_proto_decl -> pointer_opt . direct_old_proto_decl [ error LBRACE ]
## Transitions:
-- On NAMED_TYPE shift to state 784
-- On LPAREN shift to state 943
-- On IDENT shift to state 788
-- On AT_NAME shift to state 789
-- On id_or_typename shift to state 947
-- On direct_old_proto_decl shift to state 948
-- On direct_decl shift to state 949
## Reductions:

State 943:
## Known stack suffix:
## LPAREN
## LR(1) items:
direct_decl -> LPAREN . attributes declarator RPAREN [ error VOLATILE THREAD SEMICOLON RESTRICT MSATTR LPAREN LBRACKET LBRACE EQ DECLSPEC CONST COMMA ATTRIBUTE ASM ]
## Transitions:
-- On VOLATILE shift to state 247
-- On THREAD shift to state 12
-- On RESTRICT shift to state 248
-- On MSATTR shift to state 21
-- On DECLSPEC shift to state 67
-- On CONST shift to state 249
-- On ATTRIBUTE shift to state 85
-- On attributes shift to state 944
-- On attribute_nocv shift to state 253
-- On attribute shift to state 254
## Reductions:
-- On STAR NAMED_TYPE LPAREN IDENT AT_NAME
--   reduce production attributes ->

State 944:
## Known stack suffix:
## LPAREN attributes
## LR(1) items:
direct_decl -> LPAREN attributes . declarator RPAREN [ error VOLATILE THREAD SEMICOLON RESTRICT MSATTR LPAREN LBRACKET LBRACE EQ DECLSPEC CONST COMMA ATTRIBUTE ASM ]
## Transitions:
-- On STAR shift to state 246
-- On pointer_opt shift to state 474
-- On pointer shift to state 252
-- On declarator shift to state 945
## Reductions:
-- On NAMED_TYPE LPAREN IDENT AT_NAME
--   reduce production pointer_opt ->

State 945:
## Known stack suffix:
## LPAREN attributes declarator
## LR(1) items:
direct_decl -> LPAREN attributes declarator . RPAREN [ error VOLATILE THREAD SEMICOLON RESTRICT MSATTR LPAREN LBRACKET LBRACE EQ DECLSPEC CONST COMMA ATTRIBUTE ASM ]
## Transitions:
-- On RPAREN shift to state 946
## Reductions:

State 946:
## Known stack suffix:
## LPAREN attributes declarator RPAREN
## LR(1) items:
direct_decl -> LPAREN attributes declarator RPAREN . [ error VOLATILE THREAD SEMICOLON RESTRICT MSATTR LPAREN LBRACKET LBRACE EQ DECLSPEC CONST COMMA ATTRIBUTE ASM ]
## Transitions:
## Reductions:
-- On error VOLATILE THREAD SEMICOLON RESTRICT MSATTR LPAREN LBRACKET LBRACE EQ DECLSPEC CONST COMMA ATTRIBUTE ASM
--   reduce production direct_decl -> LPAREN attributes declarator RPAREN

State 947:
## Known stack suffix:
## id_or_typename
## LR(1) items:
direct_decl -> id_or_typename . [ error VOLATILE THREAD SEMICOLON RESTRICT MSATTR LPAREN LBRACKET LBRACE EQ DECLSPEC CONST COMMA ATTRIBUTE ASM ]
## Transitions:
## Reductions:
-- On error VOLATILE THREAD SEMICOLON RESTRICT MSATTR LPAREN LBRACKET LBRACE EQ DECLSPEC CONST COMMA ATTRIBUTE ASM
--   reduce production direct_decl -> id_or_typename

State 948:
## Known stack suffix:
## pointer_opt direct_old_proto_decl
## LR(1) items:
old_proto_decl -> pointer_opt direct_old_proto_decl . [ error LBRACE ]
## Transitions:
## Reductions:
-- On error LBRACE
--   reduce production old_proto_decl -> pointer_opt direct_old_proto_decl

State 949:
## Known stack suffix:
## pointer_opt direct_decl
## LR(1) items:
declarator -> pointer_opt direct_decl . attributes_with_asm [ error SEMICOLON LBRACE EQ COMMA ]
direct_decl -> direct_decl . LBRACKET attributes comma_expression_opt RBRACKET [ error VOLATILE THREAD SEMICOLON RESTRICT MSATTR LPAREN LBRACKET LBRACE EQ DECLSPEC CONST COMMA ATTRIBUTE ASM ]
direct_decl -> direct_decl . LBRACKET attributes error RBRACKET [ error VOLATILE THREAD SEMICOLON RESTRICT MSATTR LPAREN LBRACKET LBRACE EQ DECLSPEC CONST COMMA ATTRIBUTE ASM ]
direct_decl -> direct_decl . parameter_list_startscope rest_par_list RPAREN [ error VOLATILE THREAD SEMICOLON RESTRICT MSATTR LPAREN LBRACKET LBRACE EQ DECLSPEC CONST COMMA ATTRIBUTE ASM ]
direct_old_proto_decl -> direct_decl . LPAREN old_parameter_list_ne RPAREN old_pardef_list [ error LBRACE ]
direct_old_proto_decl -> direct_decl . LPAREN RPAREN [ error LBRACE ]
## Transitions:
-- On VOLATILE shift to state 284
-- On THREAD shift to state 285
-- On RESTRICT shift to state 286
-- On MSATTR shift to state 287
-- On LPAREN shift to state 950
-- On LBRACKET shift to state 954
-- On DECLSPEC shift to state 288
-- On CONST shift to state 614
-- On ATTRIBUTE shift to state 615
-- On ASM shift to state 960
-- On parameter_list_startscope shift to state 965
-- On attributes_with_asm shift to state 968
-- On attribute_nocv shift to state 624
-- On attribute shift to state 969
## Reductions:
-- On error SEMICOLON LBRACE EQ COMMA
--   reduce production attributes_with_asm ->

State 950:
## Known stack suffix:
## direct_decl LPAREN
## LR(1) items:
direct_old_proto_decl -> direct_decl LPAREN . old_parameter_list_ne RPAREN old_pardef_list [ error LBRACE ]
direct_old_proto_decl -> direct_decl LPAREN . RPAREN [ error LBRACE ]
parameter_list_startscope -> LPAREN . [ VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC SIGNED SHORT RPAREN RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG INT64 INT INLINE FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_SPECIFIER ATTRIBUTE ]
## Transitions:
-- On IDENT shift to state 775
-- On old_parameter_list_ne shift to state 951
## Reductions:
-- On VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC SIGNED SHORT RPAREN RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG INT64 INT INLINE FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_SPECIFIER ATTRIBUTE
--   reduce production parameter_list_startscope -> LPAREN

State 951:
## Known stack suffix:
## direct_decl LPAREN old_parameter_list_ne
## LR(1) items:
direct_old_proto_decl -> direct_decl LPAREN old_parameter_list_ne . RPAREN old_pardef_list [ error LBRACE ]
## Transitions:
-- On RPAREN shift to state 952
## Reductions:

State 952:
## Known stack suffix:
## direct_decl LPAREN old_parameter_list_ne RPAREN
## LR(1) items:
direct_old_proto_decl -> direct_decl LPAREN old_parameter_list_ne RPAREN . old_pardef_list [ error LBRACE ]
## Transitions:
-- On VOLATILE shift to state 780
-- On VOID shift to state 781
-- On UNSIGNED shift to state 782
-- On UNION shift to state 783
-- On TYPEOF shift to state 805
-- On TYPEDEF shift to state 811
-- On THREAD shift to state 285
-- On STRUCT shift to state 812
-- On STATIC shift to state 828
-- On SIGNED shift to state 829
-- On SHORT shift to state 830
-- On RESTRICT shift to state 831
-- On REGISTER shift to state 832
-- On NAMED_TYPE shift to state 833
-- On MSATTR shift to state 287
-- On LONG shift to state 834
-- On INT64 shift to state 835
-- On INT shift to state 836
-- On INLINE shift to state 837
-- On FLOAT shift to state 838
-- On EXTERN shift to state 839
-- On ENUM shift to state 840
-- On DOUBLE shift to state 860
-- On DECLSPEC shift to state 288
-- On CONST shift to state 861
-- On CHAR shift to state 862
-- On AUTO shift to state 863
-- On AT_SPECIFIER shift to state 864
-- On ATTRIBUTE shift to state 615
-- On type_spec shift to state 868
-- On old_pardef_list shift to state 953
-- On decl_spec_list shift to state 884
-- On cvspec shift to state 871
-- On attribute_nocv shift to state 874
## Reductions:
-- On error LBRACE
--   reduce production old_pardef_list ->

State 953:
## Known stack suffix:
## direct_decl LPAREN old_parameter_list_ne RPAREN old_pardef_list
## LR(1) items:
direct_old_proto_decl -> direct_decl LPAREN old_parameter_list_ne RPAREN old_pardef_list . [ error LBRACE ]
## Transitions:
## Reductions:
-- On error LBRACE
--   reduce production direct_old_proto_decl -> direct_decl LPAREN old_parameter_list_ne RPAREN old_pardef_list

State 954:
## Known stack suffix:
## direct_decl LBRACKET
## LR(1) items:
direct_decl -> direct_decl LBRACKET . attributes comma_expression_opt RBRACKET [ error VOLATILE THREAD SEMICOLON RESTRICT MSATTR LPAREN LBRACKET LBRACE EQ DECLSPEC CONST COMMA ATTRIBUTE ASM ]
direct_decl -> direct_decl LBRACKET . attributes error RBRACKET [ error VOLATILE THREAD SEMICOLON RESTRICT MSATTR LPAREN LBRACKET LBRACE EQ DECLSPEC CONST COMMA ATTRIBUTE ASM ]
## Transitions:
-- On VOLATILE shift to state 284
-- On THREAD shift to state 285
-- On RESTRICT shift to state 286
-- On MSATTR shift to state 287
-- On DECLSPEC shift to state 288
-- On CONST shift to state 614
-- On ATTRIBUTE shift to state 615
-- On attributes shift to state 955
-- On attribute_nocv shift to state 624
-- On attribute shift to state 625
## Reductions:
-- On error TILDE STAR SIZEOF RBRACKET PRETTY_FUNCTION__ PLUS_PLUS PLUS MINUS_MINUS MINUS LPAREN IDENT FUNCTION__ EXCLAM CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR BUILTIN_VA_ARG AT_EXPR AND_AND AND ALIGNOF
--   reduce production attributes ->

State 955:
## Known stack suffix:
## direct_decl LBRACKET attributes
## LR(1) items:
direct_decl -> direct_decl LBRACKET attributes . comma_expression_opt RBRACKET [ error VOLATILE THREAD SEMICOLON RESTRICT MSATTR LPAREN LBRACKET LBRACE EQ DECLSPEC CONST COMMA ATTRIBUTE ASM ]
direct_decl -> direct_decl LBRACKET attributes . error RBRACKET [ error VOLATILE THREAD SEMICOLON RESTRICT MSATTR LPAREN LBRACKET LBRACE EQ DECLSPEC CONST COMMA ATTRIBUTE ASM ]
## Transitions:
-- On error shift to state 956
-- On TILDE shift to state 32
-- On STAR shift to state 33
-- On SIZEOF shift to state 34
-- On PRETTY_FUNCTION__ shift to state 35
-- On PLUS_PLUS shift to state 36
-- On PLUS shift to state 37
-- On MINUS_MINUS shift to state 38
-- On MINUS shift to state 39
-- On LPAREN shift to state 40
-- On IDENT shift to state 45
-- On FUNCTION__ shift to state 46
-- On EXCLAM shift to state 47
-- On CST_WSTRING shift to state 48
-- On CST_WCHAR shift to state 49
-- On CST_STRING shift to state 50
-- On CST_INT shift to state 51
-- On CST_FLOAT shift to state 52
-- On CST_CHAR shift to state 53
-- On BUILTIN_VA_ARG shift to state 54
-- On AT_EXPR shift to state 56
-- On AND_AND shift to state 60
-- On AND shift to state 62
-- On ALIGNOF shift to state 63
-- On wstring_list shift to state 98
-- On unary_expression shift to state 101
-- On string_list shift to state 106
-- On string_constant shift to state 108
-- On shift_expression shift to state 109
-- On relational_expression shift to state 116
-- On primary_expression shift to state 111
-- On postfix_expression shift to state 112
-- On paren_comma_expression shift to state 120
-- On one_string shift to state 121
-- On multiplicative_expression shift to state 122
-- On logical_or_expression shift to state 143
-- On logical_and_expression shift to state 147
-- On expression shift to state 165
-- On equality_expression shift to state 149
-- On constant shift to state 124
-- On conditional_expression shift to state 167
-- On comma_expression_opt shift to state 958
-- On comma_expression shift to state 268
-- On cast_expression shift to state 169
-- On bitwise_xor_expression shift to state 154
-- On bitwise_or_expression shift to state 164
-- On bitwise_and_expression shift to state 162
-- On assignment_expression shift to state 192
-- On additive_expression shift to state 136
## Reductions:
-- On RBRACKET
--   reduce production comma_expression_opt ->

State 956:
## Known stack suffix:
## direct_decl LBRACKET attributes error
## LR(1) items:
comma_expression -> error . COMMA comma_expression [ RBRACKET ]
direct_decl -> direct_decl LBRACKET attributes error . RBRACKET [ error VOLATILE THREAD SEMICOLON RESTRICT MSATTR LPAREN LBRACKET LBRACE EQ DECLSPEC CONST COMMA ATTRIBUTE ASM ]
## Transitions:
-- On RBRACKET shift to state 957
-- On COMMA shift to state 43
## Reductions:

State 957:
## Known stack suffix:
## direct_decl LBRACKET attributes error RBRACKET
## LR(1) items:
direct_decl -> direct_decl LBRACKET attributes error RBRACKET . [ error VOLATILE THREAD SEMICOLON RESTRICT MSATTR LPAREN LBRACKET LBRACE EQ DECLSPEC CONST COMMA ATTRIBUTE ASM ]
## Transitions:
## Reductions:
-- On error VOLATILE THREAD SEMICOLON RESTRICT MSATTR LPAREN LBRACKET LBRACE EQ DECLSPEC CONST COMMA ATTRIBUTE ASM
--   reduce production direct_decl -> direct_decl LBRACKET attributes error RBRACKET

State 958:
## Known stack suffix:
## direct_decl LBRACKET attributes comma_expression_opt
## LR(1) items:
direct_decl -> direct_decl LBRACKET attributes comma_expression_opt . RBRACKET [ error VOLATILE THREAD SEMICOLON RESTRICT MSATTR LPAREN LBRACKET LBRACE EQ DECLSPEC CONST COMMA ATTRIBUTE ASM ]
## Transitions:
-- On RBRACKET shift to state 959
## Reductions:

State 959:
## Known stack suffix:
## direct_decl LBRACKET attributes comma_expression_opt RBRACKET
## LR(1) items:
direct_decl -> direct_decl LBRACKET attributes comma_expression_opt RBRACKET . [ error VOLATILE THREAD SEMICOLON RESTRICT MSATTR LPAREN LBRACKET LBRACE EQ DECLSPEC CONST COMMA ATTRIBUTE ASM ]
## Transitions:
## Reductions:
-- On error VOLATILE THREAD SEMICOLON RESTRICT MSATTR LPAREN LBRACKET LBRACE EQ DECLSPEC CONST COMMA ATTRIBUTE ASM
--   reduce production direct_decl -> direct_decl LBRACKET attributes comma_expression_opt RBRACKET

State 960:
## Known stack suffix:
## ASM
## LR(1) items:
attributes_with_asm -> ASM . LPAREN string_constant RPAREN attributes [ error SEMICOLON LBRACE EQ COMMA ]
## Transitions:
-- On LPAREN shift to state 961
## Reductions:

State 961:
## Known stack suffix:
## ASM LPAREN
## LR(1) items:
attributes_with_asm -> ASM LPAREN . string_constant RPAREN attributes [ error SEMICOLON LBRACE EQ COMMA ]
## Transitions:
-- On PRETTY_FUNCTION__ shift to state 35
-- On FUNCTION__ shift to state 46
-- On CST_STRING shift to state 50
-- On string_list shift to state 106
-- On string_constant shift to state 962
-- On one_string shift to state 121
## Reductions:

State 962:
## Known stack suffix:
## ASM LPAREN string_constant
## LR(1) items:
attributes_with_asm -> ASM LPAREN string_constant . RPAREN attributes [ error SEMICOLON LBRACE EQ COMMA ]
## Transitions:
-- On RPAREN shift to state 963
## Reductions:

State 963:
## Known stack suffix:
## ASM LPAREN string_constant RPAREN
## LR(1) items:
attributes_with_asm -> ASM LPAREN string_constant RPAREN . attributes [ error SEMICOLON LBRACE EQ COMMA ]
## Transitions:
-- On VOLATILE shift to state 284
-- On THREAD shift to state 285
-- On RESTRICT shift to state 286
-- On MSATTR shift to state 287
-- On DECLSPEC shift to state 288
-- On CONST shift to state 614
-- On ATTRIBUTE shift to state 615
-- On attributes shift to state 964
-- On attribute_nocv shift to state 624
-- On attribute shift to state 625
## Reductions:
-- On error SEMICOLON LBRACE EQ COMMA
--   reduce production attributes ->

State 964:
## Known stack suffix:
## ASM LPAREN string_constant RPAREN attributes
## LR(1) items:
attributes_with_asm -> ASM LPAREN string_constant RPAREN attributes . [ error SEMICOLON LBRACE EQ COMMA ]
## Transitions:
## Reductions:
-- On error SEMICOLON LBRACE EQ COMMA
--   reduce production attributes_with_asm -> ASM LPAREN string_constant RPAREN attributes

State 965:
## Known stack suffix:
## direct_decl parameter_list_startscope
## LR(1) items:
direct_decl -> direct_decl parameter_list_startscope . rest_par_list RPAREN [ error VOLATILE THREAD SEMICOLON RESTRICT MSATTR LPAREN LBRACKET LBRACE EQ DECLSPEC CONST COMMA ATTRIBUTE ASM ]
## Transitions:
-- On VOLATILE shift to state 1
-- On VOID shift to state 2
-- On UNSIGNED shift to state 3
-- On UNION shift to state 4
-- On TYPEOF shift to state 9
-- On TYPEDEF shift to state 11
-- On THREAD shift to state 12
-- On STRUCT shift to state 13
-- On STATIC shift to state 15
-- On SIGNED shift to state 16
-- On SHORT shift to state 17
-- On RESTRICT shift to state 18
-- On REGISTER shift to state 19
-- On NAMED_TYPE shift to state 20
-- On MSATTR shift to state 21
-- On LPAREN shift to state 272
-- On LONG shift to state 22
-- On INT64 shift to state 23
-- On INT shift to state 24
-- On INLINE shift to state 25
-- On FLOAT shift to state 26
-- On EXTERN shift to state 27
-- On ENUM shift to state 28
-- On DOUBLE shift to state 66
-- On DECLSPEC shift to state 67
-- On CONST shift to state 78
-- On CHAR shift to state 79
-- On AUTO shift to state 80
-- On AT_SPECIFIER shift to state 81
-- On ATTRIBUTE shift to state 85
-- On type_spec shift to state 89
-- On rest_par_list shift to state 966
-- On parameter_decl shift to state 635
-- On decl_spec_list shift to state 275
-- On cvspec shift to state 92
-- On attribute_nocv shift to state 95
## Reductions:
-- On RPAREN
--   reduce production rest_par_list ->

State 966:
## Known stack suffix:
## direct_decl parameter_list_startscope rest_par_list
## LR(1) items:
direct_decl -> direct_decl parameter_list_startscope rest_par_list . RPAREN [ error VOLATILE THREAD SEMICOLON RESTRICT MSATTR LPAREN LBRACKET LBRACE EQ DECLSPEC CONST COMMA ATTRIBUTE ASM ]
## Transitions:
-- On RPAREN shift to state 967
## Reductions:

State 967:
## Known stack suffix:
## direct_decl parameter_list_startscope rest_par_list RPAREN
## LR(1) items:
direct_decl -> direct_decl parameter_list_startscope rest_par_list RPAREN . [ error VOLATILE THREAD SEMICOLON RESTRICT MSATTR LPAREN LBRACKET LBRACE EQ DECLSPEC CONST COMMA ATTRIBUTE ASM ]
## Transitions:
## Reductions:
-- On error VOLATILE THREAD SEMICOLON RESTRICT MSATTR LPAREN LBRACKET LBRACE EQ DECLSPEC CONST COMMA ATTRIBUTE ASM
--   reduce production direct_decl -> direct_decl parameter_list_startscope rest_par_list RPAREN

State 968:
## Known stack suffix:
## pointer_opt direct_decl attributes_with_asm
## LR(1) items:
declarator -> pointer_opt direct_decl attributes_with_asm . [ error SEMICOLON LBRACE EQ COMMA ]
## Transitions:
## Reductions:
-- On error SEMICOLON LBRACE EQ COMMA
--   reduce production declarator -> pointer_opt direct_decl attributes_with_asm

State 969:
## Known stack suffix:
## attribute
## LR(1) items:
attributes_with_asm -> attribute . attributes_with_asm [ error SEMICOLON LBRACE EQ COMMA ]
## Transitions:
-- On VOLATILE shift to state 284
-- On THREAD shift to state 285
-- On RESTRICT shift to state 286
-- On MSATTR shift to state 287
-- On DECLSPEC shift to state 288
-- On CONST shift to state 614
-- On ATTRIBUTE shift to state 615
-- On ASM shift to state 960
-- On attributes_with_asm shift to state 970
-- On attribute_nocv shift to state 624
-- On attribute shift to state 969
## Reductions:
-- On error SEMICOLON LBRACE EQ COMMA
--   reduce production attributes_with_asm ->

State 970:
## Known stack suffix:
## attribute attributes_with_asm
## LR(1) items:
attributes_with_asm -> attribute attributes_with_asm . [ error SEMICOLON LBRACE EQ COMMA ]
## Transitions:
## Reductions:
-- On error SEMICOLON LBRACE EQ COMMA
--   reduce production attributes_with_asm -> attribute attributes_with_asm

State 971:
## Known stack suffix:
## decl_spec_list old_proto_decl
## LR(1) items:
function_def_start -> decl_spec_list old_proto_decl . [ error LBRACE ]
## Transitions:
## Reductions:
-- On error LBRACE
--   reduce production function_def_start -> decl_spec_list old_proto_decl

State 972:
## Known stack suffix:
## decl_spec_list declarator
## LR(1) items:
function_def_start -> decl_spec_list declarator . [ error LBRACE ]
init_declarator -> declarator . [ SEMICOLON COMMA ]
init_declarator -> declarator . EQ init_expression [ SEMICOLON COMMA ]
## Transitions:
-- On EQ shift to state 483
## Reductions:
-- On error LBRACE
--   reduce production function_def_start -> decl_spec_list declarator
-- On SEMICOLON COMMA
--   reduce production init_declarator -> declarator

State 973:
## Known stack suffix:
## EXTERN string_constant declaration
## LR(1) items:
global -> EXTERN string_constant declaration . [ RBRACE ]
## Transitions:
## Reductions:
-- On RBRACE
--   reduce production global -> EXTERN string_constant declaration

State 974:
## Known stack suffix:
## decl_spec_list
## LR(1) items:
declaration -> decl_spec_list . init_declarator_list SEMICOLON [ RBRACE ]
declaration -> decl_spec_list . SEMICOLON [ RBRACE ]
## Transitions:
-- On STAR shift to state 246
-- On SEMICOLON shift to state 975
-- On pointer_opt shift to state 474
-- On pointer shift to state 252
-- On init_declarator_list shift to state 976
-- On init_declarator shift to state 479
-- On declarator shift to state 482
## Reductions:
-- On NAMED_TYPE LPAREN IDENT AT_NAME
--   reduce production pointer_opt ->

State 975:
## Known stack suffix:
## decl_spec_list SEMICOLON
## LR(1) items:
declaration -> decl_spec_list SEMICOLON . [ RBRACE ]
## Transitions:
## Reductions:
-- On RBRACE
--   reduce production declaration -> decl_spec_list SEMICOLON

State 976:
## Known stack suffix:
## decl_spec_list init_declarator_list
## LR(1) items:
declaration -> decl_spec_list init_declarator_list . SEMICOLON [ RBRACE ]
## Transitions:
-- On SEMICOLON shift to state 977
## Reductions:

State 977:
## Known stack suffix:
## decl_spec_list init_declarator_list SEMICOLON
## LR(1) items:
declaration -> decl_spec_list init_declarator_list SEMICOLON . [ RBRACE ]
## Transitions:
## Reductions:
-- On RBRACE
--   reduce production declaration -> decl_spec_list init_declarator_list SEMICOLON

State 978:
## Known stack suffix:
## AT_TRANSFORMEXPR
## LR(1) items:
global -> AT_TRANSFORMEXPR . LBRACE expression RBRACE IDENT LBRACE expression RBRACE [ RBRACE ]
## Transitions:
-- On LBRACE shift to state 979
## Reductions:

State 979:
## Known stack suffix:
## AT_TRANSFORMEXPR LBRACE
## LR(1) items:
global -> AT_TRANSFORMEXPR LBRACE . expression RBRACE IDENT LBRACE expression RBRACE [ RBRACE ]
## Transitions:
-- On TILDE shift to state 32
-- On STAR shift to state 33
-- On SIZEOF shift to state 34
-- On PRETTY_FUNCTION__ shift to state 35
-- On PLUS_PLUS shift to state 36
-- On PLUS shift to state 37
-- On MINUS_MINUS shift to state 38
-- On MINUS shift to state 39
-- On LPAREN shift to state 40
-- On IDENT shift to state 45
-- On FUNCTION__ shift to state 46
-- On EXCLAM shift to state 47
-- On CST_WSTRING shift to state 48
-- On CST_WCHAR shift to state 49
-- On CST_STRING shift to state 50
-- On CST_INT shift to state 51
-- On CST_FLOAT shift to state 52
-- On CST_CHAR shift to state 53
-- On BUILTIN_VA_ARG shift to state 54
-- On AT_EXPR shift to state 56
-- On AND_AND shift to state 60
-- On AND shift to state 62
-- On ALIGNOF shift to state 63
-- On wstring_list shift to state 98
-- On unary_expression shift to state 101
-- On string_list shift to state 106
-- On string_constant shift to state 108
-- On shift_expression shift to state 109
-- On relational_expression shift to state 116
-- On primary_expression shift to state 111
-- On postfix_expression shift to state 112
-- On paren_comma_expression shift to state 120
-- On one_string shift to state 121
-- On multiplicative_expression shift to state 122
-- On logical_or_expression shift to state 143
-- On logical_and_expression shift to state 147
-- On expression shift to state 980
-- On equality_expression shift to state 149
-- On constant shift to state 124
-- On conditional_expression shift to state 167
-- On cast_expression shift to state 169
-- On bitwise_xor_expression shift to state 154
-- On bitwise_or_expression shift to state 164
-- On bitwise_and_expression shift to state 162
-- On assignment_expression shift to state 192
-- On additive_expression shift to state 136
## Reductions:

State 980:
## Known stack suffix:
## AT_TRANSFORMEXPR LBRACE expression
## LR(1) items:
global -> AT_TRANSFORMEXPR LBRACE expression . RBRACE IDENT LBRACE expression RBRACE [ RBRACE ]
## Transitions:
-- On RBRACE shift to state 981
## Reductions:

State 981:
## Known stack suffix:
## AT_TRANSFORMEXPR LBRACE expression RBRACE
## LR(1) items:
global -> AT_TRANSFORMEXPR LBRACE expression RBRACE . IDENT LBRACE expression RBRACE [ RBRACE ]
## Transitions:
-- On IDENT shift to state 982
## Reductions:

State 982:
## Known stack suffix:
## AT_TRANSFORMEXPR LBRACE expression RBRACE IDENT
## LR(1) items:
global -> AT_TRANSFORMEXPR LBRACE expression RBRACE IDENT . LBRACE expression RBRACE [ RBRACE ]
## Transitions:
-- On LBRACE shift to state 983
## Reductions:

State 983:
## Known stack suffix:
## AT_TRANSFORMEXPR LBRACE expression RBRACE IDENT LBRACE
## LR(1) items:
global -> AT_TRANSFORMEXPR LBRACE expression RBRACE IDENT LBRACE . expression RBRACE [ RBRACE ]
## Transitions:
-- On TILDE shift to state 32
-- On STAR shift to state 33
-- On SIZEOF shift to state 34
-- On PRETTY_FUNCTION__ shift to state 35
-- On PLUS_PLUS shift to state 36
-- On PLUS shift to state 37
-- On MINUS_MINUS shift to state 38
-- On MINUS shift to state 39
-- On LPAREN shift to state 40
-- On IDENT shift to state 45
-- On FUNCTION__ shift to state 46
-- On EXCLAM shift to state 47
-- On CST_WSTRING shift to state 48
-- On CST_WCHAR shift to state 49
-- On CST_STRING shift to state 50
-- On CST_INT shift to state 51
-- On CST_FLOAT shift to state 52
-- On CST_CHAR shift to state 53
-- On BUILTIN_VA_ARG shift to state 54
-- On AT_EXPR shift to state 56
-- On AND_AND shift to state 60
-- On AND shift to state 62
-- On ALIGNOF shift to state 63
-- On wstring_list shift to state 98
-- On unary_expression shift to state 101
-- On string_list shift to state 106
-- On string_constant shift to state 108
-- On shift_expression shift to state 109
-- On relational_expression shift to state 116
-- On primary_expression shift to state 111
-- On postfix_expression shift to state 112
-- On paren_comma_expression shift to state 120
-- On one_string shift to state 121
-- On multiplicative_expression shift to state 122
-- On logical_or_expression shift to state 143
-- On logical_and_expression shift to state 147
-- On expression shift to state 984
-- On equality_expression shift to state 149
-- On constant shift to state 124
-- On conditional_expression shift to state 167
-- On cast_expression shift to state 169
-- On bitwise_xor_expression shift to state 154
-- On bitwise_or_expression shift to state 164
-- On bitwise_and_expression shift to state 162
-- On assignment_expression shift to state 192
-- On additive_expression shift to state 136
## Reductions:

State 984:
## Known stack suffix:
## AT_TRANSFORMEXPR LBRACE expression RBRACE IDENT LBRACE expression
## LR(1) items:
global -> AT_TRANSFORMEXPR LBRACE expression RBRACE IDENT LBRACE expression . RBRACE [ RBRACE ]
## Transitions:
-- On RBRACE shift to state 985
## Reductions:

State 985:
## Known stack suffix:
## AT_TRANSFORMEXPR LBRACE expression RBRACE IDENT LBRACE expression RBRACE
## LR(1) items:
global -> AT_TRANSFORMEXPR LBRACE expression RBRACE IDENT LBRACE expression RBRACE . [ RBRACE ]
## Transitions:
## Reductions:
-- On RBRACE
--   reduce production global -> AT_TRANSFORMEXPR LBRACE expression RBRACE IDENT LBRACE expression RBRACE

State 986:
## Known stack suffix:
## AT_TRANSFORM
## LR(1) items:
global -> AT_TRANSFORM . LBRACE global RBRACE IDENT LBRACE globals RBRACE [ RBRACE ]
## Transitions:
-- On LBRACE shift to state 987
## Reductions:

State 987:
## Known stack suffix:
## AT_TRANSFORM LBRACE
## LR(1) items:
global -> AT_TRANSFORM LBRACE . global RBRACE IDENT LBRACE globals RBRACE [ RBRACE ]
## Transitions:
-- On VOLATILE shift to state 1
-- On VOID shift to state 2
-- On UNSIGNED shift to state 3
-- On UNION shift to state 4
-- On TYPEOF shift to state 9
-- On TYPEDEF shift to state 11
-- On THREAD shift to state 12
-- On STRUCT shift to state 13
-- On STATIC shift to state 15
-- On SIGNED shift to state 16
-- On SHORT shift to state 17
-- On RESTRICT shift to state 18
-- On REGISTER shift to state 19
-- On PRAGMA_LINE shift to state 910
-- On PRAGMA shift to state 911
-- On NAMED_TYPE shift to state 20
-- On MSATTR shift to state 21
-- On LONG shift to state 22
-- On INT64 shift to state 23
-- On INT shift to state 24
-- On INLINE shift to state 25
-- On IDENT shift to state 916
-- On FLOAT shift to state 26
-- On EXTERN shift to state 922
-- On ENUM shift to state 28
-- On DOUBLE shift to state 66
-- On DECLSPEC shift to state 67
-- On CONST shift to state 78
-- On CHAR shift to state 79
-- On AUTO shift to state 80
-- On AT_TRANSFORMEXPR shift to state 978
-- On AT_TRANSFORM shift to state 986
-- On AT_SPECIFIER shift to state 81
-- On ATTRIBUTE shift to state 85
-- On ASM shift to state 988
-- On type_spec shift to state 89
-- On location shift to state 993
-- On global shift to state 996
-- On function_def_start shift to state 1002
-- On function_def shift to state 1004
-- On declaration shift to state 1005
-- On decl_spec_list shift to state 1006
-- On cvspec shift to state 92
-- On attribute_nocv shift to state 95
## Reductions:
-- On error
--   reduce production location ->

State 988:
## Known stack suffix:
## ASM
## LR(1) items:
global -> ASM . LPAREN string_constant RPAREN SEMICOLON [ RBRACE ]
## Transitions:
-- On LPAREN shift to state 989
## Reductions:

State 989:
## Known stack suffix:
## ASM LPAREN
## LR(1) items:
global -> ASM LPAREN . string_constant RPAREN SEMICOLON [ RBRACE ]
## Transitions:
-- On PRETTY_FUNCTION__ shift to state 35
-- On FUNCTION__ shift to state 46
-- On CST_STRING shift to state 50
-- On string_list shift to state 106
-- On string_constant shift to state 990
-- On one_string shift to state 121
## Reductions:

State 990:
## Known stack suffix:
## ASM LPAREN string_constant
## LR(1) items:
global -> ASM LPAREN string_constant . RPAREN SEMICOLON [ RBRACE ]
## Transitions:
-- On RPAREN shift to state 991
## Reductions:

State 991:
## Known stack suffix:
## ASM LPAREN string_constant RPAREN
## LR(1) items:
global -> ASM LPAREN string_constant RPAREN . SEMICOLON [ RBRACE ]
## Transitions:
-- On SEMICOLON shift to state 992
## Reductions:

State 992:
## Known stack suffix:
## ASM LPAREN string_constant RPAREN SEMICOLON
## LR(1) items:
global -> ASM LPAREN string_constant RPAREN SEMICOLON . [ RBRACE ]
## Transitions:
## Reductions:
-- On RBRACE
--   reduce production global -> ASM LPAREN string_constant RPAREN SEMICOLON

State 993:
## Known stack suffix:
## location
## LR(1) items:
global -> location . error SEMICOLON [ RBRACE ]
## Transitions:
-- On error shift to state 994
## Reductions:

State 994:
## Known stack suffix:
## location error
## LR(1) items:
global -> location error . SEMICOLON [ RBRACE ]
## Transitions:
-- On SEMICOLON shift to state 995
## Reductions:

State 995:
## Known stack suffix:
## location error SEMICOLON
## LR(1) items:
global -> location error SEMICOLON . [ RBRACE ]
## Transitions:
## Reductions:
-- On RBRACE
--   reduce production global -> location error SEMICOLON

State 996:
## Known stack suffix:
## AT_TRANSFORM LBRACE global
## LR(1) items:
global -> AT_TRANSFORM LBRACE global . RBRACE IDENT LBRACE globals RBRACE [ RBRACE ]
## Transitions:
-- On RBRACE shift to state 997
## Reductions:

State 997:
## Known stack suffix:
## AT_TRANSFORM LBRACE global RBRACE
## LR(1) items:
global -> AT_TRANSFORM LBRACE global RBRACE . IDENT LBRACE globals RBRACE [ RBRACE ]
## Transitions:
-- On IDENT shift to state 998
## Reductions:

State 998:
## Known stack suffix:
## AT_TRANSFORM LBRACE global RBRACE IDENT
## LR(1) items:
global -> AT_TRANSFORM LBRACE global RBRACE IDENT . LBRACE globals RBRACE [ RBRACE ]
## Transitions:
-- On LBRACE shift to state 999
## Reductions:

State 999:
## Known stack suffix:
## AT_TRANSFORM LBRACE global RBRACE IDENT LBRACE
## LR(1) items:
global -> AT_TRANSFORM LBRACE global RBRACE IDENT LBRACE . globals RBRACE [ RBRACE ]
## Transitions:
-- On VOLATILE shift to state 1
-- On VOID shift to state 2
-- On UNSIGNED shift to state 3
-- On UNION shift to state 4
-- On TYPEOF shift to state 9
-- On TYPEDEF shift to state 11
-- On THREAD shift to state 12
-- On STRUCT shift to state 13
-- On STATIC shift to state 15
-- On SIGNED shift to state 16
-- On SHORT shift to state 17
-- On SEMICOLON shift to state 899
-- On RESTRICT shift to state 18
-- On REGISTER shift to state 19
-- On PRAGMA_LINE shift to state 767
-- On PRAGMA shift to state 768
-- On NAMED_TYPE shift to state 20
-- On MSATTR shift to state 21
-- On LONG shift to state 22
-- On INT64 shift to state 23
-- On INT shift to state 24
-- On INLINE shift to state 25
-- On IDENT shift to state 773
-- On FLOAT shift to state 26
-- On EXTERN shift to state 896
-- On ENUM shift to state 28
-- On DOUBLE shift to state 66
-- On DECLSPEC shift to state 67
-- On CONST shift to state 78
-- On CHAR shift to state 79
-- On AUTO shift to state 80
-- On AT_TRANSFORMEXPR shift to state 900
-- On AT_TRANSFORM shift to state 908
-- On AT_SPECIFIER shift to state 81
-- On ATTRIBUTE shift to state 85
-- On ASM shift to state 925
-- On type_spec shift to state 89
-- On location shift to state 930
-- On globals shift to state 1000
-- On global shift to state 935
-- On function_def_start shift to state 937
-- On function_def shift to state 939
-- On declaration shift to state 940
-- On decl_spec_list shift to state 941
-- On cvspec shift to state 92
-- On attribute_nocv shift to state 95
## Reductions:
-- On RBRACE
--   reduce production globals ->
-- On error
--   reduce production location ->

State 1000:
## Known stack suffix:
## AT_TRANSFORM LBRACE global RBRACE IDENT LBRACE globals
## LR(1) items:
global -> AT_TRANSFORM LBRACE global RBRACE IDENT LBRACE globals . RBRACE [ RBRACE ]
## Transitions:
-- On RBRACE shift to state 1001
## Reductions:

State 1001:
## Known stack suffix:
## AT_TRANSFORM LBRACE global RBRACE IDENT LBRACE globals RBRACE
## LR(1) items:
global -> AT_TRANSFORM LBRACE global RBRACE IDENT LBRACE globals RBRACE . [ RBRACE ]
## Transitions:
## Reductions:
-- On RBRACE
--   reduce production global -> AT_TRANSFORM LBRACE global RBRACE IDENT LBRACE globals RBRACE

State 1002:
## Known stack suffix:
## function_def_start
## LR(1) items:
function_def -> function_def_start . block [ RBRACE ]
## Transitions:
-- On error shift to state 338
-- On LBRACE shift to state 65
-- On block_begin shift to state 314
-- On block shift to state 1003
## Reductions:

State 1003:
## Known stack suffix:
## function_def_start block
## LR(1) items:
function_def -> function_def_start block . [ RBRACE ]
## Transitions:
## Reductions:
-- On RBRACE
--   reduce production function_def -> function_def_start block

State 1004:
## Known stack suffix:
## function_def
## LR(1) items:
global -> function_def . [ RBRACE ]
## Transitions:
## Reductions:
-- On RBRACE
--   reduce production global -> function_def

State 1005:
## Known stack suffix:
## declaration
## LR(1) items:
global -> declaration . [ RBRACE ]
## Transitions:
## Reductions:
-- On RBRACE
--   reduce production global -> declaration

State 1006:
## Known stack suffix:
## decl_spec_list
## LR(1) items:
declaration -> decl_spec_list . init_declarator_list SEMICOLON [ RBRACE ]
declaration -> decl_spec_list . SEMICOLON [ RBRACE ]
function_def_start -> decl_spec_list . declarator [ error LBRACE ]
function_def_start -> decl_spec_list . old_proto_decl [ error LBRACE ]
## Transitions:
-- On STAR shift to state 246
-- On SEMICOLON shift to state 975
-- On pointer_opt shift to state 942
-- On pointer shift to state 252
-- On old_proto_decl shift to state 971
-- On init_declarator_list shift to state 976
-- On init_declarator shift to state 479
-- On declarator shift to state 972
## Reductions:
-- On NAMED_TYPE LPAREN IDENT AT_NAME
--   reduce production pointer_opt ->

State 1007:
## Known stack suffix:
## AT_TRANSFORM LBRACE global
## LR(1) items:
global -> AT_TRANSFORM LBRACE global . RBRACE IDENT LBRACE globals RBRACE [ error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER RBRACE PRAGMA_LINE PRAGMA NAMED_TYPE MSATTR LONG INT64 INT INLINE IDENT FLOAT EXTERN EOF ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_TRANSFORMEXPR AT_TRANSFORM AT_SPECIFIER ATTRIBUTE ASM # ]
## Transitions:
-- On RBRACE shift to state 1008
## Reductions:

State 1008:
## Known stack suffix:
## AT_TRANSFORM LBRACE global RBRACE
## LR(1) items:
global -> AT_TRANSFORM LBRACE global RBRACE . IDENT LBRACE globals RBRACE [ error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER RBRACE PRAGMA_LINE PRAGMA NAMED_TYPE MSATTR LONG INT64 INT INLINE IDENT FLOAT EXTERN EOF ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_TRANSFORMEXPR AT_TRANSFORM AT_SPECIFIER ATTRIBUTE ASM # ]
## Transitions:
-- On IDENT shift to state 1009
## Reductions:

State 1009:
## Known stack suffix:
## AT_TRANSFORM LBRACE global RBRACE IDENT
## LR(1) items:
global -> AT_TRANSFORM LBRACE global RBRACE IDENT . LBRACE globals RBRACE [ error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER RBRACE PRAGMA_LINE PRAGMA NAMED_TYPE MSATTR LONG INT64 INT INLINE IDENT FLOAT EXTERN EOF ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_TRANSFORMEXPR AT_TRANSFORM AT_SPECIFIER ATTRIBUTE ASM # ]
## Transitions:
-- On LBRACE shift to state 1010
## Reductions:

State 1010:
## Known stack suffix:
## AT_TRANSFORM LBRACE global RBRACE IDENT LBRACE
## LR(1) items:
global -> AT_TRANSFORM LBRACE global RBRACE IDENT LBRACE . globals RBRACE [ error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER RBRACE PRAGMA_LINE PRAGMA NAMED_TYPE MSATTR LONG INT64 INT INLINE IDENT FLOAT EXTERN EOF ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_TRANSFORMEXPR AT_TRANSFORM AT_SPECIFIER ATTRIBUTE ASM # ]
## Transitions:
-- On VOLATILE shift to state 1
-- On VOID shift to state 2
-- On UNSIGNED shift to state 3
-- On UNION shift to state 4
-- On TYPEOF shift to state 9
-- On TYPEDEF shift to state 11
-- On THREAD shift to state 12
-- On STRUCT shift to state 13
-- On STATIC shift to state 15
-- On SIGNED shift to state 16
-- On SHORT shift to state 17
-- On SEMICOLON shift to state 899
-- On RESTRICT shift to state 18
-- On REGISTER shift to state 19
-- On PRAGMA_LINE shift to state 767
-- On PRAGMA shift to state 768
-- On NAMED_TYPE shift to state 20
-- On MSATTR shift to state 21
-- On LONG shift to state 22
-- On INT64 shift to state 23
-- On INT shift to state 24
-- On INLINE shift to state 25
-- On IDENT shift to state 773
-- On FLOAT shift to state 26
-- On EXTERN shift to state 896
-- On ENUM shift to state 28
-- On DOUBLE shift to state 66
-- On DECLSPEC shift to state 67
-- On CONST shift to state 78
-- On CHAR shift to state 79
-- On AUTO shift to state 80
-- On AT_TRANSFORMEXPR shift to state 900
-- On AT_TRANSFORM shift to state 908
-- On AT_SPECIFIER shift to state 81
-- On ATTRIBUTE shift to state 85
-- On ASM shift to state 925
-- On type_spec shift to state 89
-- On location shift to state 930
-- On globals shift to state 1011
-- On global shift to state 935
-- On function_def_start shift to state 937
-- On function_def shift to state 939
-- On declaration shift to state 940
-- On decl_spec_list shift to state 941
-- On cvspec shift to state 92
-- On attribute_nocv shift to state 95
## Reductions:
-- On RBRACE
--   reduce production globals ->
-- On error
--   reduce production location ->

State 1011:
## Known stack suffix:
## AT_TRANSFORM LBRACE global RBRACE IDENT LBRACE globals
## LR(1) items:
global -> AT_TRANSFORM LBRACE global RBRACE IDENT LBRACE globals . RBRACE [ error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER RBRACE PRAGMA_LINE PRAGMA NAMED_TYPE MSATTR LONG INT64 INT INLINE IDENT FLOAT EXTERN EOF ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_TRANSFORMEXPR AT_TRANSFORM AT_SPECIFIER ATTRIBUTE ASM # ]
## Transitions:
-- On RBRACE shift to state 1012
## Reductions:

State 1012:
## Known stack suffix:
## AT_TRANSFORM LBRACE global RBRACE IDENT LBRACE globals RBRACE
## LR(1) items:
global -> AT_TRANSFORM LBRACE global RBRACE IDENT LBRACE globals RBRACE . [ error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER RBRACE PRAGMA_LINE PRAGMA NAMED_TYPE MSATTR LONG INT64 INT INLINE IDENT FLOAT EXTERN EOF ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_TRANSFORMEXPR AT_TRANSFORM AT_SPECIFIER ATTRIBUTE ASM # ]
## Transitions:
## Reductions:
-- On error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER RBRACE PRAGMA_LINE PRAGMA NAMED_TYPE MSATTR LONG INT64 INT INLINE IDENT FLOAT EXTERN EOF ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_TRANSFORMEXPR AT_TRANSFORM AT_SPECIFIER ATTRIBUTE ASM #
--   reduce production global -> AT_TRANSFORM LBRACE global RBRACE IDENT LBRACE globals RBRACE
** End-of-stream conflict on error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER RBRACE PRAGMA_LINE PRAGMA NAMED_TYPE MSATTR LONG INT64 INT INLINE IDENT FLOAT EXTERN EOF ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_TRANSFORMEXPR AT_TRANSFORM AT_SPECIFIER ATTRIBUTE ASM
**   There is a tension between
**   (1) reducing production global -> AT_TRANSFORM LBRACE global RBRACE IDENT LBRACE globals RBRACE
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 1013:
## Known stack suffix:
## SEMICOLON globals
## LR(1) items:
globals -> SEMICOLON globals . [ RBRACE EOF ]
## Transitions:
## Reductions:
-- On RBRACE EOF
--   reduce production globals -> SEMICOLON globals

State 1014:
## Known stack suffix:
## EXTERN string_constant LBRACE globals
## LR(1) items:
global -> EXTERN string_constant LBRACE globals . RBRACE [ error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER RBRACE PRAGMA_LINE PRAGMA NAMED_TYPE MSATTR LONG INT64 INT INLINE IDENT FLOAT EXTERN EOF ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_TRANSFORMEXPR AT_TRANSFORM AT_SPECIFIER ATTRIBUTE ASM # ]
## Transitions:
-- On RBRACE shift to state 1015
## Reductions:

State 1015:
## Known stack suffix:
## EXTERN string_constant LBRACE globals RBRACE
## LR(1) items:
global -> EXTERN string_constant LBRACE globals RBRACE . [ error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER RBRACE PRAGMA_LINE PRAGMA NAMED_TYPE MSATTR LONG INT64 INT INLINE IDENT FLOAT EXTERN EOF ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_TRANSFORMEXPR AT_TRANSFORM AT_SPECIFIER ATTRIBUTE ASM # ]
## Transitions:
## Reductions:
-- On error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER RBRACE PRAGMA_LINE PRAGMA NAMED_TYPE MSATTR LONG INT64 INT INLINE IDENT FLOAT EXTERN EOF ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_TRANSFORMEXPR AT_TRANSFORM AT_SPECIFIER ATTRIBUTE ASM #
--   reduce production global -> EXTERN string_constant LBRACE globals RBRACE
** End-of-stream conflict on error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER RBRACE PRAGMA_LINE PRAGMA NAMED_TYPE MSATTR LONG INT64 INT INLINE IDENT FLOAT EXTERN EOF ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_TRANSFORMEXPR AT_TRANSFORM AT_SPECIFIER ATTRIBUTE ASM
**   There is a tension between
**   (1) reducing production global -> EXTERN string_constant LBRACE globals RBRACE
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 1016:
## Known stack suffix:
## EXTERN string_constant declaration
## LR(1) items:
global -> EXTERN string_constant declaration . [ error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER RBRACE PRAGMA_LINE PRAGMA NAMED_TYPE MSATTR LONG INT64 INT INLINE IDENT FLOAT EXTERN EOF ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_TRANSFORMEXPR AT_TRANSFORM AT_SPECIFIER ATTRIBUTE ASM # ]
## Transitions:
## Reductions:
-- On error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER RBRACE PRAGMA_LINE PRAGMA NAMED_TYPE MSATTR LONG INT64 INT INLINE IDENT FLOAT EXTERN EOF ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_TRANSFORMEXPR AT_TRANSFORM AT_SPECIFIER ATTRIBUTE ASM #
--   reduce production global -> EXTERN string_constant declaration
** End-of-stream conflict on error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER RBRACE PRAGMA_LINE PRAGMA NAMED_TYPE MSATTR LONG INT64 INT INLINE IDENT FLOAT EXTERN EOF ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_TRANSFORMEXPR AT_TRANSFORM AT_SPECIFIER ATTRIBUTE ASM
**   There is a tension between
**   (1) reducing production global -> EXTERN string_constant declaration
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 1017:
## Known stack suffix:
## SEMICOLON globals
## LR(1) items:
globals -> SEMICOLON globals . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production globals -> SEMICOLON globals

State 1018:
## Known stack suffix:
## global
## LR(1) items:
globals -> global . globals [ # ]
## Transitions:
-- On VOLATILE shift to state 1
-- On VOID shift to state 2
-- On UNSIGNED shift to state 3
-- On UNION shift to state 4
-- On TYPEOF shift to state 9
-- On TYPEDEF shift to state 11
-- On THREAD shift to state 12
-- On STRUCT shift to state 13
-- On STATIC shift to state 15
-- On SIGNED shift to state 16
-- On SHORT shift to state 17
-- On SEMICOLON shift to state 766
-- On RESTRICT shift to state 18
-- On REGISTER shift to state 19
-- On PRAGMA_LINE shift to state 767
-- On PRAGMA shift to state 768
-- On NAMED_TYPE shift to state 20
-- On MSATTR shift to state 21
-- On LONG shift to state 22
-- On INT64 shift to state 23
-- On INT shift to state 24
-- On INLINE shift to state 25
-- On IDENT shift to state 773
-- On FLOAT shift to state 26
-- On EXTERN shift to state 896
-- On ENUM shift to state 28
-- On DOUBLE shift to state 66
-- On DECLSPEC shift to state 67
-- On CONST shift to state 78
-- On CHAR shift to state 79
-- On AUTO shift to state 80
-- On AT_TRANSFORMEXPR shift to state 900
-- On AT_TRANSFORM shift to state 908
-- On AT_SPECIFIER shift to state 81
-- On ATTRIBUTE shift to state 85
-- On ASM shift to state 925
-- On type_spec shift to state 89
-- On location shift to state 930
-- On globals shift to state 1019
-- On global shift to state 1018
-- On function_def_start shift to state 937
-- On function_def shift to state 939
-- On declaration shift to state 940
-- On decl_spec_list shift to state 941
-- On cvspec shift to state 92
-- On attribute_nocv shift to state 95
## Reductions:
-- On #
--   reduce production globals ->
-- On error
--   reduce production location ->
** End-of-stream conflict on error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER PRAGMA_LINE PRAGMA NAMED_TYPE MSATTR LONG INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_TRANSFORMEXPR AT_TRANSFORM AT_SPECIFIER ATTRIBUTE ASM
**   There is a tension between
**   (1) reducing production globals ->
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 1019:
## Known stack suffix:
## global globals
## LR(1) items:
globals -> global globals . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production globals -> global globals

State 1020:
## Known stack suffix:
## globals
## LR(1) items:
file -> globals . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production file -> globals

State 1021:
## Known stack suffix:
## file
## LR(1) items:
file' -> file . [ # ]
## Transitions:
## Reductions:
-- On #
--   accept file

State 1022:
## Known stack suffix:
##
## LR(1) items:
interpret' -> . interpret [ # ]
## Transitions:
-- On VOLATILE shift to state 1
-- On VOID shift to state 2
-- On UNSIGNED shift to state 3
-- On UNION shift to state 4
-- On TYPEOF shift to state 9
-- On TYPEDEF shift to state 11
-- On THREAD shift to state 12
-- On STRUCT shift to state 13
-- On STATIC shift to state 15
-- On SIGNED shift to state 16
-- On SHORT shift to state 17
-- On SEMICOLON shift to state 899
-- On RESTRICT shift to state 18
-- On REGISTER shift to state 19
-- On PRAGMA_LINE shift to state 767
-- On PRAGMA shift to state 768
-- On NAMED_TYPE shift to state 20
-- On MSATTR shift to state 21
-- On LONG shift to state 22
-- On INT64 shift to state 23
-- On INT shift to state 24
-- On INLINE shift to state 25
-- On IDENT shift to state 773
-- On FLOAT shift to state 26
-- On EXTERN shift to state 896
-- On ENUM shift to state 28
-- On DOUBLE shift to state 66
-- On DECLSPEC shift to state 67
-- On CONST shift to state 78
-- On CHAR shift to state 79
-- On AUTO shift to state 80
-- On AT_TRANSFORMEXPR shift to state 900
-- On AT_TRANSFORM shift to state 908
-- On AT_SPECIFIER shift to state 81
-- On ATTRIBUTE shift to state 85
-- On ASM shift to state 925
-- On type_spec shift to state 89
-- On location shift to state 930
-- On interpret shift to state 1023
-- On globals shift to state 1024
-- On global shift to state 935
-- On function_def_start shift to state 937
-- On function_def shift to state 939
-- On file shift to state 1025
-- On declaration shift to state 940
-- On decl_spec_list shift to state 941
-- On cvspec shift to state 92
-- On attribute_nocv shift to state 95
## Reductions:
-- On EOF
--   reduce production globals ->
-- On error
--   reduce production location ->

State 1023:
## Known stack suffix:
## interpret
## LR(1) items:
interpret' -> interpret . [ # ]
## Transitions:
## Reductions:
-- On #
--   accept interpret

State 1024:
## Known stack suffix:
## globals
## LR(1) items:
file -> globals . [ EOF ]
## Transitions:
## Reductions:
-- On EOF
--   reduce production file -> globals

State 1025:
## Known stack suffix:
## file
## LR(1) items:
interpret -> file . EOF [ # ]
## Transitions:
-- On EOF shift to state 1026
## Reductions:

State 1026:
## Known stack suffix:
## file EOF
## LR(1) items:
interpret -> file EOF . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production interpret -> file EOF

