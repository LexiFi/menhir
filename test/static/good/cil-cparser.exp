File "cil-cparser.mly", line 269, characters 54-60:
Warning: the token ADDROF is unused.
File "cil-cparser.mly", line 237, characters 36-50:
Warning: the token ATTRIBUTE_USED is unused.
File "cil-cparser.mly", line 238, characters 7-22:
Warning: the token BUILTIN_VA_LIST is unused.
File "cil-cparser.mly", line 269, characters 42-46:
Warning: the token CAST is unused.
File "cil-cparser.mly", line 199, characters 54-59:
Warning: the token INT32 is unused.
Grammar has 116 nonterminal symbols, among which 2 start symbols.
Grammar has 117 terminal symbols.
Grammar has 392 productions.
nullable(wstring_list) = false
nullable(unary_expression) = false
nullable(unary_attr) = false
nullable(type_spec) = false
nullable(type_name) = false
nullable(struct_decl_list) = true
nullable(string_list) = false
nullable(string_constant) = false
nullable(statement) = false
nullable(shift_expression) = false
nullable(shift_attr) = false
nullable(rest_par_list1) = true
nullable(rest_par_list) = true
nullable(relational_expression) = false
nullable(relational_attr) = false
nullable(primary_expression) = false
nullable(primary_attr) = false
nullable(postfix_expression) = false
nullable(postfix_attr) = false
nullable(pointer_opt) = true
nullable(pointer) = false
nullable(paren_comma_expression) = false
nullable(paren_attr_list_ne) = false
nullable(parameter_list_startscope) = false
nullable(parameter_decl) = false
nullable(opt_expression) = true
nullable(one_string_constant) = false
nullable(one_string) = false
nullable(old_proto_decl) = false
nullable(old_pardef_list) = true
nullable(old_pardef) = false
nullable(old_parameter_list_ne) = false
nullable(multiplicative_expression) = false
nullable(multiplicative_attr) = false
nullable(maybecomma) = true
nullable(logical_or_expression) = false
nullable(logical_or_attr) = false
nullable(logical_and_expression) = false
nullable(logical_and_attr) = false
nullable(location) = true
nullable(local_labels) = true
nullable(local_label_names) = false
nullable(just_attributes) = false
nullable(just_attribute) = false
nullable(interpret) = false
nullable(initialiser_list_opt) = true
nullable(initialiser_list) = false
nullable(initialiser) = false
nullable(init_expression) = false
nullable(init_designators_opt) = true
nullable(init_designators) = false
nullable(init_declarator_list) = false
nullable(init_declarator) = false
nullable(id_or_typename) = false
nullable(globals) = true
nullable(global) = false
nullable(gcc_init_designators) = false
nullable(function_def_start) = false
nullable(function_def) = false
nullable(for_clause) = false
nullable(file) = true
nullable(field_decl_list) = false
nullable(field_decl) = false
nullable(expression) = false
nullable(equality_expression) = false
nullable(equality_attr) = false
nullable(eq_opt) = true
nullable(enumerator) = false
nullable(enum_list) = false
nullable(direct_old_proto_decl) = false
nullable(direct_decl) = false
nullable(declarator) = false
nullable(declaration) = false
nullable(decl_spec_list_opt_no_named) = true
nullable(decl_spec_list_opt) = true
nullable(decl_spec_list) = false
nullable(cvspec) = false
nullable(constant) = false
nullable(conditional_expression) = false
nullable(comma_expression_opt) = true
nullable(comma_expression) = false
nullable(cast_expression) = false
nullable(cast_attr) = false
nullable(bracket_comma_expression) = false
nullable(block_element_list) = true
nullable(block_begin) = false
nullable(block_attrs) = true
nullable(block) = false
nullable(bitwise_xor_expression) = false
nullable(bitwise_xor_attr) = false
nullable(bitwise_or_expression) = false
nullable(bitwise_or_attr) = false
nullable(bitwise_and_expression) = false
nullable(bitwise_and_attr) = false
nullable(attributes_with_asm) = true
nullable(attributes) = true
nullable(attribute_nocv) = false
nullable(attribute) = false
nullable(attr_list_ne) = false
nullable(attr) = false
nullable(assignment_expression) = false
nullable(asmtemplate) = false
nullable(asmoutputs) = true
nullable(asmoperandsne) = false
nullable(asmoperands) = true
nullable(asmoperand) = false
nullable(asminputs) = true
nullable(asmcloberlst_ne) = false
nullable(asmclobber) = true
nullable(asmattr) = true
nullable(arguments) = true
nullable(additive_expression) = false
nullable(additive_attr) = false
nullable(abstract_decl) = false
nullable(abs_direct_decl_opt) = true
nullable(abs_direct_decl) = false
first(wstring_list) = CST_WSTRING
first(unary_expression) = TILDE STAR SIZEOF PRETTY_FUNCTION__ PLUS_PLUS PLUS MINUS_MINUS MINUS LPAREN IDENT FUNCTION__ EXCLAM CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR BUILTIN_VA_ARG AT_EXPR AND_AND AND ALIGNOF
first(unary_attr) = VOLATILE TILDE STAR SIZEOF PRETTY_FUNCTION__ PLUS NAMED_TYPE MINUS LPAREN IDENT FUNCTION__ EXCLAM DEFAULT CST_STRING CST_INT CONST AND ALIGNOF
first(type_spec) = VOID UNSIGNED UNION TYPEOF STRUCT SIGNED SHORT NAMED_TYPE LONG INT64 INT FLOAT ENUM DOUBLE CHAR
first(type_name) = VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC SIGNED SHORT RESTRICT REGISTER NAMED_TYPE MSATTR LONG INT64 INT INLINE FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_SPECIFIER ATTRIBUTE
first(struct_decl_list) = error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER NAMED_TYPE MSATTR LONG INT64 INT INLINE FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_SPECIFIER ATTRIBUTE
first(string_list) = PRETTY_FUNCTION__ FUNCTION__ CST_STRING
first(string_constant) = PRETTY_FUNCTION__ FUNCTION__ CST_STRING
first(statement) = error WHILE TRY TILDE SWITCH STAR SIZEOF SEMICOLON RETURN PRETTY_FUNCTION__ PLUS_PLUS PLUS MSASM MINUS_MINUS MINUS LPAREN LBRACE IF IDENT GOTO FUNCTION__ FOR EXCLAM DO DEFAULT CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONTINUE CASE BUILTIN_VA_ARG BREAK AT_EXPR ASM AND_AND AND ALIGNOF
first(shift_expression) = TILDE STAR SIZEOF PRETTY_FUNCTION__ PLUS_PLUS PLUS MINUS_MINUS MINUS LPAREN IDENT FUNCTION__ EXCLAM CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR BUILTIN_VA_ARG AT_EXPR AND_AND AND ALIGNOF
first(shift_attr) = VOLATILE TILDE STAR SIZEOF PRETTY_FUNCTION__ PLUS NAMED_TYPE MINUS LPAREN IDENT FUNCTION__ EXCLAM DEFAULT CST_STRING CST_INT CONST AND ALIGNOF
first(rest_par_list1) = COMMA
first(rest_par_list) = VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC SIGNED SHORT RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG INT64 INT INLINE FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_SPECIFIER ATTRIBUTE
first(relational_expression) = TILDE STAR SIZEOF PRETTY_FUNCTION__ PLUS_PLUS PLUS MINUS_MINUS MINUS LPAREN IDENT FUNCTION__ EXCLAM CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR BUILTIN_VA_ARG AT_EXPR AND_AND AND ALIGNOF
first(relational_attr) = VOLATILE TILDE STAR SIZEOF PRETTY_FUNCTION__ PLUS NAMED_TYPE MINUS LPAREN IDENT FUNCTION__ EXCLAM DEFAULT CST_STRING CST_INT CONST AND ALIGNOF
first(primary_expression) = PRETTY_FUNCTION__ LPAREN IDENT FUNCTION__ CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR AT_EXPR
first(primary_attr) = VOLATILE PRETTY_FUNCTION__ NAMED_TYPE LPAREN IDENT FUNCTION__ DEFAULT CST_STRING CST_INT CONST
first(postfix_expression) = PRETTY_FUNCTION__ LPAREN IDENT FUNCTION__ CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR BUILTIN_VA_ARG AT_EXPR
first(postfix_attr) = VOLATILE PRETTY_FUNCTION__ NAMED_TYPE LPAREN IDENT FUNCTION__ DEFAULT CST_STRING CST_INT CONST
first(pointer_opt) = STAR
first(pointer) = STAR
first(paren_comma_expression) = LPAREN
first(paren_attr_list_ne) = LPAREN
first(parameter_list_startscope) = LPAREN
first(parameter_decl) = VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC SIGNED SHORT RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG INT64 INT INLINE FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_SPECIFIER ATTRIBUTE
first(opt_expression) = error TILDE STAR SIZEOF PRETTY_FUNCTION__ PLUS_PLUS PLUS MINUS_MINUS MINUS LPAREN IDENT FUNCTION__ EXCLAM CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR BUILTIN_VA_ARG AT_EXPR AND_AND AND ALIGNOF
first(one_string_constant) = CST_STRING
first(one_string) = PRETTY_FUNCTION__ FUNCTION__ CST_STRING
first(old_proto_decl) = STAR NAMED_TYPE LPAREN IDENT AT_NAME
first(old_pardef_list) = VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC SIGNED SHORT RESTRICT REGISTER NAMED_TYPE MSATTR LONG INT64 INT INLINE FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_SPECIFIER ATTRIBUTE
first(old_pardef) = error STAR NAMED_TYPE LPAREN IDENT AT_NAME
first(old_parameter_list_ne) = IDENT
first(multiplicative_expression) = TILDE STAR SIZEOF PRETTY_FUNCTION__ PLUS_PLUS PLUS MINUS_MINUS MINUS LPAREN IDENT FUNCTION__ EXCLAM CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR BUILTIN_VA_ARG AT_EXPR AND_AND AND ALIGNOF
first(multiplicative_attr) = VOLATILE TILDE STAR SIZEOF PRETTY_FUNCTION__ PLUS NAMED_TYPE MINUS LPAREN IDENT FUNCTION__ EXCLAM DEFAULT CST_STRING CST_INT CONST AND ALIGNOF
first(maybecomma) = COMMA
first(logical_or_expression) = TILDE STAR SIZEOF PRETTY_FUNCTION__ PLUS_PLUS PLUS MINUS_MINUS MINUS LPAREN IDENT FUNCTION__ EXCLAM CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR BUILTIN_VA_ARG AT_EXPR AND_AND AND ALIGNOF
first(logical_or_attr) = VOLATILE TILDE STAR SIZEOF PRETTY_FUNCTION__ PLUS NAMED_TYPE MINUS LPAREN IDENT FUNCTION__ EXCLAM DEFAULT CST_STRING CST_INT CONST AND ALIGNOF
first(logical_and_expression) = TILDE STAR SIZEOF PRETTY_FUNCTION__ PLUS_PLUS PLUS MINUS_MINUS MINUS LPAREN IDENT FUNCTION__ EXCLAM CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR BUILTIN_VA_ARG AT_EXPR AND_AND AND ALIGNOF
first(logical_and_attr) = VOLATILE TILDE STAR SIZEOF PRETTY_FUNCTION__ PLUS NAMED_TYPE MINUS LPAREN IDENT FUNCTION__ EXCLAM DEFAULT CST_STRING CST_INT CONST AND ALIGNOF
first(location) = 
first(local_labels) = LABEL__
first(local_label_names) = IDENT
first(just_attributes) = DECLSPEC ATTRIBUTE
first(just_attribute) = DECLSPEC ATTRIBUTE
first(interpret) = error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER PRAGMA_LINE PRAGMA NAMED_TYPE MSATTR LONG INT64 INT INLINE IDENT FLOAT EXTERN EOF ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_TRANSFORMEXPR AT_TRANSFORM AT_SPECIFIER ATTRIBUTE ASM
first(initialiser_list_opt) = TILDE STAR SIZEOF PRETTY_FUNCTION__ PLUS_PLUS PLUS NAMED_TYPE MINUS_MINUS MINUS LPAREN LBRACKET LBRACE IDENT FUNCTION__ EXCLAM DOT CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR BUILTIN_VA_ARG AT_NAME AT_EXPR AND_AND AND ALIGNOF
first(initialiser_list) = TILDE STAR SIZEOF PRETTY_FUNCTION__ PLUS_PLUS PLUS NAMED_TYPE MINUS_MINUS MINUS LPAREN LBRACKET LBRACE IDENT FUNCTION__ EXCLAM DOT CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR BUILTIN_VA_ARG AT_NAME AT_EXPR AND_AND AND ALIGNOF
first(initialiser) = TILDE STAR SIZEOF PRETTY_FUNCTION__ PLUS_PLUS PLUS NAMED_TYPE MINUS_MINUS MINUS LPAREN LBRACKET LBRACE IDENT FUNCTION__ EXCLAM DOT CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR BUILTIN_VA_ARG AT_NAME AT_EXPR AND_AND AND ALIGNOF
first(init_expression) = TILDE STAR SIZEOF PRETTY_FUNCTION__ PLUS_PLUS PLUS MINUS_MINUS MINUS LPAREN LBRACE IDENT FUNCTION__ EXCLAM CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR BUILTIN_VA_ARG AT_EXPR AND_AND AND ALIGNOF
first(init_designators_opt) = LBRACKET DOT
first(init_designators) = LBRACKET DOT
first(init_declarator_list) = STAR NAMED_TYPE LPAREN IDENT AT_NAME
first(init_declarator) = STAR NAMED_TYPE LPAREN IDENT AT_NAME
first(id_or_typename) = NAMED_TYPE IDENT AT_NAME
first(globals) = error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER PRAGMA_LINE PRAGMA NAMED_TYPE MSATTR LONG INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_TRANSFORMEXPR AT_TRANSFORM AT_SPECIFIER ATTRIBUTE ASM
first(global) = error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC SIGNED SHORT RESTRICT REGISTER PRAGMA_LINE PRAGMA NAMED_TYPE MSATTR LONG INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_TRANSFORMEXPR AT_TRANSFORM AT_SPECIFIER ATTRIBUTE ASM
first(gcc_init_designators) = NAMED_TYPE IDENT AT_NAME
first(function_def_start) = VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC SIGNED SHORT RESTRICT REGISTER NAMED_TYPE MSATTR LONG INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_SPECIFIER ATTRIBUTE
first(function_def) = VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC SIGNED SHORT RESTRICT REGISTER NAMED_TYPE MSATTR LONG INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_SPECIFIER ATTRIBUTE
first(for_clause) = error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF TILDE THREAD STRUCT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RESTRICT REGISTER PRETTY_FUNCTION__ PLUS_PLUS PLUS NAMED_TYPE MSATTR MINUS_MINUS MINUS LPAREN LONG INT64 INT INLINE IDENT FUNCTION__ FLOAT EXTERN EXCLAM ENUM DOUBLE DECLSPEC CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONST CHAR BUILTIN_VA_ARG AUTO AT_SPECIFIER AT_EXPR ATTRIBUTE AND_AND AND ALIGNOF
first(file) = error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER PRAGMA_LINE PRAGMA NAMED_TYPE MSATTR LONG INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_TRANSFORMEXPR AT_TRANSFORM AT_SPECIFIER ATTRIBUTE ASM
first(field_decl_list) = STAR NAMED_TYPE LPAREN IDENT COLON AT_NAME
first(field_decl) = STAR NAMED_TYPE LPAREN IDENT COLON AT_NAME
first(expression) = TILDE STAR SIZEOF PRETTY_FUNCTION__ PLUS_PLUS PLUS MINUS_MINUS MINUS LPAREN IDENT FUNCTION__ EXCLAM CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR BUILTIN_VA_ARG AT_EXPR AND_AND AND ALIGNOF
first(equality_expression) = TILDE STAR SIZEOF PRETTY_FUNCTION__ PLUS_PLUS PLUS MINUS_MINUS MINUS LPAREN IDENT FUNCTION__ EXCLAM CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR BUILTIN_VA_ARG AT_EXPR AND_AND AND ALIGNOF
first(equality_attr) = VOLATILE TILDE STAR SIZEOF PRETTY_FUNCTION__ PLUS NAMED_TYPE MINUS LPAREN IDENT FUNCTION__ EXCLAM DEFAULT CST_STRING CST_INT CONST AND ALIGNOF
first(eq_opt) = EQ
first(enumerator) = IDENT
first(enum_list) = IDENT
first(direct_old_proto_decl) = NAMED_TYPE LPAREN IDENT AT_NAME
first(direct_decl) = NAMED_TYPE LPAREN IDENT AT_NAME
first(declarator) = STAR NAMED_TYPE LPAREN IDENT AT_NAME
first(declaration) = VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC SIGNED SHORT RESTRICT REGISTER NAMED_TYPE MSATTR LONG INT64 INT INLINE FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_SPECIFIER ATTRIBUTE
first(decl_spec_list_opt_no_named) = VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC SIGNED SHORT RESTRICT REGISTER NAMED_TYPE MSATTR LONG INT64 INT INLINE FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_SPECIFIER ATTRIBUTE
first(decl_spec_list_opt) = VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC SIGNED SHORT RESTRICT REGISTER NAMED_TYPE MSATTR LONG INT64 INT INLINE FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_SPECIFIER ATTRIBUTE
first(decl_spec_list) = VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC SIGNED SHORT RESTRICT REGISTER NAMED_TYPE MSATTR LONG INT64 INT INLINE FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_SPECIFIER ATTRIBUTE
first(cvspec) = VOLATILE RESTRICT CONST
first(constant) = PRETTY_FUNCTION__ FUNCTION__ CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR
first(conditional_expression) = TILDE STAR SIZEOF PRETTY_FUNCTION__ PLUS_PLUS PLUS MINUS_MINUS MINUS LPAREN IDENT FUNCTION__ EXCLAM CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR BUILTIN_VA_ARG AT_EXPR AND_AND AND ALIGNOF
first(comma_expression_opt) = error TILDE STAR SIZEOF PRETTY_FUNCTION__ PLUS_PLUS PLUS MINUS_MINUS MINUS LPAREN IDENT FUNCTION__ EXCLAM CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR BUILTIN_VA_ARG AT_EXPR AND_AND AND ALIGNOF
first(comma_expression) = error TILDE STAR SIZEOF PRETTY_FUNCTION__ PLUS_PLUS PLUS MINUS_MINUS MINUS LPAREN IDENT FUNCTION__ EXCLAM CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR BUILTIN_VA_ARG AT_EXPR AND_AND AND ALIGNOF
first(cast_expression) = TILDE STAR SIZEOF PRETTY_FUNCTION__ PLUS_PLUS PLUS MINUS_MINUS MINUS LPAREN IDENT FUNCTION__ EXCLAM CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR BUILTIN_VA_ARG AT_EXPR AND_AND AND ALIGNOF
first(cast_attr) = VOLATILE TILDE STAR SIZEOF PRETTY_FUNCTION__ PLUS NAMED_TYPE MINUS LPAREN IDENT FUNCTION__ EXCLAM DEFAULT CST_STRING CST_INT CONST AND ALIGNOF
first(bracket_comma_expression) = LBRACKET
first(block_element_list) = error WHILE VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF TRY TILDE THREAD SWITCH STRUCT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER PRETTY_FUNCTION__ PLUS_PLUS PLUS NAMED_TYPE MSATTR MSASM MINUS_MINUS MINUS LPAREN LONG LBRACE INT64 INT INLINE IF IDENT GOTO FUNCTION__ FOR FLOAT EXTERN EXCLAM ENUM DOUBLE DO DEFAULT DECLSPEC CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONTINUE CONST CHAR CASE BUILTIN_VA_ARG BREAK AUTO AT_SPECIFIER AT_EXPR ATTRIBUTE ASM AND_AND AND ALIGNOF
first(block_begin) = LBRACE
first(block_attrs) = BLOCKATTRIBUTE
first(block) = error LBRACE
first(bitwise_xor_expression) = TILDE STAR SIZEOF PRETTY_FUNCTION__ PLUS_PLUS PLUS MINUS_MINUS MINUS LPAREN IDENT FUNCTION__ EXCLAM CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR BUILTIN_VA_ARG AT_EXPR AND_AND AND ALIGNOF
first(bitwise_xor_attr) = VOLATILE TILDE STAR SIZEOF PRETTY_FUNCTION__ PLUS NAMED_TYPE MINUS LPAREN IDENT FUNCTION__ EXCLAM DEFAULT CST_STRING CST_INT CONST AND ALIGNOF
first(bitwise_or_expression) = TILDE STAR SIZEOF PRETTY_FUNCTION__ PLUS_PLUS PLUS MINUS_MINUS MINUS LPAREN IDENT FUNCTION__ EXCLAM CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR BUILTIN_VA_ARG AT_EXPR AND_AND AND ALIGNOF
first(bitwise_or_attr) = VOLATILE TILDE STAR SIZEOF PRETTY_FUNCTION__ PLUS NAMED_TYPE MINUS LPAREN IDENT FUNCTION__ EXCLAM DEFAULT CST_STRING CST_INT CONST AND ALIGNOF
first(bitwise_and_expression) = TILDE STAR SIZEOF PRETTY_FUNCTION__ PLUS_PLUS PLUS MINUS_MINUS MINUS LPAREN IDENT FUNCTION__ EXCLAM CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR BUILTIN_VA_ARG AT_EXPR AND_AND AND ALIGNOF
first(bitwise_and_attr) = VOLATILE TILDE STAR SIZEOF PRETTY_FUNCTION__ PLUS NAMED_TYPE MINUS LPAREN IDENT FUNCTION__ EXCLAM DEFAULT CST_STRING CST_INT CONST AND ALIGNOF
first(attributes_with_asm) = VOLATILE THREAD RESTRICT MSATTR DECLSPEC CONST ATTRIBUTE ASM
first(attributes) = VOLATILE THREAD RESTRICT MSATTR DECLSPEC CONST ATTRIBUTE
first(attribute_nocv) = THREAD MSATTR DECLSPEC ATTRIBUTE
first(attribute) = VOLATILE THREAD RESTRICT MSATTR DECLSPEC CONST ATTRIBUTE
first(attr_list_ne) = error VOLATILE TILDE STAR SIZEOF PRETTY_FUNCTION__ PLUS NAMED_TYPE MINUS LPAREN IDENT FUNCTION__ EXCLAM DEFAULT CST_STRING CST_INT CONST AND ALIGNOF
first(attr) = VOLATILE TILDE STAR SIZEOF PRETTY_FUNCTION__ PLUS NAMED_TYPE MINUS LPAREN IDENT FUNCTION__ EXCLAM DEFAULT CST_STRING CST_INT CONST AND ALIGNOF
first(assignment_expression) = TILDE STAR SIZEOF PRETTY_FUNCTION__ PLUS_PLUS PLUS MINUS_MINUS MINUS LPAREN IDENT FUNCTION__ EXCLAM CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR BUILTIN_VA_ARG AT_EXPR AND_AND AND ALIGNOF
first(asmtemplate) = CST_STRING
first(asmoutputs) = COLON
first(asmoperandsne) = PRETTY_FUNCTION__ FUNCTION__ CST_STRING
first(asmoperands) = PRETTY_FUNCTION__ FUNCTION__ CST_STRING
first(asmoperand) = PRETTY_FUNCTION__ FUNCTION__ CST_STRING
first(asminputs) = COLON
first(asmcloberlst_ne) = CST_STRING
first(asmclobber) = COLON
first(asmattr) = VOLATILE CONST
first(arguments) = error TILDE STAR SIZEOF PRETTY_FUNCTION__ PLUS_PLUS PLUS MINUS_MINUS MINUS LPAREN IDENT FUNCTION__ EXCLAM CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR BUILTIN_VA_ARG AT_EXPR AND_AND AND ALIGNOF
first(additive_expression) = TILDE STAR SIZEOF PRETTY_FUNCTION__ PLUS_PLUS PLUS MINUS_MINUS MINUS LPAREN IDENT FUNCTION__ EXCLAM CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR BUILTIN_VA_ARG AT_EXPR AND_AND AND ALIGNOF
first(additive_attr) = VOLATILE TILDE STAR SIZEOF PRETTY_FUNCTION__ PLUS NAMED_TYPE MINUS LPAREN IDENT FUNCTION__ EXCLAM DEFAULT CST_STRING CST_INT CONST AND ALIGNOF
first(abstract_decl) = STAR LPAREN LBRACKET
first(abs_direct_decl_opt) = LPAREN LBRACKET
first(abs_direct_decl) = LPAREN LBRACKET
minimal(wstring_list) = (* 1 *) CST_WSTRING
minimal(unary_expression) = (* 1 *) IDENT
minimal(unary_attr) = (* 1 *) IDENT
minimal(type_spec) = (* 1 *) VOID
minimal(type_name) = (* 1 *) TYPEDEF
minimal(struct_decl_list) = (* 0 *)
minimal(string_list) = (* 1 *) CST_STRING
minimal(string_constant) = (* 1 *) CST_STRING
minimal(statement) = (* 1 *) SEMICOLON
minimal(shift_expression) = (* 1 *) IDENT
minimal(shift_attr) = (* 1 *) IDENT
minimal(rest_par_list1) = (* 0 *)
minimal(rest_par_list) = (* 0 *)
minimal(relational_expression) = (* 1 *) IDENT
minimal(relational_attr) = (* 1 *) IDENT
minimal(primary_expression) = (* 1 *) IDENT
minimal(primary_attr) = (* 1 *) IDENT
minimal(postfix_expression) = (* 1 *) IDENT
minimal(postfix_attr) = (* 1 *) IDENT
minimal(pointer_opt) = (* 0 *)
minimal(pointer) = (* 1 *) STAR
minimal(paren_comma_expression) = (* 3 *) LPAREN error RPAREN
minimal(paren_attr_list_ne) = (* 3 *) LPAREN IDENT RPAREN
minimal(parameter_list_startscope) = (* 1 *) LPAREN
minimal(parameter_decl) = (* 1 *) TYPEDEF
minimal(opt_expression) = (* 0 *)
minimal(one_string_constant) = (* 1 *) CST_STRING
minimal(one_string) = (* 1 *) CST_STRING
minimal(old_proto_decl) = (* 3 *) IDENT LPAREN RPAREN
minimal(old_pardef_list) = (* 0 *)
minimal(old_pardef) = (* 1 *) IDENT
minimal(old_parameter_list_ne) = (* 1 *) IDENT
minimal(multiplicative_expression) = (* 1 *) IDENT
minimal(multiplicative_attr) = (* 1 *) IDENT
minimal(maybecomma) = (* 0 *)
minimal(logical_or_expression) = (* 1 *) IDENT
minimal(logical_or_attr) = (* 1 *) IDENT
minimal(logical_and_expression) = (* 1 *) IDENT
minimal(logical_and_attr) = (* 1 *) IDENT
minimal(location) = (* 0 *)
minimal(local_labels) = (* 0 *)
minimal(local_label_names) = (* 1 *) IDENT
minimal(just_attributes) = (* 4 *) DECLSPEC LPAREN IDENT RPAREN
minimal(just_attribute) = (* 4 *) DECLSPEC LPAREN IDENT RPAREN
minimal(interpret) = (* 1 *) EOF
minimal(initialiser_list_opt) = (* 0 *)
minimal(initialiser_list) = (* 1 *) IDENT
minimal(initialiser) = (* 1 *) IDENT
minimal(init_expression) = (* 1 *) IDENT
minimal(init_designators_opt) = (* 0 *)
minimal(init_designators) = (* 2 *) DOT IDENT
minimal(init_declarator_list) = (* 1 *) IDENT
minimal(init_declarator) = (* 1 *) IDENT
minimal(id_or_typename) = (* 1 *) IDENT
minimal(globals) = (* 0 *)
minimal(global) = (* 1 *) PRAGMA_LINE
minimal(gcc_init_designators) = (* 2 *) IDENT COLON
minimal(function_def_start) = (* 2 *) TYPEDEF IDENT
minimal(function_def) = (* 4 *) TYPEDEF IDENT LBRACE RBRACE
minimal(for_clause) = (* 1 *) SEMICOLON
minimal(file) = (* 0 *)
minimal(field_decl_list) = (* 1 *) IDENT
minimal(field_decl) = (* 1 *) IDENT
minimal(expression) = (* 1 *) IDENT
minimal(equality_expression) = (* 1 *) IDENT
minimal(equality_attr) = (* 1 *) IDENT
minimal(eq_opt) = (* 0 *)
minimal(enumerator) = (* 1 *) IDENT
minimal(enum_list) = (* 1 *) IDENT
minimal(direct_old_proto_decl) = (* 3 *) IDENT LPAREN RPAREN
minimal(direct_decl) = (* 1 *) IDENT
minimal(declarator) = (* 1 *) IDENT
minimal(declaration) = (* 2 *) TYPEDEF SEMICOLON
minimal(decl_spec_list_opt_no_named) = (* 0 *)
minimal(decl_spec_list_opt) = (* 0 *)
minimal(decl_spec_list) = (* 1 *) TYPEDEF
minimal(cvspec) = (* 1 *) CONST
minimal(constant) = (* 1 *) CST_INT
minimal(conditional_expression) = (* 1 *) IDENT
minimal(comma_expression_opt) = (* 0 *)
minimal(comma_expression) = (* 1 *) IDENT
minimal(cast_expression) = (* 1 *) IDENT
minimal(cast_attr) = (* 1 *) IDENT
minimal(bracket_comma_expression) = (* 3 *) LBRACKET error RBRACKET
minimal(block_element_list) = (* 0 *)
minimal(block_begin) = (* 1 *) LBRACE
minimal(block_attrs) = (* 0 *)
minimal(block) = (* 2 *) LBRACE RBRACE
minimal(bitwise_xor_expression) = (* 1 *) IDENT
minimal(bitwise_xor_attr) = (* 1 *) IDENT
minimal(bitwise_or_expression) = (* 1 *) IDENT
minimal(bitwise_or_attr) = (* 1 *) IDENT
minimal(bitwise_and_expression) = (* 1 *) IDENT
minimal(bitwise_and_attr) = (* 1 *) IDENT
minimal(attributes_with_asm) = (* 0 *)
minimal(attributes) = (* 0 *)
minimal(attribute_nocv) = (* 1 *) MSATTR
minimal(attribute) = (* 1 *) MSATTR
minimal(attr_list_ne) = (* 1 *) IDENT
minimal(attr) = (* 1 *) IDENT
minimal(assignment_expression) = (* 1 *) IDENT
minimal(asmtemplate) = (* 1 *) CST_STRING
minimal(asmoutputs) = (* 0 *)
minimal(asmoperandsne) = (* 4 *) CST_STRING LPAREN IDENT RPAREN
minimal(asmoperands) = (* 0 *)
minimal(asmoperand) = (* 4 *) CST_STRING LPAREN IDENT RPAREN
minimal(asminputs) = (* 0 *)
minimal(asmcloberlst_ne) = (* 1 *) CST_STRING
minimal(asmclobber) = (* 0 *)
minimal(asmattr) = (* 0 *)
minimal(arguments) = (* 0 *)
minimal(additive_expression) = (* 1 *) IDENT
minimal(additive_attr) = (* 1 *) IDENT
minimal(abstract_decl) = (* 1 *) STAR
minimal(abs_direct_decl_opt) = (* 0 *)
minimal(abs_direct_decl) = (* 2 *) LBRACKET RBRACKET
maximal(wstring_list) = infinity
maximal(unary_expression) = infinity
maximal(unary_attr) = infinity
maximal(type_spec) = infinity
maximal(type_name) = infinity
maximal(struct_decl_list) = infinity
maximal(string_list) = infinity
maximal(string_constant) = infinity
maximal(statement) = infinity
maximal(shift_expression) = infinity
maximal(shift_attr) = infinity
maximal(rest_par_list1) = infinity
maximal(rest_par_list) = infinity
maximal(relational_expression) = infinity
maximal(relational_attr) = infinity
maximal(primary_expression) = infinity
maximal(primary_attr) = infinity
maximal(postfix_expression) = infinity
maximal(postfix_attr) = infinity
maximal(pointer_opt) = infinity
maximal(pointer) = infinity
maximal(paren_comma_expression) = infinity
maximal(paren_attr_list_ne) = infinity
maximal(parameter_list_startscope) = 1
maximal(parameter_decl) = infinity
maximal(opt_expression) = infinity
maximal(one_string_constant) = 1
maximal(one_string) = 1
maximal(old_proto_decl) = infinity
maximal(old_pardef_list) = infinity
maximal(old_pardef) = infinity
maximal(old_parameter_list_ne) = infinity
maximal(multiplicative_expression) = infinity
maximal(multiplicative_attr) = infinity
maximal(maybecomma) = 1
maximal(logical_or_expression) = infinity
maximal(logical_or_attr) = infinity
maximal(logical_and_expression) = infinity
maximal(logical_and_attr) = infinity
maximal(location) = 0
maximal(local_labels) = infinity
maximal(local_label_names) = infinity
maximal(just_attributes) = infinity
maximal(just_attribute) = infinity
maximal(interpret) = infinity
maximal(initialiser_list_opt) = infinity
maximal(initialiser_list) = infinity
maximal(initialiser) = infinity
maximal(init_expression) = infinity
maximal(init_designators_opt) = infinity
maximal(init_designators) = infinity
maximal(init_declarator_list) = infinity
maximal(init_declarator) = infinity
maximal(id_or_typename) = 4
maximal(globals) = infinity
maximal(global) = infinity
maximal(gcc_init_designators) = 5
maximal(function_def_start) = infinity
maximal(function_def) = infinity
maximal(for_clause) = infinity
maximal(file) = infinity
maximal(field_decl_list) = infinity
maximal(field_decl) = infinity
maximal(expression) = infinity
maximal(equality_expression) = infinity
maximal(equality_attr) = infinity
maximal(eq_opt) = 1
maximal(enumerator) = infinity
maximal(enum_list) = infinity
maximal(direct_old_proto_decl) = infinity
maximal(direct_decl) = infinity
maximal(declarator) = infinity
maximal(declaration) = infinity
maximal(decl_spec_list_opt_no_named) = infinity
maximal(decl_spec_list_opt) = infinity
maximal(decl_spec_list) = infinity
maximal(cvspec) = 1
maximal(constant) = infinity
maximal(conditional_expression) = infinity
maximal(comma_expression_opt) = infinity
maximal(comma_expression) = infinity
maximal(cast_expression) = infinity
maximal(cast_attr) = infinity
maximal(bracket_comma_expression) = infinity
maximal(block_element_list) = infinity
maximal(block_begin) = 1
maximal(block_attrs) = infinity
maximal(block) = infinity
maximal(bitwise_xor_expression) = infinity
maximal(bitwise_xor_attr) = infinity
maximal(bitwise_or_expression) = infinity
maximal(bitwise_or_attr) = infinity
maximal(bitwise_and_expression) = infinity
maximal(bitwise_and_attr) = infinity
maximal(attributes_with_asm) = infinity
maximal(attributes) = infinity
maximal(attribute_nocv) = infinity
maximal(attribute) = infinity
maximal(attr_list_ne) = infinity
maximal(attr) = infinity
maximal(assignment_expression) = infinity
maximal(asmtemplate) = infinity
maximal(asmoutputs) = infinity
maximal(asmoperandsne) = infinity
maximal(asmoperands) = infinity
maximal(asmoperand) = infinity
maximal(asminputs) = infinity
maximal(asmcloberlst_ne) = infinity
maximal(asmclobber) = infinity
maximal(asmattr) = infinity
maximal(arguments) = infinity
maximal(additive_expression) = infinity
maximal(additive_attr) = infinity
maximal(abstract_decl) = infinity
maximal(abs_direct_decl_opt) = infinity
maximal(abs_direct_decl) = infinity
follow(wstring_list) = SUP_SUP_EQ SUP_SUP SUP_EQ SUP STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACKET RBRACE QUEST PRETTY_FUNCTION__ PRAGMA_EOL PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_EQ MINUS LPAREN LBRACKET INF_INF_EQ INF_INF INF_EQ INF FUNCTION__ EXCLAM_EQ EQ_EQ EQ ELLIPSIS DOT CST_WSTRING CST_STRING COMMA COLON CIRC_EQ CIRC ARROW AND_EQ AND_AND AND
follow(unary_expression) = SUP_SUP_EQ SUP_SUP SUP_EQ SUP STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACKET RBRACE QUEST PRAGMA_EOL PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_EQ MINUS INF_INF_EQ INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ EQ ELLIPSIS COMMA COLON CIRC_EQ CIRC AND_EQ AND_AND AND
follow(unary_attr) = SUP_SUP SUP_EQ SUP STAR SLASH SEMICOLON RPAREN PRAGMA_EOL PLUS PIPE_PIPE PIPE PERCENT MINUS INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ COMMA CIRC AND_AND AND
follow(type_spec) = error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG LBRACKET INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST COMMA COLON CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE
follow(type_name) = RPAREN
follow(struct_decl_list) = RBRACE
follow(string_list) = VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD SUP_SUP_EQ SUP_SUP SUP_EQ SUP STRUCT STATIC STAR_EQ STAR SLASH_EQ SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACKET RBRACE QUEST PRETTY_FUNCTION__ PRAGMA_EOL PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT NAMED_TYPE MSATTR MINUS_MINUS MINUS_EQ MINUS LPAREN LONG LBRACKET LBRACE INT64 INT INLINE INF_INF_EQ INF_INF INF_EQ INF FUNCTION__ FLOAT EXTERN EXCLAM_EQ EQ_EQ EQ ENUM ELLIPSIS DOUBLE DOT DECLSPEC CST_STRING CONST COMMA COLON CIRC_EQ CIRC CHAR AUTO AT_SPECIFIER ATTRIBUTE ARROW AND_EQ AND_AND AND
follow(string_constant) = VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD SUP_SUP_EQ SUP_SUP SUP_EQ SUP STRUCT STATIC STAR_EQ STAR SLASH_EQ SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACKET RBRACE QUEST PRAGMA_EOL PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT NAMED_TYPE MSATTR MINUS_MINUS MINUS_EQ MINUS LPAREN LONG LBRACKET LBRACE INT64 INT INLINE INF_INF_EQ INF_INF INF_EQ INF FLOAT EXTERN EXCLAM_EQ EQ_EQ EQ ENUM ELLIPSIS DOUBLE DOT DECLSPEC CONST COMMA COLON CIRC_EQ CIRC CHAR AUTO AT_SPECIFIER ATTRIBUTE ARROW AND_EQ AND_AND AND
follow(statement) = error WHILE VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF TRY TILDE THREAD SWITCH STRUCT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRETTY_FUNCTION__ PLUS_PLUS PLUS NAMED_TYPE MSATTR MSASM MINUS_MINUS MINUS LPAREN LONG LBRACE INT64 INT INLINE IF IDENT GOTO FUNCTION__ FOR FLOAT EXTERN EXCLAM ENUM ELSE DOUBLE DO DEFAULT DECLSPEC CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONTINUE CONST CHAR CASE BUILTIN_VA_ARG BREAK AUTO AT_SPECIFIER AT_EXPR ATTRIBUTE ASM AND_AND AND ALIGNOF
follow(shift_expression) = SUP_SUP SUP_EQ SUP SEMICOLON RPAREN RBRACKET RBRACE QUEST PIPE_PIPE PIPE INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ ELLIPSIS COMMA COLON CIRC AND_AND AND
follow(shift_attr) = SUP_SUP SUP_EQ SUP SEMICOLON RPAREN PRAGMA_EOL PIPE_PIPE PIPE INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ COMMA CIRC AND_AND AND
follow(rest_par_list1) = RPAREN
follow(rest_par_list) = RPAREN
follow(relational_expression) = SUP_EQ SUP SEMICOLON RPAREN RBRACKET RBRACE QUEST PIPE_PIPE PIPE INF_EQ INF EXCLAM_EQ EQ_EQ ELLIPSIS COMMA COLON CIRC AND_AND AND
follow(relational_attr) = SUP_EQ SUP SEMICOLON RPAREN PRAGMA_EOL PIPE_PIPE PIPE INF_EQ INF EXCLAM_EQ EQ_EQ COMMA CIRC AND_AND AND
follow(primary_expression) = SUP_SUP_EQ SUP_SUP SUP_EQ SUP STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACKET RBRACE QUEST PRAGMA_EOL PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_EQ MINUS LPAREN LBRACKET INF_INF_EQ INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ EQ ELLIPSIS DOT COMMA COLON CIRC_EQ CIRC ARROW AND_EQ AND_AND AND
follow(primary_attr) = SUP_SUP SUP_EQ SUP STAR SLASH SEMICOLON RPAREN PRAGMA_EOL PLUS PIPE_PIPE PIPE PERCENT MINUS INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ DOT COMMA CIRC ARROW AND_AND AND
follow(postfix_expression) = SUP_SUP_EQ SUP_SUP SUP_EQ SUP STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACKET RBRACE QUEST PRAGMA_EOL PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_EQ MINUS LPAREN LBRACKET INF_INF_EQ INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ EQ ELLIPSIS DOT COMMA COLON CIRC_EQ CIRC ARROW AND_EQ AND_AND AND
follow(postfix_attr) = SUP_SUP SUP_EQ SUP STAR SLASH SEMICOLON RPAREN PRAGMA_EOL PLUS PIPE_PIPE PIPE PERCENT MINUS INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ DOT COMMA CIRC ARROW AND_AND AND
follow(pointer_opt) = RPAREN NAMED_TYPE LPAREN LBRACKET IDENT COMMA AT_NAME
follow(pointer) = RPAREN NAMED_TYPE LPAREN LBRACKET IDENT COMMA AT_NAME
follow(paren_comma_expression) = error WHILE TRY TILDE SWITCH SUP_SUP_EQ SUP_SUP SUP_EQ SUP STAR_EQ STAR SLASH_EQ SLASH SIZEOF SEMICOLON RPAREN RETURN RBRACKET RBRACE QUEST PRETTY_FUNCTION__ PRAGMA_EOL PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MSASM MINUS_MINUS MINUS_EQ MINUS LPAREN LBRACKET LBRACE INF_INF_EQ INF_INF INF_EQ INF IF IDENT GOTO FUNCTION__ FOR EXCLAM_EQ EXCLAM EQ_EQ EQ ELLIPSIS DOT DO DEFAULT CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONTINUE COMMA COLON CIRC_EQ CIRC CASE BUILTIN_VA_ARG BREAK AT_EXPR ASM ARROW AND_EQ AND_AND AND ALIGNOF
follow(paren_attr_list_ne) = error WHILE VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF TRY TILDE THREAD SWITCH SUP_SUP SUP_EQ SUP STRUCT STATIC STAR SLASH SIZEOF SIGNED SHORT SEMICOLON RPAREN RETURN RESTRICT REGISTER RBRACKET RBRACE PRETTY_FUNCTION__ PRAGMA_EOL PLUS_PLUS PLUS PIPE_PIPE PIPE PERCENT NAMED_TYPE MSATTR MSASM MINUS_MINUS MINUS LPAREN LONG LBRACKET LBRACE INT64 INT INLINE INF_INF INF_EQ INF IF IDENT GOTO FUNCTION__ FOR FLOAT EXTERN EXCLAM_EQ EXCLAM EQ_EQ EQ ENUM DOUBLE DOT DO DEFAULT DECLSPEC CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONTINUE CONST COMMA COLON CIRC CHAR CASE BUILTIN_VA_ARG BREAK AUTO AT_SPECIFIER AT_NAME AT_EXPR ATTRIBUTE ASM ARROW AND_AND AND ALIGNOF
follow(parameter_list_startscope) = VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC SIGNED SHORT RPAREN RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG INT64 INT INLINE FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_SPECIFIER ATTRIBUTE
follow(parameter_decl) = RPAREN COMMA
follow(opt_expression) = SEMICOLON RPAREN COLON
follow(one_string_constant) = RPAREN CST_STRING COMMA COLON
follow(one_string) = VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD SUP_SUP_EQ SUP_SUP SUP_EQ SUP STRUCT STATIC STAR_EQ STAR SLASH_EQ SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACKET RBRACE QUEST PRETTY_FUNCTION__ PRAGMA_EOL PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT NAMED_TYPE MSATTR MINUS_MINUS MINUS_EQ MINUS LPAREN LONG LBRACKET LBRACE INT64 INT INLINE INF_INF_EQ INF_INF INF_EQ INF FUNCTION__ FLOAT EXTERN EXCLAM_EQ EQ_EQ EQ ENUM ELLIPSIS DOUBLE DOT DECLSPEC CST_WSTRING CST_STRING CONST COMMA COLON CIRC_EQ CIRC CHAR AUTO AT_SPECIFIER ATTRIBUTE ARROW AND_EQ AND_AND AND
follow(old_proto_decl) = error LBRACE
follow(old_pardef_list) = error SEMICOLON LBRACE
follow(old_pardef) = SEMICOLON
follow(old_parameter_list_ne) = RPAREN
follow(multiplicative_expression) = SUP_SUP SUP_EQ SUP STAR SLASH SEMICOLON RPAREN RBRACKET RBRACE QUEST PLUS PIPE_PIPE PIPE PERCENT MINUS INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ ELLIPSIS COMMA COLON CIRC AND_AND AND
follow(multiplicative_attr) = SUP_SUP SUP_EQ SUP STAR SLASH SEMICOLON RPAREN PRAGMA_EOL PLUS PIPE_PIPE PIPE PERCENT MINUS INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ COMMA CIRC AND_AND AND
follow(maybecomma) = RBRACE
follow(logical_or_expression) = SEMICOLON RPAREN RBRACKET RBRACE QUEST PIPE_PIPE ELLIPSIS COMMA COLON
follow(logical_or_attr) = SEMICOLON RPAREN PRAGMA_EOL PIPE_PIPE COMMA
follow(logical_and_expression) = SEMICOLON RPAREN RBRACKET RBRACE QUEST PIPE_PIPE ELLIPSIS COMMA COLON AND_AND
follow(logical_and_attr) = SEMICOLON RPAREN PRAGMA_EOL PIPE_PIPE COMMA AND_AND
follow(location) = error SEMICOLON RBRACE
follow(local_labels) = error WHILE VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF TRY TILDE THREAD SWITCH STRUCT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRETTY_FUNCTION__ PLUS_PLUS PLUS NAMED_TYPE MSATTR MSASM MINUS_MINUS MINUS LPAREN LONG LBRACE INT64 INT INLINE IF IDENT GOTO FUNCTION__ FOR FLOAT EXTERN EXCLAM ENUM DOUBLE DO DEFAULT DECLSPEC CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONTINUE CONST CHAR CASE BUILTIN_VA_ARG BREAK BLOCKATTRIBUTE AUTO AT_SPECIFIER AT_EXPR ATTRIBUTE ASM AND_AND AND ALIGNOF
follow(local_label_names) = SEMICOLON
follow(just_attributes) = NAMED_TYPE LBRACE IDENT AT_NAME
follow(just_attribute) = NAMED_TYPE LBRACE IDENT DECLSPEC AT_NAME ATTRIBUTE
follow(interpret) = #
follow(initialiser_list_opt) = RBRACE
follow(initialiser_list) = RBRACE
follow(initialiser) = RBRACE COMMA
follow(init_expression) = SEMICOLON RBRACE COMMA
follow(init_designators_opt) = TILDE STAR SIZEOF PRETTY_FUNCTION__ PLUS_PLUS PLUS MINUS_MINUS MINUS LPAREN LBRACE IDENT FUNCTION__ EXCLAM EQ CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR BUILTIN_VA_ARG AT_EXPR AND_AND AND ALIGNOF
follow(init_designators) = TILDE STAR SIZEOF PRETTY_FUNCTION__ PLUS_PLUS PLUS MINUS_MINUS MINUS LPAREN LBRACE IDENT FUNCTION__ EXCLAM EQ CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR BUILTIN_VA_ARG AT_EXPR AND_AND AND ALIGNOF
follow(init_declarator_list) = SEMICOLON
follow(init_declarator) = SEMICOLON COMMA
follow(id_or_typename) = error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF TILDE THREAD SUP_SUP_EQ SUP_SUP SUP_EQ SUP STRUCT STATIC STAR_EQ STAR SLASH_EQ SLASH SIZEOF SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACKET RBRACE QUEST PRETTY_FUNCTION__ PRAGMA_EOL PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT NAMED_TYPE MSATTR MINUS_MINUS MINUS_EQ MINUS LPAREN LONG LBRACKET LBRACE INT64 INT INLINE INF_INF_EQ INF_INF INF_EQ INF IDENT FUNCTION__ FLOAT EXTERN EXCLAM_EQ EXCLAM EQ_EQ EQ ENUM ELLIPSIS DOUBLE DOT DECLSPEC CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONST COMMA COLON CIRC_EQ CIRC CHAR BUILTIN_VA_ARG AUTO AT_SPECIFIER AT_NAME AT_EXPR ATTRIBUTE ASM ARROW AND_EQ AND_AND AND ALIGNOF
follow(globals) = RBRACE EOF #
follow(global) = error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER RBRACE PRAGMA_LINE PRAGMA NAMED_TYPE MSATTR LONG INT64 INT INLINE IDENT FLOAT EXTERN EOF ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_TRANSFORMEXPR AT_TRANSFORM AT_SPECIFIER ATTRIBUTE ASM #
follow(gcc_init_designators) = TILDE STAR SIZEOF PRETTY_FUNCTION__ PLUS_PLUS PLUS MINUS_MINUS MINUS LPAREN LBRACE IDENT FUNCTION__ EXCLAM CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR BUILTIN_VA_ARG AT_EXPR AND_AND AND ALIGNOF
follow(function_def_start) = error LBRACE
follow(function_def) = error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER RBRACE PRAGMA_LINE PRAGMA NAMED_TYPE MSATTR LONG INT64 INT INLINE IDENT FLOAT EXTERN EOF ENUM DOUBLE DECLSPEC CONST CHAR AUTO AT_TRANSFORMEXPR AT_TRANSFORM AT_SPECIFIER ATTRIBUTE ASM #
follow(for_clause) = error TILDE STAR SIZEOF SEMICOLON PRETTY_FUNCTION__ PLUS_PLUS PLUS MINUS_MINUS MINUS LPAREN IDENT FUNCTION__ EXCLAM CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR BUILTIN_VA_ARG AT_EXPR AND_AND AND ALIGNOF
follow(file) = EOF #
follow(field_decl_list) = SEMICOLON
follow(field_decl) = SEMICOLON COMMA
follow(expression) = SEMICOLON RPAREN RBRACKET RBRACE ELLIPSIS COMMA COLON
follow(equality_expression) = SEMICOLON RPAREN RBRACKET RBRACE QUEST PIPE_PIPE PIPE EXCLAM_EQ EQ_EQ ELLIPSIS COMMA COLON CIRC AND_AND AND
follow(equality_attr) = SEMICOLON RPAREN PRAGMA_EOL PIPE_PIPE PIPE EXCLAM_EQ EQ_EQ COMMA CIRC AND_AND AND
follow(eq_opt) = TILDE STAR SIZEOF PRETTY_FUNCTION__ PLUS_PLUS PLUS MINUS_MINUS MINUS LPAREN LBRACE IDENT FUNCTION__ EXCLAM CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR BUILTIN_VA_ARG AT_EXPR AND_AND AND ALIGNOF
follow(enumerator) = RBRACE COMMA
follow(enum_list) = RBRACE COMMA
follow(direct_old_proto_decl) = error LBRACE
follow(direct_decl) = error VOLATILE THREAD SEMICOLON RPAREN RESTRICT MSATTR LPAREN LBRACKET LBRACE EQ DECLSPEC CONST COMMA COLON ATTRIBUTE ASM
follow(declarator) = error SEMICOLON RPAREN LBRACE EQ COMMA COLON
follow(declaration) = error WHILE VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF TRY TILDE THREAD SWITCH STRUCT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRETTY_FUNCTION__ PRAGMA_LINE PRAGMA PLUS_PLUS PLUS NAMED_TYPE MSATTR MSASM MINUS_MINUS MINUS LPAREN LONG LBRACE INT64 INT INLINE IF IDENT GOTO FUNCTION__ FOR FLOAT EXTERN EXCLAM EOF ENUM DOUBLE DO DEFAULT DECLSPEC CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONTINUE CONST CHAR CASE BUILTIN_VA_ARG BREAK AUTO AT_TRANSFORMEXPR AT_TRANSFORM AT_SPECIFIER AT_EXPR ATTRIBUTE ASM AND_AND AND ALIGNOF #
follow(decl_spec_list_opt_no_named) = error STAR SEMICOLON RPAREN NAMED_TYPE LPAREN LBRACKET IDENT COMMA COLON AT_NAME
follow(decl_spec_list_opt) = error STAR SEMICOLON RPAREN NAMED_TYPE LPAREN LBRACKET IDENT COMMA COLON AT_NAME
follow(decl_spec_list) = error STAR SEMICOLON RPAREN NAMED_TYPE LPAREN LBRACKET IDENT COMMA COLON AT_NAME
follow(cvspec) = error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF THREAD STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NAMED_TYPE MSATTR LPAREN LONG LBRACKET INT64 INT INLINE IDENT FLOAT EXTERN ENUM DOUBLE DECLSPEC CONST COMMA COLON CHAR AUTO AT_SPECIFIER AT_NAME ATTRIBUTE
follow(constant) = SUP_SUP_EQ SUP_SUP SUP_EQ SUP STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACKET RBRACE QUEST PRAGMA_EOL PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_EQ MINUS LPAREN LBRACKET INF_INF_EQ INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ EQ ELLIPSIS DOT COMMA COLON CIRC_EQ CIRC ARROW AND_EQ AND_AND AND
follow(conditional_expression) = SEMICOLON RPAREN RBRACKET RBRACE ELLIPSIS COMMA COLON
follow(comma_expression_opt) = RBRACKET
follow(comma_expression) = SEMICOLON RPAREN RBRACKET COLON
follow(cast_expression) = SUP_SUP_EQ SUP_SUP SUP_EQ SUP STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACKET RBRACE QUEST PRAGMA_EOL PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_EQ MINUS INF_INF_EQ INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ EQ ELLIPSIS COMMA COLON CIRC_EQ CIRC AND_EQ AND_AND AND
follow(cast_attr) = SUP_SUP SUP_EQ SUP STAR SLASH SEMICOLON RPAREN PRAGMA_EOL PLUS PIPE_PIPE PIPE PERCENT MINUS INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ COMMA CIRC AND_AND AND
follow(bracket_comma_expression) = SUP_SUP_EQ SUP_SUP SUP_EQ SUP STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACKET RBRACE QUEST PRAGMA_EOL PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_EQ MINUS LPAREN LBRACKET INF_INF_EQ INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ EQ ELLIPSIS DOT COMMA COLON CIRC_EQ CIRC ARROW AND_EQ AND_AND AND
follow(block_element_list) = RBRACE
follow(block_begin) = error WHILE VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF TRY TILDE THREAD SWITCH STRUCT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRETTY_FUNCTION__ PLUS_PLUS PLUS NAMED_TYPE MSATTR MSASM MINUS_MINUS MINUS LPAREN LONG LBRACE LABEL__ INT64 INT INLINE IF IDENT GOTO FUNCTION__ FOR FLOAT EXTERN EXCLAM ENUM DOUBLE DO DEFAULT DECLSPEC CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONTINUE CONST CHAR CASE BUILTIN_VA_ARG BREAK BLOCKATTRIBUTE AUTO AT_SPECIFIER AT_EXPR ATTRIBUTE ASM AND_AND AND ALIGNOF
follow(block_attrs) = error WHILE VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF TRY TILDE THREAD SWITCH STRUCT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRETTY_FUNCTION__ PLUS_PLUS PLUS NAMED_TYPE MSATTR MSASM MINUS_MINUS MINUS LPAREN LONG LBRACE INT64 INT INLINE IF IDENT GOTO FUNCTION__ FOR FLOAT EXTERN EXCLAM ENUM DOUBLE DO DEFAULT DECLSPEC CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONTINUE CONST CHAR CASE BUILTIN_VA_ARG BREAK AUTO AT_SPECIFIER AT_EXPR ATTRIBUTE ASM AND_AND AND ALIGNOF
follow(block) = error WHILE VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF TRY TILDE THREAD SWITCH STRUCT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RPAREN RETURN RESTRICT REGISTER RBRACE PRETTY_FUNCTION__ PRAGMA_LINE PRAGMA PLUS_PLUS PLUS NAMED_TYPE MSATTR MSASM MINUS_MINUS MINUS LPAREN LONG LBRACE INT64 INT INLINE IF IDENT GOTO FUNCTION__ FOR FLOAT FINALLY EXTERN EXCLAM EXCEPT EOF ENUM ELSE DOUBLE DO DEFAULT DECLSPEC CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONTINUE CONST CHAR CASE BUILTIN_VA_ARG BREAK AUTO AT_TRANSFORMEXPR AT_TRANSFORM AT_SPECIFIER AT_EXPR ATTRIBUTE ASM AND_AND AND ALIGNOF #
follow(bitwise_xor_expression) = SEMICOLON RPAREN RBRACKET RBRACE QUEST PIPE_PIPE PIPE ELLIPSIS COMMA COLON CIRC AND_AND
follow(bitwise_xor_attr) = SEMICOLON RPAREN PRAGMA_EOL PIPE_PIPE PIPE COMMA CIRC AND_AND
follow(bitwise_or_expression) = SEMICOLON RPAREN RBRACKET RBRACE QUEST PIPE_PIPE PIPE ELLIPSIS COMMA COLON AND_AND
follow(bitwise_or_attr) = SEMICOLON RPAREN PRAGMA_EOL PIPE_PIPE PIPE COMMA AND_AND
follow(bitwise_and_expression) = SEMICOLON RPAREN RBRACKET RBRACE QUEST PIPE_PIPE PIPE ELLIPSIS COMMA COLON CIRC AND_AND AND
follow(bitwise_and_attr) = SEMICOLON RPAREN PRAGMA_EOL PIPE_PIPE PIPE COMMA CIRC AND_AND AND
follow(attributes_with_asm) = error SEMICOLON RPAREN LBRACE EQ COMMA COLON
follow(attributes) = error TILDE STAR SIZEOF SEMICOLON RPAREN RBRACKET PRETTY_FUNCTION__ PLUS_PLUS PLUS NAMED_TYPE MINUS_MINUS MINUS LPAREN LBRACKET LBRACE IDENT FUNCTION__ EXCLAM EQ CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR COMMA COLON BUILTIN_VA_ARG AT_NAME AT_EXPR AND_AND AND ALIGNOF
follow(attribute_nocv) = error VOLATILE VOID UNSIGNED UNION TYPEOF TYPEDEF TILDE THREAD STRUCT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACKET PRETTY_FUNCTION__ PLUS_PLUS PLUS NAMED_TYPE MSATTR MINUS_MINUS MINUS LPAREN LONG LBRACKET LBRACE INT64 INT INLINE IDENT FUNCTION__ FLOAT EXTERN EXCLAM EQ ENUM DOUBLE DECLSPEC CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONST COMMA COLON CHAR BUILTIN_VA_ARG AUTO AT_SPECIFIER AT_NAME AT_EXPR ATTRIBUTE ASM AND_AND AND ALIGNOF
follow(attribute) = error VOLATILE TILDE THREAD STAR SIZEOF SEMICOLON RPAREN RESTRICT RBRACKET PRETTY_FUNCTION__ PLUS_PLUS PLUS NAMED_TYPE MSATTR MINUS_MINUS MINUS LPAREN LBRACKET LBRACE IDENT FUNCTION__ EXCLAM EQ DECLSPEC CST_WSTRING CST_WCHAR CST_STRING CST_INT CST_FLOAT CST_CHAR CONST COMMA COLON BUILTIN_VA_ARG AT_NAME AT_EXPR ATTRIBUTE ASM AND_AND AND ALIGNOF
follow(attr_list_ne) = RPAREN
follow(attr) = SEMICOLON RPAREN PRAGMA_EOL COMMA
follow(assignment_expression) = SEMICOLON RPAREN RBRACKET RBRACE ELLIPSIS COMMA COLON
follow(asmtemplate) = RPAREN COLON
follow(asmoutputs) = RPAREN
follow(asmoperandsne) = RPAREN COMMA COLON
follow(asmoperands) = RPAREN COLON
follow(asmoperand) = RPAREN COMMA COLON
follow(asminputs) = RPAREN
follow(asmcloberlst_ne) = RPAREN
follow(asmclobber) = RPAREN
follow(asmattr) = LPAREN
follow(arguments) = RPAREN
follow(additive_expression) = SUP_SUP SUP_EQ SUP SEMICOLON RPAREN RBRACKET RBRACE QUEST PLUS PIPE_PIPE PIPE MINUS INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ ELLIPSIS COMMA COLON CIRC AND_AND AND
follow(additive_attr) = SUP_SUP SUP_EQ SUP SEMICOLON RPAREN PRAGMA_EOL PLUS PIPE_PIPE PIPE MINUS INF_INF INF_EQ INF EXCLAM_EQ EQ_EQ COMMA CIRC AND_AND AND
follow(abstract_decl) = RPAREN COMMA
follow(abs_direct_decl_opt) = LBRACKET
follow(abs_direct_decl) = VOLATILE THREAD RPAREN RESTRICT MSATTR LPAREN LBRACKET DECLSPEC CONST COMMA ATTRIBUTE
Built an LR(0) automaton with 747 states.
The grammar is not SLR(1) -- 28 states have a conflict.
The construction mode is pager.
Built an LR(1) automaton with 1032 states.
25 shift/reduce conflicts were silently solved.
Only 1027 states remain after resolving shift/reduce conflicts.
File "cil-cparser.mly", line 269, characters 0-6:
Warning: the precedence level assigned to ADDROF is never useful.
File "cil-cparser.mly", line 269, characters 0-6:
Warning: the precedence level assigned to ALIGNOF is never useful.
File "cil-cparser.mly", line 263, characters 0-5:
Warning: the precedence level assigned to AND is never useful.
File "cil-cparser.mly", line 260, characters 0-5:
Warning: the precedence level assigned to AND_AND is never useful.
File "cil-cparser.mly", line 256, characters 0-6:
Warning: the precedence level assigned to AND_EQ is never useful.
File "cil-cparser.mly", line 271, characters 0-5:
Warning: the precedence level assigned to ARROW is never useful.
File "cil-cparser.mly", line 269, characters 0-6:
Warning: the precedence level assigned to CAST is never useful.
File "cil-cparser.mly", line 262, characters 0-5:
Warning: the precedence level assigned to CIRC is never useful.
File "cil-cparser.mly", line 256, characters 0-6:
Warning: the precedence level assigned to CIRC_EQ is never useful.
File "cil-cparser.mly", line 258, characters 0-6:
Warning: the precedence level assigned to COLON is never useful.
File "cil-cparser.mly", line 255, characters 0-5:
Warning: the precedence level assigned to COMMA is never useful.
File "cil-cparser.mly", line 268, characters 0-5:
Warning: the precedence level assigned to CONST is never useful.
File "cil-cparser.mly", line 271, characters 0-5:
Warning: the precedence level assigned to DOT is never useful.
File "cil-cparser.mly", line 256, characters 0-6:
Warning: the precedence level assigned to EQ is never useful.
File "cil-cparser.mly", line 264, characters 0-5:
Warning: the precedence level assigned to EQ_EQ is never useful.
File "cil-cparser.mly", line 269, characters 0-6:
Warning: the precedence level assigned to EXCLAM is never useful.
File "cil-cparser.mly", line 264, characters 0-5:
Warning: the precedence level assigned to EXCLAM_EQ is never useful.
File "cil-cparser.mly", line 265, characters 0-5:
Warning: the precedence level assigned to INF is never useful.
File "cil-cparser.mly", line 265, characters 0-5:
Warning: the precedence level assigned to INF_EQ is never useful.
File "cil-cparser.mly", line 266, characters 0-5:
Warning: the precedence level assigned to INF_INF is never useful.
File "cil-cparser.mly", line 256, characters 0-6:
Warning: the precedence level assigned to INF_INF_EQ is never useful.
File "cil-cparser.mly", line 271, characters 0-5:
Warning: the precedence level assigned to LBRACE is never useful.
File "cil-cparser.mly", line 270, characters 0-5:
Warning: the precedence level assigned to LBRACKET is never useful.
File "cil-cparser.mly", line 267, characters 0-5:
Warning: the precedence level assigned to MINUS is never useful.
File "cil-cparser.mly", line 256, characters 0-6:
Warning: the precedence level assigned to MINUS_EQ is never useful.
File "cil-cparser.mly", line 269, characters 0-6:
Warning: the precedence level assigned to MINUS_MINUS is never useful.
File "cil-cparser.mly", line 268, characters 0-5:
Warning: the precedence level assigned to PERCENT is never useful.
File "cil-cparser.mly", line 256, characters 0-6:
Warning: the precedence level assigned to PERCENT_EQ is never useful.
File "cil-cparser.mly", line 261, characters 0-5:
Warning: the precedence level assigned to PIPE is never useful.
File "cil-cparser.mly", line 256, characters 0-6:
Warning: the precedence level assigned to PIPE_EQ is never useful.
File "cil-cparser.mly", line 259, characters 0-5:
Warning: the precedence level assigned to PIPE_PIPE is never useful.
File "cil-cparser.mly", line 267, characters 0-5:
Warning: the precedence level assigned to PLUS is never useful.
File "cil-cparser.mly", line 256, characters 0-6:
Warning: the precedence level assigned to PLUS_EQ is never useful.
File "cil-cparser.mly", line 269, characters 0-6:
Warning: the precedence level assigned to PLUS_PLUS is never useful.
File "cil-cparser.mly", line 258, characters 0-6:
Warning: the precedence level assigned to QUEST is never useful.
File "cil-cparser.mly", line 268, characters 0-5:
Warning: the precedence level assigned to RESTRICT is never useful.
File "cil-cparser.mly", line 269, characters 0-6:
Warning: the precedence level assigned to SIZEOF is never useful.
File "cil-cparser.mly", line 268, characters 0-5:
Warning: the precedence level assigned to SLASH is never useful.
File "cil-cparser.mly", line 256, characters 0-6:
Warning: the precedence level assigned to SLASH_EQ is never useful.
File "cil-cparser.mly", line 268, characters 0-5:
Warning: the precedence level assigned to STAR is never useful.
File "cil-cparser.mly", line 256, characters 0-6:
Warning: the precedence level assigned to STAR_EQ is never useful.
File "cil-cparser.mly", line 265, characters 0-5:
Warning: the precedence level assigned to SUP is never useful.
File "cil-cparser.mly", line 265, characters 0-5:
Warning: the precedence level assigned to SUP_EQ is never useful.
File "cil-cparser.mly", line 266, characters 0-5:
Warning: the precedence level assigned to SUP_SUP is never useful.
File "cil-cparser.mly", line 256, characters 0-6:
Warning: the precedence level assigned to SUP_SUP_EQ is never useful.
File "cil-cparser.mly", line 269, characters 0-6:
Warning: the precedence level assigned to TILDE is never useful.
File "cil-cparser.mly", line 268, characters 0-5:
Warning: the precedence level assigned to VOLATILE is never useful.
File "cil-cparser.mly", line 345, characters 56-61:
Warning: this %prec declaration is never useful.
Warning: 20 end-of-stream conflicts were arbitrarily resolved.
File "cil-cparser.mly", line 1027, characters 2-49:
Warning: production direct_old_proto_decl -> direct_decl LPAREN RPAREN is never reduced.
File "cil-cparser.mly", line 1149, characters 2-42:
Warning: production function_def_start -> IDENT LPAREN RPAREN is never reduced.
File "cil-cparser.mly", line 375, characters 2-32:
Warning: production global -> IDENT LPAREN RPAREN SEMICOLON is never reduced.
Warning: in total, 3 productions are never reduced.
386 out of 1027 states have a default reduction.
360 out of 1027 states are represented.
0 out of 237 symbols keep track of their start position.
0 out of 237 symbols keep track of their end position.
196 out of 394 productions exploit shiftreduce optimization.
91 out of 1027 states can peek at an error.
2567 functions before inlining, 526 functions after inlining.
