State 0:
search' -> . search [ # ]
-- On SEARCH shift to state 1
-- On ERROR shift to state 13
-- On search shift to state 15

State 1:
search -> SEARCH . IDENT comment [ # ]
-- On IDENT shift to state 2

State 2:
search -> SEARCH IDENT . comment [ # ]
-- On RIGHT_PAR shift to state 3
-- On NEWLINE shift to state 4
-- On LEFT_PAR shift to state 5
-- On IDENT shift to state 6
-- On COMMA shift to state 7
-- On COLON shift to state 8
-- On punctuation shift to state 9
-- On comment shift to state 12

State 3:
punctuation -> RIGHT_PAR . [ RIGHT_PAR NEWLINE LEFT_PAR IDENT COMMA COLON ]
-- On RIGHT_PAR reduce production punctuation -> RIGHT_PAR 
-- On NEWLINE reduce production punctuation -> RIGHT_PAR 
-- On LEFT_PAR reduce production punctuation -> RIGHT_PAR 
-- On IDENT reduce production punctuation -> RIGHT_PAR 
-- On COMMA reduce production punctuation -> RIGHT_PAR 
-- On COLON reduce production punctuation -> RIGHT_PAR 

State 4:
comment -> NEWLINE . [ # ]
-- On # reduce production comment -> NEWLINE 

State 5:
punctuation -> LEFT_PAR . [ RIGHT_PAR NEWLINE LEFT_PAR IDENT COMMA COLON ]
-- On RIGHT_PAR reduce production punctuation -> LEFT_PAR 
-- On NEWLINE reduce production punctuation -> LEFT_PAR 
-- On LEFT_PAR reduce production punctuation -> LEFT_PAR 
-- On IDENT reduce production punctuation -> LEFT_PAR 
-- On COMMA reduce production punctuation -> LEFT_PAR 
-- On COLON reduce production punctuation -> LEFT_PAR 

State 6:
comment -> IDENT . comment [ # ]
-- On RIGHT_PAR shift to state 3
-- On NEWLINE shift to state 4
-- On LEFT_PAR shift to state 5
-- On IDENT shift to state 6
-- On COMMA shift to state 7
-- On COLON shift to state 8
-- On punctuation shift to state 9
-- On comment shift to state 11

State 7:
punctuation -> COMMA . [ RIGHT_PAR NEWLINE LEFT_PAR IDENT COMMA COLON ]
-- On RIGHT_PAR reduce production punctuation -> COMMA 
-- On NEWLINE reduce production punctuation -> COMMA 
-- On LEFT_PAR reduce production punctuation -> COMMA 
-- On IDENT reduce production punctuation -> COMMA 
-- On COMMA reduce production punctuation -> COMMA 
-- On COLON reduce production punctuation -> COMMA 

State 8:
punctuation -> COLON . [ RIGHT_PAR NEWLINE LEFT_PAR IDENT COMMA COLON ]
-- On RIGHT_PAR reduce production punctuation -> COLON 
-- On NEWLINE reduce production punctuation -> COLON 
-- On LEFT_PAR reduce production punctuation -> COLON 
-- On IDENT reduce production punctuation -> COLON 
-- On COMMA reduce production punctuation -> COLON 
-- On COLON reduce production punctuation -> COLON 

State 9:
comment -> punctuation . comment [ # ]
-- On RIGHT_PAR shift to state 3
-- On NEWLINE shift to state 4
-- On LEFT_PAR shift to state 5
-- On IDENT shift to state 6
-- On COMMA shift to state 7
-- On COLON shift to state 8
-- On punctuation shift to state 9
-- On comment shift to state 10

State 10:
comment -> punctuation comment . [ # ]
-- On # reduce production comment -> punctuation comment 

State 11:
comment -> IDENT comment . [ # ]
-- On # reduce production comment -> IDENT comment 

State 12:
search -> SEARCH IDENT comment . [ # ]
-- On # reduce production search -> SEARCH IDENT comment 

State 13:
search -> ERROR . comment [ # ]
-- On RIGHT_PAR shift to state 3
-- On NEWLINE shift to state 4
-- On LEFT_PAR shift to state 5
-- On IDENT shift to state 6
-- On COMMA shift to state 7
-- On COLON shift to state 8
-- On punctuation shift to state 9
-- On comment shift to state 14

State 14:
search -> ERROR comment . [ # ]
-- On # reduce production search -> ERROR comment 

State 15:
search' -> search . [ # ]
-- On # accept search

State 16:
term_oe' -> . term_oe [ # ]
-- On TERM shift to state 17
-- On QUIT shift to state 34
-- On ERROR shift to state 36
-- On term_oe shift to state 38

State 17:
term_oe -> TERM . comment term NEWLINE END [ # ]
-- On RIGHT_PAR shift to state 3
-- On NEWLINE shift to state 18
-- On LEFT_PAR shift to state 5
-- On IDENT shift to state 19
-- On COMMA shift to state 7
-- On COLON shift to state 8
-- On punctuation shift to state 20
-- On comment shift to state 23

State 18:
comment -> NEWLINE . [ SORT LEFT_PAR IDENT ]
-- On SORT reduce production comment -> NEWLINE 
-- On LEFT_PAR reduce production comment -> NEWLINE 
-- On IDENT reduce production comment -> NEWLINE 

State 19:
comment -> IDENT . comment [ SORT LEFT_PAR IDENT ]
-- On RIGHT_PAR shift to state 3
-- On NEWLINE shift to state 18
-- On LEFT_PAR shift to state 5
-- On IDENT shift to state 19
-- On COMMA shift to state 7
-- On COLON shift to state 8
-- On punctuation shift to state 20
-- On comment shift to state 22

State 20:
comment -> punctuation . comment [ SORT LEFT_PAR IDENT ]
-- On RIGHT_PAR shift to state 3
-- On NEWLINE shift to state 18
-- On LEFT_PAR shift to state 5
-- On IDENT shift to state 19
-- On COMMA shift to state 7
-- On COLON shift to state 8
-- On punctuation shift to state 20
-- On comment shift to state 21

State 21:
comment -> punctuation comment . [ SORT LEFT_PAR IDENT ]
-- On SORT reduce production comment -> punctuation comment 
-- On LEFT_PAR reduce production comment -> punctuation comment 
-- On IDENT reduce production comment -> punctuation comment 

State 22:
comment -> IDENT comment . [ SORT LEFT_PAR IDENT ]
-- On SORT reduce production comment -> IDENT comment 
-- On LEFT_PAR reduce production comment -> IDENT comment 
-- On IDENT reduce production comment -> IDENT comment 

State 23:
term_oe -> TERM comment . term NEWLINE END [ # ]
-- On LEFT_PAR shift to state 24
-- On IDENT shift to state 26
-- On term shift to state 31

State 24:
term -> LEFT_PAR . IDENT term_seq RIGHT_PAR [ RIGHT_PAR NEWLINE LEFT_PAR IDENT EQUAL ]
-- On IDENT shift to state 25

State 25:
term -> LEFT_PAR IDENT . term_seq RIGHT_PAR [ RIGHT_PAR NEWLINE LEFT_PAR IDENT EQUAL ]
-- On LEFT_PAR shift to state 24
-- On IDENT shift to state 26
-- On term_seq shift to state 27
-- On term shift to state 29

State 26:
term -> IDENT . [ RIGHT_PAR NEWLINE LEFT_PAR IDENT EQUAL ]
-- On RIGHT_PAR reduce production term -> IDENT 
-- On NEWLINE reduce production term -> IDENT 
-- On LEFT_PAR reduce production term -> IDENT 
-- On IDENT reduce production term -> IDENT 
-- On EQUAL reduce production term -> IDENT 

State 27:
term -> LEFT_PAR IDENT term_seq . RIGHT_PAR [ RIGHT_PAR NEWLINE LEFT_PAR IDENT EQUAL ]
-- On RIGHT_PAR shift to state 28

State 28:
term -> LEFT_PAR IDENT term_seq RIGHT_PAR . [ RIGHT_PAR NEWLINE LEFT_PAR IDENT EQUAL ]
-- On RIGHT_PAR reduce production term -> LEFT_PAR IDENT term_seq RIGHT_PAR 
-- On NEWLINE reduce production term -> LEFT_PAR IDENT term_seq RIGHT_PAR 
-- On LEFT_PAR reduce production term -> LEFT_PAR IDENT term_seq RIGHT_PAR 
-- On IDENT reduce production term -> LEFT_PAR IDENT term_seq RIGHT_PAR 
-- On EQUAL reduce production term -> LEFT_PAR IDENT term_seq RIGHT_PAR 

State 29:
term_seq -> term . [ RIGHT_PAR ]
term_seq -> term . term_seq [ RIGHT_PAR ]
-- On LEFT_PAR shift to state 24
-- On IDENT shift to state 26
-- On term_seq shift to state 30
-- On term shift to state 29
-- On RIGHT_PAR reduce production term_seq -> term 

State 30:
term_seq -> term term_seq . [ RIGHT_PAR ]
-- On RIGHT_PAR reduce production term_seq -> term term_seq 

State 31:
term_oe -> TERM comment term . NEWLINE END [ # ]
-- On NEWLINE shift to state 32

State 32:
term_oe -> TERM comment term NEWLINE . END [ # ]
-- On END shift to state 33

State 33:
term_oe -> TERM comment term NEWLINE END . [ # ]
-- On # reduce production term_oe -> TERM comment term NEWLINE END 

State 34:
term_oe -> QUIT . comment [ # ]
-- On RIGHT_PAR shift to state 3
-- On NEWLINE shift to state 4
-- On LEFT_PAR shift to state 5
-- On IDENT shift to state 6
-- On COMMA shift to state 7
-- On COLON shift to state 8
-- On punctuation shift to state 9
-- On comment shift to state 35

State 35:
term_oe -> QUIT comment . [ # ]
-- On # reduce production term_oe -> QUIT comment 

State 36:
term_oe -> ERROR . comment [ # ]
-- On RIGHT_PAR shift to state 3
-- On NEWLINE shift to state 4
-- On LEFT_PAR shift to state 5
-- On IDENT shift to state 6
-- On COMMA shift to state 7
-- On COLON shift to state 8
-- On punctuation shift to state 9
-- On comment shift to state 37

State 37:
term_oe -> ERROR comment . [ # ]
-- On # reduce production term_oe -> ERROR comment 

State 38:
term_oe' -> term_oe . [ # ]
-- On # accept term_oe

State 39:
theory_oe' -> . theory_oe [ # ]
-- On THEORY shift to state 40
-- On ERROR shift to state 74
-- On theory_oe shift to state 76

State 40:
theory_oe -> THEORY . IDENT comment sortp signature rule_set END comment [ # ]
-- On IDENT shift to state 41

State 41:
theory_oe -> THEORY IDENT . comment sortp signature rule_set END comment [ # ]
-- On RIGHT_PAR shift to state 3
-- On NEWLINE shift to state 18
-- On LEFT_PAR shift to state 5
-- On IDENT shift to state 19
-- On COMMA shift to state 7
-- On COLON shift to state 8
-- On punctuation shift to state 20
-- On comment shift to state 42

State 42:
theory_oe -> THEORY IDENT comment . sortp signature rule_set END comment [ # ]
-- On SORT shift to state 43
-- On sortp shift to state 49
-- On sort shift to state 72

State 43:
sort -> SORT . ident_seq NEWLINE [ SORT FUNCTION ]
-- On IDENT shift to state 44
-- On ident_seq shift to state 47

State 44:
ident_seq -> IDENT . [ NEWLINE COLON ]
ident_seq -> IDENT . COMMA ident_seq [ NEWLINE COLON ]
-- On COMMA shift to state 45
-- On NEWLINE reduce production ident_seq -> IDENT 
-- On COLON reduce production ident_seq -> IDENT 

State 45:
ident_seq -> IDENT COMMA . ident_seq [ NEWLINE COLON ]
-- On IDENT shift to state 44
-- On ident_seq shift to state 46

State 46:
ident_seq -> IDENT COMMA ident_seq . [ NEWLINE COLON ]
-- On NEWLINE reduce production ident_seq -> IDENT COMMA ident_seq 
-- On COLON reduce production ident_seq -> IDENT COMMA ident_seq 

State 47:
sort -> SORT ident_seq . NEWLINE [ SORT FUNCTION ]
-- On NEWLINE shift to state 48

State 48:
sort -> SORT ident_seq NEWLINE . [ SORT FUNCTION ]
-- On SORT reduce production sort -> SORT ident_seq NEWLINE 
-- On FUNCTION reduce production sort -> SORT ident_seq NEWLINE 

State 49:
theory_oe -> THEORY IDENT comment sortp . signature rule_set END comment [ # ]
-- On FUNCTION shift to state 50
-- On symbol shift to state 58
-- On signature shift to state 60

State 50:
symbol -> FUNCTION . ident_seq COLON types NEWLINE [ RULE FUNCTION ]
-- On IDENT shift to state 44
-- On ident_seq shift to state 51

State 51:
symbol -> FUNCTION ident_seq . COLON types NEWLINE [ RULE FUNCTION ]
-- On COLON shift to state 52

State 52:
symbol -> FUNCTION ident_seq COLON . types NEWLINE [ RULE FUNCTION ]
-- On IDENT shift to state 53
-- On types shift to state 56

State 53:
types -> IDENT . [ NEWLINE ]
types -> IDENT . RIGHTARROW types [ NEWLINE ]
-- On RIGHTARROW shift to state 54
-- On NEWLINE reduce production types -> IDENT 

State 54:
types -> IDENT RIGHTARROW . types [ NEWLINE ]
-- On IDENT shift to state 53
-- On types shift to state 55

State 55:
types -> IDENT RIGHTARROW types . [ NEWLINE ]
-- On NEWLINE reduce production types -> IDENT RIGHTARROW types 

State 56:
symbol -> FUNCTION ident_seq COLON types . NEWLINE [ RULE FUNCTION ]
-- On NEWLINE shift to state 57

State 57:
symbol -> FUNCTION ident_seq COLON types NEWLINE . [ RULE FUNCTION ]
-- On RULE reduce production symbol -> FUNCTION ident_seq COLON types NEWLINE 
-- On FUNCTION reduce production symbol -> FUNCTION ident_seq COLON types NEWLINE 

State 58:
signature -> symbol . [ RULE ]
signature -> symbol . signature [ RULE ]
-- On FUNCTION shift to state 50
-- On symbol shift to state 58
-- On signature shift to state 59
-- On RULE reduce production signature -> symbol 

State 59:
signature -> symbol signature . [ RULE ]
-- On RULE reduce production signature -> symbol signature 

State 60:
theory_oe -> THEORY IDENT comment sortp signature . rule_set END comment [ # ]
-- On RULE shift to state 61
-- On rule_set shift to state 67
-- On rule shift to state 70

State 61:
rule -> RULE . IDENT term EQUAL term NEWLINE [ RULE END ]
-- On IDENT shift to state 62

State 62:
rule -> RULE IDENT . term EQUAL term NEWLINE [ RULE END ]
-- On LEFT_PAR shift to state 24
-- On IDENT shift to state 26
-- On term shift to state 63

State 63:
rule -> RULE IDENT term . EQUAL term NEWLINE [ RULE END ]
-- On EQUAL shift to state 64

State 64:
rule -> RULE IDENT term EQUAL . term NEWLINE [ RULE END ]
-- On LEFT_PAR shift to state 24
-- On IDENT shift to state 26
-- On term shift to state 65

State 65:
rule -> RULE IDENT term EQUAL term . NEWLINE [ RULE END ]
-- On NEWLINE shift to state 66

State 66:
rule -> RULE IDENT term EQUAL term NEWLINE . [ RULE END ]
-- On RULE reduce production rule -> RULE IDENT term EQUAL term NEWLINE 
-- On END reduce production rule -> RULE IDENT term EQUAL term NEWLINE 

State 67:
theory_oe -> THEORY IDENT comment sortp signature rule_set . END comment [ # ]
-- On END shift to state 68

State 68:
theory_oe -> THEORY IDENT comment sortp signature rule_set END . comment [ # ]
-- On RIGHT_PAR shift to state 3
-- On NEWLINE shift to state 4
-- On LEFT_PAR shift to state 5
-- On IDENT shift to state 6
-- On COMMA shift to state 7
-- On COLON shift to state 8
-- On punctuation shift to state 9
-- On comment shift to state 69

State 69:
theory_oe -> THEORY IDENT comment sortp signature rule_set END comment . [ # ]
-- On # reduce production theory_oe -> THEORY IDENT comment sortp signature rule_set END comment 

State 70:
rule_set -> rule . [ END ]
rule_set -> rule . rule_set [ END ]
-- On RULE shift to state 61
-- On rule_set shift to state 71
-- On rule shift to state 70
-- On END reduce production rule_set -> rule 

State 71:
rule_set -> rule rule_set . [ END ]
-- On END reduce production rule_set -> rule rule_set 

State 72:
sortp -> sort . [ FUNCTION ]
sortp -> sort . sortp [ FUNCTION ]
-- On SORT shift to state 43
-- On sortp shift to state 73
-- On sort shift to state 72
-- On FUNCTION reduce production sortp -> sort 

State 73:
sortp -> sort sortp . [ FUNCTION ]
-- On FUNCTION reduce production sortp -> sort sortp 

State 74:
theory_oe -> ERROR . comment [ # ]
-- On RIGHT_PAR shift to state 3
-- On NEWLINE shift to state 4
-- On LEFT_PAR shift to state 5
-- On IDENT shift to state 6
-- On COMMA shift to state 7
-- On COLON shift to state 8
-- On punctuation shift to state 9
-- On comment shift to state 75

State 75:
theory_oe -> ERROR comment . [ # ]
-- On # reduce production theory_oe -> ERROR comment 

State 76:
theory_oe' -> theory_oe . [ # ]
-- On # accept theory_oe

