State 0:
gen_poly_entry' -> . gen_poly_entry [ # ]
-- On VAR shift to state 1
-- On PARGAUCHE shift to state 2
-- On MINUS shift to state 3
-- On INT shift to state 4
-- On gen_poly_entry shift to state 16
-- On gen_poly shift to state 17

State 1:
gen_poly -> VAR . [ PLUS PARDROITE MULT MINUS EXP EOF ]
-- On PLUS reduce production gen_poly -> VAR
-- On PARDROITE reduce production gen_poly -> VAR
-- On MULT reduce production gen_poly -> VAR
-- On MINUS reduce production gen_poly -> VAR
-- On EXP reduce production gen_poly -> VAR
-- On EOF reduce production gen_poly -> VAR

State 2:
gen_poly -> PARGAUCHE . gen_poly PARDROITE [ PLUS PARDROITE MULT MINUS EXP EOF ]
-- On VAR shift to state 1
-- On PARGAUCHE shift to state 2
-- On MINUS shift to state 3
-- On INT shift to state 4
-- On gen_poly shift to state 8

State 3:
gen_poly -> MINUS . gen_poly [ PLUS PARDROITE MULT MINUS EXP EOF ]
-- On VAR shift to state 1
-- On PARGAUCHE shift to state 2
-- On MINUS shift to state 3
-- On INT shift to state 4
-- On gen_poly shift to state 5

State 4:
gen_poly -> INT . [ PLUS PARDROITE MULT MINUS EXP EOF ]
-- On PLUS reduce production gen_poly -> INT
-- On PARDROITE reduce production gen_poly -> INT
-- On MULT reduce production gen_poly -> INT
-- On MINUS reduce production gen_poly -> INT
-- On EXP reduce production gen_poly -> INT
-- On EOF reduce production gen_poly -> INT

State 5:
gen_poly -> gen_poly . PLUS gen_poly [ PLUS PARDROITE MULT MINUS EXP EOF ]
gen_poly -> gen_poly . MINUS gen_poly [ PLUS PARDROITE MULT MINUS EXP EOF ]
gen_poly -> MINUS gen_poly . [ PLUS PARDROITE MULT MINUS EXP EOF ]
gen_poly -> gen_poly . MULT gen_poly [ PLUS PARDROITE MULT MINUS EXP EOF ]
gen_poly -> gen_poly . EXP INT [ PLUS PARDROITE MULT MINUS EXP EOF ]
-- On EXP shift to state 6
-- On PLUS reduce production gen_poly -> MINUS gen_poly
-- On PARDROITE reduce production gen_poly -> MINUS gen_poly
-- On MULT reduce production gen_poly -> MINUS gen_poly
-- On MINUS reduce production gen_poly -> MINUS gen_poly
-- On EOF reduce production gen_poly -> MINUS gen_poly

State 6:
gen_poly -> gen_poly EXP . INT [ PLUS PARDROITE MULT MINUS EXP EOF ]
-- On INT shift to state 7

State 7:
gen_poly -> gen_poly EXP INT . [ PLUS PARDROITE MULT MINUS EXP EOF ]
-- On PLUS reduce production gen_poly -> gen_poly EXP INT
-- On PARDROITE reduce production gen_poly -> gen_poly EXP INT
-- On MULT reduce production gen_poly -> gen_poly EXP INT
-- On MINUS reduce production gen_poly -> gen_poly EXP INT
-- On EXP reduce production gen_poly -> gen_poly EXP INT
-- On EOF reduce production gen_poly -> gen_poly EXP INT

State 8:
gen_poly -> PARGAUCHE gen_poly . PARDROITE [ PLUS PARDROITE MULT MINUS EXP EOF ]
gen_poly -> gen_poly . PLUS gen_poly [ PLUS PARDROITE MULT MINUS EXP ]
gen_poly -> gen_poly . MINUS gen_poly [ PLUS PARDROITE MULT MINUS EXP ]
gen_poly -> gen_poly . MULT gen_poly [ PLUS PARDROITE MULT MINUS EXP ]
gen_poly -> gen_poly . EXP INT [ PLUS PARDROITE MULT MINUS EXP ]
-- On PLUS shift to state 9
-- On PARDROITE shift to state 13
-- On MULT shift to state 11
-- On MINUS shift to state 14
-- On EXP shift to state 6

State 9:
gen_poly -> gen_poly PLUS . gen_poly [ PLUS PARDROITE MULT MINUS EXP EOF ]
-- On VAR shift to state 1
-- On PARGAUCHE shift to state 2
-- On MINUS shift to state 3
-- On INT shift to state 4
-- On gen_poly shift to state 10

State 10:
gen_poly -> gen_poly . PLUS gen_poly [ PLUS PARDROITE MULT MINUS EXP EOF ]
gen_poly -> gen_poly PLUS gen_poly . [ PLUS PARDROITE MULT MINUS EXP EOF ]
gen_poly -> gen_poly . MINUS gen_poly [ PLUS PARDROITE MULT MINUS EXP EOF ]
gen_poly -> gen_poly . MULT gen_poly [ PLUS PARDROITE MULT MINUS EXP EOF ]
gen_poly -> gen_poly . EXP INT [ PLUS PARDROITE MULT MINUS EXP EOF ]
-- On MULT shift to state 11
-- On EXP shift to state 6
-- On PLUS reduce production gen_poly -> gen_poly PLUS gen_poly
-- On PARDROITE reduce production gen_poly -> gen_poly PLUS gen_poly
-- On MINUS reduce production gen_poly -> gen_poly PLUS gen_poly
-- On EOF reduce production gen_poly -> gen_poly PLUS gen_poly

State 11:
gen_poly -> gen_poly MULT . gen_poly [ PLUS PARDROITE MULT MINUS EXP EOF ]
-- On VAR shift to state 1
-- On PARGAUCHE shift to state 2
-- On MINUS shift to state 3
-- On INT shift to state 4
-- On gen_poly shift to state 12

State 12:
gen_poly -> gen_poly . PLUS gen_poly [ PLUS PARDROITE MULT MINUS EXP EOF ]
gen_poly -> gen_poly . MINUS gen_poly [ PLUS PARDROITE MULT MINUS EXP EOF ]
gen_poly -> gen_poly . MULT gen_poly [ PLUS PARDROITE MULT MINUS EXP EOF ]
gen_poly -> gen_poly MULT gen_poly . [ PLUS PARDROITE MULT MINUS EXP EOF ]
gen_poly -> gen_poly . EXP INT [ PLUS PARDROITE MULT MINUS EXP EOF ]
-- On EXP shift to state 6
-- On PLUS reduce production gen_poly -> gen_poly MULT gen_poly
-- On PARDROITE reduce production gen_poly -> gen_poly MULT gen_poly
-- On MULT reduce production gen_poly -> gen_poly MULT gen_poly
-- On MINUS reduce production gen_poly -> gen_poly MULT gen_poly
-- On EOF reduce production gen_poly -> gen_poly MULT gen_poly

State 13:
gen_poly -> PARGAUCHE gen_poly PARDROITE . [ PLUS PARDROITE MULT MINUS EXP EOF ]
-- On PLUS reduce production gen_poly -> PARGAUCHE gen_poly PARDROITE
-- On PARDROITE reduce production gen_poly -> PARGAUCHE gen_poly PARDROITE
-- On MULT reduce production gen_poly -> PARGAUCHE gen_poly PARDROITE
-- On MINUS reduce production gen_poly -> PARGAUCHE gen_poly PARDROITE
-- On EXP reduce production gen_poly -> PARGAUCHE gen_poly PARDROITE
-- On EOF reduce production gen_poly -> PARGAUCHE gen_poly PARDROITE

State 14:
gen_poly -> gen_poly MINUS . gen_poly [ PLUS PARDROITE MULT MINUS EXP EOF ]
-- On VAR shift to state 1
-- On PARGAUCHE shift to state 2
-- On MINUS shift to state 3
-- On INT shift to state 4
-- On gen_poly shift to state 15

State 15:
gen_poly -> gen_poly . PLUS gen_poly [ PLUS PARDROITE MULT MINUS EXP EOF ]
gen_poly -> gen_poly . MINUS gen_poly [ PLUS PARDROITE MULT MINUS EXP EOF ]
gen_poly -> gen_poly MINUS gen_poly . [ PLUS PARDROITE MULT MINUS EXP EOF ]
gen_poly -> gen_poly . MULT gen_poly [ PLUS PARDROITE MULT MINUS EXP EOF ]
gen_poly -> gen_poly . EXP INT [ PLUS PARDROITE MULT MINUS EXP EOF ]
-- On MULT shift to state 11
-- On EXP shift to state 6
-- On PLUS reduce production gen_poly -> gen_poly MINUS gen_poly
-- On PARDROITE reduce production gen_poly -> gen_poly MINUS gen_poly
-- On MINUS reduce production gen_poly -> gen_poly MINUS gen_poly
-- On EOF reduce production gen_poly -> gen_poly MINUS gen_poly

State 16:
gen_poly_entry' -> gen_poly_entry . [ # ]
-- On # accept gen_poly_entry

State 17:
gen_poly -> gen_poly . PLUS gen_poly [ PLUS MULT MINUS EXP EOF ]
gen_poly -> gen_poly . MINUS gen_poly [ PLUS MULT MINUS EXP EOF ]
gen_poly -> gen_poly . MULT gen_poly [ PLUS MULT MINUS EXP EOF ]
gen_poly -> gen_poly . EXP INT [ PLUS MULT MINUS EXP EOF ]
gen_poly_entry -> gen_poly . EOF [ # ]
-- On PLUS shift to state 9
-- On MULT shift to state 11
-- On MINUS shift to state 14
-- On EXP shift to state 6
-- On EOF shift to state 18

State 18:
gen_poly_entry -> gen_poly EOF . [ # ]
-- On # reduce production gen_poly_entry -> gen_poly EOF

State 19:
poly_interp_entry' -> . poly_interp_entry [ # ]
-- On INTERP shift to state 20
-- On symbol_interp shift to state 27
-- On poly_interp_entry shift to state 47
-- On interp shift to state 48
-- On EOF reduce production interp -> 

State 20:
symbol_interp -> INTERP . [ EQUAL ]
symbol_interp -> INTERP . PARGAUCHE vars [ EQUAL ]
-- On PARGAUCHE shift to state 21
-- On EQUAL reduce production symbol_interp -> INTERP

State 21:
symbol_interp -> INTERP PARGAUCHE . vars [ EQUAL ]
-- On VAR shift to state 22
-- On vars shift to state 26

State 22:
vars -> VAR . PARDROITE [ EQUAL ]
vars -> VAR . COMMA vars [ EQUAL ]
-- On PARDROITE shift to state 23
-- On COMMA shift to state 24

State 23:
vars -> VAR PARDROITE . [ EQUAL ]
-- On EQUAL reduce production vars -> VAR PARDROITE

State 24:
vars -> VAR COMMA . vars [ EQUAL ]
-- On VAR shift to state 22
-- On vars shift to state 25

State 25:
vars -> VAR COMMA vars . [ EQUAL ]
-- On EQUAL reduce production vars -> VAR COMMA vars

State 26:
symbol_interp -> INTERP PARGAUCHE vars . [ EQUAL ]
-- On EQUAL reduce production symbol_interp -> INTERP PARGAUCHE vars

State 27:
interp -> symbol_interp . EQUAL poly SEMICOLON interp [ EOF ]
-- On EQUAL shift to state 28

State 28:
interp -> symbol_interp EQUAL . poly SEMICOLON interp [ EOF ]
-- On VAR shift to state 29
-- On PARGAUCHE shift to state 30
-- On MINUS shift to state 31
-- On INT shift to state 32
-- On poly shift to state 44

State 29:
poly -> VAR . [ SEMICOLON PLUS PARDROITE MULT MINUS EXP ]
-- On SEMICOLON reduce production poly -> VAR
-- On PLUS reduce production poly -> VAR
-- On PARDROITE reduce production poly -> VAR
-- On MULT reduce production poly -> VAR
-- On MINUS reduce production poly -> VAR
-- On EXP reduce production poly -> VAR

State 30:
poly -> PARGAUCHE . poly PARDROITE [ SEMICOLON PLUS PARDROITE MULT MINUS EXP ]
-- On VAR shift to state 29
-- On PARGAUCHE shift to state 30
-- On MINUS shift to state 31
-- On INT shift to state 32
-- On poly shift to state 36

State 31:
poly -> MINUS . poly [ SEMICOLON PLUS PARDROITE MULT MINUS EXP ]
-- On VAR shift to state 29
-- On PARGAUCHE shift to state 30
-- On MINUS shift to state 31
-- On INT shift to state 32
-- On poly shift to state 33

State 32:
poly -> INT . [ SEMICOLON PLUS PARDROITE MULT MINUS EXP ]
-- On SEMICOLON reduce production poly -> INT
-- On PLUS reduce production poly -> INT
-- On PARDROITE reduce production poly -> INT
-- On MULT reduce production poly -> INT
-- On MINUS reduce production poly -> INT
-- On EXP reduce production poly -> INT

State 33:
poly -> poly . PLUS poly [ SEMICOLON PLUS PARDROITE MULT MINUS EXP ]
poly -> poly . MINUS poly [ SEMICOLON PLUS PARDROITE MULT MINUS EXP ]
poly -> MINUS poly . [ SEMICOLON PLUS PARDROITE MULT MINUS EXP ]
poly -> poly . MULT poly [ SEMICOLON PLUS PARDROITE MULT MINUS EXP ]
poly -> poly . EXP INT [ SEMICOLON PLUS PARDROITE MULT MINUS EXP ]
-- On EXP shift to state 34
-- On SEMICOLON reduce production poly -> MINUS poly
-- On PLUS reduce production poly -> MINUS poly
-- On PARDROITE reduce production poly -> MINUS poly
-- On MULT reduce production poly -> MINUS poly
-- On MINUS reduce production poly -> MINUS poly

State 34:
poly -> poly EXP . INT [ SEMICOLON PLUS PARDROITE MULT MINUS EXP ]
-- On INT shift to state 35

State 35:
poly -> poly EXP INT . [ SEMICOLON PLUS PARDROITE MULT MINUS EXP ]
-- On SEMICOLON reduce production poly -> poly EXP INT
-- On PLUS reduce production poly -> poly EXP INT
-- On PARDROITE reduce production poly -> poly EXP INT
-- On MULT reduce production poly -> poly EXP INT
-- On MINUS reduce production poly -> poly EXP INT
-- On EXP reduce production poly -> poly EXP INT

State 36:
poly -> PARGAUCHE poly . PARDROITE [ SEMICOLON PLUS PARDROITE MULT MINUS EXP ]
poly -> poly . PLUS poly [ PLUS PARDROITE MULT MINUS EXP ]
poly -> poly . MINUS poly [ PLUS PARDROITE MULT MINUS EXP ]
poly -> poly . MULT poly [ PLUS PARDROITE MULT MINUS EXP ]
poly -> poly . EXP INT [ PLUS PARDROITE MULT MINUS EXP ]
-- On PLUS shift to state 37
-- On PARDROITE shift to state 41
-- On MULT shift to state 39
-- On MINUS shift to state 42
-- On EXP shift to state 34

State 37:
poly -> poly PLUS . poly [ SEMICOLON PLUS PARDROITE MULT MINUS EXP ]
-- On VAR shift to state 29
-- On PARGAUCHE shift to state 30
-- On MINUS shift to state 31
-- On INT shift to state 32
-- On poly shift to state 38

State 38:
poly -> poly . PLUS poly [ SEMICOLON PLUS PARDROITE MULT MINUS EXP ]
poly -> poly PLUS poly . [ SEMICOLON PLUS PARDROITE MULT MINUS EXP ]
poly -> poly . MINUS poly [ SEMICOLON PLUS PARDROITE MULT MINUS EXP ]
poly -> poly . MULT poly [ SEMICOLON PLUS PARDROITE MULT MINUS EXP ]
poly -> poly . EXP INT [ SEMICOLON PLUS PARDROITE MULT MINUS EXP ]
-- On MULT shift to state 39
-- On EXP shift to state 34
-- On SEMICOLON reduce production poly -> poly PLUS poly
-- On PLUS reduce production poly -> poly PLUS poly
-- On PARDROITE reduce production poly -> poly PLUS poly
-- On MINUS reduce production poly -> poly PLUS poly

State 39:
poly -> poly MULT . poly [ SEMICOLON PLUS PARDROITE MULT MINUS EXP ]
-- On VAR shift to state 29
-- On PARGAUCHE shift to state 30
-- On MINUS shift to state 31
-- On INT shift to state 32
-- On poly shift to state 40

State 40:
poly -> poly . PLUS poly [ SEMICOLON PLUS PARDROITE MULT MINUS EXP ]
poly -> poly . MINUS poly [ SEMICOLON PLUS PARDROITE MULT MINUS EXP ]
poly -> poly . MULT poly [ SEMICOLON PLUS PARDROITE MULT MINUS EXP ]
poly -> poly MULT poly . [ SEMICOLON PLUS PARDROITE MULT MINUS EXP ]
poly -> poly . EXP INT [ SEMICOLON PLUS PARDROITE MULT MINUS EXP ]
-- On EXP shift to state 34
-- On SEMICOLON reduce production poly -> poly MULT poly
-- On PLUS reduce production poly -> poly MULT poly
-- On PARDROITE reduce production poly -> poly MULT poly
-- On MULT reduce production poly -> poly MULT poly
-- On MINUS reduce production poly -> poly MULT poly

State 41:
poly -> PARGAUCHE poly PARDROITE . [ SEMICOLON PLUS PARDROITE MULT MINUS EXP ]
-- On SEMICOLON reduce production poly -> PARGAUCHE poly PARDROITE
-- On PLUS reduce production poly -> PARGAUCHE poly PARDROITE
-- On PARDROITE reduce production poly -> PARGAUCHE poly PARDROITE
-- On MULT reduce production poly -> PARGAUCHE poly PARDROITE
-- On MINUS reduce production poly -> PARGAUCHE poly PARDROITE
-- On EXP reduce production poly -> PARGAUCHE poly PARDROITE

State 42:
poly -> poly MINUS . poly [ SEMICOLON PLUS PARDROITE MULT MINUS EXP ]
-- On VAR shift to state 29
-- On PARGAUCHE shift to state 30
-- On MINUS shift to state 31
-- On INT shift to state 32
-- On poly shift to state 43

State 43:
poly -> poly . PLUS poly [ SEMICOLON PLUS PARDROITE MULT MINUS EXP ]
poly -> poly . MINUS poly [ SEMICOLON PLUS PARDROITE MULT MINUS EXP ]
poly -> poly MINUS poly . [ SEMICOLON PLUS PARDROITE MULT MINUS EXP ]
poly -> poly . MULT poly [ SEMICOLON PLUS PARDROITE MULT MINUS EXP ]
poly -> poly . EXP INT [ SEMICOLON PLUS PARDROITE MULT MINUS EXP ]
-- On MULT shift to state 39
-- On EXP shift to state 34
-- On SEMICOLON reduce production poly -> poly MINUS poly
-- On PLUS reduce production poly -> poly MINUS poly
-- On PARDROITE reduce production poly -> poly MINUS poly
-- On MINUS reduce production poly -> poly MINUS poly

State 44:
interp -> symbol_interp EQUAL poly . SEMICOLON interp [ EOF ]
poly -> poly . PLUS poly [ SEMICOLON PLUS MULT MINUS EXP ]
poly -> poly . MINUS poly [ SEMICOLON PLUS MULT MINUS EXP ]
poly -> poly . MULT poly [ SEMICOLON PLUS MULT MINUS EXP ]
poly -> poly . EXP INT [ SEMICOLON PLUS MULT MINUS EXP ]
-- On SEMICOLON shift to state 45
-- On PLUS shift to state 37
-- On MULT shift to state 39
-- On MINUS shift to state 42
-- On EXP shift to state 34

State 45:
interp -> symbol_interp EQUAL poly SEMICOLON . interp [ EOF ]
-- On INTERP shift to state 20
-- On symbol_interp shift to state 27
-- On interp shift to state 46
-- On EOF reduce production interp -> 

State 46:
interp -> symbol_interp EQUAL poly SEMICOLON interp . [ EOF ]
-- On EOF reduce production interp -> symbol_interp EQUAL poly SEMICOLON interp

State 47:
poly_interp_entry' -> poly_interp_entry . [ # ]
-- On # accept poly_interp_entry

State 48:
poly_interp_entry -> interp . EOF [ # ]
-- On EOF shift to state 49

State 49:
poly_interp_entry -> interp EOF . [ # ]
-- On # reduce production poly_interp_entry -> interp EOF

