State 0:
## Known stack suffix:
##
## LR(1) items:
donnees' -> . donnees [ # ]
## Transitions:
-- On UNIFICATION shift to state 1
-- On TOKEN_INCLUDE shift to state 48
-- On THEORIE shift to state 8
-- On SUBSORTES shift to state 50
-- On SORTES shift to state 51
-- On PROBLEMES shift to state 52
-- On ORDRE shift to state 53
-- On OPERATEURS shift to state 54
-- On KW_END shift to state 55
-- On INDUCTIVE shift to state 56
-- On EQUATIONS shift to state 57
-- On EOF shift to state 58
-- On CONJECTURES shift to state 59
-- On keyword_theory shift to state 60
-- On keyword_subsortes shift to state 62
-- On keyword_sortes shift to state 70
-- On keyword_problems shift to state 75
-- On keyword_order shift to state 102
-- On keyword_operators shift to state 197
-- On keyword_inductive shift to state 230
-- On keyword_conjectures shift to state 238
-- On keyword_axioms shift to state 240
-- On donnees shift to state 242
-- On declaration shift to state 243
## Reductions:

State 1:
## Known stack suffix:
## UNIFICATION
## LR(1) items:
declaration -> UNIFICATION . keyword_theory theorie [ UNIFICATION TOKEN_INCLUDE THEORIE SUBSORTES SORTES PROBLEMES ORDRE OPERATEURS KW_END INDUCTIVE EQUATIONS EOF CONJECTURES ]
declaration -> UNIFICATION . TYPE unif_type [ UNIFICATION TOKEN_INCLUDE THEORIE SUBSORTES SORTES PROBLEMES ORDRE OPERATEURS KW_END INDUCTIVE EQUATIONS EOF CONJECTURES ]
## Transitions:
-- On TYPE shift to state 2
-- On THEORIE shift to state 8
-- On keyword_theory shift to state 9
## Reductions:

State 2:
## Known stack suffix:
## UNIFICATION TYPE
## LR(1) items:
declaration -> UNIFICATION TYPE . unif_type [ UNIFICATION TOKEN_INCLUDE THEORIE SUBSORTES SORTES PROBLEMES ORDRE OPERATEURS KW_END INDUCTIVE EQUATIONS EOF CONJECTURES ]
## Transitions:
-- On TOKEN_AC shift to state 3
-- On PLAIN shift to state 6
-- On unif_type shift to state 7
## Reductions:

State 3:
## Known stack suffix:
## TOKEN_AC
## LR(1) items:
unif_type -> TOKEN_AC . ONLY [ UNIFIER UNIFICATION TOKEN_INCLUDE THEORIE SUBSORTES SORTES PROBLEMES ORDRE OPERATEURS KW_END INDUCTIVE EQUATIONS EOF CONJECTURES ]
unif_type -> TOKEN_AC . COMPLETE [ UNIFIER UNIFICATION TOKEN_INCLUDE THEORIE SUBSORTES SORTES PROBLEMES ORDRE OPERATEURS KW_END INDUCTIVE EQUATIONS EOF CONJECTURES ]
## Transitions:
-- On ONLY shift to state 4
-- On COMPLETE shift to state 5
## Reductions:

State 4:
## Known stack suffix:
## TOKEN_AC ONLY
## LR(1) items:
unif_type -> TOKEN_AC ONLY . [ UNIFIER UNIFICATION TOKEN_INCLUDE THEORIE SUBSORTES SORTES PROBLEMES ORDRE OPERATEURS KW_END INDUCTIVE EQUATIONS EOF CONJECTURES ]
## Transitions:
## Reductions:
-- On UNIFIER reduce production unif_type -> TOKEN_AC ONLY
-- On UNIFICATION reduce production unif_type -> TOKEN_AC ONLY
-- On TOKEN_INCLUDE reduce production unif_type -> TOKEN_AC ONLY
-- On THEORIE reduce production unif_type -> TOKEN_AC ONLY
-- On SUBSORTES reduce production unif_type -> TOKEN_AC ONLY
-- On SORTES reduce production unif_type -> TOKEN_AC ONLY
-- On PROBLEMES reduce production unif_type -> TOKEN_AC ONLY
-- On ORDRE reduce production unif_type -> TOKEN_AC ONLY
-- On OPERATEURS reduce production unif_type -> TOKEN_AC ONLY
-- On KW_END reduce production unif_type -> TOKEN_AC ONLY
-- On INDUCTIVE reduce production unif_type -> TOKEN_AC ONLY
-- On EQUATIONS reduce production unif_type -> TOKEN_AC ONLY
-- On EOF reduce production unif_type -> TOKEN_AC ONLY
-- On CONJECTURES reduce production unif_type -> TOKEN_AC ONLY

State 5:
## Known stack suffix:
## TOKEN_AC COMPLETE
## LR(1) items:
unif_type -> TOKEN_AC COMPLETE . [ UNIFIER UNIFICATION TOKEN_INCLUDE THEORIE SUBSORTES SORTES PROBLEMES ORDRE OPERATEURS KW_END INDUCTIVE EQUATIONS EOF CONJECTURES ]
## Transitions:
## Reductions:
-- On UNIFIER reduce production unif_type -> TOKEN_AC COMPLETE
-- On UNIFICATION reduce production unif_type -> TOKEN_AC COMPLETE
-- On TOKEN_INCLUDE reduce production unif_type -> TOKEN_AC COMPLETE
-- On THEORIE reduce production unif_type -> TOKEN_AC COMPLETE
-- On SUBSORTES reduce production unif_type -> TOKEN_AC COMPLETE
-- On SORTES reduce production unif_type -> TOKEN_AC COMPLETE
-- On PROBLEMES reduce production unif_type -> TOKEN_AC COMPLETE
-- On ORDRE reduce production unif_type -> TOKEN_AC COMPLETE
-- On OPERATEURS reduce production unif_type -> TOKEN_AC COMPLETE
-- On KW_END reduce production unif_type -> TOKEN_AC COMPLETE
-- On INDUCTIVE reduce production unif_type -> TOKEN_AC COMPLETE
-- On EQUATIONS reduce production unif_type -> TOKEN_AC COMPLETE
-- On EOF reduce production unif_type -> TOKEN_AC COMPLETE
-- On CONJECTURES reduce production unif_type -> TOKEN_AC COMPLETE

State 6:
## Known stack suffix:
## PLAIN
## LR(1) items:
unif_type -> PLAIN . [ UNIFIER UNIFICATION TOKEN_INCLUDE THEORIE SUBSORTES SORTES PROBLEMES ORDRE OPERATEURS KW_END INDUCTIVE EQUATIONS EOF CONJECTURES ]
## Transitions:
## Reductions:
-- On UNIFIER reduce production unif_type -> PLAIN
-- On UNIFICATION reduce production unif_type -> PLAIN
-- On TOKEN_INCLUDE reduce production unif_type -> PLAIN
-- On THEORIE reduce production unif_type -> PLAIN
-- On SUBSORTES reduce production unif_type -> PLAIN
-- On SORTES reduce production unif_type -> PLAIN
-- On PROBLEMES reduce production unif_type -> PLAIN
-- On ORDRE reduce production unif_type -> PLAIN
-- On OPERATEURS reduce production unif_type -> PLAIN
-- On KW_END reduce production unif_type -> PLAIN
-- On INDUCTIVE reduce production unif_type -> PLAIN
-- On EQUATIONS reduce production unif_type -> PLAIN
-- On EOF reduce production unif_type -> PLAIN
-- On CONJECTURES reduce production unif_type -> PLAIN

State 7:
## Known stack suffix:
## UNIFICATION TYPE unif_type
## LR(1) items:
declaration -> UNIFICATION TYPE unif_type . [ UNIFICATION TOKEN_INCLUDE THEORIE SUBSORTES SORTES PROBLEMES ORDRE OPERATEURS KW_END INDUCTIVE EQUATIONS EOF CONJECTURES ]
## Transitions:
## Reductions:
-- On UNIFICATION reduce production declaration -> UNIFICATION TYPE unif_type
-- On TOKEN_INCLUDE reduce production declaration -> UNIFICATION TYPE unif_type
-- On THEORIE reduce production declaration -> UNIFICATION TYPE unif_type
-- On SUBSORTES reduce production declaration -> UNIFICATION TYPE unif_type
-- On SORTES reduce production declaration -> UNIFICATION TYPE unif_type
-- On PROBLEMES reduce production declaration -> UNIFICATION TYPE unif_type
-- On ORDRE reduce production declaration -> UNIFICATION TYPE unif_type
-- On OPERATEURS reduce production declaration -> UNIFICATION TYPE unif_type
-- On KW_END reduce production declaration -> UNIFICATION TYPE unif_type
-- On INDUCTIVE reduce production declaration -> UNIFICATION TYPE unif_type
-- On EQUATIONS reduce production declaration -> UNIFICATION TYPE unif_type
-- On EOF reduce production declaration -> UNIFICATION TYPE unif_type
-- On CONJECTURES reduce production declaration -> UNIFICATION TYPE unif_type

State 8:
## Known stack suffix:
## THEORIE
## LR(1) items:
keyword_theory -> THEORIE . [ TOKEN_USER IDENT ]
## Transitions:
## Reductions:
-- On TOKEN_USER reduce production keyword_theory -> THEORIE
-- On IDENT reduce production keyword_theory -> THEORIE

State 9:
## Known stack suffix:
## UNIFICATION keyword_theory
## LR(1) items:
declaration -> UNIFICATION keyword_theory . theorie [ UNIFICATION TOKEN_INCLUDE THEORIE SUBSORTES SORTES PROBLEMES ORDRE OPERATEURS KW_END INDUCTIVE EQUATIONS EOF CONJECTURES ]
## Transitions:
-- On TOKEN_USER shift to state 10
-- On IDENT shift to state 11
-- On theorie shift to state 12
-- On keyword_user shift to state 13
-- On ident shift to state 39
-- On decl_theorie shift to state 46
## Reductions:

State 10:
## Known stack suffix:
## TOKEN_USER
## LR(1) items:
keyword_user -> TOKEN_USER . [ PARGAUCHE ]
## Transitions:
## Reductions:
-- On PARGAUCHE reduce production keyword_user -> TOKEN_USER

State 11:
## Known stack suffix:
## IDENT
## LR(1) items:
ident -> IDENT . [ VIRGULE SUPERIEUR RLLEX POINT_VIRGULE PARGAUCHE PARDROITE MUL LRLEX INFERIEUR EGAL DEUX_POINTS CRODROIT ]
## Transitions:
## Reductions:
-- On VIRGULE reduce production ident -> IDENT
-- On SUPERIEUR reduce production ident -> IDENT
-- On RLLEX reduce production ident -> IDENT
-- On POINT_VIRGULE reduce production ident -> IDENT
-- On PARGAUCHE reduce production ident -> IDENT
-- On PARDROITE reduce production ident -> IDENT
-- On MUL reduce production ident -> IDENT
-- On LRLEX reduce production ident -> IDENT
-- On INFERIEUR reduce production ident -> IDENT
-- On EGAL reduce production ident -> IDENT
-- On DEUX_POINTS reduce production ident -> IDENT
-- On CRODROIT reduce production ident -> IDENT

State 12:
## Known stack suffix:
## UNIFICATION keyword_theory theorie
## LR(1) items:
declaration -> UNIFICATION keyword_theory theorie . [ UNIFICATION TOKEN_INCLUDE THEORIE SUBSORTES SORTES PROBLEMES ORDRE OPERATEURS KW_END INDUCTIVE EQUATIONS EOF CONJECTURES ]
## Transitions:
## Reductions:
-- On UNIFICATION reduce production declaration -> UNIFICATION keyword_theory theorie
-- On TOKEN_INCLUDE reduce production declaration -> UNIFICATION keyword_theory theorie
-- On THEORIE reduce production declaration -> UNIFICATION keyword_theory theorie
-- On SUBSORTES reduce production declaration -> UNIFICATION keyword_theory theorie
-- On SORTES reduce production declaration -> UNIFICATION keyword_theory theorie
-- On PROBLEMES reduce production declaration -> UNIFICATION keyword_theory theorie
-- On ORDRE reduce production declaration -> UNIFICATION keyword_theory theorie
-- On OPERATEURS reduce production declaration -> UNIFICATION keyword_theory theorie
-- On KW_END reduce production declaration -> UNIFICATION keyword_theory theorie
-- On INDUCTIVE reduce production declaration -> UNIFICATION keyword_theory theorie
-- On EQUATIONS reduce production declaration -> UNIFICATION keyword_theory theorie
-- On EOF reduce production declaration -> UNIFICATION keyword_theory theorie
-- On CONJECTURES reduce production declaration -> UNIFICATION keyword_theory theorie

State 13:
## Known stack suffix:
## keyword_user
## LR(1) items:
decl_theorie -> keyword_user . PARGAUCHE regle_list PARDROITE [ UNIFICATION TOKEN_USER TOKEN_INCLUDE THEORIE SUBSORTES SORTES PROBLEMES ORDRE OPERATEURS KW_END INDUCTIVE IDENT EQUATIONS EOF CONJECTURES ]
## Transitions:
-- On PARGAUCHE shift to state 14
## Reductions:

State 14:
## Known stack suffix:
## keyword_user PARGAUCHE
## LR(1) items:
decl_theorie -> keyword_user PARGAUCHE . regle_list PARDROITE [ UNIFICATION TOKEN_USER TOKEN_INCLUDE THEORIE SUBSORTES SORTES PROBLEMES ORDRE OPERATEURS KW_END INDUCTIVE IDENT EQUATIONS EOF CONJECTURES ]
## Transitions:
-- On PREFIX_IDENT shift to state 15
-- On PARGAUCHE shift to state 17
-- On term shift to state 31
-- On regle_list shift to state 34
-- On regle shift to state 36
## Reductions:

State 15:
## Known stack suffix:
## PREFIX_IDENT
## LR(1) items:
term -> PREFIX_IDENT . [ WITH VIRGULE POINT_VIRGULE PARDROITE INFIX_IDENT FLECHE EOF EGAL ]
term -> PREFIX_IDENT . PARGAUCHE term_list PARDROITE [ WITH VIRGULE POINT_VIRGULE PARDROITE INFIX_IDENT FLECHE EOF EGAL ]
## Transitions:
-- On PARGAUCHE shift to state 16
## Reductions:
-- On WITH reduce production term -> PREFIX_IDENT
-- On VIRGULE reduce production term -> PREFIX_IDENT
-- On POINT_VIRGULE reduce production term -> PREFIX_IDENT
-- On PARDROITE reduce production term -> PREFIX_IDENT
-- On INFIX_IDENT reduce production term -> PREFIX_IDENT
-- On FLECHE reduce production term -> PREFIX_IDENT
-- On EOF reduce production term -> PREFIX_IDENT
-- On EGAL reduce production term -> PREFIX_IDENT

State 16:
## Known stack suffix:
## PREFIX_IDENT PARGAUCHE
## LR(1) items:
term -> PREFIX_IDENT PARGAUCHE . term_list PARDROITE [ WITH VIRGULE POINT_VIRGULE PARDROITE INFIX_IDENT FLECHE EOF EGAL ]
## Transitions:
-- On PREFIX_IDENT shift to state 15
-- On PARGAUCHE shift to state 17
-- On term_list shift to state 29
-- On term shift to state 24
## Reductions:

State 17:
## Known stack suffix:
## PARGAUCHE
## LR(1) items:
term -> PARGAUCHE . term PARDROITE [ WITH VIRGULE POINT_VIRGULE PARDROITE INFIX_IDENT FLECHE EOF EGAL ]
term -> PARGAUCHE . term PARDROITE POSTFIX_IDENT [ WITH VIRGULE POINT_VIRGULE PARDROITE INFIX_IDENT FLECHE EOF EGAL ]
term -> PARGAUCHE . term_list PARDROITE POSTFIX_IDENT [ WITH VIRGULE POINT_VIRGULE PARDROITE INFIX_IDENT FLECHE EOF EGAL ]
## Transitions:
-- On PREFIX_IDENT shift to state 15
-- On PARGAUCHE shift to state 17
-- On term_list shift to state 18
-- On term shift to state 21
## Reductions:

State 18:
## Known stack suffix:
## PARGAUCHE term_list
## LR(1) items:
term -> PARGAUCHE term_list . PARDROITE POSTFIX_IDENT [ WITH VIRGULE POINT_VIRGULE PARDROITE INFIX_IDENT FLECHE EOF EGAL ]
## Transitions:
-- On PARDROITE shift to state 19
## Reductions:

State 19:
## Known stack suffix:
## PARGAUCHE term_list PARDROITE
## LR(1) items:
term -> PARGAUCHE term_list PARDROITE . POSTFIX_IDENT [ WITH VIRGULE POINT_VIRGULE PARDROITE INFIX_IDENT FLECHE EOF EGAL ]
## Transitions:
-- On POSTFIX_IDENT shift to state 20
## Reductions:

State 20:
## Known stack suffix:
## PARGAUCHE term_list PARDROITE POSTFIX_IDENT
## LR(1) items:
term -> PARGAUCHE term_list PARDROITE POSTFIX_IDENT . [ WITH VIRGULE POINT_VIRGULE PARDROITE INFIX_IDENT FLECHE EOF EGAL ]
## Transitions:
## Reductions:
-- On WITH reduce production term -> PARGAUCHE term_list PARDROITE POSTFIX_IDENT
-- On VIRGULE reduce production term -> PARGAUCHE term_list PARDROITE POSTFIX_IDENT
-- On POINT_VIRGULE reduce production term -> PARGAUCHE term_list PARDROITE POSTFIX_IDENT
-- On PARDROITE reduce production term -> PARGAUCHE term_list PARDROITE POSTFIX_IDENT
-- On INFIX_IDENT reduce production term -> PARGAUCHE term_list PARDROITE POSTFIX_IDENT
-- On FLECHE reduce production term -> PARGAUCHE term_list PARDROITE POSTFIX_IDENT
-- On EOF reduce production term -> PARGAUCHE term_list PARDROITE POSTFIX_IDENT
-- On EGAL reduce production term -> PARGAUCHE term_list PARDROITE POSTFIX_IDENT

State 21:
## Known stack suffix:
## PARGAUCHE term
## LR(1) items:
term -> PARGAUCHE term . PARDROITE [ WITH VIRGULE POINT_VIRGULE PARDROITE INFIX_IDENT FLECHE EOF EGAL ]
term -> PARGAUCHE term . PARDROITE POSTFIX_IDENT [ WITH VIRGULE POINT_VIRGULE PARDROITE INFIX_IDENT FLECHE EOF EGAL ]
term -> term . INFIX_IDENT term [ VIRGULE PARDROITE INFIX_IDENT ]
term_list -> term . [ PARDROITE ]
term_list -> term . VIRGULE term_list [ PARDROITE ]
## Transitions:
-- On VIRGULE shift to state 22
-- On PARDROITE shift to state 27
-- On INFIX_IDENT shift to state 25
## Reductions:

State 22:
## Known stack suffix:
## term VIRGULE
## LR(1) items:
term_list -> term VIRGULE . term_list [ PARDROITE ]
## Transitions:
-- On PREFIX_IDENT shift to state 15
-- On PARGAUCHE shift to state 17
-- On term_list shift to state 23
-- On term shift to state 24
## Reductions:

State 23:
## Known stack suffix:
## term VIRGULE term_list
## LR(1) items:
term_list -> term VIRGULE term_list . [ PARDROITE ]
## Transitions:
## Reductions:
-- On PARDROITE reduce production term_list -> term VIRGULE term_list

State 24:
## Known stack suffix:
## term
## LR(1) items:
term -> term . INFIX_IDENT term [ VIRGULE PARDROITE INFIX_IDENT ]
term_list -> term . [ PARDROITE ]
term_list -> term . VIRGULE term_list [ PARDROITE ]
## Transitions:
-- On VIRGULE shift to state 22
-- On INFIX_IDENT shift to state 25
## Reductions:
-- On PARDROITE reduce production term_list -> term

State 25:
## Known stack suffix:
## term INFIX_IDENT
## LR(1) items:
term -> term INFIX_IDENT . term [ WITH VIRGULE POINT_VIRGULE PARDROITE INFIX_IDENT FLECHE EOF EGAL ]
## Transitions:
-- On PREFIX_IDENT shift to state 15
-- On PARGAUCHE shift to state 17
-- On term shift to state 26
## Reductions:

State 26:
## Known stack suffix:
## term INFIX_IDENT term
## LR(1) items:
term -> term . INFIX_IDENT term [ WITH VIRGULE POINT_VIRGULE PARDROITE INFIX_IDENT FLECHE EOF EGAL ]
term -> term INFIX_IDENT term . [ WITH VIRGULE POINT_VIRGULE PARDROITE INFIX_IDENT FLECHE EOF EGAL ]
## Transitions:
## Reductions:
-- On WITH reduce production term -> term INFIX_IDENT term
-- On VIRGULE reduce production term -> term INFIX_IDENT term
-- On POINT_VIRGULE reduce production term -> term INFIX_IDENT term
-- On PARDROITE reduce production term -> term INFIX_IDENT term
-- On INFIX_IDENT reduce production term -> term INFIX_IDENT term
-- On FLECHE reduce production term -> term INFIX_IDENT term
-- On EOF reduce production term -> term INFIX_IDENT term
-- On EGAL reduce production term -> term INFIX_IDENT term

State 27:
## Known stack suffix:
## PARGAUCHE term PARDROITE
## LR(1) items:
term -> PARGAUCHE term PARDROITE . [ WITH VIRGULE POINT_VIRGULE PARDROITE INFIX_IDENT FLECHE EOF EGAL ]
term -> PARGAUCHE term PARDROITE . POSTFIX_IDENT [ WITH VIRGULE POINT_VIRGULE PARDROITE INFIX_IDENT FLECHE EOF EGAL ]
## Transitions:
-- On POSTFIX_IDENT shift to state 28
## Reductions:
-- On WITH reduce production term -> PARGAUCHE term PARDROITE
-- On VIRGULE reduce production term -> PARGAUCHE term PARDROITE
-- On POINT_VIRGULE reduce production term -> PARGAUCHE term PARDROITE
-- On PARDROITE reduce production term -> PARGAUCHE term PARDROITE
-- On INFIX_IDENT reduce production term -> PARGAUCHE term PARDROITE
-- On FLECHE reduce production term -> PARGAUCHE term PARDROITE
-- On EOF reduce production term -> PARGAUCHE term PARDROITE
-- On EGAL reduce production term -> PARGAUCHE term PARDROITE

State 28:
## Known stack suffix:
## PARGAUCHE term PARDROITE POSTFIX_IDENT
## LR(1) items:
term -> PARGAUCHE term PARDROITE POSTFIX_IDENT . [ WITH VIRGULE POINT_VIRGULE PARDROITE INFIX_IDENT FLECHE EOF EGAL ]
## Transitions:
## Reductions:
-- On WITH reduce production term -> PARGAUCHE term PARDROITE POSTFIX_IDENT
-- On VIRGULE reduce production term -> PARGAUCHE term PARDROITE POSTFIX_IDENT
-- On POINT_VIRGULE reduce production term -> PARGAUCHE term PARDROITE POSTFIX_IDENT
-- On PARDROITE reduce production term -> PARGAUCHE term PARDROITE POSTFIX_IDENT
-- On INFIX_IDENT reduce production term -> PARGAUCHE term PARDROITE POSTFIX_IDENT
-- On FLECHE reduce production term -> PARGAUCHE term PARDROITE POSTFIX_IDENT
-- On EOF reduce production term -> PARGAUCHE term PARDROITE POSTFIX_IDENT
-- On EGAL reduce production term -> PARGAUCHE term PARDROITE POSTFIX_IDENT

State 29:
## Known stack suffix:
## PREFIX_IDENT PARGAUCHE term_list
## LR(1) items:
term -> PREFIX_IDENT PARGAUCHE term_list . PARDROITE [ WITH VIRGULE POINT_VIRGULE PARDROITE INFIX_IDENT FLECHE EOF EGAL ]
## Transitions:
-- On PARDROITE shift to state 30
## Reductions:

State 30:
## Known stack suffix:
## PREFIX_IDENT PARGAUCHE term_list PARDROITE
## LR(1) items:
term -> PREFIX_IDENT PARGAUCHE term_list PARDROITE . [ WITH VIRGULE POINT_VIRGULE PARDROITE INFIX_IDENT FLECHE EOF EGAL ]
## Transitions:
## Reductions:
-- On WITH reduce production term -> PREFIX_IDENT PARGAUCHE term_list PARDROITE
-- On VIRGULE reduce production term -> PREFIX_IDENT PARGAUCHE term_list PARDROITE
-- On POINT_VIRGULE reduce production term -> PREFIX_IDENT PARGAUCHE term_list PARDROITE
-- On PARDROITE reduce production term -> PREFIX_IDENT PARGAUCHE term_list PARDROITE
-- On INFIX_IDENT reduce production term -> PREFIX_IDENT PARGAUCHE term_list PARDROITE
-- On FLECHE reduce production term -> PREFIX_IDENT PARGAUCHE term_list PARDROITE
-- On EOF reduce production term -> PREFIX_IDENT PARGAUCHE term_list PARDROITE
-- On EGAL reduce production term -> PREFIX_IDENT PARGAUCHE term_list PARDROITE

State 31:
## Known stack suffix:
## term
## LR(1) items:
regle -> term . FLECHE term [ POINT_VIRGULE PARDROITE ]
term -> term . INFIX_IDENT term [ INFIX_IDENT FLECHE ]
## Transitions:
-- On INFIX_IDENT shift to state 25
-- On FLECHE shift to state 32
## Reductions:

State 32:
## Known stack suffix:
## term FLECHE
## LR(1) items:
regle -> term FLECHE . term [ POINT_VIRGULE PARDROITE ]
## Transitions:
-- On PREFIX_IDENT shift to state 15
-- On PARGAUCHE shift to state 17
-- On term shift to state 33
## Reductions:

State 33:
## Known stack suffix:
## term FLECHE term
## LR(1) items:
regle -> term FLECHE term . [ POINT_VIRGULE PARDROITE ]
term -> term . INFIX_IDENT term [ POINT_VIRGULE PARDROITE INFIX_IDENT ]
## Transitions:
-- On INFIX_IDENT shift to state 25
## Reductions:
-- On POINT_VIRGULE reduce production regle -> term FLECHE term
-- On PARDROITE reduce production regle -> term FLECHE term

State 34:
## Known stack suffix:
## keyword_user PARGAUCHE regle_list
## LR(1) items:
decl_theorie -> keyword_user PARGAUCHE regle_list . PARDROITE [ UNIFICATION TOKEN_USER TOKEN_INCLUDE THEORIE SUBSORTES SORTES PROBLEMES ORDRE OPERATEURS KW_END INDUCTIVE IDENT EQUATIONS EOF CONJECTURES ]
## Transitions:
-- On PARDROITE shift to state 35
## Reductions:

State 35:
## Known stack suffix:
## keyword_user PARGAUCHE regle_list PARDROITE
## LR(1) items:
decl_theorie -> keyword_user PARGAUCHE regle_list PARDROITE . [ UNIFICATION TOKEN_USER TOKEN_INCLUDE THEORIE SUBSORTES SORTES PROBLEMES ORDRE OPERATEURS KW_END INDUCTIVE IDENT EQUATIONS EOF CONJECTURES ]
## Transitions:
## Reductions:
-- On UNIFICATION reduce production decl_theorie -> keyword_user PARGAUCHE regle_list PARDROITE
-- On TOKEN_USER reduce production decl_theorie -> keyword_user PARGAUCHE regle_list PARDROITE
-- On TOKEN_INCLUDE reduce production decl_theorie -> keyword_user PARGAUCHE regle_list PARDROITE
-- On THEORIE reduce production decl_theorie -> keyword_user PARGAUCHE regle_list PARDROITE
-- On SUBSORTES reduce production decl_theorie -> keyword_user PARGAUCHE regle_list PARDROITE
-- On SORTES reduce production decl_theorie -> keyword_user PARGAUCHE regle_list PARDROITE
-- On PROBLEMES reduce production decl_theorie -> keyword_user PARGAUCHE regle_list PARDROITE
-- On ORDRE reduce production decl_theorie -> keyword_user PARGAUCHE regle_list PARDROITE
-- On OPERATEURS reduce production decl_theorie -> keyword_user PARGAUCHE regle_list PARDROITE
-- On KW_END reduce production decl_theorie -> keyword_user PARGAUCHE regle_list PARDROITE
-- On INDUCTIVE reduce production decl_theorie -> keyword_user PARGAUCHE regle_list PARDROITE
-- On IDENT reduce production decl_theorie -> keyword_user PARGAUCHE regle_list PARDROITE
-- On EQUATIONS reduce production decl_theorie -> keyword_user PARGAUCHE regle_list PARDROITE
-- On EOF reduce production decl_theorie -> keyword_user PARGAUCHE regle_list PARDROITE
-- On CONJECTURES reduce production decl_theorie -> keyword_user PARGAUCHE regle_list PARDROITE

State 36:
## Known stack suffix:
## regle
## LR(1) items:
regle_list -> regle . [ PARDROITE ]
regle_list -> regle . POINT_VIRGULE regle_list [ PARDROITE ]
## Transitions:
-- On POINT_VIRGULE shift to state 37
## Reductions:
-- On PARDROITE reduce production regle_list -> regle

State 37:
## Known stack suffix:
## regle POINT_VIRGULE
## LR(1) items:
regle_list -> regle POINT_VIRGULE . regle_list [ PARDROITE ]
## Transitions:
-- On PREFIX_IDENT shift to state 15
-- On PARGAUCHE shift to state 17
-- On term shift to state 31
-- On regle_list shift to state 38
-- On regle shift to state 36
## Reductions:

State 38:
## Known stack suffix:
## regle POINT_VIRGULE regle_list
## LR(1) items:
regle_list -> regle POINT_VIRGULE regle_list . [ PARDROITE ]
## Transitions:
## Reductions:
-- On PARDROITE reduce production regle_list -> regle POINT_VIRGULE regle_list

State 39:
## Known stack suffix:
## ident
## LR(1) items:
decl_theorie -> ident . PARGAUCHE id_list_end [ UNIFICATION TOKEN_USER TOKEN_INCLUDE THEORIE SUBSORTES SORTES PROBLEMES ORDRE OPERATEURS KW_END INDUCTIVE IDENT EQUATIONS EOF CONJECTURES ]
## Transitions:
-- On PARGAUCHE shift to state 40
## Reductions:

State 40:
## Known stack suffix:
## ident PARGAUCHE
## LR(1) items:
decl_theorie -> ident PARGAUCHE . id_list_end [ UNIFICATION TOKEN_USER TOKEN_INCLUDE THEORIE SUBSORTES SORTES PROBLEMES ORDRE OPERATEURS KW_END INDUCTIVE IDENT EQUATIONS EOF CONJECTURES ]
## Transitions:
-- On IDENT shift to state 11
-- On ident shift to state 41
-- On id_list_end shift to state 45
## Reductions:

State 41:
## Known stack suffix:
## ident
## LR(1) items:
id_list_end -> ident . PARDROITE [ UNIFICATION TOKEN_USER TOKEN_INCLUDE THEORIE SUBSORTES SORTES PROBLEMES ORDRE OPERATEURS KW_END INDUCTIVE IDENT EQUATIONS EOF CONJECTURES ]
id_list_end -> ident . VIRGULE id_list_end [ UNIFICATION TOKEN_USER TOKEN_INCLUDE THEORIE SUBSORTES SORTES PROBLEMES ORDRE OPERATEURS KW_END INDUCTIVE IDENT EQUATIONS EOF CONJECTURES ]
## Transitions:
-- On VIRGULE shift to state 42
-- On PARDROITE shift to state 44
## Reductions:

State 42:
## Known stack suffix:
## ident VIRGULE
## LR(1) items:
id_list_end -> ident VIRGULE . id_list_end [ UNIFICATION TOKEN_USER TOKEN_INCLUDE THEORIE SUBSORTES SORTES PROBLEMES ORDRE OPERATEURS KW_END INDUCTIVE IDENT EQUATIONS EOF CONJECTURES ]
## Transitions:
-- On IDENT shift to state 11
-- On ident shift to state 41
-- On id_list_end shift to state 43
## Reductions:

State 43:
## Known stack suffix:
## ident VIRGULE id_list_end
## LR(1) items:
id_list_end -> ident VIRGULE id_list_end . [ UNIFICATION TOKEN_USER TOKEN_INCLUDE THEORIE SUBSORTES SORTES PROBLEMES ORDRE OPERATEURS KW_END INDUCTIVE IDENT EQUATIONS EOF CONJECTURES ]
## Transitions:
## Reductions:
-- On UNIFICATION reduce production id_list_end -> ident VIRGULE id_list_end
-- On TOKEN_USER reduce production id_list_end -> ident VIRGULE id_list_end
-- On TOKEN_INCLUDE reduce production id_list_end -> ident VIRGULE id_list_end
-- On THEORIE reduce production id_list_end -> ident VIRGULE id_list_end
-- On SUBSORTES reduce production id_list_end -> ident VIRGULE id_list_end
-- On SORTES reduce production id_list_end -> ident VIRGULE id_list_end
-- On PROBLEMES reduce production id_list_end -> ident VIRGULE id_list_end
-- On ORDRE reduce production id_list_end -> ident VIRGULE id_list_end
-- On OPERATEURS reduce production id_list_end -> ident VIRGULE id_list_end
-- On KW_END reduce production id_list_end -> ident VIRGULE id_list_end
-- On INDUCTIVE reduce production id_list_end -> ident VIRGULE id_list_end
-- On IDENT reduce production id_list_end -> ident VIRGULE id_list_end
-- On EQUATIONS reduce production id_list_end -> ident VIRGULE id_list_end
-- On EOF reduce production id_list_end -> ident VIRGULE id_list_end
-- On CONJECTURES reduce production id_list_end -> ident VIRGULE id_list_end

State 44:
## Known stack suffix:
## ident PARDROITE
## LR(1) items:
id_list_end -> ident PARDROITE . [ UNIFICATION TOKEN_USER TOKEN_INCLUDE THEORIE SUBSORTES SORTES PROBLEMES ORDRE OPERATEURS KW_END INDUCTIVE IDENT EQUATIONS EOF CONJECTURES ]
## Transitions:
## Reductions:
-- On UNIFICATION reduce production id_list_end -> ident PARDROITE
-- On TOKEN_USER reduce production id_list_end -> ident PARDROITE
-- On TOKEN_INCLUDE reduce production id_list_end -> ident PARDROITE
-- On THEORIE reduce production id_list_end -> ident PARDROITE
-- On SUBSORTES reduce production id_list_end -> ident PARDROITE
-- On SORTES reduce production id_list_end -> ident PARDROITE
-- On PROBLEMES reduce production id_list_end -> ident PARDROITE
-- On ORDRE reduce production id_list_end -> ident PARDROITE
-- On OPERATEURS reduce production id_list_end -> ident PARDROITE
-- On KW_END reduce production id_list_end -> ident PARDROITE
-- On INDUCTIVE reduce production id_list_end -> ident PARDROITE
-- On IDENT reduce production id_list_end -> ident PARDROITE
-- On EQUATIONS reduce production id_list_end -> ident PARDROITE
-- On EOF reduce production id_list_end -> ident PARDROITE
-- On CONJECTURES reduce production id_list_end -> ident PARDROITE

State 45:
## Known stack suffix:
## ident PARGAUCHE id_list_end
## LR(1) items:
decl_theorie -> ident PARGAUCHE id_list_end . [ UNIFICATION TOKEN_USER TOKEN_INCLUDE THEORIE SUBSORTES SORTES PROBLEMES ORDRE OPERATEURS KW_END INDUCTIVE IDENT EQUATIONS EOF CONJECTURES ]
## Transitions:
## Reductions:
-- On UNIFICATION reduce production decl_theorie -> ident PARGAUCHE id_list_end
-- On TOKEN_USER reduce production decl_theorie -> ident PARGAUCHE id_list_end
-- On TOKEN_INCLUDE reduce production decl_theorie -> ident PARGAUCHE id_list_end
-- On THEORIE reduce production decl_theorie -> ident PARGAUCHE id_list_end
-- On SUBSORTES reduce production decl_theorie -> ident PARGAUCHE id_list_end
-- On SORTES reduce production decl_theorie -> ident PARGAUCHE id_list_end
-- On PROBLEMES reduce production decl_theorie -> ident PARGAUCHE id_list_end
-- On ORDRE reduce production decl_theorie -> ident PARGAUCHE id_list_end
-- On OPERATEURS reduce production decl_theorie -> ident PARGAUCHE id_list_end
-- On KW_END reduce production decl_theorie -> ident PARGAUCHE id_list_end
-- On INDUCTIVE reduce production decl_theorie -> ident PARGAUCHE id_list_end
-- On IDENT reduce production decl_theorie -> ident PARGAUCHE id_list_end
-- On EQUATIONS reduce production decl_theorie -> ident PARGAUCHE id_list_end
-- On EOF reduce production decl_theorie -> ident PARGAUCHE id_list_end
-- On CONJECTURES reduce production decl_theorie -> ident PARGAUCHE id_list_end

State 46:
## Known stack suffix:
## decl_theorie
## LR(1) items:
theorie -> decl_theorie . [ UNIFICATION TOKEN_INCLUDE THEORIE SUBSORTES SORTES PROBLEMES ORDRE OPERATEURS KW_END INDUCTIVE EQUATIONS EOF CONJECTURES ]
theorie -> decl_theorie . theorie [ UNIFICATION TOKEN_INCLUDE THEORIE SUBSORTES SORTES PROBLEMES ORDRE OPERATEURS KW_END INDUCTIVE EQUATIONS EOF CONJECTURES ]
## Transitions:
-- On TOKEN_USER shift to state 10
-- On IDENT shift to state 11
-- On theorie shift to state 47
-- On keyword_user shift to state 13
-- On ident shift to state 39
-- On decl_theorie shift to state 46
## Reductions:
-- On UNIFICATION reduce production theorie -> decl_theorie
-- On TOKEN_INCLUDE reduce production theorie -> decl_theorie
-- On THEORIE reduce production theorie -> decl_theorie
-- On SUBSORTES reduce production theorie -> decl_theorie
-- On SORTES reduce production theorie -> decl_theorie
-- On PROBLEMES reduce production theorie -> decl_theorie
-- On ORDRE reduce production theorie -> decl_theorie
-- On OPERATEURS reduce production theorie -> decl_theorie
-- On KW_END reduce production theorie -> decl_theorie
-- On INDUCTIVE reduce production theorie -> decl_theorie
-- On EQUATIONS reduce production theorie -> decl_theorie
-- On EOF reduce production theorie -> decl_theorie
-- On CONJECTURES reduce production theorie -> decl_theorie

State 47:
## Known stack suffix:
## decl_theorie theorie
## LR(1) items:
theorie -> decl_theorie theorie . [ UNIFICATION TOKEN_INCLUDE THEORIE SUBSORTES SORTES PROBLEMES ORDRE OPERATEURS KW_END INDUCTIVE EQUATIONS EOF CONJECTURES ]
## Transitions:
## Reductions:
-- On UNIFICATION reduce production theorie -> decl_theorie theorie
-- On TOKEN_INCLUDE reduce production theorie -> decl_theorie theorie
-- On THEORIE reduce production theorie -> decl_theorie theorie
-- On SUBSORTES reduce production theorie -> decl_theorie theorie
-- On SORTES reduce production theorie -> decl_theorie theorie
-- On PROBLEMES reduce production theorie -> decl_theorie theorie
-- On ORDRE reduce production theorie -> decl_theorie theorie
-- On OPERATEURS reduce production theorie -> decl_theorie theorie
-- On KW_END reduce production theorie -> decl_theorie theorie
-- On INDUCTIVE reduce production theorie -> decl_theorie theorie
-- On EQUATIONS reduce production theorie -> decl_theorie theorie
-- On EOF reduce production theorie -> decl_theorie theorie
-- On CONJECTURES reduce production theorie -> decl_theorie theorie

State 48:
## Known stack suffix:
## TOKEN_INCLUDE
## LR(1) items:
declaration -> TOKEN_INCLUDE . STRING [ UNIFICATION TOKEN_INCLUDE THEORIE SUBSORTES SORTES PROBLEMES ORDRE OPERATEURS KW_END INDUCTIVE EQUATIONS EOF CONJECTURES ]
## Transitions:
-- On STRING shift to state 49
## Reductions:

State 49:
## Known stack suffix:
## TOKEN_INCLUDE STRING
## LR(1) items:
declaration -> TOKEN_INCLUDE STRING . [ UNIFICATION TOKEN_INCLUDE THEORIE SUBSORTES SORTES PROBLEMES ORDRE OPERATEURS KW_END INDUCTIVE EQUATIONS EOF CONJECTURES ]
## Transitions:
## Reductions:
-- On UNIFICATION reduce production declaration -> TOKEN_INCLUDE STRING
-- On TOKEN_INCLUDE reduce production declaration -> TOKEN_INCLUDE STRING
-- On THEORIE reduce production declaration -> TOKEN_INCLUDE STRING
-- On SUBSORTES reduce production declaration -> TOKEN_INCLUDE STRING
-- On SORTES reduce production declaration -> TOKEN_INCLUDE STRING
-- On PROBLEMES reduce production declaration -> TOKEN_INCLUDE STRING
-- On ORDRE reduce production declaration -> TOKEN_INCLUDE STRING
-- On OPERATEURS reduce production declaration -> TOKEN_INCLUDE STRING
-- On KW_END reduce production declaration -> TOKEN_INCLUDE STRING
-- On INDUCTIVE reduce production declaration -> TOKEN_INCLUDE STRING
-- On EQUATIONS reduce production declaration -> TOKEN_INCLUDE STRING
-- On EOF reduce production declaration -> TOKEN_INCLUDE STRING
-- On CONJECTURES reduce production declaration -> TOKEN_INCLUDE STRING

State 50:
## Known stack suffix:
## SUBSORTES
## LR(1) items:
keyword_subsortes -> SUBSORTES . [ IDENT ]
## Transitions:
## Reductions:
-- On IDENT reduce production keyword_subsortes -> SUBSORTES

State 51:
## Known stack suffix:
## SORTES
## LR(1) items:
keyword_sortes -> SORTES . [ IDENT ]
## Transitions:
## Reductions:
-- On IDENT reduce production keyword_sortes -> SORTES

State 52:
## Known stack suffix:
## PROBLEMES
## LR(1) items:
keyword_problems -> PROBLEMES . [ UNIFIER TOKEN_AC REDUIRE PREFIX_IDENT PLAIN PARGAUCHE MATCHER COMPARER ]
## Transitions:
## Reductions:
-- On UNIFIER reduce production keyword_problems -> PROBLEMES
-- On TOKEN_AC reduce production keyword_problems -> PROBLEMES
-- On REDUIRE reduce production keyword_problems -> PROBLEMES
-- On PREFIX_IDENT reduce production keyword_problems -> PROBLEMES
-- On PLAIN reduce production keyword_problems -> PROBLEMES
-- On PARGAUCHE reduce production keyword_problems -> PROBLEMES
-- On MATCHER reduce production keyword_problems -> PROBLEMES
-- On COMPARER reduce production keyword_problems -> PROBLEMES

State 53:
## Known stack suffix:
## ORDRE
## LR(1) items:
keyword_order -> ORDRE . [ TOKEN_SEMI_INTERACTIF TOKEN_RPS TOKEN_RPO TOKEN_POLY TOKEN_MAPO TOKEN_LEXICO TOKEN_INTERACTIF ]
## Transitions:
## Reductions:
-- On TOKEN_SEMI_INTERACTIF reduce production keyword_order -> ORDRE
-- On TOKEN_RPS reduce production keyword_order -> ORDRE
-- On TOKEN_RPO reduce production keyword_order -> ORDRE
-- On TOKEN_POLY reduce production keyword_order -> ORDRE
-- On TOKEN_MAPO reduce production keyword_order -> ORDRE
-- On TOKEN_LEXICO reduce production keyword_order -> ORDRE
-- On TOKEN_INTERACTIF reduce production keyword_order -> ORDRE

State 54:
## Known stack suffix:
## OPERATEURS
## LR(1) items:
keyword_operators -> OPERATEURS . [ IDENT ]
## Transitions:
## Reductions:
-- On IDENT reduce production keyword_operators -> OPERATEURS

State 55:
## Known stack suffix:
## KW_END
## LR(1) items:
donnees -> KW_END . [ # ]
## Transitions:
## Reductions:
-- On # reduce production donnees -> KW_END

State 56:
## Known stack suffix:
## INDUCTIVE
## LR(1) items:
keyword_inductive -> INDUCTIVE . [ PREFIX_IDENT PARGAUCHE ]
## Transitions:
## Reductions:
-- On PREFIX_IDENT reduce production keyword_inductive -> INDUCTIVE
-- On PARGAUCHE reduce production keyword_inductive -> INDUCTIVE

State 57:
## Known stack suffix:
## EQUATIONS
## LR(1) items:
keyword_axioms -> EQUATIONS . [ PREFIX_IDENT PARGAUCHE ]
## Transitions:
## Reductions:
-- On PREFIX_IDENT reduce production keyword_axioms -> EQUATIONS
-- On PARGAUCHE reduce production keyword_axioms -> EQUATIONS

State 58:
## Known stack suffix:
## EOF
## LR(1) items:
donnees -> EOF . [ # ]
## Transitions:
## Reductions:
-- On # reduce production donnees -> EOF

State 59:
## Known stack suffix:
## CONJECTURES
## LR(1) items:
keyword_conjectures -> CONJECTURES . [ PREFIX_IDENT PARGAUCHE ]
## Transitions:
## Reductions:
-- On PREFIX_IDENT reduce production keyword_conjectures -> CONJECTURES
-- On PARGAUCHE reduce production keyword_conjectures -> CONJECTURES

State 60:
## Known stack suffix:
## keyword_theory
## LR(1) items:
declaration -> keyword_theory . theorie [ UNIFICATION TOKEN_INCLUDE THEORIE SUBSORTES SORTES PROBLEMES ORDRE OPERATEURS KW_END INDUCTIVE EQUATIONS EOF CONJECTURES ]
## Transitions:
-- On TOKEN_USER shift to state 10
-- On IDENT shift to state 11
-- On theorie shift to state 61
-- On keyword_user shift to state 13
-- On ident shift to state 39
-- On decl_theorie shift to state 46
## Reductions:

State 61:
## Known stack suffix:
## keyword_theory theorie
## LR(1) items:
declaration -> keyword_theory theorie . [ UNIFICATION TOKEN_INCLUDE THEORIE SUBSORTES SORTES PROBLEMES ORDRE OPERATEURS KW_END INDUCTIVE EQUATIONS EOF CONJECTURES ]
## Transitions:
## Reductions:
-- On UNIFICATION reduce production declaration -> keyword_theory theorie
-- On TOKEN_INCLUDE reduce production declaration -> keyword_theory theorie
-- On THEORIE reduce production declaration -> keyword_theory theorie
-- On SUBSORTES reduce production declaration -> keyword_theory theorie
-- On SORTES reduce production declaration -> keyword_theory theorie
-- On PROBLEMES reduce production declaration -> keyword_theory theorie
-- On ORDRE reduce production declaration -> keyword_theory theorie
-- On OPERATEURS reduce production declaration -> keyword_theory theorie
-- On KW_END reduce production declaration -> keyword_theory theorie
-- On INDUCTIVE reduce production declaration -> keyword_theory theorie
-- On EQUATIONS reduce production declaration -> keyword_theory theorie
-- On EOF reduce production declaration -> keyword_theory theorie
-- On CONJECTURES reduce production declaration -> keyword_theory theorie

State 62:
## Known stack suffix:
## keyword_subsortes
## LR(1) items:
declaration -> keyword_subsortes . subsortes [ UNIFICATION TOKEN_INCLUDE THEORIE SUBSORTES SORTES PROBLEMES ORDRE OPERATEURS KW_END INDUCTIVE EQUATIONS EOF CONJECTURES ]
## Transitions:
-- On IDENT shift to state 63
-- On subsortes shift to state 64
-- On base_sorte shift to state 65
## Reductions:

State 63:
## Known stack suffix:
## IDENT
## LR(1) items:
base_sorte -> IDENT . [ VIRGULE UNIFICATION TOKEN_INCLUDE THEORIE SUBSORTES SORTES PROBLEMES POINT_VIRGULE ORDRE OPERATEURS KW_END INFERIEUR INDUCTIVE IDENT FLECHE EQUATIONS EOF CONJECTURES ]
## Transitions:
## Reductions:
-- On VIRGULE reduce production base_sorte -> IDENT
-- On UNIFICATION reduce production base_sorte -> IDENT
-- On TOKEN_INCLUDE reduce production base_sorte -> IDENT
-- On THEORIE reduce production base_sorte -> IDENT
-- On SUBSORTES reduce production base_sorte -> IDENT
-- On SORTES reduce production base_sorte -> IDENT
-- On PROBLEMES reduce production base_sorte -> IDENT
-- On POINT_VIRGULE reduce production base_sorte -> IDENT
-- On ORDRE reduce production base_sorte -> IDENT
-- On OPERATEURS reduce production base_sorte -> IDENT
-- On KW_END reduce production base_sorte -> IDENT
-- On INFERIEUR reduce production base_sorte -> IDENT
-- On INDUCTIVE reduce production base_sorte -> IDENT
-- On IDENT reduce production base_sorte -> IDENT
-- On FLECHE reduce production base_sorte -> IDENT
-- On EQUATIONS reduce production base_sorte -> IDENT
-- On EOF reduce production base_sorte -> IDENT
-- On CONJECTURES reduce production base_sorte -> IDENT

State 64:
## Known stack suffix:
## keyword_subsortes subsortes
## LR(1) items:
declaration -> keyword_subsortes subsortes . [ UNIFICATION TOKEN_INCLUDE THEORIE SUBSORTES SORTES PROBLEMES ORDRE OPERATEURS KW_END INDUCTIVE EQUATIONS EOF CONJECTURES ]
## Transitions:
## Reductions:
-- On UNIFICATION reduce production declaration -> keyword_subsortes subsortes
-- On TOKEN_INCLUDE reduce production declaration -> keyword_subsortes subsortes
-- On THEORIE reduce production declaration -> keyword_subsortes subsortes
-- On SUBSORTES reduce production declaration -> keyword_subsortes subsortes
-- On SORTES reduce production declaration -> keyword_subsortes subsortes
-- On PROBLEMES reduce production declaration -> keyword_subsortes subsortes
-- On ORDRE reduce production declaration -> keyword_subsortes subsortes
-- On OPERATEURS reduce production declaration -> keyword_subsortes subsortes
-- On KW_END reduce production declaration -> keyword_subsortes subsortes
-- On INDUCTIVE reduce production declaration -> keyword_subsortes subsortes
-- On EQUATIONS reduce production declaration -> keyword_subsortes subsortes
-- On EOF reduce production declaration -> keyword_subsortes subsortes
-- On CONJECTURES reduce production declaration -> keyword_subsortes subsortes

State 65:
## Known stack suffix:
## base_sorte
## LR(1) items:
subsortes -> base_sorte . INFERIEUR base_sorte [ UNIFICATION TOKEN_INCLUDE THEORIE SUBSORTES SORTES PROBLEMES ORDRE OPERATEURS KW_END INDUCTIVE EQUATIONS EOF CONJECTURES ]
subsortes -> base_sorte . INFERIEUR base_sorte VIRGULE subsortes [ UNIFICATION TOKEN_INCLUDE THEORIE SUBSORTES SORTES PROBLEMES ORDRE OPERATEURS KW_END INDUCTIVE EQUATIONS EOF CONJECTURES ]
## Transitions:
-- On INFERIEUR shift to state 66
## Reductions:

State 66:
## Known stack suffix:
## base_sorte INFERIEUR
## LR(1) items:
subsortes -> base_sorte INFERIEUR . base_sorte [ UNIFICATION TOKEN_INCLUDE THEORIE SUBSORTES SORTES PROBLEMES ORDRE OPERATEURS KW_END INDUCTIVE EQUATIONS EOF CONJECTURES ]
subsortes -> base_sorte INFERIEUR . base_sorte VIRGULE subsortes [ UNIFICATION TOKEN_INCLUDE THEORIE SUBSORTES SORTES PROBLEMES ORDRE OPERATEURS KW_END INDUCTIVE EQUATIONS EOF CONJECTURES ]
## Transitions:
-- On IDENT shift to state 63
-- On base_sorte shift to state 67
## Reductions:

State 67:
## Known stack suffix:
## base_sorte INFERIEUR base_sorte
## LR(1) items:
subsortes -> base_sorte INFERIEUR base_sorte . [ UNIFICATION TOKEN_INCLUDE THEORIE SUBSORTES SORTES PROBLEMES ORDRE OPERATEURS KW_END INDUCTIVE EQUATIONS EOF CONJECTURES ]
subsortes -> base_sorte INFERIEUR base_sorte . VIRGULE subsortes [ UNIFICATION TOKEN_INCLUDE THEORIE SUBSORTES SORTES PROBLEMES ORDRE OPERATEURS KW_END INDUCTIVE EQUATIONS EOF CONJECTURES ]
## Transitions:
-- On VIRGULE shift to state 68
## Reductions:
-- On UNIFICATION reduce production subsortes -> base_sorte INFERIEUR base_sorte
-- On TOKEN_INCLUDE reduce production subsortes -> base_sorte INFERIEUR base_sorte
-- On THEORIE reduce production subsortes -> base_sorte INFERIEUR base_sorte
-- On SUBSORTES reduce production subsortes -> base_sorte INFERIEUR base_sorte
-- On SORTES reduce production subsortes -> base_sorte INFERIEUR base_sorte
-- On PROBLEMES reduce production subsortes -> base_sorte INFERIEUR base_sorte
-- On ORDRE reduce production subsortes -> base_sorte INFERIEUR base_sorte
-- On OPERATEURS reduce production subsortes -> base_sorte INFERIEUR base_sorte
-- On KW_END reduce production subsortes -> base_sorte INFERIEUR base_sorte
-- On INDUCTIVE reduce production subsortes -> base_sorte INFERIEUR base_sorte
-- On EQUATIONS reduce production subsortes -> base_sorte INFERIEUR base_sorte
-- On EOF reduce production subsortes -> base_sorte INFERIEUR base_sorte
-- On CONJECTURES reduce production subsortes -> base_sorte INFERIEUR base_sorte

State 68:
## Known stack suffix:
## base_sorte INFERIEUR base_sorte VIRGULE
## LR(1) items:
subsortes -> base_sorte INFERIEUR base_sorte VIRGULE . subsortes [ UNIFICATION TOKEN_INCLUDE THEORIE SUBSORTES SORTES PROBLEMES ORDRE OPERATEURS KW_END INDUCTIVE EQUATIONS EOF CONJECTURES ]
## Transitions:
-- On IDENT shift to state 63
-- On subsortes shift to state 69
-- On base_sorte shift to state 65
## Reductions:

State 69:
## Known stack suffix:
## base_sorte INFERIEUR base_sorte VIRGULE subsortes
## LR(1) items:
subsortes -> base_sorte INFERIEUR base_sorte VIRGULE subsortes . [ UNIFICATION TOKEN_INCLUDE THEORIE SUBSORTES SORTES PROBLEMES ORDRE OPERATEURS KW_END INDUCTIVE EQUATIONS EOF CONJECTURES ]
## Transitions:
## Reductions:
-- On UNIFICATION reduce production subsortes -> base_sorte INFERIEUR base_sorte VIRGULE subsortes
-- On TOKEN_INCLUDE reduce production subsortes -> base_sorte INFERIEUR base_sorte VIRGULE subsortes
-- On THEORIE reduce production subsortes -> base_sorte INFERIEUR base_sorte VIRGULE subsortes
-- On SUBSORTES reduce production subsortes -> base_sorte INFERIEUR base_sorte VIRGULE subsortes
-- On SORTES reduce production subsortes -> base_sorte INFERIEUR base_sorte VIRGULE subsortes
-- On PROBLEMES reduce production subsortes -> base_sorte INFERIEUR base_sorte VIRGULE subsortes
-- On ORDRE reduce production subsortes -> base_sorte INFERIEUR base_sorte VIRGULE subsortes
-- On OPERATEURS reduce production subsortes -> base_sorte INFERIEUR base_sorte VIRGULE subsortes
-- On KW_END reduce production subsortes -> base_sorte INFERIEUR base_sorte VIRGULE subsortes
-- On INDUCTIVE reduce production subsortes -> base_sorte INFERIEUR base_sorte VIRGULE subsortes
-- On EQUATIONS reduce production subsortes -> base_sorte INFERIEUR base_sorte VIRGULE subsortes
-- On EOF reduce production subsortes -> base_sorte INFERIEUR base_sorte VIRGULE subsortes
-- On CONJECTURES reduce production subsortes -> base_sorte INFERIEUR base_sorte VIRGULE subsortes

State 70:
## Known stack suffix:
## keyword_sortes
## LR(1) items:
declaration -> keyword_sortes . sortes [ UNIFICATION TOKEN_INCLUDE THEORIE SUBSORTES SORTES PROBLEMES ORDRE OPERATEURS KW_END INDUCTIVE EQUATIONS EOF CONJECTURES ]
## Transitions:
-- On IDENT shift to state 63
-- On sortes shift to state 71
-- On base_sorte shift to state 72
## Reductions:

State 71:
## Known stack suffix:
## keyword_sortes sortes
## LR(1) items:
declaration -> keyword_sortes sortes . [ UNIFICATION TOKEN_INCLUDE THEORIE SUBSORTES SORTES PROBLEMES ORDRE OPERATEURS KW_END INDUCTIVE EQUATIONS EOF CONJECTURES ]
## Transitions:
## Reductions:
-- On UNIFICATION reduce production declaration -> keyword_sortes sortes
-- On TOKEN_INCLUDE reduce production declaration -> keyword_sortes sortes
-- On THEORIE reduce production declaration -> keyword_sortes sortes
-- On SUBSORTES reduce production declaration -> keyword_sortes sortes
-- On SORTES reduce production declaration -> keyword_sortes sortes
-- On PROBLEMES reduce production declaration -> keyword_sortes sortes
-- On ORDRE reduce production declaration -> keyword_sortes sortes
-- On OPERATEURS reduce production declaration -> keyword_sortes sortes
-- On KW_END reduce production declaration -> keyword_sortes sortes
-- On INDUCTIVE reduce production declaration -> keyword_sortes sortes
-- On EQUATIONS reduce production declaration -> keyword_sortes sortes
-- On EOF reduce production declaration -> keyword_sortes sortes
-- On CONJECTURES reduce production declaration -> keyword_sortes sortes

State 72:
## Known stack suffix:
## base_sorte
## LR(1) items:
sortes -> base_sorte . [ UNIFICATION TOKEN_INCLUDE THEORIE SUBSORTES SORTES PROBLEMES ORDRE OPERATEURS KW_END INDUCTIVE EQUATIONS EOF CONJECTURES ]
sortes -> base_sorte . VIRGULE sortes [ UNIFICATION TOKEN_INCLUDE THEORIE SUBSORTES SORTES PROBLEMES ORDRE OPERATEURS KW_END INDUCTIVE EQUATIONS EOF CONJECTURES ]
## Transitions:
-- On VIRGULE shift to state 73
## Reductions:
-- On UNIFICATION reduce production sortes -> base_sorte
-- On TOKEN_INCLUDE reduce production sortes -> base_sorte
-- On THEORIE reduce production sortes -> base_sorte
-- On SUBSORTES reduce production sortes -> base_sorte
-- On SORTES reduce production sortes -> base_sorte
-- On PROBLEMES reduce production sortes -> base_sorte
-- On ORDRE reduce production sortes -> base_sorte
-- On OPERATEURS reduce production sortes -> base_sorte
-- On KW_END reduce production sortes -> base_sorte
-- On INDUCTIVE reduce production sortes -> base_sorte
-- On EQUATIONS reduce production sortes -> base_sorte
-- On EOF reduce production sortes -> base_sorte
-- On CONJECTURES reduce production sortes -> base_sorte

State 73:
## Known stack suffix:
## base_sorte VIRGULE
## LR(1) items:
sortes -> base_sorte VIRGULE . sortes [ UNIFICATION TOKEN_INCLUDE THEORIE SUBSORTES SORTES PROBLEMES ORDRE OPERATEURS KW_END INDUCTIVE EQUATIONS EOF CONJECTURES ]
## Transitions:
-- On IDENT shift to state 63
-- On sortes shift to state 74
-- On base_sorte shift to state 72
## Reductions:

State 74:
## Known stack suffix:
## base_sorte VIRGULE sortes
## LR(1) items:
sortes -> base_sorte VIRGULE sortes . [ UNIFICATION TOKEN_INCLUDE THEORIE SUBSORTES SORTES PROBLEMES ORDRE OPERATEURS KW_END INDUCTIVE EQUATIONS EOF CONJECTURES ]
## Transitions:
## Reductions:
-- On UNIFICATION reduce production sortes -> base_sorte VIRGULE sortes
-- On TOKEN_INCLUDE reduce production sortes -> base_sorte VIRGULE sortes
-- On THEORIE reduce production sortes -> base_sorte VIRGULE sortes
-- On SUBSORTES reduce production sortes -> base_sorte VIRGULE sortes
-- On SORTES reduce production sortes -> base_sorte VIRGULE sortes
-- On PROBLEMES reduce production sortes -> base_sorte VIRGULE sortes
-- On ORDRE reduce production sortes -> base_sorte VIRGULE sortes
-- On OPERATEURS reduce production sortes -> base_sorte VIRGULE sortes
-- On KW_END reduce production sortes -> base_sorte VIRGULE sortes
-- On INDUCTIVE reduce production sortes -> base_sorte VIRGULE sortes
-- On EQUATIONS reduce production sortes -> base_sorte VIRGULE sortes
-- On EOF reduce production sortes -> base_sorte VIRGULE sortes
-- On CONJECTURES reduce production sortes -> base_sorte VIRGULE sortes

State 75:
## Known stack suffix:
## keyword_problems
## LR(1) items:
declaration -> keyword_problems . problemes [ UNIFICATION TOKEN_INCLUDE THEORIE SUBSORTES SORTES PROBLEMES ORDRE OPERATEURS KW_END INDUCTIVE EQUATIONS EOF CONJECTURES ]
## Transitions:
-- On UNIFIER shift to state 76
-- On TOKEN_AC shift to state 3
-- On REDUIRE shift to state 80
-- On PREFIX_IDENT shift to state 15
-- On PLAIN shift to state 6
-- On PARGAUCHE shift to state 17
-- On MATCHER shift to state 82
-- On COMPARER shift to state 86
-- On unif_type shift to state 90
-- On term shift to state 95
-- On problemes shift to state 98
-- On probleme shift to state 99
## Reductions:

State 76:
## Known stack suffix:
## UNIFIER
## LR(1) items:
probleme -> UNIFIER . term EGAL term [ POINT_VIRGULE ]
## Transitions:
-- On PREFIX_IDENT shift to state 15
-- On PARGAUCHE shift to state 17
-- On term shift to state 77
## Reductions:

State 77:
## Known stack suffix:
## UNIFIER term
## LR(1) items:
probleme -> UNIFIER term . EGAL term [ POINT_VIRGULE ]
term -> term . INFIX_IDENT term [ INFIX_IDENT EGAL ]
## Transitions:
-- On INFIX_IDENT shift to state 25
-- On EGAL shift to state 78
## Reductions:

State 78:
## Known stack suffix:
## UNIFIER term EGAL
## LR(1) items:
probleme -> UNIFIER term EGAL . term [ POINT_VIRGULE ]
## Transitions:
-- On PREFIX_IDENT shift to state 15
-- On PARGAUCHE shift to state 17
-- On term shift to state 79
## Reductions:

State 79:
## Known stack suffix:
## UNIFIER term EGAL term
## LR(1) items:
probleme -> UNIFIER term EGAL term . [ POINT_VIRGULE ]
term -> term . INFIX_IDENT term [ POINT_VIRGULE INFIX_IDENT ]
## Transitions:
-- On INFIX_IDENT shift to state 25
## Reductions:
-- On POINT_VIRGULE reduce production probleme -> UNIFIER term EGAL term

State 80:
## Known stack suffix:
## REDUIRE
## LR(1) items:
probleme -> REDUIRE . term [ POINT_VIRGULE ]
## Transitions:
-- On PREFIX_IDENT shift to state 15
-- On PARGAUCHE shift to state 17
-- On term shift to state 81
## Reductions:

State 81:
## Known stack suffix:
## REDUIRE term
## LR(1) items:
probleme -> REDUIRE term . [ POINT_VIRGULE ]
term -> term . INFIX_IDENT term [ POINT_VIRGULE INFIX_IDENT ]
## Transitions:
-- On INFIX_IDENT shift to state 25
## Reductions:
-- On POINT_VIRGULE reduce production probleme -> REDUIRE term

State 82:
## Known stack suffix:
## MATCHER
## LR(1) items:
probleme -> MATCHER . term EGAL term [ POINT_VIRGULE ]
## Transitions:
-- On PREFIX_IDENT shift to state 15
-- On PARGAUCHE shift to state 17
-- On term shift to state 83
## Reductions:

State 83:
## Known stack suffix:
## MATCHER term
## LR(1) items:
probleme -> MATCHER term . EGAL term [ POINT_VIRGULE ]
term -> term . INFIX_IDENT term [ INFIX_IDENT EGAL ]
## Transitions:
-- On INFIX_IDENT shift to state 25
-- On EGAL shift to state 84
## Reductions:

State 84:
## Known stack suffix:
## MATCHER term EGAL
## LR(1) items:
probleme -> MATCHER term EGAL . term [ POINT_VIRGULE ]
## Transitions:
-- On PREFIX_IDENT shift to state 15
-- On PARGAUCHE shift to state 17
-- On term shift to state 85
## Reductions:

State 85:
## Known stack suffix:
## MATCHER term EGAL term
## LR(1) items:
probleme -> MATCHER term EGAL term . [ POINT_VIRGULE ]
term -> term . INFIX_IDENT term [ POINT_VIRGULE INFIX_IDENT ]
## Transitions:
-- On INFIX_IDENT shift to state 25
## Reductions:
-- On POINT_VIRGULE reduce production probleme -> MATCHER term EGAL term

State 86:
## Known stack suffix:
## COMPARER
## LR(1) items:
probleme -> COMPARER . term WITH term [ POINT_VIRGULE ]
## Transitions:
-- On PREFIX_IDENT shift to state 15
-- On PARGAUCHE shift to state 17
-- On term shift to state 87
## Reductions:

State 87:
## Known stack suffix:
## COMPARER term
## LR(1) items:
probleme -> COMPARER term . WITH term [ POINT_VIRGULE ]
term -> term . INFIX_IDENT term [ WITH INFIX_IDENT ]
## Transitions:
-- On WITH shift to state 88
-- On INFIX_IDENT shift to state 25
## Reductions:

State 88:
## Known stack suffix:
## COMPARER term WITH
## LR(1) items:
probleme -> COMPARER term WITH . term [ POINT_VIRGULE ]
## Transitions:
-- On PREFIX_IDENT shift to state 15
-- On PARGAUCHE shift to state 17
-- On term shift to state 89
## Reductions:

State 89:
## Known stack suffix:
## COMPARER term WITH term
## LR(1) items:
probleme -> COMPARER term WITH term . [ POINT_VIRGULE ]
term -> term . INFIX_IDENT term [ POINT_VIRGULE INFIX_IDENT ]
## Transitions:
-- On INFIX_IDENT shift to state 25
## Reductions:
-- On POINT_VIRGULE reduce production probleme -> COMPARER term WITH term

State 90:
## Known stack suffix:
## unif_type
## LR(1) items:
probleme -> unif_type . UNIFIER term EGAL term [ POINT_VIRGULE ]
## Transitions:
-- On UNIFIER shift to state 91
## Reductions:

State 91:
## Known stack suffix:
## unif_type UNIFIER
## LR(1) items:
probleme -> unif_type UNIFIER . term EGAL term [ POINT_VIRGULE ]
## Transitions:
-- On PREFIX_IDENT shift to state 15
-- On PARGAUCHE shift to state 17
-- On term shift to state 92
## Reductions:

State 92:
## Known stack suffix:
## unif_type UNIFIER term
## LR(1) items:
probleme -> unif_type UNIFIER term . EGAL term [ POINT_VIRGULE ]
term -> term . INFIX_IDENT term [ INFIX_IDENT EGAL ]
## Transitions:
-- On INFIX_IDENT shift to state 25
-- On EGAL shift to state 93
## Reductions:

State 93:
## Known stack suffix:
## unif_type UNIFIER term EGAL
## LR(1) items:
probleme -> unif_type UNIFIER term EGAL . term [ POINT_VIRGULE ]
## Transitions:
-- On PREFIX_IDENT shift to state 15
-- On PARGAUCHE shift to state 17
-- On term shift to state 94
## Reductions:

State 94:
## Known stack suffix:
## unif_type UNIFIER term EGAL term
## LR(1) items:
probleme -> unif_type UNIFIER term EGAL term . [ POINT_VIRGULE ]
term -> term . INFIX_IDENT term [ POINT_VIRGULE INFIX_IDENT ]
## Transitions:
-- On INFIX_IDENT shift to state 25
## Reductions:
-- On POINT_VIRGULE reduce production probleme -> unif_type UNIFIER term EGAL term

State 95:
## Known stack suffix:
## term
## LR(1) items:
probleme -> term . EGAL term [ POINT_VIRGULE ]
term -> term . INFIX_IDENT term [ INFIX_IDENT EGAL ]
## Transitions:
-- On INFIX_IDENT shift to state 25
-- On EGAL shift to state 96
## Reductions:

State 96:
## Known stack suffix:
## term EGAL
## LR(1) items:
probleme -> term EGAL . term [ POINT_VIRGULE ]
## Transitions:
-- On PREFIX_IDENT shift to state 15
-- On PARGAUCHE shift to state 17
-- On term shift to state 97
## Reductions:

State 97:
## Known stack suffix:
## term EGAL term
## LR(1) items:
probleme -> term EGAL term . [ POINT_VIRGULE ]
term -> term . INFIX_IDENT term [ POINT_VIRGULE INFIX_IDENT ]
## Transitions:
-- On INFIX_IDENT shift to state 25
## Reductions:
-- On POINT_VIRGULE reduce production probleme -> term EGAL term

State 98:
## Known stack suffix:
## keyword_problems problemes
## LR(1) items:
declaration -> keyword_problems problemes . [ UNIFICATION TOKEN_INCLUDE THEORIE SUBSORTES SORTES PROBLEMES ORDRE OPERATEURS KW_END INDUCTIVE EQUATIONS EOF CONJECTURES ]
## Transitions:
## Reductions:
-- On UNIFICATION reduce production declaration -> keyword_problems problemes
-- On TOKEN_INCLUDE reduce production declaration -> keyword_problems problemes
-- On THEORIE reduce production declaration -> keyword_problems problemes
-- On SUBSORTES reduce production declaration -> keyword_problems problemes
-- On SORTES reduce production declaration -> keyword_problems problemes
-- On PROBLEMES reduce production declaration -> keyword_problems problemes
-- On ORDRE reduce production declaration -> keyword_problems problemes
-- On OPERATEURS reduce production declaration -> keyword_problems problemes
-- On KW_END reduce production declaration -> keyword_problems problemes
-- On INDUCTIVE reduce production declaration -> keyword_problems problemes
-- On EQUATIONS reduce production declaration -> keyword_problems problemes
-- On EOF reduce production declaration -> keyword_problems problemes
-- On CONJECTURES reduce production declaration -> keyword_problems problemes

State 99:
## Known stack suffix:
## probleme
## LR(1) items:
problemes -> probleme . POINT_VIRGULE [ UNIFICATION TOKEN_INCLUDE THEORIE SUBSORTES SORTES PROBLEMES ORDRE OPERATEURS KW_END INDUCTIVE EQUATIONS EOF CONJECTURES ]
problemes -> probleme . POINT_VIRGULE problemes [ UNIFICATION TOKEN_INCLUDE THEORIE SUBSORTES SORTES PROBLEMES ORDRE OPERATEURS KW_END INDUCTIVE EQUATIONS EOF CONJECTURES ]
## Transitions:
-- On POINT_VIRGULE shift to state 100
## Reductions:

State 100:
## Known stack suffix:
## probleme POINT_VIRGULE
## LR(1) items:
problemes -> probleme POINT_VIRGULE . [ UNIFICATION TOKEN_INCLUDE THEORIE SUBSORTES SORTES PROBLEMES ORDRE OPERATEURS KW_END INDUCTIVE EQUATIONS EOF CONJECTURES ]
problemes -> probleme POINT_VIRGULE . problemes [ UNIFICATION TOKEN_INCLUDE THEORIE SUBSORTES SORTES PROBLEMES ORDRE OPERATEURS KW_END INDUCTIVE EQUATIONS EOF CONJECTURES ]
## Transitions:
-- On UNIFIER shift to state 76
-- On TOKEN_AC shift to state 3
-- On REDUIRE shift to state 80
-- On PREFIX_IDENT shift to state 15
-- On PLAIN shift to state 6
-- On PARGAUCHE shift to state 17
-- On MATCHER shift to state 82
-- On COMPARER shift to state 86
-- On unif_type shift to state 90
-- On term shift to state 95
-- On problemes shift to state 101
-- On probleme shift to state 99
## Reductions:
-- On UNIFICATION reduce production problemes -> probleme POINT_VIRGULE
-- On TOKEN_INCLUDE reduce production problemes -> probleme POINT_VIRGULE
-- On THEORIE reduce production problemes -> probleme POINT_VIRGULE
-- On SUBSORTES reduce production problemes -> probleme POINT_VIRGULE
-- On SORTES reduce production problemes -> probleme POINT_VIRGULE
-- On PROBLEMES reduce production problemes -> probleme POINT_VIRGULE
-- On ORDRE reduce production problemes -> probleme POINT_VIRGULE
-- On OPERATEURS reduce production problemes -> probleme POINT_VIRGULE
-- On KW_END reduce production problemes -> probleme POINT_VIRGULE
-- On INDUCTIVE reduce production problemes -> probleme POINT_VIRGULE
-- On EQUATIONS reduce production problemes -> probleme POINT_VIRGULE
-- On EOF reduce production problemes -> probleme POINT_VIRGULE
-- On CONJECTURES reduce production problemes -> probleme POINT_VIRGULE

State 101:
## Known stack suffix:
## probleme POINT_VIRGULE problemes
## LR(1) items:
problemes -> probleme POINT_VIRGULE problemes . [ UNIFICATION TOKEN_INCLUDE THEORIE SUBSORTES SORTES PROBLEMES ORDRE OPERATEURS KW_END INDUCTIVE EQUATIONS EOF CONJECTURES ]
## Transitions:
## Reductions:
-- On UNIFICATION reduce production problemes -> probleme POINT_VIRGULE problemes
-- On TOKEN_INCLUDE reduce production problemes -> probleme POINT_VIRGULE problemes
-- On THEORIE reduce production problemes -> probleme POINT_VIRGULE problemes
-- On SUBSORTES reduce production problemes -> probleme POINT_VIRGULE problemes
-- On SORTES reduce production problemes -> probleme POINT_VIRGULE problemes
-- On PROBLEMES reduce production problemes -> probleme POINT_VIRGULE problemes
-- On ORDRE reduce production problemes -> probleme POINT_VIRGULE problemes
-- On OPERATEURS reduce production problemes -> probleme POINT_VIRGULE problemes
-- On KW_END reduce production problemes -> probleme POINT_VIRGULE problemes
-- On INDUCTIVE reduce production problemes -> probleme POINT_VIRGULE problemes
-- On EQUATIONS reduce production problemes -> probleme POINT_VIRGULE problemes
-- On EOF reduce production problemes -> probleme POINT_VIRGULE problemes
-- On CONJECTURES reduce production problemes -> probleme POINT_VIRGULE problemes

State 102:
## Known stack suffix:
## keyword_order
## LR(1) items:
declaration -> keyword_order . ordre_plus [ UNIFICATION TOKEN_INCLUDE THEORIE SUBSORTES SORTES PROBLEMES ORDRE OPERATEURS KW_END INDUCTIVE EQUATIONS EOF CONJECTURES ]
## Transitions:
-- On TOKEN_SEMI_INTERACTIF shift to state 103
-- On TOKEN_RPS shift to state 105
-- On TOKEN_RPO shift to state 107
-- On TOKEN_POLY shift to state 108
-- On TOKEN_MAPO shift to state 109
-- On TOKEN_LEXICO shift to state 110
-- On TOKEN_INTERACTIF shift to state 112
-- On rps_header shift to state 113
-- On ordre_plus shift to state 195
-- On ordre shift to state 196
-- On keyword_rpo shift to state 120
-- On keyword_poly shift to state 145
-- On keyword_mapo shift to state 183
## Reductions:

State 103:
## Known stack suffix:
## TOKEN_SEMI_INTERACTIF
## LR(1) items:
ordre_plus -> TOKEN_SEMI_INTERACTIF . PARGAUCHE ordre PARDROITE [ UNIFICATION TOKEN_INCLUDE THEORIE SUBSORTES SORTES PROBLEMES ORDRE OPERATEURS KW_END INDUCTIVE EQUATIONS EOF CONJECTURES ]
## Transitions:
-- On PARGAUCHE shift to state 104
## Reductions:

State 104:
## Known stack suffix:
## TOKEN_SEMI_INTERACTIF PARGAUCHE
## LR(1) items:
ordre_plus -> TOKEN_SEMI_INTERACTIF PARGAUCHE . ordre PARDROITE [ UNIFICATION TOKEN_INCLUDE THEORIE SUBSORTES SORTES PROBLEMES ORDRE OPERATEURS KW_END INDUCTIVE EQUATIONS EOF CONJECTURES ]
## Transitions:
-- On TOKEN_RPS shift to state 105
-- On TOKEN_RPO shift to state 107
-- On TOKEN_POLY shift to state 108
-- On TOKEN_MAPO shift to state 109
-- On TOKEN_LEXICO shift to state 110
-- On TOKEN_INTERACTIF shift to state 112
-- On rps_header shift to state 113
-- On ordre shift to state 193
-- On keyword_rpo shift to state 120
-- On keyword_poly shift to state 145
-- On keyword_mapo shift to state 183
## Reductions:

State 105:
## Known stack suffix:
## TOKEN_RPS
## LR(1) items:
rps_header -> TOKEN_RPS . PARGAUCHE ordre POINT_VIRGULE [ PREFIX_IDENT PARGAUCHE ]
## Transitions:
-- On PARGAUCHE shift to state 106
## Reductions:

State 106:
## Known stack suffix:
## TOKEN_RPS PARGAUCHE
## LR(1) items:
rps_header -> TOKEN_RPS PARGAUCHE . ordre POINT_VIRGULE [ PREFIX_IDENT PARGAUCHE ]
## Transitions:
-- On TOKEN_RPS shift to state 105
-- On TOKEN_RPO shift to state 107
-- On TOKEN_POLY shift to state 108
-- On TOKEN_MAPO shift to state 109
-- On TOKEN_LEXICO shift to state 110
-- On TOKEN_INTERACTIF shift to state 112
-- On rps_header shift to state 113
-- On ordre shift to state 191
-- On keyword_rpo shift to state 120
-- On keyword_poly shift to state 145
-- On keyword_mapo shift to state 183
## Reductions:

State 107:
## Known stack suffix:
## TOKEN_RPO
## LR(1) items:
keyword_rpo -> TOKEN_RPO . [ PARGAUCHE ]
## Transitions:
## Reductions:
-- On PARGAUCHE reduce production keyword_rpo -> TOKEN_RPO

State 108:
## Known stack suffix:
## TOKEN_POLY
## LR(1) items:
keyword_poly -> TOKEN_POLY . [ PARGAUCHE ]
## Transitions:
## Reductions:
-- On PARGAUCHE reduce production keyword_poly -> TOKEN_POLY

State 109:
## Known stack suffix:
## TOKEN_MAPO
## LR(1) items:
keyword_mapo -> TOKEN_MAPO . [ PARGAUCHE ]
## Transitions:
## Reductions:
-- On PARGAUCHE reduce production keyword_mapo -> TOKEN_MAPO

State 110:
## Known stack suffix:
## TOKEN_LEXICO
## LR(1) items:
ordre -> TOKEN_LEXICO . PARGAUCHE ordre_List [ UNIFICATION TOKEN_INCLUDE THEORIE SUBSORTES SORTES PROBLEMES POINT_VIRGULE PARDROITE ORDRE OPERATEURS KW_END INDUCTIVE EQUATIONS EOF CONJECTURES ]
## Transitions:
-- On PARGAUCHE shift to state 111
## Reductions:

State 111:
## Known stack suffix:
## TOKEN_LEXICO PARGAUCHE
## LR(1) items:
ordre -> TOKEN_LEXICO PARGAUCHE . ordre_List [ UNIFICATION TOKEN_INCLUDE THEORIE SUBSORTES SORTES PROBLEMES POINT_VIRGULE PARDROITE ORDRE OPERATEURS KW_END INDUCTIVE EQUATIONS EOF CONJECTURES ]
## Transitions:
-- On TOKEN_RPS shift to state 105
-- On TOKEN_RPO shift to state 107
-- On TOKEN_POLY shift to state 108
-- On TOKEN_MAPO shift to state 109
-- On TOKEN_LEXICO shift to state 110
-- On TOKEN_INTERACTIF shift to state 112
-- On rps_header shift to state 113
-- On ordre_List shift to state 116
-- On ordre shift to state 117
-- On keyword_rpo shift to state 120
-- On keyword_poly shift to state 145
-- On keyword_mapo shift to state 183
## Reductions:

State 112:
## Known stack suffix:
## TOKEN_INTERACTIF
## LR(1) items:
ordre -> TOKEN_INTERACTIF . [ UNIFICATION TOKEN_INCLUDE THEORIE SUBSORTES SORTES PROBLEMES POINT_VIRGULE PARDROITE ORDRE OPERATEURS KW_END INDUCTIVE EQUATIONS EOF CONJECTURES ]
## Transitions:
## Reductions:
-- On UNIFICATION reduce production ordre -> TOKEN_INTERACTIF
-- On TOKEN_INCLUDE reduce production ordre -> TOKEN_INTERACTIF
-- On THEORIE reduce production ordre -> TOKEN_INTERACTIF
-- On SUBSORTES reduce production ordre -> TOKEN_INTERACTIF
-- On SORTES reduce production ordre -> TOKEN_INTERACTIF
-- On PROBLEMES reduce production ordre -> TOKEN_INTERACTIF
-- On POINT_VIRGULE reduce production ordre -> TOKEN_INTERACTIF
-- On PARDROITE reduce production ordre -> TOKEN_INTERACTIF
-- On ORDRE reduce production ordre -> TOKEN_INTERACTIF
-- On OPERATEURS reduce production ordre -> TOKEN_INTERACTIF
-- On KW_END reduce production ordre -> TOKEN_INTERACTIF
-- On INDUCTIVE reduce production ordre -> TOKEN_INTERACTIF
-- On EQUATIONS reduce production ordre -> TOKEN_INTERACTIF
-- On EOF reduce production ordre -> TOKEN_INTERACTIF
-- On CONJECTURES reduce production ordre -> TOKEN_INTERACTIF

State 113:
## Known stack suffix:
## rps_header
## LR(1) items:
ordre -> rps_header . regle_list PARDROITE [ UNIFICATION TOKEN_INCLUDE THEORIE SUBSORTES SORTES PROBLEMES POINT_VIRGULE PARDROITE ORDRE OPERATEURS KW_END INDUCTIVE EQUATIONS EOF CONJECTURES ]
## Transitions:
-- On PREFIX_IDENT shift to state 15
-- On PARGAUCHE shift to state 17
-- On term shift to state 31
-- On regle_list shift to state 114
-- On regle shift to state 36
## Reductions:

State 114:
## Known stack suffix:
## rps_header regle_list
## LR(1) items:
ordre -> rps_header regle_list . PARDROITE [ UNIFICATION TOKEN_INCLUDE THEORIE SUBSORTES SORTES PROBLEMES POINT_VIRGULE PARDROITE ORDRE OPERATEURS KW_END INDUCTIVE EQUATIONS EOF CONJECTURES ]
## Transitions:
-- On PARDROITE shift to state 115
## Reductions:

State 115:
## Known stack suffix:
## rps_header regle_list PARDROITE
## LR(1) items:
ordre -> rps_header regle_list PARDROITE . [ UNIFICATION TOKEN_INCLUDE THEORIE SUBSORTES SORTES PROBLEMES POINT_VIRGULE PARDROITE ORDRE OPERATEURS KW_END INDUCTIVE EQUATIONS EOF CONJECTURES ]
## Transitions:
## Reductions:
-- On UNIFICATION reduce production ordre -> rps_header regle_list PARDROITE
-- On TOKEN_INCLUDE reduce production ordre -> rps_header regle_list PARDROITE
-- On THEORIE reduce production ordre -> rps_header regle_list PARDROITE
-- On SUBSORTES reduce production ordre -> rps_header regle_list PARDROITE
-- On SORTES reduce production ordre -> rps_header regle_list PARDROITE
-- On PROBLEMES reduce production ordre -> rps_header regle_list PARDROITE
-- On POINT_VIRGULE reduce production ordre -> rps_header regle_list PARDROITE
-- On PARDROITE reduce production ordre -> rps_header regle_list PARDROITE
-- On ORDRE reduce production ordre -> rps_header regle_list PARDROITE
-- On OPERATEURS reduce production ordre -> rps_header regle_list PARDROITE
-- On KW_END reduce production ordre -> rps_header regle_list PARDROITE
-- On INDUCTIVE reduce production ordre -> rps_header regle_list PARDROITE
-- On EQUATIONS reduce production ordre -> rps_header regle_list PARDROITE
-- On EOF reduce production ordre -> rps_header regle_list PARDROITE
-- On CONJECTURES reduce production ordre -> rps_header regle_list PARDROITE

State 116:
## Known stack suffix:
## TOKEN_LEXICO PARGAUCHE ordre_List
## LR(1) items:
ordre -> TOKEN_LEXICO PARGAUCHE ordre_List . [ UNIFICATION TOKEN_INCLUDE THEORIE SUBSORTES SORTES PROBLEMES POINT_VIRGULE PARDROITE ORDRE OPERATEURS KW_END INDUCTIVE EQUATIONS EOF CONJECTURES ]
## Transitions:
## Reductions:
-- On UNIFICATION reduce production ordre -> TOKEN_LEXICO PARGAUCHE ordre_List
-- On TOKEN_INCLUDE reduce production ordre -> TOKEN_LEXICO PARGAUCHE ordre_List
-- On THEORIE reduce production ordre -> TOKEN_LEXICO PARGAUCHE ordre_List
-- On SUBSORTES reduce production ordre -> TOKEN_LEXICO PARGAUCHE ordre_List
-- On SORTES reduce production ordre -> TOKEN_LEXICO PARGAUCHE ordre_List
-- On PROBLEMES reduce production ordre -> TOKEN_LEXICO PARGAUCHE ordre_List
-- On POINT_VIRGULE reduce production ordre -> TOKEN_LEXICO PARGAUCHE ordre_List
-- On PARDROITE reduce production ordre -> TOKEN_LEXICO PARGAUCHE ordre_List
-- On ORDRE reduce production ordre -> TOKEN_LEXICO PARGAUCHE ordre_List
-- On OPERATEURS reduce production ordre -> TOKEN_LEXICO PARGAUCHE ordre_List
-- On KW_END reduce production ordre -> TOKEN_LEXICO PARGAUCHE ordre_List
-- On INDUCTIVE reduce production ordre -> TOKEN_LEXICO PARGAUCHE ordre_List
-- On EQUATIONS reduce production ordre -> TOKEN_LEXICO PARGAUCHE ordre_List
-- On EOF reduce production ordre -> TOKEN_LEXICO PARGAUCHE ordre_List
-- On CONJECTURES reduce production ordre -> TOKEN_LEXICO PARGAUCHE ordre_List

State 117:
## Known stack suffix:
## ordre
## LR(1) items:
ordre_List -> ordre . PARDROITE [ UNIFICATION TOKEN_INCLUDE THEORIE SUBSORTES SORTES PROBLEMES POINT_VIRGULE PARDROITE ORDRE OPERATEURS KW_END INDUCTIVE EQUATIONS EOF CONJECTURES ]
ordre_List -> ordre . POINT_VIRGULE ordre_List [ UNIFICATION TOKEN_INCLUDE THEORIE SUBSORTES SORTES PROBLEMES POINT_VIRGULE PARDROITE ORDRE OPERATEURS KW_END INDUCTIVE EQUATIONS EOF CONJECTURES ]
## Transitions:
-- On POINT_VIRGULE shift to state 118
-- On PARDROITE shift to state 190
## Reductions:

State 118:
## Known stack suffix:
## ordre POINT_VIRGULE
## LR(1) items:
ordre_List -> ordre POINT_VIRGULE . ordre_List [ UNIFICATION TOKEN_INCLUDE THEORIE SUBSORTES SORTES PROBLEMES POINT_VIRGULE PARDROITE ORDRE OPERATEURS KW_END INDUCTIVE EQUATIONS EOF CONJECTURES ]
## Transitions:
-- On TOKEN_RPS shift to state 105
-- On TOKEN_RPO shift to state 107
-- On TOKEN_POLY shift to state 108
-- On TOKEN_MAPO shift to state 109
-- On TOKEN_LEXICO shift to state 110
-- On TOKEN_INTERACTIF shift to state 112
-- On rps_header shift to state 113
-- On ordre_List shift to state 119
-- On ordre shift to state 117
-- On keyword_rpo shift to state 120
-- On keyword_poly shift to state 145
-- On keyword_mapo shift to state 183
## Reductions:

State 119:
## Known stack suffix:
## ordre POINT_VIRGULE ordre_List
## LR(1) items:
ordre_List -> ordre POINT_VIRGULE ordre_List . [ UNIFICATION TOKEN_INCLUDE THEORIE SUBSORTES SORTES PROBLEMES POINT_VIRGULE PARDROITE ORDRE OPERATEURS KW_END INDUCTIVE EQUATIONS EOF CONJECTURES ]
## Transitions:
## Reductions:
-- On UNIFICATION reduce production ordre_List -> ordre POINT_VIRGULE ordre_List
-- On TOKEN_INCLUDE reduce production ordre_List -> ordre POINT_VIRGULE ordre_List
-- On THEORIE reduce production ordre_List -> ordre POINT_VIRGULE ordre_List
-- On SUBSORTES reduce production ordre_List -> ordre POINT_VIRGULE ordre_List
-- On SORTES reduce production ordre_List -> ordre POINT_VIRGULE ordre_List
-- On PROBLEMES reduce production ordre_List -> ordre POINT_VIRGULE ordre_List
-- On POINT_VIRGULE reduce production ordre_List -> ordre POINT_VIRGULE ordre_List
-- On PARDROITE reduce production ordre_List -> ordre POINT_VIRGULE ordre_List
-- On ORDRE reduce production ordre_List -> ordre POINT_VIRGULE ordre_List
-- On OPERATEURS reduce production ordre_List -> ordre POINT_VIRGULE ordre_List
-- On KW_END reduce production ordre_List -> ordre POINT_VIRGULE ordre_List
-- On INDUCTIVE reduce production ordre_List -> ordre POINT_VIRGULE ordre_List
-- On EQUATIONS reduce production ordre_List -> ordre POINT_VIRGULE ordre_List
-- On EOF reduce production ordre_List -> ordre POINT_VIRGULE ordre_List
-- On CONJECTURES reduce production ordre_List -> ordre POINT_VIRGULE ordre_List

State 120:
## Known stack suffix:
## keyword_rpo
## LR(1) items:
ordre -> keyword_rpo . PARGAUCHE precedence POINT_VIRGULE statuts PARDROITE [ UNIFICATION TOKEN_INCLUDE THEORIE SUBSORTES SORTES PROBLEMES POINT_VIRGULE PARDROITE ORDRE OPERATEURS KW_END INDUCTIVE EQUATIONS EOF CONJECTURES ]
ordre -> keyword_rpo . PARGAUCHE precedence PARDROITE [ UNIFICATION TOKEN_INCLUDE THEORIE SUBSORTES SORTES PROBLEMES POINT_VIRGULE PARDROITE ORDRE OPERATEURS KW_END INDUCTIVE EQUATIONS EOF CONJECTURES ]
## Transitions:
-- On PARGAUCHE shift to state 121
## Reductions:

State 121:
## Known stack suffix:
## keyword_rpo PARGAUCHE
## LR(1) items:
ordre -> keyword_rpo PARGAUCHE . precedence POINT_VIRGULE statuts PARDROITE [ UNIFICATION TOKEN_INCLUDE THEORIE SUBSORTES SORTES PROBLEMES POINT_VIRGULE PARDROITE ORDRE OPERATEURS KW_END INDUCTIVE EQUATIONS EOF CONJECTURES ]
ordre -> keyword_rpo PARGAUCHE . precedence PARDROITE [ UNIFICATION TOKEN_INCLUDE THEORIE SUBSORTES SORTES PROBLEMES POINT_VIRGULE PARDROITE ORDRE OPERATEURS KW_END INDUCTIVE EQUATIONS EOF CONJECTURES ]
## Transitions:
-- On IDENT shift to state 11
-- On precedence shift to state 122
-- On liste_ordonnee shift to state 135
-- On ident shift to state 138
## Reductions:
-- On POINT_VIRGULE reduce production precedence ->
-- On PARDROITE reduce production precedence ->

State 122:
## Known stack suffix:
## keyword_rpo PARGAUCHE precedence
## LR(1) items:
ordre -> keyword_rpo PARGAUCHE precedence . POINT_VIRGULE statuts PARDROITE [ UNIFICATION TOKEN_INCLUDE THEORIE SUBSORTES SORTES PROBLEMES POINT_VIRGULE PARDROITE ORDRE OPERATEURS KW_END INDUCTIVE EQUATIONS EOF CONJECTURES ]
ordre -> keyword_rpo PARGAUCHE precedence . PARDROITE [ UNIFICATION TOKEN_INCLUDE THEORIE SUBSORTES SORTES PROBLEMES POINT_VIRGULE PARDROITE ORDRE OPERATEURS KW_END INDUCTIVE EQUATIONS EOF CONJECTURES ]
## Transitions:
-- On POINT_VIRGULE shift to state 123
-- On PARDROITE shift to state 134
## Reductions:

State 123:
## Known stack suffix:
## keyword_rpo PARGAUCHE precedence POINT_VIRGULE
## LR(1) items:
ordre -> keyword_rpo PARGAUCHE precedence POINT_VIRGULE . statuts PARDROITE [ UNIFICATION TOKEN_INCLUDE THEORIE SUBSORTES SORTES PROBLEMES POINT_VIRGULE PARDROITE ORDRE OPERATEURS KW_END INDUCTIVE EQUATIONS EOF CONJECTURES ]
## Transitions:
-- On IDENT shift to state 11
-- On statuts shift to state 124
-- On statut shift to state 126
-- On ident shift to state 129
## Reductions:

State 124:
## Known stack suffix:
## keyword_rpo PARGAUCHE precedence POINT_VIRGULE statuts
## LR(1) items:
ordre -> keyword_rpo PARGAUCHE precedence POINT_VIRGULE statuts . PARDROITE [ UNIFICATION TOKEN_INCLUDE THEORIE SUBSORTES SORTES PROBLEMES POINT_VIRGULE PARDROITE ORDRE OPERATEURS KW_END INDUCTIVE EQUATIONS EOF CONJECTURES ]
## Transitions:
-- On PARDROITE shift to state 125
## Reductions:

State 125:
## Known stack suffix:
## keyword_rpo PARGAUCHE precedence POINT_VIRGULE statuts PARDROITE
## LR(1) items:
ordre -> keyword_rpo PARGAUCHE precedence POINT_VIRGULE statuts PARDROITE . [ UNIFICATION TOKEN_INCLUDE THEORIE SUBSORTES SORTES PROBLEMES POINT_VIRGULE PARDROITE ORDRE OPERATEURS KW_END INDUCTIVE EQUATIONS EOF CONJECTURES ]
## Transitions:
## Reductions:
-- On UNIFICATION reduce production ordre -> keyword_rpo PARGAUCHE precedence POINT_VIRGULE statuts PARDROITE
-- On TOKEN_INCLUDE reduce production ordre -> keyword_rpo PARGAUCHE precedence POINT_VIRGULE statuts PARDROITE
-- On THEORIE reduce production ordre -> keyword_rpo PARGAUCHE precedence POINT_VIRGULE statuts PARDROITE
-- On SUBSORTES reduce production ordre -> keyword_rpo PARGAUCHE precedence POINT_VIRGULE statuts PARDROITE
-- On SORTES reduce production ordre -> keyword_rpo PARGAUCHE precedence POINT_VIRGULE statuts PARDROITE
-- On PROBLEMES reduce production ordre -> keyword_rpo PARGAUCHE precedence POINT_VIRGULE statuts PARDROITE
-- On POINT_VIRGULE reduce production ordre -> keyword_rpo PARGAUCHE precedence POINT_VIRGULE statuts PARDROITE
-- On PARDROITE reduce production ordre -> keyword_rpo PARGAUCHE precedence POINT_VIRGULE statuts PARDROITE
-- On ORDRE reduce production ordre -> keyword_rpo PARGAUCHE precedence POINT_VIRGULE statuts PARDROITE
-- On OPERATEURS reduce production ordre -> keyword_rpo PARGAUCHE precedence POINT_VIRGULE statuts PARDROITE
-- On KW_END reduce production ordre -> keyword_rpo PARGAUCHE precedence POINT_VIRGULE statuts PARDROITE
-- On INDUCTIVE reduce production ordre -> keyword_rpo PARGAUCHE precedence POINT_VIRGULE statuts PARDROITE
-- On EQUATIONS reduce production ordre -> keyword_rpo PARGAUCHE precedence POINT_VIRGULE statuts PARDROITE
-- On EOF reduce production ordre -> keyword_rpo PARGAUCHE precedence POINT_VIRGULE statuts PARDROITE
-- On CONJECTURES reduce production ordre -> keyword_rpo PARGAUCHE precedence POINT_VIRGULE statuts PARDROITE

State 126:
## Known stack suffix:
## statut
## LR(1) items:
statuts -> statut . [ PARDROITE ]
statuts -> statut . VIRGULE statuts [ PARDROITE ]
## Transitions:
-- On VIRGULE shift to state 127
## Reductions:
-- On PARDROITE reduce production statuts -> statut

State 127:
## Known stack suffix:
## statut VIRGULE
## LR(1) items:
statuts -> statut VIRGULE . statuts [ PARDROITE ]
## Transitions:
-- On IDENT shift to state 11
-- On statuts shift to state 128
-- On statut shift to state 126
-- On ident shift to state 129
## Reductions:

State 128:
## Known stack suffix:
## statut VIRGULE statuts
## LR(1) items:
statuts -> statut VIRGULE statuts . [ PARDROITE ]
## Transitions:
## Reductions:
-- On PARDROITE reduce production statuts -> statut VIRGULE statuts

State 129:
## Known stack suffix:
## ident
## LR(1) items:
statut -> ident . MUL [ VIRGULE PARDROITE ]
statut -> ident . lexstat [ VIRGULE PARDROITE ]
## Transitions:
-- On RLLEX shift to state 130
-- On MUL shift to state 131
-- On LRLEX shift to state 132
-- On lexstat shift to state 133
## Reductions:

State 130:
## Known stack suffix:
## RLLEX
## LR(1) items:
lexstat -> RLLEX . [ VIRGULE PARDROITE ]
## Transitions:
## Reductions:
-- On VIRGULE reduce production lexstat -> RLLEX
-- On PARDROITE reduce production lexstat -> RLLEX

State 131:
## Known stack suffix:
## ident MUL
## LR(1) items:
statut -> ident MUL . [ VIRGULE PARDROITE ]
## Transitions:
## Reductions:
-- On VIRGULE reduce production statut -> ident MUL
-- On PARDROITE reduce production statut -> ident MUL

State 132:
## Known stack suffix:
## LRLEX
## LR(1) items:
lexstat -> LRLEX . [ VIRGULE PARDROITE ]
## Transitions:
## Reductions:
-- On VIRGULE reduce production lexstat -> LRLEX
-- On PARDROITE reduce production lexstat -> LRLEX

State 133:
## Known stack suffix:
## ident lexstat
## LR(1) items:
statut -> ident lexstat . [ VIRGULE PARDROITE ]
## Transitions:
## Reductions:
-- On VIRGULE reduce production statut -> ident lexstat
-- On PARDROITE reduce production statut -> ident lexstat

State 134:
## Known stack suffix:
## keyword_rpo PARGAUCHE precedence PARDROITE
## LR(1) items:
ordre -> keyword_rpo PARGAUCHE precedence PARDROITE . [ UNIFICATION TOKEN_INCLUDE THEORIE SUBSORTES SORTES PROBLEMES POINT_VIRGULE PARDROITE ORDRE OPERATEURS KW_END INDUCTIVE EQUATIONS EOF CONJECTURES ]
## Transitions:
## Reductions:
-- On UNIFICATION reduce production ordre -> keyword_rpo PARGAUCHE precedence PARDROITE
-- On TOKEN_INCLUDE reduce production ordre -> keyword_rpo PARGAUCHE precedence PARDROITE
-- On THEORIE reduce production ordre -> keyword_rpo PARGAUCHE precedence PARDROITE
-- On SUBSORTES reduce production ordre -> keyword_rpo PARGAUCHE precedence PARDROITE
-- On SORTES reduce production ordre -> keyword_rpo PARGAUCHE precedence PARDROITE
-- On PROBLEMES reduce production ordre -> keyword_rpo PARGAUCHE precedence PARDROITE
-- On POINT_VIRGULE reduce production ordre -> keyword_rpo PARGAUCHE precedence PARDROITE
-- On PARDROITE reduce production ordre -> keyword_rpo PARGAUCHE precedence PARDROITE
-- On ORDRE reduce production ordre -> keyword_rpo PARGAUCHE precedence PARDROITE
-- On OPERATEURS reduce production ordre -> keyword_rpo PARGAUCHE precedence PARDROITE
-- On KW_END reduce production ordre -> keyword_rpo PARGAUCHE precedence PARDROITE
-- On INDUCTIVE reduce production ordre -> keyword_rpo PARGAUCHE precedence PARDROITE
-- On EQUATIONS reduce production ordre -> keyword_rpo PARGAUCHE precedence PARDROITE
-- On EOF reduce production ordre -> keyword_rpo PARGAUCHE precedence PARDROITE
-- On CONJECTURES reduce production ordre -> keyword_rpo PARGAUCHE precedence PARDROITE

State 135:
## Known stack suffix:
## liste_ordonnee
## LR(1) items:
precedence -> liste_ordonnee . [ POINT_VIRGULE PARDROITE ]
precedence -> liste_ordonnee . VIRGULE precedence [ POINT_VIRGULE PARDROITE ]
## Transitions:
-- On VIRGULE shift to state 136
## Reductions:
-- On POINT_VIRGULE reduce production precedence -> liste_ordonnee
-- On PARDROITE reduce production precedence -> liste_ordonnee

State 136:
## Known stack suffix:
## liste_ordonnee VIRGULE
## LR(1) items:
precedence -> liste_ordonnee VIRGULE . precedence [ POINT_VIRGULE PARDROITE ]
## Transitions:
-- On IDENT shift to state 11
-- On precedence shift to state 137
-- On liste_ordonnee shift to state 135
-- On ident shift to state 138
## Reductions:
-- On POINT_VIRGULE reduce production precedence ->
-- On PARDROITE reduce production precedence ->

State 137:
## Known stack suffix:
## liste_ordonnee VIRGULE precedence
## LR(1) items:
precedence -> liste_ordonnee VIRGULE precedence . [ POINT_VIRGULE PARDROITE ]
## Transitions:
## Reductions:
-- On POINT_VIRGULE reduce production precedence -> liste_ordonnee VIRGULE precedence
-- On PARDROITE reduce production precedence -> liste_ordonnee VIRGULE precedence

State 138:
## Known stack suffix:
## ident
## LR(1) items:
liste_ordonnee -> ident . [ VIRGULE POINT_VIRGULE PARDROITE ]
liste_ordonnee -> ident . EGAL liste_ordonnee [ VIRGULE POINT_VIRGULE PARDROITE ]
liste_ordonnee -> ident . SUPERIEUR liste_ordonnee [ VIRGULE POINT_VIRGULE PARDROITE ]
liste_ordonnee -> ident . INFERIEUR liste_ordonnee [ VIRGULE POINT_VIRGULE PARDROITE ]
## Transitions:
-- On SUPERIEUR shift to state 139
-- On INFERIEUR shift to state 141
-- On EGAL shift to state 143
## Reductions:
-- On VIRGULE reduce production liste_ordonnee -> ident
-- On POINT_VIRGULE reduce production liste_ordonnee -> ident
-- On PARDROITE reduce production liste_ordonnee -> ident

State 139:
## Known stack suffix:
## ident SUPERIEUR
## LR(1) items:
liste_ordonnee -> ident SUPERIEUR . liste_ordonnee [ VIRGULE POINT_VIRGULE PARDROITE ]
## Transitions:
-- On IDENT shift to state 11
-- On liste_ordonnee shift to state 140
-- On ident shift to state 138
## Reductions:

State 140:
## Known stack suffix:
## ident SUPERIEUR liste_ordonnee
## LR(1) items:
liste_ordonnee -> ident SUPERIEUR liste_ordonnee . [ VIRGULE POINT_VIRGULE PARDROITE ]
## Transitions:
## Reductions:
-- On VIRGULE reduce production liste_ordonnee -> ident SUPERIEUR liste_ordonnee
-- On POINT_VIRGULE reduce production liste_ordonnee -> ident SUPERIEUR liste_ordonnee
-- On PARDROITE reduce production liste_ordonnee -> ident SUPERIEUR liste_ordonnee

State 141:
## Known stack suffix:
## ident INFERIEUR
## LR(1) items:
liste_ordonnee -> ident INFERIEUR . liste_ordonnee [ VIRGULE POINT_VIRGULE PARDROITE ]
## Transitions:
-- On IDENT shift to state 11
-- On liste_ordonnee shift to state 142
-- On ident shift to state 138
## Reductions:

State 142:
## Known stack suffix:
## ident INFERIEUR liste_ordonnee
## LR(1) items:
liste_ordonnee -> ident INFERIEUR liste_ordonnee . [ VIRGULE POINT_VIRGULE PARDROITE ]
## Transitions:
## Reductions:
-- On VIRGULE reduce production liste_ordonnee -> ident INFERIEUR liste_ordonnee
-- On POINT_VIRGULE reduce production liste_ordonnee -> ident INFERIEUR liste_ordonnee
-- On PARDROITE reduce production liste_ordonnee -> ident INFERIEUR liste_ordonnee

State 143:
## Known stack suffix:
## ident EGAL
## LR(1) items:
liste_ordonnee -> ident EGAL . liste_ordonnee [ VIRGULE POINT_VIRGULE PARDROITE ]
## Transitions:
-- On IDENT shift to state 11
-- On liste_ordonnee shift to state 144
-- On ident shift to state 138
## Reductions:

State 144:
## Known stack suffix:
## ident EGAL liste_ordonnee
## LR(1) items:
liste_ordonnee -> ident EGAL liste_ordonnee . [ VIRGULE POINT_VIRGULE PARDROITE ]
## Transitions:
## Reductions:
-- On VIRGULE reduce production liste_ordonnee -> ident EGAL liste_ordonnee
-- On POINT_VIRGULE reduce production liste_ordonnee -> ident EGAL liste_ordonnee
-- On PARDROITE reduce production liste_ordonnee -> ident EGAL liste_ordonnee

State 145:
## Known stack suffix:
## keyword_poly
## LR(1) items:
ordre -> keyword_poly . PARGAUCHE mu_value poly_decl_list PARDROITE [ UNIFICATION TOKEN_INCLUDE THEORIE SUBSORTES SORTES PROBLEMES POINT_VIRGULE PARDROITE ORDRE OPERATEURS KW_END INDUCTIVE EQUATIONS EOF CONJECTURES ]
## Transitions:
-- On PARGAUCHE shift to state 146
## Reductions:

State 146:
## Known stack suffix:
## keyword_poly PARGAUCHE
## LR(1) items:
ordre -> keyword_poly PARGAUCHE . mu_value poly_decl_list PARDROITE [ UNIFICATION TOKEN_INCLUDE THEORIE SUBSORTES SORTES PROBLEMES POINT_VIRGULE PARDROITE ORDRE OPERATEURS KW_END INDUCTIVE EQUATIONS EOF CONJECTURES ]
## Transitions:
-- On INT shift to state 147
-- On mu_value shift to state 149
## Reductions:
-- On CROGAUCHE reduce production mu_value ->

State 147:
## Known stack suffix:
## INT
## LR(1) items:
mu_value -> INT . POINT_VIRGULE [ CROGAUCHE ]
## Transitions:
-- On POINT_VIRGULE shift to state 148
## Reductions:

State 148:
## Known stack suffix:
## INT POINT_VIRGULE
## LR(1) items:
mu_value -> INT POINT_VIRGULE . [ CROGAUCHE ]
## Transitions:
## Reductions:
-- On CROGAUCHE reduce production mu_value -> INT POINT_VIRGULE

State 149:
## Known stack suffix:
## keyword_poly PARGAUCHE mu_value
## LR(1) items:
ordre -> keyword_poly PARGAUCHE mu_value . poly_decl_list PARDROITE [ UNIFICATION TOKEN_INCLUDE THEORIE SUBSORTES SORTES PROBLEMES POINT_VIRGULE PARDROITE ORDRE OPERATEURS KW_END INDUCTIVE EQUATIONS EOF CONJECTURES ]
## Transitions:
-- On CROGAUCHE shift to state 150
-- On poly_decl_list shift to state 160
-- On poly_decl shift to state 162
-- On entete_poly shift to state 165
## Reductions:

State 150:
## Known stack suffix:
## CROGAUCHE
## LR(1) items:
entete_poly -> CROGAUCHE . poly_ident CRODROIT [ EGAL ]
entete_poly -> CROGAUCHE . poly_ident CRODROIT PARGAUCHE poly_var_list_end [ EGAL ]
## Transitions:
-- On IDENT shift to state 11
-- On poly_ident shift to state 151
-- On ident shift to state 159
## Reductions:

State 151:
## Known stack suffix:
## CROGAUCHE poly_ident
## LR(1) items:
entete_poly -> CROGAUCHE poly_ident . CRODROIT [ EGAL ]
entete_poly -> CROGAUCHE poly_ident . CRODROIT PARGAUCHE poly_var_list_end [ EGAL ]
## Transitions:
-- On CRODROIT shift to state 152
## Reductions:

State 152:
## Known stack suffix:
## CROGAUCHE poly_ident CRODROIT
## LR(1) items:
entete_poly -> CROGAUCHE poly_ident CRODROIT . [ EGAL ]
entete_poly -> CROGAUCHE poly_ident CRODROIT . PARGAUCHE poly_var_list_end [ EGAL ]
## Transitions:
-- On PARGAUCHE shift to state 153
## Reductions:
-- On EGAL reduce production entete_poly -> CROGAUCHE poly_ident CRODROIT

State 153:
## Known stack suffix:
## CROGAUCHE poly_ident CRODROIT PARGAUCHE
## LR(1) items:
entete_poly -> CROGAUCHE poly_ident CRODROIT PARGAUCHE . poly_var_list_end [ EGAL ]
## Transitions:
-- On POLY_VAR shift to state 154
-- On poly_var_list_end shift to state 158
## Reductions:

State 154:
## Known stack suffix:
## POLY_VAR
## LR(1) items:
poly_var_list_end -> POLY_VAR . PARDROITE [ EGAL ]
poly_var_list_end -> POLY_VAR . VIRGULE poly_var_list_end [ EGAL ]
## Transitions:
-- On VIRGULE shift to state 155
-- On PARDROITE shift to state 157
## Reductions:

State 155:
## Known stack suffix:
## POLY_VAR VIRGULE
## LR(1) items:
poly_var_list_end -> POLY_VAR VIRGULE . poly_var_list_end [ EGAL ]
## Transitions:
-- On POLY_VAR shift to state 154
-- On poly_var_list_end shift to state 156
## Reductions:

State 156:
## Known stack suffix:
## POLY_VAR VIRGULE poly_var_list_end
## LR(1) items:
poly_var_list_end -> POLY_VAR VIRGULE poly_var_list_end . [ EGAL ]
## Transitions:
## Reductions:
-- On EGAL reduce production poly_var_list_end -> POLY_VAR VIRGULE poly_var_list_end

State 157:
## Known stack suffix:
## POLY_VAR PARDROITE
## LR(1) items:
poly_var_list_end -> POLY_VAR PARDROITE . [ EGAL ]
## Transitions:
## Reductions:
-- On EGAL reduce production poly_var_list_end -> POLY_VAR PARDROITE

State 158:
## Known stack suffix:
## CROGAUCHE poly_ident CRODROIT PARGAUCHE poly_var_list_end
## LR(1) items:
entete_poly -> CROGAUCHE poly_ident CRODROIT PARGAUCHE poly_var_list_end . [ EGAL ]
## Transitions:
## Reductions:
-- On EGAL reduce production entete_poly -> CROGAUCHE poly_ident CRODROIT PARGAUCHE poly_var_list_end

State 159:
## Known stack suffix:
## ident
## LR(1) items:
poly_ident -> ident . [ CRODROIT ]
## Transitions:
## Reductions:
-- On CRODROIT reduce production poly_ident -> ident

State 160:
## Known stack suffix:
## keyword_poly PARGAUCHE mu_value poly_decl_list
## LR(1) items:
ordre -> keyword_poly PARGAUCHE mu_value poly_decl_list . PARDROITE [ UNIFICATION TOKEN_INCLUDE THEORIE SUBSORTES SORTES PROBLEMES POINT_VIRGULE PARDROITE ORDRE OPERATEURS KW_END INDUCTIVE EQUATIONS EOF CONJECTURES ]
## Transitions:
-- On PARDROITE shift to state 161
## Reductions:

State 161:
## Known stack suffix:
## keyword_poly PARGAUCHE mu_value poly_decl_list PARDROITE
## LR(1) items:
ordre -> keyword_poly PARGAUCHE mu_value poly_decl_list PARDROITE . [ UNIFICATION TOKEN_INCLUDE THEORIE SUBSORTES SORTES PROBLEMES POINT_VIRGULE PARDROITE ORDRE OPERATEURS KW_END INDUCTIVE EQUATIONS EOF CONJECTURES ]
## Transitions:
## Reductions:
-- On UNIFICATION reduce production ordre -> keyword_poly PARGAUCHE mu_value poly_decl_list PARDROITE
-- On TOKEN_INCLUDE reduce production ordre -> keyword_poly PARGAUCHE mu_value poly_decl_list PARDROITE
-- On THEORIE reduce production ordre -> keyword_poly PARGAUCHE mu_value poly_decl_list PARDROITE
-- On SUBSORTES reduce production ordre -> keyword_poly PARGAUCHE mu_value poly_decl_list PARDROITE
-- On SORTES reduce production ordre -> keyword_poly PARGAUCHE mu_value poly_decl_list PARDROITE
-- On PROBLEMES reduce production ordre -> keyword_poly PARGAUCHE mu_value poly_decl_list PARDROITE
-- On POINT_VIRGULE reduce production ordre -> keyword_poly PARGAUCHE mu_value poly_decl_list PARDROITE
-- On PARDROITE reduce production ordre -> keyword_poly PARGAUCHE mu_value poly_decl_list PARDROITE
-- On ORDRE reduce production ordre -> keyword_poly PARGAUCHE mu_value poly_decl_list PARDROITE
-- On OPERATEURS reduce production ordre -> keyword_poly PARGAUCHE mu_value poly_decl_list PARDROITE
-- On KW_END reduce production ordre -> keyword_poly PARGAUCHE mu_value poly_decl_list PARDROITE
-- On INDUCTIVE reduce production ordre -> keyword_poly PARGAUCHE mu_value poly_decl_list PARDROITE
-- On EQUATIONS reduce production ordre -> keyword_poly PARGAUCHE mu_value poly_decl_list PARDROITE
-- On EOF reduce production ordre -> keyword_poly PARGAUCHE mu_value poly_decl_list PARDROITE
-- On CONJECTURES reduce production ordre -> keyword_poly PARGAUCHE mu_value poly_decl_list PARDROITE

State 162:
## Known stack suffix:
## poly_decl
## LR(1) items:
poly_decl_list -> poly_decl . [ PARDROITE ]
poly_decl_list -> poly_decl . POINT_VIRGULE poly_decl_list [ PARDROITE ]
## Transitions:
-- On POINT_VIRGULE shift to state 163
## Reductions:
-- On PARDROITE reduce production poly_decl_list -> poly_decl

State 163:
## Known stack suffix:
## poly_decl POINT_VIRGULE
## LR(1) items:
poly_decl_list -> poly_decl POINT_VIRGULE . poly_decl_list [ PARDROITE ]
## Transitions:
-- On CROGAUCHE shift to state 150
-- On poly_decl_list shift to state 164
-- On poly_decl shift to state 162
-- On entete_poly shift to state 165
## Reductions:

State 164:
## Known stack suffix:
## poly_decl POINT_VIRGULE poly_decl_list
## LR(1) items:
poly_decl_list -> poly_decl POINT_VIRGULE poly_decl_list . [ PARDROITE ]
## Transitions:
## Reductions:
-- On PARDROITE reduce production poly_decl_list -> poly_decl POINT_VIRGULE poly_decl_list

State 165:
## Known stack suffix:
## entete_poly
## LR(1) items:
poly_decl -> entete_poly . EGAL poly [ POINT_VIRGULE PARDROITE ]
## Transitions:
-- On EGAL shift to state 166
## Reductions:

State 166:
## Known stack suffix:
## entete_poly EGAL
## LR(1) items:
poly_decl -> entete_poly EGAL . poly [ POINT_VIRGULE PARDROITE ]
## Transitions:
-- On POLY_VAR shift to state 167
-- On PARGAUCHE shift to state 168
-- On MINUS shift to state 169
-- On INT shift to state 170
-- On poly shift to state 182
## Reductions:

State 167:
## Known stack suffix:
## POLY_VAR
## LR(1) items:
poly -> POLY_VAR . [ POINT_VIRGULE PLUS PARDROITE MULT MINUS EXP ]
## Transitions:
## Reductions:
-- On POINT_VIRGULE reduce production poly -> POLY_VAR
-- On PLUS reduce production poly -> POLY_VAR
-- On PARDROITE reduce production poly -> POLY_VAR
-- On MULT reduce production poly -> POLY_VAR
-- On MINUS reduce production poly -> POLY_VAR
-- On EXP reduce production poly -> POLY_VAR

State 168:
## Known stack suffix:
## PARGAUCHE
## LR(1) items:
poly -> PARGAUCHE . poly PARDROITE [ POINT_VIRGULE PLUS PARDROITE MULT MINUS EXP ]
## Transitions:
-- On POLY_VAR shift to state 167
-- On PARGAUCHE shift to state 168
-- On MINUS shift to state 169
-- On INT shift to state 170
-- On poly shift to state 174
## Reductions:

State 169:
## Known stack suffix:
## MINUS
## LR(1) items:
poly -> MINUS . poly [ POINT_VIRGULE PLUS PARDROITE MULT MINUS EXP ]
## Transitions:
-- On POLY_VAR shift to state 167
-- On PARGAUCHE shift to state 168
-- On MINUS shift to state 169
-- On INT shift to state 170
-- On poly shift to state 171
## Reductions:

State 170:
## Known stack suffix:
## INT
## LR(1) items:
poly -> INT . [ POINT_VIRGULE PLUS PARDROITE MULT MINUS EXP ]
## Transitions:
## Reductions:
-- On POINT_VIRGULE reduce production poly -> INT
-- On PLUS reduce production poly -> INT
-- On PARDROITE reduce production poly -> INT
-- On MULT reduce production poly -> INT
-- On MINUS reduce production poly -> INT
-- On EXP reduce production poly -> INT

State 171:
## Known stack suffix:
## MINUS poly
## LR(1) items:
poly -> poly . PLUS poly [ POINT_VIRGULE PLUS PARDROITE MULT MINUS EXP ]
poly -> poly . MINUS poly [ POINT_VIRGULE PLUS PARDROITE MULT MINUS EXP ]
poly -> MINUS poly . [ POINT_VIRGULE PLUS PARDROITE MULT MINUS EXP ]
poly -> poly . MULT poly [ POINT_VIRGULE PLUS PARDROITE MULT MINUS EXP ]
poly -> poly . EXP INT [ POINT_VIRGULE PLUS PARDROITE MULT MINUS EXP ]
## Transitions:
-- On EXP shift to state 172
## Reductions:
-- On POINT_VIRGULE reduce production poly -> MINUS poly
-- On PLUS reduce production poly -> MINUS poly
-- On PARDROITE reduce production poly -> MINUS poly
-- On MULT reduce production poly -> MINUS poly
-- On MINUS reduce production poly -> MINUS poly

State 172:
## Known stack suffix:
## poly EXP
## LR(1) items:
poly -> poly EXP . INT [ POINT_VIRGULE PLUS PARDROITE MULT MINUS EXP ]
## Transitions:
-- On INT shift to state 173
## Reductions:

State 173:
## Known stack suffix:
## poly EXP INT
## LR(1) items:
poly -> poly EXP INT . [ POINT_VIRGULE PLUS PARDROITE MULT MINUS EXP ]
## Transitions:
## Reductions:
-- On POINT_VIRGULE reduce production poly -> poly EXP INT
-- On PLUS reduce production poly -> poly EXP INT
-- On PARDROITE reduce production poly -> poly EXP INT
-- On MULT reduce production poly -> poly EXP INT
-- On MINUS reduce production poly -> poly EXP INT
-- On EXP reduce production poly -> poly EXP INT

State 174:
## Known stack suffix:
## PARGAUCHE poly
## LR(1) items:
poly -> PARGAUCHE poly . PARDROITE [ POINT_VIRGULE PLUS PARDROITE MULT MINUS EXP ]
poly -> poly . PLUS poly [ PLUS PARDROITE MULT MINUS EXP ]
poly -> poly . MINUS poly [ PLUS PARDROITE MULT MINUS EXP ]
poly -> poly . MULT poly [ PLUS PARDROITE MULT MINUS EXP ]
poly -> poly . EXP INT [ PLUS PARDROITE MULT MINUS EXP ]
## Transitions:
-- On PLUS shift to state 175
-- On PARDROITE shift to state 179
-- On MULT shift to state 177
-- On MINUS shift to state 180
-- On EXP shift to state 172
## Reductions:

State 175:
## Known stack suffix:
## poly PLUS
## LR(1) items:
poly -> poly PLUS . poly [ POINT_VIRGULE PLUS PARDROITE MULT MINUS EXP ]
## Transitions:
-- On POLY_VAR shift to state 167
-- On PARGAUCHE shift to state 168
-- On MINUS shift to state 169
-- On INT shift to state 170
-- On poly shift to state 176
## Reductions:

State 176:
## Known stack suffix:
## poly PLUS poly
## LR(1) items:
poly -> poly . PLUS poly [ POINT_VIRGULE PLUS PARDROITE MULT MINUS EXP ]
poly -> poly PLUS poly . [ POINT_VIRGULE PLUS PARDROITE MULT MINUS EXP ]
poly -> poly . MINUS poly [ POINT_VIRGULE PLUS PARDROITE MULT MINUS EXP ]
poly -> poly . MULT poly [ POINT_VIRGULE PLUS PARDROITE MULT MINUS EXP ]
poly -> poly . EXP INT [ POINT_VIRGULE PLUS PARDROITE MULT MINUS EXP ]
## Transitions:
-- On MULT shift to state 177
-- On EXP shift to state 172
## Reductions:
-- On POINT_VIRGULE reduce production poly -> poly PLUS poly
-- On PLUS reduce production poly -> poly PLUS poly
-- On PARDROITE reduce production poly -> poly PLUS poly
-- On MINUS reduce production poly -> poly PLUS poly

State 177:
## Known stack suffix:
## poly MULT
## LR(1) items:
poly -> poly MULT . poly [ POINT_VIRGULE PLUS PARDROITE MULT MINUS EXP ]
## Transitions:
-- On POLY_VAR shift to state 167
-- On PARGAUCHE shift to state 168
-- On MINUS shift to state 169
-- On INT shift to state 170
-- On poly shift to state 178
## Reductions:

State 178:
## Known stack suffix:
## poly MULT poly
## LR(1) items:
poly -> poly . PLUS poly [ POINT_VIRGULE PLUS PARDROITE MULT MINUS EXP ]
poly -> poly . MINUS poly [ POINT_VIRGULE PLUS PARDROITE MULT MINUS EXP ]
poly -> poly . MULT poly [ POINT_VIRGULE PLUS PARDROITE MULT MINUS EXP ]
poly -> poly MULT poly . [ POINT_VIRGULE PLUS PARDROITE MULT MINUS EXP ]
poly -> poly . EXP INT [ POINT_VIRGULE PLUS PARDROITE MULT MINUS EXP ]
## Transitions:
-- On EXP shift to state 172
## Reductions:
-- On POINT_VIRGULE reduce production poly -> poly MULT poly
-- On PLUS reduce production poly -> poly MULT poly
-- On PARDROITE reduce production poly -> poly MULT poly
-- On MULT reduce production poly -> poly MULT poly
-- On MINUS reduce production poly -> poly MULT poly

State 179:
## Known stack suffix:
## PARGAUCHE poly PARDROITE
## LR(1) items:
poly -> PARGAUCHE poly PARDROITE . [ POINT_VIRGULE PLUS PARDROITE MULT MINUS EXP ]
## Transitions:
## Reductions:
-- On POINT_VIRGULE reduce production poly -> PARGAUCHE poly PARDROITE
-- On PLUS reduce production poly -> PARGAUCHE poly PARDROITE
-- On PARDROITE reduce production poly -> PARGAUCHE poly PARDROITE
-- On MULT reduce production poly -> PARGAUCHE poly PARDROITE
-- On MINUS reduce production poly -> PARGAUCHE poly PARDROITE
-- On EXP reduce production poly -> PARGAUCHE poly PARDROITE

State 180:
## Known stack suffix:
## poly MINUS
## LR(1) items:
poly -> poly MINUS . poly [ POINT_VIRGULE PLUS PARDROITE MULT MINUS EXP ]
## Transitions:
-- On POLY_VAR shift to state 167
-- On PARGAUCHE shift to state 168
-- On MINUS shift to state 169
-- On INT shift to state 170
-- On poly shift to state 181
## Reductions:

State 181:
## Known stack suffix:
## poly MINUS poly
## LR(1) items:
poly -> poly . PLUS poly [ POINT_VIRGULE PLUS PARDROITE MULT MINUS EXP ]
poly -> poly . MINUS poly [ POINT_VIRGULE PLUS PARDROITE MULT MINUS EXP ]
poly -> poly MINUS poly . [ POINT_VIRGULE PLUS PARDROITE MULT MINUS EXP ]
poly -> poly . MULT poly [ POINT_VIRGULE PLUS PARDROITE MULT MINUS EXP ]
poly -> poly . EXP INT [ POINT_VIRGULE PLUS PARDROITE MULT MINUS EXP ]
## Transitions:
-- On MULT shift to state 177
-- On EXP shift to state 172
## Reductions:
-- On POINT_VIRGULE reduce production poly -> poly MINUS poly
-- On PLUS reduce production poly -> poly MINUS poly
-- On PARDROITE reduce production poly -> poly MINUS poly
-- On MINUS reduce production poly -> poly MINUS poly

State 182:
## Known stack suffix:
## entete_poly EGAL poly
## LR(1) items:
poly -> poly . PLUS poly [ POINT_VIRGULE PLUS PARDROITE MULT MINUS EXP ]
poly -> poly . MINUS poly [ POINT_VIRGULE PLUS PARDROITE MULT MINUS EXP ]
poly -> poly . MULT poly [ POINT_VIRGULE PLUS PARDROITE MULT MINUS EXP ]
poly -> poly . EXP INT [ POINT_VIRGULE PLUS PARDROITE MULT MINUS EXP ]
poly_decl -> entete_poly EGAL poly . [ POINT_VIRGULE PARDROITE ]
## Transitions:
-- On PLUS shift to state 175
-- On MULT shift to state 177
-- On MINUS shift to state 180
-- On EXP shift to state 172
## Reductions:
-- On POINT_VIRGULE reduce production poly_decl -> entete_poly EGAL poly
-- On PARDROITE reduce production poly_decl -> entete_poly EGAL poly

State 183:
## Known stack suffix:
## keyword_mapo
## LR(1) items:
ordre -> keyword_mapo . PARGAUCHE precedence PARDROITE [ UNIFICATION TOKEN_INCLUDE THEORIE SUBSORTES SORTES PROBLEMES POINT_VIRGULE PARDROITE ORDRE OPERATEURS KW_END INDUCTIVE EQUATIONS EOF CONJECTURES ]
ordre -> keyword_mapo . PARGAUCHE precedence POINT_VIRGULE statuts PARDROITE [ UNIFICATION TOKEN_INCLUDE THEORIE SUBSORTES SORTES PROBLEMES POINT_VIRGULE PARDROITE ORDRE OPERATEURS KW_END INDUCTIVE EQUATIONS EOF CONJECTURES ]
## Transitions:
-- On PARGAUCHE shift to state 184
## Reductions:

State 184:
## Known stack suffix:
## keyword_mapo PARGAUCHE
## LR(1) items:
ordre -> keyword_mapo PARGAUCHE . precedence PARDROITE [ UNIFICATION TOKEN_INCLUDE THEORIE SUBSORTES SORTES PROBLEMES POINT_VIRGULE PARDROITE ORDRE OPERATEURS KW_END INDUCTIVE EQUATIONS EOF CONJECTURES ]
ordre -> keyword_mapo PARGAUCHE . precedence POINT_VIRGULE statuts PARDROITE [ UNIFICATION TOKEN_INCLUDE THEORIE SUBSORTES SORTES PROBLEMES POINT_VIRGULE PARDROITE ORDRE OPERATEURS KW_END INDUCTIVE EQUATIONS EOF CONJECTURES ]
## Transitions:
-- On IDENT shift to state 11
-- On precedence shift to state 185
-- On liste_ordonnee shift to state 135
-- On ident shift to state 138
## Reductions:
-- On POINT_VIRGULE reduce production precedence ->
-- On PARDROITE reduce production precedence ->

State 185:
## Known stack suffix:
## keyword_mapo PARGAUCHE precedence
## LR(1) items:
ordre -> keyword_mapo PARGAUCHE precedence . PARDROITE [ UNIFICATION TOKEN_INCLUDE THEORIE SUBSORTES SORTES PROBLEMES POINT_VIRGULE PARDROITE ORDRE OPERATEURS KW_END INDUCTIVE EQUATIONS EOF CONJECTURES ]
ordre -> keyword_mapo PARGAUCHE precedence . POINT_VIRGULE statuts PARDROITE [ UNIFICATION TOKEN_INCLUDE THEORIE SUBSORTES SORTES PROBLEMES POINT_VIRGULE PARDROITE ORDRE OPERATEURS KW_END INDUCTIVE EQUATIONS EOF CONJECTURES ]
## Transitions:
-- On POINT_VIRGULE shift to state 186
-- On PARDROITE shift to state 189
## Reductions:

State 186:
## Known stack suffix:
## keyword_mapo PARGAUCHE precedence POINT_VIRGULE
## LR(1) items:
ordre -> keyword_mapo PARGAUCHE precedence POINT_VIRGULE . statuts PARDROITE [ UNIFICATION TOKEN_INCLUDE THEORIE SUBSORTES SORTES PROBLEMES POINT_VIRGULE PARDROITE ORDRE OPERATEURS KW_END INDUCTIVE EQUATIONS EOF CONJECTURES ]
## Transitions:
-- On IDENT shift to state 11
-- On statuts shift to state 187
-- On statut shift to state 126
-- On ident shift to state 129
## Reductions:

State 187:
## Known stack suffix:
## keyword_mapo PARGAUCHE precedence POINT_VIRGULE statuts
## LR(1) items:
ordre -> keyword_mapo PARGAUCHE precedence POINT_VIRGULE statuts . PARDROITE [ UNIFICATION TOKEN_INCLUDE THEORIE SUBSORTES SORTES PROBLEMES POINT_VIRGULE PARDROITE ORDRE OPERATEURS KW_END INDUCTIVE EQUATIONS EOF CONJECTURES ]
## Transitions:
-- On PARDROITE shift to state 188
## Reductions:

State 188:
## Known stack suffix:
## keyword_mapo PARGAUCHE precedence POINT_VIRGULE statuts PARDROITE
## LR(1) items:
ordre -> keyword_mapo PARGAUCHE precedence POINT_VIRGULE statuts PARDROITE . [ UNIFICATION TOKEN_INCLUDE THEORIE SUBSORTES SORTES PROBLEMES POINT_VIRGULE PARDROITE ORDRE OPERATEURS KW_END INDUCTIVE EQUATIONS EOF CONJECTURES ]
## Transitions:
## Reductions:
-- On UNIFICATION reduce production ordre -> keyword_mapo PARGAUCHE precedence POINT_VIRGULE statuts PARDROITE
-- On TOKEN_INCLUDE reduce production ordre -> keyword_mapo PARGAUCHE precedence POINT_VIRGULE statuts PARDROITE
-- On THEORIE reduce production ordre -> keyword_mapo PARGAUCHE precedence POINT_VIRGULE statuts PARDROITE
-- On SUBSORTES reduce production ordre -> keyword_mapo PARGAUCHE precedence POINT_VIRGULE statuts PARDROITE
-- On SORTES reduce production ordre -> keyword_mapo PARGAUCHE precedence POINT_VIRGULE statuts PARDROITE
-- On PROBLEMES reduce production ordre -> keyword_mapo PARGAUCHE precedence POINT_VIRGULE statuts PARDROITE
-- On POINT_VIRGULE reduce production ordre -> keyword_mapo PARGAUCHE precedence POINT_VIRGULE statuts PARDROITE
-- On PARDROITE reduce production ordre -> keyword_mapo PARGAUCHE precedence POINT_VIRGULE statuts PARDROITE
-- On ORDRE reduce production ordre -> keyword_mapo PARGAUCHE precedence POINT_VIRGULE statuts PARDROITE
-- On OPERATEURS reduce production ordre -> keyword_mapo PARGAUCHE precedence POINT_VIRGULE statuts PARDROITE
-- On KW_END reduce production ordre -> keyword_mapo PARGAUCHE precedence POINT_VIRGULE statuts PARDROITE
-- On INDUCTIVE reduce production ordre -> keyword_mapo PARGAUCHE precedence POINT_VIRGULE statuts PARDROITE
-- On EQUATIONS reduce production ordre -> keyword_mapo PARGAUCHE precedence POINT_VIRGULE statuts PARDROITE
-- On EOF reduce production ordre -> keyword_mapo PARGAUCHE precedence POINT_VIRGULE statuts PARDROITE
-- On CONJECTURES reduce production ordre -> keyword_mapo PARGAUCHE precedence POINT_VIRGULE statuts PARDROITE

State 189:
## Known stack suffix:
## keyword_mapo PARGAUCHE precedence PARDROITE
## LR(1) items:
ordre -> keyword_mapo PARGAUCHE precedence PARDROITE . [ UNIFICATION TOKEN_INCLUDE THEORIE SUBSORTES SORTES PROBLEMES POINT_VIRGULE PARDROITE ORDRE OPERATEURS KW_END INDUCTIVE EQUATIONS EOF CONJECTURES ]
## Transitions:
## Reductions:
-- On UNIFICATION reduce production ordre -> keyword_mapo PARGAUCHE precedence PARDROITE
-- On TOKEN_INCLUDE reduce production ordre -> keyword_mapo PARGAUCHE precedence PARDROITE
-- On THEORIE reduce production ordre -> keyword_mapo PARGAUCHE precedence PARDROITE
-- On SUBSORTES reduce production ordre -> keyword_mapo PARGAUCHE precedence PARDROITE
-- On SORTES reduce production ordre -> keyword_mapo PARGAUCHE precedence PARDROITE
-- On PROBLEMES reduce production ordre -> keyword_mapo PARGAUCHE precedence PARDROITE
-- On POINT_VIRGULE reduce production ordre -> keyword_mapo PARGAUCHE precedence PARDROITE
-- On PARDROITE reduce production ordre -> keyword_mapo PARGAUCHE precedence PARDROITE
-- On ORDRE reduce production ordre -> keyword_mapo PARGAUCHE precedence PARDROITE
-- On OPERATEURS reduce production ordre -> keyword_mapo PARGAUCHE precedence PARDROITE
-- On KW_END reduce production ordre -> keyword_mapo PARGAUCHE precedence PARDROITE
-- On INDUCTIVE reduce production ordre -> keyword_mapo PARGAUCHE precedence PARDROITE
-- On EQUATIONS reduce production ordre -> keyword_mapo PARGAUCHE precedence PARDROITE
-- On EOF reduce production ordre -> keyword_mapo PARGAUCHE precedence PARDROITE
-- On CONJECTURES reduce production ordre -> keyword_mapo PARGAUCHE precedence PARDROITE

State 190:
## Known stack suffix:
## ordre PARDROITE
## LR(1) items:
ordre_List -> ordre PARDROITE . [ UNIFICATION TOKEN_INCLUDE THEORIE SUBSORTES SORTES PROBLEMES POINT_VIRGULE PARDROITE ORDRE OPERATEURS KW_END INDUCTIVE EQUATIONS EOF CONJECTURES ]
## Transitions:
## Reductions:
-- On UNIFICATION reduce production ordre_List -> ordre PARDROITE
-- On TOKEN_INCLUDE reduce production ordre_List -> ordre PARDROITE
-- On THEORIE reduce production ordre_List -> ordre PARDROITE
-- On SUBSORTES reduce production ordre_List -> ordre PARDROITE
-- On SORTES reduce production ordre_List -> ordre PARDROITE
-- On PROBLEMES reduce production ordre_List -> ordre PARDROITE
-- On POINT_VIRGULE reduce production ordre_List -> ordre PARDROITE
-- On PARDROITE reduce production ordre_List -> ordre PARDROITE
-- On ORDRE reduce production ordre_List -> ordre PARDROITE
-- On OPERATEURS reduce production ordre_List -> ordre PARDROITE
-- On KW_END reduce production ordre_List -> ordre PARDROITE
-- On INDUCTIVE reduce production ordre_List -> ordre PARDROITE
-- On EQUATIONS reduce production ordre_List -> ordre PARDROITE
-- On EOF reduce production ordre_List -> ordre PARDROITE
-- On CONJECTURES reduce production ordre_List -> ordre PARDROITE

State 191:
## Known stack suffix:
## TOKEN_RPS PARGAUCHE ordre
## LR(1) items:
rps_header -> TOKEN_RPS PARGAUCHE ordre . POINT_VIRGULE [ PREFIX_IDENT PARGAUCHE ]
## Transitions:
-- On POINT_VIRGULE shift to state 192
## Reductions:

State 192:
## Known stack suffix:
## TOKEN_RPS PARGAUCHE ordre POINT_VIRGULE
## LR(1) items:
rps_header -> TOKEN_RPS PARGAUCHE ordre POINT_VIRGULE . [ PREFIX_IDENT PARGAUCHE ]
## Transitions:
## Reductions:
-- On PREFIX_IDENT reduce production rps_header -> TOKEN_RPS PARGAUCHE ordre POINT_VIRGULE
-- On PARGAUCHE reduce production rps_header -> TOKEN_RPS PARGAUCHE ordre POINT_VIRGULE

State 193:
## Known stack suffix:
## TOKEN_SEMI_INTERACTIF PARGAUCHE ordre
## LR(1) items:
ordre_plus -> TOKEN_SEMI_INTERACTIF PARGAUCHE ordre . PARDROITE [ UNIFICATION TOKEN_INCLUDE THEORIE SUBSORTES SORTES PROBLEMES ORDRE OPERATEURS KW_END INDUCTIVE EQUATIONS EOF CONJECTURES ]
## Transitions:
-- On PARDROITE shift to state 194
## Reductions:

State 194:
## Known stack suffix:
## TOKEN_SEMI_INTERACTIF PARGAUCHE ordre PARDROITE
## LR(1) items:
ordre_plus -> TOKEN_SEMI_INTERACTIF PARGAUCHE ordre PARDROITE . [ UNIFICATION TOKEN_INCLUDE THEORIE SUBSORTES SORTES PROBLEMES ORDRE OPERATEURS KW_END INDUCTIVE EQUATIONS EOF CONJECTURES ]
## Transitions:
## Reductions:
-- On UNIFICATION reduce production ordre_plus -> TOKEN_SEMI_INTERACTIF PARGAUCHE ordre PARDROITE
-- On TOKEN_INCLUDE reduce production ordre_plus -> TOKEN_SEMI_INTERACTIF PARGAUCHE ordre PARDROITE
-- On THEORIE reduce production ordre_plus -> TOKEN_SEMI_INTERACTIF PARGAUCHE ordre PARDROITE
-- On SUBSORTES reduce production ordre_plus -> TOKEN_SEMI_INTERACTIF PARGAUCHE ordre PARDROITE
-- On SORTES reduce production ordre_plus -> TOKEN_SEMI_INTERACTIF PARGAUCHE ordre PARDROITE
-- On PROBLEMES reduce production ordre_plus -> TOKEN_SEMI_INTERACTIF PARGAUCHE ordre PARDROITE
-- On ORDRE reduce production ordre_plus -> TOKEN_SEMI_INTERACTIF PARGAUCHE ordre PARDROITE
-- On OPERATEURS reduce production ordre_plus -> TOKEN_SEMI_INTERACTIF PARGAUCHE ordre PARDROITE
-- On KW_END reduce production ordre_plus -> TOKEN_SEMI_INTERACTIF PARGAUCHE ordre PARDROITE
-- On INDUCTIVE reduce production ordre_plus -> TOKEN_SEMI_INTERACTIF PARGAUCHE ordre PARDROITE
-- On EQUATIONS reduce production ordre_plus -> TOKEN_SEMI_INTERACTIF PARGAUCHE ordre PARDROITE
-- On EOF reduce production ordre_plus -> TOKEN_SEMI_INTERACTIF PARGAUCHE ordre PARDROITE
-- On CONJECTURES reduce production ordre_plus -> TOKEN_SEMI_INTERACTIF PARGAUCHE ordre PARDROITE

State 195:
## Known stack suffix:
## keyword_order ordre_plus
## LR(1) items:
declaration -> keyword_order ordre_plus . [ UNIFICATION TOKEN_INCLUDE THEORIE SUBSORTES SORTES PROBLEMES ORDRE OPERATEURS KW_END INDUCTIVE EQUATIONS EOF CONJECTURES ]
## Transitions:
## Reductions:
-- On UNIFICATION reduce production declaration -> keyword_order ordre_plus
-- On TOKEN_INCLUDE reduce production declaration -> keyword_order ordre_plus
-- On THEORIE reduce production declaration -> keyword_order ordre_plus
-- On SUBSORTES reduce production declaration -> keyword_order ordre_plus
-- On SORTES reduce production declaration -> keyword_order ordre_plus
-- On PROBLEMES reduce production declaration -> keyword_order ordre_plus
-- On ORDRE reduce production declaration -> keyword_order ordre_plus
-- On OPERATEURS reduce production declaration -> keyword_order ordre_plus
-- On KW_END reduce production declaration -> keyword_order ordre_plus
-- On INDUCTIVE reduce production declaration -> keyword_order ordre_plus
-- On EQUATIONS reduce production declaration -> keyword_order ordre_plus
-- On EOF reduce production declaration -> keyword_order ordre_plus
-- On CONJECTURES reduce production declaration -> keyword_order ordre_plus

State 196:
## Known stack suffix:
## ordre
## LR(1) items:
ordre_plus -> ordre . [ UNIFICATION TOKEN_INCLUDE THEORIE SUBSORTES SORTES PROBLEMES ORDRE OPERATEURS KW_END INDUCTIVE EQUATIONS EOF CONJECTURES ]
## Transitions:
## Reductions:
-- On UNIFICATION reduce production ordre_plus -> ordre
-- On TOKEN_INCLUDE reduce production ordre_plus -> ordre
-- On THEORIE reduce production ordre_plus -> ordre
-- On SUBSORTES reduce production ordre_plus -> ordre
-- On SORTES reduce production ordre_plus -> ordre
-- On PROBLEMES reduce production ordre_plus -> ordre
-- On ORDRE reduce production ordre_plus -> ordre
-- On OPERATEURS reduce production ordre_plus -> ordre
-- On KW_END reduce production ordre_plus -> ordre
-- On INDUCTIVE reduce production ordre_plus -> ordre
-- On EQUATIONS reduce production ordre_plus -> ordre
-- On EOF reduce production ordre_plus -> ordre
-- On CONJECTURES reduce production ordre_plus -> ordre

State 197:
## Known stack suffix:
## keyword_operators
## LR(1) items:
declaration -> keyword_operators . operateurs [ UNIFICATION TOKEN_INCLUDE THEORIE SUBSORTES SORTES PROBLEMES ORDRE OPERATEURS KW_END INDUCTIVE EQUATIONS EOF CONJECTURES ]
## Transitions:
-- On IDENT shift to state 11
-- On operateurs shift to state 198
-- On op_list_colon shift to state 199
-- On op_list shift to state 221
-- On ident shift to state 223
-- On decl_arite shift to state 226
## Reductions:

State 198:
## Known stack suffix:
## keyword_operators operateurs
## LR(1) items:
declaration -> keyword_operators operateurs . [ UNIFICATION TOKEN_INCLUDE THEORIE SUBSORTES SORTES PROBLEMES ORDRE OPERATEURS KW_END INDUCTIVE EQUATIONS EOF CONJECTURES ]
## Transitions:
## Reductions:
-- On UNIFICATION reduce production declaration -> keyword_operators operateurs
-- On TOKEN_INCLUDE reduce production declaration -> keyword_operators operateurs
-- On THEORIE reduce production declaration -> keyword_operators operateurs
-- On SUBSORTES reduce production declaration -> keyword_operators operateurs
-- On SORTES reduce production declaration -> keyword_operators operateurs
-- On PROBLEMES reduce production declaration -> keyword_operators operateurs
-- On ORDRE reduce production declaration -> keyword_operators operateurs
-- On OPERATEURS reduce production declaration -> keyword_operators operateurs
-- On KW_END reduce production declaration -> keyword_operators operateurs
-- On INDUCTIVE reduce production declaration -> keyword_operators operateurs
-- On EQUATIONS reduce production declaration -> keyword_operators operateurs
-- On EOF reduce production declaration -> keyword_operators operateurs
-- On CONJECTURES reduce production declaration -> keyword_operators operateurs

State 199:
## Known stack suffix:
## op_list_colon
## LR(1) items:
decl_arite -> op_list_colon . fix arity AS profile_list [ UNIFICATION TOKEN_INCLUDE THEORIE SUBSORTES SORTES PROBLEMES POINT_VIRGULE ORDRE OPERATEURS KW_END INDUCTIVE IDENT EQUATIONS EOF CONJECTURES ]
decl_arite -> op_list_colon . fix arity [ UNIFICATION TOKEN_INCLUDE THEORIE SUBSORTES SORTES PROBLEMES POINT_VIRGULE ORDRE OPERATEURS KW_END INDUCTIVE IDENT EQUATIONS EOF CONJECTURES ]
## Transitions:
-- On PREFIXE shift to state 200
-- On POSTFIXE shift to state 201
-- On INFIXE shift to state 202
-- On fix shift to state 203
## Reductions:
-- On UNAIRE reduce production fix ->
-- On TOKEN_VARIABLE reduce production fix ->
-- On TOKEN_C reduce production fix ->
-- On TOKEN_AC reduce production fix ->
-- On INT reduce production fix ->
-- On CONSTANTE reduce production fix ->
-- On BINAIRE reduce production fix ->

State 200:
## Known stack suffix:
## PREFIXE
## LR(1) items:
fix -> PREFIXE . [ UNAIRE TOKEN_VARIABLE TOKEN_C TOKEN_AC INT CONSTANTE BINAIRE ]
## Transitions:
## Reductions:
-- On UNAIRE reduce production fix -> PREFIXE
-- On TOKEN_VARIABLE reduce production fix -> PREFIXE
-- On TOKEN_C reduce production fix -> PREFIXE
-- On TOKEN_AC reduce production fix -> PREFIXE
-- On INT reduce production fix -> PREFIXE
-- On CONSTANTE reduce production fix -> PREFIXE
-- On BINAIRE reduce production fix -> PREFIXE

State 201:
## Known stack suffix:
## POSTFIXE
## LR(1) items:
fix -> POSTFIXE . [ UNAIRE TOKEN_VARIABLE TOKEN_C TOKEN_AC INT CONSTANTE BINAIRE ]
## Transitions:
## Reductions:
-- On UNAIRE reduce production fix -> POSTFIXE
-- On TOKEN_VARIABLE reduce production fix -> POSTFIXE
-- On TOKEN_C reduce production fix -> POSTFIXE
-- On TOKEN_AC reduce production fix -> POSTFIXE
-- On INT reduce production fix -> POSTFIXE
-- On CONSTANTE reduce production fix -> POSTFIXE
-- On BINAIRE reduce production fix -> POSTFIXE

State 202:
## Known stack suffix:
## INFIXE
## LR(1) items:
fix -> INFIXE . [ UNAIRE TOKEN_VARIABLE TOKEN_C TOKEN_AC INT CONSTANTE BINAIRE ]
## Transitions:
## Reductions:
-- On UNAIRE reduce production fix -> INFIXE
-- On TOKEN_VARIABLE reduce production fix -> INFIXE
-- On TOKEN_C reduce production fix -> INFIXE
-- On TOKEN_AC reduce production fix -> INFIXE
-- On INT reduce production fix -> INFIXE
-- On CONSTANTE reduce production fix -> INFIXE
-- On BINAIRE reduce production fix -> INFIXE

State 203:
## Known stack suffix:
## op_list_colon fix
## LR(1) items:
decl_arite -> op_list_colon fix . arity AS profile_list [ UNIFICATION TOKEN_INCLUDE THEORIE SUBSORTES SORTES PROBLEMES POINT_VIRGULE ORDRE OPERATEURS KW_END INDUCTIVE IDENT EQUATIONS EOF CONJECTURES ]
decl_arite -> op_list_colon fix . arity [ UNIFICATION TOKEN_INCLUDE THEORIE SUBSORTES SORTES PROBLEMES POINT_VIRGULE ORDRE OPERATEURS KW_END INDUCTIVE IDENT EQUATIONS EOF CONJECTURES ]
## Transitions:
-- On UNAIRE shift to state 204
-- On TOKEN_VARIABLE shift to state 205
-- On TOKEN_C shift to state 206
-- On TOKEN_AC shift to state 207
-- On INT shift to state 208
-- On CONSTANTE shift to state 209
-- On BINAIRE shift to state 210
-- On arityaux shift to state 211
-- On arity shift to state 212
## Reductions:

State 204:
## Known stack suffix:
## UNAIRE
## LR(1) items:
arityaux -> UNAIRE . [ UNIFICATION TOKEN_INCLUDE THEORIE SUBSORTES SORTES PROBLEMES POINT_VIRGULE ORDRE OPERATEURS KW_END INDUCTIVE IDENT EQUATIONS EOF CONJECTURES AS ]
## Transitions:
## Reductions:
-- On UNIFICATION reduce production arityaux -> UNAIRE
-- On TOKEN_INCLUDE reduce production arityaux -> UNAIRE
-- On THEORIE reduce production arityaux -> UNAIRE
-- On SUBSORTES reduce production arityaux -> UNAIRE
-- On SORTES reduce production arityaux -> UNAIRE
-- On PROBLEMES reduce production arityaux -> UNAIRE
-- On POINT_VIRGULE reduce production arityaux -> UNAIRE
-- On ORDRE reduce production arityaux -> UNAIRE
-- On OPERATEURS reduce production arityaux -> UNAIRE
-- On KW_END reduce production arityaux -> UNAIRE
-- On INDUCTIVE reduce production arityaux -> UNAIRE
-- On IDENT reduce production arityaux -> UNAIRE
-- On EQUATIONS reduce production arityaux -> UNAIRE
-- On EOF reduce production arityaux -> UNAIRE
-- On CONJECTURES reduce production arityaux -> UNAIRE
-- On AS reduce production arityaux -> UNAIRE

State 205:
## Known stack suffix:
## TOKEN_VARIABLE
## LR(1) items:
arityaux -> TOKEN_VARIABLE . [ UNIFICATION TOKEN_INCLUDE THEORIE SUBSORTES SORTES PROBLEMES POINT_VIRGULE ORDRE OPERATEURS KW_END INDUCTIVE IDENT EQUATIONS EOF CONJECTURES AS ]
## Transitions:
## Reductions:
-- On UNIFICATION reduce production arityaux -> TOKEN_VARIABLE
-- On TOKEN_INCLUDE reduce production arityaux -> TOKEN_VARIABLE
-- On THEORIE reduce production arityaux -> TOKEN_VARIABLE
-- On SUBSORTES reduce production arityaux -> TOKEN_VARIABLE
-- On SORTES reduce production arityaux -> TOKEN_VARIABLE
-- On PROBLEMES reduce production arityaux -> TOKEN_VARIABLE
-- On POINT_VIRGULE reduce production arityaux -> TOKEN_VARIABLE
-- On ORDRE reduce production arityaux -> TOKEN_VARIABLE
-- On OPERATEURS reduce production arityaux -> TOKEN_VARIABLE
-- On KW_END reduce production arityaux -> TOKEN_VARIABLE
-- On INDUCTIVE reduce production arityaux -> TOKEN_VARIABLE
-- On IDENT reduce production arityaux -> TOKEN_VARIABLE
-- On EQUATIONS reduce production arityaux -> TOKEN_VARIABLE
-- On EOF reduce production arityaux -> TOKEN_VARIABLE
-- On CONJECTURES reduce production arityaux -> TOKEN_VARIABLE
-- On AS reduce production arityaux -> TOKEN_VARIABLE

State 206:
## Known stack suffix:
## TOKEN_C
## LR(1) items:
arityaux -> TOKEN_C . [ UNIFICATION TOKEN_INCLUDE THEORIE SUBSORTES SORTES PROBLEMES POINT_VIRGULE ORDRE OPERATEURS KW_END INDUCTIVE IDENT EQUATIONS EOF CONJECTURES AS ]
## Transitions:
## Reductions:
-- On UNIFICATION reduce production arityaux -> TOKEN_C
-- On TOKEN_INCLUDE reduce production arityaux -> TOKEN_C
-- On THEORIE reduce production arityaux -> TOKEN_C
-- On SUBSORTES reduce production arityaux -> TOKEN_C
-- On SORTES reduce production arityaux -> TOKEN_C
-- On PROBLEMES reduce production arityaux -> TOKEN_C
-- On POINT_VIRGULE reduce production arityaux -> TOKEN_C
-- On ORDRE reduce production arityaux -> TOKEN_C
-- On OPERATEURS reduce production arityaux -> TOKEN_C
-- On KW_END reduce production arityaux -> TOKEN_C
-- On INDUCTIVE reduce production arityaux -> TOKEN_C
-- On IDENT reduce production arityaux -> TOKEN_C
-- On EQUATIONS reduce production arityaux -> TOKEN_C
-- On EOF reduce production arityaux -> TOKEN_C
-- On CONJECTURES reduce production arityaux -> TOKEN_C
-- On AS reduce production arityaux -> TOKEN_C

State 207:
## Known stack suffix:
## TOKEN_AC
## LR(1) items:
arityaux -> TOKEN_AC . [ UNIFICATION TOKEN_INCLUDE THEORIE SUBSORTES SORTES PROBLEMES POINT_VIRGULE ORDRE OPERATEURS KW_END INDUCTIVE IDENT EQUATIONS EOF CONJECTURES AS ]
## Transitions:
## Reductions:
-- On UNIFICATION reduce production arityaux -> TOKEN_AC
-- On TOKEN_INCLUDE reduce production arityaux -> TOKEN_AC
-- On THEORIE reduce production arityaux -> TOKEN_AC
-- On SUBSORTES reduce production arityaux -> TOKEN_AC
-- On SORTES reduce production arityaux -> TOKEN_AC
-- On PROBLEMES reduce production arityaux -> TOKEN_AC
-- On POINT_VIRGULE reduce production arityaux -> TOKEN_AC
-- On ORDRE reduce production arityaux -> TOKEN_AC
-- On OPERATEURS reduce production arityaux -> TOKEN_AC
-- On KW_END reduce production arityaux -> TOKEN_AC
-- On INDUCTIVE reduce production arityaux -> TOKEN_AC
-- On IDENT reduce production arityaux -> TOKEN_AC
-- On EQUATIONS reduce production arityaux -> TOKEN_AC
-- On EOF reduce production arityaux -> TOKEN_AC
-- On CONJECTURES reduce production arityaux -> TOKEN_AC
-- On AS reduce production arityaux -> TOKEN_AC

State 208:
## Known stack suffix:
## INT
## LR(1) items:
arityaux -> INT . [ UNIFICATION TOKEN_INCLUDE THEORIE SUBSORTES SORTES PROBLEMES POINT_VIRGULE ORDRE OPERATEURS KW_END INDUCTIVE IDENT EQUATIONS EOF CONJECTURES AS ]
## Transitions:
## Reductions:
-- On UNIFICATION reduce production arityaux -> INT
-- On TOKEN_INCLUDE reduce production arityaux -> INT
-- On THEORIE reduce production arityaux -> INT
-- On SUBSORTES reduce production arityaux -> INT
-- On SORTES reduce production arityaux -> INT
-- On PROBLEMES reduce production arityaux -> INT
-- On POINT_VIRGULE reduce production arityaux -> INT
-- On ORDRE reduce production arityaux -> INT
-- On OPERATEURS reduce production arityaux -> INT
-- On KW_END reduce production arityaux -> INT
-- On INDUCTIVE reduce production arityaux -> INT
-- On IDENT reduce production arityaux -> INT
-- On EQUATIONS reduce production arityaux -> INT
-- On EOF reduce production arityaux -> INT
-- On CONJECTURES reduce production arityaux -> INT
-- On AS reduce production arityaux -> INT

State 209:
## Known stack suffix:
## CONSTANTE
## LR(1) items:
arityaux -> CONSTANTE . [ UNIFICATION TOKEN_INCLUDE THEORIE SUBSORTES SORTES PROBLEMES POINT_VIRGULE ORDRE OPERATEURS KW_END INDUCTIVE IDENT EQUATIONS EOF CONJECTURES AS ]
## Transitions:
## Reductions:
-- On UNIFICATION reduce production arityaux -> CONSTANTE
-- On TOKEN_INCLUDE reduce production arityaux -> CONSTANTE
-- On THEORIE reduce production arityaux -> CONSTANTE
-- On SUBSORTES reduce production arityaux -> CONSTANTE
-- On SORTES reduce production arityaux -> CONSTANTE
-- On PROBLEMES reduce production arityaux -> CONSTANTE
-- On POINT_VIRGULE reduce production arityaux -> CONSTANTE
-- On ORDRE reduce production arityaux -> CONSTANTE
-- On OPERATEURS reduce production arityaux -> CONSTANTE
-- On KW_END reduce production arityaux -> CONSTANTE
-- On INDUCTIVE reduce production arityaux -> CONSTANTE
-- On IDENT reduce production arityaux -> CONSTANTE
-- On EQUATIONS reduce production arityaux -> CONSTANTE
-- On EOF reduce production arityaux -> CONSTANTE
-- On CONJECTURES reduce production arityaux -> CONSTANTE
-- On AS reduce production arityaux -> CONSTANTE

State 210:
## Known stack suffix:
## BINAIRE
## LR(1) items:
arityaux -> BINAIRE . [ UNIFICATION TOKEN_INCLUDE THEORIE SUBSORTES SORTES PROBLEMES POINT_VIRGULE ORDRE OPERATEURS KW_END INDUCTIVE IDENT EQUATIONS EOF CONJECTURES AS ]
## Transitions:
## Reductions:
-- On UNIFICATION reduce production arityaux -> BINAIRE
-- On TOKEN_INCLUDE reduce production arityaux -> BINAIRE
-- On THEORIE reduce production arityaux -> BINAIRE
-- On SUBSORTES reduce production arityaux -> BINAIRE
-- On SORTES reduce production arityaux -> BINAIRE
-- On PROBLEMES reduce production arityaux -> BINAIRE
-- On POINT_VIRGULE reduce production arityaux -> BINAIRE
-- On ORDRE reduce production arityaux -> BINAIRE
-- On OPERATEURS reduce production arityaux -> BINAIRE
-- On KW_END reduce production arityaux -> BINAIRE
-- On INDUCTIVE reduce production arityaux -> BINAIRE
-- On IDENT reduce production arityaux -> BINAIRE
-- On EQUATIONS reduce production arityaux -> BINAIRE
-- On EOF reduce production arityaux -> BINAIRE
-- On CONJECTURES reduce production arityaux -> BINAIRE
-- On AS reduce production arityaux -> BINAIRE

State 211:
## Known stack suffix:
## arityaux
## LR(1) items:
arity -> arityaux . [ UNIFICATION TOKEN_INCLUDE THEORIE SUBSORTES SORTES PROBLEMES POINT_VIRGULE ORDRE OPERATEURS KW_END INDUCTIVE IDENT EQUATIONS EOF CONJECTURES AS ]
## Transitions:
## Reductions:
-- On UNIFICATION reduce production arity -> arityaux
-- On TOKEN_INCLUDE reduce production arity -> arityaux
-- On THEORIE reduce production arity -> arityaux
-- On SUBSORTES reduce production arity -> arityaux
-- On SORTES reduce production arity -> arityaux
-- On PROBLEMES reduce production arity -> arityaux
-- On POINT_VIRGULE reduce production arity -> arityaux
-- On ORDRE reduce production arity -> arityaux
-- On OPERATEURS reduce production arity -> arityaux
-- On KW_END reduce production arity -> arityaux
-- On INDUCTIVE reduce production arity -> arityaux
-- On IDENT reduce production arity -> arityaux
-- On EQUATIONS reduce production arity -> arityaux
-- On EOF reduce production arity -> arityaux
-- On CONJECTURES reduce production arity -> arityaux
-- On AS reduce production arity -> arityaux

State 212:
## Known stack suffix:
## op_list_colon fix arity
## LR(1) items:
decl_arite -> op_list_colon fix arity . AS profile_list [ UNIFICATION TOKEN_INCLUDE THEORIE SUBSORTES SORTES PROBLEMES POINT_VIRGULE ORDRE OPERATEURS KW_END INDUCTIVE IDENT EQUATIONS EOF CONJECTURES ]
decl_arite -> op_list_colon fix arity . [ UNIFICATION TOKEN_INCLUDE THEORIE SUBSORTES SORTES PROBLEMES POINT_VIRGULE ORDRE OPERATEURS KW_END INDUCTIVE IDENT EQUATIONS EOF CONJECTURES ]
## Transitions:
-- On AS shift to state 213
## Reductions:
-- On UNIFICATION reduce production decl_arite -> op_list_colon fix arity
-- On TOKEN_INCLUDE reduce production decl_arite -> op_list_colon fix arity
-- On THEORIE reduce production decl_arite -> op_list_colon fix arity
-- On SUBSORTES reduce production decl_arite -> op_list_colon fix arity
-- On SORTES reduce production decl_arite -> op_list_colon fix arity
-- On PROBLEMES reduce production decl_arite -> op_list_colon fix arity
-- On POINT_VIRGULE reduce production decl_arite -> op_list_colon fix arity
-- On ORDRE reduce production decl_arite -> op_list_colon fix arity
-- On OPERATEURS reduce production decl_arite -> op_list_colon fix arity
-- On KW_END reduce production decl_arite -> op_list_colon fix arity
-- On INDUCTIVE reduce production decl_arite -> op_list_colon fix arity
-- On IDENT reduce production decl_arite -> op_list_colon fix arity
-- On EQUATIONS reduce production decl_arite -> op_list_colon fix arity
-- On EOF reduce production decl_arite -> op_list_colon fix arity
-- On CONJECTURES reduce production decl_arite -> op_list_colon fix arity

State 213:
## Known stack suffix:
## op_list_colon fix arity AS
## LR(1) items:
decl_arite -> op_list_colon fix arity AS . profile_list [ UNIFICATION TOKEN_INCLUDE THEORIE SUBSORTES SORTES PROBLEMES POINT_VIRGULE ORDRE OPERATEURS KW_END INDUCTIVE IDENT EQUATIONS EOF CONJECTURES ]
## Transitions:
-- On IDENT shift to state 63
-- On profile_list shift to state 214
-- On profile shift to state 215
-- On base_sorte shift to state 218
## Reductions:

State 214:
## Known stack suffix:
## op_list_colon fix arity AS profile_list
## LR(1) items:
decl_arite -> op_list_colon fix arity AS profile_list . [ UNIFICATION TOKEN_INCLUDE THEORIE SUBSORTES SORTES PROBLEMES POINT_VIRGULE ORDRE OPERATEURS KW_END INDUCTIVE IDENT EQUATIONS EOF CONJECTURES ]
## Transitions:
## Reductions:
-- On UNIFICATION reduce production decl_arite -> op_list_colon fix arity AS profile_list
-- On TOKEN_INCLUDE reduce production decl_arite -> op_list_colon fix arity AS profile_list
-- On THEORIE reduce production decl_arite -> op_list_colon fix arity AS profile_list
-- On SUBSORTES reduce production decl_arite -> op_list_colon fix arity AS profile_list
-- On SORTES reduce production decl_arite -> op_list_colon fix arity AS profile_list
-- On PROBLEMES reduce production decl_arite -> op_list_colon fix arity AS profile_list
-- On POINT_VIRGULE reduce production decl_arite -> op_list_colon fix arity AS profile_list
-- On ORDRE reduce production decl_arite -> op_list_colon fix arity AS profile_list
-- On OPERATEURS reduce production decl_arite -> op_list_colon fix arity AS profile_list
-- On KW_END reduce production decl_arite -> op_list_colon fix arity AS profile_list
-- On INDUCTIVE reduce production decl_arite -> op_list_colon fix arity AS profile_list
-- On IDENT reduce production decl_arite -> op_list_colon fix arity AS profile_list
-- On EQUATIONS reduce production decl_arite -> op_list_colon fix arity AS profile_list
-- On EOF reduce production decl_arite -> op_list_colon fix arity AS profile_list
-- On CONJECTURES reduce production decl_arite -> op_list_colon fix arity AS profile_list

State 215:
## Known stack suffix:
## profile
## LR(1) items:
profile_list -> profile . [ UNIFICATION TOKEN_INCLUDE THEORIE SUBSORTES SORTES PROBLEMES POINT_VIRGULE ORDRE OPERATEURS KW_END INDUCTIVE IDENT EQUATIONS EOF CONJECTURES ]
profile_list -> profile . VIRGULE profile_list [ UNIFICATION TOKEN_INCLUDE THEORIE SUBSORTES SORTES PROBLEMES POINT_VIRGULE ORDRE OPERATEURS KW_END INDUCTIVE IDENT EQUATIONS EOF CONJECTURES ]
## Transitions:
-- On VIRGULE shift to state 216
## Reductions:
-- On UNIFICATION reduce production profile_list -> profile
-- On TOKEN_INCLUDE reduce production profile_list -> profile
-- On THEORIE reduce production profile_list -> profile
-- On SUBSORTES reduce production profile_list -> profile
-- On SORTES reduce production profile_list -> profile
-- On PROBLEMES reduce production profile_list -> profile
-- On POINT_VIRGULE reduce production profile_list -> profile
-- On ORDRE reduce production profile_list -> profile
-- On OPERATEURS reduce production profile_list -> profile
-- On KW_END reduce production profile_list -> profile
-- On INDUCTIVE reduce production profile_list -> profile
-- On IDENT reduce production profile_list -> profile
-- On EQUATIONS reduce production profile_list -> profile
-- On EOF reduce production profile_list -> profile
-- On CONJECTURES reduce production profile_list -> profile

State 216:
## Known stack suffix:
## profile VIRGULE
## LR(1) items:
profile_list -> profile VIRGULE . profile_list [ UNIFICATION TOKEN_INCLUDE THEORIE SUBSORTES SORTES PROBLEMES POINT_VIRGULE ORDRE OPERATEURS KW_END INDUCTIVE IDENT EQUATIONS EOF CONJECTURES ]
## Transitions:
-- On IDENT shift to state 63
-- On profile_list shift to state 217
-- On profile shift to state 215
-- On base_sorte shift to state 218
## Reductions:

State 217:
## Known stack suffix:
## profile VIRGULE profile_list
## LR(1) items:
profile_list -> profile VIRGULE profile_list . [ UNIFICATION TOKEN_INCLUDE THEORIE SUBSORTES SORTES PROBLEMES POINT_VIRGULE ORDRE OPERATEURS KW_END INDUCTIVE IDENT EQUATIONS EOF CONJECTURES ]
## Transitions:
## Reductions:
-- On UNIFICATION reduce production profile_list -> profile VIRGULE profile_list
-- On TOKEN_INCLUDE reduce production profile_list -> profile VIRGULE profile_list
-- On THEORIE reduce production profile_list -> profile VIRGULE profile_list
-- On SUBSORTES reduce production profile_list -> profile VIRGULE profile_list
-- On SORTES reduce production profile_list -> profile VIRGULE profile_list
-- On PROBLEMES reduce production profile_list -> profile VIRGULE profile_list
-- On POINT_VIRGULE reduce production profile_list -> profile VIRGULE profile_list
-- On ORDRE reduce production profile_list -> profile VIRGULE profile_list
-- On OPERATEURS reduce production profile_list -> profile VIRGULE profile_list
-- On KW_END reduce production profile_list -> profile VIRGULE profile_list
-- On INDUCTIVE reduce production profile_list -> profile VIRGULE profile_list
-- On IDENT reduce production profile_list -> profile VIRGULE profile_list
-- On EQUATIONS reduce production profile_list -> profile VIRGULE profile_list
-- On EOF reduce production profile_list -> profile VIRGULE profile_list
-- On CONJECTURES reduce production profile_list -> profile VIRGULE profile_list

State 218:
## Known stack suffix:
## base_sorte
## LR(1) items:
profile -> base_sorte . [ VIRGULE UNIFICATION TOKEN_INCLUDE THEORIE SUBSORTES SORTES PROBLEMES POINT_VIRGULE ORDRE OPERATEURS KW_END INDUCTIVE IDENT EQUATIONS EOF CONJECTURES ]
profile -> base_sorte . FLECHE profile [ VIRGULE UNIFICATION TOKEN_INCLUDE THEORIE SUBSORTES SORTES PROBLEMES POINT_VIRGULE ORDRE OPERATEURS KW_END INDUCTIVE IDENT EQUATIONS EOF CONJECTURES ]
## Transitions:
-- On FLECHE shift to state 219
## Reductions:
-- On VIRGULE reduce production profile -> base_sorte
-- On UNIFICATION reduce production profile -> base_sorte
-- On TOKEN_INCLUDE reduce production profile -> base_sorte
-- On THEORIE reduce production profile -> base_sorte
-- On SUBSORTES reduce production profile -> base_sorte
-- On SORTES reduce production profile -> base_sorte
-- On PROBLEMES reduce production profile -> base_sorte
-- On POINT_VIRGULE reduce production profile -> base_sorte
-- On ORDRE reduce production profile -> base_sorte
-- On OPERATEURS reduce production profile -> base_sorte
-- On KW_END reduce production profile -> base_sorte
-- On INDUCTIVE reduce production profile -> base_sorte
-- On IDENT reduce production profile -> base_sorte
-- On EQUATIONS reduce production profile -> base_sorte
-- On EOF reduce production profile -> base_sorte
-- On CONJECTURES reduce production profile -> base_sorte

State 219:
## Known stack suffix:
## base_sorte FLECHE
## LR(1) items:
profile -> base_sorte FLECHE . profile [ VIRGULE UNIFICATION TOKEN_INCLUDE THEORIE SUBSORTES SORTES PROBLEMES POINT_VIRGULE ORDRE OPERATEURS KW_END INDUCTIVE IDENT EQUATIONS EOF CONJECTURES ]
## Transitions:
-- On IDENT shift to state 63
-- On profile shift to state 220
-- On base_sorte shift to state 218
## Reductions:

State 220:
## Known stack suffix:
## base_sorte FLECHE profile
## LR(1) items:
profile -> base_sorte FLECHE profile . [ VIRGULE UNIFICATION TOKEN_INCLUDE THEORIE SUBSORTES SORTES PROBLEMES POINT_VIRGULE ORDRE OPERATEURS KW_END INDUCTIVE IDENT EQUATIONS EOF CONJECTURES ]
## Transitions:
## Reductions:
-- On VIRGULE reduce production profile -> base_sorte FLECHE profile
-- On UNIFICATION reduce production profile -> base_sorte FLECHE profile
-- On TOKEN_INCLUDE reduce production profile -> base_sorte FLECHE profile
-- On THEORIE reduce production profile -> base_sorte FLECHE profile
-- On SUBSORTES reduce production profile -> base_sorte FLECHE profile
-- On SORTES reduce production profile -> base_sorte FLECHE profile
-- On PROBLEMES reduce production profile -> base_sorte FLECHE profile
-- On POINT_VIRGULE reduce production profile -> base_sorte FLECHE profile
-- On ORDRE reduce production profile -> base_sorte FLECHE profile
-- On OPERATEURS reduce production profile -> base_sorte FLECHE profile
-- On KW_END reduce production profile -> base_sorte FLECHE profile
-- On INDUCTIVE reduce production profile -> base_sorte FLECHE profile
-- On IDENT reduce production profile -> base_sorte FLECHE profile
-- On EQUATIONS reduce production profile -> base_sorte FLECHE profile
-- On EOF reduce production profile -> base_sorte FLECHE profile
-- On CONJECTURES reduce production profile -> base_sorte FLECHE profile

State 221:
## Known stack suffix:
## op_list
## LR(1) items:
op_list_colon -> op_list . DEUX_POINTS [ UNAIRE TOKEN_VARIABLE TOKEN_C TOKEN_AC PREFIXE POSTFIXE INT INFIXE CONSTANTE BINAIRE ]
## Transitions:
-- On DEUX_POINTS shift to state 222
## Reductions:

State 222:
## Known stack suffix:
## op_list DEUX_POINTS
## LR(1) items:
op_list_colon -> op_list DEUX_POINTS . [ UNAIRE TOKEN_VARIABLE TOKEN_C TOKEN_AC PREFIXE POSTFIXE INT INFIXE CONSTANTE BINAIRE ]
## Transitions:
## Reductions:
-- On UNAIRE reduce production op_list_colon -> op_list DEUX_POINTS
-- On TOKEN_VARIABLE reduce production op_list_colon -> op_list DEUX_POINTS
-- On TOKEN_C reduce production op_list_colon -> op_list DEUX_POINTS
-- On TOKEN_AC reduce production op_list_colon -> op_list DEUX_POINTS
-- On PREFIXE reduce production op_list_colon -> op_list DEUX_POINTS
-- On POSTFIXE reduce production op_list_colon -> op_list DEUX_POINTS
-- On INT reduce production op_list_colon -> op_list DEUX_POINTS
-- On INFIXE reduce production op_list_colon -> op_list DEUX_POINTS
-- On CONSTANTE reduce production op_list_colon -> op_list DEUX_POINTS
-- On BINAIRE reduce production op_list_colon -> op_list DEUX_POINTS

State 223:
## Known stack suffix:
## ident
## LR(1) items:
op_list -> ident . [ DEUX_POINTS ]
op_list -> ident . VIRGULE op_list [ DEUX_POINTS ]
## Transitions:
-- On VIRGULE shift to state 224
## Reductions:
-- On DEUX_POINTS reduce production op_list -> ident

State 224:
## Known stack suffix:
## ident VIRGULE
## LR(1) items:
op_list -> ident VIRGULE . op_list [ DEUX_POINTS ]
## Transitions:
-- On IDENT shift to state 11
-- On op_list shift to state 225
-- On ident shift to state 223
## Reductions:

State 225:
## Known stack suffix:
## ident VIRGULE op_list
## LR(1) items:
op_list -> ident VIRGULE op_list . [ DEUX_POINTS ]
## Transitions:
## Reductions:
-- On DEUX_POINTS reduce production op_list -> ident VIRGULE op_list

State 226:
## Known stack suffix:
## decl_arite
## LR(1) items:
operateurs -> decl_arite . [ UNIFICATION TOKEN_INCLUDE THEORIE SUBSORTES SORTES PROBLEMES ORDRE OPERATEURS KW_END INDUCTIVE EQUATIONS EOF CONJECTURES ]
operateurs -> decl_arite . operateurs [ UNIFICATION TOKEN_INCLUDE THEORIE SUBSORTES SORTES PROBLEMES ORDRE OPERATEURS KW_END INDUCTIVE EQUATIONS EOF CONJECTURES ]
operateurs -> decl_arite . POINT_VIRGULE [ UNIFICATION TOKEN_INCLUDE THEORIE SUBSORTES SORTES PROBLEMES ORDRE OPERATEURS KW_END INDUCTIVE EQUATIONS EOF CONJECTURES ]
operateurs -> decl_arite . POINT_VIRGULE operateurs [ UNIFICATION TOKEN_INCLUDE THEORIE SUBSORTES SORTES PROBLEMES ORDRE OPERATEURS KW_END INDUCTIVE EQUATIONS EOF CONJECTURES ]
## Transitions:
-- On POINT_VIRGULE shift to state 227
-- On IDENT shift to state 11
-- On operateurs shift to state 229
-- On op_list_colon shift to state 199
-- On op_list shift to state 221
-- On ident shift to state 223
-- On decl_arite shift to state 226
## Reductions:
-- On UNIFICATION reduce production operateurs -> decl_arite
-- On TOKEN_INCLUDE reduce production operateurs -> decl_arite
-- On THEORIE reduce production operateurs -> decl_arite
-- On SUBSORTES reduce production operateurs -> decl_arite
-- On SORTES reduce production operateurs -> decl_arite
-- On PROBLEMES reduce production operateurs -> decl_arite
-- On ORDRE reduce production operateurs -> decl_arite
-- On OPERATEURS reduce production operateurs -> decl_arite
-- On KW_END reduce production operateurs -> decl_arite
-- On INDUCTIVE reduce production operateurs -> decl_arite
-- On EQUATIONS reduce production operateurs -> decl_arite
-- On EOF reduce production operateurs -> decl_arite
-- On CONJECTURES reduce production operateurs -> decl_arite

State 227:
## Known stack suffix:
## decl_arite POINT_VIRGULE
## LR(1) items:
operateurs -> decl_arite POINT_VIRGULE . [ UNIFICATION TOKEN_INCLUDE THEORIE SUBSORTES SORTES PROBLEMES ORDRE OPERATEURS KW_END INDUCTIVE EQUATIONS EOF CONJECTURES ]
operateurs -> decl_arite POINT_VIRGULE . operateurs [ UNIFICATION TOKEN_INCLUDE THEORIE SUBSORTES SORTES PROBLEMES ORDRE OPERATEURS KW_END INDUCTIVE EQUATIONS EOF CONJECTURES ]
## Transitions:
-- On IDENT shift to state 11
-- On operateurs shift to state 228
-- On op_list_colon shift to state 199
-- On op_list shift to state 221
-- On ident shift to state 223
-- On decl_arite shift to state 226
## Reductions:
-- On UNIFICATION reduce production operateurs -> decl_arite POINT_VIRGULE
-- On TOKEN_INCLUDE reduce production operateurs -> decl_arite POINT_VIRGULE
-- On THEORIE reduce production operateurs -> decl_arite POINT_VIRGULE
-- On SUBSORTES reduce production operateurs -> decl_arite POINT_VIRGULE
-- On SORTES reduce production operateurs -> decl_arite POINT_VIRGULE
-- On PROBLEMES reduce production operateurs -> decl_arite POINT_VIRGULE
-- On ORDRE reduce production operateurs -> decl_arite POINT_VIRGULE
-- On OPERATEURS reduce production operateurs -> decl_arite POINT_VIRGULE
-- On KW_END reduce production operateurs -> decl_arite POINT_VIRGULE
-- On INDUCTIVE reduce production operateurs -> decl_arite POINT_VIRGULE
-- On EQUATIONS reduce production operateurs -> decl_arite POINT_VIRGULE
-- On EOF reduce production operateurs -> decl_arite POINT_VIRGULE
-- On CONJECTURES reduce production operateurs -> decl_arite POINT_VIRGULE

State 228:
## Known stack suffix:
## decl_arite POINT_VIRGULE operateurs
## LR(1) items:
operateurs -> decl_arite POINT_VIRGULE operateurs . [ UNIFICATION TOKEN_INCLUDE THEORIE SUBSORTES SORTES PROBLEMES ORDRE OPERATEURS KW_END INDUCTIVE EQUATIONS EOF CONJECTURES ]
## Transitions:
## Reductions:
-- On UNIFICATION reduce production operateurs -> decl_arite POINT_VIRGULE operateurs
-- On TOKEN_INCLUDE reduce production operateurs -> decl_arite POINT_VIRGULE operateurs
-- On THEORIE reduce production operateurs -> decl_arite POINT_VIRGULE operateurs
-- On SUBSORTES reduce production operateurs -> decl_arite POINT_VIRGULE operateurs
-- On SORTES reduce production operateurs -> decl_arite POINT_VIRGULE operateurs
-- On PROBLEMES reduce production operateurs -> decl_arite POINT_VIRGULE operateurs
-- On ORDRE reduce production operateurs -> decl_arite POINT_VIRGULE operateurs
-- On OPERATEURS reduce production operateurs -> decl_arite POINT_VIRGULE operateurs
-- On KW_END reduce production operateurs -> decl_arite POINT_VIRGULE operateurs
-- On INDUCTIVE reduce production operateurs -> decl_arite POINT_VIRGULE operateurs
-- On EQUATIONS reduce production operateurs -> decl_arite POINT_VIRGULE operateurs
-- On EOF reduce production operateurs -> decl_arite POINT_VIRGULE operateurs
-- On CONJECTURES reduce production operateurs -> decl_arite POINT_VIRGULE operateurs

State 229:
## Known stack suffix:
## decl_arite operateurs
## LR(1) items:
operateurs -> decl_arite operateurs . [ UNIFICATION TOKEN_INCLUDE THEORIE SUBSORTES SORTES PROBLEMES ORDRE OPERATEURS KW_END INDUCTIVE EQUATIONS EOF CONJECTURES ]
## Transitions:
## Reductions:
-- On UNIFICATION reduce production operateurs -> decl_arite operateurs
-- On TOKEN_INCLUDE reduce production operateurs -> decl_arite operateurs
-- On THEORIE reduce production operateurs -> decl_arite operateurs
-- On SUBSORTES reduce production operateurs -> decl_arite operateurs
-- On SORTES reduce production operateurs -> decl_arite operateurs
-- On PROBLEMES reduce production operateurs -> decl_arite operateurs
-- On ORDRE reduce production operateurs -> decl_arite operateurs
-- On OPERATEURS reduce production operateurs -> decl_arite operateurs
-- On KW_END reduce production operateurs -> decl_arite operateurs
-- On INDUCTIVE reduce production operateurs -> decl_arite operateurs
-- On EQUATIONS reduce production operateurs -> decl_arite operateurs
-- On EOF reduce production operateurs -> decl_arite operateurs
-- On CONJECTURES reduce production operateurs -> decl_arite operateurs

State 230:
## Known stack suffix:
## keyword_inductive
## LR(1) items:
declaration -> keyword_inductive . equations [ UNIFICATION TOKEN_INCLUDE THEORIE SUBSORTES SORTES PROBLEMES ORDRE OPERATEURS KW_END INDUCTIVE EQUATIONS EOF CONJECTURES ]
## Transitions:
-- On PREFIX_IDENT shift to state 15
-- On PARGAUCHE shift to state 17
-- On term shift to state 231
-- On equations shift to state 234
-- On equation shift to state 235
## Reductions:

State 231:
## Known stack suffix:
## term
## LR(1) items:
equation -> term . EGAL term [ POINT_VIRGULE ]
term -> term . INFIX_IDENT term [ INFIX_IDENT EGAL ]
## Transitions:
-- On INFIX_IDENT shift to state 25
-- On EGAL shift to state 232
## Reductions:

State 232:
## Known stack suffix:
## term EGAL
## LR(1) items:
equation -> term EGAL . term [ POINT_VIRGULE ]
## Transitions:
-- On PREFIX_IDENT shift to state 15
-- On PARGAUCHE shift to state 17
-- On term shift to state 233
## Reductions:

State 233:
## Known stack suffix:
## term EGAL term
## LR(1) items:
equation -> term EGAL term . [ POINT_VIRGULE ]
term -> term . INFIX_IDENT term [ POINT_VIRGULE INFIX_IDENT ]
## Transitions:
-- On INFIX_IDENT shift to state 25
## Reductions:
-- On POINT_VIRGULE reduce production equation -> term EGAL term

State 234:
## Known stack suffix:
## keyword_inductive equations
## LR(1) items:
declaration -> keyword_inductive equations . [ UNIFICATION TOKEN_INCLUDE THEORIE SUBSORTES SORTES PROBLEMES ORDRE OPERATEURS KW_END INDUCTIVE EQUATIONS EOF CONJECTURES ]
## Transitions:
## Reductions:
-- On UNIFICATION reduce production declaration -> keyword_inductive equations
-- On TOKEN_INCLUDE reduce production declaration -> keyword_inductive equations
-- On THEORIE reduce production declaration -> keyword_inductive equations
-- On SUBSORTES reduce production declaration -> keyword_inductive equations
-- On SORTES reduce production declaration -> keyword_inductive equations
-- On PROBLEMES reduce production declaration -> keyword_inductive equations
-- On ORDRE reduce production declaration -> keyword_inductive equations
-- On OPERATEURS reduce production declaration -> keyword_inductive equations
-- On KW_END reduce production declaration -> keyword_inductive equations
-- On INDUCTIVE reduce production declaration -> keyword_inductive equations
-- On EQUATIONS reduce production declaration -> keyword_inductive equations
-- On EOF reduce production declaration -> keyword_inductive equations
-- On CONJECTURES reduce production declaration -> keyword_inductive equations

State 235:
## Known stack suffix:
## equation
## LR(1) items:
equations -> equation . POINT_VIRGULE [ UNIFICATION TOKEN_INCLUDE THEORIE SUBSORTES SORTES PROBLEMES ORDRE OPERATEURS KW_END INDUCTIVE EQUATIONS EOF CONJECTURES ]
equations -> equation . POINT_VIRGULE equations [ UNIFICATION TOKEN_INCLUDE THEORIE SUBSORTES SORTES PROBLEMES ORDRE OPERATEURS KW_END INDUCTIVE EQUATIONS EOF CONJECTURES ]
## Transitions:
-- On POINT_VIRGULE shift to state 236
## Reductions:

State 236:
## Known stack suffix:
## equation POINT_VIRGULE
## LR(1) items:
equations -> equation POINT_VIRGULE . [ UNIFICATION TOKEN_INCLUDE THEORIE SUBSORTES SORTES PROBLEMES ORDRE OPERATEURS KW_END INDUCTIVE EQUATIONS EOF CONJECTURES ]
equations -> equation POINT_VIRGULE . equations [ UNIFICATION TOKEN_INCLUDE THEORIE SUBSORTES SORTES PROBLEMES ORDRE OPERATEURS KW_END INDUCTIVE EQUATIONS EOF CONJECTURES ]
## Transitions:
-- On PREFIX_IDENT shift to state 15
-- On PARGAUCHE shift to state 17
-- On term shift to state 231
-- On equations shift to state 237
-- On equation shift to state 235
## Reductions:
-- On UNIFICATION reduce production equations -> equation POINT_VIRGULE
-- On TOKEN_INCLUDE reduce production equations -> equation POINT_VIRGULE
-- On THEORIE reduce production equations -> equation POINT_VIRGULE
-- On SUBSORTES reduce production equations -> equation POINT_VIRGULE
-- On SORTES reduce production equations -> equation POINT_VIRGULE
-- On PROBLEMES reduce production equations -> equation POINT_VIRGULE
-- On ORDRE reduce production equations -> equation POINT_VIRGULE
-- On OPERATEURS reduce production equations -> equation POINT_VIRGULE
-- On KW_END reduce production equations -> equation POINT_VIRGULE
-- On INDUCTIVE reduce production equations -> equation POINT_VIRGULE
-- On EQUATIONS reduce production equations -> equation POINT_VIRGULE
-- On EOF reduce production equations -> equation POINT_VIRGULE
-- On CONJECTURES reduce production equations -> equation POINT_VIRGULE

State 237:
## Known stack suffix:
## equation POINT_VIRGULE equations
## LR(1) items:
equations -> equation POINT_VIRGULE equations . [ UNIFICATION TOKEN_INCLUDE THEORIE SUBSORTES SORTES PROBLEMES ORDRE OPERATEURS KW_END INDUCTIVE EQUATIONS EOF CONJECTURES ]
## Transitions:
## Reductions:
-- On UNIFICATION reduce production equations -> equation POINT_VIRGULE equations
-- On TOKEN_INCLUDE reduce production equations -> equation POINT_VIRGULE equations
-- On THEORIE reduce production equations -> equation POINT_VIRGULE equations
-- On SUBSORTES reduce production equations -> equation POINT_VIRGULE equations
-- On SORTES reduce production equations -> equation POINT_VIRGULE equations
-- On PROBLEMES reduce production equations -> equation POINT_VIRGULE equations
-- On ORDRE reduce production equations -> equation POINT_VIRGULE equations
-- On OPERATEURS reduce production equations -> equation POINT_VIRGULE equations
-- On KW_END reduce production equations -> equation POINT_VIRGULE equations
-- On INDUCTIVE reduce production equations -> equation POINT_VIRGULE equations
-- On EQUATIONS reduce production equations -> equation POINT_VIRGULE equations
-- On EOF reduce production equations -> equation POINT_VIRGULE equations
-- On CONJECTURES reduce production equations -> equation POINT_VIRGULE equations

State 238:
## Known stack suffix:
## keyword_conjectures
## LR(1) items:
declaration -> keyword_conjectures . equations [ UNIFICATION TOKEN_INCLUDE THEORIE SUBSORTES SORTES PROBLEMES ORDRE OPERATEURS KW_END INDUCTIVE EQUATIONS EOF CONJECTURES ]
## Transitions:
-- On PREFIX_IDENT shift to state 15
-- On PARGAUCHE shift to state 17
-- On term shift to state 231
-- On equations shift to state 239
-- On equation shift to state 235
## Reductions:

State 239:
## Known stack suffix:
## keyword_conjectures equations
## LR(1) items:
declaration -> keyword_conjectures equations . [ UNIFICATION TOKEN_INCLUDE THEORIE SUBSORTES SORTES PROBLEMES ORDRE OPERATEURS KW_END INDUCTIVE EQUATIONS EOF CONJECTURES ]
## Transitions:
## Reductions:
-- On UNIFICATION reduce production declaration -> keyword_conjectures equations
-- On TOKEN_INCLUDE reduce production declaration -> keyword_conjectures equations
-- On THEORIE reduce production declaration -> keyword_conjectures equations
-- On SUBSORTES reduce production declaration -> keyword_conjectures equations
-- On SORTES reduce production declaration -> keyword_conjectures equations
-- On PROBLEMES reduce production declaration -> keyword_conjectures equations
-- On ORDRE reduce production declaration -> keyword_conjectures equations
-- On OPERATEURS reduce production declaration -> keyword_conjectures equations
-- On KW_END reduce production declaration -> keyword_conjectures equations
-- On INDUCTIVE reduce production declaration -> keyword_conjectures equations
-- On EQUATIONS reduce production declaration -> keyword_conjectures equations
-- On EOF reduce production declaration -> keyword_conjectures equations
-- On CONJECTURES reduce production declaration -> keyword_conjectures equations

State 240:
## Known stack suffix:
## keyword_axioms
## LR(1) items:
declaration -> keyword_axioms . equations [ UNIFICATION TOKEN_INCLUDE THEORIE SUBSORTES SORTES PROBLEMES ORDRE OPERATEURS KW_END INDUCTIVE EQUATIONS EOF CONJECTURES ]
## Transitions:
-- On PREFIX_IDENT shift to state 15
-- On PARGAUCHE shift to state 17
-- On term shift to state 231
-- On equations shift to state 241
-- On equation shift to state 235
## Reductions:

State 241:
## Known stack suffix:
## keyword_axioms equations
## LR(1) items:
declaration -> keyword_axioms equations . [ UNIFICATION TOKEN_INCLUDE THEORIE SUBSORTES SORTES PROBLEMES ORDRE OPERATEURS KW_END INDUCTIVE EQUATIONS EOF CONJECTURES ]
## Transitions:
## Reductions:
-- On UNIFICATION reduce production declaration -> keyword_axioms equations
-- On TOKEN_INCLUDE reduce production declaration -> keyword_axioms equations
-- On THEORIE reduce production declaration -> keyword_axioms equations
-- On SUBSORTES reduce production declaration -> keyword_axioms equations
-- On SORTES reduce production declaration -> keyword_axioms equations
-- On PROBLEMES reduce production declaration -> keyword_axioms equations
-- On ORDRE reduce production declaration -> keyword_axioms equations
-- On OPERATEURS reduce production declaration -> keyword_axioms equations
-- On KW_END reduce production declaration -> keyword_axioms equations
-- On INDUCTIVE reduce production declaration -> keyword_axioms equations
-- On EQUATIONS reduce production declaration -> keyword_axioms equations
-- On EOF reduce production declaration -> keyword_axioms equations
-- On CONJECTURES reduce production declaration -> keyword_axioms equations

State 242:
## Known stack suffix:
## donnees
## LR(1) items:
donnees' -> donnees . [ # ]
## Transitions:
## Reductions:
-- On # accept donnees

State 243:
## Known stack suffix:
## declaration
## LR(1) items:
donnees -> declaration . donnees [ # ]
## Transitions:
-- On UNIFICATION shift to state 1
-- On TOKEN_INCLUDE shift to state 48
-- On THEORIE shift to state 8
-- On SUBSORTES shift to state 50
-- On SORTES shift to state 51
-- On PROBLEMES shift to state 52
-- On ORDRE shift to state 53
-- On OPERATEURS shift to state 54
-- On KW_END shift to state 55
-- On INDUCTIVE shift to state 56
-- On EQUATIONS shift to state 57
-- On EOF shift to state 58
-- On CONJECTURES shift to state 59
-- On keyword_theory shift to state 60
-- On keyword_subsortes shift to state 62
-- On keyword_sortes shift to state 70
-- On keyword_problems shift to state 75
-- On keyword_order shift to state 102
-- On keyword_operators shift to state 197
-- On keyword_inductive shift to state 230
-- On keyword_conjectures shift to state 238
-- On keyword_axioms shift to state 240
-- On donnees shift to state 244
-- On declaration shift to state 243
## Reductions:

State 244:
## Known stack suffix:
## declaration donnees
## LR(1) items:
donnees -> declaration donnees . [ # ]
## Transitions:
## Reductions:
-- On # reduce production donnees -> declaration donnees

State 245:
## Known stack suffix:
##
## LR(1) items:
signature_eof' -> . signature_eof [ # ]
## Transitions:
-- On IDENT shift to state 11
-- On signature_eof shift to state 246
-- On operateurs shift to state 247
-- On op_list_colon shift to state 199
-- On op_list shift to state 221
-- On ident shift to state 223
-- On decl_arite shift to state 226
## Reductions:

State 246:
## Known stack suffix:
## signature_eof
## LR(1) items:
signature_eof' -> signature_eof . [ # ]
## Transitions:
## Reductions:
-- On # accept signature_eof

State 247:
## Known stack suffix:
## operateurs
## LR(1) items:
signature_eof -> operateurs . EOF [ # ]
## Transitions:
-- On EOF shift to state 248
## Reductions:

State 248:
## Known stack suffix:
## operateurs EOF
## LR(1) items:
signature_eof -> operateurs EOF . [ # ]
## Transitions:
## Reductions:
-- On # reduce production signature_eof -> operateurs EOF

State 249:
## Known stack suffix:
##
## LR(1) items:
term_eof' -> . term_eof [ # ]
## Transitions:
-- On PREFIX_IDENT shift to state 15
-- On PARGAUCHE shift to state 17
-- On term_eof shift to state 250
-- On term shift to state 251
## Reductions:

State 250:
## Known stack suffix:
## term_eof
## LR(1) items:
term_eof' -> term_eof . [ # ]
## Transitions:
## Reductions:
-- On # accept term_eof

State 251:
## Known stack suffix:
## term
## LR(1) items:
term -> term . INFIX_IDENT term [ INFIX_IDENT EOF ]
term_eof -> term . EOF [ # ]
## Transitions:
-- On INFIX_IDENT shift to state 25
-- On EOF shift to state 252
## Reductions:

State 252:
## Known stack suffix:
## term EOF
## LR(1) items:
term_eof -> term EOF . [ # ]
## Transitions:
## Reductions:
-- On # reduce production term_eof -> term EOF

