State 0:
equation_eof' -> . equation_eof [ # ]
-- On VAR_IDENT shift to state 1
-- On PREFIX_IDENT shift to state 2
-- On OPENPAR shift to state 4
-- On term shift to state 22
-- On equation_eof shift to state 25
-- On equation shift to state 26

State 1:
term -> VAR_IDENT . [ SEMICOLON POSTFIX_IDENT OR NE LT LE INFIX_IDENT GT GE EQ EOF COMMA CLOSEPAR ARROW AND ]
-- On SEMICOLON reduce production term -> VAR_IDENT
-- On POSTFIX_IDENT reduce production term -> VAR_IDENT
-- On OR reduce production term -> VAR_IDENT
-- On NE reduce production term -> VAR_IDENT
-- On LT reduce production term -> VAR_IDENT
-- On LE reduce production term -> VAR_IDENT
-- On INFIX_IDENT reduce production term -> VAR_IDENT
-- On GT reduce production term -> VAR_IDENT
-- On GE reduce production term -> VAR_IDENT
-- On EQ reduce production term -> VAR_IDENT
-- On EOF reduce production term -> VAR_IDENT
-- On COMMA reduce production term -> VAR_IDENT
-- On CLOSEPAR reduce production term -> VAR_IDENT
-- On ARROW reduce production term -> VAR_IDENT
-- On AND reduce production term -> VAR_IDENT

State 2:
term -> PREFIX_IDENT . [ SEMICOLON POSTFIX_IDENT OR NE LT LE INFIX_IDENT GT GE EQ EOF COMMA CLOSEPAR ARROW AND ]
term -> PREFIX_IDENT . term [ SEMICOLON POSTFIX_IDENT OR NE LT LE INFIX_IDENT GT GE EQ EOF COMMA CLOSEPAR ARROW AND ]
term -> PREFIX_IDENT . OPENPAR term COMMA term_list CLOSEPAR [ SEMICOLON POSTFIX_IDENT OR NE LT LE INFIX_IDENT GT GE EQ EOF COMMA CLOSEPAR ARROW AND ]
-- On VAR_IDENT shift to state 1
-- On PREFIX_IDENT shift to state 2
-- On OPENPAR shift to state 3
-- On term shift to state 21
-- On SEMICOLON reduce production term -> PREFIX_IDENT
-- On POSTFIX_IDENT reduce production term -> PREFIX_IDENT
-- On OR reduce production term -> PREFIX_IDENT
-- On NE reduce production term -> PREFIX_IDENT
-- On LT reduce production term -> PREFIX_IDENT
-- On LE reduce production term -> PREFIX_IDENT
-- On INFIX_IDENT reduce production term -> PREFIX_IDENT
-- On GT reduce production term -> PREFIX_IDENT
-- On GE reduce production term -> PREFIX_IDENT
-- On EQ reduce production term -> PREFIX_IDENT
-- On EOF reduce production term -> PREFIX_IDENT
-- On COMMA reduce production term -> PREFIX_IDENT
-- On CLOSEPAR reduce production term -> PREFIX_IDENT
-- On ARROW reduce production term -> PREFIX_IDENT
-- On AND reduce production term -> PREFIX_IDENT

State 3:
term -> PREFIX_IDENT OPENPAR . term COMMA term_list CLOSEPAR [ SEMICOLON POSTFIX_IDENT OR NE LT LE INFIX_IDENT GT GE EQ EOF COMMA CLOSEPAR ARROW AND ]
term -> OPENPAR . term COMMA term_list CLOSEPAR POSTFIX_IDENT [ SEMICOLON POSTFIX_IDENT OR NE LT LE INFIX_IDENT GT GE EQ EOF COMMA CLOSEPAR ARROW AND ]
term -> OPENPAR . term CLOSEPAR [ SEMICOLON POSTFIX_IDENT OR NE LT LE INFIX_IDENT GT GE EQ EOF COMMA CLOSEPAR ARROW AND ]
-- On VAR_IDENT shift to state 1
-- On PREFIX_IDENT shift to state 2
-- On OPENPAR shift to state 4
-- On term shift to state 17

State 4:
term -> OPENPAR . term COMMA term_list CLOSEPAR POSTFIX_IDENT [ SEMICOLON POSTFIX_IDENT OR NE LT LE INFIX_IDENT GT GE EQ EOF COMMA CLOSEPAR ARROW AND ]
term -> OPENPAR . term CLOSEPAR [ SEMICOLON POSTFIX_IDENT OR NE LT LE INFIX_IDENT GT GE EQ EOF COMMA CLOSEPAR ARROW AND ]
-- On VAR_IDENT shift to state 1
-- On PREFIX_IDENT shift to state 2
-- On OPENPAR shift to state 4
-- On term shift to state 5

State 5:
term -> term . POSTFIX_IDENT [ POSTFIX_IDENT INFIX_IDENT COMMA CLOSEPAR ]
term -> OPENPAR term . COMMA term_list CLOSEPAR POSTFIX_IDENT [ SEMICOLON POSTFIX_IDENT OR NE LT LE INFIX_IDENT GT GE EQ EOF COMMA CLOSEPAR ARROW AND ]
term -> term . INFIX_IDENT term [ POSTFIX_IDENT INFIX_IDENT COMMA CLOSEPAR ]
term -> OPENPAR term . CLOSEPAR [ SEMICOLON POSTFIX_IDENT OR NE LT LE INFIX_IDENT GT GE EQ EOF COMMA CLOSEPAR ARROW AND ]
-- On POSTFIX_IDENT shift to state 6
-- On INFIX_IDENT shift to state 7
-- On COMMA shift to state 9
-- On CLOSEPAR shift to state 16

State 6:
term -> term POSTFIX_IDENT . [ SEMICOLON POSTFIX_IDENT OR NE LT LE INFIX_IDENT GT GE EQ EOF COMMA CLOSEPAR ARROW AND ]
-- On SEMICOLON reduce production term -> term POSTFIX_IDENT
-- On POSTFIX_IDENT reduce production term -> term POSTFIX_IDENT
-- On OR reduce production term -> term POSTFIX_IDENT
-- On NE reduce production term -> term POSTFIX_IDENT
-- On LT reduce production term -> term POSTFIX_IDENT
-- On LE reduce production term -> term POSTFIX_IDENT
-- On INFIX_IDENT reduce production term -> term POSTFIX_IDENT
-- On GT reduce production term -> term POSTFIX_IDENT
-- On GE reduce production term -> term POSTFIX_IDENT
-- On EQ reduce production term -> term POSTFIX_IDENT
-- On EOF reduce production term -> term POSTFIX_IDENT
-- On COMMA reduce production term -> term POSTFIX_IDENT
-- On CLOSEPAR reduce production term -> term POSTFIX_IDENT
-- On ARROW reduce production term -> term POSTFIX_IDENT
-- On AND reduce production term -> term POSTFIX_IDENT

State 7:
term -> term INFIX_IDENT . term [ SEMICOLON POSTFIX_IDENT OR NE LT LE INFIX_IDENT GT GE EQ EOF COMMA CLOSEPAR ARROW AND ]
-- On VAR_IDENT shift to state 1
-- On PREFIX_IDENT shift to state 2
-- On OPENPAR shift to state 4
-- On term shift to state 8

State 8:
term -> term . POSTFIX_IDENT [ SEMICOLON POSTFIX_IDENT OR NE LT LE INFIX_IDENT GT GE EQ EOF COMMA CLOSEPAR ARROW AND ]
term -> term . INFIX_IDENT term [ SEMICOLON POSTFIX_IDENT OR NE LT LE INFIX_IDENT GT GE EQ EOF COMMA CLOSEPAR ARROW AND ]
term -> term INFIX_IDENT term . [ SEMICOLON POSTFIX_IDENT OR NE LT LE INFIX_IDENT GT GE EQ EOF COMMA CLOSEPAR ARROW AND ]
-- On POSTFIX_IDENT shift to state 6
-- On SEMICOLON reduce production term -> term INFIX_IDENT term
-- On OR reduce production term -> term INFIX_IDENT term
-- On NE reduce production term -> term INFIX_IDENT term
-- On LT reduce production term -> term INFIX_IDENT term
-- On LE reduce production term -> term INFIX_IDENT term
-- On INFIX_IDENT reduce production term -> term INFIX_IDENT term
-- On GT reduce production term -> term INFIX_IDENT term
-- On GE reduce production term -> term INFIX_IDENT term
-- On EQ reduce production term -> term INFIX_IDENT term
-- On EOF reduce production term -> term INFIX_IDENT term
-- On COMMA reduce production term -> term INFIX_IDENT term
-- On CLOSEPAR reduce production term -> term INFIX_IDENT term
-- On ARROW reduce production term -> term INFIX_IDENT term
-- On AND reduce production term -> term INFIX_IDENT term

State 9:
term -> OPENPAR term COMMA . term_list CLOSEPAR POSTFIX_IDENT [ SEMICOLON POSTFIX_IDENT OR NE LT LE INFIX_IDENT GT GE EQ EOF COMMA CLOSEPAR ARROW AND ]
-- On VAR_IDENT shift to state 1
-- On PREFIX_IDENT shift to state 2
-- On OPENPAR shift to state 4
-- On term_list shift to state 10
-- On term shift to state 13

State 10:
term -> OPENPAR term COMMA term_list . CLOSEPAR POSTFIX_IDENT [ SEMICOLON POSTFIX_IDENT OR NE LT LE INFIX_IDENT GT GE EQ EOF COMMA CLOSEPAR ARROW AND ]
-- On CLOSEPAR shift to state 11

State 11:
term -> OPENPAR term COMMA term_list CLOSEPAR . POSTFIX_IDENT [ SEMICOLON POSTFIX_IDENT OR NE LT LE INFIX_IDENT GT GE EQ EOF COMMA CLOSEPAR ARROW AND ]
-- On POSTFIX_IDENT shift to state 12

State 12:
term -> OPENPAR term COMMA term_list CLOSEPAR POSTFIX_IDENT . [ SEMICOLON POSTFIX_IDENT OR NE LT LE INFIX_IDENT GT GE EQ EOF COMMA CLOSEPAR ARROW AND ]
-- On SEMICOLON reduce production term -> OPENPAR term COMMA term_list CLOSEPAR POSTFIX_IDENT
-- On POSTFIX_IDENT reduce production term -> OPENPAR term COMMA term_list CLOSEPAR POSTFIX_IDENT
-- On OR reduce production term -> OPENPAR term COMMA term_list CLOSEPAR POSTFIX_IDENT
-- On NE reduce production term -> OPENPAR term COMMA term_list CLOSEPAR POSTFIX_IDENT
-- On LT reduce production term -> OPENPAR term COMMA term_list CLOSEPAR POSTFIX_IDENT
-- On LE reduce production term -> OPENPAR term COMMA term_list CLOSEPAR POSTFIX_IDENT
-- On INFIX_IDENT reduce production term -> OPENPAR term COMMA term_list CLOSEPAR POSTFIX_IDENT
-- On GT reduce production term -> OPENPAR term COMMA term_list CLOSEPAR POSTFIX_IDENT
-- On GE reduce production term -> OPENPAR term COMMA term_list CLOSEPAR POSTFIX_IDENT
-- On EQ reduce production term -> OPENPAR term COMMA term_list CLOSEPAR POSTFIX_IDENT
-- On EOF reduce production term -> OPENPAR term COMMA term_list CLOSEPAR POSTFIX_IDENT
-- On COMMA reduce production term -> OPENPAR term COMMA term_list CLOSEPAR POSTFIX_IDENT
-- On CLOSEPAR reduce production term -> OPENPAR term COMMA term_list CLOSEPAR POSTFIX_IDENT
-- On ARROW reduce production term -> OPENPAR term COMMA term_list CLOSEPAR POSTFIX_IDENT
-- On AND reduce production term -> OPENPAR term COMMA term_list CLOSEPAR POSTFIX_IDENT

State 13:
term -> term . POSTFIX_IDENT [ POSTFIX_IDENT INFIX_IDENT COMMA CLOSEPAR ]
term -> term . INFIX_IDENT term [ POSTFIX_IDENT INFIX_IDENT COMMA CLOSEPAR ]
term_list -> term . [ CLOSEPAR ]
term_list -> term . COMMA term_list [ CLOSEPAR ]
-- On POSTFIX_IDENT shift to state 6
-- On INFIX_IDENT shift to state 7
-- On COMMA shift to state 14
-- On CLOSEPAR reduce production term_list -> term

State 14:
term_list -> term COMMA . term_list [ CLOSEPAR ]
-- On VAR_IDENT shift to state 1
-- On PREFIX_IDENT shift to state 2
-- On OPENPAR shift to state 4
-- On term_list shift to state 15
-- On term shift to state 13

State 15:
term_list -> term COMMA term_list . [ CLOSEPAR ]
-- On CLOSEPAR reduce production term_list -> term COMMA term_list

State 16:
term -> OPENPAR term CLOSEPAR . [ SEMICOLON POSTFIX_IDENT OR NE LT LE INFIX_IDENT GT GE EQ EOF COMMA CLOSEPAR ARROW AND ]
-- On SEMICOLON reduce production term -> OPENPAR term CLOSEPAR
-- On POSTFIX_IDENT reduce production term -> OPENPAR term CLOSEPAR
-- On OR reduce production term -> OPENPAR term CLOSEPAR
-- On NE reduce production term -> OPENPAR term CLOSEPAR
-- On LT reduce production term -> OPENPAR term CLOSEPAR
-- On LE reduce production term -> OPENPAR term CLOSEPAR
-- On INFIX_IDENT reduce production term -> OPENPAR term CLOSEPAR
-- On GT reduce production term -> OPENPAR term CLOSEPAR
-- On GE reduce production term -> OPENPAR term CLOSEPAR
-- On EQ reduce production term -> OPENPAR term CLOSEPAR
-- On EOF reduce production term -> OPENPAR term CLOSEPAR
-- On COMMA reduce production term -> OPENPAR term CLOSEPAR
-- On CLOSEPAR reduce production term -> OPENPAR term CLOSEPAR
-- On ARROW reduce production term -> OPENPAR term CLOSEPAR
-- On AND reduce production term -> OPENPAR term CLOSEPAR

State 17:
term -> PREFIX_IDENT OPENPAR term . COMMA term_list CLOSEPAR [ SEMICOLON POSTFIX_IDENT OR NE LT LE INFIX_IDENT GT GE EQ EOF COMMA CLOSEPAR ARROW AND ]
term -> term . POSTFIX_IDENT [ POSTFIX_IDENT INFIX_IDENT COMMA CLOSEPAR ]
term -> OPENPAR term . COMMA term_list CLOSEPAR POSTFIX_IDENT [ SEMICOLON POSTFIX_IDENT OR NE LT LE INFIX_IDENT GT GE EQ EOF COMMA CLOSEPAR ARROW AND ]
term -> term . INFIX_IDENT term [ POSTFIX_IDENT INFIX_IDENT COMMA CLOSEPAR ]
term -> OPENPAR term . CLOSEPAR [ SEMICOLON POSTFIX_IDENT OR NE LT LE INFIX_IDENT GT GE EQ EOF COMMA CLOSEPAR ARROW AND ]
-- On POSTFIX_IDENT shift to state 6
-- On INFIX_IDENT shift to state 7
-- On COMMA shift to state 18
-- On CLOSEPAR shift to state 16

State 18:
term -> PREFIX_IDENT OPENPAR term COMMA . term_list CLOSEPAR [ SEMICOLON POSTFIX_IDENT OR NE LT LE INFIX_IDENT GT GE EQ EOF COMMA CLOSEPAR ARROW AND ]
term -> OPENPAR term COMMA . term_list CLOSEPAR POSTFIX_IDENT [ SEMICOLON POSTFIX_IDENT OR NE LT LE INFIX_IDENT GT GE EQ EOF COMMA CLOSEPAR ARROW AND ]
-- On VAR_IDENT shift to state 1
-- On PREFIX_IDENT shift to state 2
-- On OPENPAR shift to state 4
-- On term_list shift to state 19
-- On term shift to state 13

State 19:
term -> PREFIX_IDENT OPENPAR term COMMA term_list . CLOSEPAR [ SEMICOLON POSTFIX_IDENT OR NE LT LE INFIX_IDENT GT GE EQ EOF COMMA CLOSEPAR ARROW AND ]
term -> OPENPAR term COMMA term_list . CLOSEPAR POSTFIX_IDENT [ SEMICOLON POSTFIX_IDENT OR NE LT LE INFIX_IDENT GT GE EQ EOF COMMA CLOSEPAR ARROW AND ]
-- On CLOSEPAR shift to state 20

State 20:
term -> PREFIX_IDENT OPENPAR term COMMA term_list CLOSEPAR . [ SEMICOLON POSTFIX_IDENT OR NE LT LE INFIX_IDENT GT GE EQ EOF COMMA CLOSEPAR ARROW AND ]
term -> OPENPAR term COMMA term_list CLOSEPAR . POSTFIX_IDENT [ SEMICOLON POSTFIX_IDENT OR NE LT LE INFIX_IDENT GT GE EQ EOF COMMA CLOSEPAR ARROW AND ]
-- On SEMICOLON reduce production term -> PREFIX_IDENT OPENPAR term COMMA term_list CLOSEPAR
-- On OR reduce production term -> PREFIX_IDENT OPENPAR term COMMA term_list CLOSEPAR
-- On NE reduce production term -> PREFIX_IDENT OPENPAR term COMMA term_list CLOSEPAR
-- On LT reduce production term -> PREFIX_IDENT OPENPAR term COMMA term_list CLOSEPAR
-- On LE reduce production term -> PREFIX_IDENT OPENPAR term COMMA term_list CLOSEPAR
-- On INFIX_IDENT reduce production term -> PREFIX_IDENT OPENPAR term COMMA term_list CLOSEPAR
-- On GT reduce production term -> PREFIX_IDENT OPENPAR term COMMA term_list CLOSEPAR
-- On GE reduce production term -> PREFIX_IDENT OPENPAR term COMMA term_list CLOSEPAR
-- On EQ reduce production term -> PREFIX_IDENT OPENPAR term COMMA term_list CLOSEPAR
-- On EOF reduce production term -> PREFIX_IDENT OPENPAR term COMMA term_list CLOSEPAR
-- On COMMA reduce production term -> PREFIX_IDENT OPENPAR term COMMA term_list CLOSEPAR
-- On CLOSEPAR reduce production term -> PREFIX_IDENT OPENPAR term COMMA term_list CLOSEPAR
-- On ARROW reduce production term -> PREFIX_IDENT OPENPAR term COMMA term_list CLOSEPAR
-- On AND reduce production term -> PREFIX_IDENT OPENPAR term COMMA term_list CLOSEPAR

State 21:
term -> PREFIX_IDENT term . [ SEMICOLON POSTFIX_IDENT OR NE LT LE INFIX_IDENT GT GE EQ EOF COMMA CLOSEPAR ARROW AND ]
term -> term . POSTFIX_IDENT [ SEMICOLON POSTFIX_IDENT OR NE LT LE INFIX_IDENT GT GE EQ EOF COMMA CLOSEPAR ARROW AND ]
term -> term . INFIX_IDENT term [ SEMICOLON POSTFIX_IDENT OR NE LT LE INFIX_IDENT GT GE EQ EOF COMMA CLOSEPAR ARROW AND ]
-- On SEMICOLON reduce production term -> PREFIX_IDENT term
-- On POSTFIX_IDENT reduce production term -> PREFIX_IDENT term
-- On OR reduce production term -> PREFIX_IDENT term
-- On NE reduce production term -> PREFIX_IDENT term
-- On LT reduce production term -> PREFIX_IDENT term
-- On LE reduce production term -> PREFIX_IDENT term
-- On INFIX_IDENT reduce production term -> PREFIX_IDENT term
-- On GT reduce production term -> PREFIX_IDENT term
-- On GE reduce production term -> PREFIX_IDENT term
-- On EQ reduce production term -> PREFIX_IDENT term
-- On EOF reduce production term -> PREFIX_IDENT term
-- On COMMA reduce production term -> PREFIX_IDENT term
-- On CLOSEPAR reduce production term -> PREFIX_IDENT term
-- On ARROW reduce production term -> PREFIX_IDENT term
-- On AND reduce production term -> PREFIX_IDENT term

State 22:
equation -> term . EQ term [ SEMICOLON EOF ]
term -> term . POSTFIX_IDENT [ POSTFIX_IDENT INFIX_IDENT EQ ]
term -> term . INFIX_IDENT term [ POSTFIX_IDENT INFIX_IDENT EQ ]
-- On POSTFIX_IDENT shift to state 6
-- On INFIX_IDENT shift to state 7
-- On EQ shift to state 23

State 23:
equation -> term EQ . term [ SEMICOLON EOF ]
-- On VAR_IDENT shift to state 1
-- On PREFIX_IDENT shift to state 2
-- On OPENPAR shift to state 4
-- On term shift to state 24

State 24:
equation -> term EQ term . [ SEMICOLON EOF ]
term -> term . POSTFIX_IDENT [ SEMICOLON POSTFIX_IDENT INFIX_IDENT EOF ]
term -> term . INFIX_IDENT term [ SEMICOLON POSTFIX_IDENT INFIX_IDENT EOF ]
-- On POSTFIX_IDENT shift to state 6
-- On INFIX_IDENT shift to state 7
-- On SEMICOLON reduce production equation -> term EQ term
-- On EOF reduce production equation -> term EQ term

State 25:
equation_eof' -> equation_eof . [ # ]
-- On # accept equation_eof

State 26:
equation_eof -> equation . EOF [ # ]
-- On EOF shift to state 27

State 27:
equation_eof -> equation EOF . [ # ]
-- On # reduce production equation_eof -> equation EOF

State 28:
equation_set_eof' -> . equation_set_eof [ # ]
-- On VAR_IDENT shift to state 1
-- On PREFIX_IDENT shift to state 2
-- On OPENPAR shift to state 4
-- On term shift to state 22
-- On equation_set_eof shift to state 29
-- On equation_set shift to state 30
-- On equation shift to state 32
-- On EOF reduce production equation_set ->

State 29:
equation_set_eof' -> equation_set_eof . [ # ]
-- On # accept equation_set_eof

State 30:
equation_set_eof -> equation_set . EOF [ # ]
-- On EOF shift to state 31

State 31:
equation_set_eof -> equation_set EOF . [ # ]
-- On # reduce production equation_set_eof -> equation_set EOF

State 32:
equation_set -> equation . [ EOF ]
equation_set -> equation . SEMICOLON equation_set [ EOF ]
-- On SEMICOLON shift to state 33
-- On EOF reduce production equation_set -> equation

State 33:
equation_set -> equation SEMICOLON . equation_set [ EOF ]
-- On VAR_IDENT shift to state 1
-- On PREFIX_IDENT shift to state 2
-- On OPENPAR shift to state 4
-- On term shift to state 22
-- On equation_set shift to state 34
-- On equation shift to state 32
-- On EOF reduce production equation_set ->

State 34:
equation_set -> equation SEMICOLON equation_set . [ EOF ]
-- On EOF reduce production equation_set -> equation SEMICOLON equation_set

State 35:
order_constraint_eof' -> . order_constraint_eof [ # ]
-- On VAR_IDENT shift to state 1
-- On PREFIX_IDENT shift to state 2
-- On OPENPAR shift to state 36
-- On NOT shift to state 37
-- On term shift to state 38
-- On order_constraint_eof shift to state 55
-- On formula shift to state 56

State 36:
formula -> OPENPAR . formula CLOSEPAR [ OR EOF CLOSEPAR AND ]
term -> OPENPAR . term COMMA term_list CLOSEPAR POSTFIX_IDENT [ POSTFIX_IDENT NE LT LE INFIX_IDENT GT GE EQ COMMA CLOSEPAR ]
term -> OPENPAR . term CLOSEPAR [ POSTFIX_IDENT NE LT LE INFIX_IDENT GT GE EQ COMMA CLOSEPAR ]
-- On VAR_IDENT shift to state 1
-- On PREFIX_IDENT shift to state 2
-- On OPENPAR shift to state 36
-- On NOT shift to state 37
-- On term shift to state 48
-- On formula shift to state 49

State 37:
formula -> NOT . formula [ OR EOF CLOSEPAR AND ]
-- On VAR_IDENT shift to state 1
-- On PREFIX_IDENT shift to state 2
-- On OPENPAR shift to state 36
-- On NOT shift to state 37
-- On term shift to state 38
-- On formula shift to state 47

State 38:
formula -> term . comp term [ OR EOF CLOSEPAR AND ]
term -> term . POSTFIX_IDENT [ POSTFIX_IDENT NE LT LE INFIX_IDENT GT GE EQ ]
term -> term . INFIX_IDENT term [ POSTFIX_IDENT NE LT LE INFIX_IDENT GT GE EQ ]
-- On POSTFIX_IDENT shift to state 6
-- On NE shift to state 39
-- On LT shift to state 40
-- On LE shift to state 41
-- On INFIX_IDENT shift to state 7
-- On GT shift to state 42
-- On GE shift to state 43
-- On EQ shift to state 44
-- On comp shift to state 45

State 39:
comp -> NE . [ VAR_IDENT PREFIX_IDENT OPENPAR ]
-- On VAR_IDENT reduce production comp -> NE
-- On PREFIX_IDENT reduce production comp -> NE
-- On OPENPAR reduce production comp -> NE

State 40:
comp -> LT . [ VAR_IDENT PREFIX_IDENT OPENPAR ]
-- On VAR_IDENT reduce production comp -> LT
-- On PREFIX_IDENT reduce production comp -> LT
-- On OPENPAR reduce production comp -> LT

State 41:
comp -> LE . [ VAR_IDENT PREFIX_IDENT OPENPAR ]
-- On VAR_IDENT reduce production comp -> LE
-- On PREFIX_IDENT reduce production comp -> LE
-- On OPENPAR reduce production comp -> LE

State 42:
comp -> GT . [ VAR_IDENT PREFIX_IDENT OPENPAR ]
-- On VAR_IDENT reduce production comp -> GT
-- On PREFIX_IDENT reduce production comp -> GT
-- On OPENPAR reduce production comp -> GT

State 43:
comp -> GE . [ VAR_IDENT PREFIX_IDENT OPENPAR ]
-- On VAR_IDENT reduce production comp -> GE
-- On PREFIX_IDENT reduce production comp -> GE
-- On OPENPAR reduce production comp -> GE

State 44:
comp -> EQ . [ VAR_IDENT PREFIX_IDENT OPENPAR ]
-- On VAR_IDENT reduce production comp -> EQ
-- On PREFIX_IDENT reduce production comp -> EQ
-- On OPENPAR reduce production comp -> EQ

State 45:
formula -> term comp . term [ OR EOF CLOSEPAR AND ]
-- On VAR_IDENT shift to state 1
-- On PREFIX_IDENT shift to state 2
-- On OPENPAR shift to state 4
-- On term shift to state 46

State 46:
formula -> term comp term . [ OR EOF CLOSEPAR AND ]
term -> term . POSTFIX_IDENT [ POSTFIX_IDENT OR INFIX_IDENT EOF CLOSEPAR AND ]
term -> term . INFIX_IDENT term [ POSTFIX_IDENT OR INFIX_IDENT EOF CLOSEPAR AND ]
-- On POSTFIX_IDENT shift to state 6
-- On INFIX_IDENT shift to state 7
-- On OR reduce production formula -> term comp term
-- On EOF reduce production formula -> term comp term
-- On CLOSEPAR reduce production formula -> term comp term
-- On AND reduce production formula -> term comp term

State 47:
formula -> formula . AND formula [ OR EOF CLOSEPAR AND ]
formula -> formula . OR formula [ OR EOF CLOSEPAR AND ]
formula -> NOT formula . [ OR EOF CLOSEPAR AND ]
-- On OR reduce production formula -> NOT formula
-- On EOF reduce production formula -> NOT formula
-- On CLOSEPAR reduce production formula -> NOT formula
-- On AND reduce production formula -> NOT formula

State 48:
formula -> term . comp term [ OR CLOSEPAR AND ]
term -> term . POSTFIX_IDENT [ POSTFIX_IDENT NE LT LE INFIX_IDENT GT GE EQ COMMA CLOSEPAR ]
term -> OPENPAR term . COMMA term_list CLOSEPAR POSTFIX_IDENT [ POSTFIX_IDENT NE LT LE INFIX_IDENT GT GE EQ COMMA CLOSEPAR ]
term -> term . INFIX_IDENT term [ POSTFIX_IDENT NE LT LE INFIX_IDENT GT GE EQ COMMA CLOSEPAR ]
term -> OPENPAR term . CLOSEPAR [ POSTFIX_IDENT NE LT LE INFIX_IDENT GT GE EQ COMMA CLOSEPAR ]
-- On POSTFIX_IDENT shift to state 6
-- On NE shift to state 39
-- On LT shift to state 40
-- On LE shift to state 41
-- On INFIX_IDENT shift to state 7
-- On GT shift to state 42
-- On GE shift to state 43
-- On EQ shift to state 44
-- On COMMA shift to state 9
-- On CLOSEPAR shift to state 16
-- On comp shift to state 45

State 49:
formula -> formula . AND formula [ OR CLOSEPAR AND ]
formula -> formula . OR formula [ OR CLOSEPAR AND ]
formula -> OPENPAR formula . CLOSEPAR [ OR EOF CLOSEPAR AND ]
-- On OR shift to state 50
-- On CLOSEPAR shift to state 54
-- On AND shift to state 52

State 50:
formula -> formula OR . formula [ OR EOF CLOSEPAR AND ]
-- On VAR_IDENT shift to state 1
-- On PREFIX_IDENT shift to state 2
-- On OPENPAR shift to state 36
-- On NOT shift to state 37
-- On term shift to state 38
-- On formula shift to state 51

State 51:
formula -> formula . AND formula [ OR EOF CLOSEPAR AND ]
formula -> formula . OR formula [ OR EOF CLOSEPAR AND ]
formula -> formula OR formula . [ OR EOF CLOSEPAR AND ]
-- On AND shift to state 52
-- On OR reduce production formula -> formula OR formula
-- On EOF reduce production formula -> formula OR formula
-- On CLOSEPAR reduce production formula -> formula OR formula

State 52:
formula -> formula AND . formula [ OR EOF CLOSEPAR AND ]
-- On VAR_IDENT shift to state 1
-- On PREFIX_IDENT shift to state 2
-- On OPENPAR shift to state 36
-- On NOT shift to state 37
-- On term shift to state 38
-- On formula shift to state 53

State 53:
formula -> formula . AND formula [ OR EOF CLOSEPAR AND ]
formula -> formula AND formula . [ OR EOF CLOSEPAR AND ]
formula -> formula . OR formula [ OR EOF CLOSEPAR AND ]
-- On OR reduce production formula -> formula AND formula
-- On EOF reduce production formula -> formula AND formula
-- On CLOSEPAR reduce production formula -> formula AND formula
-- On AND reduce production formula -> formula AND formula

State 54:
formula -> OPENPAR formula CLOSEPAR . [ OR EOF CLOSEPAR AND ]
-- On OR reduce production formula -> OPENPAR formula CLOSEPAR
-- On EOF reduce production formula -> OPENPAR formula CLOSEPAR
-- On CLOSEPAR reduce production formula -> OPENPAR formula CLOSEPAR
-- On AND reduce production formula -> OPENPAR formula CLOSEPAR

State 55:
order_constraint_eof' -> order_constraint_eof . [ # ]
-- On # accept order_constraint_eof

State 56:
formula -> formula . AND formula [ OR EOF AND ]
formula -> formula . OR formula [ OR EOF AND ]
order_constraint_eof -> formula . EOF [ # ]
-- On OR shift to state 50
-- On EOF shift to state 57
-- On AND shift to state 52

State 57:
order_constraint_eof -> formula EOF . [ # ]
-- On # reduce production order_constraint_eof -> formula EOF

State 58:
precedence_eof' -> . precedence_eof [ # ]
-- On PREFIX_IDENT shift to state 59
-- On POSTFIX_IDENT shift to state 60
-- On INFIX_IDENT shift to state 61
-- On precedence_eof shift to state 62
-- On precedence shift to state 63
-- On ordered_list shift to state 65
-- On ident shift to state 68
-- On EOF reduce production precedence ->

State 59:
ident -> PREFIX_IDENT . [ RL_LEX MUL LT LR_LEX GT EQ EOF COMMA ]
-- On RL_LEX reduce production ident -> PREFIX_IDENT
-- On MUL reduce production ident -> PREFIX_IDENT
-- On LT reduce production ident -> PREFIX_IDENT
-- On LR_LEX reduce production ident -> PREFIX_IDENT
-- On GT reduce production ident -> PREFIX_IDENT
-- On EQ reduce production ident -> PREFIX_IDENT
-- On EOF reduce production ident -> PREFIX_IDENT
-- On COMMA reduce production ident -> PREFIX_IDENT

State 60:
ident -> POSTFIX_IDENT . [ RL_LEX MUL LT LR_LEX GT EQ EOF COMMA ]
-- On RL_LEX reduce production ident -> POSTFIX_IDENT
-- On MUL reduce production ident -> POSTFIX_IDENT
-- On LT reduce production ident -> POSTFIX_IDENT
-- On LR_LEX reduce production ident -> POSTFIX_IDENT
-- On GT reduce production ident -> POSTFIX_IDENT
-- On EQ reduce production ident -> POSTFIX_IDENT
-- On EOF reduce production ident -> POSTFIX_IDENT
-- On COMMA reduce production ident -> POSTFIX_IDENT

State 61:
ident -> INFIX_IDENT . [ RL_LEX MUL LT LR_LEX GT EQ EOF COMMA ]
-- On RL_LEX reduce production ident -> INFIX_IDENT
-- On MUL reduce production ident -> INFIX_IDENT
-- On LT reduce production ident -> INFIX_IDENT
-- On LR_LEX reduce production ident -> INFIX_IDENT
-- On GT reduce production ident -> INFIX_IDENT
-- On EQ reduce production ident -> INFIX_IDENT
-- On EOF reduce production ident -> INFIX_IDENT
-- On COMMA reduce production ident -> INFIX_IDENT

State 62:
precedence_eof' -> precedence_eof . [ # ]
-- On # accept precedence_eof

State 63:
precedence_eof -> precedence . EOF [ # ]
-- On EOF shift to state 64

State 64:
precedence_eof -> precedence EOF . [ # ]
-- On # reduce production precedence_eof -> precedence EOF

State 65:
precedence -> ordered_list . [ EOF ]
precedence -> ordered_list . COMMA precedence [ EOF ]
-- On COMMA shift to state 66
-- On EOF reduce production precedence -> ordered_list

State 66:
precedence -> ordered_list COMMA . precedence [ EOF ]
-- On PREFIX_IDENT shift to state 59
-- On POSTFIX_IDENT shift to state 60
-- On INFIX_IDENT shift to state 61
-- On precedence shift to state 67
-- On ordered_list shift to state 65
-- On ident shift to state 68
-- On EOF reduce production precedence ->

State 67:
precedence -> ordered_list COMMA precedence . [ EOF ]
-- On EOF reduce production precedence -> ordered_list COMMA precedence

State 68:
ordered_list -> ident . [ EOF COMMA ]
ordered_list -> ident . EQ ordered_list [ EOF COMMA ]
ordered_list -> ident . GT ordered_list [ EOF COMMA ]
ordered_list -> ident . LT ordered_list [ EOF COMMA ]
-- On LT shift to state 69
-- On GT shift to state 71
-- On EQ shift to state 73
-- On EOF reduce production ordered_list -> ident
-- On COMMA reduce production ordered_list -> ident

State 69:
ordered_list -> ident LT . ordered_list [ EOF COMMA ]
-- On PREFIX_IDENT shift to state 59
-- On POSTFIX_IDENT shift to state 60
-- On INFIX_IDENT shift to state 61
-- On ordered_list shift to state 70
-- On ident shift to state 68

State 70:
ordered_list -> ident LT ordered_list . [ EOF COMMA ]
-- On EOF reduce production ordered_list -> ident LT ordered_list
-- On COMMA reduce production ordered_list -> ident LT ordered_list

State 71:
ordered_list -> ident GT . ordered_list [ EOF COMMA ]
-- On PREFIX_IDENT shift to state 59
-- On POSTFIX_IDENT shift to state 60
-- On INFIX_IDENT shift to state 61
-- On ordered_list shift to state 72
-- On ident shift to state 68

State 72:
ordered_list -> ident GT ordered_list . [ EOF COMMA ]
-- On EOF reduce production ordered_list -> ident GT ordered_list
-- On COMMA reduce production ordered_list -> ident GT ordered_list

State 73:
ordered_list -> ident EQ . ordered_list [ EOF COMMA ]
-- On PREFIX_IDENT shift to state 59
-- On POSTFIX_IDENT shift to state 60
-- On INFIX_IDENT shift to state 61
-- On ordered_list shift to state 74
-- On ident shift to state 68

State 74:
ordered_list -> ident EQ ordered_list . [ EOF COMMA ]
-- On EOF reduce production ordered_list -> ident EQ ordered_list
-- On COMMA reduce production ordered_list -> ident EQ ordered_list

State 75:
rule_set_eof' -> . rule_set_eof [ # ]
-- On VAR_IDENT shift to state 1
-- On PREFIX_IDENT shift to state 2
-- On OPENPAR shift to state 4
-- On term shift to state 76
-- On rule_set_eof shift to state 79
-- On rule_set shift to state 80
-- On rule shift to state 82
-- On EOF reduce production rule_set ->

State 76:
rule -> term . ARROW term [ SEMICOLON EOF ]
term -> term . POSTFIX_IDENT [ POSTFIX_IDENT INFIX_IDENT ARROW ]
term -> term . INFIX_IDENT term [ POSTFIX_IDENT INFIX_IDENT ARROW ]
-- On POSTFIX_IDENT shift to state 6
-- On INFIX_IDENT shift to state 7
-- On ARROW shift to state 77

State 77:
rule -> term ARROW . term [ SEMICOLON EOF ]
-- On VAR_IDENT shift to state 1
-- On PREFIX_IDENT shift to state 2
-- On OPENPAR shift to state 4
-- On term shift to state 78

State 78:
rule -> term ARROW term . [ SEMICOLON EOF ]
term -> term . POSTFIX_IDENT [ SEMICOLON POSTFIX_IDENT INFIX_IDENT EOF ]
term -> term . INFIX_IDENT term [ SEMICOLON POSTFIX_IDENT INFIX_IDENT EOF ]
-- On POSTFIX_IDENT shift to state 6
-- On INFIX_IDENT shift to state 7
-- On SEMICOLON reduce production rule -> term ARROW term
-- On EOF reduce production rule -> term ARROW term

State 79:
rule_set_eof' -> rule_set_eof . [ # ]
-- On # accept rule_set_eof

State 80:
rule_set_eof -> rule_set . EOF [ # ]
-- On EOF shift to state 81

State 81:
rule_set_eof -> rule_set EOF . [ # ]
-- On # reduce production rule_set_eof -> rule_set EOF

State 82:
rule_set -> rule . [ EOF ]
rule_set -> rule . SEMICOLON rule_set [ EOF ]
-- On SEMICOLON shift to state 83
-- On EOF reduce production rule_set -> rule

State 83:
rule_set -> rule SEMICOLON . rule_set [ EOF ]
-- On VAR_IDENT shift to state 1
-- On PREFIX_IDENT shift to state 2
-- On OPENPAR shift to state 4
-- On term shift to state 76
-- On rule_set shift to state 84
-- On rule shift to state 82
-- On EOF reduce production rule_set ->

State 84:
rule_set -> rule SEMICOLON rule_set . [ EOF ]
-- On EOF reduce production rule_set -> rule SEMICOLON rule_set

State 85:
status_eof' -> . status_eof [ # ]
-- On PREFIX_IDENT shift to state 59
-- On POSTFIX_IDENT shift to state 60
-- On INFIX_IDENT shift to state 61
-- On symbol_status shift to state 86
-- On status_eof shift to state 93
-- On status shift to state 94
-- On ident shift to state 89
-- On EOF reduce production status ->

State 86:
status -> symbol_status . [ EOF ]
status -> symbol_status . SEMICOLON status [ EOF ]
-- On SEMICOLON shift to state 87
-- On EOF reduce production status -> symbol_status

State 87:
status -> symbol_status SEMICOLON . status [ EOF ]
-- On PREFIX_IDENT shift to state 59
-- On POSTFIX_IDENT shift to state 60
-- On INFIX_IDENT shift to state 61
-- On symbol_status shift to state 86
-- On status shift to state 88
-- On ident shift to state 89
-- On EOF reduce production status ->

State 88:
status -> symbol_status SEMICOLON status . [ EOF ]
-- On EOF reduce production status -> symbol_status SEMICOLON status

State 89:
symbol_status -> ident . MUL [ SEMICOLON EOF ]
symbol_status -> ident . LR_LEX [ SEMICOLON EOF ]
symbol_status -> ident . RL_LEX [ SEMICOLON EOF ]
-- On RL_LEX shift to state 90
-- On MUL shift to state 91
-- On LR_LEX shift to state 92

State 90:
symbol_status -> ident RL_LEX . [ SEMICOLON EOF ]
-- On SEMICOLON reduce production symbol_status -> ident RL_LEX
-- On EOF reduce production symbol_status -> ident RL_LEX

State 91:
symbol_status -> ident MUL . [ SEMICOLON EOF ]
-- On SEMICOLON reduce production symbol_status -> ident MUL
-- On EOF reduce production symbol_status -> ident MUL

State 92:
symbol_status -> ident LR_LEX . [ SEMICOLON EOF ]
-- On SEMICOLON reduce production symbol_status -> ident LR_LEX
-- On EOF reduce production symbol_status -> ident LR_LEX

State 93:
status_eof' -> status_eof . [ # ]
-- On # accept status_eof

State 94:
status_eof -> status . EOF [ # ]
-- On EOF shift to state 95

State 95:
status_eof -> status EOF . [ # ]
-- On # reduce production status_eof -> status EOF

State 96:
term_eof' -> . term_eof [ # ]
-- On VAR_IDENT shift to state 1
-- On PREFIX_IDENT shift to state 2
-- On OPENPAR shift to state 4
-- On term_eof shift to state 97
-- On term shift to state 98

State 97:
term_eof' -> term_eof . [ # ]
-- On # accept term_eof

State 98:
term -> term . POSTFIX_IDENT [ POSTFIX_IDENT INFIX_IDENT EOF ]
term -> term . INFIX_IDENT term [ POSTFIX_IDENT INFIX_IDENT EOF ]
term_eof -> term . EOF [ # ]
-- On POSTFIX_IDENT shift to state 6
-- On INFIX_IDENT shift to state 7
-- On EOF shift to state 99

State 99:
term_eof -> term EOF . [ # ]
-- On # reduce production term_eof -> term EOF

