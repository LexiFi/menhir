State 0:
## Known stack suffix:
##
## LR(1) items:
theory' -> . theory [ # ]
## Transitions:
-- On KW_BR shift to state 1
-- On KW_AG shift to state 11
-- On KW_ACUN shift to state 19
-- On KW_ACU shift to state 27
-- On KW_ACI shift to state 33
-- On EOF shift to state 37
-- On theory shift to state 38
-- On decl shift to state 39
-- On br shift to state 42
-- On ag shift to state 43
-- On acun shift to state 44
-- On acu shift to state 45
-- On aci shift to state 46
## Reductions:

State 1:
## Known stack suffix:
## KW_BR
## LR(1) items:
br -> KW_BR . OPENPAR IDENT COMMA IDENT COMMA IDENT COMMA IDENT CLOSEPAR [ SEMICOLON # ]
## Transitions:
-- On OPENPAR shift to state 2
## Reductions:

State 2:
## Known stack suffix:
## KW_BR OPENPAR
## LR(1) items:
br -> KW_BR OPENPAR . IDENT COMMA IDENT COMMA IDENT COMMA IDENT CLOSEPAR [ SEMICOLON # ]
## Transitions:
-- On IDENT shift to state 3
## Reductions:

State 3:
## Known stack suffix:
## KW_BR OPENPAR IDENT
## LR(1) items:
br -> KW_BR OPENPAR IDENT . COMMA IDENT COMMA IDENT COMMA IDENT CLOSEPAR [ SEMICOLON # ]
## Transitions:
-- On COMMA shift to state 4
## Reductions:

State 4:
## Known stack suffix:
## KW_BR OPENPAR IDENT COMMA
## LR(1) items:
br -> KW_BR OPENPAR IDENT COMMA . IDENT COMMA IDENT COMMA IDENT CLOSEPAR [ SEMICOLON # ]
## Transitions:
-- On IDENT shift to state 5
## Reductions:

State 5:
## Known stack suffix:
## KW_BR OPENPAR IDENT COMMA IDENT
## LR(1) items:
br -> KW_BR OPENPAR IDENT COMMA IDENT . COMMA IDENT COMMA IDENT CLOSEPAR [ SEMICOLON # ]
## Transitions:
-- On COMMA shift to state 6
## Reductions:

State 6:
## Known stack suffix:
## KW_BR OPENPAR IDENT COMMA IDENT COMMA
## LR(1) items:
br -> KW_BR OPENPAR IDENT COMMA IDENT COMMA . IDENT COMMA IDENT CLOSEPAR [ SEMICOLON # ]
## Transitions:
-- On IDENT shift to state 7
## Reductions:

State 7:
## Known stack suffix:
## KW_BR OPENPAR IDENT COMMA IDENT COMMA IDENT
## LR(1) items:
br -> KW_BR OPENPAR IDENT COMMA IDENT COMMA IDENT . COMMA IDENT CLOSEPAR [ SEMICOLON # ]
## Transitions:
-- On COMMA shift to state 8
## Reductions:

State 8:
## Known stack suffix:
## KW_BR OPENPAR IDENT COMMA IDENT COMMA IDENT COMMA
## LR(1) items:
br -> KW_BR OPENPAR IDENT COMMA IDENT COMMA IDENT COMMA . IDENT CLOSEPAR [ SEMICOLON # ]
## Transitions:
-- On IDENT shift to state 9
## Reductions:

State 9:
## Known stack suffix:
## KW_BR OPENPAR IDENT COMMA IDENT COMMA IDENT COMMA IDENT
## LR(1) items:
br -> KW_BR OPENPAR IDENT COMMA IDENT COMMA IDENT COMMA IDENT . CLOSEPAR [ SEMICOLON # ]
## Transitions:
-- On CLOSEPAR shift to state 10
## Reductions:

State 10:
## Known stack suffix:
## KW_BR OPENPAR IDENT COMMA IDENT COMMA IDENT COMMA IDENT CLOSEPAR
## LR(1) items:
br -> KW_BR OPENPAR IDENT COMMA IDENT COMMA IDENT COMMA IDENT CLOSEPAR . [ SEMICOLON # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production br -> KW_BR OPENPAR IDENT COMMA IDENT COMMA IDENT COMMA IDENT CLOSEPAR

State 11:
## Known stack suffix:
## KW_AG
## LR(1) items:
ag -> KW_AG . OPENPAR IDENT COMMA IDENT COMMA IDENT CLOSEPAR [ SEMICOLON # ]
## Transitions:
-- On OPENPAR shift to state 12
## Reductions:

State 12:
## Known stack suffix:
## KW_AG OPENPAR
## LR(1) items:
ag -> KW_AG OPENPAR . IDENT COMMA IDENT COMMA IDENT CLOSEPAR [ SEMICOLON # ]
## Transitions:
-- On IDENT shift to state 13
## Reductions:

State 13:
## Known stack suffix:
## KW_AG OPENPAR IDENT
## LR(1) items:
ag -> KW_AG OPENPAR IDENT . COMMA IDENT COMMA IDENT CLOSEPAR [ SEMICOLON # ]
## Transitions:
-- On COMMA shift to state 14
## Reductions:

State 14:
## Known stack suffix:
## KW_AG OPENPAR IDENT COMMA
## LR(1) items:
ag -> KW_AG OPENPAR IDENT COMMA . IDENT COMMA IDENT CLOSEPAR [ SEMICOLON # ]
## Transitions:
-- On IDENT shift to state 15
## Reductions:

State 15:
## Known stack suffix:
## KW_AG OPENPAR IDENT COMMA IDENT
## LR(1) items:
ag -> KW_AG OPENPAR IDENT COMMA IDENT . COMMA IDENT CLOSEPAR [ SEMICOLON # ]
## Transitions:
-- On COMMA shift to state 16
## Reductions:

State 16:
## Known stack suffix:
## KW_AG OPENPAR IDENT COMMA IDENT COMMA
## LR(1) items:
ag -> KW_AG OPENPAR IDENT COMMA IDENT COMMA . IDENT CLOSEPAR [ SEMICOLON # ]
## Transitions:
-- On IDENT shift to state 17
## Reductions:

State 17:
## Known stack suffix:
## KW_AG OPENPAR IDENT COMMA IDENT COMMA IDENT
## LR(1) items:
ag -> KW_AG OPENPAR IDENT COMMA IDENT COMMA IDENT . CLOSEPAR [ SEMICOLON # ]
## Transitions:
-- On CLOSEPAR shift to state 18
## Reductions:

State 18:
## Known stack suffix:
## KW_AG OPENPAR IDENT COMMA IDENT COMMA IDENT CLOSEPAR
## LR(1) items:
ag -> KW_AG OPENPAR IDENT COMMA IDENT COMMA IDENT CLOSEPAR . [ SEMICOLON # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production ag -> KW_AG OPENPAR IDENT COMMA IDENT COMMA IDENT CLOSEPAR

State 19:
## Known stack suffix:
## KW_ACUN
## LR(1) items:
acun -> KW_ACUN . OPENPAR IDENT COMMA IDENT COMMA INT CLOSEPAR [ SEMICOLON # ]
## Transitions:
-- On OPENPAR shift to state 20
## Reductions:

State 20:
## Known stack suffix:
## KW_ACUN OPENPAR
## LR(1) items:
acun -> KW_ACUN OPENPAR . IDENT COMMA IDENT COMMA INT CLOSEPAR [ SEMICOLON # ]
## Transitions:
-- On IDENT shift to state 21
## Reductions:

State 21:
## Known stack suffix:
## KW_ACUN OPENPAR IDENT
## LR(1) items:
acun -> KW_ACUN OPENPAR IDENT . COMMA IDENT COMMA INT CLOSEPAR [ SEMICOLON # ]
## Transitions:
-- On COMMA shift to state 22
## Reductions:

State 22:
## Known stack suffix:
## KW_ACUN OPENPAR IDENT COMMA
## LR(1) items:
acun -> KW_ACUN OPENPAR IDENT COMMA . IDENT COMMA INT CLOSEPAR [ SEMICOLON # ]
## Transitions:
-- On IDENT shift to state 23
## Reductions:

State 23:
## Known stack suffix:
## KW_ACUN OPENPAR IDENT COMMA IDENT
## LR(1) items:
acun -> KW_ACUN OPENPAR IDENT COMMA IDENT . COMMA INT CLOSEPAR [ SEMICOLON # ]
## Transitions:
-- On COMMA shift to state 24
## Reductions:

State 24:
## Known stack suffix:
## KW_ACUN OPENPAR IDENT COMMA IDENT COMMA
## LR(1) items:
acun -> KW_ACUN OPENPAR IDENT COMMA IDENT COMMA . INT CLOSEPAR [ SEMICOLON # ]
## Transitions:
-- On INT shift to state 25
## Reductions:

State 25:
## Known stack suffix:
## KW_ACUN OPENPAR IDENT COMMA IDENT COMMA INT
## LR(1) items:
acun -> KW_ACUN OPENPAR IDENT COMMA IDENT COMMA INT . CLOSEPAR [ SEMICOLON # ]
## Transitions:
-- On CLOSEPAR shift to state 26
## Reductions:

State 26:
## Known stack suffix:
## KW_ACUN OPENPAR IDENT COMMA IDENT COMMA INT CLOSEPAR
## LR(1) items:
acun -> KW_ACUN OPENPAR IDENT COMMA IDENT COMMA INT CLOSEPAR . [ SEMICOLON # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production acun -> KW_ACUN OPENPAR IDENT COMMA IDENT COMMA INT CLOSEPAR

State 27:
## Known stack suffix:
## KW_ACU
## LR(1) items:
acu -> KW_ACU . OPENPAR IDENT COMMA IDENT CLOSEPAR [ SEMICOLON # ]
## Transitions:
-- On OPENPAR shift to state 28
## Reductions:

State 28:
## Known stack suffix:
## KW_ACU OPENPAR
## LR(1) items:
acu -> KW_ACU OPENPAR . IDENT COMMA IDENT CLOSEPAR [ SEMICOLON # ]
## Transitions:
-- On IDENT shift to state 29
## Reductions:

State 29:
## Known stack suffix:
## KW_ACU OPENPAR IDENT
## LR(1) items:
acu -> KW_ACU OPENPAR IDENT . COMMA IDENT CLOSEPAR [ SEMICOLON # ]
## Transitions:
-- On COMMA shift to state 30
## Reductions:

State 30:
## Known stack suffix:
## KW_ACU OPENPAR IDENT COMMA
## LR(1) items:
acu -> KW_ACU OPENPAR IDENT COMMA . IDENT CLOSEPAR [ SEMICOLON # ]
## Transitions:
-- On IDENT shift to state 31
## Reductions:

State 31:
## Known stack suffix:
## KW_ACU OPENPAR IDENT COMMA IDENT
## LR(1) items:
acu -> KW_ACU OPENPAR IDENT COMMA IDENT . CLOSEPAR [ SEMICOLON # ]
## Transitions:
-- On CLOSEPAR shift to state 32
## Reductions:

State 32:
## Known stack suffix:
## KW_ACU OPENPAR IDENT COMMA IDENT CLOSEPAR
## LR(1) items:
acu -> KW_ACU OPENPAR IDENT COMMA IDENT CLOSEPAR . [ SEMICOLON # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production acu -> KW_ACU OPENPAR IDENT COMMA IDENT CLOSEPAR

State 33:
## Known stack suffix:
## KW_ACI
## LR(1) items:
aci -> KW_ACI . OPENPAR IDENT CLOSEPAR [ SEMICOLON # ]
## Transitions:
-- On OPENPAR shift to state 34
## Reductions:

State 34:
## Known stack suffix:
## KW_ACI OPENPAR
## LR(1) items:
aci -> KW_ACI OPENPAR . IDENT CLOSEPAR [ SEMICOLON # ]
## Transitions:
-- On IDENT shift to state 35
## Reductions:

State 35:
## Known stack suffix:
## KW_ACI OPENPAR IDENT
## LR(1) items:
aci -> KW_ACI OPENPAR IDENT . CLOSEPAR [ SEMICOLON # ]
## Transitions:
-- On CLOSEPAR shift to state 36
## Reductions:

State 36:
## Known stack suffix:
## KW_ACI OPENPAR IDENT CLOSEPAR
## LR(1) items:
aci -> KW_ACI OPENPAR IDENT CLOSEPAR . [ SEMICOLON # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production aci -> KW_ACI OPENPAR IDENT CLOSEPAR

State 37:
## Known stack suffix:
## EOF
## LR(1) items:
theory -> EOF . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production theory -> EOF

State 38:
## Known stack suffix:
## theory
## LR(1) items:
theory' -> theory . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, accept theory

State 39:
## Known stack suffix:
## decl
## LR(1) items:
theory -> decl . [ # ]
theory -> decl . SEMICOLON theory [ # ]
## Transitions:
-- On SEMICOLON shift to state 40
## Reductions:

State 40:
## Known stack suffix:
## decl SEMICOLON
## LR(1) items:
theory -> decl SEMICOLON . theory [ # ]
## Transitions:
-- On KW_BR shift to state 1
-- On KW_AG shift to state 11
-- On KW_ACUN shift to state 19
-- On KW_ACU shift to state 27
-- On KW_ACI shift to state 33
-- On EOF shift to state 37
-- On theory shift to state 41
-- On decl shift to state 39
-- On br shift to state 42
-- On ag shift to state 43
-- On acun shift to state 44
-- On acu shift to state 45
-- On aci shift to state 46
## Reductions:

State 41:
## Known stack suffix:
## decl SEMICOLON theory
## LR(1) items:
theory -> decl SEMICOLON theory . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production theory -> decl SEMICOLON theory

State 42:
## Known stack suffix:
## br
## LR(1) items:
decl -> br . [ SEMICOLON # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production decl -> br

State 43:
## Known stack suffix:
## ag
## LR(1) items:
decl -> ag . [ SEMICOLON # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production decl -> ag

State 44:
## Known stack suffix:
## acun
## LR(1) items:
decl -> acun . [ SEMICOLON # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production decl -> acun

State 45:
## Known stack suffix:
## acu
## LR(1) items:
decl -> acu . [ SEMICOLON # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production decl -> acu

State 46:
## Known stack suffix:
## aci
## LR(1) items:
decl -> aci . [ SEMICOLON # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production decl -> aci

