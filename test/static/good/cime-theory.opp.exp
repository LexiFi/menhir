%{

  open User_signatures
  open Term_algebra

%}
%start theory
%token CLOSEPAR
%token COMMA
%token EOF
%token <User_signatures.symbol_id> IDENT
%token <int> INT
%token KW_ACI
%token KW_ACU
%token KW_ACUN
%token KW_AG
%token KW_BR
%token OPENPAR
%token SEMICOLON
%type <User_signatures.symbol_id Theory.elem_theory list> theory
%%

theory:
  _1 = EOF
    {      ( [] )}
| _1 = decl
    {      (
        [_1]
      )}
| _1 = decl _2 = SEMICOLON _3 = theory
    {      (
	_1 :: _3
      )}

decl:
  _1 = acu
    {      ( _1 )}
| _1 = aci
    {      ( _1 )}
| _1 = ag
    {     ( _1 )}
| _1 = acun
    {       ( _1 )}
| _1 = br
    {     ( _1 )}

acu:
  _1 = KW_ACU _2 = OPENPAR _3 = IDENT _4 = COMMA _5 = IDENT _6 = CLOSEPAR
    {  (
    Theory.ACU(_3,_5)
  )}

aci:
  _1 = KW_ACI _2 = OPENPAR _3 = IDENT _4 = CLOSEPAR
    {  (
    Theory.ACI(_3)
  )}

ag:
  _1 = KW_AG _2 = OPENPAR _3 = IDENT _4 = COMMA _5 = IDENT _6 = COMMA _7 = IDENT _8 = CLOSEPAR
    {  (
    Theory.AG(_3,_5,_7)
  )}

acun:
  _1 = KW_ACUN _2 = OPENPAR _3 = IDENT _4 = COMMA _5 = IDENT _6 = COMMA _7 = INT _8 = CLOSEPAR
    {  (
    Theory.ACUN(_3,_5,_7)
  )}

br:
  _1 = KW_BR _2 = OPENPAR _3 = IDENT _4 = COMMA _5 = IDENT _6 = COMMA _7 = IDENT _8 = COMMA _9 = IDENT _10 = CLOSEPAR
    {  (
    Theory.BR(_3,_5,_7,_9)
  )}

%%
