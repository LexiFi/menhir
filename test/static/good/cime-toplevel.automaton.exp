State 0:
command' -> . command [ # ]
-- On TRUE shift to state 1
-- On STRING shift to state 2
-- On NOT shift to state 3
-- On MINUS shift to state 4
-- On LET shift to state 62
-- On LEFTPAR shift to state 5
-- On LEFTBRACE shift to state 6
-- On INTEGER shift to state 8
-- On IF shift to state 9
-- On IDENT shift to state 10
-- On FUN shift to state 11
-- On FALSE shift to state 14
-- On EOF shift to state 81
-- On DIRECTIVE shift to state 82
-- On simple_expr shift to state 15
-- On expr shift to state 87
-- On command_aux shift to state 88
-- On command shift to state 90

State 1:
simple_expr -> TRUE . [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
-- On TRUE reduce production simple_expr -> TRUE 
-- On THEN reduce production simple_expr -> TRUE 
-- On STRING reduce production simple_expr -> TRUE 
-- On STAR reduce production simple_expr -> TRUE 
-- On SEMICOLON reduce production simple_expr -> TRUE 
-- On RIGHTPAR reduce production simple_expr -> TRUE 
-- On RIGHTBRACE reduce production simple_expr -> TRUE 
-- On PLUS reduce production simple_expr -> TRUE 
-- On OR reduce production simple_expr -> TRUE 
-- On NEQ reduce production simple_expr -> TRUE 
-- On MINUS reduce production simple_expr -> TRUE 
-- On LT reduce production simple_expr -> TRUE 
-- On LEFTPAR reduce production simple_expr -> TRUE 
-- On LEFTBRACE reduce production simple_expr -> TRUE 
-- On LE reduce production simple_expr -> TRUE 
-- On INTEGER reduce production simple_expr -> TRUE 
-- On IDENT reduce production simple_expr -> TRUE 
-- On GT reduce production simple_expr -> TRUE 
-- On GE reduce production simple_expr -> TRUE 
-- On FALSE reduce production simple_expr -> TRUE 
-- On EQUAL reduce production simple_expr -> TRUE 
-- On ELSE reduce production simple_expr -> TRUE 
-- On CONCAT reduce production simple_expr -> TRUE 
-- On COMMA reduce production simple_expr -> TRUE 
-- On AND reduce production simple_expr -> TRUE 

State 2:
simple_expr -> STRING . [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
-- On TRUE reduce production simple_expr -> STRING 
-- On THEN reduce production simple_expr -> STRING 
-- On STRING reduce production simple_expr -> STRING 
-- On STAR reduce production simple_expr -> STRING 
-- On SEMICOLON reduce production simple_expr -> STRING 
-- On RIGHTPAR reduce production simple_expr -> STRING 
-- On RIGHTBRACE reduce production simple_expr -> STRING 
-- On PLUS reduce production simple_expr -> STRING 
-- On OR reduce production simple_expr -> STRING 
-- On NEQ reduce production simple_expr -> STRING 
-- On MINUS reduce production simple_expr -> STRING 
-- On LT reduce production simple_expr -> STRING 
-- On LEFTPAR reduce production simple_expr -> STRING 
-- On LEFTBRACE reduce production simple_expr -> STRING 
-- On LE reduce production simple_expr -> STRING 
-- On INTEGER reduce production simple_expr -> STRING 
-- On IDENT reduce production simple_expr -> STRING 
-- On GT reduce production simple_expr -> STRING 
-- On GE reduce production simple_expr -> STRING 
-- On FALSE reduce production simple_expr -> STRING 
-- On EQUAL reduce production simple_expr -> STRING 
-- On ELSE reduce production simple_expr -> STRING 
-- On CONCAT reduce production simple_expr -> STRING 
-- On COMMA reduce production simple_expr -> STRING 
-- On AND reduce production simple_expr -> STRING 

State 3:
expr -> NOT . expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
-- On TRUE shift to state 1
-- On STRING shift to state 2
-- On NOT shift to state 3
-- On MINUS shift to state 4
-- On LEFTPAR shift to state 5
-- On LEFTBRACE shift to state 6
-- On INTEGER shift to state 8
-- On IF shift to state 9
-- On IDENT shift to state 10
-- On FUN shift to state 11
-- On FALSE shift to state 14
-- On simple_expr shift to state 15
-- On expr shift to state 61

State 4:
expr -> MINUS . expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
-- On TRUE shift to state 1
-- On STRING shift to state 2
-- On NOT shift to state 3
-- On MINUS shift to state 4
-- On LEFTPAR shift to state 5
-- On LEFTBRACE shift to state 6
-- On INTEGER shift to state 8
-- On IF shift to state 9
-- On IDENT shift to state 10
-- On FUN shift to state 11
-- On FALSE shift to state 14
-- On simple_expr shift to state 15
-- On expr shift to state 60

State 5:
simple_expr -> LEFTPAR . expr RIGHTPAR [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
simple_expr -> LEFTPAR . expr COMMA commalist RIGHTPAR [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
-- On TRUE shift to state 1
-- On STRING shift to state 2
-- On NOT shift to state 3
-- On MINUS shift to state 4
-- On LEFTPAR shift to state 5
-- On LEFTBRACE shift to state 6
-- On INTEGER shift to state 8
-- On IF shift to state 9
-- On IDENT shift to state 10
-- On FUN shift to state 11
-- On FALSE shift to state 14
-- On simple_expr shift to state 15
-- On expr shift to state 52

State 6:
simple_expr -> LEFTBRACE . RIGHTBRACE [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
simple_expr -> LEFTBRACE . semicolonlist RIGHTBRACE [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
-- On TRUE shift to state 1
-- On STRING shift to state 2
-- On RIGHTBRACE shift to state 7
-- On NOT shift to state 3
-- On MINUS shift to state 4
-- On LEFTPAR shift to state 5
-- On LEFTBRACE shift to state 6
-- On INTEGER shift to state 8
-- On IF shift to state 9
-- On IDENT shift to state 10
-- On FUN shift to state 11
-- On FALSE shift to state 14
-- On simple_expr shift to state 15
-- On semicolonlist shift to state 47
-- On expr shift to state 49

State 7:
simple_expr -> LEFTBRACE RIGHTBRACE . [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
-- On TRUE reduce production simple_expr -> LEFTBRACE RIGHTBRACE 
-- On THEN reduce production simple_expr -> LEFTBRACE RIGHTBRACE 
-- On STRING reduce production simple_expr -> LEFTBRACE RIGHTBRACE 
-- On STAR reduce production simple_expr -> LEFTBRACE RIGHTBRACE 
-- On SEMICOLON reduce production simple_expr -> LEFTBRACE RIGHTBRACE 
-- On RIGHTPAR reduce production simple_expr -> LEFTBRACE RIGHTBRACE 
-- On RIGHTBRACE reduce production simple_expr -> LEFTBRACE RIGHTBRACE 
-- On PLUS reduce production simple_expr -> LEFTBRACE RIGHTBRACE 
-- On OR reduce production simple_expr -> LEFTBRACE RIGHTBRACE 
-- On NEQ reduce production simple_expr -> LEFTBRACE RIGHTBRACE 
-- On MINUS reduce production simple_expr -> LEFTBRACE RIGHTBRACE 
-- On LT reduce production simple_expr -> LEFTBRACE RIGHTBRACE 
-- On LEFTPAR reduce production simple_expr -> LEFTBRACE RIGHTBRACE 
-- On LEFTBRACE reduce production simple_expr -> LEFTBRACE RIGHTBRACE 
-- On LE reduce production simple_expr -> LEFTBRACE RIGHTBRACE 
-- On INTEGER reduce production simple_expr -> LEFTBRACE RIGHTBRACE 
-- On IDENT reduce production simple_expr -> LEFTBRACE RIGHTBRACE 
-- On GT reduce production simple_expr -> LEFTBRACE RIGHTBRACE 
-- On GE reduce production simple_expr -> LEFTBRACE RIGHTBRACE 
-- On FALSE reduce production simple_expr -> LEFTBRACE RIGHTBRACE 
-- On EQUAL reduce production simple_expr -> LEFTBRACE RIGHTBRACE 
-- On ELSE reduce production simple_expr -> LEFTBRACE RIGHTBRACE 
-- On CONCAT reduce production simple_expr -> LEFTBRACE RIGHTBRACE 
-- On COMMA reduce production simple_expr -> LEFTBRACE RIGHTBRACE 
-- On AND reduce production simple_expr -> LEFTBRACE RIGHTBRACE 

State 8:
simple_expr -> INTEGER . [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
-- On TRUE reduce production simple_expr -> INTEGER 
-- On THEN reduce production simple_expr -> INTEGER 
-- On STRING reduce production simple_expr -> INTEGER 
-- On STAR reduce production simple_expr -> INTEGER 
-- On SEMICOLON reduce production simple_expr -> INTEGER 
-- On RIGHTPAR reduce production simple_expr -> INTEGER 
-- On RIGHTBRACE reduce production simple_expr -> INTEGER 
-- On PLUS reduce production simple_expr -> INTEGER 
-- On OR reduce production simple_expr -> INTEGER 
-- On NEQ reduce production simple_expr -> INTEGER 
-- On MINUS reduce production simple_expr -> INTEGER 
-- On LT reduce production simple_expr -> INTEGER 
-- On LEFTPAR reduce production simple_expr -> INTEGER 
-- On LEFTBRACE reduce production simple_expr -> INTEGER 
-- On LE reduce production simple_expr -> INTEGER 
-- On INTEGER reduce production simple_expr -> INTEGER 
-- On IDENT reduce production simple_expr -> INTEGER 
-- On GT reduce production simple_expr -> INTEGER 
-- On GE reduce production simple_expr -> INTEGER 
-- On FALSE reduce production simple_expr -> INTEGER 
-- On EQUAL reduce production simple_expr -> INTEGER 
-- On ELSE reduce production simple_expr -> INTEGER 
-- On CONCAT reduce production simple_expr -> INTEGER 
-- On COMMA reduce production simple_expr -> INTEGER 
-- On AND reduce production simple_expr -> INTEGER 

State 9:
expr -> IF . expr THEN expr ELSE expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
-- On TRUE shift to state 1
-- On STRING shift to state 2
-- On NOT shift to state 3
-- On MINUS shift to state 4
-- On LEFTPAR shift to state 5
-- On LEFTBRACE shift to state 6
-- On INTEGER shift to state 8
-- On IF shift to state 9
-- On IDENT shift to state 10
-- On FUN shift to state 11
-- On FALSE shift to state 14
-- On simple_expr shift to state 15
-- On expr shift to state 42

State 10:
simple_expr -> IDENT . [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
-- On TRUE reduce production simple_expr -> IDENT 
-- On THEN reduce production simple_expr -> IDENT 
-- On STRING reduce production simple_expr -> IDENT 
-- On STAR reduce production simple_expr -> IDENT 
-- On SEMICOLON reduce production simple_expr -> IDENT 
-- On RIGHTPAR reduce production simple_expr -> IDENT 
-- On RIGHTBRACE reduce production simple_expr -> IDENT 
-- On PLUS reduce production simple_expr -> IDENT 
-- On OR reduce production simple_expr -> IDENT 
-- On NEQ reduce production simple_expr -> IDENT 
-- On MINUS reduce production simple_expr -> IDENT 
-- On LT reduce production simple_expr -> IDENT 
-- On LEFTPAR reduce production simple_expr -> IDENT 
-- On LEFTBRACE reduce production simple_expr -> IDENT 
-- On LE reduce production simple_expr -> IDENT 
-- On INTEGER reduce production simple_expr -> IDENT 
-- On IDENT reduce production simple_expr -> IDENT 
-- On GT reduce production simple_expr -> IDENT 
-- On GE reduce production simple_expr -> IDENT 
-- On FALSE reduce production simple_expr -> IDENT 
-- On EQUAL reduce production simple_expr -> IDENT 
-- On ELSE reduce production simple_expr -> IDENT 
-- On CONCAT reduce production simple_expr -> IDENT 
-- On COMMA reduce production simple_expr -> IDENT 
-- On AND reduce production simple_expr -> IDENT 

State 11:
expr -> FUN . IDENT ARROW expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
-- On IDENT shift to state 12

State 12:
expr -> FUN IDENT . ARROW expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
-- On ARROW shift to state 13

State 13:
expr -> FUN IDENT ARROW . expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
-- On TRUE shift to state 1
-- On STRING shift to state 2
-- On NOT shift to state 3
-- On MINUS shift to state 4
-- On LEFTPAR shift to state 5
-- On LEFTBRACE shift to state 6
-- On INTEGER shift to state 8
-- On IF shift to state 9
-- On IDENT shift to state 10
-- On FUN shift to state 11
-- On FALSE shift to state 14
-- On simple_expr shift to state 15
-- On expr shift to state 16

State 14:
simple_expr -> FALSE . [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
-- On TRUE reduce production simple_expr -> FALSE 
-- On THEN reduce production simple_expr -> FALSE 
-- On STRING reduce production simple_expr -> FALSE 
-- On STAR reduce production simple_expr -> FALSE 
-- On SEMICOLON reduce production simple_expr -> FALSE 
-- On RIGHTPAR reduce production simple_expr -> FALSE 
-- On RIGHTBRACE reduce production simple_expr -> FALSE 
-- On PLUS reduce production simple_expr -> FALSE 
-- On OR reduce production simple_expr -> FALSE 
-- On NEQ reduce production simple_expr -> FALSE 
-- On MINUS reduce production simple_expr -> FALSE 
-- On LT reduce production simple_expr -> FALSE 
-- On LEFTPAR reduce production simple_expr -> FALSE 
-- On LEFTBRACE reduce production simple_expr -> FALSE 
-- On LE reduce production simple_expr -> FALSE 
-- On INTEGER reduce production simple_expr -> FALSE 
-- On IDENT reduce production simple_expr -> FALSE 
-- On GT reduce production simple_expr -> FALSE 
-- On GE reduce production simple_expr -> FALSE 
-- On FALSE reduce production simple_expr -> FALSE 
-- On EQUAL reduce production simple_expr -> FALSE 
-- On ELSE reduce production simple_expr -> FALSE 
-- On CONCAT reduce production simple_expr -> FALSE 
-- On COMMA reduce production simple_expr -> FALSE 
-- On AND reduce production simple_expr -> FALSE 

State 15:
expr -> simple_expr . [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
-- On TRUE reduce production expr -> simple_expr 
-- On THEN reduce production expr -> simple_expr 
-- On STRING reduce production expr -> simple_expr 
-- On STAR reduce production expr -> simple_expr 
-- On SEMICOLON reduce production expr -> simple_expr 
-- On RIGHTPAR reduce production expr -> simple_expr 
-- On RIGHTBRACE reduce production expr -> simple_expr 
-- On PLUS reduce production expr -> simple_expr 
-- On OR reduce production expr -> simple_expr 
-- On NEQ reduce production expr -> simple_expr 
-- On MINUS reduce production expr -> simple_expr 
-- On LT reduce production expr -> simple_expr 
-- On LEFTPAR reduce production expr -> simple_expr 
-- On LEFTBRACE reduce production expr -> simple_expr 
-- On LE reduce production expr -> simple_expr 
-- On INTEGER reduce production expr -> simple_expr 
-- On IDENT reduce production expr -> simple_expr 
-- On GT reduce production expr -> simple_expr 
-- On GE reduce production expr -> simple_expr 
-- On FALSE reduce production expr -> simple_expr 
-- On EQUAL reduce production expr -> simple_expr 
-- On ELSE reduce production expr -> simple_expr 
-- On CONCAT reduce production expr -> simple_expr 
-- On COMMA reduce production expr -> simple_expr 
-- On AND reduce production expr -> simple_expr 

State 16:
expr -> expr . simple_expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> FUN IDENT ARROW expr . [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr . PLUS expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr . MINUS expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr . STAR expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr . EQUAL expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr . NEQ expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr . GE expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr . GT expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr . LE expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr . LT expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr . AND expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr . OR expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr . CONCAT expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
-- On TRUE shift to state 1
-- On STRING shift to state 2
-- On STAR shift to state 17
-- On PLUS shift to state 22
-- On OR shift to state 24
-- On NEQ shift to state 26
-- On MINUS shift to state 28
-- On LT shift to state 30
-- On LEFTPAR shift to state 5
-- On LEFTBRACE shift to state 6
-- On LE shift to state 32
-- On INTEGER shift to state 8
-- On IDENT shift to state 10
-- On GT shift to state 34
-- On GE shift to state 36
-- On FALSE shift to state 14
-- On EQUAL shift to state 38
-- On CONCAT shift to state 19
-- On AND shift to state 40
-- On simple_expr shift to state 21
-- On THEN reduce production expr -> FUN IDENT ARROW expr 
-- On SEMICOLON reduce production expr -> FUN IDENT ARROW expr 
-- On RIGHTPAR reduce production expr -> FUN IDENT ARROW expr 
-- On RIGHTBRACE reduce production expr -> FUN IDENT ARROW expr 
-- On ELSE reduce production expr -> FUN IDENT ARROW expr 
-- On COMMA reduce production expr -> FUN IDENT ARROW expr 

State 17:
expr -> expr STAR . expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
-- On TRUE shift to state 1
-- On STRING shift to state 2
-- On NOT shift to state 3
-- On MINUS shift to state 4
-- On LEFTPAR shift to state 5
-- On LEFTBRACE shift to state 6
-- On INTEGER shift to state 8
-- On IF shift to state 9
-- On IDENT shift to state 10
-- On FUN shift to state 11
-- On FALSE shift to state 14
-- On simple_expr shift to state 15
-- On expr shift to state 18

State 18:
expr -> expr . simple_expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr . PLUS expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr . MINUS expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr . STAR expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr STAR expr . [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr . EQUAL expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr . NEQ expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr . GE expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr . GT expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr . LE expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr . LT expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr . AND expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr . OR expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr . CONCAT expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
-- On TRUE shift to state 1
-- On STRING shift to state 2
-- On LEFTPAR shift to state 5
-- On LEFTBRACE shift to state 6
-- On INTEGER shift to state 8
-- On IDENT shift to state 10
-- On FALSE shift to state 14
-- On CONCAT shift to state 19
-- On simple_expr shift to state 21
-- On THEN reduce production expr -> expr STAR expr 
-- On STAR reduce production expr -> expr STAR expr 
-- On SEMICOLON reduce production expr -> expr STAR expr 
-- On RIGHTPAR reduce production expr -> expr STAR expr 
-- On RIGHTBRACE reduce production expr -> expr STAR expr 
-- On PLUS reduce production expr -> expr STAR expr 
-- On OR reduce production expr -> expr STAR expr 
-- On NEQ reduce production expr -> expr STAR expr 
-- On MINUS reduce production expr -> expr STAR expr 
-- On LT reduce production expr -> expr STAR expr 
-- On LE reduce production expr -> expr STAR expr 
-- On GT reduce production expr -> expr STAR expr 
-- On GE reduce production expr -> expr STAR expr 
-- On EQUAL reduce production expr -> expr STAR expr 
-- On ELSE reduce production expr -> expr STAR expr 
-- On COMMA reduce production expr -> expr STAR expr 
-- On AND reduce production expr -> expr STAR expr 

State 19:
expr -> expr CONCAT . expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
-- On TRUE shift to state 1
-- On STRING shift to state 2
-- On NOT shift to state 3
-- On MINUS shift to state 4
-- On LEFTPAR shift to state 5
-- On LEFTBRACE shift to state 6
-- On INTEGER shift to state 8
-- On IF shift to state 9
-- On IDENT shift to state 10
-- On FUN shift to state 11
-- On FALSE shift to state 14
-- On simple_expr shift to state 15
-- On expr shift to state 20

State 20:
expr -> expr . simple_expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr . PLUS expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr . MINUS expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr . STAR expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr . EQUAL expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr . NEQ expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr . GE expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr . GT expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr . LE expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr . LT expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr . AND expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr . OR expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr . CONCAT expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr CONCAT expr . [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
-- On simple_expr shift to state 21
-- On THEN reduce production expr -> expr CONCAT expr 
-- On STAR reduce production expr -> expr CONCAT expr 
-- On SEMICOLON reduce production expr -> expr CONCAT expr 
-- On RIGHTPAR reduce production expr -> expr CONCAT expr 
-- On RIGHTBRACE reduce production expr -> expr CONCAT expr 
-- On PLUS reduce production expr -> expr CONCAT expr 
-- On OR reduce production expr -> expr CONCAT expr 
-- On NEQ reduce production expr -> expr CONCAT expr 
-- On MINUS reduce production expr -> expr CONCAT expr 
-- On LT reduce production expr -> expr CONCAT expr 
-- On LE reduce production expr -> expr CONCAT expr 
-- On GT reduce production expr -> expr CONCAT expr 
-- On GE reduce production expr -> expr CONCAT expr 
-- On EQUAL reduce production expr -> expr CONCAT expr 
-- On ELSE reduce production expr -> expr CONCAT expr 
-- On COMMA reduce production expr -> expr CONCAT expr 
-- On AND reduce production expr -> expr CONCAT expr 

State 21:
expr -> expr simple_expr . [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
-- On TRUE reduce production expr -> expr simple_expr 
-- On THEN reduce production expr -> expr simple_expr 
-- On STRING reduce production expr -> expr simple_expr 
-- On STAR reduce production expr -> expr simple_expr 
-- On SEMICOLON reduce production expr -> expr simple_expr 
-- On RIGHTPAR reduce production expr -> expr simple_expr 
-- On RIGHTBRACE reduce production expr -> expr simple_expr 
-- On PLUS reduce production expr -> expr simple_expr 
-- On OR reduce production expr -> expr simple_expr 
-- On NEQ reduce production expr -> expr simple_expr 
-- On MINUS reduce production expr -> expr simple_expr 
-- On LT reduce production expr -> expr simple_expr 
-- On LEFTPAR reduce production expr -> expr simple_expr 
-- On LEFTBRACE reduce production expr -> expr simple_expr 
-- On LE reduce production expr -> expr simple_expr 
-- On INTEGER reduce production expr -> expr simple_expr 
-- On IDENT reduce production expr -> expr simple_expr 
-- On GT reduce production expr -> expr simple_expr 
-- On GE reduce production expr -> expr simple_expr 
-- On FALSE reduce production expr -> expr simple_expr 
-- On EQUAL reduce production expr -> expr simple_expr 
-- On ELSE reduce production expr -> expr simple_expr 
-- On CONCAT reduce production expr -> expr simple_expr 
-- On COMMA reduce production expr -> expr simple_expr 
-- On AND reduce production expr -> expr simple_expr 

State 22:
expr -> expr PLUS . expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
-- On TRUE shift to state 1
-- On STRING shift to state 2
-- On NOT shift to state 3
-- On MINUS shift to state 4
-- On LEFTPAR shift to state 5
-- On LEFTBRACE shift to state 6
-- On INTEGER shift to state 8
-- On IF shift to state 9
-- On IDENT shift to state 10
-- On FUN shift to state 11
-- On FALSE shift to state 14
-- On simple_expr shift to state 15
-- On expr shift to state 23

State 23:
expr -> expr . simple_expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr . PLUS expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr PLUS expr . [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr . MINUS expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr . STAR expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr . EQUAL expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr . NEQ expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr . GE expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr . GT expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr . LE expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr . LT expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr . AND expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr . OR expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr . CONCAT expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
-- On TRUE shift to state 1
-- On STRING shift to state 2
-- On STAR shift to state 17
-- On LEFTPAR shift to state 5
-- On LEFTBRACE shift to state 6
-- On INTEGER shift to state 8
-- On IDENT shift to state 10
-- On FALSE shift to state 14
-- On CONCAT shift to state 19
-- On simple_expr shift to state 21
-- On THEN reduce production expr -> expr PLUS expr 
-- On SEMICOLON reduce production expr -> expr PLUS expr 
-- On RIGHTPAR reduce production expr -> expr PLUS expr 
-- On RIGHTBRACE reduce production expr -> expr PLUS expr 
-- On PLUS reduce production expr -> expr PLUS expr 
-- On OR reduce production expr -> expr PLUS expr 
-- On NEQ reduce production expr -> expr PLUS expr 
-- On MINUS reduce production expr -> expr PLUS expr 
-- On LT reduce production expr -> expr PLUS expr 
-- On LE reduce production expr -> expr PLUS expr 
-- On GT reduce production expr -> expr PLUS expr 
-- On GE reduce production expr -> expr PLUS expr 
-- On EQUAL reduce production expr -> expr PLUS expr 
-- On ELSE reduce production expr -> expr PLUS expr 
-- On COMMA reduce production expr -> expr PLUS expr 
-- On AND reduce production expr -> expr PLUS expr 

State 24:
expr -> expr OR . expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
-- On TRUE shift to state 1
-- On STRING shift to state 2
-- On NOT shift to state 3
-- On MINUS shift to state 4
-- On LEFTPAR shift to state 5
-- On LEFTBRACE shift to state 6
-- On INTEGER shift to state 8
-- On IF shift to state 9
-- On IDENT shift to state 10
-- On FUN shift to state 11
-- On FALSE shift to state 14
-- On simple_expr shift to state 15
-- On expr shift to state 25

State 25:
expr -> expr . simple_expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr . PLUS expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr . MINUS expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr . STAR expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr . EQUAL expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr . NEQ expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr . GE expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr . GT expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr . LE expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr . LT expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr . AND expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr . OR expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr OR expr . [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr . CONCAT expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
-- On TRUE shift to state 1
-- On STRING shift to state 2
-- On STAR shift to state 17
-- On PLUS shift to state 22
-- On NEQ shift to state 26
-- On MINUS shift to state 28
-- On LT shift to state 30
-- On LEFTPAR shift to state 5
-- On LEFTBRACE shift to state 6
-- On LE shift to state 32
-- On INTEGER shift to state 8
-- On IDENT shift to state 10
-- On GT shift to state 34
-- On GE shift to state 36
-- On FALSE shift to state 14
-- On EQUAL shift to state 38
-- On CONCAT shift to state 19
-- On AND shift to state 40
-- On simple_expr shift to state 21
-- On THEN reduce production expr -> expr OR expr 
-- On SEMICOLON reduce production expr -> expr OR expr 
-- On RIGHTPAR reduce production expr -> expr OR expr 
-- On RIGHTBRACE reduce production expr -> expr OR expr 
-- On OR reduce production expr -> expr OR expr 
-- On ELSE reduce production expr -> expr OR expr 
-- On COMMA reduce production expr -> expr OR expr 

State 26:
expr -> expr NEQ . expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
-- On TRUE shift to state 1
-- On STRING shift to state 2
-- On NOT shift to state 3
-- On MINUS shift to state 4
-- On LEFTPAR shift to state 5
-- On LEFTBRACE shift to state 6
-- On INTEGER shift to state 8
-- On IF shift to state 9
-- On IDENT shift to state 10
-- On FUN shift to state 11
-- On FALSE shift to state 14
-- On simple_expr shift to state 15
-- On expr shift to state 27

State 27:
expr -> expr . simple_expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr . PLUS expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr . MINUS expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr . STAR expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr . EQUAL expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr . NEQ expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr NEQ expr . [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr . GE expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr . GT expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr . LE expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr . LT expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr . AND expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr . OR expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr . CONCAT expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
-- On TRUE shift to state 1
-- On STRING shift to state 2
-- On STAR shift to state 17
-- On PLUS shift to state 22
-- On MINUS shift to state 28
-- On LEFTPAR shift to state 5
-- On LEFTBRACE shift to state 6
-- On INTEGER shift to state 8
-- On IDENT shift to state 10
-- On FALSE shift to state 14
-- On CONCAT shift to state 19
-- On simple_expr shift to state 21
-- On THEN reduce production expr -> expr NEQ expr 
-- On SEMICOLON reduce production expr -> expr NEQ expr 
-- On RIGHTPAR reduce production expr -> expr NEQ expr 
-- On RIGHTBRACE reduce production expr -> expr NEQ expr 
-- On OR reduce production expr -> expr NEQ expr 
-- On NEQ reduce production expr -> expr NEQ expr 
-- On LT reduce production expr -> expr NEQ expr 
-- On LE reduce production expr -> expr NEQ expr 
-- On GT reduce production expr -> expr NEQ expr 
-- On GE reduce production expr -> expr NEQ expr 
-- On EQUAL reduce production expr -> expr NEQ expr 
-- On ELSE reduce production expr -> expr NEQ expr 
-- On COMMA reduce production expr -> expr NEQ expr 
-- On AND reduce production expr -> expr NEQ expr 

State 28:
expr -> expr MINUS . expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
-- On TRUE shift to state 1
-- On STRING shift to state 2
-- On NOT shift to state 3
-- On MINUS shift to state 4
-- On LEFTPAR shift to state 5
-- On LEFTBRACE shift to state 6
-- On INTEGER shift to state 8
-- On IF shift to state 9
-- On IDENT shift to state 10
-- On FUN shift to state 11
-- On FALSE shift to state 14
-- On simple_expr shift to state 15
-- On expr shift to state 29

State 29:
expr -> expr . simple_expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr . PLUS expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr . MINUS expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr MINUS expr . [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr . STAR expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr . EQUAL expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr . NEQ expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr . GE expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr . GT expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr . LE expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr . LT expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr . AND expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr . OR expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr . CONCAT expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
-- On TRUE shift to state 1
-- On STRING shift to state 2
-- On STAR shift to state 17
-- On LEFTPAR shift to state 5
-- On LEFTBRACE shift to state 6
-- On INTEGER shift to state 8
-- On IDENT shift to state 10
-- On FALSE shift to state 14
-- On CONCAT shift to state 19
-- On simple_expr shift to state 21
-- On THEN reduce production expr -> expr MINUS expr 
-- On SEMICOLON reduce production expr -> expr MINUS expr 
-- On RIGHTPAR reduce production expr -> expr MINUS expr 
-- On RIGHTBRACE reduce production expr -> expr MINUS expr 
-- On PLUS reduce production expr -> expr MINUS expr 
-- On OR reduce production expr -> expr MINUS expr 
-- On NEQ reduce production expr -> expr MINUS expr 
-- On MINUS reduce production expr -> expr MINUS expr 
-- On LT reduce production expr -> expr MINUS expr 
-- On LE reduce production expr -> expr MINUS expr 
-- On GT reduce production expr -> expr MINUS expr 
-- On GE reduce production expr -> expr MINUS expr 
-- On EQUAL reduce production expr -> expr MINUS expr 
-- On ELSE reduce production expr -> expr MINUS expr 
-- On COMMA reduce production expr -> expr MINUS expr 
-- On AND reduce production expr -> expr MINUS expr 

State 30:
expr -> expr LT . expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
-- On TRUE shift to state 1
-- On STRING shift to state 2
-- On NOT shift to state 3
-- On MINUS shift to state 4
-- On LEFTPAR shift to state 5
-- On LEFTBRACE shift to state 6
-- On INTEGER shift to state 8
-- On IF shift to state 9
-- On IDENT shift to state 10
-- On FUN shift to state 11
-- On FALSE shift to state 14
-- On simple_expr shift to state 15
-- On expr shift to state 31

State 31:
expr -> expr . simple_expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr . PLUS expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr . MINUS expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr . STAR expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr . EQUAL expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr . NEQ expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr . GE expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr . GT expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr . LE expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr . LT expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr LT expr . [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr . AND expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr . OR expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr . CONCAT expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
-- On TRUE shift to state 1
-- On STRING shift to state 2
-- On STAR shift to state 17
-- On PLUS shift to state 22
-- On MINUS shift to state 28
-- On LEFTPAR shift to state 5
-- On LEFTBRACE shift to state 6
-- On INTEGER shift to state 8
-- On IDENT shift to state 10
-- On FALSE shift to state 14
-- On CONCAT shift to state 19
-- On simple_expr shift to state 21
-- On THEN reduce production expr -> expr LT expr 
-- On SEMICOLON reduce production expr -> expr LT expr 
-- On RIGHTPAR reduce production expr -> expr LT expr 
-- On RIGHTBRACE reduce production expr -> expr LT expr 
-- On OR reduce production expr -> expr LT expr 
-- On NEQ reduce production expr -> expr LT expr 
-- On LT reduce production expr -> expr LT expr 
-- On LE reduce production expr -> expr LT expr 
-- On GT reduce production expr -> expr LT expr 
-- On GE reduce production expr -> expr LT expr 
-- On EQUAL reduce production expr -> expr LT expr 
-- On ELSE reduce production expr -> expr LT expr 
-- On COMMA reduce production expr -> expr LT expr 
-- On AND reduce production expr -> expr LT expr 

State 32:
expr -> expr LE . expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
-- On TRUE shift to state 1
-- On STRING shift to state 2
-- On NOT shift to state 3
-- On MINUS shift to state 4
-- On LEFTPAR shift to state 5
-- On LEFTBRACE shift to state 6
-- On INTEGER shift to state 8
-- On IF shift to state 9
-- On IDENT shift to state 10
-- On FUN shift to state 11
-- On FALSE shift to state 14
-- On simple_expr shift to state 15
-- On expr shift to state 33

State 33:
expr -> expr . simple_expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr . PLUS expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr . MINUS expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr . STAR expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr . EQUAL expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr . NEQ expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr . GE expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr . GT expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr . LE expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr LE expr . [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr . LT expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr . AND expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr . OR expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr . CONCAT expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
-- On TRUE shift to state 1
-- On STRING shift to state 2
-- On STAR shift to state 17
-- On PLUS shift to state 22
-- On MINUS shift to state 28
-- On LEFTPAR shift to state 5
-- On LEFTBRACE shift to state 6
-- On INTEGER shift to state 8
-- On IDENT shift to state 10
-- On FALSE shift to state 14
-- On CONCAT shift to state 19
-- On simple_expr shift to state 21
-- On THEN reduce production expr -> expr LE expr 
-- On SEMICOLON reduce production expr -> expr LE expr 
-- On RIGHTPAR reduce production expr -> expr LE expr 
-- On RIGHTBRACE reduce production expr -> expr LE expr 
-- On OR reduce production expr -> expr LE expr 
-- On NEQ reduce production expr -> expr LE expr 
-- On LT reduce production expr -> expr LE expr 
-- On LE reduce production expr -> expr LE expr 
-- On GT reduce production expr -> expr LE expr 
-- On GE reduce production expr -> expr LE expr 
-- On EQUAL reduce production expr -> expr LE expr 
-- On ELSE reduce production expr -> expr LE expr 
-- On COMMA reduce production expr -> expr LE expr 
-- On AND reduce production expr -> expr LE expr 

State 34:
expr -> expr GT . expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
-- On TRUE shift to state 1
-- On STRING shift to state 2
-- On NOT shift to state 3
-- On MINUS shift to state 4
-- On LEFTPAR shift to state 5
-- On LEFTBRACE shift to state 6
-- On INTEGER shift to state 8
-- On IF shift to state 9
-- On IDENT shift to state 10
-- On FUN shift to state 11
-- On FALSE shift to state 14
-- On simple_expr shift to state 15
-- On expr shift to state 35

State 35:
expr -> expr . simple_expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr . PLUS expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr . MINUS expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr . STAR expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr . EQUAL expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr . NEQ expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr . GE expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr . GT expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr GT expr . [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr . LE expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr . LT expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr . AND expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr . OR expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr . CONCAT expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
-- On TRUE shift to state 1
-- On STRING shift to state 2
-- On STAR shift to state 17
-- On PLUS shift to state 22
-- On MINUS shift to state 28
-- On LEFTPAR shift to state 5
-- On LEFTBRACE shift to state 6
-- On INTEGER shift to state 8
-- On IDENT shift to state 10
-- On FALSE shift to state 14
-- On CONCAT shift to state 19
-- On simple_expr shift to state 21
-- On THEN reduce production expr -> expr GT expr 
-- On SEMICOLON reduce production expr -> expr GT expr 
-- On RIGHTPAR reduce production expr -> expr GT expr 
-- On RIGHTBRACE reduce production expr -> expr GT expr 
-- On OR reduce production expr -> expr GT expr 
-- On NEQ reduce production expr -> expr GT expr 
-- On LT reduce production expr -> expr GT expr 
-- On LE reduce production expr -> expr GT expr 
-- On GT reduce production expr -> expr GT expr 
-- On GE reduce production expr -> expr GT expr 
-- On EQUAL reduce production expr -> expr GT expr 
-- On ELSE reduce production expr -> expr GT expr 
-- On COMMA reduce production expr -> expr GT expr 
-- On AND reduce production expr -> expr GT expr 

State 36:
expr -> expr GE . expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
-- On TRUE shift to state 1
-- On STRING shift to state 2
-- On NOT shift to state 3
-- On MINUS shift to state 4
-- On LEFTPAR shift to state 5
-- On LEFTBRACE shift to state 6
-- On INTEGER shift to state 8
-- On IF shift to state 9
-- On IDENT shift to state 10
-- On FUN shift to state 11
-- On FALSE shift to state 14
-- On simple_expr shift to state 15
-- On expr shift to state 37

State 37:
expr -> expr . simple_expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr . PLUS expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr . MINUS expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr . STAR expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr . EQUAL expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr . NEQ expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr . GE expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr GE expr . [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr . GT expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr . LE expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr . LT expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr . AND expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr . OR expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr . CONCAT expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
-- On TRUE shift to state 1
-- On STRING shift to state 2
-- On STAR shift to state 17
-- On PLUS shift to state 22
-- On MINUS shift to state 28
-- On LEFTPAR shift to state 5
-- On LEFTBRACE shift to state 6
-- On INTEGER shift to state 8
-- On IDENT shift to state 10
-- On FALSE shift to state 14
-- On CONCAT shift to state 19
-- On simple_expr shift to state 21
-- On THEN reduce production expr -> expr GE expr 
-- On SEMICOLON reduce production expr -> expr GE expr 
-- On RIGHTPAR reduce production expr -> expr GE expr 
-- On RIGHTBRACE reduce production expr -> expr GE expr 
-- On OR reduce production expr -> expr GE expr 
-- On NEQ reduce production expr -> expr GE expr 
-- On LT reduce production expr -> expr GE expr 
-- On LE reduce production expr -> expr GE expr 
-- On GT reduce production expr -> expr GE expr 
-- On GE reduce production expr -> expr GE expr 
-- On EQUAL reduce production expr -> expr GE expr 
-- On ELSE reduce production expr -> expr GE expr 
-- On COMMA reduce production expr -> expr GE expr 
-- On AND reduce production expr -> expr GE expr 

State 38:
expr -> expr EQUAL . expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
-- On TRUE shift to state 1
-- On STRING shift to state 2
-- On NOT shift to state 3
-- On MINUS shift to state 4
-- On LEFTPAR shift to state 5
-- On LEFTBRACE shift to state 6
-- On INTEGER shift to state 8
-- On IF shift to state 9
-- On IDENT shift to state 10
-- On FUN shift to state 11
-- On FALSE shift to state 14
-- On simple_expr shift to state 15
-- On expr shift to state 39

State 39:
expr -> expr . simple_expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr . PLUS expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr . MINUS expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr . STAR expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr . EQUAL expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr EQUAL expr . [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr . NEQ expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr . GE expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr . GT expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr . LE expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr . LT expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr . AND expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr . OR expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr . CONCAT expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
-- On TRUE shift to state 1
-- On STRING shift to state 2
-- On STAR shift to state 17
-- On PLUS shift to state 22
-- On MINUS shift to state 28
-- On LEFTPAR shift to state 5
-- On LEFTBRACE shift to state 6
-- On INTEGER shift to state 8
-- On IDENT shift to state 10
-- On FALSE shift to state 14
-- On CONCAT shift to state 19
-- On simple_expr shift to state 21
-- On THEN reduce production expr -> expr EQUAL expr 
-- On SEMICOLON reduce production expr -> expr EQUAL expr 
-- On RIGHTPAR reduce production expr -> expr EQUAL expr 
-- On RIGHTBRACE reduce production expr -> expr EQUAL expr 
-- On OR reduce production expr -> expr EQUAL expr 
-- On NEQ reduce production expr -> expr EQUAL expr 
-- On LT reduce production expr -> expr EQUAL expr 
-- On LE reduce production expr -> expr EQUAL expr 
-- On GT reduce production expr -> expr EQUAL expr 
-- On GE reduce production expr -> expr EQUAL expr 
-- On EQUAL reduce production expr -> expr EQUAL expr 
-- On ELSE reduce production expr -> expr EQUAL expr 
-- On COMMA reduce production expr -> expr EQUAL expr 
-- On AND reduce production expr -> expr EQUAL expr 

State 40:
expr -> expr AND . expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
-- On TRUE shift to state 1
-- On STRING shift to state 2
-- On NOT shift to state 3
-- On MINUS shift to state 4
-- On LEFTPAR shift to state 5
-- On LEFTBRACE shift to state 6
-- On INTEGER shift to state 8
-- On IF shift to state 9
-- On IDENT shift to state 10
-- On FUN shift to state 11
-- On FALSE shift to state 14
-- On simple_expr shift to state 15
-- On expr shift to state 41

State 41:
expr -> expr . simple_expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr . PLUS expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr . MINUS expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr . STAR expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr . EQUAL expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr . NEQ expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr . GE expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr . GT expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr . LE expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr . LT expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr . AND expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr AND expr . [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr . OR expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr . CONCAT expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
-- On TRUE shift to state 1
-- On STRING shift to state 2
-- On STAR shift to state 17
-- On PLUS shift to state 22
-- On NEQ shift to state 26
-- On MINUS shift to state 28
-- On LT shift to state 30
-- On LEFTPAR shift to state 5
-- On LEFTBRACE shift to state 6
-- On LE shift to state 32
-- On INTEGER shift to state 8
-- On IDENT shift to state 10
-- On GT shift to state 34
-- On GE shift to state 36
-- On FALSE shift to state 14
-- On EQUAL shift to state 38
-- On CONCAT shift to state 19
-- On simple_expr shift to state 21
-- On THEN reduce production expr -> expr AND expr 
-- On SEMICOLON reduce production expr -> expr AND expr 
-- On RIGHTPAR reduce production expr -> expr AND expr 
-- On RIGHTBRACE reduce production expr -> expr AND expr 
-- On OR reduce production expr -> expr AND expr 
-- On ELSE reduce production expr -> expr AND expr 
-- On COMMA reduce production expr -> expr AND expr 
-- On AND reduce production expr -> expr AND expr 

State 42:
expr -> IF expr . THEN expr ELSE expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr . simple_expr [ TRUE THEN STRING STAR PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL CONCAT AND ]
expr -> expr . PLUS expr [ TRUE THEN STRING STAR PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL CONCAT AND ]
expr -> expr . MINUS expr [ TRUE THEN STRING STAR PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL CONCAT AND ]
expr -> expr . STAR expr [ TRUE THEN STRING STAR PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL CONCAT AND ]
expr -> expr . EQUAL expr [ TRUE THEN STRING STAR PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL CONCAT AND ]
expr -> expr . NEQ expr [ TRUE THEN STRING STAR PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL CONCAT AND ]
expr -> expr . GE expr [ TRUE THEN STRING STAR PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL CONCAT AND ]
expr -> expr . GT expr [ TRUE THEN STRING STAR PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL CONCAT AND ]
expr -> expr . LE expr [ TRUE THEN STRING STAR PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL CONCAT AND ]
expr -> expr . LT expr [ TRUE THEN STRING STAR PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL CONCAT AND ]
expr -> expr . AND expr [ TRUE THEN STRING STAR PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL CONCAT AND ]
expr -> expr . OR expr [ TRUE THEN STRING STAR PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL CONCAT AND ]
expr -> expr . CONCAT expr [ TRUE THEN STRING STAR PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL CONCAT AND ]
-- On TRUE shift to state 1
-- On THEN shift to state 43
-- On STRING shift to state 2
-- On STAR shift to state 17
-- On PLUS shift to state 22
-- On OR shift to state 24
-- On NEQ shift to state 26
-- On MINUS shift to state 28
-- On LT shift to state 30
-- On LEFTPAR shift to state 5
-- On LEFTBRACE shift to state 6
-- On LE shift to state 32
-- On INTEGER shift to state 8
-- On IDENT shift to state 10
-- On GT shift to state 34
-- On GE shift to state 36
-- On FALSE shift to state 14
-- On EQUAL shift to state 38
-- On CONCAT shift to state 19
-- On AND shift to state 40
-- On simple_expr shift to state 21

State 43:
expr -> IF expr THEN . expr ELSE expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
-- On TRUE shift to state 1
-- On STRING shift to state 2
-- On NOT shift to state 3
-- On MINUS shift to state 4
-- On LEFTPAR shift to state 5
-- On LEFTBRACE shift to state 6
-- On INTEGER shift to state 8
-- On IF shift to state 9
-- On IDENT shift to state 10
-- On FUN shift to state 11
-- On FALSE shift to state 14
-- On simple_expr shift to state 15
-- On expr shift to state 44

State 44:
expr -> IF expr THEN expr . ELSE expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr . simple_expr [ TRUE STRING STAR PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT AND ]
expr -> expr . PLUS expr [ TRUE STRING STAR PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT AND ]
expr -> expr . MINUS expr [ TRUE STRING STAR PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT AND ]
expr -> expr . STAR expr [ TRUE STRING STAR PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT AND ]
expr -> expr . EQUAL expr [ TRUE STRING STAR PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT AND ]
expr -> expr . NEQ expr [ TRUE STRING STAR PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT AND ]
expr -> expr . GE expr [ TRUE STRING STAR PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT AND ]
expr -> expr . GT expr [ TRUE STRING STAR PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT AND ]
expr -> expr . LE expr [ TRUE STRING STAR PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT AND ]
expr -> expr . LT expr [ TRUE STRING STAR PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT AND ]
expr -> expr . AND expr [ TRUE STRING STAR PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT AND ]
expr -> expr . OR expr [ TRUE STRING STAR PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT AND ]
expr -> expr . CONCAT expr [ TRUE STRING STAR PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT AND ]
-- On TRUE shift to state 1
-- On STRING shift to state 2
-- On STAR shift to state 17
-- On PLUS shift to state 22
-- On OR shift to state 24
-- On NEQ shift to state 26
-- On MINUS shift to state 28
-- On LT shift to state 30
-- On LEFTPAR shift to state 5
-- On LEFTBRACE shift to state 6
-- On LE shift to state 32
-- On INTEGER shift to state 8
-- On IDENT shift to state 10
-- On GT shift to state 34
-- On GE shift to state 36
-- On FALSE shift to state 14
-- On EQUAL shift to state 38
-- On ELSE shift to state 45
-- On CONCAT shift to state 19
-- On AND shift to state 40
-- On simple_expr shift to state 21

State 45:
expr -> IF expr THEN expr ELSE . expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
-- On TRUE shift to state 1
-- On STRING shift to state 2
-- On NOT shift to state 3
-- On MINUS shift to state 4
-- On LEFTPAR shift to state 5
-- On LEFTBRACE shift to state 6
-- On INTEGER shift to state 8
-- On IF shift to state 9
-- On IDENT shift to state 10
-- On FUN shift to state 11
-- On FALSE shift to state 14
-- On simple_expr shift to state 15
-- On expr shift to state 46

State 46:
expr -> IF expr THEN expr ELSE expr . [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr . simple_expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr . PLUS expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr . MINUS expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr . STAR expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr . EQUAL expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr . NEQ expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr . GE expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr . GT expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr . LE expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr . LT expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr . AND expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr . OR expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr . CONCAT expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
-- On TRUE shift to state 1
-- On STRING shift to state 2
-- On STAR shift to state 17
-- On PLUS shift to state 22
-- On OR shift to state 24
-- On NEQ shift to state 26
-- On MINUS shift to state 28
-- On LT shift to state 30
-- On LEFTPAR shift to state 5
-- On LEFTBRACE shift to state 6
-- On LE shift to state 32
-- On INTEGER shift to state 8
-- On IDENT shift to state 10
-- On GT shift to state 34
-- On GE shift to state 36
-- On FALSE shift to state 14
-- On EQUAL shift to state 38
-- On CONCAT shift to state 19
-- On AND shift to state 40
-- On simple_expr shift to state 21
-- On THEN reduce production expr -> IF expr THEN expr ELSE expr 
-- On SEMICOLON reduce production expr -> IF expr THEN expr ELSE expr 
-- On RIGHTPAR reduce production expr -> IF expr THEN expr ELSE expr 
-- On RIGHTBRACE reduce production expr -> IF expr THEN expr ELSE expr 
-- On ELSE reduce production expr -> IF expr THEN expr ELSE expr 
-- On COMMA reduce production expr -> IF expr THEN expr ELSE expr 

State 47:
simple_expr -> LEFTBRACE semicolonlist . RIGHTBRACE [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
-- On RIGHTBRACE shift to state 48

State 48:
simple_expr -> LEFTBRACE semicolonlist RIGHTBRACE . [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
-- On TRUE reduce production simple_expr -> LEFTBRACE semicolonlist RIGHTBRACE 
-- On THEN reduce production simple_expr -> LEFTBRACE semicolonlist RIGHTBRACE 
-- On STRING reduce production simple_expr -> LEFTBRACE semicolonlist RIGHTBRACE 
-- On STAR reduce production simple_expr -> LEFTBRACE semicolonlist RIGHTBRACE 
-- On SEMICOLON reduce production simple_expr -> LEFTBRACE semicolonlist RIGHTBRACE 
-- On RIGHTPAR reduce production simple_expr -> LEFTBRACE semicolonlist RIGHTBRACE 
-- On RIGHTBRACE reduce production simple_expr -> LEFTBRACE semicolonlist RIGHTBRACE 
-- On PLUS reduce production simple_expr -> LEFTBRACE semicolonlist RIGHTBRACE 
-- On OR reduce production simple_expr -> LEFTBRACE semicolonlist RIGHTBRACE 
-- On NEQ reduce production simple_expr -> LEFTBRACE semicolonlist RIGHTBRACE 
-- On MINUS reduce production simple_expr -> LEFTBRACE semicolonlist RIGHTBRACE 
-- On LT reduce production simple_expr -> LEFTBRACE semicolonlist RIGHTBRACE 
-- On LEFTPAR reduce production simple_expr -> LEFTBRACE semicolonlist RIGHTBRACE 
-- On LEFTBRACE reduce production simple_expr -> LEFTBRACE semicolonlist RIGHTBRACE 
-- On LE reduce production simple_expr -> LEFTBRACE semicolonlist RIGHTBRACE 
-- On INTEGER reduce production simple_expr -> LEFTBRACE semicolonlist RIGHTBRACE 
-- On IDENT reduce production simple_expr -> LEFTBRACE semicolonlist RIGHTBRACE 
-- On GT reduce production simple_expr -> LEFTBRACE semicolonlist RIGHTBRACE 
-- On GE reduce production simple_expr -> LEFTBRACE semicolonlist RIGHTBRACE 
-- On FALSE reduce production simple_expr -> LEFTBRACE semicolonlist RIGHTBRACE 
-- On EQUAL reduce production simple_expr -> LEFTBRACE semicolonlist RIGHTBRACE 
-- On ELSE reduce production simple_expr -> LEFTBRACE semicolonlist RIGHTBRACE 
-- On CONCAT reduce production simple_expr -> LEFTBRACE semicolonlist RIGHTBRACE 
-- On COMMA reduce production simple_expr -> LEFTBRACE semicolonlist RIGHTBRACE 
-- On AND reduce production simple_expr -> LEFTBRACE semicolonlist RIGHTBRACE 

State 49:
expr -> expr . simple_expr [ TRUE STRING STAR SEMICOLON RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL CONCAT AND ]
expr -> expr . PLUS expr [ TRUE STRING STAR SEMICOLON RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL CONCAT AND ]
expr -> expr . MINUS expr [ TRUE STRING STAR SEMICOLON RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL CONCAT AND ]
expr -> expr . STAR expr [ TRUE STRING STAR SEMICOLON RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL CONCAT AND ]
expr -> expr . EQUAL expr [ TRUE STRING STAR SEMICOLON RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL CONCAT AND ]
expr -> expr . NEQ expr [ TRUE STRING STAR SEMICOLON RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL CONCAT AND ]
expr -> expr . GE expr [ TRUE STRING STAR SEMICOLON RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL CONCAT AND ]
expr -> expr . GT expr [ TRUE STRING STAR SEMICOLON RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL CONCAT AND ]
expr -> expr . LE expr [ TRUE STRING STAR SEMICOLON RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL CONCAT AND ]
expr -> expr . LT expr [ TRUE STRING STAR SEMICOLON RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL CONCAT AND ]
expr -> expr . AND expr [ TRUE STRING STAR SEMICOLON RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL CONCAT AND ]
expr -> expr . OR expr [ TRUE STRING STAR SEMICOLON RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL CONCAT AND ]
expr -> expr . CONCAT expr [ TRUE STRING STAR SEMICOLON RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL CONCAT AND ]
semicolonlist -> expr . [ RIGHTBRACE ]
semicolonlist -> expr . SEMICOLON [ RIGHTBRACE ]
semicolonlist -> expr . SEMICOLON semicolonlist [ RIGHTBRACE ]
-- On TRUE shift to state 1
-- On STRING shift to state 2
-- On STAR shift to state 17
-- On SEMICOLON shift to state 50
-- On PLUS shift to state 22
-- On OR shift to state 24
-- On NEQ shift to state 26
-- On MINUS shift to state 28
-- On LT shift to state 30
-- On LEFTPAR shift to state 5
-- On LEFTBRACE shift to state 6
-- On LE shift to state 32
-- On INTEGER shift to state 8
-- On IDENT shift to state 10
-- On GT shift to state 34
-- On GE shift to state 36
-- On FALSE shift to state 14
-- On EQUAL shift to state 38
-- On CONCAT shift to state 19
-- On AND shift to state 40
-- On simple_expr shift to state 21
-- On RIGHTBRACE reduce production semicolonlist -> expr 

State 50:
semicolonlist -> expr SEMICOLON . [ RIGHTBRACE ]
semicolonlist -> expr SEMICOLON . semicolonlist [ RIGHTBRACE ]
-- On TRUE shift to state 1
-- On STRING shift to state 2
-- On NOT shift to state 3
-- On MINUS shift to state 4
-- On LEFTPAR shift to state 5
-- On LEFTBRACE shift to state 6
-- On INTEGER shift to state 8
-- On IF shift to state 9
-- On IDENT shift to state 10
-- On FUN shift to state 11
-- On FALSE shift to state 14
-- On simple_expr shift to state 15
-- On semicolonlist shift to state 51
-- On expr shift to state 49
-- On RIGHTBRACE reduce production semicolonlist -> expr SEMICOLON 

State 51:
semicolonlist -> expr SEMICOLON semicolonlist . [ RIGHTBRACE ]
-- On RIGHTBRACE reduce production semicolonlist -> expr SEMICOLON semicolonlist 

State 52:
expr -> expr . simple_expr [ TRUE STRING STAR RIGHTPAR PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL CONCAT COMMA AND ]
expr -> expr . PLUS expr [ TRUE STRING STAR RIGHTPAR PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL CONCAT COMMA AND ]
expr -> expr . MINUS expr [ TRUE STRING STAR RIGHTPAR PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL CONCAT COMMA AND ]
expr -> expr . STAR expr [ TRUE STRING STAR RIGHTPAR PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL CONCAT COMMA AND ]
expr -> expr . EQUAL expr [ TRUE STRING STAR RIGHTPAR PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL CONCAT COMMA AND ]
expr -> expr . NEQ expr [ TRUE STRING STAR RIGHTPAR PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL CONCAT COMMA AND ]
expr -> expr . GE expr [ TRUE STRING STAR RIGHTPAR PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL CONCAT COMMA AND ]
expr -> expr . GT expr [ TRUE STRING STAR RIGHTPAR PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL CONCAT COMMA AND ]
expr -> expr . LE expr [ TRUE STRING STAR RIGHTPAR PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL CONCAT COMMA AND ]
expr -> expr . LT expr [ TRUE STRING STAR RIGHTPAR PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL CONCAT COMMA AND ]
expr -> expr . AND expr [ TRUE STRING STAR RIGHTPAR PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL CONCAT COMMA AND ]
expr -> expr . OR expr [ TRUE STRING STAR RIGHTPAR PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL CONCAT COMMA AND ]
expr -> expr . CONCAT expr [ TRUE STRING STAR RIGHTPAR PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL CONCAT COMMA AND ]
simple_expr -> LEFTPAR expr . RIGHTPAR [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
simple_expr -> LEFTPAR expr . COMMA commalist RIGHTPAR [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
-- On TRUE shift to state 1
-- On STRING shift to state 2
-- On STAR shift to state 17
-- On RIGHTPAR shift to state 53
-- On PLUS shift to state 22
-- On OR shift to state 24
-- On NEQ shift to state 26
-- On MINUS shift to state 28
-- On LT shift to state 30
-- On LEFTPAR shift to state 5
-- On LEFTBRACE shift to state 6
-- On LE shift to state 32
-- On INTEGER shift to state 8
-- On IDENT shift to state 10
-- On GT shift to state 34
-- On GE shift to state 36
-- On FALSE shift to state 14
-- On EQUAL shift to state 38
-- On CONCAT shift to state 19
-- On COMMA shift to state 54
-- On AND shift to state 40
-- On simple_expr shift to state 21

State 53:
simple_expr -> LEFTPAR expr RIGHTPAR . [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
-- On TRUE reduce production simple_expr -> LEFTPAR expr RIGHTPAR 
-- On THEN reduce production simple_expr -> LEFTPAR expr RIGHTPAR 
-- On STRING reduce production simple_expr -> LEFTPAR expr RIGHTPAR 
-- On STAR reduce production simple_expr -> LEFTPAR expr RIGHTPAR 
-- On SEMICOLON reduce production simple_expr -> LEFTPAR expr RIGHTPAR 
-- On RIGHTPAR reduce production simple_expr -> LEFTPAR expr RIGHTPAR 
-- On RIGHTBRACE reduce production simple_expr -> LEFTPAR expr RIGHTPAR 
-- On PLUS reduce production simple_expr -> LEFTPAR expr RIGHTPAR 
-- On OR reduce production simple_expr -> LEFTPAR expr RIGHTPAR 
-- On NEQ reduce production simple_expr -> LEFTPAR expr RIGHTPAR 
-- On MINUS reduce production simple_expr -> LEFTPAR expr RIGHTPAR 
-- On LT reduce production simple_expr -> LEFTPAR expr RIGHTPAR 
-- On LEFTPAR reduce production simple_expr -> LEFTPAR expr RIGHTPAR 
-- On LEFTBRACE reduce production simple_expr -> LEFTPAR expr RIGHTPAR 
-- On LE reduce production simple_expr -> LEFTPAR expr RIGHTPAR 
-- On INTEGER reduce production simple_expr -> LEFTPAR expr RIGHTPAR 
-- On IDENT reduce production simple_expr -> LEFTPAR expr RIGHTPAR 
-- On GT reduce production simple_expr -> LEFTPAR expr RIGHTPAR 
-- On GE reduce production simple_expr -> LEFTPAR expr RIGHTPAR 
-- On FALSE reduce production simple_expr -> LEFTPAR expr RIGHTPAR 
-- On EQUAL reduce production simple_expr -> LEFTPAR expr RIGHTPAR 
-- On ELSE reduce production simple_expr -> LEFTPAR expr RIGHTPAR 
-- On CONCAT reduce production simple_expr -> LEFTPAR expr RIGHTPAR 
-- On COMMA reduce production simple_expr -> LEFTPAR expr RIGHTPAR 
-- On AND reduce production simple_expr -> LEFTPAR expr RIGHTPAR 

State 54:
simple_expr -> LEFTPAR expr COMMA . commalist RIGHTPAR [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
-- On TRUE shift to state 1
-- On STRING shift to state 2
-- On NOT shift to state 3
-- On MINUS shift to state 4
-- On LEFTPAR shift to state 5
-- On LEFTBRACE shift to state 6
-- On INTEGER shift to state 8
-- On IF shift to state 9
-- On IDENT shift to state 10
-- On FUN shift to state 11
-- On FALSE shift to state 14
-- On simple_expr shift to state 15
-- On expr shift to state 55
-- On commalist shift to state 58

State 55:
commalist -> expr . [ RIGHTPAR ]
commalist -> expr . COMMA commalist [ RIGHTPAR ]
expr -> expr . simple_expr [ TRUE STRING STAR RIGHTPAR PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL CONCAT COMMA AND ]
expr -> expr . PLUS expr [ TRUE STRING STAR RIGHTPAR PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL CONCAT COMMA AND ]
expr -> expr . MINUS expr [ TRUE STRING STAR RIGHTPAR PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL CONCAT COMMA AND ]
expr -> expr . STAR expr [ TRUE STRING STAR RIGHTPAR PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL CONCAT COMMA AND ]
expr -> expr . EQUAL expr [ TRUE STRING STAR RIGHTPAR PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL CONCAT COMMA AND ]
expr -> expr . NEQ expr [ TRUE STRING STAR RIGHTPAR PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL CONCAT COMMA AND ]
expr -> expr . GE expr [ TRUE STRING STAR RIGHTPAR PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL CONCAT COMMA AND ]
expr -> expr . GT expr [ TRUE STRING STAR RIGHTPAR PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL CONCAT COMMA AND ]
expr -> expr . LE expr [ TRUE STRING STAR RIGHTPAR PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL CONCAT COMMA AND ]
expr -> expr . LT expr [ TRUE STRING STAR RIGHTPAR PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL CONCAT COMMA AND ]
expr -> expr . AND expr [ TRUE STRING STAR RIGHTPAR PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL CONCAT COMMA AND ]
expr -> expr . OR expr [ TRUE STRING STAR RIGHTPAR PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL CONCAT COMMA AND ]
expr -> expr . CONCAT expr [ TRUE STRING STAR RIGHTPAR PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL CONCAT COMMA AND ]
-- On TRUE shift to state 1
-- On STRING shift to state 2
-- On STAR shift to state 17
-- On PLUS shift to state 22
-- On OR shift to state 24
-- On NEQ shift to state 26
-- On MINUS shift to state 28
-- On LT shift to state 30
-- On LEFTPAR shift to state 5
-- On LEFTBRACE shift to state 6
-- On LE shift to state 32
-- On INTEGER shift to state 8
-- On IDENT shift to state 10
-- On GT shift to state 34
-- On GE shift to state 36
-- On FALSE shift to state 14
-- On EQUAL shift to state 38
-- On CONCAT shift to state 19
-- On COMMA shift to state 56
-- On AND shift to state 40
-- On simple_expr shift to state 21
-- On RIGHTPAR reduce production commalist -> expr 

State 56:
commalist -> expr COMMA . commalist [ RIGHTPAR ]
-- On TRUE shift to state 1
-- On STRING shift to state 2
-- On NOT shift to state 3
-- On MINUS shift to state 4
-- On LEFTPAR shift to state 5
-- On LEFTBRACE shift to state 6
-- On INTEGER shift to state 8
-- On IF shift to state 9
-- On IDENT shift to state 10
-- On FUN shift to state 11
-- On FALSE shift to state 14
-- On simple_expr shift to state 15
-- On expr shift to state 55
-- On commalist shift to state 57

State 57:
commalist -> expr COMMA commalist . [ RIGHTPAR ]
-- On RIGHTPAR reduce production commalist -> expr COMMA commalist 

State 58:
simple_expr -> LEFTPAR expr COMMA commalist . RIGHTPAR [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
-- On RIGHTPAR shift to state 59

State 59:
simple_expr -> LEFTPAR expr COMMA commalist RIGHTPAR . [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
-- On TRUE reduce production simple_expr -> LEFTPAR expr COMMA commalist RIGHTPAR 
-- On THEN reduce production simple_expr -> LEFTPAR expr COMMA commalist RIGHTPAR 
-- On STRING reduce production simple_expr -> LEFTPAR expr COMMA commalist RIGHTPAR 
-- On STAR reduce production simple_expr -> LEFTPAR expr COMMA commalist RIGHTPAR 
-- On SEMICOLON reduce production simple_expr -> LEFTPAR expr COMMA commalist RIGHTPAR 
-- On RIGHTPAR reduce production simple_expr -> LEFTPAR expr COMMA commalist RIGHTPAR 
-- On RIGHTBRACE reduce production simple_expr -> LEFTPAR expr COMMA commalist RIGHTPAR 
-- On PLUS reduce production simple_expr -> LEFTPAR expr COMMA commalist RIGHTPAR 
-- On OR reduce production simple_expr -> LEFTPAR expr COMMA commalist RIGHTPAR 
-- On NEQ reduce production simple_expr -> LEFTPAR expr COMMA commalist RIGHTPAR 
-- On MINUS reduce production simple_expr -> LEFTPAR expr COMMA commalist RIGHTPAR 
-- On LT reduce production simple_expr -> LEFTPAR expr COMMA commalist RIGHTPAR 
-- On LEFTPAR reduce production simple_expr -> LEFTPAR expr COMMA commalist RIGHTPAR 
-- On LEFTBRACE reduce production simple_expr -> LEFTPAR expr COMMA commalist RIGHTPAR 
-- On LE reduce production simple_expr -> LEFTPAR expr COMMA commalist RIGHTPAR 
-- On INTEGER reduce production simple_expr -> LEFTPAR expr COMMA commalist RIGHTPAR 
-- On IDENT reduce production simple_expr -> LEFTPAR expr COMMA commalist RIGHTPAR 
-- On GT reduce production simple_expr -> LEFTPAR expr COMMA commalist RIGHTPAR 
-- On GE reduce production simple_expr -> LEFTPAR expr COMMA commalist RIGHTPAR 
-- On FALSE reduce production simple_expr -> LEFTPAR expr COMMA commalist RIGHTPAR 
-- On EQUAL reduce production simple_expr -> LEFTPAR expr COMMA commalist RIGHTPAR 
-- On ELSE reduce production simple_expr -> LEFTPAR expr COMMA commalist RIGHTPAR 
-- On CONCAT reduce production simple_expr -> LEFTPAR expr COMMA commalist RIGHTPAR 
-- On COMMA reduce production simple_expr -> LEFTPAR expr COMMA commalist RIGHTPAR 
-- On AND reduce production simple_expr -> LEFTPAR expr COMMA commalist RIGHTPAR 

State 60:
expr -> expr . simple_expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr . PLUS expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr . MINUS expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> MINUS expr . [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr . STAR expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr . EQUAL expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr . NEQ expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr . GE expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr . GT expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr . LE expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr . LT expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr . AND expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr . OR expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr . CONCAT expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
-- On TRUE shift to state 1
-- On STRING shift to state 2
-- On LEFTPAR shift to state 5
-- On LEFTBRACE shift to state 6
-- On INTEGER shift to state 8
-- On IDENT shift to state 10
-- On FALSE shift to state 14
-- On CONCAT shift to state 19
-- On simple_expr shift to state 21
-- On THEN reduce production expr -> MINUS expr 
-- On STAR reduce production expr -> MINUS expr 
-- On SEMICOLON reduce production expr -> MINUS expr 
-- On RIGHTPAR reduce production expr -> MINUS expr 
-- On RIGHTBRACE reduce production expr -> MINUS expr 
-- On PLUS reduce production expr -> MINUS expr 
-- On OR reduce production expr -> MINUS expr 
-- On NEQ reduce production expr -> MINUS expr 
-- On MINUS reduce production expr -> MINUS expr 
-- On LT reduce production expr -> MINUS expr 
-- On LE reduce production expr -> MINUS expr 
-- On GT reduce production expr -> MINUS expr 
-- On GE reduce production expr -> MINUS expr 
-- On EQUAL reduce production expr -> MINUS expr 
-- On ELSE reduce production expr -> MINUS expr 
-- On COMMA reduce production expr -> MINUS expr 
-- On AND reduce production expr -> MINUS expr 

State 61:
expr -> expr . simple_expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr . PLUS expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr . MINUS expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr . STAR expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr . EQUAL expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr . NEQ expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr . GE expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr . GT expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr . LE expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr . LT expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr . AND expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr . OR expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> expr . CONCAT expr [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
expr -> NOT expr . [ TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND ]
-- On TRUE shift to state 1
-- On STRING shift to state 2
-- On STAR shift to state 17
-- On PLUS shift to state 22
-- On NEQ shift to state 26
-- On MINUS shift to state 28
-- On LT shift to state 30
-- On LEFTPAR shift to state 5
-- On LEFTBRACE shift to state 6
-- On LE shift to state 32
-- On INTEGER shift to state 8
-- On IDENT shift to state 10
-- On GT shift to state 34
-- On GE shift to state 36
-- On FALSE shift to state 14
-- On EQUAL shift to state 38
-- On CONCAT shift to state 19
-- On simple_expr shift to state 21
-- On THEN reduce production expr -> NOT expr 
-- On SEMICOLON reduce production expr -> NOT expr 
-- On RIGHTPAR reduce production expr -> NOT expr 
-- On RIGHTBRACE reduce production expr -> NOT expr 
-- On OR reduce production expr -> NOT expr 
-- On ELSE reduce production expr -> NOT expr 
-- On COMMA reduce production expr -> NOT expr 
-- On AND reduce production expr -> NOT expr 

State 62:
command_aux -> LET . IDENT EQUAL expr [ SEMICOLON ]
command_aux -> LET . LEFTPAR identlist RIGHTPAR EQUAL expr [ SEMICOLON ]
command_aux -> LET . FUN IDENT args EQUAL expr [ SEMICOLON ]
-- On LEFTPAR shift to state 63
-- On IDENT shift to state 71
-- On FUN shift to state 74

State 63:
command_aux -> LET LEFTPAR . identlist RIGHTPAR EQUAL expr [ SEMICOLON ]
-- On IDENT shift to state 64
-- On identlist shift to state 67

State 64:
identlist -> IDENT . [ RIGHTPAR ]
identlist -> IDENT . COMMA identlist [ RIGHTPAR ]
-- On COMMA shift to state 65
-- On RIGHTPAR reduce production identlist -> IDENT 

State 65:
identlist -> IDENT COMMA . identlist [ RIGHTPAR ]
-- On IDENT shift to state 64
-- On identlist shift to state 66

State 66:
identlist -> IDENT COMMA identlist . [ RIGHTPAR ]
-- On RIGHTPAR reduce production identlist -> IDENT COMMA identlist 

State 67:
command_aux -> LET LEFTPAR identlist . RIGHTPAR EQUAL expr [ SEMICOLON ]
-- On RIGHTPAR shift to state 68

State 68:
command_aux -> LET LEFTPAR identlist RIGHTPAR . EQUAL expr [ SEMICOLON ]
-- On EQUAL shift to state 69

State 69:
command_aux -> LET LEFTPAR identlist RIGHTPAR EQUAL . expr [ SEMICOLON ]
-- On TRUE shift to state 1
-- On STRING shift to state 2
-- On NOT shift to state 3
-- On MINUS shift to state 4
-- On LEFTPAR shift to state 5
-- On LEFTBRACE shift to state 6
-- On INTEGER shift to state 8
-- On IF shift to state 9
-- On IDENT shift to state 10
-- On FUN shift to state 11
-- On FALSE shift to state 14
-- On simple_expr shift to state 15
-- On expr shift to state 70

State 70:
command_aux -> LET LEFTPAR identlist RIGHTPAR EQUAL expr . [ SEMICOLON ]
expr -> expr . simple_expr [ TRUE STRING STAR SEMICOLON PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL CONCAT AND ]
expr -> expr . PLUS expr [ TRUE STRING STAR SEMICOLON PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL CONCAT AND ]
expr -> expr . MINUS expr [ TRUE STRING STAR SEMICOLON PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL CONCAT AND ]
expr -> expr . STAR expr [ TRUE STRING STAR SEMICOLON PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL CONCAT AND ]
expr -> expr . EQUAL expr [ TRUE STRING STAR SEMICOLON PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL CONCAT AND ]
expr -> expr . NEQ expr [ TRUE STRING STAR SEMICOLON PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL CONCAT AND ]
expr -> expr . GE expr [ TRUE STRING STAR SEMICOLON PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL CONCAT AND ]
expr -> expr . GT expr [ TRUE STRING STAR SEMICOLON PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL CONCAT AND ]
expr -> expr . LE expr [ TRUE STRING STAR SEMICOLON PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL CONCAT AND ]
expr -> expr . LT expr [ TRUE STRING STAR SEMICOLON PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL CONCAT AND ]
expr -> expr . AND expr [ TRUE STRING STAR SEMICOLON PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL CONCAT AND ]
expr -> expr . OR expr [ TRUE STRING STAR SEMICOLON PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL CONCAT AND ]
expr -> expr . CONCAT expr [ TRUE STRING STAR SEMICOLON PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL CONCAT AND ]
-- On TRUE shift to state 1
-- On STRING shift to state 2
-- On STAR shift to state 17
-- On PLUS shift to state 22
-- On OR shift to state 24
-- On NEQ shift to state 26
-- On MINUS shift to state 28
-- On LT shift to state 30
-- On LEFTPAR shift to state 5
-- On LEFTBRACE shift to state 6
-- On LE shift to state 32
-- On INTEGER shift to state 8
-- On IDENT shift to state 10
-- On GT shift to state 34
-- On GE shift to state 36
-- On FALSE shift to state 14
-- On EQUAL shift to state 38
-- On CONCAT shift to state 19
-- On AND shift to state 40
-- On simple_expr shift to state 21
-- On SEMICOLON reduce production command_aux -> LET LEFTPAR identlist RIGHTPAR EQUAL expr 

State 71:
command_aux -> LET IDENT . EQUAL expr [ SEMICOLON ]
-- On EQUAL shift to state 72

State 72:
command_aux -> LET IDENT EQUAL . expr [ SEMICOLON ]
-- On TRUE shift to state 1
-- On STRING shift to state 2
-- On NOT shift to state 3
-- On MINUS shift to state 4
-- On LEFTPAR shift to state 5
-- On LEFTBRACE shift to state 6
-- On INTEGER shift to state 8
-- On IF shift to state 9
-- On IDENT shift to state 10
-- On FUN shift to state 11
-- On FALSE shift to state 14
-- On simple_expr shift to state 15
-- On expr shift to state 73

State 73:
command_aux -> LET IDENT EQUAL expr . [ SEMICOLON ]
expr -> expr . simple_expr [ TRUE STRING STAR SEMICOLON PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL CONCAT AND ]
expr -> expr . PLUS expr [ TRUE STRING STAR SEMICOLON PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL CONCAT AND ]
expr -> expr . MINUS expr [ TRUE STRING STAR SEMICOLON PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL CONCAT AND ]
expr -> expr . STAR expr [ TRUE STRING STAR SEMICOLON PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL CONCAT AND ]
expr -> expr . EQUAL expr [ TRUE STRING STAR SEMICOLON PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL CONCAT AND ]
expr -> expr . NEQ expr [ TRUE STRING STAR SEMICOLON PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL CONCAT AND ]
expr -> expr . GE expr [ TRUE STRING STAR SEMICOLON PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL CONCAT AND ]
expr -> expr . GT expr [ TRUE STRING STAR SEMICOLON PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL CONCAT AND ]
expr -> expr . LE expr [ TRUE STRING STAR SEMICOLON PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL CONCAT AND ]
expr -> expr . LT expr [ TRUE STRING STAR SEMICOLON PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL CONCAT AND ]
expr -> expr . AND expr [ TRUE STRING STAR SEMICOLON PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL CONCAT AND ]
expr -> expr . OR expr [ TRUE STRING STAR SEMICOLON PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL CONCAT AND ]
expr -> expr . CONCAT expr [ TRUE STRING STAR SEMICOLON PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL CONCAT AND ]
-- On TRUE shift to state 1
-- On STRING shift to state 2
-- On STAR shift to state 17
-- On PLUS shift to state 22
-- On OR shift to state 24
-- On NEQ shift to state 26
-- On MINUS shift to state 28
-- On LT shift to state 30
-- On LEFTPAR shift to state 5
-- On LEFTBRACE shift to state 6
-- On LE shift to state 32
-- On INTEGER shift to state 8
-- On IDENT shift to state 10
-- On GT shift to state 34
-- On GE shift to state 36
-- On FALSE shift to state 14
-- On EQUAL shift to state 38
-- On CONCAT shift to state 19
-- On AND shift to state 40
-- On simple_expr shift to state 21
-- On SEMICOLON reduce production command_aux -> LET IDENT EQUAL expr 

State 74:
command_aux -> LET FUN . IDENT args EQUAL expr [ SEMICOLON ]
-- On IDENT shift to state 75

State 75:
command_aux -> LET FUN IDENT . args EQUAL expr [ SEMICOLON ]
-- On IDENT shift to state 76
-- On args shift to state 78

State 76:
args -> IDENT . [ EQUAL ]
args -> IDENT . args [ EQUAL ]
-- On IDENT shift to state 76
-- On args shift to state 77
-- On EQUAL reduce production args -> IDENT 

State 77:
args -> IDENT args . [ EQUAL ]
-- On EQUAL reduce production args -> IDENT args 

State 78:
command_aux -> LET FUN IDENT args . EQUAL expr [ SEMICOLON ]
-- On EQUAL shift to state 79

State 79:
command_aux -> LET FUN IDENT args EQUAL . expr [ SEMICOLON ]
-- On TRUE shift to state 1
-- On STRING shift to state 2
-- On NOT shift to state 3
-- On MINUS shift to state 4
-- On LEFTPAR shift to state 5
-- On LEFTBRACE shift to state 6
-- On INTEGER shift to state 8
-- On IF shift to state 9
-- On IDENT shift to state 10
-- On FUN shift to state 11
-- On FALSE shift to state 14
-- On simple_expr shift to state 15
-- On expr shift to state 80

State 80:
command_aux -> LET FUN IDENT args EQUAL expr . [ SEMICOLON ]
expr -> expr . simple_expr [ TRUE STRING STAR SEMICOLON PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL CONCAT AND ]
expr -> expr . PLUS expr [ TRUE STRING STAR SEMICOLON PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL CONCAT AND ]
expr -> expr . MINUS expr [ TRUE STRING STAR SEMICOLON PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL CONCAT AND ]
expr -> expr . STAR expr [ TRUE STRING STAR SEMICOLON PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL CONCAT AND ]
expr -> expr . EQUAL expr [ TRUE STRING STAR SEMICOLON PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL CONCAT AND ]
expr -> expr . NEQ expr [ TRUE STRING STAR SEMICOLON PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL CONCAT AND ]
expr -> expr . GE expr [ TRUE STRING STAR SEMICOLON PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL CONCAT AND ]
expr -> expr . GT expr [ TRUE STRING STAR SEMICOLON PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL CONCAT AND ]
expr -> expr . LE expr [ TRUE STRING STAR SEMICOLON PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL CONCAT AND ]
expr -> expr . LT expr [ TRUE STRING STAR SEMICOLON PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL CONCAT AND ]
expr -> expr . AND expr [ TRUE STRING STAR SEMICOLON PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL CONCAT AND ]
expr -> expr . OR expr [ TRUE STRING STAR SEMICOLON PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL CONCAT AND ]
expr -> expr . CONCAT expr [ TRUE STRING STAR SEMICOLON PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL CONCAT AND ]
-- On TRUE shift to state 1
-- On STRING shift to state 2
-- On STAR shift to state 17
-- On PLUS shift to state 22
-- On OR shift to state 24
-- On NEQ shift to state 26
-- On MINUS shift to state 28
-- On LT shift to state 30
-- On LEFTPAR shift to state 5
-- On LEFTBRACE shift to state 6
-- On LE shift to state 32
-- On INTEGER shift to state 8
-- On IDENT shift to state 10
-- On GT shift to state 34
-- On GE shift to state 36
-- On FALSE shift to state 14
-- On EQUAL shift to state 38
-- On CONCAT shift to state 19
-- On AND shift to state 40
-- On simple_expr shift to state 21
-- On SEMICOLON reduce production command_aux -> LET FUN IDENT args EQUAL expr 

State 81:
command -> EOF . [ # ]
-- On # reduce production command -> EOF 

State 82:
command_aux -> DIRECTIVE . IDENT [ SEMICOLON ]
command_aux -> DIRECTIVE . IDENT STRING [ SEMICOLON ]
command_aux -> DIRECTIVE . IDENT IDENT [ SEMICOLON ]
command_aux -> DIRECTIVE . IDENT INTEGER [ SEMICOLON ]
-- On IDENT shift to state 83

State 83:
command_aux -> DIRECTIVE IDENT . [ SEMICOLON ]
command_aux -> DIRECTIVE IDENT . STRING [ SEMICOLON ]
command_aux -> DIRECTIVE IDENT . IDENT [ SEMICOLON ]
command_aux -> DIRECTIVE IDENT . INTEGER [ SEMICOLON ]
-- On STRING shift to state 84
-- On INTEGER shift to state 85
-- On IDENT shift to state 86
-- On SEMICOLON reduce production command_aux -> DIRECTIVE IDENT 

State 84:
command_aux -> DIRECTIVE IDENT STRING . [ SEMICOLON ]
-- On SEMICOLON reduce production command_aux -> DIRECTIVE IDENT STRING 

State 85:
command_aux -> DIRECTIVE IDENT INTEGER . [ SEMICOLON ]
-- On SEMICOLON reduce production command_aux -> DIRECTIVE IDENT INTEGER 

State 86:
command_aux -> DIRECTIVE IDENT IDENT . [ SEMICOLON ]
-- On SEMICOLON reduce production command_aux -> DIRECTIVE IDENT IDENT 

State 87:
command_aux -> expr . [ SEMICOLON ]
expr -> expr . simple_expr [ TRUE STRING STAR SEMICOLON PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL CONCAT AND ]
expr -> expr . PLUS expr [ TRUE STRING STAR SEMICOLON PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL CONCAT AND ]
expr -> expr . MINUS expr [ TRUE STRING STAR SEMICOLON PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL CONCAT AND ]
expr -> expr . STAR expr [ TRUE STRING STAR SEMICOLON PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL CONCAT AND ]
expr -> expr . EQUAL expr [ TRUE STRING STAR SEMICOLON PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL CONCAT AND ]
expr -> expr . NEQ expr [ TRUE STRING STAR SEMICOLON PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL CONCAT AND ]
expr -> expr . GE expr [ TRUE STRING STAR SEMICOLON PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL CONCAT AND ]
expr -> expr . GT expr [ TRUE STRING STAR SEMICOLON PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL CONCAT AND ]
expr -> expr . LE expr [ TRUE STRING STAR SEMICOLON PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL CONCAT AND ]
expr -> expr . LT expr [ TRUE STRING STAR SEMICOLON PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL CONCAT AND ]
expr -> expr . AND expr [ TRUE STRING STAR SEMICOLON PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL CONCAT AND ]
expr -> expr . OR expr [ TRUE STRING STAR SEMICOLON PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL CONCAT AND ]
expr -> expr . CONCAT expr [ TRUE STRING STAR SEMICOLON PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL CONCAT AND ]
-- On TRUE shift to state 1
-- On STRING shift to state 2
-- On STAR shift to state 17
-- On PLUS shift to state 22
-- On OR shift to state 24
-- On NEQ shift to state 26
-- On MINUS shift to state 28
-- On LT shift to state 30
-- On LEFTPAR shift to state 5
-- On LEFTBRACE shift to state 6
-- On LE shift to state 32
-- On INTEGER shift to state 8
-- On IDENT shift to state 10
-- On GT shift to state 34
-- On GE shift to state 36
-- On FALSE shift to state 14
-- On EQUAL shift to state 38
-- On CONCAT shift to state 19
-- On AND shift to state 40
-- On simple_expr shift to state 21
-- On SEMICOLON reduce production command_aux -> expr 

State 88:
command -> command_aux . SEMICOLON [ # ]
-- On SEMICOLON shift to state 89

State 89:
command -> command_aux SEMICOLON . [ # ]
-- On # reduce production command -> command_aux SEMICOLON 

State 90:
command' -> command . [ # ]
-- On # accept command

