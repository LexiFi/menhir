Grammar has 8 nonterminal symbols, among which 1 start symbols.
Grammar has 32 terminal symbols.
Grammar has 46 productions.
nullable(simple_expr) = false
nullable(semicolonlist) = false
nullable(identlist) = false
nullable(expr) = false
nullable(command_aux) = false
nullable(command) = false
nullable(commalist) = false
nullable(args) = false
first(simple_expr) = TRUE STRING LEFTPAR LEFTBRACE INTEGER IDENT FALSE
first(semicolonlist) = TRUE STRING NOT MINUS LEFTPAR LEFTBRACE INTEGER IF IDENT FUN FALSE
first(identlist) = IDENT
first(expr) = TRUE STRING NOT MINUS LEFTPAR LEFTBRACE INTEGER IF IDENT FUN FALSE
first(command_aux) = TRUE STRING NOT MINUS LET LEFTPAR LEFTBRACE INTEGER IF IDENT FUN FALSE DIRECTIVE
first(command) = TRUE STRING NOT MINUS LET LEFTPAR LEFTBRACE INTEGER IF IDENT FUN FALSE EOF DIRECTIVE
first(commalist) = TRUE STRING NOT MINUS LEFTPAR LEFTBRACE INTEGER IF IDENT FUN FALSE
first(args) = IDENT
minimal(simple_expr) = (* 1 *) IDENT
minimal(semicolonlist) = (* 1 *) IDENT
minimal(identlist) = (* 1 *) IDENT
minimal(expr) = (* 1 *) IDENT
minimal(command_aux) = (* 1 *) IDENT
minimal(command) = (* 1 *) EOF
minimal(commalist) = (* 1 *) IDENT
minimal(args) = (* 1 *) IDENT
maximal(simple_expr) = infinity
maximal(semicolonlist) = infinity
maximal(identlist) = infinity
maximal(expr) = infinity
maximal(command_aux) = infinity
maximal(command) = infinity
maximal(commalist) = infinity
maximal(args) = infinity
follow(simple_expr) = TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND
follow(semicolonlist) = RIGHTBRACE
follow(identlist) = RIGHTPAR
follow(expr) = TRUE THEN STRING STAR SEMICOLON RIGHTPAR RIGHTBRACE PLUS OR NEQ MINUS LT LEFTPAR LEFTBRACE LE INTEGER IDENT GT GE FALSE EQUAL ELSE CONCAT COMMA AND
follow(command_aux) = SEMICOLON
follow(command) = #
follow(commalist) = RIGHTPAR
follow(args) = EQUAL
Built an LR(0) automaton with 91 states.
The grammar is not SLR(1) -- 16 states have a conflict.
The construction mode is pager.
Built an LR(1) automaton with 91 states.
304 shift/reduce conflicts were silently solved.
File "cime-toplevel.mly", line 45, characters 0-5:
Warning: the precedence level assigned to APPLY is never useful.
File "cime-toplevel.mly", line 44, characters 0-9:
Warning: the precedence level assigned to FUN is never useful.
File "cime-toplevel.mly", line 79, characters 25-30:
Warning: this %prec declaration is never useful.
21 out of 91 states have a default reduction.
56 out of 91 states are represented.
0 out of 43 symbols keep track of their start position.
0 out of 43 symbols keep track of their end position.
17 out of 47 productions exploit shiftreduce optimization.
0 out of 91 states can peek at an error.
242 functions before inlining, 37 functions after inlining.
