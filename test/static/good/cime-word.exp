Grammar has 10 nonterminal symbols, among which 3 start symbols.
Grammar has 12 terminal symbols.
Grammar has 21 productions.
nullable(word_eof) = false
nullable(word) = true
nullable(rule_set_eof) = false
nullable(rule_set) = true
nullable(rule) = false
nullable(precedence_eof) = false
nullable(precedence) = true
nullable(ordered_list) = false
nullable(factor) = false
nullable(expo) = false
first(word_eof) = LPAR IDENT EOF
first(word) = LPAR IDENT
first(rule_set_eof) = LPAR IDENT EOF ARROW
first(rule_set) = LPAR IDENT ARROW
first(rule) = LPAR IDENT ARROW
first(precedence_eof) = IDENT EOF
first(precedence) = IDENT
first(ordered_list) = IDENT
first(factor) = LPAR IDENT
first(expo) = INT IDENT
minimal(word_eof) = (* 1 *) EOF
minimal(word) = (* 0 *)
minimal(rule_set_eof) = (* 1 *) EOF
minimal(rule_set) = (* 0 *)
minimal(rule) = (* 1 *) ARROW
minimal(precedence_eof) = (* 1 *) EOF
minimal(precedence) = (* 0 *)
minimal(ordered_list) = (* 1 *) IDENT
minimal(factor) = (* 1 *) IDENT
minimal(expo) = (* 1 *) INT
follow(word_eof) = #
follow(word) = SEMICOLON RPAR EOF ARROW
follow(rule_set_eof) = #
follow(rule_set) = EOF
follow(rule) = SEMICOLON EOF
follow(precedence_eof) = #
follow(precedence) = EOF
follow(ordered_list) = EOF COMMA
follow(factor) = SEMICOLON RPAR POWER LPAR IDENT EOF ARROW
follow(expo) = SEMICOLON RPAR POWER LPAR IDENT EOF ARROW
Built an LR(0) automaton with 38 states.
The grammar is not SLR(1) -- 2 states have a conflict.
The construction mode is pager.
Built an LR(1) automaton with 38 states.
18 out of 38 states have a default reduction.
11 out of 38 states are represented.
0 out of 27 symbols keep track of their start position.
0 out of 27 symbols keep track of their end position.
11 out of 24 productions exploit shiftreduce optimization.
0 out of 38 states can peek at an error.
117 functions before inlining, 18 functions after inlining.
